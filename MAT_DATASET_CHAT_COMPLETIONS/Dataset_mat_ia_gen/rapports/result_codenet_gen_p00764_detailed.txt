================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
import sys
from heapq import heappush, heappop

# Fonction pour calculer la distance euclidienne entre deux points
def dist(p1, p2):
    return math.hypot(p1[0] - p2[0], p1[1] - p2[1])

# Fonction pour trouver les deux points d'intersection entre deux cercles
# Ces points correspondent aux intersections de C_i et C_{i+1}
def circle_intersections(c1, c2):
    x1, y1, r1 = c1
    x2, y2, r2 = c2
    d = dist((x1,y1),(x2,y2))
    # deux cercles s'intersectent en deux points distincts, garanties par l'énoncé
    a = (r1**2 - r2**2 + d**2) / (2*d)
    h = math.sqrt(r1**2 - a**2)
    # point P, projection de l'intersection sur la droite entre centres
    x3 = x1 + a*(x2 - x1)/d
    y3 = y1 + a*(y2 - y1)/d
    # les deux points d'intersection
    rx = -(y2 - y1) * (h/d)
    ry = -(x2 - x1) * (h/d)
    p_int1 = (x3 + rx, y3 - ry)
    p_int2 = (x3 - rx, y3 + ry)
    return p_int1, p_int2

# Fonction pour vérifier si un segment (p1,p2) est contenu dans au moins un des cercles de la chaîne
# On vérifie par échantillonnage si les points sont dans au moins un cercle
# Ici, on sample uniformément entre p1 et p2 pour une approximation suffisante
def segment_in_chain(p1, p2, circles):
    samples = 20  # nombre de points à tester sur le segment
    for i in range(samples + 1):
        t = i / samples
        x = p1[0] + t*(p2[0] - p1[0])
        y = p1[1] + t*(p2[1] - p1[1])
        # vérifier si (x,y) est dans au moins un cercle
        if not any(dist((x,y), (cx,cy)) <= r + 1e-10 for (cx,cy,r) in circles):
            return False
    return True

# Fonction principale traitant un dataset (liste de cercles)
def solve(dataset):
    n = len(dataset)
    circles = dataset

    # On va construire un graphe représentatif :
    # chaque cercle a 2 points d'intersection avec le cercle suivant (sauf le dernier)
    # On ajoute aussi les centres des premiers et derniers cercles (points de départ et d'arrivée)
    # Les sommets du graphe: 2*(n-1) points d'intersection + 2 centres
    # On connecte les sommets par arcs si le segment entre eux est contenu dans la chaîne

    # Stockage des points d'intersections entre cercles i et i+1
    inter_points = [circle_intersections(circles[i], circles[i+1]) for i in range(n-1)]

    # On numérote les sommets :
    # vertex 0 : centre du cercle 0 (départ)
    # vertex 1: centre du cercle n-1 (arrivée)
    # vertices 2k, 2k+1 (k=0..n-2): les deux points d'intersection entre cercle k et k+1
    vertices = []
    vertices.append((circles[0][0], circles[0][1]))  # centre premier cercle, id = 0
    vertices.append((circles[-1][0], circles[-1][1]))# centre dernier cercle, id = 1
    for p1,p2 in inter_points:
        vertices.append(p1)
        vertices.append(p2)

    # On construit un graphe sous forme de listes d'adjacence avec poids (distances)
    # Les sommets sont ordonnés: [centre_0, centre_n-1, inter_0_p1, inter_0_p2, inter_1_p1, inter_1_p2,... ]

    E = len(vertices)
    graph = [[] for _ in range(E)]

    # Ajouter arêtes entre centres et points d'intersections de cercle 0
    # Le centre 0 est le vertex 0, les points d'intersection entre C0 et C1 sont vertices 2 et 3
    for v_id in [2,3]:
        if segment_in_chain(vertices[0], vertices[v_id], circles):
            d = dist(vertices[0], vertices[v_id])
            graph[0].append((v_id, d))
            graph[v_id].append((0, d))

    # Ajouter arêtes entre centres et points d'intersections de cercle n-1
    # Le centre n-1 est le vertex 1, les points d'intersection entre C_{n-2} et C_{n-1} sont vertices 2(n-2) et 2(n-2)+1
    last_i1 = 2*(n-2)
    for v_id in [last_i1, last_i1+1]:
        if segment_in_chain(vertices[1], vertices[v_id], circles):
            d = dist(vertices[1], vertices[v_id])
            graph[1].append((v_id, d))
            graph[v_id].append((1, d))

    # Ajouter arêtes entre points d'intersections consécutifs pour chaque i, i+1
    # Pour chaque i de 0 à n-2, on a points 2i, 2i+1
    # points d'un cercle apparaissent par paires; construire les connections possibles :
    # - la paire de points d'un même cercle d'intersections (par exemple, points d'intersection entre i et i+1)
    # - les connexions entre les points d'intersection d'une chaîne voisine (i) et (i+1)

    # Arêtes entre les 2 points d'intersection du même cercle (par exemple 2i et 2i+1)
    # Ils sont accessibles par une arc puisque ils appartiennent au même cercle ci
    for i in range(n-1):
        a = 2*i
        b = 2*i + 1
        # vérifier que segment est dans la chaîne (en pratique, les 2 points sont sur la frontière des 2 cercles adjacents,
        # donc la segment est dans ces cercles et la chaîne)
        if segment_in_chain(vertices[a], vertices[b], circles):
            d = dist(vertices[a], vertices[b])
            graph[a].append((b, d))
            graph[b].append((a, d))

    # Arêtes entre points d'intersection adjacents dans la chaîne, i.e. entre (2i,2i+1) et (2(i+1),2(i+1)+1)
    # Ces points se situent sur les intersections entre cercles i,i+1 et i+1,i+2
    # On tente toute combinaison entre les 2 points du ième couple et les 2 points du (i+1)ème couple
    for i in range(n-2):
        for u in [2*i, 2*i+1]:
            for v in [2*(i+1), 2*(i+1)+1]:
                # Le segment u-v doit être contenu dans la chaîne
                if segment_in_chain(vertices[u], vertices[v], circles):
                    d = dist(vertices[u], vertices[v])
                    graph[u].append((v,d))
                    graph[v].append((u,d))

    # Maintenant, trouver le plus court chemin entre vertex 0 (centre cercle 0) et vertex 1 (centre cercle n-1)
    # Utilisons Dijkstra
    def dijkstra(start, end):
        distances = [math.inf]*E
        distances[start] = 0.0
        heap = [(0.0, start)]
        while heap:
            cur_d, u = heappop(heap)
            if cur_d > distances[u]:
                continue
            if u == end:
                return cur_d
            for v, w in graph[u]:
                nd = cur_d + w
                if nd < distances[v]:
                    distances[v] = nd
                    heappush(heap, (nd,v))
        return distances[end]

    ans = dijkstra(0,1)
    return ans

# Lecture des données en entrée et résolution
def main():
    input = sys.stdin.read().strip().split()
    idx = 0
    while True:
        if idx >= len(input):
            break
        n = int(input[idx])
        idx += 1
        if n == 0:
            break
        dataset = []
        for _ in range(n):
            x = int(input[idx]); y = int(input[idx+1]); r = int(input[idx+2])
            idx += 3
            dataset.append((x,y,r))
        # Résoudre pour ce dataset
        ans = solve(dataset)
        print(f"{ans:.6f}")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0027468616608530283
    2. '<|end|>' → logprob: -6.627747058868408
    3. '```' → logprob: -7.877747058868408
    4. '\n' → logprob: -8.12774658203125
    5. '\' → logprob: -8.25274658203125
    6. 'import' → logprob: -8.75274658203125
    7. '<|end|>' → logprob: -9.75274658203125
    8. '.e' → logprob: -10.50274658203125
    9. '.pi' → logprob: -10.62774658203125
    10. '
' → logprob: -10.87774658203125

Token 4: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.4802471399307251
    2. ' sys' → logprob: -0.9802471399307251
    3. ' numpy' → logprob: -5.6052470207214355
    4. ' random' → logprob: -7.2302470207214355
    5. ' ' → logprob: -7.3552470207214355
    6. 'os' → logprob: -7.9802470207214355
    7. ' re' → logprob: -8.355247497558594
    8. 'sys' → logprob: -8.605247497558594
    9. ' statistics' → logprob: -9.105247497558594
    10. '_' → logprob: -9.605247497558594

Token 5: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8427494764328003
    2. '<|end|>' → logprob: -1.7177494764328003
    3. '.' → logprob: -2.09274959564209
    4. '

' → logprob: -2.34274959564209
    5. '\n' → logprob: -2.34274959564209
    6. 'import' → logprob: -3.59274959564209
    7. '```' → logprob: -4.09274959564209
    8. '\' → logprob: -4.59274959564209
    9. '<|end|>' → logprob: -4.84274959564209
    10. 'newline' → logprob: -5.46774959564209

Token 6: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8783736228942871
    2. '
' → logprob: -1.628373622894287
    3. 'import' → logprob: -2.253373622894287
    4. '.' → logprob: -2.253373622894287
    5. '```' → logprob: -2.628373622894287
    6. '<|end|>' → logprob: -3.128373622894287
    7. '\' → logprob: -3.378373622894287
    8. '

' → logprob: -4.253373622894287
    9. ',' → logprob: -5.628373622894287
    10. '<|end|>' → logprob: -6.003373622894287

Token 7: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.21229133009910583
    2. ' collections' → logprob: -1.8372913599014282
    3. ' math' → logprob: -4.337291240692139
    4. 'os' → logprob: -4.962291240692139
    5. 'collections' → logprob: -5.587291240692139
    6. ' typing' → logprob: -5.712291240692139
    7. ' pathlib' → logprob: -6.212291240692139
    8. ' datetime' → logprob: -6.712291240692139
    9. ' itertools' → logprob: -7.837291240692139
    10. ' ' → logprob: -8.337291717529297

Token 8: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.088346359931165e-07
    2. 'import' → logprob: -14.500000953674316
    3. 'queue' → logprob: -15.125000953674316
    4. ' import' → logprob: -16.5
    5. ' queue' → logprob: -16.875
    6. 'i' → logprob: -18.75
    7. 'u' → logprob: -19.125
    8. 'dict' → logprob: -19.375
    9. 'space' → logprob: -19.5
    10. 'ify' → logprob: -19.625

Token 9: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.01112198457121849
    2. 'import' → logprob: -4.51112174987793
    3. ' ' → logprob: -9.76112174987793
    4. '<|end|>' → logprob: -12.01112174987793
    5. '	import' → logprob: -12.38612174987793
    6. ' space' → logprob: -13.76112174987793
    7. ' impor' → logprob: -13.88612174987793
    8. ' im' → logprob: -14.13612174987793
    9. '_import' → logprob: -14.26112174987793
    10. '.' → logprob: -14.51112174987793

Token 10: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.5799522399902344
    2. 'he' → logprob: -0.8299522399902344
    3. 'heap' → logprob: -5.704952239990234
    4. ' n' → logprob: -7.704952239990234
    5. 'n' → logprob: -9.579952239990234
    6. 'nl' → logprob: -9.829952239990234
    7. ' heap' → logprob: -9.829952239990234
    8. 'merge' → logprob: -10.704952239990234
    9. 'import' → logprob: -11.579952239990234
    10. ' ' → logprob: -11.829952239990234

Token 11: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.011088382452726364
    2. 'ap' → logprob: -4.5110883712768555
    3. 'a' → logprob: -10.136088371276855
    4. 'aq' → logprob: -14.886088371276855
    5. 'appen' → logprob: -16.011089324951172
    6. 'ап' → logprob: -16.636089324951172
    7. 'q' → logprob: -16.636089324951172
    8. 'apl' → logprob: -16.761089324951172
    9. 'aps' → logprob: -16.886089324951172
    10. 'appa' → logprob: -17.261089324951172

Token 12: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0005545823951251805
    2. 'op' → logprob: -7.50055456161499
    3. 'us' → logprob: -13.875555038452148
    4. 'u' → logprob: -14.625555038452148
    5. 'o' → logprob: -15.625555038452148
    6. '```' → logprob: -18.62555503845215
    7. 'osh' → logprob: -18.75055503845215
    8. 'ut' → logprob: -19.12555503845215
    9. 'USH' → logprob: -19.12555503845215
    10. '[' → logprob: -19.37555503845215

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1598109006881714
    2. 'he' → logprob: -2.159811019897461
    3. '<|end|>' → logprob: -4.034811019897461
    4. '(' → logprob: -5.034811019897461
    5. 'import' → logprob: -5.909811019897461
    6. ' ' → logprob: -6.159811019897461
    7. '(heap' → logprob: -6.659811019897461
    8. ' ,' → logprob: -7.284811019897461
    9. ' he' → logprob: -7.909811019897461
    10. '<|end|>' → logprob: -8.159811019897461

Token 14: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.10029918700456619
    2. ' he' → logprob: -2.350299119949341
    3. 'heap' → logprob: -9.350298881530762
    4. ' heap' → logprob: -12.600298881530762
    5. '.he' → logprob: -14.100298881530762
    6. ' ' → logprob: -14.850298881530762
    7. '```' → logprob: -14.975298881530762
    8. '_he' → logprob: -15.600298881530762
    9. 'hev' → logprob: -15.850298881530762
    10. 'pop' → logprob: -16.475299835205078

Token 15: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00033581978641450405
    2. 'ap' → logprob: -8.000335693359375
    3. 'appen' → logprob: -15.750335693359375
    4. 'a' → logprob: -15.875335693359375
    5. 'appe' → logprob: -17.625335693359375
    6. 'ап' → logprob: -18.250335693359375
    7. 'appt' → logprob: -18.625335693359375
    8. '_app' → logprob: -19.125335693359375
    9. '	app' → logprob: -19.250335693359375
    10. '.app' → logprob: -19.250335693359375

Token 16: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.018153218552470207
    2. 'ush' → logprob: -4.018153190612793
    3. 'o' → logprob: -13.018153190612793
    4. 'opp' → logprob: -14.518153190612793
    5. 'opleft' → logprob: -15.643153190612793
    6. 'app' → logprob: -16.26815414428711
    7. 'osh' → logprob: -16.64315414428711
    8. 'opl' → logprob: -16.89315414428711
    9. 'p' → logprob: -17.14315414428711
    10. '   ' → logprob: -17.51815414428711

Token 17: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42920398712158203
    2. '\n' → logprob: -2.054203987121582
    3. '

' → logprob: -2.179203987121582
    4. '\' → logprob: -2.804203987121582
    5. 'def' → logprob: -3.679203987121582
    6. '' → logprob: -5.054203987121582
    7. 'n' → logprob: -5.304203987121582
    8. '```' → logprob: -6.179203987121582
    9. 'newline' → logprob: -6.679203987121582
    10. '
' → logprob: -6.804203987121582

Token 18: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.26687848567962646
    2. 'def' → logprob: -1.5168784856796265
    3. '\' → logprob: -5.016878604888916
    4. 'class' → logprob: -5.641878604888916
    5. '' → logprob: -6.641878604888916
    6. 'de' → logprob: -6.641878604888916
    7. '
' → logprob: -7.016878604888916
    8. '#' → logprob: -8.141878128051758
    9. '```' → logprob: -8.391878128051758
    10. 'n' → logprob: -8.766878128051758

Token 19: ' Fonction' (ID: 189149)
  Prédit: ' class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' class' → logprob: -0.8392276167869568
    2. 'def' → logprob: -1.3392276763916016
    3. ' def' → logprob: -2.4642276763916016
    4. 'd' → logprob: -2.7142276763916016
    5. 'class' → logprob: -3.0892276763916016
    6. 'Define' → logprob: -3.4642276763916016
    7. ' d' → logprob: -4.839227676391602
    8. ' de' → logprob: -4.839227676391602
    9. ' Define' → logprob: -4.964227676391602
    10. 'define' → logprob: -5.089227676391602

Token 20: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6695738434791565
    2. ' def' → logprob: -1.6695737838745117
    3. '_' → logprob: -2.2945737838745117
    4. ' de' → logprob: -2.5445737838745117
    5. 'def' → logprob: -2.7945737838745117
    6. 's' → logprob: -3.5445737838745117
    7. ' ' → logprob: -4.169573783874512
    8. '(' → logprob: -5.294573783874512
    9. ' (' → logprob: -6.169573783874512
    10. '_de' → logprob: -7.169573783874512

Token 21: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.43896549940109253
    2. 'tr' → logprob: -1.8139655590057373
    3. 'calcul' → logprob: -2.3139655590057373
    4. ' tr' → logprob: -2.5639655590057373
    5. ' trouver' → logprob: -4.938965320587158
    6. 'aj' → logprob: -5.938965320587158
    7. 'cal' → logprob: -6.688965320587158
    8. ' ' → logprob: -7.438965320587158
    9. ' ajouter' → logprob: -7.938965320587158
    10. ' extra' → logprob: -8.063965797424316

Token 22: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0009912493405863643
    2. 'ate' → logprob: -7.250991344451904
    3. 'ating' → logprob: -8.625990867614746
    4. '_' → logprob: -10.250990867614746
    5. 'ateur' → logprob: -10.875990867614746
    6. 'atrice' → logprob: -10.875990867614746
    7. 'e' → logprob: -11.500990867614746
    8. '#' → logprob: -12.125990867614746
    9. 'a' → logprob: -12.625990867614746
    10. 'r' → logprob: -13.250990867614746

Token 23: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4344978630542755
    2. '_la' → logprob: -1.6844978332519531
    3. '_' → logprob: -2.059497833251953
    4. '_le' → logprob: -4.184497833251953
    5. '_distance' → logprob: -4.434497833251953
    6. '_l' → logprob: -5.684497833251953
    7. ' le' → logprob: -6.184497833251953
    8. 'la' → logprob: -6.559497833251953
    9. ' ' → logprob: -6.559497833251953
    10. 'le' → logprob: -6.934497833251953

Token 24: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.2819463610649109
    2. ' distance' → logprob: -1.7819464206695557
    3. 'd' → logprob: -3.0319464206695557
    4. 'dist' → logprob: -4.906946182250977
    5. 's' → logprob: -5.281946182250977
    6. ' plus' → logprob: -5.531946182250977
    7. ' ' → logprob: -5.656946182250977
    8. 'plus' → logprob: -6.156946182250977
    9. ' d' → logprob: -6.781946182250977
    10. '_distance' → logprob: -7.656946182250977

Token 25: ' eu' (ID: 5658)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.024196142330765724
    2. '_between' → logprob: -4.524196147918701
    3. '(' → logprob: -5.024196147918701
    4. 'entre' → logprob: -6.399196147918701
    5. '_de' → logprob: -6.774196147918701
    6. 's' → logprob: -7.649196147918701
    7. '_d' → logprob: -7.649196147918701
    8. ' entre' → logprob: -7.899196147918701
    9. ' between' → logprob: -8.274195671081543
    10. 'Entre' → logprob: -8.399195671081543

Token 26: 'clid' (ID: 156121)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1302107274532318
    2. 'clid' → logprob: -2.3802106380462646
    3. 'cl' → logprob: -3.8802106380462646
    4. 'clidean' → logprob: -4.880210876464844
    5. 'clé' → logprob: -7.005210876464844
    6. '```' → logprob: -9.255210876464844
    7. '   ' → logprob: -10.005210876464844
    8. '       ' → logprob: -10.755210876464844
    9. '' → logprob: -10.755210876464844
    10. '	c' → logprob: -11.005210876464844

Token 27: 'ienne' (ID: 18387)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.018745271489024162
    2. 'ienne' → logprob: -4.768745422363281
    3. 'enne' → logprob: -5.518745422363281
    4. 'e' → logprob: -5.893745422363281
    5. 'ée' → logprob: -6.518745422363281
    6. 'id' → logprob: -7.143745422363281
    7. 'd' → logprob: -8.143745422363281
    8. 'én' → logprob: -8.768745422363281
    9. 'ène' → logprob: -8.893745422363281
    10. 'ene' → logprob: -9.393745422363281

Token 28: ' entre' (ID: 3853)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5913718938827515
    2. '(' → logprob: -0.8413718938827515
    3. '_' → logprob: -5.466372013092041
    4. 's' → logprob: -5.966372013092041
    5. 'de' → logprob: -5.966372013092041
    6. ' (' → logprob: -6.841372013092041
    7. 'd' → logprob: -7.091372013092041
    8. 'a' → logprob: -7.216372013092041
    9. ' between' → logprob: -7.716372013092041
    10. ' def' → logprob: -7.841372013092041

Token 29: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.2589017450809479
    2. ' deux' → logprob: -1.5089017152786255
    3. '(de' → logprob: -5.383901596069336
    4. ' two' → logprob: -6.258901596069336
    5. ' ' → logprob: -9.133901596069336
    6. '_de' → logprob: -9.133901596069336
    7. ' (' → logprob: -10.133901596069336
    8. ' de' → logprob: -10.258901596069336
    9. '	de' → logprob: -10.258901596069336
    10. '2' → logprob: -10.383901596069336

Token 30: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.010361283086240292
    2. 'points' → logprob: -4.635361194610596
    3. '(points' → logprob: -8.510361671447754
    4. ' ' → logprob: -8.885361671447754
    5. '_points' → logprob: -8.885361671447754
    6. ' point' → logprob: -10.385361671447754
    7. '(' → logprob: -10.510361671447754
    8. ' (' → logprob: -10.510361671447754
    9. ' puntos' → logprob: -11.510361671447754
    10. '(point' → logprob: -11.760361671447754

Token 31: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023644661530852318
    2. '(' → logprob: -5.02364444732666
    3. 'd' → logprob: -5.39864444732666
    4. '\' → logprob: -5.39864444732666
    5. 'de' → logprob: -6.14864444732666
    6. 's' → logprob: -6.64864444732666
    7. '```' → logprob: -6.64864444732666
    8. ' def' → logprob: -7.39864444732666
    9. '(
' → logprob: -7.39864444732666
    10. ':' → logprob: -8.02364444732666

Token 32: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.021198835223913193
    2. 'd' → logprob: -4.146198749542236
    3. 'de' → logprob: -5.646198749542236
    4. ' de' → logprob: -7.396198749542236
    5. ' def' → logprob: -7.521198749542236
    6. '_' → logprob: -9.021199226379395
    7. '\' → logprob: -9.521199226379395
    8. ' ' → logprob: -10.021199226379395
    9. '```' → logprob: -10.021199226379395
    10. '#' → logprob: -10.146199226379395

Token 33: ' dist' (ID: 3601)
  Prédit: ' distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.44181063771247864
    2. ' ' → logprob: -1.6918106079101562
    3. ' calculate' → logprob: -2.4418106079101562
    4. ' eu' → logprob: -3.1918106079101562
    5. 'distance' → logprob: -3.9418106079101562
    6. ' space' → logprob: -4.816810607910156
    7. ' ' → logprob: -5.191810607910156
    8. ' Eu' → logprob: -6.191810607910156
    9. ' compute' → logprob: -6.316810607910156
    10. ' calcul' → logprob: -6.691810607910156

Token 34: '(p' (ID: 2407)
  Prédit: 'ance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.03443092852830887
    2. '(a' → logprob: -3.909430980682373
    3. '(' → logprob: -4.909430980682373
    4. 'a' → logprob: -5.284430980682373
    5. 'an' → logprob: -7.409430980682373
    6. 'ANCE' → logprob: -7.659430980682373
    7. '_' → logprob: -8.909430503845215
    8. 'anc' → logprob: -9.909430503845215
    9. '_a' → logprob: -10.159430503845215
    10. ' an' → logprob: -10.534430503845215

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008257066365331411
    2. ',' → logprob: -7.625825881958008
    3. 'oint' → logprob: -8.125825881958008
    4. 'a' → logprob: -10.375825881958008
    5. 'r' → logprob: -12.875825881958008
    6. 'oints' → logprob: -13.000825881958008
    7. 't' → logprob: -13.125825881958008
    8. ')' → logprob: -13.625825881958008
    9. 'o' → logprob: -14.375825881958008
    10. 'i' → logprob: -14.875825881958008

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.334533878136426e-05
    2. ',p' → logprob: -10.250042915344238
    3. ' ,' → logprob: -11.875042915344238
    4. '1' → logprob: -15.000042915344238
    5. 'p' → logprob: -15.500042915344238
    6. ',
' → logprob: -15.750042915344238
    7. ')' → logprob: -16.375043869018555
    8. ' p' → logprob: -16.500043869018555
    9. '):' → logprob: -16.875043869018555
    10. '[' → logprob: -17.000043869018555

Token 37: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.012597124092280865
    2. 'p' → logprob: -4.38759708404541
    3. ' ' → logprob: -10.38759708404541
    4. '<|end|>' → logprob: -10.76259708404541
    5. ')' → logprob: -11.26259708404541
    6. ' )' → logprob: -11.51259708404541
    7. ' ' → logprob: -12.01259708404541
    8. ',' → logprob: -13.26259708404541
    9. 's' → logprob: -13.63759708404541
    10. '<|end|>' → logprob: -14.01259708404541

Token 38: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.360996485454962e-05
    2. '1' → logprob: -9.7500638961792
    3. 'oint' → logprob: -12.8750638961792
    4. 'oints' → logprob: -13.1250638961792
    5. ')' → logprob: -14.5000638961792
    6. '):' → logprob: -16.000062942504883
    7. ',' → logprob: -16.250062942504883
    8. '```' → logprob: -17.375062942504883
    9. 't' → logprob: -18.375062942504883
    10. 'p' → logprob: -18.625062942504883

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009384971344843507
    2. ')' → logprob: -7.000938415527344
    3. '):
' → logprob: -11.375938415527344
    4. ':' → logprob: -11.375938415527344
    5. ' ):' → logprob: -12.625938415527344
    6. ',' → logprob: -14.875938415527344
    7. ')：' → logprob: -16.500938415527344
    8. '**' → logprob: -16.750938415527344
    9. ' ' → logprob: -17.000938415527344
    10. '():' → logprob: -17.125938415527344

Token 40: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.548438549041748
    2. '(' → logprob: -1.048438549041748
    3. '   ' → logprob: -3.673438549041748
    4. '):' → logprob: -3.923438549041748
    5. '(p' → logprob: -4.048438549041748
    6. '.' → logprob: -5.548438549041748
    7. ')' → logprob: -6.423438549041748
    8. ',' → logprob: -7.423438549041748
    9. ' return' → logprob: -7.423438549041748
    10. '(
' → logprob: -7.923438549041748

Token 41: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5425521731376648
    2. 'return' (adapté à ' return') → logprob: -1.0425522327423096
    3. '   ' → logprob: -3.6675522327423096
    4. ' ' → logprob: -4.2925519943237305
    5. 'r' → logprob: -4.7925519943237305
    6. '    ' → logprob: -4.9175519943237305
    7. ' math' → logprob: -5.7925519943237305
    8. ')' → logprob: -6.4175519943237305
    9. ' )' → logprob: -6.6675519943237305
    10. 'm' → logprob: -6.9175519943237305

Token 42: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.05600028485059738
    2. ' ' → logprob: -3.681000232696533
    3. ' (' → logprob: -4.556000232696533
    4. ' ((' → logprob: -4.931000232696533
    5. '(math' → logprob: -5.056000232696533
    6. 'math' → logprob: -5.681000232696533
    7. '(' → logprob: -6.431000232696533
    8. '((' → logprob: -9.806000709533691
    9. ' (
' → logprob: -10.681000709533691
    10. ' ' → logprob: -10.681000709533691

Token 43: '.h' (ID: 1508)
  Prédit: '.sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.31446537375450134
    2. '.' → logprob: -1.3144654035568237
    3. '.dist' → logprob: -7.314465522766113
    4. '.s' → logprob: -7.814465522766113
    5. '.h' → logprob: -9.189465522766113
    6. '.atan' → logprob: -11.564465522766113
    7. '.Sqrt' → logprob: -11.939465522766113
    8. '.pow' → logprob: -11.939465522766113
    9. '.pi' → logprob: -13.189465522766113
    10. '.f' → logprob: -13.564465522766113

Token 44: 'yp' (ID: 1785)
  Prédit: 'yp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -9.849109119386412e-06
    2. 'hyp' → logprob: -12.375009536743164
    3. 'a' → logprob: -12.875009536743164
    4. 'sqrt' → logprob: -13.000009536743164
    5. 'at' → logprob: -15.000009536743164
    6. 'y' → logprob: -15.250009536743164
    7. 'eu' → logprob: -16.375009536743164
    8. 'av' → logprob: -16.500009536743164
    9. 'ath' → logprob: -17.625009536743164
    10. 'dist' → logprob: -17.625009536743164

Token 45: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -2.935296834039036e-06
    2. 'otl' → logprob: -13.12500286102295
    3. 'o' → logprob: -14.50000286102295
    4. 'otp' → logprob: -16.000003814697266
    5. 'otlin' → logprob: -16.625003814697266
    6. '``' → logprob: -17.250003814697266
    7. '2' → logprob: -17.375003814697266
    8. 'от' → logprob: -17.500003814697266
    9. '[' → logprob: -17.500003814697266
    10. '**' → logprob: -18.250003814697266

Token 46: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.576015293598175
    2. '(' → logprob: -0.826015293598175
    3. '(
' → logprob: -10.07601547241211
    4. '((' → logprob: -10.45101547241211
    5. 'p' → logprob: -13.32601547241211
    6. '(

' → logprob: -13.32601547241211
    7. ' (' → logprob: -14.20101547241211
    8. '(P' → logprob: -15.82601547241211
    9. '('' → logprob: -16.32601547241211
    10. '(abs' → logprob: -16.45101547241211

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013300024438649416
    2. '2' → logprob: -6.6263298988342285
    3. '[' → logprob: -12.501330375671387
    4. 'oint' → logprob: -15.751330375671387
    5. 'x' → logprob: -17.00132942199707
    6. '_' → logprob: -17.75132942199707
    7. 'oints' → logprob: -17.87632942199707
    8. '0' → logprob: -18.06382942199707
    9. '
' → logprob: -18.31382942199707
    10. '(' → logprob: -18.62632942199707

Token 48: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -15.875
    3. '   ' → logprob: -18.125
    4. '[
' → logprob: -18.375
    5. ' [' → logprob: -20.25
    6. ',' → logprob: -20.375
    7. '1' → logprob: -21.25
    8. '(' → logprob: -21.375
    9. ' ' → logprob: -21.375
    10. 'x' → logprob: -21.5

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.250000953674316
    3. '1' → logprob: -15.750000953674316
    4. '   ' → logprob: -17.75
    5. '
' → logprob: -18.125
    6. '۰' → logprob: -18.75
    7. '

' → logprob: -19.375
    8. '  ' → logprob: -19.6875
    9. '０' → logprob: -20.3125
    10. '٠' → logprob: -20.3125

Token 50: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10029777884483337
    2. '-' → logprob: -2.350297689437866
    3. ' ' → logprob: -9.725297927856445
    4. '-p' → logprob: -10.975297927856445
    5. ' p' → logprob: -12.100297927856445
    6. ',' → logprob: -12.600297927856445
    7. '   ' → logprob: -13.850297927856445
    8. ' ,' → logprob: -14.100297927856445
    9. ' –' → logprob: -14.350297927856445
    10. ' -,' → logprob: -14.725297927856445

Token 51: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07900909334421158
    2. '-' → logprob: -2.5790090560913086
    3. '-p' → logprob: -9.079009056091309
    4. ' ' → logprob: -12.579009056091309
    5. ' p' → logprob: -14.204009056091309
    6. ' ' → logprob: -14.329009056091309
    7. ' –' → logprob: -15.579009056091309
    8. ' -,' → logprob: -15.954009056091309
    9. ',' → logprob: -16.454010009765625
    10. 'p' → logprob: -17.204010009765625

Token 52: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.12692810595035553
    2. ' p' → logprob: -2.1269280910491943
    3. '	p' → logprob: -16.751928329467773
    4. ')p' → logprob: -18.251928329467773
    5. ' ' → logprob: -18.876928329467773
    6. ' п' → logprob: -19.001928329467773
    7. '<p' → logprob: -20.001928329467773
    8. ''p' → logprob: -20.251928329467773
    9. '2' → logprob: -20.376928329467773
    10. ')' → logprob: -20.501928329467773

Token 53: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001699821907095611
    2. '1' → logprob: -6.501699924468994
    3. 'ython' → logprob: -9.376699447631836
    4. '[' → logprob: -9.626699447631836
    5. ' ' → logprob: -11.626699447631836
    6. '0' → logprob: -11.876699447631836
    7. 'r' → logprob: -12.376699447631836
    8. 'oint' → logprob: -12.501699447631836
    9. 'oints' → logprob: -12.501699447631836
    10. '```' → logprob: -12.501699447631836

Token 54: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. '1' → logprob: -14.375001907348633
    3. '0' → logprob: -14.750001907348633
    4. '[
' → logprob: -14.875001907348633
    5. ' [' → logprob: -15.500001907348633
    6. '][' → logprob: -15.875001907348633
    7. ''[' → logprob: -16.937501907348633
    8. '2' → logprob: -17.375001907348633
    9. '```' → logprob: -17.437501907348633
    10. ')' → logprob: -17.562501907348633

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -13.250003814697266
    3. '1' → logprob: -13.375003814697266
    4. '[' → logprob: -14.250003814697266
    5. '   ' → logprob: -17.750003814697266
    6. '۰' → logprob: -18.625003814697266
    7. '  ' → logprob: -19.250003814697266
    8. ']' → logprob: -20.187503814697266
    9. '０' → logprob: -20.562503814697266
    10. '```' → logprob: -20.937503814697266

Token 56: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030066570616327226
    2. ' ,' → logprob: -9.000300407409668
    3. '),' → logprob: -9.125300407409668
    4. ')' → logprob: -9.750300407409668
    5. ',
' → logprob: -12.750300407409668
    6. '],' → logprob: -12.875300407409668
    7. ',p' → logprob: -13.125300407409668
    8. ',

' → logprob: -13.500300407409668
    9. ',)' → logprob: -14.750300407409668
    10. ']' → logprob: -15.375300407409668

Token 57: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.006318493280559778
    2. 'p' → logprob: -5.13131856918335
    3. ' ' → logprob: -8.756318092346191
    4. ' ' → logprob: -8.756318092346191
    5. ')' → logprob: -9.881318092346191
    6. ' )' → logprob: -11.256318092346191
    7. '1' → logprob: -13.256318092346191
    8. '<|end|>' → logprob: -13.506318092346191
    9. '(p' → logprob: -13.756318092346191
    10. '	p' → logprob: -13.756318092346191

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.635164754698053e-05
    2. '[' → logprob: -9.625066757202148
    3. '.' → logprob: -15.625066757202148
    4. '' → logprob: -17.00006675720215
    5. '-' → logprob: -17.62506675720215
    6. '
' → logprob: -18.00006675720215
    7. '#' → logprob: -18.62506675720215
    8. '```' → logprob: -18.75006675720215
    9. ' ' → logprob: -18.87506675720215
    10. ']' → logprob: -18.87506675720215

Token 59: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.749814019713085e-06
    2. ')' → logprob: -12.875006675720215
    3. '][' → logprob: -13.375006675720215
    4. '])' → logprob: -13.875006675720215
    5. ']' → logprob: -14.000006675720215
    6. '[
' → logprob: -15.375006675720215
    7. ')[' → logprob: -16.12500762939453
    8. ' [' → logprob: -16.25000762939453
    9. '   ' → logprob: -16.50000762939453
    10. '```' → logprob: -16.50000762939453

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '0' → logprob: -14.875000953674316
    3. '])' → logprob: -14.875000953674316
    4. ' ' → logprob: -15.250000953674316
    5. '[' → logprob: -16.125001907348633
    6. '   ' → logprob: -17.000001907348633
    7. ']' → logprob: -17.125001907348633
    8. '-' → logprob: -17.125001907348633
    9. ')' → logprob: -17.750001907348633
    10. '```' → logprob: -18.125001907348633

Token 61: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.959636033978313e-05
    2. '<|end|>' → logprob: -10.000089645385742
    3. ')' → logprob: -10.500089645385742
    4. ' ]' → logprob: -11.375089645385742
    5. '<|end|>' → logprob: -13.000089645385742
    6. '[' → logprob: -14.125089645385742
    7. '']' → logprob: -14.250089645385742
    8. '])' → logprob: -14.500089645385742
    9. '}' → logprob: -16.500089645385742
    10. '-' → logprob: -16.625089645385742

Token 62: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.031091785058379173
    2. '-' → logprob: -3.6560916900634766
    3. ')' → logprob: -5.406091690063477
    4. '[' → logprob: -9.031091690063477
    5. ' ' → logprob: -9.406091690063477
    6. '-)' → logprob: -10.156091690063477
    7. ' )' → logprob: -10.656091690063477
    8. '<|end|>' → logprob: -11.406091690063477
    9. ']' → logprob: -12.031091690063477
    10. '])' → logprob: -13.156091690063477

Token 63: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.1797519028186798
    2. 'p' → logprob: -1.8047518730163574
    3. ' ' → logprob: -12.429752349853516
    4. ')' → logprob: -13.804752349853516
    5. ')p' → logprob: -14.429752349853516
    6. '2' → logprob: -14.679752349853516
    7. ' ' → logprob: -15.054752349853516
    8. '1' → logprob: -15.179752349853516
    9. '	p' → logprob: -16.242252349853516
    10. '(p' → logprob: -16.429752349853516

Token 64: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.08944896562025e-05
    2. '[' → logprob: -9.500081062316895
    3. '2' → logprob: -13.125081062316895
    4. ' ' → logprob: -13.625081062316895
    5. ']' → logprob: -13.625081062316895
    6. '0' → logprob: -14.125081062316895
    7. '])' → logprob: -14.750081062316895
    8. '```' → logprob: -15.750081062316895
    9. '-' → logprob: -16.125080108642578
    10. '][' → logprob: -16.625080108642578

Token 65: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002527745207771659
    2. '1' → logprob: -6.002527713775635
    3. '])' → logprob: -10.127528190612793
    4. ']' → logprob: -12.002528190612793
    5. '][' → logprob: -12.627528190612793
    6. '2' → logprob: -13.877528190612793
    7. ')' → logprob: -15.127528190612793
    8. '```' → logprob: -15.127528190612793
    9. '0' → logprob: -15.252528190612793
    10. '-' → logprob: -15.252528190612793

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. '0' → logprob: -13.375003814697266
    3. '])' → logprob: -13.375003814697266
    4. ' ' → logprob: -16.000003814697266
    5. ']' → logprob: -16.750003814697266
    6. '[' → logprob: -17.250003814697266
    7. ')' → logprob: -18.000003814697266
    8. '```' → logprob: -18.250003814697266
    9. '-' → logprob: -18.375003814697266
    10. '   ' → logprob: -18.875003814697266

Token 67: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. '))' → logprob: -12.250004768371582
    3. ')
' → logprob: -15.875004768371582
    4. ' )' → logprob: -16.0000057220459
    5. '])' → logprob: -17.2500057220459
    6. ')

' → logprob: -18.7500057220459
    7. '),' → logprob: -18.8750057220459
    8. ')**' → logprob: -19.2500057220459
    9. '})' → logprob: -19.2500057220459
    10. ']' → logprob: -19.3750057220459

Token 68: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013938182964920998
    2. 'def' → logprob: -4.888937950134277
    3. '

' → logprob: -5.763937950134277
    4. '#' → logprob: -6.513937950134277
    5. '\' → logprob: -7.138937950134277
    6. '
' → logprob: -8.013937950134277
    7. '\n' → logprob: -8.763937950134277
    8. '```' → logprob: -8.888937950134277
    9. 'newline' → logprob: -9.763937950134277
    10. '' → logprob: -9.763937950134277

Token 69: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.033316101878881454
    2. ' def' → logprob: -3.533316135406494
    3. '#' → logprob: -5.908316135406494
    4. 'class' → logprob: -7.533316135406494
    5. ' class' → logprob: -9.283315658569336
    6. ' #' → logprob: -9.408315658569336
    7. 'd' → logprob: -11.033315658569336
    8. '
' → logprob: -11.283315658569336
    9. ' 
' → logprob: -11.533315658569336
    10. 'Code' → logprob: -11.783315658569336

Token 70: ' pour' (ID: 1930)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4596991240978241
    2. ' for' → logprob: -1.8346991539001465
    3. 'def' → logprob: -1.8346991539001465
    4. ' pour' → logprob: -3.2096991539001465
    5. ' to' → logprob: -5.5846991539001465
    6. 'pour' → logprob: -6.7096991539001465
    7. ' ' → logprob: -7.4596991539001465
    8. '_for' → logprob: -7.7096991539001465
    9. '_' → logprob: -7.7096991539001465
    10. 'for' → logprob: -8.334698677062988

Token 71: ' trouver' (ID: 23195)
  Prédit: ' trouver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trouver' → logprob: -0.12838484346866608
    2. ' calcul' → logprob: -2.628384828567505
    3. ' tr' → logprob: -4.003385066986084
    4. 'tr' → logprob: -4.003385066986084
    5. ' construire' → logprob: -5.003385066986084
    6. ' find' → logprob: -7.003385066986084
    7. ' ' → logprob: -7.878385066986084
    8. ' rechercher' → logprob: -8.003384590148926
    9. ' résoudre' → logprob: -8.128384590148926
    10. ' chercher' → logprob: -8.253384590148926

Token 72: ' les' (ID: 1341)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.0075678825378418
    2. ' le' → logprob: -1.3825678825378418
    3. '_le' → logprob: -1.7575678825378418
    4. ' les' → logprob: -2.757567882537842
    5. '_' → logprob: -2.882567882537842
    6. ' la' → logprob: -3.257567882537842
    7. 'les' → logprob: -4.382567882537842
    8. '_la' → logprob: -5.007567882537842
    9. '_k' → logprob: -5.132567882537842
    10. ' the' → logprob: -5.507567882537842

Token 73: ' deux' (ID: 10301)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.23318055272102356
    2. 'k' → logprob: -1.8581805229187012
    3. ' points' → logprob: -3.233180522918701
    4. ' n' → logprob: -5.608180522918701
    5. 'n' → logprob: -5.733180522918701
    6. ' K' → logprob: -6.733180522918701
    7. ' ' → logprob: -6.858180522918701
    8. 'points' → logprob: -6.858180522918701
    9. ' plus' → logprob: -7.233180522918701
    10. 'K' → logprob: -7.608180522918701

Token 74: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.4036571681499481
    2. 'points' → logprob: -1.1536571979522705
    3. '_points' → logprob: -4.653656959533691
    4. '_' → logprob: -5.903656959533691
    5. ' plus' → logprob: -7.028656959533691
    6. 'closest' → logprob: -7.528656959533691
    7. ' closest' → logprob: -7.778656959533691
    8. 'plus' → logprob: -7.903656959533691
    9. 'point' → logprob: -8.278656959533691
    10. 'p' → logprob: -8.528656959533691

Token 75: ' d' (ID: 272)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.18758609890937805
    2. 'les' → logprob: -3.1875860691070557
    3. '_' → logprob: -3.3125860691070557
    4. 's' → logprob: -3.3125860691070557
    5. '<|end|>' → logprob: -3.3125860691070557
    6. '<|end|>' → logprob: -6.187586307525635
    7. ' ' → logprob: -6.312586307525635
    8. 'u' → logprob: -6.562586307525635
    9. ' plus' → logprob: -6.687586307525635
    10. ' ' → logprob: -6.812586307525635

Token 76: ''inter' (ID: 55731)
  Prédit: 'istance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'istance' → logprob: -0.062483735382556915
    2. 'e' → logprob: -4.312483787536621
    3. ''' → logprob: -4.437483787536621
    4. 'ist' → logprob: -4.687483787536621
    5. 'u' → logprob: -5.187483787536621
    6. ''un' → logprob: -5.437483787536621
    7. ''une' → logprob: -5.937483787536621
    8. 'istant' → logprob: -5.937483787536621
    9. 'i' → logprob: -6.312483787536621
    10. '')' → logprob: -6.312483787536621

Token 77: 'section' (ID: 6471)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.43175920844078064
    2. 'section' → logprob: -1.181759238243103
    3. 'est' → logprob: -4.056759357452393
    4. 'ection' → logprob: -4.181759357452393
    5. 'êt' → logprob: -5.806759357452393
    6. 'es' → logprob: -5.931759357452393
    7. 'er' → logprob: -6.556759357452393
    8. 'é' → logprob: -7.431759357452393
    9. 'val' → logprob: -7.931759357452393
    10. 'esse' → logprob: -8.056758880615234

Token 78: ' entre' (ID: 3853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13381366431713104
    2. ' des' → logprob: -3.8838136196136475
    3. '_des' → logprob: -3.8838136196136475
    4. '<|end|>' → logprob: -4.008813858032227
    5. '_between' → logprob: -4.383813858032227
    6. 'des' → logprob: -4.633813858032227
    7. '_points' → logprob: -5.383813858032227
    8. 'def' → logprob: -5.383813858032227
    9. 's' → logprob: -5.383813858032227
    10. ' entre' → logprob: -5.383813858032227

Token 79: ' deux' (ID: 10301)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5074306726455688
    2. 'de' → logprob: -1.6324306726455688
    3. ' une' → logprob: -2.6324305534362793
    4. 'une' → logprob: -2.8824305534362793
    5. ' deux' → logprob: -3.5074305534362793
    6. 'un' → logprob: -3.7574305534362793
    7. ' two' → logprob: -5.257430553436279
    8. '<|end|>' → logprob: -5.757430553436279
    9. ' ' → logprob: -6.257430553436279
    10. '```' → logprob: -6.382430553436279

Token 80: ' cer' (ID: 10816)
  Prédit: ' cer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cer' → logprob: -0.005680261179804802
    2. ' circles' → logprob: -5.755680084228516
    3. ' cercle' → logprob: -7.005680084228516
    4. 'cer' → logprob: -7.130680084228516
    5. ' dro' → logprob: -8.130680084228516
    6. ' segments' → logprob: -8.630680084228516
    7. ' círc' → logprob: -9.755680084228516
    8. ' cerc' → logprob: -9.755680084228516
    9. ' Cerc' → logprob: -10.380680084228516
    10. 'cir' → logprob: -10.505680084228516

Token 81: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.07881630957126617
    2. 'c' → logprob: -2.8288164138793945
    3. 'cl' → logprob: -4.2038164138793945
    4. 'cle' → logprob: -6.9538164138793945
    5. '```' → logprob: -7.9538164138793945
    6. 'cls' → logprob: -8.578816413879395
    7. 'f' → logprob: -9.328816413879395
    8. '   ' → logprob: -10.828816413879395
    9. '``' → logprob: -11.078816413879395
    10. 'cla' → logprob: -11.078816413879395

Token 82: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31006526947021484
    2. 'def' → logprob: -1.6850652694702148
    3. '(p' → logprob: -2.685065269470215
    4. '(
' → logprob: -5.185065269470215
    5. 's' → logprob: -6.060065269470215
    6. '_' → logprob: -6.310065269470215
    7. ':' → logprob: -7.060065269470215
    8. ' def' → logprob: -7.435065269470215
    9. '(def' → logprob: -7.935065269470215
    10. 'd' → logprob: -8.060065269470215

Token 83: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004158057272434235
    2. ' def' → logprob: -5.504158020019531
    3. ':def' → logprob: -10.004158020019531
    4. '(def' → logprob: -10.754158020019531
    5. 'de' → logprob: -12.504158020019531
    6. '(
' → logprob: -12.754158020019531
    7. ':' → logprob: -13.004158020019531
    8. '(' → logprob: -13.379158020019531
    9. 'd' → logprob: -14.504158020019531
    10. '_def' → logprob: -14.629158020019531

Token 84: ' Ces' (ID: 35720)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.034753359854221344
    2. ' def' → logprob: -3.4097533226013184
    3. 'd' → logprob: -7.159753322601318
    4. 'de' → logprob: -8.909753799438477
    5. '(' → logprob: -9.159753799438477
    6. ' d' → logprob: -10.784753799438477
    7. ' (' → logprob: -10.784753799438477
    8. '(
' → logprob: -11.284753799438477
    9. ' de' → logprob: -11.534753799438477
    10. ' ' → logprob: -11.909753799438477

Token 85: ' points' (ID: 5571)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.824827253818512
    2. ' points' → logprob: -1.8248271942138672
    3. ' def' → logprob: -1.8248271942138672
    4. ' ' → logprob: -2.449827194213867
    5. 'def' → logprob: -3.574827194213867
    6. ' cer' → logprob: -3.824827194213867
    7. ' deux' → logprob: -4.074827194213867
    8. ' ' → logprob: -4.449827194213867
    9. ' d' → logprob: -4.824827194213867
    10. ' #' → logprob: -4.824827194213867

Token 86: ' correspondent' (ID: 86218)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: ' aux' (ID: 5850)
  Prédit: ' aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aux' → logprob: -0.6483548283576965
    2. ' à' → logprob: -1.0233547687530518
    3. ' au' → logprob: -2.7733547687530518
    4. 'aux' → logprob: -3.5233547687530518
    5. 'à' → logprob: -4.648355007171631
    6. '<|end|>' → logprob: -5.523355007171631
    7. ' ' → logprob: -5.773355007171631
    8. 's' → logprob: -6.148355007171631
    9. '_aux' → logprob: -6.898355007171631
    10. ' to' → logprob: -6.898355007171631

Token 88: ' intersections' (ID: 143513)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.23240502178668976
    2. 'de' → logprob: -2.482404947280884
    3. ' intersections' → logprob: -3.357404947280884
    4. 'points' → logprob: -3.857404947280884
    5. ' centers' → logprob: -3.982404947280884
    6. ' solutions' → logprob: -4.857405185699463
    7. ' centres' → logprob: -5.107405185699463
    8. ' deux' → logprob: -5.232405185699463
    9. 'positions' → logprob: -5.857405185699463
    10. ' possible' → logprob: -6.107405185699463

Token 89: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8081790208816528
    2. ' ' → logprob: -2.0581789016723633
    3. '(' → logprob: -2.4331789016723633
    4. ' (' → logprob: -2.4331789016723633
    5. ' de' → logprob: -3.0581789016723633
    6. ' des' → logprob: -3.8081789016723633
    7. 'def' → logprob: -3.9331789016723633
    8. 's' → logprob: -4.058178901672363
    9. ':' → logprob: -4.183178901672363
    10. '.' → logprob: -4.433178901672363

Token 90: ' C' (ID: 363)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.2367740869522095
    2. ' deux' → logprob: -1.3617740869522095
    3. ' les' → logprob: -1.3617740869522095
    4. ' the' → logprob: -2.48677396774292
    5. 'les' → logprob: -3.86177396774292
    6. ' leurs' → logprob: -3.98677396774292
    7. ' two' → logprob: -4.11177396774292
    8. 'de' → logprob: -4.48677396774292
    9. ' cercle' → logprob: -4.98677396774292
    10. ' ' → logprob: -5.11177396774292

Token 91: '_i' (ID: 10853)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7357165217399597
    2. 'e' → logprob: -2.2357165813446045
    3. 'es' → logprob: -2.4857165813446045
    4. '2' → logprob: -2.6107165813446045
    5. 'erc' → logprob: -2.7357165813446045
    6. 'er' → logprob: -2.9857165813446045
    7. 'ircle' → logprob: -3.3607165813446045
    8. 'ir' → logprob: -3.6107165813446045
    9. 'eux' → logprob: -4.110716342926025
    10. 'i' → logprob: -4.485716342926025

Token 92: ' et' (ID: 859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.797467827796936
    2. '1' → logprob: -1.547467827796936
    3. ',' → logprob: -2.4224677085876465
    4. ' et' → logprob: -2.4224677085876465
    5. 's' → logprob: -3.2974677085876465
    6. ')' → logprob: -4.2974677085876465
    7. 'e' → logprob: -4.4224677085876465
    8. ' and' → logprob: -4.4224677085876465
    9. 'ir' → logprob: -4.6724677085876465
    10. 'i' → logprob: -4.6724677085876465

Token 93: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.08072491735219955
    2. 'C' → logprob: -2.5807249546051025
    3. ' ' → logprob: -7.205724716186523
    4. ' ' → logprob: -7.330724716186523
    5. '_' → logprob: -9.205724716186523
    6. ' #' → logprob: -10.143224716186523
    7. '<|end|>' → logprob: -10.268224716186523
    8. '#' → logprob: -10.330724716186523
    9. '_C' → logprob: -10.643224716186523
    10. '  ' → logprob: -10.830724716186523

Token 94: '_{' (ID: 22305)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.14544247090816498
    2. '_i' → logprob: -2.770442485809326
    3. 'j' → logprob: -3.645442485809326
    4. '_{' → logprob: -3.895442485809326
    5. 'i' → logprob: -4.020442485809326
    6. '_' → logprob: -4.895442485809326
    7. '1' → logprob: -8.020442008972168
    8. '_(' → logprob: -8.770442008972168
    9. '+' → logprob: -9.145442008972168
    10. '2' → logprob: -10.270442008972168

Token 95: 'i' (ID: 72)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.20345622301101685
    2. 'i' → logprob: -1.703456163406372
    3. 'ij' → logprob: -7.953456401824951
    4. '1' → logprob: -8.078455924987793
    5. '{i' → logprob: -8.078455924987793
    6. '(i' → logprob: -8.703455924987793
    7. '_j' → logprob: -8.828455924987793
    8. '{' → logprob: -8.828455924987793
    9. '2' → logprob: -9.078455924987793
    10. '```' → logprob: -9.453455924987793

Token 96: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10651656985282898
    2. '-' → logprob: -2.4815165996551514
    3. '1' → logprob: -4.106516361236572
    4. ' +' → logprob: -8.35651683807373
    5. '−' → logprob: -8.85651683807373
    6. '}' → logprob: -8.85651683807373
    7. '+
' → logprob: -9.60651683807373
    8. '2' → logprob: -9.73151683807373
    9. ' -' → logprob: -9.79401683807373
    10. '+j' → logprob: -10.48151683807373

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.893480243277736e-05
    2. ' ' → logprob: -10.500039100646973
    3. '}' → logprob: -12.375039100646973
    4. '2' → logprob: -13.000039100646973
    5. 'i' → logprob: -13.875039100646973
    6. '{' → logprob: -14.000039100646973
    7. '```' → logprob: -14.125039100646973
    8. '+' → logprob: -15.062539100646973
    9. '  ' → logprob: -15.250039100646973
    10. ' ' → logprob: -15.437539100646973

Token 98: '}
' (ID: 739)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0327320471405983
    2. '}' → logprob: -3.5327320098876953
    3. ' )' → logprob: -6.407732009887695
    4. '})' → logprob: -7.282732009887695
    5. ')}' → logprob: -8.782732009887695
    6. ',' → logprob: -9.282732009887695
    7. '):' → logprob: -9.907732009887695
    8. 'C' → logprob: -10.282732009887695
    9. '_' → logprob: -10.282732009887695
    10. ').' → logprob: -10.532732009887695

Token 99: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.7848862373502925e-05
    2. ':' → logprob: -11.375027656555176
    3. ' def' → logprob: -12.375027656555176
    4. ':def' → logprob: -12.375027656555176
    5. '(
' → logprob: -13.000027656555176
    6. 'de' → logprob: -13.500027656555176
    7. '
' → logprob: -13.500027656555176
    8. ':
' → logprob: -14.000027656555176
    9. '```' → logprob: -14.375027656555176
    10. 'd' → logprob: -14.750027656555176

Token 100: ' circle' (ID: 22005)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.8269947171211243
    2. ' circle' → logprob: -1.2019946575164795
    3. ' intersection' → logprob: -1.9519946575164795
    4. ' cercle' → logprob: -2.7019946575164795
    5. 'circle' → logprob: -3.9519946575164795
    6. ' intersect' → logprob: -4.701994895935059
    7. 'intersection' → logprob: -4.951994895935059
    8. 'inter' → logprob: -5.076994895935059
    9. 'find' → logprob: -5.826994895935059
    10. ' intersections' → logprob: -6.076994895935059

Token 101: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.0026560360565781593
    2. '_points' → logprob: -6.127655982971191
    3. '_center' → logprob: -8.252655982971191
    4. '_' → logprob: -9.127655982971191
    5. '_circle' → logprob: -10.252655982971191
    6. '_cent' → logprob: -10.502655982971191
    7. '_point' → logprob: -11.127655982971191
    8. '_i' → logprob: -11.877655982971191
    9. '_in' → logprob: -13.002655982971191
    10. '_line' → logprob: -13.252655982971191

Token 102: 'sections' (ID: 52783)
  Prédit: 'section'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.024561338126659393
    2. 'sections' → logprob: -4.149561405181885
    3. 'sect' → logprob: -4.774561405181885
    4. 'sects' → logprob: -10.399560928344727
    5. '_' → logprob: -12.524560928344727
    6. 'points' → logprob: -12.899560928344727
    7. 's' → logprob: -13.149560928344727
    8. '```' → logprob: -13.274560928344727
    9. 'sec' → logprob: -13.899560928344727
    10. '_points' → logprob: -13.899560928344727

Token 103: '(c' (ID: 2410)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.7493714690208435
    2. '(c' → logprob: -0.9993714690208435
    3. '(' → logprob: -2.4993715286254883
    4. '(center' → logprob: -2.6243715286254883
    5. '(circle' → logprob: -6.124371528625488
    6. ' (' → logprob: -7.124371528625488
    7. '(cx' → logprob: -7.124371528625488
    8. '((' → logprob: -8.624371528625488
    9. '(C' → logprob: -8.749371528625488
    10. '(x' → logprob: -9.124371528625488

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018839921802282333
    2. 'i' → logprob: -4.2688398361206055
    3. '_i' → logprob: -5.6438398361206055
    4. '):' → logprob: -8.018839836120605
    5. ')' → logprob: -9.018839836120605
    6. '_' → logprob: -9.143839836120605
    7. '(i' → logprob: -9.268839836120605
    8. 'o' → logprob: -9.268839836120605
    9. 'enter' → logprob: -9.643839836120605
    10. '[i' → logprob: -9.643839836120605

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0047049494460225105
    2. '):' → logprob: -5.50470495223999
    3. ' ,' → logprob: -7.87970495223999
    4. '):
' → logprob: -9.129704475402832
    5. ',c' → logprob: -9.504704475402832
    6. ',
' → logprob: -11.504704475402832
    7. 's' → logprob: -11.879704475402832
    8. 'def' → logprob: -12.129704475402832
    9. ')' → logprob: -12.254704475402832
    10. ':' → logprob: -12.379704475402832

Token 106: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.34846216440200806
    2. ' c' → logprob: -1.2234621047973633
    3. ')c' → logprob: -12.348462104797363
    4. ')' → logprob: -12.473462104797363
    5. '<|end|>' → logprob: -12.473462104797363
    6. ' ' → logprob: -13.098462104797363
    7. '	c' → logprob: -14.098462104797363
    8. '):
' → logprob: -14.348462104797363
    9. '  ' → logprob: -15.348462104797363
    10. '<|end|>' → logprob: -15.410962104797363

Token 107: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. 'enter' → logprob: -14.250000953674316
    3. 'ent' → logprob: -15.750000953674316
    4. ' ' → logprob: -17.000001907348633
    5. '２' → logprob: -17.375001907348633
    6. 'ircle' → logprob: -17.500001907348633
    7. '```' → logprob: -17.500001907348633
    8. 'c' → logprob: -17.750001907348633
    9. '):' → logprob: -18.500001907348633
    10. 'entre' → logprob: -18.500001907348633

Token 108: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0027839578688144684
    2. ',' → logprob: -6.25278377532959
    3. '):
' → logprob: -7.12778377532959
    4. ':' → logprob: -10.37778377532959
    5. ')' → logprob: -11.37778377532959
    6. ' ):' → logprob: -12.00278377532959
    7. '):
' → logprob: -13.00278377532959
    8. '   ' → logprob: -14.87778377532959
    9. '):

' → logprob: -15.37778377532959
    10. '}:' → logprob: -15.62778377532959

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18109942972660065
    2. ' (' → logprob: -2.4310994148254395
    3. '):' → logprob: -3.9310994148254395
    4. '(' → logprob: -4.1810994148254395
    5. ':' → logprob: -4.5560994148254395
    6. ',' → logprob: -4.6810994148254395
    7. '(x' → logprob: -5.1810994148254395
    8. '    ' → logprob: -5.3060994148254395
    9. ' x' → logprob: -6.3060994148254395
    10. ')' → logprob: -6.5560994148254395

Token 110: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5729961395263672
    2. 'x' (adapté à ' x') → logprob: -1.4479961395263672
    3. '(x' → logprob: -2.197996139526367
    4. '   ' → logprob: -3.072996139526367
    5. ' (' → logprob: -3.197996139526367
    6. 'import' → logprob: -7.447996139526367
    7. 'd' → logprob: -7.697996139526367
    8. ' d' → logprob: -7.947996139526367
    9. ' r' → logprob: -8.322996139526367
    10. '(cx' → logprob: -8.322996139526367

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018156379461288452
    2. '0' → logprob: -4.0181565284729
    3. 'diff' → logprob: -12.268156051635742
    4. ',' → logprob: -14.143156051635742
    5. '01' → logprob: -15.018156051635742
    6. 'c' → logprob: -15.518156051635742
    7. '_diff' → logprob: -16.143156051635742
    8. 'o' → logprob: -16.518156051635742
    9. '_' → logprob: -16.768156051635742
    10. 'a' → logprob: -16.768156051635742

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015502817404922098
    2. ',y' → logprob: -8.875155448913574
    3. ' ,' → logprob: -11.250155448913574
    4. '=' → logprob: -13.875155448913574
    5. ',
' → logprob: -14.500155448913574
    6. ',x' → logprob: -14.625155448913574
    7. 'y' → logprob: -15.875155448913574
    8. ',c' → logprob: -17.000154495239258
    9. '‌,' → logprob: -17.125154495239258
    10. '_,' → logprob: -17.375154495239258

Token 113: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.026317719370126724
    2. ' y' → logprob: -3.651317834854126
    3. '<|end|>' → logprob: -11.276317596435547
    4. '   ' → logprob: -13.026317596435547
    5. '	y' → logprob: -14.276317596435547
    6. ' ' → logprob: -14.276317596435547
    7. ' =' → logprob: -14.526317596435547
    8. '  ' → logprob: -15.151317596435547
    9. '<|end|>' → logprob: -15.776317596435547
    10. '=' → logprob: -16.526317596435547

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0023540027905255556
    2. ',' → logprob: -6.127354145050049
    3. '=' → logprob: -8.87735366821289
    4. ' =' → logprob: -11.37735366821289
    5. '_' → logprob: -11.62735366821289
    6. 'c' → logprob: -12.50235366821289
    7. '<|end|>' → logprob: -13.25235366821289
    8. ' ' → logprob: -14.50235366821289
    9. '```' → logprob: -15.00235366821289
    10. '0' → logprob: -15.00235366821289

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024922095239162445
    2. '=' → logprob: -3.7749221324920654
    3. ' =' → logprob: -6.399921894073486
    4. ' ,' → logprob: -11.399922370910645
    5. ',c' → logprob: -14.149922370910645
    6. ',x' → logprob: -14.774922370910645
    7. '<|end|>' → logprob: -14.899922370910645
    8. ',y' → logprob: -15.899922370910645
    9. ')' → logprob: -16.274921417236328
    10. ' ' → logprob: -16.399921417236328

Token 116: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.023247575387358665
    2. ' r' → logprob: -3.773247480392456
    3. ' ' → logprob: -13.898247718811035
    4. 'R' → logprob: -14.773247718811035
    5. 'c' → logprob: -15.148247718811035
    6. '	r' → logprob: -15.523247718811035
    7. '   ' → logprob: -15.898247718811035
    8. '  ' → logprob: -16.77324676513672
    9. '```' → logprob: -16.89824676513672
    10. 'z' → logprob: -17.64824676513672

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23887625336647034
    2. '=' → logprob: -1.863876223564148
    3. ' =' → logprob: -2.8638763427734375
    4. ',' → logprob: -8.113876342773438
    5. '_' → logprob: -10.613876342773438
    6. 'c' → logprob: -11.238876342773438
    7. 'x' → logprob: -11.238876342773438
    8. ' ' → logprob: -11.863876342773438
    9. '   ' → logprob: -12.738876342773438
    10. ')' → logprob: -13.113876342773438

Token 118: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2016313523054123
    2. ' =' → logprob: -1.7016313076019287
    3. ',' → logprob: -8.451631546020508
    4. ')' → logprob: -12.576631546020508
    5. ')=' → logprob: -15.326631546020508
    6. '=c' → logprob: -15.701631546020508
    7. 'x' → logprob: -16.451631546020508
    8. '=x' → logprob: -16.576631546020508
    9. '=}' → logprob: -16.701631546020508
    10. '=cut' → logprob: -17.076631546020508

Token 119: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1269291490316391
    2. ' c' → logprob: -2.1269290447235107
    3. '	c' → logprob: -13.87692928314209
    4. ')c' → logprob: -16.876928329467773
    5. ' ' → logprob: -17.001928329467773
    6. '   ' → logprob: -17.126928329467773
    7. '*c' → logprob: -17.251928329467773
    8. '  ' → logprob: -17.626928329467773
    9. '_c' → logprob: -18.251928329467773
    10. 'ci' → logprob: -18.876928329467773

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002270198310725391
    2. 'c' → logprob: -8.750226974487305
    3. '2' → logprob: -10.000226974487305
    4. '[' → logprob: -11.000226974487305
    5. ' c' → logprob: -13.625226974487305
    6. '[c' → logprob: -13.625226974487305
    7. ' ' → logprob: -14.562726974487305
    8. ',c' → logprob: -14.812726974487305
    9. '```' → logprob: -14.875226974487305
    10. '=c' → logprob: -15.125226974487305

Token 121: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43807268142700195
    2. ' =' → logprob: -1.563072681427002
    3. '=' → logprob: -1.938072681427002
    4. ',x' → logprob: -7.563072681427002
    5. '   ' → logprob: -8.688072204589844
    6. 'x' → logprob: -8.688072204589844
    7. '<|end|>' → logprob: -9.813072204589844
    8. ' ,' → logprob: -10.313072204589844
    9. ')' → logprob: -10.313072204589844
    10. '[' → logprob: -10.438072204589844

Token 122: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09303651750087738
    2. '   ' → logprob: -2.968036413192749
    3. ',
' → logprob: -4.343036651611328
    4. '<|end|>' → logprob: -5.093036651611328
    5. ' ' → logprob: -5.343036651611328
    6. ' =' → logprob: -6.093036651611328
    7. '=' → logprob: -6.343036651611328
    8. ' ,' → logprob: -6.718036651611328
    9. '
' → logprob: -6.718036651611328
    10. '    
' → logprob: -6.968036651611328

Token 123: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.18008507788181305
    2. ' x' → logprob: -1.8050850629806519
    3. ' ' → logprob: -8.180085182189941
    4. ' 
' → logprob: -10.680085182189941
    5. ',' → logprob: -11.680085182189941
    6. '	x' → logprob: -12.180085182189941
    7. '  ' → logprob: -12.305085182189941
    8. '    ' → logprob: -12.430085182189941
    9. '0' → logprob: -12.930085182189941
    10. '   ' → logprob: -13.055085182189941

Token 124: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.500004768371582
    3. ',' → logprob: -14.000004768371582
    4. '=' → logprob: -16.875003814697266
    5. '1' → logprob: -17.875003814697266
    6. '_' → logprob: -18.125003814697266
    7. '0' → logprob: -18.625003814697266
    8. ' ,' → logprob: -19.125003814697266
    9. '  ' → logprob: -19.625003814697266
    10. '<|end|>' → logprob: -19.625003814697266

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.3213025744771585e-05
    2. ' ,' → logprob: -10.625033378601074
    3. '<|end|>' → logprob: -12.000033378601074
    4. ',y' → logprob: -13.750033378601074
    5. ',
' → logprob: -14.750033378601074
    6. ',user' → logprob: -14.750033378601074
    7. '=' → logprob: -14.750033378601074
    8. ' ' → logprob: -16.125032424926758
    9. '<|end|>' → logprob: -16.375032424926758
    10. '‌,' → logprob: -16.500032424926758

Token 126: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.0016916078748181462
    2. 'y' → logprob: -6.626691818237305
    3. '<|end|>' → logprob: -8.126691818237305
    4. ' ' → logprob: -9.626691818237305
    5. ' ' → logprob: -12.876691818237305
    6. '<|end|>' → logprob: -14.876691818237305
    7. ' x' → logprob: -15.251691818237305
    8. ',y' → logprob: -15.751691818237305
    9. '	y' → logprob: -15.876691818237305
    10. ',' → logprob: -16.001691818237305

Token 127: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3884260654449463
    2. '1' → logprob: -1.1384260654449463
    3. ',' → logprob: -6.513425827026367
    4. ' ' → logprob: -9.638425827026367
    5. ' ,' → logprob: -13.263425827026367
    6. '<|end|>' → logprob: -13.263425827026367
    7. '  ' → logprob: -14.513425827026367
    8. '3' → logprob: -15.013425827026367
    9. '```' → logprob: -15.388425827026367
    10. '[' → logprob: -15.763425827026367

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.3451433409936726e-05
    2. ' ,' → logprob: -11.375033378601074
    3. '=' → logprob: -11.625033378601074
    4. '<|end|>' → logprob: -12.000033378601074
    5. ',r' → logprob: -12.875033378601074
    6. 'r' → logprob: -13.500033378601074
    7. ' ' → logprob: -13.875033378601074
    8. ' =' → logprob: -13.875033378601074
    9. ',
' → logprob: -14.750033378601074
    10. ')' → logprob: -16.12503433227539

Token 129: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.026304252445697784
    2. 'r' → logprob: -3.651304244995117
    3. ' ' → logprob: -13.276304244995117
    4. ',' → logprob: -14.276304244995117
    5. '<|end|>' → logprob: -14.651304244995117
    6. ',r' → logprob: -15.151304244995117
    7. '	r' → logprob: -15.838804244995117
    8. ' 
' → logprob: -16.338804244995117
    9. 's' → logprob: -16.713804244995117
    10. ' ' → logprob: -16.901304244995117

Token 130: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.375000953674316
    3. ',' → logprob: -15.625000953674316
    4. '=' → logprob: -15.750000953674316
    5. '   ' → logprob: -17.125001907348633
    6. '1' → logprob: -17.250001907348633
    7. '```' → logprob: -17.250001907348633
    8. '[' → logprob: -17.875001907348633
    9. '    ' → logprob: -18.500001907348633
    10. '  ' → logprob: -18.562501907348633

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741302728652954
    2. '=' → logprob: -0.9741302728652954
    3. ',' → logprob: -10.849130630493164
    4. ' ' → logprob: -10.974130630493164
    5. ')' → logprob: -11.599130630493164
    6. '   ' → logprob: -12.474130630493164
    7. ' =
' → logprob: -13.599130630493164
    8. '=

' → logprob: -14.099130630493164
    9. '=
' → logprob: -14.474130630493164
    10. '  ' → logprob: -15.224130630493164

Token 132: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6931604743003845
    2. ' c' → logprob: -0.6931604743003845
    3. 'x' → logprob: -12.193160057067871
    4. '(c' → logprob: -12.943160057067871
    5. '   ' → logprob: -13.068160057067871
    6. ' x' → logprob: -14.068160057067871
    7. ' ' → logprob: -14.068160057067871
    8. '    ' → logprob: -14.693160057067871
    9. ' (' → logprob: -14.818160057067871
    10. '  ' → logprob: -14.943160057067871

Token 133: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6326634883880615
    2. '1' → logprob: -0.7576634883880615
    3. '[' → logprob: -9.88266372680664
    4. ' ' → logprob: -12.13266372680664
    5. '```' → logprob: -12.63266372680664
    6. '_' → logprob: -13.75766372680664
    7. '[
' → logprob: -13.75766372680664
    8. '(' → logprob: -14.38266372680664
    9. '-' → logprob: -15.19516372680664
    10. '   ' → logprob: -15.32016372680664

Token 134: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026545390486717224
    2. '    
' → logprob: -4.651545524597168
    3. '
' → logprob: -4.901545524597168
    4. ',' → logprob: -5.651545524597168
    5. '  
' → logprob: -6.651545524597168
    6. ')' → logprob: -7.026545524597168
    7. ':' → logprob: -7.151545524597168
    8. '<|end|>' → logprob: -7.401545524597168
    9. ' 
' → logprob: -7.526545524597168
    10. '   
' → logprob: -8.026545524597168

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007100724149495363
    2. '    
' → logprob: -5.632100582122803
    3. '
' → logprob: -5.757100582122803
    4. ' 
' → logprob: -9.507101058959961
    5. 'd' → logprob: -9.757101058959961
    6. 'dist' → logprob: -10.132101058959961
    7. 'n' → logprob: -10.257101058959961
    8. '  
' → logprob: -10.757101058959961
    9. 'import' → logprob: -10.882101058959961
    10. 'dx' → logprob: -11.007101058959961

Token 136: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.007008640095591545
    2. ' d' → logprob: -5.2570085525512695
    3. 'dx' → logprob: -7.1320085525512695
    4. '   ' → logprob: -7.1320085525512695
    5. ' dx' → logprob: -9.25700855255127
    6. ' ' → logprob: -10.50700855255127
    7. '	d' → logprob: -11.75700855255127
    8. '    
' → logprob: -11.88200855255127
    9. '#' → logprob: -12.00700855255127
    10. ' 
' → logprob: -12.13200855255127

Token 137: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4742424488067627
    2. '=' → logprob: -0.9742424488067627
    3. 'ist' → logprob: -9.224242210388184
    4. 'istance' → logprob: -9.849242210388184
    5. 'x' → logprob: -11.724242210388184
    6. '	' → logprob: -13.599242210388184
    7. ' ' → logprob: -13.974242210388184
    8. '   ' → logprob: -14.099242210388184
    9. '=

' → logprob: -14.224242210388184
    10. ' =
' → logprob: -14.974242210388184

Token 138: ' dist' (ID: 3601)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.3729691505432129
    2. ' dist' → logprob: -1.622969150543213
    3. 'dist' → logprob: -2.747969150543213
    4. 'math' → logprob: -2.997969150543213
    5. ' ' → logprob: -10.622968673706055
    6. '(math' → logprob: -11.747968673706055
    7. '(dist' → logprob: -12.435468673706055
    8. '	dist' → logprob: -12.685468673706055
    9. 'Math' → logprob: -13.060468673706055
    10. ' ' → logprob: -13.435468673706055

Token 139: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00014776040916331112
    2. '(' → logprob: -9.000147819519043
    3. '([' → logprob: -10.750147819519043
    4. '(
' → logprob: -13.250147819519043
    5. ' ((' → logprob: -15.000147819519043
    6. '(x' → logprob: -15.125147819519043
    7. '<|end|>' → logprob: -15.375147819519043
    8. '(([' → logprob: -16.625146865844727
    9. ' (' → logprob: -16.875146865844727
    10. ' ' → logprob: -17.250146865844727

Token 140: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.014684110297821e-06
    2. ' x' → logprob: -11.625008583068848
    3. ')x' → logprob: -16.750009536743164
    4. '(x' → logprob: -16.875009536743164
    5. '
' → logprob: -18.125009536743164
    6. ')' → logprob: -19.000009536743164
    7. '	x' → logprob: -19.750009536743164
    8. ',x' → logprob: -20.000009536743164
    9. ' ' → logprob: -20.125009536743164
    10. ',' → logprob: -21.000009536743164

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'x' → logprob: -17.5
    3. ',' → logprob: -18.25
    4. ' ' → logprob: -19.0
    5. '(x' → logprob: -19.625
    6. '[' → logprob: -20.0
    7. '```' → logprob: -20.0
    8. '(' → logprob: -21.0
    9. '<|end|>' → logprob: -21.25
    10. ' x' → logprob: -21.4375

Token 142: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016583114862442017
    2. ',y' → logprob: -4.14158296585083
    3. ' ,' → logprob: -7.51658296585083
    4. 'y' → logprob: -13.016583442687988
    5. ',x' → logprob: -13.391583442687988
    6. ' y' → logprob: -14.641583442687988
    7. ',
' → logprob: -15.391583442687988
    8. 'x' → logprob: -16.516582489013672
    9. ' ' → logprob: -16.516582489013672
    10. '‌,' → logprob: -17.516582489013672

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. 'y' → logprob: -15.0
    3. ' y' → logprob: -18.5
    4. ' ' → logprob: -18.625
    5. ',' → logprob: -20.25
    6. '   ' → logprob: -20.75
    7. ',y' → logprob: -21.125
    8. '2' → logprob: -21.375
    9. '```' → logprob: -21.75
    10. 'x' → logprob: -22.375

Token 144: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.05800281837582588
    2. ',' → logprob: -3.1830027103424072
    3. '),(' → logprob: -4.558002948760986
    4. ' ),' → logprob: -5.808002948760986
    5. ' ,' → logprob: -6.683002948760986
    6. ',(' → logprob: -9.433002471923828
    7. ')' → logprob: -10.058002471923828
    8. '(x' → logprob: -10.933002471923828
    9. ',),' → logprob: -13.058002471923828
    10. '(' → logprob: -13.183002471923828

Token 145: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00010926496179308742
    2. ' x' → logprob: -9.125109672546387
    3. '	x' → logprob: -16.50010871887207
    4. ' ' → logprob: -16.50010871887207
    5. '(x' → logprob: -16.75010871887207
    6. '   ' → logprob: -17.75010871887207
    7. ')x' → logprob: -18.75010871887207
    8. '  ' → logprob: -18.75010871887207
    9. '"x' → logprob: -18.87510871887207
    10. '
' → logprob: -19.12510871887207

Token 146: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '1' → logprob: -17.5
    4. ',' → logprob: -17.625
    5. 'x' → logprob: -17.875
    6. '   ' → logprob: -18.625
    7. '```' → logprob: -18.625
    8. '
' → logprob: -19.5625
    9. '۲' → logprob: -20.125
    10. 'y' → logprob: -20.125

Token 147: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0037412908859550953
    2. ',' → logprob: -5.628741264343262
    3. ' ,' → logprob: -8.878741264343262
    4. 'y' → logprob: -14.503741264343262
    5. '1' → logprob: -14.878741264343262
    6. ',
' → logprob: -14.878741264343262
    7. ',x' → logprob: -15.003741264343262
    8. '
' → logprob: -15.753741264343262
    9. ' y' → logprob: -17.003742218017578
    10. ')' → logprob: -17.128742218017578

Token 148: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026646157493814826
    2. 'y' → logprob: -8.250266075134277
    3. ' ' → logprob: -13.625266075134277
    4. '   ' → logprob: -13.750266075134277
    5. ',' → logprob: -14.000266075134277
    6. '```' → logprob: -14.125266075134277
    7. ',y' → logprob: -14.625266075134277
    8. '2' → logprob: -14.750266075134277
    9. ' y' → logprob: -15.875266075134277
    10. '[' → logprob: -16.375267028808594

Token 149: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12698249518871307
    2. ')' → logprob: -2.1269824504852295
    3. ' ))' → logprob: -10.626982688903809
    4. '))
' → logprob: -11.501982688903809
    5. ' )' → logprob: -11.751982688903809
    6. '),' → logprob: -12.251982688903809
    7. '   ' → logprob: -13.251982688903809
    8. ')
' → logprob: -13.251982688903809
    9. ')))' → logprob: -13.501982688903809
    10. '));' → logprob: -14.251982688903809

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015893004834651947
    2. '    
' → logprob: -5.14089298248291
    3. '
' → logprob: -5.26589298248291
    4. ' if' → logprob: -5.76589298248291
    5. '  
' → logprob: -7.39089298248291
    6. 'if' → logprob: -8.26589298248291
    7. '   
' → logprob: -8.26589298248291
    8. ' 
' → logprob: -8.76589298248291
    9. '\n' → logprob: -9.26589298248291
    10. ' ' → logprob: -9.76589298248291

Token 151: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8219467997550964
    2. ' if' → logprob: -1.1969468593597412
    3. 'if' → logprob: -1.5719468593597412
    4. '
' → logprob: -3.571946859359741
    5. '    
' → logprob: -4.696946620941162
    6. ' 
' → logprob: -5.071946620941162
    7. '#' (adapté à ' #') → logprob: -6.446946620941162
    8. '\n' → logprob: -6.571946620941162
    9. ' ' → logprob: -6.821946620941162
    10. '  
' → logprob: -6.821946620941162

Token 152: ' deux' (ID: 10301)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.023720107972621918
    2. ' if' → logprob: -3.7737200260162354
    3. '   ' → logprob: -8.023719787597656
    4. '#' → logprob: -9.023719787597656
    5. 'If' → logprob: -12.023719787597656
    6. '
' → logprob: -12.398719787597656
    7. ' #' → logprob: -12.523719787597656
    8. 'return' → logprob: -12.648719787597656
    9. ' ' → logprob: -13.148719787597656
    10. '0' → logprob: -13.773719787597656

Token 153: ' cer' (ID: 10816)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.46705836057662964
    2. 'if' → logprob: -1.3420584201812744
    3. ' *' → logprob: -3.2170584201812744
    4. '*' → logprob: -3.4670584201812744
    5. ' points' → logprob: -4.467058181762695
    6. ' =' → logprob: -5.092058181762695
    7. ' return' → logprob: -5.467058181762695
    8. '=' → logprob: -5.842058181762695
    9. ')' → logprob: -6.342058181762695
    10. '0' → logprob: -6.467058181762695

Token 154: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.0005253921262919903
    2. 'tes' → logprob: -8.25052547454834
    3. 't' → logprob: -9.37552547454834
    4. 'rc' → logprob: -9.75052547454834
    5. 'cl' → logprob: -10.37552547454834
    6. 'd' → logprob: -10.87552547454834
    7. 'icles' → logprob: -11.25052547454834
    8. 'cules' → logprob: -11.75052547454834
    9. 'cases' → logprob: -11.87552547454834
    10. 'r' → logprob: -12.00052547454834

Token 155: ' s' (ID: 265)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9839776158332825
    2. '   ' → logprob: -1.8589775562286377
    3. '==' → logprob: -2.1089775562286377
    4. 'if' → logprob: -2.2339775562286377
    5. '>' → logprob: -3.1089775562286377
    6. '=' → logprob: -3.1089775562286377
    7. ' if' → logprob: -3.3589775562286377
    8. ':' → logprob: -3.7339775562286377
    9. ',' → logprob: -3.8589775562286377
    10. ' >' → logprob: -4.233977794647217

Token 156: ''inter' (ID: 55731)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.22579391300678253
    2. 'e' → logprob: -1.6007939577102661
    3. 'o' → logprob: -9.350793838500977
    4. ''ont' → logprob: -9.350793838500977
    5. 'ep' → logprob: -9.850793838500977
    6. 'uper' → logprob: -10.350793838500977
    7. 'up' → logprob: -11.475793838500977
    8. 'on' → logprob: -11.725793838500977
    9. ''inter' → logprob: -11.725793838500977
    10. '```' → logprob: -11.725793838500977

Token 157: 'sect' (ID: 16910)
  Prédit: 'sect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -0.022174416109919548
    2. 'touch' → logprob: -5.02217435836792
    3. 'ect' → logprob: -6.02217435836792
    4. 'os' → logprob: -6.02217435836792
    5. 'sent' → logprob: -6.27217435836792
    6. 't' → logprob: -6.89717435836792
    7. 'section' → logprob: -7.02217435836792
    8. 'cut' → logprob: -7.14717435836792
    9. 'sections' → logprob: -7.39717435836792
    10. 'ont' → logprob: -7.39717435836792

Token 158: 'ent' (ID: 299)
  Prédit: 'ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -4.3822154111694545e-05
    2. 'e' → logprob: -10.750043869018555
    3. 'ant' → logprob: -12.500043869018555
    4. 'er' → logprob: -12.750043869018555
    5. '#' → logprob: -12.875043869018555
    6. 'ont' → logprob: -13.125043869018555
    7. 'en' → logprob: -13.250043869018555
    8. 'ion' → logprob: -13.375043869018555
    9. 'nt' → logprob: -13.875043869018555
    10. 'nent' → logprob: -14.250043869018555

Token 159: ' en' (ID: 469)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4303407669067383
    2. ' if' → logprob: -1.8053407669067383
    3. '   ' → logprob: -2.3053407669067383
    4. 'if' → logprob: -3.4303407669067383
    5. 'and' → logprob: -3.5553407669067383
    6. ' et' → logprob: -4.930340766906738
    7. ':' → logprob: -5.055340766906738
    8. ',' → logprob: -5.930340766906738
    9. ' =' → logprob: -6.055340766906738
    10. ' ==' → logprob: -6.430340766906738

Token 160: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.45928603410720825
    2. ' deux' → logprob: -1.8342859745025635
    3. ':' → logprob: -2.7092859745025635
    4. '0' → logprob: -3.3342859745025635
    5. 'de' → logprob: -3.7092859745025635
    6. '2' → logprob: -4.209286212921143
    7. ' trois' → logprob: -4.209286212921143
    8. ' aucun' → logprob: -4.709286212921143
    9. 'tro' → logprob: -5.209286212921143
    10. '3' → logprob: -5.334286212921143

Token 161: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.03809404745697975
    2. ' points' → logprob: -3.2880940437316895
    3. 'pts' → logprob: -11.038094520568848
    4. '_points' → logprob: -11.663094520568848
    5. 'oints' → logprob: -11.913094520568848
    6. '	points' → logprob: -11.913094520568848
    7. 'point' → logprob: -12.163094520568848
    8. 'places' → logprob: -13.288094520568848
    9. ' ' → logprob: -13.413094520568848
    10. 'p' → logprob: -13.663094520568848

Token 162: ' distinct' (ID: 16913)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6050387024879456
    2. ' if' → logprob: -0.8550387024879456
    3. ',' → logprob: -4.355038642883301
    4. 'if' → logprob: -4.605038642883301
    5. ':' → logprob: -5.480038642883301
    6. ' or' → logprob: -7.605038642883301
    7. '  ' → logprob: -8.6050386428833
    8. ' ' → logprob: -8.8550386428833
    9. ' and' → logprob: -9.1050386428833
    10. ' :' → logprob: -9.1050386428833

Token 163: 's' (ID: 82)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6109477281570435
    2. '   ' → logprob: -1.1109477281570435
    3. 'if' → logprob: -2.360947608947754
    4. ',' → logprob: -4.360947608947754
    5. ':' → logprob: -4.485947608947754
    6. ' or' → logprob: -5.610947608947754
    7. 's' → logprob: -6.485947608947754
    8. ' s' → logprob: -6.735947608947754
    9. ' si' → logprob: -6.735947608947754
    10. ' ou' → logprob: -7.360947608947754

Token 164: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5261122584342957
    2. ' if' → logprob: -1.0261123180389404
    3. 'if' → logprob: -3.2761123180389404
    4. ',' → logprob: -4.526112079620361
    5. ':' → logprob: -6.776112079620361
    6. '  ' → logprob: -8.40111255645752
    7. ' or' → logprob: -8.77611255645752
    8. ' ' → logprob: -8.77611255645752
    9. ' and' → logprob: -9.52611255645752
    10. '    ' → logprob: -9.65111255645752

Token 165: ' garanties' (ID: 166756)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3589496314525604
    2. ' if' → logprob: -1.3589496612548828
    3. 'r' → logprob: -4.358949661254883
    4. '   ' → logprob: -4.358949661254883
    5. 's' → logprob: -5.233949661254883
    6. ' si' → logprob: -5.733949661254883
    7. ' s' → logprob: -5.858949661254883
    8. 'si' → logprob: -6.233949661254883
    9. 'd' → logprob: -6.608949661254883
    10. ' r' → logprob: -6.858949661254883

Token 166: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.46079325675964355
    2. '   ' → logprob: -1.9607932567596436
    3. ' if' → logprob: -2.4607932567596436
    4. ':' → logprob: -3.0857932567596436
    5. 'if' → logprob: -3.7107932567596436
    6. ' que' → logprob: -3.8357932567596436
    7. ' by' → logprob: -4.335793495178223
    8. ' ' → logprob: -4.585793495178223
    9. 'par' → logprob: -4.960793495178223
    10. ' si' → logprob: -5.085793495178223

Token 167: ' l' (ID: 305)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5289024710655212
    2. ' r' → logprob: -1.778902530670166
    3. 'd' → logprob: -1.903902530670166
    4. ' d' → logprob: -3.153902530670166
    5. ' ' → logprob: -3.903902530670166
    6. '0' → logprob: -4.403902530670166
    7. 'abs' → logprob: -5.028902530670166
    8. ' les' → logprob: -5.903902530670166
    9. ' abs' → logprob: -6.028902530670166
    10. 'assert' → logprob: -6.653902530670166

Token 168: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0392162911593914
    2. 'd' → logprob: -4.1642165184021
    3. 'e' → logprob: -5.1642165184021
    4. ''' → logprob: -5.4142165184021
    5. '1' → logprob: -6.0392165184021
    6. ' d' → logprob: -6.6642165184021
    7. '0' → logprob: -7.1642165184021
    8. 'r' → logprob: -7.4142165184021
    9. 'abs' → logprob: -7.6642165184021
    10. 'es' → logprob: -7.7892165184021

Token 169: 'én' (ID: 3289)
  Prédit: 'assert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assert' → logprob: -0.04923567920923233
    2. 'abs' → logprob: -3.6742355823516846
    3. 'hyp' → logprob: -4.924235820770264
    4. 'd' → logprob: -5.549235820770264
    5. 'import' → logprob: -5.924235820770264
    6. ''' → logprob: -6.049235820770264
    7. 'problem' → logprob: -7.049235820770264
    8. 'if' → logprob: -7.424235820770264
    9. 'en' → logprob: -7.799235820770264
    10. 'in' → logprob: -7.799235820770264

Token 170: 'oncé' (ID: 59071)
  Prédit: 'oncé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oncé' → logprob: -0.13855895400047302
    2. 'onc' → logprob: -2.638558864593506
    3. 'on' → logprob: -3.263558864593506
    4. 'once' → logprob: -4.513558864593506
    5. 'non' → logprob: -5.013558864593506
    6. 'oncer' → logprob: -7.513558864593506
    7. 'ig' → logprob: -8.138559341430664
    8. 'd' → logprob: -9.013559341430664
    9. 'hyp' → logprob: -9.013559341430664
    10. '0' → logprob: -9.138559341430664

Token 171: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0056077116169035435
    2. '    
' → logprob: -5.755607604980469
    3. '
' → logprob: -6.380607604980469
    4. 'if' → logprob: -7.880607604980469
    5. ' if' → logprob: -8.255607604980469
    6. ',' → logprob: -11.005607604980469
    7. ':' → logprob: -11.130607604980469
    8. '   
' → logprob: -11.255607604980469
    9. '  
' → logprob: -11.380607604980469
    10. '<|end|>' → logprob: -11.880607604980469

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12683160603046417
    2. 'a' → logprob: -2.251831531524658
    3. ' a' → logprob: -4.626831531524658
    4. '    
' → logprob: -6.751831531524658
    5. 'if' → logprob: -6.751831531524658
    6. 'p' → logprob: -7.501831531524658
    7. ' if' → logprob: -7.501831531524658
    8. 'x' → logprob: -9.251832008361816
    9. ' p' → logprob: -9.376832008361816
    10. '
' → logprob: -9.501832008361816

Token 173: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.07727908343076706
    2. ' a' → logprob: -3.0772790908813477
    3. '   ' → logprob: -3.5772790908813477
    4. '    
' → logprob: -8.827279090881348
    5. '
' → logprob: -9.827279090881348
    6. 'ex' → logprob: -10.577279090881348
    7. 'd' → logprob: -10.827279090881348
    8. '```' → logprob: -10.952279090881348
    9. 'if' → logprob: -11.202279090881348
    10. 'p' → logprob: -11.202279090881348

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889088988304138
    2. '=' → logprob: -2.578890800476074
    3. ' ' → logprob: -14.828890800476074
    4. ' =
' → logprob: -15.953890800476074
    5. ',' → logprob: -16.07889175415039
    6. '=int' → logprob: -16.32889175415039
    7. '=a' → logprob: -16.57889175415039
    8. ' =(' → logprob: -17.07889175415039
    9. '=float' → logprob: -17.07889175415039
    10. 'a' → logprob: -17.57889175415039

Token 175: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.009602610021829605
    2. '(x' → logprob: -5.2596025466918945
    3. ' (' → logprob: -5.5096025466918945
    4. '(d' → logprob: -9.009602546691895
    5. '((' → logprob: -9.134602546691895
    6. '(' → logprob: -9.884602546691895
    7. '(dx' → logprob: -11.384602546691895
    8. '(R' → logprob: -11.884602546691895
    9. '(y' → logprob: -13.009602546691895
    10. '(float' → logprob: -13.259602546691895

Token 176: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.147740689106286e-05
    2. ' r' → logprob: -10.12507152557373
    3. '(r' → logprob: -10.37507152557373
    4. '	r' → logprob: -17.125070571899414
    5. '   ' → logprob: -17.250070571899414
    6. 'd' → logprob: -18.500070571899414
    7. ' (' → logprob: -19.375070571899414
    8. ' ' → logprob: -19.625070571899414
    9. '_r' → logprob: -20.250070571899414
    10. ')' → logprob: -20.375070571899414

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. 'r' → logprob: -14.000000953674316
    3. '**' → logprob: -16.750001907348633
    4. '_' → logprob: -16.750001907348633
    5. 'a' → logprob: -17.000001907348633
    6. '(' → logprob: -17.875001907348633
    7. '[' → logprob: -18.000001907348633
    8. '2' → logprob: -18.625001907348633
    9. 'd' → logprob: -19.250001907348633
    10. '0' → logprob: -19.875001907348633

Token 178: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.00037085101939737797
    2. '*r' → logprob: -8.500370979309082
    3. '2' → logprob: -8.875370979309082
    4. '*' → logprob: -10.875370979309082
    5. '²' → logprob: -12.250370979309082
    6. '1' → logprob: -13.500370979309082
    7. '*a' → logprob: -13.625370979309082
    8. '_squared' → logprob: -15.375370979309082
    9. ' **' → logprob: -15.625370979309082
    10. '***' → logprob: -15.875370979309082

Token 179: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -17.250011444091797
    4. '```' → logprob: -17.250011444091797
    5. '**' → logprob: -17.625011444091797
    6. '
' → logprob: -18.000011444091797
    7. ')' → logprob: -18.250011444091797
    8. '²' → logprob: -18.375011444091797
    9. '

' → logprob: -18.500011444091797
    10. '  ' → logprob: -19.062511444091797

Token 180: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0456065870821476
    2. ' +' → logprob: -3.6706066131591797
    3. '-' → logprob: -4.29560661315918
    4. '+' → logprob: -5.29560661315918
    5. '-r' → logprob: -8.29560661315918
    6. ' ' → logprob: -8.92060661315918
    7. '+r' → logprob: -9.67060661315918
    8. ')' → logprob: -10.92060661315918
    9. ' r' → logprob: -11.92060661315918
    10. '   ' → logprob: -13.29560661315918

Token 181: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00010914575977949426
    2. ' r' → logprob: -9.12510871887207
    3. '(r' → logprob: -15.62510871887207
    4. '	r' → logprob: -17.62510871887207
    5. '<|end|>' → logprob: -18.25010871887207
    6. ' ' → logprob: -19.75010871887207
    7. ' (' → logprob: -20.25010871887207
    8. '_r' → logprob: -20.75010871887207
    9. '
' → logprob: -20.87510871887207
    10. '(' → logprob: -20.87510871887207

Token 182: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5822400857578032e-05
    2. '22' → logprob: -11.000025749206543
    3. ' ' → logprob: -13.000025749206543
    4. '24' → logprob: -13.250025749206543
    5. '[' → logprob: -13.875025749206543
    6. '28' → logprob: -13.875025749206543
    7. '20' → logprob: -14.875025749206543
    8. '(' → logprob: -15.000025749206543
    9. '26' → logprob: -15.250025749206543
    10. '```' → logprob: -15.250025749206543

Token 183: '**' (ID: 410)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004446970298886299
    2. '**' → logprob: -6.129446983337402
    3. '+' → logprob: -7.004446983337402
    4. ' ' → logprob: -7.254446983337402
    5. ' +' → logprob: -7.754446983337402
    6. ')' → logprob: -8.504446983337402
    7. '²' → logprob: -12.004446983337402
    8. '1' → logprob: -12.754446983337402
    9. ' **' → logprob: -13.754446983337402
    10. '
' → logprob: -14.629446983337402

Token 184: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00029744720086455345
    2. ' ' → logprob: -8.125297546386719
    3. '**' → logprob: -15.000297546386719
    4. '²' → logprob: -15.125297546386719
    5. '```' → logprob: -15.812797546386719
    6. '   ' → logprob: -16.18779754638672
    7. '(' → logprob: -16.31279754638672
    8. '
' → logprob: -16.56279754638672
    9. '۲' → logprob: -16.56279754638672
    10. '[' → logprob: -17.00029754638672

Token 185: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3132808804512024
    2. '+' → logprob: -1.3132808208465576
    3. ')' → logprob: -11.063281059265137
    4. '+d' → logprob: -13.188281059265137
    5. ' ' → logprob: -14.813281059265137
    6. '+c' → logprob: -15.063281059265137
    7. ' plus' → logprob: -15.188281059265137
    8. '+r' → logprob: -15.313281059265137
    9. '+b' → logprob: -15.813281059265137
    10. 'plus' → logprob: -16.68828010559082

Token 186: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.006716079078614712
    2. ' d' → logprob: -5.006716251373291
    3. ')d' → logprob: -15.381715774536133
    4. '(d' → logprob: -15.506715774536133
    5. ')' → logprob: -16.256715774536133
    6. ' ' → logprob: -16.381715774536133
    7. '	d' → logprob: -16.506715774536133
    8. '
' → logprob: -17.006715774536133
    9. '<|end|>' → logprob: -17.131715774536133
    10. '   ' → logprob: -17.756715774536133

Token 187: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.1466202735900879
    2. '2' → logprob: -2.646620273590088
    3. ')' → logprob: -2.771620273590088
    4. ' )' → logprob: -6.896620273590088
    5. '²' → logprob: -7.021620273590088
    6. ' ' → logprob: -7.521620273590088
    7. ' **' → logprob: -8.52161979675293
    8. '_squared' → logprob: -9.64661979675293
    9. '**)' → logprob: -9.89661979675293
    10. '*' → logprob: -10.02161979675293

Token 188: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0683535037969705e-05
    2. ' ' → logprob: -12.50001049041748
    3. '(' → logprob: -12.62501049041748
    4. '22' → logprob: -13.12501049041748
    5. '
' → logprob: -14.87501049041748
    6. '222' → logprob: -15.50001049041748
    7. '20' → logprob: -15.75001049041748
    8. '24' → logprob: -15.87501049041748
    9. '21' → logprob: -16.250011444091797
    10. '```' → logprob: -16.375011444091797

Token 189: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020652047533076257
    2. ' )' → logprob: -8.50020694732666
    3. ')/(' → logprob: -12.87520694732666
    4. ')/' → logprob: -16.250205993652344
    5. ')
' → logprob: -17.375205993652344
    6. ' ' → logprob: -17.500205993652344
    7. ']' → logprob: -17.625205993652344
    8. '）' → logprob: -18.000205993652344
    9. '   ' → logprob: -18.250205993652344
    10. '```' → logprob: -18.750205993652344

Token 190: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.10342846810817719
    2. ' /' → logprob: -2.728428363800049
    3. '/(' → logprob: -3.478428363800049
    4. ')' → logprob: -6.228428363800049
    5. '/
' → logprob: -10.103428840637207
    6. ')/(' → logprob: -10.228428840637207
    7. ' /(' → logprob: -10.978428840637207
    8. '/d' → logprob: -11.978428840637207
    9. '
' → logprob: -13.228428840637207
    10. ',' → logprob: -13.728428840637207

Token 191: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.723973582556937e-05
    2. ' (' → logprob: -11.000017166137695
    3. '2' → logprob: -14.500017166137695
    4. ' ' → logprob: -18.375017166137695
    5. '(float' → logprob: -19.500017166137695
    6. '   ' → logprob: -19.875017166137695
    7. '(
' → logprob: -20.000017166137695
    8. ',' → logprob: -20.750017166137695
    9. '(double' → logprob: -20.875017166137695
    10. '(int' → logprob: -21.500017166137695

Token 192: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.7835754988482222e-05
    2. ' (' → logprob: -11.125018119812012
    3. '2' → logprob: -12.750018119812012
    4. ' ' → logprob: -17.000017166137695
    5. '   ' → logprob: -18.500017166137695
    6. ')' → logprob: -19.875017166137695
    7. '(
' → logprob: -20.125017166137695
    8. ',' → logprob: -20.625017166137695
    9. '(float' → logprob: -21.625017166137695
    10. ')(' → logprob: -21.750017166137695

Token 193: '*d' (ID: 81685)
  Prédit: '*d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*d' → logprob: -0.03210308402776718
    2. ' *' → logprob: -3.7821030616760254
    3. 'd' → logprob: -5.157103061676025
    4. '*' → logprob: -5.907103061676025
    5. ' d' → logprob: -8.032103538513184
    6. ' ' → logprob: -11.907103538513184
    7. ')' → logprob: -11.907103538513184
    8. '   ' → logprob: -15.032103538513184
    9. '*c' → logprob: -15.407103538513184
    10. '*a' → logprob: -15.657103538513184

Token 194: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.297462171758525e-05
    2. ')
' → logprob: -10.625033378601074
    3. ' )' → logprob: -11.750033378601074
    4. '<|end|>' → logprob: -15.250033378601074
    5. ')
' → logprob: -15.875033378601074
    6. '   ' → logprob: -15.875033378601074
    7. ')

' → logprob: -16.000032424926758
    8. '),' → logprob: -16.750032424926758
    9. ')#' → logprob: -17.375032424926758
    10. 'a' → logprob: -17.375032424926758

Token 195: '   ' (ID: 271)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.03170809522271156
    2. '   ' → logprob: -3.781708002090454
    3. ' h' → logprob: -4.781708240509033
    4. '```' → logprob: -10.656707763671875
    5. '	h' → logprob: -11.906707763671875
    6. 'b' → logprob: -12.531707763671875
    7. 'x' → logprob: -12.906707763671875
    8. '    ' → logprob: -13.906707763671875
    9. '    
' → logprob: -13.906707763671875
    10. '  ' → logprob: -13.906707763671875

Token 196: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -8.2994620242971e-06
    2. ' h' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.250008583068848
    4. '```' → logprob: -17.37500762939453
    5. '(h' → logprob: -17.75000762939453
    6. 'x' → logprob: -17.87500762939453
    7. '	h' → logprob: -18.12500762939453
    8. 'b' → logprob: -18.62500762939453
    9. 'hx' → logprob: -19.25000762939453
    10. '*h' → logprob: -19.50000762939453

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029750484973192215
    2. '=' → logprob: -3.5297505855560303
    3. ' ' → logprob: -17.77975082397461
    4. '=Math' → logprob: -18.52975082397461
    5. '=s' → logprob: -19.02975082397461
    6. '＝' → logprob: -19.40475082397461
    7. 's' → logprob: -19.52975082397461
    8. ',' → logprob: -19.65475082397461
    9. '=h' → logprob: -19.65475082397461
    10. ' =(' → logprob: -19.77975082397461

Token 198: ' math' (ID: 13324)
  Prédit: '(math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.5846174359321594
    2. 'math' → logprob: -0.8346174359321594
    3. ' math' → logprob: -4.834617614746094
    4. '(r' → logprob: -7.459617614746094
    5. ' (' → logprob: -9.209617614746094
    6. '(' → logprob: -11.459617614746094
    7. '(m' → logprob: -13.584617614746094
    8. '(d' → logprob: -14.209617614746094
    9. '(x' → logprob: -14.459617614746094
    10. '   ' → logprob: -14.584617614746094

Token 199: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.00014299227041192353
    2. 'sqrt' → logprob: -8.875143051147461
    3. '.' → logprob: -12.875143051147461
    4. '.sin' → logprob: -14.750143051147461
    5. ' sqrt' → logprob: -16.75014305114746
    6. '√' → logprob: -17.12514305114746
    7. '.Sqrt' → logprob: -17.12514305114746
    8. '```' → logprob: -17.87514305114746
    9. 's' → logprob: -18.00014305114746
    10. '.pow' → logprob: -18.50014305114746

Token 200: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -9.13388703338569e-06
    2. '(abs' → logprob: -12.375009536743164
    3. 'r' → logprob: -12.875009536743164
    4. '(' → logprob: -13.500009536743164
    5. '((' → logprob: -14.125009536743164
    6. '(max' → logprob: -15.500009536743164
    7. ' (' → logprob: -17.625009536743164
    8. 'abs' → logprob: -18.500009536743164
    9. ' r' → logprob: -20.000009536743164
    10. '(
' → logprob: -20.000009536743164

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014561474381480366
    2. '2' → logprob: -8.87514591217041
    3. ' ' → logprob: -12.50014591217041
    4. '**' → logprob: -13.50014591217041
    5. '(' → logprob: -15.50014591217041
    6. 'a' → logprob: -15.50014591217041
    7. '(r' → logprob: -15.75014591217041
    8. 'r' → logprob: -17.000144958496094
    9. '(a' → logprob: -17.000144958496094
    10. '[' → logprob: -17.500144958496094

Token 202: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.4288141429424286
    2. '2' → logprob: -1.053814172744751
    3. ' ' → logprob: -10.178813934326172
    4. '*' → logprob: -10.303813934326172
    5. '²' → logprob: -10.553813934326172
    6. '[' → logprob: -12.053813934326172
    7. '```' → logprob: -12.053813934326172
    8. '^' → logprob: -13.303813934326172
    9. '(' → logprob: -14.178813934326172
    10. ' **' → logprob: -14.303813934326172

Token 203: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003849133790936321
    2. ' ' → logprob: -7.87538480758667
    3. '   ' → logprob: -13.250385284423828
    4. '```' → logprob: -13.500385284423828
    5. '**' → logprob: -13.750385284423828
    6. '
' → logprob: -16.250385284423828
    7. '  ' → logprob: -16.250385284423828
    8. '(' → logprob: -16.500385284423828
    9. '²' → logprob: -16.875385284423828
    10. '۲' → logprob: -17.250385284423828

Token 204: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.048672985285520554
    2. '-' → logprob: -3.048672914505005
    3. ')' → logprob: -10.048672676086426
    4. ' ' → logprob: -10.298672676086426
    5. '   ' → logprob: -12.173672676086426
    6. '*' → logprob: -13.673672676086426
    7. ',' → logprob: -14.673672676086426
    8. '-h' → logprob: -14.923672676086426
    9. ' ' → logprob: -15.673672676086426
    10. '  ' → logprob: -15.673672676086426

Token 205: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019286326132714748
    2. ' a' → logprob: -6.251928806304932
    3. 'h' → logprob: -17.751928329467773
    4. ' ' → logprob: -18.001928329467773
    5. '   ' → logprob: -18.501928329467773
    6. '	a' → logprob: -19.376928329467773
    7. '(a' → logprob: -19.626928329467773
    8. '  ' → logprob: -20.751928329467773
    9. '
' → logprob: -21.126928329467773
    10. ' h' → logprob: -21.501928329467773

Token 206: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0015498562715947628
    2. '2' → logprob: -6.50154972076416
    3. '*' → logprob: -10.00154972076416
    4. '²' → logprob: -13.25154972076416
    5. '**)' → logprob: -15.75154972076416
    6. ' **' → logprob: -16.001550674438477
    7. '^' → logprob: -16.251550674438477
    8. ' ' → logprob: -16.626550674438477
    9. '```' → logprob: -17.251550674438477
    10. '[' → logprob: -18.126550674438477

Token 207: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. '²' → logprob: -16.37502098083496
    4. '22' → logprob: -17.00002098083496
    5. '**' → logprob: -17.25002098083496
    6. '```' → logprob: -17.25002098083496
    7. '۲' → logprob: -17.50002098083496
    8. '
' → logprob: -18.25002098083496
    9. '   ' → logprob: -18.81252098083496
    10. '{' → logprob: -18.93752098083496

Token 208: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47412049770355225
    2. ')
' → logprob: -0.9741204977035522
    3. ')
' → logprob: -10.224120140075684
    4. ' )
' → logprob: -12.474120140075684
    5. ' )' → logprob: -13.349120140075684
    6. ')

' → logprob: -13.724120140075684
    7. '   ' → logprob: -14.224120140075684
    8. ' ' → logprob: -17.97412109375
    9. '),' → logprob: -18.47412109375
    10. ').' → logprob: -18.59912109375

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04341099038720131
    2. 'x' → logprob: -3.4184110164642334
    3. ' x' → logprob: -5.418410778045654
    4. 'px' → logprob: -6.293410778045654
    5. 'xs' → logprob: -7.418410778045654
    6. ' ' → logprob: -7.543410778045654
    7. 'xm' → logprob: -7.793410778045654
    8. '  ' → logprob: -7.918410778045654
    9. 'cx' → logprob: -8.043411254882812
    10. '    ' → logprob: -8.668411254882812

Token 210: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004047056194394827
    2. 'xm' → logprob: -5.87904691696167
    3. '2' → logprob: -7.87904691696167
    4. 'xs' → logprob: -8.504047393798828
    5. 'cx' → logprob: -8.504047393798828
    6. 'px' → logprob: -8.754047393798828
    7. ' x' → logprob: -9.754047393798828
    8. 'dx' → logprob: -9.879047393798828
    9. 'xr' → logprob: -10.254047393798828
    10. 'ex' → logprob: -10.504047393798828

Token 211: ' point' (ID: 2438)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07179513573646545
    2. 'xm' → logprob: -2.8217952251434326
    3. 'px' → logprob: -4.6967949867248535
    4. '(x' → logprob: -8.321795463562012
    5. 'xs' → logprob: -8.946795463562012
    6. 'Px' → logprob: -9.946795463562012
    7. 'mx' → logprob: -10.071795463562012
    8. '2' → logprob: -10.321795463562012
    9. 'xp' → logprob: -10.696795463562012
    10. '	x' → logprob: -10.946795463562012

Token 212: ' P' (ID: 398)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.21145716309547424
    2. 'x' → logprob: -1.7114571332931519
    3. '_x' → logprob: -5.961457252502441
    4. 'px' → logprob: -6.086457252502441
    5. '(x' → logprob: -6.211457252502441
    6. ' ' → logprob: -7.336457252502441
    7. 'Px' → logprob: -7.336457252502441
    8. '(' → logprob: -8.336457252502441
    9. 'ex' → logprob: -8.461457252502441
    10. '0' → logprob: -8.586457252502441

Token 213: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.17426368594169617
    2. '2' → logprob: -1.9242637157440186
    3. '_x' → logprob: -4.7992634773254395
    4. '0' → logprob: -6.1742634773254395
    5. ' ' → logprob: -6.4242634773254395
    6. ' =' → logprob: -7.7992634773254395
    7. '3' → logprob: -8.049263954162598
    8. 'ex' → logprob: -8.174263954162598
    9. '(x' → logprob: -8.424263954162598
    10. ' x' → logprob: -8.799263954162598

Token 214: ' projection' (ID: 41244)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.023431232199072838
    2. 'px' → logprob: -4.523431301116943
    3. ' x' → logprob: -4.898431301116943
    4. 'Px' → logprob: -6.398431301116943
    5. 'xp' → logprob: -7.023431301116943
    6. ' px' → logprob: -7.023431301116943
    7. 'cx' → logprob: -8.023430824279785
    8. '(px' → logprob: -8.023430824279785
    9. '_px' → logprob: -8.398430824279785
    10. '(x' → logprob: -9.648430824279785

Token 215: ' de' (ID: 334)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11724208295345306
    2. '_x' → logprob: -2.8672420978546143
    3. ' x' → logprob: -3.7422420978546143
    4. ' =' → logprob: -4.367241859436035
    5. '(px' → logprob: -5.742241859436035
    6. '=' → logprob: -5.867241859436035
    7. '   ' → logprob: -5.992241859436035
    8. ' px' → logprob: -6.617241859436035
    9. 'px' → logprob: -6.742241859436035
    10. '(x' → logprob: -7.117241859436035

Token 216: ' l' (ID: 305)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.05273266136646271
    2. 'x' → logprob: -3.3027327060699463
    3. ' (' → logprob: -4.677732467651367
    4. 'l' → logprob: -6.802732467651367
    5. '((' → logprob: -7.052732467651367
    6. '0' → logprob: -7.927732467651367
    7. 'line' → logprob: -8.177732467651367
    8. 'p' → logprob: -8.177732467651367
    9. '(' → logprob: -8.302732467651367
    10. 'P' → logprob: -8.552732467651367

Token 217: ''inter' (ID: 55731)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3281814754009247
    2. '(x' → logprob: -1.453181505203247
    3. '1' → logprob: -4.203181266784668
    4. '(' → logprob: -4.453181266784668
    5. ' (' → logprob: -5.453181266784668
    6. ' x' → logprob: -5.578181266784668
    7. '((' → logprob: -6.328181266784668
    8. '(
' → logprob: -6.578181266784668
    9. 'Point' → logprob: -6.828181266784668
    10. 'a' → logprob: -7.328181266784668

Token 218: 'section' (ID: 6471)
  Prédit: 'sect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -0.5378005504608154
    2. 'section' → logprob: -1.2878005504608154
    3. 'x' → logprob: -2.9128005504608154
    4. '(x' → logprob: -3.1628005504608154
    5. '1' → logprob: -4.4128007888793945
    6. 'sec' → logprob: -5.1628007888793945
    7. '(' → logprob: -5.2878007888793945
    8. 'mé' → logprob: -5.9128007888793945
    9. '       ' → logprob: -6.0378007888793945
    10. 'mediate' → logprob: -6.1628007888793945

Token 219: ' sur' (ID: 1512)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05841084197163582
    2. '(px' → logprob: -3.683410882949829
    3. 'px' → logprob: -4.55841064453125
    4. '_x' → logprob: -5.05841064453125
    5. '(x' → logprob: -5.68341064453125
    6. ' x' → logprob: -6.30841064453125
    7. '(cx' → logprob: -6.80841064453125
    8. 'mx' → logprob: -6.93341064453125
    9. '_px' → logprob: -6.93341064453125
    10. 'base' → logprob: -6.93341064453125

Token 220: ' la' (ID: 557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7088581323623657
    2. ' (' → logprob: -1.2088581323623657
    3. '(x' → logprob: -2.458858013153076
    4. ' la' → logprob: -3.708858013153076
    5. 'line' → logprob: -3.708858013153076
    6. 'the' → logprob: -3.958858013153076
    7. ' x' → logprob: -4.083858013153076
    8. '((' → logprob: -4.333858013153076
    9. ' the' → logprob: -4.833858013153076
    10. ' line' → logprob: -4.958858013153076

Token 221: ' droite' (ID: 61428)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16443416476249695
    2. 'line' → logprob: -2.1644341945648193
    3. ' line' → logprob: -3.7894341945648193
    4. 'ligne' → logprob: -5.41443395614624
    5. ' ligne' → logprob: -5.78943395614624
    6. 'segment' → logprob: -6.16443395614624
    7. ' segment' → logprob: -6.91443395614624
    8. ' x' → logprob: -6.91443395614624
    9. ' (' → logprob: -7.16443395614624
    10. 'l' → logprob: -7.41443395614624

Token 222: ' entre' (ID: 3853)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07824621349573135
    2. 'px' → logprob: -3.0782461166381836
    3. 'ox' → logprob: -4.328246116638184
    4. 'mx' → logprob: -5.828246116638184
    5. ' x' → logprob: -6.078246116638184
    6. 'Px' → logprob: -6.578246116638184
    7. 'cx' → logprob: -6.703246116638184
    8. 'line' → logprob: -6.828246116638184
    9. 'dx' → logprob: -6.953246116638184
    10. 'ex' → logprob: -6.953246116638184

Token 223: ' centres' (ID: 43504)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.38061025738716125
    2. 'x' → logprob: -1.2556102275848389
    3. ' (' → logprob: -3.505610227584839
    4. ' x' → logprob: -6.505610466003418
    5. '(' → logprob: -9.130610466003418
    6. '[x' → logprob: -11.755610466003418
    7. ' ' → logprob: -13.255610466003418
    8. 'c' → logprob: -13.380610466003418
    9. ',x' → logprob: -13.380610466003418
    10. '#' → logprob: -13.505610466003418

Token 224: '
' (ID: 198)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.30013445019721985
    2. ' x' → logprob: -1.4251344203948975
    3. '   ' → logprob: -4.175134658813477
    4. 'px' → logprob: -6.800134658813477
    5. ' px' → logprob: -7.675134658813477
    6. '_x' → logprob: -7.800134658813477
    7. ' Px' → logprob: -8.175134658813477
    8. 'Px' → logprob: -8.425134658813477
    9. ' ' → logprob: -8.425134658813477
    10. '(x' → logprob: -9.050134658813477

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45007267594337463
    2. 'x' → logprob: -1.8250726461410522
    3. 'px' → logprob: -2.325072765350342
    4. ' px' → logprob: -3.075072765350342
    5. ' x' → logprob: -3.200072765350342
    6. ' Px' → logprob: -5.450072765350342
    7. 'cx' → logprob: -5.700072765350342
    8. 'Px' → logprob: -6.200072765350342
    9. '_px' → logprob: -6.575072765350342
    10. '(px' → logprob: -6.575072765350342

Token 226: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.08384514600038528
    2. 'px' → logprob: -2.5838451385498047
    3. ' x' → logprob: -6.208845138549805
    4. 'Px' → logprob: -6.708845138549805
    5. ' px' → logprob: -7.208845138549805
    6. 'xm' → logprob: -7.583845138549805
    7. 'cx' → logprob: -8.708845138549805
    8. 'xs' → logprob: -9.458845138549805
    9. 'xp' → logprob: -9.708845138549805
    10. 'mx' → logprob: -9.958845138549805

Token 227: '3' (ID: 18)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8028445839881897
    2. '=' → logprob: -1.677844524383545
    3. ' =' → logprob: -1.677844524383545
    4. '2' → logprob: -2.552844524383545
    5. 'p' → logprob: -3.052844524383545
    6. '3' → logprob: -3.302844524383545
    7. '1' → logprob: -4.927844524383545
    8. 'a' → logprob: -5.802844524383545
    9. '=x' → logprob: -6.552844524383545
    10. 'base' → logprob: -6.677844524383545

Token 228: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408339381217957
    2. '=' → logprob: -0.974083423614502
    3. ',' → logprob: -12.224082946777344
    4. '=x' → logprob: -14.099082946777344
    5. ' ' → logprob: -14.849082946777344
    6. 'x' → logprob: -16.349082946777344
    7. ' ,' → logprob: -17.224082946777344
    8. '.' → logprob: -17.599082946777344
    9. '＝' → logprob: -17.724082946777344
    10. ')' → logprob: -17.724082946777344

Token 229: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007099286303855479
    2. ' x' → logprob: -7.2507100105285645
    3. '	x' → logprob: -18.625709533691406
    4. '(x' → logprob: -20.625709533691406
    5. ' ' → logprob: -20.625709533691406
    6. '   ' → logprob: -21.625709533691406
    7. ',x' → logprob: -22.000709533691406
    8. '"x' → logprob: -22.125709533691406
    9. '_x' → logprob: -23.375709533691406
    10. ')x' → logprob: -23.625709533691406

Token 230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -18.875
    3. ' ' → logprob: -19.375
    4. 'import' → logprob: -20.6875
    5. 'diff' → logprob: -20.9375
    6. 'x' → logprob: -20.9375
    7. '[' → logprob: -21.0
    8. '<|end|>' → logprob: -21.0
    9. '１' → logprob: -21.1875
    10. '(' → logprob: -21.25

Token 231: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47410938143730164
    2. ' +' → logprob: -0.974109411239624
    3. '+x' → logprob: -10.724109649658203
    4. '+(' → logprob: -12.849109649658203
    5. '+a' → logprob: -13.349109649658203
    6. ' +
' → logprob: -13.974109649658203
    7. '+
' → logprob: -13.974109649658203
    8. ' plus' → logprob: -14.224109649658203
    9. '+y' → logprob: -14.599109649658203
    10. ',' → logprob: -15.099109649658203

Token 232: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.061977993696928024
    2. ' a' → logprob: -2.8119781017303467
    3. '(a' → logprob: -11.561978340148926
    4. ' (' → logprob: -14.311978340148926
    5. '	a' → logprob: -15.686978340148926
    6. ' ' → logprob: -16.31197738647461
    7. '(' → logprob: -17.81197738647461
    8. '   ' → logprob: -18.43697738647461
    9. '```' → logprob: -19.06197738647461
    10. ' ' → logprob: -19.43697738647461

Token 233: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.2124328315258026
    2. '*' → logprob: -2.087432861328125
    3. ' *' → logprob: -2.712432861328125
    4. '(x' → logprob: -7.837432861328125
    5. '*((' → logprob: -8.462432861328125
    6. '*d' → logprob: -8.962432861328125
    7. '/d' → logprob: -9.212432861328125
    8. '(dx' → logprob: -9.337432861328125
    9. '(d' → logprob: -10.337432861328125
    10. ' (' → logprob: -10.837432861328125

Token 234: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.31327685713768005
    2. 'x' → logprob: -1.3132768869400024
    3. ' (' → logprob: -11.188277244567871
    4. ' x' → logprob: -13.938277244567871
    5. ',x' → logprob: -15.688277244567871
    6. '	x' → logprob: -16.563276290893555
    7. '"x' → logprob: -16.813276290893555
    8. '(' → logprob: -16.938276290893555
    9. '[x' → logprob: -17.938276290893555
    10. '-x' → logprob: -18.188276290893555

Token 235: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' -' → logprob: -16.75
    3. '```' → logprob: -18.125
    4. '۲' → logprob: -18.625
    5. ' ' → logprob: -18.875
    6. '
' → logprob: -19.5
    7. '２' → logprob: -19.625
    8. '২' → logprob: -20.375
    9. '₂' → logprob: -20.875
    10. '   ' → logprob: -21.25

Token 236: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03805583342909813
    2. '-' → logprob: -3.288055896759033
    3. '-x' → logprob: -11.163055419921875
    4. ' ' → logprob: -15.913055419921875
    5. 'x' → logprob: -17.788055419921875
    6. ' –' → logprob: -18.663055419921875
    7. ' -
' → logprob: -19.288055419921875
    8. ',' → logprob: -19.413055419921875
    9. ' ' → logprob: -19.788055419921875
    10. '−' → logprob: -20.038055419921875

Token 237: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.5491004129871726e-05
    2. ' x' → logprob: -10.000045776367188
    3. ')x' → logprob: -20.375045776367188
    4. '	x' → logprob: -20.625045776367188
    5. '<|end|>' → logprob: -22.375045776367188
    6. '(x' → logprob: -22.625045776367188
    7. ')' → logprob: -23.000045776367188
    8. ',x' → logprob: -23.375045776367188
    9. ' ' → logprob: -23.500045776367188
    10. '   ' → logprob: -23.625045776367188

Token 238: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.75
    3. ')' → logprob: -15.875
    4. ' -' → logprob: -16.875
    5. '```' → logprob: -17.625
    6. '<|end|>' → logprob: -17.875
    7. '   ' → logprob: -19.125
    8. ')/' → logprob: -19.3125
    9. '  ' → logprob: -19.4375
    10. '[' → logprob: -19.4375

Token 239: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47410500049591064
    2. ')/' → logprob: -0.9741050004959106
    3. ' )' → logprob: -10.599104881286621
    4. ')/(' → logprob: -12.724104881286621
    5. ')
' → logprob: -16.599105834960938
    6. ')

' → logprob: -18.349105834960938
    7. 'd' → logprob: -18.724105834960938
    8. '),' → logprob: -19.099105834960938
    9. ')d' → logprob: -19.099105834960938
    10. ')+' → logprob: -19.224105834960938

Token 240: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -7.941850526549388e-06
    2. ' d' → logprob: -11.750007629394531
    3. '	d' → logprob: -21.62500762939453
    4. '   ' → logprob: -22.12500762939453
    5. ' ' → logprob: -22.37500762939453
    6. ')d' → logprob: -22.75000762939453
    7. '
' → logprob: -22.87500762939453
    8. '>d' → logprob: -23.00000762939453
    9. '*d' → logprob: -24.50000762939453
    10. '  ' → logprob: -24.50000762939453

Token 241: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2116756439208984
    2. '   ' → logprob: -1.2116756439208984
    3. ' y' → logprob: -1.4616756439208984
    4. 'y' → logprob: -2.4616756439208984
    5. '<|end|>' → logprob: -3.5866756439208984
    6. '    
' → logprob: -3.7116756439208984
    7. '  
' → logprob: -4.336675643920898
    8. ' 
' → logprob: -4.586675643920898
    9. ',' → logprob: -5.711675643920898
    10. '   
' → logprob: -6.086675643920898

Token 242: '   ' (ID: 271)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5331144332885742
    2. 'y' → logprob: -0.9081144332885742
    3. '   ' → logprob: -4.783114433288574
    4. '
' → logprob: -7.408114433288574
    5. '    
' → logprob: -7.908114433288574
    6. '  
' → logprob: -8.408114433288574
    7. ' ' → logprob: -9.283114433288574
    8. ' 
' → logprob: -9.533114433288574
    9. '	y' → logprob: -9.533114433288574
    10. ',' → logprob: -10.408114433288574

Token 243: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.4740770161151886
    2. ' y' → logprob: -0.9740769863128662
    3. '	y' → logprob: -19.099077224731445
    4. '   ' → logprob: -19.974077224731445
    5. '_y' → logprob: -20.474077224731445
    6. ' ' → logprob: -20.599077224731445
    7. 'x' → logprob: -20.599077224731445
    8. ' ' → logprob: -21.349077224731445
    9. ',y' → logprob: -22.224077224731445
    10. 'Y' → logprob: -22.349077224731445

Token 244: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.282920129597187e-05
    2. '1' → logprob: -11.375012397766113
    3. '_' → logprob: -14.250012397766113
    4. '۳' → logprob: -15.500012397766113
    5. ' ' → logprob: -16.00001335144043
    6. 'y' → logprob: -16.25001335144043
    7. '³' → logprob: -17.25001335144043
    8. '   ' → logprob: -17.37501335144043
    9. '```' → logprob: -17.62501335144043
    10. ' y' → logprob: -17.93751335144043

Token 245: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38945186138153076
    2. ' =' → logprob: -1.1394518613815308
    3. '+' → logprob: -6.38945198059082
    4. ' +' → logprob: -7.26445198059082
    5. '<|end|>' → logprob: -8.88945198059082
    6. ' +=' → logprob: -10.38945198059082
    7. '+=' → logprob: -11.63945198059082
    8. ' ' → logprob: -11.88945198059082
    9. ')' → logprob: -12.01445198059082
    10. ',' → logprob: -13.13945198059082

Token 246: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.006715370807796717
    2. ' y' → logprob: -5.006715297698975
    3. '	y' → logprob: -18.756715774536133
    4. '   ' → logprob: -20.006715774536133
    5. '(y' → logprob: -22.631715774536133
    6. ' ' → logprob: -23.131715774536133
    7. ')y' → logprob: -23.131715774536133
    8. ''y' → logprob: -23.381715774536133
    9. '=y' → logprob: -24.256715774536133
    10. 'yb' → logprob: -24.381715774536133

Token 247: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.011088262312114239
    2. '1' → logprob: -4.5110883712768555
    3. '+' → logprob: -10.511088371276855
    4. 'y' → logprob: -11.886088371276855
    5. ' ' → logprob: -13.261088371276855
    6. ' y' → logprob: -13.761088371276855
    7. '2' → logprob: -13.761088371276855
    8. ' +' → logprob: -14.011088371276855
    9. '   ' → logprob: -14.886088371276855
    10. '```' → logprob: -15.261088371276855

Token 248: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10020763427019119
    2. '+' → logprob: -2.350207567214966
    3. '+a' → logprob: -14.725207328796387
    4. '+h' → logprob: -15.475207328796387
    5. '+y' → logprob: -15.975207328796387
    6. '<|end|>' → logprob: -15.975207328796387
    7. ' +
' → logprob: -16.600208282470703
    8. ' plus' → logprob: -17.100208282470703
    9. '＋' → logprob: -17.350208282470703
    10. ' ' → logprob: -17.475208282470703

Token 249: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12692904472351074
    2. ' a' → logprob: -2.1269290447235107
    3. '	a' → logprob: -14.37692928314209
    4. 'h' → logprob: -15.12692928314209
    5. ' h' → logprob: -17.001928329467773
    6. '(a' → logprob: -17.126928329467773
    7. ' ' → logprob: -17.251928329467773
    8. '   ' → logprob: -17.501928329467773
    9. '#a' → logprob: -18.001928329467773
    10. ')a' → logprob: -18.501928329467773

Token 250: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.0390615314245224
    2. '*' → logprob: -3.2890615463256836
    3. ' *' → logprob: -6.914061546325684
    4. '(y' → logprob: -11.664061546325684
    5. '(' → logprob: -12.039061546325684
    6. '*((' → logprob: -12.164061546325684
    7. ' (' → logprob: -12.914061546325684
    8. ' *(' → logprob: -13.414061546325684
    9. '<|end|>' → logprob: -13.789061546325684
    10. '*y' → logprob: -14.414061546325684

Token 251: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.004124349914491177
    2. '(y' → logprob: -5.504124164581299
    3. ' y' → logprob: -10.004124641418457
    4. '	y' → logprob: -14.629124641418457
    5. ')y' → logprob: -16.37912368774414
    6. '   ' → logprob: -17.50412368774414
    7. ''y' → logprob: -17.62912368774414
    8. ',y' → logprob: -17.75412368774414
    9. ' (' → logprob: -17.87912368774414
    10. '*y' → logprob: -18.50412368774414

Token 252: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04489783197641373
    2. ' -' → logprob: -3.4198977947235107
    3. '-' → logprob: -4.66989803314209
    4. '1' → logprob: -6.91989803314209
    5. '3' → logprob: -7.54489803314209
    6. ' ' → logprob: -9.29489803314209
    7. '   ' → logprob: -9.91989803314209
    8. ')' → logprob: -10.04489803314209
    9. 'y' → logprob: -10.29489803314209
    10. ' y' → logprob: -11.04489803314209

Token 253: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.007768701296299696
    2. '-' → logprob: -4.882768630981445
    3. '-y' → logprob: -8.882768630981445
    4. ')' → logprob: -11.382768630981445
    5. ' ' → logprob: -11.882768630981445
    6. '(y' → logprob: -12.882768630981445
    7. ')/' → logprob: -14.632768630981445
    8. '   ' → logprob: -14.757768630981445
    9. 'y' → logprob: -14.882768630981445
    10. '1' → logprob: -15.257768630981445

Token 254: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0011724866926670074
    2. ' y' → logprob: -6.7511725425720215
    3. '1' → logprob: -13.126172065734863
    4. '(y' → logprob: -16.00117301940918
    5. ')y' → logprob: -16.50117301940918
    6. '	y' → logprob: -18.12617301940918
    7. ')' → logprob: -18.50117301940918
    8. 'd' → logprob: -19.00117301940918
    9. ' ' → logprob: -19.12617301940918
    10. 'c' → logprob: -19.37617301940918

Token 255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.610702363715973e-06
    2. ')' → logprob: -11.875009536743164
    3. '3' → logprob: -13.250009536743164
    4. ' ' → logprob: -15.500009536743164
    5. ')/' → logprob: -15.625009536743164
    6. '```' → logprob: -15.625009536743164
    7. '2' → logprob: -16.250009536743164
    8. '-' → logprob: -17.000009536743164
    9. ')/(' → logprob: -17.250009536743164
    10. ')**' → logprob: -17.750009536743164

Token 256: ')/' (ID: 11876)
  Prédit: ')/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.018154270946979523
    2. ')' → logprob: -4.018154144287109
    3. ' )' → logprob: -12.64315414428711
    4. '/' → logprob: -14.51815414428711
    5. '   ' → logprob: -14.89315414428711
    6. ' ' → logprob: -16.64315414428711
    7. ')
' → logprob: -16.89315414428711
    8. ')d' → logprob: -17.64315414428711
    9. ')
/' → logprob: -17.64315414428711
    10. '/d' → logprob: -17.89315414428711

Token 257: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.9361264946837764e-07
    2. ' d' → logprob: -15.75
    3. 'dist' → logprob: -18.125
    4. '   ' → logprob: -21.625
    5. ' ' → logprob: -23.125
    6. ')d' → logprob: -23.125
    7. '	d' → logprob: -23.625
    8. '2' → logprob: -24.5
    9. '<|end|>' → logprob: -24.5
    10. '
' → logprob: -24.625

Token 258: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04130716249346733
    2. 'x' → logprob: -3.791307210922241
    3. '
' → logprob: -5.041306972503662
    4. ' x' → logprob: -5.666306972503662
    5. ',' → logprob: -6.041306972503662
    6. '  
' → logprob: -6.791306972503662
    7. '    
' → logprob: -7.041306972503662
    8. ' dx' → logprob: -7.291306972503662
    9. 'dx' → logprob: -7.291306972503662
    10. '\n' → logprob: -7.916306972503662

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02590613253414631
    2. 'x' → logprob: -4.150906085968018
    3. ' x' → logprob: -5.775906085968018
    4. '
' → logprob: -6.650906085968018
    5. 'dx' → logprob: -6.650906085968018
    6. ' dx' → logprob: -6.650906085968018
    7. 'px' → logprob: -8.150906562805176
    8. ' +' → logprob: -8.275906562805176
    9. '  
' → logprob: -8.400906562805176
    10. ' px' → logprob: -8.525906562805176

Token 260: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.28261417150497437
    2. 'rx' → logprob: -2.157614231109619
    3. 'px' → logprob: -2.907614231109619
    4. 'dx' → logprob: -3.282614231109619
    5. 'offset' → logprob: -4.282614231109619
    6. 'xs' → logprob: -4.907614231109619
    7. ' x' → logprob: -5.032614231109619
    8. ' rx' → logprob: -5.657614231109619
    9. ' dx' → logprob: -6.782614231109619
    10. '   ' → logprob: -7.032614231109619

Token 261: ' les' (ID: 1341)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.1365300714969635
    2. 'px' → logprob: -2.5115301609039307
    3. 'offset' → logprob: -4.261529922485352
    4. ' rx' → logprob: -4.386529922485352
    5. 'xs' → logprob: -5.011529922485352
    6. 'x' → logprob: -5.511529922485352
    7. 'dx' → logprob: -6.011529922485352
    8. ' px' → logprob: -6.261529922485352
    9. 'Rx' → logprob: -6.511529922485352
    10. 'p' → logprob: -7.136529922485352

Token 262: ' deux' (ID: 10301)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6156995892524719
    2. 'px' → logprob: -0.9906995892524719
    3. '(x' → logprob: -3.240699529647827
    4. 'xp' → logprob: -4.240699768066406
    5. 'xs' → logprob: -4.740699768066406
    6. ' px' → logprob: -4.990699768066406
    7. 'rx' → logprob: -5.240699768066406
    8. 'offset' → logprob: -6.240699768066406
    9. 'intersection' → logprob: -6.240699768066406
    10. 'dx' → logprob: -6.365699768066406

Token 263: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.6254304051399231
    2. 'points' → logprob: -1.1254303455352783
    3. 'px' → logprob: -3.1254303455352783
    4. 'inter' → logprob: -3.2504303455352783
    5. ' intersections' → logprob: -4.000430583953857
    6. ' px' → logprob: -4.875430583953857
    7. 'x' → logprob: -4.875430583953857
    8. 'pts' → logprob: -5.125430583953857
    9. 'intersection' → logprob: -5.625430583953857
    10. 'p' → logprob: -6.000430583953857

Token 264: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8051785230636597
    2. '=' → logprob: -0.9301785230636597
    3. 'inter' → logprob: -3.180178642272949
    4. 'intersection' → logprob: -3.305178642272949
    5. '_inter' → logprob: -3.555178642272949
    6. 'x' → logprob: -3.930178642272949
    7. ' intersection' → logprob: -4.180178642272949
    8. '_x' → logprob: -5.430178642272949
    9. ' px' → logprob: -5.680178642272949
    10. '   ' → logprob: -6.430178642272949

Token 265: ''inter' (ID: 55731)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.002152165398001671
    2. 'inter' → logprob: -6.252151966094971
    3. ' intersection' → logprob: -8.627152442932129
    4. ''inter' → logprob: -10.877152442932129
    5. 'int' → logprob: -10.877152442932129
    6. 'interaction' → logprob: -12.627152442932129
    7. 'Intersection' → logprob: -13.877152442932129
    8. 'ter' → logprob: -14.627152442932129
    9. '_inter' → logprob: -15.002152442932129
    10. 'in' → logprob: -15.127152442932129

Token 266: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.0003700165543705225
    2. 's' → logprob: -8.125370025634766
    3. 'sect' → logprob: -10.000370025634766
    4. 'sections' → logprob: -10.750370025634766
    5. 'intersection' → logprob: -12.875370025634766
    6. 'set' → logprob: -13.500370025634766
    7. 'x' → logprob: -14.375370025634766
    8. '   ' → logprob: -14.750370025634766
    9. '#' → logprob: -14.750370025634766
    10. 'se' → logprob: -15.375370025634766

Token 267: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6159466505050659
    2. ' x' → logprob: -1.740946650505066
    3. ' ix' → logprob: -2.1159467697143555
    4. ' =' → logprob: -2.7409467697143555
    5. 'x' → logprob: -2.9909467697143555
    6. ' px' → logprob: -3.7409467697143555
    7. '=' → logprob: -4.6159467697143555
    8. ' return' → logprob: -5.2409467697143555
    9. '_ix' → logprob: -6.2409467697143555
    10. 'ix' → logprob: -6.3659467697143555

Token 268: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0117079019546509
    2. ' px' → logprob: -1.6367079019546509
    3. ' x' → logprob: -1.7617079019546509
    4. '   ' → logprob: -2.6367077827453613
    5. 'x' → logprob: -2.8867077827453613
    6. ' p' → logprob: -3.3867077827453613
    7. '=' → logprob: -3.5117077827453613
    8. ' return' → logprob: -3.8867077827453613
    9. ' ix' → logprob: -3.8867077827453613
    10. ' ' → logprob: -4.761707782745361

Token 269: ' rx' (ID: 37623)
  Prédit: 'xi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xi' → logprob: -0.7282653450965881
    2. 'ix' → logprob: -1.3532652854919434
    3. 'x' → logprob: -2.4782652854919434
    4. 'px' → logprob: -2.6032652854919434
    5. ' ix' → logprob: -3.2282652854919434
    6. '(x' → logprob: -3.9782652854919434
    7. ' px' → logprob: -4.228265285491943
    8. ' xi' → logprob: -4.478265285491943
    9. ' x' → logprob: -5.978265285491943
    10. 'inter' → logprob: -6.228265285491943

Token 270: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01922028698027134
    2. ' =' → logprob: -4.019220352172852
    3. '1' → logprob: -6.894220352172852
    4. ',' → logprob: -10.394220352172852
    5. 's' → logprob: -10.894220352172852
    6. ' ' → logprob: -12.644220352172852
    7. '0' → logprob: -14.269220352172852
    8. '=r' → logprob: -14.519220352172852
    9. '   ' → logprob: -14.644220352172852
    10. 'p' → logprob: -14.769220352172852

Token 271: ' -(' (ID: 66319)
  Prédit: '-('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-(' → logprob: -0.029993455857038498
    2. ' -(' → logprob: -3.6549935340881348
    3. '-' → logprob: -5.654993534088135
    4. ' ' → logprob: -9.279993057250977
    5. ' -' → logprob: -9.404993057250977
    6. '   ' → logprob: -12.154993057250977
    7. '  ' → logprob: -12.904993057250977
    8. ' ' → logprob: -13.279993057250977
    9. '-h' → logprob: -15.029993057250977
    10. '-y' → logprob: -15.279993057250977

Token 272: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.1472419600977446e-06
    2. '(y' → logprob: -13.875000953674316
    3. ' y' → logprob: -16.000001907348633
    4. '	y' → logprob: -19.250001907348633
    5. '   ' → logprob: -20.125001907348633
    6. 'h' → logprob: -22.625001907348633
    7. ' (' → logprob: -23.125001907348633
    8. ' ' → logprob: -23.500001907348633
    9. ')y' → logprob: -23.500001907348633
    10. ',y' → logprob: -23.625001907348633

Token 273: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. '1' → logprob: -13.750001907348633
    3. ' ' → logprob: -16.625001907348633
    4. '۲' → logprob: -16.625001907348633
    5. '

' → logprob: -17.000001907348633
    6. '```' → logprob: -17.125001907348633
    7. '２' → logprob: -17.250001907348633
    8. '
' → logprob: -17.937501907348633
    9. '   ' → logprob: -18.000001907348633
    10. '₂' → logprob: -18.062501907348633

Token 274: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.062006447464227676
    2. '-' → logprob: -2.8120064735412598
    3. 'y' → logprob: -10.937005996704102
    4. '-y' → logprob: -10.937005996704102
    5. ' y' → logprob: -12.937005996704102
    6. '1' → logprob: -15.062005996704102
    7. 'x' → logprob: -15.437005996704102
    8. '-x' → logprob: -15.812005996704102
    9. ' ' → logprob: -16.5620059967041
    10. '   ' → logprob: -18.1870059967041

Token 275: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00033593899570405483
    2. ' y' → logprob: -8.000335693359375
    3. 'x' → logprob: -15.000335693359375
    4. '	y' → logprob: -16.750335693359375
    5. '   ' → logprob: -16.875335693359375
    6. ')y' → logprob: -17.875335693359375
    7. ')' → logprob: -18.500335693359375
    8. '(y' → logprob: -18.625335693359375
    9. ' ' → logprob: -19.125335693359375
    10. '    ' → logprob: -19.250335693359375

Token 276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017791526624932885
    2. 'y' → logprob: -8.750178337097168
    3. ' y' → logprob: -11.250178337097168
    4. 'x' → logprob: -12.500178337097168
    5. '<|end|>' → logprob: -13.625178337097168
    6. ' ' → logprob: -14.000178337097168
    7. '[' → logprob: -14.875178337097168
    8. ')' → logprob: -16.00017738342285
    9. '   ' → logprob: -16.75017738342285
    10. '```' → logprob: -17.00017738342285

Token 277: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013841889798641205
    2. ')*' → logprob: -4.3888421058654785
    3. ')*(' → logprob: -7.1388421058654785
    4. ')/' → logprob: -7.7638421058654785
    5. ' )' → logprob: -9.13884162902832
    6. ')d' → logprob: -13.38884162902832
    7. '   ' → logprob: -13.88884162902832
    8. 'd' → logprob: -13.88884162902832
    9. ')
' → logprob: -14.01384162902832
    10. '*d' → logprob: -14.26384162902832

Token 278: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06775982677936554
    2. '*' → logprob: -3.3177597522735596
    3. '*d' → logprob: -3.8177597522735596
    4. '*h' → logprob: -5.317759990692139
    5. '*(' → logprob: -6.817759990692139
    6. '*y' → logprob: -7.317759990692139
    7. '   ' → logprob: -8.56775951385498
    8. '/d' → logprob: -8.69275951385498
    9. '*r' → logprob: -9.31775951385498
    10. 'd' → logprob: -9.81775951385498

Token 279: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.38703423738479614
    2. 'h' → logprob: -1.1370341777801514
    3. ' (' → logprob: -9.13703441619873
    4. ' h' → logprob: -10.13703441619873
    5. '(' → logprob: -11.26203441619873
    6. '   ' → logprob: -13.38703441619873
    7. '	h' → logprob: -13.88703441619873
    8. '(math' → logprob: -14.88703441619873
    9. '/h' → logprob: -16.387033462524414
    10. '_h' → logprob: -16.512033462524414

Token 280: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -2.8087270038668066e-05
    2. ' h' → logprob: -10.500027656555176
    3. '(h' → logprob: -15.000027656555176
    4. '	h' → logprob: -15.875027656555176
    5. '   ' → logprob: -19.125028610229492
    6. '/h' → logprob: -19.125028610229492
    7. ',h' → logprob: -19.375028610229492
    8. '_h' → logprob: -20.000028610229492
    9. '[h' → logprob: -20.375028610229492
    10. '<h' → logprob: -20.375028610229492

Token 281: '/d' (ID: 6662)
  Prédit: '/d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/d' → logprob: -0.5644478797912598
    2. '/' → logprob: -1.4394478797912598
    3. ' /' → logprob: -2.3144478797912598
    4. ')' → logprob: -2.4394478797912598
    5. ')/' → logprob: -4.81444787979126
    6. ')/(' → logprob: -10.064447402954102
    7. '   ' → logprob: -10.689447402954102
    8. ' )' → logprob: -11.189447402954102
    9. 'd' → logprob: -11.439447402954102
    10. '/D' → logprob: -11.564447402954102

Token 282: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4741590917110443
    2. ')
' → logprob: -0.9741591215133667
    3. ' )
' → logprob: -10.099159240722656
    4. '<|end|>' → logprob: -10.849159240722656
    5. ' )' → logprob: -11.474159240722656
    6. ')
' → logprob: -12.849159240722656
    7. ')

' → logprob: -13.099159240722656
    8. ',' → logprob: -13.224159240722656
    9. '),' → logprob: -13.474159240722656
    10. '   ' → logprob: -14.349159240722656

Token 283: '   ' (ID: 271)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.015053861774504185
    2. '
' → logprob: -5.640053749084473
    3. 'rx' → logprob: -6.015053749084473
    4. 'r' → logprob: -6.015053749084473
    5. '<|end|>' → logprob: -6.515053749084473
    6. ',' → logprob: -6.640053749084473
    7. '   ' → logprob: -6.890053749084473
    8. '+' → logprob: -7.390053749084473
    9. ' +' → logprob: -8.265053749084473
    10. '  
' → logprob: -8.515053749084473

Token 284: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' (adapté à ' ry') → logprob: -0.2983323037624359
    2. 'x' → logprob: -1.5483323335647583
    3. ' x' → logprob: -3.6733322143554688
    4. 'rx' → logprob: -4.923332214355469
    5. ' ry' → logprob: -4.923332214355469
    6. '(x' → logprob: -6.298332214355469
    7. ' (' → logprob: -6.423332214355469
    8. 'tx' → logprob: -7.673332214355469
    9. ' rx' → logprob: -7.673332214355469
    10. '(' → logprob: -7.923332214355469

Token 285: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023248974233865738
    2. ' =' → logprob: -3.7732489109039307
    3. '<|end|>' → logprob: -13.273248672485352
    4. ')' → logprob: -14.148248672485352
    5. '*' → logprob: -14.648248672485352
    6. ',' → logprob: -14.898248672485352
    7. '+' → logprob: -16.39824867248535
    8. ' ' → logprob: -17.14824867248535
    9. ' *' → logprob: -17.39824867248535
    10. '(' → logprob: -18.02324867248535

Token 286: ' -(' (ID: 66319)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.023263417184352875
    2. ' (' → logprob: -3.773263454437256
    3. '-(' → logprob: -11.773262977600098
    4. '   ' → logprob: -12.273262977600098
    5. ' ' → logprob: -12.773262977600098
    6. '  ' → logprob: -13.898262977600098
    7. '+(' → logprob: -14.273262977600098
    8. '(' → logprob: -14.773262977600098
    9. 'x' → logprob: -14.898262977600098
    10. '(y' → logprob: -15.398262977600098

Token 287: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.029751762747764587
    2. '(x' → logprob: -3.529751777648926
    3. '	x' → logprob: -14.779751777648926
    4. ' (' → logprob: -14.779751777648926
    5. ' x' → logprob: -14.904751777648926
    6. '   ' → logprob: -16.52975082397461
    7. '-x' → logprob: -17.27975082397461
    8. '(' → logprob: -17.27975082397461
    9. '_x' → logprob: -17.40475082397461
    10. '{x' → logprob: -17.77975082397461

Token 288: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.816093228830141e-06
    2. '1' → logprob: -12.87500286102295
    3. '۲' → logprob: -16.687501907348633
    4. ' -' → logprob: -17.000001907348633
    5. '```' → logprob: -17.062501907348633
    6. ' ' → logprob: -17.250001907348633
    7. '   ' → logprob: -17.312501907348633
    8. '２' → logprob: -17.437501907348633
    9. '
' → logprob: -17.750001907348633
    10. '

' → logprob: -17.875001907348633

Token 289: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01603648066520691
    2. '-' → logprob: -4.141036510467529
    3. ' ' → logprob: -13.641036033630371
    4. '1' → logprob: -14.516036033630371
    5. '2' → logprob: -15.516036033630371
    6. 'x' → logprob: -16.266036987304688
    7. '-x' → logprob: -16.641036987304688
    8. '-y' → logprob: -17.266036987304688
    9. ' y' → logprob: -17.391036987304688
    10. 'y' → logprob: -17.641036987304688

Token 290: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9027791495318525e-05
    2. ' x' → logprob: -10.875019073486328
    3. '(x' → logprob: -18.125019073486328
    4. 'y' → logprob: -18.500019073486328
    5. '	x' → logprob: -19.000019073486328
    6. ' ' → logprob: -19.625019073486328
    7. ')x' → logprob: -19.750019073486328
    8. '<|end|>' → logprob: -20.625019073486328
    9. '   ' → logprob: -20.875019073486328
    10. ')' → logprob: -21.250019073486328

Token 291: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.957014556974173e-05
    2. 'x' → logprob: -10.000069618225098
    3. 'y' → logprob: -10.875069618225098
    4. ' ' → logprob: -13.375069618225098
    5. ')' → logprob: -14.125069618225098
    6. ' y' → logprob: -14.250069618225098
    7. '   ' → logprob: -14.250069618225098
    8. '-' → logprob: -14.750069618225098
    9. ' -' → logprob: -14.750069618225098
    10. ' x' → logprob: -14.875069618225098

Token 292: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003155625017825514
    2. ' *' → logprob: -8.62531566619873
    3. '*' → logprob: -9.12531566619873
    4. ')*' → logprob: -11.37531566619873
    5. ')*(' → logprob: -11.37531566619873
    6. ' )' → logprob: -13.00031566619873
    7. '   ' → logprob: -14.75031566619873
    8. ')(' → logprob: -14.75031566619873
    9. '*)' → logprob: -15.12531566619873
    10. '*(' → logprob: -15.50031566619873

Token 293: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3146369159221649
    2. '*' → logprob: -1.3146369457244873
    3. '*(' → logprob: -7.189636707305908
    4. ')' → logprob: -7.439636707305908
    5. '(' → logprob: -11.564637184143066
    6. '(h' → logprob: -11.814637184143066
    7. '*h' → logprob: -12.064637184143066
    8. ' (' → logprob: -12.189637184143066
    9. ' ' → logprob: -13.314637184143066
    10. '   ' → logprob: -14.564637184143066

Token 294: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0013123786775395274
    2. ' (' → logprob: -6.751312255859375
    3. 'h' → logprob: -8.876312255859375
    4. ' h' → logprob: -13.626312255859375
    5. '(' → logprob: -13.876312255859375
    6. '(y' → logprob: -16.126312255859375
    7. '(-' → logprob: -16.126312255859375
    8. '   ' → logprob: -16.251312255859375
    9. '/h' → logprob: -17.751312255859375
    10. '-(' → logprob: -18.626312255859375

Token 295: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0010178061202168465
    2. '(h' → logprob: -7.1260175704956055
    3. '-h' → logprob: -8.626017570495605
    4. ' h' → logprob: -10.376017570495605
    5. '-' → logprob: -13.751017570495605
    6. ' (' → logprob: -14.251017570495605
    7. '(' → logprob: -15.376017570495605
    8. '	h' → logprob: -15.626017570495605
    9. '/h' → logprob: -15.876017570495605
    10. '(-' → logprob: -15.876017570495605

Token 296: '/d' (ID: 6662)
  Prédit: '/d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/d' → logprob: -2.696889623621246e-06
    2. ' /' → logprob: -13.50000286102295
    3. '/' → logprob: -13.75000286102295
    4. 'd' → logprob: -16.375001907348633
    5. '/D' → logprob: -18.875001907348633
    6. ')/' → logprob: -19.000001907348633
    7. '/div' → logprob: -19.875001907348633
    8. '   ' → logprob: -20.000001907348633
    9. '/h' → logprob: -20.000001907348633
    10. '/dd' → logprob: -20.250001907348633

Token 297: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019984507525805384
    2. ')
' → logprob: -9.000200271606445
    3. '+' → logprob: -10.375200271606445
    4. '   ' → logprob: -11.000200271606445
    5. '<|end|>' → logprob: -11.750200271606445
    6. '+)' → logprob: -11.875200271606445
    7. ')+' → logprob: -12.375200271606445
    8. '),' → logprob: -13.375200271606445
    9. ',' → logprob: -13.500200271606445
    10. ')**' → logprob: -13.875200271606445

Token 298: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2612256109714508
    2. '+' → logprob: -2.011225700378418
    3. '   ' → logprob: -2.636225700378418
    4. ',' → logprob: -4.136225700378418
    5. 'return' → logprob: -6.511225700378418
    6. '+
' → logprob: -6.511225700378418
    7. ')' → logprob: -6.761225700378418
    8. ' x' → logprob: -6.886225700378418
    9. '-' → logprob: -7.636225700378418
    10. 'rx' → logprob: -8.011225700378418

Token 299: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.1639825999736786
    2. 'x' → logprob: -2.163982629776001
    3. 'return' → logprob: -4.163982391357422
    4. 'px' → logprob: -4.288982391357422
    5. ' p' → logprob: -6.288982391357422
    6. 'point' → logprob: -6.788982391357422
    7. '   ' → logprob: -6.913982391357422
    8. 'intersection' → logprob: -7.288982391357422
    9. 'pt' → logprob: -7.663982391357422
    10. ' return' → logprob: -8.038982391357422

Token 300: '_int' (ID: 12285)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20364217460155487
    2. 't' → logprob: -2.0786421298980713
    3. 'int' → logprob: -3.4536421298980713
    4. 'oint' → logprob: -3.7036421298980713
    5. 'a' → logprob: -6.57864236831665
    6. 'x' → logprob: -7.57864236831665
    7. 'i' → logprob: -7.95364236831665
    8. 'oin' → logprob: -9.328641891479492
    9. 'ts' → logprob: -9.578641891479492
    10. 'inter' → logprob: -9.828641891479492

Token 301: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3269144296646118
    2. 'ections' → logprob: -2.3269143104553223
    3. 'erse' → logprob: -2.9519143104553223
    4. 's' → logprob: -3.3269143104553223
    5. 'er' → logprob: -3.7019143104553223
    6. ' =' → logprob: -3.9519143104553223
    7. 'sections' → logprob: -3.9519143104553223
    8. 'es' → logprob: -4.576914310455322
    9. '=' → logprob: -4.701914310455322
    10. 'ers' → logprob: -5.826914310455322

Token 302: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31328916549682617
    2. '=' → logprob: -1.3132891654968262
    3. '1' → logprob: -10.938289642333984
    4. ',' → logprob: -12.063289642333984
    5. 'x' → logprob: -12.938289642333984
    6. '=(' → logprob: -14.438289642333984
    7. '_x' → logprob: -15.313289642333984
    8. 's' → logprob: -15.813289642333984
    9. ' =(' → logprob: -15.813289642333984
    10. ' ' → logprob: -16.188289642333984

Token 303: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0011785586830228567
    2. ' (' → logprob: -6.751178741455078
    3. '(' → logprob: -11.751178741455078
    4. '   ' → logprob: -15.251178741455078
    5. '((' → logprob: -16.376178741455078
    6. ' ' → logprob: -16.626178741455078
    7. 'x' → logprob: -17.001178741455078
    8. '[x' → logprob: -18.251178741455078
    9. '  ' → logprob: -18.376178741455078
    10. '(round' → logprob: -18.876178741455078

Token 304: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.512236498361744e-07
    2. ' x' → logprob: -14.625000953674316
    3. '(x' → logprob: -18.375
    4. '   ' → logprob: -21.0
    5. 'round' → logprob: -21.375
    6. '	x' → logprob: -22.25
    7. ',x' → logprob: -22.375
    8. ' ' → logprob: -22.75
    9. ')x' → logprob: -22.75
    10. '{x' → logprob: -23.125

Token 305: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.128163257315464e-07
    2. '۳' → logprob: -15.375
    3. '৩' → logprob: -17.25
    4. '３' → logprob: -17.5
    5. '³' → logprob: -18.0
    6. '३' → logprob: -18.0
    7. '٣' → logprob: -18.25
    8. '```' → logprob: -19.1875
    9. '_' → logprob: -20.0625
    10. '1' → logprob: -20.125

Token 306: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.023246875032782555
    2. '+' → logprob: -3.7732467651367188
    3. '+r' → logprob: -14.648246765136719
    4. ' -' → logprob: -15.023246765136719
    5. '+y' → logprob: -16.02324676513672
    6. ' plus' → logprob: -16.02324676513672
    7. ' ' → logprob: -16.02324676513672
    8. '+p' → logprob: -16.14824676513672
    9. ' ' → logprob: -16.77324676513672
    10. ' +
' → logprob: -17.14824676513672

Token 307: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.03812892735004425
    2. 'ry' → logprob: -3.2881288528442383
    3. ' rx' → logprob: -9.913128852844238
    4. ' ry' → logprob: -10.788128852844238
    5. '(rx' → logprob: -11.538128852844238
    6. '_rx' → logprob: -12.913128852844238
    7. '.rx' → logprob: -13.663128852844238
    8. '0' → logprob: -13.913128852844238
    9. 'Rx' → logprob: -14.913128852844238
    10. 'rz' → logprob: -15.163128852844238

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.349075556499884e-05
    2. ' ,' → logprob: -9.7500638961792
    3. ',y' → logprob: -12.2500638961792
    4. ',
' → logprob: -15.0000638961792
    5. ',p' → logprob: -16.500062942504883
    6. ',

' → logprob: -18.250062942504883
    7. ')' → logprob: -18.375062942504883
    8. '_,' → logprob: -18.625062942504883
    9. 'p' → logprob: -19.000062942504883
    10. '),' → logprob: -19.375062942504883

Token 309: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0011703446507453918
    2. ' y' → logprob: -6.7511701583862305
    3. '   ' → logprob: -16.376171112060547
    4. '	y' → logprob: -17.876171112060547
    5. '  ' → logprob: -19.126171112060547
    6. '    ' → logprob: -19.501171112060547
    7. '(y' → logprob: -19.751171112060547
    8. ' ' → logprob: -20.626171112060547
    9. ')y' → logprob: -21.251171112060547
    10. ''y' → logprob: -21.376171112060547

Token 310: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. '۳' → logprob: -18.0
    3. '３' → logprob: -19.5
    4. '৩' → logprob: -20.125
    5. '३' → logprob: -20.875
    6. '٣' → logprob: -21.125
    7. '_' → logprob: -21.5
    8. '³' → logprob: -22.0
    9. '_three' → logprob: -23.3125
    10. '```' → logprob: -23.375

Token 311: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.540032148361206
    2. ' +' → logprob: -0.915032148361206
    3. '+' → logprob: -4.290032386779785
    4. '-' → logprob: -5.790032386779785
    5. ' ' → logprob: -13.290032386779785
    6. ')' → logprob: -13.290032386779785
    7. '<|end|>' → logprob: -14.790032386779785
    8. ' ' → logprob: -15.165032386779785
    9. '+)' → logprob: -16.85253143310547
    10. ',' → logprob: -17.04003143310547

Token 312: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.001504982472397387
    2. ' ry' → logprob: -6.501504898071289
    3. 'r' → logprob: -13.751504898071289
    4. '   ' → logprob: -15.126504898071289
    5. 'ryl' → logprob: -15.126504898071289
    6. 'rx' → logprob: -15.376504898071289
    7. ' ' → logprob: -15.876504898071289
    8. '  ' → logprob: -16.00150489807129
    9. 'ray' → logprob: -16.37650489807129
    10. '
' → logprob: -16.37650489807129

Token 313: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.253090865968261e-06
    2. ')
' → logprob: -11.625009536743164
    3. ' )' → logprob: -15.375009536743164
    4. ')

' → logprob: -17.375009536743164
    5. '   ' → logprob: -18.500009536743164
    6. '),' → logprob: -18.750009536743164
    7. ')
' → logprob: -19.750009536743164
    8. ')p' → logprob: -20.000009536743164
    9. '}' → logprob: -20.750009536743164
    10. ')#' → logprob: -21.000009536743164

Token 314: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09478810429573059
    2. ',' → logprob: -2.719788074493408
    3. 'p' → logprob: -4.344788074493408
    4. ' p' → logprob: -5.094788074493408
    5. ',p' → logprob: -5.469788074493408
    6. ')' → logprob: -7.969788074493408
    7. ' ,' → logprob: -8.344788551330566
    8. ',
' → logprob: -8.469788551330566
    9. ' ' → logprob: -9.344788551330566
    10. '    
' → logprob: -9.469788551330566

Token 315: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.0028408952057361603
    2. ' p' → logprob: -5.877840995788574
    3. '   ' → logprob: -10.252840995788574
    4. '(' → logprob: -15.002840995788574
    5. ' (' → logprob: -15.252840995788574
    6. '(x' → logprob: -16.127840042114258
    7. ',' → logprob: -16.752840042114258
    8. '(p' → logprob: -16.877840042114258
    9. ' ' → logprob: -17.377840042114258
    10. '  ' → logprob: -17.752840042114258

Token 316: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -4.3464544432936236e-05
    2. 'int' → logprob: -10.125043869018555
    3. 'nt' → logprob: -12.625043869018555
    4. '2' → logprob: -16.875043869018555
    5. '_inter' → logprob: -17.000043869018555
    6. '_' → logprob: -17.625043869018555
    7. '_nt' → logprob: -18.375043869018555
    8. ' _' → logprob: -18.500043869018555
    9. '_INT' → logprob: -19.000043869018555
    10. '_in' → logprob: -19.000043869018555

Token 317: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00861528143286705
    2. '1' → logprob: -4.758615493774414
    3. ' ' → logprob: -14.383615493774414
    4. 's' → logprob: -17.008615493774414
    5. '+' → logprob: -18.133615493774414
    6. '   ' → logprob: -18.383615493774414
    7. '<|end|>' → logprob: -18.508615493774414
    8. ',' → logprob: -18.508615493774414
    9. '=' → logprob: -19.133615493774414
    10. 'points' → logprob: -19.321115493774414

Token 318: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196802109479904
    2. '=' → logprob: -2.8119680881500244
    3. ' =(' → logprob: -15.186967849731445
    4. ')' → logprob: -16.811967849731445
    5. ',' → logprob: -16.936967849731445
    6. '=(' → logprob: -17.186967849731445
    7. ' =
' → logprob: -18.186967849731445
    8. ' =)' → logprob: -18.311967849731445
    9. '＝' → logprob: -19.186967849731445
    10. ' ' → logprob: -19.686967849731445

Token 319: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2014208436012268
    2. ' (' → logprob: -1.701420783996582
    3. '(' → logprob: -11.826420783996582
    4. 'x' → logprob: -16.3264217376709
    5. ' ' → logprob: -16.8264217376709
    6. ' x' → logprob: -17.0764217376709
    7. '   ' → logprob: -18.5764217376709
    8. '((' → logprob: -19.2014217376709
    9. '  ' → logprob: -20.3264217376709
    10. '（' → logprob: -20.7014217376709

Token 320: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.5332478142227046e-05
    2. ' x' → logprob: -11.250015258789062
    3. '(x' → logprob: -13.000015258789062
    4. ')x' → logprob: -19.375015258789062
    5. '	x' → logprob: -19.750015258789062
    6. '   ' → logprob: -20.000015258789062
    7. ',x' → logprob: -20.625015258789062
    8. '"x' → logprob: -20.750015258789062
    9. '(' → logprob: -21.000015258789062
    10. ' (' → logprob: -21.375015258789062

Token 321: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. '۳' → logprob: -17.875
    3. '³' → logprob: -19.5
    4. '৩' → logprob: -19.5
    5. '३' → logprob: -20.0625
    6. '３' → logprob: -20.0625
    7. '٣' → logprob: -20.1875
    8. '```' → logprob: -20.375
    9. ' ' → logprob: -20.625
    10. '_' → logprob: -22.0

Token 322: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008616581559181213
    2. '-' → logprob: -4.7586164474487305
    3. ' ' → logprob: -13.25861644744873
    4. ' ' → logprob: -15.25861644744873
    5. '<|end|>' → logprob: -17.258617401123047
    6. ' +' → logprob: -18.883617401123047
    7. ',' → logprob: -19.133617401123047
    8. '+' → logprob: -19.946117401123047
    9. '‌' → logprob: -20.321117401123047
    10. ' -
' → logprob: -20.383617401123047

Token 323: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.0009119403548538685
    2. ' rx' → logprob: -7.000911712646484
    3. '(rx' → logprob: -15.000911712646484
    4. '_rx' → logprob: -17.375911712646484
    5. 'ry' → logprob: -17.625911712646484
    6. '.rx' → logprob: -18.000911712646484
    7. 'rt' → logprob: -18.875911712646484
    8. 'rc' → logprob: -18.875911712646484
    9. 'Rx' → logprob: -19.625911712646484
    10. 'tx' → logprob: -19.625911712646484

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.735893965815194e-05
    2. ' ,' → logprob: -11.000017166137695
    3. ',y' → logprob: -14.250017166137695
    4. ',
' → logprob: -18.375017166137695
    5. '‌,' → logprob: -19.500017166137695
    6. ')' → logprob: -19.625017166137695
    7. 'y' → logprob: -19.750017166137695
    8. ',p' → logprob: -20.375017166137695
    9. ' y' → logprob: -20.875017166137695
    10. '),' → logprob: -21.250017166137695

Token 325: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5759394764900208
    2. ' y' → logprob: -0.8259394764900208
    3. '	y' → logprob: -18.075939178466797
    4. ' ' → logprob: -19.450939178466797
    5. '(y' → logprob: -19.700939178466797
    6. ''y' → logprob: -19.700939178466797
    7. 'ry' → logprob: -19.700939178466797
    8. '   ' → logprob: -20.450939178466797
    9. ',y' → logprob: -20.700939178466797
    10. ')y' → logprob: -20.825939178466797

Token 326: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0049588317051529884
    2. '+' → logprob: -5.379958629608154
    3. ' +' → logprob: -8.504959106445312
    4. ' -' → logprob: -10.129959106445312
    5. 'y' → logprob: -10.379959106445312
    6. ' ' → logprob: -10.754959106445312
    7. '-' → logprob: -10.879959106445312
    8. ')' → logprob: -12.254959106445312
    9. '  ' → logprob: -12.379959106445312
    10. '   ' → logprob: -13.004959106445312

Token 327: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12692873179912567
    2. ' +' → logprob: -2.1269288063049316
    3. '-' → logprob: -14.876928329467773
    4. ' -' → logprob: -16.126928329467773
    5. ' ' → logprob: -16.251928329467773
    6. '+
' → logprob: -17.376928329467773
    7. ' plus' → logprob: -17.376928329467773
    8. '[' → logprob: -17.751928329467773
    9. '＋' → logprob: -18.126928329467773
    10. ')' → logprob: -18.501928329467773

Token 328: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.038043782114982605
    2. ' ry' → logprob: -3.288043737411499
    3. 'ryl' → logprob: -13.913043975830078
    4. 'rx' → logprob: -14.163043975830078
    5. 'rys' → logprob: -15.663043975830078
    6. ' ' → logprob: -15.663043975830078
    7. 'ryd' → logprob: -15.913043975830078
    8. 'ryt' → logprob: -16.538043975830078
    9. 'rying' → logprob: -16.788043975830078
    10. ' rx' → logprob: -18.038043975830078

Token 329: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ')
' → logprob: -13.125001907348633
    3. ' )' → logprob: -16.250001907348633
    4. ')return' → logprob: -17.750001907348633
    5. '   ' → logprob: -17.875001907348633
    6. ')

' → logprob: -19.125001907348633
    7. '}' → logprob: -19.500001907348633
    8. '<|end|>' → logprob: -20.125001907348633
    9. ')
' → logprob: -20.375001907348633
    10. '),' → logprob: -20.375001907348633

Token 330: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005933052161708474
    2. '<|end|>' → logprob: -7.750593185424805
    3. ')' → logprob: -9.000593185424805
    4. '	return' → logprob: -11.500593185424805
    5. 'return' → logprob: -11.750593185424805
    6. ' return' → logprob: -11.750593185424805
    7. '    
' → logprob: -12.500593185424805
    8. ',' → logprob: -12.750593185424805
    9. '
' → logprob: -13.125593185424805
    10. '<|end|>' → logprob: -13.500593185424805

Token 331: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0054528857581317425
    2. ')' → logprob: -5.505453109741211
    3. 'return' (adapté à ' return') → logprob: -7.005453109741211
    4. ' return' → logprob: -8.505453109741211
    5. '<|end|>' → logprob: -8.630453109741211
    6. '	return' → logprob: -9.755453109741211
    7. ':return' → logprob: -12.130453109741211
    8. ')return' → logprob: -12.380453109741211
    9. ']' → logprob: -12.755453109741211
    10. '```' → logprob: -13.005453109741211

Token 332: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.016811365261673927
    2. '(p' → logprob: -4.766811370849609
    3. ' p' → logprob: -5.016811370849609
    4. '[p' → logprob: -6.516811370849609
    5. ' (' → logprob: -9.76681137084961
    6. ' [' → logprob: -13.64181137084961
    7. '   ' → logprob: -14.39181137084961
    8. '[' → logprob: -15.26681137084961
    9. '	p' → logprob: -16.39181137084961
    10. '[(' → logprob: -17.14181137084961

Token 333: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.001209518639370799
    2. 'int' → logprob: -6.751209735870361
    3. 'nt' → logprob: -10.251209259033203
    4. 't' → logprob: -13.126209259033203
    5. 'oint' → logprob: -14.626209259033203
    6. '[int' → logprob: -14.876209259033203
    7. '1' → logprob: -15.001209259033203
    8. '_INT' → logprob: -15.251209259033203
    9. 'p' → logprob: -15.251209259033203
    10. '(int' → logprob: -15.501209259033203

Token 334: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001589618914294988
    2. 'ctions' → logprob: -9.75015926361084
    3. 'ections' → logprob: -9.87515926361084
    4. '2' → logprob: -10.12515926361084
    5. 'sections' → logprob: -12.25015926361084
    6. 'estions' → logprob: -13.75015926361084
    7. 's' → logprob: -14.00015926361084
    8. 'points' → logprob: -14.37515926361084
    9. ' ' → logprob: -14.62515926361084
    10. 'er' → logprob: -15.12515926361084

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014338012551888824
    2. '<|end|>' → logprob: -6.626433849334717
    3. ',
' → logprob: -9.876433372497559
    4. ',p' → logprob: -10.001433372497559
    5. ' ,' → logprob: -12.126433372497559
    6. ')' → logprob: -13.126433372497559
    7. '<|end|>' → logprob: -13.626433372497559
    8. '[' → logprob: -15.376433372497559
    9. ',\
' → logprob: -15.626433372497559
    10. ',None' → logprob: -15.626433372497559

Token 336: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1602257490158081
    2. ' p' → logprob: -1.910225749015808
    3. '(p' → logprob: -13.535225868225098
    4. ' ' → logprob: -16.16022491455078
    5. ' ' → logprob: -16.91022491455078
    6. '	p' → logprob: -17.16022491455078
    7. '_p' → logprob: -17.16022491455078
    8. '(' → logprob: -17.53522491455078
    9. ' (' → logprob: -17.66022491455078
    10. '   ' → logprob: -17.66022491455078

Token 337: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.20475220680236816
    2. 'int' → logprob: -1.7047522068023682
    3. 'nt' → logprob: -5.704751968383789
    4. 'p' → logprob: -13.454751968383789
    5. '2' → logprob: -13.954751968383789
    6. 'Int' → logprob: -15.079751968383789
    7. '1' → logprob: -15.079751968383789
    8. 't' → logprob: -15.454751968383789
    9. 'n' → logprob: -16.57975196838379
    10. 'ints' → logprob: -16.57975196838379

Token 338: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001730987336486578
    2. '1' → logprob: -6.376730918884277
    3. 't' → logprob: -10.501730918884277
    4. 'ter' → logprob: -13.876730918884277
    5. 'ts' → logprob: -16.001731872558594
    6. 'er' → logprob: -16.626731872558594
    7. '3' → logprob: -17.126731872558594
    8. 's' → logprob: -17.626731872558594
    9. 'te' → logprob: -17.626731872558594
    10. 'nt' → logprob: -17.876731872558594

Token 339: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 340: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 341: ' Fonction' (ID: 189149)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16701523959636688
    2. 'def' → logprob: -1.9170151948928833
    3. 'import' → logprob: -6.417015075683594
    4. ')' → logprob: -6.417015075683594
    5. ' #' → logprob: -6.917015075683594
    6. '   ' → logprob: -7.417015075683594
    7. '```' → logprob: -8.042015075683594
    8. '<|end|>' → logprob: -8.292015075683594
    9. 'Explain' → logprob: -8.417015075683594
    10. ' ' → logprob: -9.167015075683594

Token 342: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03230105713009834
    2. ' def' → logprob: -3.5323009490966797
    3. ' pour' → logprob: -7.28230094909668
    4. ' for' → logprob: -7.53230094909668
    5. ' to' → logprob: -7.65730094909668
    6. '#' → logprob: -8.15730094909668
    7. 'to' → logprob: -9.03230094909668
    8. 'for' → logprob: -9.15730094909668
    9. ' find' → logprob: -9.78230094909668
    10. 'de' → logprob: -10.03230094909668

Token 343: ' vérifier' (ID: 93671)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.251220166683197
    2. 'calcul' → logprob: -2.876220226287842
    3. ' calcul' → logprob: -3.001220226287842
    4. ' trouver' → logprob: -3.376220226287842
    5. ' construire' → logprob: -3.501220226287842
    6. 'con' → logprob: -3.501220226287842
    7. ' résoudre' → logprob: -6.001220226287842
    8. ' reconstru' → logprob: -6.126220226287842
    9. '#' → logprob: -6.251220226287842
    10. 'def' → logprob: -6.626220226287842

Token 344: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -1.099839687347412
    2. 'si' → logprob: -1.349839687347412
    3. ' la' → logprob: -2.224839687347412
    4. 'la' → logprob: -2.724839687347412
    5. ' if' → logprob: -3.099839687347412
    6. 'if' → logprob: -3.599839687347412
    7. 'les' → logprob: -3.599839687347412
    8. '(p' → logprob: -3.724839687347412
    9. 'que' → logprob: -3.974839687347412
    10. 'point' → logprob: -3.974839687347412

Token 345: ' un' (ID: 537)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -1.0808476209640503
    2. 'un' → logprob: -1.4558476209640503
    3. ' un' → logprob: -1.9558476209640503
    4. 'a' → logprob: -2.45584774017334
    5. 'p' → logprob: -2.95584774017334
    6. 'le' → logprob: -3.20584774017334
    7. 'les' → logprob: -3.95584774017334
    8. ' point' → logprob: -4.58084774017334
    9. '(p' → logprob: -4.70584774017334
    10. 'une' → logprob: -4.70584774017334

Token 346: ' segment' (ID: 14806)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.018764110282063484
    2. ' point' → logprob: -4.018764019012451
    3. 'p' → logprob: -8.51876449584961
    4. 'pt' → logprob: -8.89376449584961
    5. '#' → logprob: -9.89376449584961
    6. '(point' → logprob: -9.89376449584961
    7. 'segment' → logprob: -10.14376449584961
    8. 'path' → logprob: -10.51876449584961
    9. '_point' → logprob: -10.76876449584961
    10. 'che' → logprob: -11.26876449584961

Token 347: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.13727065920829773
    2. ' (' → logprob: -3.88727068901062
    3. ' entre' → logprob: -4.387270450592041
    4. 'inter' → logprob: -4.387270450592041
    5. '_between' → logprob: -4.387270450592041
    6. ' between' → logprob: -4.512270450592041
    7. ' intersects' → logprob: -4.762270450592041
    8. '_inter' → logprob: -4.762270450592041
    9. ' intersect' → logprob: -5.137270450592041
    10. 'entre' → logprob: -5.262270450592041

Token 348: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.011369995772838593
    2. ' p' → logprob: -5.0113701820373535
    3. '(p' → logprob: -5.8863701820373535
    4. ')' → logprob: -7.3863701820373535
    5. ' (' → logprob: -7.8863701820373535
    6. ',' → logprob: -8.886369705200195
    7. '(x' → logprob: -9.136369705200195
    8. 'point' → logprob: -9.136369705200195
    9. 'x' → logprob: -9.511369705200195
    10. 'start' → logprob: -9.511369705200195

Token 349: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018918646965175867
    2. ',' → logprob: -6.37689208984375
    3. 'a' → logprob: -9.37689208984375
    4. ')' → logprob: -10.37689208984375
    5. '_start' → logprob: -11.00189208984375
    6. 'oint' → logprob: -11.25189208984375
    7. '0' → logprob: -11.50189208984375
    8. 'oints' → logprob: -11.87689208984375
    9. ' ' → logprob: -12.25189208984375
    10. 'p' → logprob: -12.62689208984375

Token 350: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018420136766508222
    2. ' ,' → logprob: -6.501842021942139
    3. ',p' → logprob: -8.00184154510498
    4. ')' → logprob: -13.12684154510498
    5. 'p' → logprob: -14.12684154510498
    6. '),' → logprob: -14.25184154510498
    7. 'def' → logprob: -15.50184154510498
    8. ' p' → logprob: -15.62684154510498
    9. '<|end|>' → logprob: -15.75184154510498
    10. '1' → logprob: -16.001842498779297

Token 351: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4259644558478612e-05
    2. '1' → logprob: -11.625014305114746
    3. ')' → logprob: -12.375014305114746
    4. 'oint' → logprob: -14.750014305114746
    5. 'r' → logprob: -15.500014305114746
    6. 'p' → logprob: -15.500014305114746
    7. 'oints' → logprob: -16.00001335144043
    8. ',' → logprob: -16.12501335144043
    9. '3' → logprob: -17.50001335144043
    10. '```' → logprob: -17.87501335144043

Token 352: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7127684950828552
    2. ',' → logprob: -0.7127684950828552
    3. ',p' → logprob: -3.9627685546875
    4. ' ,' → logprob: -8.5877685546875
    5. ' )' → logprob: -9.7127685546875
    6. ',)' → logprob: -9.8377685546875
    7. '),' → logprob: -10.8377685546875
    8. '(p' → logprob: -10.8377685546875
    9. 'p' → logprob: -11.3377685546875
    10. ')p' → logprob: -11.5877685546875

Token 353: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.07782821357250214
    2. ' est' → logprob: -3.0778281688690186
    3. '_est' → logprob: -5.202828407287598
    4. 'tr' → logprob: -5.827828407287598
    5. '_cont' → logprob: -6.077828407287598
    6. 'entre' → logprob: -6.202828407287598
    7. '#' → logprob: -6.327828407287598
    8. ',' → logprob: -6.327828407287598
    9. ' ' → logprob: -6.952828407287598
    10. ')' → logprob: -7.077828407287598

Token 354: ' contenu' (ID: 57581)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.9773757457733154
    2. 'ent' → logprob: -1.7273757457733154
    3. 'com' → logprob: -2.2273757457733154
    4. 'dans' → logprob: -2.4773757457733154
    5. ' entièrement' → logprob: -2.7273757457733154
    6. 'inter' → logprob: -3.1023757457733154
    7. 'valid' → logprob: -3.4773757457733154
    8. 'à' → logprob: -3.7273757457733154
    9. 'conten' → logprob: -4.2273759841918945
    10. 'compatible' → logprob: -4.4773759841918945

Token 355: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.3704567551612854
    2. '_d' → logprob: -1.7454566955566406
    3. '(p' → logprob: -2.2454566955566406
    4. ' dans' → logprob: -4.745456695556641
    5. '_' → logprob: -5.370456695556641
    6. '_in' → logprob: -5.620456695556641
    7. '(d' → logprob: -5.745456695556641
    8. 'in' → logprob: -5.870456695556641
    9. ')' → logprob: -6.495456695556641
    10. 'Dans' → logprob: -7.120456695556641

Token 356: ' au' (ID: 2791)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.1393091678619385
    2. ' (' → logprob: -2.3893091678619385
    3. '(p' → logprob: -2.3893091678619385
    4. '#' → logprob: -2.5143091678619385
    5. 'un' → logprob: -2.6393091678619385
    6. ' la' → logprob: -2.8893091678619385
    7. '(c' → logprob: -3.2643091678619385
    8. ' le' → logprob: -3.3893091678619385
    9. ' a' → logprob: -3.7643091678619385
    10. 'c' → logprob: -3.7643091678619385

Token 357: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.04749130830168724
    2. '#' → logprob: -3.5474913120269775
    3. ' moins' → logprob: -4.922491073608398
    4. 'c' → logprob: -5.047491073608398
    5. 'mo' → logprob: -6.422491073608398
    6. 'm' → logprob: -7.297491073608398
    7. 'une' → logprob: -8.172491073608398
    8. 'segment' → logprob: -8.797491073608398
    9. 'cun' → logprob: -8.797491073608398
    10. 'coin' → logprob: -9.172491073608398

Token 358: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.3098662793636322
    2. 'l' → logprob: -1.8098663091659546
    3. 'une' → logprob: -2.559866189956665
    4. ' un' → logprob: -4.559866428375244
    5. '(p' → logprob: -5.309866428375244
    6. ' l' → logprob: -5.684866428375244
    7. ''un' → logprob: -5.934866428375244
    8. 'one' → logprob: -6.934866428375244
    9. '(un' → logprob: -7.434866428375244
    10. ' (' → logprob: -7.934866428375244

Token 359: ' des' (ID: 731)
  Prédit: ' cercle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cercle' → logprob: -1.092888593673706
    2. 'c' → logprob: -1.217888593673706
    3. 'circle' → logprob: -1.717888593673706
    4. '(c' → logprob: -2.717888593673706
    5. ' circle' → logprob: -2.842888593673706
    6. ' (' → logprob: -3.967888593673706
    7. '(' → logprob: -4.092888832092285
    8. 'def' → logprob: -4.592888832092285
    9. '(circle' → logprob: -4.717888832092285
    10. 'cir' → logprob: -5.592888832092285

Token 360: ' cer' (ID: 10816)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.16306640207767487
    2. 'cer' → logprob: -2.1630663871765137
    3. ' cer' → logprob: -3.9130663871765137
    4. ' circles' → logprob: -4.788066387176514
    5. 'c' → logprob: -5.538066387176514
    6. 'circ' → logprob: -7.538066387176514
    7. 'circle' → logprob: -7.913066387176514
    8. 'segments' → logprob: -8.038066864013672
    9. ' cercle' → logprob: -8.413066864013672
    10. 'cers' → logprob: -8.663066864013672

Token 361: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -4.417976379045285e-05
    2. 'cl' → logprob: -10.375043869018555
    3. 'cle' → logprob: -12.125043869018555
    4. 'les' → logprob: -12.500043869018555
    5. 'c' → logprob: -13.250043869018555
    6. '#' → logprob: -14.375043869018555
    7. 'icles' → logprob: -15.250043869018555
    8. 'cled' → logprob: -15.500043869018555
    9. 'cls' → logprob: -15.625043869018555
    10. 'cla' → logprob: -15.875043869018555

Token 362: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00016671013145241886
    2. ' def' → logprob: -9.375166893005371
    3. '(p' → logprob: -9.625166893005371
    4. '(s' → logprob: -12.250166893005371
    5. '
' → logprob: -12.625166893005371
    6. '(c' → logprob: -12.750166893005371
    7. '(' → logprob: -13.000166893005371
    8. '(def' → logprob: -13.125166893005371
    9. ' (' → logprob: -15.500166893005371
    10. '#' → logprob: -16.125165939331055

Token 363: ' la' (ID: 557)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.08103760331869125
    2. 'cer' → logprob: -3.0810375213623047
    3. ' circles' → logprob: -4.331037521362305
    4. 'la' → logprob: -4.831037521362305
    5. 'def' → logprob: -6.081037521362305
    6. ' cer' → logprob: -6.206037521362305
    7. 'r' → logprob: -6.956037521362305
    8. ' la' → logprob: -6.956037521362305
    9. 'c' → logprob: -7.206037521362305
    10. ' cercle' → logprob: -7.831037521362305

Token 364: ' chaîne' (ID: 89288)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.1555175483226776
    2. 'def' → logprob: -2.155517578125
    3. 'cer' → logprob: -4.405517578125
    4. '#' → logprob: -5.155517578125
    5. ' circles' → logprob: -5.155517578125
    6. ' cer' → logprob: -7.780517578125
    7. 'import' → logprob: -7.905517578125
    8. 'ranges' → logprob: -7.905517578125
    9. 'clusters' → logprob: -8.030517578125
    10. 'c' → logprob: -8.030517578125

Token 365: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0802738870552275e-05
    2. '
' → logprob: -11.62501049041748
    3. ' def' → logprob: -13.37501049041748
    4. '(def' → logprob: -15.50001049041748
    5. '(' → logprob: -17.625011444091797
    6. '(
' → logprob: -18.250011444091797
    7. ':def' → logprob: -18.375011444091797
    8. '(p' → logprob: -18.625011444091797
    9. '(s' → logprob: -19.375011444091797
    10. '#' → logprob: -19.375011444091797

Token 366: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.320199877838604e-07
    2. ' def' → logprob: -15.0
    3. '
' → logprob: -18.875
    4. '#' → logprob: -20.5
    5. '(def' → logprob: -20.625
    6. ':def' → logprob: -21.5
    7. 'ndef' → logprob: -22.0
    8. 'de' → logprob: -22.25
    9. '	def' → logprob: -22.875
    10. 'import' → logprob: -23.0

Token 367: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.15310683415737e-05
    2. ' def' → logprob: -10.750021934509277
    3. '
' → logprob: -17.37502098083496
    4. '#' → logprob: -19.00002098083496
    5. 'import' → logprob: -19.75002098083496
    6. ':def' → logprob: -20.12502098083496
    7. '	def' → logprob: -20.75002098083496
    8. 'ndef' → logprob: -20.87502098083496
    9. '```' → logprob: -21.25002098083496
    10. '(def' → logprob: -21.87502098083496

Token 368: ' vér' (ID: 42524)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0016150808660313487
    2. ' def' → logprob: -6.626615047454834
    3. 'for' → logprob: -8.751615524291992
    4. ')' → logprob: -10.626615524291992
    5. ' for' → logprob: -10.751615524291992
    6. ' déf' → logprob: -11.251615524291992
    7. 'n' → logprob: -11.501615524291992
    8. '   ' → logprob: -11.626615524291992
    9. ' ' → logprob: -11.751615524291992
    10. 'ndef' → logprob: -12.126615524291992

Token 369: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -5.9153885558771435e-06
    2. 'ife' → logprob: -13.250005722045898
    3. 'ifier' → logprob: -13.500005722045898
    4. 'if' → logprob: -13.500005722045898
    5. '```' → logprob: -14.625005722045898
    6. 'ifié' → logprob: -15.750005722045898
    7. '\' → logprob: -16.0000057220459
    8. '_' → logprob: -16.1250057220459
    9. 'ifi' → logprob: -16.6250057220459
    10. 'ifiez' → logprob: -16.7500057220459

Token 370: ' par' (ID: 686)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6272466778755188
    2. 'for' → logprob: -1.252246618270874
    3. 'def' → logprob: -3.002246618270874
    4. ' if' → logprob: -3.502246618270874
    5. ' ' → logprob: -4.002246856689453
    6. ' p' → logprob: -4.377246856689453
    7. ' def' → logprob: -4.377246856689453
    8. '   ' → logprob: -4.752246856689453
    9. '(p' → logprob: -5.002246856689453
    10. ' que' → logprob: -5.127246856689453

Token 371: ' é' (ID: 1212)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.4185864925384521
    2. 't' → logprob: -1.7935864925384521
    3. 'mi' → logprob: -2.168586492538452
    4. 'for' → logprob: -2.168586492538452
    5. 'def' → logprob: -2.168586492538452
    6. 'un' → logprob: -3.293586492538452
    7. 'all' → logprob: -3.668586492538452
    8. 'tout' → logprob: -3.793586492538452
    9. 'mid' → logprob: -4.043586730957031
    10. 'c' → logprob: -4.668586730957031

Token 372: 'chant' (ID: 15311)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8329746723175049
    2. 'num' → logprob: -1.3329746723175049
    3. 'chant' → logprob: -1.8329746723175049
    4. 'valuation' → logprob: -2.582974672317505
    5. 'numer' → logprob: -4.332974433898926
    6. 'mpl' → logprob: -5.207974433898926
    7. 'chec' → logprob: -5.457974433898926
    8. 'un' → logprob: -5.707974433898926
    9. 'xp' → logprob: -5.832974433898926
    10. '#' → logprob: -5.957974433898926

Token 373: 'ill' (ID: 492)
  Prédit: 'ill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ill' → logprob: -0.011293021030724049
    2. 'illon' → logprob: -4.511292934417725
    3. 'ion' → logprob: -9.136293411254883
    4. 'illons' → logprob: -10.261293411254883
    5. 'illong' → logprob: -10.386293411254883
    6. 'illion' → logprob: -10.761293411254883
    7. 'll' → logprob: -11.136293411254883
    8. '>' → logprob: -11.761293411254883
    9. 'illation' → logprob: -11.886293411254883
    10. '#' → logprob: -12.886293411254883

Token 374: 'onn' (ID: 9525)
  Prédit: 'onn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onn' → logprob: -0.05000308156013489
    2. 'on' → logprob: -3.0500030517578125
    3. 'onnement' → logprob: -7.0500030517578125
    4. 'onne' → logprob: -8.675003051757812
    5. 'll' → logprob: -9.425003051757812
    6. 'onneur' → logprob: -9.800003051757812
    7. 'onna' → logprob: -10.050003051757812
    8. 'onner' → logprob: -10.175003051757812
    9. 'onné' → logprob: -10.925003051757812
    10. 'onnes' → logprob: -10.925003051757812

Token 375: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.017111046239733696
    2. 'e' → logprob: -4.517110824584961
    3. 'er' → logprob: -5.392110824584961
    4. 'ent' → logprob: -7.267110824584961
    5. 'on' → logprob: -8.642110824584961
    6. 'ge' → logprob: -9.017110824584961
    7. 'onn' → logprob: -9.392110824584961
    8. 'ing' → logprob: -9.392110824584961
    9. 'g' → logprob: -10.142110824584961
    10. '#' → logprob: -10.142110824584961

Token 376: ' si' (ID: 1784)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.632542913896032e-05
    2. ' def' → logprob: -10.375046730041504
    3. '
' → logprob: -11.125046730041504
    4. 'import' → logprob: -15.125046730041504
    5. ':def' → logprob: -17.750045776367188
    6. 'ndef' → logprob: -18.000045776367188
    7. '(' → logprob: -18.375045776367188
    8. '(p' → logprob: -18.750045776367188
    9. '(def' → logprob: -18.875045776367188
    10. '```' → logprob: -18.875045776367188

Token 377: ' les' (ID: 1341)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.395376205444336
    2. ' p' → logprob: -1.395376205444336
    3. 'le' → logprob: -2.020376205444336
    4. '(p' → logprob: -2.895376205444336
    5. ' le' → logprob: -3.145376205444336
    6. 'segment' → logprob: -3.145376205444336
    7. ' la' → logprob: -3.520376205444336
    8. 'l' → logprob: -3.520376205444336
    9. ' ' → logprob: -3.645376205444336
    10. 'not' → logprob: -3.895376205444336

Token 378: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.26924270391464233
    2. 'points' → logprob: -1.644242763519287
    3. 'de' → logprob: -4.269242763519287
    4. ' p' → logprob: -4.769242763519287
    5. 'p' → logprob: -5.019242763519287
    6. 'segments' → logprob: -5.644242763519287
    7. ' distances' → logprob: -6.644242763519287
    8. ' deux' → logprob: -6.644242763519287
    9. ' segments' → logprob: -6.769242763519287
    10. 'distance' → logprob: -7.019242763519287

Token 379: ' sont' (ID: 5242)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sur' → logprob: -1.3158906698226929
    2. 'import' → logprob: -1.8158906698226929
    3. ' sur' → logprob: -2.4408907890319824
    4. ' du' → logprob: -2.5658907890319824
    5. 'du' → logprob: -2.8158907890319824
    6. ' entre' → logprob: -3.3158907890319824
    7. 'inter' → logprob: -3.3158907890319824
    8. 'de' → logprob: -3.3158907890319824
    9. ' interm' → logprob: -3.4408907890319824
    10. ' de' → logprob: -3.6908907890319824

Token 380: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.8982238173484802
    2. ' tous' → logprob: -2.148223876953125
    3. ' all' → logprob: -2.523223876953125
    4. ' dans' → logprob: -2.773223876953125
    5. ' à' → logprob: -3.273223876953125
    6. ' bien' → logprob: -3.398223876953125
    7. ' inclus' → logprob: -3.523223876953125
    8. 'import' → logprob: -3.773223876953125
    9. 'all' → logprob: -4.023223876953125
    10. 'à' → logprob: -4.023223876953125

Token 381: ' au' (ID: 2791)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.5260034203529358
    2. 'la' → logprob: -1.901003360748291
    3. ' la' → logprob: -2.401003360748291
    4. 'l' → logprob: -3.401003360748291
    5. ' les' → logprob: -3.526003360748291
    6. 'the' → logprob: -4.151003360748291
    7. 'range' → logprob: -4.276003360748291
    8. ' each' → logprob: -4.526003360748291
    9. 'each' → logprob: -4.651003360748291
    10. 'le' → logprob: -5.151003360748291

Token 382: ' moins' (ID: 15924)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.3496922254562378
    2. 'points' → logprob: -2.2246923446655273
    3. 'moins' → logprob: -2.4746923446655273
    4. 'p' → logprob: -3.2246923446655273
    5. 'c' → logprob: -4.099692344665527
    6. 'n' → logprob: -5.099692344665527
    7. 'pass' → logprob: -5.474692344665527
    8. 'point' → logprob: -5.599692344665527
    9. 'pline' → logprob: -5.599692344665527
    10. 'pl' → logprob: -5.599692344665527

Token 383: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.7168389558792114
    2. 'l' → logprob: -0.9668389558792114
    3. ' l' → logprob: -2.716838836669922
    4. ' un' → logprob: -2.841838836669922
    5. ''un' → logprob: -6.341838836669922
    6. ' ' → logprob: -6.466838836669922
    7. ' one' → logprob: -7.216838836669922
    8. 'une' → logprob: -7.216838836669922
    9. '_' → logprob: -7.341838836669922
    10. '_un' → logprob: -7.841838836669922

Token 384: ' cercle' (ID: 172399)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.1107255220413208
    2. ' cercle' → logprob: -3.6107254028320312
    3. ' def' → logprob: -3.9857254028320312
    4. ' (' → logprob: -4.360725402832031
    5. 'def' → logprob: -4.485725402832031
    6. ' of' → logprob: -4.735725402832031
    7. ' p' → logprob: -4.860725402832031
    8. ' de' → logprob: -5.485725402832031
    9. ' ' → logprob: -5.860725402832031
    10. '_' → logprob: -6.735725402832031

Token 385: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.652451464906335e-05
    2. '
' → logprob: -11.250016212463379
    3. ' def' → logprob: -12.625016212463379
    4. 'import' → logprob: -17.000017166137695
    5. ':def' → logprob: -17.125017166137695
    6. 'de' → logprob: -17.250017166137695
    7. '(def' → logprob: -17.625017166137695
    8. '(
' → logprob: -18.000017166137695
    9. 'ndef' → logprob: -18.250017166137695
    10. '(' → logprob: -18.375017166137695

Token 386: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.054500666621607e-06
    2. '
' → logprob: -13.37500286102295
    3. ' def' → logprob: -13.50000286102295
    4. 'de' → logprob: -19.250003814697266
    5. 'ndef' → logprob: -19.500003814697266
    6. 'import' → logprob: -20.625003814697266
    7. '	def' → logprob: -20.875003814697266
    8. ' 
' → logprob: -21.125003814697266
    9. ':def' → logprob: -21.500003814697266
    10. 'd' → logprob: -22.000003814697266

Token 387: ' Ici' (ID: 145754)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2664456789934775e-06
    2. ' def' → logprob: -13.750000953674316
    3. '
' → logprob: -16.125001907348633
    4. 'import' → logprob: -17.250001907348633
    5. 'de' → logprob: -18.000001907348633
    6. '#' → logprob: -18.125001907348633
    7. 'd' → logprob: -21.125001907348633
    8. 'ndef' → logprob: -21.125001907348633
    9. '```' → logprob: -22.000001907348633
    10. '	def' → logprob: -22.625001907348633

Token 388: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.038937363773584366
    2. ' def' → logprob: -3.2889373302459717
    3. ' on' → logprob: -7.288937568664551
    4. ' déf' → logprob: -9.91393756866455
    5. ',' → logprob: -10.16393756866455
    6. '
' → logprob: -10.66393756866455
    7. ' la' → logprob: -10.91393756866455
    8. '   ' → logprob: -11.16393756866455
    9. '#' → logprob: -11.28893756866455
    10. ':' → logprob: -11.66393756866455

Token 389: ' on' (ID: 402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.030030597001314163
    2. ' def' → logprob: -3.5300304889678955
    3. ' on' → logprob: -9.030030250549316
    4. '#' → logprob: -10.155030250549316
    5. 'n' → logprob: -11.030030250549316
    6. 'import' → logprob: -11.280030250549316
    7. 'on' → logprob: -11.655030250549316
    8. 'le' → logprob: -11.655030250549316
    9. 'epsilon' → logprob: -11.655030250549316
    10. ' #' → logprob: -11.905030250549316

Token 390: ' sample' (ID: 10176)
  Prédit: ' sample'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sample' → logprob: -0.7518839240074158
    2. ' continue' → logprob: -1.3768839836120605
    3. 'sample' → logprob: -2.5018839836120605
    4. 'def' → logprob: -3.2518839836120605
    5. ' effect' → logprob: -3.5018839836120605
    6. ' vér' → logprob: -3.7518839836120605
    7. 'é' → logprob: -4.3768839836120605
    8. ' utilise' → logprob: -4.5018839836120605
    9. 'effect' → logprob: -4.5018839836120605
    10. ' prend' → logprob: -5.0018839836120605

Token 391: ' uniform' (ID: 21219)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16557088494300842
    2. '_points' → logprob: -2.5405709743499756
    3. ' points' → logprob: -3.0405709743499756
    4. ' ' → logprob: -4.1655707359313965
    5. 'points' → logprob: -5.6655707359313965
    6. 'def' → logprob: -6.2905707359313965
    7. '_' → logprob: -7.4155707359313965
    8. 'n' → logprob: -7.6655707359313965
    9. ' num' → logprob: -7.7905707359313965
    10. '100' → logprob: -7.7905707359313965

Token 392: 'ément' (ID: 17645)
  Prédit: 'ly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -0.5324670076370239
    2. 'ely' → logprob: -1.032467007637024
    3. 'ément' → logprob: -3.1574668884277344
    4. 'e' → logprob: -5.032466888427734
    5. 'ement' → logprob: -6.282466888427734
    6. '   ' → logprob: -6.657466888427734
    7. ' ' → logprob: -6.782466888427734
    8. 'edly' → logprob: -7.282466888427734
    9. 't' → logprob: -8.032466888427734
    10. 'ed' → logprob: -8.032466888427734

Token 393: ' entre' (ID: 3853)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13124635815620422
    2. ' def' → logprob: -2.381246328353882
    3. '_points' → logprob: -4.756246566772461
    4. ' points' → logprob: -4.881246566772461
    5. ' (' → logprob: -5.381246566772461
    6. '(p' → logprob: -5.381246566772461
    7. 'points' → logprob: -6.006246566772461
    8. '(points' → logprob: -7.256246566772461
    9. ' ' → logprob: -8.006246566772461
    10. '   ' → logprob: -8.381246566772461

Token 394: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.030093399807810783
    2. ' p' → logprob: -3.5300934314727783
    3. '0' → logprob: -9.4050931930542
    4. '(p' → logprob: -9.5300931930542
    5. '10' → logprob: -9.6550931930542
    6. '100' → logprob: -10.0300931930542
    7. ' ' → logprob: -10.1550931930542
    8. '20' → logprob: -12.0300931930542
    9. ' the' → logprob: -12.1550931930542
    10. '50' → logprob: -12.4050931930542

Token 395: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002257071901112795
    2. 'oints' → logprob: -6.752256870269775
    3. 'oint' → logprob: -7.377256870269775
    4. '(p' → logprob: -9.002257347106934
    5. '_' → logprob: -9.627257347106934
    6. ' ' → logprob: -9.877257347106934
    7. '_int' → logprob: -10.127257347106934
    8. ' p' → logprob: -10.127257347106934
    9. 'int' → logprob: -10.377257347106934
    10. '_points' → logprob: -10.627257347106934

Token 396: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7899456024169922
    2. ' and' → logprob: -0.7899456024169922
    3. ' et' → logprob: -3.039945602416992
    4. 'and' → logprob: -3.789945602416992
    5. ' ,' → logprob: -4.414945602416992
    6. ' ' → logprob: -5.039945602416992
    7. ')' → logprob: -7.164945602416992
    8. 'et' → logprob: -7.914945602416992
    9. ' и' → logprob: -8.039945602416992
    10. '+' → logprob: -8.164945602416992

Token 397: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1602439284324646
    2. ' p' → logprob: -1.9102439880371094
    3. ' ' → logprob: -11.16024398803711
    4. '(p' → logprob: -12.53524398803711
    5. ',p' → logprob: -15.16024398803711
    6. '	p' → logprob: -15.16024398803711
    7. '<p' → logprob: -15.28524398803711
    8. ',' → logprob: -15.66024398803711
    9. '_p' → logprob: -15.91024398803711
    10. ' ' → logprob: -16.03524398803711

Token 398: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '_' → logprob: -16.75
    4. 'oint' → logprob: -18.625
    5. 'oints' → logprob: -18.75
    6. '1' → logprob: -19.0
    7. '₂' → logprob: -19.25
    8. 'p' → logprob: -19.375
    9. '   ' → logprob: -19.625
    10. '۲' → logprob: -20.5

Token 399: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001987722353078425
    2. '
' → logprob: -8.625198364257812
    3. ' def' → logprob: -10.875198364257812
    4. ':def' → logprob: -15.875198364257812
    5. ' 
' → logprob: -17.875198364257812
    6. '_def' → logprob: -17.875198364257812
    7. '(def' → logprob: -18.125198364257812
    8. '  
' → logprob: -18.125198364257812
    9. '\' → logprob: -18.625198364257812
    10. '```' → logprob: -18.875198364257812

Token 400: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2546931505203247
    2. ' vérifier' → logprob: -1.3796931505203247
    3. '100' → logprob: -2.004693031311035
    4. ' val' → logprob: -2.629693031311035
    5. ' check' → logprob: -3.129693031311035
    6. ' k' → logprob: -3.254693031311035
    7. ' verifier' → logprob: -3.254693031311035
    8. ' _' → logprob: -4.129693031311035
    9. ' n' → logprob: -4.379693031311035
    10. ' s' → logprob: -4.504693031311035

Token 401: ' approximation' (ID: 112838)
  Prédit: ' précision'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' précision' → logprob: -1.4264541864395142
    2. 'distance' → logprob: -1.9264541864395142
    3. 'def' → logprob: -2.3014540672302246
    4. '100' → logprob: -2.5514540672302246
    5. 'precision' → logprob: -2.6764540672302246
    6. 'pr' → logprob: -3.1764540672302246
    7. 'qual' → logprob: -3.3014540672302246
    8. 't' → logprob: -3.9264540672302246
    9. ' meilleure' → logprob: -3.9264540672302246
    10. 'approx' → logprob: -4.051454067230225

Token 402: ' suffis' (ID: 85470)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.619311974034645e-05
    2. '
' → logprob: -10.250036239624023
    3. ' def' → logprob: -14.125036239624023
    4. 'ndef' → logprob: -17.875036239624023
    5. ':def' → logprob: -18.125036239624023
    6. '\' → logprob: -18.875036239624023
    7. '  
' → logprob: -19.125036239624023
    8. '(def' → logprob: -19.500036239624023
    9. '```' → logprob: -19.750036239624023
    10. ' 
' → logprob: -20.000036239624023

Token 403: 'ante' (ID: 2116)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4858003556728363
    2. ' de' → logprob: -1.6108003854751587
    3. ' d' → logprob: -2.485800266265869
    4. ')' → logprob: -4.485800266265869
    5. 'ément' → logprob: -4.485800266265869
    6. 'import' → logprob: -4.610800266265869
    7. 'e' → logprob: -4.860800266265869
    8. '_' → logprob: -4.985800266265869
    9. 'ée' → logprob: -4.985800266265869
    10. ' à' → logprob: -5.110800266265869

Token 404: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001239196863025427
    2. '
' → logprob: -9.000123977661133
    3. ' def' → logprob: -14.625123977661133
    4. 'ndef' → logprob: -18.750123977661133
    5. ':def' → logprob: -18.750123977661133
    6. '\' → logprob: -19.250123977661133
    7. '```' → logprob: -19.875123977661133
    8. '
' → logprob: -19.875123977661133
    9. '(def' → logprob: -20.125123977661133
    10. '    
' → logprob: -20.250123977661133

Token 405: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -17.125
    3. ' def' → logprob: -17.25
    4. 'ndef' → logprob: -19.875
    5. 'de' → logprob: -20.0
    6. 'd' → logprob: -22.375
    7. ':def' → logprob: -22.875
    8. '	def' → logprob: -23.5
    9. ' 
' → logprob: -24.0
    10. '\' → logprob: -24.125

Token 406: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.5901364088058472
    2. 'is' → logprob: -1.7151364088058472
    3. ' segment' → logprob: -1.7151364088058472
    4. ' is' → logprob: -2.9651365280151367
    5. 'check' → logprob: -3.5901365280151367
    6. ' check' → logprob: -5.465136528015137
    7. 'verify' → logprob: -7.465136528015137
    8. 'sample' → logprob: -7.840136528015137
    9. 'path' → logprob: -8.215136528015137
    10. 'can' → logprob: -8.465136528015137

Token 407: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.04820813238620758
    2. '_contains' → logprob: -3.548208236694336
    3. '_inside' → logprob: -4.548208236694336
    4. '_cont' → logprob: -6.048208236694336
    5. '_sample' → logprob: -6.298208236694336
    6. '_points' → logprob: -7.048208236694336
    7. '_sampling' → logprob: -7.173208236694336
    8. '_samples' → logprob: -7.173208236694336
    9. '_is' → logprob: -7.798208236694336
    10. '_' → logprob: -8.423208236694336

Token 408: '_chain' (ID: 74449)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.12080103158950806
    2. '_circle' → logprob: -2.7458009719848633
    3. '_chain' → logprob: -3.1208009719848633
    4. '_segment' → logprob: -6.870800971984863
    5. 'circle' → logprob: -6.870800971984863
    6. '_' → logprob: -6.870800971984863
    7. '_ch' → logprob: -7.745800971984863
    8. 'cir' → logprob: -7.870800971984863
    9. 'chain' → logprob: -7.995800971984863
    10. '_any' → logprob: -8.495800971984863

Token 409: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00016432604752480984
    2. ' (' → logprob: -8.750164031982422
    3. '(' → logprob: -12.375164031982422
    4. '(segment' → logprob: -14.375164031982422
    5. '((' → logprob: -15.250164031982422
    6. '(s' → logprob: -15.875164031982422
    7. '   ' → logprob: -16.250164031982422
    8. '(points' → logprob: -16.375164031982422
    9. '(seg' → logprob: -16.375164031982422
    10. '(point' → logprob: -16.375164031982422

Token 410: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00040910433745011687
    2. '(p' → logprob: -7.875409126281738
    3. ',' → logprob: -11.500409126281738
    4. ')(' → logprob: -12.625409126281738
    5. 'oints' → logprob: -12.875409126281738
    6. ' ' → logprob: -13.000409126281738
    7. ')' → logprob: -13.125409126281738
    8. '   ' → logprob: -13.625409126281738
    9. 'oint' → logprob: -13.625409126281738
    10. '```' → logprob: -13.750409126281738

Token 411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004723795282188803
    2. ',p' → logprob: -7.750472545623779
    3. ' ,' → logprob: -10.125472068786621
    4. 'p' → logprob: -13.375472068786621
    5. ',
' → logprob: -17.625473022460938
    6. '_,' → logprob: -18.250473022460938
    7. ' p' → logprob: -18.750473022460938
    8. '   ' → logprob: -18.750473022460938
    9. ' ' → logprob: -19.250473022460938
    10. '‌,' → logprob: -19.500473022460938

Token 412: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07888989895582199
    2. ' p' → logprob: -2.578889846801758
    3. '   ' → logprob: -16.328889846801758
    4. ',' → logprob: -16.828889846801758
    5. 'def' → logprob: -18.328889846801758
    6. ' ' → logprob: -18.328889846801758
    7. '	p' → logprob: -18.828889846801758
    8. '    ' → logprob: -19.078889846801758
    9. ')p' → logprob: -19.203889846801758
    10. '  ' → logprob: -19.703889846801758

Token 413: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. ',' → logprob: -14.625000953674316
    3. ' ' → logprob: -15.125000953674316
    4. '   ' → logprob: -17.625
    5. '```' → logprob: -18.5
    6. 'p' → logprob: -18.75
    7. ')' → logprob: -19.25
    8. '₂' → logprob: -19.875
    9. ' ,' → logprob: -20.125
    10. '
' → logprob: -20.125

Token 414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032430703286081553
    2. '):' → logprob: -5.7532429695129395
    3. ' ,' → logprob: -10.378243446350098
    4. '   ' → logprob: -10.503243446350098
    5. ',n' → logprob: -12.753243446350098
    6. ',p' → logprob: -13.378243446350098
    7. '):
' → logprob: -14.378243446350098
    8. ')' → logprob: -14.628243446350098
    9. ' ):' → logprob: -14.628243446350098
    10. ',size' → logprob: -15.878243446350098

Token 415: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.5670359134674072
    2. 'chain' → logprob: -0.9420359134674072
    3. ' chain' → logprob: -3.5670359134674072
    4. 'chains' → logprob: -4.817035675048828
    5. ' circles' → logprob: -5.067035675048828
    6. 'circle' → logprob: -9.067035675048828
    7. ' chains' → logprob: -9.817035675048828
    8. 'cent' → logprob: -10.067035675048828
    9. 'cer' → logprob: -10.442035675048828
    10. 'chaine' → logprob: -11.317035675048828

Token 416: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007016333751380444
    2. ',' → logprob: -5.257016181945801
    3. '):
' → logprob: -6.382016181945801
    4. ' ):' → logprob: -9.8820161819458
    5. ')' → logprob: -11.0070161819458
    6. '   ' → logprob: -11.7570161819458
    7. '):
' → logprob: -11.7570161819458
    8. ':' → logprob: -13.5070161819458
    9. ',c' → logprob: -13.6320161819458
    10. '[]):' → logprob: -14.5070161819458

Token 417: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011033779446734115
    2. ':' → logprob: -10.250110626220703
    3. '
' → logprob: -10.375110626220703
    4. '    
' → logprob: -10.750110626220703
    5. 'n' → logprob: -11.750110626220703
    6. ':
' → logprob: -12.125110626220703
    7. '```' → logprob: -12.375110626220703
    8. ',' → logprob: -12.875110626220703
    9. '   ' → logprob: -14.875110626220703
    10. ')' → logprob: -15.500110626220703

Token 418: ' samples' (ID: 16902)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006025373004376888
    2. 'n' → logprob: -5.506025314331055
    3. 'num' → logprob: -7.131025314331055
    4. 'N' → logprob: -8.006025314331055
    5. 'steps' → logprob: -8.131025314331055
    6. ' n' → logprob: -8.381025314331055
    7. ' steps' → logprob: -9.506025314331055
    8. ' N' → logprob: -9.506025314331055
    9. ' num' → logprob: -9.756025314331055
    10. 'nb' → logprob: -10.631025314331055

Token 419: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38698792457580566
    2. ' =' → logprob: -1.1369879245758057
    3. '_num' → logprob: -9.886987686157227
    4. '   ' → logprob: -10.136987686157227
    5. '_count' → logprob: -11.011987686157227
    6. '=int' → logprob: -12.386987686157227
    7. 'num' → logprob: -12.886987686157227
    8. '_points' → logprob: -13.636987686157227
    9. '_n' → logprob: -15.261987686157227
    10. '_x' → logprob: -15.511987686157227

Token 420: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3137025833129883
    2. ' ' → logprob: -2.0637025833129883
    3. '20' → logprob: -2.0637025833129883
    4. '11' → logprob: -4.813702583312988
    5. '21' → logprob: -5.438702583312988
    6. '100' → logprob: -6.438702583312988
    7. '50' → logprob: -6.813702583312988
    8. '5' → logprob: -9.938702583312988
    9. '25' → logprob: -10.438702583312988
    10. '15' → logprob: -10.688702583312988

Token 421: '20' (ID: 455)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3237982988357544
    2. '20' → logprob: -1.3237982988357544
    3. '100' → logprob: -5.323798179626465
    4. '21' → logprob: -5.948798179626465
    5. '50' → logprob: -6.323798179626465
    6. '11' → logprob: -6.823798179626465
    7. '30' → logprob: -10.448798179626465
    8. '25' → logprob: -10.573798179626465
    9. '5' → logprob: -10.698798179626465
    10. '15' → logprob: -11.698798179626465

Token 422: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21035975217819214
    2. '   ' → logprob: -1.960359811782837
    3. '    
' → logprob: -3.585359811782837
    4. 'for' → logprob: -4.210359573364258
    5. ' for' → logprob: -5.835359573364258
    6. '  
' → logprob: -6.085359573364258
    7. '   
' → logprob: -8.085359573364258
    8. '
' → logprob: -8.710359573364258
    9. ' 
' → logprob: -8.710359573364258
    10. '	
' → logprob: -9.335359573364258

Token 423: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11365227401256561
    2. 'for' → logprob: -2.238652229309082
    3. ' for' → logprob: -8.113652229309082
    4. '    
' → logprob: -8.363652229309082
    5. '   ' → logprob: -8.863652229309082
    6. ' 
' → logprob: -9.613652229309082
    7. '
' → logprob: -10.738652229309082
    8. '  
' → logprob: -10.863652229309082
    9. '   
' → logprob: -11.488652229309082
    10. '0' → logprob: -11.988652229309082

Token 424: ' nombre' (ID: 9733)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2830881178379059
    2. ' for' → logprob: -1.4080880880355835
    3. 'dx' → logprob: -6.408088207244873
    4. 'x' → logprob: -8.908087730407715
    5. ' dx' → logprob: -9.533087730407715
    6. 'length' → logprob: -11.033087730407715
    7. 'sx' → logprob: -11.783087730407715
    8. 't' → logprob: -11.908087730407715
    9. 'import' → logprob: -11.908087730407715
    10. 'distance' → logprob: -12.158087730407715

Token 425: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6368734240531921
    2. '_samples' → logprob: -1.511873483657837
    3. '_points' → logprob: -2.386873483657837
    4. '_d' → logprob: -3.386873483657837
    5. '_de' → logprob: -3.636873483657837
    6. ' de' → logprob: -3.761873483657837
    7. '_s' → logprob: -4.136873245239258
    8. 'de' → logprob: -4.511873245239258
    9. ' d' → logprob: -4.511873245239258
    10. 'd' → logprob: -5.136873245239258

Token 426: ' points' (ID: 5571)
  Prédit: 'samples'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'samples' → logprob: -0.0320793054997921
    2. ' samples' → logprob: -3.5320792198181152
    3. 'points' → logprob: -6.157079219818115
    4. ' points' → logprob: -9.407079696655273
    5. '_samples' → logprob: -9.782079696655273
    6. 'steps' → logprob: -10.282079696655273
    7. 'sample' → logprob: -10.782079696655273
    8. 'é' → logprob: -12.282079696655273
    9. '(samples' → logprob: -13.157079696655273
    10. ' sample' → logprob: -13.157079696655273

Token 427: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.6226301193237305
    2. '<|end|>' → logprob: -1.6226301193237305
    3. 'import' → logprob: -1.8726301193237305
    4. '=' → logprob: -1.8726301193237305
    5. ')' → logprob: -2.9976301193237305
    6. '<|end|>' → logprob: -3.3726301193237305
    7. '   ' → logprob: -3.6226301193237305
    8. '_' → logprob: -3.6226301193237305
    9. '_s' → logprob: -3.9976301193237305
    10. 'for' → logprob: -4.2476301193237305

Token 428: ' tester' (ID: 51819)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.9387351870536804
    2. 'sample' → logprob: -1.1887352466583252
    3. 'tester' → logprob: -1.6887352466583252
    4. ' tester' → logprob: -3.063735246658325
    5. 'éch' → logprob: -3.688735246658325
    6. 'ech' → logprob: -3.688735246658325
    7. 'e' → logprob: -4.688735008239746
    8. ' sample' → logprob: -6.063735008239746
    9. ' sampler' → logprob: -6.188735008239746
    10. 'samples' → logprob: -6.438735008239746

Token 429: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053721800446510315
    2. '
' → logprob: -3.5537219047546387
    3. '    
' → logprob: -4.553721904754639
    4. ' for' → logprob: -5.178721904754639
    5. 'for' → logprob: -5.928721904754639
    6. '  
' → logprob: -7.053721904754639
    7. '   
' → logprob: -7.303721904754639
    8. '<|end|>' → logprob: -7.428721904754639
    9. ' 
' → logprob: -7.928721904754639
    10. 's' → logprob: -7.928721904754639

Token 430: ' le' (ID: 505)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.26963457465171814
    2. 'p' → logprob: -1.6446346044540405
    3. ' segment' → logprob: -4.39463472366333
    4. ' the' → logprob: -4.64463472366333
    5. 'segment' → logprob: -5.01963472366333
    6. '(p' → logprob: -5.26963472366333
    7. ' ' → logprob: -5.39463472366333
    8. 'the' → logprob: -6.26963472366333
    9. '   ' → logprob: -7.76963472366333
    10. ')' → logprob: -7.89463472366333

Token 431: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.2888655364513397
    2. 'segment' → logprob: -1.913865566253662
    3. '"' → logprob: -3.788865566253662
    4. ' "' → logprob: -3.913865566253662
    5. ' p' → logprob: -4.038865566253662
    6. ' ' → logprob: -4.038865566253662
    7. ''' → logprob: -5.163865566253662
    8. ' '' → logprob: -5.288865566253662
    9. 'p' → logprob: -5.663865566253662
    10. ' line' → logprob: -5.788865566253662

Token 432: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019329203059896827
    2. ' for' → logprob: -6.7519330978393555
    3. 'for' → logprob: -7.7519330978393555
    4. '    
' → logprob: -8.501933097839355
    5. '
' → logprob: -9.126933097839355
    6. '	for' → logprob: -11.751933097839355
    7. 's' → logprob: -12.001933097839355
    8. ',' → logprob: -13.376933097839355
    9. 'n' → logprob: -14.376933097839355
    10. '    ' → logprob: -14.501933097839355

Token 433: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10760444402694702
    2. 'for' → logprob: -2.982604503631592
    3. ' for' → logprob: -2.982604503631592
    4. '    
' → logprob: -7.857604503631592
    5. '
' → logprob: -8.482604026794434
    6. '	for' → logprob: -9.982604026794434
    7. '   
' → logprob: -11.482604026794434
    8. 'dx' → logprob: -11.982604026794434
    9. ',' → logprob: -12.107604026794434
    10. 's' → logprob: -12.482604026794434

Token 434: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004085997585207224
    2. ' for' → logprob: -5.504086017608643
    3. 'dx' → logprob: -11.879085540771484
    4. '   ' → logprob: -14.379085540771484
    5. ' dx' → logprob: -17.879085540771484
    6. 'x' → logprob: -18.004085540771484
    7. 'px' → logprob: -18.254085540771484
    8. 'vec' → logprob: -19.504085540771484
    9. '	for' → logprob: -19.754085540771484
    10. 'import' → logprob: -19.879085540771484

Token 435: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02975858747959137
    2. 'i' → logprob: -3.5297586917877197
    3. ' t' → logprob: -11.77975845336914
    4. 't' → logprob: -15.52975845336914
    5. '	i' → logprob: -15.90475845336914
    6. ' _' → logprob: -16.52975845336914
    7. ' ' → logprob: -17.15475845336914
    8. 'k' → logprob: -17.52975845336914
    9. ' k' → logprob: -18.15475845336914
    10. '_i' → logprob: -18.40475845336914

Token 436: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04863039776682854
    2. 'in' → logprob: -3.048630475997925
    3. ' ' → logprob: -10.423630714416504
    4. 'range' → logprob: -12.798630714416504
    5. '1' → logprob: -12.923630714416504
    6. '  ' → logprob: -13.048630714416504
    7. '	in' → logprob: -13.798630714416504
    8. '0' → logprob: -13.923630714416504
    9. 'import' → logprob: -14.173630714416504
    10. ',' → logprob: -14.548630714416504

Token 437: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.014165391214191914
    2. 'range' → logprob: -4.26416540145874
    3. ' ' → logprob: -13.639164924621582
    4. '1' → logprob: -14.389164924621582
    5. '	range' → logprob: -16.6391658782959
    6. '0' → logprob: -16.8891658782959
    7. '(range' → logprob: -16.8891658782959
    8. ' in' → logprob: -17.8891658782959
    9. ' xrange' → logprob: -19.2641658782959
    10. '  ' → logprob: -19.6391658782959

Token 438: '(samples' (ID: 175040)
  Prédit: '(samples'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(samples' → logprob: -0.5761781334877014
    2. '(' → logprob: -0.8261781334877014
    3. 'samples' → logprob: -8.451178550720215
    4. ' (' → logprob: -11.451178550720215
    5. ' samples' → logprob: -11.576178550720215
    6. '1' → logprob: -12.451178550720215
    7. '(sample' → logprob: -14.826178550720215
    8. ' ' → logprob: -15.076178550720215
    9. '(s' → logprob: -15.576178550720215
    10. '_samples' → logprob: -16.5761775970459

Token 439: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5693013668060303
    2. '):' → logprob: -1.0693013668060303
    3. ' +' → logprob: -2.5693013668060303
    4. '):
' → logprob: -4.319301605224609
    5. ' ):' → logprob: -7.444301605224609
    6. '1' → logprob: -8.31930160522461
    7. '   ' → logprob: -10.44430160522461
    8. ')' → logprob: -10.56930160522461
    9. ' ):
' → logprob: -10.94430160522461
    10. '):
' → logprob: -11.69430160522461

Token 440: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031777136027812958
    2. ' ' → logprob: -5.753177642822266
    3. '   ' → logprob: -17.503177642822266
    4. ')' → logprob: -18.628177642822266
    5. '  ' → logprob: -19.003177642822266
    6. '2' → logprob: -19.128177642822266
    7. '```' → logprob: -19.878177642822266
    8. '0' → logprob: -20.628177642822266
    9. '<|end|>' → logprob: -20.753177642822266
    10. '=' → logprob: -21.253177642822266

Token 441: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -18.75000762939453
    4. '2' → logprob: -20.25000762939453
    5. '  ' → logprob: -21.25000762939453
    6. '```' → logprob: -22.25000762939453
    7. '0' → logprob: -22.37500762939453
    8. ')' → logprob: -23.06250762939453
    9. 'import' → logprob: -23.18750762939453
    10. '۱' → logprob: -23.56250762939453

Token 442: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5787299871444702
    2. '):
' → logprob: -0.8287299871444702
    3. '):
' → logprob: -6.07873010635376
    4. ' ):
' → logprob: -8.328729629516602
    5. ' ):' → logprob: -8.578729629516602
    6. ')' → logprob: -9.828729629516602
    7. ':' → logprob: -11.828729629516602
    8. '   ' → logprob: -12.703729629516602
    9. '):

' → logprob: -14.203729629516602
    10. ' )' → logprob: -14.828729629516602

Token 443: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29028773307800293
    2. '   ' → logprob: -1.540287733078003
    3. '    ' → logprob: -3.540287733078003
    4. ' ' → logprob: -6.290287971496582
    5. '        
' → logprob: -6.665287971496582
    6. ' x' → logprob: -6.665287971496582
    7. ' s' → logprob: -7.165287971496582
    8. '<|end|>' → logprob: -7.165287971496582
    9. '  ' → logprob: -7.665287971496582
    10. '    
' → logprob: -7.915287971496582

Token 444: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.05549134314060211
    2. 't' (adapté à ' t') → logprob: -2.9304914474487305
    3. '       ' → logprob: -7.8054914474487305
    4. ' x' → logprob: -8.93049144744873
    5. 'x' → logprob: -9.80549144744873
    6. '   ' → logprob: -12.18049144744873
    7. 'tx' → logprob: -13.55549144744873
    8. '	t' → logprob: -13.80549144744873
    9. ' tx' → logprob: -13.93049144744873
    10. ' s' → logprob: -13.93049144744873

Token 445: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038176897913217545
    2. '=' → logprob: -3.288177013397217
    3. ' ' → logprob: -9.663176536560059
    4. '<|end|>' → logprob: -9.788176536560059
    5. ')' → logprob: -12.413176536560059
    6. '.' → logprob: -13.038176536560059
    7. '/' → logprob: -13.788176536560059
    8. ',' → logprob: -13.913176536560059
    9. '  ' → logprob: -14.038176536560059
    10. '   ' → logprob: -14.288176536560059

Token 446: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.008616108447313309
    2. 'i' → logprob: -4.758615970611572
    3. ' ' → logprob: -13.50861644744873
    4. '1' → logprob: -16.383615493774414
    5. '0' → logprob: -16.508615493774414
    6. '   ' → logprob: -17.133615493774414
    7. '	i' → logprob: -17.133615493774414
    8. '  ' → logprob: -17.383615493774414
    9. ' float' → logprob: -18.008615493774414
    10. '(i' → logprob: -18.508615493774414

Token 447: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.2024184614419937
    2. '/' → logprob: -1.7024184465408325
    3. '/s' → logprob: -7.077418327331543
    4. '/sample' → logprob: -8.952418327331543
    5. '/(' → logprob: -10.452418327331543
    6. ' ' → logprob: -14.452418327331543
    7. ' ' → logprob: -14.577418327331543
    8. '/d' → logprob: -15.077418327331543
    9. ' /
' → logprob: -15.577418327331543
    10. '/
' → logprob: -15.702418327331543

Token 448: ' samples' (ID: 16902)
  Prédit: 'samples'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'samples' → logprob: -0.00038134094211272895
    2. ' samples' → logprob: -8.000381469726562
    3. '20' → logprob: -10.000381469726562
    4. '(samples' → logprob: -14.875381469726562
    5. ' ' → logprob: -16.625381469726562
    6. 'sample' → logprob: -18.625381469726562
    7. '.samples' → logprob: -21.125381469726562
    8. '_samples' → logprob: -21.375381469726562
    9. 'amples' → logprob: -21.375381469726562
    10. 'sam' → logprob: -21.625381469726562

Token 449: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5131633877754211
    2. '
' → logprob: -1.0131633281707764
    3. '   ' → logprob: -4.8881635665893555
    4. '<|end|>' → logprob: -4.8881635665893555
    5. ' 
' → logprob: -5.1381635665893555
    6. '        
' → logprob: -5.1381635665893555
    7. ',' → logprob: -5.3881635665893555
    8. '  
' → logprob: -5.5131635665893555
    9. '    
' → logprob: -7.1381635665893555
    10. ' ,' → logprob: -7.8881635665893555

Token 450: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002560945285949856
    2. '   ' → logprob: -8.875256538391113
    3. '        
' → logprob: -10.000256538391113
    4. ' x' → logprob: -11.125256538391113
    5. ' p' → logprob: -11.250256538391113
    6. ' ' → logprob: -11.375256538391113
    7. ',' → logprob: -12.000256538391113
    8. '        ' → logprob: -12.750256538391113
    9. '<|end|>' → logprob: -13.000256538391113
    10. ' point' → logprob: -13.000256538391113

Token 451: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.6951077580451965
    2. ' x' → logprob: -0.6951077580451965
    3. ' px' → logprob: -6.695107936859131
    4. 'xp' → logprob: -7.445107936859131
    5. 'px' → logprob: -9.445107460021973
    6. ' xp' → logprob: -10.195107460021973
    7. 'xt' → logprob: -12.070107460021973
    8. '       ' → logprob: -12.445107460021973
    9. ' xt' → logprob: -12.820107460021973
    10. '   ' → logprob: -13.070107460021973

Token 452: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07894311100244522
    2. '=' → logprob: -2.5789430141448975
    3. '1' → logprob: -9.953943252563477
    4. ',' → logprob: -12.703943252563477
    5. '=p' → logprob: -13.203943252563477
    6. '=int' → logprob: -14.453943252563477
    7. ' ' → logprob: -15.828943252563477
    8. 'p' → logprob: -16.953943252563477
    9. ' =(' → logprob: -17.203943252563477
    10. '0' → logprob: -17.578943252563477

Token 453: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00861456897109747
    2. ' p' → logprob: -4.758614540100098
    3. '   ' → logprob: -17.883615493774414
    4. ' ' → logprob: -18.008615493774414
    5. '(' → logprob: -19.008615493774414
    6. '(p' → logprob: -19.508615493774414
    7. '	p' → logprob: -20.383615493774414
    8. ' (' → logprob: -20.633615493774414
    9. ' ' → logprob: -21.508615493774414
    10. '  ' → logprob: -21.633615493774414

Token 454: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'oint' → logprob: -17.875
    3. '2' → logprob: -19.75
    4. 'p' → logprob: -20.25
    5. 'oints' → logprob: -20.375
    6. 'aram' → logprob: -20.875
    7. '```' → logprob: -21.0
    8. 'ar' → logprob: -21.4375
    9. 'a' → logprob: -21.5625
    10. 'alue' → logprob: -21.6875

Token 455: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.666993507067673e-05
    2. '0' → logprob: -10.250036239624023
    3. '+' → logprob: -14.250036239624023
    4. '1' → logprob: -15.125036239624023
    5. ' +' → logprob: -15.375036239624023
    6. ' [' → logprob: -16.500036239624023
    7. '(' → logprob: -16.750036239624023
    8. ' ' → logprob: -17.250036239624023
    9. 'x' → logprob: -17.375036239624023
    10. '
' → logprob: -17.750036239624023

Token 456: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '
' → logprob: -18.25
    4. '   ' → logprob: -19.0
    5. '۰' → logprob: -20.125
    6. '```' → logprob: -20.1875
    7. ']' → logprob: -20.625
    8. '

' → logprob: -20.9375
    9. '[' → logprob: -21.0625
    10. '00' → logprob: -21.25

Token 457: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04881013557314873
    2. '+' → logprob: -3.0488102436065674
    3. '*' → logprob: -8.923810005187988
    4. ' *' → logprob: -9.673810005187988
    5. '*(' → logprob: -11.423810005187988
    6. '+(' → logprob: -11.673810005187988
    7. ' +(' → logprob: -12.048810005187988
    8. ')' → logprob: -14.548810005187988
    9. ' ' → logprob: -15.298810005187988
    10. '+t' → logprob: -16.048810958862305

Token 458: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6954240202903748
    2. ' +' → logprob: -0.6954240202903748
    3. '*' → logprob: -6.3204240798950195
    4. '*(' → logprob: -7.9454240798950195
    5. ' *' → logprob: -9.19542407989502
    6. '+(' → logprob: -10.94542407989502
    7. '+t' → logprob: -13.69542407989502
    8. ' +(' → logprob: -14.94542407989502
    9. ' ' → logprob: -16.070423126220703
    10. ' ' → logprob: -16.445423126220703

Token 459: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.015289043076336384
    2. ' t' → logprob: -4.265288829803467
    3. ' (' → logprob: -7.390288829803467
    4. '(p' → logprob: -8.015289306640625
    5. '(t' → logprob: -8.640289306640625
    6. '(' → logprob: -15.140289306640625
    7. ' ' → logprob: -16.515289306640625
    8. 'p' → logprob: -16.765289306640625
    9. '   ' → logprob: -17.015289306640625
    10. '	t' → logprob: -17.890289306640625

Token 460: '*(' (ID: 14793)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.432894766330719
    2. '*(' → logprob: -1.4328947067260742
    3. '*' → logprob: -2.182894706726074
    4. '*p' → logprob: -10.682894706726074
    5. '(p' → logprob: -11.182894706726074
    6. ' *(' → logprob: -13.057894706726074
    7. '*((' → logprob: -15.932894706726074
    8. ' (' → logprob: -17.05789566040039
    9. ' ' → logprob: -17.05789566040039
    10. '*object' → logprob: -17.68289566040039

Token 461: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00017016702622640878
    2. ' p' → logprob: -8.75016975402832
    3. '(p' → logprob: -11.37516975402832
    4. ' (' → logprob: -16.12516975402832
    5. '   ' → logprob: -16.62516975402832
    6. '	p' → logprob: -19.25016975402832
    7. ')p' → logprob: -19.87516975402832
    8. '  ' → logprob: -20.87516975402832
    9. ' ' → logprob: -21.12516975402832
    10. ')' → logprob: -21.37516975402832

Token 462: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '
' → logprob: -18.125
    4. '1' → logprob: -18.125
    5. '```' → logprob: -18.1875
    6. '۲' → logprob: -19.125
    7. '[' → logprob: -19.25
    8. '   ' → logprob: -19.6875
    9. '``' → logprob: -19.6875
    10. '２' → logprob: -19.9375

Token 463: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0016161426901817322
    2. '0' → logprob: -6.50161600112915
    3. '1' → logprob: -9.126616477966309
    4. ' ' → logprob: -12.876616477966309
    5. ' [' → logprob: -14.001616477966309
    6. '   ' → logprob: -14.626616477966309
    7. '][' → logprob: -14.751616477966309
    8. ')[' → logprob: -15.376616477966309
    9. '[
' → logprob: -15.876616477966309
    10. '```' → logprob: -15.876616477966309

Token 464: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3132859468460083
    2. '1' → logprob: -1.3132859468460083
    3. ' ' → logprob: -10.688285827636719
    4. '   ' → logprob: -14.063285827636719
    5. '  ' → logprob: -15.438285827636719
    6. '[' → logprob: -15.813285827636719
    7. '
' → logprob: -16.31328582763672
    8. '```' → logprob: -17.56328582763672
    9. '(' → logprob: -17.93828582763672
    10. '

' → logprob: -18.06328582763672

Token 465: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012553688138723373
    2. '-' → logprob: -4.387553691864014
    3. ')' → logprob: -11.012553215026855
    4. '[' → logprob: -11.387553215026855
    5. ' ' → logprob: -11.887553215026855
    6. '-p' → logprob: -12.762553215026855
    7. ' p' → logprob: -13.137553215026855
    8. '1' → logprob: -13.512553215026855
    9. 'p' → logprob: -13.637553215026855
    10. '0' → logprob: -14.262553215026855

Token 466: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.026329679414629936
    2. '-' → logprob: -3.651329755783081
    3. ' ' → logprob: -11.77632999420166
    4. '[' → logprob: -12.02632999420166
    5. ')' → logprob: -12.40132999420166
    6. '-p' → logprob: -12.52632999420166
    7. '1' → logprob: -12.52632999420166
    8. '0' → logprob: -13.40132999420166
    9. ' p' → logprob: -13.52632999420166
    10. '2' → logprob: -14.65132999420166

Token 467: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06196768581867218
    2. ' p' → logprob: -2.811967611312866
    3. '   ' → logprob: -18.686967849731445
    4. ')p' → logprob: -18.686967849731445
    5. ' ' → logprob: -19.061967849731445
    6. '	p' → logprob: -19.686967849731445
    7. ')' → logprob: -20.311967849731445
    8. '  ' → logprob: -20.436967849731445
    9. ' п' → logprob: -21.561967849731445
    10. '    ' → logprob: -21.686967849731445

Token 468: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0430859737098217
    2. '0' → logprob: -3.168086051940918
    3. ' ' → logprob: -9.918086051940918
    4. 'p' → logprob: -11.043086051940918
    5. '2' → logprob: -11.793086051940918
    6. ' p' → logprob: -12.293086051940918
    7. '[' → logprob: -12.293086051940918
    8. ')' → logprob: -13.480586051940918
    9. '   ' → logprob: -14.293086051940918
    10. '```' → logprob: -15.105586051940918

Token 469: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.428754985332489
    2. '0' → logprob: -1.0537550449371338
    3. ')' → logprob: -10.053754806518555
    4. ' ' → logprob: -12.303754806518555
    5. '1' → logprob: -13.428754806518555
    6. ']' → logprob: -13.553754806518555
    7. '[
' → logprob: -13.803754806518555
    8. '])' → logprob: -14.178754806518555
    9. '```' → logprob: -14.178754806518555
    10. '   ' → logprob: -14.303754806518555

Token 470: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.750003814697266
    3. ')' → logprob: -15.125003814697266
    4. '[' → logprob: -15.375003814697266
    5. '   ' → logprob: -16.875003814697266
    6. '۰' → logprob: -17.500003814697266
    7. '  ' → logprob: -18.312503814697266
    8. ']' → logprob: -18.437503814697266
    9. '```' → logprob: -19.250003814697266
    10. '    ' → logprob: -19.312503814697266

Token 471: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003942112671211362
    2. ')
' → logprob: -7.875394344329834
    3. ' )' → logprob: -11.250393867492676
    4. ')

' → logprob: -14.625393867492676
    5. ')
' → logprob: -15.250393867492676
    6. '   ' → logprob: -15.750393867492676
    7. '),' → logprob: -16.500394821166992
    8. ' )
' → logprob: -16.625394821166992
    9. '[' → logprob: -16.750394821166992
    10. '       ' → logprob: -17.250394821166992

Token 472: '       ' (ID: 309)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.054816946387290955
    2. '       ' → logprob: -3.179816961288452
    3. '   ' → logprob: -4.929816722869873
    4. 'y' → logprob: -5.429816722869873
    5. ' ' → logprob: -9.804817199707031
    6. '    ' → logprob: -10.429817199707031
    7. '	y' → logprob: -11.054817199707031
    8. ',y' → logprob: -11.679817199707031
    9. '        ' → logprob: -11.804817199707031
    10. '<|end|>' → logprob: -12.429817199707031

Token 473: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.4740844964981079
    2. ' y' → logprob: -0.9740844964981079
    3. '       ' → logprob: -12.099084854125977
    4. '    ' → logprob: -13.974084854125977
    5. '   ' → logprob: -14.224084854125977
    6. '	y' → logprob: -14.974084854125977
    7. '        ' → logprob: -16.099084854125977
    8. ' ' → logprob: -17.224084854125977
    9. '  ' → logprob: -18.224084854125977
    10. '     ' → logprob: -18.349084854125977

Token 474: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761153697967529
    2. ' =' → logprob: -0.8261153697967529
    3. '[' → logprob: -8.951115608215332
    4. '<|end|>' → logprob: -10.951115608215332
    5. '   ' → logprob: -11.951115608215332
    6. ')' → logprob: -12.576115608215332
    7. ',' → logprob: -12.576115608215332
    8. 's' → logprob: -12.701115608215332
    9. ' ' → logprob: -12.826115608215332
    10. '1' → logprob: -12.826115608215332

Token 475: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.03804183006286621
    2. ' p' → logprob: -3.288041830062866
    3. '(p' → logprob: -15.288042068481445
    4. '1' → logprob: -16.163042068481445
    5. '   ' → logprob: -18.163042068481445
    6. '	p' → logprob: -18.538042068481445
    7. ' ' → logprob: -18.788042068481445
    8. ')p' → logprob: -18.788042068481445
    9. '<p' → logprob: -19.038042068481445
    10. '=p' → logprob: -19.538042068481445

Token 476: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012487331696320325
    2. '[' → logprob: -9.00012493133545
    3. '```' → logprob: -14.00012493133545
    4. ' ' → logprob: -15.00012493133545
    5. '(' → logprob: -16.375123977661133
    6. '   ' → logprob: -16.875123977661133
    7. 'oint' → logprob: -17.687623977661133
    8. '_' → logprob: -18.000123977661133
    9. '.' → logprob: -18.062623977661133
    10. '  ' → logprob: -18.375123977661133

Token 477: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.054500666621607e-06
    2. '0' → logprob: -12.87500286102295
    3. '1' → logprob: -15.75000286102295
    4. '][' → logprob: -16.250003814697266
    5. '```' → logprob: -16.875003814697266
    6. ' [' → logprob: -17.500003814697266
    7. '   ' → logprob: -17.625003814697266
    8. '(' → logprob: -18.000003814697266
    9. '
' → logprob: -18.250003814697266
    10. '.' → logprob: -18.750003814697266

Token 478: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4287174344062805
    2. '1' → logprob: -1.0537173748016357
    3. '[' → logprob: -11.178717613220215
    4. ' ' → logprob: -13.178717613220215
    5. '   ' → logprob: -15.053717613220215
    6. '
' → logprob: -15.053717613220215
    7. '(' → logprob: -16.3037166595459
    8. '```' → logprob: -16.3037166595459
    9. '  ' → logprob: -17.3037166595459
    10. ']' → logprob: -17.3662166595459

Token 479: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4936671853065491
    2. ')' → logprob: -1.7436671257019043
    3. '+' → logprob: -2.2436671257019043
    4. ' +' → logprob: -2.3686671257019043
    5. ']' → logprob: -4.618667125701904
    6. '0' → logprob: -5.493667125701904
    7. ')+' → logprob: -7.993667125701904
    8. ']+' → logprob: -8.243667602539062
    9. ' ' → logprob: -8.493667602539062
    10. '(' → logprob: -10.118667602539062

Token 480: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38707852363586426
    2. '+' → logprob: -1.1370785236358643
    3. '[' → logprob: -9.012078285217285
    4. '0' → logprob: -9.762078285217285
    5. ' ' → logprob: -11.012078285217285
    6. ')' → logprob: -12.887078285217285
    7. '(' → logprob: -13.262078285217285
    8. ' ' → logprob: -13.262078285217285
    9. ' +
' → logprob: -13.762078285217285
    10. '+y' → logprob: -14.512078285217285

Token 481: ' t' (ID: 260)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02580772526562214
    2. ' p' → logprob: -3.9008076190948486
    3. 't' → logprob: -5.275807857513428
    4. ' t' → logprob: -9.02580738067627
    5. '0' → logprob: -11.90080738067627
    6. '   ' → logprob: -11.90080738067627
    7. '       ' → logprob: -13.27580738067627
    8. ' ' → logprob: -13.65080738067627
    9. '1' → logprob: -14.90080738067627
    10. '(p' → logprob: -14.90080738067627

Token 482: '*(' (ID: 14793)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08103189617395401
    2. '+' → logprob: -3.0810317993164062
    3. ' +' → logprob: -3.4560317993164062
    4. '+(' → logprob: -8.831031799316406
    5. '(' → logprob: -9.456031799316406
    6. '*(' → logprob: -10.206031799316406
    7. '*' → logprob: -10.956031799316406
    8. ' [' → logprob: -11.206031799316406
    9. ')' → logprob: -11.456031799316406
    10. '(p' → logprob: -11.581031799316406

Token 483: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.639096970204264e-05
    2. ' p' → logprob: -9.250096321105957
    3. '(p' → logprob: -15.625096321105957
    4. ')p' → logprob: -16.875097274780273
    5. '1' → logprob: -18.125097274780273
    6. '	p' → logprob: -18.375097274780273
    7. '2' → logprob: -18.625097274780273
    8. ')' → logprob: -19.000097274780273
    9. '```' → logprob: -19.250097274780273
    10. '   ' → logprob: -19.250097274780273

Token 484: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00030078491545282304
    2. '[' → logprob: -8.375300407409668
    3. '0' → logprob: -9.625300407409668
    4. ' ' → logprob: -13.625300407409668
    5. '   ' → logprob: -13.750300407409668
    6. '2' → logprob: -14.500300407409668
    7. '
' → logprob: -14.625300407409668
    8. '```' → logprob: -15.250300407409668
    9. '(' → logprob: -15.625300407409668
    10. '-' → logprob: -16.500301361083984

Token 485: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014656426385045052
    2. '1' → logprob: -4.2646565437316895
    3. '0' → logprob: -7.6396565437316895
    4. '][' → logprob: -12.889656066894531
    5. ' ' → logprob: -12.889656066894531
    6. '   ' → logprob: -13.639656066894531
    7. ')' → logprob: -13.764656066894531
    8. '
' → logprob: -14.139656066894531
    9. ']' → logprob: -14.139656066894531
    10. '```' → logprob: -14.139656066894531

Token 486: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22542612254619598
    2. '0' → logprob: -1.6004260778427124
    3. '[' → logprob: -11.725425720214844
    4. ' ' → logprob: -13.225425720214844
    5. '   ' → logprob: -13.725425720214844
    6. '
' → logprob: -13.850425720214844
    7. '-' → logprob: -15.100425720214844
    8. '```' → logprob: -15.162925720214844
    9. ']' → logprob: -15.850425720214844
    10. '  ' → logprob: -16.225425720214844

Token 487: ']' (ID: 60)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007666132412850857
    2. '[' → logprob: -4.882666110992432
    3. ')' → logprob: -9.75766658782959
    4. '])' → logprob: -14.63266658782959
    5. ' ' → logprob: -14.63266658782959
    6. '1' → logprob: -14.75766658782959
    7. ']' → logprob: -15.13266658782959
    8. '#' → logprob: -15.50766658782959
    9. '   ' → logprob: -15.50766658782959
    10. 'def' → logprob: -16.257665634155273

Token 488: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1426994353532791
    2. '[' → logprob: -2.0176994800567627
    3. ' ' → logprob: -11.267699241638184
    4. ')' → logprob: -11.892699241638184
    5. '1' → logprob: -13.642699241638184
    6. '-' → logprob: -14.142699241638184
    7. ' [' → logprob: -14.517699241638184
    8. '][' → logprob: -14.642699241638184
    9. ')[' → logprob: -14.767699241638184
    10. '   ' → logprob: -15.142699241638184

Token 489: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07141761481761932
    2. '0' → logprob: -2.6964175701141357
    3. ' p' → logprob: -7.071417808532715
    4. '(p' → logprob: -8.321417808532715
    5. '1' → logprob: -8.446417808532715
    6. ' ' → logprob: -8.821417808532715
    7. '   ' → logprob: -12.196417808532715
    8. 'y' → logprob: -12.321417808532715
    9. ')p' → logprob: -12.446417808532715
    10. '(' → logprob: -12.571417808532715

Token 490: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004975094925612211
    2. '1' → logprob: -7.625497341156006
    3. '[' → logprob: -11.625497817993164
    4. ' ' → logprob: -15.250497817993164
    5. '   ' → logprob: -15.875497817993164
    6. '```' → logprob: -16.875497817993164
    7. '
' → logprob: -17.500497817993164
    8. '-' → logprob: -18.375497817993164
    9. '  ' → logprob: -18.500497817993164
    10. '(' → logprob: -19.187997817993164

Token 491: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02730095200240612
    2. '[' → logprob: -3.7773008346557617
    3. '1' → logprob: -5.527300834655762
    4. '   ' → logprob: -10.402300834655762
    5. ' ' → logprob: -11.277300834655762
    6. '][' → logprob: -11.527300834655762
    7. '
' → logprob: -12.652300834655762
    8. '-' → logprob: -13.027300834655762
    9. '])' → logprob: -13.277300834655762
    10. '```' → logprob: -13.277300834655762

Token 492: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.107425062713446e-06
    2. '1' → logprob: -12.125006675720215
    3. '[' → logprob: -14.000006675720215
    4. ' ' → logprob: -15.250006675720215
    5. '   ' → logprob: -15.500006675720215
    6. '```' → logprob: -16.43750762939453
    7. '
' → logprob: -16.56250762939453
    8. ']' → logprob: -17.43750762939453
    9. '  ' → logprob: -17.62500762939453
    10. '-' → logprob: -17.75000762939453

Token 493: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001549089647596702
    2. ')**' → logprob: -9.625154495239258
    3. '])' → logprob: -9.875154495239258
    4. ')
' → logprob: -11.000154495239258
    5. ' )' → logprob: -11.750154495239258
    6. '))' → logprob: -11.875154495239258
    7. ')]' → logprob: -14.000154495239258
    8. ']' → logprob: -14.250154495239258
    9. '   ' → logprob: -14.250154495239258
    10. '[' → logprob: -14.500154495239258

Token 494: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001882823125924915
    2. '   ' → logprob: -9.250187873840332
    3. ' for' → logprob: -10.125187873840332
    4. '        
' → logprob: -10.500187873840332
    5. ' found' → logprob: -11.750187873840332
    6. '
' → logprob: -13.250187873840332
    7. '           ' → logprob: -13.250187873840332
    8. ',' → logprob: -13.375187873840332
    9. '      ' → logprob: -13.375187873840332
    10. ' if' → logprob: -13.375187873840332

Token 495: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6416230201721191
    2. 'inside' → logprob: -1.1416230201721191
    3. 'in' → logprob: -2.391623020172119
    4. '       ' → logprob: -3.516623020172119
    5. ' if' → logprob: -4.266623020172119
    6. 'for' → logprob: -4.766623020172119
    7. ' inside' → logprob: -5.266623020172119
    8. 'found' → logprob: -5.891623020172119
    9. 'contained' → logprob: -6.641623020172119
    10. ' in' → logprob: -7.391623020172119

Token 496: ' vérifier' (ID: 93671)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.8284114003181458
    2. 'in' → logprob: -1.703411340713501
    3. 'if' → logprob: -1.703411340713501
    4. ' if' → logprob: -2.703411340713501
    5. ' inside' → logprob: -2.703411340713501
    6. ' in' → logprob: -3.578411340713501
    7. 'for' → logprob: -4.32841157913208
    8. 'found' → logprob: -4.45341157913208
    9. ' for' → logprob: -5.32841157913208
    10. 'contained' → logprob: -5.82841157913208

Token 497: ' si' (ID: 1784)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.431569367647171
    2. ' if' → logprob: -1.1815693378448486
    3. ' in' → logprob: -3.9315693378448486
    4. ' for' → logprob: -4.181569576263428
    5. 'if' → logprob: -5.556569576263428
    6. 'any' → logprob: -5.806569576263428
    7. ' inside' → logprob: -7.056569576263428
    8. 'in' → logprob: -7.556569576263428
    9. 'for' → logprob: -7.681569576263428
    10. 'inside' → logprob: -9.80656909942627

Token 498: ' (' (ID: 350)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.14342452585697174
    2. 'any' → logprob: -2.0184245109558105
    3. '(any' → logprob: -7.3934245109558105
    4. ' math' → logprob: -9.518424987792969
    5. 'math' → logprob: -10.268424987792969
    6. ' (' → logprob: -11.518424987792969
    7. ' dist' → logprob: -12.018424987792969
    8. 'dist' → logprob: -13.268424987792969
    9. ' ' → logprob: -13.393424987792969
    10. ' quelcon' → logprob: -13.643424987792969

Token 499: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.022313617169857025
    2. ' x' → logprob: -4.647313594818115
    3. '(x' → logprob: -4.897313594818115
    4. 'any' → logprob: -5.897313594818115
    5. ' any' → logprob: -6.272313594818115
    6. ' (' → logprob: -8.772314071655273
    7. ')' → logprob: -9.397314071655273
    8. 'math' → logprob: -10.397314071655273
    9. '(any' → logprob: -10.522314071655273
    10. ')x' → logprob: -11.022314071655273

Token 500: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11337367445230484
    2. ',y' → logprob: -2.2383737564086914
    3. ' ,' → logprob: -7.613373756408691
    4. ' -' → logprob: -10.238373756408691
    5. '-' → logprob: -11.363373756408691
    6. ',
' → logprob: -12.988373756408691
    7. ')' → logprob: -13.238373756408691
    8. '
' → logprob: -13.363373756408691
    9. '```' → logprob: -13.488373756408691
    10. ',t' → logprob: -15.113373756408691

Token 501: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013172623002901673
    2. ',' → logprob: -7.126317024230957
    3. ' est' → logprob: -8.376317024230957
    4. ')is' → logprob: -9.876317024230957
    5. ' )' → logprob: -10.001317024230957
    6. ' dans' → logprob: -10.001317024230957
    7. 'dans' → logprob: -10.126317024230957
    8. ')
' → logprob: -10.501317024230957
    9. ',)' → logprob: -11.001317024230957
    10. '),' → logprob: -11.501317024230957

Token 502: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.34110894799232483
    2. ' is' → logprob: -1.3411089181900024
    3. 'est' → logprob: -4.341108798980713
    4. 'is' → logprob: -4.466108798980713
    5. 'dans' → logprob: -7.216108798980713
    6. ' dans' → logprob: -7.841108798980713
    7. 'in' → logprob: -8.091109275817871
    8. ')' → logprob: -8.091109275817871
    9. 'inside' → logprob: -8.091109275817871
    10. ' in' → logprob: -8.466109275817871

Token 503: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.3229026794433594
    2. 'inside' → logprob: -2.3229026794433594
    3. ' dans' → logprob: -2.4479026794433594
    4. ' contenu' → logprob: -3.3229026794433594
    5. 'contained' → logprob: -3.8229026794433594
    6. ' inside' → logprob: -4.072902679443359
    7. 'in' → logprob: -4.697902679443359
    8. ' in' → logprob: -5.947902679443359
    9. 'conten' → logprob: -6.447902679443359
    10. '```' → logprob: -6.947902679443359

Token 504: ' au' (ID: 2791)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.12956051528453827
    2. 'any' → logprob: -2.2545604705810547
    3. ' at' → logprob: -4.129560470581055
    4. 'at' → logprob: -8.004560470581055
    5. ' some' → logprob: -9.629560470581055
    6. ')' → logprob: -10.504560470581055
    7. 'some' → logprob: -10.754560470581055
    8. ' quelcon' → logprob: -11.004560470581055
    9. '   ' → logprob: -11.254560470581055
    10. ' au' → logprob: -11.879560470581055

Token 505: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.001049838843755424
    2. ' moins' → logprob: -7.126049995422363
    3. 'mo' → logprob: -8.876049995422363
    4. 'menos' → logprob: -9.501049995422363
    5. 'm' → logprob: -11.126049995422363
    6. 'less' → logprob: -11.501049995422363
    7. 'meno' → logprob: -13.501049995422363
    8. 'least' → logprob: -13.501049995422363
    9. 'c' → logprob: -14.501049995422363
    10. ' menos' → logprob: -14.751049995422363

Token 506: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.24581466615200043
    2. 'l' → logprob: -2.245814561843872
    3. ' un' → logprob: -2.870814561843872
    4. ' l' → logprob: -2.995814561843872
    5. ' one' → logprob: -6.245814800262451
    6. 'one' → logprob: -6.620814800262451
    7. 'une' → logprob: -6.870814800262451
    8. ' ' → logprob: -7.620814800262451
    9. '```' → logprob: -8.120814323425293
    10. ''un' → logprob: -9.370814323425293

Token 507: ' cercle' (ID: 172399)
  Prédit: 'circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'circle' → logprob: -0.7789820432662964
    2. 'cir' → logprob: -0.9039820432662964
    3. ' circle' → logprob: -2.778982162475586
    4. '(c' → logprob: -3.653982162475586
    5. 'c' → logprob: -4.028982162475586
    6. ' cercle' → logprob: -4.153982162475586
    7. '(circle' → logprob: -5.153982162475586
    8. ' circles' → logprob: -5.403982162475586
    9. ' (' → logprob: -6.028982162475586
    10. ' c' → logprob: -7.028982162475586

Token 508: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000523246475495398
    2. ':' → logprob: -8.000523567199707
    3. ' for' → logprob: -9.750523567199707
    4. ',' → logprob: -10.000523567199707
    5. '        
' → logprob: -10.875523567199707
    6. ':
' → logprob: -11.625523567199707
    7. '           ' → logprob: -11.750523567199707
    8. ')' → logprob: -11.875523567199707
    9. '<|end|>' → logprob: -11.875523567199707
    10. ' (' → logprob: -12.500523567199707

Token 509: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.3596853831550106e-05
    2. '        
' → logprob: -11.500053405761719
    3. ':' → logprob: -11.625053405761719
    4. ' for' → logprob: -11.750053405761719
    5. '<|end|>' → logprob: -11.875053405761719
    6. ',' → logprob: -12.125053405761719
    7. '           ' → logprob: -12.625053405761719
    8. ' =' → logprob: -13.000053405761719
    9. ')' → logprob: -13.500053405761719
    10. '   ' → logprob: -13.500053405761719

Token 510: ' if' (ID: 538)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.0623059272766113
    2. '       ' → logprob: -1.1873059272766113
    3. 'if' (adapté à ' if') → logprob: -1.4373059272766113
    4. 'inside' → logprob: -2.8123059272766113
    5. ' if' → logprob: -3.4373059272766113
    6. ' in' → logprob: -4.812305927276611
    7. 'found' → logprob: -4.812305927276611
    8. ' inside' → logprob: -6.187305927276611
    9. 'contained' → logprob: -7.937305927276611
    10. ' found' → logprob: -8.062305450439453

Token 511: ' not' (ID: 625)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.1656845808029175
    2. 'not' → logprob: -1.1656845808029175
    3. ' not' → logprob: -1.2906845808029175
    4. ' all' → logprob: -2.290684700012207
    5. 'any' → logprob: -9.290684700012207
    6. '   ' → logprob: -9.540684700012207
    7. ' ' → logprob: -10.040684700012207
    8. 'dist' → logprob: -10.415684700012207
    9. ' any' → logprob: -10.665684700012207
    10. '  ' → logprob: -12.165684700012207

Token 512: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.00026181264547631145
    2. ' any' → logprob: -8.250262260437012
    3. '(any' → logprob: -14.625262260437012
    4. '   ' → logprob: -17.875261306762695
    5. '```' → logprob: -19.875261306762695
    6. ' ' → logprob: -20.250261306762695
    7. '_any' → logprob: -20.250261306762695
    8. '  ' → logprob: -20.625261306762695
    9. '.any' → logprob: -21.000261306762695
    10. 'all' → logprob: -21.000261306762695

Token 513: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.4527682363986969
    2. 'dist' → logprob: -1.0777682065963745
    3. '(math' → logprob: -4.702768325805664
    4. '((' → logprob: -5.077768325805664
    5. ' dist' → logprob: -5.452768325805664
    6. '(' → logprob: -5.952768325805664
    7. 'math' → logprob: -7.077768325805664
    8. ' (' → logprob: -7.577768325805664
    9. ' math' → logprob: -9.702768325805664
    10. '(((' → logprob: -10.077768325805664

Token 514: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0004038593906443566
    2. '(' → logprob: -8.25040340423584
    3. '(c' → logprob: -9.12540340423584
    4. '(p' → logprob: -10.75040340423584
    5. '(((' → logprob: -11.50040340423584
    6. ' ((' → logprob: -14.25040340423584
    7. '(circle' → logprob: -14.25040340423584
    8. '(point' → logprob: -15.12540340423584
    9. '(x' → logprob: -15.50040340423584
    10. '(
' → logprob: -15.50040340423584

Token 515: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6933334469795227
    2. '(x' → logprob: -0.6933334469795227
    3. ' (' → logprob: -9.068333625793457
    4. '(' → logprob: -10.318333625793457
    5. ' x' → logprob: -10.568333625793457
    6. '{x' → logprob: -13.068333625793457
    7. ')x' → logprob: -13.443333625793457
    8. ')' → logprob: -13.568333625793457
    9. ',x' → logprob: -13.818333625793457
    10. '   ' → logprob: -13.818333625793457

Token 516: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6323795318603516
    2. ',y' → logprob: -0.8823795318603516
    3. ',p' → logprob: -3.2573795318603516
    4. ',(' → logprob: -4.382379531860352
    5. ' ,' → logprob: -5.757379531860352
    6. ',x' → logprob: -8.257379531860352
    7. '),(' → logprob: -9.132379531860352
    8. '(' → logprob: -9.382379531860352
    9. '(p' → logprob: -9.757379531860352
    10. ',int' → logprob: -10.632379531860352

Token 517: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2951188385486603
    2. '),' → logprob: -1.545118808746338
    3. ',c' → logprob: -3.795118808746338
    4. '),(' → logprob: -4.420118808746338
    5. ' ,' → logprob: -5.670118808746338
    6. '(c' → logprob: -6.045118808746338
    7. ',(' → logprob: -7.170118808746338
    8. 'c' → logprob: -7.670118808746338
    9. ' ),' → logprob: -7.670118808746338
    10. ',),' → logprob: -10.045119285583496

Token 518: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.013610724359750748
    2. '(cx' → logprob: -4.63861083984375
    3. '(center' → logprob: -6.38861083984375
    4. '(circle' → logprob: -7.13861083984375
    5. ' (' → logprob: -7.51361083984375
    6. '(ci' → logprob: -7.76361083984375
    7. '(x' → logprob: -8.01361083984375
    8. '   ' → logprob: -11.13861083984375
    9. 'c' → logprob: -11.13861083984375
    10. '(' → logprob: -11.63861083984375

Token 519: 'cx' (ID: 47207)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2546725571155548
    2. 'cx' → logprob: -1.5046725273132324
    3. 'circle' → logprob: -6.004672527313232
    4. 'x' → logprob: -9.37967300415039
    5. 'xc' → logprob: -9.87967300415039
    6. 'circ' → logprob: -9.87967300415039
    7. ' cx' → logprob: -10.37967300415039
    8. '(cx' → logprob: -11.12967300415039
    9. 'cir' → logprob: -11.25467300415039
    10. 'ci' → logprob: -11.50467300415039

Token 520: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000736846646759659
    2. ',c' → logprob: -7.250736713409424
    3. ' ,' → logprob: -11.000737190246582
    4. '[' → logprob: -12.500737190246582
    5. 'c' → logprob: -12.750737190246582
    6. '_,' → logprob: -13.625737190246582
    7. ',
' → logprob: -13.875737190246582
    8. '[c' → logprob: -14.375737190246582
    9. '
' → logprob: -15.875737190246582
    10. '1' → logprob: -16.000736236572266

Token 521: 'cy' (ID: 4523)
  Prédit: 'cy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -7.5649528298527e-05
    2. ' cy' → logprob: -9.500075340270996
    3. '   ' → logprob: -14.875075340270996
    4. 'cyj' → logprob: -16.125076293945312
    5. '.cy' → logprob: -17.000076293945312
    6. 'cych' → logprob: -17.250076293945312
    7. ' ' → logprob: -17.250076293945312
    8. 'cx' → logprob: -17.625076293945312
    9. 'c' → logprob: -18.250076293945312
    10. '    ' → logprob: -18.500076293945312

Token 522: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.002298109233379364
    2. '),' → logprob: -6.252297878265381
    3. ',' → logprob: -9.252298355102539
    4. '[' → logprob: -9.252298355102539
    5. ')' → logprob: -9.377298355102539
    6. '[:' → logprob: -10.627298355102539
    7. ' ))' → logprob: -10.752298355102539
    8. 'c' → logprob: -10.877298355102539
    9. '),(' → logprob: -11.877298355102539
    10. '[c' → logprob: -12.377298355102539

Token 523: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.38712602853775024
    2. ' <=' → logprob: -1.1371259689331055
    3. ')<=' → logprob: -9.137125968933105
    4. '<' → logprob: -9.512125968933105
    5. ')' → logprob: -10.512125968933105
    6. ' <' → logprob: -10.637125968933105
    7. ']<=' → logprob: -11.762125968933105
    8. '<|end|>' → logprob: -12.762125968933105
    9. '<c' → logprob: -13.012125968933105
    10. '(cx' → logprob: -13.012125968933105

Token 524: ' r' (ID: 428)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.016255469992756844
    2. 'r' → logprob: -4.7662553787231445
    3. ' cr' → logprob: -4.8912553787231445
    4. ' r' → logprob: -9.641255378723145
    5. 'radius' → logprob: -10.516255378723145
    6. '	cr' → logprob: -13.016255378723145
    7. 'c' → logprob: -13.266255378723145
    8. '(cr' → logprob: -14.016255378723145
    9. 'circle' → logprob: -14.391255378723145
    10. ' radius' → logprob: -14.641255378723145

Token 525: ' +' (ID: 659)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23242172598838806
    2. 'for' → logprob: -2.107421636581421
    3. '+' → logprob: -2.857421636581421
    4. ' +' → logprob: -3.607421636581421
    5. ' ' → logprob: -7.357421875
    6. ')' → logprob: -7.982421875
    7. '    ' → logprob: -9.107421875
    8. '   ' → logprob: -10.107421875
    9. ' )' → logprob: -10.232421875
    10. '
' → logprob: -10.482421875

Token 526: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007111206650733948
    2. ' ' → logprob: -7.250710964202881
    3. '   ' → logprob: -14.250711441040039
    4. '0' → logprob: -14.875711441040039
    5. '
' → logprob: -16.87571144104004
    6. '  ' → logprob: -17.12571144104004
    7. '-' → logprob: -17.37571144104004
    8. '10' → logprob: -17.87571144104004
    9. '=' → logprob: -18.00071144104004
    10. '```' → logprob: -18.25071144104004

Token 527: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018446780450176448
    2. ' ' → logprob: -8.625184059143066
    3. '   ' → logprob: -12.625184059143066
    4. '0' → logprob: -14.750184059143066
    5. '10' → logprob: -15.375184059143066
    6. '```' → logprob: -15.875184059143066
    7. '=' → logprob: -16.000185012817383
    8. '-' → logprob: -16.000185012817383
    9. '
' → logprob: -16.125185012817383
    10. '  ' → logprob: -16.250185012817383

Token 528: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -9.088346359931165e-07
    2. '-' → logprob: -14.625000953674316
    3. 'E' → logprob: -14.875000953674316
    4. '1' → logprob: -17.375
    5. '
' → logprob: -19.375
    6. '*' → logprob: -19.5
    7. ' ' → logprob: -19.5
    8. '   ' → logprob: -19.5
    9. '.e' → logprob: -20.125
    10. '-e' → logprob: -20.25

Token 529: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.128163257315464e-07
    2. ' -' → logprob: -15.75
    3. '```' → logprob: -16.125
    4. '   ' → logprob: -17.875
    5. '3' → logprob: -18.0
    6. '``' → logprob: -18.75
    7. '  ' → logprob: -19.0
    8. '6' → logprob: -19.125
    9. ' ' → logprob: -19.25
    10. '^-' → logprob: -19.25

Token 530: '10' (ID: 702)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.6309881806373596
    2. '8' → logprob: -0.8809881806373596
    3. '7' → logprob: -3.130988121032715
    4. '-' → logprob: -5.130988121032715
    5. '10' → logprob: -6.255988121032715
    6. '6' → logprob: -6.505988121032715
    7. '12' → logprob: -7.505988121032715
    8. '5' → logprob: -11.880988121032715
    9. ' ' → logprob: -13.630988121032715
    10. '11' → logprob: -13.755988121032715

Token 531: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.014533312059938908
    2. 'for' → logprob: -4.264533519744873
    3. ')' → logprob: -8.639533042907715
    4. '):' → logprob: -9.514533042907715
    5. '       ' → logprob: -10.014533042907715
    6. ' ' → logprob: -11.014533042907715
    7. '   ' → logprob: -11.139533042907715
    8. '):
' → logprob: -11.889533042907715
    9. '	for' → logprob: -11.889533042907715
    10. ':' → logprob: -12.014533042907715

Token 532: ' (' (ID: 350)
  Prédit: '(cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cx' → logprob: -0.021472252905368805
    2. 'cx' → logprob: -4.021472454071045
    3. ' (' → logprob: -5.771472454071045
    4. ' cx' → logprob: -9.021471977233887
    5. '(c' → logprob: -9.521471977233887
    6. '(' → logprob: -13.396471977233887
    7. '(x' → logprob: -14.021471977233887
    8. '   ' → logprob: -14.021471977233887
    9. '
' → logprob: -14.146471977233887
    10. '  ' → logprob: -14.271471977233887

Token 533: 'cx' (ID: 47207)
  Prédit: 'cx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.06249403953552246
    2. '(cx' → logprob: -2.8124940395355225
    3. ' cx' → logprob: -7.562494277954102
    4. ' (' → logprob: -12.312494277954102
    5. '(' → logprob: -14.187494277954102
    6. '.cx' → logprob: -14.187494277954102
    7. '(c' → logprob: -14.687494277954102
    8. '
' → logprob: -15.187494277954102
    9. '   ' → logprob: -16.9374942779541
    10. '  ' → logprob: -18.3124942779541

Token 534: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2603901015827432e-05
    2. ' ,' → logprob: -10.750022888183594
    3. ',
' → logprob: -14.125022888183594
    4. '_,' → logprob: -15.625022888183594
    5. 'cy' → logprob: -15.875022888183594
    6. ',c' → logprob: -18.500022888183594
    7. '‌,' → logprob: -19.125022888183594
    8. '```' → logprob: -19.125022888183594
    9. '
' → logprob: -19.625022888183594
    10. ',\
' → logprob: -19.625022888183594

Token 535: 'cy' (ID: 4523)
  Prédit: 'cy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -1.0206720617134124e-05
    2. ' cy' → logprob: -11.50001049041748
    3. '.cy' → logprob: -19.125009536743164
    4. ',' → logprob: -19.625009536743164
    5. '   ' → logprob: -19.625009536743164
    6. ' ' → logprob: -20.500009536743164
    7. 'cycles' → logprob: -20.625009536743164
    8. '
' → logprob: -20.625009536743164
    9. 'cycl' → logprob: -20.750009536743164
    10. 'ct' → logprob: -21.250009536743164

Token 536: ',r' (ID: 33654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5761420130729675
    2. ',r' → logprob: -0.8261420130729675
    3. ' ,' → logprob: -8.576142311096191
    4. 'r' → logprob: -11.576142311096191
    5. ',x' → logprob: -13.451142311096191
    6. ',c' → logprob: -13.951142311096191
    7. '_,' → logprob: -14.201142311096191
    8. '),' → logprob: -15.451142311096191
    9. ',_' → logprob: -16.201141357421875
    10. ',y' → logprob: -16.326141357421875

Token 537: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022249009634833783
    2. ' )' → logprob: -9.000222206115723
    3. 'in' → logprob: -9.625222206115723
    4. ' in' → logprob: -10.750222206115723
    5. '))' → logprob: -12.875222206115723
    6. ')c' → logprob: -12.875222206115723
    7. '),' → logprob: -13.250222206115723
    8. ')
' → logprob: -13.625222206115723
    9. ',' → logprob: -14.125222206115723
    10. ',c' → logprob: -14.375222206115723

Token 538: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5240315198898315
    2. 'in' → logprob: -0.8990315198898315
    3. ')' → logprob: -7.024031639099121
    4. '
' → logprob: -12.399031639099121
    5. ' )' → logprob: -12.399031639099121
    6. ',' → logprob: -12.774031639099121
    7. ' ' → logprob: -13.274031639099121
    8. '),' → logprob: -13.649031639099121
    9. 'c' → logprob: -13.899031639099121
    10. '   ' → logprob: -14.649031639099121

Token 539: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.0009119403548538685
    2. ' circles' → logprob: -7.000911712646484
    3. 'circ' → logprob: -15.625911712646484
    4. 'circle' → logprob: -15.875911712646484
    5. 'cycles' → logprob: -17.250911712646484
    6. ')' → logprob: -17.375911712646484
    7. 'c' → logprob: -17.500911712646484
    8. '   ' → logprob: -20.000911712646484
    9. '
' → logprob: -20.375911712646484
    10. 'Cir' → logprob: -20.500911712646484

Token 540: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10043945908546448
    2. '):
' → logprob: -2.3504395484924316
    3. ')' → logprob: -9.350439071655273
    4. '       ' → logprob: -9.350439071655273
    5. '):
' → logprob: -10.225439071655273
    6. ' ):' → logprob: -11.600439071655273
    7. '   ' → logprob: -11.725439071655273
    8. ')):' → logprob: -13.475439071655273
    9. '):

' → logprob: -13.975439071655273
    10. ' ):
' → logprob: -13.975439071655273

Token 541: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012451570364646614
    2. '               ' → logprob: -9.50012493133545
    3. 'return' → logprob: -10.37512493133545
    4. ' return' → logprob: -11.12512493133545
    5. '          ' → logprob: -13.62512493133545
    6. '       ' → logprob: -13.75012493133545
    7. '                   ' → logprob: -14.62512493133545
    8. '		' → logprob: -15.00012493133545
    9. '	       ' → logprob: -15.62512493133545
    10. '            ' → logprob: -15.75012493133545

Token 542: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10648345202207565
    2. 'return' (adapté à ' return') → logprob: -2.6064834594726562
    3. ' return' → logprob: -3.6064834594726562
    4. '               ' → logprob: -9.731483459472656
    5. '       ' → logprob: -11.981483459472656
    6. '   ' → logprob: -13.481483459472656
    7. '	return' → logprob: -13.856483459472656
    8. '          ' → logprob: -14.356483459472656
    9. '		' → logprob: -15.481483459472656
    10. '	       ' → logprob: -15.981483459472656

Token 543: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00033546582562848926
    2. ' False' → logprob: -8.000335693359375
    3. 'True' → logprob: -19.750335693359375
    4. '(False' → logprob: -23.000335693359375
    5. 'false' → logprob: -24.375335693359375
    6. 'F' → logprob: -25.500335693359375
    7. '   ' → logprob: -25.500335693359375
    8. '=False' → logprob: -25.625335693359375
    9. '_false' → logprob: -26.250335693359375
    10. 'FALSE' → logprob: -27.250335693359375

Token 544: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.162282367469743e-05
    2. 'return' → logprob: -9.750091552734375
    3. ' return' → logprob: -10.375091552734375
    4. '	return' → logprob: -13.750091552734375
    5. '
' → logprob: -15.125091552734375
    6. '       ' → logprob: -15.375091552734375
    7. '  ' → logprob: -16.250091552734375
    8. ')' → logprob: -16.625091552734375
    9. '   ' → logprob: -16.875091552734375
    10. '    
' → logprob: -17.250091552734375

Token 545: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.469590491382405e-05
    2. 'return' → logprob: -10.12507438659668
    3. ' return' → logprob: -10.75007438659668
    4. '	return' → logprob: -11.37507438659668
    5. '
' → logprob: -14.25007438659668
    6. '<|end|>' → logprob: -15.37507438659668
    7. '       ' → logprob: -15.50007438659668
    8. '    
' → logprob: -15.75007438659668
    9. '   ' → logprob: -16.37507438659668
    10. '  ' → logprob: -16.50007438659668

Token 546: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11392239481210709
    2. 'return' (adapté à ' return') → logprob: -2.488922357559204
    3. ' return' → logprob: -3.738922357559204
    4. '	return' → logprob: -7.488922595977783
    5. '
' → logprob: -8.613922119140625
    6. '```' → logprob: -9.863922119140625
    7. ' ' → logprob: -10.488922119140625
    8. 'True' → logprob: -10.988922119140625
    9. 'eturn' → logprob: -11.488922119140625
    10. '       ' → logprob: -11.738922119140625

Token 547: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0019286326132714748
    2. ' True' → logprob: -6.251928806304932
    3. '(True' → logprob: -21.001928329467773
    4. '=True' → logprob: -22.251928329467773
    5. 'False' → logprob: -23.251928329467773
    6. 'true' → logprob: -23.251928329467773
    7. '   ' → logprob: -24.501928329467773
    8. 'TRUE' → logprob: -25.751928329467773
    9. 'Tr' → logprob: -25.876928329467773
    10. '_true' → logprob: -26.251928329467773

Token 548: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.455815851688385
    2. '
' → logprob: -1.0808157920837402
    3. '<|end|>' → logprob: -3.9558157920837402
    4. '

' → logprob: -5.83081579208374
    5. '    
' → logprob: -6.33081579208374
    6. '#' → logprob: -7.33081579208374
    7. ')' → logprob: -7.70581579208374
    8. ' 
' → logprob: -7.70581579208374
    9. '  
' → logprob: -7.95581579208374
    10. '```' → logprob: -8.330816268920898

Token 549: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0018846115563064814
    2. '#' → logprob: -6.501884460449219
    3. '
' → logprob: -8.001884460449219
    4. '\' → logprob: -11.126884460449219
    5. 'class' → logprob: -11.376884460449219
    6. 'import' → logprob: -11.501884460449219
    7. '```' → logprob: -12.751884460449219
    8. '

' → logprob: -13.251884460449219
    9. '  
' → logprob: -13.501884460449219
    10. ' def' → logprob: -13.876884460449219

Token 550: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02095055766403675
    2. '#' → logprob: -4.020950794219971
    3. 'class' → logprob: -5.895950794219971
    4. ' def' → logprob: -10.145950317382812
    5. ' #' → logprob: -13.145950317382812
    6. '
' → logprob: -13.645950317382812
    7. ' class' → logprob: -13.645950317382812
    8. 'Def' → logprob: -14.895950317382812
    9. 'Class' → logprob: -14.895950317382812
    10. 'import' → logprob: -15.020950317382812

Token 551: ' principale' (ID: 68926)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007302406243979931
    2. ' def' → logprob: -5.132302284240723
    3. ' pour' → logprob: -7.632302284240723
    4. ' to' → logprob: -7.882302284240723
    5. '#' → logprob: -8.507302284240723
    6. 'to' → logprob: -8.632302284240723
    7. 'pour' → logprob: -9.882302284240723
    8. ' for' → logprob: -10.007302284240723
    9. 'for' → logprob: -11.132302284240723
    10. ' de' → logprob: -11.882302284240723

Token 552: ' trait' (ID: 15458)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002613358374219388
    2. ' def' → logprob: -8.250261306762695
    3. 'de' → logprob: -18.375261306762695
    4. ':def' → logprob: -20.250261306762695
    5. '
' → logprob: -20.375261306762695
    6. 'ndef' → logprob: -22.125261306762695
    7. 'd' → logprob: -22.250261306762695
    8. ' 
' → logprob: -22.875261306762695
    9. '(def' → logprob: -23.125261306762695
    10. '	def' → logprob: -23.500261306762695

Token 553: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.4640902578830719
    2. 'er' → logprob: -1.4640902280807495
    3. 'ement' → logprob: -2.589090347290039
    4. 'def' → logprob: -2.839090347290039
    5. '#' → logprob: -5.339090347290039
    6. 'ment' → logprob: -7.089090347290039
    7. 'e' → logprob: -7.714090347290039
    8. 'ing' → logprob: -8.214090347290039
    9. '```' → logprob: -9.964090347290039
    10. '_' → logprob: -11.339090347290039

Token 554: ' un' (ID: 537)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016747476533055305
    2. ' la' → logprob: -4.51674747467041
    3. ' les' → logprob: -6.39174747467041
    4. '(lines' → logprob: -6.76674747467041
    5. '(sys' → logprob: -7.76674747467041
    6. ' le' → logprob: -7.89174747467041
    7. ' def' → logprob: -8.01674747467041
    8. '(l' → logprob: -8.26674747467041
    9. '(' → logprob: -8.39174747467041
    10. '(c' → logprob: -8.64174747467041

Token 555: ' dataset' (ID: 20830)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2654484510421753
    2. 'e' → logprob: -1.6404484510421753
    3. ' segment' → logprob: -4.765448570251465
    4. 'segment' → logprob: -5.265448570251465
    5. ' input' → logprob: -5.640448570251465
    6. ' def' → logprob: -5.765448570251465
    7. 'ensemble' → logprob: -6.015448570251465
    8. 'cas' → logprob: -6.390448570251465
    9. 's' → logprob: -6.515448570251465
    10. '_' → logprob: -6.515448570251465

Token 556: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.138441237155348e-05
    2. ' def' → logprob: -9.375091552734375
    3. '(def' → logprob: -12.250091552734375
    4. 'de' → logprob: -14.375091552734375
    5. ':def' → logprob: -14.750091552734375
    6. '
' → logprob: -15.250091552734375
    7. '(
' → logprob: -15.375091552734375
    8. '(' → logprob: -16.125091552734375
    9. ':' → logprob: -16.375091552734375
    10. '(data' → logprob: -16.375091552734375

Token 557: 'liste' (ID: 69656)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.01884600706398487
    2. ' circles' → logprob: -4.268846035003662
    3. 'n' → logprob: -6.143846035003662
    4. 'def' → logprob: -6.268846035003662
    5. 'lines' → logprob: -8.518845558166504
    6. ')' → logprob: -8.893845558166504
    7. 'data' → logprob: -9.643845558166504
    8. 'c' → logprob: -9.893845558166504
    9. 'points' → logprob: -10.268845558166504
    10. 'circle' → logprob: -10.518845558166504

Token 558: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1440621614456177
    2. ' de' → logprob: -1.6440621614456177
    3. ' des' → logprob: -1.7690621614456177
    4. 'de' → logprob: -2.769062042236328
    5. ')' → logprob: -2.894062042236328
    6. ' of' → logprob: -3.019062042236328
    7. 'des' → logprob: -3.269062042236328
    8. '_c' → logprob: -3.394062042236328
    9. '):
' → logprob: -3.519062042236328
    10. 'cir' → logprob: -4.519062042236328

Token 559: ' cer' (ID: 10816)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.33887723088264465
    2. 'cer' → logprob: -1.3388772010803223
    3. ' cer' → logprob: -4.713877201080322
    4. ' circles' → logprob: -5.338877201080322
    5. ' tuples' → logprob: -5.463877201080322
    6. 'tu' → logprob: -5.713877201080322
    7. 'circle' → logprob: -7.213877201080322
    8. 'c' → logprob: -7.463877201080322
    9. 'tuple' → logprob: -7.838877201080322
    10. 'r' → logprob: -8.33887767791748

Token 560: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -9.610702363715973e-06
    2. 'les' → logprob: -12.375009536743164
    3. '```' → logprob: -12.750009536743164
    4. 'cl' → logprob: -14.125009536743164
    5. 'icles' → logprob: -14.625009536743164
    6. '#' → logprob: -15.000009536743164
    7. 'c' → logprob: -15.375009536743164
    8. 'cle' → logprob: -15.500009536743164
    9. 'r' → logprob: -16.250009536743164
    10. '``' → logprob: -16.375009536743164

Token 561: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47129055857658386
    2. '):' → logprob: -1.0962905883789062
    3. 'def' → logprob: -4.096290588378906
    4. ')' → logprob: -4.221290588378906
    5. ',' → logprob: -5.346290588378906
    6. '(c' → logprob: -5.471290588378906
    7. '):

' → logprob: -7.721290588378906
    8. ')
' → logprob: -8.346290588378906
    9. '):
' → logprob: -8.471290588378906
    10. ',c' → logprob: -9.346290588378906

Token 562: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.5577775128767826e-06
    2. '
' → logprob: -12.500005722045898
    3. ' def' → logprob: -13.250005722045898
    4. 'de' → logprob: -19.3750057220459
    5. '```' → logprob: -19.3750057220459
    6. ':def' → logprob: -20.0000057220459
    7. '(def' → logprob: -20.3750057220459
    8. '\' → logprob: -20.8750057220459
    9. 'ndef' → logprob: -21.2500057220459
    10. ' 
' → logprob: -21.5000057220459

Token 563: ' solve' (ID: 17722)
  Prédit: ' shortest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.7943811416625977
    2. 'solve' → logprob: -1.7943811416625977
    3. 'short' → logprob: -1.9193811416625977
    4. ' solve' → logprob: -2.5443811416625977
    5. 'min' → logprob: -3.5443811416625977
    6. ' min' → logprob: -3.7943811416625977
    7. ' find' → logprob: -3.7943811416625977
    8. 'main' → logprob: -4.044381141662598
    9. ' minimal' → logprob: -4.044381141662598
    10. 'find' → logprob: -4.169381141662598

Token 564: '(dataset' (ID: 67333)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.002899378538131714
    2. '(d' → logprob: -6.502899169921875
    3. '(' → logprob: -7.252899169921875
    4. '(data' → logprob: -7.502899169921875
    5. '():' → logprob: -9.752899169921875
    6. '(dataset' → logprob: -9.877899169921875
    7. '(chain' → logprob: -11.752899169921875
    8. '(lines' → logprob: -12.752899169921875
    9. '(circle' → logprob: -13.127899169921875
    10. '(datas' → logprob: -13.502899169921875

Token 565: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00977993756532669
    2. '):
' → logprob: -4.634779930114746
    3. '):
' → logprob: -11.509779930114746
    4. ',' → logprob: -12.134779930114746
    5. ':' → logprob: -12.884779930114746
    6. ' ):' → logprob: -13.509779930114746
    7. '(c' → logprob: -13.634779930114746
    8. '   ' → logprob: -13.759779930114746
    9. ',c' → logprob: -14.134779930114746
    10. '):

' → logprob: -15.009779930114746

Token 566: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003361889161169529
    2. 'n' → logprob: -5.878361701965332
    3. ' n' → logprob: -7.503361701965332
    4. 'import' → logprob: -13.628361701965332
    5. '	n' → logprob: -14.003361701965332
    6. '    
' → logprob: -14.253361701965332
    7. ' points' → logprob: -14.753361701965332
    8. ',' → logprob: -14.878361701965332
    9. '```' → logprob: -15.128361701965332
    10. 'N' → logprob: -15.378361701965332

Token 567: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.20585431158542633
    2. '   ' → logprob: -1.8308542966842651
    3. 'cir' → logprob: -4.205854415893555
    4. ' n' → logprob: -5.080854415893555
    5. 'N' → logprob: -5.705854415893555
    6. '#' → logprob: -7.455854415893555
    7. 'points' → logprob: -7.580854415893555
    8. ' circles' → logprob: -10.205854415893555
    9. ' N' → logprob: -10.330854415893555
    10. 'nodes' → logprob: -10.455854415893555

Token 568: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004108796361833811
    2. '=' → logprob: -5.504108905792236
    3. '   ' → logprob: -11.379108428955078
    4. '=int' → logprob: -12.629108428955078
    5. ' =
' → logprob: -12.629108428955078
    6. ',' → logprob: -12.754108428955078
    7. '=len' → logprob: -12.754108428955078
    8. ')' → logprob: -13.129108428955078
    9. ' ' → logprob: -13.379108428955078
    10. '=n' → logprob: -13.879108428955078

Token 569: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.07889121770858765
    2. ' len' → logprob: -2.5788912773132324
    3. '(len' → logprob: -13.953890800476074
    4. 'dataset' → logprob: -15.203890800476074
    5. '   ' → logprob: -15.703890800476074
    6. '[len' → logprob: -16.07889175415039
    7. '=len' → logprob: -17.32889175415039
    8. ' ' → logprob: -17.45389175415039
    9. ' dataset' → logprob: -17.70389175415039
    10. 'int' → logprob: -17.70389175415039

Token 570: '(dataset' (ID: 67333)
  Prédit: '(dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dataset' → logprob: -1.0280383548888494e-06
    2. 'dataset' → logprob: -13.875000953674316
    3. '(' → logprob: -16.875001907348633
    4. ' dataset' → logprob: -17.750001907348633
    5. 'ataset' → logprob: -19.750001907348633
    6. ' (' → logprob: -19.750001907348633
    7. '(
' → logprob: -21.125001907348633
    8. 'c' → logprob: -21.250001907348633
    9. '.dataset' → logprob: -21.250001907348633
    10. '(c' → logprob: -21.375001907348633

Token 571: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026465756818652153
    2. ')
' → logprob: -3.651465654373169
    3. '   ' → logprob: -8.77646541595459
    4. ')
' → logprob: -11.65146541595459
    5. ' )' → logprob: -13.52646541595459
    6. ')

' → logprob: -15.52646541595459
    7. '))' → logprob: -16.026466369628906
    8. ' )
' → logprob: -16.276466369628906
    9. '
' → logprob: -16.401466369628906
    10. ')`
' → logprob: -16.526466369628906

Token 572: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0085215512663126
    2. 'points' → logprob: -5.883521556854248
    3. '#' → logprob: -6.133521556854248
    4. 'graph' → logprob: -6.883521556854248
    5. '    
' → logprob: -7.008521556854248
    6. 'inter' → logprob: -7.758521556854248
    7. '
' → logprob: -8.25852108001709
    8. 'start' → logprob: -9.00852108001709
    9. 'nodes' → logprob: -9.00852108001709
    10. 'if' → logprob: -9.13352108001709

Token 573: ' circles' (ID: 45131)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.7264676690101624
    2. '#' → logprob: -1.1014676094055176
    3. 'inter' → logprob: -2.2264676094055176
    4. 'graph' → logprob: -3.1014676094055176
    5. '   ' → logprob: -5.226467609405518
    6. 'nodes' → logprob: -5.226467609405518
    7. 'if' → logprob: -5.351467609405518
    8. 'cir' → logprob: -5.601467609405518
    9. 'intersection' → logprob: -5.601467609405518
    10. 'dp' → logprob: -6.476467609405518

Token 574: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22633467614650726
    2. ' =' → logprob: -1.6013346910476685
    3. ')' → logprob: -7.351334571838379
    4. '=[]' → logprob: -9.476334571838379
    5. '   ' → logprob: -10.101334571838379
    6. ')=' → logprob: -10.351334571838379
    7. '_points' → logprob: -10.851334571838379
    8. ',' → logprob: -10.976334571838379
    9. '[' → logprob: -11.226334571838379
    10. ']' → logprob: -11.226334571838379

Token 575: ' dataset' (ID: 20830)
  Prédit: 'dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dataset' → logprob: -0.0015126005746424198
    2. ' dataset' → logprob: -6.50151252746582
    3. 'list' → logprob: -11.75151252746582
    4. '[' → logprob: -13.12651252746582
    5. '(dataset' → logprob: -15.50151252746582
    6. 'sorted' → logprob: -16.87651252746582
    7. '[(' → logprob: -17.12651252746582
    8. 'data' → logprob: -17.37651252746582
    9. ' list' → logprob: -17.50151252746582
    10. 'datasets' → logprob: -18.00151252746582

Token 576: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13197755813598633
    2. '   ' → logprob: -2.1319775581359863
    3. '    
' → logprob: -5.631977558135986
    4. '

' → logprob: -8.006977081298828
    5. 'def' → logprob: -8.131977081298828
    6. '
' → logprob: -8.256977081298828
    7. ' =' → logprob: -9.131977081298828
    8. '[' → logprob: -9.756977081298828
    9. '  
' → logprob: -9.756977081298828
    10. ')' → logprob: -10.131977081298828

Token 577: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05383160337805748
    2. '#' → logprob: -3.4288315773010254
    3. 'points' → logprob: -4.928831577301025
    4. '
' → logprob: -5.428831577301025
    5. 'inter' → logprob: -5.928831577301025
    6. '    
' → logprob: -6.178831577301025
    7. 'nodes' → logprob: -6.178831577301025
    8. '```' → logprob: -7.928831577301025
    9. 'intersection' → logprob: -8.303832054138184
    10. 'graph' → logprob: -8.303832054138184

Token 578: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.6852463483810425
    2. 'points' → logprob: -1.0602463483810425
    3. 'graph' → logprob: -2.810246467590332
    4. 'inter' → logprob: -3.185246467590332
    5. 'nodes' → logprob: -3.185246467590332
    6. 'intersection' → logprob: -5.935246467590332
    7. 'vertices' → logprob: -6.185246467590332
    8. 'edges' → logprob: -7.560246467590332
    9. 'pts' → logprob: -8.185246467590332
    10. 'def' → logprob: -8.435246467590332

Token 579: ' On' (ID: 2160)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.506745457649231
    2. '#' → logprob: -1.256745457649231
    3. 'inter' → logprob: -3.1317453384399414
    4. 'graph' → logprob: -3.3817453384399414
    5. 'nodes' → logprob: -3.6317453384399414
    6. 'intersection' → logprob: -5.506745338439941
    7. 'all' → logprob: -6.881745338439941
    8. 'pts' → logprob: -7.131745338439941
    9. 'vertices' → logprob: -7.381745338439941
    10. 'positions' → logprob: -7.631745338439941

Token 580: ' va' (ID: 3423)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06036755070090294
    2. 'points' → logprob: -3.0603675842285156
    3. 'inter' → logprob: -5.435367584228516
    4. ' points' → logprob: -6.185367584228516
    5. 'vertices' → logprob: -6.560367584228516
    6. ' #' → logprob: -6.810367584228516
    7. 'nodes' → logprob: -7.435367584228516
    8. 'int' → logprob: -8.060367584228516
    9. 'oints' → logprob: -8.185367584228516
    10. '   ' → logprob: -8.435367584228516

Token 581: ' construire' (ID: 92473)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.2833966910839081
    2. ' construire' → logprob: -2.5333967208862305
    3. 'build' → logprob: -3.1583967208862305
    4. '#' → logprob: -3.2833967208862305
    5. 'cr' → logprob: -3.9083967208862305
    6. ' créer' → logprob: -4.0333967208862305
    7. 'collect' → logprob: -4.4083967208862305
    8. 'construct' → logprob: -5.0333967208862305
    9. 'cons' → logprob: -5.5333967208862305
    10. 'tr' → logprob: -5.5333967208862305

Token 582: ' un' (ID: 537)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.09233056753873825
    2. 'points' → logprob: -3.0923304557800293
    3. 'nodes' → logprob: -4.342330455780029
    4. '#' → logprob: -4.592330455780029
    5. 'un' → logprob: -4.717330455780029
    6. 'le' → logprob: -5.217330455780029
    7. 'les' → logprob: -6.217330455780029
    8. 'une' → logprob: -7.217330455780029
    9. 'adj' → logprob: -7.217330455780029
    10. 'vertices' → logprob: -7.717330455780029

Token 583: ' grap' (ID: 60955)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.020711103454232216
    2. 'gr' → logprob: -3.8957111835479736
    3. ' graph' → logprob: -8.895710945129395
    4. ' grap' → logprob: -11.395710945129395
    5. '#' → logprob: -12.020710945129395
    6. 'liste' → logprob: -12.395710945129395
    7. 'list' → logprob: -12.645710945129395
    8. '```' → logprob: -13.520710945129395
    9. 'g' → logprob: -13.770710945129395
    10. 'gra' → logprob: -13.895710945129395

Token 584: 'he' (ID: 273)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.3881289064884186
    2. 'he' → logprob: -1.1381288766860962
    3. 'ph' → logprob: -7.013128757476807
    4. 'phe' → logprob: -8.263129234313965
    5. 'heme' → logprob: -10.138129234313965
    6. 'aphe' → logprob: -11.388129234313965
    7. '#' → logprob: -11.388129234313965
    8. 'hé' → logprob: -11.513129234313965
    9. '<h' → logprob: -12.013129234313965
    10. 'gh' → logprob: -12.763129234313965

Token 585: ' représent' (ID: 42664)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10802923887968063
    2. 'nodes' → logprob: -3.2330291271209717
    3. ':' → logprob: -3.8580291271209717
    4. ' =' → logprob: -4.608029365539551
    5. ' nodes' → logprob: -4.858029365539551
    6. '.' → logprob: -5.358029365539551
    7. '_nodes' → logprob: -5.483029365539551
    8. '(nodes' → logprob: -5.983029365539551
    9. '#' → logprob: -6.108029365539551
    10. '=' → logprob: -6.608029365539551

Token 586: 'atif' (ID: 23984)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.31444039940834045
    2. 'ant' → logprob: -1.314440369606018
    3. 'ent' → logprob: -7.6894402503967285
    4. 'er' → logprob: -7.8144402503967285
    5. 'és' → logprob: -8.564440727233887
    6. '   ' → logprob: -9.814440727233887
    7. 'e' → logprob: -11.189440727233887
    8. 'def' → logprob: -11.564440727233887
    9. 'atif' → logprob: -11.564440727233887
    10. '#' → logprob: -12.189440727233887

Token 587: ' :
' (ID: 10039)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.0025835037231445
    2. '   ' → logprob: -1.2525835037231445
    3. ':' → logprob: -1.5025835037231445
    4. ' de' → logprob: -3.5025835037231445
    5. ' :' → logprob: -3.8775835037231445
    6. ',' → logprob: -4.3775835037231445
    7. '.' → logprob: -4.8775835037231445
    8. ':
' → logprob: -5.1275835037231445
    9. 'nodes' → logprob: -5.1275835037231445
    10. ' =' → logprob: -5.2525835037231445

Token 588: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13240723311901093
    2. ' nodes' → logprob: -2.7574071884155273
    3. 'nodes' → logprob: -3.0074071884155273
    4. '#' → logprob: -4.882407188415527
    5. ' points' → logprob: -6.882407188415527
    6. ' edges' → logprob: -7.507407188415527
    7. 'points' → logprob: -7.882407188415527
    8. 'graph' → logprob: -8.132407188415527
    9. 'edges' → logprob: -8.257407188415527
    10. ' #' → logprob: -8.257407188415527

Token 589: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.063767671585083
    2. 'points' → logprob: -1.063767671585083
    3. 'nodes' → logprob: -1.813767671585083
    4. '   ' → logprob: -2.563767671585083
    5. 'graph' → logprob: -2.938767671585083
    6. 'inter' → logprob: -4.563767433166504
    7. 'intersection' → logprob: -5.813767433166504
    8. 'vertices' → logprob: -6.313767433166504
    9. 'edges' → logprob: -7.063767433166504
    10. 'pts' → logprob: -8.688767433166504

Token 590: ' chaque' (ID: 21194)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.9666656255722046
    2. '#' → logprob: -1.2166656255722046
    3. 'points' → logprob: -1.4666656255722046
    4. 'graph' → logprob: -2.466665744781494
    5. ' nodes' → logprob: -5.716665744781494
    6. ' points' → logprob: -6.841665744781494
    7. 'edges' → logprob: -7.091665744781494
    8. 'vertices' → logprob: -7.091665744781494
    9. 'inter' → logprob: -7.466665744781494
    10. 'intersection' → logprob: -7.841665744781494

Token 591: ' cercle' (ID: 172399)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -1.3661452531814575
    2. ' cercle' → logprob: -1.3661452531814575
    3. 'point' → logprob: -1.4911452531814575
    4. ' intersection' → logprob: -2.116145133972168
    5. ' point' → logprob: -2.866145133972168
    6. 'c' → logprob: -2.991145133972168
    7. ' sommet' → logprob: -4.741145133972168
    8. 'inter' → logprob: -4.866145133972168
    9. 'circle' → logprob: -4.991145133972168
    10. ' noe' → logprob: -5.866145133972168

Token 592: ' a' (ID: 261)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -1.4262429475784302
    2. 'inter' → logprob: -1.8012429475784302
    3. ' est' → logprob: -2.4262428283691406
    4. 'i' → logprob: -2.6762428283691406
    5. ' crée' → logprob: -2.9262428283691406
    6. 'a' → logprob: -3.0512428283691406
    7. ' correspond' → logprob: -3.0512428283691406
    8. 'don' → logprob: -3.1762428283691406
    9. 'd' → logprob: -3.3012428283691406
    10. 'cor' → logprob: -3.6762428283691406

Token 593: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7433405518531799
    2. ' deux' → logprob: -1.1183404922485352
    3. 'de' → logprob: -1.7433404922485352
    4. ' ' → logprob: -4.118340492248535
    5. 'ses' → logprob: -5.743340492248535
    6. ' ses' → logprob: -7.118340492248535
    7. '6' → logprob: -7.618340492248535
    8. ' two' → logprob: -7.743340492248535
    9. 'two' → logprob: -7.993340492248535
    10. '#' → logprob: -8.618340492248535

Token 594: '2' (ID: 17)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.15792737901210785
    2. '2' → logprob: -2.0329272747039795
    3. ' deux' → logprob: -4.782927513122559
    4. 'two' → logprob: -5.907927513122559
    5. 'une' → logprob: -6.407927513122559
    6. '#' → logprob: -6.782927513122559
    7. 'exact' → logprob: -7.657927513122559
    8. ' ' → logprob: -8.532927513122559
    9. 'ses' → logprob: -8.907927513122559
    10. 'un' → logprob: -9.907927513122559

Token 595: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.3039790391921997
    2. ' points' → logprob: -1.4289790391921997
    3. ' somm' → logprob: -4.55397891998291
    4. '#' → logprob: -5.55397891998291
    5. 'inter' → logprob: -6.42897891998291
    6. 's' → logprob: -6.42897891998291
    7. ' noe' → logprob: -6.80397891998291
    8. ' intersections' → logprob: -6.80397891998291
    9. 'nodes' → logprob: -7.30397891998291
    10. 'n' → logprob: -7.92897891998291

Token 596: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.235825777053833
    2. ' d' → logprob: -1.610825777053833
    3. '_inter' → logprob: -5.360825538635254
    4. 's' → logprob: -6.485825538635254
    5. '   ' → logprob: -6.860825538635254
    6. ',' → logprob: -6.985825538635254
    7. '(inter' → logprob: -7.985825538635254
    8. 'inter' → logprob: -7.985825538635254
    9. 'intersection' → logprob: -8.235825538635254
    10. ' (' → logprob: -8.610825538635254

Token 597: ''inter' (ID: 55731)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.008455947041511536
    2. ''inter' → logprob: -5.133455753326416
    3. 'inter' → logprob: -6.008455753326416
    4. 'int' → logprob: -10.383456230163574
    5. 'interaction' → logprob: -11.008456230163574
    6. ''intérêt' → logprob: -12.133456230163574
    7. ''int' → logprob: -12.633456230163574
    8. ' intersection' → logprob: -13.133456230163574
    9. 'interface' → logprob: -13.383456230163574
    10. '#' → logprob: -13.883456230163574

Token 598: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.0023679202422499657
    2. 'intersection' → logprob: -6.752367973327637
    3. 'sections' → logprob: -7.627367973327637
    4. 'er' → logprob: -8.502367973327637
    5. 's' → logprob: -8.752367973327637
    6. 'ection' → logprob: -9.127367973327637
    7. '#' → logprob: -10.127367973327637
    8. 'set' → logprob: -10.752367973327637
    9. 'sect' → logprob: -10.877367973327637
    10. 'Intersection' → logprob: -11.127367973327637

Token 599: ' avec' (ID: 3937)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.054581284523010254
    2. ',' → logprob: -3.1795811653137207
    3. '<|end|>' → logprob: -5.679581165313721
    4. ' ,' → logprob: -6.804581165313721
    5. '(s' → logprob: -6.929581165313721
    6. '.' → logprob: -7.179581165313721
    7. ':' → logprob: -7.304581165313721
    8. ' s' → logprob: -7.429581165313721
    9. ' (' → logprob: -7.429581165313721
    10. '_' → logprob: -7.929581165313721

Token 600: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.06372994929552078
    2. ' le' → logprob: -3.688730001449585
    3. 'la' → logprob: -3.938730001449585
    4. 'son' → logprob: -4.313729763031006
    5. 'c' → logprob: -6.813729763031006
    6. ' son' → logprob: -6.813729763031006
    7. ' la' → logprob: -7.188729763031006
    8. 'cel' → logprob: -8.063730239868164
    9. 'les' → logprob: -8.438730239868164
    10. 'celle' → logprob: -9.438730239868164

Token 601: ' cercle' (ID: 172399)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.040890034288167953
    2. 'su' → logprob: -3.5408899784088135
    3. 'cer' → logprob: -4.790890216827393
    4. ' cercle' → logprob: -6.540890216827393
    5. ' suivant' → logprob: -7.040890216827393
    6. 'vo' → logprob: -8.540889739990234
    7. 'circle' → logprob: -8.790889739990234
    8. 'succ' → logprob: -9.790889739990234
    9. '
' → logprob: -12.040889739990234
    10. ' suivante' → logprob: -12.165889739990234

Token 602: ' suivant' (ID: 68705)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.6723253726959229
    2. ' suivant' → logprob: -0.7973253726959229
    3. ' voisin' → logprob: -3.547325372695923
    4. 'adj' → logprob: -5.422325134277344
    5. 'vo' → logprob: -6.922325134277344
    6. 'i' → logprob: -6.922325134277344
    7. 'succ' → logprob: -7.172325134277344
    8. ' suivante' → logprob: -7.422325134277344
    9. 'success' → logprob: -7.672325134277344
    10. 's' → logprob: -8.172325134277344

Token 603: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20563510060310364
    2. 's' → logprob: -2.9556350708007812
    3. '.' → logprob: -3.0806350708007812
    4. '   ' → logprob: -4.080635070800781
    5. '
' → logprob: -4.080635070800781
    6. '(s' → logprob: -4.455635070800781
    7. ',
' → logprob: -4.705635070800781
    8. ':' → logprob: -4.830635070800781
    9. ' (' → logprob: -5.080635070800781
    10. '#' → logprob: -5.330635070800781

Token 604: 's' (ID: 82)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8291897773742676
    2. '#' → logprob: -1.5791897773742676
    3. '),' → logprob: -2.4541897773742676
    4. 'i' → logprob: -2.5791897773742676
    5. ' i' → logprob: -3.3291897773742676
    6. 'c' → logprob: -3.4541897773742676
    7. 'la' → logprob: -4.079189777374268
    8. ' la' → logprob: -4.329189777374268
    9. 'le' → logprob: -4.579189777374268
    10. ',' → logprob: -4.704189777374268

Token 605: 'auf' (ID: 7483)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.18024228513240814
    2. 'i' → logprob: -2.1802423000335693
    3. 'ont' → logprob: -4.80524206161499
    4. 'uite' → logprob: -4.93024206161499
    5. 'ur' → logprob: -5.18024206161499
    6. '#' → logprob: -5.55524206161499
    7. 'e' → logprob: -5.68024206161499
    8. 'urtout' → logprob: -5.68024206161499
    9. '[i' → logprob: -5.93024206161499
    10. 'ui' → logprob: -6.18024206161499

Token 606: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.03602539747953415
    2. '#' → logprob: -4.536025524139404
    3. 'pour' → logprob: -4.661025524139404
    4. 'dern' → logprob: -5.036025524139404
    5. ' le' → logprob: -5.661025524139404
    6. 'les' → logprob: -6.286025524139404
    7. ' dernier' → logprob: -7.786025524139404
    8. 'last' → logprob: -7.786025524139404
    9. 'n' → logprob: -7.786025524139404
    10. 'l' → logprob: -7.911025524139404

Token 607: ' dernier' (ID: 27982)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.02766512520611286
    2. ' dernier' → logprob: -3.777665138244629
    3. 'last' → logprob: -5.527665138244629
    4. ' last' → logprob: -8.277665138244629
    5. '#' → logprob: -9.152665138244629
    6. 'der' → logprob: -10.402665138244629
    7. 'n' → logprob: -10.652665138244629
    8. 'prem' → logprob: -12.027665138244629
    9. 'Dern' → logprob: -12.152665138244629
    10. ' derniers' → logprob: -13.402665138244629

Token 608: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12763534486293793
    2. '),' → logprob: -3.0026352405548096
    3. ' cercle' → logprob: -3.0026352405548096
    4. ').' → logprob: -4.377635478973389
    5. ',' → logprob: -5.502635478973389
    6. ' )' → logprob: -6.877635478973389
    7. 'c' → logprob: -7.377635478973389
    8. '):' → logprob: -7.502635478973389
    9. 'circle' → logprob: -8.12763500213623
    10. ')
' → logprob: -8.87763500213623

Token 609: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003372461535036564
    2. '
' → logprob: -6.628372669219971
    3. '    
' → logprob: -6.753372669219971
    4. '#' → logprob: -7.753372669219971
    5. ',' → logprob: -9.253372192382812
    6. ')' → logprob: -9.753372192382812
    7. 'nodes' → logprob: -10.128372192382812
    8. 'graph' → logprob: -10.503372192382812
    9. 'points' → logprob: -10.503372192382812
    10. '   
' → logprob: -10.878372192382812

Token 610: ' #' (ID: 1069)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.48106810450553894
    2. '#' (adapté à ' #') → logprob: -1.9810681343078613
    3. '   ' → logprob: -2.1060681343078613
    4. 'inter' → logprob: -3.3560681343078613
    5. 'nodes' → logprob: -3.3560681343078613
    6. 'graph' → logprob: -4.106068134307861
    7. ' points' → logprob: -4.106068134307861
    8. 'intersection' → logprob: -4.606068134307861
    9. ' nodes' → logprob: -6.356068134307861
    10. '
' → logprob: -6.481068134307861

Token 611: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.43943750858306885
    2. 'points' → logprob: -1.4394375085830688
    3. 'nodes' → logprob: -2.5644373893737793
    4. '   ' → logprob: -4.439437389373779
    5. 'graph' → logprob: -4.564437389373779
    6. 'inter' → logprob: -5.189437389373779
    7. 'intersection' → logprob: -5.314437389373779
    8. ' points' → logprob: -5.814437389373779
    9. ' nodes' → logprob: -5.939437389373779
    10. 'vertices' → logprob: -6.814437389373779

Token 612: ' ajoute' (ID: 91611)
  Prédit: ' crée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' crée' → logprob: -1.0286939144134521
    2. ' va' → logprob: -1.5286939144134521
    3. '#' → logprob: -2.028693914413452
    4. ' stock' → logprob: -2.778693914413452
    5. 'stock' → logprob: -3.653693914413452
    6. 'continue' → logprob: -3.653693914413452
    7. ' construit' → logprob: -3.653693914413452
    8. 'va' → logprob: -3.653693914413452
    9. ' continue' → logprob: -3.903693914413452
    10. 'cr' → logprob: -4.278694152832031

Token 613: ' aussi' (ID: 9894)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7829346656799316
    2. ' les' → logprob: -0.7829346656799316
    3. ' edges' → logprob: -3.1579346656799316
    4. 'les' → logprob: -4.407934665679932
    5. 'edges' → logprob: -5.032934665679932
    6. 'des' → logprob: -5.032934665679932
    7. ' un' → logprob: -5.407934665679932
    8. ' une' → logprob: -5.657934665679932
    9. ' tous' → logprob: -6.157934665679932
    10. ' ' → logprob: -6.657934665679932

Token 614: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.46303901076316833
    2. 'le' → logprob: -1.4630390405654907
    3. ' les' → logprob: -2.338038921356201
    4. 'un' → logprob: -4.338038921356201
    5. 'une' → logprob: -5.213038921356201
    6. 'la' → logprob: -5.588038921356201
    7. ' le' → logprob: -5.713038921356201
    8. '#' → logprob: -5.713038921356201
    9. 'de' → logprob: -5.838038921356201
    10. 'l' → logprob: -5.838038921356201

Token 615: ' centres' (ID: 43504)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.36111801862716675
    2. 'de' → logprob: -1.3611180782318115
    3. 'prem' → logprob: -4.236117839813232
    4. '#' → logprob: -4.611117839813232
    5. ' points' → logprob: -5.236117839813232
    6. 'point' → logprob: -5.486117839813232
    7. 'dé' → logprob: -5.861117839813232
    8. 's' → logprob: -5.986117839813232
    9. 'start' → logprob: -6.111117839813232
    10. 'sources' → logprob: -7.361117839813232

Token 616: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11808687448501587
    2. '
' → logprob: -3.368086814880371
    3. ',' → logprob: -3.493086814880371
    4. ' points' → logprob: -4.868086814880371
    5. '#' → logprob: -4.993086814880371
    6. ' (' → logprob: -5.368086814880371
    7. ' ' → logprob: -5.868086814880371
    8. ')' → logprob: -5.993086814880371
    9. '_points' → logprob: -6.118086814880371
    10. ' ,' → logprob: -6.243086814880371

Token 617: ' premiers' (ID: 59140)
  Prédit: 'cer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cer' → logprob: -0.20795632898807526
    2. ' cer' → logprob: -1.707956314086914
    3. 'cir' → logprob: -5.332956314086914
    4. 'c' → logprob: -7.082956314086914
    5. ' circles' → logprob: -8.207956314086914
    6. ' cercle' → logprob: -9.082956314086914
    7. ' chaque' → logprob: -9.207956314086914
    8. 'r' → logprob: -9.832956314086914
    9. '#' → logprob: -10.082956314086914
    10. 'cers' → logprob: -10.582956314086914

Token 618: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.7188928127288818
    2. ' and' → logprob: -1.5938928127288818
    3. 'et' → logprob: -1.9688928127288818
    4. 'cer' → logprob: -2.968892812728882
    5. 'c' → logprob: -3.468892812728882
    6. ' cer' → logprob: -3.718892812728882
    7. ',' → logprob: -4.093893051147461
    8. 'and' → logprob: -4.218893051147461
    9. 'cir' → logprob: -4.718893051147461
    10. ' cercle' → logprob: -5.218893051147461

Token 619: ' derniers' (ID: 61275)
  Prédit: ' derniers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' derniers' → logprob: -0.07025740295648575
    2. 'dern' → logprob: -3.0702574253082275
    3. 'der' → logprob: -3.9452574253082275
    4. '#' → logprob: -7.195257186889648
    5. ' dernier' → logprob: -7.570257186889648
    6. 'des' → logprob: -7.945257186889648
    7. 'last' → logprob: -8.945257186889648
    8. 'le' → logprob: -9.320257186889648
    9. ' des' → logprob: -10.070257186889648
    10. ' last' → logprob: -10.070257186889648

Token 620: ' cer' (ID: 10816)
  Prédit: ' cer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cer' → logprob: -0.49075713753700256
    2. 'cer' → logprob: -0.9907571077346802
    3. ' cercle' → logprob: -4.990756988525391
    4. 'c' → logprob: -6.115756988525391
    5. 'cir' → logprob: -6.365756988525391
    6. ' et' → logprob: -6.615756988525391
    7. ' circles' → logprob: -7.490756988525391
    8. 'n' → logprob: -7.740756988525391
    9. 'r' → logprob: -7.865756988525391
    10. 'et' → logprob: -7.865756988525391

Token 621: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -1.843177233240567e-05
    2. 'cle' → logprob: -11.500018119812012
    3. 'cl' → logprob: -12.000018119812012
    4. 'c' → logprob: -14.125018119812012
    5. 'icles' → logprob: -15.000018119812012
    6. 'les' → logprob: -15.375018119812012
    7. '#' → logprob: -15.875018119812012
    8. '```' → logprob: -16.500019073486328
    9. 'cls' → logprob: -16.500019073486328
    10. '   ' → logprob: -16.750019073486328

Token 622: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10398583114147186
    2. '
' → logprob: -2.3539857864379883
    3. ' points' → logprob: -6.603985786437988
    4. '    
' → logprob: -7.353985786437988
    5. ',' → logprob: -7.853985786437988
    6. ' centers' → logprob: -8.478985786437988
    7. 'points' → logprob: -8.603985786437988
    8. '  
' → logprob: -9.103985786437988
    9. '  ' → logprob: -9.478985786437988
    10. '```' → logprob: -9.478985786437988

Token 623: 'points' (ID: 14011)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1512918919324875
    2. ',' → logprob: -3.401291847229004
    3. ' )' → logprob: -3.401291847229004
    4. ')
' → logprob: -3.651291847229004
    5. '),' → logprob: -4.401291847229004
    6. ' et' → logprob: -4.526291847229004
    7. ' pour' → logprob: -5.401291847229004
    8. ').' → logprob: -5.776291847229004
    9. '   ' → logprob: -6.151291847229004
    10. ' ,' → logprob: -6.151291847229004

Token 624: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6911447048187256
    2. ' de' → logprob: -1.3161447048187256
    3. ' =' → logprob: -2.5661447048187256
    4. '   ' → logprob: -2.6911447048187256
    5. ')' → logprob: -3.3161447048187256
    6. '=' → logprob: -4.316144943237305
    7. ',' → logprob: -5.066144943237305
    8. 'import' → logprob: -5.691144943237305
    9. 's' → logprob: -5.941144943237305
    10. 'centr' → logprob: -6.066144943237305

Token 625: ' départ' (ID: 32693)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.05398442596197128
    2. 'depart' → logprob: -4.053984642028809
    3. ' départ' → logprob: -4.678984642028809
    4. 'pass' → logprob: -4.928984642028809
    5. 'd' → logprob: -5.178984642028809
    6. 'ré' → logprob: -5.803984642028809
    7. 'rep' → logprob: -6.178984642028809
    8. 'entrée' → logprob: -6.428984642028809
    9. ' passage' → logprob: -7.303984642028809
    10. 'contact' → logprob: -7.428984642028809

Token 626: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.2796005606651306
    2. ')' → logprob: -2.0296006202697754
    3. 'et' → logprob: -2.5296006202697754
    4. ',' → logprob: -3.6546006202697754
    5. '),' → logprob: -5.904600620269775
    6. ' )' → logprob: -6.404600620269775
    7. ' and' → logprob: -7.154600620269775
    8. '   ' → logprob: -7.529600620269775
    9. 'and' → logprob: -8.154600143432617
    10. 'import' → logprob: -8.654600143432617

Token 627: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05997480824589729
    2. ' d' → logprob: -3.3099749088287354
    3. 'fin' → logprob: -4.184974670410156
    4. ' fin' → logprob: -6.059974670410156
    5. 'arr' → logprob: -6.184974670410156
    6. ' arrivée' → logprob: -6.434974670410156
    7. ' ' → logprob: -8.809974670410156
    8. ''arrivée' → logprob: -8.809974670410156
    9. '#' → logprob: -9.934974670410156
    10. ' ' → logprob: -10.684974670410156

Token 628: ''arrivée' (ID: 156076)
  Prédit: ''arrivée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''arrivée' → logprob: -0.003715880447998643
    2. ''arr' → logprob: -6.128715991973877
    3. 'arr' → logprob: -7.128715991973877
    4. ''arrive' → logprob: -7.503715991973877
    5. ''' → logprob: -9.378715515136719
    6. '’arrivée' → logprob: -9.878715515136719
    7. '_arr' → logprob: -11.128715515136719
    8. ' arrivée' → logprob: -11.253715515136719
    9. ''arrêt' → logprob: -12.253715515136719
    10. ''entrée' → logprob: -13.003715515136719

Token 629: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14197547733783722
    2. ')
' → logprob: -2.1419754028320312
    3. '   ' → logprob: -4.391975402832031
    4. ')
' → logprob: -6.891975402832031
    5. ',' → logprob: -8.016975402832031
    6. '),' → logprob: -8.141975402832031
    7. ' )' → logprob: -8.141975402832031
    8. ')

' → logprob: -8.516975402832031
    9. ').' → logprob: -9.391975402832031
    10. ' )
' → logprob: -9.391975402832031

Token 630: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07039296627044678
    2. '
' → logprob: -2.8203930854797363
    3. '    
' → logprob: -4.820393085479736
    4. 'graph' → logprob: -8.695392608642578
    5. 'nodes' → logprob: -9.570392608642578
    6. '   
' → logprob: -10.695392608642578
    7. '  
' → logprob: -11.570392608642578
    8. 'points' → logprob: -11.820392608642578
    9. '```' → logprob: -11.945392608642578
    10. 'vertices' → logprob: -12.070392608642578

Token 631: ' #' (ID: 1069)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.7498789429664612
    2. 'nodes' → logprob: -1.2498788833618164
    3. '   ' → logprob: -1.7498788833618164
    4. 'graph' → logprob: -3.7498788833618164
    5. 'inter' → logprob: -4.249878883361816
    6. ' nodes' → logprob: -4.749878883361816
    7. '
' → logprob: -4.999878883361816
    8. ' points' → logprob: -5.249878883361816
    9. 'vertices' → logprob: -5.874878883361816
    10. 'intersection' → logprob: -6.249878883361816

Token 632: ' Les' (ID: 7029)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.8845687508583069
    2. 'points' → logprob: -1.259568691253662
    3. 'graph' → logprob: -1.384568691253662
    4. '   ' → logprob: -3.634568691253662
    5. '#' → logprob: -4.134568691253662
    6. 'inter' → logprob: -5.134568691253662
    7. '
' → logprob: -6.259568691253662
    8. 'vertices' → logprob: -7.009568691253662
    9. 'intersection' → logprob: -7.259568691253662
    10. '    
' → logprob: -8.25956916809082

Token 633: ' somm' (ID: 44830)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.21834887564182281
    2. ' points' → logprob: -2.593348979949951
    3. 'nodes' → logprob: -3.343348979949951
    4. 'inter' → logprob: -3.468348979949951
    5. '#' → logprob: -3.593348979949951
    6. ' nodes' → logprob: -4.468348979949951
    7. ' intersections' → logprob: -5.343348979949951
    8. 'cent' → logprob: -5.843348979949951
    9. 'vertices' → logprob: -6.093348979949951
    10. 'pts' → logprob: -7.093348979949951

Token 634: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.06897546350955963
    2. 'es' → logprob: -2.8189754486083984
    3. 'et' → logprob: -5.818975448608398
    4. 'etes' → logprob: -6.943975448608398
    5. 'e' → logprob: -7.193975448608398
    6. 'ites' → logprob: -7.318975448608398
    7. '   ' → logprob: -8.193975448608398
    8. 'êts' → logprob: -8.568975448608398
    9. ' points' → logprob: -9.193975448608398
    10. 'oints' → logprob: -9.318975448608398

Token 635: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1799468845129013
    2. '=' → logprob: -1.8049468994140625
    3. '=[]' → logprob: -9.304946899414062
    4. 's' → logprob: -9.929946899414062
    5. ')' → logprob: -11.304946899414062
    6. '.append' → logprob: -11.929946899414062
    7. '=[]
' → logprob: -12.304946899414062
    8. '=[' → logprob: -12.304946899414062
    9. '=[
' → logprob: -12.304946899414062
    10. ' are' → logprob: -12.429946899414062

Token 636: ' grap' (ID: 60955)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.015743641182780266
    2. 'graph' → logprob: -4.515743732452393
    3. ' grap' → logprob: -5.390743732452393
    4. ' graph' → logprob: -9.390743255615234
    5. '#' → logprob: -10.640743255615234
    6. '```' → logprob: -11.890743255615234
    7. '   ' → logprob: -13.390743255615234
    8. 'code' → logprob: -13.515743255615234
    9. '
' → logprob: -13.515743255615234
    10. 'g' → logprob: -13.765743255615234

Token 637: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.010369427502155304
    2. 'h' → logprob: -5.010369300842285
    3. 'aphe' → logprob: -5.760369300842285
    4. 'hé' → logprob: -8.385369300842285
    5. 'rap' → logprob: -9.385369300842285
    6. 'phe' → logprob: -9.760369300842285
    7. 'hes' → logprob: -10.260369300842285
    8. 'r' → logprob: -10.510369300842285
    9. '#' → logprob: -10.760369300842285
    10. 'raph' → logprob: -10.760369300842285

Token 638: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.665871262550354
    2. '=' → logprob: -0.790871262550354
    3. 's' → logprob: -3.7908711433410645
    4. ' sont' → logprob: -4.7908711433410645
    5. '#' → logprob: -7.5408711433410645
    6. ' seront' → logprob: -7.7908711433410645
    7. '=[]' → logprob: -8.415871620178223
    8. ')' → logprob: -8.915871620178223
    9. ':' → logprob: -9.040871620178223
    10. ' are' → logprob: -9.165871620178223

Token 639: ' ' (ID: 220)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -1.112176537513733
    2. ' vertices' → logprob: -1.487176537513733
    3. '[]' → logprob: -1.737176537513733
    4. 'points' → logprob: -2.1121764183044434
    5. ' points' → logprob: -2.8621764183044434
    6. 'nodes' → logprob: -3.2371764183044434
    7. ' nodes' → logprob: -3.7371764183044434
    8. '[(' → logprob: -4.987176418304443
    9. '[' → logprob: -5.362176418304443
    10. ' []' → logprob: -5.487176418304443

Token 640: '2' (ID: 17)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.2671732008457184
    2. 'points' → logprob: -1.642173171043396
    3. 'nodes' → logprob: -3.5171732902526855
    4. '[]' → logprob: -5.1421732902526855
    5. ' vertices' → logprob: -6.5171732902526855
    6. 'graph' → logprob: -6.6421732902526855
    7. 'verts' → logprob: -6.6421732902526855
    8. '[(' → logprob: -7.7671732902526855
    9. ' points' → logprob: -8.392172813415527
    10. 'pts' → logprob: -8.642172813415527

Token 641: '*(' (ID: 14793)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.43869665265083313
    2. '*n' → logprob: -1.0636966228485107
    3. '*' → logprob: -4.68869686126709
    4. 'n' → logprob: -8.18869686126709
    5. '*(' → logprob: -8.43869686126709
    6. '*i' → logprob: -9.56369686126709
    7. 'points' → logprob: -10.81369686126709
    8. '
' → logprob: -10.93869686126709
    9. '*s' → logprob: -10.93869686126709
    10. '   ' → logprob: -11.06369686126709

Token 642: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06228001415729523
    2. '(n' → logprob: -2.8122799396514893
    3. ' n' → logprob: -8.43727970123291
    4. ' (' → logprob: -9.43727970123291
    5. '(' → logprob: -12.43727970123291
    6. ')n' → logprob: -12.43727970123291
    7. ')' → logprob: -13.31227970123291
    8. '
' → logprob: -13.81227970123291
    9. '*n' → logprob: -14.06227970123291
    10. '```' → logprob: -14.18727970123291

Token 643: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5466959476470947
    2. '-' → logprob: -0.9216959476470947
    3. ' -' → logprob: -3.9216959476470947
    4. ')-' → logprob: -5.921695709228516
    5. '+' → logprob: -7.546695709228516
    6. ' )' → logprob: -9.171695709228516
    7. ')+' → logprob: -9.671695709228516
    8. ' ' → logprob: -10.546695709228516
    9. '   ' → logprob: -11.171695709228516
    10. ' +' → logprob: -11.296695709228516

Token 644: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4021237802808173e-05
    2. ' ' → logprob: -11.250014305114746
    3. '   ' → logprob: -15.125014305114746
    4. '2' → logprob: -15.125014305114746
    5. '```' → logprob: -15.500014305114746
    6. ')' → logprob: -16.00001335144043
    7. ' ' → logprob: -16.75001335144043
    8. 'n' → logprob: -17.12501335144043
    9. '
' → logprob: -17.87501335144043
    10. '  ' → logprob: -17.93751335144043

Token 645: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007291411980986595
    2. ')+' → logprob: -5.132291316986084
    3. '+' → logprob: -6.757291316986084
    4. ' +' → logprob: -8.757291793823242
    5. ' )' → logprob: -11.507291793823242
    6. ')
' → logprob: -11.882291793823242
    7. ')+(' → logprob: -12.257291793823242
    8. '),' → logprob: -12.507291793823242
    9. ')n' → logprob: -12.757291793823242
    10. '+)' → logprob: -13.007291793823242

Token 646: ' points' (ID: 5571)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06754011660814285
    2. '+' → logprob: -2.817540168762207
    3. ' points' → logprob: -6.442540168762207
    4. 'points' → logprob: -6.567540168762207
    5. ')' → logprob: -7.317540168762207
    6. ' ' → logprob: -7.692540168762207
    7. ' plus' → logprob: -7.817540168762207
    8. '   ' → logprob: -8.192540168762207
    9. ',' → logprob: -9.317540168762207
    10. '_points' → logprob: -9.442540168762207

Token 647: ' d' (ID: 272)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.21072454750537872
    2. ' plus' → logprob: -2.4607245922088623
    3. '+' → logprob: -2.5857245922088623
    4. ',' → logprob: -4.085724353790283
    5. ')' → logprob: -5.960724353790283
    6. 'plus' → logprob: -5.960724353790283
    7. '   ' → logprob: -6.210724353790283
    8. 's' → logprob: -6.335724353790283
    9. 'import' → logprob: -6.585724353790283
    10. ' (' → logprob: -7.710724353790283

Token 648: ''inter' (ID: 55731)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.0017308680107817054
    2. 'inter' → logprob: -6.626730918884277
    3. ''inter' → logprob: -8.001730918884277
    4. 'interaction' → logprob: -10.251730918884277
    5. 'int' → logprob: -10.876730918884277
    6. 'i' → logprob: -12.126730918884277
    7. 'union' → logprob: -13.251730918884277
    8. 'interface' → logprob: -13.501730918884277
    9. ' intersection' → logprob: -13.626730918884277
    10. ''intérêt' → logprob: -13.876730918884277

Token 649: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.00196836213581264
    2. 'ection' → logprob: -7.3769683837890625
    3. 'sections' → logprob: -8.251968383789062
    4. 'set' → logprob: -8.501968383789062
    5. 's' → logprob: -8.751968383789062
    6. 'ception' → logprob: -9.001968383789062
    7. 'et' → logprob: -9.126968383789062
    8. 'estion' → logprob: -9.251968383789062
    9. 'intersection' → logprob: -9.626968383789062
    10. 'er' → logprob: -9.876968383789062

Token 650: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08601779490709305
    2. ' plus' → logprob: -3.2110178470611572
    3. '+' → logprob: -4.211017608642578
    4. ' +' → logprob: -4.586017608642578
    5. 's' → logprob: -5.211017608642578
    6. '#' → logprob: -5.836017608642578
    7. 'plus' → logprob: -5.836017608642578
    8. ')' → logprob: -6.336017608642578
    9. ',
' → logprob: -6.586017608642578
    10. '   ' → logprob: -7.336017608642578

Token 651: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003920718561857939
    2. ' ' → logprob: -5.628920555114746
    3. '1' → logprob: -9.128920555114746
    4. '[(' → logprob: -9.378920555114746
    5. '[' → logprob: -10.003920555114746
    6. '4' → logprob: -11.003920555114746
    7. '3' → logprob: -11.378920555114746
    8. '[]' → logprob: -11.503920555114746
    9. ' [(' → logprob: -11.628920555114746
    10. '   ' → logprob: -11.628920555114746

Token 652: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008498902898281813
    2. ' ' → logprob: -8.125849723815918
    3. '[' → logprob: -8.500849723815918
    4. '1' → logprob: -8.500849723815918
    5. '[(' → logprob: -9.625849723815918
    6. '[]' → logprob: -10.875849723815918
    7. '[n' → logprob: -11.000849723815918
    8. '3' → logprob: -11.375849723815918
    9. '4' → logprob: -12.375849723815918
    10. ' [' → logprob: -12.500849723815918

Token 653: ' centres' (ID: 43504)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -1.4575707912445068
    2. ' points' → logprob: -1.5825707912445068
    3. '+' → logprob: -2.207570791244507
    4. '
' → logprob: -2.457570791244507
    5. ' +' → logprob: -2.707570791244507
    6. ' centers' → logprob: -3.207570791244507
    7. '<|end|>' → logprob: -3.207570791244507
    8. ' (' → logprob: -3.457570791244507
    9. ',' → logprob: -3.582570791244507
    10. ':' → logprob: -3.957570791244507

Token 654: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012993504293262959
    2. '
' → logprob: -4.762993335723877
    3. '    
' → logprob: -6.262993335723877
    4. 'vertices' → logprob: -7.137993335723877
    5. 'points' → logprob: -7.637993335723877
    6. 'nodes' → logprob: -7.762993335723877
    7. 'graph' → logprob: -8.762993812561035
    8. ' vertices' → logprob: -8.887993812561035
    9. ' points' → logprob: -9.137993812561035
    10. ',' → logprob: -9.262993812561035

Token 655: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03510401025414467
    2. '
' → logprob: -4.660103797912598
    3. 'vertices' → logprob: -4.785103797912598
    4. 'nodes' → logprob: -4.785103797912598
    5. 'graph' → logprob: -5.535103797912598
    6. '    
' → logprob: -6.535103797912598
    7. ' nodes' → logprob: -7.160103797912598
    8. ' vertices' → logprob: -7.285103797912598
    9. ' graph' → logprob: -7.910103797912598
    10. 'points' → logprob: -8.035103797912598

Token 656: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3195136785507202
    2. 'nodes' → logprob: -1.3195136785507202
    3. 'vertices' → logprob: -1.8195136785507202
    4. 'graph' → logprob: -1.9445136785507202
    5. 'points' → logprob: -1.9445136785507202
    6. ' nodes' → logprob: -5.69451379776001
    7. 'inter' → logprob: -5.69451379776001
    8. '
' → logprob: -5.94451379776001
    9. '#' (adapté à ' #') → logprob: -6.06951379776001
    10. ' vertices' → logprob: -6.19451379776001

Token 657: ' On' (ID: 2160)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.6294137239456177
    2. 'graph' → logprob: -1.7544137239456177
    3. 'nodes' → logprob: -1.7544137239456177
    4. 'vertices' → logprob: -2.754413604736328
    5. '#' → logprob: -4.129413604736328
    6. 'inter' → logprob: -4.504413604736328
    7. 'intersection' → logprob: -4.879413604736328
    8. '   ' → logprob: -4.879413604736328
    9. ' nodes' → logprob: -5.254413604736328
    10. ' points' → logprob: -5.754413604736328

Token 658: ' connect' (ID: 4837)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4903123676776886
    2. '#' → logprob: -1.6153123378753662
    3. 'contin' → logprob: -2.615312337875366
    4. ' continue' → logprob: -3.615312337875366
    5. 'build' → logprob: -4.615312576293945
    6. 'n' → logprob: -4.615312576293945
    7. 'aj' → logprob: -4.615312576293945
    8. 'cr' → logprob: -5.365312576293945
    9. 'v' → logprob: -5.865312576293945
    10. 'def' → logprob: -5.865312576293945

Token 659: 'e' (ID: 68)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.07086905092000961
    2. 'e' → logprob: -2.695868968963623
    3. 'ons' → logprob: -7.070868968963623
    4. 'ions' → logprob: -10.070869445800781
    5. 'ion' → logprob: -11.195869445800781
    6. 'ant' → logprob: -11.695869445800781
    7. 'ent' → logprob: -12.070869445800781
    8. 's' → logprob: -12.445869445800781
    9. 'ed' → logprob: -13.195869445800781
    10. '#' → logprob: -13.570869445800781

Token 660: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.15315291285514832
    2. 'les' → logprob: -2.5281529426574707
    3. ' chaque' → logprob: -3.4031529426574707
    4. ' ces' → logprob: -3.7781529426574707
    5. ' entre' → logprob: -6.903152942657471
    6. ' tous' → logprob: -7.028152942657471
    7. ' points' → logprob: -7.528152942657471
    8. 'ces' → logprob: -7.778152942657471
    9. ' ' → logprob: -7.903152942657471
    10. 'points' → logprob: -8.028152465820312

Token 661: ' somm' (ID: 44830)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.7723890542984009
    2. 'cent' → logprob: -1.6473890542984009
    3. 's' → logprob: -1.7723890542984009
    4. ' points' → logprob: -2.6473889350891113
    5. ' centers' → logprob: -3.0223889350891113
    6. ' centres' → logprob: -4.022388935089111
    7. 'inter' → logprob: -4.772388935089111
    8. ' intersections' → logprob: -5.022388935089111
    9. 'ar' → logprob: -5.522388935089111
    10. 'nodes' → logprob: -6.022388935089111

Token 662: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.00021712594025302678
    2. 'ents' → logprob: -9.50021743774414
    3. 'et' → logprob: -9.87521743774414
    4. 'êts' → logprob: -10.37521743774414
    5. 'ts' → logprob: -11.00021743774414
    6. 'e' → logprob: -11.12521743774414
    7. 'oints' → logprob: -12.25021743774414
    8. 'its' → logprob: -13.00021743774414
    9. 'és' → logprob: -13.00021743774414
    10. '#' → logprob: -13.12521743774414

Token 663: ' par' (ID: 686)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.42447924613952637
    2. ' par' → logprob: -2.2994792461395264
    3. 'entre' → logprob: -2.4244792461395264
    4. 'par' → logprob: -2.9244792461395264
    5. 's' → logprob: -3.2994792461395264
    6. 'adj' → logprob: -3.7994792461395264
    7. 'avec' → logprob: -4.2994794845581055
    8. ' avec' → logprob: -5.2994794845581055
    9. 'between' → logprob: -5.4244794845581055
    10. ' between' → logprob: -6.1744794845581055

Token 664: ' arcs' (ID: 150448)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6405066847801208
    2. 'des' → logprob: -0.7655066847801208
    3. 'ar' → logprob: -6.265506744384766
    4. 'edges' → logprob: -6.265506744384766
    5. '```' → logprob: -6.515506744384766
    6. 'une' → logprob: -8.015506744384766
    7. ' edges' → logprob: -8.140506744384766
    8. '#' → logprob: -8.265506744384766
    9. '[]' → logprob: -8.390506744384766
    10. ' arcs' → logprob: -8.390506744384766

Token 665: ' si' (ID: 1784)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7164199948310852
    2. '   ' → logprob: -1.4664199352264404
    3. ',' → logprob: -1.8414199352264404
    4. ':' → logprob: -4.3414201736450195
    5. ' avec' → logprob: -4.3414201736450195
    6. '.' → logprob: -4.5914201736450195
    7. '#' → logprob: -4.5914201736450195
    8. 's' → logprob: -4.7164201736450195
    9. 'graph' → logprob: -4.7164201736450195
    10. '
' → logprob: -4.9664201736450195

Token 666: ' le' (ID: 505)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.5976690053939819
    2. ' segment' → logprob: -0.8476690053939819
    3. '(segment' → logprob: -4.2226691246032715
    4. 'le' → logprob: -5.8476691246032715
    5. ' le' → logprob: -5.8476691246032715
    6. ' la' → logprob: -8.347668647766113
    7. 'segments' → logprob: -8.972668647766113
    8. 'les' → logprob: -8.972668647766113
    9. ' ils' → logprob: -9.097668647766113
    10. ' les' → logprob: -9.222668647766113

Token 667: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.04321315884590149
    2. ' segment' → logprob: -3.168213129043579
    3. 'seg' → logprob: -9.543212890625
    4. '(segment' → logprob: -10.043212890625
    5. 'segments' → logprob: -10.793212890625
    6. '```' → logprob: -11.168212890625
    7. 'arc' → logprob: -11.668212890625
    8. '#' → logprob: -11.793212890625
    9. '   ' → logprob: -12.168212890625
    10. ' trajet' → logprob: -12.355712890625

Token 668: ' entre' (ID: 3853)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.8709261417388916
    2. ' entre' → logprob: -1.7459261417388916
    3. ' est' → logprob: -1.8709261417388916
    4. 'entre' → logprob: -2.6209261417388916
    5. '(p' → logprob: -3.2459261417388916
    6. ' (' → logprob: -3.3709261417388916
    7. '[' → logprob: -3.7459261417388916
    8. ' [' → logprob: -4.2459259033203125
    9. ' between' → logprob: -4.3709259033203125
    10. 'between' → logprob: -4.3709259033203125

Token 669: ' eux' (ID: 36371)
  Prédit: 'eux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eux' → logprob: -0.07451386004686356
    2. 'ces' → logprob: -2.6995139122009277
    3. 'les' → logprob: -5.949513912200928
    4. ' eux' → logprob: -6.824513912200928
    5. 'leurs' → logprob: -8.32451343536377
    6. 'leur' → logprob: -8.44951343536377
    7. ' ces' → logprob: -8.69951343536377
    8. 'e' → logprob: -9.44951343536377
    9. 'eu' → logprob: -10.19951343536377
    10. 'ce' → logprob: -10.57451343536377

Token 670: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.5829781293869019
    2. ' est' → logprob: -0.8329781293869019
    3. '#' → logprob: -5.457978248596191
    4. 'is' → logprob: -6.957978248596191
    5. 's' → logprob: -7.832978248596191
    6. 'ent' → logprob: -7.832978248596191
    7. ' is' → logprob: -7.957978248596191
    8. ')' → logprob: -8.957978248596191
    9. ''est' → logprob: -8.957978248596191
    10. '   ' → logprob: -10.082978248596191

Token 671: ' contenu' (ID: 57581)
  Prédit: ' contenu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contenu' → logprob: -0.8546370267868042
    2. 'conten' → logprob: -1.1046370267868042
    3. 'contained' → logprob: -1.6046370267868042
    4. 'dans' → logprob: -3.6046371459960938
    5. ' inclus' → logprob: -5.604637145996094
    6. ' contained' → logprob: -5.854637145996094
    7. ' dans' → logprob: -6.104637145996094
    8. ' conten' → logprob: -6.479637145996094
    9. 'in' → logprob: -6.979637145996094
    10. 'segment' → logprob: -7.354637145996094

Token 672: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.49158215522766113
    2. 'dans' → logprob: -0.9915821552276611
    3. '   ' → logprob: -5.116581916809082
    4. '    ' → logprob: -5.741581916809082
    5. ' in' → logprob: -5.991581916809082
    6. 's' → logprob: -7.116581916809082
    7. 'in' → logprob: -7.116581916809082
    8. 'd' → logprob: -7.616581916809082
    9. ')' → logprob: -7.616581916809082
    10. '_d' → logprob: -7.741581916809082

Token 673: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.1786807775497437
    2. ' la' → logprob: -1.3036807775497437
    3. 'au' → logprob: -1.3036807775497437
    4. ' au' → logprob: -2.178680896759033
    5. 'les' → logprob: -4.178680896759033
    6. 'the' → logprob: -5.178680896759033
    7. 'le' → logprob: -5.553680896759033
    8. 'l' → logprob: -5.678680896759033
    9. '   ' → logprob: -6.428680896759033
    10. ' the' → logprob: -6.678680896759033

Token 674: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.5410426259040833
    2. 'chain' → logprob: -0.9160426259040833
    3. ' chaîne' → logprob: -4.916042804718018
    4. ' chain' → logprob: -5.166042804718018
    5. 'cha' → logprob: -5.791042804718018
    6. ' chaine' → logprob: -7.041042804718018
    7. 'chains' → logprob: -7.541042804718018
    8. ' chaînes' → logprob: -9.41604232788086
    9. '_chain' → logprob: -10.29104232788086
    10. '"' → logprob: -10.79104232788086

Token 675: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1721343696117401
    2. '
' → logprob: -2.1721343994140625
    3. '    
' → logprob: -3.1721343994140625
    4. '   
' → logprob: -8.172134399414062
    5. ' centers' → logprob: -8.547134399414062
    6. ' points' → logprob: -8.672134399414062
    7. '  
' → logprob: -8.797134399414062
    8. 'def' → logprob: -8.797134399414062
    9. ' 
' → logprob: -8.922134399414062
    10. ')
' → logprob: -9.297134399414062

Token 676: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27597561478614807
    2. '
' → logprob: -1.5259755849838257
    3. '    
' → logprob: -3.7759757041931152
    4. 'nodes' → logprob: -8.650975227355957
    5. ' 
' → logprob: -8.900975227355957
    6. '  
' → logprob: -9.275975227355957
    7. 'vertices' → logprob: -9.275975227355957
    8. '#' → logprob: -9.525975227355957
    9. '   
' → logprob: -9.525975227355957
    10. 'graph' → logprob: -9.775975227355957

Token 677: ' #' (ID: 1069)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.9529627561569214
    2. '#' (adapté à ' #') → logprob: -1.5779627561569214
    3. 'graph' → logprob: -1.8279627561569214
    4. 'nodes' → logprob: -2.077962875366211
    5. '   ' → logprob: -2.452962875366211
    6. 'inter' → logprob: -3.702962875366211
    7. 'vertices' → logprob: -4.952962875366211
    8. 'cent' → logprob: -6.077962875366211
    9. 'intersection' → logprob: -7.202962875366211
    10. 'pts' → logprob: -8.077962875366211

Token 678: ' Stock' (ID: 16382)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.1887025237083435
    2. 'nodes' → logprob: -2.3137025833129883
    3. '#' → logprob: -3.4387025833129883
    4. 'graph' → logprob: -4.188702583312988
    5. 'inter' → logprob: -4.313702583312988
    6. 'vertices' → logprob: -4.563702583312988
    7. 'intersection' → logprob: -7.063702583312988
    8. 'cent' → logprob: -8.063702583312988
    9. 'pts' → logprob: -8.188702583312988
    10. '   ' → logprob: -8.938702583312988

Token 679: 'age' (ID: 477)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.16678260266780853
    2. '_nodes' → logprob: -3.5417826175689697
    3. '_points' → logprob: -3.5417826175689697
    4. '_vertices' → logprob: -3.6667826175689697
    5. 'age' → logprob: -4.166782379150391
    6. '_edges' → logprob: -4.541782379150391
    7. '=' → logprob: -5.041782379150391
    8. 'vertices' → logprob: -5.166782379150391
    9. ' =' → logprob: -5.166782379150391
    10. '=[]' → logprob: -5.291782379150391

Token 680: ' des' (ID: 731)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.0078080892562866
    2. 'nodes' → logprob: -1.2578080892562866
    3. 'points' → logprob: -1.7578080892562866
    4. 'vertices' → logprob: -1.8828080892562866
    5. '   ' → logprob: -4.882808208465576
    6. ' nodes' → logprob: -5.507808208465576
    7. 'inter' → logprob: -5.882808208465576
    8. ' vertices' → logprob: -6.507808208465576
    9. 'edges' → logprob: -6.507808208465576
    10. 'intersection' → logprob: -6.632808208465576

Token 681: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.17123906314373016
    2. 'nodes' → logprob: -2.171239137649536
    3. 'vertices' → logprob: -3.171239137649536
    4. 'graph' → logprob: -6.671238899230957
    5. 'verts' → logprob: -10.546238899230957
    6. 'cent' → logprob: -10.796238899230957
    7. ' points' → logprob: -10.921238899230957
    8. '#' → logprob: -10.921238899230957
    9. 'positions' → logprob: -11.546238899230957
    10. 'pts' → logprob: -11.546238899230957

Token 682: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3559255301952362
    2. 'points' → logprob: -1.8559255599975586
    3. '=' → logprob: -2.4809255599975586
    4. 'nodes' → logprob: -3.2309255599975586
    5. 'vertices' → logprob: -4.980925559997559
    6. '   ' → logprob: -5.105925559997559
    7. '_points' → logprob: -6.480925559997559
    8. ':' → logprob: -6.730925559997559
    9. '=[]' → logprob: -6.855925559997559
    10. ' points' → logprob: -7.105925559997559

Token 683: ''inter' (ID: 55731)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.017266780138015747
    2. 'inter' → logprob: -4.517266750335693
    3. ''inter' → logprob: -5.142266750335693
    4. 'interaction' → logprob: -9.017267227172852
    5. 'int' → logprob: -9.267267227172852
    6. ''intérêt' → logprob: -10.142267227172852
    7. '_inter' → logprob: -10.642267227172852
    8. 'interface' → logprob: -10.767267227172852
    9. 'interest' → logprob: -10.892267227172852
    10. ''int' → logprob: -11.892267227172852

Token 684: 'sections' (ID: 52783)
  Prédit: 'section'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.1325233429670334
    2. 'et' → logprob: -2.25752329826355
    3. 'sections' → logprob: -4.632523536682129
    4. 'er' → logprob: -5.757523536682129
    5. 'est' → logprob: -6.382523536682129
    6. 'face' → logprob: -6.882523536682129
    7. 'ection' → logprob: -6.882523536682129
    8. 'intersection' → logprob: -7.257523536682129
    9. 'ets' → logprob: -7.632523536682129
    10. 's' → logprob: -8.132523536682129

Token 685: ' entre' (ID: 3853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055282123386859894
    2. '=' → logprob: -3.3052821159362793
    3. 'points' → logprob: -4.305282115936279
    4. '_points' → logprob: -5.930282115936279
    5. 'inter' → logprob: -8.680282592773438
    6. ' points' → logprob: -9.055282592773438
    7. '_inter' → logprob: -9.305282592773438
    8. 'pts' → logprob: -9.430282592773438
    9. '   ' → logprob: -9.555282592773438
    10. '_pts' → logprob: -9.680282592773438

Token 686: ' cer' (ID: 10816)
  Prédit: 'cer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cer' → logprob: -0.06393472850322723
    2. 'cir' → logprob: -3.188934803009033
    3. 'c' → logprob: -4.438934803009033
    4. 'les' → logprob: -5.188934803009033
    5. ' cer' → logprob: -6.563934803009033
    6. 'cou' → logprob: -7.438934803009033
    7. 'cha' → logprob: -7.688934803009033
    8. 'pairs' → logprob: -8.563934326171875
    9. ' les' → logprob: -9.313934326171875
    10. 'cers' → logprob: -9.688934326171875

Token 687: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.0007287554908543825
    2. 'cl' → logprob: -8.000728607177734
    3. 'les' → logprob: -8.750728607177734
    4. 'c' → logprob: -9.000728607177734
    5. 'cle' → logprob: -10.000728607177734
    6. '```' → logprob: -10.875728607177734
    7. '#' → logprob: -11.500728607177734
    8. '``' → logprob: -11.625728607177734
    9. 'l' → logprob: -12.250728607177734
    10. 'icles' → logprob: -12.625728607177734

Token 688: ' i' (ID: 575)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.10102237015962601
    2. 'intersection' → logprob: -2.851022481918335
    3. ' =' → logprob: -4.476022243499756
    4. 'points' → logprob: -4.601022243499756
    5. ' intersections' → logprob: -4.601022243499756
    6. ' inter' → logprob: -6.351022243499756
    7. '_inter' → logprob: -6.726022243499756
    8. 'ints' → logprob: -7.101022243499756
    9. ' intersection' → logprob: -7.226022243499756
    10. 'pts' → logprob: -7.351022243499756

Token 689: ' et' (ID: 859)
  Prédit: '_inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.43894636631011963
    2. ' =' → logprob: -1.3139463663101196
    3. '=' → logprob: -3.68894624710083
    4. 'et' → logprob: -4.06394624710083
    5. '+' → logprob: -4.81394624710083
    6. 'inter' → logprob: -4.81394624710083
    7. '_points' → logprob: -4.81394624710083
    8. '_i' → logprob: -5.68894624710083
    9. ',' → logprob: -5.68894624710083
    10. '_int' → logprob: -6.43894624710083

Token 690: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07895687222480774
    2. ' i' → logprob: -2.5789568424224854
    3. 'c' → logprob: -10.703956604003906
    4. '(i' → logprob: -11.203956604003906
    5. ' ' → logprob: -11.953956604003906
    6. '	i' → logprob: -11.953956604003906
    7. ' (' → logprob: -12.578956604003906
    8. '   ' → logprob: -12.828956604003906
    9. ' ' → logprob: -12.953956604003906
    10. '{i' → logprob: -13.203956604003906

Token 691: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1114591360092163
    2. 'i' → logprob: -1.3614591360092163
    3. 'et' → logprob: -1.6114591360092163
    4. '   ' → logprob: -2.986459255218506
    5. ' i' → logprob: -2.986459255218506
    6. ' et' → logprob: -3.236459255218506
    7. ',' → logprob: -3.361459255218506
    8. ',i' → logprob: -3.861459255218506
    9. 'and' → logprob: -4.861459255218506
    10. '(i' → logprob: -5.736459255218506

Token 692: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -10.875019073486328
    3. '```' → logprob: -15.625019073486328
    4. '+' → logprob: -16.375019073486328
    5. '   ' → logprob: -17.625019073486328
    6. '#' → logprob: -18.000019073486328
    7. '[' → logprob: -18.625019073486328
    8. '`' → logprob: -18.625019073486328
    9. '0' → logprob: -19.000019073486328
    10. 'i' → logprob: -19.125019073486328

Token 693: '
' (ID: 198)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.12364494800567627
    2. 'intersection' → logprob: -2.2486448287963867
    3. 'points' → logprob: -4.748644828796387
    4. ' =' → logprob: -7.498644828796387
    5. 'in' → logprob: -8.248644828796387
    6. '=' → logprob: -8.748644828796387
    7. '   ' → logprob: -8.748644828796387
    8. '_inter' → logprob: -8.873644828796387
    9. ' intersections' → logprob: -8.873644828796387
    10. 'pts' → logprob: -8.873644828796387

Token 694: '   ' (ID: 271)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.15548214316368103
    2. 'intersection' → logprob: -2.030482053756714
    3. 'points' → logprob: -4.655482292175293
    4. '   ' → logprob: -6.530482292175293
    5. ' intersections' → logprob: -6.655482292175293
    6. 'vertices' → logprob: -9.405482292175293
    7. 'pts' → logprob: -9.405482292175293
    8. ' intersection' → logprob: -9.405482292175293
    9. '_inter' → logprob: -10.530482292175293
    10. 'graph' → logprob: -10.530482292175293

Token 695: ' inter' (ID: 993)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' (adapté à ' inter') → logprob: -0.3135537803173065
    2. 'intersection' → logprob: -1.313553810119629
    3. 'points' → logprob: -8.813553810119629
    4. ' intersections' → logprob: -9.563553810119629
    5. 'int' → logprob: -10.563553810119629
    6. 'in' → logprob: -11.313553810119629
    7. 'ints' → logprob: -11.438553810119629
    8. ' intersection' → logprob: -12.188553810119629
    9. '   ' → logprob: -12.313553810119629
    10. 'all' → logprob: -12.938553810119629

Token 696: '_points' (ID: 30070)
  Prédit: 'sections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sections' → logprob: -0.000399091251892969
    2. 'points' → logprob: -8.500398635864258
    3. '_points' → logprob: -8.625398635864258
    4. 'section' → logprob: -11.750398635864258
    5. '_sections' → logprob: -12.750398635864258
    6. 's' → logprob: -13.125398635864258
    7. 'sects' → logprob: -13.750398635864258
    8. '_pts' → logprob: -14.875398635864258
    9. 'secs' → logprob: -15.125398635864258
    10. 'ections' → logprob: -15.125398635864258

Token 697: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20161496102809906
    2. ' =' → logprob: -1.7016149759292603
    3. '=[]' → logprob: -8.576615333557129
    4. 's' → logprob: -11.451615333557129
    5. '=[' → logprob: -13.951615333557129
    6. '=[]
' → logprob: -14.201615333557129
    7. '＝' → logprob: -15.701615333557129
    8. '=[]
' → logprob: -16.076614379882812
    9. ']' → logprob: -16.201614379882812
    10. ':' → logprob: -16.201614379882812

Token 698: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -9.686778503237292e-05
    2. '[' → logprob: -9.500097274780273
    3. '[]
' → logprob: -11.000097274780273
    4. ' []' → logprob: -12.250097274780273
    5. '[n' → logprob: -15.625097274780273
    6. '[]

' → logprob: -15.625097274780273
    7. '[]"' → logprob: -16.750097274780273
    8. '{}' → logprob: -17.000097274780273
    9. '[i' → logprob: -17.500097274780273
    10. '[(' → logprob: -17.625097274780273

Token 699: 'circle' (ID: 51762)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09492991864681244
    2. 'None' → logprob: -3.0949299335479736
    3. '[]' → logprob: -3.8449299335479736
    4. '()]' → logprob: -4.2199296951293945
    5. '()' → logprob: -5.0949296951293945
    6. '(' → logprob: -7.2199296951293945
    7. 'circle' → logprob: -7.5949296951293945
    8. ']
' → logprob: -8.219929695129395
    9. ']()' → logprob: -8.344929695129395
    10. '(None' → logprob: -8.594929695129395

Token 700: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -1.9862216504407115e-05
    2. 's' → logprob: -11.000020027160645
    3. 'inter' → logprob: -13.000020027160645
    4. '_' → logprob: -15.750020027160645
    5. ']' → logprob: -16.000019073486328
    6. 'for' → logprob: -16.250019073486328
    7. '_points' → logprob: -17.000019073486328
    8. '_INTER' → logprob: -17.000019073486328
    9. 'Inter' → logprob: -17.375019073486328
    10. ']_' → logprob: -17.375019073486328

Token 701: 'sections' (ID: 52783)
  Prédit: 'sections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sections' → logprob: -0.001137358252890408
    2. 'ections' → logprob: -7.3761372566223145
    3. 's' → logprob: -7.7511372566223145
    4. 'ctions' → logprob: -10.001137733459473
    5. 'section' → logprob: -11.376137733459473
    6. 'se' → logprob: -11.751137733459473
    7. 'sects' → logprob: -11.876137733459473
    8. 't' → logprob: -13.626137733459473
    9. 'points' → logprob: -13.626137733459473
    10. 'sect' → logprob: -14.126137733459473

Token 702: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0003078142472077161
    2. '(dataset' → logprob: -8.6253080368042
    3. ']' → logprob: -9.6253080368042
    4. '](' → logprob: -10.7503080368042
    5. '(' → logprob: -11.1253080368042
    6. ' (' → logprob: -11.2503080368042
    7. 'dataset' → logprob: -12.2503080368042
    8. '(
' → logprob: -13.2503080368042
    9. 'cir' → logprob: -13.7503080368042
    10. '((' → logprob: -14.0003080368042

Token 703: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.015565255656838417
    2. 'cir' → logprob: -4.890565395355225
    3. 'dataset' → logprob: -5.765565395355225
    4. 'icles' → logprob: -7.015565395355225
    5. 'cles' → logprob: -7.265565395355225
    6. 's' → logprob: -7.765565395355225
    7. '#' → logprob: -7.890565395355225
    8. 'irc' → logprob: -7.890565395355225
    9. '1' → logprob: -7.890565395355225
    10. 'i' → logprob: -8.015564918518066

Token 704: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.000651197915431112
    2. 'les' → logprob: -7.3756513595581055
    3. 'icles' → logprob: -12.250651359558105
    4. 'c' → logprob: -12.750651359558105
    5. 'cls' → logprob: -13.000651359558105
    6. 'cl' → logprob: -13.250651359558105
    7. 'ir' → logprob: -13.375651359558105
    8. '[' → logprob: -13.375651359558105
    9. 'l' → logprob: -13.500651359558105
    10. '#' → logprob: -13.625651359558105

Token 705: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004413382615894079
    2. '[' → logprob: -5.504413604736328
    3. '[n' → logprob: -8.129413604736328
    4. '[c' → logprob: -11.254413604736328
    5. '[
' → logprob: -11.629413604736328
    6. '   ' → logprob: -12.629413604736328
    7. 's' → logprob: -13.004413604736328
    8. ')[' → logprob: -13.379413604736328
    9. '[s' → logprob: -13.629413604736328
    10. ' [' → logprob: -13.754413604736328

Token 706: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -5.240481914370321e-05
    2. ',' → logprob: -10.750052452087402
    3. '],
' → logprob: -11.500052452087402
    4. '),' → logprob: -12.000052452087402
    5. ']' → logprob: -12.125052452087402
    6. ' ],' → logprob: -12.875052452087402
    7. '   ' → logprob: -13.000052452087402
    8. '],[' → logprob: -13.375052452087402
    9. ' ' → logprob: -14.000052452087402
    10. '][' → logprob: -14.750052452087402

Token 707: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.0052618607878685
    2. ' circles' → logprob: -5.2552618980407715
    3. 'circ' → logprob: -11.505261421203613
    4. '   ' → logprob: -11.880261421203613
    5. 'cer' → logprob: -12.505261421203613
    6. 'circle' → logprob: -12.505261421203613
    7. 'c' → logprob: -13.380261421203613
    8. ' cir' → logprob: -14.880261421203613
    9. 'cycles' → logprob: -15.130261421203613
    10. ' ' → logprob: -15.130261421203613

Token 708: '[i' (ID: 1768)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.0030264330562204123
    2. '[i' → logprob: -6.753026485443115
    3. ' circles' → logprob: -6.753026485443115
    4. 'i' → logprob: -8.003026008605957
    5. 'c' → logprob: -8.253026008605957
    6. '   ' → logprob: -10.253026008605957
    7. 'circ' → logprob: -11.503026008605957
    8. '[c' → logprob: -11.628026008605957
    9. ' i' → logprob: -12.128026008605957
    10. 'Cir' → logprob: -12.503026008605957

Token 709: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00033081689616665244
    2. ' +' → logprob: -8.875330924987793
    3. 'i' → logprob: -9.000330924987793
    4. '+i' → logprob: -10.000330924987793
    5. '1' → logprob: -10.875330924987793
    6. '   ' → logprob: -13.750330924987793
    7. ' i' → logprob: -14.625330924987793
    8. '[i' → logprob: -14.625330924987793
    9. '+
' → logprob: -14.625330924987793
    10. '
' → logprob: -15.375330924987793

Token 710: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1054253011243418e-05
    2. ' ' → logprob: -10.875020980834961
    3. '   ' → logprob: -14.000020980834961
    4. 'i' → logprob: -14.625020980834961
    5. '+' → logprob: -15.687520980834961
    6. '```' → logprob: -16.31252098083496
    7. '
' → logprob: -16.43752098083496
    8. '  ' → logprob: -16.75002098083496
    9. '[' → logprob: -16.93752098083496
    10. '`' → logprob: -17.06252098083496

Token 711: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004408278502523899
    2. ')]' → logprob: -5.504408359527588
    3. '])' → logprob: -8.25440788269043
    4. '))' → logprob: -10.37940788269043
    5. ')])' → logprob: -10.75440788269043
    6. ' )' → logprob: -12.12940788269043
    7. '])]' → logprob: -12.62940788269043
    8. ']' → logprob: -12.87940788269043
    9. ')
' → logprob: -13.25440788269043
    10. ')[' → logprob: -13.50440788269043

Token 712: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10182156413793564
    2. 'for' → logprob: -2.3518216609954834
    3. '   ' → logprob: -7.101821422576904
    4. ')' → logprob: -7.851821422576904
    5. '	for' → logprob: -8.226821899414062
    6. ' ' → logprob: -9.601821899414062
    7. '
' → logprob: -10.101821899414062
    8. '    ' → logprob: -11.851821899414062
    9. '  ' → logprob: -12.351821899414062
    10. ' if' → logprob: -12.476821899414062

Token 713: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006715370807796717
    2. ' i' → logprob: -5.006715297698975
    3. '	i' → logprob: -16.756715774536133
    4. '
' → logprob: -18.381715774536133
    5. ' ' → logprob: -19.631715774536133
    6. ' ' → logprob: -19.881715774536133
    7. 'in' → logprob: -20.756715774536133
    8. '

' → logprob: -21.006715774536133
    9. '```' → logprob: -21.131715774536133
    10. ')i' → logprob: -21.256715774536133

Token 714: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003351782448589802
    2. 'in' → logprob: -5.87835168838501
    3. ' i' → logprob: -7.87835168838501
    4. 'i' → logprob: -8.753352165222168
    5. 'range' → logprob: -12.003352165222168
    6. ' range' → logprob: -12.753352165222168
    7. 'import' → logprob: -14.628352165222168
    8. ' ' → logprob: -15.128352165222168
    9. ')' → logprob: -17.25335121154785
    10. '<|end|>' → logprob: -17.50335121154785

Token 715: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.547789674485102e-05
    2. ' range' → logprob: -10.250035285949707
    3. '(range' → logprob: -20.125036239624023
    4. '
' → logprob: -21.625036239624023
    5. '	range' → logprob: -21.625036239624023
    6. 'r' → logprob: -23.750036239624023
    7. 'rang' → logprob: -23.875036239624023
    8. ' ' → logprob: -23.875036239624023
    9. '```' → logprob: -24.000036239624023
    10. '   ' → logprob: -24.125036239624023

Token 716: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03892119973897934
    2. '(n' → logprob: -3.2889211177825928
    3. ' n' → logprob: -7.038921356201172
    4. 'len' → logprob: -13.413921356201172
    5. '	n' → logprob: -15.038921356201172
    6. ' (' → logprob: -15.288921356201172
    7. '(' → logprob: -15.663921356201172
    8. '   ' → logprob: -16.413921356201172
    9. '(len' → logprob: -16.663921356201172
    10. ')n' → logprob: -17.663921356201172

Token 717: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5759406685829163
    2. ' -' → logprob: -0.8259406685829163
    3. '1' → logprob: -14.20094108581543
    4. ')' → logprob: -15.20094108581543
    5. ' ' → logprob: -15.45094108581543
    6. ' ' → logprob: -17.57594108581543
    7. '```' → logprob: -18.07594108581543
    8. ')]' → logprob: -18.20094108581543
    9. '   ' → logprob: -18.32594108581543
    10. '#' → logprob: -18.51344108581543

Token 718: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.081584716506768e-05
    2. ' ' → logprob: -10.875020980834961
    3. ')' → logprob: -14.000020980834961
    4. '```' → logprob: -14.875020980834961
    5. '   ' → logprob: -15.750020980834961
    6. '2' → logprob: -16.00002098083496
    7. '`' → logprob: -17.50002098083496
    8. '
' → logprob: -17.62502098083496
    9. '  ' → logprob: -18.00002098083496
    10. '0' → logprob: -18.06252098083496

Token 719: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0006291598547250032
    2. ')' → logprob: -7.50062894821167
    3. ']' → logprob: -9.500629425048828
    4. ' )' → logprob: -14.375629425048828
    5. ' ]' → logprob: -15.875629425048828
    6. ')])' → logprob: -16.125629425048828
    7. ')]
' → logprob: -16.375629425048828
    8. ')],' → logprob: -16.375629425048828
    9. '   ' → logprob: -16.625629425048828
    10. ')][' → logprob: -17.000629425048828

Token 720: '   ' (ID: 271)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.39557474851608276
    2. 'points' → logprob: -1.5205748081207275
    3. 'vertices' → logprob: -2.8955748081207275
    4. '#' → logprob: -3.6455748081207275
    5. 'graph' → logprob: -4.395574569702148
    6. '   ' → logprob: -5.270574569702148
    7. 'node' → logprob: -6.145574569702148
    8. 'start' → logprob: -6.770574569702148
    9. 'pts' → logprob: -7.020574569702148
    10. 'cent' → logprob: -7.395574569702148

Token 721: ' #' (ID: 1069)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.9638530015945435
    2. 'points' → logprob: -1.3388530015945435
    3. '#' (adapté à ' #') → logprob: -1.7138530015945435
    4. 'graph' → logprob: -2.088852882385254
    5. 'start' → logprob: -3.838852882385254
    6. 'vertices' → logprob: -3.963852882385254
    7. '   ' → logprob: -4.713852882385254
    8. ' nodes' → logprob: -6.713852882385254
    9. ' points' → logprob: -7.588852882385254
    10. 'node' → logprob: -8.338852882385254

Token 722: ' On' (ID: 2160)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.5986880660057068
    2. 'points' → logprob: -0.9736880660057068
    3. 'vertices' → logprob: -3.0986881256103516
    4. '#' → logprob: -4.348688125610352
    5. 'graph' → logprob: -4.348688125610352
    6. ' nodes' → logprob: -6.973688125610352
    7. ' points' → logprob: -8.473688125610352
    8. 'start' → logprob: -8.723688125610352
    9. 'node' → logprob: -9.223688125610352
    10. 'verts' → logprob: -9.348688125610352

Token 723: ' num' (ID: 2269)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.8940516710281372
    2. 'points' → logprob: -1.7690516710281372
    3. ' points' → logprob: -2.1440515518188477
    4. '#' → logprob: -2.5190515518188477
    5. 'nodes' → logprob: -2.8940515518188477
    6. ' vertices' → logprob: -3.1440515518188477
    7. 'pts' → logprob: -3.8940515518188477
    8. ' centers' → logprob: -4.019051551818848
    9. ' nodes' → logprob: -4.269051551818848
    10. 'contin' → logprob: -4.394051551818848

Token 724: 'é' (ID: 377)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.38860437273979187
    2. '_nodes' → logprob: -1.8886044025421143
    3. '_vertices' → logprob: -2.8886044025421143
    4. 'points' → logprob: -3.3886044025421143
    5. 'odes' → logprob: -3.5136044025421143
    6. '_pts' → logprob: -4.013604164123535
    7. 'ber' → logprob: -4.888604164123535
    8. 'p' → logprob: -5.513604164123535
    9. '   ' → logprob: -5.513604164123535
    10. 'pts' → logprob: -5.763604164123535

Token 725: 'rote' (ID: 10152)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.13132725656032562
    2. 'rote' → logprob: -2.1313271522521973
    3. 'rof' → logprob: -6.256327152252197
    4. 'ror' → logprob: -6.756327152252197
    5. 'r' → logprob: -7.756327152252197
    6. 'ros' → logprob: -8.006327629089355
    7. 'rot' → logprob: -8.256327629089355
    8. 'ró' → logprob: -10.756327629089355
    9. 'roe' → logprob: -10.756327629089355
    10. 'rox' → logprob: -10.756327629089355

Token 726: ' les' (ID: 1341)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6076596975326538
    2. 'vertices' → logprob: -1.6076596975326538
    3. ' nodes' → logprob: -1.7326596975326538
    4. 'points' → logprob: -1.9826596975326538
    5. 'nodes' → logprob: -2.3576598167419434
    6. ' vertices' → logprob: -2.3576598167419434
    7. ' points' → logprob: -3.1076598167419434
    8. ' les' → logprob: -4.857659816741943
    9. 'verts' → logprob: -4.982659816741943
    10. 's' → logprob: -5.232659816741943

Token 727: ' somm' (ID: 44830)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.6364551186561584
    2. 'nodes' → logprob: -1.0114550590515137
    3. '0' → logprob: -3.0114550590515137
    4. 'vertices' → logprob: -3.3864550590515137
    5. 's' → logprob: -4.636455059051514
    6. '#' → logprob: -4.636455059051514
    7. 'pts' → logprob: -5.636455059051514
    8. 'som' → logprob: -8.636455535888672
    9. '2' → logprob: -9.011455535888672
    10. 'node' → logprob: -9.261455535888672

Token 728: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.010799024254083633
    2. 'ètres' → logprob: -5.510798931121826
    3. 'êts' → logprob: -5.760798931121826
    4. 'ents' → logprob: -6.885798931121826
    5. 'éros' → logprob: -7.885798931121826
    6. 'et' → logprob: -8.010799407958984
    7. '_vertices' → logprob: -8.010799407958984
    8. 'oints' → logprob: -8.510799407958984
    9. 'és' → logprob: -8.510799407958984
    10. 'êtres' → logprob: -8.635799407958984

Token 729: ' :
' (ID: 10039)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.4891136586666107
    2. ' vertices' → logprob: -2.1141135692596436
    3. ':' → logprob: -2.9891135692596436
    4. '0' → logprob: -2.9891135692596436
    5. ' =' → logprob: -3.2391135692596436
    6. 's' → logprob: -3.6141135692596436
    7. 'points' → logprob: -3.8641135692596436
    8. 'vertex' → logprob: -4.364113807678223
    9. 'nodes' → logprob: -4.614113807678223
    10. '=' → logprob: -5.239113807678223

Token 730: '   ' (ID: 271)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.34911006689071655
    2. 'nodes' → logprob: -1.7241101264953613
    3. 'points' → logprob: -2.4741101264953613
    4. '#' → logprob: -4.099110126495361
    5. ' vertices' → logprob: -5.349110126495361
    6. 'verts' → logprob: -5.474110126495361
    7. 'graph' → logprob: -6.099110126495361
    8. ' nodes' → logprob: -6.724110126495361
    9. '   ' → logprob: -6.974110126495361
    10. 'vertex' → logprob: -7.099110126495361

Token 731: ' #' (ID: 1069)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.31440791487693787
    2. 'points' → logprob: -2.0644078254699707
    3. '#' (adapté à ' #') → logprob: -2.8144078254699707
    4. 'nodes' → logprob: -3.0644078254699707
    5. 'vertex' → logprob: -4.064407825469971
    6. 'verts' → logprob: -4.564407825469971
    7. 'node' → logprob: -5.939407825469971
    8. ' vertices' → logprob: -6.064407825469971
    9. 'graph' → logprob: -7.439407825469971
    10. 'num' → logprob: -7.689407825469971

Token 732: ' vertex' (ID: 25363)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.6049853563308716
    2. 'points' → logprob: -1.6049853563308716
    3. 'verts' → logprob: -2.104985237121582
    4. 'nodes' → logprob: -2.229985237121582
    5. 'vertex' → logprob: -4.604985237121582
    6. '#' → logprob: -5.729985237121582
    7. 'node' → logprob: -6.104985237121582
    8. '0' → logprob: -6.229985237121582
    9. 'vert' → logprob: -6.229985237121582
    10. ' vertices' → logprob: -6.479985237121582

Token 733: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.010684517212212086
    2. '_id' → logprob: -5.260684490203857
    3. '_ids' → logprob: -6.010684490203857
    4. '_list' → logprob: -7.135684490203857
    5. '_count' → logprob: -7.635684490203857
    6. '_indices' → logprob: -7.635684490203857
    7. '_points' → logprob: -7.885684490203857
    8. '_idx' → logprob: -8.260684967041016
    9. ' =' → logprob: -8.635684967041016
    10. '0' → logprob: -9.260684967041016

Token 734: '0' (ID: 15)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2880997359752655
    2. '_id' → logprob: -2.163099765777588
    3. '_ids' → logprob: -3.038099765777588
    4. '0' → logprob: -3.538099765777588
    5. '_cent' → logprob: -3.538099765777588
    6. 'id' → logprob: -4.788099765777588
    7. '_indices' → logprob: -4.913099765777588
    8. '_count' → logprob: -5.288099765777588
    9. 'cent' → logprob: -6.163099765777588
    10. ' =' → logprob: -7.038099765777588

Token 735: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04976584017276764
    2. ':' → logprob: -3.4247658252716064
    3. ' :' → logprob: -5.1747660636901855
    4. '=' → logprob: -5.1747660636901855
    5. ' ' → logprob: -6.1747660636901855
    6. ' is' → logprob: -6.4247660636901855
    7. ',' → logprob: -7.7997660636901855
    8. '0' → logprob: -8.799765586853027
    9. '   ' → logprob: -8.799765586853027
    10. ' est' → logprob: -9.174765586853027

Token 736: ' centre' (ID: 13268)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.22257263958454132
    2. '(c' → logprob: -2.0975725650787354
    3. 'cent' → logprob: -3.8475725650787354
    4. '(' → logprob: -4.0975728034973145
    5. ' (' → logprob: -4.4725728034973145
    6. ' circles' → logprob: -4.9725728034973145
    7. '(x' → logprob: -5.3475728034973145
    8. 'dataset' → logprob: -5.3475728034973145
    9. '(dataset' → logprob: -5.5975728034973145
    10. '(points' → logprob: -5.9725728034973145

Token 737: ' du' (ID: 1462)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.24080905318260193
    2. ' du' → logprob: -2.7408089637756348
    3. 'of' → logprob: -2.8658089637756348
    4. '[' → logprob: -3.9908089637756348
    5. '(' → logprob: -4.115808963775635
    6. '0' → logprob: -4.240808963775635
    7. 'du' → logprob: -4.240808963775635
    8. ' =' → logprob: -4.865808963775635
    9. ' (' → logprob: -5.115808963775635
    10. 's' → logprob: -5.240808963775635

Token 738: ' cercle' (ID: 172399)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.012977025471627712
    2. ' circles' → logprob: -4.387977123260498
    3. 'cer' → logprob: -7.887977123260498
    4. 'circle' → logprob: -10.88797664642334
    5. 'circ' → logprob: -11.13797664642334
    6. 'first' → logprob: -11.38797664642334
    7. ' cercle' → logprob: -11.38797664642334
    8. 'prem' → logprob: -11.76297664642334
    9. '0' → logprob: -12.38797664642334
    10. ' first' → logprob: -12.51297664642334

Token 739: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.035962965339422226
    2. '(' → logprob: -3.7859630584716797
    3. '[' → logprob: -5.41096305847168
    4. ' ' → logprob: -5.41096305847168
    5. 'cir' → logprob: -6.28596305847168
    6. 's' → logprob: -6.91096305847168
    7. ' (' → logprob: -7.53596305847168
    8. '   ' → logprob: -9.03596305847168
    9. 'n' → logprob: -9.53596305847168
    10. 'dataset' → logprob: -10.16096305847168

Token 740: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02294575236737728
    2. 'cir' → logprob: -4.147945880889893
    3. '(' → logprob: -5.647945880889893
    4. '[' → logprob: -5.897945880889893
    5. 'dataset' → logprob: -8.022945404052734
    6. ' ' → logprob: -8.397945404052734
    7. ' (' → logprob: -11.022945404052734
    8. 's' → logprob: -11.147945404052734
    9. ' circles' → logprob: -11.647945404052734
    10. '(dataset' → logprob: -11.772945404052734

Token 741: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37528249621391296
    2. '0' → logprob: -1.2502825260162354
    3. ' (' → logprob: -4.875282287597656
    4. 'vertex' → logprob: -5.125282287597656
    5. ',' → logprob: -5.375282287597656
    6. ',
' → logprob: -6.375282287597656
    7. 'center' → logprob: -6.625282287597656
    8. 'points' → logprob: -7.125282287597656
    9. '#' → logprob: -7.125282287597656
    10. '   ' → logprob: -7.625282287597656

Token 742: 'dé' (ID: 98340)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.00785066094249487
    2. ')' → logprob: -5.382850646972656
    3. ' circles' → logprob: -7.257850646972656
    4. 'dataset' → logprob: -7.757850646972656
    5. 'cx' → logprob: -7.757850646972656
    6. '(x' → logprob: -7.882850646972656
    7. 'x' → logprob: -8.007850646972656
    8. '(c' → logprob: -8.382850646972656
    9. '(cx' → logprob: -9.382850646972656
    10. '   ' → logprob: -9.382850646972656

Token 743: 'part' (ID: 5815)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.004626649431884289
    2. 'r' → logprob: -5.629626750946045
    3. ')' → logprob: -7.629626750946045
    4. 'part' → logprob: -9.129626274108887
    5. 'dataset' → logprob: -9.129626274108887
    6. 'fin' → logprob: -9.629626274108887
    7. 't' → logprob: -9.629626274108887
    8. 'cir' → logprob: -10.254626274108887
    9. 'fault' → logprob: -11.004626274108887
    10. 'x' → logprob: -11.504626274108887

Token 744: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47452032566070557
    2. ')' → logprob: -0.9745203256607056
    3. ')
' → logprob: -7.974520206451416
    4. '0' → logprob: -9.724520683288574
    5. ' )
' → logprob: -11.349520683288574
    6. ')

' → logprob: -11.474520683288574
    7. '),' → logprob: -12.224520683288574
    8. ' )' → logprob: -12.474520683288574
    9. '),
' → logprob: -12.849520683288574
    10. ',' → logprob: -13.474520683288574

Token 745: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6593714356422424
    2. 'vertex' → logprob: -1.0343713760375977
    3. '0' → logprob: -2.9093713760375977
    4. '#' → logprob: -3.6593713760375977
    5. '\n' → logprob: -4.409371376037598
    6. '   ' → logprob: -4.534371376037598
    7. ' vertex' → logprob: -5.159371376037598
    8. ',' → logprob: -5.784371376037598
    9. ')' → logprob: -5.784371376037598
    10. '(vertex' → logprob: -5.784371376037598

Token 746: ' #' (ID: 1069)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.2852082848548889
    2. ' vertex' → logprob: -1.6602082252502441
    3. '0' → logprob: -3.285208225250244
    4. '1' → logprob: -4.910208225250244
    5. '\n' → logprob: -5.285208225250244
    6. ',' → logprob: -6.160208225250244
    7. '
' → logprob: -6.785208225250244
    8. ' ' → logprob: -7.035208225250244
    9. '#' (adapté à ' #') → logprob: -7.160208225250244
    10. '(vertex' → logprob: -7.535208225250244

Token 747: ' vertex' (ID: 25363)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.00928695872426033
    2. ' vertex' → logprob: -5.134286880493164
    3. '1' → logprob: -6.134286880493164
    4. 'vertices' → logprob: -7.134286880493164
    5. '2' → logprob: -8.384286880493164
    6. '0' → logprob: -10.009286880493164
    7. 'n' → logprob: -10.884286880493164
    8. '   ' → logprob: -10.884286880493164
    9. '(' → logprob: -11.509286880493164
    10. ' ' → logprob: -11.634286880493164

Token 748: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5761613249778748
    2. ' ' → logprob: -0.8261613249778748
    3. ' =' → logprob: -9.57616138458252
    4. 's' → logprob: -10.57616138458252
    5. ' ' → logprob: -10.82616138458252
    6. 'n' → logprob: -10.95116138458252
    7. '=' → logprob: -10.95116138458252
    8. ' n' → logprob: -11.45116138458252
    9. '  ' → logprob: -11.45116138458252
    10. '[' → logprob: -11.57616138458252

Token 749: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002840537577867508
    2. ' ' → logprob: -5.877840518951416
    3. '2' → logprob: -10.627840995788574
    4. '0' → logprob: -12.252840995788574
    5. 'n' → logprob: -13.127840995788574
    6. '(' → logprob: -13.627840995788574
    7. '   ' → logprob: -14.502840995788574
    8. '[' → logprob: -15.065340995788574
    9. ' (' → logprob: -15.127840995788574
    10. '  ' → logprob: -15.252840995788574

Token 750: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2943311929702759
    2. ' :' → logprob: -1.4193311929702759
    3. '+' → logprob: -4.919331073760986
    4. ' +' → logprob: -5.919331073760986
    5. ',' → logprob: -6.169331073760986
    6. '   ' → logprob: -8.419331550598145
    7. '+:' → logprob: -8.919331550598145
    8. '2' → logprob: -9.044331550598145
    9. '0' → logprob: -9.044331550598145
    10. ' ' → logprob: -9.294331550598145

Token 751: ' centre' (ID: 13268)
  Prédit: ' center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' center' → logprob: -0.9858928918838501
    2. 'center' → logprob: -1.36089289188385
    3. 'inter' → logprob: -2.1108927726745605
    4. ' (' → logprob: -2.7358927726745605
    5. 'circle' → logprob: -2.8608927726745605
    6. ' circle' → logprob: -3.7358927726745605
    7. '(center' → logprob: -4.1108927726745605
    8. ' centers' → logprob: -4.1108927726745605
    9. '(inter' → logprob: -4.2358927726745605
    10. ' inter' → logprob: -4.4858927726745605

Token 752: ' du' (ID: 1462)
  Prédit: ' du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.05119722709059715
    2. 'du' → logprob: -3.0511972904205322
    3. ' of' → logprob: -6.426197052001953
    4. ' ' → logprob: -7.301197052001953
    5. ' =' → logprob: -9.926197052001953
    6. ' (' → logprob: -10.426197052001953
    7. 'of' → logprob: -10.551197052001953
    8. 'n' → logprob: -10.551197052001953
    9. ')' → logprob: -10.676197052001953
    10. '_du' → logprob: -10.801197052001953

Token 753: ' cercle' (ID: 172399)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4817064702510834
    2. ' cercle' → logprob: -0.9817065000534058
    3. 'cer' → logprob: -4.981706619262695
    4. 'circle' → logprob: -7.981706619262695
    5. ' cer' → logprob: -8.981706619262695
    6. '0' → logprob: -9.231706619262695
    7. 'cir' → logprob: -10.231706619262695
    8. 'n' → logprob: -10.606706619262695
    9. ' ' → logprob: -10.856706619262695
    10. ' circle' → logprob: -10.981706619262695

Token 754: ' n' (ID: 297)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.501823365688324
    2. 'n' → logprob: -1.5018234252929688
    3. ' n' → logprob: -2.6268234252929688
    4. '(n' → logprob: -2.7518234252929688
    5. ' (' → logprob: -3.8768234252929688
    6. ' ' → logprob: -4.251823425292969
    7. '(' → logprob: -8.501823425292969
    8. '[n' → logprob: -8.876823425292969
    9. '1' → logprob: -9.126823425292969
    10. '   ' → logprob: -9.751823425292969

Token 755: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.010064167901873589
    2. ' -' → logprob: -4.635064125061035
    3. '1' → logprob: -8.635064125061035
    4. '[' → logprob: -9.510064125061035
    5. '0' → logprob: -10.260064125061035
    6. ' ' → logprob: -11.260064125061035
    7. '[-' → logprob: -13.010064125061035
    8. '```' → logprob: -13.635064125061035
    9. ')' → logprob: -14.385064125061035
    10. '#' → logprob: -14.510064125061035

Token 756: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8789383830153383e-05
    2. ' ' → logprob: -11.000019073486328
    3. '   ' → logprob: -14.000019073486328
    4. 'n' → logprob: -14.875019073486328
    5. '-' → logprob: -15.250019073486328
    6. '2' → logprob: -15.625019073486328
    7. '0' → logprob: -15.875019073486328
    8. '  ' → logprob: -16.125019073486328
    9. '```' → logprob: -16.625019073486328
    10. '
' → logprob: -16.750019073486328

Token 757: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.25016120076179504
    2. '(' → logprob: -3.0001611709594727
    3. ' ' → logprob: -3.1251611709594727
    4. ' +' → logprob: -3.6251611709594727
    5. '0' → logprob: -3.8751611709594727
    6. '   ' → logprob: -4.250161170959473
    7. '(n' → logprob: -4.250161170959473
    8. ')' → logprob: -4.500161170959473
    9. '+' → logprob: -4.750161170959473
    10. '<|end|>' → logprob: -4.875161170959473

Token 758: 'arr' (ID: 1614)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06149788200855255
    2. 'n' → logprob: -2.936497926712036
    3. ' ' → logprob: -6.061497688293457
    4. ' n' → logprob: -6.311497688293457
    5. '-' → logprob: -6.936497688293457
    6. ')' → logprob: -7.311497688293457
    7. '(n' → logprob: -8.186497688293457
    8. ' -' → logprob: -9.311497688293457
    9. '   ' → logprob: -9.436497688293457
    10. '1' → logprob: -10.061497688293457

Token 759: 'ivée' (ID: 77835)
  Prédit: 'ivée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivée' → logprob: -0.008973917923867702
    2. 'êt' → logprob: -5.383974075317383
    3. 'ivé' → logprob: -6.508974075317383
    4. 'ive' → logprob: -6.758974075317383
    5. '1' → logprob: -7.258974075317383
    6. 'iv' → logprob: -7.383974075317383
    7. 'ival' → logprob: -9.008974075317383
    8. ')' → logprob: -9.508974075317383
    9. '[' → logprob: -10.883974075317383
    10. '```' → logprob: -11.008974075317383

Token 760: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018998401938006282
    2. ')
' → logprob: -6.376899719238281
    3. '0' → logprob: -9.251899719238281
    4. '2' → logprob: -10.251899719238281
    5. ' )' → logprob: -10.251899719238281
    6. ')

' → logprob: -11.001899719238281
    7. '#' → logprob: -12.751899719238281
    8. '   ' → logprob: -12.876899719238281
    9. ')#' → logprob: -13.126899719238281
    10. '<|end|>' → logprob: -13.376899719238281

Token 761: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6352096796035767
    2. '#' → logprob: -1.1352096796035767
    3. 'vertex' → logprob: -2.760209560394287
    4. 'vertices' → logprob: -3.260209560394287
    5. '0' → logprob: -3.635209560394287
    6. '
' → logprob: -5.510209560394287
    7. ' #' → logprob: -5.885209560394287
    8. 'inter' → logprob: -5.885209560394287
    9. ' vertices' → logprob: -6.385209560394287
    10. ' vertex' → logprob: -6.510209560394287

Token 762: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6077893972396851
    2. 'vertices' → logprob: -0.9827893972396851
    3. 'vertex' → logprob: -3.8577895164489746
    4. '#' (adapté à ' #') → logprob: -3.9827895164489746
    5. 'inter' → logprob: -4.607789516448975
    6. ' vertices' → logprob: -4.607789516448975
    7. 'points' → logprob: -5.107789516448975
    8. 'index' → logprob: -6.232789516448975
    9. '0' → logprob: -6.357789516448975
    10. 'graph' → logprob: -6.607789516448975

Token 763: ' vertices' (ID: 38360)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.14964625239372253
    2. 'inter' → logprob: -3.149646282196045
    3. 'points' → logprob: -3.399646282196045
    4. '#' → logprob: -3.524646282196045
    5. 'vertex' → logprob: -3.899646282196045
    6. 'verts' → logprob: -5.399646282196045
    7. 'idx' → logprob: -6.524646282196045
    8. 'nodes' → logprob: -6.524646282196045
    9. 'intersection' → logprob: -6.649646282196045
    10. 'offset' → logprob: -6.774646282196045

Token 764: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3655659556388855
    2. '_inter' → logprob: -2.2405660152435303
    3. ' ' → logprob: -2.3655660152435303
    4. ' =' → logprob: -2.6155660152435303
    5. 'from' → logprob: -5.115565776824951
    6. '_from' → logprob: -5.615565776824951
    7. '=' → logprob: -5.615565776824951
    8. '_indices' → logprob: -5.740565776824951
    9. 'inter' → logprob: -5.990565776824951
    10. '_ids' → logprob: -5.990565776824951

Token 765: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.15821775794029236
    2. '=' → logprob: -2.908217668533325
    3. ' =' → logprob: -3.658217668533325
    4. 'from' → logprob: -3.908217668533325
    5. '_inter' → logprob: -4.283217906951904
    6. 'inter' → logprob: -4.783217906951904
    7. ' ' → logprob: -5.533217906951904
    8. '.extend' → logprob: -5.908217906951904
    9. 'idx' → logprob: -6.158217906951904
    10. '_points' → logprob: -6.408217906951904

Token 766: 'k' (ID: 74)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18975067138671875
    2. '+' → logprob: -2.8147506713867188
    3. ' +' → logprob: -3.6897506713867188
    4. ' to' → logprob: -4.564750671386719
    5. '+:' → logprob: -4.564750671386719
    6. '+i' → logprob: -4.564750671386719
    7. 'to' → logprob: -4.814750671386719
    8. 'and' → logprob: -4.814750671386719
    9. ' and' → logprob: -5.064750671386719
    10. ' onwards' → logprob: -5.064750671386719

Token 767: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10463398694992065
    2. ',' → logprob: -2.8546340465545654
    3. ' and' → logprob: -3.9796340465545654
    4. '+' → logprob: -4.354633808135986
    5. ' :' → logprob: -4.854633808135986
    6. ' ,' → logprob: -7.229633808135986
    7. ' +' → logprob: -7.854633808135986
    8. ' =' → logprob: -7.854633808135986
    9. 'and' → logprob: -8.229634284973145
    10. ' ' → logprob: -8.354634284973145

Token 768: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005510977003723383
    2. ' ' → logprob: -5.3805108070373535
    3. '   ' → logprob: -7.2555108070373535
    4. '1' → logprob: -9.255511283874512
    5. '  ' → logprob: -10.380511283874512
    6. '
' → logprob: -11.255511283874512
    7. '4' → logprob: -11.755511283874512
    8. '    
' → logprob: -11.880511283874512
    9. '    ' → logprob: -12.005511283874512
    10. ',' → logprob: -12.380511283874512

Token 769: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0012303499970585108
    2. ' ' → logprob: -6.751230239868164
    3. '   ' → logprob: -9.876230239868164
    4. '  ' → logprob: -11.751230239868164
    5. '    ' → logprob: -14.626230239868164
    6. '
' → logprob: -16.001230239868164
    7. '(' → logprob: -17.126230239868164
    8. '    
' → logprob: -17.126230239868164
    9. '```' → logprob: -17.501230239868164
    10. '     ' → logprob: -17.563730239868164

Token 770: 'k' (ID: 74)
  Prédit: '*k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*k' → logprob: -0.25491759181022644
    2. 'k' → logprob: -1.5049176216125488
    3. '*' → logprob: -6.254917621612549
    4. ' *' → logprob: -6.879917621612549
    5. ' k' → logprob: -11.75491714477539
    6. '+' → logprob: -12.12991714477539
    7. '*(' → logprob: -12.25491714477539
    8. '```' → logprob: -12.62991714477539
    9. '   ' → logprob: -12.75491714477539
    10. '*i' → logprob: -12.75491714477539

Token 771: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09467846155166626
    2. ' +' → logprob: -2.9696784019470215
    3. ',' → logprob: -3.3446784019470215
    4. ':' → logprob: -6.5946784019470215
    5. '   ' → logprob: -6.8446784019470215
    6. ' ' → logprob: -7.7196784019470215
    7. ' ,' → logprob: -7.8446784019470215
    8. ' and' → logprob: -9.34467887878418
    9. 'k' → logprob: -9.46967887878418
    10. '+k' → logprob: -9.71967887878418

Token 772: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.500006675720215
    4. '+' → logprob: -16.1250057220459
    5. '2' → logprob: -17.2500057220459
    6. '```' → logprob: -18.2500057220459
    7. '=' → logprob: -18.6250057220459
    8. '  ' → logprob: -19.3750057220459
    9. '
' → logprob: -19.5000057220459
    10. 'k' → logprob: -19.6875057220459

Token 773: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7917270660400391
    2. ' for' → logprob: -0.9167270660400391
    3. '=' → logprob: -2.541727066040039
    4. ':' → logprob: -3.291727066040039
    5. 'for' → logprob: -3.791727066040039
    6. ',' → logprob: -5.291727066040039
    7. ' k' → logprob: -6.916727066040039
    8. ' pour' → logprob: -7.291727066040039
    9. ' ' → logprob: -7.541727066040039
    10. ' (' → logprob: -8.291727066040039

Token 774: 'k' (ID: 74)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7932016253471375
    2. ' for' → logprob: -1.1682016849517822
    3. ')' → logprob: -2.1682016849517822
    4. 'k' → logprob: -2.6682016849517822
    5. ' k' → logprob: -3.7932016849517822
    6. '2' → logprob: -4.793201446533203
    7. ',' → logprob: -5.043201446533203
    8. ' ' → logprob: -5.168201446533203
    9. ' pour' → logprob: -5.918201446533203
    10. 'pour' → logprob: -6.043201446533203

Token 775: '=' (ID: 28)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13083748519420624
    2. '=' → logprob: -2.2558374404907227
    3. 'for' → logprob: -5.130837440490723
    4. ' in' → logprob: -6.005837440490723
    5. ')=' → logprob: -6.130837440490723
    6. ' for' → logprob: -6.505837440490723
    7. '=k' → logprob: -6.630837440490723
    8. 'from' → logprob: -6.755837440490723
    9. ' =' → logprob: -7.505837440490723
    10. 'in' → logprob: -7.630837440490723

Token 776: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.318681188422488e-05
    2. 'k' → logprob: -11.50001335144043
    3. ' ' → logprob: -13.12501335144043
    4. '1' → logprob: -14.25001335144043
    5. 'range' → logprob: -15.75001335144043
    6. ' k' → logprob: -16.62501335144043
    7. 'for' → logprob: -17.43751335144043
    8. '```' → logprob: -17.87501335144043
    9. '۰' → logprob: -18.06251335144043
    10. 'from' → logprob: -18.37501335144043

Token 777: '..' (ID: 485)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3233209550380707
    2. '+' → logprob: -2.0733208656311035
    3. ',' → logprob: -2.1983208656311035
    4. '),' → logprob: -4.8233208656311035
    5. '):' → logprob: -4.9483208656311035
    6. ')+' → logprob: -5.4483208656311035
    7. ' k' → logprob: -5.9483208656311035
    8. '*' → logprob: -5.9483208656311035
    9. 'k' → logprob: -6.0733208656311035
    10. '#' → logprob: -6.3233208656311035

Token 778: 'n' (ID: 77)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1675352156162262
    2. 'n' → logprob: -3.0425353050231934
    3. '(k' → logprob: -3.1675353050231934
    4. '(n' → logprob: -3.4175353050231934
    5. '0' → logprob: -3.9175353050231934
    6. ' k' → logprob: -5.792535305023193
    7. '1' → logprob: -5.792535305023193
    8. ' (' → logprob: -5.917535305023193
    9. 'range' → logprob: -6.917535305023193
    10. '(' → logprob: -7.167535305023193

Token 779: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00023119196703191847
    2. ' -' → logprob: -8.37523078918457
    3. '1' → logprob: -15.50023078918457
    4. '2' → logprob: -16.00023078918457
    5. '–' → logprob: -16.75023078918457
    6. 'k' → logprob: -17.12523078918457
    7. '*' → logprob: -17.62523078918457
    8. ')' → logprob: -17.87523078918457
    9. '−' → logprob: -17.87523078918457
    10. '<|end|>' → logprob: -17.87523078918457

Token 780: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00030686063109897077
    2. '1' → logprob: -8.125307083129883
    3. ' ' → logprob: -11.625307083129883
    4. '-' → logprob: -13.625307083129883
    5. '
' → logprob: -15.375307083129883
    6. '   ' → logprob: -16.000307083129883
    7. '```' → logprob: -16.000307083129883
    8. '3' → logprob: -16.125307083129883
    9. ' -' → logprob: -16.375307083129883
    10. ')' → logprob: -17.312807083129883

Token 781: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4753940999507904
    2. '):' → logprob: -0.9753941297531128
    3. '):
' → logprob: -6.725394248962402
    4. '):

' → logprob: -9.850394248962402
    5. ')=' → logprob: -10.850394248962402
    6. ' )' → logprob: -11.100394248962402
    7. ')
' → logprob: -11.225394248962402
    8. ' ):' → logprob: -11.600394248962402
    9. ':' → logprob: -13.475394248962402
    10. '):
' → logprob: -13.725394248962402

Token 782: ' les' (ID: 1341)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.0007884251535870135
    2. ' inter' → logprob: -8.000788688659668
    3. '(inter' → logprob: -8.500788688659668
    4. '   ' → logprob: -8.875788688659668
    5. 'p' → logprob: -9.875788688659668
    6. 'int' → logprob: -11.500788688659668
    7. 'point' → logprob: -11.625788688659668
    8. ' p' → logprob: -12.000788688659668
    9. '#' → logprob: -12.375788688659668
    10. ' ' → logprob: -12.625788688659668

Token 783: ' deux' (ID: 10301)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.44514700770378113
    2. 'points' → logprob: -1.6951470375061035
    3. 'de' → logprob: -1.9451470375061035
    4. ' points' → logprob: -4.4451470375061035
    5. '2' → logprob: -4.9451470375061035
    6. ' deux' → logprob: -5.3201470375061035
    7. 'int' → logprob: -5.6951470375061035
    8. 'p' → logprob: -6.3201470375061035
    9. ' inter' → logprob: -6.9451470375061035
    10. 'point' → logprob: -7.4451470375061035

Token 784: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.07163678854703903
    2. 'inter' → logprob: -2.94663667678833
    3. ' points' → logprob: -4.32163667678833
    4. 'intersection' → logprob: -6.57163667678833
    5. 'int' → logprob: -6.82163667678833
    6. 'k' → logprob: -8.446637153625488
    7. 'point' → logprob: -8.571637153625488
    8. 'tokens' → logprob: -8.571637153625488
    9. 'p' → logprob: -9.071637153625488
    10. ' intersection' → logprob: -10.071637153625488

Token 785: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.029383262619376183
    2. ' d' → logprob: -4.404383182525635
    3. '_inter' → logprob: -4.404383182525635
    4. 'inter' → logprob: -6.404383182525635
    5. 'int' → logprob: -6.529383182525635
    6. '_int' → logprob: -6.779383182525635
    7. '[int' → logprob: -9.529383659362793
    8. '   ' → logprob: -10.154383659362793
    9. '_d' → logprob: -10.529383659362793
    10. '2' → logprob: -10.654383659362793

Token 786: ''inter' (ID: 55731)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.0254412479698658
    2. 'inter' → logprob: -3.7754411697387695
    3. ''inter' → logprob: -6.1504411697387695
    4. ' intersection' → logprob: -10.27544116973877
    5. 'interaction' → logprob: -11.40044116973877
    6. 'int' → logprob: -11.77544116973877
    7. '
' → logprob: -13.40044116973877
    8. '_inter' → logprob: -13.52544116973877
    9. 'interop' → logprob: -13.90044116973877
    10. '```' → logprob: -14.40044116973877

Token 787: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.07673273980617523
    2. 'er' → logprob: -2.951732635498047
    3. 'sections' → logprob: -4.701732635498047
    4. 'ter' → logprob: -4.701732635498047
    5. 'erse' → logprob: -7.701732635498047
    6. 'sect' → logprob: -7.951732635498047
    7. 'ection' → logprob: -8.076732635498047
    8. 'intersection' → logprob: -8.076732635498047
    9. 's' → logprob: -8.451732635498047
    10. '```' → logprob: -8.826732635498047

Token 788: ' entre' (ID: 3853)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8219998478889465
    2. '<|end|>' → logprob: -1.8219997882843018
    3. ')' → logprob: -2.3219997882843018
    4. ' =' → logprob: -2.4469997882843018
    5. ' of' → logprob: -2.6969997882843018
    6. 'for' → logprob: -3.3219997882843018
    7. ' between' → logprob: -3.5719997882843018
    8. ',' → logprob: -3.6969997882843018
    9. ' for' → logprob: -3.8219997882843018
    10. ' (' → logprob: -5.572000026702881

Token 789: ' cercle' (ID: 172399)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.03390074893832207
    2. 'cer' → logprob: -3.908900737762451
    3. ' circles' → logprob: -5.158900737762451
    4. 'les' → logprob: -5.283900737762451
    5. 'c' → logprob: -6.283900737762451
    6. ' cer' → logprob: -8.78390121459961
    7. ' cercle' → logprob: -8.78390121459961
    8. ' les' → logprob: -9.28390121459961
    9. 'circle' → logprob: -9.78390121459961
    10. 'le' → logprob: -10.15890121459961

Token 790: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.024149825796484947
    2. '[k' → logprob: -4.3991498947143555
    3. ' k' → logprob: -4.5241498947143555
    4. 's' → logprob: -7.6491498947143555
    5. '   ' → logprob: -9.524149894714355
    6. '[i' → logprob: -9.774149894714355
    7. 'i' → logprob: -9.774149894714355
    8. ' [' → logprob: -10.649149894714355
    9. '[' → logprob: -11.399149894714355
    10. '(k' → logprob: -11.774149894714355

Token 791: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.48411157727241516
    2. 'et' → logprob: -1.3591115474700928
    3. ' and' → logprob: -2.4841115474700928
    4. ',' → logprob: -3.6091115474700928
    5. 'and' → logprob: -5.484111785888672
    6. 'k' → logprob: -5.484111785888672
    7. '+' → logprob: -6.359111785888672
    8. ' ' → logprob: -6.484111785888672
    9. ' k' → logprob: -6.984111785888672
    10. 's' → logprob: -7.109111785888672

Token 792: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07098275423049927
    2. 'c' → logprob: -2.8209826946258545
    3. ' k' → logprob: -4.820982933044434
    4. ' cercle' → logprob: -7.195982933044434
    5. '(k' → logprob: -9.945982933044434
    6. 'cer' → logprob: -10.320982933044434
    7. ' c' → logprob: -10.445982933044434
    8. 'circle' → logprob: -11.570982933044434
    9. '(c' → logprob: -11.570982933044434
    10. 'cir' → logprob: -11.570982933044434

Token 793: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007310202927328646
    2. '1' → logprob: -7.750730991363525
    3. 'plus' → logprob: -8.500731468200684
    4. ' +' → logprob: -9.875731468200684
    5. '+k' → logprob: -10.750731468200684
    6. '_plus' → logprob: -11.500731468200684
    7. ' plus' → logprob: -12.375731468200684
    8. 'Plus' → logprob: -13.000731468200684
    9. 'k' → logprob: -13.250731468200684
    10. ' ' → logprob: -13.875731468200684

Token 794: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. 'k' → logprob: -17.625
    4. '+' → logprob: -17.625
    5. '
' → logprob: -18.25
    6. '<|end|>' → logprob: -18.625
    7. '{' → logprob: -19.125
    8. '```' → logprob: -19.5
    9. '<|end|>' → logprob: -19.625
    10. '１' → logprob: -19.75

Token 795: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.114011287689209
    2. '   ' → logprob: -1.489011287689209
    3. ')' → logprob: -1.864011287689209
    4. ',' → logprob: -2.364011287689209
    5. ':' → logprob: -2.489011287689209
    6. '0' → logprob: -3.864011287689209
    7. '<|end|>' → logprob: -4.239011287689209
    8. 'vertices' → logprob: -4.614011287689209
    9. '.' → logprob: -4.739011287689209
    10. '[' → logprob: -4.989011287689209

Token 796: '   ' (ID: 271)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.9491958618164062
    2. '<|end|>' → logprob: -1.8241958618164062
    3. '
' → logprob: -2.3241958618164062
    4. ' vertices' → logprob: -3.1991958618164062
    5. ' ' → logprob: -3.4491958618164062
    6. ':' → logprob: -3.5741958618164062
    7. ',' → logprob: -3.6991958618164062
    8. 'def' → logprob: -3.8241958618164062
    9. '0' → logprob: -3.8241958618164062
    10. ')' → logprob: -3.9491958618164062

Token 797: ' vertices' (ID: 38360)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' (adapté à ' vertices') → logprob: -0.2881303131580353
    2. 'graph' → logprob: -1.663130283355713
    3. '   ' → logprob: -3.288130283355713
    4. 'points' → logprob: -4.913130283355713
    5. 'nodes' → logprob: -5.663130283355713
    6. 'verts' → logprob: -5.913130283355713
    7. ' vertices' → logprob: -6.038130283355713
    8. '#' → logprob: -6.413130283355713
    9. 'vertex' → logprob: -6.788130283355713
    10. 'v' → logprob: -6.913130283355713

Token 798: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11282432079315186
    2. '=' → logprob: -2.2378244400024414
    3. '=[]' → logprob: -14.612824440002441
    4. ')' → logprob: -14.737824440002441
    5. '=[' → logprob: -15.112824440002441
    6. ' =[' → logprob: -15.362824440002441
    7. ',' → logprob: -15.487824440002441
    8. ' ' → logprob: -16.237823486328125
    9. ':' → logprob: -16.362823486328125
    10. '[' → logprob: -16.612823486328125

Token 799: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0009319446398876607
    2. ' [(' → logprob: -7.500931739807129
    3. '[c' → logprob: -8.250931739807129
    4. '[' → logprob: -9.250931739807129
    5. '[((' → logprob: -11.375931739807129
    6. ' [' → logprob: -11.750931739807129
    7. '   ' → logprob: -14.500931739807129
    8. '[x' → logprob: -15.125931739807129
    9. '[m' → logprob: -15.125931739807129
    10. ' ' → logprob: -15.125931739807129

Token 800: '   ' (ID: 271)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.00013679367839358747
    2. '#' → logprob: -9.125136375427246
    3. '(vertices' → logprob: -10.750136375427246
    4. ' vertices' → logprob: -12.875136375427246
    5. '   ' → logprob: -13.375136375427246
    6. 'for' → logprob: -14.375136375427246
    7. '
' → logprob: -14.500136375427246
    8. '[' → logprob: -14.750136375427246
    9. 'append' → logprob: -14.875136375427246
    10. '.vertices' → logprob: -16.000137329101562

Token 801: ' vertices' (ID: 38360)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' (adapté à ' vertices') → logprob: -0.0003045994380954653
    2. '#' → logprob: -8.250304222106934
    3. '(vertices' → logprob: -10.250304222106934
    4. ' vertices' → logprob: -12.250304222106934
    5. '   ' → logprob: -14.375304222106934
    6. '
' → logprob: -14.500304222106934
    7. 'append' → logprob: -14.625304222106934
    8. '[(' → logprob: -14.625304222106934
    9. 'x' → logprob: -14.875304222106934
    10. '[' → logprob: -15.250304222106934

Token 802: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.029847231227905e-05
    2. '.extend' → logprob: -9.750080108642578
    3. 'append' → logprob: -11.500080108642578
    4. '.' → logprob: -11.750080108642578
    5. '=' → logprob: -12.875080108642578
    6. '.app' → logprob: -14.250080108642578
    7. ' =' → logprob: -15.000080108642578
    8. '_append' → logprob: -15.750080108642578
    9. ' .' → logprob: -16.125080108642578
    10. '+=' → logprob: -16.500080108642578

Token 803: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.011555018834769726
    2. '(c' → logprob: -4.511555194854736
    3. '(' → logprob: -7.636555194854736
    4. '(((' → logprob: -11.511554718017578
    5. '(tuple' → logprob: -11.511554718017578
    6. '(dataset' → logprob: -12.636554718017578
    7. ' ((' → logprob: -14.761554718017578
    8. '(d' → logprob: -15.261554718017578
    9. '(('' → logprob: -16.136554718017578
    10. ' (' → logprob: -16.386554718017578

Token 804: 'cir' (ID: 31224)
  Prédit: 'cir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.0005090686026960611
    2. 'dataset' → logprob: -7.625509262084961
    3. ' circles' → logprob: -11.000509262084961
    4. ')' → logprob: -12.750509262084961
    5. 'circ' → logprob: -14.500509262084961
    6. '   ' → logprob: -14.875509262084961
    7. 'circle' → logprob: -15.750509262084961
    8. ' dataset' → logprob: -16.00050926208496
    9. 'datasets' → logprob: -16.75050926208496
    10. 'cx' → logprob: -17.00050926208496

Token 805: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -6.392202976712724e-06
    2. 't' → logprob: -13.500006675720215
    3. 'les' → logprob: -13.625006675720215
    4. 'c' → logprob: -14.125006675720215
    5. 'icles' → logprob: -14.125006675720215
    6. '[' → logprob: -14.250006675720215
    7. 'cl' → logprob: -14.750006675720215
    8. '   ' → logprob: -14.875006675720215
    9. 'cle' → logprob: -15.375006675720215
    10. 'cir' → logprob: -15.500006675720215

Token 806: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001040671137161553
    2. '0' → logprob: -6.876040458679199
    3. ' ' → logprob: -13.2510404586792
    4. '   ' → logprob: -13.3760404586792
    5. ' [' → logprob: -13.5010404586792
    6. ')[' → logprob: -13.6260404586792
    7. '#' → logprob: -14.1260404586792
    8. 's' → logprob: -15.0010404586792
    9. '][' → logprob: -15.3760404586792
    10. '[
' → logprob: -15.3760404586792

Token 807: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.12500286102295
    3. '[' → logprob: -15.12500286102295
    4. '   ' → logprob: -16.625001907348633
    5. '00' → logprob: -18.125001907348633
    6. '000' → logprob: -18.812501907348633
    7. '][' → logprob: -19.125001907348633
    8. '#' → logprob: -19.187501907348633
    9. '۰' → logprob: -19.187501907348633
    10. '  ' → logprob: -19.250001907348633

Token 808: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03581264615058899
    2. '][' → logprob: -3.4108126163482666
    3. '0' → logprob: -6.160812854766846
    4. '   ' → logprob: -11.035812377929688
    5. '#' → logprob: -11.660812377929688
    6. ')[' → logprob: -11.785812377929688
    7. ' [' → logprob: -12.285812377929688
    8. '
' → logprob: -12.410812377929688
    9. '][:' → logprob: -13.160812377929688
    10. ' ' → logprob: -13.285812377929688

Token 809: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -17.0
    4. ':' → logprob: -17.5
    5. '
' → logprob: -17.75
    6. '۰' → logprob: -18.75
    7. '[' → logprob: -18.875
    8. '00' → logprob: -19.25
    9. ' :' → logprob: -20.0
    10. '#' → logprob: -20.25

Token 810: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.6357319355010986
    2. ',' → logprob: -0.7607319355010986
    3. ',c' → logprob: -5.8857316970825195
    4. ' ,' → logprob: -8.38573169708252
    5. ' ],' → logprob: -10.38573169708252
    6. ']' → logprob: -10.63573169708252
    7. '],
' → logprob: -10.76073169708252
    8. '],[' → logprob: -11.01073169708252
    9. '),' → logprob: -11.13573169708252
    10. ',
' → logprob: -13.01073169708252

Token 811: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.016044223681092262
    2. ' circles' → logprob: -4.1410441398620605
    3. 'circle' → logprob: -12.516044616699219
    4. 'circ' → logprob: -12.891044616699219
    5. ' circul' → logprob: -13.891044616699219
    6. 'Cir' → logprob: -14.266044616699219
    7. ' círc' → logprob: -14.391044616699219
    8. 'spaces' → logprob: -15.141044616699219
    9. 'cer' → logprob: -15.266044616699219
    10. ' cir' → logprob: -15.391044616699219

Token 812: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07889573276042938
    2. '0' → logprob: -2.5788958072662354
    3. '][' → logprob: -12.953895568847656
    4. ' ' → logprob: -13.453895568847656
    5. ' [' → logprob: -14.078895568847656
    6. '```' → logprob: -14.953895568847656
    7. '[
' → logprob: -14.953895568847656
    8. ']' → logprob: -16.078895568847656
    9. ')' → logprob: -16.203895568847656
    10. '   ' → logprob: -16.328895568847656

Token 813: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.500001907348633
    3. '[' → logprob: -14.875001907348633
    4. '   ' → logprob: -16.375001907348633
    5. '1' → logprob: -16.500001907348633
    6. '۰' → logprob: -17.812501907348633
    7. '  ' → logprob: -18.187501907348633
    8. '```' → logprob: -18.500001907348633
    9. '
' → logprob: -18.625001907348633
    10. '    ' → logprob: -18.750001907348633

Token 814: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.10203463584184647
    2. '0' → logprob: -2.852034568786621
    3. '[' → logprob: -3.352034568786621
    4. '1' → logprob: -5.477034568786621
    5. ' ][' → logprob: -10.477034568786621
    6. ']' → logprob: -11.102034568786621
    7. ' ' → logprob: -11.352034568786621
    8. '   ' → logprob: -12.102034568786621
    9. '])' → logprob: -12.602034568786621
    10. '],' → logprob: -12.602034568786621

Token 815: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.126943439245224
    2. '1' → logprob: -2.126943349838257
    3. ' ' → logprob: -11.751943588256836
    4. '[' → logprob: -12.001943588256836
    5. '   ' → logprob: -14.251943588256836
    6. '])' → logprob: -15.126943588256836
    7. '```' → logprob: -16.376943588256836
    8. ']' → logprob: -16.876943588256836
    9. '
' → logprob: -17.126943588256836
    10. '#' → logprob: -17.189443588256836

Token 816: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00044795009307563305
    2. '))
' → logprob: -7.875447750091553
    3. ')' → logprob: -9.625448226928711
    4. '))

' → logprob: -14.250448226928711
    5. ' ))' → logprob: -14.625448226928711
    6. '));' → logprob: -15.875448226928711
    7. '),' → logprob: -16.37544822692871
    8. ''))' → logprob: -16.50044822692871
    9. ')))' → logprob: -16.50044822692871
    10. ')
' → logprob: -17.00044822692871

Token 817: ' ' (ID: 220)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -8.97155623533763e-05
    2. ' vertices' → logprob: -9.500089645385742
    3. '
' → logprob: -12.500089645385742
    4. ')
' → logprob: -12.500089645385742
    5. ')' → logprob: -12.750089645385742
    6. '(vertices' → logprob: -13.250089645385742
    7. '   ' → logprob: -13.375089645385742
    8. '.vertices' → logprob: -14.750089645385742
    9. ',
' → logprob: -15.000089645385742
    10. ',' → logprob: -15.625089645385742

Token 818: ' #' (ID: 1069)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -9.794061770662665e-05
    2. ' vertices' → logprob: -10.12509822845459
    3. '
' → logprob: -10.50009822845459
    4. ')
' → logprob: -11.00009822845459
    5. ')' → logprob: -12.00009822845459
    6. '(vertices' → logprob: -12.87509822845459
    7. '   ' → logprob: -13.12509822845459
    8. '.vertices' → logprob: -13.87509822845459
    9. ',
' → logprob: -14.50009822845459
    10. '  
' → logprob: -14.87509822845459

Token 819: ' centre' (ID: 13268)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.3956853449344635
    2. 'vertices' → logprob: -2.2706854343414307
    3. ')' → logprob: -2.3956854343414307
    4. '0' → logprob: -2.8956854343414307
    5. 'cent' → logprob: -3.0206854343414307
    6. '#' → logprob: -4.895685195922852
    7. 'center' → logprob: -5.145685195922852
    8. ' centers' → logprob: -5.770685195922852
    9. '(c' → logprob: -6.020685195922852
    10. ')
' → logprob: -6.270685195922852

Token 820: ' premier' (ID: 15506)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.08270935714244843
    2. 'of' → logprob: -2.582709312438965
    3. '(c' → logprob: -6.457709312438965
    4. ' of' → logprob: -6.957709312438965
    5. 'vertices' → logprob: -7.582709312438965
    6. 'des' → logprob: -7.957709312438965
    7. '(vertices' → logprob: -8.957709312438965
    8. '0' → logprob: -9.332709312438965
    9. ')' → logprob: -9.832709312438965
    10. '(s' → logprob: -10.207709312438965

Token 821: ' cercle' (ID: 172399)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.258217453956604
    2. 'circle' → logprob: -1.758217453956604
    3. ' cercle' → logprob: -3.6332173347473145
    4. 'c' → logprob: -4.2582173347473145
    5. ')' → logprob: -4.8832173347473145
    6. 'vertex' → logprob: -5.7582173347473145
    7. 'vertices' → logprob: -7.0082173347473145
    8. 'cer' → logprob: -7.3832173347473145
    9. '_circle' → logprob: -7.5082173347473145
    10. '(circle' → logprob: -7.8832173347473145

Token 822: ',' (ID: 11)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.0022540991194546223
    2. ')' → logprob: -7.502254009246826
    3. ' vertices' → logprob: -7.502254009246826
    4. '   ' → logprob: -7.502254009246826
    5. ')
' → logprob: -7.877254009246826
    6. '(vertices' → logprob: -8.877254486083984
    7. '.vertices' → logprob: -10.377254486083984
    8. '
' → logprob: -11.002254486083984
    9. '    
' → logprob: -11.377254486083984
    10. ',
' → logprob: -12.502254486083984

Token 823: ' id' (ID: 1211)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.11271282285451889
    2. 'vertices' → logprob: -2.487712860107422
    3. ' (' → logprob: -3.862712860107422
    4. ')' → logprob: -7.237712860107422
    5. ' vertices' → logprob: -7.362712860107422
    6. 'cir' → logprob: -7.862712860107422
    7. '(vertices' → logprob: -8.362712860107422
    8. '0' → logprob: -8.487712860107422
    9. '   ' → logprob: -8.987712860107422
    10. '(' → logprob: -9.612712860107422

Token 824: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1663988083600998
    2. '0' → logprob: -2.416398763656616
    3. ' =' → logprob: -2.916398763656616
    4. ' ' → logprob: -4.791399002075195
    5. ':' → logprob: -6.791399002075195
    6. 's' → logprob: -8.416399002075195
    7. 'vertices' → logprob: -9.541399002075195
    8. ')' → logprob: -10.416399002075195
    9. ',' → logprob: -10.541399002075195
    10. '(vertices' → logprob: -10.666399002075195

Token 825: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -20.125001907348633
    4. '۰' → logprob: -21.750001907348633
    5. '00' → logprob: -22.000001907348633
    6. '[' → logprob: -22.375001907348633
    7. '  ' → logprob: -22.375001907348633
    8. '=' → logprob: -22.625001907348633
    9. '```' → logprob: -22.875001907348633
    10. '０' → logprob: -23.125001907348633

Token 826: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -20.875
    4. '۰' → logprob: -21.75
    5. '00' → logprob: -22.0
    6. '=' → logprob: -22.0
    7. '000' → logprob: -22.25
    8. '０' → logprob: -22.75
    9. '```' → logprob: -23.5
    10. '০' → logprob: -23.5625

Token 827: '
' (ID: 198)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.01931220293045044
    2. ')' → logprob: -4.519312381744385
    3. ')
' → logprob: -5.519312381744385
    4. '(vertices' → logprob: -6.394312381744385
    5. '   ' → logprob: -6.519312381744385
    6. ' vertices' → logprob: -7.644312381744385
    7. '
' → logprob: -8.144311904907227
    8. '.vertices' → logprob: -8.894311904907227
    9. '    
' → logprob: -10.519311904907227
    10. ',' → logprob: -10.519311904907227

Token 828: '   ' (ID: 271)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.00011152983643114567
    2. ' vertices' → logprob: -9.25011157989502
    3. '   ' → logprob: -11.62511157989502
    4. '(vertices' → logprob: -12.37511157989502
    5. '.vertices' → logprob: -13.75011157989502
    6. '    
' → logprob: -15.00011157989502
    7. '
' → logprob: -15.25011157989502
    8. ')' → logprob: -15.75011157989502
    9. '_vertices' → logprob: -16.375110626220703
    10. ',' → logprob: -16.500110626220703

Token 829: ' vertices' (ID: 38360)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' (adapté à ' vertices') → logprob: -6.2729995988775045e-06
    2. ' vertices' → logprob: -12.250006675720215
    3. '(vertices' → logprob: -14.000006675720215
    4. '   ' → logprob: -14.875006675720215
    5. '0' → logprob: -16.8750057220459
    6. '    
' → logprob: -17.2500057220459
    7. '
' → logprob: -17.6250057220459
    8. 'vectors' → logprob: -17.7500057220459
    9. '.vertices' → logprob: -17.8750057220459
    10. 'for' → logprob: -18.0000057220459

Token 830: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0010393599513918161
    2. '.' → logprob: -6.876039505004883
    3. '.extend' → logprob: -12.626039505004883
    4. 'append' → logprob: -13.126039505004883
    5. '.app' → logprob: -14.251039505004883
    6. ' .' → logprob: -14.626039505004883
    7. ').' → logprob: -16.501039505004883
    8. '.Append' → logprob: -16.626039505004883
    9. '_append' → logprob: -16.751039505004883
    10. '.add' → logprob: -17.001039505004883

Token 831: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0022387548815459013
    2. '(c' → logprob: -6.127238750457764
    3. ' (' → logprob: -10.502239227294922
    4. ' ((' → logprob: -11.377239227294922
    5. '(' → logprob: -11.627239227294922
    6. ' =' → logprob: -13.127239227294922
    7. '=(' → logprob: -13.377239227294922
    8. '   ' → logprob: -14.627239227294922
    9. ' ' → logprob: -14.627239227294922
    10. '  ' → logprob: -15.627239227294922

Token 832: 'cir' (ID: 31224)
  Prédit: 'cir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -1.8624639324116288e-06
    2. ' circles' → logprob: -13.250001907348633
    3. 'circ' → logprob: -16.875001907348633
    4. '   ' → logprob: -19.625001907348633
    5. 'circle' → logprob: -19.875001907348633
    6. '(c' → logprob: -22.250001907348633
    7. ')' → logprob: -22.375001907348633
    8. 'Cir' → logprob: -22.375001907348633
    9. 'cycles' → logprob: -22.625001907348633
    10. ' ' → logprob: -23.625001907348633

Token 833: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -3.881560041918419e-05
    2. 'les' → logprob: -10.375039100646973
    3. 'cl' → logprob: -12.500039100646973
    4. 'cle' → logprob: -13.500039100646973
    5. 'icles' → logprob: -14.000039100646973
    6. '``' → logprob: -15.000039100646973
    7. 'cir' → logprob: -15.125039100646973
    8. '[' → logprob: -15.625039100646973
    9. 'le' → logprob: -15.875039100646973
    10. 'ques' → logprob: -16.000038146972656

Token 834: '[-' (ID: 17503)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.6931635141372681
    2. '[-' → logprob: -0.6931635141372681
    3. 'n' → logprob: -11.193163871765137
    4. '[' → logprob: -13.193163871765137
    5. '   ' → logprob: -14.818163871765137
    6. '[N' → logprob: -15.318163871765137
    7. ' [' → logprob: -17.31816291809082
    8. ' [-' → logprob: -17.56816291809082
    9. '[len' → logprob: -18.19316291809082
    10. '[
' → logprob: -18.44316291809082

Token 835: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.5649528298527e-05
    2. '-' → logprob: -9.500075340270996
    3. 'n' → logprob: -15.125075340270996
    4. ' -' → logprob: -15.250075340270996
    5. '   ' → logprob: -16.625076293945312
    6. ' ' → logprob: -16.750076293945312
    7. '```' → logprob: -18.375076293945312
    8. '[-' → logprob: -18.625076293945312
    9. '(-' → logprob: -18.750076293945312
    10. '  ' → logprob: -18.875076293945312

Token 836: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.12750616669654846
    2. '[' → logprob: -2.1275062561035156
    3. '0' → logprob: -8.252506256103516
    4. ' ][' → logprob: -9.127506256103516
    5. ')[' → logprob: -9.252506256103516
    6. '   ' → logprob: -9.627506256103516
    7. ']' → logprob: -11.502506256103516
    8. ' [' → logprob: -12.002506256103516
    9. ' ' → logprob: -12.377506256103516
    10. '][-' → logprob: -12.502506256103516

Token 837: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.796184723294573e-06
    2. '[' → logprob: -12.125005722045898
    3. ' ' → logprob: -16.0000057220459
    4. '   ' → logprob: -16.2500057220459
    5. '
' → logprob: -16.8750057220459
    6. '][' → logprob: -17.3750057220459
    7. '  ' → logprob: -18.7500057220459
    8. '```' → logprob: -19.1250057220459
    9. '#' → logprob: -19.2500057220459
    10. '    ' → logprob: -19.5000057220459

Token 838: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.694240152835846
    2. '],' → logprob: -0.694240152835846
    3. '),' → logprob: -7.069240093231201
    4. ' ,' → logprob: -8.69424057006836
    5. ' ],' → logprob: -10.06924057006836
    6. '[' → logprob: -12.06924057006836
    7. '],
' → logprob: -12.56924057006836
    8. '[],' → logprob: -12.69424057006836
    9. '][' → logprob: -12.94424057006836
    10. '},' → logprob: -13.06924057006836

Token 839: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.0028062984347343445
    2. ' circles' → logprob: -5.877806186676025
    3. 'circ' → logprob: -14.002806663513184
    4. 'circle' → logprob: -15.502806663513184
    5. 'cycles' → logprob: -16.127805709838867
    6. 'cer' → logprob: -16.502805709838867
    7. '   ' → logprob: -16.627805709838867
    8. 'Cir' → logprob: -17.127805709838867
    9. ' circul' → logprob: -17.377805709838867
    10. ' cir' → logprob: -17.502805709838867

Token 840: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0013270224444568157
    2. '[' → logprob: -6.626327037811279
    3. ' [-' → logprob: -14.501326560974121
    4. '1' → logprob: -15.626326560974121
    5. '][-' → logprob: -16.251327514648438
    6. '-' → logprob: -16.626327514648438
    7. '[
' → logprob: -17.001327514648438
    8. ')[' → logprob: -17.251327514648438
    9. '   ' → logprob: -17.251327514648438
    10. '```' → logprob: -17.501327514648438

Token 841: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1041145626222715e-05
    2. '-' → logprob: -11.500011444091797
    3. ' ' → logprob: -14.875011444091797
    4. '
' → logprob: -15.750011444091797
    5. '[-' → logprob: -15.750011444091797
    6. '(-' → logprob: -16.437511444091797
    7. 'n' → logprob: -16.500011444091797
    8. '``' → logprob: -17.750011444091797
    9. '```' → logprob: -17.750011444091797
    10. '   ' → logprob: -17.875011444091797

Token 842: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026362420991063118
    2. '1' → logprob: -3.776362419128418
    3. '][' → logprob: -5.776362419128418
    4. '-' → logprob: -12.026362419128418
    5. '   ' → logprob: -13.276362419128418
    6. ' [' → logprob: -13.526362419128418
    7. ')[' → logprob: -14.276362419128418
    8. '])[' → logprob: -14.776362419128418
    9. '#' → logprob: -14.901362419128418
    10. ']' → logprob: -15.151362419128418

Token 843: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. '-' → logprob: -12.125005722045898
    3. '[' → logprob: -15.125005722045898
    4. ' ' → logprob: -16.8750057220459
    5. '[-' → logprob: -17.0000057220459
    6. '0' → logprob: -17.5000057220459
    7. '   ' → logprob: -17.6250057220459
    8. '```' → logprob: -18.2500057220459
    9. '
' → logprob: -18.6250057220459
    10. '(-' → logprob: -18.6250057220459

Token 844: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -1.8670179997570813e-05
    2. ']))' → logprob: -12.000019073486328
    3. ' ))' → logprob: -12.375019073486328
    4. '))
' → logprob: -12.625019073486328
    5. ')' → logprob: -13.625019073486328
    6. '()))' → logprob: -13.875019073486328
    7. ')))' → logprob: -13.875019073486328
    8. '0' → logprob: -14.375019073486328
    9. '   ' → logprob: -14.750019073486328
    10. '])' → logprob: -15.375019073486328

Token 845: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011959441471844912
    2. '
' → logprob: -7.876195907592773
    3. ' for' → logprob: -7.876195907592773
    4. '2' → logprob: -8.626195907592773
    5. 'vertices' → logprob: -9.001195907592773
    6. '0' → logprob: -10.376195907592773
    7. 'i' → logprob: -10.876195907592773
    8. '#' → logprob: -11.001195907592773
    9. '```' → logprob: -11.251195907592773
    10. 'inter' → logprob: -11.251195907592773

Token 846: ' centre' (ID: 13268)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.577900767326355
    2. '1' → logprob: -0.952900767326355
    3. 'vertices' → logprob: -3.7029008865356445
    4. '(c' → logprob: -4.4529008865356445
    5. ' vertices' → logprob: -5.5779008865356445
    6. ' ' → logprob: -6.0779008865356445
    7. ')' → logprob: -6.2029008865356445
    8. ' (' → logprob: -6.3279008865356445
    9. '0' → logprob: -6.3279008865356445
    10. '(vertices' → logprob: -6.3279008865356445

Token 847: ' dernier' (ID: 27982)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.10997426509857178
    2. 'dern' → logprob: -2.4849743843078613
    3. 'des' → logprob: -4.484974384307861
    4. '(-' → logprob: -5.859974384307861
    5. '[-' → logprob: -6.484974384307861
    6. '(vertices' → logprob: -6.984974384307861
    7. '(n' → logprob: -7.359974384307861
    8. '(' → logprob: -7.734974384307861
    9. 'du' → logprob: -7.859974384307861
    10. ' (' → logprob: -7.859974384307861

Token 848: ' cercle' (ID: 172399)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.027706744149327278
    2. ' cercle' → logprob: -3.6527068614959717
    3. 'cir' → logprob: -7.277706623077393
    4. 'cer' → logprob: -8.02770709991455
    5. '(c' → logprob: -8.27770709991455
    6. 'circle' → logprob: -9.15270709991455
    7. '(circle' → logprob: -11.77770709991455
    8. '(' → logprob: -12.77770709991455
    9. ')c' → logprob: -12.77770709991455
    10. ')' → logprob: -13.40270709991455

Token 849: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02975395694375038
    2. '#' → logprob: -4.279754161834717
    3. '   ' → logprob: -4.279754161834717
    4. 'for' → logprob: -7.279754161834717
    5. '
' → logprob: -8.529753684997559
    6. '0' → logprob: -8.904753684997559
    7. '2' → logprob: -9.404753684997559
    8. ',' → logprob: -9.529753684997559
    9. ')#' → logprob: -9.529753684997559
    10. '<|end|>' → logprob: -9.904753684997559

Token 850: ' id' (ID: 1211)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7310033440589905
    2. 'id' → logprob: -1.1060032844543457
    3. ' id' → logprob: -2.6060032844543457
    4. 'vertices' → logprob: -3.4810032844543457
    5. ')' → logprob: -3.7310032844543457
    6. ' ' → logprob: -3.9810032844543457
    7. '1' → logprob: -4.106003284454346
    8. ' vertices' → logprob: -4.606003284454346
    9. 'cir' → logprob: -4.981003284454346
    10. ' circles' → logprob: -6.981003284454346

Token 851: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00861468818038702
    2. ' =' → logprob: -4.758614540100098
    3. '=
' → logprob: -16.258615493774414
    4. '2' → logprob: -17.758615493774414
    5. ')' → logprob: -18.258615493774414
    6. ' ' → logprob: -18.633615493774414
    7. '==' → logprob: -18.883615493774414
    8. 's' → logprob: -19.008615493774414
    9. '<|end|>' → logprob: -19.008615493774414
    10. ' =
' → logprob: -19.133615493774414

Token 852: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -17.875001907348633
    4. '  ' → logprob: -20.375001907348633
    5. '۱' → logprob: -21.500001907348633
    6. '```' → logprob: -21.625001907348633
    7. '    ' → logprob: -22.250001907348633
    8. '0' → logprob: -23.000001907348633
    9. '১' → logprob: -23.187501907348633
    10. '     ' → logprob: -23.375001907348633

Token 853: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -19.375
    4. '۱' → logprob: -21.875
    5. '```' → logprob: -22.0
    6. '  ' → logprob: -22.125
    7. '' → logprob: -22.5
    8. '１' → logprob: -22.875
    9. '    ' → logprob: -23.0625
    10. '     ' → logprob: -23.125

Token 854: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.666993507067673e-05
    2. 'vertices' → logprob: -10.375036239624023
    3. ' for' → logprob: -12.625036239624023
    4. 'idx' → logprob: -13.750036239624023
    5. '#' → logprob: -15.000036239624023
    6. 'inter' → logprob: -15.500036239624023
    7. '2' → logprob: -16.250036239624023
    8. '
' → logprob: -16.375036239624023
    9. '    
' → logprob: -16.500036239624023
    10. 'i' → logprob: -16.750036239624023

Token 855: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.491498531133402e-06
    2. 'vertices' → logprob: -11.625009536743164
    3. ' for' → logprob: -15.000009536743164
    4. '
' → logprob: -16.250009536743164
    5. '```' → logprob: -17.750009536743164
    6. '    
' → logprob: -18.375009536743164
    7. '#' → logprob: -18.750009536743164
    8. 'idx' → logprob: -19.000009536743164
    9. 'vertex' → logprob: -19.500009536743164
    10. '   ' → logprob: -19.500009536743164

Token 856: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.512236498361744e-07
    2. ' for' → logprob: -14.875000953674316
    3. 'vertices' → logprob: -16.125
    4. 'idx' → logprob: -19.125
    5. 'inter' → logprob: -19.25
    6. '   ' → logprob: -19.625
    7. '	for' → logprob: -20.375
    8. '
' → logprob: -20.5
    9. '```' → logprob: -20.75
    10. '    
' → logprob: -20.75

Token 857: ' p' (ID: 275)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6900571584701538
    2. 'i' → logprob: -1.3150571584701538
    3. 'pts' → logprob: -2.4400572776794434
    4. 'points' → logprob: -3.0650572776794434
    5. 'ints' → logprob: -3.1900572776794434
    6. 'pair' → logprob: -4.190057277679443
    7. 'p' → logprob: -4.440057277679443
    8. 'ip' → logprob: -5.065057277679443
    9. 'inter' → logprob: -5.190057277679443
    10. 'ips' → logprob: -5.940057277679443

Token 858: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6465675234794617
    2. '_int' → logprob: -1.0215675830841064
    3. 'int' → logprob: -2.6465675830841064
    4. ' in' → logprob: -3.7715675830841064
    5. 'k' → logprob: -5.521567344665527
    6. 'in' → logprob: -5.646567344665527
    7. 'a' → logprob: -5.896567344665527
    8. 'air' → logprob: -6.021567344665527
    9. 'oint' → logprob: -6.021567344665527
    10. 'oints' → logprob: -6.271567344665527

Token 859: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03909821808338165
    2. ',p' → logprob: -3.9140982627868652
    3. 'in' → logprob: -4.164098262786865
    4. ' in' → logprob: -6.164098262786865
    5. 'p' → logprob: -7.539098262786865
    6. ' ,' → logprob: -8.664097785949707
    7. '(p' → logprob: -12.164097785949707
    8. ',k' → logprob: -12.164097785949707
    9. ',_' → logprob: -12.789097785949707
    10. ',in' → logprob: -12.789097785949707

Token 860: '2' (ID: 17)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7630361318588257
    2. '_int' → logprob: -0.7630361318588257
    3. '2' → logprob: -2.7630362510681152
    4. 'p' → logprob: -5.638036251068115
    5. '1' → logprob: -8.513035774230957
    6. '_inter' → logprob: -8.513035774230957
    7. 'in' → logprob: -9.013035774230957
    8. '(p' → logprob: -9.138035774230957
    9. ',' → logprob: -9.888035774230957
    10. 'inter' → logprob: -10.013035774230957

Token 861: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5759496688842773
    2. 'in' → logprob: -0.8259496688842773
    3. 'p' → logprob: -13.200949668884277
    4. ' ' → logprob: -13.700949668884277
    5. ',' → logprob: -13.825949668884277
    6. ')' → logprob: -13.825949668884277
    7. 'to' → logprob: -14.325949668884277
    8. '
' → logprob: -14.325949668884277
    9. 'n' → logprob: -14.450949668884277
    10. 's' → logprob: -14.950949668884277

Token 862: ' inter' (ID: 993)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -2.339278580620885e-06
    2. ' inter' → logprob: -13.000001907348633
    3. '(inter' → logprob: -17.625001907348633
    4. '   ' → logprob: -19.000001907348633
    5. 'int' → logprob: -20.125001907348633
    6. ' ' → logprob: -20.625001907348633
    7. '.inter' → logprob: -20.625001907348633
    8. '_inter' → logprob: -21.000001907348633
    9. '
' → logprob: -21.500001907348633
    10. 'iter' → logprob: -21.750001907348633

Token 863: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -3.380904672667384e-05
    2. 'points' → logprob: -10.375033378601074
    3. '_sections' → logprob: -14.000033378601074
    4. 'sections' → logprob: -14.250033378601074
    5. '_POINTS' → logprob: -15.250033378601074
    6. 's' → logprob: -15.375033378601074
    7. 'Points' → logprob: -16.00003433227539
    8. '_positions' → logprob: -16.25003433227539
    9. '	points' → logprob: -16.62503433227539
    10. ' points' → logprob: -16.75003433227539

Token 864: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5761114358901978
    2. ':
' → logprob: -0.8261114358901978
    3. '   ' → logprob: -9.576111793518066
    4. '.append' → logprob: -9.951111793518066
    5. '.extend' → logprob: -10.951111793518066
    6. '):
' → logprob: -12.201111793518066
    7. 'vertices' → logprob: -12.201111793518066
    8. ':
' → logprob: -12.201111793518066
    9. '_vertices' → logprob: -12.576111793518066
    10. '[' → logprob: -12.701111793518066

Token 865: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061968810856342316
    2. '       ' → logprob: -2.8119688034057617
    3. '
' → logprob: -14.311968803405762
    4. '```' → logprob: -15.811968803405762
    5. ' vertices' → logprob: -15.936968803405762
    6. 'vertices' → logprob: -16.061969757080078
    7. '           ' → logprob: -17.311969757080078
    8. ',' → logprob: -17.686969757080078
    9. '    
' → logprob: -17.811969757080078
    10. ':' → logprob: -17.811969757080078

Token 866: ' vertices' (ID: 38360)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' (adapté à ' vertices') → logprob: -0.005999424960464239
    2. '   ' → logprob: -5.505999565124512
    3. ' vertices' → logprob: -6.255999565124512
    4. '.vertices' → logprob: -16.505998611450195
    5. '(vertices' → logprob: -16.505998611450195
    6. '_vertices' → logprob: -17.505998611450195
    7. '       ' → logprob: -17.630998611450195
    8. ' ' → logprob: -17.880998611450195
    9. '    
' → logprob: -17.880998611450195
    10. '  ' → logprob: -18.130998611450195

Token 867: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.009873307310044765
    2. '.extend' → logprob: -5.009873390197754
    3. '.' → logprob: -5.759873390197754
    4. 'append' → logprob: -13.509873390197754
    5. ' .' → logprob: -16.384872436523438
    6. '.app' → logprob: -17.384872436523438
    7. '+=' → logprob: -17.634872436523438
    8. '.ap' → logprob: -18.634872436523438
    9. '.Append' → logprob: -18.634872436523438
    10. ' append' → logprob: -19.134872436523438

Token 868: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -8.180258191714529e-06
    2. '((' → logprob: -12.375008583068848
    3. '(' → logprob: -12.500008583068848
    4. 'p' → logprob: -15.875008583068848
    5. '(tuple' → logprob: -17.12500762939453
    6. ' (' → logprob: -17.75000762939453
    7. '(point' → logprob: -20.12500762939453
    8. '(list' → logprob: -20.37500762939453
    9. '(np' → logprob: -20.62500762939453
    10. '(*' → logprob: -20.75000762939453

Token 869: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '2' → logprob: -21.0
    3. '[' → logprob: -21.375
    4. '１' → logprob: -22.0
    5. 'ar' → logprob: -22.25
    6. '```' → logprob: -22.5
    7. '১' → logprob: -22.8125
    8. 'r' → logprob: -22.875
    9. 'token' → logprob: -22.9375
    10. '۱' → logprob: -23.0625

Token 870: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931551098823547
    2. ')
' → logprob: -0.6931551098823547
    3. ')
' → logprob: -12.068155288696289
    4. ')p' → logprob: -13.818155288696289
    5. ' )
' → logprob: -14.818155288696289
    6. '),' → logprob: -15.193155288696289
    7. ' )' → logprob: -16.06815528869629
    8. '<|end|>' → logprob: -16.31815528869629
    9. '   ' → logprob: -16.94315528869629
    10. ')

' → logprob: -17.06815528869629

Token 871: '       ' (ID: 309)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.10586608946323395
    2. '   ' → logprob: -2.7308661937713623
    3. ' vertices' → logprob: -3.3558661937713623
    4. '(vertices' → logprob: -7.980865955352783
    5. '.vertices' → logprob: -10.605866432189941
    6. '       ' → logprob: -10.730866432189941
    7. '
' → logprob: -11.230866432189941
    8. '_vertices' → logprob: -12.480866432189941
    9. '    
' → logprob: -13.230866432189941
    10. 'vectors' → logprob: -13.480866432189941

Token 872: ' vertices' (ID: 38360)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' (adapté à ' vertices') → logprob: -0.0003818140830844641
    2. ' vertices' → logprob: -7.875381946563721
    3. '   ' → logprob: -14.625381469726562
    4. '(vertices' → logprob: -14.625381469726562
    5. '.vertices' → logprob: -15.875381469726562
    6. '       ' → logprob: -15.875381469726562
    7. 'vectors' → logprob: -15.875381469726562
    8. 'p' → logprob: -16.000381469726562
    9. '    
' → logprob: -16.875381469726562
    10. ',' → logprob: -17.250381469726562

Token 873: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.20603168499656e-05
    2. '.' → logprob: -10.125061988830566
    3. 'append' → logprob: -10.750061988830566
    4. '.app' → logprob: -15.500061988830566
    5. '.extend' → logprob: -15.750061988830566
    6. '_append' → logprob: -16.750062942504883
    7. 'Append' → logprob: -16.875062942504883
    8. '.Append' → logprob: -16.875062942504883
    9. ' append' → logprob: -17.125062942504883
    10. '	append' → logprob: -18.750062942504883

Token 874: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.306760805164231e-05
    2. '(' → logprob: -11.37501335144043
    3. '(
' → logprob: -14.00001335144043
    4. 'p' → logprob: -14.25001335144043
    5. '((' → logprob: -17.37501335144043
    6. ' (' → logprob: -18.37501335144043
    7. '(

' → logprob: -20.00001335144043
    8. '(
' → logprob: -21.12501335144043
    9. '('' → logprob: -21.37501335144043
    10. 's' → logprob: -22.12501335144043

Token 875: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '₂' → logprob: -18.25
    3. '۲' → logprob: -19.375
    4. 'int' → logprob: -19.5
    5. 'p' → logprob: -19.75
    6. '```' → logprob: -20.75
    7. '２' → logprob: -20.75
    8. '_int' → logprob: -21.125
    9. '২' → logprob: -21.75
    10. '२' → logprob: -22.0

Token 876: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10112602263689041
    2. '<|end|>' → logprob: -2.351125955581665
    3. '   ' → logprob: -7.851126194000244
    4. '<|end|>' → logprob: -7.976126194000244
    5. '
' → logprob: -9.976125717163086
    6. '#' → logprob: -9.976125717163086
    7. ']' → logprob: -10.601125717163086
    8. '```' → logprob: -11.476125717163086
    9. '}' → logprob: -11.601125717163086
    10. ' )' → logprob: -12.101125717163086

Token 877: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.05314840003848076
    2. '#' → logprob: -3.0531485080718994
    3. 'edges' → logprob: -6.17814826965332
    4. 'n' → logprob: -6.80314826965332
    5. '   ' → logprob: -7.17814826965332
    6. 'adj' → logprob: -7.55314826965332
    7. ' graph' → logprob: -10.30314826965332
    8. 'import' → logprob: -11.30314826965332
    9. '```' → logprob: -11.55314826965332
    10. '    
' → logprob: -12.42814826965332

Token 878: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.02286664769053459
    2. 'edges' → logprob: -4.522866725921631
    3. '#' (adapté à ' #') → logprob: -5.272866725921631
    4. 'n' → logprob: -5.272866725921631
    5. 'adj' → logprob: -6.647866725921631
    6. 'dist' → logprob: -9.147866249084473
    7. 'm' → logprob: -10.272866249084473
    8. 'g' → logprob: -10.397866249084473
    9. '   ' → logprob: -11.772866249084473
    10. 'def' → logprob: -12.147866249084473

Token 879: ' On' (ID: 2160)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.2584766447544098
    2. 'edges' → logprob: -1.7584766149520874
    3. 'adj' → logprob: -3.133476734161377
    4. '#' → logprob: -4.758476734161377
    5. 'n' → logprob: -6.633476734161377
    6. 'def' → logprob: -6.883476734161377
    7. 'dist' → logprob: -7.258476734161377
    8. 'g' → logprob: -9.133476257324219
    9. 'm' → logprob: -9.383476257324219
    10. 'graphs' → logprob: -11.008476257324219

Token 880: ' construit' (ID: 119882)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6620486974716187
    2. '#' → logprob: -1.6620486974716187
    3. 'g' → logprob: -1.6620486974716187
    4. 'edges' → logprob: -3.037048816680908
    5. 'm' → logprob: -3.662048816680908
    6. 'v' → logprob: -4.662048816680908
    7. 'n' → logprob: -4.787048816680908
    8. 'adj' → logprob: -5.537048816680908
    9. 'def' → logprob: -5.912048816680908
    10. ' edges' → logprob: -6.537048816680908

Token 881: ' un' (ID: 537)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.022129753604531288
    2. 'adj' → logprob: -4.272129535675049
    3. 'edges' → logprob: -5.272129535675049
    4. 'le' → logprob: -6.272129535675049
    5. 'g' → logprob: -7.897129535675049
    6. ' graph' → logprob: -8.147130012512207
    7. 'un' → logprob: -9.147130012512207
    8. ' edges' → logprob: -9.272130012512207
    9. 'n' → logprob: -11.022130012512207
    10. ' adj' → logprob: -12.022130012512207

Token 882: ' grap' (ID: 60955)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.002816766733303666
    2. 'gr' → logprob: -6.127816677093506
    3. 'g' → logprob: -7.627816677093506
    4. 'adj' → logprob: -9.627817153930664
    5. ' graph' → logprob: -10.502817153930664
    6. 'dict' → logprob: -11.377817153930664
    7. 'd' → logprob: -11.627817153930664
    8. 'default' → logprob: -11.877817153930664
    9. '
' → logprob: -12.002817153930664
    10. '```' → logprob: -12.377817153930664

Token 883: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.005908415652811527
    2. 'h' → logprob: -5.255908489227295
    3. 'aphe' → logprob: -8.005908012390137
    4. 'phe' → logprob: -8.255908012390137
    5. '#' → logprob: -10.130908012390137
    6. 'ph' → logprob: -11.255908012390137
    7. 'rap' → logprob: -12.005908012390137
    8. 'hé' → logprob: -12.380908012390137
    9. 'heme' → logprob: -13.130908012390137
    10. 'e' → logprob: -13.380908012390137

Token 884: ' sous' (ID: 14487)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.012904900126159191
    2. ' graph' → logprob: -4.762905120849609
    3. '   ' → logprob: -5.762905120849609
    4. 'adj' → logprob: -7.887905120849609
    5. ' =' → logprob: -8.63790512084961
    6. 'edges' → logprob: -8.76290512084961
    7. '
' → logprob: -8.88790512084961
    8. '(graph' → logprob: -9.51290512084961
    9. '=' → logprob: -9.63790512084961
    10. 'g' → logprob: -10.13790512084961

Token 885: ' forme' (ID: 27450)
  Prédit: 'forme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forme' → logprob: -0.019697053357958794
    2. 'form' → logprob: -4.019697189331055
    3. 'la' → logprob: -7.144697189331055
    4. ' forme' → logprob: -7.269697189331055
    5. 'forma' → logprob: -10.644697189331055
    6. '#' → logprob: -10.769697189331055
    7. 'format' → logprob: -11.519697189331055
    8. 'formes' → logprob: -12.769697189331055
    9. 'import' → logprob: -13.269697189331055
    10. ' la' → logprob: -15.644697189331055

Token 886: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.4636605679988861
    2. 'd' → logprob: -1.2136605978012085
    3. ' de' → logprob: -2.963660478591919
    4. ' d' → logprob: -4.213660717010498
    5. '#' → logprob: -5.338660717010498
    6. 'adj' → logprob: -6.838660717010498
    7. 'def' → logprob: -7.713660717010498
    8. '{' → logprob: -7.713660717010498
    9. '   ' → logprob: -7.963660717010498
    10. '{}' → logprob: -8.46366024017334

Token 887: ' listes' (ID: 179198)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.3551981449127197
    2. 'default' → logprob: -1.8551981449127197
    3. 'adj' → logprob: -2.7301981449127197
    4. '{}' → logprob: -3.2301981449127197
    5. 'd' → logprob: -3.8551981449127197
    6. '{' → logprob: -4.605197906494141
    7. 'list' → logprob: -5.980197906494141
    8. 'liste' → logprob: -6.105197906494141
    9. ' defaultdict' → logprob: -6.730197906494141
    10. 'collections' → logprob: -8.35519790649414

Token 888: ' d' (ID: 272)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0913153886795044
    2. 'adj' → logprob: -2.591315269470215
    3. '=' → logprob: -5.841315269470215
    4. ' =' → logprob: -6.216315269470215
    5. 'g' → logprob: -6.341315269470215
    6. 'of' → logprob: -6.841315269470215
    7. '_graph' → logprob: -6.966315269470215
    8. '_adj' → logprob: -7.341315269470215
    9. '(graph' → logprob: -7.591315269470215
    10. 'edges' → logprob: -7.716315269470215

Token 889: ''ad' (ID: 36162)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0048341574147343636
    2. ' adjacency' → logprob: -5.879834175109863
    3. '_adj' → logprob: -7.129834175109863
    4. ''ad' → logprob: -7.754834175109863
    5. 'ad' → logprob: -8.254834175109863
    6. '_ad' → logprob: -9.254834175109863
    7. '[]' → logprob: -9.504834175109863
    8. ' voisins' → logprob: -10.004834175109863
    9. '(adj' → logprob: -10.129834175109863
    10. ' adj' → logprob: -10.129834175109863

Token 890: 'jac' (ID: 77250)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3133261799812317
    2. 'jac' → logprob: -1.313326120376587
    3. 'ja' → logprob: -11.063325881958008
    4. 'js' → logprob: -11.188325881958008
    5. 'jc' → logprob: -11.688325881958008
    6. 'jec' → logprob: -11.813325881958008
    7. '[j' → logprob: -11.938325881958008
    8. 'Jac' → logprob: -13.063325881958008
    9. 'jf' → logprob: -13.063325881958008
    10. 'J' → logprob: -13.438325881958008

Token 891: 'ence' (ID: 1082)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.7906822562217712
    2. 'ac' → logprob: -1.415682315826416
    3. 'ences' → logprob: -1.540682315826416
    4. 'ence' → logprob: -2.540682315826416
    5. 'escence' → logprob: -5.290682315826416
    6. 'c' → logprob: -6.915682315826416
    7. '#' → logprob: -7.040682315826416
    8. 'es' → logprob: -7.165682315826416
    9. 'aces' → logprob: -7.290682315826416
    10. '```' → logprob: -7.915682315826416

Token 892: ' avec' (ID: 3937)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.03968706727027893
    2. ' graph' → logprob: -3.289687156677246
    3. 'adj' → logprob: -6.539687156677246
    4. '   ' → logprob: -9.789687156677246
    5. '
' → logprob: -9.914687156677246
    6. '	graph' → logprob: -10.914687156677246
    7. ' adj' → logprob: -10.914687156677246
    8. ' adjacency' → logprob: -11.039687156677246
    9. 'graphs' → logprob: -11.664687156677246
    10. '_graph' → logprob: -11.914687156677246

Token 893: ' poids' (ID: 56058)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6419233083724976
    2. '[]' → logprob: -1.3919233083724976
    3. '{}' → logprob: -1.7669233083724976
    4. 'edges' → logprob: -3.516923427581787
    5. 'weights' → logprob: -5.016923427581787
    6. 'default' → logprob: -5.266923427581787
    7. 'dist' → logprob: -5.641923427581787
    8. 'dict' → logprob: -6.391923427581787
    9. '{' → logprob: -6.516923427581787
    10. 'len' → logprob: -6.516923427581787

Token 894: ' (' (ID: 350)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.028749190270900726
    2. ' graph' → logprob: -3.7787492275238037
    3. 'adj' → logprob: -5.403748989105225
    4. ':' → logprob: -8.153749465942383
    5. '   ' → logprob: -8.153749465942383
    6. '(graph' → logprob: -9.028749465942383
    7. ' =' → logprob: -9.528749465942383
    8. ' adjacency' → logprob: -10.153749465942383
    9. ' adj' → logprob: -10.278749465942383
    10. '	graph' → logprob: -10.528749465942383

Token 895: 'dist' (ID: 24126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.0437326431274414
    2. '[])' → logprob: -1.1687326431274414
    3. 'edges' → logprob: -2.0437326431274414
    4. 'dist' → logprob: -3.1687326431274414
    5. ')' → logprob: -3.4187326431274414
    6. '[])
' → logprob: -3.5437326431274414
    7. 'graph' → logprob: -3.5437326431274414
    8. 'n' → logprob: -3.7937326431274414
    9. 'weights' → logprob: -4.043732643127441
    10. 'adj' → logprob: -5.293732643127441

Token 896: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.08563651144504547
    2. 'ance' → logprob: -2.960636615753174
    3. ',' → logprob: -4.335636615753174
    4. '=' → logprob: -4.960636615753174
    5. '_vertices' → logprob: -5.960636615753174
    6. 'es' → logprob: -6.210636615753174
    7. '(vertices' → logprob: -6.335636615753174
    8. 'vertices' → logprob: -6.835636615753174
    9. ' =' → logprob: -7.335636615753174
    10. ')' → logprob: -7.710636615753174

Token 897: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9044737219810486
    2. '=' → logprob: -1.2794737815856934
    3. ')
' → logprob: -1.5294737815856934
    4. ' =' → logprob: -2.4044737815856934
    5. '):
' → logprob: -5.529473781585693
    6. '   ' → logprob: -5.904473781585693
    7. '):' → logprob: -7.279473781585693
    8. ',' → logprob: -7.779473781585693
    9. '(vertices' → logprob: -7.779473781585693
    10. 'graph' → logprob: -7.904473781585693

Token 898: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.038474954664707184
    2. ' graph' → logprob: -3.2884750366210938
    3. 'adj' → logprob: -8.038475036621094
    4. '   ' → logprob: -9.788475036621094
    5. '
' → logprob: -10.413475036621094
    6. 'edges' → logprob: -12.163475036621094
    7. '	graph' → logprob: -12.288475036621094
    8. ' adj' → logprob: -12.538475036621094
    9. ' adjacency' → logprob: -12.663475036621094
    10. '    
' → logprob: -13.413475036621094

Token 899: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.003223583335056901
    2. ' graph' → logprob: -5.753223419189453
    3. 'adj' → logprob: -10.003223419189453
    4. '   ' → logprob: -15.878223419189453
    5. ' adj' → logprob: -16.003223419189453
    6. '	graph' → logprob: -16.628223419189453
    7. 'edges' → logprob: -16.753223419189453
    8. 'g' → logprob: -16.753223419189453
    9. 'n' → logprob: -17.003223419189453
    10. 'graphs' → logprob: -17.628223419189453

Token 900: ' Les' (ID: 7029)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -5.88418151892256e-05
    2. 'adj' → logprob: -9.750059127807617
    3. ' graph' → logprob: -15.125059127807617
    4. 'edges' → logprob: -15.625059127807617
    5. '#' → logprob: -17.125059127807617
    6. 'n' → logprob: -17.500059127807617
    7. 'graphs' → logprob: -17.500059127807617
    8. 'gra' → logprob: -17.875059127807617
    9. 'def' → logprob: -18.750059127807617
    10. 'Graph' → logprob: -18.875059127807617

Token 901: ' somm' (ID: 44830)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.15986423194408417
    2. ' graph' → logprob: -2.9098641872406006
    3. 'edges' → logprob: -3.4098641872406006
    4. 'adj' → logprob: -3.4098641872406006
    5. ' edges' → logprob: -3.6598641872406006
    6. ' adj' → logprob: -7.03486442565918
    7. ' adjacency' → logprob: -8.90986442565918
    8. 'n' → logprob: -9.15986442565918
    9. 'g' → logprob: -9.53486442565918
    10. '#' → logprob: -9.65986442565918

Token 902: 'ets' (ID: 1719)
  Prédit: 'ices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ices' → logprob: -0.5428698062896729
    2. 'ets' → logprob: -2.292869806289673
    3. '   ' → logprob: -3.042869806289673
    4. '[]' → logprob: -3.417869806289673
    5. 'es' → logprob: -3.667869806289673
    6. ')' → logprob: -3.917869806289673
    7. 'aces' → logprob: -4.042869567871094
    8. 'ites' → logprob: -4.042869567871094
    9. 'vertices' → logprob: -4.542869567871094
    10. 'for' → logprob: -4.542869567871094

Token 903: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3304986357688904
    2. '=' → logprob: -1.3304986953735352
    3. '_count' → logprob: -4.955498695373535
    4. 'adj' → logprob: -5.830498695373535
    5. '_num' → logprob: -5.830498695373535
    6. '_adj' → logprob: -6.080498695373535
    7. 'num' → logprob: -6.830498695373535
    8. 'count' → logprob: -8.455498695373535
    9. 'graph' → logprob: -9.455498695373535
    10. '_ad' → logprob: -9.580498695373535

Token 904: ' ord' (ID: 6608)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3360280990600586
    2. ' [[]' → logprob: -1.3360280990600586
    3. '[' → logprob: -4.586028099060059
    4. ' len' → logprob: -4.711028099060059
    5. '[len' → logprob: -6.211028099060059
    6. '{' → logprob: -7.086028099060059
    7. '{}' → logprob: -8.461028099060059
    8. 'range' → logprob: -8.836028099060059
    9. 'list' → logprob: -10.461028099060059
    10. 'collections' → logprob: -11.211028099060059

Token 905: 'onn' (ID: 9525)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.5951427221298218
    2. 'range' → logprob: -2.8451428413391113
    3. '_vertices' → logprob: -2.9701428413391113
    4. '[]' → logprob: -3.2201428413391113
    5. 'é' → logprob: -3.3451428413391113
    6. 'e' → logprob: -3.4701428413391113
    7. '(vertices' → logprob: -3.4701428413391113
    8. 'in' → logprob: -3.7201428413391113
    9. 'iné' → logprob: -3.8451428413391113
    10. 'u' → logprob: -3.9701428413391113

Token 906: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.013515944592654705
    2. 'ed' → logprob: -4.763515949249268
    3. 'es' → logprob: -6.013515949249268
    4. 'ées' → logprob: -6.263515949249268
    5. 'nés' → logprob: -8.88851547241211
    6. 'é' → logprob: -9.13851547241211
    7. 'nées' → logprob: -9.13851547241211
    8. '#' → logprob: -10.51351547241211
    9. 'e' → logprob: -10.76351547241211
    10. 'aires' → logprob: -10.88851547241211

Token 907: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9460399746894836
    2. 'graph' → logprob: -0.9460399746894836
    3. '=' → logprob: -2.446039915084839
    4. 'adj' → logprob: -2.571039915084839
    5. 'vertices' → logprob: -3.821039915084839
    6. ' graph' → logprob: -4.821040153503418
    7. ',' → logprob: -5.196040153503418
    8. '_graph' → logprob: -5.321040153503418
    9. '#' → logprob: -5.946040153503418
    10. '_adj' → logprob: -6.071040153503418

Token 908: ' [' (ID: 723)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.011397577822208405
    2. 'adj' → logprob: -4.511397361755371
    3. ' graph' → logprob: -8.511397361755371
    4. 'n' → logprob: -9.011397361755371
    5. 'edges' → logprob: -10.886397361755371
    6. 'g' → logprob: -12.636397361755371
    7. '   ' → logprob: -13.511397361755371
    8. '```' → logprob: -14.511397361755371
    9. ' adj' → logprob: -14.761397361755371
    10. '#' → logprob: -14.886397361755371

Token 909: 'centre' (ID: 119798)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.7268957495689392
    2. '(' → logprob: -1.476895809173584
    3. '0' → logprob: -1.976895809173584
    4. '(vertices' → logprob: -2.351895809173584
    5. ']' → logprob: -3.601895809173584
    6. ' (' → logprob: -5.476895809173584
    7. ' vertices' → logprob: -5.851895809173584
    8. '#' → logprob: -5.976895809173584
    9. '(i' → logprob: -5.976895809173584
    10. 'cent' → logprob: -6.101895809173584

Token 910: '_' (ID: 62)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4969484806060791
    2. '[' → logprob: -1.621948480606079
    3. '(' → logprob: -2.371948480606079
    4. 's' → logprob: -2.496948480606079
    5. ',' → logprob: -4.6219482421875
    6. ' ' → logprob: -6.1219482421875
    7. '(s' → logprob: -6.2469482421875
    8. ']' → logprob: -6.7469482421875
    9. '_' → logprob: -7.1219482421875
    10. ',
' → logprob: -7.9969482421875

Token 911: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016384923947043717
    2. 's' → logprob: -9.750164031982422
    3. ' ' → logprob: -10.125164031982422
    4. '[' → logprob: -10.625164031982422
    5. '(' → logprob: -11.250164031982422
    6. '_' → logprob: -11.375164031982422
    7. ']' → logprob: -12.125164031982422
    8. 'prem' → logprob: -13.000164031982422
    9. 'cir' → logprob: -13.500164031982422
    10. 'c' → logprob: -13.500164031982422

Token 912: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003106653457507491
    2. ']' → logprob: -6.128106594085693
    3. ' ,' → logprob: -7.628106594085693
    4. ',
' → logprob: -7.878106594085693
    5. ')' → logprob: -10.753107070922852
    6. ')]' → logprob: -12.253107070922852
    7. ',(' → logprob: -12.503107070922852
    8. '],' → logprob: -12.503107070922852
    9. ',c' → logprob: -12.628107070922852
    10. ',
' → logprob: -13.003107070922852

Token 913: ' centre' (ID: 13268)
  Prédit: 'centre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'centre' → logprob: -0.19460652768611908
    2. 'center' → logprob: -2.5696065425872803
    3. 'inter' → logprob: -2.8196065425872803
    4. ' centre' → logprob: -3.6946065425872803
    5. 'vertices' → logprob: -5.194606304168701
    6. ' center' → logprob: -5.694606304168701
    7. 'cent' → logprob: -6.444606304168701
    8. ' ' → logprob: -6.444606304168701
    9. 'intersection' → logprob: -7.319606304168701
    10. 'p' → logprob: -7.694606304168701

Token 914: '_n' (ID: 2170)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0006911090458743274
    2. '2' → logprob: -7.625690937042236
    3. '0' → logprob: -9.125691413879395
    4. ',' → logprob: -9.375691413879395
    5. '_,' → logprob: -12.750691413879395
    6. ' ' → logprob: -12.750691413879395
    7. '_n' → logprob: -13.375691413879395
    8. ',_' → logprob: -14.125691413879395
    9. '1' → logprob: -14.875691413879395
    10. '-' → logprob: -15.625691413879395

Token 915: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.2729995988775045e-06
    2. '_' → logprob: -12.500006675720215
    3. ' -' → logprob: -13.875006675720215
    4. '1' → logprob: -14.500006675720215
    5. '[-' → logprob: -15.000006675720215
    6. '−' → logprob: -15.375006675720215
    7. '-
' → logprob: -15.625006675720215
    8. '_-' → logprob: -16.0000057220459
    9. '```' → logprob: -16.5000057220459
    10. '-_' → logprob: -16.8750057220459

Token 916: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029923528200015426
    2. '2' → logprob: -8.125299453735352
    3. ' ' → logprob: -13.125299453735352
    4. '-' → logprob: -14.875299453735352
    5. '<|end|>' → logprob: -15.625299453735352
    6. '<|end|>' → logprob: -15.750299453735352
    7. ']' → logprob: -16.25029945373535
    8. ')' → logprob: -16.37529945373535
    9. '```' → logprob: -16.37529945373535
    10. '#' → logprob: -17.00029945373535

Token 917: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005319446790963411
    2. ']' → logprob: -8.125532150268555
    3. '],' → logprob: -9.125532150268555
    4. ',
' → logprob: -10.000532150268555
    5. ' ,' → logprob: -10.125532150268555
    6. '),' → logprob: -11.250532150268555
    7. ')' → logprob: -11.250532150268555
    8. ')]' → logprob: -11.875532150268555
    9. ')],' → logprob: -13.375532150268555
    10. ',...' → logprob: -13.750532150268555

Token 918: ' inter' (ID: 993)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.9064193964004517
    2. '(' → logprob: -1.4064193964004517
    3. 'p' → logprob: -2.656419277191162
    4. '2' → logprob: -2.781419277191162
    5. 'vertices' → logprob: -2.781419277191162
    6. ']' → logprob: -3.156419277191162
    7. '*(' → logprob: -4.031419277191162
    8. '0' → logprob: -4.156419277191162
    9. '*' → logprob: -4.156419277191162
    10. '*p' → logprob: -4.156419277191162

Token 919: '_' (ID: 62)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.009669913910329342
    2. 'sections' → logprob: -5.134669780731201
    3. '_vertices' → logprob: -6.884669780731201
    4. '_sections' → logprob: -7.134669780731201
    5. '_pts' → logprob: -7.384669780731201
    6. '_' → logprob: -8.00967025756836
    7. 'section' → logprob: -8.13467025756836
    8. '_nodes' → logprob: -8.50967025756836
    9. '_faces' → logprob: -9.13467025756836
    10. 'points' → logprob: -9.75967025756836

Token 920: '0' (ID: 15)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.20928224921226501
    2. '0' → logprob: -2.209282159805298
    3. 'points' → logprob: -2.709282159805298
    4. 'Points' → logprob: -4.709282398223877
    5. '1' → logprob: -6.834282398223877
    6. 'sections' → logprob: -7.209282398223877
    7. ' points' → logprob: -8.209281921386719
    8. '2' → logprob: -8.334281921386719
    9. 'p' → logprob: -8.959281921386719
    10. 'val' → logprob: -8.959281921386719

Token 921: '_p' (ID: 1359)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '],' → logprob: -0.015069250017404556
    2. ',' → logprob: -5.140069484710693
    3. 't' → logprob: -6.390069484710693
    4. '0' → logprob: -6.640069484710693
    5. ']' → logprob: -6.765069484710693
    6. '2' → logprob: -6.890069484710693
    7. '*' → logprob: -7.015069484710693
    8. '),' → logprob: -7.515069484710693
    9. ' ,' → logprob: -7.890069484710693
    10. 's' → logprob: -7.890069484710693

Token 922: '1' (ID: 16)
  Prédit: 'oint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oint' → logprob: -0.6477005481719971
    2. '0' → logprob: -0.8977005481719971
    3. '1' → logprob: -2.772700548171997
    4. 'oints' → logprob: -5.022700309753418
    5. 'int' → logprob: -9.772700309753418
    6. 'oin' → logprob: -10.522700309753418
    7. 'air' → logprob: -10.772700309753418
    8. 'nt' → logprob: -10.897700309753418
    9. 't' → logprob: -11.272700309753418
    10. 'r' → logprob: -11.272700309753418

Token 923: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10382787883281708
    2. '),' → logprob: -2.353827953338623
    3. ',
' → logprob: -6.978827953338623
    4. '],' → logprob: -7.103827953338623
    5. ')]' → logprob: -7.603827953338623
    6. ',p' → logprob: -7.978827953338623
    7. ')' → logprob: -8.603827476501465
    8. ',),' → logprob: -8.978827476501465
    9. ')],' → logprob: -8.978827476501465
    10. '_inter' → logprob: -9.103827476501465

Token 924: ' inter' (ID: 993)
  Prédit: ' inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inter' → logprob: -0.3136933445930481
    2. 'inter' → logprob: -1.3136932849884033
    3. ''inter' → logprob: -7.938693523406982
    4. '(inter' → logprob: -11.063693046569824
    5. '2' → logprob: -11.563693046569824
    6. ' interm' → logprob: -11.563693046569824
    7. ' ' → logprob: -11.813693046569824
    8. ''' → logprob: -11.813693046569824
    9. '_inter' → logprob: -12.188693046569824
    10. ' '' → logprob: -12.188693046569824

Token 925: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002213180996477604
    2. '0' → logprob: -6.127213001251221
    3. '
' → logprob: -11.877213478088379
    4. ' _' → logprob: -12.627213478088379
    5. ')_' → logprob: -12.877213478088379
    6. '}_' → logprob: -13.002213478088379
    7. '1' → logprob: -13.127213478088379
    8. '```' → logprob: -13.377213478088379
    9. '\' → logprob: -13.627213478088379
    10. '"_' → logprob: -14.127213478088379

Token 926: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3663626305060461e-05
    2. '_' → logprob: -11.50001335144043
    3. '1' → logprob: -12.87501335144043
    4. ' ' → logprob: -14.37501335144043
    5. '۰' → logprob: -16.06251335144043
    6. '```' → logprob: -17.25001335144043
    7. '   ' → logprob: -17.50001335144043
    8. '2' → logprob: -17.75001335144043
    9. 'i' → logprob: -17.93751335144043
    10. '０' → logprob: -18.12501335144043

Token 927: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -6.630610641877865e-06
    2. '_' → logprob: -12.000006675720215
    3. '
' → logprob: -15.500006675720215
    4. '```' → logprob: -16.3750057220459
    5. '_q' → logprob: -17.2500057220459
    6. 'p' → logprob: -17.5000057220459
    7. ' _' → logprob: -17.5000057220459
    8. '\' → logprob: -18.0000057220459
    9. ')' → logprob: -18.5000057220459
    10. '_t' → logprob: -19.1250057220459

Token 928: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4313650131225586
    2. '1' → logprob: -1.0563650131225586
    3. '0' → logprob: -5.931365013122559
    4. 'p' → logprob: -12.681365013122559
    5. '3' → logprob: -14.806365013122559
    6. 'oints' → logprob: -14.993865013122559
    7. 'r' → logprob: -15.306365013122559
    8. '```' → logprob: -15.493865013122559
    9. ' ' → logprob: -15.806365013122559
    10. 'oint' → logprob: -15.993865013122559

Token 929: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.019237768370658e-05
    2. ',
' → logprob: -9.625090599060059
    3. ']' → logprob: -11.000090599060059
    4. ' ,' → logprob: -12.500090599060059
    5. ')' → logprob: -14.250090599060059
    6. 'inter' → logprob: -14.250090599060059
    7. ',p' → logprob: -14.500090599060059
    8. ',...' → logprob: -15.000090599060059
    9. ')]' → logprob: -15.125090599060059
    10. '_,' → logprob: -15.875090599060059

Token 930: ' inter' (ID: 993)
  Prédit: ' inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inter' → logprob: -0.08896967768669128
    2. 'inter' → logprob: -2.4639697074890137
    3. ''inter' → logprob: -11.338969230651855
    4. ' interm' → logprob: -12.713969230651855
    5. '(inter' → logprob: -12.713969230651855
    6. ',' → logprob: -12.838969230651855
    7. ' ' → logprob: -12.963969230651855
    8. ' ' → logprob: -13.213969230651855
    9. '#' → logprob: -13.588969230651855
    10. ' 
' → logprob: -14.213969230651855

Token 931: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0005698331515304744
    2. '_points' → logprob: -8.125570297241211
    3. '1' → logprob: -8.250570297241211
    4. '-' → logprob: -12.000570297241211
    5. 's' → logprob: -12.875570297241211
    6. '_-' → logprob: -13.875570297241211
    7. '```' → logprob: -13.875570297241211
    8. '_
' → logprob: -14.500570297241211
    9. '
' → logprob: -15.375570297241211
    10. '0' → logprob: -15.750570297241211

Token 932: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11426029354333878
    2. '0' → logprob: -2.239260196685791
    3. '_' → logprob: -6.614260196685791
    4. '-' → logprob: -9.61426067352295
    5. ' ' → logprob: -11.11426067352295
    6. '
' → logprob: -12.23926067352295
    7. '```' → logprob: -12.98926067352295
    8. 'i' → logprob: -13.86426067352295
    9. 'n' → logprob: -14.48926067352295
    10. '...' → logprob: -14.61426067352295

Token 933: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0004848922253586352
    2. '_' → logprob: -7.750484943389893
    3. '
' → logprob: -10.875484466552734
    4. '_inter' → logprob: -11.000484466552734
    5. ' _' → logprob: -12.625484466552734
    6. ',' → logprob: -12.625484466552734
    7. '   ' → logprob: -13.125484466552734
    8. '```' → logprob: -13.500484466552734
    9. ')' → logprob: -13.625484466552734
    10. '\' → logprob: -14.250484466552734

Token 934: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016039233014453202
    2. '0' → logprob: -8.750160217285156
    3. '_' → logprob: -13.625160217285156
    4. 'oints' → logprob: -14.750160217285156
    5. 'oint' → logprob: -16.000160217285156
    6. 'r' → logprob: -16.000160217285156
    7. '3' → logprob: -17.125160217285156
    8. '2' → logprob: -18.000160217285156
    9. '_p' → logprob: -18.250160217285156
    10. '' → logprob: -18.250160217285156

Token 935: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0087516784551553e-05
    2. ',
' → logprob: -12.12501049041748
    3. ' ,' → logprob: -12.37501049041748
    4. 'inter' → logprob: -15.75001049041748
    5. ',p' → logprob: -16.375009536743164
    6. '_,' → logprob: -16.875009536743164
    7. ')' → logprob: -17.125009536743164
    8. '
' → logprob: -17.500009536743164
    9. '(inter' → logprob: -17.500009536743164
    10. ',

' → logprob: -17.500009536743164

Token 936: ' inter' (ID: 993)
  Prédit: ' inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inter' → logprob: -0.2254435420036316
    2. 'inter' → logprob: -1.6004436016082764
    3. '(inter' → logprob: -11.100443840026855
    4. ''inter' → logprob: -11.600443840026855
    5. ' interm' → logprob: -12.600443840026855
    6. ' ' → logprob: -13.475443840026855
    7. '_inter' → logprob: -14.725443840026855
    8. ' ' → logprob: -15.350443840026855
    9. '.inter' → logprob: -15.600443840026855
    10. ''' → logprob: -15.850443840026855

Token 937: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06206044554710388
    2. '1' → logprob: -2.8120603561401367
    3. '-' → logprob: -10.062060356140137
    4. '[' → logprob: -10.687060356140137
    5. 'inter' → logprob: -12.062060356140137
    6. 'int' → logprob: -12.437060356140137
    7. '```' → logprob: -12.562060356140137
    8. '_inter' → logprob: -12.812060356140137
    9. ' _' → logprob: -13.437060356140137
    10. '
' → logprob: -13.687060356140137

Token 938: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16026799380779266
    2. '0' → logprob: -1.910267949104309
    3. '_' → logprob: -10.66026782989502
    4. ' ' → logprob: -10.91026782989502
    5. '```' → logprob: -14.66026782989502
    6. '...' → logprob: -14.78526782989502
    7. '   ' → logprob: -15.28526782989502
    8. '`' → logprob: -15.66026782989502
    9. '
' → logprob: -15.78526782989502
    10. '-' → logprob: -16.035268783569336

Token 939: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0019402962643653154
    2. 'p' → logprob: -6.2519402503967285
    3. 'inter' → logprob: -11.751940727233887
    4. '```' → logprob: -14.126940727233887
    5. '[' → logprob: -14.376940727233887
    6. '_' → logprob: -14.501940727233887
    7. ' p' → logprob: -15.251940727233887
    8. '1' → logprob: -15.376940727233887
    9. '(inter' → logprob: -15.376940727233887
    10. ',' → logprob: -15.376940727233887

Token 940: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02045441046357155
    2. '3' → logprob: -4.145454406738281
    3. '2' → logprob: -5.520454406738281
    4. '+' → logprob: -9.020454406738281
    5. '_p' → logprob: -9.020454406738281
    6. 'p' → logprob: -9.395454406738281
    7. '4' → logprob: -10.645454406738281
    8. '_' → logprob: -11.645454406738281
    9. '5' → logprob: -11.770454406738281
    10. '0' → logprob: -11.895454406738281

Token 941: ',...' (ID: 35229)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009238460334017873
    2. ']' → logprob: -7.2509236335754395
    3. ',
' → logprob: -9.250924110412598
    4. ')' → logprob: -9.750924110412598
    5. '#' → logprob: -10.625924110412598
    6. ',...' → logprob: -11.375924110412598
    7. ' ,' → logprob: -12.000924110412598
    8. '...' → logprob: -12.375924110412598
    9. ')]' → logprob: -12.875924110412598
    10. '...]' → logprob: -13.250924110412598

Token 942: ' ]

' (ID: 32229)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.28783419728279114
    2. ']
' → logprob: -1.4128341674804688
    3. ',' → logprob: -5.412834167480469
    4. ']

' → logprob: -6.662834167480469
    5. '#' → logprob: -8.287834167480469
    6. ']
' → logprob: -8.537834167480469
    7. '
' → logprob: -9.287834167480469
    8. ',
' → logprob: -9.662834167480469
    9. 'n' → logprob: -9.787834167480469
    10. ')' → logprob: -10.037834167480469

Token 943: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.011664005927741528
    2. 'adj' → logprob: -4.511663913726807
    3. 'edges' → logprob: -7.511663913726807
    4. ' graph' → logprob: -10.011664390563965
    5. 'n' → logprob: -11.261664390563965
    6. '
' → logprob: -12.511664390563965
    7. 'g' → logprob: -13.386664390563965
    8. 'def' → logprob: -13.386664390563965
    9. '   ' → logprob: -13.511664390563965
    10. ' edges' → logprob: -13.886664390563965

Token 944: ' E' (ID: 457)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.008696827106177807
    2. 'adj' → logprob: -4.758697032928467
    3. 'edges' → logprob: -9.508696556091309
    4. 'n' → logprob: -12.133696556091309
    5. ' graph' → logprob: -13.633696556091309
    6. '#' → logprob: -13.758696556091309
    7. 'g' → logprob: -15.258696556091309
    8. 'graphs' → logprob: -16.758697509765625
    9. '   ' → logprob: -17.133697509765625
    10. 'm' → logprob: -17.258697509765625

Token 945: ' =' (ID: 314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5765486359596252
    2. ' =' → logprob: -0.8265486359596252
    3. '=' → logprob: -8.45154857635498
    4. 'D' → logprob: -8.95154857635498
    5. 'dg' → logprob: -8.95154857635498
    6. 'dge' → logprob: -9.82654857635498
    7. '=[]' → logprob: -11.07654857635498
    8. 'ges' → logprob: -11.20154857635498
    9. '=[' → logprob: -11.32654857635498
    10. 'dj' → logprob: -11.32654857635498

Token 946: ' len' (ID: 4631)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.7958393692970276
    2. '{' → logprob: -1.2958393096923828
    3. '[]' → logprob: -1.7958393096923828
    4. '[' → logprob: -2.295839309692383
    5. ' [[]' → logprob: -4.795839309692383
    6. '[len' → logprob: -9.670839309692383
    7. '[{' → logprob: -10.045839309692383
    8. 'len' → logprob: -10.420839309692383
    9. 'dict' → logprob: -10.795839309692383
    10. 'default' → logprob: -11.295839309692383

Token 947: '(vertices' (ID: 158708)
  Prédit: '(vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vertices' → logprob: -5.796184723294573e-06
    2. 'vertices' → logprob: -12.125005722045898
    3. '(' → logprob: -15.125005722045898
    4. ' vertices' → logprob: -17.2500057220459
    5. '_vertices' → logprob: -18.3750057220459
    6. 'E' → logprob: -18.5000057220459
    7. '(edges' → logprob: -18.5000057220459
    8. '(
' → logprob: -18.6250057220459
    9. '```' → logprob: -19.2500057220459
    10. 's' → logprob: -19.7500057220459

Token 948: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.491498531133402e-06
    2. ' )' → logprob: -12.125009536743164
    3. ')
' → logprob: -13.125009536743164
    4. '<|end|>' → logprob: -14.375009536743164
    5. '-' → logprob: -15.250009536743164
    6. '<|end|>' → logprob: -15.500009536743164
    7. ')-' → logprob: -15.625009536743164
    8. ')#' → logprob: -15.625009536743164
    9. '#' → logprob: -15.875009536743164
    10. '[' → logprob: -16.125009536743164

Token 949: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.012716008350253105
    2. 'adj' → logprob: -4.762715816497803
    3. '   ' → logprob: -5.637715816497803
    4. ' graph' → logprob: -7.637715816497803
    5. 'edges' → logprob: -11.387716293334961
    6. '
' → logprob: -11.887716293334961
    7. 'g' → logprob: -12.137716293334961
    8. 'G' → logprob: -12.387716293334961
    9. 'graphs' → logprob: -12.762716293334961
    10. 'Graph' → logprob: -12.887716293334961

Token 950: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.018323540687561035
    2. 'adj' → logprob: -4.0183234214782715
    3. ' graph' → logprob: -8.76832389831543
    4. 'edges' → logprob: -11.14332389831543
    5. ' adj' → logprob: -13.01832389831543
    6. '#' → logprob: -14.64332389831543
    7. 'g' → logprob: -14.89332389831543
    8. 'G' → logprob: -15.64332389831543
    9. 'dist' → logprob: -16.26832389831543
    10. 'gr' → logprob: -16.76832389831543

Token 951: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575941264629364
    2. '=' → logprob: -0.825941264629364
    3. '=[]' → logprob: -13.82594108581543
    4. '=[' → logprob: -14.95094108581543
    5. ' ' → logprob: -15.57594108581543
    6. '   ' → logprob: -15.82594108581543
    7. '＝' → logprob: -16.82594108581543
    8. ' =[' → logprob: -16.82594108581543
    9. '={}' → logprob: -17.32594108581543
    10. ')' → logprob: -17.70094108581543

Token 952: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.016227321699261665
    2. '{' → logprob: -4.5162272453308105
    3. ' [[]' → logprob: -5.2662272453308105
    4. '[[' → logprob: -13.391227722167969
    5. '[{' → logprob: -13.391227722167969
    6. 'default' → logprob: -17.14122772216797
    7. '   ' → logprob: -19.01622772216797
    8. '[['' → logprob: -19.39122772216797
    9. ' {' → logprob: -19.51622772216797
    10. '[]' → logprob: -19.51622772216797

Token 953: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16724662482738495
    2. ' for' → logprob: -1.9172465801239014
    3. ']' → logprob: -5.1672468185424805
    4. '(E' → logprob: -7.0422468185424805
    5. '(' → logprob: -8.66724681854248
    6. ')' → logprob: -9.04224681854248
    7. '
' → logprob: -9.66724681854248
    8. '()' → logprob: -10.16724681854248
    9. '#' → logprob: -12.41724681854248
    10. ',' → logprob: -12.54224681854248

Token 954: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5184149742126465
    2. 'range' → logprob: -1.1434149742126465
    3. ' range' → logprob: -2.6434149742126465
    4. '_range' → logprob: -4.5184149742126465
    5. '_vertices' → logprob: -6.2684149742126465
    6. '_graph' → logprob: -7.1434149742126465
    7. ' _' → logprob: -7.8934149742126465
    8. 'in' → logprob: -8.768415451049805
    9. '_i' → logprob: -9.018415451049805
    10. '_E' → logprob: -9.018415451049805

Token 955: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -8.0536883615423e-05
    2. 'in' → logprob: -9.750080108642578
    3. ' range' → logprob: -10.750080108642578
    4. '(range' → logprob: -14.500080108642578
    5. 'vertices' → logprob: -15.750080108642578
    6. ' in' → logprob: -16.625080108642578
    7. ')' → logprob: -19.625080108642578
    8. 'r' → logprob: -19.875080108642578
    9. 'graph' → logprob: -20.000080108642578
    10. '	range' → logprob: -20.250080108642578

Token 956: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.704273118884885e-07
    2. ' range' → logprob: -14.250000953674316
    3. '(range' → logprob: -19.75
    4. 'vertices' → logprob: -21.375
    5. '
' → logprob: -23.375
    6. '	range' → logprob: -24.5
    7. 'rang' → logprob: -24.875
    8. '   ' → logprob: -25.25
    9. '```' → logprob: -25.25
    10. ')' → logprob: -25.75

Token 957: '(E' (ID: 20882)
  Prédit: '(E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -4.320199877838604e-07
    2. 'E' → logprob: -14.875
    3. '(' → logprob: -17.75
    4. ' (' → logprob: -21.25
    5. '((' → logprob: -21.25
    6. '	E' → logprob: -21.875
    7. '
' → logprob: -22.0
    8. ',E' → logprob: -22.125
    9. '(
' → logprob: -22.25
    10. '[E' → logprob: -22.25

Token 958: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.1008713702030946e-06
    2. ')]
' → logprob: -13.875001907348633
    3. ' )' → logprob: -14.125001907348633
    4. ')' → logprob: -15.500001907348633
    5. ')]

' → logprob: -16.625001907348633
    6. ')]
' → logprob: -17.125001907348633
    7. ']' → logprob: -17.500001907348633
    8. ')],' → logprob: -17.625001907348633
    9. ')].' → logprob: -17.750001907348633
    10. '   ' → logprob: -18.000001907348633

Token 959: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06263882666826248
    2. '#' → logprob: -2.812638759613037
    3. 'def' → logprob: -7.812638759613037
    4. '   ' → logprob: -8.562639236450195
    5. ' for' → logprob: -9.937639236450195
    6. 'edges' → logprob: -11.437639236450195
    7. '```' → logprob: -12.312639236450195
    8. 'graph' → logprob: -12.312639236450195
    9. '
' → logprob: -12.687639236450195
    10. '    
' → logprob: -13.562639236450195

Token 960: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.41219639778137207
    2. 'def' → logprob: -1.412196397781372
    3. 'he' → logprob: -2.662196397781372
    4. 'for' → logprob: -3.787196397781372
    5. 'graph' → logprob: -6.537196159362793
    6. '   ' → logprob: -8.912196159362793
    7. '```' → logprob: -9.787196159362793
    8. 'edges' → logprob: -10.162196159362793
    9. 'if' → logprob: -10.287196159362793
    10. ' he' → logprob: -12.537196159362793

Token 961: ' Ajouter' (ID: 165754)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.20717142522335052
    2. 'def' → logprob: -2.7071714401245117
    3. 'for' → logprob: -2.8321714401245117
    4. 'he' → logprob: -2.8321714401245117
    5. 'graph' → logprob: -6.082171440124512
    6. '   ' → logprob: -8.832171440124512
    7. 'if' → logprob: -9.332171440124512
    8. 'edges' → logprob: -9.957171440124512
    9. '```' → logprob: -11.457171440124512
    10. ' #' → logprob: -12.082171440124512

Token 962: ' ar' (ID: 646)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.4077713191509247
    2. 'edges' → logprob: -1.282771348953247
    3. 'def' → logprob: -3.532771348953247
    4. '#' → logprob: -4.782771110534668
    5. '_edges' → logprob: -4.782771110534668
    6. 'graph' → logprob: -5.782771110534668
    7. 'edge' → logprob: -6.157771110534668
    8. '_edge' → logprob: -6.407771110534668
    9. '(' → logprob: -6.782771110534668
    10. 'he' → logprob: -6.907771110534668

Token 963: 'êtes' (ID: 23720)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.08263000845909119
    2. 'gs' → logprob: -2.582629919052124
    3. 'c' → logprob: -5.957630157470703
    4. 'g' → logprob: -6.832630157470703
    5. 't' → logprob: -10.457630157470703
    6. 'ch' → logprob: -11.582630157470703
    7. 'r' → logprob: -11.582630157470703
    8. 'e' → logprob: -12.207630157470703
    9. 'ts' → logprob: -13.207630157470703
    10. 'edges' → logprob: -13.582630157470703

Token 964: ' entre' (ID: 3853)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2871078550815582
    2. 'def' → logprob: -2.0371079444885254
    3. '#' → logprob: -3.0371079444885254
    4. '   ' → logprob: -3.4121079444885254
    5. 'graph' → logprob: -3.5371079444885254
    6. ' for' → logprob: -4.912107944488525
    7. '
' → logprob: -6.787107944488525
    8. 'if' → logprob: -8.162107467651367
    9. 'he' → logprob: -9.662107467651367
    10. ' graph' → logprob: -9.912107467651367

Token 965: ' centres' (ID: 43504)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018627146491780877
    2. 'i' → logprob: -6.376862525939941
    3. ' ' → logprob: -9.751862525939941
    4. 'vertices' → logprob: -9.751862525939941
    5. 'v' → logprob: -11.376862525939941
    6. '(' → logprob: -11.751862525939941
    7. '(i' → logprob: -12.376862525939941
    8. 'vertex' → logprob: -12.626862525939941
    9. 'u' → logprob: -12.751862525939941
    10. ' i' → logprob: -12.876862525939941

Token 966: ' et' (ID: 859)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.048944320529699326
    2. 'if' → logprob: -3.5489442348480225
    3. 'for' → logprob: -4.923944473266602
    4. '#' → logprob: -4.923944473266602
    5. 'def' → logprob: -6.548944473266602
    6. 'graph' → logprob: -6.673944473266602
    7. '   ' → logprob: -6.798944473266602
    8. 'dist' → logprob: -8.548944473266602
    9. '
' → logprob: -9.048944473266602
    10. '0' → logprob: -9.048944473266602

Token 967: ' points' (ID: 5571)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008529352955520153
    2. 'vertices' → logprob: -5.008529186248779
    3. ' ' → logprob: -6.383529186248779
    4. '4' → logprob: -9.758529663085938
    5. '   ' → logprob: -10.383529663085938
    6. ' vertices' → logprob: -10.758529663085938
    7. '  ' → logprob: -11.883529663085938
    8. 'indices' → logprob: -13.508529663085938
    9. '
' → logprob: -13.633529663085938
    10. '3' → logprob: -13.758529663085938

Token 968: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9838795065879822
    2. '0' → logprob: -1.108879566192627
    3. 'de' → logprob: -2.108879566192627
    4. '   ' → logprob: -3.358879566192627
    5. 'inter' → logprob: -3.483879566192627
    6. 'for' → logprob: -4.233879566192627
    7. '1' → logprob: -4.358879566192627
    8. ' ' → logprob: -4.483879566192627
    9. '[' → logprob: -4.483879566192627
    10. '_inter' → logprob: -4.483879566192627

Token 969: ''inter' (ID: 55731)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.3006403148174286
    2. 'inter' → logprob: -1.550640344619751
    3. ''inter' → logprob: -3.050640344619751
    4. '#' → logprob: -9.550640106201172
    5. 'interaction' → logprob: -9.925640106201172
    6. '(inter' → logprob: -10.925640106201172
    7. '_inter' → logprob: -11.175640106201172
    8. ' intersection' → logprob: -11.675640106201172
    9. 'vertices' → logprob: -11.800640106201172
    10. '   ' → logprob: -11.800640106201172

Token 970: 'sections' (ID: 52783)
  Prédit: 'section'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.05626974254846573
    2. 'sections' → logprob: -2.931269645690918
    3. 'er' → logprob: -7.681269645690918
    4. 'ection' → logprob: -7.806269645690918
    5. 'intersection' → logprob: -8.556269645690918
    6. 'ter' → logprob: -9.056269645690918
    7. 'ese' → logprob: -10.181269645690918
    8. 'sect' → logprob: -10.681269645690918
    9. 's' → logprob: -10.806269645690918
    10. 'connexion' → logprob: -11.431269645690918

Token 971: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6405304670333862
    2. '   ' → logprob: -2.015530586242676
    3. 'if' → logprob: -2.140530586242676
    4. '#' → logprob: -2.390530586242676
    5. 'dist' → logprob: -2.765530586242676
    6. 'graph' → logprob: -3.140530586242676
    7. 'he' → logprob: -4.265530586242676
    8. 'def' → logprob: -5.890530586242676
    9. ' for' → logprob: -6.515530586242676
    10. '0' → logprob: -6.515530586242676

Token 972: ' cercle' (ID: 172399)
  Prédit: 'cer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cer' → logprob: -0.938585638999939
    2. 'c' → logprob: -1.688585638999939
    3. ' cercle' → logprob: -1.813585638999939
    4. 'la' → logprob: -2.1885857582092285
    5. 'l' → logprob: -2.4385857582092285
    6. 'le' → logprob: -3.9385857582092285
    7. 'circle' → logprob: -4.6885857582092285
    8. '#' → logprob: -5.4385857582092285
    9. '0' → logprob: -5.5635857582092285
    10. ' cer' → logprob: -5.5635857582092285

Token 973: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004913751035928726
    2. ' ' → logprob: -6.254913806915283
    3. 's' → logprob: -6.254913806915283
    4. 'for' → logprob: -7.254913806915283
    5. '   ' → logprob: -8.879913330078125
    6. 'i' → logprob: -9.754913330078125
    7. 'if' → logprob: -9.879913330078125
    8. '(' → logprob: -10.754913330078125
    9. ' for' → logprob: -11.254913330078125
    10. '_' → logprob: -11.629913330078125

Token 974: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014972452772781253
    2. ' ' → logprob: -6.876497268676758
    3. 'adj' → logprob: -7.876497268676758
    4. '1' → logprob: -10.626497268676758
    5. 's' → logprob: -11.001497268676758
    6. 'n' → logprob: -12.251497268676758
    7. 'de' → logprob: -12.376497268676758
    8. '
' → logprob: -12.376497268676758
    9. 'vo' → logprob: -12.626497268676758
    10. '(' → logprob: -12.751497268676758

Token 975: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07260938733816147
    2. '0' → logprob: -3.8226094245910645
    3. ' for' → logprob: -4.1976094245910645
    4. '   ' → logprob: -4.5726094245910645
    5. 'c' → logprob: -5.0726094245910645
    6. 'center' → logprob: -5.5726094245910645
    7. 'if' → logprob: -5.6976094245910645
    8. '#' → logprob: -6.5726094245910645
    9. 'def' → logprob: -6.6976094245910645
    10. ',' → logprob: -7.0726094245910645

Token 976: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.043635256588459015
    2. 'if' → logprob: -3.918635368347168
    3. ' for' → logprob: -4.793635368347168
    4. 'dist' → logprob: -5.293635368347168
    5. 'p' → logprob: -5.793635368347168
    6. '   ' → logprob: -6.043635368347168
    7. 'def' → logprob: -6.793635368347168
    8. '0' → logprob: -7.418635368347168
    9. '#' → logprob: -7.918635368347168
    10. 'graph' → logprob: -8.168635368347168

Token 977: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005864920560270548
    2. 'if' → logprob: -6.255865097045898
    3. 'p' → logprob: -6.880865097045898
    4. 'def' → logprob: -7.130865097045898
    5. 'c' → logprob: -7.755865097045898
    6. 'dist' → logprob: -7.755865097045898
    7. 'graph' → logprob: -8.005865097045898
    8. 'd' → logprob: -8.005865097045898
    9. ' for' → logprob: -8.130865097045898
    10. 'v' → logprob: -9.255865097045898

Token 978: ' Le' (ID: 2018)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005644824355840683
    2. 'c' → logprob: -6.130644798278809
    3. 'p' → logprob: -6.755644798278809
    4. 'd' → logprob: -6.880644798278809
    5. 'if' → logprob: -7.630644798278809
    6. 'dist' → logprob: -7.880644798278809
    7. 'start' → logprob: -8.380644798278809
    8. 'r' → logprob: -9.380644798278809
    9. 'def' → logprob: -10.380644798278809
    10. '#' → logprob: -10.880644798278809

Token 979: ' centre' (ID: 13268)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.1172133684158325
    2. 'start' → logprob: -1.8672133684158325
    3. 'def' → logprob: -2.367213249206543
    4. '#' → logprob: -2.492213249206543
    5. 'for' → logprob: -2.492213249206543
    6. 'c' → logprob: -2.742213249206543
    7. 'dist' → logprob: -2.992213249206543
    8. 'graph' → logprob: -3.117213249206543
    9. 'r' → logprob: -3.492213249206543
    10. 'center' → logprob: -3.617213249206543

Token 980: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5551963448524475
    2. '0' → logprob: -1.0551962852478027
    3. 'vertices' → logprob: -3.8051962852478027
    4. ' =' → logprob: -3.9301962852478027
    5. '=' → logprob: -4.180196285247803
    6. '_' → logprob: -5.055196285247803
    7. '[' → logprob: -5.555196285247803
    8. '_vertices' → logprob: -6.305196285247803
    9. '(vertices' → logprob: -7.180196285247803
    10. '(' → logprob: -7.180196285247803

Token 981: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002446162048727274
    2. '_' → logprob: -6.877446174621582
    3. '_id' → logprob: -8.127446174621582
    4. '_idx' → logprob: -8.377446174621582
    5. 'idx' → logprob: -8.627446174621582
    6. 'de' → logprob: -9.127446174621582
    7. 'id' → logprob: -9.252446174621582
    8. '=' → logprob: -9.627446174621582
    9. 'c' → logprob: -9.752446174621582
    10. '#' → logprob: -10.002446174621582

Token 982: ' est' (ID: 893)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.8260685205459595
    2. ' =' → logprob: -1.9510685205459595
    3. ',' → logprob: -2.07606840133667
    4. '_idx' → logprob: -2.32606840133667
    5. '=' → logprob: -2.57606840133667
    6. 'id' → logprob: -2.95106840133667
    7. '0' → logprob: -2.95106840133667
    8. 'idx' → logprob: -3.07606840133667
    9. '_vertices' → logprob: -3.45106840133667
    10. 'vertices' → logprob: -3.57606840133667

Token 983: ' le' (ID: 505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001198086072690785
    2. ' ' → logprob: -7.2511982917785645
    3. '2' → logprob: -7.6261982917785645
    4. 'vertices' → logprob: -15.251197814941406
    5. '   ' → logprob: -16.126197814941406
    6. '1' → logprob: -16.626197814941406
    7. ' vertices' → logprob: -17.126197814941406
    8. '    ' → logprob: -17.126197814941406
    9. '  ' → logprob: -17.376197814941406
    10. '     ' → logprob: -18.751197814941406

Token 984: ' vertex' (ID: 25363)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08954358100891113
    2. '0' → logprob: -2.464543581008911
    3. ' ' → logprob: -8.089543342590332
    4. '#' → logprob: -10.277043342590332
    5. 'first' → logprob: -10.277043342590332
    6. 'de' → logprob: -10.339543342590332
    7. 'vert' → logprob: -11.152043342590332
    8. 'next' → logprob: -11.277043342590332
    9. '   ' → logprob: -11.339543342590332
    10. 'index' → logprob: -11.527043342590332

Token 985: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.35630640387535095
    2. '0' → logprob: -1.2313064336776733
    3. ' ' → logprob: -4.856306552886963
    4. '=' → logprob: -11.356306076049805
    5. ' =' → logprob: -11.356306076049805
    6. '[' → logprob: -11.606306076049805
    7. '1' → logprob: -12.106306076049805
    8. ',' → logprob: -12.731306076049805
    9. '   ' → logprob: -12.981306076049805
    10. '(' → logprob: -12.981306076049805

Token 986: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0921942703134846e-05
    2. '2' → logprob: -11.87501049041748
    3. ' ' → logprob: -12.50001049041748
    4. '۰' → logprob: -16.250011444091797
    5. '=' → logprob: -17.187511444091797
    6. '#' → logprob: -17.687511444091797
    7. '０' → logprob: -18.187511444091797
    8. '1' → logprob: -18.312511444091797
    9. '০' → logprob: -18.312511444091797
    10. '[' → logprob: -19.000011444091797

Token 987: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.040721334517002106
    2. 'p' → logprob: -3.5407214164733887
    3. 'he' → logprob: -6.040721416473389
    4. 'inter' → logprob: -6.165721416473389
    5. 'def' → logprob: -6.290721416473389
    6. ' for' → logprob: -6.540721416473389
    7. 'c' → logprob: -6.915721416473389
    8. '   ' → logprob: -7.665721416473389
    9. ',' → logprob: -8.16572093963623
    10. 'int' → logprob: -8.54072093963623

Token 988: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7230153679847717
    2. 'graph' → logprob: -0.7230153679847717
    3. '#' → logprob: -4.223015308380127
    4. 'vertices' → logprob: -6.098015308380127
    5. 'v' → logprob: -6.473015308380127
    6. 'idx' → logprob: -6.473015308380127
    7. 'vertex' → logprob: -6.473015308380127
    8. '0' → logprob: -6.973015308380127
    9. 'i' → logprob: -6.973015308380127
    10. 'u' → logprob: -7.223015308380127

Token 989: ' points' (ID: 5571)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.356162965297699
    2. 'for' → logprob: -1.4811630249023438
    3. '2' → logprob: -3.2311630249023438
    4. 'inter' → logprob: -4.106163024902344
    5. 'edges' → logprob: -5.356163024902344
    6. 'indices' → logprob: -5.731163024902344
    7. ' vertices' → logprob: -6.356163024902344
    8. 'c' → logprob: -6.606163024902344
    9. '#' → logprob: -7.106163024902344
    10. 'points' → logprob: -7.356163024902344

Token 990: ' d' (ID: 272)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005806732806377113
    2. 'de' → logprob: -8.750580787658691
    3. ' ' → logprob: -8.875580787658691
    4. 'for' → logprob: -9.125580787658691
    5. 'of' → logprob: -9.125580787658691
    6. ' of' → logprob: -11.250580787658691
    7. '```' → logprob: -11.500580787658691
    8. ' de' → logprob: -12.125580787658691
    9. '3' → logprob: -12.250580787658691
    10. 'import' → logprob: -12.375580787658691

Token 991: ''inter' (ID: 55731)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.13054345548152924
    2. 'inter' → logprob: -2.1305434703826904
    3. 'int' → logprob: -6.630543231964111
    4. ''inter' → logprob: -6.880543231964111
    5. 'index' → logprob: -7.630543231964111
    6. '#' → logprob: -8.25554370880127
    7. 'indices' → logprob: -9.00554370880127
    8. '_inter' → logprob: -10.00554370880127
    9. 'indice' → logprob: -10.00554370880127
    10. ' intersection' → logprob: -10.13054370880127

Token 992: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.06259650737047195
    2. 'sections' → logprob: -3.312596559524536
    3. 'er' → logprob: -4.187596321105957
    4. 'intersection' → logprob: -5.687596321105957
    5. 'ser' → logprob: -7.062596321105957
    6. 'ection' → logprob: -7.312596321105957
    7. 'erse' → logprob: -7.562596321105957
    8. 'ese' → logprob: -7.812596321105957
    9. 's' → logprob: -8.437596321105957
    10. 'sertion' → logprob: -8.437596321105957

Token 993: ' entre' (ID: 3853)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06424891203641891
    2. 'de' → logprob: -3.18924880027771
    3. 'for' → logprob: -4.814249038696289
    4. ' de' → logprob: -5.689249038696289
    5. '4' → logprob: -6.189249038696289
    6. ' ' → logprob: -6.314249038696289
    7. 's' → logprob: -6.814249038696289
    8. ' sont' → logprob: -7.689249038696289
    9. 'inter' → logprob: -8.064249038696289
    10. 'indices' → logprob: -8.189249038696289

Token 994: ' C' (ID: 363)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.005502795800566673
    2. 'cer' → logprob: -5.255502700805664
    3. 'circle' → logprob: -9.505502700805664
    4. ' circles' → logprob: -10.005502700805664
    5. 'dataset' → logprob: -10.505502700805664
    6. '   ' → logprob: -10.755502700805664
    7. 'c' → logprob: -11.130502700805664
    8. '#' → logprob: -11.130502700805664
    9. 'circ' → logprob: -11.130502700805664
    10. 'vertices' → logprob: -11.630502700805664

Token 995: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2686896324157715
    2. 'ir' → logprob: -1.6436896324157715
    3. 'cir' → logprob: -4.5186896324157715
    4. '#' → logprob: -4.6436896324157715
    5. '1' → logprob: -5.0186896324157715
    6. '2' → logprob: -5.1436896324157715
    7. 'ircle' → logprob: -7.0811896324157715
    8. '[' → logprob: -7.1436896324157715
    9. '=' → logprob: -7.2061896324157715
    10. 'irc' → logprob: -7.3936896324157715

Token 996: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.5295767784118652
    2. 'et' → logprob: -1.0295767784118652
    3. ' sont' → logprob: -3.5295767784118652
    4. 's' → logprob: -5.029576778411865
    5. ',' → logprob: -5.279576778411865
    6. ' and' → logprob: -5.529576778411865
    7. 'inter' → logprob: -5.529576778411865
    8. 'and' → logprob: -6.654576778411865
    9. '#' → logprob: -6.904576778411865
    10. 'ont' → logprob: -7.029576778411865

Token 997: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0002600245934445411
    2. ' C' → logprob: -8.375260353088379
    3. 'c' → logprob: -10.750260353088379
    4. '#' → logprob: -12.125260353088379
    5. ' ' → logprob: -14.000260353088379
    6. '
' → logprob: -14.500260353088379
    7. 'cir' → logprob: -15.000260353088379
    8. '   ' → logprob: -15.625260353088379
    9. '1' → logprob: -16.500259399414062
    10. '

' → logprob: -16.625259399414062

Token 998: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023400263860821724
    2. '0' → logprob: -3.77340030670166
    3. ' ' → logprob: -9.77340030670166
    4. 'C' → logprob: -10.27340030670166
    5. '#' → logprob: -11.46090030670166
    6. '(' → logprob: -11.58590030670166
    7. 'i' → logprob: -12.27340030670166
    8. '2' → logprob: -12.33590030670166
    9. 'c' → logprob: -12.52340030670166
    10. '[' → logprob: -13.14840030670166

Token 999: ' sont' (ID: 5242)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'are' → logprob: -1.0505019426345825
    2. ' are' → logprob: -1.3005019426345825
    3. 'for' → logprob: -1.5505019426345825
    4. ' for' → logprob: -2.800501823425293
    5. ' have' → logprob: -3.925501823425293
    6. 'idx' → logprob: -4.425501823425293
    7. 'indices' → logprob: -4.425501823425293
    8. ' =' → logprob: -4.675501823425293
    9. '2' → logprob: -4.925501823425293
    10. '_idx' → logprob: -5.425501823425293

Token 1000: ' vertices' (ID: 38360)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.016580654308199883
    2. ' ' → logprob: -4.141580581665039
    3. '   ' → logprob: -7.891580581665039
    4. '    ' → logprob: -9.641580581665039
    5. 'vertices' → logprob: -10.141580581665039
    6. '  ' → logprob: -10.641580581665039
    7. ' vertices' → logprob: -10.766580581665039
    8. '[' → logprob: -11.641580581665039
    9. '     ' → logprob: -11.891580581665039
    10. ' at' → logprob: -13.641580581665039

Token 1001: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03805446997284889
    2. '[' → logprob: -3.2880544662475586
    3. ' ' → logprob: -11.663054466247559
    4. '(' → logprob: -12.788054466247559
    5. '[
' → logprob: -14.788054466247559
    6. '   ' → logprob: -14.913054466247559
    7. ' [' → logprob: -14.913054466247559
    8. '```' → logprob: -15.288054466247559
    9. '.append' → logprob: -16.288055419921875
    10. 'for' → logprob: -17.288055419921875

Token 1002: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.596781946020201e-05
    2. '[' → logprob: -10.250045776367188
    3. ' ' → logprob: -11.500045776367188
    4. '(' → logprob: -14.875045776367188
    5. ' [' → logprob: -17.875045776367188
    6. '２' → logprob: -18.625045776367188
    7. '۲' → logprob: -18.875045776367188
    8. '   ' → logprob: -18.875045776367188
    9. '```' → logprob: -18.875045776367188
    10. 'from' → logprob: -19.000045776367188

Token 1003: ' et' (ID: 859)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -1.1094515323638916
    2. ',' → logprob: -1.2344515323638916
    3. ' and' → logprob: -1.2344515323638916
    4. ':' → logprob: -3.2344515323638916
    5. '   ' → logprob: -4.2344512939453125
    6. 'et' → logprob: -4.4844512939453125
    7. '0' → logprob: -4.7344512939453125
    8. '2' → logprob: -5.2344512939453125
    9. ' et' → logprob: -6.1094512939453125
    10. '
' → logprob: -6.3594512939453125

Token 1004: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.000001907348633
    4. '```' → logprob: -18.625001907348633
    5. '۳' → logprob: -19.625001907348633
    6. '  ' → logprob: -20.375001907348633
    7. 'vertices' → logprob: -20.500001907348633
    8. '３' → logprob: -21.250001907348633
    9. '    ' → logprob: -21.500001907348633
    10. '
' → logprob: -21.625001907348633

Token 1005: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -16.500001907348633
    4. '  ' → logprob: -18.000001907348633
    5. '```' → logprob: -18.625001907348633
    6. '۳' → logprob: -19.875001907348633
    7. '    ' → logprob: -20.125001907348633
    8. '৩' → logprob: -20.687501907348633
    9. '३' → logprob: -20.937501907348633
    10. '３' → logprob: -21.312501907348633

Token 1006: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03001011349260807
    2. 'if' → logprob: -3.905010223388672
    3. 'dist' → logprob: -5.155010223388672
    4. '   ' → logprob: -6.280010223388672
    5. '
' → logprob: -6.905010223388672
    6. 'd' → logprob: -7.530010223388672
    7. 'def' → logprob: -9.280010223388672
    8. ' for' → logprob: -9.655010223388672
    9. 'distance' → logprob: -10.905010223388672
    10. 'p' → logprob: -11.155010223388672

Token 1007: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.881560041918419e-05
    2. ' for' → logprob: -10.375039100646973
    3. '   ' → logprob: -12.250039100646973
    4. '
' → logprob: -13.125039100646973
    5. 'dist' → logprob: -14.625039100646973
    6. 'def' → logprob: -15.500039100646973
    7. 'if' → logprob: -16.500038146972656
    8. 'edges' → logprob: -17.625038146972656
    9. 'distance' → logprob: -17.750038146972656
    10. '	for' → logprob: -18.000038146972656

Token 1008: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0025100242346525192
    2. 'if' → logprob: -6.002510070800781
    3. 'dist' → logprob: -11.377510070800781
    4. 'd' → logprob: -11.877510070800781
    5. '   ' → logprob: -12.002510070800781
    6. 'graph' → logprob: -12.627510070800781
    7. 'def' → logprob: -12.877510070800781
    8. ' for' → logprob: -13.127510070800781
    9. '#' → logprob: -14.252510070800781
    10. 'edges' → logprob: -14.877510070800781

Token 1009: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.16735583543777466
    2. 'i' → logprob: -1.9173557758331299
    3. 'neighbor' → logprob: -5.417356014251709
    4. 'j' → logprob: -6.917356014251709
    5. 'u' → logprob: -7.292356014251709
    6. 'idx' → logprob: -8.41735553741455
    7. 'vid' → logprob: -8.66735553741455
    8. 'w' → logprob: -8.79235553741455
    9. 'vp' → logprob: -9.54235553741455
    10. 'target' → logprob: -9.66735553741455

Token 1010: '_id' (ID: 1537)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3137694001197815
    2. 'in' → logprob: -1.3137693405151367
    3. 'v' → logprob: -7.938769340515137
    4. ' ' → logprob: -9.438769340515137
    5. 'i' → logprob: -10.938769340515137
    6. '
' → logprob: -11.438769340515137
    7. '  ' → logprob: -12.188769340515137
    8. '   ' → logprob: -12.313769340515137
    9. ' v' → logprob: -12.813769340515137
    10. ',v' → logprob: -12.813769340515137

Token 1011: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34851768612861633
    2. 'in' → logprob: -1.223517656326294
    3. ' ' → logprob: -10.223517417907715
    4. 'v' → logprob: -10.973517417907715
    5. '   ' → logprob: -12.223517417907715
    6. '	in' → logprob: -12.973517417907715
    7. ',v' → logprob: -13.098517417907715
    8. '  ' → logprob: -13.098517417907715
    9. ')' → logprob: -13.598517417907715
    10. ',' → logprob: -13.723517417907715

Token 1012: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06853709369897842
    2. 'range' → logprob: -2.8185369968414307
    3. '(' → logprob: -5.06853723526001
    4. ' range' → logprob: -8.318536758422852
    5. ' [' → logprob: -11.443536758422852
    6. '(range' → logprob: -13.943536758422852
    7. ' (' → logprob: -14.568536758422852
    8. '   ' → logprob: -15.943536758422852
    9. ' ' → logprob: -16.69353675842285
    10. '2' → logprob: -16.94353675842285

Token 1013: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.125004768371582
    4. '  ' → logprob: -18.125003814697266
    5. '۲' → logprob: -19.062503814697266
    6. '    ' → logprob: -19.625003814697266
    7. '```' → logprob: -19.625003814697266
    8. '２' → logprob: -19.750003814697266
    9. '
' → logprob: -20.562503814697266
    10. '(' → logprob: -20.625003814697266

Token 1014: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012797261297237128
    2. ' ,' → logprob: -9.000127792358398
    3. '3' → logprob: -13.000127792358398
    4. ',
' → logprob: -13.375127792358398
    5. ',v' → logprob: -14.500127792358398
    6. '2' → logprob: -16.6251277923584
    7. '   ' → logprob: -18.5001277923584
    8. ' ' → logprob: -19.3751277923584
    9. '，' → logprob: -19.5001277923584
    10. '‌,' → logprob: -19.6251277923584

Token 1015: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -15.750011444091797
    4. '۳' → logprob: -19.125011444091797
    5. '  ' → logprob: -20.250011444091797
    6. '３' → logprob: -20.625011444091797
    7. '    ' → logprob: -20.750011444091797
    8. '```' → logprob: -21.500011444091797
    9. 'v' → logprob: -21.750011444091797
    10. '৩' → logprob: -22.375011444091797

Token 1016: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.5769710540771484
    2. ']:' → logprob: -0.8269710540771484
    3. ']:
' → logprob: -7.326971054077148
    4. '   ' → logprob: -8.951971054077148
    5. ' ]' → logprob: -9.076971054077148
    6. ']' → logprob: -9.076971054077148
    7. ']:

' → logprob: -11.826971054077148
    8. '       ' → logprob: -12.951971054077148
    9. '):
' → logprob: -13.326971054077148
    10. ',' → logprob: -13.576971054077148

Token 1017: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08268279582262039
    2. 'if' → logprob: -3.0826828479766846
    3. ' if' → logprob: -4.0826826095581055
    4. '   ' → logprob: -4.2076826095581055
    5. 'dist' → logprob: -6.7076826095581055
    6. 'distance' → logprob: -8.082682609558105
    7. 'x' → logprob: -9.957682609558105
    8. ':' → logprob: -10.707682609558105
    9. ' dist' → logprob: -10.832682609558105
    10. '```' → logprob: -10.957682609558105

Token 1018: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.010679677128791809
    2. 'd' → logprob: -5.010679721832275
    3. 'dist' → logprob: -5.885679721832275
    4. '       ' → logprob: -7.760679721832275
    5. ' if' → logprob: -8.135679244995117
    6. '   ' → logprob: -8.135679244995117
    7. 'distance' → logprob: -8.885679244995117
    8. 'dx' → logprob: -11.635679244995117
    9. 'length' → logprob: -12.260679244995117
    10. 'x' → logprob: -12.760679244995117

Token 1019: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.02325270138680935
    2. ' segment' → logprob: -3.7732527256011963
    3. '(segment' → logprob: -12.273252487182617
    4. '   ' → logprob: -13.023252487182617
    5. '.segment' → logprob: -16.273252487182617
    6. ' ' → logprob: -16.648252487182617
    7. '  ' → logprob: -16.898252487182617
    8. '       ' → logprob: -16.898252487182617
    9. 'seg' → logprob: -17.273252487182617
    10. '    ' → logprob: -17.398252487182617

Token 1020: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -4.842555426876061e-06
    2. ' _' → logprob: -14.750004768371582
    3. '_en' → logprob: -14.750004768371582
    4. ')_' → logprob: -15.000004768371582
    5. '_' → logprob: -15.125004768371582
    6. '_is' → logprob: -15.125004768371582
    7. '_on' → logprob: -15.250004768371582
    8. 's' → logprob: -15.250004768371582
    9. ')' → logprob: -15.500004768371582
    10. '_segment' → logprob: -15.500004768371582

Token 1021: '_chain' (ID: 74449)
  Prédit: '_chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chain' → logprob: -0.11586034297943115
    2. 'chain' → logprob: -2.2408604621887207
    3. '(vertices' → logprob: -6.740860462188721
    4. 'vertices' → logprob: -7.615860462188721
    5. 'segment' → logprob: -7.615860462188721
    6. '(chain' → logprob: -8.115859985351562
    7. '(' → logprob: -8.990859985351562
    8. ' chain' → logprob: -9.115859985351562
    9. '_' → logprob: -9.115859985351562
    10. '(segment' → logprob: -10.365859985351562

Token 1022: '(vertices' (ID: 158708)
  Prédit: '(vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vertices' → logprob: -0.0020542622078210115
    2. '((' → logprob: -6.252054214477539
    3. '(' → logprob: -9.752054214477539
    4. 'vertices' → logprob: -10.002054214477539
    5. ' (' → logprob: -11.002054214477539
    6. ' vertices' → logprob: -12.627054214477539
    7. '   ' → logprob: -14.502054214477539
    8. '(v' → logprob: -14.627054214477539
    9. '(vertex' → logprob: -15.377054214477539
    10. ' ((' → logprob: -15.752054214477539

Token 1023: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6166903151315637e-05
    2. '(' → logprob: -11.125016212463379
    3. '[
' → logprob: -14.750016212463379
    4. ' [' → logprob: -15.000016212463379
    5. '   ' → logprob: -15.250016212463379
    6. '0' → logprob: -15.375016212463379
    7. '[v' → logprob: -16.625015258789062
    8. '```' → logprob: -16.750015258789062
    9. ')[' → logprob: -16.875015258789062
    10. '(vertices' → logprob: -17.125015258789062

Token 1024: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0087516784551553e-05
    2. ' ' → logprob: -11.75001049041748
    3. '[' → logprob: -13.37501049041748
    4. '(' → logprob: -15.00001049041748
    5. '   ' → logprob: -16.125009536743164
    6. 'v' → logprob: -16.500009536743164
    7. '    
' → logprob: -18.625009536743164
    8. '    ' → logprob: -18.812509536743164
    9. '  ' → logprob: -18.875009536743164
    10. '#' → logprob: -19.250009536743164

Token 1025: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12278464436531067
    2. ',v' → logprob: -2.2477846145629883
    3. ' ,' → logprob: -4.747784614562988
    4. '],' → logprob: -6.872784614562988
    5. '),' → logprob: -8.622784614562988
    6. ' ],' → logprob: -12.247784614562988
    7. '   ' → logprob: -12.372784614562988
    8. '[v' → logprob: -12.372784614562988
    9. '],[' → logprob: -12.997784614562988
    10. ' ),' → logprob: -13.122784614562988

Token 1026: ' vertices' (ID: 38360)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.009780172258615494
    2. ' vertices' → logprob: -4.634780406951904
    3. '   ' → logprob: -11.634779930114746
    4. '(vertices' → logprob: -11.884779930114746
    5. '       ' → logprob: -13.009779930114746
    6. ')' → logprob: -13.259779930114746
    7. '.vertices' → logprob: -13.384779930114746
    8. 'v' → logprob: -14.009779930114746
    9. ' 
' → logprob: -15.009779930114746
    10. '
' → logprob: -15.259779930114746

Token 1027: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.596781946020201e-05
    2. 'v' → logprob: -10.625045776367188
    3. '[' → logprob: -11.125045776367188
    4. '][' → logprob: -12.500045776367188
    5. ' [' → logprob: -13.625045776367188
    6. '   ' → logprob: -14.125045776367188
    7. '[
' → logprob: -15.000045776367188
    8. ')[' → logprob: -15.375045776367188
    9. '
' → logprob: -15.750045776367188
    10. ' ' → logprob: -16.250045776367188

Token 1028: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -3.128163257315464e-07
    2. 'id' → logprob: -15.25
    3. '_' → logprob: -17.875
    4. '   ' → logprob: -19.5
    5. 'v' → logprob: -19.875
    6. '_ids' → logprob: -21.125
    7. '_i' → logprob: -21.25
    8. ')' → logprob: -21.75
    9. '0' → logprob: -21.75
    10. '```' → logprob: -21.875

Token 1029: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0015530710807070136
    2. ',' → logprob: -7.376553058624268
    3. ' ],' → logprob: -7.376553058624268
    4. '),' → logprob: -8.501553535461426
    5. ']):' → logprob: -9.876553535461426
    6. '   ' → logprob: -11.501553535461426
    7. ' ,' → logprob: -11.876553535461426
    8. ']' → logprob: -12.001553535461426
    9. '       ' → logprob: -12.126553535461426
    10. ']):
' → logprob: -12.251553535461426

Token 1030: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.002837918931618333
    2. ' circles' → logprob: -5.877838134765625
    3. '   ' → logprob: -10.502838134765625
    4. 'circ' → logprob: -13.002838134765625
    5. 'circle' → logprob: -13.877838134765625
    6. '       ' → logprob: -14.502838134765625
    7. 'cycles' → logprob: -14.627838134765625
    8. ')' → logprob: -14.877838134765625
    9. 'Cir' → logprob: -15.752838134765625
    10. 'c' → logprob: -15.877838134765625

Token 1031: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2018149048089981
    2. '):
' → logprob: -1.701814889907837
    3. '       ' → logprob: -8.951814651489258
    4. ')' → logprob: -9.326814651489258
    5. '   ' → logprob: -9.326814651489258
    6. '):
' → logprob: -10.451814651489258
    7. ' ):' → logprob: -10.451814651489258
    8. ',' → logprob: -10.701814651489258
    9. '           ' → logprob: -12.076814651489258
    10. ' ):
' → logprob: -12.701814651489258

Token 1032: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010568885772954673
    2. ':' → logprob: -10.000105857849121
    3. ':
' → logprob: -10.375105857849121
    4. '       ' → logprob: -11.500105857849121
    5. ',' → logprob: -11.500105857849121
    6. '          ' → logprob: -12.250105857849121
    7. '):
' → logprob: -13.375105857849121
    8. '               ' → logprob: -14.125105857849121
    9. '```' → logprob: -15.375105857849121
    10. ' and' → logprob: -15.500105857849121

Token 1033: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.267812967300415
    2. '           ' → logprob: -1.517812967300415
    3. 'graph' → logprob: -1.642812967300415
    4. 'dist' → logprob: -1.642812967300415
    5. '   ' → logprob: -2.767812967300415
    6. 'distance' → logprob: -3.767812967300415
    7. ' dist' → logprob: -4.267812728881836
    8. ' graph' → logprob: -4.767812728881836
    9. ' distance' → logprob: -6.517812728881836
    10. 'd' (adapté à ' d') → logprob: -6.517812728881836

Token 1034: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06154876574873924
    2. ' =' → logprob: -2.9365487098693848
    3. 'istance' → logprob: -5.436548709869385
    4. '   ' → logprob: -6.561548709869385
    5. 'ist' → logprob: -7.686548709869385
    6. 'ef' → logprob: -8.186549186706543
    7. ',' → logprob: -10.436549186706543
    8. '=v' → logprob: -10.436549186706543
    9. ':=' → logprob: -11.561549186706543
    10. 'e' → logprob: -11.686549186706543

Token 1035: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0019287518225610256
    2. ' dist' → logprob: -6.251928806304932
    3. '	dist' → logprob: -16.001928329467773
    4. 'math' → logprob: -17.251928329467773
    5. '(dist' → logprob: -17.501928329467773
    6. '   ' → logprob: -17.626928329467773
    7. 'distance' → logprob: -18.501928329467773
    8. 'Dist' → logprob: -18.751928329467773
    9. '.dist' → logprob: -19.001928329467773
    10. '_dist' → logprob: -19.376928329467773

Token 1036: '(vertices' (ID: 158708)
  Prédit: '(vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vertices' → logprob: -0.00016194197814911604
    2. '(' → logprob: -9.000162124633789
    3. ' (' → logprob: -10.500162124633789
    4. 'vertices' → logprob: -11.500162124633789
    5. ' vertices' → logprob: -14.625162124633789
    6. '(
' → logprob: -16.25016212463379
    7. '```' → logprob: -16.50016212463379
    8. '(v' → logprob: -17.25016212463379
    9. '(points' → logprob: -17.25016212463379
    10. '(vertex' → logprob: -17.50016212463379

Token 1037: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17985975742340088
    2. '(' → logprob: -1.8048597574234009
    3. '0' → logprob: -9.55486011505127
    4. '(vertices' → logprob: -10.67986011505127
    5. 'vertices' → logprob: -11.80486011505127
    6. ' (' → logprob: -12.67986011505127
    7. ')' → logprob: -12.67986011505127
    8. '([' → logprob: -13.17986011505127
    9. ' vertices' → logprob: -13.80486011505127
    10. '[(' → logprob: -13.80486011505127

Token 1038: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.625001907348633
    3. '[' → logprob: -15.125001907348633
    4. '(' → logprob: -16.125001907348633
    5. '   ' → logprob: -17.375001907348633
    6. 'v' → logprob: -18.000001907348633
    7. 'vertices' → logprob: -18.062501907348633
    8. '```' → logprob: -18.250001907348633
    9. '
' → logprob: -18.437501907348633
    10. '  ' → logprob: -18.500001907348633

Token 1039: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.058944012969732285
    2. '[' → logprob: -2.9339439868927
    3. ' ,' → logprob: -5.683944225311279
    4. ',v' → logprob: -7.433944225311279
    5. ')' → logprob: -10.433943748474121
    6. '[v' → logprob: -11.558943748474121
    7. '),' → logprob: -12.183943748474121
    8. ',[' → logprob: -12.308943748474121
    9. ' ' → logprob: -12.683943748474121
    10. '   ' → logprob: -13.058943748474121

Token 1040: ' vertices' (ID: 38360)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.00671809446066618
    2. ' vertices' → logprob: -5.006718158721924
    3. '   ' → logprob: -13.381717681884766
    4. '(vertices' → logprob: -14.131717681884766
    5. '.vertices' → logprob: -16.131717681884766
    6. ')' → logprob: -16.256717681884766
    7. '       ' → logprob: -16.381717681884766
    8. '           ' → logprob: -16.381717681884766
    9. ' ' → logprob: -17.506717681884766
    10. '                   ' → logprob: -17.756717681884766

Token 1041: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0019291093340143561
    2. 'v' → logprob: -6.25192928314209
    3. '[' → logprob: -14.50192928314209
    4. ' v' → logprob: -17.751928329467773
    5. ' [' → logprob: -18.126928329467773
    6. '(v' → logprob: -18.251928329467773
    7. '   ' → logprob: -18.251928329467773
    8. '0' → logprob: -18.376928329467773
    9. '
' → logprob: -18.376928329467773
    10. '[
' → logprob: -19.126928329467773

Token 1042: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.9146995327901095e-05
    2. 'id' → logprob: -11.250019073486328
    3. 'v' → logprob: -12.125019073486328
    4. 'd' → logprob: -15.250019073486328
    5. '[v' → logprob: -16.750019073486328
    6. '   ' → logprob: -17.125019073486328
    7. '[' → logprob: -17.250019073486328
    8. '0' → logprob: -17.875019073486328
    9. '```' → logprob: -17.875019073486328
    10. '_' → logprob: -18.000019073486328

Token 1043: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029761482030153275
    2. ')
' → logprob: -3.529761552810669
    3. ' )' → logprob: -12.40476131439209
    4. ')
' → logprob: -12.52976131439209
    5. ' )
' → logprob: -13.90476131439209
    6. '   ' → logprob: -14.77976131439209
    7. ')`
' → logprob: -14.90476131439209
    8. ')

' → logprob: -15.15476131439209
    9. ')+' → logprob: -15.15476131439209
    10. '           ' → logprob: -15.52976131439209

Token 1044: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0280383548888494e-06
    2. '       ' → logprob: -13.875000953674316
    3. '               ' → logprob: -17.625001907348633
    4. '   ' → logprob: -18.875001907348633
    5. '		' → logprob: -18.875001907348633
    6. '          ' → logprob: -19.125001907348633
    7. '                   ' → logprob: -21.000001907348633
    8. 'he' → logprob: -22.125001907348633
    9. '	       ' → logprob: -22.125001907348633
    10. '         ' → logprob: -22.250001907348633

Token 1045: ' graph' (ID: 7465)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.320158988237381
    2. 'graph' (adapté à ' graph') → logprob: -1.3201589584350586
    3. '       ' → logprob: -5.570158958435059
    4. '   ' → logprob: -5.820158958435059
    5. ' graph' → logprob: -9.320158958435059
    6. '	graph' → logprob: -12.445158958435059
    7. '               ' → logprob: -13.070158958435059
    8. 'he' → logprob: -14.695158958435059
    9. 'heap' → logprob: -15.695158958435059
    10. '          ' → logprob: -16.320159912109375

Token 1046: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. ' [' → logprob: -18.5
    3. '[v' → logprob: -20.0
    4. '   ' → logprob: -20.375
    5. ')[' → logprob: -21.125
    6. '```' → logprob: -21.5
    7. '0' → logprob: -21.625
    8. '[
' → logprob: -21.75
    9. '][' → logprob: -22.125
    10. '\[' → logprob: -22.125

Token 1047: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.750003814697266
    3. '   ' → logprob: -15.250003814697266
    4. 'v' → logprob: -16.125003814697266
    5. '(' → logprob: -17.000003814697266
    6. '[' → logprob: -17.625003814697266
    7. '  ' → logprob: -17.625003814697266
    8. '
' → logprob: -18.000003814697266
    9. '```' → logprob: -18.375003814697266
    10. '    ' → logprob: -18.625003814697266

Token 1048: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00012797261297237128
    2. '.append' → logprob: -9.500127792358398
    3. ').' → logprob: -10.125127792358398
    4. '.' → logprob: -12.625127792358398
    5. ' ].' → logprob: -12.625127792358398
    6. '][' → logprob: -13.250127792358398
    7. '       ' → logprob: -13.500127792358398
    8. ']' → logprob: -13.750127792358398
    9. '[' → logprob: -14.375127792358398
    10. '           ' → logprob: -14.375127792358398

Token 1049: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.0087516784551553e-05
    2. '.append' → logprob: -11.75001049041748
    3. 'app' → logprob: -13.25001049041748
    4. ' append' → logprob: -15.25001049041748
    5. '_append' → logprob: -16.500009536743164
    6. 'Append' → logprob: -17.875009536743164
    7. 'appen' → logprob: -18.625009536743164
    8. 'push' → logprob: -19.250009536743164
    9. '	append' → logprob: -20.000009536743164
    10. 'he' → logprob: -20.125009536743164

Token 1050: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.12716370820999146
    2. '(v' → logprob: -2.3771636486053467
    3. '(' → logprob: -3.6271636486053467
    4. ' (' → logprob: -12.877163887023926
    5. '   ' → logprob: -12.877163887023926
    6. '([' → logprob: -16.50216293334961
    7. '[(' → logprob: -16.75216293334961
    8. ' ' → logprob: -17.25216293334961
    9. '(V' → logprob: -17.25216293334961
    10. '(
' → logprob: -17.62716293334961

Token 1051: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: 0.0
    2. '   ' → logprob: -17.25
    3. ' v' → logprob: -17.625
    4. ')v' → logprob: -20.25
    5. '	v' → logprob: -20.5
    6. 'vj' → logprob: -23.375
    7. '$v' → logprob: -23.75
    8. '_v' → logprob: -24.25
    9. '
' → logprob: -24.25
    10. 'vq' → logprob: -24.625

Token 1052: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -3.531315314830863e-06
    2. '_' → logprob: -13.125003814697266
    3. 'id' → logprob: -14.375003814697266
    4. 'v' → logprob: -15.125003814697266
    5. 'd' → logprob: -15.625003814697266
    6. ',' → logprob: -16.125003814697266
    7. '_,' → logprob: -16.250003814697266
    8. 's' → logprob: -16.500003814697266
    9. '_d' → logprob: -16.875003814697266
    10. '2' → logprob: -17.000003814697266

Token 1053: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12705253064632416
    2. ',d' → logprob: -2.1270525455474854
    3. ' ,' → logprob: -9.002052307128906
    4. ',
' → logprob: -14.127052307128906
    5. 'd' → logprob: -15.502052307128906
    6. ',D' → logprob: -16.627052307128906
    7. '   ' → logprob: -17.002052307128906
    8. '‌,' → logprob: -17.002052307128906
    9. '           ' → logprob: -17.627052307128906
    10. ',double' → logprob: -17.752052307128906

Token 1054: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.15310683415737e-05
    2. ' d' → logprob: -10.750021934509277
    3. '           ' → logprob: -19.75002098083496
    4. ')d' → logprob: -20.75002098083496
    5. '   ' → logprob: -21.00002098083496
    6. ')' → logprob: -23.12502098083496
    7. '	d' → logprob: -23.12502098083496
    8. '               ' → logprob: -23.25002098083496
    9. '       ' → logprob: -23.37502098083496
    10. '```' → logprob: -23.62502098083496

Token 1055: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.029755808413028717
    2. '))
' → logprob: -3.5297558307647705
    3. ' ))' → logprob: -13.154755592346191
    4. '))
' → logprob: -13.279755592346191
    5. '))

' → logprob: -14.654755592346191
    6. ')' → logprob: -15.029755592346191
    7. ' ))
' → logprob: -15.029755592346191
    8. '));' → logprob: -15.529755592346191
    9. '   ' → logprob: -16.029756546020508
    10. '           ' → logprob: -16.404756546020508

Token 1056: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011692996136844158
    2. '   ' → logprob: -5.136693000793457
    3. '       ' → logprob: -5.261693000793457
    4. 'graph' → logprob: -7.761693000793457
    5. ' graph' → logprob: -9.261693000793457
    6. '	graph' → logprob: -10.761693000793457
    7. 'for' → logprob: -12.261693000793457
    8. '               ' → logprob: -12.636693000793457
    9. '<|end|>' → logprob: -13.011693000793457
    10. '    ' → logprob: -13.511693000793457

Token 1057: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.011059612035751343
    2. ' graph' → logprob: -4.511059761047363
    3. '	graph' → logprob: -11.886059761047363
    4. '   ' → logprob: -12.886059761047363
    5. '           ' → logprob: -13.136059761047363
    6. ' ' → logprob: -16.261058807373047
    7. '0' → logprob: -16.636058807373047
    8. '(graph' → logprob: -16.886058807373047
    9. '       ' → logprob: -17.136058807373047
    10. '
' → logprob: -17.761058807373047

Token 1058: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.2014138251543045
    2. '[' → logprob: -1.701413869857788
    3. '   ' → logprob: -15.326414108276367
    4. 'v' → logprob: -15.701414108276367
    5. '[u' → logprob: -16.951414108276367
    6. ')[' → logprob: -17.076414108276367
    7. '][' → logprob: -17.201414108276367
    8. ' [' → logprob: -17.326414108276367
    9. '[
' → logprob: -17.451414108276367
    10. '```' → logprob: -17.451414108276367

Token 1059: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -3.3213025744771585e-05
    2. 'v' → logprob: -10.875033378601074
    3. '[' → logprob: -12.125033378601074
    4. 'er' → logprob: -12.625033378601074
    5. 'ert' → logprob: -12.875033378601074
    6. 'id' → logprob: -14.375033378601074
    7. '_ids' → logprob: -15.000033378601074
    8. '0' → logprob: -15.000033378601074
    9. 's' → logprob: -15.250033378601074
    10. 'ersion' → logprob: -15.500033378601074

Token 1060: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.01120578870177269
    2. '.append' → logprob: -4.636205673217773
    3. '].' → logprob: -6.636205673217773
    4. '           ' → logprob: -9.886205673217773
    5. '   ' → logprob: -10.011205673217773
    6. '.' → logprob: -11.011205673217773
    7. '       ' → logprob: -11.636205673217773
    8. ')' → logprob: -11.761205673217773
    9. '[' → logprob: -13.386205673217773
    10. ' ).' → logprob: -13.636205673217773

Token 1061: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.512236498361744e-07
    2. ' append' → logprob: -14.750000953674316
    3. '.append' → logprob: -16.5
    4. 'appen' → logprob: -18.625
    5. 'app' → logprob: -19.5
    6. '	append' → logprob: -20.875
    7. '_append' → logprob: -21.75
    8. 'Append' → logprob: -22.25
    9. ' ' → logprob: -22.5
    10. '   ' → logprob: -23.0

Token 1062: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00043162284418940544
    2. '((' → logprob: -7.750431537628174
    3. ' (' → logprob: -13.875432014465332
    4. '(
' → logprob: -16.750431060791016
    5. '=(' → logprob: -19.625431060791016
    6. '([' → logprob: -19.875431060791016
    7. '("' → logprob: -20.000431060791016
    8. '```' → logprob: -20.375431060791016
    9. '   ' → logprob: -20.500431060791016
    10. '0' → logprob: -21.125431060791016

Token 1063: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.750000953674316
    3. '(' → logprob: -15.500000953674316
    4. '   ' → logprob: -17.875001907348633
    5. '
' → logprob: -20.875001907348633
    6. '[' → logprob: -21.125001907348633
    7. '۰' → logprob: -21.500001907348633
    8. '  ' → logprob: -21.875001907348633
    9. '    
' → logprob: -22.000001907348633
    10. '    ' → logprob: -22.125001907348633

Token 1064: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022022522171027958
    2. ' ,' → logprob: -8.62522029876709
    3. ',v' → logprob: -11.12522029876709
    4. ')' → logprob: -11.50022029876709
    5. '),' → logprob: -12.12522029876709
    6. ',d' → logprob: -12.37522029876709
    7. ',
' → logprob: -13.62522029876709
    8. '‌,' → logprob: -13.62522029876709
    9. '<|end|>' → logprob: -14.00022029876709
    10. ',k' → logprob: -14.87522029876709

Token 1065: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.836499985889532e-05
    2. ' d' → logprob: -9.7500581741333
    3. '           ' → logprob: -19.250059127807617
    4. '   ' → logprob: -20.250059127807617
    5. ')d' → logprob: -22.125059127807617
    6. '       ' → logprob: -22.375059127807617
    7. '	d' → logprob: -23.000059127807617
    8. '               ' → logprob: -23.125059127807617
    9. '
' → logprob: -24.000059127807617
    10. '          ' → logprob: -24.125059127807617

Token 1066: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00018363336857873946
    2. ')' → logprob: -8.750184059143066
    3. '))
' → logprob: -11.375184059143066
    4. '           ' → logprob: -12.000184059143066
    5. ' ))' → logprob: -12.375184059143066
    6. '       ' → logprob: -13.125184059143066
    7. ')))' → logprob: -14.125184059143066
    8. '   ' → logprob: -14.375184059143066
    9. '));' → logprob: -17.75018310546875
    10. ' )' → logprob: -17.75018310546875

Token 1067: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4130200147628784
    2. '#' → logprob: -1.1630200147628784
    3. '   ' → logprob: -3.663020133972168
    4. '```' → logprob: -9.663020133972168
    5. '
' → logprob: -9.913020133972168
    6. ' for' → logprob: -10.413020133972168
    7. 'v' → logprob: -12.413020133972168
    8. 'if' → logprob: -13.163020133972168
    9. ' #' → logprob: -13.788020133972168
    10. '    
' → logprob: -14.163020133972168

Token 1068: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008644713088870049
    2. '#' (adapté à ' #') → logprob: -4.7586445808410645
    3. '   ' → logprob: -11.008645057678223
    4. 'i' → logprob: -12.758645057678223
    5. 'start' → logprob: -13.133645057678223
    6. ' for' → logprob: -13.133645057678223
    7. 'if' → logprob: -13.258645057678223
    8. 'last' → logprob: -14.008645057678223
    9. 'prev' → logprob: -14.133645057678223
    10. 'def' → logprob: -14.258645057678223

Token 1069: ' Ajouter' (ID: 165754)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1807929277420044
    2. '#' → logprob: -1.8057929277420044
    3. 'start' → logprob: -7.555792808532715
    4. 'center' → logprob: -8.430792808532715
    5. 'last' → logprob: -9.305792808532715
    6. '   ' → logprob: -9.680792808532715
    7. 'i' → logprob: -9.930792808532715
    8. 'def' → logprob: -10.430792808532715
    9. 'first' → logprob: -11.055792808532715
    10. 'idx' → logprob: -11.305792808532715

Token 1070: ' ar' (ID: 646)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11855443567037582
    2. 'edges' → logprob: -2.9935543537139893
    3. 'ar' → logprob: -3.2435543537139893
    4. '#' → logprob: -4.618554592132568
    5. ' for' → logprob: -5.493554592132568
    6. 'v' → logprob: -5.868554592132568
    7. ' edges' → logprob: -5.868554592132568
    8. '(' → logprob: -7.118554592132568
    9. '   ' → logprob: -7.868554592132568
    10. 'edge' → logprob: -8.24355411529541

Token 1071: 'êtes' (ID: 23720)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.6441217660903931
    2. 'range' → logprob: -1.769121766090393
    3. 'edges' → logprob: -2.1441216468811035
    4. 'r' → logprob: -3.1441216468811035
    5. 'for' → logprob: -3.2691216468811035
    6. 'c' → logprob: -3.3941216468811035
    7. 'anges' → logprob: -3.7691216468811035
    8. '_edges' → logprob: -4.1441216468811035
    9. '[' → logprob: -4.3941216468811035
    10. 'ange' → logprob: -4.5191216468811035

Token 1072: ' entre' (ID: 3853)
  Prédit: 'between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'between' → logprob: -0.07604668289422989
    2. 'for' → logprob: -3.7010467052459717
    3. '_between' → logprob: -3.7010467052459717
    4. 'entre' → logprob: -4.826046466827393
    5. ' between' → logprob: -4.826046466827393
    6. ' entre' → logprob: -5.326046466827393
    7. 'pour' → logprob: -6.326046466827393
    8. 'from' → logprob: -8.20104694366455
    9. '[' → logprob: -8.82604694366455
    10. ' между' → logprob: -8.95104694366455

Token 1073: ' centres' (ID: 43504)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.36218324303627014
    2. 'vertices' → logprob: -1.8621832132339478
    3. '0' → logprob: -2.2371833324432373
    4. '2' → logprob: -3.3621833324432373
    5. '4' → logprob: -5.362183094024658
    6. ' ' → logprob: -6.987183094024658
    7. ' vertices' → logprob: -8.112183570861816
    8. '   ' → logprob: -8.237183570861816
    9. 'i' → logprob: -8.862183570861816
    10. '#' → logprob: -8.862183570861816

Token 1074: ' et' (ID: 859)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20027033984661102
    2. '1' → logprob: -2.075270414352417
    3. ' ' → logprob: -3.575270414352417
    4. ' [' → logprob: -3.950270414352417
    5. '   ' → logprob: -5.575270175933838
    6. '[-' → logprob: -5.950270175933838
    7. 'n' → logprob: -7.450270175933838
    8. '0' → logprob: -7.950270175933838
    9. '```' → logprob: -7.950270175933838
    10. '2' → logprob: -8.200270652770996

Token 1075: ' points' (ID: 5571)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.028983477503061295
    2. 'vertices' → logprob: -4.1539835929870605
    3. '1' → logprob: -4.6539835929870605
    4. ' [' → logprob: -5.9039835929870605
    5. ' vertices' → logprob: -7.7789835929870605
    6. ' ' → logprob: -8.778983116149902
    7. '   ' → logprob: -11.028983116149902
    8. '[
' → logprob: -11.528983116149902
    9. '0' → logprob: -12.278983116149902
    10. '#' → logprob: -13.403983116149902

Token 1076: ' d' (ID: 272)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2913237512111664
    2. 'of' → logprob: -1.4163237810134888
    3. '   ' → logprob: -5.291323661804199
    4. 'de' → logprob: -5.916323661804199
    5. '_of' → logprob: -7.041323661804199
    6. ' of' → logprob: -7.166323661804199
    7. 'd' → logprob: -8.6663236618042
    8. '```' → logprob: -8.7913236618042
    9. '1' → logprob: -9.0413236618042
    10. '2' → logprob: -9.9163236618042

Token 1077: ''inter' (ID: 55731)
  Prédit: '_inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.6369856595993042
    2. 'inter' → logprob: -1.0119856595993042
    3. '[-' → logprob: -2.8869857788085938
    4. '[' → logprob: -3.0119857788085938
    5. '(inter' → logprob: -7.761985778808594
    6. 'id' → logprob: -8.011985778808594
    7. ''inter' → logprob: -8.011985778808594
    8. '```' → logprob: -8.136985778808594
    9. '_id' → logprob: -8.261985778808594
    10. 'intersection' → logprob: -8.511985778808594

Token 1078: 'sections' (ID: 52783)
  Prédit: 'section'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.008749190717935562
    2. 'sections' → logprob: -4.758749008178711
    3. 's' → logprob: -10.008749008178711
    4. 'intersection' → logprob: -10.758749008178711
    5. 'ter' → logprob: -11.133749008178711
    6. 'er' → logprob: -11.258749008178711
    7. 't' → logprob: -11.508749008178711
    8. '[' → logprob: -12.383749008178711
    9. '```' → logprob: -13.008749008178711
    10. '3' → logprob: -13.008749008178711

Token 1079: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7812427878379822
    2. 'de' → logprob: -1.031242847442627
    3. '#' → logprob: -2.781242847442627
    4. '   ' → logprob: -3.031242847442627
    5. ' de' → logprob: -3.406242847442627
    6. 'of' → logprob: -4.281242847442627
    7. ' of' → logprob: -4.406242847442627
    8. 'du' → logprob: -4.906242847442627
    9. 'vertices' → logprob: -6.156242847442627
    10. 'for' → logprob: -6.281242847442627

Token 1080: ' cercle' (ID: 172399)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.4410803020000458
    2. '[' → logprob: -1.1910803318023682
    3. ' vertices' → logprob: -4.441080093383789
    4. '[n' → logprob: -4.691080093383789
    5. '1' → logprob: -4.691080093383789
    6. ' [' → logprob: -5.191080093383789
    7. '[-' → logprob: -5.691080093383789
    8. '
' → logprob: -5.941080093383789
    9. '(vertices' → logprob: -5.941080093383789
    10. ' ' → logprob: -6.191080093383789

Token 1081: ' n' (ID: 297)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6121246814727783
    2. '[-' → logprob: -1.9871246814727783
    3. '[' → logprob: -2.4871246814727783
    4. ' ' → logprob: -2.6121246814727783
    5. '-' → logprob: -3.3621246814727783
    6. 'E' → logprob: -3.7371246814727783
    7. '[E' → logprob: -4.237124443054199
    8. ' [' → logprob: -4.237124443054199
    9. ' (' → logprob: -4.612124443054199
    10. '2' → logprob: -4.737124443054199

Token 1082: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00032962486147880554
    2. '1' → logprob: -9.000329971313477
    3. '[-' → logprob: -9.000329971313477
    4. '```' → logprob: -9.750329971313477
    5. ' -' → logprob: -11.625329971313477
    6. '#' → logprob: -12.125329971313477
    7. '[' → logprob: -13.000329971313477
    8. '−' → logprob: -13.250329971313477
    9. '-
' → logprob: -13.875329971313477
    10. '2' → logprob: -14.000329971313477

Token 1083: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007268482004292309
    2. '2' → logprob: -7.250726699829102
    3. '```' → logprob: -12.000726699829102
    4. '-' → logprob: -12.250726699829102
    5. ' ' → logprob: -12.875726699829102
    6. '
' → logprob: -13.750726699829102
    7. '4' → logprob: -13.875726699829102
    8. '3' → logprob: -14.625726699829102
    9. '0' → logprob: -15.500726699829102
    10. '#' → logprob: -15.563226699829102

Token 1084: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02809116616845131
    2. '[-' → logprob: -4.153090953826904
    3. '1' → logprob: -5.028090953826904
    4. '   ' → logprob: -6.028090953826904
    5. '#' → logprob: -6.403090953826904
    6. ' ' → logprob: -8.153091430664062
    7. 'vertices' → logprob: -8.278091430664062
    8. 'for' → logprob: -8.778091430664062
    9. ' [' → logprob: -8.903091430664062
    10. '```' → logprob: -9.278091430664062

Token 1085: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.41735389828681946
    2. 'for' → logprob: -1.292353868484497
    3. '0' → logprob: -3.167353868484497
    4. '   ' → logprob: -4.292354106903076
    5. ' for' → logprob: -6.542354106903076
    6. '
' → logprob: -6.667354106903076
    7. '2' → logprob: -6.667354106903076
    8. '1' → logprob: -7.042354106903076
    9. '#' → logprob: -7.042354106903076
    10. 'v' → logprob: -7.292354106903076

Token 1086: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008814762346446514
    2. ' for' → logprob: -4.883814811706543
    3. 'if' → logprob: -7.008814811706543
    4. '[' → logprob: -9.258814811706543
    5. 'v' → logprob: -9.508814811706543
    6. 'n' → logprob: -10.633814811706543
    7. '```' → logprob: -10.633814811706543
    8. 'range' → logprob: -11.133814811706543
    9. '2' → logprob: -11.258814811706543
    10. ' if' → logprob: -11.383814811706543

Token 1087: ' Le' (ID: 2018)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004933410091325641
    2. 'last' → logprob: -7.87549352645874
    3. 'end' → logprob: -10.000493049621582
    4. ' for' → logprob: -10.250493049621582
    5. '#' → logprob: -11.125493049621582
    6. 'if' → logprob: -11.750493049621582
    7. 'start' → logprob: -12.625493049621582
    8. 'n' → logprob: -12.625493049621582
    9. 'v' → logprob: -14.000493049621582
    10. 'first' → logprob: -14.750493049621582

Token 1088: ' centre' (ID: 13268)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09470872581005096
    2. '1' → logprob: -2.4697086811065674
    3. '#' → logprob: -6.0947089195251465
    4. 'last' → logprob: -6.8447089195251465
    5. ' for' → logprob: -7.3447089195251465
    6. 'center' → logprob: -7.5947089195251465
    7. 'n' → logprob: -7.7197089195251465
    8. 'def' → logprob: -8.844708442687988
    9. 'end' → logprob: -8.969708442687988
    10. 'v' → logprob: -9.094708442687988

Token 1089: ' n' (ID: 297)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004649661015719175
    2. ' ' → logprob: -5.629649639129639
    3. '[' → logprob: -7.754649639129639
    4. 'n' → logprob: -8.504650115966797
    5. '
' → logprob: -8.754650115966797
    6. '   ' → logprob: -9.629650115966797
    7. '#' → logprob: -9.879650115966797
    8. '[-' → logprob: -10.254650115966797
    9. '(' → logprob: -10.879650115966797
    10. '_id' → logprob: -11.004650115966797

Token 1090: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0008364312816411257
    2. '1' → logprob: -7.250836372375488
    3. '#' → logprob: -10.375836372375488
    4. '   ' → logprob: -10.500836372375488
    5. '[-' → logprob: -10.500836372375488
    6. ' -' → logprob: -10.875836372375488
    7. '[' → logprob: -11.875836372375488
    8. '2' → logprob: -12.625836372375488
    9. '
' → logprob: -13.375836372375488
    10. 'n' → logprob: -13.375836372375488

Token 1091: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -13.000005722045898
    3. '#' → logprob: -13.375005722045898
    4. '```' → logprob: -14.125005722045898
    5. '-' → logprob: -15.000005722045898
    6. '!' → logprob: -15.625005722045898
    7. '
' → logprob: -15.750005722045898
    8. '   ' → logprob: -16.1250057220459
    9. '2' → logprob: -16.3750057220459
    10. '[' → logprob: -16.5000057220459

Token 1092: ' est' (ID: 893)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2644164562225342
    2. 'est' → logprob: -2.639416456222534
    3. ' est' → logprob: -2.764416456222534
    4. 'id' → logprob: -3.639416456222534
    5. 'is' → logprob: -4.014416694641113
    6. ' =' → logprob: -4.514416694641113
    7. '0' → logprob: -4.764416694641113
    8. '_id' → logprob: -4.764416694641113
    9. '#' → logprob: -5.014416694641113
    10. '=' → logprob: -5.264416694641113

Token 1093: ' le' (ID: 505)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020532844064291567
    2. ' ' → logprob: -8.625205039978027
    3. 'vertices' → logprob: -10.750205039978027
    4. 'vertex' → logprob: -12.875205039978027
    5. ' vertices' → logprob: -14.125205039978027
    6. '   ' → logprob: -14.375205039978027
    7. '    ' → logprob: -16.000205993652344
    8. '  ' → logprob: -16.375205993652344
    9. ' vertex' → logprob: -16.625205993652344
    10. '     ' → logprob: -16.875205993652344

Token 1094: ' vertex' (ID: 25363)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. 'vertex' → logprob: -13.875001907348633
    3. ' ' → logprob: -14.125001907348633
    4. '   ' → logprob: -17.375001907348633
    5. 'vertices' → logprob: -17.625001907348633
    6. 'user' → logprob: -18.250001907348633
    7. '  ' → logprob: -19.875001907348633
    8. 'import' → logprob: -19.875001907348633
    9. ' vertex' → logprob: -20.000001907348633
    10. '```' → logprob: -20.250001907348633

Token 1095: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.250005722045898
    3. '   ' → logprob: -14.625005722045898
    4. '```' → logprob: -17.2500057220459
    5. '<|end|>' → logprob: -17.3750057220459
    6. 'import' → logprob: -17.5000057220459
    7. '  ' → logprob: -18.1250057220459
    8. '[' → logprob: -18.3750057220459
    9. '۱' → logprob: -19.0000057220459
    10. '    ' → logprob: -19.0000057220459

Token 1096: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '<|end|>' → logprob: -19.375
    4. '۱' → logprob: -20.125
    5. '```' → logprob: -20.25
    6. '   ' → logprob: -20.5
    7. '[' → logprob: -20.625
    8. '১' → logprob: -21.125
    9. '१' → logprob: -21.5
    10. '
' → logprob: -21.6875

Token 1097: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.049332015216350555
    2. ',' → logprob: -3.6743319034576416
    3. ' for' → logprob: -4.299332141876221
    4. '   ' → logprob: -6.174332141876221
    5. ' =' → logprob: -6.299332141876221
    6. 'v' → logprob: -6.549332141876221
    7. '=' → logprob: -6.799332141876221
    8. 'n' → logprob: -7.299332141876221
    9. '
' → logprob: -7.799332141876221
    10. '#' → logprob: -8.049331665039062

Token 1098: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02594875730574131
    2. 'last' → logprob: -4.525948524475098
    3. 'first' → logprob: -5.525948524475098
    4. 'inter' → logprob: -6.025948524475098
    5. ' for' → logprob: -6.400948524475098
    6. 'start' → logprob: -6.525948524475098
    7. 'offset' → logprob: -6.650948524475098
    8. '#' → logprob: -7.025948524475098
    9. 'p' → logprob: -7.025948524475098
    10. 'idx' → logprob: -7.400948524475098

Token 1099: ' points' (ID: 5571)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6154760718345642
    2. 'last' → logprob: -1.615476131439209
    3. 'points' → logprob: -1.990476131439209
    4. 'inter' → logprob: -2.990476131439209
    5. 'v' → logprob: -3.615476131439209
    6. 'p' → logprob: -4.490476131439209
    7. 'n' → logprob: -5.240476131439209
    8. 'id' → logprob: -5.240476131439209
    9. '#' → logprob: -5.365476131439209
    10. 'pts' → logprob: -5.615476131439209

Token 1100: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03610244765877724
    2. 'of' → logprob: -3.786102533340454
    3. '_id' → logprob: -5.036102294921875
    4. ' d' → logprob: -6.036102294921875
    5. 'de' → logprob: -6.536102294921875
    6. '_d' → logprob: -7.036102294921875
    7. '_of' → logprob: -7.536102294921875
    8. ' of' → logprob: -8.036102294921875
    9. '[' → logprob: -8.786102294921875
    10. '_ids' → logprob: -9.411102294921875

Token 1101: ''inter' (ID: 55731)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.5039356350898743
    2. 'intersection' → logprob: -1.0039355754852295
    3. ''inter' → logprob: -4.253935813903809
    4. '_inter' → logprob: -4.253935813903809
    5. 'interaction' → logprob: -7.628935813903809
    6. '```' → logprob: -9.128935813903809
    7. 'id' → logprob: -9.128935813903809
    8. '(inter' → logprob: -9.378935813903809
    9. '[' → logprob: -9.878935813903809
    10. 'int' → logprob: -10.253935813903809

Token 1102: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.2591995596885681
    2. 'er' → logprob: -2.134199619293213
    3. 'ter' → logprob: -2.759199619293213
    4. 'rest' → logprob: -3.884199619293213
    5. 'intersection' → logprob: -4.259199619293213
    6. 't' → logprob: -5.009199619293213
    7. 'inter' → logprob: -6.384199619293213
    8. 'sections' → logprob: -7.009199619293213
    9. 'erse' → logprob: -8.134199142456055
    10. '[' → logprob: -8.509199142456055

Token 1103: ' entre' (ID: 3853)
  Prédit: 'between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'between' → logprob: -0.882871150970459
    2. 'entre' → logprob: -1.007871150970459
    3. '_id' → logprob: -2.632871150970459
    4. ' entre' → logprob: -3.132871150970459
    5. 'for' → logprob: -3.507871150970459
    6. 'de' → logprob: -3.632871150970459
    7. ' between' → logprob: -4.507871150970459
    8. 'of' → logprob: -4.882871150970459
    9. 'v' → logprob: -5.382871150970459
    10. 'in' → logprob: -5.507871150970459

Token 1104: ' C' (ID: 363)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.1908770501613617
    2. ' vertices' → logprob: -1.815877079963684
    3. 'cir' → logprob: -4.6908769607543945
    4. ' circles' → logprob: -7.5658769607543945
    5. '(vertices' → logprob: -7.6908769607543945
    6. ' ' → logprob: -8.190876960754395
    7. '2' → logprob: -8.940876960754395
    8. 'circle' → logprob: -9.190876960754395
    9. 'circ' → logprob: -9.190876960754395
    10. '   ' → logprob: -9.315876960754395

Token 1105: '_{' (ID: 22305)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23906774818897247
    2. '2' → logprob: -2.614067792892456
    3. '-(' → logprob: -3.114067792892456
    4. '(' → logprob: -3.364067792892456
    5. '-E' → logprob: -4.364067554473877
    6. 'E' → logprob: -4.489067554473877
    7. '(-' → logprob: -4.614067554473877
    8. '(E' → logprob: -5.239067554473877
    9. 'vertices' → logprob: -5.489067554473877
    10. '(n' → logprob: -5.614067554473877

Token 1106: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7407419681549072
    2. '-' → logprob: -1.3657419681549072
    3. '(n' → logprob: -1.4907419681549072
    4. '2' → logprob: -4.115741729736328
    5. '1' → logprob: -4.365741729736328
    6. '(' → logprob: -5.740741729736328
    7. 'len' → logprob: -5.740741729736328
    8. '(E' → logprob: -6.865741729736328
    9. '
' → logprob: -7.115741729736328
    10. '0' → logprob: -7.365741729736328

Token 1107: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0035732227843254805
    2. '1' → logprob: -6.253573417663574
    3. '2' → logprob: -6.628573417663574
    4. '(n' → logprob: -9.253573417663574
    5. 'n' → logprob: -9.628573417663574
    6. ' -' → logprob: -10.503573417663574
    7. '-(' → logprob: -11.003573417663574
    8. '#' → logprob: -11.253573417663574
    9. '-
' → logprob: -11.378573417663574
    10. '(-' → logprob: -11.378573417663574

Token 1108: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1607363522052765
    2. '1' → logprob: -1.910736322402954
    3. '3' → logprob: -8.660736083984375
    4. ' ' → logprob: -8.785736083984375
    5. '-' → logprob: -10.223236083984375
    6. '   ' → logprob: -10.473236083984375
    7. '0' → logprob: -11.098236083984375
    8. '
' → logprob: -11.160736083984375
    9. '#' → logprob: -11.223236083984375
    10. '```' → logprob: -11.285736083984375

Token 1109: '}' (ID: 92)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4923442006111145
    2. '+' → logprob: -1.4923441410064697
    3. ',' → logprob: -2.9923441410064697
    4. ']' → logprob: -3.8673441410064697
    5. '],' → logprob: -3.9923441410064697
    6. '}' → logprob: -4.492344379425049
    7. ' *' → logprob: -4.492344379425049
    8. '},' → logprob: -4.492344379425049
    9. ' +' → logprob: -4.742344379425049
    10. ' and' → logprob: -4.992344379425049

Token 1110: ' et' (ID: 859)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.48638248443603516
    2. ' and' → logprob: -1.1113824844360352
    3. ',' → logprob: -3.861382484436035
    4. ' et' → logprob: -4.361382484436035
    5. '+' → logprob: -4.736382484436035
    6. 'et' → logprob: -5.486382484436035
    7. ' are' → logprob: -5.861382484436035
    8. 'are' → logprob: -6.611382484436035
    9. '2' → logprob: -6.986382484436035
    10. ']' → logprob: -7.361382484436035

Token 1111: ' C' (ID: 363)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.023281820118427277
    2. ' vertices' → logprob: -4.273282051086426
    3. 'cir' → logprob: -5.023282051086426
    4. '(vertices' → logprob: -6.398282051086426
    5. '   ' → logprob: -9.148282051086426
    6. '(' → logprob: -9.398282051086426
    7. ' ' → logprob: -9.523282051086426
    8. 'verts' → logprob: -9.523282051086426
    9. 'circ' → logprob: -9.523282051086426
    10. '#' → logprob: -9.648282051086426

Token 1112: '_{' (ID: 22305)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6033252477645874
    2. '-' → logprob: -1.1033252477645874
    3. '(n' → logprob: -2.978325366973877
    4. '(' → logprob: -3.478325366973877
    5. 'n' → logprob: -3.978325366973877
    6. '(-' → logprob: -4.728325366973877
    7. ' ' → logprob: -4.978325366973877
    8. '[-' → logprob: -6.478325366973877
    9. ' -' → logprob: -7.228325366973877
    10. ' (' → logprob: -7.603325366973877

Token 1113: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01993909291923046
    2. '(n' → logprob: -4.269938945770264
    3. '(' → logprob: -6.019938945770264
    4. '1' → logprob: -6.769938945770264
    5. '-' → logprob: -6.769938945770264
    6. '2' → logprob: -7.519938945770264
    7. ' n' → logprob: -9.019939422607422
    8. 'len' → logprob: -10.019939422607422
    9. '
' → logprob: -10.019939422607422
    10. 'E' → logprob: -10.144939422607422

Token 1114: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005579979158937931
    2. '1' → logprob: -5.255579948425293
    3. ' -' → logprob: -9.630579948425293
    4. 'E' → logprob: -9.755579948425293
    5. '0' → logprob: -10.005579948425293
    6. '
' → logprob: -10.255579948425293
    7. 'vertices' → logprob: -10.255579948425293
    8. 'n' → logprob: -11.130579948425293
    9. '#' → logprob: -11.130579948425293
    10. '   ' → logprob: -11.255579948425293

Token 1115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.636475493200123e-05
    2. '2' → logprob: -10.125076293945312
    3. '3' → logprob: -10.750076293945312
    4. ' ' → logprob: -11.250076293945312
    5. '   ' → logprob: -15.000076293945312
    6. '```' → logprob: -15.625076293945312
    7. '0' → logprob: -15.687576293945312
    8. '
' → logprob: -15.937576293945312
    9. '  ' → logprob: -16.312576293945312
    10. 'for' → logprob: -16.812576293945312

Token 1116: '}' (ID: 92)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020568285137414932
    2. ' sont' → logprob: -4.270568370819092
    3. 'are' → logprob: -6.145568370819092
    4. ' are' → logprob: -6.270568370819092
    5. 's' → logprob: -6.770568370819092
    6. ')' → logprob: -8.145567893981934
    7. ' ]' → logprob: -8.645567893981934
    8. '   ' → logprob: -9.520567893981934
    9. ',' → logprob: -9.770567893981934
    10. '#' → logprob: -9.770567893981934

Token 1117: ' sont' (ID: 5242)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.4352639317512512
    2. 'for' → logprob: -1.4352638721466064
    3. 'are' → logprob: -2.9352638721466064
    4. ' for' → logprob: -2.9352638721466064
    5. '   ' → logprob: -5.4352641105651855
    6. ' sont' → logprob: -5.8102641105651855
    7. '[' → logprob: -8.310263633728027
    8. ' ' → logprob: -8.810263633728027
    9. 'v' → logprob: -8.935263633728027
    10. ' =' → logprob: -9.060263633728027

Token 1118: ' vertices' (ID: 38360)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.3195536732673645
    2. '[' → logprob: -1.3195536136627197
    3. '[len' → logprob: -5.944553852081299
    4. '[E' → logprob: -6.194553852081299
    5. '[n' → logprob: -6.944553852081299
    6. '[(' → logprob: -8.06955337524414
    7. ' [' → logprob: -8.94455337524414
    8. '[v' → logprob: -9.44455337524414
    9. 'vertices' → logprob: -10.19455337524414
    10. '[e' → logprob: -10.31955337524414

Token 1119: ' ' (ID: 220)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.3281059265136719
    2. '[E' → logprob: -1.3281059265136719
    3. '[' → logprob: -4.453105926513672
    4. '[len' → logprob: -5.953105926513672
    5. 'E' → logprob: -8.453105926513672
    6. '-' → logprob: -9.578105926513672
    7. '[
' → logprob: -9.703105926513672
    8. '2' → logprob: -10.203105926513672
    9. ' [' → logprob: -10.203105926513672
    10. '[(' → logprob: -10.578105926513672

Token 1120: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.15376755595207214
    2. 'len' → logprob: -2.7787675857543945
    3. '-' → logprob: -2.9037675857543945
    4. 'E' → logprob: -4.1537675857543945
    5. '(' → logprob: -5.1537675857543945
    6. '(E' → logprob: -6.5287675857543945
    7. '[-' → logprob: -7.1537675857543945
    8. '4' → logprob: -7.6537675857543945
    9. '-E' → logprob: -7.9037675857543945
    10. '(len' → logprob: -8.403767585754395

Token 1121: '(n' (ID: 2406)
  Prédit: '*n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.5018924474716187
    2. '*(' → logprob: -1.0018924474716187
    3. '*' → logprob: -3.626892566680908
    4. ' *' → logprob: -7.626892566680908
    5. 'n' → logprob: -8.37689208984375
    6. '(n' → logprob: -9.37689208984375
    7. 'E' → logprob: -11.50189208984375
    8. '(E' → logprob: -12.62689208984375
    9. '*num' → logprob: -12.75189208984375
    10. '
' → logprob: -13.00189208984375

Token 1122: '-' (ID: 12)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.47454556822776794
    2. '*n' → logprob: -0.9745455980300903
    3. '*' → logprob: -7.724545478820801
    4. '(n' → logprob: -11.4745454788208
    5. ' *' → logprob: -11.8495454788208
    6. 'n' → logprob: -12.5995454788208
    7. '*((' → logprob: -13.0995454788208
    8. '*N' → logprob: -13.5995454788208
    9. '*(-' → logprob: -14.2245454788208
    10. '**' → logprob: -14.7245454788208

Token 1123: '2' (ID: 17)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.37995508313179016
    2. '(' → logprob: -1.8799550533294678
    3. '(E' → logprob: -3.0049550533294678
    4. '2' → logprob: -3.5049550533294678
    5. 'n' → logprob: -3.7549550533294678
    6. '1' → logprob: -3.7549550533294678
    7. '4' → logprob: -4.254955291748047
    8. '3' → logprob: -4.629955291748047
    9. '-' → logprob: -5.504955291748047
    10. '(len' → logprob: -6.004955291748047

Token 1124: ')' (ID: 8)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.5810492634773254
    2. ',' → logprob: -1.4560492038726807
    3. '+' → logprob: -1.9560492038726807
    4. ')' → logprob: -3.3310492038726807
    5. ' ,' → logprob: -4.95604944229126
    6. ' +' → logprob: -5.08104944229126
    7. '],' → logprob: -5.33104944229126
    8. ' ),' → logprob: -5.45604944229126
    9. '   ' → logprob: -5.83104944229126
    10. '4' → logprob: -6.70604944229126

Token 1125: ' et' (ID: 859)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0060241222381592
    2. 'and' → logprob: -1.5060241222381592
    3. ' and' → logprob: -1.5060241222381592
    4. ',' → logprob: -1.7560241222381592
    5. ' +' → logprob: -4.756024360656738
    6. '   ' → logprob: -5.256024360656738
    7. ' ,' → logprob: -5.631024360656738
    8. ' ' → logprob: -8.756024360656738
    9. '2' → logprob: -8.881024360656738
    10. ',
' → logprob: -9.256024360656738

Token 1126: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.4741685092449188
    2. '2' → logprob: -0.9741685390472412
    3. ' ' → logprob: -9.34916877746582
    4. '   ' → logprob: -12.84916877746582
    5. '(' → logprob: -13.22416877746582
    6. '  ' → logprob: -16.72416877746582
    7. '```' → logprob: -18.97416877746582
    8. '
' → logprob: -19.47416877746582
    9. '    
' → logprob: -19.97416877746582
    10. ' (' → logprob: -20.22416877746582

Token 1127: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002533528604544699
    2. '(' → logprob: -8.625253677368164
    3. ' ' → logprob: -9.625253677368164
    4. '3' → logprob: -12.125253677368164
    5. '   ' → logprob: -13.250253677368164
    6. ' (' → logprob: -15.500253677368164
    7. '  ' → logprob: -16.000253677368164
    8. '```' → logprob: -16.500253677368164
    9. '
' → logprob: -16.625253677368164
    10. '`' → logprob: -18.000253677368164

Token 1128: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.019571863114833832
    2. 'n' → logprob: -4.144571781158447
    3. '(E' → logprob: -6.644571781158447
    4. '(' → logprob: -7.144571781158447
    5. '*(' → logprob: -7.769571781158447
    6. ' (' → logprob: -7.894571781158447
    7. '*n' → logprob: -8.269572257995605
    8. 'E' → logprob: -8.519572257995605
    9. '((' → logprob: -10.019572257995605
    10. '*' → logprob: -10.019572257995605

Token 1129: '-' (ID: 12)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.08110587298870087
    2. '(n' → logprob: -2.581105947494507
    3. '*n' → logprob: -6.706105709075928
    4. '*' → logprob: -6.956105709075928
    5. 'n' → logprob: -10.831106185913086
    6. '(' → logprob: -11.706106185913086
    7. '
' → logprob: -12.331106185913086
    8. '(*' → logprob: -13.581106185913086
    9. '**' → logprob: -13.706106185913086
    10. '*((' → logprob: -14.456106185913086

Token 1130: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23296856880187988
    2. '(n' → logprob: -2.35796856880188
    3. '(' → logprob: -2.98296856880188
    4. '3' → logprob: -3.10796856880188
    5. '-' → logprob: -4.857968330383301
    6. 'n' → logprob: -5.357968330383301
    7. '2' → logprob: -5.857968330383301
    8. '(E' → logprob: -6.607968330383301
    9. '4' → logprob: -7.982968330383301
    10. 'len' → logprob: -8.2329683303833

Token 1131: ')+' (ID: 16161)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002664361847564578
    2. ' +' → logprob: -6.002664566040039
    3. '+
' → logprob: -8.877664566040039
    4. '4' → logprob: -11.002664566040039
    5. '+(' → logprob: -11.127664566040039
    6. '
' → logprob: -12.252664566040039
    7. ',' → logprob: -13.252664566040039
    8. '3' → logprob: -13.502664566040039
    9. ')+' → logprob: -13.627664566040039
    10. '+,' → logprob: -13.627664566040039

Token 1132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.709308167453855e-05
    2. '4' → logprob: -10.000086784362793
    3. '3' → logprob: -10.750086784362793
    4. '2' → logprob: -11.125086784362793
    5. ' ' → logprob: -12.750086784362793
    6. '5' → logprob: -13.125086784362793
    7. '7' → logprob: -15.125086784362793
    8. '   ' → logprob: -16.00008773803711
    9. '
' → logprob: -17.18758773803711
    10. '```' → logprob: -17.56258773803711

Token 1133: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4301437735557556
    2. 'for' → logprob: -1.5551438331604004
    3. ',' → logprob: -2.6801438331604004
    4. '
' → logprob: -3.0551438331604004
    5. ' for' → logprob: -4.5551438331604
    6. ',
' → logprob: -6.3051438331604
    7. '```' → logprob: -6.4301438331604
    8. ':' → logprob: -6.5551438331604
    9. ':
' → logprob: -6.8051438331604
    10. ' ,' → logprob: -6.9301438331604

Token 1134: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05744762718677521
    2. '   ' → logprob: -3.682447671890259
    3. 'start' → logprob: -4.68244743347168
    4. 'v' → logprob: -4.80744743347168
    5. 'last' → logprob: -5.05744743347168
    6. ' for' → logprob: -5.43244743347168
    7. 'idx' → logprob: -7.05744743347168
    8. 'end' → logprob: -8.18244743347168
    9. '```' → logprob: -8.43244743347168
    10. 'if' → logprob: -8.80744743347168

Token 1135: ' last' (ID: 2174)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007951545529067516
    2. 'start' → logprob: -5.507951736450195
    3. 'v' → logprob: -6.257951736450195
    4. 'last' (adapté à ' last') → logprob: -7.257951736450195
    5. 'i' → logprob: -7.632951736450195
    6. 'idx' → logprob: -8.132951736450195
    7. 'end' → logprob: -9.132951736450195
    8. ' for' → logprob: -9.257951736450195
    9. 'a' → logprob: -9.257951736450195
    10. 'u' → logprob: -10.132951736450195

Token 1136: '_i' (ID: 10853)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.8544940948486328
    2. '_vertices' → logprob: -2.104494094848633
    3. '2' → logprob: -2.479494094848633
    4. '_index' → logprob: -2.604494094848633
    5. '_vertex' → logprob: -2.854494094848633
    6. '_c' → logprob: -2.854494094848633
    7. '_idx' → logprob: -2.979494094848633
    8. '_' → logprob: -2.979494094848633
    9. '_points' → logprob: -3.104494094848633
    10. '_n' → logprob: -3.229494094848633

Token 1137: '1' (ID: 16)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04065690189599991
    2. 'dx' → logprob: -3.290656805038452
    3. ' =' → logprob: -6.290657043457031
    4. '=' → logprob: -7.665657043457031
    5. 'nd' → logprob: -8.665657043457031
    6. 'D' → logprob: -9.415657043457031
    7. '_dx' → logprob: -11.290657043457031
    8. '_d' → logprob: -11.540657043457031
    9. 'Dx' → logprob: -12.665657043457031
    10. 'ds' → logprob: -12.790657043457031

Token 1138: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6336890459060669
    2. 'd' → logprob: -0.8836890459060669
    3. ' =' → logprob: -2.8836889266967773
    4. 'D' → logprob: -9.133688926696777
    5. 'dx' → logprob: -10.008688926696777
    6. 'nd' → logprob: -11.633688926696777
    7. '1' → logprob: -12.508688926696777
    8. 'n' → logprob: -12.633688926696777
    9. ',' → logprob: -13.008688926696777
    10. '_' → logprob: -13.133688926696777

Token 1139: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3782830137643032e-05
    2. ' ' → logprob: -11.37501335144043
    3. '   ' → logprob: -14.12501335144043
    4. '-' → logprob: -14.37501335144043
    5. 'len' → logprob: -14.50001335144043
    6. '(' → logprob: -15.00001335144043
    7. '[' → logprob: -16.87501335144043
    8. '```' → logprob: -17.12501335144043
    9. '1' → logprob: -17.25001335144043
    10. '  ' → logprob: -17.75001335144043

Token 1140: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.843177233240567e-05
    2. ' ' → logprob: -11.125018119812012
    3. 'len' → logprob: -13.250018119812012
    4. '(' → logprob: -14.375018119812012
    5. '1' → logprob: -14.625018119812012
    6. '   ' → logprob: -14.750018119812012
    7. '-' → logprob: -16.000019073486328
    8. 'E' → logprob: -16.375019073486328
    9. '0' → logprob: -17.125019073486328
    10. '4' → logprob: -17.625019073486328

Token 1141: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.10278783738613129
    2. '*' → logprob: -2.352787733078003
    3. '(n' → logprob: -6.102787971496582
    4. ' *' → logprob: -8.602787971496582
    5. '*n' → logprob: -8.977787971496582
    6. '+' → logprob: -10.477787971496582
    7. '(' → logprob: -14.227787971496582
    8. ' +' → logprob: -14.227787971496582
    9. '*((' → logprob: -14.352787971496582
    10. '*
' → logprob: -14.977787971496582

Token 1142: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2519531846046448
    2. 'n' → logprob: -1.501953125
    3. ' (' → logprob: -11.001953125
    4. '(' → logprob: -12.501953125
    5. ' n' → logprob: -13.376953125
    6. '((' → logprob: -14.126953125
    7. '_n' → logprob: -15.251953125
    8. '[n' → logprob: -15.251953125
    9. '   ' → logprob: -15.876953125
    10. '
' → logprob: -16.126953125

Token 1143: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002997078001499176
    2. ' -' → logprob: -6.502996921539307
    3. '(n' → logprob: -7.002996921539307
    4. '2' → logprob: -7.627996921539307
    5. 'n' → logprob: -10.127997398376465
    6. '(' → logprob: -10.627997398376465
    7. '3' → logprob: -11.627997398376465
    8. '
' → logprob: -12.002997398376465
    9. '1' → logprob: -12.377997398376465
    10. '```' → logprob: -12.502997398376465

Token 1144: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.97155623533763e-05
    2. '3' → logprob: -9.750089645385742
    3. '1' → logprob: -11.000089645385742
    4. '-' → logprob: -11.750089645385742
    5. '   ' → logprob: -12.625089645385742
    6. ' ' → logprob: -12.875089645385742
    7. '  ' → logprob: -15.000089645385742
    8. '```' → logprob: -15.750089645385742
    9. '(' → logprob: -16.125089645385742
    10. '
' → logprob: -16.250089645385742

Token 1145: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16033674776554108
    2. ')' → logprob: -1.9103367328643799
    3. ' )
' → logprob: -10.4103364944458
    4. '+' → logprob: -10.6603364944458
    5. ']' → logprob: -10.7853364944458
    6. ']
' → logprob: -11.2853364944458
    7. '   ' → logprob: -11.4103364944458
    8. ' )' → logprob: -12.1603364944458
    9. ')
' → logprob: -12.2853364944458
    10. ')]' → logprob: -13.9103364944458

Token 1146: '   ' (ID: 271)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.01311340369284153
    2. 'for' → logprob: -4.388113498687744
    3. '
' → logprob: -7.888113498687744
    4. '   ' → logprob: -9.888113021850586
    5. ' last' → logprob: -9.888113021850586
    6. '+' → logprob: -10.138113021850586
    7. '=' → logprob: -11.013113021850586
    8. '_last' → logprob: -11.138113021850586
    9. ',last' → logprob: -11.263113021850586
    10. 'if' → logprob: -11.638113021850586

Token 1147: ' for' (ID: 395)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -1.7432603272027336e-06
    2. ' last' → logprob: -13.500001907348633
    3. '   ' → logprob: -15.875001907348633
    4. 'for' (adapté à ' for') → logprob: -16.125001907348633
    5. 'v' → logprob: -17.500001907348633
    6. 'l' → logprob: -17.625001907348633
    7. 'if' → logprob: -18.750001907348633
    8. '	last' → logprob: -19.375001907348633
    9. 'i' → logprob: -20.000001907348633
    10. '(last' → logprob: -20.000001907348633

Token 1148: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00016599490481894463
    2. ' v' → logprob: -8.750165939331055
    3. 'vid' → logprob: -12.125165939331055
    4. '	v' → logprob: -14.625165939331055
    5. 'vi' → logprob: -14.875165939331055
    6. 'last' → logprob: -14.875165939331055
    7. '   ' → logprob: -15.625165939331055
    8. 'vj' → logprob: -16.125165939331055
    9. '(v' → logprob: -16.250165939331055
    10. ' ' → logprob: -16.500165939331055

Token 1149: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0006460758158937097
    2. 'd' → logprob: -8.000645637512207
    3. 'id' → logprob: -8.125645637512207
    4. 'in' → logprob: -12.250645637512207
    5. '_' → logprob: -12.625645637512207
    6. 'v' → logprob: -13.250645637512207
    7. '_d' → logprob: -13.375645637512207
    8. '_i' → logprob: -14.375645637512207
    9. 'for' → logprob: -14.500645637512207
    10. ' in' → logprob: -14.625645637512207

Token 1150: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12693293392658234
    2. 'in' → logprob: -2.1269328594207764
    3. 'n' → logprob: -13.626933097839355
    4. ' ' → logprob: -13.751933097839355
    5. 'v' → logprob: -14.251933097839355
    6. '	in' → logprob: -14.376933097839355
    7. 'import' → logprob: -15.001933097839355
    8. ',' → logprob: -15.126933097839355
    9. '   ' → logprob: -16.12693214416504
    10. '
' → logprob: -16.12693214416504

Token 1151: ' [' (ID: 723)
  Prédit: '[last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -0.00025645215646363795
    2. '[' → logprob: -8.750256538391113
    3. ' [' → logprob: -9.250256538391113
    4. 'last' → logprob: -14.250256538391113
    5. '[v' → logprob: -15.000256538391113
    6. '[
' → logprob: -15.125256538391113
    7. '(last' → logprob: -15.625256538391113
    8. '[first' → logprob: -15.625256538391113
    9. ' last' → logprob: -16.500255584716797
    10. '   ' → logprob: -16.625255584716797

Token 1152: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -4.60414821645827e-06
    2. ' last' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.375004768371582
    4. '1' → logprob: -17.000003814697266
    5. '(last' → logprob: -17.875003814697266
    6. '
' → logprob: -18.750003814697266
    7. 'first' → logprob: -19.000003814697266
    8. '[last' → logprob: -19.375003814697266
    9. '	last' → logprob: -19.500003814697266
    10. '  ' → logprob: -19.875003814697266

Token 1153: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.009775093756616116
    2. 'i' → logprob: -4.634775161743164
    3. '+' → logprob: -12.259775161743164
    4. 'last' → logprob: -12.384775161743164
    5. '   ' → logprob: -13.259775161743164
    6. '+i' → logprob: -13.259775161743164
    7. '
' → logprob: -13.384775161743164
    8. ' i' → logprob: -13.384775161743164
    9. ' ' → logprob: -14.259775161743164
    10. '```' → logprob: -14.384775161743164

Token 1154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. 'last' → logprob: -11.625011444091797
    3. '+' → logprob: -13.250011444091797
    4. ' ' → logprob: -14.125011444091797
    5. '```' → logprob: -16.500011444091797
    6. '   ' → logprob: -17.250011444091797
    7. ',' → logprob: -17.375011444091797
    8. ' +' → logprob: -17.500011444091797
    9. '_last' → logprob: -17.500011444091797
    10. '
' → logprob: -17.750011444091797

Token 1155: ',' (ID: 11)
  Prédit: ',last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',last' → logprob: -0.12739840149879456
    2. ',' → logprob: -2.1273984909057617
    3. ' ,' → logprob: -7.752398490905762
    4. '   ' → logprob: -11.127398490905762
    5. '+' → logprob: -11.752398490905762
    6. ',
' → logprob: -12.252398490905762
    7. ',next' → logprob: -12.877398490905762
    8. ' ' → logprob: -13.252398490905762
    9. 'last' → logprob: -13.252398490905762
    10. ',current' → logprob: -14.002398490905762

Token 1156: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.0005543439765460789
    2. ' last' → logprob: -7.50055456161499
    3. '   ' → logprob: -14.500554084777832
    4. '(last' → logprob: -14.625554084777832
    5. '2' → logprob: -15.125554084777832
    6. ' ' → logprob: -17.12555503845215
    7. '	last' → logprob: -17.75055503845215
    8. '  ' → logprob: -18.12555503845215
    9. ',last' → logprob: -19.00055503845215
    10. '1' → logprob: -19.12555503845215

Token 1157: '_i' (ID: 10853)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4741796851158142
    2. '_i' → logprob: -0.9741796851158142
    3. '1' → logprob: -9.2241792678833
    4. 'I' → logprob: -12.7241792678833
    5. '
' → logprob: -15.2241792678833
    6. 'ic' → logprob: -15.3491792678833
    7. '(i' → logprob: -15.5991792678833
    8. ' i' → logprob: -16.224180221557617
    9. '{i' → logprob: -16.474180221557617
    10. '   ' → logprob: -16.849180221557617

Token 1158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '+' → logprob: -18.875
    4. '   ' → logprob: -19.125
    5. 'i' → logprob: -19.625
    6. '```' → logprob: -19.75
    7. '
' → logprob: -20.0
    8. '[' → logprob: -20.125
    9. '(' → logprob: -20.25
    10. '-' → logprob: -21.0

Token 1159: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014163863845169544
    2. ' +' → logprob: -4.264163970947266
    3. '1' → logprob: -15.264163970947266
    4. '＋' → logprob: -16.764163970947266
    5. ' ' → logprob: -16.889163970947266
    6. '+
' → logprob: -17.264163970947266
    7. '+,' → logprob: -17.764163970947266
    8. ']+' → logprob: -17.764163970947266
    9. ' plus' → logprob: -18.014163970947266
    10. '   ' → logprob: -18.139163970947266

Token 1160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '```' → logprob: -21.125
    4. '0' → logprob: -22.0
    5. '１' → logprob: -22.875
    6. '   ' → logprob: -23.125
    7. '+' → logprob: -23.5
    8. '-' → logprob: -23.625
    9. '۱' → logprob: -24.125
    10. '2' → logprob: -24.125

Token 1161: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.1003584936261177
    2. ']:
' → logprob: -2.350358486175537
    3. ']:
' → logprob: -9.850358963012695
    4. ']' → logprob: -10.225358963012695
    5. ' ]' → logprob: -10.350358963012695
    6. ',' → logprob: -11.725358963012695
    7. ']:

' → logprob: -11.850358963012695
    8. '   ' → logprob: -12.225358963012695
    9. '):' → logprob: -13.100358963012695
    10. ']:


' → logprob: -13.225358963012695

Token 1162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033542821183800697
    2. '   ' → logprob: -5.878354072570801
    3. ':' → logprob: -8.3783540725708
    4. ' if' → logprob: -8.5033540725708
    5. ':
' → logprob: -10.0033540725708
    6. 'if' → logprob: -10.0033540725708
    7. '<|end|>' → logprob: -11.3783540725708
    8. '```' → logprob: -12.0033540725708
    9. '):
' → logprob: -12.8783540725708
    10. '<|end|>' → logprob: -13.8783540725708

Token 1163: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0002233245177194476
    2. ' if' → logprob: -8.500223159790039
    3. '       ' → logprob: -11.000223159790039
    4. '   ' → logprob: -12.750223159790039
    5. '           ' → logprob: -15.500223159790039
    6. '```' → logprob: -17.87522315979004
    7. '	if' → logprob: -18.12522315979004
    8. '#' → logprob: -19.87522315979004
    9. ' ' → logprob: -20.37522315979004
    10. '
' → logprob: -21.00022315979004

Token 1164: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.4740847051143646
    2. ' segment' → logprob: -0.974084734916687
    3. '(segment' → logprob: -11.849084854125977
    4. '.segment' → logprob: -15.224084854125977
    5. '   ' → logprob: -16.099084854125977
    6. '_segment' → logprob: -17.099084854125977
    7. 'Segment' → logprob: -17.099084854125977
    8. ' segmento' → logprob: -17.224084854125977
    9. 'seg' → logprob: -17.599084854125977
    10. ' ' → logprob: -17.849084854125977

Token 1165: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -1.1160349458805285e-05
    2. 'segment' → logprob: -11.750011444091797
    3. 'in' → logprob: -13.125011444091797
    4. '_segment' → logprob: -14.250011444091797
    5. 'In' → logprob: -15.125011444091797
    6. '(segment' → logprob: -16.000011444091797
    7. '_' → logprob: -16.125011444091797
    8. '   ' → logprob: -17.750011444091797
    9. ' in' → logprob: -17.875011444091797
    10. '_inter' → logprob: -18.125011444091797

Token 1166: '_chain' (ID: 74449)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.08050815761089325
    2. '_chain' → logprob: -2.580508232116699
    3. ' chain' → logprob: -7.205508232116699
    4. 'graph' → logprob: -7.580508232116699
    5. 'segment' → logprob: -7.955508232116699
    6. '_graph' → logprob: -12.5805082321167
    7. '_ch' → logprob: -12.7055082321167
    8. 'chunk' → logprob: -14.2055082321167
    9. '[' → logprob: -14.4555082321167
    10. '.chain' → logprob: -14.4555082321167

Token 1167: '(vertices' (ID: 158708)
  Prédit: '(vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vertices' → logprob: -0.0007329129730351269
    2. 'vertices' → logprob: -7.625732898712158
    3. ' vertices' → logprob: -9.250733375549316
    4. ' (' → logprob: -9.250733375549316
    5. '(' → logprob: -9.875733375549316
    6. '   ' → logprob: -14.500733375549316
    7. '((' → logprob: -15.500733375549316
    8. '.vertices' → logprob: -15.750733375549316
    9. '(points' → logprob: -16.125732421875
    10. '(vertex' → logprob: -16.375732421875

Token 1168: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005279057659208775
    2. '1' → logprob: -5.255279064178467
    3. '(' → logprob: -10.880278587341309
    4. '   ' → logprob: -11.505278587341309
    5. 'vertices' → logprob: -12.005278587341309
    6. ' [' → logprob: -12.505278587341309
    7. ' ' → logprob: -13.005278587341309
    8. '[
' → logprob: -13.380278587341309
    9. ' vertices' → logprob: -14.505278587341309
    10. '       ' → logprob: -14.630278587341309

Token 1169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4259644558478612e-05
    2. 'v' → logprob: -11.375014305114746
    3. ' ' → logprob: -13.375014305114746
    4. '   ' → logprob: -14.875014305114746
    5. '[' → logprob: -15.125014305114746
    6. '
' → logprob: -15.625014305114746
    7. '(' → logprob: -16.37501335144043
    8. 'vertices' → logprob: -16.75001335144043
    9. '0' → logprob: -17.00001335144043
    10. '```' → logprob: -18.00001335144043

Token 1170: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.040705885738134384
    2. '],' → logprob: -3.290705919265747
    3. ' ,' → logprob: -6.540705680847168
    4. ',v' → logprob: -7.165705680847168
    5. '),' → logprob: -7.915705680847168
    6. ' ],' → logprob: -10.915705680847168
    7. '   ' → logprob: -11.040705680847168
    8. '[' → logprob: -11.040705680847168
    9. '[v' → logprob: -11.915705680847168
    10. '[],' → logprob: -12.290705680847168

Token 1171: ' vertices' (ID: 38360)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.42972424626350403
    2. ' vertices' → logprob: -1.0547242164611816
    3. '(vertices' → logprob: -6.929724216461182
    4. '   ' → logprob: -11.05472469329834
    5. '       ' → logprob: -11.67972469329834
    6. '.vertices' → logprob: -12.05472469329834
    7. '           ' → logprob: -12.55472469329834
    8. ')' → logprob: -13.05472469329834
    9. '                   ' → logprob: -13.30472469329834
    10. '_vertices' → logprob: -13.55472469329834

Token 1172: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00026729601086117327
    2. 'v' → logprob: -8.250267028808594
    3. '[' → logprob: -13.000267028808594
    4. ' [' → logprob: -13.875267028808594
    5. '[
' → logprob: -14.125267028808594
    6. '   ' → logprob: -14.375267028808594
    7. '(v' → logprob: -14.375267028808594
    8. '
' → logprob: -15.875267028808594
    9. '```' → logprob: -16.000267028808594
    10. ' v' → logprob: -16.125267028808594

Token 1173: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -3.690834273584187e-05
    2. 'id' → logprob: -10.25003719329834
    3. 'last' → logprob: -14.00003719329834
    4. 'd' → logprob: -15.50003719329834
    5. '   ' → logprob: -15.62503719329834
    6. '1' → logprob: -16.875036239624023
    7. '_last' → logprob: -17.625036239624023
    8. 'Id' → logprob: -17.625036239624023
    9. '0' → logprob: -18.000036239624023
    10. '_ids' → logprob: -18.250036239624023

Token 1174: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13055570423603058
    2. '],' → logprob: -2.1305556297302246
    3. ' ,' → logprob: -5.880555629730225
    4. ' ],' → logprob: -7.880555629730225
    5. '),' → logprob: -8.755556106567383
    6. '           ' → logprob: -9.130556106567383
    7. '       ' → logprob: -9.380556106567383
    8. '   ' → logprob: -9.630556106567383
    9. '               ' → logprob: -12.505556106567383
    10. ']' → logprob: -12.630556106567383

Token 1175: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.003628342878073454
    2. ' circles' → logprob: -5.628628253936768
    3. 'circ' → logprob: -11.378628730773926
    4. '   ' → logprob: -11.503628730773926
    5. 'circle' → logprob: -13.128628730773926
    6. 'cycles' → logprob: -13.628628730773926
    7. 'vertices' → logprob: -14.128628730773926
    8. 'c' → logprob: -14.753628730773926
    9. 'Cir' → logprob: -15.128628730773926
    10. ' cir' → logprob: -15.128628730773926

Token 1176: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07927816361188889
    2. '):' → logprob: -2.5792782306671143
    3. '       ' → logprob: -8.204277992248535
    4. '           ' → logprob: -9.204277992248535
    5. '):
' → logprob: -11.829277992248535
    6. '   ' → logprob: -12.579277992248535
    7. ')' → logprob: -13.704277992248535
    8. ' ):
' → logprob: -14.329277992248535
    9. '):

' → logprob: -14.579277992248535
    10. '          ' → logprob: -14.704277992248535

Token 1177: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004147032741457224
    2. ':
' → logprob: -8.375414848327637
    3. ':' → logprob: -9.250414848327637
    4. '       ' → logprob: -9.875414848327637
    5. '):
' → logprob: -11.125414848327637
    6. '               ' → logprob: -11.625414848327637
    7. '```' → logprob: -12.875414848327637
    8. '	       ' → logprob: -13.000414848327637
    9. '   ' → logprob: -13.500414848327637
    10. ' :
' → logprob: -13.625414848327637

Token 1178: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.053345631808042526
    2. '           ' → logprob: -3.1783456802368164
    3. ' d' → logprob: -4.678345680236816
    4. '               ' → logprob: -7.178345680236816
    5. '   ' → logprob: -8.928345680236816
    6. '       ' → logprob: -9.553345680236816
    7. '	d' → logprob: -11.303345680236816
    8. '          ' → logprob: -11.928345680236816
    9. ' ' → logprob: -12.803345680236816
    10. '```' → logprob: -13.303345680236816

Token 1179: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02325444668531418
    2. '=' → logprob: -3.77325439453125
    3. '           ' → logprob: -12.64825439453125
    4. '            ' → logprob: -13.02325439453125
    5. ')' → logprob: -13.52325439453125
    6. '               ' → logprob: -15.14825439453125
    7. ' ' → logprob: -15.14825439453125
    8. 'space' → logprob: -15.64825439453125
    9. '    ' → logprob: -15.77325439453125
    10. '                ' → logprob: -15.89825439453125

Token 1180: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.251930296421051
    2. 'dist' → logprob: -1.5019302368164062
    3. '(dist' → logprob: -14.001930236816406
    4. 'Dist' → logprob: -15.876930236816406
    5. '	dist' → logprob: -16.126930236816406
    6. '.dist' → logprob: -16.501930236816406
    7. '_dist' → logprob: -17.001930236816406
    8. ' ' → logprob: -19.126930236816406
    9. 'd' → logprob: -19.126930236816406
    10. '-dist' → logprob: -19.501930236816406

Token 1181: '(vertices' (ID: 158708)
  Prédit: '(vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vertices' → logprob: -1.0206720617134124e-05
    2. 'vertices' → logprob: -11.50001049041748
    3. '(' → logprob: -16.750009536743164
    4. ' vertices' → logprob: -17.375009536743164
    5. '(vertex' → logprob: -19.875009536743164
    6. '.vertices' → logprob: -20.375009536743164
    7. ' (' → logprob: -20.375009536743164
    8. '(
' → logprob: -20.750009536743164
    9. '(v' → logprob: -21.000009536743164
    10. '(nodes' → logprob: -21.125009536743164

Token 1182: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00022976152831688523
    2. '(' → logprob: -9.000229835510254
    3. '(vertices' → logprob: -9.250229835510254
    4. 'vertices' → logprob: -12.375229835510254
    5. '1' → logprob: -12.500229835510254
    6. '[(' → logprob: -14.625229835510254
    7. '```' → logprob: -15.125229835510254
    8. '.vertices' → logprob: -15.375229835510254
    9. ' vertices' → logprob: -15.625229835510254
    10. '([' → logprob: -15.750229835510254

Token 1183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.995397365652025e-05
    2. 'vertices' → logprob: -9.750089645385742
    3. '[' → logprob: -10.500089645385742
    4. ' ' → logprob: -13.250089645385742
    5. '   ' → logprob: -13.625089645385742
    6. '(' → logprob: -14.750089645385742
    7. ' vertices' → logprob: -15.375089645385742
    8. '  ' → logprob: -16.500089645385742
    9. '0' → logprob: -16.500089645385742
    10. '```' → logprob: -16.500089645385742

Token 1184: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.36855557560920715
    2. '),' → logprob: -1.9935555458068848
    3. '[' → logprob: -2.4935555458068848
    4. '[v' → logprob: -2.8685555458068848
    5. ',' → logprob: -3.7435555458068848
    6. '(v' → logprob: -6.368555545806885
    7. '(vertices' → logprob: -6.618555545806885
    8. ']' → logprob: -6.618555545806885
    9. '   ' → logprob: -6.993555545806885
    10. ')' → logprob: -6.993555545806885

Token 1185: ' vertices' (ID: 38360)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.0022072356659919024
    2. ' vertices' → logprob: -6.127207279205322
    3. '(vertices' → logprob: -11.252206802368164
    4. '   ' → logprob: -11.752206802368164
    5. '.vertices' → logprob: -15.002206802368164
    6. ' ' → logprob: -15.502206802368164
    7. '       ' → logprob: -16.002206802368164
    8. '           ' → logprob: -16.502206802368164
    9. 'vectors' → logprob: -16.502206802368164
    10. ')' → logprob: -16.502206802368164

Token 1186: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.080963092041202e-06
    2. '[' → logprob: -12.750004768371582
    3. ',' → logprob: -13.500004768371582
    4. '),' → logprob: -15.125004768371582
    5. 'v' → logprob: -15.750004768371582
    6. ',v' → logprob: -16.1250057220459
    7. '   ' → logprob: -16.3750057220459
    8. '(v' → logprob: -16.7500057220459
    9. '[
' → logprob: -17.1250057220459
    10. '],' → logprob: -17.3750057220459

Token 1187: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.771655115589965e-05
    2. 'id' → logprob: -11.000018119812012
    3. 'd' → logprob: -15.250018119812012
    4. '2' → logprob: -15.750018119812012
    5. 'v' → logprob: -15.875018119812012
    6. '0' → logprob: -15.875018119812012
    7. '[' → logprob: -16.625017166137695
    8. '```' → logprob: -16.875017166137695
    9. '   ' → logprob: -17.125017166137695
    10. '\' → logprob: -17.625017166137695

Token 1188: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.008776000700891018
    2. ')' → logprob: -4.7587761878967285
    3. ')
' → logprob: -9.25877571105957
    4. '])
' → logprob: -10.25877571105957
    5. '           ' → logprob: -10.63377571105957
    6. ' )
' → logprob: -13.25877571105957
    7. ')`
' → logprob: -13.38377571105957
    8. '])' → logprob: -13.50877571105957
    9. '       ' → logprob: -14.50877571105957
    10. '())
' → logprob: -15.00877571105957

Token 1189: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0802738870552275e-05
    2. 'graph' → logprob: -11.50001049041748
    3. '       ' → logprob: -15.50001049041748
    4. '          ' → logprob: -15.87501049041748
    5. '   ' → logprob: -16.125011444091797
    6. '		' → logprob: -16.250011444091797
    7. '               ' → logprob: -17.125011444091797
    8. ' graph' → logprob: -17.125011444091797
    9. '	graph' → logprob: -18.250011444091797
    10. '	       ' → logprob: -18.500011444091797

Token 1190: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.00012439649435691535
    2. ' graph' → logprob: -9.000123977661133
    3. '   ' → logprob: -14.500123977661133
    4. '	graph' → logprob: -15.250123977661133
    5. '           ' → logprob: -15.375123977661133
    6. '(graph' → logprob: -19.500123977661133
    7. '               ' → logprob: -19.750123977661133
    8. ' ' → logprob: -19.875123977661133
    9. '```' → logprob: -20.125123977661133
    10. '       ' → logprob: -20.125123977661133

Token 1191: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. '           ' → logprob: -13.250001907348633
    3. ' [' → logprob: -16.125001907348633
    4. '   ' → logprob: -16.250001907348633
    5. ')[' → logprob: -17.500001907348633
    6. '       ' → logprob: -17.750001907348633
    7. '[v' → logprob: -17.875001907348633
    8. '1' → logprob: -18.250001907348633
    9. '```' → logprob: -18.250001907348633
    10. '][' → logprob: -18.375001907348633

Token 1192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -14.625000953674316
    4. '[' → logprob: -17.000001907348633
    5. 'v' → logprob: -17.125001907348633
    6. '0' → logprob: -17.500001907348633
    7. '           ' → logprob: -18.437501907348633
    8. '  ' → logprob: -18.437501907348633
    9. '
' → logprob: -18.750001907348633
    10. '#' → logprob: -18.812501907348633

Token 1193: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -6.897412822581828e-05
    2. '           ' → logprob: -10.375068664550781
    3. ').' → logprob: -10.875068664550781
    4. '       ' → logprob: -12.000068664550781
    5. '   ' → logprob: -12.125068664550781
    6. '.append' → logprob: -12.875068664550781
    7. ']' → logprob: -12.875068664550781
    8. ' ].' → logprob: -13.625068664550781
    9. '[' → logprob: -15.250068664550781
    10. '         ' → logprob: -15.750068664550781

Token 1194: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. '.append' → logprob: -16.25
    3. ' append' → logprob: -17.0
    4. '	append' → logprob: -20.5
    5. 'appen' → logprob: -21.5
    6. 'app' → logprob: -21.75
    7. '_append' → logprob: -22.5
    8. 'Append' → logprob: -23.5
    9. '   ' → logprob: -23.875
    10. '```' → logprob: -24.75

Token 1195: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.01416798122227192
    2. '(v' → logprob: -4.264167785644531
    3. '(' → logprob: -12.639167785644531
    4. '   ' → logprob: -14.014167785644531
    5. ' (' → logprob: -15.389167785644531
    6. '(
' → logprob: -16.26416778564453
    7. ' ((' → logprob: -16.76416778564453
    8. ' ' → logprob: -18.51416778564453
    9. '(V' → logprob: -18.51416778564453
    10. '[(' → logprob: -18.63916778564453

Token 1196: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.696889623621246e-06
    2. '   ' → logprob: -13.37500286102295
    3. ' v' → logprob: -14.00000286102295
    4. '	v' → logprob: -15.12500286102295
    5. ' ' → logprob: -19.000001907348633
    6. 'last' → logprob: -19.750001907348633
    7. ')v' → logprob: -19.750001907348633
    8. 'vertices' → logprob: -19.875001907348633
    9. '$v' → logprob: -19.875001907348633
    10. '     ' → logprob: -20.375001907348633

Token 1197: '_id' (ID: 1537)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.696889623621246e-06
    2. '_id' → logprob: -13.62500286102295
    3. '_v' → logprob: -14.12500286102295
    4. ' v' → logprob: -14.62500286102295
    5. '[v' → logprob: -16.375001907348633
    6. '	v' → logprob: -17.500001907348633
    7. '   ' → logprob: -17.750001907348633
    8. ',v' → logprob: -17.750001907348633
    9. '=v' → logprob: -17.875001907348633
    10. 'last' → logprob: -18.125001907348633

Token 1198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006131939589977264
    2. ',d' → logprob: -7.500613212585449
    3. '           ' → logprob: -9.87561321258545
    4. ' ,' → logprob: -12.12561321258545
    5. ',
' → logprob: -12.87561321258545
    6. '),' → logprob: -14.62561321258545
    7. '               ' → logprob: -15.87561321258545
    8. ',v' → logprob: -16.750612258911133
    9. ',D' → logprob: -16.875612258911133
    10. '          ' → logprob: -17.000612258911133

Token 1199: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.306760805164231e-05
    2. ' d' → logprob: -11.25001335144043
    3. '   ' → logprob: -20.00001335144043
    4. ')d' → logprob: -21.25001335144043
    5. '	d' → logprob: -22.12501335144043
    6. '           ' → logprob: -22.37501335144043
    7. '       ' → logprob: -22.75001335144043
    8. 'dist' → logprob: -23.37501335144043
    9. '$d' → logprob: -24.62501335144043
    10. '_d' → logprob: -24.75001335144043

Token 1200: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.17090754210948944
    2. ')' → logprob: -1.9209074974060059
    3. '           ' → logprob: -4.545907497406006
    4. '       ' → logprob: -11.795907974243164
    5. ')
' → logprob: -13.045907974243164
    6. ' )
' → logprob: -13.170907974243164
    7. '               ' → logprob: -13.795907974243164
    8. '          ' → logprob: -13.920907974243164
    9. '))
' → logprob: -14.170907974243164
    10. '   ' → logprob: -15.045907974243164

Token 1201: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.320199877838604e-07
    2. '       ' → logprob: -15.875
    3. '   ' → logprob: -16.125
    4. '
' → logprob: -16.125
    5. '```' → logprob: -17.125
    6. '               ' → logprob: -17.375
    7. '            
' → logprob: -17.5
    8. '          ' → logprob: -17.625
    9. '<|end|>' → logprob: -19.5
    10. '                   ' → logprob: -19.625

Token 1202: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -6.704273118884885e-07
    2. ' graph' → logprob: -14.250000953674316
    3. '	graph' → logprob: -19.0
    4. '           ' → logprob: -19.625
    5. '   ' → logprob: -19.75
    6. '(graph' → logprob: -21.125
    7. '       ' → logprob: -22.25
    8. 'graf' → logprob: -23.375
    9. '_graph' → logprob: -23.625
    10. '
' → logprob: -23.875

Token 1203: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.4391956685576588e-05
    2. 'v' → logprob: -11.250024795532227
    3. '[last' → logprob: -12.125024795532227
    4. '[' → logprob: -12.250024795532227
    5. '   ' → logprob: -14.375024795532227
    6. '_v' → logprob: -15.875024795532227
    7. '	v' → logprob: -16.125024795532227
    8. '[val' → logprob: -16.250024795532227
    9. '```' → logprob: -16.875024795532227
    10. '
' → logprob: -17.500024795532227

Token 1204: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.3856492842023727e-06
    2. 'id' → logprob: -14.125000953674316
    3. '[' → logprob: -15.000000953674316
    4. 'v' → logprob: -16.500001907348633
    5. 'd' → logprob: -16.875001907348633
    6. '   ' → logprob: -16.875001907348633
    7. '_' → logprob: -17.750001907348633
    8. '```' → logprob: -17.750001907348633
    9. '[id' → logprob: -18.375001907348633
    10. '_i' → logprob: -18.750001907348633

Token 1205: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.6944006085395813
    2. '.append' → logprob: -1.3194005489349365
    3. '[' → logprob: -1.9444005489349365
    4. ').' → logprob: -2.5694005489349365
    5. '.' → logprob: -4.944400787353516
    6. '           ' → logprob: -5.194400787353516
    7. '][' → logprob: -8.069400787353516
    8. '>.' → logprob: -8.569400787353516
    9. ' .' → logprob: -9.194400787353516
    10. '}.' → logprob: -10.069400787353516

Token 1206: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. '.append' → logprob: -16.125
    3. ' append' → logprob: -16.375
    4. 'appen' → logprob: -19.375
    5. '	append' → logprob: -20.625
    6. 'app' → logprob: -21.5
    7. '_append' → logprob: -22.0
    8. 'Append' → logprob: -22.5
    9. '1' → logprob: -24.0
    10. 'appe' → logprob: -24.125

Token 1207: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001549089647596702
    2. '((' → logprob: -9.000154495239258
    3. '(
' → logprob: -10.375154495239258
    4. ' (' → logprob: -15.375154495239258
    5. '(

' → logprob: -17.750154495239258
    6. '1' → logprob: -18.375154495239258
    7. '([' → logprob: -19.125154495239258
    8. '(
' → logprob: -19.625154495239258
    9. '=(' → logprob: -21.000154495239258
    10. '("' → logprob: -21.125154495239258

Token 1208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -15.75
    4. '[' → logprob: -19.375
    5. '           ' → logprob: -19.625
    6. '```' → logprob: -20.25
    7. '１' → logprob: -20.625
    8. '(' → logprob: -21.125
    9. '
' → logprob: -21.125
    10. '       ' → logprob: -21.125

Token 1209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.85366350505501e-05
    2. ' ,' → logprob: -9.37509822845459
    3. ',d' → logprob: -11.25009822845459
    4. ',v' → logprob: -15.25009822845459
    5. '),' → logprob: -15.75009822845459
    6. '           ' → logprob: -16.375099182128906
    7. ',
' → logprob: -16.875099182128906
    8. '‌,' → logprob: -17.250099182128906
    9. '   ' → logprob: -17.500099182128906
    10. ',n' → logprob: -17.750099182128906

Token 1210: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0004311460361350328
    2. ' d' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.000431060791016
    4. '	d' → logprob: -16.625431060791016
    5. '           ' → logprob: -17.750431060791016
    6. ' ' → logprob: -18.125431060791016
    7. '1' → logprob: -18.375431060791016
    8. ')d' → logprob: -18.625431060791016
    9. '       ' → logprob: -18.750431060791016
    10. '    ' → logprob: -19.125431060791016

Token 1211: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00033903829171322286
    2. ')' → logprob: -8.12533950805664
    3. '           ' → logprob: -10.50033950805664
    4. '))
' → logprob: -11.37533950805664
    5. '       ' → logprob: -13.00033950805664
    6. ' ))' → logprob: -14.25033950805664
    7. ')))' → logprob: -14.75033950805664
    8. '))

' → logprob: -15.37533950805664
    9. '   ' → logprob: -16.00033950805664
    10. '),' → logprob: -16.50033950805664

Token 1212: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16065098345279694
    2. 'for' → logprob: -1.9106509685516357
    3. '   ' → logprob: -7.785651206970215
    4. '```' → logprob: -11.785651206970215
    5. ' for' → logprob: -13.035651206970215
    6. 'i' → logprob: -15.160651206970215
    7. '#index' → logprob: -15.160651206970215
    8. '    
' → logprob: -15.285651206970215
    9. ' #' → logprob: -16.1606502532959
    10. '``' → logprob: -16.4106502532959

Token 1213: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.07889529317617416
    2. 'for' → logprob: -2.578895330429077
    3. '   ' → logprob: -12.203895568847656
    4. '```' → logprob: -15.328895568847656
    5. ' for' → logprob: -15.578895568847656
    6. ' #' → logprob: -16.828895568847656
    7. '    
' → logprob: -17.953895568847656
    8. '
' → logprob: -18.078895568847656
    9. '``' → logprob: -18.328895568847656
    10. '#index' → logprob: -18.828895568847656

Token 1214: ' Ajouter' (ID: 165754)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0031812789384275675
    2. '#' → logprob: -5.753181457519531
    3. '   ' → logprob: -12.753181457519531
    4. ' for' → logprob: -14.878181457519531
    5. 'def' → logprob: -15.378181457519531
    6. 'i' → logprob: -16.75318145751953
    7. '
' → logprob: -17.00318145751953
    8. 'prev' → logprob: -17.37818145751953
    9. '```' → logprob: -18.37818145751953
    10. '    
' → logprob: -18.50318145751953

Token 1215: ' ar' (ID: 646)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5683295130729675
    2. 'for' → logprob: -0.9433295130729675
    3. 'edges' → logprob: -3.1933295726776123
    4. 'ar' → logprob: -6.318329334259033
    5. ' edges' → logprob: -7.443329334259033
    6. '   ' → logprob: -7.818329334259033
    7. ' for' → logprob: -8.943329811096191
    8. '_edges' → logprob: -9.443329811096191
    9. ' #' → logprob: -10.068329811096191
    10. 'i' → logprob: -10.943329811096191

Token 1216: 'êtes' (ID: 23720)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.4573151171207428
    2. '_' → logprob: -2.20731520652771
    3. 'êtes' → logprob: -2.20731520652771
    4. 'e' → logprob: -2.83231520652771
    5. '#' → logprob: -3.70731520652771
    6. '_edges' → logprob: -3.95731520652771
    7. 'c' → logprob: -4.207314968109131
    8. 'r' → logprob: -4.582314968109131
    9. 'es' → logprob: -4.582314968109131
    10. 'ches' → logprob: -6.832314968109131

Token 1217: ' entre' (ID: 3853)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7781949043273926
    2. 'between' → logprob: -0.7781949043273926
    3. '_between' → logprob: -3.4031949043273926
    4. 'entre' → logprob: -3.5281949043273926
    5. 'pour' → logprob: -5.153194904327393
    6. ' entre' → logprob: -5.903194904327393
    7. ' between' → logprob: -6.028194904327393
    8. '#' → logprob: -6.028194904327393
    9. 'from' → logprob: -6.653194904327393
    10. 'inter' → logprob: -7.028194904327393

Token 1218: ' points' (ID: 5571)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03961246833205223
    2. 'i' → logprob: -3.6646125316619873
    3. ' range' → logprob: -4.914612293243408
    4. 'vertices' → logprob: -5.539612293243408
    5. 'inter' → logprob: -7.289612293243408
    6. 'v' → logprob: -7.414612293243408
    7. '
' → logprob: -9.414612770080566
    8. 'idx' → logprob: -9.539612770080566
    9. 'for' → logprob: -9.539612770080566
    10. '[' → logprob: -9.789612770080566

Token 1219: ' d' (ID: 272)
  Prédit: '_inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.19611792266368866
    2. 'd' → logprob: -2.196117877960205
    3. 'inter' → logprob: -3.321117877960205
    4. 'of' → logprob: -4.946117877960205
    5. 'de' → logprob: -5.071117877960205
    6. '   ' → logprob: -5.821117877960205
    7. ' d' → logprob: -5.946117877960205
    8. '2' → logprob: -6.071117877960205
    9. 'for' → logprob: -6.196117877960205
    10. '_of' → logprob: -6.446117877960205

Token 1220: ''inter' (ID: 55731)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.6535137891769409
    2. 'intersection' → logprob: -0.7785137891769409
    3. ''inter' → logprob: -4.0285139083862305
    4. 'range' → logprob: -6.6535139083862305
    5. '_inter' → logprob: -7.1535139083862305
    6. 'int' → logprob: -7.7785139083862305
    7. '(inter' → logprob: -8.90351390838623
    8. 'interaction' → logprob: -9.15351390838623
    9. 'index' → logprob: -10.52851390838623
    10. 'in' → logprob: -11.15351390838623

Token 1221: 'sections' (ID: 52783)
  Prédit: 'section'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.20511476695537567
    2. 'sections' → logprob: -1.955114722251892
    3. 'ter' → logprob: -3.3301148414611816
    4. 'er' → logprob: -5.580114841461182
    5. 'ters' → logprob: -6.080114841461182
    6. 'intersection' → logprob: -7.205114841461182
    7. 'ection' → logprob: -8.080114364624023
    8. '```' → logprob: -9.205114364624023
    9. 'erse' → logprob: -9.580114364624023
    10. 'sertion' → logprob: -9.580114364624023

Token 1222: ' cons' (ID: 1473)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03600090742111206
    2. '   ' → logprob: -3.786000967025757
    3. ' for' → logprob: -5.036000728607178
    4. 'in' → logprob: -6.411000728607178
    5. 'between' → logprob: -7.286000728607178
    6. '#' → logprob: -7.411000728607178
    7. 'of' → logprob: -7.536000728607178
    8. 'inter' → logprob: -7.786000728607178
    9. '```' → logprob: -7.911000728607178
    10. 'i' → logprob: -7.911000728607178

Token 1223: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.0069303857162594795
    2. 'ecut' → logprob: -5.006930351257324
    3. 'truct' → logprob: -9.631930351257324
    4. 't' → logprob: -10.506930351257324
    5. 'tr' → logprob: -10.506930351257324
    6. 'ec' → logprob: -10.631930351257324
    7. 'éc' → logprob: -10.756930351257324
    8. 'é' → logprob: -11.256930351257324
    9. 'ect' → logprob: -11.381930351257324
    10. 'e' → logprob: -11.381930351257324

Token 1224: 'ifs' (ID: 14119)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.553615927696228
    2. 'écut' → logprob: -1.678615927696228
    3. 'ecut' → logprob: -1.803615927696228
    4. 'ut' → logprob: -3.0536160469055176
    5. 'uct' → logprob: -3.9286160469055176
    6. 'icut' → logprob: -6.053616046905518
    7. 'u' → logprob: -6.553616046905518
    8. '_cut' → logprob: -7.053616046905518
    9. 'uctive' → logprob: -7.053616046905518
    10. 'ect' → logprob: -7.928616046905518

Token 1225: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01260407269001007
    2. '   ' → logprob: -4.512604236602783
    3. ' for' → logprob: -6.512604236602783
    4. '
' → logprob: -10.012603759765625
    5. 'i' → logprob: -11.887603759765625
    6. '#' → logprob: -12.387603759765625
    7. '(' → logprob: -12.762603759765625
    8. 'in' → logprob: -12.887603759765625
    9. ',' → logprob: -12.887603759765625
    10. '    
' → logprob: -13.387603759765625

Token 1226: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.038167838007211685
    2. 'k' → logprob: -3.288167953491211
    3. ' i' → logprob: -9.038167953491211
    4. ' k' → logprob: -12.663167953491211
    5. '(i' → logprob: -12.788167953491211
    6. 'v' → logprob: -15.288167953491211
    7. '(' → logprob: -15.288167953491211
    8. 'range' → logprob: -15.288167953491211
    9. '_i' → logprob: -15.663167953491211
    10. 'inter' → logprob: -15.788167953491211

Token 1227: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00778973987326026
    2. 'k' → logprob: -4.882789611816406
    3. ' i' → logprob: -8.632789611816406
    4. '   ' → logprob: -13.257789611816406
    5. '```' → logprob: -13.632789611816406
    6. ' k' → logprob: -14.507789611816406
    7. 'c' → logprob: -14.507789611816406
    8. '
' → logprob: -15.132789611816406
    9. '_i' → logprob: -15.132789611816406
    10. 'inter' → logprob: -15.882789611816406

Token 1228: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.45191821455955505
    2. 'for' → logprob: -1.3269182443618774
    3. 'in' → logprob: -2.576918125152588
    4. ' for' → logprob: -4.201918125152588
    5. ' i' → logprob: -5.826918125152588
    6. 'i' → logprob: -5.951918125152588
    7. '   ' → logprob: -6.451918125152588
    8. 'k' → logprob: -9.951918601989746
    9. 'range' → logprob: -9.951918601989746
    10. '_i' → logprob: -10.576918601989746

Token 1229: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011335102841258049
    2. '   ' → logprob: -4.6363348960876465
    3. ' for' → logprob: -6.5113348960876465
    4. 'i' → logprob: -9.386335372924805
    5. ' i' → logprob: -12.386335372924805
    6. 'k' → logprob: -13.886335372924805
    7. '       ' → logprob: -14.386335372924805
    8. '
' → logprob: -14.511335372924805
    9. '    
' → logprob: -15.136335372924805
    10. ' ' → logprob: -15.261335372924805

Token 1230: '+' (ID: 10)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.43455615639686584
    2. ' in' → logprob: -1.1845561265945435
    3. '+' → logprob: -3.184556245803833
    4. 'n' → logprob: -5.309556007385254
    5. '_in' → logprob: -10.434556007385254
    6. '=' → logprob: -10.559556007385254
    7. 'for' → logprob: -10.809556007385254
    8. 'from' → logprob: -11.059556007385254
    9. '
' → logprob: -11.309556007385254
    10. '<n' → logprob: -11.434556007385254

Token 1231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005380203947424889
    2. '2' → logprob: -8.375537872314453
    3. '+' → logprob: -9.000537872314453
    4. '0' → logprob: -10.000537872314453
    5. '```' → logprob: -10.375537872314453
    6. '=' → logprob: -10.750537872314453
    7. 'i' → logprob: -10.750537872314453
    8. ' ' → logprob: -11.500537872314453
    9. '``' → logprob: -11.625537872314453
    10. '
' → logprob: -11.625537872314453

Token 1232: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.060755301266908646
    2. '   ' → logprob: -2.9357552528381348
    3. ' for' → logprob: -5.185755252838135
    4. '
' → logprob: -9.060755729675293
    5. '```' → logprob: -10.310755729675293
    6. '#' → logprob: -10.810755729675293
    7. 'i' → logprob: -10.810755729675293
    8. ':' → logprob: -11.060755729675293
    9. 'in' → logprob: -11.060755729675293
    10. 'range' → logprob: -11.310755729675293

Token 1233: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006814827676862478
    2. '   ' → logprob: -5.006814956665039
    3. ' for' → logprob: -9.256814956665039
    4. '```' → logprob: -13.006814956665039
    5. '	for' → logprob: -14.631814956665039
    6. 'range' → logprob: -14.881814956665039
    7. 'start' → logprob: -15.256814956665039
    8. '
' → logprob: -15.506814956665039
    9. '#' → logprob: -15.631814956665039
    10. 'i' → logprob: -16.00681495666504

Token 1234: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.096126576769166e-05
    2. '   ' → logprob: -10.375041007995605
    3. ' for' → logprob: -11.875041007995605
    4. 'offset' → logprob: -13.000041007995605
    5. 'start' → logprob: -15.500041007995605
    6. '```' → logprob: -16.00004005432129
    7. 'i' → logprob: -16.62504005432129
    8. '#' (adapté à ' #') → logprob: -17.25004005432129
    9. 'range' → logprob: -17.25004005432129
    10. 'idx' → logprob: -18.50004005432129

Token 1235: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009991057449951768
    2. 'offset' → logprob: -7.0009989738464355
    3. '   ' → logprob: -9.375999450683594
    4. 'start' → logprob: -13.125999450683594
    5. ' for' → logprob: -14.750999450683594
    6. 'idx' → logprob: -16.000999450683594
    7. 'base' → logprob: -16.250999450683594
    8. '    
' → logprob: -16.250999450683594
    9. 'shift' → logprob: -17.125999450683594
    10. 'prev' → logprob: -17.500999450683594

Token 1236: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001319063303526491
    2. 'k' → logprob: -9.000131607055664
    3. ' i' → logprob: -11.750131607055664
    4. '```' → logprob: -15.625131607055664
    5. 'for' → logprob: -16.125131607055664
    6. '_i' → logprob: -16.375131607055664
    7. 'each' → logprob: -16.875131607055664
    8. '   ' → logprob: -16.875131607055664
    9. 'j' → logprob: -17.250131607055664
    10. 'v' → logprob: -17.375131607055664

Token 1237: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001848254178185016
    2. 'k' → logprob: -8.625185012817383
    3. ' i' → logprob: -12.250185012817383
    4. '   ' → logprob: -16.125185012817383
    5. '_i' → logprob: -16.500185012817383
    6. '```' → logprob: -16.500185012817383
    7. 'j' → logprob: -16.875185012817383
    8. 'c' → logprob: -17.125185012817383
    9. 'idx' → logprob: -17.500185012817383
    10. '
' → logprob: -17.500185012817383

Token 1238: ' de' (ID: 334)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1287611722946167
    2. ' in' → logprob: -2.1287612915039062
    3. 'i' → logprob: -6.378761291503906
    4. 'for' → logprob: -10.128761291503906
    5. '   ' → logprob: -10.378761291503906
    6. '```' → logprob: -10.753761291503906
    7. '
' → logprob: -11.128761291503906
    8. ' i' → logprob: -11.503761291503906
    9. 'range' → logprob: -12.503761291503906
    10. '#' → logprob: -13.128761291503906

Token 1239: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023860039189457893
    2. '0' → logprob: -3.773859977722168
    3. ' range' → logprob: -7.398859977722168
    4. 'r' → logprob: -14.398859977722168
    5. ' ' → logprob: -14.523859977722168
    6. '1' → logprob: -14.773859977722168
    7. 'rang' → logprob: -15.148859977722168
    8. '
' → logprob: -15.523859977722168
    9. '2' → logprob: -15.898859977722168
    10. '(range' → logprob: -16.648860931396484

Token 1240: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001410850090906024
    2. '0' → logprob: -9.500141143798828
    3. ' range' → logprob: -9.625141143798828
    4. '
' → logprob: -17.250141143798828
    5. 'r' → logprob: -17.375141143798828
    6. ' ' → logprob: -18.000141143798828
    7. 'rang' → logprob: -18.250141143798828
    8. '(range' → logprob: -18.625141143798828
    9. 'in' → logprob: -19.250141143798828
    10. '	range' → logprob: -19.375141143798828

Token 1241: ' à' (ID: 1221)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.31630560755729675
    2. ' in' → logprob: -1.3163056373596191
    3. ',' → logprob: -6.941305637359619
    4. 'for' → logprob: -7.191305637359619
    5. '
' → logprob: -7.691305637359619
    6. 'to' → logprob: -7.816305637359619
    7. 'range' → logprob: -8.316305160522461
    8. '   ' → logprob: -9.566305160522461
    9. '..' → logprob: -10.441305160522461
    10. ' to' → logprob: -10.816305160522461

Token 1242: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.91732100979425e-05
    2. '(n' → logprob: -10.625039100646973
    3. ' n' → logprob: -11.125039100646973
    4. '   ' → logprob: -16.87504005432129
    5. ' (' → logprob: -17.87504005432129
    6. '
' → logprob: -18.50004005432129
    7. '(' → logprob: -18.75004005432129
    8. '	n' → logprob: -19.12504005432129
    9. '2' → logprob: -19.50004005432129
    10. ' ' → logprob: -19.87504005432129

Token 1243: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.166338137816638e-05
    2. ' -' → logprob: -10.375031471252441
    3. '```' → logprob: -15.125031471252441
    4. '2' → logprob: -16.375032424926758
    5. '
' → logprob: -17.250032424926758
    6. '#' → logprob: -18.000032424926758
    7. '1' → logprob: -18.000032424926758
    8. '-
' → logprob: -18.375032424926758
    9. '   ' → logprob: -18.500032424926758
    10. '``' → logprob: -19.750032424926758

Token 1244: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12697724997997284
    2. '3' → logprob: -2.1269772052764893
    3. '   ' → logprob: -10.50197696685791
    4. '-' → logprob: -11.37697696685791
    5. '```' → logprob: -12.75197696685791
    6. '1' → logprob: -13.12697696685791
    7. ' ' → logprob: -13.25197696685791
    8. '  ' → logprob: -13.37697696685791
    9. '
' → logprob: -14.37697696685791
    10. 'import' → logprob: -14.62697696685791

Token 1245: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06248866394162178
    2. 'for' → logprob: -2.812488555908203
    3. ' for' → logprob: -7.937488555908203
    4. ':' → logprob: -9.062488555908203
    5. '       ' → logprob: -10.812488555908203
    6. '```' → logprob: -11.687488555908203
    7. '
' → logprob: -12.062488555908203
    8. ':
' → logprob: -12.437488555908203
    9. '	for' → logprob: -12.937488555908203
    10. ',' → logprob: -13.187488555908203

Token 1246: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20577146112918854
    2. '   ' → logprob: -2.2057714462280273
    3. ' for' → logprob: -2.5807714462280273
    4. 'i' → logprob: -10.080771446228027
    5. ' i' → logprob: -10.330771446228027
    6. ' ' → logprob: -12.330771446228027
    7. '    
' → logprob: -12.580771446228027
    8. '```' → logprob: -12.580771446228027
    9. '	for' → logprob: -12.830771446228027
    10. '
' → logprob: -12.830771446228027

Token 1247: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00627584382891655
    2. ' for' → logprob: -5.131275653839111
    3. 'range' → logprob: -9.13127613067627
    4. '   ' → logprob: -9.38127613067627
    5. '#' → logprob: -10.50627613067627
    6. 'in' → logprob: -10.63127613067627
    7. 'a' → logprob: -11.00627613067627
    8. 's' → logprob: -11.38127613067627
    9. 'continue' → logprob: -11.63127613067627
    10. '
' → logprob: -12.13127613067627

Token 1248: ' points' (ID: 5571)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.153967022895813
    2. 'range' → logprob: -1.278967022895813
    3. '   ' → logprob: -1.528967022895813
    4. ' range' → logprob: -2.1539669036865234
    5. ' for' → logprob: -3.0289669036865234
    6. 'k' → logprob: -4.653966903686523
    7. 'i' → logprob: -5.403966903686523
    8. ' ' → logprob: -5.903966903686523
    9. 'v' → logprob: -6.653966903686523
    10. ' i' → logprob: -6.653966903686523

Token 1249: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8114455938339233
    2. 'i' → logprob: -1.8114455938339233
    3. '_inter' → logprob: -2.061445713043213
    4. 'd' → logprob: -2.436445713043213
    5. '2' → logprob: -2.561445713043213
    6. '   ' → logprob: -2.686445713043213
    7. 'inter' → logprob: -2.686445713043213
    8. 'de' → logprob: -2.686445713043213
    9. '_i' → logprob: -3.686445713043213
    10. ' ' → logprob: -3.811445713043213

Token 1250: '2' (ID: 17)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.025667428970337
    2. '_i' → logprob: -1.650667428970337
    3. 'id' → logprob: -2.150667428970337
    4. 'i' → logprob: -2.650667428970337
    5. 'inter' → logprob: -2.775667428970337
    6. 'for' → logprob: -3.150667428970337
    7. '_ids' → logprob: -3.150667428970337
    8. 'de' → logprob: -3.525667428970337
    9. '_inter' → logprob: -4.775667190551758
    10. '=' → logprob: -4.775667190551758

Token 1251: 'i' (ID: 72)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.10852763801813126
    2. '*(' → logprob: -2.733527660369873
    3. '*' → logprob: -4.483527660369873
    4. ' *' → logprob: -4.733527660369873
    5. 'i' → logprob: -4.858527660369873
    6. '(' → logprob: -4.858527660369873
    7. '+' → logprob: -6.608527660369873
    8. ' +' → logprob: -7.858527660369873
    9. '(i' → logprob: -9.108527183532715
    10. '+i' → logprob: -9.733527183532715

Token 1252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2881641983985901
    2. ' ,' → logprob: -2.1631641387939453
    3. ' and' → logprob: -2.7881641387939453
    4. '   ' → logprob: -3.6631641387939453
    5. 'and' → logprob: -4.038164138793945
    6. '+' → logprob: -4.663164138793945
    7. '*' → logprob: -4.788164138793945
    8. ' ' → logprob: -5.038164138793945
    9. '2' → logprob: -5.788164138793945
    10. ' *' → logprob: -7.538164138793945

Token 1253: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0305487047880888
    2. ' ' → logprob: -3.5305488109588623
    3. '   ' → logprob: -7.155548572540283
    4. '  ' → logprob: -11.905549049377441
    5. '    ' → logprob: -12.280549049377441
    6. '
' → logprob: -13.280549049377441
    7. '    
' → logprob: -13.530549049377441
    8. '       ' → logprob: -15.030549049377441
    9. '     ' → logprob: -15.030549049377441
    10. '4' → logprob: -15.155549049377441

Token 1254: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009140860638581216
    2. ' ' → logprob: -7.375914096832275
    3. '   ' → logprob: -8.250913619995117
    4. 'for' → logprob: -11.375913619995117
    5. '
' → logprob: -12.625913619995117
    6. '  ' → logprob: -13.250913619995117
    7. '(' → logprob: -13.375913619995117
    8. '[' → logprob: -13.375913619995117
    9. 'range' → logprob: -13.875913619995117
    10. 'and' → logprob: -14.000913619995117

Token 1255: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04104255512356758
    2. '*i' → logprob: -3.9160425662994385
    3. '(' → logprob: -5.041042327880859
    4. '(i' → logprob: -5.166042327880859
    5. '*(' → logprob: -5.291042327880859
    6. '*' → logprob: -6.541042327880859
    7. '2' → logprob: -7.791042327880859
    8. '+' → logprob: -8.16604232788086
    9. ' i' → logprob: -8.29104232788086
    10. '```' → logprob: -8.29104232788086

Token 1256: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06076686084270477
    2. '+' → logprob: -3.1857669353485107
    3. ' ,' → logprob: -4.935766696929932
    4. '2' → logprob: -5.560766696929932
    5. '   ' → logprob: -5.685766696929932
    6. ' ' → logprob: -6.935766696929932
    7. ' +' → logprob: -7.310766696929932
    8. ':' → logprob: -7.435766696929932
    9. ',
' → logprob: -8.81076717376709
    10. '4' → logprob: -8.93576717376709

Token 1257: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004064032807946205
    2. '0' → logprob: -5.754064083099365
    3. '2' → logprob: -7.129064083099365
    4. ' ' → logprob: -10.004063606262207
    5. '+' → logprob: -11.129063606262207
    6. ',' → logprob: -11.879063606262207
    7. '   ' → logprob: -12.504063606262207
    8. '
' → logprob: -12.629063606262207
    9. '(' → logprob: -12.754063606262207
    10. '=' → logprob: -14.129063606262207

Token 1258: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19341158866882324
    2. ' for' → logprob: -2.5684115886688232
    3. '   ' → logprob: -2.6934115886688232
    4. ':' → logprob: -3.8184115886688232
    5. ',' → logprob: -5.568411827087402
    6. ':
' → logprob: -6.193411827087402
    7. ' ' → logprob: -7.068411827087402
    8. 'range' → logprob: -7.443411827087402
    9. ' =' → logprob: -7.943411827087402
    10. '=' → logprob: -8.193411827087402

Token 1259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9641040563583374
    2. ' for' → logprob: -0.9641040563583374
    3. 'for' → logprob: -1.4641040563583374
    4. ',' → logprob: -5.964104175567627
    5. ' ' → logprob: -7.339104175567627
    6. ')' → logprob: -7.339104175567627
    7. '	for' → logprob: -7.589104175567627
    8. ':' → logprob: -7.839104175567627
    9. ' and' → logprob: -8.839103698730469
    10. ' (' → logprob: -8.964103698730469

Token 1260: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00036287534749135375
    2. '   ' → logprob: -8.62536334991455
    3. ' for' → logprob: -8.62536334991455
    4. 'i' → logprob: -12.87536334991455
    5. '```' → logprob: -14.62536334991455
    6. 'range' → logprob: -14.87536334991455
    7. '#' (adapté à ' #') → logprob: -15.87536334991455
    8. '    
' → logprob: -16.250362396240234
    9. '
' → logprob: -16.375362396240234
    10. '	for' → logprob: -17.375362396240234

Token 1261: ' points' (ID: 5571)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009821848012506962
    2. ' for' → logprob: -4.759821891784668
    3. '   ' → logprob: -6.759821891784668
    4. '
' → logprob: -10.259821891784668
    5. '```' → logprob: -12.509821891784668
    6. '    
' → logprob: -12.634821891784668
    7. '	for' → logprob: -13.384821891784668
    8. 'i' → logprob: -14.009821891784668
    9. ' ' → logprob: -14.009821891784668
    10. 'range' → logprob: -14.884821891784668

Token 1262: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.2836170196533203
    2. 'for' → logprob: -1.5336170196533203
    3. '_id' → logprob: -2.0336170196533203
    4. '_ids' → logprob: -2.1586170196533203
    5. 'from' → logprob: -3.2836170196533203
    6. '2' → logprob: -3.2836170196533203
    7. 'i' → logprob: -3.5336170196533203
    8. '   ' → logprob: -3.6586170196533203
    9. 'def' → logprob: -4.03361701965332
    10. 'id' → logprob: -4.15861701965332

Token 1263: ''un' (ID: 9788)
  Prédit: ''inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''inter' → logprob: -0.368257611989975
    2. 'inter' → logprob: -1.3682576417922974
    3. 'intersection' → logprob: -2.993257522583008
    4. '_inter' → logprob: -7.118257522583008
    5. ''intérêt' → logprob: -7.368257522583008
    6. '2' → logprob: -7.868257522583008
    7. 'i' → logprob: -8.118257522583008
    8. 'index' → logprob: -8.618257522583008
    9. ''int' → logprob: -8.618257522583008
    10. 'int' → logprob: -8.743257522583008

Token 1264: ' cercle' (ID: 172399)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6876444816589355
    2. 'inter' → logprob: -1.5626444816589355
    3. ' cercle' → logprob: -2.5626444816589355
    4. 'c' → logprob: -2.9376444816589355
    5. 'cer' → logprob: -3.1876444816589355
    6. 'e' → logprob: -3.5626444816589355
    7. '(i' → logprob: -4.3126444816589355
    8. ''inter' → logprob: -4.5626444816589355
    9. '(inter' → logprob: -4.5626444816589355
    10. '
' → logprob: -4.5626444816589355

Token 1265: ' appara' (ID: 52982)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8057541251182556
    2. '   ' → logprob: -1.8057541847229004
    3. ' i' → logprob: -2.4307541847229004
    4. 'for' → logprob: -2.5557541847229004
    5. ' =' → logprob: -2.9307541847229004
    6. '2' → logprob: -3.5557541847229004
    7. ' for' → logprob: -3.6807541847229004
    8. '_i' → logprob: -3.9307541847229004
    9. 's' → logprob: -4.0557541847229
    10. ' (' → logprob: -4.5557541847229

Token 1266: 'issent' (ID: 31556)
  Prédit: 'issent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issent' → logprob: -0.10130496323108673
    2. 'ss' → logprob: -3.3513050079345703
    3. 'ra' → logprob: -3.8513050079345703
    4. 'r' → logprob: -4.85130500793457
    5. '
' → logprob: -4.97630500793457
    6. 'issant' → logprob: -5.60130500793457
    7. '**' → logprob: -5.85130500793457
    8. '\' → logprob: -6.22630500793457
    9. '[' → logprob: -6.35130500793457
    10. '(' → logprob: -6.47630500793457

Token 1267: ' par' (ID: 686)
  Prédit: 'entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entre' → logprob: -1.6708537340164185
    2. ' entre' → logprob: -2.045853614807129
    3. 'à' → logprob: -2.170853614807129
    4. '   ' → logprob: -2.295853614807129
    5. 'sur' → logprob: -2.420853614807129
    6. 'dans' → logprob: -2.795853614807129
    7. 'for' → logprob: -3.045853614807129
    8. ':' → logprob: -3.295853614807129
    9. ',' → logprob: -3.545853614807129
    10. '2' → logprob: -3.795853614807129

Token 1268: ' p' (ID: 275)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7868160605430603
    2. 'pa' → logprob: -1.536816120147705
    3. 'p' → logprob: -2.161816120147705
    4. 'pairs' → logprob: -2.286816120147705
    5. 'pair' → logprob: -3.411816120147705
    6. 'i' → logprob: -3.786816120147705
    7. 'cou' → logprob: -5.036816120147705
    8. '4' → logprob: -5.286816120147705
    9. 'inter' → logprob: -5.536816120147705
    10. '[' → logprob: -5.661816120147705

Token 1269: 'aires' (ID: 8507)
  Prédit: 'air'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'air' → logprob: -1.0449084043502808
    2. 'airs' → logprob: -1.4199084043502808
    3. 'aires' → logprob: -2.1699085235595703
    4. 'oints' → logprob: -2.5449085235595703
    5. '2' → logprob: -2.7949085235595703
    6. 'aire' → logprob: -2.7949085235595703
    7. 'ar' → logprob: -3.5449085235595703
    8. 'oint' → logprob: -3.7949085235595703
    9. '1' → logprob: -4.41990852355957
    10. 'i' → logprob: -4.91990852355957

Token 1270: ';' (ID: 26)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.515402615070343
    2. 'for' → logprob: -1.0154025554656982
    3. ' for' → logprob: -3.3904025554656982
    4. ',' → logprob: -5.640402793884277
    5. ':' → logprob: -7.265402793884277
    6. ' ' → logprob: -7.515402793884277
    7. '
' → logprob: -7.890402793884277
    8. '	for' → logprob: -8.265402793884277
    9. '       ' → logprob: -8.890402793884277
    10. '  ' → logprob: -9.140402793884277

Token 1271: ' construire' (ID: 92473)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012140447506681085
    2. '   ' → logprob: -7.376214027404785
    3. ' for' → logprob: -8.126214027404785
    4. 'start' → logprob: -9.126214027404785
    5. 'offset' → logprob: -9.376214027404785
    6. 'base' → logprob: -9.376214027404785
    7. 'i' → logprob: -11.876214027404785
    8. '#' → logprob: -13.501214027404785
    9. 'from' → logprob: -14.126214027404785
    10. 'next' → logprob: -14.626214027404785

Token 1272: ' les' (ID: 1341)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.49084535241127014
    2. 'for' → logprob: -1.3658453226089478
    3. ' edges' → logprob: -2.4908454418182373
    4. '   ' → logprob: -4.240845203399658
    5. 'i' → logprob: -5.240845203399658
    6. 'graph' → logprob: -5.490845203399658
    7. '_edges' → logprob: -5.615845203399658
    8. 'ar' → logprob: -5.865845203399658
    9. 'range' → logprob: -6.365845203399658
    10. ' for' → logprob: -6.365845203399658

Token 1273: ' connections' (ID: 21069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8551889061927795
    2. 'edges' → logprob: -1.2301888465881348
    3. '#' → logprob: -1.9801888465881348
    4. 'ar' → logprob: -2.3551888465881348
    5. 'graph' → logprob: -3.4801888465881348
    6. 'segments' → logprob: -4.355188846588135
    7. 'if' → logprob: -6.730188846588135
    8. 'segment' → logprob: -7.105188846588135
    9. '```' → logprob: -7.105188846588135
    10. '   ' → logprob: -7.980188846588135

Token 1274: ' possibles' (ID: 97753)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10328163206577301
    2. ' for' → logprob: -2.8532817363739014
    3. '   ' → logprob: -3.2282817363739014
    4. ' between' → logprob: -8.10328197479248
    5. 'between' → logprob: -8.60328197479248
    6. '
' → logprob: -9.60328197479248
    7. '    
' → logprob: -9.85328197479248
    8. ' ' → logprob: -9.85328197479248
    9. 'i' → logprob: -10.35328197479248
    10. '	for' → logprob: -10.72828197479248

Token 1275: ' :
' (ID: 10039)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01686927117407322
    2. ' for' → logprob: -4.391869068145752
    3. '   ' → logprob: -5.516869068145752
    4. '
' → logprob: -8.51686954498291
    5. '```' → logprob: -9.64186954498291
    6. '    
' → logprob: -10.89186954498291
    7. '	for' → logprob: -12.14186954498291
    8. ' ' → logprob: -12.26686954498291
    9. ',' → logprob: -12.26686954498291
    10. 'between' → logprob: -12.39186954498291

Token 1276: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16537488996982574
    2. '   ' → logprob: -2.165374994277954
    3. ' for' → logprob: -3.290374994277954
    4. 'i' → logprob: -8.290374755859375
    5. '
' → logprob: -9.540374755859375
    6. '    
' → logprob: -9.790374755859375
    7. '```' → logprob: -10.165374755859375
    8. '#' → logprob: -10.290374755859375
    9. ' i' → logprob: -12.165374755859375
    10. '	for' → logprob: -12.415374755859375

Token 1277: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39058348536491394
    2. ' for' → logprob: -1.1405835151672363
    3. '   ' → logprob: -6.140583515167236
    4. '```' → logprob: -7.515583515167236
    5. 'i' → logprob: -7.890583515167236
    6. '
' → logprob: -8.515583038330078
    7. '    
' → logprob: -9.140583038330078
    8. ' i' → logprob: -9.265583038330078
    9. 'range' → logprob: -9.515583038330078
    10. 'n' → logprob: -10.390583038330078

Token 1278: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.7610454708337784e-05
    2. '#' → logprob: -11.375027656555176
    3. 'offset' → logprob: -12.250027656555176
    4. '   ' → logprob: -12.375027656555176
    5. 'i' → logprob: -12.500027656555176
    6. 'start' → logprob: -13.375027656555176
    7. ' for' → logprob: -13.750027656555176
    8. 'def' → logprob: -16.25002670288086
    9. 'base' → logprob: -16.25002670288086
    10. '
' → logprob: -16.37502670288086

Token 1279: ' la' (ID: 557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17804042994976044
    2. ' for' → logprob: -2.0530405044555664
    3. 'i' → logprob: -3.8030405044555664
    4. ' i' → logprob: -5.178040504455566
    5. 'if' → logprob: -6.303040504455566
    6. '   ' → logprob: -6.678040504455566
    7. 'v' → logprob: -7.553040504455566
    8. '#' → logprob: -7.553040504455566
    9. ' if' → logprob: -7.553040504455566
    10. ' (' → logprob: -7.678040504455566

Token 1280: ' paire' (ID: 148856)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01204333920031786
    2. '#' → logprob: -5.137043476104736
    3. ' for' → logprob: -5.262043476104736
    4. '   ' → logprob: -8.012042999267578
    5. 'center' → logprob: -9.387042999267578
    6. ' #' → logprob: -9.387042999267578
    7. 'i' → logprob: -9.637042999267578
    8. 'r' → logprob: -9.887042999267578
    9. 'base' → logprob: -10.137042999267578
    10. 'def' → logprob: -10.387042999267578

Token 1281: ' de' (ID: 334)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.8681387305259705
    2. ' entre' → logprob: -1.7431387901306152
    3. 'between' → logprob: -2.2431387901306152
    4. '0' → logprob: -2.9931387901306152
    5. ' (' → logprob: -3.2431387901306152
    6. '2' → logprob: -3.2431387901306152
    7. '(' → logprob: -3.3681387901306152
    8. ',' → logprob: -3.3681387901306152
    9. ' =' → logprob: -3.7431387901306152
    10. '[' → logprob: -3.9931387901306152

Token 1282: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.7817888259887695
    2. '2' → logprob: -1.1567888259887695
    3. 'vertices' → logprob: -2.5317888259887695
    4. 'inter' → logprob: -2.9067888259887695
    5. 'som' → logprob: -3.4067888259887695
    6. 'segments' → logprob: -4.6567888259887695
    7. 'p' → logprob: -4.9067888259887695
    8. '(' → logprob: -5.1567888259887695
    9. 's' → logprob: -5.4067888259887695
    10. ' points' → logprob: -5.4067888259887695

Token 1283: ' d' (ID: 272)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3249768018722534
    2. '(' → logprob: -1.4499768018722534
    3. ' (' → logprob: -1.8249768018722534
    4. ',' → logprob: -1.9499768018722534
    5. '   ' → logprob: -3.074976921081543
    6. 'for' → logprob: -3.199976921081543
    7. ' ' → logprob: -3.574976921081543
    8. ' de' → logprob: -4.199976921081543
    9. ' for' → logprob: -4.574976921081543
    10. '[' → logprob: -4.699976921081543

Token 1284: ''un' (ID: 9788)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.771362841129303
    2. 'inter' → logprob: -1.2713627815246582
    3. ''inter' → logprob: -1.5213627815246582
    4. 'i' → logprob: -3.771362781524658
    5. '(inter' → logprob: -5.271362781524658
    6. 'int' → logprob: -5.896362781524658
    7. '_inter' → logprob: -6.021362781524658
    8. '(i' → logprob: -6.396362781524658
    9. ''int' → logprob: -7.021362781524658
    10. '(' → logprob: -7.646362781524658

Token 1285: ' même' (ID: 9679)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16141855716705322
    2. ' cercle' → logprob: -2.7864184379577637
    3. ' même' → logprob: -3.1614184379577637
    4. 'm' → logprob: -4.536418437957764
    5. 'i' → logprob: -4.536418437957764
    6. 'cer' → logprob: -4.661418437957764
    7. 'e' → logprob: -5.911418437957764
    8. '```' → logprob: -6.036418437957764
    9. '_c' → logprob: -6.161418437957764
    10. 'even' → logprob: -7.286418437957764

Token 1286: ' cercle' (ID: 172399)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.05758347734808922
    2. 'i' → logprob: -3.3075835704803467
    3. 'cer' → logprob: -5.057583332061768
    4. ' cercle' → logprob: -5.182583332061768
    5. 'inter' → logprob: -5.932583332061768
    6. 'circle' → logprob: -6.307583332061768
    7. 'for' → logprob: -7.057583332061768
    8. '2' → logprob: -8.057583808898926
    9. 'indice' → logprob: -8.307583808898926
    10. 'segment' → logprob: -8.432583808898926

Token 1287: ' d' (ID: 272)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.5321448445320129
    2. 'for' → logprob: -1.5321447849273682
    3. ' pour' → logprob: -3.282144784927368
    4. '   ' → logprob: -3.407144784927368
    5. ' for' → logprob: -3.657144784927368
    6. ',' → logprob: -3.657144784927368
    7. ':' → logprob: -4.032145023345947
    8. ' between' → logprob: -4.282145023345947
    9. ' (' → logprob: -4.782145023345947
    10. 'between' → logprob: -4.907145023345947

Token 1288: ''inter' (ID: 55731)
  Prédit: ''inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''inter' → logprob: -0.4398903250694275
    2. 'i' → logprob: -1.6898903846740723
    3. 'inter' → logprob: -2.6898903846740723
    4. 'ans' → logprob: -3.4398903846740723
    5. 'intersection' → logprob: -3.5648903846740723
    6. 'e' → logprob: -4.314890384674072
    7. '_inter' → logprob: -5.564890384674072
    8. '(i' → logprob: -5.564890384674072
    9. 'for' → logprob: -5.939890384674072
    10. ''i' → logprob: -6.064890384674072

Token 1289: 'sections' (ID: 52783)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.04343964159488678
    2. 'ter' → logprob: -4.293439865112305
    3. 'section' → logprob: -4.293439865112305
    4. '#' → logprob: -5.043439865112305
    5. 'érêt' → logprob: -6.168439865112305
    6. 'erse' → logprob: -6.668439865112305
    7. 'rest' → logprob: -6.918439865112305
    8. 'face' → logprob: -7.168439865112305
    9. 'ection' → logprob: -7.793439865112305
    10. '[' → logprob: -7.793439865112305

Token 1290: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24507994949817657
    2. '   ' → logprob: -2.24507999420166
    3. ' for' → logprob: -2.24507999420166
    4. '
' → logprob: -6.49507999420166
    5. ' pour' → logprob: -6.99507999420166
    6. ',' → logprob: -6.99507999420166
    7. ':' → logprob: -7.49507999420166
    8. '#' → logprob: -7.74507999420166
    9. ' (' → logprob: -7.87007999420166
    10. ' between' → logprob: -9.24507999420166

Token 1291: 'par' (ID: 796)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06449392437934875
    2. ')' → logprob: -2.8144938945770264
    3. '#' → logprob: -7.8144941329956055
    4. 'vertices' → logprob: -8.439494132995605
    5. 'for' → logprob: -8.439494132995605
    6. ' ' → logprob: -8.439494132995605
    7. '```' → logprob: -8.439494132995605
    8. 'i' → logprob: -8.564494132995605
    9. 'v' → logprob: -8.814494132995605
    10. '(' → logprob: -8.814494132995605

Token 1292: ' exemple' (ID: 26320)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3457416594028473
    2. 'ex' → logprob: -2.7207417488098145
    3. 'for' → logprob: -2.7207417488098145
    4. '#' → logprob: -2.9707417488098145
    5. '2' → logprob: -3.9707417488098145
    6. 'fait' → logprob: -4.0957417488098145
    7. 'continue' → logprob: -4.2207417488098145
    8. 'def' → logprob: -4.9707417488098145
    9. '```' → logprob: -5.2207417488098145
    10. 'fois' → logprob: -5.3457417488098145

Token 1293: ',' (ID: 11)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.23107531666755676
    2. ' ' → logprob: -2.7310752868652344
    3. '   ' → logprob: -3.3560752868652344
    4. '(' → logprob: -3.3560752868652344
    5. ' (' → logprob: -3.7310752868652344
    6. ')' → logprob: -4.481075286865234
    7. 'for' → logprob: -4.606075286865234
    8. ' for' → logprob: -4.731075286865234
    9. ',' → logprob: -4.731075286865234
    10. ' =' → logprob: -6.981075286865234

Token 1294: ' points' (ID: 5571)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10868131369352341
    2. '#' → logprob: -2.8586812019348145
    3. 'vertices' → logprob: -4.8586812019348145
    4. '(' → logprob: -5.1086812019348145
    5. 'les' → logprob: -5.2336812019348145
    6. 'p' → logprob: -5.2336812019348145
    7. 'for' → logprob: -5.6086812019348145
    8. ' ' → logprob: -5.8586812019348145
    9. '(p' → logprob: -5.8586812019348145
    10. '   ' → logprob: -5.9836812019348145

Token 1295: ' d' (ID: 272)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.028836753219366074
    2. '[' → logprob: -4.403836727142334
    3. '   ' → logprob: -5.028836727142334
    4. ' ' → logprob: -5.278836727142334
    5. ' =' → logprob: -6.403836727142334
    6. '=' → logprob: -7.028836727142334
    7. '```' → logprob: -7.153836727142334
    8. '(' → logprob: -8.528837203979492
    9. '.append' → logprob: -8.903837203979492
    10. '
' → logprob: -9.278837203979492

Token 1296: ''inter' (ID: 55731)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.7015170454978943
    2. 'intersection' → logprob: -1.576517105102539
    3. 'i' → logprob: -2.201517105102539
    4. ''inter' → logprob: -2.826517105102539
    5. 'indice' → logprob: -3.076517105102539
    6. 'indices' → logprob: -3.201517105102539
    7. 'index' → logprob: -3.576517105102539
    8. '(inter' → logprob: -6.201517105102539
    9. 'id' → logprob: -6.701517105102539
    10. 'int' → logprob: -6.826517105102539

Token 1297: 'section' (ID: 6471)
  Prédit: 'sections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sections' → logprob: -0.44047272205352783
    2. 'section' → logprob: -1.1904727220535278
    3. '_points' → logprob: -3.4404726028442383
    4. '_inter' → logprob: -5.315472602844238
    5. 's' → logprob: -6.565472602844238
    6. 'points' → logprob: -6.565472602844238
    7. ' ' → logprob: -6.815472602844238
    8. '#' → logprob: -6.940472602844238
    9. 'face' → logprob: -6.940472602844238
    10. '_sections' → logprob: -6.940472602844238

Token 1298: ' entre' (ID: 3853)
  Prédit: ' entre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.9292605519294739
    2. ')' → logprob: -1.554260492324829
    3. '   ' → logprob: -2.679260492324829
    4. ' ' → logprob: -2.929260492324829
    5. ' d' → logprob: -3.179260492324829
    6. 'entre' → logprob: -3.304260492324829
    7. 'd' → logprob: -3.429260492324829
    8. 'sur' → logprob: -3.554260492324829
    9. ' between' → logprob: -3.804260492324829
    10. ',' → logprob: -4.179260730743408

Token 1299: ' i' (ID: 575)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.02163955196738243
    2. 'vertices' → logprob: -4.021639347076416
    3. ' circles' → logprob: -7.021639347076416
    4. 'c' → logprob: -7.521639347076416
    5. 'circle' → logprob: -7.646639347076416
    6. 'circ' → logprob: -7.646639347076416
    7. 'i' → logprob: -8.271639823913574
    8. '#' → logprob: -8.771639823913574
    9. 'cycles' → logprob: -9.146639823913574
    10. 'inter' → logprob: -9.396639823913574

Token 1300: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.577826201915741
    2. ',' → logprob: -1.8278262615203857
    3. 'et' → logprob: -1.9528262615203857
    4. ' and' → logprob: -2.4528262615203857
    5. ' ,' → logprob: -3.3278262615203857
    6. '*' → logprob: -4.952826023101807
    7. 'and' → logprob: -5.702826023101807
    8. ' ' → logprob: -6.327826023101807
    9. ' *' → logprob: -7.452826023101807
    10. ')' → logprob: -8.327826499938965

Token 1301: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08897250890731812
    2. ' i' → logprob: -2.463972568511963
    3. ' ' → logprob: -11.213972091674805
    4. '(i' → logprob: -11.713972091674805
    5. ' (' → logprob: -12.963972091674805
    6. '	i' → logprob: -13.088972091674805
    7. '```' → logprob: -13.838972091674805
    8. '   ' → logprob: -14.088972091674805
    9. ''i' → logprob: -14.213972091674805
    10. '2' → logprob: -14.213972091674805

Token 1302: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003769303730223328
    2. ' +' → logprob: -8.12537670135498
    3. ')' → logprob: -11.50037670135498
    4. '+
' → logprob: -11.62537670135498
    5. '+i' → logprob: -11.62537670135498
    6. '-' → logprob: -11.87537670135498
    7. '```' → logprob: -12.12537670135498
    8. '
' → logprob: -12.12537670135498
    9. 'i' → logprob: -12.25037670135498
    10. ')+' → logprob: -12.75037670135498

Token 1303: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1160349458805285e-05
    2. ' ' → logprob: -11.875011444091797
    3. '0' → logprob: -13.125011444091797
    4. '+' → logprob: -14.000011444091797
    5. '
' → logprob: -14.625011444091797
    6. '2' → logprob: -15.000011444091797
    7. '   ' → logprob: -16.562511444091797
    8. '```' → logprob: -17.000011444091797
    9. '(' → logprob: -17.875011444091797
    10. '' → logprob: -18.000011444091797

Token 1304: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31511467695236206
    2. '):' → logprob: -1.5651147365570068
    3. '):
' → logprob: -3.565114736557007
    4. '   ' → logprob: -4.315114498138428
    5. ')
' → logprob: -4.315114498138428
    6. ' )' → logprob: -6.815114498138428
    7. ',' → logprob: -6.940114498138428
    8. '):

' → logprob: -7.065114498138428
    9. '),' → logprob: -7.190114498138428
    10. '#' → logprob: -7.940114498138428

Token 1305: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12726792693138123
    2. ' for' → logprob: -2.877267837524414
    3. 'for' → logprob: -3.877267837524414
    4. ':' → logprob: -4.002267837524414
    5. ' ' → logprob: -4.877267837524414
    6. '[' → logprob: -5.752267837524414
    7. '    
' → logprob: -6.377267837524414
    8. ',' → logprob: -6.502267837524414
    9. '<|end|>' → logprob: -6.627267837524414
    10. ' =' → logprob: -6.752267837524414

Token 1306: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4820489287376404
    2. 'for' → logprob: -1.3570489883422852
    3. ' for' → logprob: -2.107048988342285
    4. ':' → logprob: -6.607048988342285
    5. '
' → logprob: -7.107048988342285
    6. 'if' → logprob: -7.857048988342285
    7. ':
' → logprob: -8.857048988342285
    8. '[' → logprob: -8.982048988342285
    9. ',' → logprob: -9.107048988342285
    10. 'v' → logprob: -9.232048988342285

Token 1307: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005138330743648112
    2. ' for' → logprob: -7.625514030456543
    3. '   ' → logprob: -10.875514030456543
    4. 'i' → logprob: -12.125514030456543
    5. '
' → logprob: -14.125514030456543
    6. '```' → logprob: -15.500514030456543
    7. 'n' → logprob: -15.875514030456543
    8. '#' → logprob: -16.125513076782227
    9. 'from' → logprob: -17.000513076782227
    10. '    
' → logprob: -17.000513076782227

Token 1308: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004491007886826992
    2. '   ' → logprob: -6.004490852355957
    3. ' for' → logprob: -6.254490852355957
    4. '
' → logprob: -10.004490852355957
    5. '#' → logprob: -10.379490852355957
    6. '```' → logprob: -12.254490852355957
    7. ' ' → logprob: -13.004490852355957
    8. '    
' → logprob: -13.004490852355957
    9. 'i' → logprob: -13.504490852355957
    10. '       ' → logprob: -13.754490852355957

Token 1309: ' connex' (ID: 154480)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.054918281733989716
    2. '#' → logprob: -3.6799182891845703
    3. ' for' → logprob: -5.17991828918457
    4. 'if' → logprob: -5.42991828918457
    5. 'p' → logprob: -5.55491828918457
    6. 'pairs' → logprob: -5.80491828918457
    7. 'i' → logprob: -6.05491828918457
    8. 'points' → logprob: -6.17991828918457
    9. 'next' → logprob: -6.55491828918457
    10. 'pair' → logprob: -6.92991828918457

Token 1310: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.005520461592823267
    2. 'ion' → logprob: -5.505520343780518
    3. 'ections' → logprob: -6.630520343780518
    4. 'ect' → logprob: -9.505520820617676
    5. 'ctions' → logprob: -11.505520820617676
    6. 'i' → logprob: -11.755520820617676
    7. 'ations' → logprob: -11.880520820617676
    8. 'ités' → logprob: -12.380520820617676
    9. 'ects' → logprob: -12.755520820617676
    10. 'e' → logprob: -12.755520820617676

Token 1311: ' entre' (ID: 3853)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.848401665687561
    2. 'between' → logprob: -1.473401665687561
    3. ' between' → logprob: -1.598401665687561
    4. ' entre' → logprob: -2.8484015464782715
    5. '   ' → logprob: -3.8484015464782715
    6. ' for' → logprob: -4.3484015464782715
    7. '
' → logprob: -4.3484015464782715
    8. '=' → logprob: -4.7234015464782715
    9. ' =' → logprob: -4.8484015464782715
    10. '_between' → logprob: -5.2234015464782715

Token 1312: ' les' (ID: 1341)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0280610304325819
    2. ' ' → logprob: -3.7780609130859375
    3. 'vertices' → logprob: -5.6530609130859375
    4. '(' → logprob: -7.7780609130859375
    5. ' vertices' → logprob: -7.7780609130859375
    6. ' (' → logprob: -8.778060913085938
    7. '   ' → logprob: -9.528060913085938
    8. 'points' → logprob: -10.028060913085938
    9. '
' → logprob: -10.278060913085938
    10. ',' → logprob: -10.778060913085938

Token 1313: ' points' (ID: 5571)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00451960414648056
    2. 'vertices' → logprob: -6.379519462585449
    3. '(' → logprob: -7.254519462585449
    4. '4' → logprob: -7.629519462585449
    5. 'points' → logprob: -7.879519462585449
    6. '   ' → logprob: -7.879519462585449
    7. ' ' → logprob: -8.25451946258545
    8. '#' → logprob: -8.37951946258545
    9. 'pairs' → logprob: -9.50451946258545
    10. 'p' → logprob: -9.62951946258545

Token 1314: ' d' (ID: 272)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.213425636291504
    2. 'for' → logprob: -1.588425636291504
    3. '   ' → logprob: -2.213425636291504
    4. 'de' → logprob: -2.588425636291504
    5. 'd' → logprob: -2.838425636291504
    6. ' de' → logprob: -2.963425636291504
    7. 'inter' → logprob: -3.338425636291504
    8. '(' → logprob: -3.588425636291504
    9. 'of' → logprob: -3.838425636291504
    10. ' of' → logprob: -4.213425636291504

Token 1315: ''inter' (ID: 55731)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.4015006422996521
    2. 'inter' → logprob: -1.2765007019042969
    3. ''inter' → logprob: -3.401500701904297
    4. 'i' → logprob: -4.151500701904297
    5. 'int' → logprob: -6.401500701904297
    6. '_inter' → logprob: -8.401500701904297
    7. 'interaction' → logprob: -8.526500701904297
    8. '(inter' → logprob: -8.651500701904297
    9. '(i' → logprob: -9.276500701904297
    10. '2' → logprob: -9.901500701904297

Token 1316: 'section' (ID: 6471)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.011195892468094826
    2. 'points' → logprob: -4.761195659637451
    3. 'section' → logprob: -6.386195659637451
    4. 'sections' → logprob: -7.136195659637451
    5. 'for' → logprob: -10.01119613647461
    6. '_sections' → logprob: -10.51119613647461
    7. 'p' → logprob: -12.63619613647461
    8. 'point' → logprob: -13.01119613647461
    9. '_faces' → logprob: -13.01119613647461
    10. '#' → logprob: -13.13619613647461

Token 1317: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2511025667190552
    2. ' for' → logprob: -2.3761024475097656
    3. '   ' → logprob: -2.6261024475097656
    4. ' between' → logprob: -4.501102447509766
    5. 'between' → logprob: -4.751102447509766
    6. ' entre' → logprob: -5.001102447509766
    7. '#' → logprob: -5.126102447509766
    8. 's' → logprob: -5.626102447509766
    9. ' pour' → logprob: -6.001102447509766
    10. '
' → logprob: -6.251102447509766

Token 1318: ''une' (ID: 13337)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2662012577056885
    2. '2' → logprob: -2.3912012577056885
    3. 'de' → logprob: -3.7662012577056885
    4. 'ces' → logprob: -3.8912012577056885
    5. 'eux' → logprob: -4.141201019287109
    6. '(i' → logprob: -4.266201019287109
    7. '(' → logprob: -4.391201019287109
    8. 'c' → logprob: -4.891201019287109
    9. '[i' → logprob: -5.016201019287109
    10. 'inter' → logprob: -5.141201019287109

Token 1319: ' chaîne' (ID: 89288)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7702530026435852
    2. 'i' → logprob: -1.0202529430389404
    3. ' i' → logprob: -3.5202529430389404
    4. 'cer' → logprob: -3.6452529430389404
    5. 'part' → logprob: -4.3952531814575195
    6. '```' → logprob: -4.7702531814575195
    7. ' paire' → logprob: -4.7702531814575195
    8. 'cir' → logprob: -4.8952531814575195
    9. 'range' → logprob: -5.0202531814575195
    10. ' ' → logprob: -5.1452531814575195

Token 1320: ' vo' (ID: 778)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2386808842420578
    2. ' for' → logprob: -2.363680839538574
    3. '   ' → logprob: -2.988680839538574
    4. ' pour' → logprob: -3.988680839538574
    5. '#' → logprob: -4.363680839538574
    6. 'pour' → logprob: -4.863680839538574
    7. ' entre' → logprob: -5.363680839538574
    8. 'between' → logprob: -5.738680839538574
    9. 'i' → logprob: -5.863680839538574
    10. ' between' → logprob: -6.238680839538574

Token 1321: 'isine' (ID: 24412)
  Prédit: 'rt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rt' → logprob: -0.432647168636322
    2. 'r' → logprob: -1.6826472282409668
    3. 't' → logprob: -2.432647228240967
    4. 'isine' → logprob: -4.557647228240967
    5. 'c' → logprob: -4.682647228240967
    6. 'us' → logprob: -4.682647228240967
    7. 'rs' → logprob: -4.932647228240967
    8. 'vertices' → logprob: -5.807647228240967
    9. 'ices' → logprob: -6.057647228240967
    10. 'ur' → logprob: -6.057647228240967

Token 1322: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8945821523666382
    2. 'for' → logprob: -0.8945821523666382
    3. '
' → logprob: -1.8945821523666382
    4. ' for' → logprob: -3.5195822715759277
    5. '    
' → logprob: -6.144582271575928
    6. '  
' → logprob: -9.26958179473877
    7. '

' → logprob: -10.39458179473877
    8. '	for' → logprob: -10.51958179473877
    9. '#' → logprob: -10.64458179473877
    10. '   
' → logprob: -10.76958179473877

Token 1323: 'i' (ID: 72)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.175822377204895
    2. 'i' → logprob: -1.425822377204895
    3. ' i' → logprob: -1.925822377204895
    4. '   ' → logprob: -2.9258222579956055
    5. ' for' → logprob: -3.0508222579956055
    6. 'for' → logprob: -3.0508222579956055
    7. ')
' → logprob: -3.4258222579956055
    8. '2' → logprob: -3.8008222579956055
    9. ' )' → logprob: -3.8008222579956055
    10. 'n' → logprob: -4.1758222579956055

Token 1324: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3436966836452484
    2. ',' → logprob: -1.7186967134475708
    3. ' +' → logprob: -3.4686965942382812
    4. ' ,' → logprob: -3.8436965942382812
    5. '*' → logprob: -4.093696594238281
    6. ')' → logprob: -4.468696594238281
    7. '),' → logprob: -4.593696594238281
    8. '   ' → logprob: -5.218696594238281
    9. ' and' → logprob: -6.093696594238281
    10. '=' → logprob: -6.218696594238281

Token 1325: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30359122157096863
    2. '   ' → logprob: -1.553591251373291
    3. ' for' → logprob: -3.178591251373291
    4. '
' → logprob: -4.928591251373291
    5. '    
' → logprob: -7.428591251373291
    6. ' ' → logprob: -8.803590774536133
    7. ' 
' → logprob: -9.178590774536133
    8. ':' → logprob: -9.553590774536133
    9. '  
' → logprob: -9.678590774536133
    10. ':
' → logprob: -9.803590774536133

Token 1326: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3487912118434906
    2. ' ceux' → logprob: -2.5987911224365234
    3. ' celles' → logprob: -2.8487911224365234
    4. 'points' → logprob: -3.2237911224365234
    5. 'les' → logprob: -3.7237911224365234
    6. ' ' → logprob: -3.7237911224365234
    7. ' i' → logprob: -4.098791122436523
    8. ' les' → logprob: -4.348791122436523
    9. ' points' → logprob: -4.348791122436523
    10. 'i' → logprob: -4.848791122436523

Token 1327: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1778717190027237
    2. '2' → logprob: -2.1778717041015625
    3. '(i' → logprob: -3.9278717041015625
    4. '(' → logprob: -4.0528717041015625
    5. ' i' → logprob: -5.0528717041015625
    6. ' ' → logprob: -6.6778717041015625
    7. '   ' → logprob: -6.8028717041015625
    8. ' (' → logprob: -6.8028717041015625
    9. '
' → logprob: -7.3028717041015625
    10. 'n' → logprob: -7.3028717041015625

Token 1328: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0014855816261842847
    2. ' +' → logprob: -6.626485347747803
    3. ')' → logprob: -9.626485824584961
    4. '   ' → logprob: -10.001485824584961
    5. ')+' → logprob: -11.126485824584961
    6. '
' → logprob: -11.626485824584961
    7. '-' → logprob: -11.876485824584961
    8. '+
' → logprob: -12.001485824584961
    9. 'i' → logprob: -13.501485824584961
    10. '```' → logprob: -13.626485824584961

Token 1329: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0029513163026422262
    2. '2' → logprob: -5.877951145172119
    3. ' ' → logprob: -9.002951622009277
    4. '0' → logprob: -11.377951622009277
    5. '
' → logprob: -11.752951622009277
    6. '   ' → logprob: -13.627951622009277
    7. 'i' → logprob: -14.502951622009277
    8. '+' → logprob: -14.752951622009277
    9. '3' → logprob: -14.877951622009277
    10. '```' → logprob: -14.877951622009277

Token 1330: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6601735949516296
    2. ')
' → logprob: -1.0351736545562744
    3. '):
' → logprob: -2.6601736545562744
    4. ',' → logprob: -3.6601736545562744
    5. '):' → logprob: -4.535173416137695
    6. '),' → logprob: -5.160173416137695
    7. 'for' → logprob: -5.285173416137695
    8. '+' → logprob: -6.035173416137695
    9. '   ' → logprob: -6.285173416137695
    10. '#' → logprob: -6.285173416137695

Token 1331: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04152687266469002
    2. '
' → logprob: -3.9165267944335938
    3. '   ' → logprob: -4.041526794433594
    4. ' for' → logprob: -5.916526794433594
    5. '    
' → logprob: -8.166526794433594
    6. '```' → logprob: -8.791526794433594
    7. '#' → logprob: -10.916526794433594
    8. 'i' → logprob: -11.541526794433594
    9. '	for' → logprob: -11.666526794433594
    10. '

' → logprob: -12.041526794433594

Token 1332: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00011570196511456743
    2. '   ' → logprob: -9.500115394592285
    3. '#' (adapté à ' #') → logprob: -10.125115394592285
    4. ' for' → logprob: -14.625115394592285
    5. 'if' → logprob: -15.625115394592285
    6. '
' → logprob: -16.7501163482666
    7. '    
' → logprob: -17.0001163482666
    8. '```' → logprob: -17.0001163482666
    9. 'i' → logprob: -17.2501163482666
    10. 'prev' → logprob: -17.5001163482666

Token 1333: ' Ar' (ID: 1754)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00015717383939772844
    2. '   ' → logprob: -9.000157356262207
    3. 'i' → logprob: -11.125157356262207
    4. '#' → logprob: -11.500157356262207
    5. ' for' → logprob: -12.000157356262207
    6. '```' → logprob: -13.750157356262207
    7. '
' → logprob: -14.500157356262207
    8. 'if' → logprob: -15.375157356262207
    9. '    
' → logprob: -15.500157356262207
    10. 'prev' → logprob: -16.00015640258789

Token 1334: 'êtes' (ID: 23720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03941457346081734
    2. 'r' → logprob: -3.914414644241333
    3. '#' → logprob: -4.164414405822754
    4. '   ' → logprob: -6.414414405822754
    5. 'range' → logprob: -7.039414405822754
    6. 'i' → logprob: -8.039414405822754
    7. ' for' → logprob: -9.539414405822754
    8. 'row' → logprob: -10.039414405822754
    9. 'd' → logprob: -10.289414405822754
    10. '       ' → logprob: -10.414414405822754

Token 1335: ' entre' (ID: 3853)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00222780997864902
    2. ' for' → logprob: -6.752227783203125
    3. '#' → logprob: -7.752227783203125
    4. '   ' → logprob: -7.877227783203125
    5. 'from' → logprob: -9.627227783203125
    6. ' =' → logprob: -10.002227783203125
    7. '
' → logprob: -10.377227783203125
    8. 'idx' → logprob: -11.002227783203125
    9. '=' → logprob: -11.127227783203125
    10. 'i' → logprob: -11.127227783203125

Token 1336: ' les' (ID: 1341)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8114168047904968
    2. 'for' → logprob: -1.5614168643951416
    3. '#' → logprob: -1.9364168643951416
    4. 'vertices' → logprob: -2.3114168643951416
    5. 'i' → logprob: -3.4364168643951416
    6. '(' → logprob: -3.6864168643951416
    7. 'points' → logprob: -4.4364166259765625
    8. 'inter' → logprob: -4.5614166259765625
    9. '   ' → logprob: -5.6864166259765625
    10. 'range' → logprob: -5.6864166259765625

Token 1337: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00636895140632987
    2. 'vertices' → logprob: -5.881369113922119
    3. '#' → logprob: -6.131369113922119
    4. 'for' → logprob: -7.006369113922119
    5. '(' → logprob: -9.131368637084961
    6. '   ' → logprob: -9.506368637084961
    7. 'indices' → logprob: -10.006368637084961
    8. 'vertex' → logprob: -10.006368637084961
    9. 'points' → logprob: -10.631368637084961
    10. 'pairs' → logprob: -10.756368637084961

Token 1338: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006135449279099703
    2. 'vertices' → logprob: -5.7561354637146
    3. '#' → logprob: -6.7561354637146
    4. 'for' → logprob: -7.6311354637146
    5. '(' → logprob: -7.7561354637146
    6. 'inter' → logprob: -8.131134986877441
    7. '
' → logprob: -8.881134986877441
    8. 'pairs' → logprob: -9.631134986877441
    9. 'vertex' → logprob: -10.131134986877441
    10. '4' → logprob: -10.256134986877441

Token 1339: ' points' (ID: 5571)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9856474995613098
    2. 'i' → logprob: -1.985647439956665
    3. 'points' → logprob: -2.110647439956665
    4. '*(' → logprob: -2.360647439956665
    5. 'vertices' → logprob: -2.985647439956665
    6. ' for' → logprob: -3.110647439956665
    7. ' points' → logprob: -3.360647439956665
    8. 'k' → logprob: -3.610647439956665
    9. ' vertices' → logprob: -3.735647439956665
    10. '*i' → logprob: -4.235647678375244

Token 1340: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09199605882167816
    2. '   ' → logprob: -3.59199595451355
    3. ' for' → logprob: -3.59199595451355
    4. 'inter' → logprob: -5.216996192932129
    5. ' =' → logprob: -5.341996192932129
    6. ' of' → logprob: -5.716996192932129
    7. 'of' → logprob: -5.716996192932129
    8. '=' → logprob: -6.216996192932129
    9. ' ' → logprob: -6.216996192932129
    10. '_inter' → logprob: -6.216996192932129

Token 1341: ''inter' (ID: 55731)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.7619921565055847
    2. 'intersection' → logprob: -0.8869921565055847
    3. ''inter' → logprob: -2.1369922161102295
    4. ' intersection' → logprob: -6.88699197769165
    5. '_inter' → logprob: -7.38699197769165
    6. '   ' → logprob: -7.63699197769165
    7. '#' → logprob: -7.88699197769165
    8. ' intersections' → logprob: -8.886992454528809
    9. 'int' → logprob: -9.011992454528809
    10. 'for' → logprob: -9.136992454528809

Token 1342: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.1446283608675003
    2. 'sections' → logprob: -2.0196282863616943
    3. 'ection' → logprob: -6.644628524780273
    4. '#' → logprob: -8.644628524780273
    5. 'ction' → logprob: -9.769628524780273
    6. 's' → logprob: -10.019628524780273
    7. 'set' → logprob: -10.269628524780273
    8. 'points' → logprob: -10.644628524780273
    9. 'action' → logprob: -10.894628524780273
    10. '```' → logprob: -10.894628524780273

Token 1343: ' du' (ID: 1462)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04982968792319298
    2. ' for' → logprob: -3.2998297214508057
    3. '   ' → logprob: -4.924829483032227
    4. 'i' → logprob: -6.674829483032227
    5. ' =' → logprob: -6.674829483032227
    6. '#' → logprob: -8.299829483032227
    7. 'import' → logprob: -8.424829483032227
    8. 's' → logprob: -8.799829483032227
    9. ' ' → logprob: -8.924829483032227
    10. 'def' → logprob: -9.049829483032227

Token 1344: ' même' (ID: 9679)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0424773208796978
    2. '(' → logprob: -3.9174773693084717
    3. 'i' → logprob: -4.042477130889893
    4. '#' → logprob: -6.542477130889893
    5. 'for' → logprob: -7.292477130889893
    6. '(i' → logprob: -7.292477130889893
    7. '```' → logprob: -8.04247760772705
    8. '0' → logprob: -8.79247760772705
    9. 'def' → logprob: -9.16747760772705
    10. '
' → logprob: -9.41747760772705

Token 1345: ' cercle' (ID: 172399)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5603570342063904
    2. 'c' → logprob: -0.9353570342063904
    3. '#' → logprob: -4.685357093811035
    4. 'for' → logprob: -4.810357093811035
    5. 'inter' → logprob: -5.060357093811035
    6. 'circle' → logprob: -6.060357093811035
    7. 'indice' → logprob: -6.310357093811035
    8. 'interval' → logprob: -6.435357093811035
    9. ' cercle' → logprob: -6.435357093811035
    10. 'cer' → logprob: -6.935357093811035

Token 1346: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08747664839029312
    2. 'i' → logprob: -2.9624767303466797
    3. '   ' → logprob: -3.5874767303466797
    4. '#' → logprob: -6.08747673034668
    5. 'if' → logprob: -6.96247673034668
    6. ' for' → logprob: -7.21247673034668
    7. 'inter' → logprob: -9.58747673034668
    8. 'idx' → logprob: -9.83747673034668
    9. '```' → logprob: -10.08747673034668
    10. '
' → logprob: -10.83747673034668

Token 1347: 'par' (ID: 796)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4737412631511688
    2. 'for' → logprob: -1.0987412929534912
    3. ')' → logprob: -3.848741292953491
    4. '   ' → logprob: -4.598741054534912
    5. '#' → logprob: -5.473741054534912
    6. '
' → logprob: -5.973741054534912
    7. '2' → logprob: -6.848741054534912
    8. ' for' → logprob: -6.848741054534912
    9. ' i' → logprob: -7.598741054534912
    10. ')
' → logprob: -7.723741054534912

Token 1348: ' exemple' (ID: 26320)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8742359280586243
    2. 'i' → logprob: -0.9992359280586243
    3. 'def' → logprob: -2.7492358684539795
    4. '#' → logprob: -3.3742358684539795
    5. '   ' → logprob: -3.6242358684539795
    6. 'range' → logprob: -3.7492358684539795
    7. '```' → logprob: -4.374236106872559
    8. '0' → logprob: -4.374236106872559
    9. '2' → logprob: -4.499236106872559
    10. '1' → logprob: -5.374236106872559

Token 1349: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6720964312553406
    2. ' for' → logprob: -1.4220964908599854
    3. 'for' → logprob: -2.1720964908599854
    4. ' i' → logprob: -3.0470964908599854
    5. ')' → logprob: -3.5470964908599854
    6. 'i' → logprob: -4.172096252441406
    7. ' ' → logprob: -4.672096252441406
    8. ':' → logprob: -5.047096252441406
    9. ' pour' → logprob: -5.297096252441406
    10. ',' → logprob: -5.672096252441406

Token 1350: '2' (ID: 17)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7811545729637146
    2. '2' → logprob: -1.2811546325683594
    3. '   ' → logprob: -1.6561546325683594
    4. ' for' → logprob: -3.1561546325683594
    5. ' ' → logprob: -4.781154632568359
    6. 'i' → logprob: -5.531154632568359
    7. ')' → logprob: -5.656154632568359
    8. '
' → logprob: -5.656154632568359
    9. ')
' → logprob: -6.281154632568359
    10. '#' → logprob: -6.406154632568359

Token 1351: 'i' (ID: 72)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.0819008350372314
    2. '*i' → logprob: -1.2069008350372314
    3. '*(' → logprob: -2.3319008350372314
    4. '*n' → logprob: -2.4569008350372314
    5. ' *' → logprob: -2.8319008350372314
    6. '
' → logprob: -2.9569008350372314
    7. '   ' → logprob: -3.9569008350372314
    8. 'i' → logprob: -4.081900596618652
    9. ',' → logprob: -5.331900596618652
    10. '0' → logprob: -5.456900596618652

Token 1352: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4486881494522095
    2. '),' → logprob: -1.3236881494522095
    3. '+' → logprob: -3.19868803024292
    4. ')' → logprob: -4.57368803024292
    5. ' ,' → logprob: -4.69868803024292
    6. '
' → logprob: -5.07368803024292
    7. '],' → logprob: -5.19868803024292
    8. '   ' → logprob: -5.57368803024292
    9. '):
' → logprob: -5.57368803024292
    10. ' and' → logprob: -6.19868803024292

Token 1353: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.778209353797138e-05
    2. '(' → logprob: -10.000067710876465
    3. ' ' → logprob: -10.875067710876465
    4. '   ' → logprob: -12.625067710876465
    5. '
' → logprob: -17.00006866455078
    6. ' (' → logprob: -17.37506866455078
    7. '  ' → logprob: -17.50006866455078
    8. '`' → logprob: -19.12506866455078
    9. '```' → logprob: -19.25006866455078
    10. '    
' → logprob: -19.37506866455078

Token 1354: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001625379954930395
    2. '(' → logprob: -8.750162124633789
    3. ' ' → logprob: -12.625162124633789
    4. '   ' → logprob: -15.000162124633789
    5. '
' → logprob: -15.375162124633789
    6. ' (' → logprob: -16.50016212463379
    7. '```' → logprob: -16.87516212463379
    8. '`' → logprob: -18.25016212463379
    9. '[' → logprob: -18.25016212463379
    10. '...' → logprob: -18.50016212463379

Token 1355: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.583550642360933e-05
    2. ' i' → logprob: -10.250036239624023
    3. '*i' → logprob: -15.250036239624023
    4. '(i' → logprob: -16.875036239624023
    5. '
' → logprob: -17.000036239624023
    6. '	i' → logprob: -17.375036239624023
    7. ' ' → logprob: -18.000036239624023
    8. '+' → logprob: -18.000036239624023
    9. '(' → logprob: -18.125036239624023
    10. '   ' → logprob: -18.375036239624023

Token 1356: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012540032155811787
    2. '),' → logprob: -4.887539863586426
    3. ' +' → logprob: -6.012539863586426
    4. ')' → logprob: -6.637539863586426
    5. ',' → logprob: -8.012539863586426
    6. '   ' → logprob: -8.012539863586426
    7. '],' → logprob: -8.762539863586426
    8. '+i' → logprob: -9.387539863586426
    9. '),
' → logprob: -9.762539863586426
    10. ')
' → logprob: -9.887539863586426

Token 1357: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. '+' → logprob: -13.75000286102295
    3. ' ' → logprob: -13.87500286102295
    4. '
' → logprob: -15.00000286102295
    5. '0' → logprob: -16.062503814697266
    6. '2' → logprob: -16.187503814697266
    7. '   ' → logprob: -16.312503814697266
    8. 'i' → logprob: -16.750003814697266
    9. '```' → logprob: -16.750003814697266
    10. '3' → logprob: -17.000003814697266

Token 1358: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1857072114944458
    2. ')' → logprob: -1.3107072114944458
    3. '):
' → logprob: -1.5607072114944458
    4. ')
' → logprob: -1.9357072114944458
    5. '):' → logprob: -2.6857070922851562
    6. ':' → logprob: -7.560707092285156
    7. 'for' → logprob: -7.935707092285156
    8. '):
' → logprob: -8.185707092285156
    9. ',' → logprob: -8.435707092285156
    10. ')
' → logprob: -8.435707092285156

Token 1359: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06334210187196732
    2. '   ' → logprob: -2.8133420944213867
    3. ' for' → logprob: -6.813342094421387
    4. '```' → logprob: -8.688342094421387
    5. '
' → logprob: -9.563342094421387
    6. 'i' → logprob: -10.438342094421387
    7. '``' → logprob: -13.063342094421387
    8. '    
' → logprob: -13.438342094421387
    9. '	for' → logprob: -13.688342094421387
    10. 'ind' → logprob: -15.188342094421387

Token 1360: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.908022285439074e-05
    2. '   ' → logprob: -9.750059127807617
    3. 'if' → logprob: -15.375059127807617
    4. ' for' → logprob: -15.375059127807617
    5. 'start' → logprob: -16.375059127807617
    6. 'i' → logprob: -16.750059127807617
    7. 'offset' → logprob: -16.750059127807617
    8. 'from' → logprob: -18.000059127807617
    9. '```' → logprob: -18.125059127807617
    10. 'idx' → logprob: -18.500059127807617

Token 1361: ' Ils' (ID: 31199)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3544423381972592e-05
    2. 'i' → logprob: -12.12501335144043
    3. '   ' → logprob: -12.62501335144043
    4. 'offset' → logprob: -13.37501335144043
    5. 'start' → logprob: -13.50001335144043
    6. 'if' → logprob: -14.37501335144043
    7. '#' → logprob: -15.00001335144043
    8. ' for' → logprob: -15.12501335144043
    9. 'range' → logprob: -15.37501335144043
    10. '```' → logprob: -15.87501335144043

Token 1362: ' sont' (ID: 5242)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7447188496589661
    2. '.append' → logprob: -1.7447187900543213
    3. '[' → logprob: -2.1197187900543213
    4. '.' → logprob: -2.9947187900543213
    5. '   ' → logprob: -3.2447187900543213
    6. 'continue' → logprob: -3.3697187900543213
    7. ' for' → logprob: -3.4947187900543213
    8. '=' → logprob: -3.9947187900543213
    9. '#' → logprob: -4.2447190284729
    10. '```' → logprob: -4.4947190284729

Token 1363: ' accessibles' (ID: 156723)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6602389216423035
    2. '   ' → logprob: -1.2852389812469482
    3. '2' → logprob: -2.9102389812469482
    4. 'adj' → logprob: -3.2852389812469482
    5. 'connect' → logprob: -3.6602389812469482
    6. '#' → logprob: -4.785238742828369
    7. 'dans' → logprob: -4.785238742828369
    8. ' liés' → logprob: -4.785238742828369
    9. 'connected' → logprob: -5.035238742828369
    10. ' ' → logprob: -5.285238742828369

Token 1364: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7386592030525208
    2. ' entre' → logprob: -2.113659143447876
    3. 'from' → logprob: -2.238659143447876
    4. 'for' → logprob: -2.238659143447876
    5. ' depuis' → logprob: -3.863659143447876
    6. 'if' → logprob: -3.863659143447876
    7. ' à' → logprob: -3.988659143447876
    8. ' via' → logprob: -4.238659381866455
    9. ' ' → logprob: -4.863659381866455
    10. 'dans' → logprob: -4.863659381866455

Token 1365: ' une' (ID: 2463)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4837966561317444
    2. 'for' → logprob: -1.4837965965270996
    3. 'i' → logprob: -2.7337965965270996
    4. ' range' → logprob: -3.3587965965270996
    5. 'lambda' → logprob: -3.9837965965270996
    6. '2' → logprob: -4.8587965965271
    7. ' for' → logprob: -5.2337965965271
    8. 'index' → logprob: -5.6087965965271
    9. ' i' → logprob: -5.9837965965271
    10. '   ' → logprob: -6.1087965965271

Token 1366: ' arc' (ID: 26922)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05318988487124443
    2. ' for' → logprob: -3.178189992904663
    3. 'range' → logprob: -5.053189754486084
    4. '   ' → logprob: -5.928189754486084
    5. 'i' → logprob: -8.053190231323242
    6. ' range' → logprob: -8.553190231323242
    7. 'while' → logprob: -9.803190231323242
    8. 'k' → logprob: -9.803190231323242
    9. 'distance' → logprob: -9.803190231323242
    10. '```' → logprob: -10.053190231323242

Token 1367: ' puisque' (ID: 66135)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7493091821670532
    2. '.append' → logprob: -1.4993091821670532
    3. ' =' → logprob: -1.9993091821670532
    4. 'for' → logprob: -2.4993090629577637
    5. ' for' → logprob: -3.8743090629577637
    6. '=' → logprob: -4.499309062957764
    7. '_id' → logprob: -4.624309062957764
    8. '       ' → logprob: -4.749309062957764
    9. 's' → logprob: -5.249309062957764
    10. '  ' → logprob: -5.374309062957764

Token 1368: ' ils' (ID: 15387)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.05943051353096962
    2. ' segment' → logprob: -3.3094305992126465
    3. 'i' → logprob: -4.3094305992126465
    4. ' i' → logprob: -5.9344305992126465
    5. 'True' → logprob: -6.6844305992126465
    6. 'n' → logprob: -7.0594305992126465
    7. ' True' → logprob: -7.5594305992126465
    8. '(segment' → logprob: -7.6844305992126465
    9. 'dist' → logprob: -7.8094305992126465
    10. 'abs' → logprob: -8.434430122375488

Token 1369: ' appart' (ID: 33021)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.6532388925552368
    2. 's' → logprob: -1.1532388925552368
    3. ' are' → logprob: -3.2782387733459473
    4. '   ' → logprob: -3.6532387733459473
    5. '[' → logprob: -3.7782387733459473
    6. ' ne' → logprob: -4.903238773345947
    7. 'def' → logprob: -4.903238773345947
    8. '#' → logprob: -5.028238773345947
    9. 'se' → logprob: -5.278238773345947
    10. ' se' → logprob: -5.528238773345947

Token 1370: 'iennent' (ID: 53290)
  Prédit: 'iennent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iennent' → logprob: -0.027225540950894356
    2. 'aient' → logprob: -4.402225494384766
    3. 'ent' → logprob: -4.902225494384766
    4. 'a' → logprob: -5.902225494384766
    5. 'ient' → logprob: -6.152225494384766
    6. '[' → logprob: -7.277225494384766
    7. 'ennent' → logprob: -7.902225494384766
    8. '```' → logprob: -7.902225494384766
    9. 'u' → logprob: -8.402225494384766
    10. '(' → logprob: -8.652225494384766

Token 1371: ' au' (ID: 2791)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4754129648208618
    2. ' au' → logprob: -1.4754129648208618
    3. ' à' → logprob: -1.6004129648208618
    4. ' aux' → logprob: -1.7254129648208618
    5. 'à' → logprob: -2.1004128456115723
    6. 'aux' → logprob: -3.7254128456115723
    7. 'au' → logprob: -4.850412845611572
    8. '    ' → logprob: -5.975412845611572
    9. ')' → logprob: -6.475412845611572
    10. ' ' → logprob: -6.600412845611572

Token 1372: ' même' (ID: 9679)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7505480647087097
    2. 'm' → logprob: -1.5005481243133545
    3. ' même' → logprob: -1.6255481243133545
    4. 'segment' → logprob: -3.0005481243133545
    5. 'same' → logprob: -4.000547885894775
    6. 'circle' → logprob: -4.375547885894775
    7. 'even' → logprob: -5.125547885894775
    8. 'cer' → logprob: -5.625547885894775
    9. 'cir' → logprob: -5.750547885894775
    10. 'chain' → logprob: -5.875547885894775

Token 1373: ' cercle' (ID: 172399)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.6678128838539124
    2. ' cercle' → logprob: -1.6678128242492676
    3. 'c' → logprob: -2.0428128242492676
    4. 'vertices' → logprob: -2.7928128242492676
    5. 'circle' → logprob: -3.0428128242492676
    6. ' circle' → logprob: -3.7928128242492676
    7. ' vertices' → logprob: -4.917812824249268
    8. 'graph' → logprob: -5.917812824249268
    9. ' circles' → logprob: -6.042812824249268
    10. 's' → logprob: -6.042812824249268

Token 1374: ' ci' (ID: 7405)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3627273738384247
    2. 'for' → logprob: -1.737727403640747
    3. ' for' → logprob: -2.112727403640747
    4. '
' → logprob: -4.987727165222168
    5. '    
' → logprob: -7.987727165222168
    6. '	for' → logprob: -9.237727165222168
    7. '  
' → logprob: -10.487727165222168
    8. '```' → logprob: -10.987727165222168
    9. ':' → logprob: -11.362727165222168
    10. '   
' → logprob: -11.487727165222168

Token 1375: '
' (ID: 198)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3576194643974304
    2. 'rc' → logprob: -1.4826195240020752
    3. 'cles' → logprob: -3.357619524002075
    4. 'for' → logprob: -3.482619524002075
    5. '#' → logprob: -5.482619285583496
    6. '   ' → logprob: -6.732619285583496
    7. ' for' → logprob: -7.732619285583496
    8. 'cle' → logprob: -8.107619285583496
    9. 'n' → logprob: -8.232619285583496
    10. 'ur' → logprob: -8.482619285583496

Token 1376: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10136271268129349
    2. 'for' → logprob: -2.476362705230713
    3. ' for' → logprob: -4.601362705230713
    4. '
' → logprob: -6.476362705230713
    5. '    
' → logprob: -7.601362705230713
    6. '	for' → logprob: -9.601363182067871
    7. 'i' → logprob: -9.726363182067871
    8. '```' → logprob: -10.476363182067871
    9. '  
' → logprob: -10.726363182067871
    10. ',' → logprob: -10.976363182067871

Token 1377: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00029601677670143545
    2. ' for' → logprob: -8.625295639038086
    3. '   ' → logprob: -9.250295639038086
    4. 'i' → logprob: -11.750295639038086
    5. 'if' → logprob: -12.125295639038086
    6. '```' → logprob: -13.000295639038086
    7. '
' → logprob: -13.625295639038086
    8. 'idx' → logprob: -14.000295639038086
    9. 'start' → logprob: -14.375295639038086
    10. 'offset' → logprob: -14.625295639038086

Token 1378: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004825081559829414
    2. 'k' → logprob: -8.000482559204102
    3. ' i' → logprob: -8.875482559204102
    4. '   ' → logprob: -12.500482559204102
    5. '_i' → logprob: -13.875482559204102
    6. ' ' → logprob: -14.625482559204102
    7. 'idx' → logprob: -14.750482559204102
    8. '(i' → logprob: -15.125482559204102
    9. '	i' → logprob: -15.125482559204102
    10. '```' → logprob: -15.500482559204102

Token 1379: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.576095700263977
    2. 'in' → logprob: -0.826095700263977
    3. 'import' → logprob: -10.576095581054688
    4. ')' → logprob: -10.701095581054688
    5. '   ' → logprob: -10.826095581054688
    6. '0' → logprob: -11.326095581054688
    7. ' ' → logprob: -11.576095581054688
    8. ',' → logprob: -11.826095581054688
    9. '1' → logprob: -11.826095581054688
    10. 'n' → logprob: -11.951095581054688

Token 1380: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007101670489646494
    2. ' range' → logprob: -7.2507100105285645
    3. '(range' → logprob: -16.375709533691406
    4. '0' → logprob: -16.500709533691406
    5. '	range' → logprob: -16.875709533691406
    6. '   ' → logprob: -17.500709533691406
    7. ' ' → logprob: -18.250709533691406
    8. 'in' → logprob: -18.750709533691406
    9. '[' → logprob: -19.375709533691406
    10. 'r' → logprob: -19.375709533691406

Token 1381: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5529131889343262
    2. '2' → logprob: -1.4279131889343262
    3. '(n' → logprob: -2.427913188934326
    4. '0' → logprob: -2.677913188934326
    5. '(' → logprob: -4.302913188934326
    6. '1' → logprob: -4.302913188934326
    7. 'len' → logprob: -7.677913188934326
    8. ' n' → logprob: -8.677913665771484
    9. '   ' → logprob: -8.927913665771484
    10. ' ' → logprob: -9.552913665771484

Token 1382: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001314295077463612
    2. ' -' → logprob: -9.000131607055664
    3. '2' → logprob: -12.375131607055664
    4. '1' → logprob: -12.875131607055664
    5. ')' → logprob: -14.625131607055664
    6. '   ' → logprob: -15.125131607055664
    7. '-
' → logprob: -15.750131607055664
    8. ')-' → logprob: -16.375131607055664
    9. '
' → logprob: -16.750131607055664
    10. '<|end|>' → logprob: -17.500131607055664

Token 1383: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5764705538749695
    2. '2' → logprob: -0.8264705538749695
    3. '-' → logprob: -8.076470375061035
    4. ' ' → logprob: -8.951470375061035
    5. '3' → logprob: -9.951470375061035
    6. 'n' → logprob: -11.451470375061035
    7. '   ' → logprob: -11.826470375061035
    8. ' -' → logprob: -12.326470375061035
    9. '```' → logprob: -12.576470375061035
    10. '<|end|>' → logprob: -12.951470375061035

Token 1384: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0013855935540050268
    2. '):' → logprob: -6.876385688781738
    3. '   ' → logprob: -8.001385688781738
    4. ' ):
' → logprob: -11.376385688781738
    5. '):
' → logprob: -12.501385688781738
    6. ')' → logprob: -14.126385688781738
    7. ':
' → logprob: -14.126385688781738
    8. '):

' → logprob: -15.251385688781738
    9. ':' → logprob: -15.626385688781738
    10. ' ' → logprob: -15.751385688781738

Token 1385: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010783808305859566
    2. ' v' → logprob: -4.760783672332764
    3. 'v' → logprob: -6.885783672332764
    4. ' u' → logprob: -7.385783672332764
    5. ' for' → logprob: -8.885784149169922
    6. ' p' → logprob: -9.135784149169922
    7. ' idx' → logprob: -9.760784149169922
    8. '```' → logprob: -10.010784149169922
    9. ' id' → logprob: -10.135784149169922
    10. 'u' → logprob: -10.885784149169922

Token 1386: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5438703298568726
    2. 'v' → logprob: -1.0438703298568726
    3. '   ' → logprob: -3.168870449066162
    4. 'a' (adapté à ' a') → logprob: -3.918870449066162
    5. 'for' → logprob: -5.668870449066162
    6. 'p' → logprob: -7.293870449066162
    7. 'id' → logprob: -7.543870449066162
    8. ' u' → logprob: -8.543869972229004
    9. ' v' → logprob: -8.668869972229004
    10. 'vi' → logprob: -8.668869972229004

Token 1387: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5825890302658081
    2. ' =' → logprob: -0.8325890302658081
    3. 'a' → logprob: -5.832589149475098
    4. '_id' → logprob: -6.457589149475098
    5. ',' → logprob: -7.707589149475098
    6. ' ' → logprob: -8.082589149475098
    7. '   ' → logprob: -8.582589149475098
    8. '0' → logprob: -8.582589149475098
    9. '_idx' → logprob: -8.707589149475098
    10. '=a' → logprob: -8.707589149475098

Token 1388: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00017982252757064998
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.3751802444458
    4. '(' → logprob: -18.375179290771484
    5. '1' → logprob: -19.125179290771484
    6. '  ' → logprob: -19.375179290771484
    7. '[' → logprob: -19.500179290771484
    8. '    ' → logprob: -20.500179290771484
    9. '4' → logprob: -20.750179290771484
    10. '0' → logprob: -21.000179290771484

Token 1389: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.750006675720215
    4. '(' → logprob: -16.7500057220459
    5. '[' → logprob: -18.7500057220459
    6. '  ' → logprob: -19.5000057220459
    7. '1' → logprob: -19.5000057220459
    8. '4' → logprob: -19.6250057220459
    9. '3' → logprob: -19.8750057220459
    10. '
' → logprob: -20.2500057220459

Token 1390: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.6733829975128174
    2. '+' → logprob: -0.9233829975128174
    3. ' +' → logprob: -2.6733829975128174
    4. '+i' → logprob: -4.298382759094238
    5. 'i' → logprob: -4.798382759094238
    6. '*' → logprob: -6.548382759094238
    7. ' *' → logprob: -7.798382759094238
    8. '*(' → logprob: -9.673382759094238
    9. '```' → logprob: -10.923382759094238
    10. '
' → logprob: -11.048382759094238

Token 1391: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2960151433944702
    2. '
' → logprob: -1.9210151433944702
    3. 'a' → logprob: -2.2960152626037598
    4. '+' → logprob: -5.67101526260376
    5. '       ' → logprob: -6.67101526260376
    6. ',' → logprob: -6.79601526260376
    7. '    
' → logprob: -7.42101526260376
    8. ' ' → logprob: -7.54601526260376
    9. '        
' → logprob: -7.67101526260376
    10. ' a' → logprob: -8.171014785766602

Token 1392: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6166591048240662
    2. '+' → logprob: -0.9916591048240662
    3. '       ' → logprob: -3.241659164428711
    4. ' +' → logprob: -3.866659164428711
    5. '   ' → logprob: -4.491659164428711
    6. ',' → logprob: -4.616659164428711
    7. 'a' → logprob: -5.491659164428711
    8. '        
' → logprob: -7.116659164428711
    9. '+
' → logprob: -7.116659164428711
    10. '    
' → logprob: -7.741659164428711

Token 1393: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.010990406386554241
    2. '   ' → logprob: -4.760990619659424
    3. ' a' → logprob: -6.385990619659424
    4. 'b' (adapté à ' b') → logprob: -7.385990619659424
    5. '       ' → logprob: -10.385990142822266
    6. ' ' → logprob: -11.385990142822266
    7. '  ' → logprob: -12.010990142822266
    8. 'graph' → logprob: -12.135990142822266
    9. '    ' → logprob: -12.510990142822266
    10. ' b' → logprob: -12.635990142822266

Token 1394: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5452873110771179
    2. '=' → logprob: -1.2952873706817627
    3. '+' → logprob: -2.4202873706817627
    4. 'a' → logprob: -3.1702873706817627
    5. ' +' → logprob: -4.795287132263184
    6. ' a' → logprob: -5.670287132263184
    7. '=a' → logprob: -6.420287132263184
    8. ',' → logprob: -6.795287132263184
    9. '+=' → logprob: -8.795287132263184
    10. 'b' → logprob: -8.920287132263184

Token 1395: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5945067405700684
    2. '2' → logprob: -0.8445067405700684
    3. ' ' → logprob: -4.344506740570068
    4. ' a' → logprob: -5.219506740570068
    5. '   ' → logprob: -11.844507217407227
    6. '  ' → logprob: -14.844507217407227
    7. '4' → logprob: -16.344507217407227
    8. '    ' → logprob: -16.594507217407227
    9. '(' → logprob: -16.719507217407227
    10. '_a' → logprob: -16.719507217407227

Token 1396: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20177914202213287
    2. 'a' → logprob: -1.7017791271209717
    3. ' ' → logprob: -8.07677936553955
    4. ' a' → logprob: -10.07677936553955
    5. '   ' → logprob: -11.32677936553955
    6. '       ' → logprob: -14.70177936553955
    7. '  ' → logprob: -16.076778411865234
    8. '     ' → logprob: -16.326778411865234
    9. '    ' → logprob: -16.451778411865234
    10. '(a' → logprob: -16.451778411865234

Token 1397: '*i' (ID: 51147)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07907044142484665
    2. '*i' → logprob: -2.5790703296661377
    3. ' *' → logprob: -9.329070091247559
    4. '*' → logprob: -9.454070091247559
    5. ' i' → logprob: -11.454070091247559
    6. '_i' → logprob: -14.454070091247559
    7. '```' → logprob: -14.579070091247559
    8. 'a' → logprob: -14.704070091247559
    9. '1' → logprob: -14.704070091247559
    10. '
' → logprob: -15.204070091247559

Token 1398: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006715728435665369
    2. ' +' → logprob: -5.006715774536133
    3. '+
' → logprob: -15.256715774536133
    4. '1' → logprob: -17.131715774536133
    5. '+b' → logprob: -17.631715774536133
    6. '+a' → logprob: -17.631715774536133
    7. '   ' → logprob: -18.131715774536133
    8. ' +
' → logprob: -18.381715774536133
    9. '()+' → logprob: -18.881715774536133
    10. '＋' → logprob: -19.131715774536133

Token 1399: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '   ' → logprob: -19.75
    4. '
' → logprob: -22.25
    5. '```' → logprob: -22.25
    6. '  ' → logprob: -22.75
    7. '3' → logprob: -23.5
    8. '    ' → logprob: -23.9375
    9. '１' → logprob: -24.0625
    10. '2' → logprob: -24.1875

Token 1400: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '   ' → logprob: -19.75
    4. '3' → logprob: -22.625
    5. '  ' → logprob: -23.0
    6. '```' → logprob: -23.0
    7. '    ' → logprob: -23.75
    8. '     ' → logprob: -24.0
    9. '１' → logprob: -24.0
    10. '2' → logprob: -24.125

Token 1401: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3085438311100006
    2. '       ' → logprob: -1.4335438013076782
    3. '<|end|>' → logprob: -4.808543682098389
    4. ' if' → logprob: -4.933543682098389
    5. '
' → logprob: -5.183543682098389
    6. ',' → logprob: -6.433543682098389
    7. ')' → logprob: -6.683543682098389
    8. ':' → logprob: -7.433543682098389
    9. ':
' → logprob: -7.808543682098389
    10. 'if' → logprob: -8.183544158935547

Token 1402: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1154291033744812
    2. '   ' → logprob: -2.240429162979126
    3. 'if' → logprob: -6.615428924560547
    4. ' if' → logprob: -6.740428924560547
    5. ',' → logprob: -10.865428924560547
    6. '```' → logprob: -10.990428924560547
    7. ')' → logprob: -11.115428924560547
    8. '           ' → logprob: -12.115428924560547
    9. '        
' → logprob: -12.740428924560547
    10. 'd' → logprob: -12.740428924560547

Token 1403: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.025948408991098404
    2. '   ' → logprob: -4.025948524475098
    3. '       ' → logprob: -5.025948524475098
    4. ' if' → logprob: -7.400948524475098
    5. 'd' → logprob: -8.150948524475098
    6. 'x' → logprob: -8.775948524475098
    7. 'for' → logprob: -9.150948524475098
    8. 'dist' → logprob: -11.400948524475098
    9. '```' → logprob: -11.650948524475098
    10. '#' (adapté à ' #') → logprob: -11.900948524475098

Token 1404: ' vérifier' (ID: 93671)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01811540685594082
    2. 'for' → logprob: -4.643115520477295
    3. 'p' → logprob: -5.768115520477295
    4. '   ' → logprob: -6.518115520477295
    5. '       ' → logprob: -6.768115520477295
    6. 'x' → logprob: -7.643115520477295
    7. 'u' → logprob: -7.893115520477295
    8. '#' → logprob: -8.018115043640137
    9. 'a' → logprob: -8.018115043640137
    10. 'v' → logprob: -8.268115043640137

Token 1405: ' que' (ID: 661)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15534937381744385
    2. ' if' → logprob: -2.5303492546081543
    3. 'segment' → logprob: -2.9053492546081543
    4. ' segment' → logprob: -4.780349254608154
    5. '   ' → logprob: -7.280349254608154
    6. '(segment' → logprob: -7.905349254608154
    7. '       ' → logprob: -10.655349731445312
    8. ' si' → logprob: -11.405349731445312
    9. '           ' → logprob: -12.030349731445312
    10. 'vertices' → logprob: -12.155349731445312

Token 1406: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.007612898014485836
    2. ' segment' → logprob: -4.882612705230713
    3. '(segment' → logprob: -12.382613182067871
    4. '   ' → logprob: -13.507613182067871
    5. 'segments' → logprob: -14.382613182067871
    6. '.segment' → logprob: -16.257612228393555
    7. 'vertices' → logprob: -16.257612228393555
    8. ' ' → logprob: -16.507612228393555
    9. 'vertex' → logprob: -16.632612228393555
    10. '           ' → logprob: -17.507612228393555

Token 1407: ' est' (ID: 893)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.009485713206231594
    2. 'in' → logprob: -4.884485721588135
    3. '(a' → logprob: -6.759485721588135
    4. 'a' → logprob: -8.509485244750977
    5. '_' → logprob: -9.134485244750977
    6. '_between' → logprob: -9.509485244750977
    7. '_a' → logprob: -10.134485244750977
    8. 'segment' → logprob: -10.259485244750977
    9. 'In' → logprob: -10.384485244750977
    10. 'segments' → logprob: -10.509485244750977

Token 1408: ' dans' (ID: 2671)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.041968438774347305
    2. ' segment' → logprob: -3.91696834564209
    3. 'contained' → logprob: -4.91696834564209
    4. '_in' → logprob: -5.04196834564209
    5. '   ' → logprob: -5.79196834564209
    6. 'in' → logprob: -5.79196834564209
    7. '(segment' → logprob: -7.66696834564209
    8. 'conten' → logprob: -8.79196834564209
    9. ' in' → logprob: -9.41696834564209
    10. ' contained' → logprob: -9.66696834564209

Token 1409: ' la' (ID: 557)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.6121589541435242
    2. 'chain' → logprob: -1.237159013748169
    3. 'segment' → logprob: -2.237159013748169
    4. 'circle' → logprob: -4.36215877532959
    5. ' circles' → logprob: -4.48715877532959
    6. 'the' → logprob: -4.73715877532959
    7. ' chain' → logprob: -4.86215877532959
    8. 'c' → logprob: -5.36215877532959
    9. '   ' → logprob: -5.36215877532959
    10. 'segments' → logprob: -5.98715877532959

Token 1410: ' chaîne' (ID: 89288)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.04805748909711838
    2. 'chain' → logprob: -3.1730575561523438
    3. 'chains' → logprob: -6.548057556152344
    4. ' circles' → logprob: -6.798057556152344
    5. 'circle' → logprob: -6.923057556152344
    6. 'segments' → logprob: -7.548057556152344
    7. '   ' → logprob: -8.423057556152344
    8. 'vertices' → logprob: -8.548057556152344
    9. 'segment' → logprob: -8.798057556152344
    10. ' chain' → logprob: -9.298057556152344

Token 1411: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000993987312540412
    2. ' if' → logprob: -7.7509942054748535
    3. '   ' → logprob: -8.250993728637695
    4. 'if' → logprob: -9.500993728637695
    5. ',' → logprob: -9.625993728637695
    6. ':' → logprob: -10.250993728637695
    7. '
' → logprob: -10.375993728637695
    8. '<|end|>' → logprob: -10.500993728637695
    9. ')' → logprob: -10.875993728637695
    10. '        
' → logprob: -11.500993728637695

Token 1412: 'en' (ID: 262)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.37973713874816895
    2. 'if' → logprob: -1.879737138748169
    3. '   ' → logprob: -3.254737138748169
    4. 'cir' → logprob: -3.879737138748169
    5. ' vertices' → logprob: -4.00473690032959
    6. ')' → logprob: -4.12973690032959
    7. 'True' → logprob: -4.37973690032959
    8. '       ' → logprob: -4.37973690032959
    9. 'segments' → logprob: -4.50473690032959
    10. ' if' → logprob: -4.87973690032959

Token 1413: ' pratique' (ID: 42780)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.4623526334762573
    2. 'chain' → logprob: -1.0873526334762573
    3. 'circle' → logprob: -4.212352752685547
    4. 'any' → logprob: -5.587352752685547
    5. ' segment' → logprob: -6.087352752685547
    6. 'chaine' → logprob: -6.212352752685547
    7. 'cir' → logprob: -6.837352752685547
    8. '_chain' → logprob: -7.087352752685547
    9. '#' → logprob: -7.337352752685547
    10. '(segment' → logprob: -7.337352752685547

Token 1414: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.6374928951263428
    2. 'if' → logprob: -1.7624928951263428
    3. ' if' → logprob: -1.7624928951263428
    4. '       ' → logprob: -2.2624928951263428
    5. ':' → logprob: -2.5124928951263428
    6. ')' → logprob: -2.6374928951263428
    7. '   ' → logprob: -3.3874928951263428
    8. '):' → logprob: -3.5124928951263428
    9. ',' → logprob: -3.7624928951263428
    10. '           ' → logprob: -3.7624928951263428

Token 1415: ' les' (ID: 1341)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.05127956345677376
    2. ' segment' → logprob: -3.0512795448303223
    3. 'True' → logprob: -6.551279544830322
    4. ' True' → logprob: -7.676279544830322
    5. 'vertices' → logprob: -8.17628002166748
    6. 'segments' → logprob: -8.67628002166748
    7. '   ' → logprob: -9.42628002166748
    8. 'if' → logprob: -10.17628002166748
    9. '(segment' → logprob: -10.17628002166748
    10. ' vertices' → logprob: -10.42628002166748

Token 1416: ' ' (ID: 220)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.48070207238197327
    2. 'if' → logprob: -1.7307020425796509
    3. 'for' → logprob: -3.1057021617889404
    4. 'segment' → logprob: -3.6057021617889404
    5. ' if' → logprob: -3.8557021617889404
    6. '#' → logprob: -3.9807021617889404
    7. 'c' → logprob: -3.9807021617889404
    8. 'segments' → logprob: -4.230701923370361
    9. ' circles' → logprob: -4.605701923370361
    10. 'vertices' → logprob: -4.980701923370361

Token 1417: '2' (ID: 17)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.21851828694343567
    2. 'cir' → logprob: -2.7185182571411133
    3. 'abs' → logprob: -3.3435182571411133
    4. 'if' → logprob: -3.4685182571411133
    5. 'segments' → logprob: -4.468518257141113
    6. 'vertices' → logprob: -4.968518257141113
    7. 'samples' → logprob: -5.093518257141113
    8. 'a' → logprob: -5.093518257141113
    9. 'circle' → logprob: -5.218518257141113
    10. 'c' → logprob: -5.468518257141113

Token 1418: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.5335185527801514
    2. 'points' → logprob: -1.4085185527801514
    3. ' vertices' → logprob: -3.1585185527801514
    4. ')' → logprob: -3.5335185527801514
    5. 'vertices' → logprob: -3.6585185527801514
    6. ' )' → logprob: -5.1585187911987305
    7. ' if' → logprob: -5.1585187911987305
    8. 'p' → logprob: -5.1585187911987305
    9. '   ' → logprob: -5.2835187911987305
    10. 'for' → logprob: -5.4085187911987305

Token 1419: ' sont' (ID: 5242)
  Prédit: ' appart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appart' → logprob: -1.2752070426940918
    2. 's' → logprob: -1.4002070426940918
    3. ' sont' → logprob: -2.150207042694092
    4. ')' → logprob: -2.525207042694092
    5. 'app' → logprob: -2.650207042694092
    6. 'a' → logprob: -2.650207042694092
    7. ' are' → logprob: -3.025207042694092
    8. ' apparten' → logprob: -4.150207042694092
    9. ' appartient' → logprob: -4.650207042694092
    10. ' belong' → logprob: -5.025207042694092

Token 1420: ' sur' (ID: 1512)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.2103840857744217
    2. ' dans' → logprob: -3.2103841304779053
    3. 'sur' → logprob: -3.2103841304779053
    4. 'sure' → logprob: -3.9603841304779053
    5. 'vertices' → logprob: -4.210383892059326
    6. 'in' → logprob: -4.335383892059326
    7. ' in' → logprob: -4.710383892059326
    8. ' sur' → logprob: -5.210383892059326
    9. 'inter' → logprob: -5.460383892059326
    10. 'points' → logprob: -5.460383892059326

Token 1421: ' la' (ID: 557)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.2921890914440155
    2. 'vertices' → logprob: -1.917189121246338
    3. 'le' → logprob: -3.792189121246338
    4. 'the' → logprob: -3.917189121246338
    5. ' vertices' → logprob: -4.542189121246338
    6. ')' → logprob: -4.542189121246338
    7. 'c' → logprob: -5.042189121246338
    8. 'les' → logprob: -5.542189121246338
    9. 'circle' → logprob: -5.542189121246338
    10. '   ' → logprob: -5.667189121246338

Token 1422: ' frontière' (ID: 180460)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3923037648200989
    2. 'same' → logprob: -2.142303705215454
    3. 'cir' → logprob: -2.517303705215454
    4. 'circle' → logprob: -2.767303705215454
    5. ' même' → logprob: -4.642303943634033
    6. 'c' → logprob: -4.767303943634033
    7. 'm' → logprob: -5.267303943634033
    8. 'circ' → logprob: -5.392303943634033
    9. ' ' → logprob: -5.517303943634033
    10. '[i' → logprob: -5.767303943634033

Token 1423: ' des' (ID: 731)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -1.3136471509933472
    2. ')' → logprob: -1.5636471509933472
    3. ' des' → logprob: -1.8136471509933472
    4. ' of' → logprob: -2.3136472702026367
    5. ' d' → logprob: -2.5636472702026367
    6. ',' → logprob: -2.6886472702026367
    7. ' de' → logprob: -3.4386472702026367
    8. 'd' → logprob: -3.4386472702026367
    9. '   ' → logprob: -3.9386472702026367
    10. ' et' → logprob: -4.313647270202637

Token 1424: ' ' (ID: 220)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.0006404805462807417
    2. ' circles' → logprob: -8.250640869140625
    3. 'i' → logprob: -9.375640869140625
    4. 'cer' → logprob: -9.750640869140625
    5. 'circle' → logprob: -10.250640869140625
    6. 'c' → logprob: -10.375640869140625
    7. '```' → logprob: -10.875640869140625
    8. 'vertices' → logprob: -11.125640869140625
    9. 'cí' → logprob: -11.250640869140625
    10. 'r' → logprob: -11.250640869140625

Token 1425: '2' (ID: 17)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.003043428063392639
    2. 'i' → logprob: -6.7530436515808105
    3. 'cer' → logprob: -7.2530436515808105
    4. 'circ' → logprob: -8.503043174743652
    5. '#' → logprob: -8.753043174743652
    6. ' circles' → logprob: -8.878043174743652
    7. 'cí' → logprob: -8.878043174743652
    8. 'circle' → logprob: -9.253043174743652
    9. ')' → logprob: -9.628043174743652
    10. '[i' → logprob: -9.628043174743652

Token 1426: ' cer' (ID: 10816)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.2894870638847351
    2. ' circles' → logprob: -1.6644871234893799
    3. ')' → logprob: -4.539486885070801
    4. 'i' → logprob: -4.664486885070801
    5. ' cercle' → logprob: -4.789486885070801
    6. ' i' → logprob: -5.039486885070801
    7. ' cer' → logprob: -5.164486885070801
    8. 'c' → logprob: -5.164486885070801
    9. 'cer' → logprob: -6.039486885070801
    10. ' ' → logprob: -6.539486885070801

Token 1427: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.00040755473310127854
    2. 'cle' → logprob: -8.125407218933105
    3. 'cl' → logprob: -9.625407218933105
    4. 'les' → logprob: -11.750407218933105
    5. 'c' → logprob: -11.875407218933105
    6. '```' → logprob: -12.250407218933105
    7. 'icles' → logprob: -12.375407218933105
    8. 'l' → logprob: -12.500407218933105
    9. '#' → logprob: -12.625407218933105
    10. 'le' → logprob: -13.625407218933105

Token 1428: ' adj' (ID: 20251)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7591133713722229
    2. ' and' → logprob: -1.0091133117675781
    3. ' et' → logprob: -2.634113311767578
    4. ',' → logprob: -3.009113311767578
    5. '       ' → logprob: -4.384113311767578
    6. ')
' → logprob: -4.884113311767578
    7. 'and' → logprob: -5.134113311767578
    8. '   ' → logprob: -5.384113311767578
    9. 'et' → logprob: -5.759113311767578
    10. '):
' → logprob: -6.009113311767578

Token 1429: 'ac' (ID: 359)
  Prédit: 'ices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ices' → logprob: -0.05627031251788139
    2. 'acent' → logprob: -3.4312703609466553
    3. 'aces' → logprob: -4.431270122528076
    4. 'es' → logprob: -6.181270122528076
    5. 'vertices' → logprob: -6.181270122528076
    6. ' vertices' → logprob: -6.556270122528076
    7. ']' → logprob: -7.181270122528076
    8. 'entes' → logprob: -7.681270122528076
    9. ')' → logprob: -7.931270122528076
    10. '])' → logprob: -8.056270599365234

Token 1430: 'ents' (ID: 1094)
  Prédit: 'ents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.026646144688129425
    2. 'entes' → logprob: -4.151646137237549
    3. 'ent' → logprob: -5.151646137237549
    4. 'es' → logprob: -5.526646137237549
    5. '#' → logprob: -9.401646614074707
    6. 'ences' → logprob: -9.776646614074707
    7. 'en' → logprob: -10.151646614074707
    8. 'c' → logprob: -10.276646614074707
    9. 'aces' → logprob: -10.276646614074707
    10. 'e' → logprob: -10.339146614074707

Token 1431: ',
' (ID: 412)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1533810943365097
    2. '):' → logprob: -2.903381109237671
    3. '):
' → logprob: -3.153381109237671
    4. '   ' → logprob: -4.153380870819092
    5. ',' → logprob: -4.403380870819092
    6. ' and' → logprob: -4.653380870819092
    7. '       ' → logprob: -6.403380870819092
    8. ' et' → logprob: -6.653380870819092
    9. ')
' → logprob: -6.778380870819092
    10. ' )' → logprob: -6.903380870819092

Token 1432: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5561630129814148
    2. '#' → logprob: -1.6811630725860596
    3. '           ' → logprob: -1.8061630725860596
    4. ' donc' → logprob: -3.3061630725860596
    5. ' #' → logprob: -3.8061630725860596
    6. ' et' → logprob: -5.4311628341674805
    7. '   ' → logprob: -5.5561628341674805
    8. ' mais' → logprob: -5.9311628341674805
    9. 'et' → logprob: -6.8061628341674805
    10. '        ' → logprob: -6.8061628341674805

Token 1433: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.9368850588798523
    2. ')' → logprob: -1.561885118484497
    3. ',' → logprob: -2.061885118484497
    4. '       ' → logprob: -2.436885118484497
    5. ' #' → logprob: -3.436885118484497
    6. '           ' → logprob: -3.811885118484497
    7. ' True' → logprob: -4.061884880065918
    8. ' et' → logprob: -4.561884880065918
    9. ')
' → logprob: -4.686884880065918
    10. ' mais' → logprob: -4.686884880065918

Token 1434: ' donc' (ID: 14206)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9042288064956665
    2. '       ' → logprob: -1.4042288064956665
    3. '           ' → logprob: -1.9042288064956665
    4. ' #' → logprob: -2.529228687286377
    5. ' segment' → logprob: -3.154228687286377
    6. 'segment' → logprob: -3.779228687286377
    7. '   ' → logprob: -5.029228687286377
    8. 'segments' → logprob: -5.154228687286377
    9. ' ce' → logprob: -5.279228687286377
    10. ' ' → logprob: -5.404228687286377

Token 1435: ' la' (ID: 557)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.05266311392188072
    2. ' segment' → logprob: -3.0526630878448486
    3. 'True' → logprob: -5.802663326263428
    4. ' True' → logprob: -7.427663326263428
    5. '   ' → logprob: -8.67766284942627
    6. '           ' → logprob: -9.55266284942627
    7. 'if' → logprob: -9.92766284942627
    8. '(segment' → logprob: -9.92766284942627
    9. 'abs' → logprob: -10.67766284942627
    10. '       ' → logprob: -11.05266284942627

Token 1436: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.061901018023490906
    2. 'if' → logprob: -3.186901092529297
    3. ' segment' → logprob: -4.811901092529297
    4. '#' → logprob: -4.811901092529297
    5. ' if' → logprob: -6.436901092529297
    6. 'for' → logprob: -8.811901092529297
    7. ' #' → logprob: -8.936901092529297
    8. 'distance' → logprob: -9.561901092529297
    9. '   ' → logprob: -9.811901092529297
    10. 'continue' → logprob: -9.936901092529297

Token 1437: ' est' (ID: 893)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.005125357769429684
    2. ')' → logprob: -6.255125522613525
    3. '_' → logprob: -7.005125522613525
    4. ' in' → logprob: -7.380125522613525
    5. ' est' → logprob: -7.755125522613525
    6. 's' → logprob: -8.130125045776367
    7. 'in' → logprob: -8.255125045776367
    8. ' _' → logprob: -8.505125045776367
    9. '   ' → logprob: -9.880125045776367
    10. ' )' → logprob: -10.005125045776367

Token 1438: ' dans' (ID: 2671)
  Prédit: ' segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' segment' → logprob: -1.182525634765625
    2. ' True' → logprob: -1.432525634765625
    3. 'segment' → logprob: -2.057525634765625
    4. ' in' → logprob: -2.432525634765625
    5. 'in' → logprob: -3.057525634765625
    6. ' likely' → logprob: -3.557525634765625
    7. 'True' → logprob: -3.557525634765625
    8. ')' → logprob: -3.932525634765625
    9. ' covered' → logprob: -4.182525634765625
    10. ' sure' → logprob: -4.432525634765625

Token 1439: ' ces' (ID: 10532)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.020096132531762123
    2. ' circles' → logprob: -4.020096302032471
    3. 'the' → logprob: -7.645096302032471
    4. 'les' → logprob: -8.020095825195312
    5. 'c' → logprob: -8.395095825195312
    6. 'le' → logprob: -8.520095825195312
    7. 'vertices' → logprob: -8.645095825195312
    8. 'l' → logprob: -9.395095825195312
    9. ' la' → logprob: -9.520095825195312
    10. ' ' → logprob: -9.895095825195312

Token 1440: ' cer' (ID: 10816)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.39717140793800354
    2. 'cer' → logprob: -2.2721714973449707
    3. ')' → logprob: -2.3971714973449707
    4. 'c' → logprob: -3.6471714973449707
    5. 'r' → logprob: -4.147171497344971
    6. ' ' → logprob: -4.147171497344971
    7. '   ' → logprob: -4.772171497344971
    8. '#' → logprob: -5.147171497344971
    9. ' cer' → logprob: -5.147171497344971
    10. '[]' → logprob: -5.397171497344971

Token 1441: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.0004884536610916257
    2. 'cle' → logprob: -7.75048828125
    3. 'le' → logprob: -10.62548828125
    4. 'les' → logprob: -11.25048828125
    5. 'cl' → logprob: -11.62548828125
    6. 'icles' → logprob: -13.00048828125
    7. '#' → logprob: -13.37548828125
    8. '```' → logprob: -13.37548828125
    9. 'es' → logprob: -13.62548828125
    10. 'ces' → logprob: -13.75048828125

Token 1442: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08716170489788055
    2. '):' → logprob: -3.4621617794036865
    3. '):
' → logprob: -3.5871617794036865
    4. ',' → logprob: -4.962161540985107
    5. ')
' → logprob: -5.212161540985107
    6. ' and' → logprob: -5.587161540985107
    7. '       ' → logprob: -5.962161540985107
    8. ':' → logprob: -6.837161540985107
    9. ' et' → logprob: -7.087161540985107
    10. '   ' → logprob: -7.087161540985107

Token 1443: ' la' (ID: 557)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.418456494808197
    2. 'segments' → logprob: -2.668456554412842
    3. ')' → logprob: -3.043456554412842
    4. '#' → logprob: -3.043456554412842
    5. ' circles' → logprob: -3.293456554412842
    6. ' segments' → logprob: -4.043456554412842
    7. ' True' → logprob: -4.043456554412842
    8. 'True' → logprob: -4.543456554412842
    9. 'vertices' → logprob: -4.668456554412842
    10. 'le' → logprob: -4.793456554412842

Token 1444: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.8891003727912903
    2. ' chaîne' → logprob: -1.5141003131866455
    3. 'chain' → logprob: -2.0141003131866455
    4. 'segment' → logprob: -2.1391003131866455
    5. ' chaine' → logprob: -3.1391003131866455
    6. ' segment' → logprob: -3.5141003131866455
    7. ' chain' → logprob: -4.389100551605225
    8. '#' → logprob: -4.389100551605225
    9. 'fonction' → logprob: -5.514100551605225
    10. '   ' → logprob: -5.764100551605225

Token 1445: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19413940608501434
    2. ',' → logprob: -2.3191394805908203
    3. ')
' → logprob: -3.1941394805908203
    4. '   ' → logprob: -4.81913948059082
    5. '):
' → logprob: -4.81913948059082
    6. '.' → logprob: -5.31913948059082
    7. '#' → logprob: -5.69413948059082
    8. '       ' → logprob: -6.06913948059082
    9. ').' → logprob: -6.31913948059082
    10. ';' → logprob: -6.69413948059082

Token 1446: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021577492356300354
    2. '   ' → logprob: -4.02157735824585
    3. 'if' → logprob: -6.39657735824585
    4. ' if' → logprob: -6.52157735824585
    5. ',' → logprob: -9.521577835083008
    6. ')' → logprob: -10.021577835083008
    7. '
' → logprob: -10.021577835083008
    8. '           ' → logprob: -10.521577835083008
    9. '```' → logprob: -11.021577835083008
    10. ':' → logprob: -11.146577835083008

Token 1447: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6238921880722046
    2. 'if' (adapté à ' if') → logprob: -1.4988921880722046
    3. '   ' → logprob: -1.7488921880722046
    4. ' if' → logprob: -2.748892307281494
    5. 'for' → logprob: -6.248892307281494
    6. ' for' → logprob: -7.623892307281494
    7. 'd' → logprob: -9.498891830444336
    8. 'graph' → logprob: -9.873891830444336
    9. '           ' → logprob: -10.498891830444336
    10. ')' → logprob: -10.623891830444336

Token 1448: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.04867740720510483
    2. ' segment' → logprob: -3.048677444458008
    3. '   ' → logprob: -9.923677444458008
    4. '           ' → logprob: -11.048677444458008
    5. '       ' → logprob: -11.423677444458008
    6. '(segment' → logprob: -11.673677444458008
    7. ' ' → logprob: -13.923677444458008
    8. 'True' → logprob: -14.048677444458008
    9. '    ' → logprob: -14.173677444458008
    10. '.segment' → logprob: -14.298677444458008

Token 1449: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -9.996708104154095e-05
    2. '   ' → logprob: -10.000100135803223
    3. '_' → logprob: -11.250100135803223
    4. '_a' → logprob: -11.250100135803223
    5. 'in' → logprob: -12.000100135803223
    6. '(a' → logprob: -12.125100135803223
    7. 'a' → logprob: -12.375100135803223
    8. ' _' → logprob: -13.000100135803223
    9. '(' → logprob: -13.875100135803223
    10. ')' → logprob: -13.875100135803223

Token 1450: '_chain' (ID: 74449)
  Prédit: '_chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chain' → logprob: -0.038086358457803726
    2. 'chain' → logprob: -3.288086414337158
    3. ' chain' → logprob: -11.0380859375
    4. 'segment' → logprob: -12.1630859375
    5. 'Chain' → logprob: -12.4130859375
    6. '```' → logprob: -12.6630859375
    7. '_CHAIN' → logprob: -12.9130859375
    8. '(chain' → logprob: -13.1630859375
    9. 'a' → logprob: -13.2880859375
    10. '   ' → logprob: -13.4130859375

Token 1451: '(vertices' (ID: 158708)
  Prédit: '(vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vertices' → logprob: -2.999452772201039e-05
    2. 'vertices' → logprob: -10.750029563903809
    3. '(' → logprob: -12.375029563903809
    4. ' vertices' → logprob: -12.500029563903809
    5. ' (' → logprob: -15.125029563903809
    6. '   ' → logprob: -15.625029563903809
    7. '(vertex' → logprob: -16.625030517578125
    8. '((' → logprob: -17.375030517578125
    9. '(points' → logprob: -17.625030517578125
    10. '.vertices' → logprob: -17.750030517578125

Token 1452: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -4.429896944202483e-05
    2. 'a' → logprob: -10.250043869018555
    3. '[' → logprob: -12.500043869018555
    4. '   ' → logprob: -12.625043869018555
    5. '(a' → logprob: -13.750043869018555
    6. '[
' → logprob: -15.250043869018555
    7. '[b' → logprob: -15.750043869018555
    8. ' [' → logprob: -15.750043869018555
    9. '```' → logprob: -16.500043869018555
    10. ' ' → logprob: -16.625043869018555

Token 1453: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008165234699845314
    2. ' ,' → logprob: -5.13316535949707
    3. '],' → logprob: -7.13316535949707
    4. ',b' → logprob: -7.25816535949707
    5. ',a' → logprob: -7.75816535949707
    6. '   ' → logprob: -8.75816535949707
    7. '),' → logprob: -9.50816535949707
    8. ' ' → logprob: -11.25816535949707
    9. 'a' → logprob: -11.63316535949707
    10. 'b' → logprob: -12.00816535949707

Token 1454: ' vertices' (ID: 38360)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.012566630728542805
    2. ' vertices' → logprob: -4.387566566467285
    3. '   ' → logprob: -9.887566566467285
    4. '(vertices' → logprob: -12.637566566467285
    5. '       ' → logprob: -13.512566566467285
    6. '.vertices' → logprob: -14.887566566467285
    7. '           ' → logprob: -15.637566566467285
    8. ')' → logprob: -15.762566566467285
    9. '                   ' → logprob: -15.887566566467285
    10. '
' → logprob: -15.887566566467285

Token 1455: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.4305897355079651
    2. 'b' → logprob: -1.0555896759033203
    3. ' b' → logprob: -6.93058967590332
    4. '[a' → logprob: -7.55558967590332
    5. '[' → logprob: -8.93058967590332
    6. '(b' → logprob: -9.05558967590332
    7. '[
' → logprob: -10.43058967590332
    8. ' [' → logprob: -10.43058967590332
    9. ')' → logprob: -10.80558967590332
    10. '   ' → logprob: -11.80558967590332

Token 1456: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.05538239702582359
    2. ',' → logprob: -2.930382490158081
    3. ' ],' → logprob: -8.55538272857666
    4. '   ' → logprob: -9.05538272857666
    5. ' ,' → logprob: -9.18038272857666
    6. '),' → logprob: -10.05538272857666
    7. '       ' → logprob: -10.68038272857666
    8. '           ' → logprob: -11.43038272857666
    9. ']' → logprob: -13.05538272857666
    10. ''],' → logprob: -13.68038272857666

Token 1457: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.08935534209012985
    2. ' circles' → logprob: -2.464355230331421
    3. 'vertices' → logprob: -8.33935546875
    4. ' vertices' → logprob: -10.08935546875
    5. 'circ' → logprob: -10.21435546875
    6. '   ' → logprob: -10.46435546875
    7. 'circle' → logprob: -10.96435546875
    8. ' circul' → logprob: -11.58935546875
    9. ' cir' → logprob: -11.71435546875
    10. 'c' → logprob: -11.71435546875

Token 1458: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4746260941028595
    2. '):' → logprob: -0.9746260643005371
    3. ')' → logprob: -8.349626541137695
    4. '       ' → logprob: -8.724626541137695
    5. '   ' → logprob: -9.224626541137695
    6. '):
' → logprob: -10.349626541137695
    7. '           ' → logprob: -11.974626541137695
    8. '):

' → logprob: -12.224626541137695
    9. ' ):
' → logprob: -13.349626541137695
    10. ' ):' → logprob: -13.474626541137695

Token 1459: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00705184880644083
    2. '       ' → logprob: -5.007051944732666
    3. ':
' → logprob: -8.632051467895508
    4. ':' → logprob: -9.257051467895508
    5. '):
' → logprob: -10.132051467895508
    6. '               ' → logprob: -12.007051467895508
    7. ',' → logprob: -12.132051467895508
    8. '):' → logprob: -12.632051467895508
    9. '   ' → logprob: -13.007051467895508
    10. '```' → logprob: -13.132051467895508

Token 1460: ' d' (ID: 272)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5389260053634644
    2. '       ' → logprob: -1.0389260053634644
    3. ' graph' → logprob: -3.413926124572754
    4. '           ' → logprob: -4.038926124572754
    5. '   ' → logprob: -5.163926124572754
    6. '               ' → logprob: -5.538926124572754
    7. '	graph' → logprob: -6.038926124572754
    8. '```' → logprob: -9.413926124572754
    9. '	       ' → logprob: -10.163926124572754
    10. ' ' → logprob: -10.288926124572754

Token 1461: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9600508213043213
    2. ' =' → logprob: -1.0850508213043213
    3. ',' → logprob: -1.5850508213043213
    4. ')' → logprob: -3.2100508213043213
    5. '           ' → logprob: -3.9600508213043213
    6. '<|end|>' → logprob: -5.585050582885742
    7. '.append' → logprob: -5.960050582885742
    8. '),' → logprob: -6.210050582885742
    9. 'graph' → logprob: -6.710050582885742
    10. ' ,' → logprob: -6.835050582885742

Token 1462: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.20141440629959106
    2. ' dist' → logprob: -1.7014143466949463
    3. '(dist' → logprob: -14.451414108276367
    4. '	dist' → logprob: -14.826414108276367
    5. '   ' → logprob: -16.076414108276367
    6. 'Dist' → logprob: -17.326414108276367
    7. '       ' → logprob: -17.576414108276367
    8. '.dist' → logprob: -17.701414108276367
    9. '_dist' → logprob: -17.701414108276367
    10. '           ' → logprob: -18.076414108276367

Token 1463: '(vertices' (ID: 158708)
  Prédit: '(vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vertices' → logprob: -5.5577775128767826e-06
    2. 'vertices' → logprob: -12.125005722045898
    3. '(' → logprob: -17.0000057220459
    4. ' vertices' → logprob: -17.6250057220459
    5. ' (' → logprob: -19.0000057220459
    6. '(v' → logprob: -19.6250057220459
    7. '(vertex' → logprob: -19.6250057220459
    8. '(
' → logprob: -19.8750057220459
    9. '.vertices' → logprob: -20.0000057220459
    10. '(points' → logprob: -20.3750057220459

Token 1464: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.15030427277088165
    2. 'vertices' → logprob: -2.6503043174743652
    3. '(vertices' → logprob: -3.2753043174743652
    4. '[' → logprob: -3.5253043174743652
    5. '(a' → logprob: -6.775304317474365
    6. 'a' → logprob: -8.525303840637207
    7. ')' → logprob: -8.775303840637207
    8. ' vertices' → logprob: -9.275303840637207
    9. '   ' → logprob: -11.025303840637207
    10. '.vertices' → logprob: -11.275303840637207

Token 1465: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.1888488233089447
    2. ',' → logprob: -2.0638487339019775
    3. '[a' → logprob: -3.3138487339019775
    4. '),' → logprob: -6.438848972320557
    5. '],[' → logprob: -6.438848972320557
    6. '][' → logprob: -6.563848972320557
    7. '[b' → logprob: -6.813848972320557
    8. ',a' → logprob: -6.813848972320557
    9. 'a' → logprob: -7.688848972320557
    10. '   ' → logprob: -8.188848495483398

Token 1466: ' vertices' (ID: 38360)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.0028657352086156607
    2. ' vertices' → logprob: -5.877865791320801
    3. '(vertices' → logprob: -9.7528657913208
    4. '.vertices' → logprob: -13.8778657913208
    5. '   ' → logprob: -14.5028657913208
    6. ')' → logprob: -14.5028657913208
    7. '
' → logprob: -15.1278657913208
    8. '[' → logprob: -16.252864837646484
    9. ' ' → logprob: -16.627864837646484
    10. '           ' → logprob: -16.627864837646484

Token 1467: '[b' (ID: 40800)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.012221534736454487
    2. '[b' → logprob: -4.637221336364746
    3. 'a' → logprob: -6.262221336364746
    4. '[a' → logprob: -7.637221336364746
    5. ' b' → logprob: -9.887221336364746
    6. 'vertices' → logprob: -12.387221336364746
    7. '   ' → logprob: -12.887221336364746
    8. '[' → logprob: -13.262221336364746
    9. ' ' → logprob: -13.262221336364746
    10. ')' → logprob: -13.387221336364746

Token 1468: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18062646687030792
    2. '])' → logprob: -2.430626392364502
    3. ')
' → logprob: -2.805626392364502
    4. '])
' → logprob: -4.180626392364502
    5. '),' → logprob: -7.805626392364502
    6. '   ' → logprob: -8.05562686920166
    7. ')a' → logprob: -8.18062686920166
    8. ',' → logprob: -9.43062686920166
    9. ')]' → logprob: -9.55562686920166
    10. ')])' → logprob: -9.68062686920166

Token 1469: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031983929220587015
    2. ')' → logprob: -6.253198623657227
    3. '```' → logprob: -7.753198623657227
    4. '       ' → logprob: -8.128198623657227
    5. '               ' → logprob: -8.753198623657227
    6. ')
' → logprob: -9.378198623657227
    7. '):
' → logprob: -9.503198623657227
    8. '   ' → logprob: -9.503198623657227
    9. '<|end|>' → logprob: -9.628198623657227
    10. '[' → logprob: -11.628198623657227

Token 1470: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.005453124642372131
    2. ' graph' → logprob: -6.005453109741211
    3. '   ' → logprob: -6.505453109741211
    4. '           ' → logprob: -7.005453109741211
    5. '       ' → logprob: -7.630453109741211
    6. '	graph' → logprob: -9.505453109741211
    7. '```' → logprob: -11.630453109741211
    8. '               ' → logprob: -14.255453109741211
    9. '``' → logprob: -14.505453109741211
    10. '(graph' → logprob: -15.630453109741211

Token 1471: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -9.13388703338569e-06
    2. '[' → logprob: -12.375009536743164
    3. '```' → logprob: -13.125009536743164
    4. '   ' → logprob: -14.000009536743164
    5. 'a' → logprob: -14.000009536743164
    6. '[b' → logprob: -15.000009536743164
    7. '[i' → logprob: -15.500009536743164
    8. ' [' → logprob: -15.750009536743164
    9. ')[' → logprob: -15.750009536743164
    10. '[u' → logprob: -15.750009536743164

Token 1472: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0016144849359989166
    2. ').' → logprob: -6.501614570617676
    3. '           ' → logprob: -9.751614570617676
    4. ']' → logprob: -10.626614570617676
    5. '.append' → logprob: -11.001614570617676
    6. '       ' → logprob: -11.876614570617676
    7. '   ' → logprob: -12.501614570617676
    8. ' ].' → logprob: -14.001614570617676
    9. '.' → logprob: -15.001614570617676
    10. ']
' → logprob: -15.376614570617676

Token 1473: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.723973582556937e-05
    2. 'a' → logprob: -11.500017166137695
    3. '[a' → logprob: -12.250017166137695
    4. '.append' → logprob: -13.500017166137695
    5. ' append' → logprob: -14.125017166137695
    6. 'app' → logprob: -16.125017166137695
    7. 'b' → logprob: -17.625017166137695
    8. 'Append' → logprob: -17.875017166137695
    9. '_append' → logprob: -18.125017166137695
    10. 'appen' → logprob: -18.875017166137695

Token 1474: '((' (ID: 2054)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00026896485360339284
    2. '((' → logprob: -8.875268936157227
    3. '(' → logprob: -9.125268936157227
    4. '(
' → logprob: -11.750268936157227
    5. ' (' → logprob: -12.000268936157227
    6. 'b' → logprob: -13.250268936157227
    7. '```' → logprob: -13.250268936157227
    8. ',b' → logprob: -13.500268936157227
    9. ',' → logprob: -14.250268936157227
    10. '   ' → logprob: -15.250268936157227

Token 1475: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.9361264946837764e-07
    2. ' b' → logprob: -17.0
    3. '   ' → logprob: -17.25
    4. '       ' → logprob: -19.75
    5. '	b' → logprob: -21.125
    6. ')b' → logprob: -21.5
    7. '           ' → logprob: -21.75
    8. '    ' → logprob: -24.0
    9. '     ' → logprob: -24.5
    10. '    
' → logprob: -24.625

Token 1476: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015229015843942761
    2. ',d' → logprob: -9.500152587890625
    3. '),' → logprob: -10.625152587890625
    4. ')' → logprob: -10.625152587890625
    5. ',
' → logprob: -11.250152587890625
    6. ',b' → logprob: -12.000152587890625
    7. ' ,' → logprob: -13.500152587890625
    8. '‌,' → logprob: -13.750152587890625
    9. ',a' → logprob: -13.750152587890625
    10. '```' → logprob: -13.750152587890625

Token 1477: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5759394764900208
    2. 'd' → logprob: -0.8259394764900208
    3. ')d' → logprob: -17.450939178466797
    4. ')' → logprob: -18.325939178466797
    5. ' ' → logprob: -18.825939178466797
    6. ' ' → logprob: -19.450939178466797
    7. '```' → logprob: -19.700939178466797
    8. '	d' → logprob: -20.200939178466797
    9. ' 
' → logprob: -21.325939178466797
    10. '(d' → logprob: -21.700939178466797

Token 1478: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3896551728248596
    2. ')' → logprob: -1.1396551132202148
    3. '))
' → logprob: -6.014655113220215
    4. '           ' → logprob: -8.389655113220215
    5. '))' → logprob: -9.264655113220215
    6. '       ' → logprob: -12.139655113220215
    7. ')
' → logprob: -12.264655113220215
    8. '   ' → logprob: -12.639655113220215
    9. ')`
' → logprob: -14.139655113220215
    10. '])
' → logprob: -14.764655113220215

Token 1479: '           ' (ID: 352)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.28111904859542847
    2. '   ' → logprob: -2.0311191082000732
    3. '           ' → logprob: -2.6561191082000732
    4. '       ' → logprob: -4.031118869781494
    5. '	graph' → logprob: -4.656118869781494
    6. ' graph' → logprob: -4.781118869781494
    7. '```' → logprob: -4.906118869781494
    8. '(graph' → logprob: -7.656118869781494
    9. '``' → logprob: -10.156119346618652
    10. '[' → logprob: -10.406119346618652

Token 1480: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -3.214019307051785e-05
    2. ' graph' → logprob: -10.500032424926758
    3. '	graph' → logprob: -12.375032424926758
    4. '(graph' → logprob: -16.125032424926758
    5. '```' → logprob: -16.500032424926758
    6. '   ' → logprob: -17.000032424926758
    7. 'b' → logprob: -17.375032424926758
    8. '       ' → logprob: -18.000032424926758
    9. 'graphs' → logprob: -18.250032424926758
    10. 'graphql' → logprob: -18.500032424926758

Token 1481: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -2.1888679839321412e-05
    2. '[a' → logprob: -10.875021934509277
    3. 'b' → logprob: -13.000021934509277
    4. '[' → logprob: -15.000021934509277
    5. '```' → logprob: -15.500021934509277
    6. '   ' → logprob: -16.50002098083496
    7. '	b' → logprob: -18.62502098083496
    8. '[c' → logprob: -18.87502098083496
    9. '[u' → logprob: -19.50002098083496
    10. '][' → logprob: -19.62502098083496

Token 1482: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.40605613589286804
    2. '.append' → logprob: -1.1560561656951904
    3. ').' → logprob: -4.531055927276611
    4. '.' → logprob: -5.531055927276611
    5. '           ' → logprob: -5.531055927276611
    6. '   ' → logprob: -8.90605640411377
    7. '       ' → logprob: -9.78105640411377
    8. '.app' → logprob: -10.03105640411377
    9. '          ' → logprob: -11.03105640411377
    10. ' .' → logprob: -11.28105640411377

Token 1483: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. '.append' → logprob: -16.375
    3. 'app' → logprob: -16.75
    4. 'appen' → logprob: -16.875
    5. ' append' → logprob: -17.25
    6. '	append' → logprob: -19.875
    7. 'add' → logprob: -22.0
    8. 'appe' → logprob: -22.25
    9. '_append' → logprob: -22.625
    10. '```' → logprob: -23.125

Token 1484: '((' (ID: 2054)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00046737297088839114
    2. '(' → logprob: -7.750467300415039
    3. ' (' → logprob: -10.500467300415039
    4. '(b' → logprob: -11.875467300415039
    5. '(
' → logprob: -13.125467300415039
    6. '((' → logprob: -16.37546730041504
    7. 'a' → logprob: -17.12546730041504
    8. '(A' → logprob: -17.75046730041504
    9. ')' → logprob: -18.00046730041504
    10. '   ' → logprob: -18.75046730041504

Token 1485: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0280383548888494e-06
    2. ' a' → logprob: -13.875000953674316
    3. '   ' → logprob: -17.000001907348633
    4. '	a' → logprob: -17.375001907348633
    5. ')a' → logprob: -18.625001907348633
    6. '           ' → logprob: -19.625001907348633
    7. '       ' → logprob: -20.125001907348633
    8. ',a' → logprob: -20.875001907348633
    9. ')' → logprob: -20.875001907348633
    10. '```' → logprob: -21.000001907348633

Token 1486: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016086915275081992
    2. ' ,' → logprob: -9.250161170959473
    3. ',a' → logprob: -10.125161170959473
    4. ',b' → logprob: -11.625161170959473
    5. 'a' → logprob: -12.500161170959473
    6. ')' → logprob: -12.500161170959473
    7. ',d' → logprob: -13.500161170959473
    8. ',
' → logprob: -13.500161170959473
    9. '),' → logprob: -13.500161170959473
    10. '[' → logprob: -13.750161170959473

Token 1487: ' d' (ID: 272)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0012314191553741693
    2. 'd' → logprob: -6.7512311935424805
    3. ' a' → logprob: -9.75123119354248
    4. '   ' → logprob: -13.50123119354248
    5. ' d' → logprob: -13.50123119354248
    6. '	a' → logprob: -16.626232147216797
    7. ' ' → logprob: -17.001232147216797
    8. '           ' → logprob: -17.251232147216797
    9. '  ' → logprob: -17.501232147216797
    10. '    ' → logprob: -17.501232147216797

Token 1488: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.000351670227246359
    2. ')' → logprob: -8.125351905822754
    3. '))
' → logprob: -10.000351905822754
    4. '       ' → logprob: -12.250351905822754
    5. '           ' → logprob: -12.875351905822754
    6. '   ' → logprob: -13.375351905822754
    7. ')))' → logprob: -13.750351905822754
    8. ' ))' → logprob: -16.625350952148438
    9. ')
' → logprob: -17.000350952148438
    10. '));' → logprob: -17.250350952148438

Token 1489: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25816959142684937
    2. '   ' → logprob: -1.5081696510314941
    3. '#' → logprob: -5.133169651031494
    4. ' for' → logprob: -8.633169174194336
    5. '```' → logprob: -9.008169174194336
    6. '       ' → logprob: -11.633169174194336
    7. '    
' → logprob: -11.758169174194336
    8. '	for' → logprob: -13.383169174194336
    9. 'For' → logprob: -13.883169174194336
    10. 'from' → logprob: -13.883169174194336

Token 1490: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007129086880013347
    2. '   ' → logprob: -7.500712871551514
    3. '#' (adapté à ' #') → logprob: -8.875713348388672
    4. ' for' → logprob: -11.000713348388672
    5. '```' → logprob: -13.000713348388672
    6. 'next' → logprob: -15.125713348388672
    7. 'i' → logprob: -15.375713348388672
    8. 'from' → logprob: -15.500713348388672
    9. 'prev' → logprob: -16.125713348388672
    10. 'last' → logprob: -16.125713348388672

Token 1491: ' Ar' (ID: 1754)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00010032468708232045
    2. '   ' → logprob: -9.500100135803223
    3. '#' → logprob: -11.375100135803223
    4. ' for' → logprob: -11.875100135803223
    5. 'if' → logprob: -13.000100135803223
    6. 'i' → logprob: -13.375100135803223
    7. 'start' → logprob: -13.750100135803223
    8. 'offset' → logprob: -14.500100135803223
    9. 'from' → logprob: -14.750100135803223
    10. '```' → logprob: -15.500100135803223

Token 1492: 'êtes' (ID: 23720)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.32729193568229675
    2. 'for' → logprob: -1.3272919654846191
    3. 'range' → logprob: -4.827291965484619
    4. 'cs' → logprob: -6.452291965484619
    5. '_edges' → logprob: -6.702291965484619
    6. 'e' → logprob: -7.702291965484619
    7. '#' → logprob: -7.702291965484619
    8. 'g' → logprob: -7.827291965484619
    9. 'a' → logprob: -7.827291965484619
    10. 'edges' → logprob: -7.952291965484619

Token 1493: ' entre' (ID: 3853)
  Prédit: 'between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'between' → logprob: -0.31289997696876526
    2. 'for' → logprob: -2.0629000663757324
    3. ' between' → logprob: -2.8129000663757324
    4. '_between' → logprob: -3.0629000663757324
    5. '#' → logprob: -4.687900066375732
    6. 'from' → logprob: -4.937900066375732
    7. ' entre' → logprob: -5.562900066375732
    8. 'def' → logprob: -5.937900066375732
    9. '   ' → logprob: -6.187900066375732
    10. '_indices' → logprob: -7.187900066375732

Token 1494: ' points' (ID: 5571)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.029078897088766098
    2. ' ' → logprob: -3.779078960418701
    3. 'a' → logprob: -5.529078960418701
    4. '(' → logprob: -7.029078960418701
    5. '   ' → logprob: -8.029078483581543
    6. 'b' → logprob: -8.279078483581543
    7. 'vertices' → logprob: -9.029078483581543
    8. ' a' → logprob: -9.529078483581543
    9. ' (' → logprob: -10.154078483581543
    10. '(a' → logprob: -10.654078483581543

Token 1495: ' d' (ID: 272)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.715880811214447
    2. '   ' → logprob: -1.3408808708190918
    3. 'for' → logprob: -2.465880870819092
    4. 'def' → logprob: -3.840880870819092
    5. '2' → logprob: -3.965880870819092
    6. 's' → logprob: -4.715880870819092
    7. 'indices' → logprob: -4.840880870819092
    8. '[' → logprob: -4.965880870819092
    9. 'of' → logprob: -5.090880870819092
    10. ' ' → logprob: -5.215880870819092

Token 1496: ''inter' (ID: 55731)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02024894393980503
    2. 'inter' → logprob: -4.520248889923096
    3. '(' → logprob: -5.770248889923096
    4. '_inter' → logprob: -6.270248889923096
    5. 'a' → logprob: -7.395248889923096
    6. 'intersection' → logprob: -7.395248889923096
    7. '(inter' → logprob: -7.395248889923096
    8. '   ' → logprob: -7.520248889923096
    9. '```' → logprob: -8.020249366760254
    10. 'ex' → logprob: -8.645249366760254

Token 1497: 'section' (ID: 6471)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.7188378572463989
    2. 'section' → logprob: -0.8438378572463989
    3. 'sections' → logprob: -2.9688377380371094
    4. 'ter' → logprob: -3.7188377380371094
    5. 'erse' → logprob: -6.093837738037109
    6. '2' → logprob: -6.343837738037109
    7. 'ection' → logprob: -7.843837738037109
    8. 'intersection' → logprob: -8.09383773803711
    9. '```' → logprob: -8.09383773803711
    10. '3' → logprob: -8.46883773803711

Token 1498: ' adj' (ID: 20251)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0234607458114624
    2. '2' → logprob: -2.023460865020752
    3. 'from' → logprob: -2.148460865020752
    4. 'of' → logprob: -2.398460865020752
    5. 'a' → logprob: -2.523460865020752
    6. '   ' → logprob: -2.648460865020752
    7. '(' → logprob: -3.148460865020752
    8. 'def' → logprob: -3.273460865020752
    9. ' ' → logprob: -4.273460865020752
    10. '#' → logprob: -4.273460865020752

Token 1499: 'ac' (ID: 359)
  Prédit: 'oints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oints' → logprob: -1.5158194303512573
    2. '0' → logprob: -1.7658194303512573
    3. '2' → logprob: -1.8908194303512573
    4. 'ex' → logprob: -2.140819549560547
    5. 'entes' → logprob: -2.640819549560547
    6. 'es' → logprob: -2.890819549560547
    7. '1' → logprob: -3.390819549560547
    8. 'é' → logprob: -3.890819549560547
    9. '```' → logprob: -3.890819549560547
    10. '+' → logprob: -3.890819549560547

Token 1500: 'ents' (ID: 1094)
  Prédit: 'ents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.001818097778595984
    2. 'ent' → logprob: -6.6268181800842285
    3. 'entes' → logprob: -8.50181770324707
    4. '[' → logprob: -9.62681770324707
    5. 'es' → logprob: -9.62681770324707
    6. '2' → logprob: -10.00181770324707
    7. '(' → logprob: -10.25181770324707
    8. 'e' → logprob: -11.00181770324707
    9. '{' → logprob: -11.75181770324707
    10. '```' → logprob: -11.87681770324707

Token 1501: ' dans' (ID: 2671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5518103837966919
    2. '   ' → logprob: -1.301810383796692
    3. ' for' → logprob: -1.926810383796692
    4. 'a' → logprob: -6.176810264587402
    5. ' pour' → logprob: -7.426810264587402
    6. 'pour' → logprob: -7.801810264587402
    7. ' (' → logprob: -8.051810264587402
    8. '(' → logprob: -8.301810264587402
    9. '#' → logprob: -8.301810264587402
    10. ' of' → logprob: -8.426810264587402

Token 1502: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8664038181304932
    2. '[' → logprob: -1.4914038181304932
    3. 'vertices' → logprob: -1.6164038181304932
    4. '2' → logprob: -2.741403818130493
    5. ' range' → logprob: -2.991403818130493
    6. '   ' → logprob: -3.866403818130493
    7. 'the' → logprob: -4.991403579711914
    8. ' vertices' → logprob: -6.241403579711914
    9. '[(' → logprob: -6.366403579711914
    10. ' ' → logprob: -6.616403579711914

Token 1503: ' chaîne' (ID: 89288)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.6393622159957886
    2. '2' → logprob: -1.2643622159957886
    3. 'range' → logprob: -2.389362335205078
    4. 'for' → logprob: -3.014362335205078
    5. ' chain' → logprob: -4.139362335205078
    6. 'chaine' → logprob: -4.139362335205078
    7. '[' → logprob: -5.639362335205078
    8. 'same' → logprob: -6.264362335205078
    9. '   ' → logprob: -6.389362335205078
    10. ' range' → logprob: -6.514362335205078

Token 1504: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011185282841324806
    2. '   ' → logprob: -4.886185169219971
    3. ' for' → logprob: -5.636185169219971
    4. '
' → logprob: -12.386185646057129
    5. '#' → logprob: -14.636185646057129
    6. 'from' → logprob: -14.886185646057129
    7. '    
' → logprob: -15.136185646057129
    8. 'if' → logprob: -15.511185646057129
    9. '	for' → logprob: -15.636185646057129
    10. '```' → logprob: -15.636185646057129

Token 1505: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2028956413269043
    2. '   ' → logprob: -1.8278956413269043
    3. ' for' → logprob: -3.8278956413269043
    4. '2' → logprob: -7.577895641326904
    5. '#' → logprob: -8.327896118164062
    6. '       ' → logprob: -9.827896118164062
    7. 'i' → logprob: -9.827896118164062
    8. '```' → logprob: -9.827896118164062
    9. ' ' → logprob: -10.077896118164062
    10. '(' → logprob: -10.577896118164062

Token 1506: '.e' (ID: 2560)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9708778262138367
    2. '+' → logprob: -1.5958778858184814
    3. ' =' → logprob: -1.5958778858184814
    4. '   ' → logprob: -2.2208778858184814
    5. '=' → logprob: -2.5958778858184814
    6. ' for' → logprob: -4.470877647399902
    7. 'n' → logprob: -4.845877647399902
    8. '```' → logprob: -6.470877647399902
    9. ' +=' → logprob: -6.595877647399902
    10. '+=' → logprob: -6.595877647399902

Token 1507: '.' (ID: 13)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016988934949040413
    2. '   ' → logprob: -4.891988754272461
    3. ' for' → logprob: -5.016988754272461
    4. 'n' → logprob: -7.516988754272461
    5. 'range' → logprob: -7.516988754272461
    6. 'f' → logprob: -8.016988754272461
    7. ' range' → logprob: -8.016988754272461
    8. ' ' → logprob: -8.391988754272461
    9. '=' → logprob: -8.891988754272461
    10. '0' → logprob: -9.016988754272461

Token 1508: ' entre' (ID: 3853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6155985593795776
    2. 'for' → logprob: -1.1155985593795776
    3. ' for' → logprob: -2.365598678588867
    4. '2' → logprob: -3.615598678588867
    5. ' ' → logprob: -6.115598678588867
    6. '(' → logprob: -6.240598678588867
    7. '       ' → logprob: -6.490598678588867
    8. ' (' → logprob: -7.240598678588867
    9. '4' → logprob: -7.365598678588867
    10. 'a' → logprob: -7.490598678588867

Token 1509: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015921075828373432
    2. '(' → logprob: -7.87659215927124
    3. ' ' → logprob: -7.87659215927124
    4. '   ' → logprob: -8.001591682434082
    5. 'vertices' → logprob: -8.001591682434082
    6. 'b' → logprob: -9.126591682434082
    7. '       ' → logprob: -11.751591682434082
    8. '4' → logprob: -11.876591682434082
    9. '
' → logprob: -11.876591682434082
    10. '#' → logprob: -12.001591682434082

Token 1510: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0034610868897289038
    2. ' ' → logprob: -5.753460884094238
    3. '   ' → logprob: -9.128460884094238
    4. '(' → logprob: -9.253460884094238
    5. 'b' → logprob: -10.253460884094238
    6. 'a' → logprob: -10.753460884094238
    7. '4' → logprob: -12.253460884094238
    8. '  ' → logprob: -12.628460884094238
    9. ' (' → logprob: -12.878460884094238
    10. ')' → logprob: -13.128460884094238

Token 1511: 'i' (ID: 72)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.3926265835762024
    2. 'i' → logprob: -1.1426265239715576
    3. '*(' → logprob: -6.392626762390137
    4. '*' → logprob: -6.642626762390137
    5. '(i' → logprob: -6.767626762390137
    6. '(' → logprob: -6.892626762390137
    7. '*n' → logprob: -7.892626762390137
    8. ' *' → logprob: -9.642626762390137
    9. '```' → logprob: -10.142626762390137
    10. 'n' → logprob: -10.517626762390137

Token 1512: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2887832820415497
    2. ')' → logprob: -1.663783311843872
    3. ' +' → logprob: -3.788783311843872
    4. ',' → logprob: -4.538783073425293
    5. ' and' → logprob: -4.538783073425293
    6. '),' → logprob: -4.788783073425293
    7. '   ' → logprob: -5.788783073425293
    8. '*' → logprob: -6.163783073425293
    9. 'and' → logprob: -7.038783073425293
    10. ')+' → logprob: -7.288783073425293

Token 1513: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008664678782224655
    2. ' ' → logprob: -4.758664608001709
    3. '   ' → logprob: -10.133665084838867
    4. ')' → logprob: -12.633665084838867
    5. ' (' → logprob: -13.258665084838867
    6. '  ' → logprob: -13.508665084838867
    7. '
' → logprob: -13.758665084838867
    8. '(' → logprob: -13.758665084838867
    9. '`' → logprob: -14.883665084838867
    10. '    ' → logprob: -15.258665084838867

Token 1514: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0012324919225648046
    2. '(i' → logprob: -7.001232624053955
    3. '*i' → logprob: -8.376232147216797
    4. '(' → logprob: -10.501232147216797
    5. ' i' → logprob: -10.626232147216797
    6. '+' → logprob: -10.626232147216797
    7. '```' → logprob: -12.751232147216797
    8. ')' → logprob: -12.751232147216797
    9. '   ' → logprob: -13.001232147216797
    10. ' (' → logprob: -13.501232147216797

Token 1515: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0185540858656168
    2. ' +' → logprob: -4.393554210662842
    3. '),' → logprob: -5.518554210662842
    4. ')' → logprob: -6.643554210662842
    5. '   ' → logprob: -7.518554210662842
    6. ' ' → logprob: -9.893553733825684
    7. ')+' → logprob: -10.018553733825684
    8. ',' → logprob: -10.768553733825684
    9. '2' → logprob: -11.268553733825684
    10. '),
' → logprob: -11.893553733825684

Token 1516: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00022439735766965896
    2. ' ' → logprob: -8.750224113464355
    3. '1' → logprob: -10.750224113464355
    4. '3' → logprob: -10.875224113464355
    5. '4' → logprob: -11.500224113464355
    6. '   ' → logprob: -12.375224113464355
    7. '0' → logprob: -12.625224113464355
    8. '
' → logprob: -12.625224113464355
    9. '  ' → logprob: -13.875224113464355
    10. '+' → logprob: -13.937724113464355

Token 1517: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012573575600981712
    2. '+' → logprob: -5.012573719024658
    3. '),' → logprob: -5.387573719024658
    4. ')
' → logprob: -7.262573719024658
    5. '   ' → logprob: -8.1375732421875
    6. ' )' → logprob: -9.7625732421875
    7. ' +' → logprob: -9.7625732421875
    8. ' and' → logprob: -9.7625732421875
    9. ',' → logprob: -10.0125732421875
    10. '+)' → logprob: -11.2625732421875

Token 1518: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7417919039726257
    2. '   ' → logprob: -1.6167919635772705
    3. ',' → logprob: -2.2417919635772705
    4. 'and' → logprob: -2.4917919635772705
    5. ' et' → logprob: -3.1167919635772705
    6. ' for' → logprob: -3.4917919635772705
    7. 'for' → logprob: -3.4917919635772705
    8. ' ,' → logprob: -4.616791725158691
    9. 'et' → logprob: -5.741791725158691
    10. '
' → logprob: -5.741791725158691

Token 1519: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4454537630081177
    2. '(' → logprob: -1.0704537630081177
    3. ' ' → logprob: -4.695453643798828
    4. ' (' → logprob: -4.945453643798828
    5. '   ' → logprob: -8.070453643798828
    6. '4' → logprob: -11.195453643798828
    7. '((' → logprob: -12.070453643798828
    8. '[' → logprob: -12.195453643798828
    9. '  ' → logprob: -12.195453643798828
    10. '`' → logprob: -12.445453643798828

Token 1520: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00031258241506293416
    2. ' ' → logprob: -8.125312805175781
    3. '(' → logprob: -11.500312805175781
    4. '```' → logprob: -13.125312805175781
    5. '   ' → logprob: -13.375312805175781
    6. '
' → logprob: -13.875312805175781
    7. ' (' → logprob: -14.125312805175781
    8. '`' → logprob: -15.125312805175781
    9. ')' → logprob: -15.250312805175781
    10. '4' → logprob: -15.937812805175781

Token 1521: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0502188615500927
    2. 'i' → logprob: -3.0502188205718994
    3. '(' → logprob: -7.3002190589904785
    4. '*(' → logprob: -7.4252190589904785
    5. '*i' → logprob: -8.67521858215332
    6. ' (' → logprob: -8.92521858215332
    7. '*' → logprob: -10.55021858215332
    8. ' i' → logprob: -11.67521858215332
    9. '(n' → logprob: -11.80021858215332
    10. '+' → logprob: -12.92521858215332

Token 1522: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0122543815523386
    2. '1' → logprob: -4.762254238128662
    3. 'i' → logprob: -6.637254238128662
    4. '   ' → logprob: -7.137254238128662
    5. ')+' → logprob: -7.387254238128662
    6. ')' → logprob: -7.887254238128662
    7. ' +' → logprob: -8.01225471496582
    8. '```' → logprob: -9.51225471496582
    9. '2' → logprob: -10.38725471496582
    10. '
' → logprob: -10.76225471496582

Token 1523: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.029819458723068237
    2. '1' → logprob: -3.5298194885253906
    3. ' ' → logprob: -10.27981948852539
    4. '   ' → logprob: -11.15481948852539
    5. '
' → logprob: -11.15481948852539
    6. '0' → logprob: -13.15481948852539
    7. '```' → logprob: -13.65481948852539
    8. '(' → logprob: -14.34231948852539
    9. '  ' → logprob: -14.52981948852539
    10. '3' → logprob: -15.46731948852539

Token 1524: '),' (ID: 936)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6714550852775574
    2. '),' → logprob: -1.0464551448822021
    3. ',' → logprob: -2.171455144882202
    4. ')*' → logprob: -4.671454906463623
    5. ')' → logprob: -5.296454906463623
    6. '+' → logprob: -5.546454906463623
    7. '),(' → logprob: -6.046454906463623
    8. '   ' → logprob: -6.671454906463623
    9. ' ' → logprob: -7.546454906463623
    10. ' ,' → logprob: -8.046455383300781

Token 1525: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7372048862162046e-05
    2. ' ' → logprob: -10.625027656555176
    3. '
' → logprob: -13.375027656555176
    4. '(' → logprob: -14.125027656555176
    5. '   ' → logprob: -15.375027656555176
    6. '```' → logprob: -15.375027656555176
    7. '`' → logprob: -16.37502670288086
    8. '

' → logprob: -17.25002670288086
    9. '  ' → logprob: -17.87502670288086
    10. '
' → logprob: -17.87502670288086

Token 1526: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.25200432538986206
    2. 'i' → logprob: -1.5020043849945068
    3. '```' → logprob: -10.377004623413086
    4. ' (' → logprob: -11.127004623413086
    5. ' i' → logprob: -11.627004623413086
    6. '
' → logprob: -11.752004623413086
    7. '1' → logprob: -12.377004623413086
    8. '+' → logprob: -13.252004623413086
    9. '*(' → logprob: -13.502004623413086
    10. '(' → logprob: -13.752004623413086

Token 1527: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7090334892272949
    2. '1' → logprob: -0.7090334892272949
    3. '   ' → logprob: -5.084033489227295
    4. '2' → logprob: -5.584033489227295
    5. ' ' → logprob: -6.459033489227295
    6. '```' → logprob: -6.834033489227295
    7. ')' → logprob: -6.959033489227295
    8. ')+' → logprob: -7.334033489227295
    9. '*' → logprob: -7.584033489227295
    10. '
' → logprob: -7.834033489227295

Token 1528: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.19936521351337433
    2. '1' → logprob: -1.824365258216858
    3. '3' → logprob: -3.9493651390075684
    4. ' ' → logprob: -9.574365615844727
    5. '   ' → logprob: -9.699365615844727
    6. '
' → logprob: -11.699365615844727
    7. '+' → logprob: -11.824365615844727
    8. ')' → logprob: -12.761865615844727
    9. '0' → logprob: -13.011865615844727
    10. '```' → logprob: -13.011865615844727

Token 1529: ')+' (ID: 16161)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7926682233810425
    2. ')' → logprob: -0.9176682233810425
    3. '),' → logprob: -2.042668342590332
    4. ')),' → logprob: -5.042668342590332
    5. '+' → logprob: -5.292668342590332
    6. ')
' → logprob: -6.417668342590332
    7. '))
' → logprob: -6.792668342590332
    8. ')):
' → logprob: -7.292668342590332
    9. '):
' → logprob: -7.667668342590332
    10. ')+' → logprob: -7.792668342590332

Token 1530: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014452704228460789
    2. '2' → logprob: -4.389452934265137
    3. '1' → logprob: -6.264452934265137
    4. ' ' → logprob: -10.639452934265137
    5. ')' → logprob: -12.264452934265137
    6. '
' → logprob: -12.389452934265137
    7. '   ' → logprob: -13.389452934265137
    8. '4' → logprob: -13.889452934265137
    9. '```' → logprob: -13.889452934265137
    10. ',' → logprob: -15.139452934265137

Token 1531: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.0520399808883667
    2. ')' → logprob: -1.1770399808883667
    3. ')
' → logprob: -1.1770399808883667
    4. '):' → logprob: -3.4270401000976562
    5. '   ' → logprob: -7.177040100097656
    6. ' )
' → logprob: -8.677040100097656
    7. ' )' → logprob: -8.802040100097656
    8. '),' → logprob: -8.927040100097656
    9. '):

' → logprob: -8.927040100097656
    10. ' ):
' → logprob: -9.177040100097656

Token 1532: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0869077742099762
    2. '   ' → logprob: -2.5869078636169434
    3. ' for' → logprob: -4.836907863616943
    4. '	for' → logprob: -10.461907386779785
    5. '```' → logprob: -11.211907386779785
    6. '
' → logprob: -11.961907386779785
    7. '    
' → logprob: -12.586907386779785
    8. '       ' → logprob: -14.461907386779785
    9. '  
' → logprob: -14.711907386779785
    10. ' ' → logprob: -15.211907386779785

Token 1533: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.043966591358184814
    2. '   ' → logprob: -3.29396653175354
    3. ' for' → logprob: -5.168966770172119
    4. '```' → logprob: -8.793966293334961
    5. '	for' → logprob: -10.293966293334961
    6. '
' → logprob: -10.793966293334961
    7. '``' → logprob: -12.543966293334961
    8. '    
' → logprob: -12.793966293334961
    9. '       ' → logprob: -13.543966293334961
    10. ' ' → logprob: -14.418966293334961

Token 1534: ' Ces' (ID: 35720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.8828707804204896e-05
    2. '   ' → logprob: -10.000048637390137
    3. ' for' → logprob: -13.375048637390137
    4. 'offset' → logprob: -14.000048637390137
    5. 'start' → logprob: -14.625048637390137
    6. 'if' → logprob: -15.125048637390137
    7. '```' → logprob: -16.125049591064453
    8. 'range' → logprob: -17.000049591064453
    9. 'i' → logprob: -17.750049591064453
    10. 'from' → logprob: -18.000049591064453

Token 1535: ' points' (ID: 5571)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14236927032470703
    2. 'i' → logprob: -3.767369270324707
    3. ' for' → logprob: -3.767369270324707
    4. '#' → logprob: -3.892369270324707
    5. 'a' → logprob: -4.392369270324707
    6. 'are' → logprob: -4.517369270324707
    7. ' are' → logprob: -4.892369270324707
    8. 'points' → logprob: -5.017369270324707
    9. 'ar' → logprob: -5.392369270324707
    10. '   ' → logprob: -5.642369270324707

Token 1536: ' se' (ID: 458)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5617110133171082
    2. '#' → logprob: -2.561711072921753
    3. '_id' → logprob: -2.686711072921753
    4. ' =' → logprob: -3.061711072921753
    5. '=' → logprob: -3.186711072921753
    6. 's' → logprob: -3.311711072921753
    7. ' for' → logprob: -3.811711072921753
    8. 'between' → logprob: -4.436710834503174
    9. '_ids' → logprob: -4.561710834503174
    10. ' sont' → logprob: -4.686710834503174

Token 1537: ' situ' (ID: 4581)
  Prédit: 'connect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connect' → logprob: -0.1237764060497284
    2. 'ont' → logprob: -3.373776435852051
    3. '_id' → logprob: -3.623776435852051
    4. ' trouvent' → logprob: -4.623776435852051
    5. 's' → logprob: -4.998776435852051
    6. 'for' → logprob: -5.123776435852051
    7. 'r' → logprob: -5.248776435852051
    8. '#' → logprob: -5.623776435852051
    9. '_connect' → logprob: -5.623776435852051
    10. 'tr' → logprob: -5.748776435852051

Token 1538: 'ent' (ID: 299)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.006392761133611202
    2. 'ont' → logprob: -5.881392955780029
    3. 'r' → logprob: -6.881392955780029
    4. 'ent' → logprob: -6.881392955780029
    5. 'ront' → logprob: -7.131392955780029
    6. 'rent' → logprob: -8.631392478942871
    7. 'aient' → logprob: -9.631392478942871
    8. 't' → logprob: -9.756392478942871
    9. 'rt' → logprob: -9.756392478942871
    10. 'ra' → logprob: -10.006392478942871

Token 1539: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sur' → logprob: -1.0265557765960693
    2. 'à' → logprob: -2.0265557765960693
    3. 'entre' → logprob: -2.5265557765960693
    4. 'au' → logprob: -2.5265557765960693
    5. '=' → logprob: -2.6515557765960693
    6. 'dans' → logprob: -2.7765557765960693
    7. ' entre' → logprob: -2.9015557765960693
    8. '#' → logprob: -3.6515557765960693
    9. '   ' → logprob: -3.7765557765960693
    10. 'between' → logprob: -3.9015557765960693

Token 1540: ' les' (ID: 1341)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2897835075855255
    2. 'les' → logprob: -2.039783477783203
    3. 'la' → logprob: -3.414783477783203
    4. ' ' → logprob: -4.039783477783203
    5. 'le' → logprob: -4.039783477783203
    6. ' les' → logprob: -4.039783477783203
    7. ' la' → logprob: -4.664783477783203
    8. '(' → logprob: -4.789783477783203
    9. 'vertices' → logprob: -5.414783477783203
    10. 'the' → logprob: -5.914783477783203

Token 1541: ' intersections' (ID: 143513)
  Prédit: 'cer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cer' → logprob: -0.10552278161048889
    2. 'c' → logprob: -2.980522871017456
    3. '2' → logprob: -4.105522632598877
    4. 'b' → logprob: -4.355522632598877
    5. ' cer' → logprob: -4.480522632598877
    6. 'cir' → logprob: -5.980522632598877
    7. ' ' → logprob: -7.230522632598877
    8. 'bord' → logprob: -7.230522632598877
    9. 'cour' → logprob: -7.480522632598877
    10. '1' → logprob: -7.605522632598877

Token 1542: ' entre' (ID: 3853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0753651857376099
    2. ' entre' → logprob: -1.8253651857376099
    3. ' between' → logprob: -2.4503650665283203
    4. ' de' → logprob: -2.7003650665283203
    5. ' des' → logprob: -2.8253650665283203
    6. 'de' → logprob: -3.0753650665283203
    7. 'between' → logprob: -3.0753650665283203
    8. '2' → logprob: -3.3253650665283203
    9. ' (' → logprob: -3.8253650665283203
    10. ' of' → logprob: -3.8253650665283203

Token 1543: ' cer' (ID: 10816)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6005080342292786
    2. 'i' → logprob: -0.9755080342292786
    3. ' ' → logprob: -3.475507974624634
    4. '2' → logprob: -4.600508213043213
    5. 'vertices' → logprob: -5.225508213043213
    6. 'c' → logprob: -5.225508213043213
    7. ' vertices' → logprob: -5.225508213043213
    8. 'cir' → logprob: -5.475508213043213
    9. '(i' → logprob: -5.850508213043213
    10. ' circles' → logprob: -5.850508213043213

Token 1544: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.0001314295077463612
    2. 'cle' → logprob: -9.500131607055664
    3. 'cl' → logprob: -10.250131607055664
    4. 'c' → logprob: -11.625131607055664
    5. '#' → logprob: -13.250131607055664
    6. '1' → logprob: -13.500131607055664
    7. 'icles' → logprob: -13.625131607055664
    8. '0' → logprob: -13.625131607055664
    9. 'cls' → logprob: -13.625131607055664
    10. '2' → logprob: -13.750131607055664

Token 1545: ' i' (ID: 575)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.891418993473053
    2. ' i' → logprob: -1.5164189338684082
    3. 'i' → logprob: -1.8914189338684082
    4. '(' → logprob: -2.891418933868408
    5. '(i' → logprob: -3.266418933868408
    6. ',' → logprob: -3.641418933868408
    7. '[i' → logprob: -3.891418933868408
    8. '2' → logprob: -4.516418933868408
    9. '   ' → logprob: -4.766418933868408
    10. '0' → logprob: -5.141418933868408

Token 1546: ',i' (ID: 25032)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.9349125027656555
    2. ' and' → logprob: -1.3099124431610107
    3. 'et' → logprob: -1.6849124431610107
    4. ',' → logprob: -2.8099124431610107
    5. 'and' → logprob: -3.3099124431610107
    6. ')' → logprob: -4.05991268157959
    7. '   ' → logprob: -4.18491268157959
    8. '+' → logprob: -4.55991268157959
    9. ' ,' → logprob: -5.55991268157959
    10. ' ' → logprob: -6.05991268157959

Token 1547: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00017994173686020076
    2. ' +' → logprob: -9.2501802444458
    3. '1' → logprob: -9.8751802444458
    4. '+
' → logprob: -11.5001802444458
    5. 'plus' → logprob: -12.2501802444458
    6. '```' → logprob: -12.7501802444458
    7. '
' → logprob: -12.8751802444458
    8. 'and' → logprob: -13.0001802444458
    9. ',' → logprob: -13.0001802444458
    10. '+,' → logprob: -13.2501802444458

Token 1548: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2020991056924686e-05
    2. ' ' → logprob: -10.625032424926758
    3. '+' → logprob: -12.375032424926758
    4. '2' → logprob: -13.000032424926758
    5. '
' → logprob: -14.500032424926758
    6. '0' → logprob: -15.000032424926758
    7. '   ' → logprob: -16.000032424926758
    8. '#' → logprob: -16.875032424926758
    9. '  ' → logprob: -17.125032424926758
    10. '```' → logprob: -17.250032424926758

Token 1549: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4944317638874054
    2. '   ' → logprob: -1.494431734085083
    3. ' for' → logprob: -2.119431734085083
    4. ',' → logprob: -3.744431734085083
    5. ':' → logprob: -4.744431972503662
    6. ')' → logprob: -5.494431972503662
    7. '```' → logprob: -6.494431972503662
    8. ' and' → logprob: -6.869431972503662
    9. ' ' → logprob: -6.994431972503662
    10. '#' → logprob: -6.994431972503662

Token 1550: ' i' (ID: 575)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3444150686264038
    2. '(' → logprob: -2.5944151878356934
    3. ' ' → logprob: -2.7194151878356934
    4. 'i' → logprob: -2.8444151878356934
    5. ' (' → logprob: -3.3444151878356934
    6. ' i' → logprob: -3.4694151878356934
    7. '   ' → logprob: -4.469415187835693
    8. '(i' → logprob: -5.094415187835693
    9. '    ' → logprob: -6.719415187835693
    10. '
' → logprob: -6.969415187835693

Token 1551: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.29340603761375e-05
    2. ' +' → logprob: -9.625092506408691
    3. '*' → logprob: -10.875092506408691
    4. '```' → logprob: -13.875092506408691
    5. '+i' → logprob: -14.000092506408691
    6. '+(' → logprob: -14.000092506408691
    7. '2' → logprob: -14.000092506408691
    8. '+
' → logprob: -14.125092506408691
    9. ')+' → logprob: -14.375092506408691
    10. '
' → logprob: -14.375092506408691

Token 1552: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0430179201066494
    2. '2' → logprob: -3.168017864227295
    3. '+' → logprob: -11.293018341064453
    4. ' ' → logprob: -12.918018341064453
    5. '
' → logprob: -13.043018341064453
    6. '```' → logprob: -14.543018341064453
    7. '   ' → logprob: -15.168018341064453
    8. '3' → logprob: -15.855518341064453
    9. '``' → logprob: -16.105518341064453
    10. '0' → logprob: -16.105518341064453

Token 1553: ',i' (ID: 25032)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2656180262565613
    2. ',' → logprob: -1.640618085861206
    3. '```' → logprob: -4.640617847442627
    4. 'and' → logprob: -4.765617847442627
    5. ' and' → logprob: -5.015617847442627
    6. ')' → logprob: -5.640617847442627
    7. ',
' → logprob: -6.265617847442627
    8. '
' → logprob: -6.390617847442627
    9. 'for' → logprob: -6.890617847442627
    10. '   ' → logprob: -6.890617847442627

Token 1554: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0033058011904358864
    2. '+
' → logprob: -6.753305912017822
    3. '#' → logprob: -7.628305912017822
    4. '   ' → logprob: -7.753305912017822
    5. 'for' → logprob: -8.253305435180664
    6. '
' → logprob: -8.378305435180664
    7. ',' → logprob: -8.503305435180664
    8. ' +' → logprob: -8.503305435180664
    9. '```' → logprob: -9.378305435180664
    10. ' ' → logprob: -10.628305435180664

Token 1555: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002800471556838602
    2. '1' → logprob: -8.250280380249023
    3. '
' → logprob: -12.125280380249023
    4. ' ' → logprob: -12.375280380249023
    5. '+' → logprob: -12.750280380249023
    6. '0' → logprob: -12.875280380249023
    7. '```' → logprob: -13.250280380249023
    8. '   ' → logprob: -14.750280380249023
    9. '-' → logprob: -15.312780380249023
    10. '``' → logprob: -15.500280380249023

Token 1556: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023217055946588516
    2. '   ' → logprob: -4.39821720123291
    3. ' for' → logprob: -4.64821720123291
    4. '
' → logprob: -6.89821720123291
    5. '    
' → logprob: -10.64821720123291
    6. ',' → logprob: -11.39821720123291
    7. '```' → logprob: -12.02321720123291
    8. '	for' → logprob: -12.27321720123291
    9. '#' → logprob: -13.02321720123291
    10. '  
' → logprob: -13.27321720123291

Token 1557: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06020133197307587
    2. '   ' → logprob: -2.935201406478882
    3. ' for' → logprob: -5.310201168060303
    4. '```' → logprob: -8.185201644897461
    5. 'next' → logprob: -10.685201644897461
    6. '#' → logprob: -11.310201644897461
    7. 'i' → logprob: -11.310201644897461
    8. '	for' → logprob: -11.685201644897461
    9. '
' → logprob: -11.685201644897461
    10. '``' → logprob: -11.935201644897461

Token 1558: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.455939382314682
    2. ' for' → logprob: -1.3309394121170044
    3. '   ' → logprob: -2.455939292907715
    4. '
' → logprob: -4.580939292907715
    5. '```' → logprob: -5.580939292907715
    6. '	for' → logprob: -6.705939292907715
    7. '    
' → logprob: -7.580939292907715
    8. '  
' → logprob: -9.205939292907715
    9. ' 
' → logprob: -9.830939292907715
    10. '\' → logprob: -9.830939292907715

Token 1559: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004939850885421038
    2. '   ' → logprob: -5.504940032958984
    3. ' for' → logprob: -7.129940032958984
    4. '```' → logprob: -10.879940032958984
    5. 'offset' → logprob: -11.504940032958984
    6. 'start' → logprob: -11.629940032958984
    7. 'next' → logprob: -12.254940032958984
    8. 'i' → logprob: -12.504940032958984
    9. 'from' → logprob: -12.629940032958984
    10. 'if' → logprob: -13.129940032958984

Token 1560: ' tente' (ID: 75234)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0058185867965221405
    2. 'range' → logprob: -6.2558183670043945
    3. 'continue' → logprob: -6.2558183670043945
    4. '   ' → logprob: -6.7558183670043945
    5. ' for' → logprob: -7.8808183670043945
    6. '
' → logprob: -8.630818367004395
    7. '#' → logprob: -9.380818367004395
    8. '       ' → logprob: -10.255818367004395
    9. '```' → logprob: -10.505818367004395
    10. 'i' → logprob: -11.505818367004395

Token 1561: ' toute' (ID: 16825)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07368411868810654
    2. ' for' → logprob: -3.5736842155456543
    3. '   ' → logprob: -3.9486842155456543
    4. 'range' → logprob: -4.448684215545654
    5. ' range' → logprob: -5.323684215545654
    6. 'i' → logprob: -6.073684215545654
    7. ' i' → logprob: -6.823684215545654
    8. 'in' → logprob: -6.823684215545654
    9. ' in' → logprob: -7.698684215545654
    10. '(' → logprob: -7.698684215545654

Token 1562: ' combinaison' (ID: 165933)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.682662844657898
    2. '[(' → logprob: -1.557662844657898
    3. 's' → logprob: -2.3076629638671875
    4. '(' → logprob: -2.8076629638671875
    5. '[' → logprob: -3.1826629638671875
    6. 'la' → logprob: -4.4326629638671875
    7. 'com' → logprob: -4.5576629638671875
    8. ' combinations' → logprob: -4.9326629638671875
    9. ' comb' → logprob: -5.0576629638671875
    10. 'l' → logprob: -5.0576629638671875

Token 1563: ' entre' (ID: 3853)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07584891468286514
    2. ' for' → logprob: -2.8258488178253174
    3. '   ' → logprob: -5.2008490562438965
    4. '[(' → logprob: -6.3258490562438965
    5. 'range' → logprob: -6.7008490562438965
    6. '       ' → logprob: -6.9508490562438965
    7. ' (' → logprob: -7.2008490562438965
    8. '(' → logprob: -7.4508490562438965
    9. ':
' → logprob: -8.075848579406738
    10. '[
' → logprob: -8.075848579406738

Token 1564: ' les' (ID: 1341)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.13869532942771912
    2. '[' → logprob: -2.763695240020752
    3. '(' → logprob: -3.013695240020752
    4. '4' → logprob: -5.138695240020752
    5. 'a' → logprob: -5.263695240020752
    6. ' ' → logprob: -6.513695240020752
    7. 'b' → logprob: -6.638695240020752
    8. 'vertices' → logprob: -7.013695240020752
    9. '   ' → logprob: -7.263695240020752
    10. ' (' → logprob: -7.763695240020752

Token 1565: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.8939824104309082
    2. '2' → logprob: -1.0189824104309082
    3. '(' → logprob: -1.8939824104309082
    4. '[' → logprob: -2.768982410430908
    5. 'vertices' → logprob: -4.393982410430908
    6. '{' → logprob: -7.018982410430908
    7. ' ' → logprob: -7.018982410430908
    8. 'points' → logprob: -7.143982410430908
    9. 'indices' → logprob: -7.768982410430908
    10. 'four' → logprob: -7.893982410430908

Token 1566: '2' (ID: 17)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.1401287466287613
    2. '2' → logprob: -3.0151288509368896
    3. '(' → logprob: -3.2651288509368896
    4. '3' → logprob: -3.6401288509368896
    5. 'b' → logprob: -4.5151286125183105
    6. 'a' → logprob: -5.5151286125183105
    7. ' ' → logprob: -6.8901286125183105
    8. ' (' → logprob: -8.390129089355469
    9. '[' → logprob: -8.515129089355469
    10. '1' → logprob: -8.515129089355469

Token 1567: ' points' (ID: 5571)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.161041259765625
    2. 'a' → logprob: -1.911041259765625
    3. 'i' → logprob: -2.161041259765625
    4. '2' → logprob: -2.286041259765625
    5. '*(' → logprob: -2.536041259765625
    6. '*' → logprob: -2.911041259765625
    7. 'for' → logprob: -3.036041259765625
    8. 'vertices' → logprob: -3.536041259765625
    9. '*i' → logprob: -3.661041259765625
    10. 'points' → logprob: -3.661041259765625

Token 1568: ' du' (ID: 1462)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06910262256860733
    2. '[' → logprob: -3.8191025257110596
    3. ' for' → logprob: -3.9441025257110596
    4. '(' → logprob: -4.819102764129639
    5. 'of' → logprob: -5.569102764129639
    6. 'a' → logprob: -5.694102764129639
    7. '   ' → logprob: -6.069102764129639
    8. ' of' → logprob: -6.194102764129639
    9. ',' → logprob: -6.319102764129639
    10. ' (' → logprob: -6.819102764129639

Token 1569: ' i' (ID: 575)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.43175724148750305
    2. '(' → logprob: -1.0567572116851807
    3. ' ' → logprob: -6.43175745010376
    4. ' (' → logprob: -6.68175745010376
    5. '   ' → logprob: -10.306756973266602
    6. 'i' → logprob: -10.306756973266602
    7. 'b' → logprob: -10.431756973266602
    8. '(i' → logprob: -10.806756973266602
    9. 'a' → logprob: -10.931756973266602
    10. '
' → logprob: -11.556756973266602

Token 1570: 'ème' (ID: 9767)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.902553915977478
    2. ',' → logprob: -1.652553915977478
    3. '*' → logprob: -2.5275540351867676
    4. 'i' → logprob: -2.6525540351867676
    5. 'for' → logprob: -2.9025540351867676
    6. ' and' → logprob: -3.2775540351867676
    7. ' for' → logprob: -3.5275540351867676
    8. ' i' → logprob: -3.5275540351867676
    9. ' ' → logprob: -4.027554035186768
    10. ' (' → logprob: -4.152554035186768

Token 1571: ' couple' (ID: 7167)
  Prédit: ' cercle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cercle' → logprob: -0.4610700309276581
    2. 'circle' → logprob: -1.9610700607299805
    3. ' circle' → logprob: -2.5860700607299805
    4. 'i' → logprob: -3.4610700607299805
    5. 'inter' → logprob: -3.4610700607299805
    6. ' and' → logprob: -3.7110700607299805
    7. ' i' → logprob: -3.7110700607299805
    8. 'c' → logprob: -4.7110700607299805
    9. 'and' → logprob: -4.8360700607299805
    10. ' intersection' → logprob: -5.9610700607299805

Token 1572: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.471099853515625
    2. '   ' → logprob: -1.596099853515625
    3. ' for' → logprob: -1.971099853515625
    4. '
' → logprob: -4.096099853515625
    5. '       ' → logprob: -4.971099853515625
    6. ':
' → logprob: -6.471099853515625
    7. ',' → logprob: -6.471099853515625
    8. ' ' → logprob: -6.846099853515625
    9. '    
' → logprob: -6.971099853515625
    10. ' (' → logprob: -7.346099853515625

Token 1573: ' les' (ID: 1341)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.13565278053283691
    2. ' ' → logprob: -3.510652780532837
    3. '   ' → logprob: -3.760652780532837
    4. '(' → logprob: -4.135652542114258
    5. 'the' → logprob: -4.135652542114258
    6. ' (' → logprob: -4.260652542114258
    7. ' the' → logprob: -4.510652542114258
    8. '
' → logprob: -5.760652542114258
    9. ' two' → logprob: -6.135652542114258
    10. '#' → logprob: -6.260652542114258

Token 1574: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003479382023215294
    2. '(' → logprob: -6.628479480743408
    3. ' ' → logprob: -6.628479480743408
    4. 'de' → logprob: -7.378479480743408
    5. '
' → logprob: -9.75347900390625
    6. ' (' → logprob: -10.37847900390625
    7. ' deux' → logprob: -10.37847900390625
    8. '   ' → logprob: -11.00347900390625
    9. '[' → logprob: -11.62847900390625
    10. ' two' → logprob: -11.75347900390625

Token 1575: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00013214473437983543
    2. '(' → logprob: -9.37513256072998
    3. 'de' → logprob: -10.75013256072998
    4. ' ' → logprob: -11.50013256072998
    5. 'next' → logprob: -12.50013256072998
    6. 'two' → logprob: -12.62513256072998
    7. '
' → logprob: -13.00013256072998
    8. ' (' → logprob: -13.75013256072998
    9. ' deux' → logprob: -14.00013256072998
    10. '1' → logprob: -14.12513256072998

Token 1576: ' points' (ID: 5571)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.19152669608592987
    2. '((' → logprob: -2.3165266513824463
    3. 'points' → logprob: -2.8165266513824463
    4. 'i' → logprob: -5.316526889801025
    5. '(' → logprob: -5.691526889801025
    6. ' points' → logprob: -5.941526889801025
    7. ' (' → logprob: -6.691526889801025
    8. '*(' → logprob: -7.066526889801025
    9. '(points' → logprob: -7.316526889801025
    10. '_points' → logprob: -7.816526889801025

Token 1577: ' du' (ID: 1462)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8954162001609802
    2. '(i' → logprob: -1.395416259765625
    3. '*(' → logprob: -1.770416259765625
    4. '((' → logprob: -2.645416259765625
    5. 'du' → logprob: -3.895416259765625
    6. '*' → logprob: -3.895416259765625
    7. 'de' → logprob: -4.645416259765625
    8. 'of' → logprob: -4.770416259765625
    9. '[(' → logprob: -5.270416259765625
    10. '*i' → logprob: -5.395416259765625

Token 1578: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.005271111149340868
    2. '(' → logprob: -5.880270957946777
    3. '((' → logprob: -6.505270957946777
    4. ' (' → logprob: -7.380270957946777
    5. 'i' → logprob: -8.130270957946777
    6. '(next' → logprob: -11.130270957946777
    7. 'next' → logprob: -12.255270957946777
    8. '(
' → logprob: -12.380270957946777
    9. '
' → logprob: -12.755270957946777
    10. ' ' → logprob: -12.880270957946777

Token 1579: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.38857969641685486
    2. 'i' → logprob: -1.1385797262191772
    3. ' (' → logprob: -6.513579845428467
    4. ' i' → logprob: -8.763579368591309
    5. '   ' → logprob: -11.013579368591309
    6. '(' → logprob: -11.388579368591309
    7. '{i' → logprob: -11.638579368591309
    8. '((' → logprob: -12.638579368591309
    9. '```' → logprob: -12.701079368591309
    10. '
' → logprob: -12.701079368591309

Token 1580: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004411591507960111
    2. '+i' → logprob: -8.750441551208496
    3. '1' → logprob: -9.000441551208496
    4. ' +' → logprob: -9.625441551208496
    5. 'i' → logprob: -9.875441551208496
    6. '()+' → logprob: -11.500441551208496
    7. '(i' → logprob: -11.875441551208496
    8. '   ' → logprob: -12.125441551208496
    9. '++' → logprob: -12.375441551208496
    10. '```' → logprob: -12.625441551208496

Token 1581: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.968312951968983e-06
    2. ' ' → logprob: -12.000009536743164
    3. '2' → logprob: -13.250009536743164
    4. '+' → logprob: -14.125009536743164
    5. '   ' → logprob: -15.000009536743164
    6. '```' → logprob: -15.000009536743164
    7. '
' → logprob: -15.125009536743164
    8. '１' → logprob: -17.562509536743164
    9. 'for' → logprob: -17.562509536743164
    10. ')' → logprob: -17.625009536743164

Token 1582: ')' (ID: 8)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.48140186071395874
    2. '+' → logprob: -1.4814019203186035
    3. ')' → logprob: -2.2314019203186035
    4. ')*' → logprob: -4.8564019203186035
    5. '*' → logprob: -4.9814019203186035
    6. '```' → logprob: -5.3564019203186035
    7. ')_' → logprob: -5.3564019203186035
    8. 'i' → logprob: -5.4814019203186035
    9. '_i' → logprob: -5.9814019203186035
    10. ')i' → logprob: -6.1064019203186035

Token 1583: 'ème' (ID: 9767)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.062409717589616776
    2. ' for' → logprob: -3.0624096393585205
    3. ':
' → logprob: -4.6874098777771
    4. '   ' → logprob: -5.6874098777771
    5. ':' → logprob: -7.4374098777771
    6. ' ' → logprob: -8.812409400939941
    7. '       ' → logprob: -10.062409400939941
    8. '):
' → logprob: -10.187409400939941
    9. '
' → logprob: -10.312409400939941
    10. 'a' → logprob: -10.437409400939941

Token 1584: ' couple' (ID: 7167)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014056321233510971
    2. ' for' → logprob: -4.389056205749512
    3. '
' → logprob: -7.639056205749512
    4. '   ' → logprob: -7.889056205749512
    5. ':
' → logprob: -8.764056205749512
    6. 'i' → logprob: -9.764056205749512
    7. '```' → logprob: -9.764056205749512
    8. ',' → logprob: -10.014056205749512
    9. 'a' → logprob: -10.014056205749512
    10. '(
' → logprob: -10.264056205749512

Token 1585: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09845398366451263
    2. 'for' → logprob: -2.723453998565674
    3. ' for' → logprob: -3.598453998565674
    4. '       ' → logprob: -8.348453521728516
    5. '
' → logprob: -8.598453521728516
    6. '	for' → logprob: -8.848453521728516
    7. '    
' → logprob: -9.348453521728516
    8. '  ' → logprob: -11.223453521728516
    9. ' ' → logprob: -11.223453521728516
    10. '  
' → logprob: -11.598453521728516

Token 1586: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16406384110450745
    2. '   ' → logprob: -2.0390639305114746
    3. '       ' → logprob: -4.289063930511475
    4. ' for' → logprob: -5.039063930511475
    5. '```' → logprob: -7.039063930511475
    6. '
' → logprob: -10.289063453674316
    7. '	for' → logprob: -10.789063453674316
    8. '           ' → logprob: -11.289063453674316
    9. '``' → logprob: -12.039063453674316
    10. ' ' → logprob: -12.914063453674316

Token 1587: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16446258127689362
    2. ' for' → logprob: -2.5394625663757324
    3. '   ' → logprob: -2.6644625663757324
    4. '```' → logprob: -6.289462566375732
    5. '	for' → logprob: -7.789462566375732
    6. '
' → logprob: -7.789462566375732
    7. '       ' → logprob: -8.53946304321289
    8. '    
' → logprob: -8.91446304321289
    9. '``' → logprob: -10.91446304321289
    10. '  
' → logprob: -11.03946304321289

Token 1588: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00012356207298580557
    2. ' i' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.750123977661133
    4. '	i' → logprob: -17.875123977661133
    5. ' ' → logprob: -18.250123977661133
    6. '```' → logprob: -18.500123977661133
    7. '0' → logprob: -18.750123977661133
    8. '_i' → logprob: -19.250123977661133
    9. '
' → logprob: -19.375123977661133
    10. '  ' → logprob: -19.875123977661133

Token 1589: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029780574142932892
    2. 'in' → logprob: -3.529780626296997
    3. '1' → logprob: -11.529780387878418
    4. ' i' → logprob: -11.904780387878418
    5. 'i' → logprob: -12.029780387878418
    6. '0' → logprob: -12.404780387878418
    7. ' ' → logprob: -13.529780387878418
    8. 'import' → logprob: -14.904780387878418
    9. '+' → logprob: -15.029780387878418
    10. '```' → logprob: -15.279780387878418

Token 1590: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007099286303855479
    2. ' range' → logprob: -7.2507100105285645
    3. '(range' → logprob: -17.000709533691406
    4. '0' → logprob: -17.750709533691406
    5. ' ' → logprob: -19.875709533691406
    6. 'n' → logprob: -19.875709533691406
    7. '	range' → logprob: -20.500709533691406
    8. 'rang' → logprob: -21.250709533691406
    9. '   ' → logprob: -21.750709533691406
    10. '
' → logprob: -22.500709533691406

Token 1591: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6102274656295776
    2. '(n' → logprob: -0.8602274656295776
    3. '0' → logprob: -3.610227584838867
    4. ' n' → logprob: -5.110227584838867
    5. '(' → logprob: -7.985227584838867
    6. ' (' → logprob: -8.735227584838867
    7. '1' → logprob: -9.610227584838867
    8. '   ' → logprob: -10.360227584838867
    9. ' ' → logprob: -11.110227584838867
    10. '(i' → logprob: -12.360227584838867

Token 1592: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0006246338016353548
    2. ' -' → logprob: -7.500624656677246
    3. '1' → logprob: -9.625624656677246
    4. '   ' → logprob: -12.375624656677246
    5. '2' → logprob: -14.375624656677246
    6. '-
' → logprob: -15.750624656677246
    7. '	' → logprob: -15.750624656677246
    8. ')' → logprob: -16.37562370300293
    9. '()-' → logprob: -16.62562370300293
    10. '
' → logprob: -17.12562370300293

Token 1593: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006067682523280382
    2. '3' → logprob: -5.131067752838135
    3. '1' → logprob: -9.131067276000977
    4. ' ' → logprob: -10.756067276000977
    5. '-' → logprob: -12.381067276000977
    6. '   ' → logprob: -12.631067276000977
    7. '```' → logprob: -14.006067276000977
    8. '  ' → logprob: -14.756067276000977
    9. ' -' → logprob: -16.006067276000977
    10. '
' → logprob: -16.381067276000977

Token 1594: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.004486138932406902
    2. '   ' → logprob: -5.629486083984375
    3. ':
' → logprob: -7.879486083984375
    4. '):' → logprob: -8.254486083984375
    5. ' ):
' → logprob: -8.879486083984375
    6. '+' → logprob: -10.504486083984375
    7. '):
' → logprob: -10.629486083984375
    8. ':' → logprob: -10.754486083984375
    9. ' :
' → logprob: -11.754486083984375
    10. '       ' → logprob: -12.004486083984375

Token 1595: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13379958271980286
    2. ' for' → logprob: -2.1337995529174805
    3. 'for' → logprob: -5.2587995529174805
    4. '	for' → logprob: -7.1337995529174805
    5. 'a' → logprob: -8.38379955291748
    6. ' a' → logprob: -8.50879955291748
    7. '   ' → logprob: -8.75879955291748
    8. '       ' → logprob: -8.88379955291748
    9. ' ' → logprob: -10.63379955291748
    10. '```' → logprob: -10.88379955291748

Token 1596: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.029229994863271713
    2. 'a' → logprob: -3.9042298793792725
    3. 'base' → logprob: -6.029230117797852
    4. '   ' → logprob: -6.029230117797852
    5. 'u' → logprob: -6.154230117797852
    6. '       ' → logprob: -7.404230117797852
    7. 'start' → logprob: -7.529230117797852
    8. 'from' → logprob: -8.529230117797852
    9. ' for' → logprob: -9.529230117797852
    10. 'p' → logprob: -10.154230117797852

Token 1597: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.02844531647861004
    2. 'a' → logprob: -3.653445243835449
    3. 'v' → logprob: -7.028445243835449
    4. ' u' → logprob: -7.153445243835449
    5. 'x' → logprob: -8.02844524383545
    6. '(u' → logprob: -10.02844524383545
    7. 'src' → logprob: -10.40344524383545
    8. 'start' → logprob: -10.65344524383545
    9. 'from' → logprob: -10.65344524383545
    10. 'p' → logprob: -11.52844524383545

Token 1598: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11414362490177155
    2. 'in' → logprob: -2.2391436100006104
    3. '=' → logprob: -7.2391438484191895
    4. ' =' → logprob: -7.9891438484191895
    5. 'a' → logprob: -9.989143371582031
    6. '_in' → logprob: -10.239143371582031
    7. ' ' → logprob: -10.364143371582031
    8. '   ' → logprob: -10.489143371582031
    9. 'u' → logprob: -10.989143371582031
    10. '_tokens' → logprob: -11.239143371582031

Token 1599: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.069664333248511e-05
    2. ' [' → logprob: -11.000020980834961
    3. '(' → logprob: -12.750020980834961
    4. '[a' → logprob: -13.875020980834961
    5. '[
' → logprob: -16.25002098083496
    6. '{' → logprob: -17.37502098083496
    7. '[(' → logprob: -18.87502098083496
    8. '2' → logprob: -18.87502098083496
    9. 'range' → logprob: -19.00002098083496
    10. ' ' → logprob: -19.12502098083496

Token 1600: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8789383830153383e-05
    2. ' ' → logprob: -11.375019073486328
    3. '   ' → logprob: -11.875019073486328
    4. '(' → logprob: -15.250019073486328
    5. '  ' → logprob: -16.625019073486328
    6. '[' → logprob: -17.875019073486328
    7. '```' → logprob: -18.125019073486328
    8. '       ' → logprob: -18.250019073486328
    9. '
' → logprob: -18.375019073486328
    10. '    ' → logprob: -18.625019073486328

Token 1601: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.001247016480192542
    2. ' *' → logprob: -7.626246929168701
    3. '*u' → logprob: -7.876246929168701
    4. 'i' → logprob: -8.50124740600586
    5. '*' → logprob: -8.87624740600586
    6. '+' → logprob: -10.87624740600586
    7. '+i' → logprob: -11.75124740600586
    8. '*(' → logprob: -11.87624740600586
    9. ' +' → logprob: -13.75124740600586
    10. ' i' → logprob: -14.12624740600586

Token 1602: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024991968646645546
    2. ' ,' → logprob: -3.899991989135742
    3. '   ' → logprob: -6.274991989135742
    4. '+' → logprob: -6.274991989135742
    5. ' ' → logprob: -7.774991989135742
    6. ' +' → logprob: -9.274991989135742
    7. ',u' → logprob: -9.899991989135742
    8. '+,' → logprob: -10.649991989135742
    9. '  ' → logprob: -11.149991989135742
    10. ',
' → logprob: -11.274991989135742

Token 1603: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002600245934445411
    2. ' ' → logprob: -8.375260353088379
    3. '   ' → logprob: -11.125260353088379
    4. '       ' → logprob: -11.375260353088379
    5. '           ' → logprob: -13.375260353088379
    6. '        ' → logprob: -14.875260353088379
    7. '     ' → logprob: -15.000260353088379
    8. '      ' → logprob: -15.250260353088379
    9. '         ' → logprob: -15.250260353088379
    10. '  ' → logprob: -15.625260353088379

Token 1604: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.856408536899835e-05
    2. ' ' → logprob: -10.500028610229492
    3. '   ' → logprob: -13.875028610229492
    4. '  ' → logprob: -17.500028610229492
    5. '     ' → logprob: -18.625028610229492
    6. '(' → logprob: -18.875028610229492
    7. '       ' → logprob: -19.250028610229492
    8. '    ' → logprob: -19.375028610229492
    9. '           ' → logprob: -19.500028610229492
    10. '２' → logprob: -20.125028610229492

Token 1605: '*i' (ID: 51147)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007708957884460688
    2. '*i' → logprob: -4.88270902633667
    3. ' i' → logprob: -10.007708549499512
    4. 'u' → logprob: -10.132708549499512
    5. '(i' → logprob: -11.882708549499512
    6. '*u' → logprob: -12.382708549499512
    7. '   ' → logprob: -13.007708549499512
    8. '	i' → logprob: -13.132708549499512
    9. '*' → logprob: -14.007708549499512
    10. '[i' → logprob: -15.007708549499512

Token 1606: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0048812502063810825
    2. ' +' → logprob: -5.379881381988525
    3. '   ' → logprob: -8.629880905151367
    4. '1' → logprob: -9.504880905151367
    5. ',' → logprob: -12.629880905151367
    6. ' ' → logprob: -13.254880905151367
    7. '  ' → logprob: -14.254880905151367
    8. '0' → logprob: -14.879880905151367
    9. '    ' → logprob: -14.879880905151367
    10. '+,' → logprob: -14.879880905151367

Token 1607: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -15.625004768371582
    4. '  ' → logprob: -19.6250057220459
    5. '```' → logprob: -20.3125057220459
    6. '       ' → logprob: -20.4375057220459
    7. '
' → logprob: -20.5625057220459
    8. '0' → logprob: -20.5625057220459
    9. '    ' → logprob: -20.6250057220459
    10. '     ' → logprob: -20.7500057220459

Token 1608: ']:
' (ID: 22152)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04530291259288788
    2. ']:
' → logprob: -3.2953028678894043
    3. '       ' → logprob: -5.670302867889404
    4. ' ,' → logprob: -6.295302867889404
    5. ']:' → logprob: -7.420302867889404
    6. '           ' → logprob: -7.920302867889404
    7. ',
' → logprob: -7.920302867889404
    8. '   ' → logprob: -8.420303344726562
    9. ']:
' → logprob: -8.920303344726562
    10. ']:

' → logprob: -10.545303344726562

Token 1609: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15648768842220306
    2. ' for' → logprob: -2.4064877033233643
    3. 'for' → logprob: -2.9064877033233643
    4. '   ' → logprob: -10.531487464904785
    5. '          ' → logprob: -11.781487464904785
    6. '         ' → logprob: -12.281487464904785
    7. '	for' → logprob: -12.656487464904785
    8. ' ' → logprob: -12.906487464904785
    9. '               ' → logprob: -13.156487464904785
    10. '       ' → logprob: -13.406487464904785

Token 1610: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0016342396847903728
    2. ' for' → logprob: -6.501634120941162
    3. '               ' → logprob: -9.12663459777832
    4. '   ' → logprob: -11.75163459777832
    5. '           ' → logprob: -11.75163459777832
    6. '                   ' → logprob: -12.37663459777832
    7. '	for' → logprob: -12.87663459777832
    8. '                ' → logprob: -15.87663459777832
    9. '             ' → logprob: -16.00163459777832
    10. '                       ' → logprob: -16.00163459777832

Token 1611: ' v' (ID: 323)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005874990485608578
    2. '(' → logprob: -6.130875110626221
    3. 'v' → logprob: -6.130875110626221
    4. '[' → logprob: -7.005875110626221
    5. ' ' → logprob: -7.880875110626221
    6. '   ' → logprob: -8.630874633789062
    7. '[v' → logprob: -11.880874633789062
    8. '               ' → logprob: -12.005874633789062
    9. '(v' → logprob: -12.255874633789062
    10. '  ' → logprob: -12.505874633789062

Token 1612: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004838314838707447
    2. 'in' → logprob: -5.379838466644287
    3. '[' → logprob: -8.754837989807129
    4. ' [' → logprob: -10.504837989807129
    5. ' ' → logprob: -11.504837989807129
    6. '   ' → logprob: -11.504837989807129
    7. ']' → logprob: -12.879837989807129
    8. '    ' → logprob: -13.504837989807129
    9. '```' → logprob: -13.504837989807129
    10. '2' → logprob: -13.754837989807129

Token 1613: ' [' (ID: 723)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.38733136653900146
    2. '[' → logprob: -1.1373313665390015
    3. ' ' → logprob: -8.512331008911133
    4. ' [' → logprob: -8.637331008911133
    5. '   ' → logprob: -10.012331008911133
    6. '(' → logprob: -10.512331008911133
    7. 'range' → logprob: -12.262331008911133
    8. '  ' → logprob: -13.512331008911133
    9. '{' → logprob: -14.137331008911133
    10. '       ' → logprob: -14.387331008911133

Token 1614: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.375006675720215
    3. '   ' → logprob: -13.125006675720215
    4. '(' → logprob: -15.125006675720215
    5. '  ' → logprob: -16.0000057220459
    6. '       ' → logprob: -18.2500057220459
    7. '           ' → logprob: -18.6250057220459
    8. '     ' → logprob: -18.7500057220459
    9. '    ' → logprob: -19.0000057220459
    10. '               ' → logprob: -19.6250057220459

Token 1615: '*(' (ID: 14793)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.023888899013400078
    2. '*(' → logprob: -3.8988888263702393
    3. '(' → logprob: -5.773889064788818
    4. '((' → logprob: -9.02388858795166
    5. ' (' → logprob: -9.64888858795166
    6. '(u' → logprob: -11.27388858795166
    7. '(j' → logprob: -11.77388858795166
    8. '*' → logprob: -11.89888858795166
    9. '*i' → logprob: -11.89888858795166
    10. 'i' → logprob: -12.52388858795166

Token 1616: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2519378066062927
    2. '(i' → logprob: -1.5019378662109375
    3. ' (' → logprob: -12.501937866210938
    4. ' i' → logprob: -12.626937866210938
    5. '{i' → logprob: -13.501937866210938
    6. '(' → logprob: -16.001937866210938
    7. '_i' → logprob: -16.751937866210938
    8. '[i' → logprob: -17.001937866210938
    9. '   ' → logprob: -17.376937866210938
    10. '	i' → logprob: -17.751937866210938

Token 1617: '+' (ID: 10)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.26088064908981323
    2. '+' → logprob: -1.510880708694458
    3. '(i' → logprob: -5.510880470275879
    4. 'i' → logprob: -5.635880470275879
    5. '(' → logprob: -7.010880470275879
    6. '   ' → logprob: -8.385880470275879
    7. '2' → logprob: -9.885880470275879
    8. '(u' → logprob: -10.510880470275879
    9. ' +' → logprob: -10.885880470275879
    10. ' ' → logprob: -11.135880470275879

Token 1618: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '   ' → logprob: -14.875000953674316
    3. ' ' → logprob: -15.125000953674316
    4. '2' → logprob: -17.5
    5. '+' → logprob: -17.625
    6. '  ' → logprob: -18.875
    7. '     ' → logprob: -19.375
    8. '    ' → logprob: -19.875
    9. '```' → logprob: -20.0
    10. '{' → logprob: -20.5

Token 1619: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.532789945602417
    2. ',' → logprob: -0.907789945602417
    3. ',v' → logprob: -5.407790184020996
    4. '+' → logprob: -5.782790184020996
    5. '],' → logprob: -7.532790184020996
    6. 'v' → logprob: -7.657790184020996
    7. '           ' → logprob: -8.157790184020996
    8. ')+' → logprob: -8.157790184020996
    9. ')' → logprob: -8.657790184020996
    10. ' ,' → logprob: -9.532790184020996

Token 1620: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.876193169271573e-05
    2. ' ' → logprob: -9.375088691711426
    3. '   ' → logprob: -12.750088691711426
    4. '  ' → logprob: -15.125088691711426
    5. '       ' → logprob: -16.000089645385742
    6. '           ' → logprob: -16.125089645385742
    7. '    ' → logprob: -16.250089645385742
    8. '     ' → logprob: -16.875089645385742
    9. '               ' → logprob: -16.875089645385742
    10. '                   ' → logprob: -17.250089645385742

Token 1621: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.6250057220459
    4. '  ' → logprob: -19.8750057220459
    5. '(' → logprob: -19.8750057220459
    6. '
' → logprob: -20.1250057220459
    7. '２' → logprob: -20.8750057220459
    8. '           ' → logprob: -21.7500057220459
    9. '       ' → logprob: -22.0000057220459
    10. '    ' → logprob: -22.0000057220459

Token 1622: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.002308100229129195
    2. '(i' → logprob: -6.127307891845703
    3. '(' → logprob: -10.252307891845703
    4. '(v' → logprob: -10.252307891845703
    5. '*i' → logprob: -10.877307891845703
    6. '*v' → logprob: -11.127307891845703
    7. 'v' → logprob: -11.627307891845703
    8. 'i' → logprob: -12.377307891845703
    9. '*' → logprob: -12.377307891845703
    10. '(u' → logprob: -14.127307891845703

Token 1623: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28175660967826843
    2. '(i' → logprob: -1.4067566394805908
    3. '(' → logprob: -7.531756401062012
    4. '1' → logprob: -10.156756401062012
    5. ' i' → logprob: -10.906756401062012
    6. ' (' → logprob: -11.906756401062012
    7. '{i' → logprob: -12.906756401062012
    8. '2' → logprob: -13.906756401062012
    9. '((' → logprob: -14.531756401062012
    10. '   ' → logprob: -14.531756401062012

Token 1624: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002545101335272193
    2. '1' → logprob: -6.00254487991333
    3. '(' → logprob: -10.377545356750488
    4. ' +' → logprob: -10.627545356750488
    5. '           ' → logprob: -11.627545356750488
    6. '   ' → logprob: -13.377545356750488
    7. ')+' → logprob: -14.002545356750488
    8. ' ' → logprob: -14.252545356750488
    9. '()+' → logprob: -15.002545356750488
    10. '(v' → logprob: -15.002545356750488

Token 1625: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '+' → logprob: -15.375
    3. '
' → logprob: -16.75
    4. ' ' → logprob: -17.5
    5. '   ' → logprob: -18.5
    6. '(' → logprob: -18.5
    7. '2' → logprob: -19.0
    8. '11' → logprob: -19.125
    9. '```' → logprob: -19.375
    10. '

' → logprob: -20.0625

Token 1626: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.378541499376297
    2. '+' → logprob: -1.2535414695739746
    3. '),' → logprob: -3.6285414695739746
    4. ']+' → logprob: -6.253541469573975
    5. ')' → logprob: -7.003541469573975
    6. ' +' → logprob: -9.628541946411133
    7. ')],' → logprob: -9.628541946411133
    8. ')]' → logprob: -10.628541946411133
    9. ')][' → logprob: -10.753541946411133
    10. '],' → logprob: -10.878541946411133

Token 1627: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. '0' → logprob: -13.500001907348633
    3. ' ' → logprob: -17.750001907348633
    4. '   ' → logprob: -20.625001907348633
    5. '-' → logprob: -22.750001907348633
    6. '```' → logprob: -23.125001907348633
    7. '  ' → logprob: -23.500001907348633
    8. '3' → logprob: -23.625001907348633
    9. '１' → logprob: -24.125001907348633
    10. '{' → logprob: -24.250001907348633

Token 1628: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.0027234444860368967
    2. ']:' → logprob: -6.002723217010498
    3. ']:
' → logprob: -9.502723693847656
    4. '):
' → logprob: -9.627723693847656
    5. '               ' → logprob: -10.002723693847656
    6. ']' → logprob: -10.502723693847656
    7. '           ' → logprob: -11.252723693847656
    8. ']:

' → logprob: -11.877723693847656
    9. ' ]' → logprob: -12.377723693847656
    10. '"]:
' → logprob: -13.127723693847656

Token 1629: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006185544189065695
    2. 'if' → logprob: -8.250618934631348
    3. '                       ' → logprob: -8.750618934631348
    4. '                   ' → logprob: -9.000618934631348
    5. ' if' → logprob: -9.625618934631348
    6. '           ' → logprob: -13.125618934631348
    7. '                           ' → logprob: -13.500618934631348
    8. '   ' → logprob: -13.625618934631348
    9. '              ' → logprob: -13.625618934631348
    10. '                ' → logprob: -14.000618934631348

Token 1630: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08656499534845352
    2. '                   ' → logprob: -2.8365650177001953
    3. ' if' → logprob: -3.8365650177001953
    4. '               ' → logprob: -5.961565017700195
    5. '   ' → logprob: -8.961565017700195
    6. '                       ' → logprob: -11.211565017700195
    7. '           ' → logprob: -12.586565017700195
    8. '	if' → logprob: -13.086565017700195
    9. '                           ' → logprob: -13.586565017700195
    10. '
' → logprob: -13.836565017700195

Token 1631: ' Le' (ID: 2018)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.000500370399095118
    2. ' if' → logprob: -7.875500202178955
    3. '                   ' → logprob: -9.500500679016113
    4. '               ' → logprob: -10.125500679016113
    5. '   ' → logprob: -12.875500679016113
    6. 'segment' → logprob: -13.125500679016113
    7. '
' → logprob: -15.500500679016113
    8. '                       ' → logprob: -15.625500679016113
    9. '```' → logprob: -16.000499725341797
    10. 'If' → logprob: -16.500499725341797

Token 1632: ' segment' (ID: 14806)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.044490985572338104
    2. ' if' → logprob: -3.5444910526275635
    3. 'segment' → logprob: -4.294490814208984
    4. ' segment' → logprob: -7.044490814208984
    5. '               ' → logprob: -9.794490814208984
    6. '                   ' → logprob: -11.419490814208984
    7. '   ' → logprob: -12.419490814208984
    8. 'seg' → logprob: -12.544490814208984
    9. '```' → logprob: -12.794490814208984
    10. '#' → logprob: -12.794490814208984

Token 1633: ' u' (ID: 337)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.40554553270339966
    2. '_in' → logprob: -1.1555454730987549
    3. ' if' → logprob: -4.155545711517334
    4. 'in' → logprob: -6.905545711517334
    5. 'segment' → logprob: -8.030545234680176
    6. '_between' → logprob: -8.030545234680176
    7. '_if' → logprob: -8.780545234680176
    8. 's' → logprob: -9.030545234680176
    9. 'between' → logprob: -9.155545234680176
    10. ':' → logprob: -9.280545234680176

Token 1634: '-v' (ID: 9827)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2434430867433548
    2. ',v' → logprob: -1.6184431314468384
    3. ' ,' → logprob: -4.493443012237549
    4. '               ' → logprob: -6.618443012237549
    5. '],' → logprob: -7.368443012237549
    6. 'v' → logprob: -7.368443012237549
    7. ')' → logprob: -7.493443012237549
    8. '),' → logprob: -7.618443012237549
    9. '                   ' → logprob: -7.868443012237549
    10. 's' → logprob: -7.993443012237549

Token 1635: ' doit' (ID: 21822)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.48955321311950684
    2. ' if' → logprob: -1.7395532131195068
    3. 'if' → logprob: -1.8645532131195068
    4. ' =' → logprob: -3.989553213119507
    5. '                   ' → logprob: -4.239553451538086
    6. '=' → logprob: -5.114553451538086
    7. '):
' → logprob: -5.239553451538086
    8. ':
' → logprob: -5.489553451538086
    9. ')' → logprob: -5.739553451538086
    10. ':' → logprob: -6.239553451538086

Token 1636: ' être' (ID: 9104)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6273276209831238
    2. 'segment' → logprob: -1.6273276805877686
    3. ' be' → logprob: -2.3773276805877686
    4. 'in' → logprob: -2.6273276805877686
    5. ' segment' → logprob: -3.2523276805877686
    6. ' être' → logprob: -3.8773276805877686
    7. '(segment' → logprob: -4.1273274421691895
    8. ')' → logprob: -4.7523274421691895
    9. 'être' → logprob: -5.5023274421691895
    10. '                   ' → logprob: -6.1273274421691895

Token 1637: ' contenu' (ID: 57581)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.04776943847537041
    2. 'in' → logprob: -3.922769546508789
    3. 'contained' → logprob: -4.422769546508789
    4. ' segment' → logprob: -4.547769546508789
    5. 'True' → logprob: -6.547769546508789
    6. 'conten' → logprob: -7.172769546508789
    7. ' in' → logprob: -7.172769546508789
    8. 'dans' → logprob: -7.797769546508789
    9. ' True' → logprob: -8.047769546508789
    10. '(segment' → logprob: -9.297769546508789

Token 1638: ' dans' (ID: 2671)
  Prédit: '(vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vertices' → logprob: -0.5493656992912292
    2. 'dans' → logprob: -1.424365758895874
    3. 'in' → logprob: -2.424365758895874
    4. ' in' → logprob: -3.049365758895874
    5. ' dans' → logprob: -3.299365758895874
    6. 'vertices' → logprob: -6.174365520477295
    7. '               ' → logprob: -6.549365520477295
    8. 'Dans' → logprob: -6.674365520477295
    9. '                   ' → logprob: -6.799365520477295
    10. ' vertices' → logprob: -7.299365520477295

Token 1639: ' la' (ID: 557)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8816646933555603
    2. 'vertices' → logprob: -1.381664752960205
    3. 'cir' → logprob: -2.006664752960205
    4. ' the' → logprob: -2.131664752960205
    5. ' vertices' → logprob: -3.381664752960205
    6. ' circles' → logprob: -4.256664752960205
    7. 'segments' → logprob: -4.756664752960205
    8. 'chains' → logprob: -4.881664752960205
    9. 'chain' → logprob: -5.131664752960205
    10. ' chain' → logprob: -5.756664752960205

Token 1640: ' chaîne' (ID: 89288)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.0667201429605484
    2. 'chaine' → logprob: -2.8167202472686768
    3. ' chain' → logprob: -5.816720008850098
    4. 'chains' → logprob: -6.691720008850098
    5. ' chaîne' → logprob: -8.441720008850098
    6. '_chain' → logprob: -9.566720008850098
    7. 'cha' → logprob: -9.691720008850098
    8. 'ch' → logprob: -10.191720008850098
    9. ' chaine' → logprob: -10.191720008850098
    10. '```' → logprob: -10.316720008850098

Token 1641: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.432518421206623e-05
    2. '                   ' → logprob: -10.6250638961792
    3. '   ' → logprob: -11.7500638961792
    4. ' if' → logprob: -11.7500638961792
    5. ':
' → logprob: -12.0000638961792
    6. '<|end|>' → logprob: -12.5000638961792
    7. 'if' → logprob: -12.6250638961792
    8. ':' → logprob: -13.0000638961792
    9. ',' → logprob: -13.1250638961792
    10. '           ' → logprob: -13.5000638961792

Token 1642: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.742448022123426e-05
    2. '                   ' → logprob: -9.625067710876465
    3. ' if' → logprob: -15.000067710876465
    4. 'if' → logprob: -15.625067710876465
    5. '                ' → logprob: -15.875067710876465
    6. ':' → logprob: -15.875067710876465
    7. '              ' → logprob: -16.12506675720215
    8. ',' → logprob: -16.25006675720215
    9. '```' → logprob: -16.25006675720215
    10. '                       ' → logprob: -16.75006675720215

Token 1643: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04232169687747955
    2. '                   ' → logprob: -3.7923216819763184
    3. 'if' (adapté à ' if') → logprob: -4.042321681976318
    4. ' if' → logprob: -6.667321681976318
    5. '           ' → logprob: -10.542322158813477
    6. '   ' → logprob: -10.667322158813477
    7. '                ' → logprob: -11.917322158813477
    8. '       ' → logprob: -12.417322158813477
    9. '                       ' → logprob: -13.042322158813477
    10. '                 ' → logprob: -13.417322158813477

Token 1644: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.6931581497192383
    2. 'segment' → logprob: -0.6931581497192383
    3. '(segment' → logprob: -11.443158149719238
    4. '.segment' → logprob: -15.068158149719238
    5. ' segmento' → logprob: -17.568157196044922
    6. '               ' → logprob: -18.193157196044922
    7. 'seg' → logprob: -18.193157196044922
    8. '_segment' → logprob: -18.443157196044922
    9. '   ' → logprob: -18.568157196044922
    10. 'egment' → logprob: -19.193157196044922

Token 1645: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: 0.0
    2. 'in' → logprob: -17.25
    3. 'In' → logprob: -18.25
    4. '_IN' → logprob: -19.0
    5. '_' → logprob: -19.125
    6. '   ' → logprob: -19.375
    7. ' _' → logprob: -19.5
    8. ' in' → logprob: -19.75
    9. '_en' → logprob: -20.375
    10. 'segment' → logprob: -20.5

Token 1646: '_chain' (ID: 74449)
  Prédit: '_chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chain' → logprob: -0.0021907102782279253
    2. 'chain' → logprob: -6.127190589904785
    3. '_ch' → logprob: -13.377190589904785
    4. 'u' → logprob: -13.377190589904785
    5. ' chain' → logprob: -14.377190589904785
    6. '_CHAIN' → logprob: -14.502190589904785
    7. 'Chain' → logprob: -14.752190589904785
    8. '_in' → logprob: -14.877190589904785
    9. 'in' → logprob: -15.502190589904785
    10. '[u' → logprob: -16.1271915435791

Token 1647: '(vertices' (ID: 158708)
  Prédit: '(vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vertices' → logprob: -1.3663626305060461e-05
    2. 'vertices' → logprob: -11.75001335144043
    3. ' (' → logprob: -12.50001335144043
    4. ' vertices' → logprob: -14.00001335144043
    5. '(' → logprob: -14.00001335144043
    6. '(vertex' → logprob: -15.87501335144043
    7. '(points' → logprob: -16.62501335144043
    8. '(indices' → logprob: -17.75001335144043
    9. '(v' → logprob: -17.87501335144043
    10. '.vertices' → logprob: -18.12501335144043

Token 1648: '[u' (ID: 48750)
  Prédit: '(vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vertices' → logprob: -0.20510554313659668
    2. '[u' → logprob: -2.4551055431365967
    3. '[' → logprob: -2.8301055431365967
    4. 'vertices' → logprob: -3.5801055431365967
    5. '(u' → logprob: -4.580105781555176
    6. ' vertices' → logprob: -6.955105781555176
    7. 'u' → logprob: -6.955105781555176
    8. ' (' → logprob: -8.580105781555176
    9. '[v' → logprob: -8.705105781555176
    10. ' u' → logprob: -10.080105781555176

Token 1649: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006648990092799067
    2. ',v' → logprob: -7.625664710998535
    3. ' ,' → logprob: -8.875664710998535
    4. ',u' → logprob: -10.375664710998535
    5. '),' → logprob: -13.500664710998535
    6. ',
' → logprob: -13.750664710998535
    7. '],' → logprob: -14.500664710998535
    8. '   ' → logprob: -14.625664710998535
    9. '(vertices' → logprob: -14.875664710998535
    10. 'u' → logprob: -15.000664710998535

Token 1650: ' vertices' (ID: 38360)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.011077186092734337
    2. ' vertices' → logprob: -4.511077404022217
    3. '                   ' → logprob: -11.011076927185059
    4. '(vertices' → logprob: -12.261076927185059
    5. '               ' → logprob: -12.386076927185059
    6. '   ' → logprob: -13.761076927185059
    7. '.vertices' → logprob: -14.761076927185059
    8. 'vertex' → logprob: -14.886076927185059
    9. 'v' → logprob: -15.136076927185059
    10. '           ' → logprob: -15.136076927185059

Token 1651: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.18026010692119598
    2. 'v' → logprob: -1.8052600622177124
    3. '[u' → logprob: -8.180259704589844
    4. 'vertices' → logprob: -9.930259704589844
    5. ' v' → logprob: -10.430259704589844
    6. '(v' → logprob: -10.430259704589844
    7. '[' → logprob: -10.430259704589844
    8. '   ' → logprob: -10.555259704589844
    9. '
' → logprob: -11.180259704589844
    10. ')v' → logprob: -11.305259704589844

Token 1652: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018687831470742822
    2. ' ,' → logprob: -7.001868724822998
    3. '],' → logprob: -7.001868724822998
    4. '                   ' → logprob: -11.126869201660156
    5. '               ' → logprob: -11.376869201660156
    6. '),' → logprob: -12.501869201660156
    7. ',c' → logprob: -12.626869201660156
    8. '`,' → logprob: -12.626869201660156
    9. '[],' → logprob: -13.251869201660156
    10. '   ' → logprob: -14.001869201660156

Token 1653: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.02075033262372017
    2. ' circles' → logprob: -3.8957502841949463
    3. 'vertices' → logprob: -9.395750045776367
    4. '               ' → logprob: -10.270750045776367
    5. '                   ' → logprob: -10.520750045776367
    6. 'circle' → logprob: -10.645750045776367
    7. 'c' → logprob: -11.020750045776367
    8. 'circ' → logprob: -11.895750045776367
    9. '                       ' → logprob: -12.895750045776367
    10. '   ' → logprob: -12.895750045776367

Token 1654: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09182000905275345
    2. '):' → logprob: -2.466820001602173
    3. '                   ' → logprob: -6.341820240020752
    4. '               ' → logprob: -6.841820240020752
    5. '):
' → logprob: -11.466819763183594
    6. ')' → logprob: -11.716819763183594
    7. ':' → logprob: -11.966819763183594
    8. '):

' → logprob: -12.091819763183594
    9. '                       ' → logprob: -12.466819763183594
    10. ':
' → logprob: -12.591819763183594

Token 1655: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0002922022540587932
    2. '               ' → logprob: -8.87529182434082
    3. '                       ' → logprob: -9.37529182434082
    4. ':
' → logprob: -10.87529182434082
    5. '   ' → logprob: -11.25029182434082
    6. '                           ' → logprob: -12.25029182434082
    7. ':' → logprob: -12.25029182434082
    8. '           ' → logprob: -12.37529182434082
    9. '                    ' → logprob: -12.62529182434082
    10. '                  ' → logprob: -12.62529182434082

Token 1656: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.2174200862646103
    2. ' d' → logprob: -2.4674201011657715
    3. '                   ' → logprob: -3.0924201011657715
    4. 'graph' → logprob: -3.4674201011657715
    5. '                       ' → logprob: -3.5924201011657715
    6. '   ' → logprob: -6.0924201011657715
    7. 'distance' → logprob: -6.5924201011657715
    8. '       ' → logprob: -6.7174201011657715
    9. ' graph' → logprob: -6.7174201011657715
    10. '               ' → logprob: -8.717419624328613

Token 1657: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28209319710731506
    2. '=' → logprob: -1.4070931673049927
    3. ')' → logprob: -7.282093048095703
    4. ',' → logprob: -9.782093048095703
    5. '<|end|>' → logprob: -9.782093048095703
    6. '.' → logprob: -10.157093048095703
    7. ' ' → logprob: -10.782093048095703
    8. 's' → logprob: -11.032093048095703
    9. '                   ' → logprob: -11.907093048095703
    10. '   ' → logprob: -12.157093048095703

Token 1658: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.47407716512680054
    2. ' dist' → logprob: -0.9740771651268005
    3. '	dist' → logprob: -16.099077224731445
    4. '(dist' → logprob: -16.724077224731445
    5. '                   ' → logprob: -17.849077224731445
    6. '_dist' → logprob: -19.099077224731445
    7. 'Dist' → logprob: -19.099077224731445
    8. '.dist' → logprob: -19.349077224731445
    9. '                       ' → logprob: -21.099077224731445
    10. '-dist' → logprob: -21.224077224731445

Token 1659: '(vertices' (ID: 158708)
  Prédit: '(vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vertices' → logprob: -1.1398757123970427e-05
    2. 'vertices' → logprob: -11.500011444091797
    3. ' (' → logprob: -14.125011444091797
    4. '(' → logprob: -15.000011444091797
    5. ' vertices' → logprob: -15.750011444091797
    6. '(vertex' → logprob: -18.500011444091797
    7. '(
' → logprob: -18.750011444091797
    8. '(v' → logprob: -20.000011444091797
    9. '.vertices' → logprob: -20.000011444091797
    10. '(points' → logprob: -20.500011444091797

Token 1660: '[u' (ID: 48750)
  Prédit: '(vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vertices' → logprob: -0.0013058334589004517
    2. '[' → logprob: -7.251306056976318
    3. 'vertices' → logprob: -7.501306056976318
    4. '[u' → logprob: -10.50130558013916
    5. ' vertices' → logprob: -12.12630558013916
    6. '(u' → logprob: -12.75130558013916
    7. ')' → logprob: -13.75130558013916
    8. '(' → logprob: -13.75130558013916
    9. ' (' → logprob: -13.87630558013916
    10. '[v' → logprob: -14.00130558013916

Token 1661: '],' (ID: 2155)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.023380925878882408
    2. ',' → logprob: -4.398380756378174
    3. '],' → logprob: -5.148380756378174
    4. '[v' → logprob: -5.523380756378174
    5. '),' → logprob: -7.773380756378174
    6. ',u' → logprob: -7.898380756378174
    7. '[' → logprob: -9.023381233215332
    8. '],[' → logprob: -11.023381233215332
    9. ']' → logprob: -11.023381233215332
    10. ',v' → logprob: -11.023381233215332

Token 1662: ' vertices' (ID: 38360)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.0017702584154903889
    2. ' vertices' → logprob: -6.376770496368408
    3. '(vertices' → logprob: -9.62677001953125
    4. 'v' → logprob: -14.37677001953125
    5. '   ' → logprob: -15.12677001953125
    6. 'u' → logprob: -15.25177001953125
    7. '[u' → logprob: -15.50177001953125
    8. '.vertices' → logprob: -15.50177001953125
    9. '[v' → logprob: -16.25177001953125
    10. '[' → logprob: -16.37677001953125

Token 1663: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0001637300301808864
    2. 'v' → logprob: -9.000164031982422
    3. '[u' → logprob: -10.125164031982422
    4. '
' → logprob: -16.875164031982422
    5. '[' → logprob: -17.000164031982422
    6. '[
' → logprob: -17.000164031982422
    7. ' v' → logprob: -17.250164031982422
    8. '(v' → logprob: -17.875164031982422
    9. '	v' → logprob: -18.250164031982422
    10. '```' → logprob: -18.625164031982422

Token 1664: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.043403226882219315
    2. '])
' → logprob: -3.418403148651123
    3. ')' → logprob: -4.793403148651123
    4. ')
' → logprob: -6.918403148651123
    5. '),' → logprob: -8.293403625488281
    6. '],' → logprob: -9.418403625488281
    7. '                   ' → logprob: -10.293403625488281
    8. ',' → logprob: -10.668403625488281
    9. '               ' → logprob: -12.168403625488281
    10. ')]' → logprob: -12.168403625488281

Token 1665: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001651613973081112
    2. '                       ' → logprob: -6.876651763916016
    3. 'graph' → logprob: -7.751651763916016
    4. '				' → logprob: -9.626651763916016
    5. '               ' → logprob: -9.876651763916016
    6. '                           ' → logprob: -10.751651763916016
    7. ' graph' → logprob: -10.751651763916016
    8. '           ' → logprob: -12.126651763916016
    9. '   ' → logprob: -12.251651763916016
    10. '```' → logprob: -12.376651763916016

Token 1666: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.10033801198005676
    2. '                   ' → logprob: -2.3503379821777344
    3. ' graph' → logprob: -9.100337982177734
    4. '   ' → logprob: -11.475337982177734
    5. '               ' → logprob: -12.475337982177734
    6. '                       ' → logprob: -13.225337982177734
    7. '           ' → logprob: -13.475337982177734
    8. '	graph' → logprob: -13.725337982177734
    9. '       ' → logprob: -13.850337982177734
    10. '                    ' → logprob: -16.475337982177734

Token 1667: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.625
    3. '```' → logprob: -18.125
    4. '               ' → logprob: -19.0
    5. ' [' → logprob: -19.25
    6. 'u' → logprob: -19.25
    7. '   ' → logprob: -19.25
    8. '[v' → logprob: -19.75
    9. '           ' → logprob: -20.125
    10. '                   ' → logprob: -20.375

Token 1668: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.013801219873130322
    2. ').' → logprob: -4.388801097869873
    3. '[u' → logprob: -7.138801097869873
    4. '           ' → logprob: -7.888801097869873
    5. '                   ' → logprob: -10.263801574707031
    6. '               ' → logprob: -10.513801574707031
    7. '.append' → logprob: -11.013801574707031
    8. '[' → logprob: -11.263801574707031
    9. '][' → logprob: -12.013801574707031
    10. '       ' → logprob: -12.138801574707031

Token 1669: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. '.append' → logprob: -16.0
    3. ' append' → logprob: -16.0
    4. 'app' → logprob: -18.375
    5. '_append' → logprob: -19.625
    6. 'appen' → logprob: -20.625
    7. '	append' → logprob: -20.875
    8. 'Append' → logprob: -21.625
    9. '[u' → logprob: -21.625
    10. 'add' → logprob: -24.375

Token 1670: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.47501152753829956
    2. '(v' → logprob: -0.9750115275382996
    3. '(' → logprob: -7.100011348724365
    4. ' (' → logprob: -9.350011825561523
    5. '(
' → logprob: -10.850011825561523
    6. ' ((' → logprob: -14.100011825561523
    7. '   ' → logprob: -14.100011825561523
    8. '(u' → logprob: -14.975011825561523
    9. ' ' → logprob: -15.475011825561523
    10. ',' → logprob: -15.850011825561523

Token 1671: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: 0.0
    2. ' v' → logprob: -18.875
    3. '                   ' → logprob: -20.375
    4. '	v' → logprob: -20.375
    5. ')v' → logprob: -21.5
    6. '   ' → logprob: -24.625
    7. ',v' → logprob: -25.375
    8. '                           ' → logprob: -25.5
    9. '               ' → logprob: -25.75
    10. '                               ' → logprob: -25.875

Token 1672: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.1928003813372925e-05
    2. ',d' → logprob: -10.125051498413086
    3. '                   ' → logprob: -11.875051498413086
    4. ',
' → logprob: -13.375051498413086
    5. '),' → logprob: -14.125051498413086
    6. '',' → logprob: -14.250051498413086
    7. ' ,' → logprob: -14.250051498413086
    8. ',v' → logprob: -15.375051498413086
    9. '```' → logprob: -15.375051498413086
    10. 'd' → logprob: -15.875051498413086

Token 1673: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5764245390892029
    2. '))
' → logprob: -0.8264245390892029
    3. '                   ' → logprob: -7.826424598693848
    4. ')' → logprob: -9.576424598693848
    5. '))
' → logprob: -11.826424598693848
    6. ')
' → logprob: -12.951424598693848
    7. '               ' → logprob: -13.201424598693848
    8. ' ))
' → logprob: -13.826424598693848
    9. '           ' → logprob: -14.201424598693848
    10. ' ))' → logprob: -14.451424598693848

Token 1674: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004898211918771267
    2. 'graph' → logprob: -5.3798980712890625
    3. '                       ' → logprob: -9.504898071289062
    4. '               ' → logprob: -9.629898071289062
    5. ' graph' → logprob: -9.754898071289062
    6. '```' → logprob: -10.504898071289062
    7. '   ' → logprob: -10.879898071289062
    8. '                           ' → logprob: -11.754898071289062
    9. '                    ' → logprob: -12.129898071289062
    10. '(graph' → logprob: -12.254898071289062

Token 1675: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -4.727905979962088e-05
    2. ' graph' → logprob: -10.00004768371582
    3. '                   ' → logprob: -13.25004768371582
    4. '	graph' → logprob: -16.75004768371582
    5. '(graph' → logprob: -18.87504768371582
    6. '   ' → logprob: -19.37504768371582
    7. 'Graph' → logprob: -20.87504768371582
    8. '                       ' → logprob: -21.25004768371582
    9. '               ' → logprob: -21.25004768371582
    10. 'graphql' → logprob: -21.37504768371582

Token 1676: '[v' (ID: 36561)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.12694522738456726
    2. '[v' → logprob: -2.1269452571868896
    3. 'v' → logprob: -11.376945495605469
    4. '[' → logprob: -12.501945495605469
    5. 'u' → logprob: -13.376945495605469
    6. '```' → logprob: -15.251945495605469
    7. '   ' → logprob: -17.00194549560547
    8. '[user' → logprob: -17.37694549560547
    9. '[
' → logprob: -18.00194549560547
    10. '[a' → logprob: -18.25194549560547

Token 1677: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.6697236895561218
    2. ',' → logprob: -0.9197236895561218
    3. ').' → logprob: -3.5447237491607666
    4. ',d' → logprob: -3.6697237491607666
    5. '].' → logprob: -4.1697235107421875
    6. ',u' → logprob: -4.6697235107421875
    7. ',v' → logprob: -4.9197235107421875
    8. ',(' → logprob: -7.4197235107421875
    9. ',j' → logprob: -7.6697235107421875
    10. '[' → logprob: -7.7947235107421875

Token 1678: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. '.append' → logprob: -15.75
    3. ' append' → logprob: -16.5
    4. 'app' → logprob: -18.0
    5. 'appen' → logprob: -19.875
    6. '_append' → logprob: -21.0
    7. '	append' → logprob: -21.5
    8. 'Append' → logprob: -22.75
    9. 'add' → logprob: -23.5
    10. 'insert' → logprob: -24.625

Token 1679: '((' (ID: 2054)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0007164848502725363
    2. '((' → logprob: -7.500716686248779
    3. '(v' → logprob: -9.125716209411621
    4. '(' → logprob: -10.000716209411621
    5. '(
' → logprob: -11.625716209411621
    6. ' (' → logprob: -15.875716209411621
    7. '               ' → logprob: -16.250717163085938
    8. '                   ' → logprob: -16.875717163085938
    9. '(U' → logprob: -16.875717163085938
    10. '   ' → logprob: -17.500717163085938

Token 1680: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -17.0
    3. ' u' → logprob: -17.125
    4. '	u' → logprob: -17.875
    5. '[u' → logprob: -20.5
    6. '(u' → logprob: -20.75
    7. ''u' → logprob: -21.125
    8. '                   ' → logprob: -21.375
    9. ',u' → logprob: -21.375
    10. '```' → logprob: -21.375

Token 1681: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.02326679229736328
    2. ',' → logprob: -3.7732667922973633
    3. ',v' → logprob: -11.148266792297363
    4. ',(' → logprob: -12.273266792297363
    5. ' ,' → logprob: -13.273266792297363
    6. ',
' → logprob: -14.898266792297363
    7. '(d' → logprob: -15.898266792297363
    8. ',n' → logprob: -18.398265838623047
    9. ',[' → logprob: -18.523265838623047
    10. 'd' → logprob: -18.898265838623047

Token 1682: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00010998018842656165
    2. '))
' → logprob: -9.375109672546387
    3. ')' → logprob: -11.500109672546387
    4. ' ))' → logprob: -12.125109672546387
    5. '                   ' → logprob: -12.500109672546387
    6. ',d' → logprob: -13.375109672546387
    7. ')))' → logprob: -13.625109672546387
    8. '));' → logprob: -14.000109672546387
    9. ',' → logprob: -14.000109672546387
    10. '),' → logprob: -15.000109672546387

Token 1683: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.27688440680503845
    2. '   ' → logprob: -1.5268844366073608
    3. '```' → logprob: -4.02688455581665
    4. 'import' → logprob: -6.02688455581665
    5. 'def' → logprob: -6.15188455581665
    6. '
' → logprob: -6.27688455581665
    7. 'dist' → logprob: -8.276884078979492
    8. '``' → logprob: -9.901884078979492
    9. 'distance' → logprob: -10.526884078979492
    10. '    
' → logprob: -11.026884078979492

Token 1684: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3942006230354309
    2. '#' (adapté à ' #') → logprob: -1.8942005634307861
    3. '   ' → logprob: -1.8942005634307861
    4. '```' → logprob: -4.144200801849365
    5. 'def' → logprob: -5.269200801849365
    6. 'dist' → logprob: -5.769200801849365
    7. '
' → logprob: -8.394200325012207
    8. '``' → logprob: -8.644200325012207
    9. 'INF' → logprob: -8.769200325012207
    10. 'queue' → logprob: -9.269200325012207

Token 1685: ' Maintenant' (ID: 163349)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06694069504737854
    2. 'dist' → logprob: -3.3169407844543457
    3. 'import' → logprob: -4.066940784454346
    4. 'def' → logprob: -4.566940784454346
    5. 'start' → logprob: -8.191940307617188
    6. 'queue' → logprob: -8.691940307617188
    7. 'INF' → logprob: -8.816940307617188
    8. 'visited' → logprob: -9.066940307617188
    9. '   ' → logprob: -9.316940307617188
    10. 'heap' → logprob: -9.816940307617188

Token 1686: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051680512726306915
    2. '#' → logprob: -3.051680564880371
    3. 'import' → logprob: -6.051680564880371
    4. '
' → logprob: -7.926680564880371
    5. ' #' → logprob: -8.426680564880371
    6. 'def' → logprob: -9.426680564880371
    7. 'dist' → logprob: -10.676680564880371
    8. '```' → logprob: -10.676680564880371
    9. 'visited' → logprob: -11.676680564880371
    10. 'distance' → logprob: -12.426680564880371

Token 1687: ' trouver' (ID: 23195)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.02352369949221611
    2. 'import' → logprob: -4.023523807525635
    3. '   ' → logprob: -5.898523807525635
    4. 'dist' → logprob: -6.023523807525635
    5. ' #' → logprob: -9.773523330688477
    6. 'def' → logprob: -9.773523330688477
    7. 'heap' → logprob: -10.773523330688477
    8. 'start' → logprob: -10.898523330688477
    9. '#import' → logprob: -11.773523330688477
    10. 'distance' → logprob: -11.773523330688477

Token 1688: ' le' (ID: 505)
  Prédit: ' shortest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -1.120995283126831
    2. 'the' → logprob: -1.245995283126831
    3. ' la' → logprob: -2.495995283126831
    4. ' the' → logprob: -2.870995283126831
    5. 'import' → logprob: -2.995995283126831
    6. 'short' → logprob: -3.370995283126831
    7. '<|end|>' → logprob: -3.495995283126831
    8. 'd' → logprob: -3.620995283126831
    9. 'le' → logprob: -3.745995283126831
    10. 'Shortest' → logprob: -3.995995283126831

Token 1689: ' plus' (ID: 2932)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.2973092496395111
    2. 'plus' → logprob: -1.5473092794418335
    3. 'import' → logprob: -3.672309160232544
    4. 'che' → logprob: -4.797309398651123
    5. 'me' → logprob: -5.797309398651123
    6. 'dist' → logprob: -6.297309398651123
    7. ' shortest' → logprob: -6.672309398651123
    8. '```' → logprob: -6.672309398651123
    9. 'distance' → logprob: -7.547309398651123
    10. '#' → logprob: -7.672309398651123

Token 1690: ' court' (ID: 10314)
  Prédit: 'court'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'court' → logprob: -0.002425240818411112
    2. 'cour' → logprob: -6.127425193786621
    3. ' court' → logprob: -8.752425193786621
    4. 'short' → logprob: -9.627425193786621
    5. '```' → logprob: -11.627425193786621
    6. 'cours' → logprob: -13.252425193786621
    7. 'c' → logprob: -13.252425193786621
    8. '_c' → logprob: -14.127425193786621
    9. 'Court' → logprob: -14.127425193786621
    10. '_short' → logprob: -14.377425193786621

Token 1691: ' chemin' (ID: 45035)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.02239544875919819
    2. 'che' → logprob: -3.897395372390747
    3. '   ' → logprob: -7.522395610809326
    4. ' chemin' → logprob: -7.897395610809326
    5. '#' → logprob: -8.147395133972168
    6. 'distance' → logprob: -8.147395133972168
    7. '_path' → logprob: -8.772395133972168
    8. 'paths' → logprob: -9.897395133972168
    9. '```' → logprob: -9.897395133972168
    10. '_che' → logprob: -10.022395133972168

Token 1692: ' entre' (ID: 3853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3839559555053711
    2. 'import' → logprob: -1.633955955505371
    3. 'dist' → logprob: -2.758955955505371
    4. 'from' → logprob: -2.883955955505371
    5. '#' → logprob: -6.758955955505371
    6. '
' → logprob: -6.758955955505371
    7. 'def' → logprob: -7.133955955505371
    8. 'start' → logprob: -7.508955955505371
    9. 'distance' → logprob: -8.133955955505371
    10. ' from' → logprob: -9.008955955505371

Token 1693: ' vertex' (ID: 25363)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.625006675720215
    3. 'vertices' → logprob: -12.750006675720215
    4. '   ' → logprob: -15.750006675720215
    5. 'vertex' → logprob: -16.1250057220459
    6. ' vertices' → logprob: -16.2500057220459
    7. '#' → logprob: -17.1250057220459
    8. '```' → logprob: -17.3750057220459
    9. '(' → logprob: -18.3750057220459
    10. '
' → logprob: -19.0000057220459

Token 1694: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001841536839492619
    2. '(' → logprob: -6.7518415451049805
    3. ' ' → logprob: -7.3768415451049805
    4. '`' → logprob: -11.00184154510498
    5. '```' → logprob: -11.12684154510498
    6. 's' → logprob: -12.25184154510498
    7. '[' → logprob: -12.37684154510498
    8. '
' → logprob: -13.50184154510498
    9. '   ' → logprob: -13.75184154510498
    10. ' (' → logprob: -14.00184154510498

Token 1695: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '(' → logprob: -18.125003814697266
    4. '[' → logprob: -18.375003814697266
    5. '```' → logprob: -19.000003814697266
    6. '۰' → logprob: -19.375003814697266
    7. '`' → logprob: -20.125003814697266
    8. '   ' → logprob: -20.375003814697266
    9. '０' → logprob: -20.812503814697266
    10. '1' → logprob: -20.875003814697266

Token 1696: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.14292742311954498
    2. 'import' → logprob: -2.517927408218384
    3. 'and' → logprob: -3.392927408218384
    4. ' et' → logprob: -4.892927646636963
    5. 'et' → logprob: -5.517927646636963
    6. '(' → logprob: -6.267927646636963
    7. ',' → logprob: -6.642927646636963
    8. ' (' → logprob: -7.017927646636963
    9. '   ' → logprob: -7.142927646636963
    10. 'def' → logprob: -7.267927646636963

Token 1697: 'centre' (ID: 119798)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -7.815280696377158e-05
    2. 'vertices' → logprob: -9.750078201293945
    3. ' ' → logprob: -11.375078201293945
    4. ')' → logprob: -13.250078201293945
    5. ' vertices' → logprob: -13.500078201293945
    6. '   ' → logprob: -13.500078201293945
    7. '0' → logprob: -13.500078201293945
    8. '```' → logprob: -13.625078201293945
    9. '`' → logprob: -14.375078201293945
    10. 'vertex' → logprob: -15.375078201293945

Token 1698: ' cercle' (ID: 172399)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007998613873496652
    2. ' ' → logprob: -7.500799655914307
    3. '1' → logprob: -8.750800132751465
    4. '_' → logprob: -10.250800132751465
    5. '```' → logprob: -10.750800132751465
    6. ')' → logprob: -12.000800132751465
    7. 'n' → logprob: -12.250800132751465
    8. 'of' → logprob: -12.500800132751465
    9. 'de' → logprob: -12.625800132751465
    10. '=' → logprob: -12.750800132751465

Token 1699: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004140022210776806
    2. ' ' → logprob: -5.7541399002075195
    3. '1' → logprob: -7.0041399002075195
    4. ')' → logprob: -11.00413990020752
    5. 'n' → logprob: -11.12913990020752
    6. '```' → logprob: -11.25413990020752
    7. '[' → logprob: -12.87913990020752
    8. '
' → logprob: -13.12913990020752
    9. '   ' → logprob: -13.25413990020752
    10. '`' → logprob: -14.37913990020752

Token 1700: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. '```' → logprob: -13.125003814697266
    3. ' ' → logprob: -14.000003814697266
    4. 'n' → logprob: -14.250003814697266
    5. ')' → logprob: -15.750003814697266
    6. '1' → logprob: -16.625003814697266
    7. '``' → logprob: -17.375003814697266
    8. '`' → logprob: -18.125003814697266
    9. '[' → logprob: -18.125003814697266
    10. '   ' → logprob: -18.625003814697266

Token 1701: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034630970912985504
    2. 'et' → logprob: -8.875346183776855
    3. ' )' → logprob: -9.125346183776855
    4. ' et' → logprob: -9.500346183776855
    5. ')
' → logprob: -11.250346183776855
    6. ',' → logprob: -12.750346183776855
    7. '')' → logprob: -13.250346183776855
    8. ' and' → logprob: -13.250346183776855
    9. '#' → logprob: -14.000346183776855
    10. '`)' → logprob: -14.500346183776855

Token 1702: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7381199598312378
    2. ' and' → logprob: -1.1131199598312378
    3. 'import' → logprob: -2.3631200790405273
    4. ' et' → logprob: -3.1131200790405273
    5. 'and' → logprob: -3.7381200790405273
    6. 'et' → logprob: -4.113120079040527
    7. 'def' → logprob: -4.988120079040527
    8. '```' → logprob: -6.113120079040527
    9. ')' → logprob: -6.738120079040527
    10. '#' → logprob: -7.238120079040527

Token 1703: ' vertex' (ID: 25363)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1929394006729126
    2. 'vertex' → logprob: -2.317939281463623
    3. ' vertex' → logprob: -2.692939281463623
    4. ' ' → logprob: -4.692939281463623
    5. '   ' → logprob: -9.192939758300781
    6. '	vertex' → logprob: -11.067939758300781
    7. 'vertices' → logprob: -11.817939758300781
    8. '    ' → logprob: -12.442939758300781
    9. '(vertex' → logprob: -12.442939758300781
    10. ' vertices' → logprob: -12.817939758300781

Token 1704: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011048054322600365
    2. ' ' → logprob: -4.511047840118408
    3. '```' → logprob: -16.51104736328125
    4. '   ' → logprob: -17.13604736328125
    5. '`' → logprob: -17.38604736328125
    6. ' ' → logprob: -17.51104736328125
    7. '0' → logprob: -17.76104736328125
    8. '[' → logprob: -17.88604736328125
    9. '<|end|>' → logprob: -18.26104736328125
    10. '=' → logprob: -19.26104736328125

Token 1705: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '```' → logprob: -20.000003814697266
    4. '[' → logprob: -20.250003814697266
    5. '   ' → logprob: -20.500003814697266
    6. '۱' → logprob: -20.875003814697266
    7. '0' → logprob: -21.687503814697266
    8. '１' → logprob: -21.687503814697266
    9. '' → logprob: -22.062503814697266
    10. '১' → logprob: -22.375003814697266

Token 1706: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13374117016792297
    2. '
' → logprob: -2.1337411403656006
    3. 'import' → logprob: -5.38374137878418
    4. 'dist' → logprob: -6.50874137878418
    5. '
' → logprob: -8.50874137878418
    6. '    
' → logprob: -8.63374137878418
    7. 'distance' → logprob: -9.25874137878418
    8. '```' → logprob: -9.25874137878418
    9. 'def' → logprob: -9.75874137878418
    10. ' distances' → logprob: -10.50874137878418

Token 1707: 'centre' (ID: 119798)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07389184832572937
    2. '0' → logprob: -3.4488918781280518
    3. 'n' → logprob: -4.573891639709473
    4. 'vertices' → logprob: -4.823891639709473
    5. 'centre' → logprob: -4.948891639709473
    6. 'center' → logprob: -5.698891639709473
    7. 'len' → logprob: -5.823891639709473
    8. '   ' → logprob: -6.573891639709473
    9. ')' → logprob: -6.573891639709473
    10. '```' → logprob: -6.698891639709473

Token 1708: ' cercle' (ID: 172399)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.061592597514390945
    2. '1' → logprob: -4.0615925788879395
    3. '(n' → logprob: -4.0615925788879395
    4. '0' → logprob: -4.1865925788879395
    5. '   ' → logprob: -5.9365925788879395
    6. ')' → logprob: -6.1865925788879395
    7. '```' → logprob: -6.5615925788879395
    8. '(' → logprob: -7.0615925788879395
    9. 'cir' → logprob: -7.5615925788879395
    10. ' n' → logprob: -7.6865925788879395

Token 1709: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0018228584667667747
    2. ' n' → logprob: -6.6268229484558105
    3. '(n' → logprob: -7.7518229484558105
    4. '1' → logprob: -10.251822471618652
    5. '-' → logprob: -11.751822471618652
    6. ' (' → logprob: -11.876822471618652
    7. '   ' → logprob: -12.376822471618652
    8. '```' → logprob: -12.376822471618652
    9. '{' → logprob: -12.626822471618652
    10. '``' → logprob: -13.376822471618652

Token 1710: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.5776860184123507e-06
    2. ' -' → logprob: -12.87500286102295
    3. '1' → logprob: -17.375001907348633
    4. '```' → logprob: -17.875001907348633
    5. '#' → logprob: -18.000001907348633
    6. '   ' → logprob: -19.125001907348633
    7. '−' → logprob: -20.000001907348633
    8. '-
' → logprob: -20.125001907348633
    9. ')' → logprob: -21.125001907348633
    10. '
' → logprob: -21.750001907348633

Token 1711: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '```' → logprob: -14.125000953674316
    3. ' ' → logprob: -15.750000953674316
    4. '   ' → logprob: -17.75
    5. '-' → logprob: -18.125
    6. '``' → logprob: -18.5
    7. '
' → logprob: -19.25
    8. '#' → logprob: -19.25
    9. '１' → logprob: -19.375
    10. '१' → logprob: -19.875

Token 1712: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06878896057605743
    2. ')
' → logprob: -2.818789005279541
    3. '):' → logprob: -5.693789005279541
    4. '):
' → logprob: -6.443789005279541
    5. ')

' → logprob: -7.693789005279541
    6. '   ' → logprob: -7.943789005279541
    7. ').' → logprob: -8.068788528442383
    8. 'def' → logprob: -8.568788528442383
    9. '):

' → logprob: -8.818788528442383
    10. ' )' → logprob: -9.943788528442383

Token 1713: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012341608526185155
    2. '
' → logprob: -7.00123405456543
    3. 'import' → logprob: -8.62623405456543
    4. 'dist' → logprob: -9.25123405456543
    5. '```' → logprob: -10.37623405456543
    6. '    
' → logprob: -11.50123405456543
    7. 'heap' → logprob: -13.12623405456543
    8. 'visited' → logprob: -13.62623405456543
    9. 'distance' → logprob: -13.62623405456543
    10. 'def' → logprob: -14.37623405456543

Token 1714: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5296838283538818
    2. 'dist' → logprob: -1.0296838283538818
    3. 'import' → logprob: -3.029683828353882
    4. '```' → logprob: -6.279684066772461
    5. 'queue' → logprob: -6.779684066772461
    6. 'heap' → logprob: -6.904684066772461
    7. '
' → logprob: -7.029684066772461
    8. 'pq' → logprob: -8.279684066772461
    9. 'distance' → logprob: -8.529684066772461
    10. 'visited' → logprob: -9.029684066772461

Token 1715: ' Util' (ID: 13564)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.028081893920898438
    2. 'import' → logprob: -4.278081893920898
    3. '   ' → logprob: -4.778081893920898
    4. 'heap' → logprob: -6.028081893920898
    5. 'queue' → logprob: -6.278081893920898
    6. 'pq' → logprob: -7.778081893920898
    7. 'visited' → logprob: -8.028081893920898
    8. '#' → logprob: -8.528081893920898
    9. 'distance' → logprob: -9.528081893920898
    10. 'INF' → logprob: -10.653081893920898

Token 1716: 'isons' (ID: 47841)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.5895736217498779
    2. 'isant' → logprob: -0.9645736217498779
    3. 'ising' → logprob: -3.964573621749878
    4. 'er' → logprob: -4.839573860168457
    5. 'isation' → logprob: -4.964573860168457
    6. 'izing' → logprob: -5.214573860168457
    7. '#' → logprob: -5.214573860168457
    8. 'is' → logprob: -5.464573860168457
    9. 'ing' → logprob: -5.589573860168457
    10. 'ant' → logprob: -5.964573860168457

Token 1717: ' D' (ID: 415)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5977495908737183
    2. 'import' → logprob: -1.4727495908737183
    3. 'heap' → logprob: -2.097749710083008
    4. ' a' → logprob: -2.847749710083008
    5. 'he' → logprob: -4.472749710083008
    6. 'd' → logprob: -4.597749710083008
    7. 'D' → logprob: -4.722749710083008
    8. '```' → logprob: -5.097749710083008
    9. ' heap' → logprob: -6.472749710083008
    10. '   ' → logprob: -7.097749710083008

Token 1718: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.010787463746964931
    2. 'ijk' → logprob: -4.635787487030029
    3. 'ij' → logprob: -7.260787487030029
    4. 'jik' → logprob: -8.260787010192871
    5. 'jk' → logprob: -10.760787010192871
    6. 'ijks' → logprob: -11.260787010192871
    7. 'ijs' → logprob: -11.510787010192871
    8. '```' → logprob: -11.760787010192871
    9. 'ijst' → logprob: -12.385787010192871
    10. '   ' → logprob: -12.885787010192871

Token 1719: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4307915270328522
    2. 'dist' → logprob: -1.1807914972305298
    3. 'def' → logprob: -3.3057916164398193
    4. '
' → logprob: -5.68079137802124
    5. 'distance' → logprob: -6.80579137802124
    6. '(
' → logprob: -7.93079137802124
    7. 'queue' → logprob: -8.305791854858398
    8. '()
' → logprob: -8.305791854858398
    9. 'visited' → logprob: -8.555791854858398
    10. '```' → logprob: -8.805791854858398

Token 1720: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4829269349575043
    2. '   ' → logprob: -0.9829269647598267
    3. '
' → logprob: -4.982926845550537
    4. '```' → logprob: -7.107926845550537
    5. 'def' → logprob: -7.607926845550537
    6. 'distance' → logprob: -7.982926845550537
    7. '    
' → logprob: -8.982927322387695
    8. ' dist' → logprob: -9.982927322387695
    9. 'visited' → logprob: -10.482927322387695
    10. 'queue' → logprob: -10.607927322387695

Token 1721: ' def' (ID: 1056)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0007300666766241193
    2. 'import' → logprob: -7.500730037689209
    3. '   ' → logprob: -9.250730514526367
    4. 'distance' → logprob: -10.250730514526367
    5. 'INF' → logprob: -10.250730514526367
    6. '
' → logprob: -13.000730514526367
    7. '```' → logprob: -13.000730514526367
    8. ' dist' → logprob: -13.125730514526367
    9. 'def' (adapté à ' def') → logprob: -13.750730514526367
    10. 'queue' → logprob: -13.750730514526367

Token 1722: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.6776029699249193e-05
    2. ' d' → logprob: -10.75002670288086
    3. 'short' → logprob: -12.25002670288086
    4. 'dist' → logprob: -16.25002670288086
    5. ' shortest' → logprob: -16.37502670288086
    6. 'D' → logprob: -16.62502670288086
    7. '```' → logprob: -17.00002670288086
    8. 'ijkstra' → logprob: -17.37502670288086
    9. '   ' → logprob: -18.00002670288086
    10. 'dj' → logprob: -18.12502670288086

Token 1723: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.0007151735480874777
    2. 'ijk' → logprob: -7.375715255737305
    3. 'ij' → logprob: -9.875715255737305
    4. 'ist' → logprob: -10.500715255737305
    5. 'ists' → logprob: -12.625715255737305
    6. 'ijks' → logprob: -12.875715255737305
    7. 'ef' → logprob: -14.125715255737305
    8. 'istance' → logprob: -14.500715255737305
    9. '
' → logprob: -14.625715255737305
    10. 'ijs' → logprob: -14.750715255737305

Token 1724: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.27450403571128845
    2. '(' → logprob: -1.7745040655136108
    3. '(graph' → logprob: -3.1495039463043213
    4. '(source' → logprob: -3.8995039463043213
    5. '(s' → logprob: -5.7745041847229
    6. '(src' → logprob: -6.2745041847229
    7. '(u' → logprob: -7.8995041847229
    8. ' (' → logprob: -8.274503707885742
    9. '(vertices' → logprob: -8.399503707885742
    10. '(node' → logprob: -8.524503707885742

Token 1725: ',' (ID: 11)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.8136508464813232
    2. ',' → logprob: -1.1886508464813232
    3. '):' → logprob: -1.5636508464813232
    4. '   ' → logprob: -4.188651084899902
    5. '):
' → logprob: -4.438651084899902
    6. '(vertex' → logprob: -5.313651084899902
    7. '(vertices' → logprob: -5.688651084899902
    8. '(' → logprob: -5.813651084899902
    9. ')' → logprob: -6.688651084899902
    10. '(n' → logprob: -7.313651084899902

Token 1726: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.006073490716516972
    2. 'graph' → logprob: -5.381073474884033
    3. ' end' → logprob: -6.631073474884033
    4. '   ' → logprob: -9.631073951721191
    5. 'goal' → logprob: -10.631073951721191
    6. 'target' → logprob: -11.506073951721191
    7. 'n' → logprob: -11.506073951721191
    8. ' graph' → logprob: -11.631073951721191
    9. 'dist' → logprob: -12.381073951721191
    10. '
' → logprob: -13.256073951721191

Token 1727: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01357522327452898
    2. ',' → logprob: -5.138575077056885
    3. '):
' → logprob: -5.138575077056885
    4. '   ' → logprob: -6.513575077056885
    5. ')' → logprob: -9.388575553894043
    6. '(start' → logprob: -9.388575553894043
    7. '):
' → logprob: -10.138575553894043
    8. ' ):' → logprob: -11.263575553894043
    9. ' ' → logprob: -11.513575553894043
    10. ',start' → logprob: -12.013575553894043

Token 1728: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003424254711717367
    2. 'dist' → logprob: -6.378424167633057
    3. '       ' → logprob: -6.503424167633057
    4. ' distances' → logprob: -9.503424644470215
    5. ' dist' → logprob: -9.878424644470215
    6. '    ' → logprob: -10.378424644470215
    7. '
' → logprob: -10.878424644470215
    8. '```' → logprob: -11.003424644470215
    9. 'import' → logprob: -11.253424644470215
    10. 'distance' → logprob: -12.378424644470215

Token 1729: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.09137947857379913
    2. '   ' → logprob: -3.091379404067993
    3. 'import' → logprob: -3.591379404067993
    4. '       ' → logprob: -4.341379642486572
    5. 'heap' → logprob: -7.216379642486572
    6. ' dist' → logprob: -7.841379642486572
    7. 'distance' → logprob: -9.466379165649414
    8. 'INF' → logprob: -10.466379165649414
    9. '
' → logprob: -10.716379165649414
    10. 'queue' → logprob: -11.591379165649414

Token 1730: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1428275853395462
    2. '=' → logprob: -2.0178275108337402
    3. '[' → logprob: -9.142827987670898
    4. '=[' → logprob: -11.142827987670898
    5. ')' → logprob: -11.392827987670898
    6. ',' → logprob: -11.892827987670898
    7. '<|end|>' → logprob: -13.017827987670898
    8. ' ' → logprob: -13.392827987670898
    9. '={' → logprob: -13.392827987670898
    10. '[start' → logprob: -13.767827987670898

Token 1731: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2522198259830475
    2. '{' → logprob: -1.502219796180725
    3. ' [' → logprob: -9.752220153808594
    4. '[Math' → logprob: -10.002220153808594
    5. '[node' → logprob: -10.627220153808594
    6. '[n' → logprob: -10.877220153808594
    7. '[len' → logprob: -11.127220153808594
    8. '[name' → logprob: -11.627220153808594
    9. '[start' → logprob: -11.877220153808594
    10. '[num' → logprob: -12.002220153808594

Token 1732: 'math' (ID: 20310)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.02975083328783512
    2. 'math' → logprob: -3.5297508239746094
    3. ' float' → logprob: -14.90475082397461
    4. ' math' → logprob: -18.27975082397461
    5. '   ' → logprob: -18.77975082397461
    6. '(float' → logprob: -19.90475082397461
    7. 'sys' → logprob: -20.40475082397461
    8. '	float' → logprob: -21.40475082397461
    9. '(math' → logprob: -21.40475082397461
    10. '=float' → logprob: -22.02975082397461

Token 1733: '.inf' (ID: 81185)
  Prédit: '.inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inf' → logprob: -0.5769985318183899
    2. 'inf' → logprob: -0.8269985318183899
    3. '```' → logprob: -7.076998710632324
    4. '_inf' → logprob: -9.201998710632324
    5. '``' → logprob: -10.326998710632324
    6. ' inf' → logprob: -10.326998710632324
    7. '
' → logprob: -10.576998710632324
    8. '-inf' → logprob: -11.576998710632324
    9. 'Inf' → logprob: -13.076998710632324
    10. '∞' → logprob: -13.201998710632324

Token 1734: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0039388868026435375
    2. ' for' → logprob: -6.253938674926758
    3. ']*' → logprob: -6.878938674926758
    4. ' ]' → logprob: -7.253938674926758
    5. 'for' → logprob: -8.878938674926758
    6. ',' → logprob: -9.503938674926758
    7. '   ' → logprob: -10.628938674926758
    8. '<|end|>' → logprob: -11.128938674926758
    9. ')' → logprob: -12.503938674926758
    10. ',
' → logprob: -13.128938674926758

Token 1735: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.00020663968462031335
    2. 'len' → logprob: -8.50020694732666
    3. '(E' → logprob: -13.12520694732666
    4. '(len' → logprob: -14.00020694732666
    5. ' E' → logprob: -15.62520694732666
    6. '```' → logprob: -17.500205993652344
    7. '
' → logprob: -17.750205993652344
    8. '   ' → logprob: -18.250205993652344
    9. '(' → logprob: -19.375205993652344
    10. ' len' → logprob: -19.500205993652344

Token 1736: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2027355283498764
    2. '
' → logprob: -2.327735424041748
    3. '       ' → logprob: -2.827735424041748
    4. ' distances' → logprob: -3.702735424041748
    5. 'Distances' → logprob: -7.202735424041748
    6. 'distance' → logprob: -8.077735900878906
    7. '        
' → logprob: -8.077735900878906
    8. '   ' → logprob: -8.702735900878906
    9. ')
' → logprob: -9.077735900878906
    10. '
' → logprob: -9.327735900878906

Token 1737: '       ' (ID: 309)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.41573449969291687
    2. 'dist' → logprob: -1.5407345294952393
    3. ' distances' → logprob: -2.2907345294952393
    4. ' start' → logprob: -4.79073429107666
    5. '       ' → logprob: -5.29073429107666
    6. '   ' → logprob: -5.29073429107666
    7. '0' → logprob: -5.66573429107666
    8. '
' → logprob: -6.41573429107666
    9. '```' → logprob: -8.04073429107666
    10. '[start' → logprob: -8.29073429107666

Token 1738: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0001278534036828205
    2. ' distances' → logprob: -9.500127792358398
    3. 'import' → logprob: -10.000127792358398
    4. 'heap' → logprob: -12.500127792358398
    5. 'distance' → logprob: -13.500127792358398
    6. '   ' → logprob: -13.750127792358398
    7. '0' → logprob: -14.625127792358398
    8. 'start' → logprob: -15.250127792358398
    9. '       ' → logprob: -15.750127792358398
    10. 'visited' → logprob: -15.750127792358398

Token 1739: '[start' (ID: 62179)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007628519553691149
    2. '[start' → logprob: -4.882628440856934
    3. '=' → logprob: -11.257628440856934
    4. ' [' → logprob: -12.882628440856934
    5. '```' → logprob: -13.257628440856934
    6. '[end' → logprob: -13.882628440856934
    7. '   ' → logprob: -14.382628440856934
    8. '0' → logprob: -14.632628440856934
    9. 'start' → logprob: -14.882628440856934
    10. '][' → logprob: -15.257628440856934

Token 1740: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02518600784242153
    2. ']' → logprob: -4.525186061859131
    3. ']=' → logprob: -4.525186061859131
    4. ' =' → logprob: -6.025186061859131
    5. '=
' → logprob: -8.025185585021973
    6. '   ' → logprob: -8.900185585021973
    7. ' distances' → logprob: -9.025185585021973
    8. 'dist' → logprob: -9.275185585021973
    9. 'Distances' → logprob: -10.400185585021973
    10. '       ' → logprob: -10.775185585021973

Token 1741: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0013398852897807956
    2. ' =' → logprob: -6.626339912414551
    3. '=
' → logprob: -11.25133991241455
    4. '   ' → logprob: -15.87633991241455
    5. '=True' → logprob: -16.376338958740234
    6. 'dist' → logprob: -16.376338958740234
    7. '=

' → logprob: -16.501338958740234
    8. ']=' → logprob: -16.751338958740234
    9. ')=' → logprob: -16.876338958740234
    10. '=int' → logprob: -17.001338958740234

Token 1742: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '   ' → logprob: -19.875
    4. '۰' → logprob: -20.625
    5. '```' → logprob: -21.5
    6. '=' → logprob: -22.75
    7. '00' → logprob: -23.125
    8. '     ' → logprob: -23.375
    9. '       ' → logprob: -23.625
    10. '٠' → logprob: -23.625

Token 1743: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '```' → logprob: -19.625
    4. '۰' → logprob: -19.75
    5. '   ' → logprob: -20.125
    6. '1' → logprob: -21.8125
    7. '٠' → logprob: -21.9375
    8. 'import' → logprob: -22.25
    9. '=' → logprob: -22.375
    10. '০' → logprob: -22.4375

Token 1744: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024307725951075554
    2. '<|end|>' → logprob: -4.399307727813721
    3. '   ' → logprob: -4.899307727813721
    4. '
' → logprob: -6.524307727813721
    5. 'heap' → logprob: -7.399307727813721
    6. ')' → logprob: -7.524307727813721
    7. ' heap' → logprob: -7.649307727813721
    8. ',' → logprob: -8.524307250976562
    9. '	' → logprob: -8.524307250976562
    10. '        
' → logprob: -8.774307250976562

Token 1745: '0' (ID: 15)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.15997496247291565
    2. 'queue' → logprob: -2.909975051879883
    3. '   ' → logprob: -3.159975051879883
    4. '       ' → logprob: -3.659975051879883
    5. 'pq' → logprob: -3.909975051879883
    6. 'import' → logprob: -5.659975051879883
    7. '```' → logprob: -6.909975051879883
    8. 'priority' → logprob: -7.659975051879883
    9. 'hq' → logprob: -9.034975051879883
    10. ' heap' → logprob: -9.909975051879883

Token 1746: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02825864404439926
    2. '   ' → logprob: -4.028258800506592
    3. 'heap' → logprob: -4.903258800506592
    4. 'queue' → logprob: -6.653258800506592
    5. 'pq' → logprob: -7.528258800506592
    6. 'import' → logprob: -8.028258323669434
    7. '```' → logprob: -8.528258323669434
    8. 'priority' → logprob: -9.153258323669434
    9. ' heap' → logprob: -9.403258323669434
    10. '
' → logprob: -9.903258323669434

Token 1747: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3292894959449768
    2. '   ' → logprob: -1.329289436340332
    3. 'heap' → logprob: -4.704289436340332
    4. 'queue' → logprob: -5.954289436340332
    5. '```' → logprob: -6.579289436340332
    6. 'priority' → logprob: -7.204289436340332
    7. ' heap' → logprob: -7.329289436340332
    8. ' queue' → logprob: -7.829289436340332
    9. 'import' → logprob: -7.954289436340332
    10. 'pq' → logprob: -8.079289436340332

Token 1748: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.010435149073600769
    2. 'queue' → logprob: -4.760435104370117
    3. 'pq' → logprob: -6.510435104370117
    4. 'import' → logprob: -8.260435104370117
    5. 'hq' → logprob: -9.760435104370117
    6. ' heap' → logprob: -11.885435104370117
    7. '   ' → logprob: -12.135435104370117
    8. '```' → logprob: -13.385435104370117
    9. 'priority' → logprob: -14.885435104370117
    10. 'h' → logprob: -15.260435104370117

Token 1749: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7679976224899292
    2. '=[]' → logprob: -1.1429976224899292
    3. 'q' → logprob: -1.6429976224899292
    4. '=' → logprob: -4.142997741699219
    5. '=[]
' → logprob: -5.392997741699219
    6. '       ' → logprob: -7.392997741699219
    7. '[]' → logprob: -7.642997741699219
    8. '   ' → logprob: -8.017997741699219
    9. '=[
' → logprob: -8.017997741699219
    10. ')' → logprob: -8.142997741699219

Token 1750: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0005000127712264657
    2. '[]' → logprob: -8.000499725341797
    3. '[]
' → logprob: -8.750499725341797
    4. ' [(' → logprob: -12.000499725341797
    5. '[]

' → logprob: -17.250499725341797
    6. ' []
' → logprob: -18.500499725341797
    7. '[((' → logprob: -19.375499725341797
    8. ' []' → logprob: -19.500499725341797
    9. '[' → logprob: -20.125499725341797
    10. '[],' → logprob: -21.250499725341797

Token 1751: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6047699318733066e-05
    2. 'start' → logprob: -11.125016212463379
    3. ' ' → logprob: -13.875016212463379
    4. '(' → logprob: -16.000015258789062
    5. '(start' → logprob: -16.625015258789062
    6. '   ' → logprob: -16.875015258789062
    7. ' start' → logprob: -17.000015258789062
    8. 'dist' → logprob: -19.000015258789062
    9. '
' → logprob: -19.875015258789062
    10. '[start' → logprob: -20.125015258789062

Token 1752: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008869827724993229
    2. '.' → logprob: -4.758869647979736
    3. ' ,' → logprob: -9.133870124816895
    4. ',
' → logprob: -10.008870124816895
    5. ')' → logprob: -10.758870124816895
    6. '[' → logprob: -10.883870124816895
    7. '```' → logprob: -11.258870124816895
    8. ')]' → logprob: -11.508870124816895
    9. '<|end|>' → logprob: -12.008870124816895
    10. ',[' → logprob: -12.258870124816895

Token 1753: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -13.000003814697266
    3. 'dist' → logprob: -14.125003814697266
    4. ',' → logprob: -14.500003814697266
    5. 'start' → logprob: -15.875003814697266
    6. ')' → logprob: -16.375003814697266
    7. '
' → logprob: -16.500003814697266
    8. '   ' → logprob: -16.625003814697266
    9. '```' → logprob: -16.875003814697266
    10. 'distance' → logprob: -17.250003814697266

Token 1754: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.921253225300461e-05
    2. '<|end|>' → logprob: -10.625069618225098
    3. ',start' → logprob: -11.250069618225098
    4. ')' → logprob: -11.625069618225098
    5. ' ,' → logprob: -11.625069618225098
    6. ',
' → logprob: -12.875069618225098
    7. '0' → logprob: -13.375069618225098
    8. '```' → logprob: -13.500069618225098
    9. ',index' → logprob: -13.875069618225098
    10. ',)' → logprob: -14.125069618225098

Token 1755: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0385126993060112
    2. '0' → logprob: -3.288512706756592
    3. ' start' → logprob: -7.663512706756592
    4. ' ' → logprob: -13.913512229919434
    5. '[start' → logprob: -15.538512229919434
    6. '(start' → logprob: -15.913512229919434
    7. ')' → logprob: -16.28851318359375
    8. '	start' → logprob: -16.41351318359375
    9. '=start' → logprob: -16.53851318359375
    10. ',start' → logprob: -17.16351318359375

Token 1756: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.002950958674773574
    2. ')]
' → logprob: -5.877951145172119
    3. '),' → logprob: -9.252950668334961
    4. ')' → logprob: -10.377950668334961
    5. '       ' → logprob: -11.752950668334961
    6. ' )' → logprob: -13.002950668334961
    7. ')]
' → logprob: -13.002950668334961
    8. ',' → logprob: -13.377950668334961
    9. '   ' → logprob: -13.627950668334961
    10. ')]

' → logprob: -14.002950668334961

Token 1757: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07885122299194336
    2. '   ' → logprob: -2.8288512229919434
    3. 'while' → logprob: -4.203851222991943
    4. ' while' → logprob: -6.328851222991943
    5. '	while' → logprob: -11.328851699829102
    6. '```' → logprob: -12.453851699829102
    7. '
' → logprob: -13.578851699829102
    8. ' ' → logprob: -14.203851699829102
    9. '           ' → logprob: -14.203851699829102
    10. ')' → logprob: -14.703851699829102

Token 1758: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0034717784728854895
    2. '       ' → logprob: -6.003471851348877
    3. ' while' → logprob: -7.378471851348877
    4. '   ' → logprob: -8.003471374511719
    5. '```' → logprob: -10.378471374511719
    6. '	while' → logprob: -12.378471374511719
    7. '
' → logprob: -14.503471374511719
    8. 'While' → logprob: -14.628471374511719
    9. '``' → logprob: -15.628471374511719
    10. ')' → logprob: -16.00347137451172

Token 1759: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0015181921189650893
    2. ' heap' → logprob: -6.501518249511719
    3. 'len' → logprob: -11.626518249511719
    4. '   ' → logprob: -13.126518249511719
    5. '(heap' → logprob: -13.501518249511719
    6. 'True' → logprob: -13.501518249511719
    7. ' True' → logprob: -14.001518249511719
    8. '
' → logprob: -14.626518249511719
    9. 'he' → logprob: -14.626518249511719
    10. '           ' → logprob: -15.751518249511719

Token 1760: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03812193125486374
    2. ':' → logprob: -3.4131219387054443
    3. '.pop' → logprob: -6.538121700286865
    4. '[' → logprob: -6.788121700286865
    5. '       ' → logprob: -7.038121700286865
    6. '):
' → logprob: -7.788121700286865
    7. '           ' → logprob: -8.288122177124023
    8. ',' → logprob: -9.163122177124023
    9. ' and' → logprob: -9.413122177124023
    10. '=' → logprob: -10.538122177124023

Token 1761: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49788856506347656
    2. '       ' → logprob: -0.9978885650634766
    3. 'dist' → logprob: -4.122888565063477
    4. '```' → logprob: -5.372888565063477
    5. 'distance' → logprob: -7.372888565063477
    6. '   ' → logprob: -7.497888565063477
    7. ' dist' → logprob: -8.247888565063477
    8. 'cost' → logprob: -8.247888565063477
    9. '(distance' → logprob: -8.872888565063477
    10. '_,' → logprob: -8.997888565063477

Token 1762: ' cur' (ID: 4396)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1394401341676712
    2. 'd' → logprob: -2.3894400596618652
    3. 'cost' → logprob: -3.8894400596618652
    4. 'distance' → logprob: -5.389440059661865
    5. 'cur' (adapté à ' cur') → logprob: -5.514440059661865
    6. '   ' → logprob: -6.014440059661865
    7. 'curr' → logprob: -6.139440059661865
    8. ' dist' → logprob: -6.139440059661865
    9. 'current' → logprob: -6.514440059661865
    10. '0' → logprob: -7.889440059661865

Token 1763: '_d' (ID: 1565)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.07114075869321823
    2. '_distance' → logprob: -2.946140766143799
    3. 'dist' → logprob: -4.321140766143799
    4. '_cost' → logprob: -6.071140766143799
    5. '_d' → logprob: -8.44614028930664
    6. 'distance' → logprob: -8.69614028930664
    7. '_' → logprob: -9.94614028930664
    8. ',' → logprob: -10.32114028930664
    9. 'd' → logprob: -11.19614028930664
    10. 'Dist' → logprob: -11.44614028930664

Token 1764: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002487903693690896
    2. ' ,' → logprob: -6.252488136291504
    3. 'ist' → logprob: -7.752488136291504
    4. ',
' → logprob: -9.502488136291504
    5. 'istance' → logprob: -10.752488136291504
    6. '_,' → logprob: -11.127488136291504
    7. ',_' → logprob: -12.877488136291504
    8. ',u' → logprob: -13.127488136291504
    9. ',d' → logprob: -13.752488136291504
    10. ',w' → logprob: -14.252488136291504

Token 1765: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.023358216509222984
    2. ' u' → logprob: -3.773358106613159
    3. 'node' → logprob: -9.398358345031738
    4. ' node' → logprob: -11.023358345031738
    5. 'cur' → logprob: -11.523358345031738
    6. '   ' → logprob: -13.148358345031738
    7. '```' → logprob: -14.773358345031738
    8. ' cur' → logprob: -14.898358345031738
    9. 'v' → logprob: -14.898358345031738
    10. '	u' → logprob: -15.023358345031738

Token 1766: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0067234220914542675
    2. ' =' → logprob: -5.006723403930664
    3. ')' → logprob: -12.381723403930664
    4. '=
' → logprob: -13.506723403930664
    5. '=u' → logprob: -14.131723403930664
    6. '           ' → logprob: -14.256723403930664
    7. ')=' → logprob: -15.131723403930664
    8. '   ' → logprob: -15.256723403930664
    9. ',' → logprob: -16.131723403930664
    10. '<|end|>' → logprob: -16.131723403930664

Token 1767: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.07889232039451599
    2. ' he' → logprob: -2.578892230987549
    3. 'heap' → logprob: -12.953892707824707
    4. '   ' → logprob: -16.20389175415039
    5. ' heap' → logprob: -17.32889175415039
    6. ' ' → logprob: -19.70389175415039
    7. 'heme' → logprob: -20.32889175415039
    8. '
' → logprob: -20.45389175415039
    9. '_he' → logprob: -20.95389175415039
    10. '  ' → logprob: -21.32889175415039

Token 1768: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -5.836499985889532e-05
    2. 'ap' → logprob: -9.7500581741333
    3. ' app' → logprob: -17.875059127807617
    4. 'ап' → logprob: -18.250059127807617
    5. 'pp' → logprob: -18.500059127807617
    6. 'a' → logprob: -18.500059127807617
    7. 'appt' → logprob: -19.000059127807617
    8. 'q' → logprob: -20.000059127807617
    9. '```' → logprob: -20.500059127807617
    10. 'p' → logprob: -20.625059127807617

Token 1769: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.6047699318733066e-05
    2. 'pop' → logprob: -11.375016212463379
    3. 'ush' → logprob: -12.500016212463379
    4. ' op' → logprob: -14.750016212463379
    5. 'o' → logprob: -16.125015258789062
    6. 'p' → logprob: -16.250015258789062
    7. '```' → logprob: -17.125015258789062
    8. 'opp' → logprob: -17.500015258789062
    9. '	op' → logprob: -17.500015258789062
    10. 'opleft' → logprob: -17.500015258789062

Token 1770: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.0016980338841676712
    2. '(' → logprob: -7.126698017120361
    3. 'heap' → logprob: -7.251698017120361
    4. '(
' → logprob: -8.75169849395752
    5. ' heap' → logprob: -11.62669849395752
    6. ',' → logprob: -11.75169849395752
    7. ' (' → logprob: -11.87669849395752
    8. ')' → logprob: -14.25169849395752
    9. '(graph' → logprob: -15.50169849395752
    10. ',
' → logprob: -15.50169849395752

Token 1771: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1474532037973404
    2. ')' → logprob: -2.1474533081054688
    3. '           ' → logprob: -3.8974533081054688
    4. ' )
' → logprob: -11.647453308105469
    5. '               ' → logprob: -12.147453308105469
    6. '):
' → logprob: -12.897453308105469
    7. '       ' → logprob: -13.522453308105469
    8. ')
' → logprob: -13.522453308105469
    9. ')`
' → logprob: -14.397453308105469
    10. ' )' → logprob: -14.647453308105469

Token 1772: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013381359167397022
    2. 'if' → logprob: -9.250133514404297
    3. '       ' → logprob: -11.000133514404297
    4. ' if' → logprob: -11.750133514404297
    5. '```' → logprob: -12.000133514404297
    6. '               ' → logprob: -12.750133514404297
    7. '
' → logprob: -13.000133514404297
    8. '            
' → logprob: -15.125133514404297
    9. '   ' → logprob: -15.375133514404297
    10. '<|end|>' → logprob: -15.500133514404297

Token 1773: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4078536331653595
    2. '           ' → logprob: -1.407853603363037
    3. ' if' → logprob: -2.407853603363037
    4. '               ' → logprob: -8.532854080200195
    5. '   ' → logprob: -10.532854080200195
    6. '```' → logprob: -11.907854080200195
    7. '                   ' → logprob: -12.407854080200195
    8. '       ' → logprob: -12.657854080200195
    9. '
' → logprob: -12.907854080200195
    10. '            
' → logprob: -13.407854080200195

Token 1774: ' cur' (ID: 4396)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.1603093296289444
    2. ' u' → logprob: -1.9103093147277832
    3. 'cur' → logprob: -9.535309791564941
    4. ' cur' → logprob: -11.285309791564941
    5. '	u' → logprob: -15.910309791564941
    6. ' ' → logprob: -16.535308837890625
    7. '   ' → logprob: -16.660308837890625
    8. '(u' → logprob: -17.035308837890625
    9. '           ' → logprob: -17.035308837890625
    10. '_u' → logprob: -17.910308837890625

Token 1775: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0004813161212950945
    2. '==' → logprob: -8.125481605529785
    3. '_' → logprob: -10.125481605529785
    4. ' ==' → logprob: -10.250481605529785
    5. '_u' → logprob: -10.375481605529785
    6. '   ' → logprob: -10.375481605529785
    7. 'd' → logprob: -11.375481605529785
    8. '           ' → logprob: -12.000481605529785
    9. '_distance' → logprob: -12.625481605529785
    10. 'u' → logprob: -13.000481605529785

Token 1776: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6937490701675415
    2. ' >' → logprob: -0.6937490701675415
    3. ' >=' → logprob: -7.943748950958252
    4. '>=' → logprob: -8.56874942779541
    5. ' ==' → logprob: -11.19374942779541
    6. ' >
' → logprob: -11.31874942779541
    7. '==' → logprob: -11.56874942779541
    8. ' ' → logprob: -12.56874942779541
    9. '   ' → logprob: -12.81874942779541
    10. '>
' → logprob: -12.81874942779541

Token 1777: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.004079708829522133
    2. ' distances' → logprob: -5.504079818725586
    3. ' dist' → logprob: -14.129079818725586
    4. 'distance' → logprob: -14.754079818725586
    5. '
' → logprob: -16.629079818725586
    6. '	dist' → logprob: -17.254079818725586
    7. '   ' → logprob: -17.629079818725586
    8. '(dist' → logprob: -18.129079818725586
    9. '_dist' → logprob: -18.629079818725586
    10. '```' → logprob: -18.754079818725586

Token 1778: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.2200749754119897e-06
    2. 'u' → logprob: -13.125001907348633
    3. '[' → logprob: -16.625001907348633
    4. '
' → logprob: -16.750001907348633
    5. '[
' → logprob: -17.625001907348633
    6. ' [' → logprob: -18.375001907348633
    7. '(u' → logprob: -18.375001907348633
    8. ' u' → logprob: -19.375001907348633
    9. '```' → logprob: -19.375001907348633
    10. '   ' → logprob: -19.500001907348633

Token 1779: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9200958013534546
    2. '):' → logprob: -1.7950958013534546
    3. ':
' → logprob: -2.045095920562744
    4. '               ' → logprob: -2.295095920562744
    5. '           ' → logprob: -2.420095920562744
    6. ':' → logprob: -2.420095920562744
    7. ')' → logprob: -4.670095920562744
    8. 'continue' → logprob: -5.045095920562744
    9. ' or' → logprob: -6.045095920562744
    10. ':return' → logprob: -6.170095920562744

Token 1780: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002888564020395279
    2. '           ' → logprob: -6.5028886795043945
    3. 'continue' → logprob: -7.2528886795043945
    4. ':' → logprob: -8.252888679504395
    5. ':
' → logprob: -8.627888679504395
    6. ' continue' → logprob: -8.752888679504395
    7. '                   ' → logprob: -10.127888679504395
    8. '   ' → logprob: -11.502888679504395
    9. ' or' → logprob: -11.752888679504395
    10. '                       ' → logprob: -11.877888679504395

Token 1781: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.24891288578510284
    2. ' continue' → logprob: -1.9989129304885864
    3. '               ' → logprob: -2.498912811279297
    4. '           ' → logprob: -5.998912811279297
    5. '   ' → logprob: -8.623912811279297
    6. '                   ' → logprob: -10.623912811279297
    7. '	continue' → logprob: -12.623912811279297
    8. '_continue' → logprob: -12.998912811279297
    9. '```' → logprob: -13.373912811279297
    10. '       ' → logprob: -13.748912811279297

Token 1782: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.246537173457909e-06
    2. '
' → logprob: -13.500003814697266
    3. '            
' → logprob: -14.375003814697266
    4. '       ' → logprob: -14.500003814697266
    5. '		' → logprob: -14.625003814697266
    6. '<|end|>' → logprob: -14.625003814697266
    7. '          ' → logprob: -15.375003814697266
    8. '   ' → logprob: -15.375003814697266
    9. 'if' → logprob: -16.375003814697266
    10. '               ' → logprob: -16.625003814697266

Token 1783: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.0033853515051305e-05
    2. '       ' → logprob: -10.250060081481934
    3. '   ' → logprob: -11.000060081481934
    4. '```' → logprob: -13.125060081481934
    5. ' for' → logprob: -13.500060081481934
    6. '               ' → logprob: -13.750060081481934
    7. '          ' → logprob: -14.125060081481934
    8. '
' → logprob: -14.250060081481934
    9. '<|end|>' → logprob: -14.750060081481934
    10. '		' → logprob: -14.875060081481934

Token 1784: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07991161197423935
    2. 'for' → logprob: -2.829911708831787
    3. 'if' (adapté à ' if') → logprob: -4.204911708831787
    4. ' for' → logprob: -6.204911708831787
    5. '       ' → logprob: -8.079911231994629
    6. '   ' → logprob: -8.204911231994629
    7. ' if' → logprob: -8.329911231994629
    8. '
' → logprob: -11.579911231994629
    9. '            
' → logprob: -12.579911231994629
    10. '          ' → logprob: -13.704911231994629

Token 1785: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.029750952497124672
    2. ' u' → logprob: -3.5297510623931885
    3. '   ' → logprob: -15.27975082397461
    4. '	u' → logprob: -15.52975082397461
    5. '(u' → logprob: -18.40475082397461
    6. '
' → logprob: -18.77975082397461
    7. '           ' → logprob: -19.40475082397461
    8. '    ' → logprob: -19.65475082397461
    9. ' ' → logprob: -19.90475082397461
    10. ' ' → logprob: -20.15475082397461

Token 1786: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03804516792297363
    2. '==' → logprob: -3.2880451679229736
    3. ')==' → logprob: -13.913044929504395
    4. '=' → logprob: -14.038044929504395
    5. ' =' → logprob: -14.413044929504395
    6. '==
' → logprob: -14.663044929504395
    7. ']==' → logprob: -15.413044929504395
    8. ' ==
' → logprob: -15.663044929504395
    9. ')' → logprob: -16.03804588317871
    10. ' ' → logprob: -16.03804588317871

Token 1787: ' end' (ID: 1268)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009295677882619202
    2. ' ' → logprob: -7.000929355621338
    3. 'end' → logprob: -11.125929832458496
    4. '   ' → logprob: -13.250929832458496
    5. ' end' → logprob: -13.375929832458496
    6. '
' → logprob: -17.75092887878418
    7. '  ' → logprob: -18.12592887878418
    8. '       ' → logprob: -19.50092887878418
    9. '```' → logprob: -19.87592887878418
    10. '           ' → logprob: -20.37592887878418

Token 1788: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5261067152023315
    2. ':
' → logprob: -0.9011067152023315
    3. '               ' → logprob: -5.901106834411621
    4. '           ' → logprob: -8.651106834411621
    5. ':return' → logprob: -10.776106834411621
    6. ' :' → logprob: -11.401106834411621
    7. ' :
' → logprob: -11.526106834411621
    8. '):
' → logprob: -11.776106834411621
    9. ':
' → logprob: -12.901106834411621
    10. '              ' → logprob: -13.026106834411621

Token 1789: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.921253225300461e-05
    2. ' return' → logprob: -10.250069618225098
    3. '           ' → logprob: -11.000069618225098
    4. 'return' → logprob: -11.625069618225098
    5. '
' → logprob: -12.500069618225098
    6. '   ' → logprob: -13.375069618225098
    7. '                   ' → logprob: -14.000069618225098
    8. ':
' → logprob: -14.625069618225098
    9. '       ' → logprob: -14.875069618225098
    10. '              ' → logprob: -15.000069618225098

Token 1790: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.044058769941329956
    2. '               ' → logprob: -3.2940587997436523
    3. ' return' → logprob: -5.294058799743652
    4. '           ' → logprob: -7.044058799743652
    5. '   ' → logprob: -9.669058799743652
    6. '       ' → logprob: -10.919058799743652
    7. 'break' → logprob: -11.169058799743652
    8. '	return' → logprob: -11.919058799743652
    9. '{return' → logprob: -13.794058799743652
    10. '                   ' → logprob: -14.044058799743652

Token 1791: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.00014859484508633614
    2. ' cur' → logprob: -9.00014877319336
    3. 'dist' → logprob: -10.62514877319336
    4. '   ' → logprob: -14.62514877319336
    5. ' distances' → logprob: -14.75014877319336
    6. '	cur' → logprob: -17.25014877319336
    7. '               ' → logprob: -18.25014877319336
    8. '
' → logprob: -18.25014877319336
    9. 'curr' → logprob: -18.75014877319336
    10. '           ' → logprob: -19.12514877319336

Token 1792: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -1.8624639324116288e-06
    2. '_dist' → logprob: -13.500001907348633
    3. 'dist' → logprob: -16.375001907348633
    4. 'd' → logprob: -16.375001907348633
    5. '_distance' → logprob: -16.625001907348633
    6. ' distances' → logprob: -16.875001907348633
    7. 'Distances' → logprob: -17.000001907348633
    8. '
' → logprob: -18.250001907348633
    9. 'distance' → logprob: -18.875001907348633
    10. 'cur' → logprob: -19.000001907348633

Token 1793: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00016992862219922245
    2. '<|end|>' → logprob: -9.12516975402832
    3. '       ' → logprob: -10.87516975402832
    4. '
' → logprob: -11.50016975402832
    5. '            
' → logprob: -11.62516975402832
    6. '<|end|>' → logprob: -11.62516975402832
    7. 'for' → logprob: -13.12516975402832
    8. '          ' → logprob: -13.12516975402832
    9. 'import' → logprob: -13.50016975402832
    10. '               ' → logprob: -13.62516975402832

Token 1794: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001295222609769553
    2. '       ' → logprob: -9.125129699707031
    3. '
' → logprob: -12.125129699707031
    4. '   ' → logprob: -12.625129699707031
    5. 'import' → logprob: -12.625129699707031
    6. '<|end|>' → logprob: -12.625129699707031
    7. '          ' → logprob: -13.750129699707031
    8. '```' → logprob: -13.875129699707031
    9. '<|end|>' → logprob: -14.500129699707031
    10. 'for' → logprob: -14.750129699707031

Token 1795: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.015335068106651306
    2. '           ' → logprob: -4.5153350830078125
    3. '       ' → logprob: -5.5153350830078125
    4. ' for' → logprob: -8.515335083007812
    5. '   ' → logprob: -9.890335083007812
    6. '
' → logprob: -13.390335083007812
    7. '	for' → logprob: -14.265335083007812
    8. '            
' → logprob: -15.890335083007812
    9. '```' → logprob: -16.140335083007812
    10. '        
' → logprob: -16.640335083007812

Token 1796: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.25612738728523254
    2. '(v' → logprob: -1.5061273574829102
    3. ' v' → logprob: -5.50612735748291
    4. ' (' → logprob: -9.00612735748291
    5. '(' → logprob: -12.63112735748291
    6. '	v' → logprob: -14.25612735748291
    7. '   ' → logprob: -14.63112735748291
    8. 'w' → logprob: -15.88112735748291
    9. 'to' → logprob: -15.88112735748291
    10. '[v' → logprob: -16.506128311157227

Token 1797: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016420595347881317
    2. ',v' → logprob: -4.266420364379883
    3. ',w' → logprob: -6.891420364379883
    4. ',d' → logprob: -7.391420364379883
    5. ' ,' → logprob: -7.516420364379883
    6. ',
' → logprob: -9.891420364379883
    7. 'w' → logprob: -12.391420364379883
    8. ',t' → logprob: -12.641420364379883
    9. '_,' → logprob: -12.766420364379883
    10. 'v' → logprob: -12.891420364379883

Token 1798: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.009425844065845013
    2. 'weight' → logprob: -4.759425640106201
    3. 'wt' → logprob: -8.25942611694336
    4. ' w' → logprob: -8.25942611694336
    5. 'cost' → logprob: -9.00942611694336
    6. 'dist' → logprob: -9.75942611694336
    7. 'wd' → logprob: -9.75942611694336
    8. 'd' → logprob: -10.00942611694336
    9. 'wv' → logprob: -12.75942611694336
    10. 'length' → logprob: -12.88442611694336

Token 1799: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009765179827809334
    2. 'in' → logprob: -4.634765148162842
    3. '	in' → logprob: -12.509765625
    4. 'w' → logprob: -12.884765625
    5. ' ' → logprob: -14.134765625
    6. '_in' → logprob: -14.884765625
    7. ' 
' → logprob: -15.134765625
    8. ',' → logprob: -15.134765625
    9. '            ' → logprob: -15.134765625
    10. '               ' → logprob: -15.759765625

Token 1800: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0069141685962677
    2. ' graph' → logprob: -5.006914138793945
    3. 'w' → logprob: -8.631914138793945
    4. ' w' → logprob: -11.881914138793945
    5. '(graph' → logprob: -11.881914138793945
    6. '	graph' → logprob: -13.006914138793945
    7. 'v' → logprob: -13.881914138793945
    8. '   ' → logprob: -14.006914138793945
    9. ' ' → logprob: -14.881914138793945
    10. 'weight' → logprob: -14.881914138793945

Token 1801: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.9891477227210999
    2. ' in' → logprob: -1.239147663116455
    3. ')' → logprob: -2.489147663116455
    4. ',' → logprob: -2.614147663116455
    5. '(u' → logprob: -3.489147663116455
    6. ',u' → logprob: -3.614147663116455
    7. 'u' → logprob: -4.364147663116455
    8. '<|end|>' → logprob: -4.364147663116455
    9. '):
' → logprob: -4.489147663116455
    10. ' ' → logprob: -4.614147663116455

Token 1802: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.14251327514648438
    2. '):' → logprob: -2.2675132751464844
    3. ')' → logprob: -3.7675132751464844
    4. ' in' → logprob: -6.142513275146484
    5. '               ' → logprob: -6.517513275146484
    6. ']:
' → logprob: -7.017513275146484
    7. '           ' → logprob: -7.517513275146484
    8. ':' → logprob: -8.392513275146484
    9. ':
' → logprob: -9.017513275146484
    10. ' ):
' → logprob: -9.142513275146484

Token 1803: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003110327525064349
    2. '```' → logprob: -8.875310897827148
    3. ' if' → logprob: -9.625310897827148
    4. 'if' → logprob: -11.125310897827148
    5. ',' → logprob: -11.250310897827148
    6. ' he' → logprob: -11.500310897827148
    7. '	           ' → logprob: -11.500310897827148
    8. 'he' → logprob: -11.500310897827148
    9. '<|end|>' → logprob: -11.875310897827148
    10. '                
' → logprob: -12.250310897827148

Token 1804: ' nd' (ID: 5914)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5012032985687256
    2. ' new' → logprob: -1.5012032985687256
    3. '               ' → logprob: -2.2512032985687256
    4. 'if' → logprob: -3.2512032985687256
    5. '                   ' → logprob: -4.501203536987305
    6. 'new' → logprob: -4.876203536987305
    7. ' nd' → logprob: -5.376203536987305
    8. '   ' → logprob: -7.126203536987305
    9. '           ' → logprob: -7.126203536987305
    10. ' alt' → logprob: -7.876203536987305

Token 1805: ' =' (ID: 314)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.20366056263446808
    2. 'istance' → logprob: -2.203660488128662
    3. ' =' → logprob: -3.203660488128662
    4. '=' → logprob: -3.453660488128662
    5. 'is' → logprob: -7.453660488128662
    6. '_' → logprob: -7.953660488128662
    7. '_dist' → logprob: -8.57866096496582
    8. 'st' → logprob: -9.32866096496582
    9. 'ists' → logprob: -9.45366096496582
    10. 'w' → logprob: -10.20366096496582

Token 1806: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0005530327325686812
    2. ' cur' → logprob: -7.500553131103516
    3. '               ' → logprob: -19.375553131103516
    4. '	cur' → logprob: -19.375553131103516
    5. 'dist' → logprob: -19.875553131103516
    6. '           ' → logprob: -20.625553131103516
    7. '(cur' → logprob: -20.625553131103516
    8. '                   ' → logprob: -21.125553131103516
    9. '_cur' → logprob: -21.750553131103516
    10. '   ' → logprob: -21.875553131103516

Token 1807: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -6.988221684878226e-06
    2. '_dist' → logprob: -12.000006675720215
    3. '_cur' → logprob: -14.750006675720215
    4. 'cur' → logprob: -15.250006675720215
    5. ' distances' → logprob: -17.00000762939453
    6. '_distance' → logprob: -17.00000762939453
    7. '_u' → logprob: -17.25000762939453
    8. 'd' → logprob: -18.37500762939453
    9. '_v' → logprob: -19.00000762939453
    10. ' cur' → logprob: -19.12500762939453

Token 1808: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20142142474651337
    2. '+' → logprob: -1.7014213800430298
    3. '+w' → logprob: -12.076421737670898
    4. '+d' → logprob: -14.201421737670898
    5. ' ' → logprob: -14.576421737670898
    6. ' plus' → logprob: -15.326421737670898
    7. '+c' → logprob: -15.451421737670898
    8. '＋' → logprob: -15.576421737670898
    9. '+t' → logprob: -15.701421737670898
    10. '+
' → logprob: -15.826421737670898

Token 1809: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.004078401252627373
    2. ' w' → logprob: -5.504078388214111
    3. '   ' → logprob: -21.254077911376953
    4. '	w' → logprob: -21.629077911376953
    5. ' ' → logprob: -22.629077911376953
    6. '    ' → logprob: -22.754077911376953
    7. '  ' → logprob: -24.379077911376953
    8. '               ' → logprob: -24.504077911376953
    9. ''w' → logprob: -24.504077911376953
    10. ' ' → logprob: -24.754077911376953

Token 1810: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01911386102437973
    2. '<|end|>' → logprob: -4.644114017486572
    3. '                   ' → logprob: -5.019114017486572
    4. '                ' → logprob: -7.769114017486572
    5. '           ' → logprob: -8.019113540649414
    6. ' if' → logprob: -8.269113540649414
    7. '              ' → logprob: -8.269113540649414
    8. ')' → logprob: -8.769113540649414
    9. '
' → logprob: -8.769113540649414
    10. '<|end|>' → logprob: -8.769113540649414

Token 1811: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.0020742492051795e-05
    2. '<|end|>' → logprob: -11.125049591064453
    3. '                   ' → logprob: -11.750049591064453
    4. '              ' → logprob: -11.875049591064453
    5. '                ' → logprob: -12.250049591064453
    6. ' if' → logprob: -12.500049591064453
    7. '                               ' → logprob: -12.625049591064453
    8. '			' → logprob: -12.875049591064453
    9. '           ' → logprob: -13.125049591064453
    10. '             ' → logprob: -14.250049591064453

Token 1812: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4055112898349762
    2. ' if' → logprob: -1.2805112600326538
    3. 'if' (adapté à ' if') → logprob: -2.9055113792419434
    4. '                   ' → logprob: -7.655511379241943
    5. '                ' → logprob: -8.655510902404785
    6. '           ' → logprob: -10.905510902404785
    7. '                       ' → logprob: -11.280510902404785
    8. '   ' → logprob: -11.655510902404785
    9. '                           ' → logprob: -11.780510902404785
    10. '              ' → logprob: -11.780510902404785

Token 1813: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.02983633615076542
    2. ' nd' → logprob: -3.529836416244507
    3. 'dist' → logprob: -9.654836654663086
    4. ' distances' → logprob: -11.029836654663086
    5. '(nd' → logprob: -13.029836654663086
    6. '   ' → logprob: -14.154836654663086
    7. 'ndi' → logprob: -14.654836654663086
    8. 'nde' → logprob: -14.779836654663086
    9. 'ndl' → logprob: -15.279836654663086
    10. ' dist' → logprob: -15.654836654663086

Token 1814: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.05509801581501961
    2. '<' → logprob: -2.930098056793213
    3. '<|end|>' → logprob: -9.180097579956055
    4. '[' → logprob: -9.805097579956055
    5. '<n' → logprob: -11.305097579956055
    6. '<v' → logprob: -11.930097579956055
    7. ' ' → logprob: -12.680097579956055
    8. ' ' → logprob: -12.805097579956055
    9. '<th' → logprob: -12.930097579956055
    10. '<ll' → logprob: -13.055097579956055

Token 1815: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0009126556105911732
    2. ' distances' → logprob: -7.000912666320801
    3. 'distance' → logprob: -14.6259126663208
    4. ' dist' → logprob: -14.6259126663208
    5. '   ' → logprob: -16.875911712646484
    6. '(dist' → logprob: -17.375911712646484
    7. '	dist' → logprob: -17.500911712646484
    8. '               ' → logprob: -18.000911712646484
    9. '           ' → logprob: -18.250911712646484
    10. '_dist' → logprob: -18.625911712646484

Token 1816: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9361264946837764e-07
    2. 'v' → logprob: -16.5
    3. '[u' → logprob: -19.375
    4. '[
' → logprob: -21.25
    5. '(v' → logprob: -21.5
    6. '   ' → logprob: -22.125
    7. '```' → logprob: -22.625
    8. '[' → logprob: -22.75
    9. '[w' → logprob: -22.875
    10. ' [' → logprob: -22.875

Token 1817: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4623633623123169
    2. ':' → logprob: -1.962363362312317
    3. '[v' → logprob: -2.5873632431030273
    4. '):
' → logprob: -2.7123632431030273
    5. '               ' → logprob: -3.3373632431030273
    6. ']:
' → logprob: -3.9623632431030273
    7. '                   ' → logprob: -4.087363243103027
    8. '[' → logprob: -4.712363243103027
    9. '           ' → logprob: -6.212363243103027
    10. '):' → logprob: -6.462363243103027

Token 1818: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1150597408413887
    2. 'dist' → logprob: -2.2400598526000977
    3. '               ' → logprob: -6.740059852600098
    4. ' distances' → logprob: -7.615059852600098
    5. ':
' → logprob: -9.115059852600098
    6. 'v' → logprob: -9.115059852600098
    7. '[v' → logprob: -9.115059852600098
    8. '                       ' → logprob: -9.490059852600098
    9. '[' → logprob: -9.865059852600098
    10. '   ' → logprob: -10.240059852600098

Token 1819: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.25335776805877686
    2. ' distances' → logprob: -1.5033577680587769
    3. '                   ' → logprob: -6.628357887268066
    4. '                       ' → logprob: -10.378357887268066
    5. '               ' → logprob: -10.628357887268066
    6. 'distance' → logprob: -10.753357887268066
    7. ' dist' → logprob: -11.503357887268066
    8. '                           ' → logprob: -12.378357887268066
    9. '                    ' → logprob: -12.503357887268066
    10. '   ' → logprob: -12.753357887268066

Token 1820: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -6.704273118884885e-07
    2. '                   ' → logprob: -15.000000953674316
    3. 'v' → logprob: -15.250000953674316
    4. '[' → logprob: -17.625
    5. '[
' → logprob: -17.75
    6. '[u' → logprob: -18.375
    7. '
' → logprob: -18.625
    8. '	v' → logprob: -18.875
    9. '```' → logprob: -18.875
    10. '=v' → logprob: -19.25

Token 1821: ']' (ID: 60)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.297462171758525e-05
    2. '                   ' → logprob: -10.875033378601074
    3. '=' → logprob: -12.250033378601074
    4. ']' → logprob: -12.375033378601074
    5. '=v' → logprob: -13.875033378601074
    6. 'v' → logprob: -14.125033378601074
    7. ' =' → logprob: -14.375033378601074
    8. '               ' → logprob: -14.500033378601074
    9. '][' → logprob: -14.750033378601074
    10. '[' → logprob: -14.875033378601074

Token 1822: ' =' (ID: 314)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.5861724831629544e-05
    2. '=' → logprob: -9.875056266784668
    3. '=v' → logprob: -13.125056266784668
    4. '                   ' → logprob: -13.750056266784668
    5. 'v' → logprob: -14.750056266784668
    6. '[' → logprob: -15.000056266784668
    7. '[u' → logprob: -15.000056266784668
    8. ' =' → logprob: -16.25005531311035
    9. '=
' → logprob: -17.50005531311035
    10. '[
' → logprob: -17.87505531311035

Token 1823: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.00861669983714819
    2. ' nd' → logprob: -4.758616924285889
    3. '(nd' → logprob: -13.13361644744873
    4. '                   ' → logprob: -16.258617401123047
    5. '_nd' → logprob: -16.883617401123047
    6. '
' → logprob: -17.508617401123047
    7. '               ' → logprob: -17.758617401123047
    8. '.nd' → logprob: -18.133617401123047
    9. 'ndl' → logprob: -18.133617401123047
    10. 'nb' → logprob: -18.508617401123047

Token 1824: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0002637199067976326
    2. '               ' → logprob: -9.250264167785645
    3. '                       ' → logprob: -9.875264167785645
    4. 'he' → logprob: -10.000264167785645
    5. '                    ' → logprob: -10.750264167785645
    6. '           ' → logprob: -11.000264167785645
    7. '                  ' → logprob: -11.875264167785645
    8. ',' → logprob: -11.875264167785645
    9. ' he' → logprob: -12.125264167785645
    10. '       ' → logprob: -12.875264167785645

Token 1825: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -8.780830830801278e-05
    2. 'he' → logprob: -9.50008773803711
    3. '               ' → logprob: -11.87508773803711
    4. ' he' → logprob: -13.25008773803711
    5. '           ' → logprob: -13.25008773803711
    6. '                  ' → logprob: -14.00008773803711
    7. '                    ' → logprob: -14.37508773803711
    8. '                       ' → logprob: -14.75008773803711
    9. '       ' → logprob: -15.75008773803711
    10. '                 ' → logprob: -16.00008773803711

Token 1826: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -0.00016325322212651372
    2. ' he' → logprob: -8.750163078308105
    3. '                   ' → logprob: -12.250163078308105
    4. '   ' → logprob: -17.250164031982422
    5. '               ' → logprob: -18.250164031982422
    6. '           ' → logprob: -18.375164031982422
    7. 'heap' → logprob: -18.625164031982422
    8. '                           ' → logprob: -18.750164031982422
    9. '                       ' → logprob: -19.250164031982422
    10. '```' → logprob: -20.125164031982422

Token 1827: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -4.723352049040841e-06
    2. 'ap' → logprob: -12.500004768371582
    3. 'pp' → logprob: -14.125004768371582
    4. '```' → logprob: -16.625003814697266
    5. ' app' → logprob: -17.625003814697266
    6. 'a' → logprob: -18.250003814697266
    7. 'push' → logprob: -19.375003814697266
    8. 'ап' → logprob: -20.250003814697266
    9. '(app' → logprob: -20.750003814697266
    10. 'apput' → logprob: -20.875003814697266

Token 1828: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.011946523562073708
    2. 'push' → logprob: -4.511946678161621
    3. 'sh' → logprob: -7.261946678161621
    4. 'pp' → logprob: -8.886946678161621
    5. 'p' → logprob: -10.136946678161621
    6. '_push' → logprob: -12.136946678161621
    7. 'Push' → logprob: -12.261946678161621
    8. 'app' → logprob: -13.136946678161621
    9. 'op' → logprob: -13.136946678161621
    10. '```' → logprob: -13.261946678161621

Token 1829: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -3.128163257315464e-07
    2. 'heap' → logprob: -15.625
    3. ' (' → logprob: -16.125
    4. '(' → logprob: -17.0
    5. '(queue' → logprob: -19.875
    6. '```' → logprob: -19.875
    7. ' heap' → logprob: -20.625
    8. '(kernel' → logprob: -20.625
    9. '(graph' → logprob: -20.625
    10. '(stack' → logprob: -21.0

Token 1830: ',' (ID: 11)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(heap' → logprob: -3.547789674485102e-05
    2. '(' → logprob: -10.375035285949707
    3. ' (' → logprob: -12.625035285949707
    4. 'heap' → logprob: -15.000035285949707
    5. '((' → logprob: -15.250035285949707
    6. '(
' → logprob: -16.250036239624023
    7. '(h' → logprob: -16.375036239624023
    8. '(graph' → logprob: -16.750036239624023
    9. '   ' → logprob: -17.250036239624023
    10. '```' → logprob: -17.500036239624023

Token 1831: ' (' (ID: 350)
  Prédit: '(nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -0.08515185862779617
    2. '(' → logprob: -3.0851519107818604
    3. ' (' → logprob: -3.3351519107818604
    4. '(n' → logprob: -8.585151672363281
    5. '(v' → logprob: -9.585151672363281
    6. '(heap' → logprob: -11.710151672363281
    7. '(ns' → logprob: -12.085151672363281
    8. '   ' → logprob: -12.585151672363281
    9. '(nb' → logprob: -12.710151672363281
    10. '(dist' → logprob: -12.710151672363281

Token 1832: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.001159504521638155
    2. ' nd' → logprob: -6.87615966796875
    3. '(nd' → logprob: -9.12615966796875
    4. '                   ' → logprob: -11.25115966796875
    5. '               ' → logprob: -13.50115966796875
    6. '
' → logprob: -13.75115966796875
    7. '_nd' → logprob: -14.25115966796875
    8. '                       ' → logprob: -15.12615966796875
    9. '                           ' → logprob: -15.37615966796875
    10. '(' → logprob: -15.50115966796875

Token 1833: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006087934598326683
    2. ',v' → logprob: -5.131087779998779
    3. ' ,' → logprob: -9.381088256835938
    4. 'v' → logprob: -9.756088256835938
    5. '                   ' → logprob: -11.381088256835938
    6. ',
' → logprob: -12.631088256835938
    7. ' v' → logprob: -14.006088256835938
    8. '[v' → logprob: -15.006088256835938
    9. '[' → logprob: -15.506088256835938
    10. '               ' → logprob: -15.881088256835938

Token 1834: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -8.315936429426074e-05
    2. '))
' → logprob: -9.500082969665527
    3. ' ))' → logprob: -12.000082969665527
    4. ')' → logprob: -14.000082969665527
    5. '                   ' → logprob: -14.250082969665527
    6. ')))' → logprob: -15.625082969665527
    7. '               ' → logprob: -16.000083923339844
    8. '))

' → logprob: -16.625083923339844
    9. '   ' → logprob: -16.875083923339844
    10. '));' → logprob: -17.125083923339844

Token 1835: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2837964594364166
    2. ')' → logprob: -2.033796548843384
    3. '       ' → logprob: -3.283796548843384
    4. '```' → logprob: -3.408796548843384
    5. '                   ' → logprob: -3.908796548843384
    6. '<|end|>' → logprob: -4.283796310424805
    7. '               ' → logprob: -5.658796310424805
    8. 'return' → logprob: -5.908796310424805
    9. '                    
' → logprob: -6.658796310424805
    10. '           ' → logprob: -7.033796310424805

Token 1836: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0657975822687149
    2. '   ' → logprob: -2.8157975673675537
    3. ' return' → logprob: -5.690797805786133
    4. '
' → logprob: -8.565797805786133
    5. '```' → logprob: -8.565797805786133
    6. '	return' → logprob: -11.315797805786133
    7. '       ' → logprob: -11.690797805786133
    8. ' ' → logprob: -11.690797805786133
    9. '    
' → logprob: -11.815797805786133
    10. ')' → logprob: -11.940797805786133

Token 1837: ' distances' (ID: 48294)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0001681405701674521
    2. 'dist' → logprob: -9.250167846679688
    3. ' math' → logprob: -9.750167846679688
    4. 'float' → logprob: -11.500167846679688
    5. 'None' → logprob: -12.625167846679688
    6. ' distances' → logprob: -15.500167846679688
    7. '   ' → logprob: -16.250167846679688
    8. '(math' → logprob: -18.125167846679688
    9. 'Math' → logprob: -18.750167846679688
    10. ' None' → logprob: -18.750167846679688

Token 1838: '[end' (ID: 125653)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1839: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4881879400927573e-05
    2. '   ' → logprob: -10.375035285949707
    3. '}' → logprob: -13.250035285949707
    4. '<|end|>' → logprob: -14.125035285949707
    5. ')
' → logprob: -14.375035285949707
    6. ']' → logprob: -15.500035285949707
    7. ' )' → logprob: -16.00003433227539
    8. ')return' → logprob: -16.62503433227539
    9. '       ' → logprob: -16.75003433227539
    10. ')}' → logprob: -17.00003433227539

Token 1840: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6224154233932495
    2. 'return' → logprob: -1.2474154233932495
    3. '   ' → logprob: -1.9974154233932495
    4. '```' → logprob: -3.872415542602539
    5. 'distance' → logprob: -5.122415542602539
    6. ' return' → logprob: -5.622415542602539
    7. '    
' → logprob: -5.622415542602539
    8. ' result' → logprob: -6.372415542602539
    9. '
' → logprob: -6.497415542602539
    10. 'dist' → logprob: -7.122415542602539

Token 1841: ' ans' (ID: 3345)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1737324744462967
    2. '   ' → logprob: -2.4237325191497803
    3. 'result' → logprob: -2.6737325191497803
    4. 'distance' → logprob: -7.048732280731201
    5. ' return' → logprob: -8.04873275756836
    6. 'res' → logprob: -8.42373275756836
    7. 'dist' → logprob: -8.67373275756836
    8. '```' → logprob: -8.67373275756836
    9. 'answer' → logprob: -9.67373275756836
    10. 'ret' → logprob: -10.54873275756836

Token 1842: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2812131643295288
    2. ' =' → logprob: -1.4062131643295288
    3. '   ' → logprob: -10.28121280670166
    4. '_' → logprob: -10.78121280670166
    5. ')' → logprob: -12.90621280670166
    6. '[' → logprob: -14.03121280670166
    7. ',' → logprob: -14.28121280670166
    8. '_=' → logprob: -14.28121280670166
    9. ' =
' → logprob: -14.65621280670166
    10. '[:]' → logprob: -14.90621280670166

Token 1843: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0019687197636812925
    2. ' d' → logprob: -6.251968860626221
    3. 'dist' → logprob: -10.126968383789062
    4. ' dist' → logprob: -16.376968383789062
    5. '   ' → logprob: -16.876968383789062
    6. 'round' → logprob: -18.001968383789062
    7. 'distance' → logprob: -18.501968383789062
    8. ' ' → logprob: -18.751968383789062
    9. 'math' → logprob: -18.751968383789062
    10. '	d' → logprob: -18.751968383789062

Token 1844: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.0009115827269852161
    2. 'ijk' → logprob: -7.250911712646484
    3. 'ist' → logprob: -8.750911712646484
    4. 'st' → logprob: -11.375911712646484
    5. 'jk' → logprob: -11.750911712646484
    6. 'ists' → logprob: -11.875911712646484
    7. 'ij' → logprob: -12.000911712646484
    8. 'jik' → logprob: -12.375911712646484
    9. 'istance' → logprob: -13.375911712646484
    10. 'j' → logprob: -13.500911712646484

Token 1845: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.2200749754119897e-06
    2. '0' → logprob: -13.500001907348633
    3. ' (' → logprob: -14.375001907348633
    4. '(
' → logprob: -15.750001907348633
    5. '<|end|>' → logprob: -18.375001907348633
    6. '((' → logprob: -18.500001907348633
    7. '```' → logprob: -19.250001907348633
    8. '(

' → logprob: -19.875001907348633
    9. '\(' → logprob: -20.500001907348633
    10. ')(' → logprob: -20.625001907348633

Token 1846: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '(' → logprob: -18.875
    4. ')' → logprob: -19.0
    5. '۰' → logprob: -19.25
    6. '```' → logprob: -20.125
    7. '０' → logprob: -21.0625
    8. '1' → logprob: -21.1875
    9. '०' → logprob: -21.6875
    10. '
' → logprob: -21.75

Token 1847: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1008713702030946e-06
    2. ' ,' → logprob: -13.375001907348633
    3. '1' → logprob: -15.125001907348633
    4. ',
' → logprob: -15.500001907348633
    5. '   ' → logprob: -19.875001907348633
    6. '0' → logprob: -20.000001907348633
    7. '2' → logprob: -21.375001907348633
    8. '‌,' → logprob: -21.375001907348633
    9. '，' → logprob: -21.875001907348633
    10. '(' → logprob: -22.250001907348633

Token 1848: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '   ' → logprob: -19.25
    4. '```' → logprob: -22.125
    5. '１' → logprob: -23.375
    6. '۱' → logprob: -23.5
    7. '
' → logprob: -24.125
    8. '  ' → logprob: -24.375
    9. '       ' → logprob: -24.5
    10. ')' → logprob: -24.5

Token 1849: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015872348740231246
    2. ')
' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.375158309936523
    4. ' )' → logprob: -16.625158309936523
    5. ')

' → logprob: -18.625158309936523
    6. ')
' → logprob: -19.500158309936523
    7. '))' → logprob: -19.500158309936523
    8. ')return' → logprob: -19.500158309936523
    9. ')#' → logprob: -20.125158309936523
    10. '),' → logprob: -20.500158309936523

Token 1850: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052173737436532974
    2. 'return' → logprob: -3.0521738529205322
    3. '```' → logprob: -6.427173614501953
    4. '
' → logprob: -6.802173614501953
    5. ' return' → logprob: -7.552173614501953
    6. 'if' → logprob: -8.302173614501953
    7. '	return' → logprob: -10.552173614501953
    8. '    
' → logprob: -10.552173614501953
    9. ' if' → logprob: -11.177173614501953
    10. '<|end|>' → logprob: -13.052173614501953

Token 1851: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16093793511390686
    2. 'return' (adapté à ' return') → logprob: -1.9109379053115845
    3. '
' → logprob: -7.910937786102295
    4. ' return' → logprob: -8.660938262939453
    5. '```' → logprob: -8.910938262939453
    6. 'if' → logprob: -10.660938262939453
    7. '	return' → logprob: -11.535938262939453
    8. 'print' → logprob: -12.785938262939453
    9. '    
' → logprob: -13.285938262939453
    10. '``' → logprob: -16.160938262939453

Token 1852: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.023246178403496742
    2. ' ans' → logprob: -3.7732462882995605
    3. '(ans' → logprob: -14.398245811462402
    4. '	ans' → logprob: -16.52324676513672
    5. 'round' → logprob: -18.39824676513672
    6. 'float' → logprob: -18.64824676513672
    7. '_ans' → logprob: -18.64824676513672
    8. '   ' → logprob: -18.77324676513672
    9. 'Ans' → logprob: -19.39824676513672
    10. 'ANS' → logprob: -19.52324676513672

Token 1853: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1854: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1855: ' Lecture' (ID: 106534)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1856: ' des' (ID: 731)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27971503138542175
    2. 'data' → logprob: -2.654715061187744
    3. 'import' → logprob: -3.529715061187744
    4. 'input' → logprob: -3.654715061187744
    5. ':' → logprob: -3.779715061187744
    6. 'n' → logprob: -3.904715061187744
    7. '```' → logprob: -4.154715061187744
    8. 'if' → logprob: -4.154715061187744
    9. 'for' → logprob: -4.279715061187744
    10. '()' → logprob: -4.904715061187744

Token 1857: ' données' (ID: 30580)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.27158981561660767
    2. 'stdin' → logprob: -2.396589756011963
    3. 'sys' → logprob: -2.646589756011963
    4. 'inputs' → logprob: -3.771589756011963
    5. 'data' → logprob: -3.896589756011963
    6. 'import' → logprob: -4.021589756011963
    7. 'lines' → logprob: -5.271589756011963
    8. '=sys' → logprob: -5.646589756011963
    9. 'def' → logprob: -7.396589756011963
    10. ' input' → logprob: -7.521589756011963

Token 1858: ' en' (ID: 469)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6804514527320862
    2. 'data' → logprob: -0.9304514527320862
    3. 'def' → logprob: -3.5554513931274414
    4. 'import' → logprob: -4.180451393127441
    5. 'for' → logprob: -4.305451393127441
    6. 'input' → logprob: -4.430451393127441
    7. 'dataset' → logprob: -4.430451393127441
    8. 'lines' → logprob: -4.930451393127441
    9. 'if' → logprob: -5.680451393127441
    10. '```' → logprob: -5.930451393127441

Token 1859: ' entrée' (ID: 95590)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.07707856595516205
    2. 'def' → logprob: -4.077078342437744
    3. 'python' → logprob: -4.452078342437744
    4. 'input' → logprob: -4.452078342437744
    5. 'entrée' → logprob: -4.452078342437744
    6. 'sys' → logprob: -4.577078342437744
    7. '#' → logprob: -6.327078342437744
    8. ' stdin' → logprob: -6.577078342437744
    9. '```' → logprob: -6.827078342437744
    10. 'put' → logprob: -6.827078342437744

Token 1860: ' et' (ID: 859)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7272276878356934
    2. 'data' → logprob: -0.7272276878356934
    3. 'def' → logprob: -4.352227687835693
    4. 'input' → logprob: -4.852227687835693
    5. 'for' → logprob: -5.852227687835693
    6. ' n' → logprob: -6.352227687835693
    7. '```' → logprob: -6.352227687835693
    8. ' data' → logprob: -6.602227687835693
    9. 'lines' → logprob: -6.602227687835693
    10. 'dataset' → logprob: -6.602227687835693

Token 1861: ' résolution' (ID: 147402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7203940153121948
    2. '#' → logprob: -1.4703940153121948
    3. 'rés' → logprob: -2.0953941345214844
    4. 'é' → logprob: -2.7203941345214844
    5. 'aff' → logprob: -3.2203941345214844
    6. 'ex' → logprob: -4.345394134521484
    7. 'dé' → logprob: -4.595394134521484
    8. ' traitement' → logprob: -5.095394134521484
    9. 'trait' → logprob: -5.345394134521484
    10. 'if' → logprob: -5.595394134521484

Token 1862: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15479852259159088
    2. 'n' → logprob: -2.9047985076904297
    3. 'for' → logprob: -2.9047985076904297
    4. 'data' → logprob: -3.7797985076904297
    5. 'if' → logprob: -5.02979850769043
    6. 't' → logprob: -6.77979850769043
    7. 'lines' → logprob: -6.90479850769043
    8. 'import' → logprob: -7.15479850769043
    9. '```' → logprob: -7.65479850769043
    10. 'input' → logprob: -7.77979850769043

Token 1863: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.46613723039627075
    2. 'if' → logprob: -1.466137170791626
    3. 'for' → logprob: -2.216137170791626
    4. 'data' → logprob: -4.341137409210205
    5. 'n' → logprob: -4.716137409210205
    6. 'input' → logprob: -5.716137409210205
    7. 't' → logprob: -5.716137409210205
    8. 'import' → logprob: -5.841137409210205
    9. 'num' → logprob: -8.091136932373047
    10. 'lines' → logprob: -8.341136932373047

Token 1864: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00016361083544325083
    2. ' main' → logprob: -8.750164031982422
    3. 'read' → logprob: -12.250164031982422
    4. 'input' → logprob: -15.625164031982422
    5. '	main' → logprob: -17.375164031982422
    6. 'parse' → logprob: -17.625164031982422
    7. '_main' → logprob: -18.000164031982422
    8. 'process' → logprob: -18.000164031982422
    9. '```' → logprob: -18.000164031982422
    10. '
' → logprob: -18.625164031982422

Token 1865: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01105984952300787
    2. '():
' → logprob: -4.511059761047363
    3. '()' → logprob: -12.386059761047363
    4. ' ():' → logprob: -12.511059761047363
    5. '():
' → logprob: -12.636059761047363
    6. '(argv' → logprob: -14.886059761047363
    7. '():

' → logprob: -14.886059761047363
    8. 'def' → logprob: -16.76106071472168
    9. '();' → logprob: -17.13606071472168
    10. '(' → logprob: -17.38606071472168

Token 1866: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12957759201526642
    2. 'import' → logprob: -2.12957763671875
    3. ' import' → logprob: -6.12957763671875
    4. '	import' → logprob: -8.50457763671875
    5. '```' → logprob: -9.00457763671875
    6. ' n' → logprob: -9.75457763671875
    7. 'n' → logprob: -9.87957763671875
    8. '    
' → logprob: -11.00457763671875
    9. ' lines' → logprob: -13.00457763671875
    10. '	n' → logprob: -13.12957763671875

Token 1867: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2749638557434082
    2. 'import' → logprob: -1.5249638557434082
    3. 'input' (adapté à ' input') → logprob: -5.274963855743408
    4. 'n' → logprob: -5.399963855743408
    5. ' import' → logprob: -5.524963855743408
    6. 'while' → logprob: -5.649963855743408
    7. ' n' → logprob: -6.274963855743408
    8. ' input' → logprob: -6.774963855743408
    9. 'for' → logprob: -7.024963855743408
    10. '```' → logprob: -7.524963855743408

Token 1868: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3533966541290283
    2. '_data' → logprob: -1.8533966541290283
    3. '_line' → logprob: -2.2283966541290283
    4. '_lines' → logprob: -3.6033966541290283
    5. 'data' → logprob: -6.103396415710449
    6. '_' → logprob: -6.103396415710449
    7. '=' → logprob: -7.978396415710449
    8. ' =' → logprob: -8.10339641571045
    9. '_str' → logprob: -8.47839641571045
    10. 's' → logprob: -8.47839641571045

Token 1869: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.10020710527896881
    2. ' sys' → logprob: -2.3502070903778076
    3. '	sys' → logprob: -15.600207328796387
    4. '=sys' → logprob: -15.850207328796387
    5. '(sys' → logprob: -16.35020637512207
    6. 'lambda' → logprob: -17.85020637512207
    7. 'input' → logprob: -19.85020637512207
    8. ' lambda' → logprob: -21.97520637512207
    9. '```' → logprob: -21.97520637512207
    10. '   ' → logprob: -22.22520637512207

Token 1870: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00016384923947043717
    2. 'stdin' → logprob: -8.750164031982422
    3. '.stdout' → logprob: -13.250164031982422
    4. '.readline' → logprob: -13.625164031982422
    5. '.' → logprob: -13.750164031982422
    6. '(stdin' → logprob: -14.625164031982422
    7. '.std' → logprob: -15.000164031982422
    8. '.argv' → logprob: -15.250164031982422
    9. ' stdin' → logprob: -15.750164031982422
    10. '
' → logprob: -17.000164031982422

Token 1871: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3533017039299011
    2. 'read' → logprob: -1.228301763534546
    3. '_read' → logprob: -5.728301525115967
    4. ' readline' → logprob: -6.728301525115967
    5. 'buffer' → logprob: -9.478302001953125
    6. '
' → logprob: -9.728302001953125
    7. '.readlines' → logprob: -9.978302001953125
    8. '.read' → logprob: -9.978302001953125
    9. 'readonly' → logprob: -9.978302001953125
    10. ' =' → logprob: -10.728302001953125

Token 1872: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00032151900813914835
    2. '()
' → logprob: -8.625321388244629
    3. '()' → logprob: -8.875321388244629
    4. '
' → logprob: -13.625321388244629
    5. '.split' → logprob: -15.250321388244629
    6. '()\' → logprob: -15.500321388244629
    7. ').' → logprob: -16.125322341918945
    8. '   ' → logprob: -16.250322341918945
    9. '()

' → logprob: -16.250322341918945
    10. 'split' → logprob: -16.375322341918945

Token 1873: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.4740840494632721
    2. 'split' → logprob: -0.9740840196609497
    3. 'rstrip' → logprob: -11.97408390045166
    4. ' split' → logprob: -14.97408390045166
    5. 'decode' → logprob: -15.09908390045166
    6. ' strip' → logprob: -15.97408390045166
    7. '(split' → logprob: -17.849084854125977
    8. 'replace' → logprob: -18.224084854125977
    9. '```' → logprob: -18.474084854125977
    10. '().' → logprob: -20.099084854125977

Token 1874: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0030032580252736807
    2. '()' → logprob: -5.878003120422363
    3. '()
' → logprob: -8.628003120422363
    4. '.split' → logprob: -11.628003120422363
    5. '()\' → logprob: -11.753003120422363
    6. 'split' → logprob: -14.003003120422363
    7. '()).' → logprob: -15.253003120422363
    8. '
' → logprob: -15.378003120422363
    9. '()

' → logprob: -15.503003120422363
    10. '())' → logprob: -15.753003120422363

Token 1875: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -17.0
    3. '(split' → logprob: -19.125
    4. 'spl' → logprob: -21.375
    5. 'strip' → logprob: -22.125
    6. 'decode' → logprob: -22.375
    7. '_split' → logprob: -22.625
    8. '.split' → logprob: -23.5
    9. 'replace' → logprob: -23.625
    10. 'plit' → logprob: -24.25

Token 1876: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005268145352602005
    2. '('\' → logprob: -5.380268096923828
    3. 'lines' → logprob: -8.380268096923828
    4. '()\' → logprob: -8.755268096923828
    5. '('' → logprob: -9.005268096923828
    6. '()
' → logprob: -9.255268096923828
    7. '()[' → logprob: -10.880268096923828
    8. '(' → logprob: -11.880268096923828
    9. '()]' → logprob: -12.380268096923828
    10. '())' → logprob: -12.380268096923828

Token 1877: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6151012182235718
    2. '   ' → logprob: -1.2401012182235718
    3. 'n' → logprob: -2.3651013374328613
    4. 'idx' → logprob: -2.8651013374328613
    5. '```' → logprob: -4.615101337432861
    6. 'index' → logprob: -5.490101337432861
    7. 't' → logprob: -5.615101337432861
    8. ' i' → logprob: -7.490101337432861
    9. '    
' → logprob: -8.740100860595703
    10. '``' → logprob: -8.865100860595703

Token 1878: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8281537294387817
    2. 't' → logprob: -1.3281537294387817
    3. 'idx' (adapté à ' idx') → logprob: -1.3281537294387817
    4. '   ' → logprob: -3.828153610229492
    5. 'index' → logprob: -4.953153610229492
    6. 'pos' → logprob: -5.953153610229492
    7. 'T' → logprob: -6.828153610229492
    8. 'n' → logprob: -7.453153610229492
    9. 'ptr' → logprob: -10.453153610229492
    10. ' idx' → logprob: -10.578153610229492

Token 1879: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07533640414476395
    2. ' =' → logprob: -2.950336456298828
    3. '+=' → logprob: -4.200336456298828
    4. ' +=' → logprob: -5.450336456298828
    5. '_' → logprob: -7.825336456298828
    6. '   ' → logprob: -8.700336456298828
    7. '[' → logprob: -8.825336456298828
    8. '_=' → logprob: -10.325336456298828
    9. '_token' → logprob: -10.450336456298828
    10. ' ' → logprob: -10.700336456298828

Token 1880: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '1' → logprob: -19.250001907348633
    4. '   ' → logprob: -19.875001907348633
    5. '=' → logprob: -21.750001907348633
    6. '  ' → logprob: -22.875001907348633
    7. '۰' → logprob: -23.000001907348633
    8. 'int' → logprob: -23.500001907348633
    9. '    ' → logprob: -23.500001907348633
    10. '```' → logprob: -23.875001907348633

Token 1881: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. '1' → logprob: -15.125000953674316
    4. '2' → logprob: -20.750001907348633
    5. '   ' → logprob: -21.000001907348633
    6. 'int' → logprob: -21.375001907348633
    7. '=' → logprob: -21.625001907348633
    8. '[' → logprob: -22.000001907348633
    9. '  ' → logprob: -22.750001907348633
    10. '```' → logprob: -22.750001907348633

Token 1882: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0297107994556427
    2. 't' → logprob: -4.27971076965332
    3. 'n' → logprob: -4.65471076965332
    4. ' while' → logprob: -5.90471076965332
    5. '   ' → logprob: -6.02971076965332
    6. 'T' → logprob: -7.40471076965332
    7. 'num' → logprob: -10.02971076965332
    8. '
' → logprob: -10.27971076965332
    9. '	while' → logprob: -10.90471076965332
    10. ' t' → logprob: -11.15471076965332

Token 1883: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0037708666641265154
    2. 't' → logprob: -6.37877082824707
    3. ' while' → logprob: -6.87877082824707
    4. 'n' → logprob: -7.12877082824707
    5. '   ' → logprob: -8.50377082824707
    6. 'T' → logprob: -10.87877082824707
    7. '```' → logprob: -11.62877082824707
    8. 'num' → logprob: -13.12877082824707
    9. '	while' → logprob: -13.62877082824707
    10. ' t' → logprob: -14.00377082824707

Token 1884: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.26863905787467957
    2. 't' → logprob: -1.768639087677002
    3. 'T' → logprob: -2.893639087677002
    4. 'n' → logprob: -4.768639087677002
    5. ' while' → logprob: -7.393639087677002
    6. '   ' → logprob: -8.268638610839844
    7. 'num' → logprob: -9.018638610839844
    8. ' T' → logprob: -10.643638610839844
    9. ' t' → logprob: -10.643638610839844
    10. 'cases' → logprob: -10.768638610839844

Token 1885: ' True' (ID: 6432)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -8.470901229884475e-05
    2. ' idx' → logprob: -10.00008487701416
    3. 'True' → logprob: -10.25008487701416
    4. '   ' → logprob: -12.87508487701416
    5. ' True' → logprob: -14.12508487701416
    6. 'int' → logprob: -15.25008487701416
    7. '	idx' → logprob: -15.50008487701416
    8. '(idx' → logprob: -15.62508487701416
    9. 'len' → logprob: -18.000083923339844
    10. 'index' → logprob: -18.500083923339844

Token 1886: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28001669049263
    2. ':
' → logprob: -2.4050166606903076
    3. '   ' → logprob: -2.5300166606903076
    4. '       ' → logprob: -2.6550166606903076
    5. ',' → logprob: -5.905016899108887
    6. '=' → logprob: -8.530016899108887
    7. ' and' → logprob: -8.530016899108887
    8. '<|end|>' → logprob: -8.780016899108887
    9. 'and' → logprob: -9.280016899108887
    10. ' :' → logprob: -9.655016899108887

Token 1887: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6358014345169067
    2. 'if' → logprob: -1.0108014345169067
    3. '   ' → logprob: -2.385801315307617
    4. ' if' → logprob: -4.260801315307617
    5. ' n' → logprob: -8.010801315307617
    6. 'try' → logprob: -10.510801315307617
    7. 't' → logprob: -10.510801315307617
    8. '	if' → logprob: -11.510801315307617
    9. 'num' → logprob: -11.510801315307617
    10. '	n' → logprob: -11.635801315307617

Token 1888: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03120097704231739
    2. 'n' → logprob: -3.531200885772705
    3. ' if' → logprob: -6.906200885772705
    4. '   ' → logprob: -7.781200885772705
    5. '       ' → logprob: -10.781201362609863
    6. ' n' → logprob: -12.406201362609863
    7. '	if' → logprob: -12.531201362609863
    8. 't' → logprob: -14.656201362609863
    9. 'try' → logprob: -14.781201362609863
    10. ' ' → logprob: -15.906201362609863

Token 1889: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.0683535037969705e-05
    2. '   ' → logprob: -11.75001049041748
    3. ' idx' → logprob: -12.87501049041748
    4. '	idx' → logprob: -15.87501049041748
    5. '(idx' → logprob: -17.750011444091797
    6. 'index' → logprob: -17.750011444091797
    7. '_idx' → logprob: -18.000011444091797
    8. ' ' → logprob: -18.000011444091797
    9. '  ' → logprob: -18.125011444091797
    10. '       ' → logprob: -18.125011444091797

Token 1890: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.0043878634460270405
    2. '==' → logprob: -6.129387855529785
    3. ' >=' → logprob: -6.129387855529785
    4. ']>=' → logprob: -11.379387855529785
    5. ')>=' → logprob: -12.754387855529785
    6. ' ==' → logprob: -12.754387855529785
    7. '   ' → logprob: -13.379387855529785
    8. '=' → logprob: -13.629387855529785
    9. '+' → logprob: -14.254387855529785
    10. '≥' → logprob: -14.629387855529785

Token 1891: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -5.512236498361744e-07
    2. ' len' → logprob: -14.625000953674316
    3. '(len' → logprob: -18.625
    4. 'idx' → logprob: -19.375
    5. ',len' → logprob: -20.625
    6. '=len' → logprob: -20.625
    7. '	len' → logprob: -21.125
    8. '
' → logprob: -21.25
    9. '<len' → logprob: -21.25
    10. '[len' → logprob: -21.375

Token 1892: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2521445155143738
    2. '(input' → logprob: -1.5021445751190186
    3. ' input' → logprob: -8.502144813537598
    4. ' (' → logprob: -12.752144813537598
    5. '=input' → logprob: -13.502144813537598
    6. '<input' → logprob: -13.627144813537598
    7. ',input' → logprob: -13.752144813537598
    8. ')' → logprob: -13.752144813537598
    9. '   ' → logprob: -14.127144813537598
    10. '[input' → logprob: -14.252144813537598

Token 1893: '):
' (ID: 1883)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.04307272657752037
    2. 'or' → logprob: -3.2930727005004883
    3. ')' → logprob: -5.543072700500488
    4. ':' → logprob: -8.168072700500488
    5. '):
' → logprob: -8.293072700500488
    6. '):' → logprob: -8.418072700500488
    7. ':
' → logprob: -8.543072700500488
    8. '   ' → logprob: -9.793072700500488
    9. '       ' → logprob: -10.418072700500488
    10. '	or' → logprob: -10.543072700500488

Token 1894: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004444243386387825
    2. '       ' → logprob: -5.504444122314453
    3. 'break' → logprob: -8.629444122314453
    4. ' break' → logprob: -9.629444122314453
    5. ':
' → logprob: -10.379444122314453
    6. '   ' → logprob: -10.754444122314453
    7. '		' → logprob: -11.129444122314453
    8. ':' → logprob: -11.504444122314453
    9. '	       ' → logprob: -11.504444122314453
    10. '
' → logprob: -12.254444122314453

Token 1895: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.034273236989974976
    2. '       ' → logprob: -3.534273147583008
    3. 'return' → logprob: -5.534273147583008
    4. ' break' → logprob: -8.159273147583008
    5. '           ' → logprob: -8.534273147583008
    6. '	break' → logprob: -9.659273147583008
    7. '   ' → logprob: -11.534273147583008
    8. '
' → logprob: -12.909273147583008
    9. '_break' → logprob: -13.409273147583008
    10. '```' → logprob: -13.534273147583008

Token 1896: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12057819962501526
    2. 'n' → logprob: -2.2455782890319824
    3. '
' → logprob: -5.745578289031982
    4. '        
' → logprob: -5.870578289031982
    5. ' n' → logprob: -7.120578289031982
    6. '   ' → logprob: -8.120577812194824
    7. 'num' → logprob: -9.120577812194824
    8. ',' → logprob: -9.495577812194824
    9. 'line' → logprob: -9.620577812194824
    10. 'if' → logprob: -9.870577812194824

Token 1897: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5497223734855652
    2. '   ' → logprob: -0.9247223734855652
    3. ' n' → logprob: -4.549722194671631
    4. '       ' → logprob: -4.674722194671631
    5. '    
' → logprob: -6.549722194671631
    6. '        
' → logprob: -6.674722194671631
    7. 'if' → logprob: -7.049722194671631
    8. '
' → logprob: -7.174722194671631
    9. 'num' → logprob: -7.549722194671631
    10. ' if' → logprob: -7.549722194671631

Token 1898: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.029569964855909348
    2. 'm' → logprob: -3.7795698642730713
    3. '   ' → logprob: -5.52957010269165
    4. 'k' → logprob: -6.77957010269165
    5. '       ' → logprob: -7.52957010269165
    6. 'num' → logprob: -7.90457010269165
    7. 't' → logprob: -8.779569625854492
    8. 'c' → logprob: -9.779569625854492
    9. 'count' → logprob: -10.154569625854492
    10. 'cnt' → logprob: -11.154569625854492

Token 1899: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07898981124162674
    2. ' =' → logprob: -2.5789897441864014
    3. '   ' → logprob: -9.45398998260498
    4. '=int' → logprob: -10.95398998260498
    5. '=
' → logprob: -13.45398998260498
    6. '    ' → logprob: -13.95398998260498
    7. '       ' → logprob: -14.95398998260498
    8. '=n' → logprob: -14.95398998260498
    9. ' =
' → logprob: -15.32898998260498
    10. ' ' → logprob: -15.32898998260498

Token 1900: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0031777136027812958
    2. ' int' → logprob: -5.753177642822266
    3. '(int' → logprob: -18.503177642822266
    4. '=int' → logprob: -18.753177642822266
    5. 'input' → logprob: -19.503177642822266
    6. '[int' → logprob: -19.878177642822266
    7. ' ' → logprob: -20.128177642822266
    8. '	int' → logprob: -20.253177642822266
    9. 'n' → logprob: -20.253177642822266
    10. '<int' → logprob: -20.628177642822266

Token 1901: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -3.619311974034645e-05
    2. 'input' → logprob: -10.250036239624023
    3. '(' → logprob: -14.125036239624023
    4. '(
' → logprob: -17.625036239624023
    5. ' (' → logprob: -17.625036239624023
    6. '=input' → logprob: -18.125036239624023
    7. ' input' → logprob: -18.375036239624023
    8. ',input' → logprob: -18.875036239624023
    9. '[input' → logprob: -19.875036239624023
    10. '<input' → logprob: -20.875036239624023

Token 1902: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.128163257315464e-07
    2. 'idx' → logprob: -15.375
    3. '	idx' → logprob: -18.0
    4. '[' → logprob: -18.75
    5. '   ' → logprob: -18.75
    6. ' idx' → logprob: -18.875
    7. ' [' → logprob: -19.25
    8. '[
' → logprob: -20.25
    9. ')' → logprob: -20.375
    10. '
' → logprob: -20.625

Token 1903: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.3538661599159241
    2. ')
' → logprob: -2.1038661003112793
    3. '])' → logprob: -2.1038661003112793
    4. ']);' → logprob: -3.4788661003112793
    5. ')' → logprob: -3.8538661003112793
    6. ');' → logprob: -6.228866100311279
    7. ']' → logprob: -11.353866577148438
    8. ']);
' → logprob: -11.853866577148438
    9. ']
' → logprob: -11.853866577148438
    10. '];' → logprob: -12.603866577148438

Token 1904: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0174537505954504
    2. 'idx' → logprob: -4.767453670501709
    3. '[idx' → logprob: -5.142453670501709
    4. '```' → logprob: -6.892453670501709
    5. '	idx' → logprob: -7.642453670501709
    6. ' idx' → logprob: -8.017454147338867
    7. '(idx' → logprob: -8.392454147338867
    8. ',' → logprob: -8.392454147338867
    9. '   ' → logprob: -8.892454147338867
    10. '\' → logprob: -9.267454147338867

Token 1905: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.011498457752168179
    2. ' idx' → logprob: -4.51149845123291
    3. '[idx' → logprob: -8.63649845123291
    4. '	idx' → logprob: -8.76149845123291
    5. '(idx' → logprob: -9.26149845123291
    6. '_idx' → logprob: -11.38649845123291
    7. '\n' → logprob: -12.26149845123291
    8. '```' → logprob: -13.01149845123291
    9. '.idx' → logprob: -14.01149845123291
    10. '
' → logprob: -14.26149845123291

Token 1906: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -9.698698704596609e-05
    2. ' +=' → logprob: -9.250097274780273
    3. '=' → logprob: -14.625097274780273
    4. ']+=' → logprob: -15.125097274780273
    5. '+' → logprob: -17.125097274780273
    6. '```' → logprob: -19.125097274780273
    7. '+="' → logprob: -19.375097274780273
    8. '   ' → logprob: -20.625097274780273
    9. '+='' → logprob: -21.125097274780273
    10. '+=(' → logprob: -21.250097274780273

Token 1907: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '
' → logprob: -23.5
    4. '１' → logprob: -24.25
    5. '   ' → logprob: -24.5
    6. '```' → logprob: -25.625
    7. '۱' → logprob: -26.125
    8. '+' → logprob: -26.75
    9. '১' → logprob: -26.875
    10. ' ' → logprob: -27.125

Token 1908: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.875
    3. '0' → logprob: -22.5
    4. '
' → logprob: -23.875
    5. '```' → logprob: -24.0
    6. '１' → logprob: -24.25
    7. '   ' → logprob: -24.875
    8. '۱' → logprob: -25.375
    9. '+' → logprob: -25.5
    10. '১' → logprob: -25.625

Token 1909: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5038794279098511
    2. '       ' → logprob: -1.128879427909851
    3. ' if' → logprob: -2.6288795471191406
    4. '   ' → logprob: -8.75387954711914
    5. '	if' → logprob: -10.37887954711914
    6. '<|end|>' → logprob: -10.37887954711914
    7. '
' → logprob: -11.00387954711914
    8. '        
' → logprob: -11.62887954711914
    9. 'If' → logprob: -12.37887954711914
    10. '	' → logprob: -13.12887954711914

Token 1910: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06091200187802315
    2. '       ' → logprob: -3.0609118938446045
    3. ' if' → logprob: -4.435912132263184
    4. '   ' → logprob: -8.185912132263184
    5. '	if' → logprob: -9.560912132263184
    6. '<|end|>' → logprob: -10.560912132263184
    7. '```' → logprob: -10.935912132263184
    8. '	' → logprob: -13.060912132263184
    9. 'If' → logprob: -13.310912132263184
    10. '        
' → logprob: -13.560912132263184

Token 1911: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011102883145213127
    2. 'cir' → logprob: -4.511102676391602
    3. 'dataset' → logprob: -11.136102676391602
    4. '   ' → logprob: -11.136102676391602
    5. ' if' → logprob: -11.511102676391602
    6. 'circ' → logprob: -11.886102676391602
    7. 'circle' → logprob: -12.011102676391602
    8. '       ' → logprob: -14.136102676391602
    9. 'break' → logprob: -14.386102676391602
    10. '#' → logprob: -14.636102676391602

Token 1912: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.547789674485102e-05
    2. ' n' → logprob: -10.250035285949707
    3. '	n' → logprob: -17.750036239624023
    4. '0' → logprob: -18.375036239624023
    5. 'n't' → logprob: -20.250036239624023
    6. '(n' → logprob: -20.625036239624023
    7. '   ' → logprob: -21.125036239624023
    8. '_n' → logprob: -21.375036239624023
    9. 'not' → logprob: -21.375036239624023
    10. ')n' → logprob: -21.625036239624023

Token 1913: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4741254150867462
    2. '==' → logprob: -0.9741253852844238
    3. '=' → logprob: -10.474125862121582
    4. '<=' → logprob: -11.974125862121582
    5. ' <=' → logprob: -12.599125862121582
    6. '==
' → logprob: -12.974125862121582
    7. '0' → logprob: -13.099125862121582
    8. ')==' → logprob: -13.474125862121582
    9. '   ' → logprob: -13.599125862121582
    10. '()==' → logprob: -14.224125862121582

Token 1914: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '۰' → logprob: -24.875
    4. '00' → logprob: -25.875
    5. '=' → logprob: -26.125
    6. '   ' → logprob: -26.625
    7. '000' → logprob: -26.625
    8. '-' → logprob: -27.0
    9. '٠' → logprob: -27.0
    10. '
' → logprob: -27.5

Token 1915: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '-' → logprob: -18.375
    3. ' ' → logprob: -18.625
    4. '۰' → logprob: -22.375
    5. '
' → logprob: -23.125
    6. '=' → logprob: -23.625
    7. '٠' → logprob: -24.25
    8. '```' → logprob: -24.25
    9. '00' → logprob: -24.75
    10. '   ' → logprob: -25.375

Token 1916: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5793496966362
    2. ':
' → logprob: -0.8293496966362
    3. '           ' → logprob: -5.954349517822266
    4. '       ' → logprob: -7.204349517822266
    5. '   ' → logprob: -10.204349517822266
    6. ':return' → logprob: -11.079349517822266
    7. ':
' → logprob: -13.079349517822266
    8. '	break' → logprob: -13.204349517822266
    9. '):
' → logprob: -13.579349517822266
    10. ' break' → logprob: -13.579349517822266

Token 1917: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06571006774902344
    2. '           ' → logprob: -2.9407100677490234
    3. '   ' → logprob: -4.565710067749023
    4. '	break' → logprob: -9.315710067749023
    5. '	' → logprob: -9.565710067749023
    6. ' break' → logprob: -9.690710067749023
    7. 'break' → logprob: -9.690710067749023
    8. '		' → logprob: -10.565710067749023
    9. '	   ' → logprob: -10.940710067749023
    10. '     ' → logprob: -11.815710067749023

Token 1918: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0008589350618422031
    2. 'return' → logprob: -7.500858783721924
    3. ' break' → logprob: -8.250859260559082
    4. '	break' → logprob: -10.500859260559082
    5. '           ' → logprob: -11.250859260559082
    6. '       ' → logprob: -12.500859260559082
    7. '               ' → logprob: -14.875859260559082
    8. '_break' → logprob: -16.500858306884766
    9. ' return' → logprob: -16.750858306884766
    10. '   ' → logprob: -17.125858306884766

Token 1919: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1865394413471222
    2. '       ' → logprob: -2.1865394115448
    3. 'cir' → logprob: -3.0615394115448
    4. 'dataset' → logprob: -5.311539649963379
    5. '	c' → logprob: -6.061539649963379
    6. 'datasets' → logprob: -6.811539649963379
    7. 'c' → logprob: -7.561539649963379
    8. '        
' → logprob: -7.561539649963379
    9. '```' → logprob: -7.811539649963379
    10. '    
' → logprob: -7.811539649963379

Token 1920: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17990416288375854
    2. 'cir' → logprob: -2.1799042224884033
    3. 'dataset' → logprob: -3.0549042224884033
    4. 'data' → logprob: -6.304903984069824
    5. '```' → logprob: -6.929903984069824
    6. '	c' → logprob: -7.804903984069824
    7. '       ' → logprob: -8.179903984069824
    8. ' dataset' → logprob: -8.179903984069824
    9. ' circles' → logprob: -8.929903984069824
    10. '    
' → logprob: -8.929903984069824

Token 1921: ' dataset' (ID: 20830)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.007219092454761267
    2. 'dataset' (adapté à ' dataset') → logprob: -5.007219314575195
    3. '   ' → logprob: -8.132219314575195
    4. '       ' → logprob: -9.632219314575195
    5. 'data' → logprob: -9.757219314575195
    6. ' circles' → logprob: -9.757219314575195
    7. 'circ' → logprob: -11.382219314575195
    8. ' dataset' → logprob: -11.882219314575195
    9. '        
' → logprob: -12.007219314575195
    10. 'circle' → logprob: -13.507219314575195

Token 1922: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5762026309967041
    2. '=' → logprob: -0.8262026309967041
    3. '=[]' → logprob: -8.326202392578125
    4. '   ' → logprob: -11.076202392578125
    5. '=[]
' → logprob: -12.326202392578125
    6. '[]' → logprob: -15.826202392578125
    7. '[:]' → logprob: -16.201202392578125
    8. 's' → logprob: -16.201202392578125
    9. '=[]
' → logprob: -16.451202392578125
    10. '```' → logprob: -16.576202392578125

Token 1923: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.6058408617973328
    2. '[]' → logprob: -0.8558408617973328
    3. '[c' → logprob: -3.8558409214019775
    4. '[' → logprob: -4.855840682983398
    5. '[(' → logprob: -7.855840682983398
    6. '[array' → logprob: -10.730840682983398
    7. '[int' → logprob: -10.980840682983398
    8. '[class' → logprob: -11.105840682983398
    9. '[]

' → logprob: -11.230840682983398
    10. '[n' → logprob: -11.980840682983398

Token 1924: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18709108233451843
    2. 'for' → logprob: -2.312091112136841
    3. ' for' → logprob: -2.687091112136841
    4. '   ' → logprob: -6.562090873718262
    5. '<|end|>' → logprob: -6.687090873718262
    6. '	for' → logprob: -7.312090873718262
    7. '        
' → logprob: -10.437090873718262
    8. '```' → logprob: -10.562090873718262
    9. '[' → logprob: -10.687090873718262
    10. ' ' → logprob: -11.187090873718262

Token 1925: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0001596771035110578
    2. '       ' → logprob: -9.00015926361084
    3. ' for' → logprob: -10.25015926361084
    4. '	for' → logprob: -14.12515926361084
    5. '   ' → logprob: -15.75015926361084
    6. 'while' → logprob: -17.250160217285156
    7. '
' → logprob: -18.250160217285156
    8. '```' → logprob: -18.500160217285156
    9. '        
' → logprob: -20.000160217285156
    10. '           ' → logprob: -20.250160217285156

Token 1926: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.038121242076158524
    2. '_i' → logprob: -3.288121223449707
    3. '_in' → logprob: -10.038121223449707
    4. 'i' → logprob: -10.413121223449707
    5. '_j' → logprob: -12.913121223449707
    6. '_range' → logprob: -13.163121223449707
    7. ' _' → logprob: -14.913121223449707
    8. '_=' → logprob: -15.663121223449707
    9. '_
' → logprob: -16.038122177124023
    10. '_n' → logprob: -16.288122177124023

Token 1927: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.016361139714717865
    2. ' in' → logprob: -4.391361236572266
    3. 'range' → logprob: -5.641361236572266
    4. 'i' → logprob: -8.516361236572266
    5. '_' → logprob: -9.766361236572266
    6. ' range' → logprob: -10.391361236572266
    7. ' ' → logprob: -13.141361236572266
    8. '0' → logprob: -13.391361236572266
    9. 'n' → logprob: -13.516361236572266
    10. 's' → logprob: -14.516361236572266

Token 1928: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.1472419600977446e-06
    2. ' range' → logprob: -13.750000953674316
    3. '(range' → logprob: -20.125001907348633
    4. 'in' → logprob: -20.375001907348633
    5. '	range' → logprob: -20.500001907348633
    6. '   ' → logprob: -21.125001907348633
    7. '_range' → logprob: -21.750001907348633
    8. '
' → logprob: -21.750001907348633
    9. 'n' → logprob: -22.000001907348633
    10. ')' → logprob: -22.625001907348633

Token 1929: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10021281987428665
    2. '(n' → logprob: -2.350212812423706
    3. ' n' → logprob: -12.725213050842285
    4. '_n' → logprob: -13.225213050842285
    5. 'range' → logprob: -14.350213050842285
    6. '(' → logprob: -15.100213050842285
    7. '	n' → logprob: -15.100213050842285
    8. '   ' → logprob: -16.10021209716797
    9. ')n' → logprob: -17.35021209716797
    10. 'int' → logprob: -17.35021209716797

Token 1930: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.00437042536213994
    2. '):' → logprob: -5.504370212554932
    3. '       ' → logprob: -8.87937068939209
    4. ':
' → logprob: -9.50437068939209
    5. '           ' → logprob: -10.37937068939209
    6. ':' → logprob: -11.50437068939209
    7. '   ' → logprob: -11.50437068939209
    8. '):
' → logprob: -11.50437068939209
    9. '():
' → logprob: -12.00437068939209
    10. ']:
' → logprob: -13.37937068939209

Token 1931: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00601316848769784
    2. 'x' → logprob: -6.0060133934021
    3. '	       ' → logprob: -6.3810133934021
    4. ' x' → logprob: -7.7560133934021
    5. '<|end|>' → logprob: -8.381012916564941
    6. 'r' → logprob: -8.506012916564941
    7. '   ' → logprob: -8.756012916564941
    8. 'c' → logprob: -9.256012916564941
    9. '    	   ' → logprob: -9.256012916564941
    10. '		' → logprob: -9.381012916564941

Token 1932: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0005686411168426275
    2. 'cx' → logprob: -7.500568866729736
    3. ' x' → logprob: -11.125568389892578
    4. 'xc' → logprob: -14.750568389892578
    5. ' cx' → logprob: -15.500568389892578
    6. '           ' → logprob: -15.750568389892578
    7. '	x' → logprob: -15.875568389892578
    8. '   ' → logprob: -17.250568389892578
    9. 'c' → logprob: -17.875568389892578
    10. '            
' → logprob: -18.250568389892578

Token 1933: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2980712056159973
    2. ',' → logprob: -1.5480711460113525
    3. ' =' → logprob: -3.2980711460113525
    4. '=int' → logprob: -4.923071384429932
    5. ',y' → logprob: -8.048070907592773
    6. ' ,' → logprob: -9.173070907592773
    7. '[idx' → logprob: -9.298070907592773
    8. 'idx' → logprob: -9.923070907592773
    9. '<|end|>' → logprob: -10.048070907592773
    10. ',int' → logprob: -10.298070907592773

Token 1934: ' int' (ID: 677)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0011782010551542044
    2. ' float' → logprob: -6.75117826461792
    3. 'int' → logprob: -11.751177787780762
    4. '	float' → logprob: -16.751178741455078
    5. '(float' → logprob: -17.876178741455078
    6. 'flo' → logprob: -18.251178741455078
    7. '=float' → logprob: -18.376178741455078
    8. ' int' → logprob: -18.876178741455078
    9. '   ' → logprob: -19.626178741455078
    10. '<float' → logprob: -20.251178741455078

Token 1935: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06202302873134613
    2. '(input' → logprob: -2.8120229244232178
    3. ' input' → logprob: -10.312023162841797
    4. '[input' → logprob: -11.062023162841797
    5. '<input' → logprob: -13.187023162841797
    6. '=input' → logprob: -13.312023162841797
    7. ',input' → logprob: -13.562023162841797
    8. '	input' → logprob: -13.562023162841797
    9. ')' → logprob: -15.687023162841797
    10. '(' → logprob: -16.687023162841797

Token 1936: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.029785433784127235
    2. 'idx' → logprob: -3.529785394668579
    3. '(idx' → logprob: -11.40478515625
    4. '   ' → logprob: -11.65478515625
    5. ')' → logprob: -12.52978515625
    6. ' idx' → logprob: -12.77978515625
    7. 'input' → logprob: -12.90478515625
    8. ')
' → logprob: -13.40478515625
    9. '	idx' → logprob: -13.77978515625
    10. '       ' → logprob: -14.02978515625

Token 1937: ']);' (ID: 34389)
  Prédit: '])
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.1890176683664322
    2. '])' → logprob: -1.939017653465271
    3. ')
' → logprob: -4.0640177726745605
    4. '[idx' → logprob: -4.9390177726745605
    5. ')' → logprob: -5.9390177726745605
    6. ']);' → logprob: -6.9390177726745605
    7. '   ' → logprob: -9.189017295837402
    8. 'idx' → logprob: -9.314017295837402
    9. '       ' → logprob: -9.564017295837402
    10. '+' → logprob: -10.689017295837402

Token 1938: ' y' (ID: 342)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.08039607107639313
    2. ' idx' → logprob: -2.5803961753845215
    3. '	idx' → logprob: -7.2053961753845215
    4. 'y' → logprob: -7.4553961753845215
    5. ' y' → logprob: -8.955395698547363
    6. '   ' → logprob: -11.080395698547363
    7. '       ' → logprob: -11.330395698547363
    8. '_idx' → logprob: -11.705395698547363
    9. ' ' → logprob: -12.205395698547363
    10. 'x' → logprob: -12.330395698547363

Token 1939: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02986723557114601
    2. ' =' → logprob: -3.529867172241211
    3. '[idx' → logprob: -10.029867172241211
    4. '<|end|>' → logprob: -10.404867172241211
    5. '=
' → logprob: -10.654867172241211
    6. '=int' → logprob: -12.279867172241211
    7. '+=' → logprob: -12.529867172241211
    8. '[' → logprob: -13.779867172241211
    9. '=user' → logprob: -13.904867172241211
    10. '   ' → logprob: -14.029867172241211

Token 1940: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.2729995988775045e-06
    2. ' int' → logprob: -12.000006675720215
    3. '=int' → logprob: -17.0000057220459
    4. '[int' → logprob: -17.0000057220459
    5. '(int' → logprob: -18.1250057220459
    6. '<int' → logprob: -19.0000057220459
    7. ':int' → logprob: -21.0000057220459
    8. '	int' → logprob: -22.7500057220459
    9. 'intval' → logprob: -22.7500057220459
    10. ']int' → logprob: -22.7500057220459

Token 1941: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04914635792374611
    2. '[input' → logprob: -3.2991464138031006
    3. '(input' → logprob: -4.5491461753845215
    4. ' input' → logprob: -7.7991461753845215
    5. 'int' → logprob: -10.42414665222168
    6. '[int' → logprob: -10.67414665222168
    7. '=input' → logprob: -13.17414665222168
    8. '<input' → logprob: -13.67414665222168
    9. ',input' → logprob: -14.04914665222168
    10. '	input' → logprob: -14.67414665222168

Token 1942: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0025014597922563553
    2. 'idx' → logprob: -6.002501487731934
    3. ']' → logprob: -11.002501487731934
    4. '	idx' → logprob: -13.252501487731934
    5. ' idx' → logprob: -13.877501487731934
    6. '```' → logprob: -13.877501487731934
    7. '1' → logprob: -14.002501487731934
    8. 'x' → logprob: -14.127501487731934
    9. '   ' → logprob: -14.377501487731934
    10. '][' → logprob: -14.627501487731934

Token 1943: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.010213915258646011
    2. '])' → logprob: -5.385213851928711
    3. ']);' → logprob: -5.760213851928711
    4. ' +' → logprob: -7.010213851928711
    5. '[idx' → logprob: -7.510213851928711
    6. '])
' → logprob: -8.010213851928711
    7. 'idx' → logprob: -8.260213851928711
    8. '];' → logprob: -8.885213851928711
    9. ']' → logprob: -9.260213851928711
    10. '[' → logprob: -9.760213851928711

Token 1944: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4617256056226324e-05
    2. '2' → logprob: -11.875014305114746
    3. '0' → logprob: -12.500014305114746
    4. 'idx' → logprob: -12.875014305114746
    5. ' ' → logprob: -14.375014305114746
    6. '3' → logprob: -15.125014305114746
    7. '+' → logprob: -15.250014305114746
    8. '   ' → logprob: -16.000015258789062
    9. '
' → logprob: -17.000015258789062
    10. '4' → logprob: -17.562515258789062

Token 1945: ']);' (ID: 34389)
  Prédit: ');'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ');' → logprob: -0.006995377130806446
    2. ')' → logprob: -5.38199520111084
    3. ')
' → logprob: -6.88199520111084
    4. ';' → logprob: -6.88199520111084
    5. '];' → logprob: -9.00699520111084
    6. ',' → logprob: -9.75699520111084
    7. '       ' → logprob: -9.88199520111084
    8. ']);' → logprob: -10.13199520111084
    9. '),' → logprob: -10.88199520111084
    10. '   ' → logprob: -11.63199520111084

Token 1946: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03825675696134567
    2. ' r' → logprob: -3.2882566452026367
    3. 'idx' → logprob: -8.538256645202637
    4. ' idx' → logprob: -11.163256645202637
    5. '           ' → logprob: -12.288256645202637
    6. '       ' → logprob: -15.038256645202637
    7. '   ' → logprob: -15.913256645202637
    8. '	r' → logprob: -16.413257598876953
    9. '```' → logprob: -17.163257598876953
    10. 'radius' → logprob: -17.288257598876953

Token 1947: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6631812453269958
    2. ' =' → logprob: -1.0381813049316406
    3. '[idx' → logprob: -2.0381813049316406
    4. '<|end|>' → logprob: -9.41318130493164
    5. '```' → logprob: -9.53818130493164
    6. '=int' → logprob: -9.78818130493164
    7. '_idx' → logprob: -10.16318130493164
    8. '=
' → logprob: -10.28818130493164
    9. 'idx' → logprob: -10.53818130493164
    10. '(idx' → logprob: -11.16318130493164

Token 1948: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0012057077838107944
    2. ' int' → logprob: -6.751205921173096
    3. 'float' → logprob: -10.251205444335938
    4. ' float' → logprob: -15.626205444335938
    5. '=int' → logprob: -17.626205444335938
    6. '[int' → logprob: -17.626205444335938
    7. '(int' → logprob: -18.126205444335938
    8. '   ' → logprob: -20.126205444335938
    9. 'input' → logprob: -20.251205444335938
    10. '<int' → logprob: -20.501205444335938

Token 1949: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2665891647338867
    2. 'input' → logprob: -1.5165891647338867
    3. '[input' → logprob: -4.266589164733887
    4. ' input' → logprob: -7.891589164733887
    5. '=input' → logprob: -9.266589164733887
    6. ',input' → logprob: -10.391589164733887
    7. '<input' → logprob: -11.266589164733887
    8. '	input' → logprob: -11.891589164733887
    9. '1' → logprob: -13.891589164733887
    10. '[int' → logprob: -14.391589164733887

Token 1950: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -5.955703818472102e-05
    2. 'idx' → logprob: -9.750059127807617
    3. '(idx' → logprob: -14.250059127807617
    4. '][' → logprob: -15.625059127807617
    5. '	idx' → logprob: -15.750059127807617
    6. ' idx' → logprob: -16.250059127807617
    7. '   ' → logprob: -17.000059127807617
    8. '       ' → logprob: -17.500059127807617
    9. '           ' → logprob: -18.125059127807617
    10. '```' → logprob: -18.125059127807617

Token 1951: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4757278859615326
    2. '2' → logprob: -0.975727915763855
    3. 'idx' → logprob: -6.7257280349731445
    4. '[idx' → logprob: -7.8507280349731445
    5. '(idx' → logprob: -11.600728034973145
    6. '[' → logprob: -11.600728034973145
    7. 'x' → logprob: -11.850728034973145
    8. '_idx' → logprob: -11.975728034973145
    9. ']' → logprob: -12.100728034973145
    10. ' idx' → logprob: -12.350728034973145

Token 1952: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.8828707804204896e-05
    2. '1' → logprob: -10.125048637390137
    3. '0' → logprob: -11.875048637390137
    4. ' ' → logprob: -14.750048637390137
    5. '
' → logprob: -15.312548637390137
    6. '3' → logprob: -15.375048637390137
    7. '```' → logprob: -15.437548637390137
    8. '   ' → logprob: -15.937548637390137
    9. '4' → logprob: -16.687549591064453
    10. '+' → logprob: -16.687549591064453

Token 1953: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.011439992114901543
    2. ')' → logprob: -4.511439800262451
    3. ');' → logprob: -8.13644027709961
    4. '       ' → logprob: -9.88644027709961
    5. ')
' → logprob: -10.01144027709961
    6. '])
' → logprob: -13.88644027709961
    7. '   ' → logprob: -14.26144027709961
    8. ');
' → logprob: -14.38644027709961
    9. 'idx' → logprob: -15.63644027709961
    10. ' )
' → logprob: -15.63644027709961

Token 1954: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18142034113407135
    2. '       ' → logprob: -2.43142032623291
    3. 'idx' → logprob: -2.68142032623291
    4. ' idx' → logprob: -5.55642032623291
    5. '	idx' → logprob: -6.18142032623291
    6. '   ' → logprob: -6.68142032623291
    7. '[idx' → logprob: -7.05642032623291
    8. '
' → logprob: -7.80642032623291
    9. '	   ' → logprob: -7.93142032623291
    10. '	       ' → logprob: -8.80642032623291

Token 1955: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.0005134754464961588
    2. '       ' → logprob: -8.000513076782227
    3. ' idx' → logprob: -8.750513076782227
    4. '           ' → logprob: -11.000513076782227
    5. '	idx' → logprob: -13.250513076782227
    6. 'dataset' → logprob: -14.250513076782227
    7. 'input' → logprob: -15.250513076782227
    8. '   ' → logprob: -16.375513076782227
    9. '_idx' → logprob: -16.500513076782227
    10. '
' → logprob: -17.125513076782227

Token 1956: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0015415230300277472
    2. ' +=' → logprob: -6.626541614532471
    3. '+' → logprob: -8.501541137695312
    4. ']+=' → logprob: -11.876541137695312
    5. '=' → logprob: -13.251541137695312
    6. '+="' → logprob: -13.876541137695312
    7. '```' → logprob: -14.001541137695312
    8. '   ' → logprob: -14.376541137695312
    9. '+='' → logprob: -14.376541137695312
    10. '++' → logprob: -15.251541137695312

Token 1957: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '۳' → logprob: -21.375
    4. '   ' → logprob: -22.0
    5. '৩' → logprob: -22.5
    6. '٣' → logprob: -22.875
    7. '３' → logprob: -23.125
    8. '३' → logprob: -23.875
    9. '```' → logprob: -24.875
    10. '' → logprob: -25.0

Token 1958: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. ' ' → logprob: -20.375
    3. '۳' → logprob: -21.875
    4. '   ' → logprob: -22.875
    5. '৩' → logprob: -23.25
    6. '٣' → logprob: -23.75
    7. '３' → logprob: -24.125
    8. '३' → logprob: -24.5
    9. '```' → logprob: -24.875
    10. '' → logprob: -25.875

Token 1959: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5656301379203796
    2. 'dataset' → logprob: -1.3156301975250244
    3. '       ' → logprob: -1.8156301975250244
    4. ' dataset' → logprob: -7.065629959106445
    5. '   ' → logprob: -9.565629959106445
    6. '(dataset' → logprob: -11.065629959106445
    7. '
' → logprob: -12.440629959106445
    8. '<|end|>' → logprob: -13.190629959106445
    9. 'data' → logprob: -13.315629959106445
    10. '        
' → logprob: -13.690629959106445

Token 1960: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6244263648986816
    2. 'dataset' → logprob: -0.9994263648986816
    3. '           ' → logprob: -2.3744263648986816
    4. ' dataset' → logprob: -5.749426364898682
    5. '   ' → logprob: -10.124425888061523
    6. '```' → logprob: -11.624425888061523
    7. '(dataset' → logprob: -11.624425888061523
    8. '<|end|>' → logprob: -11.749425888061523
    9. 'c' → logprob: -12.749425888061523
    10. 'data' → logprob: -12.874425888061523

Token 1961: ' dataset' (ID: 20830)
  Prédit: 'dataset'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dataset' (adapté à ' dataset') → logprob: -0.000506326905451715
    2. '           ' → logprob: -7.750506401062012
    3. ' dataset' → logprob: -10.125506401062012
    4. '       ' → logprob: -10.250506401062012
    5. '   ' → logprob: -15.375506401062012
    6. '(dataset' → logprob: -18.125505447387695
    7. 'data' → logprob: -18.250505447387695
    8. 'ataset' → logprob: -19.375505447387695
    9. '_dataset' → logprob: -19.750505447387695
    10. '.dataset' → logprob: -19.875505447387695

Token 1962: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.774276774493046e-05
    2. '.' → logprob: -10.250038146972656
    3. ' .' → logprob: -14.125038146972656
    4. ').' → logprob: -14.500038146972656
    5. 'append' → logprob: -14.500038146972656
    6. '.app' → logprob: -15.500038146972656
    7. '           ' → logprob: -16.375038146972656
    8. '       ' → logprob: -16.500038146972656
    9. '   ' → logprob: -16.625038146972656
    10. '.Append' → logprob: -16.750038146972656

Token 1963: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0028387531638145447
    2. '(x' → logprob: -6.252838611602783
    3. '(' → logprob: -7.002838611602783
    4. ' (' → logprob: -15.127839088439941
    5. '   ' → logprob: -16.752838134765625
    6. '(
' → logprob: -17.002838134765625
    7. ' ((' → logprob: -17.502838134765625
    8. '(tuple' → logprob: -17.877838134765625
    9. '[(' → logprob: -18.377838134765625
    10. '("' → logprob: -18.627838134765625

Token 1964: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9361264946837764e-07
    2. ' x' → logprob: -16.375
    3. '(x' → logprob: -19.375
    4. ')x' → logprob: -21.125
    5. '	x' → logprob: -23.0
    6. ',x' → logprob: -24.0
    7. '   ' → logprob: -24.25
    8. '{x' → logprob: -24.375
    9. '"x' → logprob: -24.75
    10. ''x' → logprob: -26.125

Token 1965: ',y' (ID: 16103)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0003036457928828895
    2. ',' → logprob: -8.250303268432617
    3. ',y' → logprob: -10.125303268432617
    4. '[int' → logprob: -15.000303268432617
    5. '(idx' → logprob: -15.375303268432617
    6. '   ' → logprob: -15.375303268432617
    7. ' ,' → logprob: -15.375303268432617
    8. '[' → logprob: -15.500303268432617
    9. '[y' → logprob: -15.500303268432617
    10. '[id' → logprob: -15.625303268432617

Token 1966: ',r' (ID: 33654)
  Prédit: ',r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.47421205043792725
    2. ',' → logprob: -0.9742120504379272
    3. ' ,' → logprob: -8.974211692810059
    4. ',
' → logprob: -13.474211692810059
    5. '),' → logprob: -13.599211692810059
    6. ',x' → logprob: -14.099211692810059
    7. ',w' → logprob: -14.099211692810059
    8. 'r' → logprob: -14.224211692810059
    9. ',y' → logprob: -14.224211692810059
    10. ',t' → logprob: -15.099211692810059

Token 1967: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0011804660316556692
    2. '))
' → logprob: -6.751180648803711
    3. ')' → logprob: -11.751180648803711
    4. '       ' → logprob: -13.876180648803711
    5. '   ' → logprob: -14.251180648803711
    6. ')))' → logprob: -14.626180648803711
    7. ' ))' → logprob: -16.12618064880371
    8. '           ' → logprob: -16.12618064880371
    9. '));' → logprob: -17.12618064880371
    10. '))

' → logprob: -17.25118064880371

Token 1968: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1980532556772232
    2. '   ' → logprob: -1.823053240776062
    3. 'result' → logprob: -4.573053359985352
    4. '```' → logprob: -5.948053359985352
    5. '
' → logprob: -6.073053359985352
    6. '<|end|>' → logprob: -6.198053359985352
    7. '        
' → logprob: -8.698053359985352
    8. ' result' → logprob: -8.823053359985352
    9. ')' → logprob: -9.198053359985352
    10. '    
' → logprob: -9.573053359985352

Token 1969: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.9506118893623352
    2. 'result' → logprob: -1.0756118297576904
    3. '   ' → logprob: -1.7006118297576904
    4. 'res' → logprob: -2.7006118297576904
    5. 'distance' → logprob: -4.9506120681762695
    6. 'answer' → logprob: -5.4506120681762695
    7. ' result' → logprob: -5.5756120681762695
    8. 'dist' → logprob: -5.8256120681762695
    9. ' ans' → logprob: -5.9506120681762695
    10. ' res' → logprob: -7.0756120681762695

Token 1970: ' Rés' (ID: 104378)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5698822140693665
    2. 'res' → logprob: -1.3198821544647217
    3. 'result' → logprob: -1.8198821544647217
    4. 'answer' → logprob: -5.444882392883301
    5. 'dist' → logprob: -8.3198823928833
    6. 'print' → logprob: -8.5698823928833
    7. 'distance' → logprob: -8.5698823928833
    8. '       ' → logprob: -9.1948823928833
    9. ' ans' → logprob: -10.0698823928833
    10. '   ' → logprob: -10.4448823928833

Token 1971: 'oudre' (ID: 53878)
  Prédit: 'ultat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ultat' → logprob: -0.002208900870755315
    2. 'ult' → logprob: -6.127208709716797
    3. 'ulat' → logprob: -11.502208709716797
    4. 'print' → logprob: -12.127208709716797
    5. 'utat' → logprob: -12.752208709716797
    6. '   ' → logprob: -13.002208709716797
    7. 'ul' → logprob: -14.127208709716797
    8. 'olution' → logprob: -14.377208709716797
    9. 'ponse' → logprob: -14.877208709716797
    10. 'ults' → logprob: -15.002208709716797

Token 1972: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7333682179450989
    2. 'result' → logprob: -0.8583682179450989
    3. '       ' → logprob: -3.108368158340454
    4. 'ans' → logprob: -3.483368158340454
    5. '   ' → logprob: -5.108368396759033
    6. 'res' → logprob: -5.108368396759033
    7. 'answer' → logprob: -5.733368396759033
    8. ' result' → logprob: -5.858368396759033
    9. ' print' → logprob: -6.983368396759033
    10. ' ans' → logprob: -6.983368396759033

Token 1973: ' ce' (ID: 2357)
  Prédit: 'dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dataset' → logprob: -7.946405094116926e-05
    2. '(dataset' → logprob: -10.250079154968262
    3. ' dataset' → logprob: -10.750079154968262
    4. '   ' → logprob: -11.125079154968262
    5. '       ' → logprob: -12.500079154968262
    6. 'le' → logprob: -12.750079154968262
    7. '
' → logprob: -15.000079154968262
    8. '```' → logprob: -15.375079154968262
    9. 'la' → logprob: -15.750079154968262
    10. 'the' → logprob: -16.250080108642578

Token 1974: ' dataset' (ID: 20830)
  Prédit: 'dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dataset' → logprob: -0.0007287554908543825
    2. ' dataset' → logprob: -7.250728607177734
    3. 'jeu' → logprob: -11.000728607177734
    4. 'data' → logprob: -13.750728607177734
    5. 'datasets' → logprob: -15.250728607177734
    6. '(dataset' → logprob: -15.500728607177734
    7. 'ataset' → logprob: -15.875728607177734
    8. 'ensemble' → logprob: -16.000728607177734
    9. ' jeu' → logprob: -16.250728607177734
    10. '#' → logprob: -16.375728607177734

Token 1975: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002173339482396841
    2. 'print' → logprob: -6.62717342376709
    3. '   ' → logprob: -7.25217342376709
    4. 'result' → logprob: -9.62717342376709
    5. ' print' → logprob: -10.75217342376709
    6. '```' → logprob: -10.75217342376709
    7. ' result' → logprob: -12.00217342376709
    8. ',' → logprob: -12.12717342376709
    9. 'ans' → logprob: -12.37717342376709
    10. ' ans' → logprob: -12.87717342376709

Token 1976: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9765217304229736
    2. '       ' → logprob: -1.2265217304229736
    3. '   ' → logprob: -1.4765217304229736
    4. 'result' → logprob: -2.4765217304229736
    5. ' result' → logprob: -5.1015214920043945
    6. 'ans' → logprob: -5.3515214920043945
    7. ' print' → logprob: -5.7265214920043945
    8. ' ans' → logprob: -6.4765214920043945
    9. 'answer' → logprob: -7.2265214920043945
    10. '```' → logprob: -7.3515214920043945

Token 1977: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5614627003669739
    2. 'result' → logprob: -1.061462640762329
    3. 'ans' (adapté à ' ans') → logprob: -3.061462640762329
    4. 'res' → logprob: -3.561462640762329
    5. 'answer' → logprob: -5.436462879180908
    6. '   ' → logprob: -6.311462879180908
    7. '       ' → logprob: -7.061462879180908
    8. 'distance' → logprob: -7.686462879180908
    9. ' result' → logprob: -8.06146240234375
    10. ' print' → logprob: -8.31146240234375

Token 1978: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5232095122337341
    2. '=' → logprob: -0.8982095122337341
    3. '   ' → logprob: -10.398209571838379
    4. ')' → logprob: -10.398209571838379
    5. ',' → logprob: -11.398209571838379
    6. '<|end|>' → logprob: -13.023209571838379
    7. ' ' → logprob: -13.523209571838379
    8. '[' → logprob: -13.773209571838379
    9. '=float' → logprob: -13.773209571838379
    10. '  ' → logprob: -14.023209571838379

Token 1979: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -4.644463479053229e-05
    2. ' solve' → logprob: -10.000046730041504
    3. 'round' → logprob: -13.875046730041504
    4. 'f' → logprob: -17.000045776367188
    5. 'format' → logprob: -17.750045776367188
    6. 'float' → logprob: -18.750045776367188
    7. '   ' → logprob: -19.750045776367188
    8. '.solve' → logprob: -20.125045776367188
    9. 'sol' → logprob: -20.750045776367188
    10. 'resolve' → logprob: -21.000045776367188

Token 1980: '(dataset' (ID: 67333)
  Prédit: '(dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dataset' → logprob: -6.153795766294934e-06
    2. '(' → logprob: -12.625005722045898
    3. 'dataset' → logprob: -13.125005722045898
    4. ' (' → logprob: -14.500005722045898
    5. '((' → logprob: -16.7500057220459
    6. '(data' → logprob: -16.7500057220459
    7. '(
' → logprob: -16.7500057220459
    8. '(d' → logprob: -17.0000057220459
    9. '```' → logprob: -17.8750057220459
    10. '(ans' → logprob: -18.0000057220459

Token 1981: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06450342386960983
    2. ')' → logprob: -2.9395034313201904
    3. '       ' → logprob: -5.064503192901611
    4. '()
' → logprob: -5.939503192901611
    5. '   ' → logprob: -7.689503192901611
    6. ')
' → logprob: -10.06450366973877
    7. '())
' → logprob: -10.43950366973877
    8. '()' → logprob: -10.68950366973877
    9. '(ans' → logprob: -11.31450366973877
    10. 'print' → logprob: -12.06450366973877

Token 1982: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0825892835855484
    2. '   ' → logprob: -2.8325893878936768
    3. 'print' → logprob: -3.9575893878936768
    4. '```' → logprob: -6.707589149475098
    5. ' print' → logprob: -9.832589149475098
    6. '        
' → logprob: -12.207589149475098
    7. '
' → logprob: -12.707589149475098
    8. '    
' → logprob: -12.707589149475098
    9. '``' → logprob: -12.832589149475098
    10. '<|end|>' → logprob: -12.832589149475098

Token 1983: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.018445836380124092
    2. '       ' → logprob: -4.01844596862793
    3. ' print' → logprob: -8.26844596862793
    4. '   ' → logprob: -10.26844596862793
    5. 'if' → logprob: -12.39344596862793
    6. '```' → logprob: -15.51844596862793
    7. 'printf' → logprob: -16.39344596862793
    8. '	print' → logprob: -16.51844596862793
    9. 'import' → logprob: -16.76844596862793
    10. '#print' → logprob: -17.39344596862793

Token 1984: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.02330988459289074
    2. '(ans' → logprob: -4.773309707641602
    3. '("{' → logprob: -4.898309707641602
    4. '(round' → logprob: -5.148309707641602
    5. '("' → logprob: -7.773309707641602
    6. '("%.' → logprob: -8.148309707641602
    7. '(' → logprob: -8.398309707641602
    8. '(format' → logprob: -8.648309707641602
    9. '('{' → logprob: -9.148309707641602
    10. '('' → logprob: -10.148309707641602

Token 1985: '"{' (ID: 27510)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.062472984194755554
    2. '"{' → logprob: -2.8124730587005615
    3. ''{' → logprob: -7.937472820281982
    4. '(ans' → logprob: -9.31247329711914
    5. '("{' → logprob: -10.81247329711914
    6. '{"' → logprob: -11.68747329711914
    7. 'ans' → logprob: -11.81247329711914
    8. '("%.' → logprob: -12.18747329711914
    9. ')' → logprob: -12.68747329711914
    10. 'f' → logprob: -13.18747329711914

Token 1986: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.9361264946837764e-07
    2. ' ans' → logprob: -16.0
    3. '(ans' → logprob: -17.875
    4. '	ans' → logprob: -19.5
    5. 'round' → logprob: -19.75
    6. '{' → logprob: -19.75
    7. '   ' → logprob: -19.75
    8. 'answer' → logprob: -20.375
    9. '0' → logprob: -21.0
    10. 'anst' → logprob: -21.375

Token 1987: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -3.7697225252486533e-06
    2. ' :.' → logprob: -12.750003814697266
    3. ':' → logprob: -14.125003814697266
    4. '{' → logprob: -16.625003814697266
    5. '.' → logprob: -16.875003814697266
    6. ' .' → logprob: -18.625003814697266
    7. '   ' → logprob: -18.875003814697266
    8. '(.' → logprob: -19.000003814697266
    9. '}' → logprob: -19.125003814697266
    10. '():' → logprob: -19.500003814697266

Token 1988: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.14803379774093628
    2. '9' → logprob: -2.648033857345581
    3. '7' → logprob: -3.148033857345581
    4. '10' → logprob: -4.273033618927002
    5. '8' → logprob: -4.773033618927002
    6. '12' → logprob: -6.773033618927002
    7. '15' → logprob: -8.64803409576416
    8. '5' → logprob: -9.77303409576416
    9. '3' → logprob: -10.14803409576416
    10. '4' → logprob: -10.52303409576416

Token 1989: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: 0.0
    2. 'g' → logprob: -19.375
    3. 'lf' → logprob: -21.375
    4. '```' → logprob: -23.0
    5. '6' → logprob: -23.125
    6. '}' → logprob: -23.375
    7. '{' → logprob: -23.75
    8. 'e' → logprob: -23.875
    9. '	f' → logprob: -24.25
    10. 'fi' → logprob: -24.625

Token 1990: '}")

' (ID: 119200)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.00011880126112373546
    2. '")' → logprob: -9.12511920928955
    3. ')")' → logprob: -12.12511920928955
    4. '}")
' → logprob: -12.50011920928955
    5. ' }' → logprob: -15.00011920928955
    6. '}' → logprob: -15.75011920928955
    7. '}"' → logprob: -17.000118255615234
    8. '}")
' → logprob: -17.125118255615234
    9. '})' → logprob: -17.500118255615234
    10. '}")

' → logprob: -17.625118255615234

Token 1991: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006313515827059746
    2. '
' → logprob: -5.131313323974609
    3. '```' → logprob: -8.50631332397461
    4. ' if' → logprob: -9.38131332397461
    5. '<|end|>' → logprob: -9.63131332397461
    6. '    
' → logprob: -11.75631332397461
    7. '  
' → logprob: -12.00631332397461
    8. '

' → logprob: -12.25631332397461
    9. '        
' → logprob: -12.50631332397461
    10. '``' → logprob: -12.75631332397461

Token 1992: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1427597850561142
    2. ' __' → logprob: -2.0177597999572754
    3. 'name' → logprob: -9.892759323120117
    4. 'if' → logprob: -10.892759323120117
    5. 'True' → logprob: -12.392759323120117
    6. '_name' → logprob: -12.892759323120117
    7. '(__' → logprob: -13.517759323120117
    8. '___' → logprob: -13.517759323120117
    9. '```' → logprob: -13.642759323120117
    10. '_' → logprob: -13.642759323120117

Token 1993: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0006846757605671883
    2. '==' → logprob: -7.75068473815918
    3. ' ==' → logprob: -9.12568473815918
    4. '=="' → logprob: -10.00068473815918
    5. '__.__' → logprob: -10.87568473815918
    6. ' __' → logprob: -11.12568473815918
    7. 'if' → logprob: -11.25068473815918
    8. 'name' → logprob: -11.50068473815918
    9. '```' → logprob: -11.62568473815918
    10. '__["' → logprob: -11.75068473815918

Token 1994: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00032640635618008673
    2. '__.__' → logprob: -8.125326156616211
    3. '__.' → logprob: -11.000326156616211
    4. '==' → logprob: -11.625326156616211
    5. '__["' → logprob: -14.000326156616211
    6. '```' → logprob: -14.125326156616211
    7. '__
' → logprob: -14.375326156616211
    8. '____' → logprob: -14.750326156616211
    9. 'name' → logprob: -14.875326156616211
    10. '__[' → logprob: -15.125326156616211

Token 1995: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.053909994661808014
    2. '==' → logprob: -3.05391001701355
    3. '=="' → logprob: -5.803909778594971
    4. ' ==' → logprob: -6.428909778594971
    5. '__.__' → logprob: -7.678909778594971
    6. '=='' → logprob: -8.928910255432129
    7. '.__' → logprob: -10.428910255432129
    8. '__["' → logprob: -11.678910255432129
    9. '__.' → logprob: -11.928910255432129
    10. '==
' → logprob: -11.928910255432129

Token 1996: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.008622374385595322
    2. ''' → logprob: -4.758622169494629
    3. '__' → logprob: -11.883622169494629
    4. ' "__' → logprob: -14.008622169494629
    5. '"name' → logprob: -18.258623123168945
    6. ' '__' → logprob: -18.633623123168945
    7. '"user' → logprob: -18.633623123168945
    8. '("__' → logprob: -19.133623123168945
    9. ''"' → logprob: -19.133623123168945
    10. '"'' → logprob: -19.633623123168945

Token 1997: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.021558351814746857
    2. '__' → logprob: -3.8965582847595215
    3. 'name' → logprob: -7.0215582847595215
    4. '__":
' → logprob: -9.89655876159668
    5. '{' → logprob: -10.89655876159668
    6. '_main' → logprob: -11.02155876159668
    7. '"' → logprob: -11.39655876159668
    8. ' main' → logprob: -11.89655876159668
    9. 'if' → logprob: -12.89655876159668
    10. 'print' → logprob: -12.89655876159668

Token 1998: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.021207008510828018
    2. '__' → logprob: -4.146206855773926
    3. '__':
' → logprob: -5.271206855773926
    4. '__["' → logprob: -12.021206855773926
    5. '__()
' → logprob: -12.271206855773926
    6. '__.' → logprob: -12.896206855773926
    7. '__
' → logprob: -12.896206855773926
    8. '__.__' → logprob: -13.146206855773926
    9. '__:' → logprob: -14.521206855773926
    10. '==' → logprob: -14.646206855773926

Token 1999: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.06877127289772034
    2. '   ' → logprob: -2.9437713623046875
    3. '	main' → logprob: -4.3187713623046875
    4. ' main' → logprob: -7.9437713623046875
    5. '(main' → logprob: -9.568771362304688
    6. '    
' → logprob: -10.818771362304688
    7. '_main' → logprob: -10.943771362304688
    8. '```' → logprob: -12.818771362304688
    9. '<|end|>' → logprob: -13.443771362304688
    10. '
' → logprob: -13.693771362304688

Token 2000: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -15.75
    3. '	main' → logprob: -20.0
    4. '   ' → logprob: -23.75
    5. '_main' → logprob: -24.0
    6. '.main' → logprob: -25.125
    7. '(main' → logprob: -25.25
    8. 'Main' → logprob: -26.375
    9. 'import' → logprob: -27.625
    10. '/main' → logprob: -28.25

Token 2001: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1999
Tokens correctement prédits (1ère position, stricte): 721
Tokens correctement prédits (1ère position, avec adaptation): 784
Tokens correctement prédits (top 10): 1538
Précision stricte (1ère position): 36.07%
Précision adaptée (1ère position): 39.22%
Précision (top 10): 76.94%
================================================================================
