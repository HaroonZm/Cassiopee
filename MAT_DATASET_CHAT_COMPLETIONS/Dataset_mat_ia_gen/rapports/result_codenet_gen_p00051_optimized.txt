================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:09:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n=int(input())
for _ in range(n):
    s=input()
    max_num=int(''.join(sorted(s,reverse=True)))
    min_num=int(''.join(sorted(s)))
    print(max_num - min_num)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33144018054008484
    2. '(' → logprob: -1.3314402103424072
    3. '()' → logprob: -5.206439971923828
    4. '())' → logprob: -5.206439971923828
    5. '```' → logprob: -5.706439971923828
    6. '")' → logprob: -7.331439971923828
    7. '`)' → logprob: -7.456439971923828
    8. '(
' → logprob: -7.706439971923828
    9. '<|end|>' → logprob: -7.956439971923828
    10. '')' → logprob: -7.956439971923828

Token 4: 'for' (ID: 1938)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.5212205648422241
    2. '+' → logprob: -1.5212205648422241
    3. '#' → logprob: -2.0212206840515137
    4. ')' → logprob: -2.1462206840515137
    5. ' ' → logprob: -2.3962206840515137
    6. ''' → logprob: -2.7712206840515137
    7. 'i' → logprob: -3.0212206840515137
    8. 's' → logprob: -3.8962206840515137
    9. 'a' → logprob: -4.521220684051514
    10. '\n' → logprob: -4.521220684051514

Token 5: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.038457632064819336
    2. ' i' → logprob: -3.9134576320648193
    3. '  ' → logprob: -4.038457870483398
    4. ' n' → logprob: -9.913457870483398
    5. 'i' → logprob: -10.413457870483398
    6. ' ‌' → logprob: -11.288457870483398
    7. '_' → logprob: -11.913457870483398
    8. ' )' → logprob: -12.038457870483398
    9. ' ' → logprob: -12.288457870483398
    10. ' ▁' → logprob: -13.163457870483398

Token 6: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006046112626791
    2. 'in' → logprob: -5.131046295166016
    3. ' ' → logprob: -9.131046295166016
    4. ' i' → logprob: -13.006046295166016
    5. 'space' → logprob: -13.506046295166016
    6. 'n' → logprob: -13.756046295166016
    7. 'range' → logprob: -14.381046295166016
    8. ' n' → logprob: -14.381046295166016
    9. ' ,' → logprob: -14.506046295166016
    10. '_' → logprob: -14.631046295166016

Token 7: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759433507919312
    2. 'range' → logprob: -0.8259433507919312
    3. '	range' → logprob: -13.325942993164062
    4. ' ' → logprob: -13.700942993164062
    5. '(range' → logprob: -14.575942993164062
    6. '_range' → logprob: -14.825942993164062
    7. ' n' → logprob: -16.325942993164062
    8. ' xrange' → logprob: -16.450942993164062
    9. 'n' → logprob: -16.450942993164062
    10. 'rang' → logprob: -17.075942993164062

Token 8: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005671256221830845
    2. '(n' → logprob: -5.75567102432251
    3. ' (' → logprob: -6.00567102432251
    4. '(range' → logprob: -10.755671501159668
    5. '(len' → logprob: -13.380671501159668
    6. '(
' → logprob: -14.380671501159668
    7. '(int' → logprob: -15.255671501159668
    8. '(i' → logprob: -15.505671501159668
    9. '((' → logprob: -15.505671501159668
    10. '```' → logprob: -15.630671501159668

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31387558579444885
    2. ')' → logprob: -1.3138755559921265
    3. ':' → logprob: -7.438875675201416
    4. ':)' → logprob: -11.938875198364258
    5. ' ):' → logprob: -11.938875198364258
    6. ' )' → logprob: -12.438875198364258
    7. '):
' → logprob: -13.188875198364258
    8. '))' → logprob: -14.188875198364258
    9. '`)' → logprob: -14.438875198364258
    10. ')：' → logprob: -14.563875198364258

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021280182991176844
    2. '    
' → logprob: -6.5021281242370605
    3. 'print' → logprob: -8.377127647399902
    4. ' ' → logprob: -9.377127647399902
    5. '```' → logprob: -9.377127647399902
    6. ' print' → logprob: -9.627127647399902
    7. 'input' → logprob: -10.002127647399902
    8. '    ' → logprob: -10.502127647399902
    9. ' input' → logprob: -11.002127647399902
    10. ' 
' → logprob: -11.627127647399902

Token 11: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14100293815135956
    2. 'print' → logprob: -2.891002893447876
    3. 'x' → logprob: -3.766002893447876
    4. 'a' → logprob: -3.766002893447876
    5. 'data' → logprob: -4.766003131866455
    6. 'name' → logprob: -5.391003131866455
    7. 'num' → logprob: -5.766003131866455
    8. 'input' → logprob: -5.891003131866455
    9. 's' (adapté à ' s') → logprob: -6.641003131866455
    10. 'text' → logprob: -6.641003131866455

Token 12: '=input' (ID: 87911)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.27088800072669983
    2. 'tr' → logprob: -2.395888090133667
    3. ' =' → logprob: -3.020888090133667
    4. '=' → logprob: -3.645888090133667
    5. 't' → logprob: -4.145887851715088
    6. '=input' → logprob: -4.145887851715088
    7. 'trip' → logprob: -4.270887851715088
    8. '[' → logprob: -5.270887851715088
    9. ' .' → logprob: -5.645887851715088
    10. '.strip' → logprob: -5.770887851715088

Token 13: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07048451155424118
    2. '(' → logprob: -2.6954843997955322
    3. '().' → logprob: -8.945484161376953
    4. '())' → logprob: -9.320484161376953
    5. '('' → logprob: -9.695484161376953
    6. '```' → logprob: -9.945484161376953
    7. ')' → logprob: -10.070484161376953
    8. ' ()' → logprob: -10.445484161376953
    9. '`()' → logprob: -10.570484161376953
    10. ' ' → logprob: -11.320484161376953

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03533428907394409
    2. 'if' → logprob: -4.41033411026001
    3. ' if' → logprob: -5.16033411026001
    4. '[' → logprob: -5.53533411026001
    5. 'print' → logprob: -5.53533411026001
    6. ' ' → logprob: -6.53533411026001
    7. ')' → logprob: -6.91033411026001
    8. '_' → logprob: -7.03533411026001
    9. '    ' → logprob: -7.28533411026001
    10. '.' → logprob: -7.66033411026001

Token 15: ' max' (ID: 2999)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.071265459060669
    2. ' if' → logprob: -1.196265459060669
    3. '   ' → logprob: -1.821265459060669
    4. 'count' → logprob: -2.321265459060669
    5. 'i' → logprob: -3.821265459060669
    6. 'l' → logprob: -4.44626522064209
    7. ' count' → logprob: -4.82126522064209
    8. 'c' → logprob: -5.32126522064209
    9. 'p' → logprob: -5.32126522064209
    10. 'a' → logprob: -5.57126522064209

Token 16: '_num' (ID: 9834)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.02730640023946762
    2. '_' → logprob: -3.777306318283081
    3. '_length' → logprob: -5.90230655670166
    4. '_count' → logprob: -7.40230655670166
    5. '_l' → logprob: -7.65230655670166
    6. '_char' → logprob: -9.27730655670166
    7. '_freq' → logprob: -9.52730655670166
    8. 'len' → logprob: -11.15230655670166
    9. '_val' → logprob: -11.27730655670166
    10. '_s' → logprob: -11.65230655670166

Token 17: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17273622751235962
    2. '_' → logprob: -1.9227361679077148
    3. ' =' → logprob: -4.547736167907715
    4. '_=' → logprob: -6.547736167907715
    5. '_length' → logprob: -9.297736167907715
    6. '_len' → logprob: -9.672736167907715
    7. ' ' → logprob: -10.047736167907715
    8. '=_' → logprob: -10.172736167907715
    9. ',' → logprob: -10.297736167907715
    10. ')' → logprob: -10.297736167907715

Token 18: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04150468111038208
    2. '(s' → logprob: -3.7915046215057373
    3. '('' → logprob: -4.541504859924316
    4. '()' → logprob: -5.541504859924316
    5. '(max' → logprob: -5.916504859924316
    6. '("("' → logprob: -9.041504859924316
    7. 's' → logprob: -9.291504859924316
    8. '((' → logprob: -9.541504859924316
    9. ' (' → logprob: -9.916504859924316
    10. ' ' → logprob: -9.916504859924316

Token 19: ''.' (ID: 6120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4641503691673279
    2. ''' → logprob: -1.9641504287719727
    3. '0' → logprob: -2.0891504287719727
    4. '9' → logprob: -3.3391504287719727
    5. '1' → logprob: -3.4641504287719727
    6. ''s' → logprob: -4.464150428771973
    7. '(s' → logprob: -4.589150428771973
    8. '('' → logprob: -4.839150428771973
    9. '(' → logprob: -5.714150428771973
    10. '-' → logprob: -5.964150428771973

Token 20: 'join' (ID: 10891)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.11421392858028412
    2. '1' → logprob: -2.9892139434814453
    3. 's' → logprob: -3.7392139434814453
    4. 'join' → logprob: -4.114213943481445
    5. '0' → logprob: -5.239213943481445
    6. ''' → logprob: -5.364213943481445
    7. 'max' → logprob: -5.864213943481445
    8. ''.' → logprob: -6.364213943481445
    9. '999' → logprob: -7.739213943481445
    10. 'repeat' → logprob: -7.989213943481445

Token 21: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.2504225969314575
    2. '([' → logprob: -2.250422477722168
    3. '(s' → logprob: -2.750422477722168
    4. '(['' → logprob: -4.000422477722168
    5. '(max' → logprob: -4.625422477722168
    6. '(filter' → logprob: -4.750422477722168
    7. '(' → logprob: -5.000422477722168
    8. 'sorted' → logprob: -6.000422477722168
    9. '(str' → logprob: -6.250422477722168
    10. '(c' → logprob: -6.750422477722168

Token 22: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.002278127009049058
    2. 's' → logprob: -6.1272783279418945
    3. '(' → logprob: -9.502278327941895
    4. '(list' → logprob: -11.002278327941895
    5. 'list' → logprob: -14.377278327941895
    6. '(sorted' → logprob: -14.752278327941895
    7. ')' → logprob: -15.752278327941895
    8. ' s' → logprob: -16.252277374267578
    9. ' (' → logprob: -16.377277374267578
    10. '(set' → logprob: -16.502277374267578

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025864653289318085
    2. '[::-' → logprob: -4.150864601135254
    3. '))' → logprob: -5.400864601135254
    4. ')))' → logprob: -5.650864601135254
    5. ' ,' → logprob: -6.650864601135254
    6. '(reverse' → logprob: -9.525864601135254
    7. '[],' → logprob: -9.650864601135254
    8. '(),' → logprob: -9.900864601135254
    9. ')' → logprob: -10.025864601135254
    10. '[' → logprob: -10.400864601135254

Token 24: 'reverse' (ID: 53832)
  Prédit: 'reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.03807006776332855
    2. ' reverse' → logprob: -3.2880699634552
    3. '(reverse' → logprob: -10.663069725036621
    4. 'r' → logprob: -12.913069725036621
    5. 're' → logprob: -13.913069725036621
    6. ' ' → logprob: -15.038069725036621
    7. '   ' → logprob: -15.288069725036621
    8. '  ' → logprob: -15.288069725036621
    9. '```' → logprob: -15.413069725036621
    10. '.reverse' → logprob: -15.663069725036621

Token 25: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -8.554343366995454e-05
    2. '=' → logprob: -9.375085830688477
    3. '(True' → logprob: -14.750085830688477
    4. '='' → logprob: -16.375085830688477
    5. 'True' → logprob: -16.750085830688477
    6. '=s' → logprob: -17.125085830688477
    7. ' =' → logprob: -17.500085830688477
    8. '=False' → logprob: -17.750085830688477
    9. '=T' → logprob: -17.875085830688477
    10. ''=' → logprob: -18.000085830688477

Token 26: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.006497346796095371
    2. '))' → logprob: -5.131497383117676
    3. ')' → logprob: -8.131497383117676
    4. ')))
' → logprob: -8.756497383117676
    5. '')))' → logprob: -9.506497383117676
    6. '))))' → logprob: -10.256497383117676
    7. ')))

' → logprob: -13.506497383117676
    8. ' ' → logprob: -13.756497383117676
    9. ')));' → logprob: -14.006497383117676
    10. '())))' → logprob: -14.506497383117676

Token 27: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6640933156013489
    2. '   ' → logprob: -0.7890933156013489
    3. 'max' → logprob: -4.914093494415283
    4. 'print' → logprob: -5.289093494415283
    5. '<|end|>' → logprob: -5.664093494415283
    6. '    
' → logprob: -6.414093494415283
    7. '    ' → logprob: -6.539093494415283
    8. '
' → logprob: -6.914093494415283
    9. ')
' → logprob: -7.039093494415283
    10. ',' → logprob: -7.039093494415283

Token 28: ' min' (ID: 1349)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5533791780471802
    2. '   ' → logprob: -1.4283791780471802
    3. 'print' → logprob: -2.8033790588378906
    4. '
' → logprob: -3.5533790588378906
    5. 'max' → logprob: -3.6783790588378906
    6. ' print' → logprob: -4.053379058837891
    7. ' if' → logprob: -4.678379058837891
    8. ')
' → logprob: -4.803379058837891
    9. '    
' → logprob: -4.928379058837891
    10. ' max' → logprob: -5.803379058837891

Token 29: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0003079334564972669
    2. '_' → logprob: -8.3753080368042
    3. '_val' → logprob: -9.6253080368042
    4. '_n' → logprob: -12.0003080368042
    5. '_nums' → logprob: -13.7503080368042
    6. '_Num' → logprob: -14.3753080368042
    7. ' _' → logprob: -14.7503080368042
    8. '__' → logprob: -14.7503080368042
    9. '```' → logprob: -14.8753080368042
    10. '_number' → logprob: -15.0003080368042

Token 30: '=int' (ID: 37431)
  Prédit: '=int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=int' → logprob: -0.2519642114639282
    2. '=' → logprob: -1.5019642114639282
    3. ' =' → logprob: -10.751964569091797
    4. '=
' → logprob: -12.376964569091797
    5. '=

' → logprob: -12.501964569091797
    6. '_=' → logprob: -13.001964569091797
    7. '=min' → logprob: -14.251964569091797
    8. 'int' → logprob: -14.376964569091797
    9. '==' → logprob: -14.751964569091797
    10. '＝' → logprob: -14.876964569091797

Token 31: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0006522706826217473
    2. '(' → logprob: -7.375652313232422
    3. '(('' → logprob: -10.625652313232422
    4. ' (' → logprob: -14.375652313232422
    5. '('').' → logprob: -15.375652313232422
    6. '(
' → logprob: -15.500652313232422
    7. '("' → logprob: -15.625652313232422
    8. ' ' → logprob: -16.875652313232422
    9. '("("' → logprob: -17.000652313232422
    10. '('.' → logprob: -17.375652313232422

Token 32: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.0001329791557509452
    2. '('' → logprob: -9.62513256072998
    3. '''' → logprob: -10.25013256072998
    4. ' ''.' → logprob: -10.50013256072998
    5. '   ' → logprob: -14.12513256072998
    6. '  ' → logprob: -14.50013256072998
    7. ''' → logprob: -14.87513256072998
    8. ''',' → logprob: -14.87513256072998
    9. '(' → logprob: -15.12513256072998
    10. ' ' → logprob: -15.25013256072998

Token 33: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.00121916679199785
    2. '''.' → logprob: -6.751219272613525
    3. ''' → logprob: -10.751218795776367
    4. ''.' → logprob: -11.001218795776367
    5. '.join' → logprob: -12.751218795776367
    6. '(join' → logprob: -13.251218795776367
    7. '```' → logprob: -13.626218795776367
    8. 's' → logprob: -14.126218795776367
    9. 'sorted' → logprob: -14.126218795776367
    10. ' join' → logprob: -14.126218795776367

Token 34: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -1.0087516784551553e-05
    2. 'sorted' → logprob: -11.62501049041748
    3. '(' → logprob: -14.12501049041748
    4. '(s' → logprob: -15.62501049041748
    5. ' sorted' → logprob: -15.87501049041748
    6. '('' → logprob: -17.250009536743164
    7. ')' → logprob: -19.000009536743164
    8. '.sorted' → logprob: -19.875009536743164
    9. '(sort' → logprob: -20.000009536743164
    10. '(['' → logprob: -20.000009536743164

Token 35: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.5570885807392187e-05
    2. '(' → logprob: -11.375015258789062
    3. 's' → logprob: -12.500015258789062
    4. ' (' → logprob: -15.250015258789062
    5. ')' → logprob: -18.250015258789062
    6. '(
' → logprob: -19.000015258789062
    7. '(sorted' → logprob: -19.250015258789062
    8. ' ' → logprob: -20.250015258789062
    9. '((' → logprob: -20.250015258789062
    10. '(S' → logprob: -20.625015258789062

Token 36: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.13521426916122437
    2. '(s' → logprob: -2.510214328765869
    3. '))' → logprob: -3.260214328765869
    4. '(' → logprob: -5.385214328765869
    5. '())))' → logprob: -7.010214328765869
    6. '()))' → logprob: -7.885214328765869
    7. ',' → logprob: -7.885214328765869
    8. 's' → logprob: -8.760213851928711
    9. ',s' → logprob: -9.260213851928711
    10. ')))
' → logprob: -9.385213851928711

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06803638488054276
    2. 'num' → logprob: -3.8180363178253174
    3. 'print' → logprob: -3.8180363178253174
    4. 'diff' → logprob: -4.4430365562438965
    5. ')' → logprob: -6.1930365562438965
    6. '<|end|>' → logprob: -6.1930365562438965
    7. '    
' → logprob: -6.4430365562438965
    8. '```' → logprob: -7.0680365562438965
    9. 'result' → logprob: -7.4430365562438965
    10. 'res' → logprob: -7.9430365562438965

Token 38: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.33800193667411804
    2. '   ' → logprob: -1.3380019664764404
    3. 'num' → logprob: -4.588001728057861
    4. ' print' → logprob: -5.588001728057861
    5. '```' → logprob: -5.838001728057861
    6. 'n' → logprob: -5.963001728057861
    7. 'diff' → logprob: -6.463001728057861
    8. '    
' → logprob: -7.463001728057861
    9. 'd' → logprob: -7.838001728057861
    10. ')' → logprob: -8.21300220489502

Token 39: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0004061242798343301
    2. '(' → logprob: -8.000406265258789
    3. '(abs' → logprob: -9.750406265258789
    4. '(min' → logprob: -11.625406265258789
    5. '((' → logprob: -12.750406265258789
    6. 'max' → logprob: -14.875406265258789
    7. ' (' → logprob: -16.75040626525879
    8. ' max' → logprob: -17.50040626525879
    9. '()' → logprob: -17.62540626525879
    10. '(x' → logprob: -17.87540626525879

Token 40: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -1.4736459888808895e-05
    2. '_max' → logprob: -12.000014305114746
    3. '_' → logprob: -13.000014305114746
    4. ' _' → logprob: -13.000014305114746
    5. ')' → logprob: -13.625014305114746
    6. ')_' → logprob: -13.750014305114746
    7. '_NUM' → logprob: -15.125014305114746
    8. '_nums' → logprob: -15.625014305114746
    9. '```' → logprob: -15.625014305114746
    10. '-_' → logprob: -15.750014305114746

Token 41: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8524630665779114
    2. '-min' → logprob: -0.8524630665779114
    3. ' -' → logprob: -1.9774630069732666
    4. ')' → logprob: -4.977463245391846
    5. '-max' → logprob: -6.602463245391846
    6. '-m' → logprob: -8.727462768554688
    7. '-)' → logprob: -8.977462768554688
    8. ' )' → logprob: -9.477462768554688
    9. '-int' → logprob: -9.852462768554688
    10. ')-' → logprob: -10.227462768554688

Token 42: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.10020806640386581
    2. ' min' → logprob: -2.350208044052124
    3. 'max' → logprob: -13.975208282470703
    4. '(min' → logprob: -15.350208282470703
    5. '	min' → logprob: -15.600208282470703
    6. ' ' → logprob: -17.100208282470703
    7. ' max' → logprob: -17.475208282470703
    8. '   ' → logprob: -17.475208282470703
    9. '_min' → logprob: -17.850208282470703
    10. '=min' → logprob: -18.225208282470703

Token 43: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0017635977128520608
    2. '_' → logprob: -6.501763820648193
    3. 'er' → logprob: -9.126763343811035
    4. ' _' → logprob: -10.126763343811035
    5. 'um' → logprob: -10.751763343811035
    6. 'u' → logprob: -11.376763343811035
    7. '```' → logprob: -11.376763343811035
    8. 'num' → logprob: -11.501763343811035
    9. ')_' → logprob: -12.251763343811035
    10. '_str' → logprob: -12.251763343811035

Token 44: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.897412822581828e-05
    2. '))' → logprob: -9.625068664550781
    3. '`)' → logprob: -13.500068664550781
    4. '')' → logprob: -13.625068664550781
    5. ')`' → logprob: -16.12506866455078
    6. ')
' → logprob: -16.50006866455078
    7. ' )' → logprob: -16.62506866455078
    8. ')))' → logprob: -17.37506866455078
    9. '")' → logprob: -18.00006866455078
    10. ')}' → logprob: -18.00006866455078


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 42
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 21
Tokens correctement prédits (top 10): 32
Précision stricte (1ère position): 47.62%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 76.19%
================================================================================
