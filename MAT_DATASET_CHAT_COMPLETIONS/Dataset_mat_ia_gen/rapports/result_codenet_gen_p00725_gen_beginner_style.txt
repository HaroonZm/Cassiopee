================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from collections import deque

def can_throw(board, x, y, dx, dy, w, h):
    nx, ny = x + dx, y + dy
    if 0 <= nx < h and 0 <= ny < w:
        if board[nx][ny] == 1:
            return False
        else:
            return True
    return False

def solve(w, h, board):
    start = None
    goal = None
    for i in range(h):
        for j in range(w):
            if board[i][j] == 2:
                start = (i, j)
            elif board[i][j] == 3:
                goal = (i, j)

    directions = [(-1,0),(1,0),(0,-1),(0,1)]
    max_moves = 10

    queue = deque()
    queue.append( (start[0], start[1], 0, board) )
    visited = set()

    def board_to_tuple(b):
        return tuple(tuple(row) for row in b)

    visited.add( (start[0], start[1], board_to_tuple(board)) )

    while queue:
        x, y, moves, b = queue.popleft()

        if moves >= max_moves:
            continue
        for dx, dy in directions:
            if not can_throw(b, x, y, dx, dy, w, h):
                continue
            # move stone in direction dx, dy until hit a block or goal or out of board
            nx, ny = x, y
            while True:
                nx += dx
                ny += dy
                if not (0 <= nx < h and 0 <= ny < w):
                    # stone goes out of board, failure, discard this move
                    nx = -1
                    break
                if b[nx][ny] == 1:
                    # hits a block, stops at previous square
                    nx -= dx
                    ny -= dy
                    break
                if b[nx][ny] == 3:
                    # reached goal
                    return moves+1
            if nx == -1 and ny == -1:
                # out of board, skip
                continue
            if (nx, ny) == (x, y):
                # no movement, skip
                continue

            # Remove the block that was hit if any
            new_board = [list(row) for row in b]
            # block position is position next to where stone stopped in movement direction
            block_x, block_y = nx + dx, ny + dy
            if 0 <= block_x < h and 0 <= block_y < w:
                if new_board[block_x][block_y] == 1:
                    new_board[block_x][block_y] = 0

            state_tuple = (nx, ny, board_to_tuple(new_board))
            if state_tuple in visited:
                continue
            visited.add(state_tuple)
            queue.append( (nx, ny, moves+1, new_board) )

    return -1

def main():
    input_lines = sys.stdin.read().strip().split('\n')
    idx = 0
    while True:
        if idx >= len(input_lines):
            break
        line = input_lines[idx]
        idx += 1
        if line == '0 0':
            break
        w, h = map(int, line.split())
        board = []
        for _ in range(h):
            row = list(map(int, input_lines[idx].split()))
            idx +=1
            board.append(row)
        print(solve(w, h, board))

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20001201331615448
    2. '.' → logprob: -2.450011968612671
    3. '<|end|>' → logprob: -2.825011968612671
    4. '\' → logprob: -4.70001220703125
    5. 'newline' → logprob: -5.07501220703125
    6. 'import' → logprob: -5.07501220703125
    7. '' → logprob: -5.82501220703125
    8. '
' → logprob: -5.82501220703125
    9. '<|end|>' → logprob: -5.82501220703125
    10. '\r' → logprob: -6.32501220703125

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.009589752182364464
    2. 'os' → logprob: -5.259589672088623
    3. ' collections' → logprob: -7.009589672088623
    4. ' ' → logprob: -7.134589672088623
    5. ' math' → logprob: -7.384589672088623
    6. ' pathlib' → logprob: -7.634589672088623
    7. ' Py' → logprob: -8.509590148925781
    8. ' typing' → logprob: -8.759590148925781
    9. 'collections' → logprob: -8.759590148925781
    10. ' ' → logprob: -9.009590148925781

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.10346996039152145
    2. 'import' → logprob: -2.3534698486328125
    3. '.' → logprob: -5.8534698486328125
    4. ' ' → logprob: -8.978469848632812
    5. '```' → logprob: -9.728469848632812
    6. ' defaultdict' → logprob: -9.978469848632812
    7. '_' → logprob: -10.228469848632812
    8. ' ```' → logprob: -10.728469848632812
    9. '	import' → logprob: -11.228469848632812
    10. '.import' → logprob: -11.228469848632812

Token 6: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.5196100473403931
    2. ' defaultdict' → logprob: -1.019610047340393
    3. 'deque' → logprob: -3.1446099281311035
    4. ' named' → logprob: -7.6446099281311035
    5. ' abc' → logprob: -7.6446099281311035
    6. ' Counter' → logprob: -8.394610404968262
    7. 'default' → logprob: -9.394610404968262
    8. 'named' → logprob: -9.644610404968262
    9. 'abc' → logprob: -9.769610404968262
    10. ' Ordered' → logprob: -11.269610404968262

Token 7: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.9286866784095764
    2. '\n' → logprob: -1.0536866188049316
    3. '
' → logprob: -1.9286866188049316
    4. 'import' → logprob: -3.1786866188049316
    5. '```' → logprob: -3.3036866188049316
    6. '\' → logprob: -3.8036866188049316
    7. '<|end|>' → logprob: -5.803686618804932
    8. 'newline' → logprob: -6.178686618804932
    9. '' → logprob: -6.928686618804932
    10. '<|end|>' → logprob: -7.053686618804932

Token 8: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3328877687454224
    2. 'd' → logprob: -1.4578877687454224
    3. '```' → logprob: -2.207887649536133
    4. '`' → logprob: -2.207887649536133
    5. 'b' → logprob: -2.332887649536133
    6. '\' → logprob: -3.332887649536133
    7. 'import' → logprob: -3.332887649536133
    8. 'a' → logprob: -3.832887649536133
    9. ',' → logprob: -4.457887649536133
    10. 'q' → logprob: -4.832887649536133

Token 9: ' can' (ID: 665)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.001463692169636488
    2. ' bfs' → logprob: -6.876463890075684
    3. ' process' → logprob: -9.251463890075684
    4. ' space' → logprob: -9.876463890075684
    5. ' dfs' → logprob: -10.126463890075684
    6. ' main' → logprob: -10.376463890075684
    7. ' ```' → logprob: -10.376463890075684
    8. ' ' → logprob: -11.001463890075684
    9. ' )' → logprob: -11.126463890075684
    10. ' BFS' → logprob: -11.501463890075684

Token 10: '_throw' (ID: 182836)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08729597181081772
    2. '_accept' → logprob: -3.3372960090637207
    3. ' _' → logprob: -4.087296009063721
    4. '_access' → logprob: -4.837296009063721
    5. '_use' → logprob: -5.587296009063721
    6. '_jump' → logprob: -5.587296009063721
    7. '_process' → logprob: -6.087296009063721
    8. '_continue' → logprob: -6.337296009063721
    9. ' ' → logprob: -6.712296009063721
    10. '_complete' → logprob: -6.962296009063721

Token 11: '(board' (ID: 41261)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11269460618495941
    2. '(' → logprob: -2.612694501876831
    3. '_exception' → logprob: -5.36269474029541
    4. '_object' → logprob: -5.61269474029541
    5. '_p' → logprob: -5.73769474029541
    6. '_ball' → logprob: -5.86269474029541
    7. ' (' → logprob: -5.86269474029541
    8. ' ' → logprob: -5.86269474029541
    9. '_throw' → logprob: -6.23769474029541
    10. '_s' → logprob: -6.73769474029541

Token 12: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0047547840513288975
    2. '):' → logprob: -6.004755020141602
    3. '[' → logprob: -6.504755020141602
    4. ')' → logprob: -7.379755020141602
    5. ' ,' → logprob: -9.129755020141602
    6. ':' → logprob: -11.754755020141602
    7. '[int' → logprob: -11.879755020141602
    8. '[row' → logprob: -12.379755020141602
    9. ' ):' → logprob: -12.879755020141602
    10. ' ' → logprob: -13.004755020141602

Token 13: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.5974518060684204
    2. ' row' → logprob: -2.097451686859131
    3. ' ball' → logprob: -2.222451686859131
    4. ' piece' → logprob: -2.222451686859131
    5. ' player' → logprob: -2.347451686859131
    6. 'x' → logprob: -2.347451686859131
    7. 'row' → logprob: -2.972451686859131
    8. ' start' → logprob: -3.347451686859131
    9. ' hand' → logprob: -3.972451686859131
    10. ' r' → logprob: -4.097451686859131

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032283025211654603
    2. '+' → logprob: -8.750323295593262
    3. ')' → logprob: -9.750323295593262
    4. ',y' → logprob: -10.125323295593262
    5. '[' → logprob: -10.500323295593262
    6. ' ,' → logprob: -11.000323295593262
    7. '+,' → logprob: -12.375323295593262
    8. '):' → logprob: -12.625323295593262
    9. '1' → logprob: -13.000323295593262
    10. ' +' → logprob: -13.250323295593262

Token 15: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5759573578834534
    2. 'y' → logprob: -0.8259573578834534
    3. ' ' → logprob: -11.325957298278809
    4. '	y' → logprob: -13.200957298278809
    5. '  ' → logprob: -13.575957298278809
    6. '   ' → logprob: -13.700957298278809
    7. '    ' → logprob: -13.825957298278809
    8. ' ' → logprob: -16.200958251953125
    9. ',' → logprob: -16.388458251953125
    10. ',y' → logprob: -16.513458251953125

Token 16: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6810281276702881
    2. ',' → logprob: -0.9310281276702881
    3. ')' → logprob: -2.306028127670288
    4. ' ):' → logprob: -10.181028366088867
    5. ' ,' → logprob: -10.931028366088867
    6. '):
' → logprob: -11.681028366088867
    7. '),' → logprob: -11.806028366088867
    8. ':' → logprob: -12.181028366088867
    9. ' )' → logprob: -12.181028366088867
    10. ' ' → logprob: -13.181028366088867

Token 17: ' dx' (ID: 29472)
  Prédit: ' direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.9461772441864014
    2. ' color' → logprob: -1.0711772441864014
    3. ' player' → logprob: -3.0711772441864014
    4. ' z' → logprob: -3.3211772441864014
    5. ' piece' → logprob: -3.8211772441864014
    6. ' ball' → logprob: -3.9461772441864014
    7. 'color' → logprob: -4.4461774826049805
    8. 'z' → logprob: -4.6336774826049805
    9. ' d' → logprob: -4.8836774826049805
    10. ' k' → logprob: -4.8836774826049805

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007323950994759798
    2. '):' → logprob: -5.132323741912842
    3. ')' → logprob: -6.632323741912842
    4. ' ,' → logprob: -10.25732421875
    5. '):
' → logprob: -10.25732421875
    6. '),' → logprob: -12.88232421875
    7. ' ):' → logprob: -14.13232421875
    8. ',y' → logprob: -14.50732421875
    9. ',
' → logprob: -14.75732421875
    10. '):

' → logprob: -15.13232421875

Token 19: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.14291109144687653
    2. 'dy' → logprob: -2.017911195755005
    3. ' ' → logprob: -8.642910957336426
    4. ' y' → logprob: -10.767910957336426
    5. 'y' → logprob: -10.767910957336426
    6. 'Dy' → logprob: -13.142910957336426
    7. ')' → logprob: -13.142910957336426
    8. '<|end|>' → logprob: -13.142910957336426
    9. '.dy' → logprob: -13.142910957336426
    10. 'd' → logprob: -13.392910957336426

Token 20: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000720891694072634
    2. ')' → logprob: -7.625720977783203
    3. ',' → logprob: -8.625720977783203
    4. ' ):' → logprob: -10.000720977783203
    5. ':' → logprob: -12.500720977783203
    6. '):
' → logprob: -12.875720977783203
    7. ''):' → logprob: -15.250720977783203
    8. ' ,' → logprob: -15.250720977783203
    9. ')):' → logprob: -15.750720977783203
    10. '),' → logprob: -16.000720977783203

Token 21: ' w' (ID: 286)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.6588926315307617
    2. ' length' → logprob: -1.6588926315307617
    3. ' color' → logprob: -1.7838926315307617
    4. ' k' → logprob: -2.4088926315307617
    5. ' max' → logprob: -3.0338926315307617
    6. ' ball' → logprob: -3.2838926315307617
    7. ' depth' → logprob: -3.2838926315307617
    8. ' distance' → logprob: -3.4088926315307617
    9. ' radius' → logprob: -3.9088926315307617
    10. ' t' → logprob: -4.158892631530762

Token 22: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.300685316324234
    2. ',' → logprob: -2.050685405731201
    3. ')' → logprob: -2.300685405731201
    4. 'e' → logprob: -4.175685405731201
    5. 'idth' → logprob: -4.425685405731201
    6. '=' → logprob: -7.050685405731201
    7. ' ):' → logprob: -7.300685405731201
    8. 'ith' → logprob: -7.800685405731201
    9. 'ight' → logprob: -8.425684928894043
    10. '_' → logprob: -8.675684928894043

Token 23: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5783891677856445
    2. ' h' → logprob: -0.8283891677856445
    3. ' ' → logprob: -8.203389167785645
    4. 'n' → logprob: -8.328389167785645
    5. ' n' → logprob: -8.328389167785645
    6. 'k' → logprob: -8.953389167785645
    7. ')' → logprob: -9.078389167785645
    8. 'H' → logprob: -9.140889167785645
    9. ' height' → logprob: -9.390889167785645
    10. '```' → logprob: -9.390889167785645

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003337886882945895
    2. ')' → logprob: -5.753337860107422
    3. ',' → logprob: -9.503337860107422
    4. ' ):' → logprob: -9.628337860107422
    5. '):
' → logprob: -11.378337860107422
    6. ':' → logprob: -12.503337860107422
    7. ''):' → logprob: -13.503337860107422
    8. '   ' → logprob: -13.878337860107422
    9. ' ' → logprob: -14.753337860107422
    10. ')：' → logprob: -14.878337860107422

Token 25: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03268785402178764
    2. ' :' → logprob: -4.032687664031982
    3. '):' → logprob: -4.532687664031982
    4. ')' → logprob: -6.657687664031982
    5. ' ' → logprob: -7.282687664031982
    6. '   ' → logprob: -7.282687664031982
    7. ' ):' → logprob: -8.15768814086914
    8. ':
' → logprob: -8.40768814086914
    9. ':return' → logprob: -8.65768814086914
    10. '    ' → logprob: -9.40768814086914

Token 26: ' nx' (ID: 50118)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5064703822135925
    2. '    ' → logprob: -1.3814704418182373
    3. '   ' → logprob: -3.1314704418182373
    4. '     
' → logprob: -3.6314704418182373
    5. ' )' → logprob: -4.756470203399658
    6. ')' → logprob: -5.006470203399658
    7. ' """' → logprob: -5.131470203399658
    8. ':' → logprob: -5.131470203399658
    9. ' return' → logprob: -5.256470203399658
    10. ' :' → logprob: -5.256470203399658

Token 27: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8635417222976685
    2. ' =' → logprob: -0.8635417222976685
    3. ',' → logprob: -1.9885417222976685
    4. '+' → logprob: -4.238541603088379
    5. ' ==' → logprob: -6.113541603088379
    6. ' +=' → logprob: -6.738541603088379
    7. ' ,' → logprob: -7.113541603088379
    8. ' +' → logprob: -8.113541603088379
    9. '+=' → logprob: -8.613541603088379
    10. ')' → logprob: -8.863541603088379

Token 28: ' ny' (ID: 4423)
  Prédit: ' ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ny' → logprob: -0.3485126495361328
    2. 'ny' → logprob: -1.2235126495361328
    3. 'n' → logprob: -10.223512649536133
    4. '=' → logprob: -11.598512649536133
    5. 'y' → logprob: -11.973512649536133
    6. ' ' → logprob: -12.848512649536133
    7. ' nny' → logprob: -12.848512649536133
    8. ' =' → logprob: -13.098512649536133
    9. 'NY' → logprob: -13.723512649536133
    10. ' n' → logprob: -14.098512649536133

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008616345934569836
    2. '=' → logprob: -4.7586164474487305
    3. ' +=' → logprob: -14.38361644744873
    4. ')' → logprob: -14.75861644744873
    5. ',' → logprob: -15.13361644744873
    6. ' ' → logprob: -15.38361644744873
    7. '=n' → logprob: -16.008615493774414
    8. ' =
' → logprob: -16.508615493774414
    9. ' =)' → logprob: -16.758615493774414
    10. '=x' → logprob: -17.383615493774414

Token 30: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.043065641075372696
    2. 'x' → logprob: -3.1680655479431152
    3. ' ' → logprob: -9.668066024780273
    4. '	x' → logprob: -13.293066024780273
    5. '    ' → logprob: -15.043066024780273
    6. ')x' → logprob: -15.293066024780273
    7. '  ' → logprob: -15.543066024780273
    8. '   ' → logprob: -15.668066024780273
    9. '(x' → logprob: -16.043066024780273
    10. '0' → logprob: -16.418066024780273

Token 31: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22559605538845062
    2. ' +' → logprob: -1.6005960702896118
    3. ' ' → logprob: -8.72559642791748
    4. '<|end|>' → logprob: -11.97559642791748
    5. ' plus' → logprob: -12.35059642791748
    6. '+n' → logprob: -13.47559642791748
    7. '+d' → logprob: -13.72559642791748
    8. ' ,' → logprob: -14.22559642791748
    9. '+,' → logprob: -14.22559642791748
    10. '+x' → logprob: -14.35059642791748

Token 32: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0006290406454354525
    2. ' dx' → logprob: -7.37562894821167
    3. '1' → logprob: -13.500629425048828
    4. ' ' → logprob: -14.375629425048828
    5. '   ' → logprob: -15.375629425048828
    6. '(dx' → logprob: -15.875629425048828
    7. '```' → logprob: -16.250629425048828
    8. 'd' → logprob: -16.750629425048828
    9. '_dx' → logprob: -16.875629425048828
    10. '  ' → logprob: -17.000629425048828

Token 33: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6967338919639587
    2. ' y' → logprob: -0.6967338919639587
    3. ' ' → logprob: -5.8217339515686035
    4. ' ' → logprob: -7.6967339515686035
    5. '<|end|>' → logprob: -9.196733474731445
    6. '	y' → logprob: -11.571733474731445
    7. '    ' → logprob: -12.071733474731445
    8. ''y' → logprob: -12.071733474731445
    9. ' ys' → logprob: -12.696733474731445
    10. ' ny' → logprob: -12.946733474731445

Token 35: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1427576243877411
    2. '+' → logprob: -2.0177576541900635
    3. '<|end|>' → logprob: -9.517757415771484
    4. '+y' → logprob: -12.517757415771484
    5. ' ' → logprob: -13.517757415771484
    6. '<|end|>' → logprob: -13.767757415771484
    7. ')' → logprob: -14.142757415771484
    8. ',' → logprob: -14.642757415771484
    9. ' +=' → logprob: -15.642757415771484
    10. ' +
' → logprob: -15.892757415771484

Token 36: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.1605122983455658
    2. ' dy' → logprob: -1.9105123281478882
    3. '1' → logprob: -8.28551197052002
    4. 'y' → logprob: -10.53551197052002
    5. ' ' → logprob: -12.28551197052002
    6. '.dy' → logprob: -12.91051197052002
    7. 'Dy' → logprob: -14.28551197052002
    8. 'wy' → logprob: -14.78551197052002
    9. 'qy' → logprob: -15.41051197052002
    10. 'd' → logprob: -15.53551197052002

Token 37: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7100287079811096
    2. '<|end|>' → logprob: -1.7100286483764648
    3. '\n' → logprob: -1.9600286483764648
    4. ' if' → logprob: -2.835028648376465
    5. ' 
' → logprob: -3.335028648376465
    6. ')' → logprob: -3.960028648376465
    7. '   ' → logprob: -4.210028648376465
    8. '  
' → logprob: -4.210028648376465
    9. '    
' → logprob: -4.960028648376465
    10. ' ' → logprob: -5.085028648376465

Token 39: ' if' (ID: 538)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7610177993774414
    2. ' if' → logprob: -1.3860177993774414
    3. 'while' → logprob: -1.7610177993774414
    4. 'if' (adapté à ' if') → logprob: -2.5110177993774414
    5. '<|end|>' → logprob: -3.8860177993774414
    6. ' ' → logprob: -5.511017799377441
    7. '
' → logprob: -6.386017799377441
    8. ' 
' → logprob: -6.636017799377441
    9. '#' → logprob: -8.136017799377441
    10. ',' → logprob: -8.261017799377441

Token 40: ' ' (ID: 220)
  Prédit: ' nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.4351051449775696
    2. ' ' → logprob: -2.060105085372925
    3. ' not' → logprob: -2.185105085372925
    4. '0' → logprob: -2.435105085372925
    5. 'nx' → logprob: -3.935105085372925
    6. '(nx' → logprob: -5.685105323791504
    7. 'not' → logprob: -6.685105323791504
    8. ' ny' → logprob: -7.685105323791504
    9. ' board' → logprob: -8.560105323791504
    10. ' (' → logprob: -8.685105323791504

Token 41: '0' (ID: 15)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.3287891745567322
    2. '0' → logprob: -1.578789234161377
    3. 'not' → logprob: -3.203789234161377
    4. ' not' → logprob: -4.203789234161377
    5. ' nx' → logprob: -4.328789234161377
    6. '(nx' → logprob: -5.453789234161377
    7. ' ' → logprob: -7.453789234161377
    8. 'ny' → logprob: -9.078788757324219
    9. '```' → logprob: -9.453788757324219
    10. 'board' → logprob: -9.578788757324219

Token 42: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.04938216507434845
    2. '<=' → logprob: -3.049382209777832
    3. ' >' → logprob: -7.424382209777832
    4. '>' → logprob: -9.174382209777832
    5. '<' → logprob: -10.299382209777832
    6. ' <' → logprob: -11.174382209777832
    7. 'x' → logprob: -11.424382209777832
    8. ' ' → logprob: -11.549382209777832
    9. '.' → logprob: -12.424382209777832
    10. '#' → logprob: -12.549382209777832

Token 43: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.34935465455055237
    2. 'nx' → logprob: -1.22435462474823
    3. 'ny' → logprob: -7.8493547439575195
    4. ' ny' → logprob: -7.8493547439575195
    5. '(nx' → logprob: -8.97435474395752
    6. ' ' → logprob: -13.84935474395752
    7. 'n' → logprob: -14.22435474395752
    8. 'Nx' → logprob: -14.59935474395752
    9. 'NX' → logprob: -15.22435474395752
    10. 'x' → logprob: -16.349353790283203

Token 44: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2520974576473236
    2. ' <' → logprob: -1.502097487449646
    3. ' and' → logprob: -9.877097129821777
    4. '[' → logprob: -10.002097129821777
    5. 'and' → logprob: -10.252097129821777
    6. ' ' → logprob: -11.002097129821777
    7. '<len' → logprob: -12.127097129821777
    8. '<n' → logprob: -12.627097129821777
    9. '<size' → logprob: -12.877097129821777
    10. '<w' → logprob: -13.127097129821777

Token 45: ' h' (ID: 312)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.31967246532440186
    2. ' w' → logprob: -1.3196724653244019
    3. 'h' → logprob: -5.444672584533691
    4. ' h' → logprob: -6.194672584533691
    5. ' ' → logprob: -10.569672584533691
    6. '	w' → logprob: -13.194672584533691
    7. ' ' → logprob: -14.069672584533691
    8. '   ' → logprob: -14.694672584533691
    9. ' len' → logprob: -15.319672584533691
    10. '<w' → logprob: -15.319672584533691

Token 46: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018184944987297058
    2. 'and' → logprob: -4.018185138702393
    3. ' ' → logprob: -10.268184661865234
    4. ')' → logprob: -15.643184661865234
    5. '<|end|>' → logprob: -15.643184661865234
    6. ' ' → logprob: -17.768184661865234
    7. '	and' → logprob: -18.018184661865234
    8. '   ' → logprob: -18.143184661865234
    9. ' и' → logprob: -18.268184661865234
    10. '0' → logprob: -18.393184661865234

Token 47: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42884761095046997
    2. '0' → logprob: -1.0538475513458252
    3. ' w' → logprob: -9.678847312927246
    4. 'w' → logprob: -9.678847312927246
    5. ' ' → logprob: -11.803847312927246
    6. '<|end|>' → logprob: -12.053847312927246
    7. '  ' → logprob: -13.053847312927246
    8. '1' → logprob: -13.866347312927246
    9. '    ' → logprob: -13.928847312927246
    10. ' ny' → logprob: -14.866347312927246

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1635356843471527
    2. 'w' → logprob: -1.913535714149475
    3. ' ' → logprob: -6.4135355949401855
    4. ' w' → logprob: -6.4135355949401855
    5. '<w' → logprob: -11.413536071777344
    6. 'y' → logprob: -12.663536071777344
    7. 'x' → logprob: -13.163536071777344
    8. 'wn' → logprob: -13.726036071777344
    9. '  ' → logprob: -13.851036071777344
    10. 'width' → logprob: -13.913536071777344

Token 49: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03204617649316788
    2. '<=' → logprob: -3.53204607963562
    3. ' <' → logprob: -6.282046318054199
    4. '<' → logprob: -8.1570463180542
    5. ' ' → logprob: -10.0320463180542
    6. ' ≤' → logprob: -11.1570463180542
    7. '    ' → logprob: -11.5320463180542
    8. '+' → logprob: -11.5320463180542
    9. '<|end|>' → logprob: -11.6570463180542
    10. '0' → logprob: -12.2820463180542

Token 50: ' ny' (ID: 4423)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.2014453113079071
    2. ' w' → logprob: -1.7014453411102295
    3. 'y' → logprob: -11.201445579528809
    4. ' y' → logprob: -11.451445579528809
    5. ' ' → logprob: -12.326445579528809
    6. ' ' → logprob: -14.701445579528809
    7. 'x' → logprob: -14.826445579528809
    8. 'h' → logprob: -15.076445579528809
    9. '	w' → logprob: -15.076445579528809
    10. '  ' → logprob: -15.201445579528809

Token 51: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.006729576736688614
    2. '<' → logprob: -5.006729602813721
    3. '<|end|>' → logprob: -11.631729125976562
    4. ' ' → logprob: -12.506729125976562
    5. '<n' → logprob: -15.381729125976562
    6. '<len' → logprob: -15.381729125976562
    7. '<size' → logprob: -15.631729125976562
    8. ' ' → logprob: -15.756729125976562
    9. '[' → logprob: -15.756729125976562
    10. '0' → logprob: -16.256729125976562

Token 52: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.012510710395872593
    2. ' w' → logprob: -4.387510776519775
    3. ' ' → logprob: -14.137510299682617
    4. '   ' → logprob: -16.012510299682617
    5. '	w' → logprob: -16.137510299682617
    6. '7' → logprob: -16.887510299682617
    7. '  ' → logprob: -17.137510299682617
    8. '```' → logprob: -17.637510299682617
    9. '<w' → logprob: -17.887510299682617
    10. '    ' → logprob: -18.137510299682617

Token 53: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01568707264959812
    2. ':' → logprob: -4.515686988830566
    3. 'and' → logprob: -5.390686988830566
    4. ':
' → logprob: -10.390686988830566
    5. ' :' → logprob: -11.140686988830566
    6. '   ' → logprob: -12.140686988830566
    7. '):' → logprob: -12.265686988830566
    8. '<|end|>' → logprob: -12.265686988830566
    9. ' ' → logprob: -12.640686988830566
    10. ',' → logprob: -13.390686988830566

Token 54: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0025063399225473404
    2. '    ' → logprob: -6.377506256103516
    3. 'and' → logprob: -7.752506256103516
    4. ' ' → logprob: -8.877506256103516
    5. '   ' → logprob: -9.127506256103516
    6. ':' → logprob: -9.877506256103516
    7. ' :' → logprob: -10.877506256103516
    8. ' return' → logprob: -11.127506256103516
    9. '       ' → logprob: -11.377506256103516
    10. '        ' → logprob: -12.752506256103516

Token 55: ' if' (ID: 538)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.912470817565918
    2. ' and' → logprob: -1.662470817565918
    3. ' if' → logprob: -1.912470817565918
    4. '           ' → logprob: -2.162470817565918
    5. '       ' → logprob: -2.412470817565918
    6. 'return' → logprob: -3.287470817565918
    7. 'if' (adapté à ' if') → logprob: -5.037470817565918
    8. '        ' → logprob: -6.037470817565918
    9. 'and' → logprob: -6.162470817565918
    10. '   ' → logprob: -6.287470817565918

Token 56: ' board' (ID: 6796)
  Prédit: ' board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' board' → logprob: -0.0007629302563145757
    2. 'board' → logprob: -7.250762939453125
    3. ' not' → logprob: -10.000762939453125
    4. '	board' → logprob: -12.625762939453125
    5. '(board' → logprob: -13.000762939453125
    6. '.board' → logprob: -13.875762939453125
    7. ' ' → logprob: -15.375762939453125
    8. ' ' → logprob: -15.375762939453125
    9. ' boards' → logprob: -16.000762939453125
    10. ' Board' → logprob: -16.375762939453125

Token 57: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.003609458915889263
    2. '[' → logprob: -5.628609657287598
    3. ' [' → logprob: -12.128609657287598
    4. '[x' → logprob: -13.628609657287598
    5. '][' → logprob: -14.378609657287598
    6. '```' → logprob: -14.503609657287598
    7. 'nx' → logprob: -15.503609657287598
    8. '[int' → logprob: -16.00360870361328
    9. '   ' → logprob: -16.25360870361328
    10. '[[' → logprob: -16.25360870361328

Token 58: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001234428636962548
    2. '[x' → logprob: -9.875123023986816
    3. '[' → logprob: -10.250123023986816
    4. '[n' → logprob: -10.750123023986816
    5. 'y' → logprob: -12.375123023986816
    6. 'nx' → logprob: -12.625123023986816
    7. '][' → logprob: -12.750123023986816
    8. '```' → logprob: -12.750123023986816
    9. ']' → logprob: -14.625123023986816
    10. '(nx' → logprob: -14.750123023986816

Token 59: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0069412789307534695
    2. ']' → logprob: -5.006941318511963
    3. ']==' → logprob: -9.256940841674805
    4. '[' → logprob: -9.756940841674805
    5. '[n' → logprob: -10.256940841674805
    6. ' ][' → logprob: -10.756940841674805
    7. ']!=' → logprob: -11.756940841674805
    8. '[y' → logprob: -13.381940841674805
    9. '   ' → logprob: -13.631940841674805
    10. '"][' → logprob: -14.131940841674805

Token 60: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -3.8889261304575484e-06
    2. ' ny' → logprob: -12.500003814697266
    3. 'nyi' → logprob: -16.250003814697266
    4. 'n' → logprob: -19.250003814697266
    5. '   ' → logprob: -19.375003814697266
    6. ''ny' → logprob: -20.000003814697266
    7. 'nym' → logprob: -20.125003814697266
    8. 'nj' → logprob: -20.250003814697266
    9. '```' → logprob: -20.250003814697266
    10. 'ney' → logprob: -20.250003814697266

Token 61: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024072794243693352
    2. ' ]' → logprob: -4.399072647094727
    3. ']==' → logprob: -4.774072647094727
    4. ')' → logprob: -6.774072647094727
    5. ']!=' → logprob: -7.149072647094727
    6. ' ==' → logprob: -8.024072647094727
    7. '[' → logprob: -9.024072647094727
    8. ' !=' → logprob: -9.024072647094727
    9. '==' → logprob: -9.149072647094727
    10. ' not' → logprob: -9.274072647094727

Token 62: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.8559125661849976
    2. ' ==' → logprob: -0.9809125661849976
    3. '==' → logprob: -2.355912685394287
    4. '!=' → logprob: -2.605912685394287
    5. ' is' → logprob: -4.355912685394287
    6. ' not' → logprob: -4.855912685394287
    7. ' in' → logprob: -5.605912685394287
    8. '[' → logprob: -5.980912685394287
    9. ' ' → logprob: -6.230912685394287
    10. ')' → logprob: -7.480912685394287

Token 63: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.40336838364601135
    2. ' '' → logprob: -1.903368353843689
    3. ''.' → logprob: -2.1533684730529785
    4. ' ' → logprob: -2.9033684730529785
    5. ' '.'' → logprob: -5.2783684730529785
    6. '0' → logprob: -5.4033684730529785
    7. '"' → logprob: -7.2783684730529785
    8. '1' → logprob: -7.5283684730529785
    9. ' '#'' → logprob: -9.27836799621582
    10. '32' → logprob: -9.27836799621582

Token 64: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5436317324638367
    2. ''.' → logprob: -0.9186317324638367
    3. '0' → logprob: -4.418631553649902
    4. '1' → logprob: -6.418631553649902
    5. ' '' → logprob: -6.418631553649902
    6. '"' → logprob: -6.668631553649902
    7. ' ' → logprob: -6.793631553649902
    8. '.' → logprob: -7.168631553649902
    9. ''#' → logprob: -7.918631553649902
    10. ' '.'' → logprob: -8.543631553649902

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0170244462788105
    2. ' and' → logprob: -4.892024517059326
    3. ' or' → logprob: -5.392024517059326
    4. ' :' → logprob: -6.142024517059326
    5. ':return' → logprob: -6.142024517059326
    6. ':
' → logprob: -8.142024040222168
    7. '):' → logprob: -9.017024040222168
    8. 'and' → logprob: -9.767024040222168
    9. '<|end|>' → logprob: -11.142024040222168
    10. ')' → logprob: -11.642024040222168

Token 66: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6371361017227173
    2. '       ' → logprob: -1.3871361017227173
    3. ':' → logprob: -2.5121359825134277
    4. ' and' → logprob: -2.7621359825134277
    5. ' or' → logprob: -3.8871359825134277
    6. ':return' → logprob: -4.512135982513428
    7. ' return' → logprob: -4.637135982513428
    8. '        ' → logprob: -4.637135982513428
    9. ':
' → logprob: -5.137135982513428
    10. ' :' → logprob: -5.637135982513428

Token 67: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.2250641584396362
    2. ' ' → logprob: -1.4750641584396362
    3. ' 
' → logprob: -1.4750641584396362
    4. '       ' → logprob: -1.8500641584396362
    5. 'return' (adapté à ' return') → logprob: -3.475064277648926
    6. ':return' → logprob: -4.350064277648926
    7. '           ' → logprob: -4.850064277648926
    8. '
' → logprob: -4.850064277648926
    9. '        ' → logprob: -4.975064277648926
    10. ':' → logprob: -5.975064277648926

Token 68: ' False' (ID: 7983)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.2347962111234665
    2. 'True' → logprob: -2.1097962856292725
    3. ' False' → logprob: -2.8597962856292725
    4. 'False' → logprob: -3.4847962856292725
    5. ' ' → logprob: -10.484796524047852
    6. '(True' → logprob: -11.609796524047852
    7. ' nx' → logprob: -11.859796524047852
    8. ' can' → logprob: -12.609796524047852
    9. 'can' → logprob: -12.984796524047852
    10. ' ' → logprob: -13.172296524047852

Token 69: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3817838430404663
    2. '       ' → logprob: -1.5067838430404663
    3. '
' → logprob: -2.506783962249756
    4. '<|end|>' → logprob: -4.756783962249756
    5. ' return' → logprob: -6.381783962249756
    6. '    
' → logprob: -6.506783962249756
    7. ' 
' → logprob: -7.881783962249756
    8. '        
' → logprob: -8.131783485412598
    9. ' ' → logprob: -8.131783485412598
    10. '	return' → logprob: -8.256783485412598

Token 70: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07438284903764725
    2. '
' → logprob: -3.074382781982422
    3. '       ' → logprob: -5.074382781982422
    4. ' return' → logprob: -5.074382781982422
    5. '<|end|>' → logprob: -5.449382781982422
    6. '    
' → logprob: -5.824382781982422
    7. '\n' → logprob: -6.949382781982422
    8. '	return' → logprob: -6.949382781982422
    9. ' 
' → logprob: -7.074382781982422
    10. ' ' → logprob: -7.199382781982422

Token 71: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07984711974859238
    2. '
' → logprob: -3.4548470973968506
    3. '       ' → logprob: -3.4548470973968506
    4. ' return' → logprob: -4.70484733581543
    5. ' else' → logprob: -6.45484733581543
    6. 'return' → logprob: -6.57984733581543
    7. '<|end|>' → logprob: -7.20484733581543
    8. '    
' → logprob: -8.57984733581543
    9. '	return' → logprob: -9.07984733581543
    10. ' ' → logprob: -9.20484733581543

Token 72: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28931915760040283
    2. ':' → logprob: -2.0393190383911133
    3. ' return' → logprob: -3.1643190383911133
    4. ':
' → logprob: -3.1643190383911133
    5. ':return' → logprob: -4.414319038391113
    6. '   ' → logprob: -4.539319038391113
    7. 'return' → logprob: -4.664319038391113
    8. '       ' → logprob: -5.789319038391113
    9. '
' → logprob: -7.914319038391113
    10. '          ' → logprob: -8.414319038391113

Token 73: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5011089444160461
    2. '           ' → logprob: -1.0011088848114014
    3. 'return' → logprob: -3.6261088848114014
    4. ' ' → logprob: -11.12610912322998
    5. ' ' → logprob: -11.50110912322998
    6. '       ' → logprob: -11.75110912322998
    7. '   ' → logprob: -12.00110912322998
    8. '               ' → logprob: -13.37610912322998
    9. ':return' → logprob: -13.50110912322998
    10. ' True' → logprob: -13.62610912322998

Token 74: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0676279217004776
    2. 'return' (adapté à ' return') → logprob: -2.8176279067993164
    3. '           ' → logprob: -5.192627906799316
    4. '       ' → logprob: -10.317627906799316
    5. ' ' → logprob: -11.192627906799316
    6. '   ' → logprob: -11.317627906799316
    7. '               ' → logprob: -11.567627906799316
    8. ':return' → logprob: -12.317627906799316
    9. 'eturn' → logprob: -12.567627906799316
    10. ' ' → logprob: -12.567627906799316

Token 75: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.624601423740387
    2. 'True' → logprob: -0.874601423740387
    3. ' can' → logprob: -3.624601364135742
    4. 'can' → logprob: -3.874601364135742
    5. 'board' → logprob: -10.749601364135742
    6. ' ' → logprob: -10.749601364135742
    7. ' not' → logprob: -11.999601364135742
    8. 'None' → logprob: -11.999601364135742
    9. ' board' → logprob: -12.249601364135742
    10. ' None' → logprob: -12.874601364135742

Token 76: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016156835481524467
    2. '<|end|>' → logprob: -4.6411566734313965
    3. '
' → logprob: -5.2661566734313965
    4. '\n' → logprob: -7.8911566734313965
    5. '<|end|>' → logprob: -8.641157150268555
    6. '    
' → logprob: -8.641157150268555
    7. '.' → logprob: -9.641157150268555
    8. ' ' → logprob: -9.766157150268555
    9. '  ' → logprob: -10.141157150268555
    10. '       ' → logprob: -10.141157150268555

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03659353777766228
    2. '
' → logprob: -4.036593437194824
    3. '<|end|>' → logprob: -4.286593437194824
    4. '\n' → logprob: -7.036593437194824
    5. 'else' → logprob: -7.161593437194824
    6. '    
' → logprob: -7.161593437194824
    7. ' else' → logprob: -7.536593437194824
    8. ' ' → logprob: -8.536593437194824
    9. '.' → logprob: -8.536593437194824
    10. ')' → logprob: -8.661593437194824

Token 78: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7692748308181763
    2. '   ' → logprob: -0.8942748308181763
    3. 'else' → logprob: -2.1442747116088867
    4. ' else' → logprob: -5.269274711608887
    5. ' return' → logprob: -5.644274711608887
    6. ' ' → logprob: -7.519274711608887
    7. 'elif' → logprob: -7.644274711608887
    8. '	return' → logprob: -8.394274711608887
    9. '
' → logprob: -8.894274711608887
    10. '  ' → logprob: -9.394274711608887

Token 79: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00317783304490149
    2. ' False' → logprob: -5.753177642822266
    3. 'True' → logprob: -15.878177642822266
    4. '(False' → logprob: -19.378177642822266
    5. 'None' → logprob: -20.628177642822266
    6. ' True' → logprob: -21.253177642822266
    7. '=False' → logprob: -22.503177642822266
    8. '0' → logprob: -22.628177642822266
    9. '   ' → logprob: -23.253177642822266
    10. 'false' → logprob: -23.628177642822266

Token 80: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8239038586616516
    2. 'def' → logprob: -1.0739037990570068
    3. '<|end|>' → logprob: -2.448903799057007
    4. ' 
' → logprob: -3.573903799057007
    5. '\n' → logprob: -3.823903799057007
    6. '```' → logprob: -4.073904037475586
    7. '\' → logprob: -4.198904037475586
    8. '#' → logprob: -4.573904037475586
    9. ':' → logprob: -4.823904037475586
    10. ')' → logprob: -4.948904037475586

Token 82: ' solve' (ID: 17722)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.024111082777380943
    2. ' solve' → logprob: -4.399111270904541
    3. ' is' → logprob: -5.774111270904541
    4. ' can' → logprob: -6.024111270904541
    5. 'b' → logprob: -6.149111270904541
    6. ' ' → logprob: -6.774111270904541
    7. ' valid' → logprob: -7.149111270904541
    8. ' find' → logprob: -7.524111270904541
    9. ' throw' → logprob: -8.274110794067383
    10. ' solution' → logprob: -8.399110794067383

Token 83: '(w' (ID: 7420)
  Prédit: '(board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(board' → logprob: -0.03421587124466896
    2. '(' → logprob: -3.4092159271240234
    3. '():' → logprob: -8.409215927124023
    4. '(Board' → logprob: -9.159215927124023
    5. '(queue' → logprob: -9.409215927124023
    6. '(grid' → logprob: -10.159215927124023
    7. '(root' → logprob: -11.034215927124023
    8. '(deck' → logprob: -11.284215927124023
    9. '(block' → logprob: -12.284215927124023
    10. '(s' → logprob: -12.284215927124023

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.704065213445574e-05
    2. ',h' → logprob: -10.625046730041504
    3. ' ,' → logprob: -10.750046730041504
    4. ',w' → logprob: -14.375046730041504
    5. ',
' → logprob: -15.375046730041504
    6. ',int' → logprob: -16.12504768371582
    7. '‌,' → logprob: -16.37504768371582
    8. ',y' → logprob: -16.37504768371582
    9. ',height' → logprob: -16.87504768371582
    10. '<|end|>' → logprob: -17.12504768371582

Token 85: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.10020741820335388
    2. ' h' → logprob: -2.3502073287963867
    3. ' ' → logprob: -15.100207328796387
    4. '```' → logprob: -15.600207328796387
    5. '	h' → logprob: -15.975207328796387
    6. '   ' → logprob: -16.225208282470703
    7. ',h' → logprob: -17.475208282470703
    8. ')' → logprob: -17.725208282470703
    9. ',' → logprob: -17.725208282470703
    10. '    ' → logprob: -18.100208282470703

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010370950913056731
    2. '):' → logprob: -6.876037120819092
    3. ' ,' → logprob: -12.626036643981934
    4. ')' → logprob: -15.376036643981934
    5. '‌,' → logprob: -16.37603759765625
    6. '   ' → logprob: -16.50103759765625
    7. ',
' → logprob: -16.62603759765625
    8. '),' → logprob: -17.00103759765625
    9. '):
' → logprob: -17.00103759765625
    10. ',b' → logprob: -17.25103759765625

Token 87: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.16047820448875427
    2. ' board' → logprob: -1.9104782342910767
    3. 'start' → logprob: -10.160478591918945
    4. 'boards' → logprob: -10.285478591918945
    5. '   ' → logprob: -10.410478591918945
    6. '	board' → logprob: -10.785478591918945
    7. 'b' → logprob: -10.847978591918945
    8. ' ' → logprob: -11.222978591918945
    9. 'grid' → logprob: -11.347978591918945
    10. ' start' → logprob: -11.722978591918945

Token 88: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1798151284456253
    2. ',' → logprob: -1.8048151731491089
    3. '):
' → logprob: -10.429815292358398
    4. ')' → logprob: -10.929815292358398
    5. ':' → logprob: -11.679815292358398
    6. ' ):' → logprob: -11.929815292358398
    7. '   ' → logprob: -12.804815292358398
    8. ' ,' → logprob: -13.554815292358398
    9. '):
' → logprob: -13.929815292358398
    10. ']:' → logprob: -15.304815292358398

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008976469398476183
    2. '```' → logprob: -7.5008978843688965
    3. ' queue' → logprob: -9.000897407531738
    4. '    ' → logprob: -9.625897407531738
    5. 'queue' → logprob: -10.625897407531738
    6. '    
' → logprob: -10.750897407531738
    7. '<|end|>' → logprob: -10.875897407531738
    8. '   ' → logprob: -10.875897407531738
    9. ',' → logprob: -11.625897407531738
    10. '	queue' → logprob: -11.625897407531738

Token 90: ' start' (ID: 1604)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.9256783723831177
    2. '   ' → logprob: -1.0506783723831177
    3. 'visited' → logprob: -2.550678253173828
    4. ' dist' → logprob: -2.800678253173828
    5. ' queue' → logprob: -2.925678253173828
    6. 'dist' → logprob: -3.425678253173828
    7. 'queue' → logprob: -4.550678253173828
    8. ' from' → logprob: -5.675678253173828
    9. ' q' → logprob: -5.800678253173828
    10. 'from' → logprob: -5.925678253173828

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01633874513208866
    2. '=' → logprob: -4.39133882522583
    3. '_x' → logprob: -6.01633882522583
    4. ',' → logprob: -7.39133882522583
    5. '_queue' → logprob: -8.141338348388672
    6. '_positions' → logprob: -8.891338348388672
    7. 'x' → logprob: -9.141338348388672
    8. '_points' → logprob: -10.141338348388672
    9. 's' → logprob: -10.266338348388672
    10. ' ' → logprob: -10.266338348388672

Token 92: ' None' (ID: 4662)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5702126026153564
    2. 'None' → logprob: -1.4452126026153564
    3. ' None' → logprob: -2.3202126026153564
    4. '(None' → logprob: -2.9452126026153564
    5. ' (' → logprob: -3.0702126026153564
    6. '[]' → logprob: -7.820212364196777
    7. '()' → logprob: -7.945212364196777
    8. '(-' → logprob: -8.070212364196777
    9. 'deque' → logprob: -8.070212364196777
    10. '[(' → logprob: -9.445212364196777

Token 93: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04389289766550064
    2. '<|end|>' → logprob: -3.7938928604125977
    3. '   ' → logprob: -4.293892860412598
    4. '    
' → logprob: -6.293892860412598
    5. '<|end|>' → logprob: -6.543892860412598
    6. '  
' → logprob: -6.918892860412598
    7. ' for' → logprob: -7.168892860412598
    8. 'for' → logprob: -7.793892860412598
    9. 'newline' → logprob: -7.918892860412598
    10. ' 
' → logprob: -8.668892860412598

Token 94: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.059071559458971024
    2. ' for' → logprob: -3.1840715408325195
    3. '   ' → logprob: -5.1840715408325195
    4. 'for' → logprob: -5.4340715408325195
    5. '    
' → logprob: -5.8090715408325195
    6. ' 
' → logprob: -7.1840715408325195
    7. '  
' → logprob: -7.3090715408325195
    8. '
' → logprob: -7.6840715408325195
    9. '<|end|>' → logprob: -7.6840715408325195
    10. '   
' → logprob: -9.18407154083252

Token 95: ' goal' (ID: 8583)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015398927964270115
    2. ' for' → logprob: -4.765398979187012
    3. '   ' → logprob: -5.140398979187012
    4. 'end' → logprob: -7.765398979187012
    5. 'queue' → logprob: -8.015398979187012
    6. 'found' → logprob: -9.390398979187012
    7. 'goal' (adapté à ' goal') → logprob: -11.140398979187012
    8. 'targets' → logprob: -11.390398979187012
    9. ' queue' → logprob: -12.015398979187012
    10. 'visited' → logprob: -12.140398979187012

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804344683885574
    2. '=' → logprob: -3.28804349899292
    3. '=None' → logprob: -13.663043022155762
    4. ' ' → logprob: -14.413043022155762
    5. '<|end|>' → logprob: -16.538043975830078
    6. ',' → logprob: -16.663043975830078
    7. ')' → logprob: -17.038043975830078
    8. 's' → logprob: -18.163043975830078
    9. '   ' → logprob: -18.288043975830078
    10. '  ' → logprob: -18.538043975830078

Token 97: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.28398430347442627
    2. ' None' → logprob: -1.4089843034744263
    3. '(None' → logprob: -6.158984184265137
    4. '(' → logprob: -7.658984184265137
    5. ' (' → logprob: -9.033984184265137
    6. '[]' → logprob: -9.283984184265137
    7. ' ' → logprob: -12.033984184265137
    8. 'deque' → logprob: -12.283984184265137
    9. ' []' → logprob: -12.533984184265137
    10. '0' → logprob: -12.658984184265137

Token 98: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1291017383337021
    2. '   ' → logprob: -2.2541017532348633
    3. '<|end|>' → logprob: -4.504101753234863
    4. ' for' → logprob: -5.629101753234863
    5. '    
' → logprob: -7.629101753234863
    6. 'for' → logprob: -8.004101753234863
    7. '<|end|>' → logprob: -8.129101753234863
    8. '  
' → logprob: -8.379101753234863
    9. '
' → logprob: -10.129101753234863
    10. ' 
' → logprob: -10.379101753234863

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4019051790237427
    2. ' for' → logprob: -1.1519051790237427
    3. 'for' → logprob: -4.276905059814453
    4. '
' → logprob: -7.026905059814453
    5. '<|end|>' → logprob: -9.151905059814453
    6. '    
' → logprob: -11.276905059814453
    7. '	for' → logprob: -11.526905059814453
    8. '```' → logprob: -11.651905059814453
    9. '<|end|>' → logprob: -12.526905059814453
    10. '  
' → logprob: -13.901905059814453

Token 100: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.39925122261047363
    2. 'for' (adapté à ' for') → logprob: -1.1492512226104736
    3. '   ' → logprob: -4.3992509841918945
    4. '
' → logprob: -11.399250984191895
    5. '	for' → logprob: -12.524250984191895
    6. ' ' → logprob: -14.399250984191895
    7. '```' → logprob: -14.649250984191895
    8. '  ' → logprob: -15.149250984191895
    9. 'found' → logprob: -15.149250984191895
    10. '    
' → logprob: -15.274250984191895

Token 101: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08219891041517258
    2. ' x' → logprob: -3.2071988582611084
    3. 'i' → logprob: -3.3321988582611084
    4. 'x' → logprob: -5.9571990966796875
    5. ' ' → logprob: -9.707199096679688
    6. ' row' → logprob: -10.207199096679688
    7. ' r' → logprob: -11.582199096679688
    8. 'row' → logprob: -11.832199096679688
    9. ' range' → logprob: -12.332199096679688
    10. 'range' → logprob: -12.582199096679688

Token 102: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009847339242696762
    2. 'in' → logprob: -4.634847164154053
    3. ' ' → logprob: -9.384847640991211
    4. ' range' → logprob: -13.259847640991211
    5. 'range' → logprob: -13.634847640991211
    6. ',' → logprob: -13.759847640991211
    7. '	in' → logprob: -14.259847640991211
    8. '   ' → logprob: -14.384847640991211
    9. '```' → logprob: -15.009847640991211
    10. '    ' → logprob: -15.134847640991211

Token 103: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02975349873304367
    2. ' range' → logprob: -3.5297534465789795
    3. '(range' → logprob: -12.779753684997559
    4. 'ange' → logprob: -16.279752731323242
    5. ' xrange' → logprob: -16.904752731323242
    6. '	range' → logprob: -16.904752731323242
    7. 'rang' → logprob: -19.029752731323242
    8. '_range' → logprob: -19.154752731323242
    9. '```' → logprob: -19.654752731323242
    10. '.range' → logprob: -20.029752731323242

Token 104: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.00010103991371579468
    2. '(' → logprob: -9.375101089477539
    3. 'h' → logprob: -11.375101089477539
    4. ' (' → logprob: -13.000101089477539
    5. '(w' → logprob: -13.250101089477539
    6. ' h' → logprob: -15.625101089477539
    7. '   ' → logprob: -15.875101089477539
    8. '	h' → logprob: -15.875101089477539
    9. '(len' → logprob: -16.50010108947754
    10. '(
' → logprob: -17.75010108947754

Token 105: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38721922039985657
    2. '):' → logprob: -1.1372191905975342
    3. ':' → logprob: -8.387219429016113
    4. '   ' → logprob: -9.887219429016113
    5. '):
' → logprob: -10.512219429016113
    6. ':
' → logprob: -11.137219429016113
    7. '<|end|>' → logprob: -11.137219429016113
    8. '):

' → logprob: -12.512219429016113
    9. '<|end|>' → logprob: -13.387219429016113
    10. '       ' → logprob: -13.512219429016113

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1396094560623169
    2. ':' → logprob: -3.0146093368530273
    3. '<|end|>' → logprob: -3.2646093368530273
    4. '   ' → logprob: -3.7646093368530273
    5. ' for' → logprob: -4.014609336853027
    6. '<|end|>' → logprob: -7.139609336853027
    7. ' ' → logprob: -7.889609336853027
    8. ':
' → logprob: -8.514609336853027
    9. 'for' → logprob: -9.639609336853027
    10. '    ' → logprob: -9.764609336853027

Token 107: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3170921206474304
    2. 'for' (adapté à ' for') → logprob: -1.3170921802520752
    3. '   ' → logprob: -5.567091941833496
    4. '```' → logprob: -14.442091941833496
    5. '	for' → logprob: -14.567091941833496
    6. '    ' → logprob: -15.067091941833496
    7. ' ' → logprob: -15.817091941833496
    8. '       ' → logprob: -16.817092895507812
    9. '    
' → logprob: -18.317092895507812
    10. ' line' → logprob: -18.442092895507812

Token 108: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.20141586661338806
    2. ' j' → logprob: -1.7014158964157104
    3. '<|end|>' → logprob: -13.576416015625
    4. 'y' → logprob: -14.701416015625
    5. '<|end|>' → logprob: -15.076416015625
    6. '	j' → logprob: -15.576416015625
    7. ' ' → logprob: -16.201416015625
    8. '_j' → logprob: -16.201416015625
    9. '```' → logprob: -16.326416015625
    10. '   ' → logprob: -16.451416015625

Token 109: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036216892767697573
    2. 'in' → logprob: -5.628621578216553
    3. ' ' → logprob: -10.878622055053711
    4. '<|end|>' → logprob: -14.503622055053711
    5. '	in' → logprob: -15.003622055053711
    6. '```' → logprob: -15.253622055053711
    7. '    ' → logprob: -15.503622055053711
    8. 'import' → logprob: -15.878622055053711
    9. '        ' → logprob: -15.878622055053711
    10. 's' → logprob: -15.878622055053711

Token 110: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5768502354621887
    2. ' range' → logprob: -0.8268502354621887
    3. 'w' → logprob: -7.326850414276123
    4. ' w' → logprob: -8.326849937438965
    5. '(range' → logprob: -11.701849937438965
    6. '(w' → logprob: -12.951849937438965
    7. '_range' → logprob: -17.20185089111328
    8. ' xrange' → logprob: -18.07685089111328
    9. 'Range' → logprob: -18.20185089111328
    10. '(' → logprob: -18.32685089111328

Token 111: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -1.0280383548888494e-06
    2. 'w' → logprob: -14.250000953674316
    3. '(' → logprob: -15.250000953674316
    4. '<w' → logprob: -17.250001907348633
    5. ' (' → logprob: -18.250001907348633
    6. '(width' → logprob: -18.625001907348633
    7. '(W' → logprob: -18.750001907348633
    8. ' w' → logprob: -18.875001907348633
    9. '(s' → logprob: -19.000001907348633
    10. '=w' → logprob: -19.500001907348633

Token 112: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02692527137696743
    2. '):
' → logprob: -3.6519253253936768
    3. ':' → logprob: -7.901925086975098
    4. ')' → logprob: -8.526925086975098
    5. '):

' → logprob: -11.026925086975098
    6. 'if' → logprob: -11.901925086975098
    7. '<|end|>' → logprob: -11.901925086975098
    8. '):
' → logprob: -12.026925086975098
    9. '       ' → logprob: -12.651925086975098
    10. ' ):' → logprob: -13.276925086975098

Token 113: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016688160598278046
    2. ':' → logprob: -4.891688346862793
    3. ' if' → logprob: -5.266688346862793
    4. '       ' → logprob: -6.141688346862793
    5. '```' → logprob: -7.641688346862793
    6. ',' → logprob: -7.891688346862793
    7. ':
' → logprob: -8.016688346862793
    8. '<|end|>' → logprob: -8.391688346862793
    9. 'if' → logprob: -8.641688346862793
    10. '<|end|>' → logprob: -9.891688346862793

Token 114: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05525132268667221
    2. 'if' (adapté à ' if') → logprob: -3.055251359939575
    3. '               ' → logprob: -5.555251121520996
    4. '           ' → logprob: -5.930251121520996
    5. '```' → logprob: -10.180251121520996
    6. '<|end|>' → logprob: -10.680251121520996
    7. '            ' → logprob: -10.930251121520996
    8. ' code' → logprob: -11.305251121520996
    9. '       ' → logprob: -11.930251121520996
    10. '   ' → logprob: -12.680251121520996

Token 115: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.3132779896259308
    2. ' board' → logprob: -1.3132779598236084
    3. '(board' → logprob: -11.313278198242188
    4. '	board' → logprob: -12.563278198242188
    5. '.board' → logprob: -15.813278198242188
    6. ' ' → logprob: -16.563278198242188
    7. '_board' → logprob: -16.563278198242188
    8. '           ' → logprob: -16.688278198242188
    9. ' not' → logprob: -17.563278198242188
    10. '               ' → logprob: -17.688278198242188

Token 116: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4498052223643754e-05
    2. '[j' → logprob: -11.250014305114746
    3. '```' → logprob: -14.375014305114746
    4. '[I' → logprob: -14.875014305114746
    5. ' [' → logprob: -15.500014305114746
    6. '][' → logprob: -16.375015258789062
    7. ')[' → logprob: -16.500015258789062
    8. '[' → logprob: -17.000015258789062
    9. '[n' → logprob: -17.375015258789062
    10. '``' → logprob: -17.625015258789062

Token 117: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003037650021724403
    2. '[i' → logprob: -8.750304222106934
    3. '[j' → logprob: -8.875304222106934
    4. ']' → logprob: -12.875304222106934
    5. '```' → logprob: -14.000304222106934
    6. '[' → logprob: -14.250304222106934
    7. ' ][' → logprob: -15.375304222106934
    8. ']][' → logprob: -15.375304222106934
    9. '}[' → logprob: -15.500304222106934
    10. ']==' → logprob: -15.625304222106934

Token 118: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.676981345459353e-06
    2. ' j' → logprob: -12.125005722045898
    3. '][' → logprob: -16.5000057220459
    4. '	j' → logprob: -16.7500057220459
    5. '[j' → logprob: -17.1250057220459
    6. ':j' → logprob: -17.8750057220459
    7. '   ' → logprob: -18.3750057220459
    8. '```' → logprob: -18.6250057220459
    9. ' ' → logprob: -18.7500057220459
    10. ',j' → logprob: -19.0000057220459

Token 119: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008172331377863884
    2. ']==' → logprob: -4.883172512054443
    3. '==' → logprob: -8.133172035217285
    4. ' ==' → logprob: -8.508172035217285
    5. ' ]' → logprob: -9.758172035217285
    6. ']=='' → logprob: -11.758172035217285
    7. '[' → logprob: -13.508172035217285
    8. ')' → logprob: -13.633172035217285
    9. '           ' → logprob: -14.633172035217285
    10. ']=="' → logprob: -14.883172035217285

Token 120: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11294135451316833
    2. '==' → logprob: -2.237941265106201
    3. '=='' → logprob: -9.98794174194336
    4. ']==' → logprob: -10.36294174194336
    5. ' ' → logprob: -11.48794174194336
    6. ']' → logprob: -11.73794174194336
    7. '[' → logprob: -12.11294174194336
    8. ' =='' → logprob: -12.73794174194336
    9. '=="' → logprob: -12.86294174194336
    10. ')' → logprob: -12.98794174194336

Token 121: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00804272573441267
    2. '3' → logprob: -5.883042812347412
    3. ''' → logprob: -6.008042812347412
    4. ''S' → logprob: -6.508042812347412
    5. 'S' → logprob: -7.883042812347412
    6. ''s' → logprob: -8.008042335510254
    7. ' ' → logprob: -8.133042335510254
    8. '-' → logprob: -9.883042335510254
    9. '   ' → logprob: -10.758042335510254
    10. '"' → logprob: -10.758042335510254

Token 122: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012602067552506924
    2. '3' → logprob: -5.012601852416992
    3. ''' → logprob: -6.137601852416992
    4. ''S' → logprob: -6.512601852416992
    5. ''s' → logprob: -6.637601852416992
    6. 'S' → logprob: -8.387601852416992
    7. '-' → logprob: -8.887601852416992
    8. '1' → logprob: -9.012601852416992
    9. '4' → logprob: -9.262601852416992
    10. ' ' → logprob: -10.012601852416992

Token 123: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012660914100706577
    2. ':
' → logprob: -4.387660980224609
    3. ' and' → logprob: -9.26266098022461
    4. ':start' → logprob: -10.38766098022461
    5. ':

' → logprob: -12.01266098022461
    6. '           ' → logprob: -12.26266098022461
    7. '):' → logprob: -12.51266098022461
    8. 'and' → logprob: -12.88766098022461
    9. ':return' → logprob: -13.38766098022461
    10. ' :' → logprob: -13.51266098022461

Token 124: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10949207842350006
    2. 'start' → logprob: -3.109492063522339
    3. ':' → logprob: -3.234492063522339
    4. ':start' → logprob: -4.359492301940918
    5. ':
' → logprob: -6.109492301940918
    6. ' start' → logprob: -6.234492301940918
    7. '           ' → logprob: -6.359492301940918
    8. '[start' → logprob: -8.359492301940918
    9. '=start' → logprob: -8.734492301940918
    10. '<|end|>' → logprob: -8.984492301940918

Token 125: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.16047412157058716
    2. 'start' (adapté à ' start') → logprob: -1.9104740619659424
    3. '               ' → logprob: -8.910473823547363
    4. '[start' → logprob: -9.410473823547363
    5. '	start' → logprob: -12.035473823547363
    6. '_start' → logprob: -12.035473823547363
    7. '
' → logprob: -12.410473823547363
    8. ':start' → logprob: -12.660473823547363
    9. '.start' → logprob: -12.785473823547363
    10. '                   ' → logprob: -13.410473823547363

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03365907073020935
    2. '=' → logprob: -3.408658981323242
    3. ',' → logprob: -11.283658981323242
    4. '<|end|>' → logprob: -15.283658981323242
    5. '=(' → logprob: -15.908658981323242
    6. ' =(' → logprob: -16.158658981323242
    7. ')' → logprob: -16.283658981323242
    8. ' ' → logprob: -16.533658981323242
    9. '=i' → logprob: -17.033658981323242
    10. '＝' → logprob: -17.158658981323242

Token 127: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.005238140933215618
    2. ' (' → logprob: -5.255238056182861
    3. '(' → logprob: -12.38023853302002
    4. '[i' → logprob: -16.380237579345703
    5. 'i' → logprob: -17.255237579345703
    6. '(j' → logprob: -19.005237579345703
    7. '(I' → logprob: -19.505237579345703
    8. ' i' → logprob: -19.630237579345703
    9. ' ' → logprob: -19.880237579345703
    10. '   ' → logprob: -20.255237579345703

Token 128: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.704273118884885e-07
    2. ' i' → logprob: -14.250000953674316
    3. ')i' → logprob: -19.0
    4. '	i' → logprob: -20.125
    5. 'j' → logprob: -20.5
    6. ')' → logprob: -20.5
    7. '<|end|>' → logprob: -20.625
    8. '
' → logprob: -22.0
    9. ',i' → logprob: -22.625
    10. 'x' → logprob: -22.75

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003571535926312208
    2. ',j' → logprob: -8.000357627868652
    3. ' ,' → logprob: -10.750357627868652
    4. '<|end|>' → logprob: -16.000356674194336
    5. 'j' → logprob: -16.625356674194336
    6. ')' → logprob: -17.125356674194336
    7. '‌,' → logprob: -17.625356674194336
    8. ',
' → logprob: -17.750356674194336
    9. ' ' → logprob: -18.750356674194336
    10. '<|end|>' → logprob: -19.250356674194336

Token 130: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0010329303331673145
    2. ' j' → logprob: -6.876032829284668
    3. '	j' → logprob: -16.501033782958984
    4. '   ' → logprob: -18.251033782958984
    5. '    ' → logprob: -18.751033782958984
    6. ')' → logprob: -19.501033782958984
    7. ' ' → logprob: -19.501033782958984
    8. '           ' → logprob: -19.751033782958984
    9. '  ' → logprob: -19.751033782958984
    10. '[j' → logprob: -20.001033782958984

Token 131: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008621785789728165
    2. ')
' → logprob: -4.758621692657471
    3. '           ' → logprob: -13.258622169494629
    4. '               ' → logprob: -13.508622169494629
    5. ')
' → logprob: -13.508622169494629
    6. ')

' → logprob: -14.008622169494629
    7. ' )' → logprob: -14.258622169494629
    8. '<|end|>' → logprob: -15.258622169494629
    9. '       ' → logprob: -15.633622169494629
    10. ',' → logprob: -16.008621215820312

Token 132: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006909898947924376
    2. 'elif' → logprob: -7.375690937042236
    3. ' elif' → logprob: -9.875691413879395
    4. '
' → logprob: -13.125691413879395
    5. '<|end|>' → logprob: -13.125691413879395
    6. 'continue' → logprob: -13.250691413879395
    7. '               ' → logprob: -13.375691413879395
    8. '```' → logprob: -13.375691413879395
    9. '          ' → logprob: -13.750691413879395
    10. ' continue' → logprob: -14.750691413879395

Token 133: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.047697488218545914
    2. ' elif' → logprob: -3.5476975440979004
    3. '           ' → logprob: -4.0476975440979
    4. 'if' → logprob: -8.422697067260742
    5. ' if' → logprob: -9.797697067260742
    6. '       ' → logprob: -10.047697067260742
    7. '	elif' → logprob: -12.297697067260742
    8. '               ' → logprob: -14.297697067260742
    9. '   ' → logprob: -15.922697067260742
    10. '          ' → logprob: -16.672697067260742

Token 134: ' board' (ID: 6796)
  Prédit: ' board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' board' → logprob: -0.1002136841416359
    2. 'board' → logprob: -2.3502137660980225
    3. '(board' → logprob: -12.225214004516602
    4. '	board' → logprob: -13.475214004516602
    5. ' ' → logprob: -14.850214004516602
    6. '.board' → logprob: -15.725214004516602
    7. ' ' → logprob: -16.6002140045166
    8. '0' → logprob: -16.9752140045166
    9. 'Board' → logprob: -17.6002140045166
    10. '1' → logprob: -18.3502140045166

Token 135: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[j' → logprob: -15.250000953674316
    3. '[' → logprob: -15.625000953674316
    4. '[I' → logprob: -17.0
    5. '```' → logprob: -17.125
    6. '<|end|>' → logprob: -17.625
    7. ' [' → logprob: -17.875
    8. '[
' → logprob: -18.0
    9. '[][' → logprob: -18.0
    10. 'import' → logprob: -18.125

Token 136: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0010479353368282318
    2. '[j' → logprob: -7.1260480880737305
    3. '[i' → logprob: -9.12604808807373
    4. '[' → logprob: -9.50104808807373
    5. ')[' → logprob: -10.62604808807373
    6. ']' → logprob: -12.25104808807373
    7. 'import' → logprob: -12.62604808807373
    8. 'def' → logprob: -12.87604808807373
    9. ' ][' → logprob: -12.87604808807373
    10. '[n' → logprob: -13.00104808807373

Token 137: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.011299865320324898
    2. '2' → logprob: -4.636300086975098
    3. '3' → logprob: -7.261300086975098
    4. '1' → logprob: -7.261300086975098
    5. 'i' → logprob: -10.136300086975098
    6. 'k' → logprob: -10.261300086975098
    7. '0' → logprob: -10.636300086975098
    8. 'None' → logprob: -11.136300086975098
    9. '```' → logprob: -11.386300086975098
    10. 'w' → logprob: -12.011300086975098

Token 138: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1216539517045021
    2. '==' → logprob: -2.8716540336608887
    3. ']==' → logprob: -2.9966540336608887
    4. ' ==' → logprob: -4.996654033660889
    5. '[' → logprob: -7.496654033660889
    6. '][' → logprob: -7.621654033660889
    7. '[]' → logprob: -9.24665355682373
    8. ')' → logprob: -10.37165355682373
    9. '```' → logprob: -11.49665355682373
    10. '[j' → logprob: -11.99665355682373

Token 139: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.386883020401001
    2. '==' → logprob: -1.136883020401001
    3. '[' → logprob: -12.261882781982422
    4. ']==' → logprob: -12.761882781982422
    5. '=' → logprob: -14.011882781982422
    6. ' ' → logprob: -14.511882781982422
    7. '[]' → logprob: -14.511882781982422
    8. '===' → logprob: -14.636882781982422
    9. ')==' → logprob: -14.761882781982422
    10. ')' → logprob: -14.886882781982422

Token 140: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.10085458308458328
    2. ' ' → logprob: -2.3508546352386475
    3. '0' → logprob: -7.600854396820068
    4. '(' → logprob: -9.475854873657227
    5. ' (' → logprob: -10.600854873657227
    6. '4' → logprob: -11.225854873657227
    7. '   ' → logprob: -11.413354873657227
    8. '1' → logprob: -12.163354873657227
    9. '9' → logprob: -12.788354873657227
    10. '```' → logprob: -13.350854873657227

Token 141: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0008360736537724733
    2. '4' → logprob: -7.87583589553833
    3. '5' → logprob: -8.875836372375488
    4. '0' → logprob: -9.000836372375488
    5. '9' → logprob: -9.375836372375488
    6. '1' → logprob: -10.375836372375488
    7. '7' → logprob: -11.063336372375488
    8. ' ' → logprob: -11.125836372375488
    9. '6' → logprob: -11.250836372375488
    10. '-' → logprob: -12.188336372375488

Token 142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03212883323431015
    2. ':
' → logprob: -3.5321288108825684
    3. ',' → logprob: -6.907128810882568
    4. '):' → logprob: -7.657128810882568
    5. '):
' → logprob: -8.032129287719727
    6. '<|end|>' → logprob: -8.282129287719727
    7. ')' → logprob: -8.907129287719727
    8. '           ' → logprob: -9.532129287719727
    9. '       ' → logprob: -10.532129287719727
    10. '               ' → logprob: -11.032129287719727

Token 143: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3797881305217743
    2. ' (' → logprob: -1.2547881603240967
    3. ' =' → logprob: -4.129787921905518
    4. ':' → logprob: -4.629787921905518
    5. '(' → logprob: -6.004787921905518
    6. '=' → logprob: -6.754787921905518
    7. ':
' → logprob: -7.254787921905518
    8. ',' → logprob: -8.754788398742676
    9. '=(' → logprob: -8.754788398742676
    10. '           ' → logprob: -9.254788398742676

Token 144: ' goal' (ID: 8583)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.015445633791387081
    2. '(goal' → logprob: -4.515445709228516
    3. ' goal' → logprob: -6.265445709228516
    4. '(' → logprob: -6.390445709228516
    5. 'goal' (adapté à ' goal') → logprob: -7.140445709228516
    6. '(i' → logprob: -11.890445709228516
    7. ' ' → logprob: -12.640445709228516
    8. '(go' → logprob: -13.140445709228516
    9. '(j' → logprob: -13.890445709228516
    10. '_goal' → logprob: -14.265445709228516

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326648592948914
    2. '=' → logprob: -1.3132665157318115
    3. '<|end|>' → logprob: -12.56326675415039
    4. ')' → logprob: -14.68826675415039
    5. ' ' → logprob: -15.43826675415039
    6. '=(' → logprob: -15.81326675415039
    7. ' =(' → logprob: -16.43826675415039
    8. '＝' → logprob: -16.81326675415039
    9. ' is' → logprob: -16.81326675415039
    10. '=None' → logprob: -16.93826675415039

Token 146: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.061969030648469925
    2. ' (' → logprob: -2.811969041824341
    3. '(' → logprob: -13.561968803405762
    4. ' ' → logprob: -17.061969757080078
    5. '(ii' → logprob: -18.186969757080078
    6. '(I' → logprob: -18.686969757080078
    7. '   ' → logprob: -19.936969757080078
    8. '[i' → logprob: -20.061969757080078
    9. '  ' → logprob: -20.186969757080078
    10. ' i' → logprob: -20.311969757080078

Token 147: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.994086627149954e-05
    2. ' i' → logprob: -9.625080108642578
    3. '(i' → logprob: -11.250080108642578
    4. ')' → logprob: -15.000080108642578
    5. ' (' → logprob: -15.125080108642578
    6. ')i' → logprob: -15.500080108642578
    7. '(' → logprob: -18.125080108642578
    8. ' ' → logprob: -18.250080108642578
    9. '[i' → logprob: -19.375080108642578
    10. '	i' → logprob: -19.500080108642578

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008048642775975168
    2. ',j' → logprob: -7.250804901123047
    3. ' ,' → logprob: -10.250804901123047
    4. '[' → logprob: -10.500804901123047
    5. '[j' → logprob: -11.000804901123047
    6. 'j' → logprob: -11.750804901123047
    7. '[i' → logprob: -13.000804901123047
    8. 'i' → logprob: -13.625804901123047
    9. ',i' → logprob: -13.750804901123047
    10. '][' → logprob: -14.250804901123047

Token 149: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002313334261998534
    2. 'j' → logprob: -6.502313137054443
    3. ' i' → logprob: -7.127313137054443
    4. ' j' → logprob: -12.377313613891602
    5. ')' → logprob: -13.252313613891602
    6. 'h' → logprob: -14.377313613891602
    7. '(i' → logprob: -15.002313613891602
    8. 'w' → logprob: -15.627313613891602
    9. ' ' → logprob: -15.877313613891602
    10. ')i' → logprob: -16.2523136138916

Token 150: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011307948443572968
    2. ')
' → logprob: -9.375113487243652
    3. ' )' → logprob: -11.125113487243652
    4. '<|end|>' → logprob: -11.750113487243652
    5. ')

' → logprob: -14.375113487243652
    6. '           ' → logprob: -14.375113487243652
    7. '       ' → logprob: -14.500113487243652
    8. '   ' → logprob: -14.875113487243652
    9. '<|end|>' → logprob: -14.875113487243652
    10. '#' → logprob: -15.000113487243652

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00031282080453820527
    2. '
' → logprob: -8.875312805175781
    3. '```' → logprob: -9.750312805175781
    4. '    
' → logprob: -10.500312805175781
    5. ' queue' → logprob: -10.625312805175781
    6. ' for' → logprob: -11.250312805175781
    7. ' visited' → logprob: -11.750312805175781
    8. 'queue' → logprob: -11.875312805175781
    9. ' while' → logprob: -12.250312805175781
    10. 'visited' → logprob: -12.625312805175781

Token 152: ' directions' (ID: 24921)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.7333356738090515
    2. 'queue' → logprob: -0.8583356738090515
    3. ' visited' → logprob: -3.7333357334136963
    4. 'q' → logprob: -3.8583357334136963
    5. '   ' → logprob: -4.108335494995117
    6. 'from' → logprob: -4.233335494995117
    7. ' queue' → logprob: -4.983335494995117
    8. 'dist' → logprob: -4.983335494995117
    9. '
' → logprob: -6.108335494995117
    10. 'dire' → logprob: -6.733335494995117

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -5.1689596148207784e-05
    2. '=' → logprob: -9.875051498413086
    3. ' ' → logprob: -16.250051498413086
    4. 's' → logprob: -16.625051498413086
    5. ' =[' → logprob: -17.375051498413086
    6. '<|end|>' → logprob: -18.125051498413086
    7. ':' → logprob: -18.375051498413086
    8. ' =)' → logprob: -18.375051498413086
    9. ' =
' → logprob: -18.500051498413086
    10. ')' → logprob: -19.000051498413086

Token 154: ' [' (ID: 723)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.049862466752529144
    2. '[' → logprob: -3.7998623847961426
    3. ' [(' → logprob: -3.7998623847961426
    4. ' [' → logprob: -5.549862384796143
    5. '[((' → logprob: -12.5498628616333
    6. '[-' → logprob: -15.4248628616333
    7. ' ' → logprob: -15.9248628616333
    8. '[
' → logprob: -15.9248628616333
    9. 'deque' → logprob: -17.674861907958984
    10. '[]' → logprob: -17.674861907958984

Token 155: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.023476069793105125
    2. '(' → logprob: -3.7734761238098145
    3. ' (-' → logprob: -8.773475646972656
    4. ' (' → logprob: -9.523475646972656
    5. '   ' → logprob: -13.273475646972656
    6. '(i' → logprob: -15.023475646972656
    7. '(up' → logprob: -15.398475646972656
    8. ' ' → logprob: -15.648475646972656
    9. '(+' → logprob: -16.273475646972656
    10. '((' → logprob: -17.148475646972656

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.250001907348633
    3. '2' → logprob: -16.000001907348633
    4. '-' → logprob: -16.125001907348633
    5. '0' → logprob: -16.625001907348633
    6. ')' → logprob: -17.250001907348633
    7. ' -' → logprob: -19.187501907348633
    8. '<|end|>' → logprob: -19.312501907348633
    9. '```' → logprob: -19.375001907348633
    10. '১' → logprob: -19.875001907348633

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005572011577896774
    2. ' ,' → logprob: -7.5005574226379395
    3. '0' → logprob: -12.500556945800781
    4. '),' → logprob: -14.500556945800781
    5. '<|end|>' → logprob: -17.62555694580078
    6. ')' → logprob: -18.00055694580078
    7. ' ' → logprob: -18.12555694580078
    8. '‌,' → logprob: -18.37555694580078
    9. ' ),' → logprob: -18.87555694580078
    10. '```' → logprob: -18.87555694580078

Token 158: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003178071230649948
    2. ' ' → logprob: -5.753178119659424
    3. '1' → logprob: -15.253177642822266
    4. '-' → logprob: -15.878177642822266
    5. ' ' → logprob: -17.628177642822266
    6. ')' → logprob: -18.003177642822266
    7. '   ' → logprob: -18.753177642822266
    8. '  ' → logprob: -19.565677642822266
    9. '    ' → logprob: -19.628177642822266
    10. '2' → logprob: -20.253177642822266

Token 159: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00023643692838959396
    2. '),(' → logprob: -8.875236511230469
    3. ' ),' → logprob: -9.500236511230469
    4. ')' → logprob: -11.250236511230469
    5. '),
' → logprob: -11.750236511230469
    6. '),

' → logprob: -14.750236511230469
    7. ')]' → logprob: -15.875236511230469
    8. ',),' → logprob: -15.875236511230469
    9. ',' → logprob: -16.25023651123047
    10. '],' → logprob: -16.62523651123047

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003609458915889263
    2. '0' → logprob: -5.628609657287598
    3. ' ' → logprob: -11.628609657287598
    4. '-' → logprob: -15.878609657287598
    5. '+' → logprob: -16.00360870361328
    6. '01' → logprob: -16.12860870361328
    7. '
' → logprob: -17.50360870361328
    8. '```' → logprob: -17.50360870361328
    9. '   ' → logprob: -17.62860870361328
    10. '2' → logprob: -18.06610870361328

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000497032655403018
    2. '0' → logprob: -7.625496864318848
    3. ' ,' → logprob: -11.625496864318848
    4. ' ' → logprob: -16.625497817993164
    5. '),(' → logprob: -17.125497817993164
    6. '),' → logprob: -18.250497817993164
    7. ')' → logprob: -18.250497817993164
    8. ',(' → logprob: -18.687997817993164
    9. '```' → logprob: -18.937997817993164
    10. '‌,' → logprob: -19.312997817993164

Token 162: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '۰' → logprob: -18.250015258789062
    4. '```' → logprob: -19.750015258789062
    5. '   ' → logprob: -20.062515258789062
    6. ',' → logprob: -20.062515258789062
    7. '０' → logprob: -20.562515258789062
    8. '00' → logprob: -20.687515258789062
    9. '  ' → logprob: -20.875015258789062
    10. '<|end|>' → logprob: -21.125015258789062

Token 163: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0008056987426243722
    2. '),' → logprob: -7.125805854797363
    3. ',' → logprob: -14.625805854797363
    4. ' ),' → logprob: -15.250805854797363
    5. ')]' → logprob: -15.625805854797363
    6. ',(' → logprob: -15.750805854797363
    7. ')' → logprob: -15.875805854797363
    8. '],[' → logprob: -16.500804901123047
    9. '0' → logprob: -17.125804901123047
    10. '(' → logprob: -17.250804901123047

Token 164: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.500003814697266
    3. '-' → logprob: -15.875003814697266
    4. '00' → logprob: -16.500003814697266
    5. '۰' → logprob: -16.625003814697266
    6. '   ' → logprob: -18.000003814697266
    7. '(' → logprob: -18.187503814697266
    8. ',' → logprob: -18.250003814697266
    9. '```' → logprob: -18.375003814697266
    10. '1' → logprob: -18.500003814697266

Token 165: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.011287610046565533
    2. ',' → logprob: -4.511287689208984
    3. '-' → logprob: -8.511287689208984
    4. '1' → logprob: -10.261287689208984
    5. ' ,-' → logprob: -13.011287689208984
    6. ' ,' → logprob: -14.886287689208984
    7. ',-
' → logprob: -15.011287689208984
    8. ',-

' → logprob: -15.886287689208984
    9. '-,' → logprob: -15.886287689208984
    10. ',
' → logprob: -16.511287689208984

Token 166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.500001907348633
    3. ',' → logprob: -14.375001907348633
    4. '```' → logprob: -17.375001907348633
    5. ')' → logprob: -17.812501907348633
    6. '+' → logprob: -17.937501907348633
    7. '۱' → logprob: -19.687501907348633
    8. '-' → logprob: -19.687501907348633
    9. '<|end|>' → logprob: -19.687501907348633
    10. '
' → logprob: -19.812501907348633

Token 167: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.00024620062322355807
    2. ',' → logprob: -8.625246047973633
    3. '),' → logprob: -10.625246047973633
    4. ')]' → logprob: -10.875246047973633
    5. ',(' → logprob: -10.875246047973633
    6. ')' → logprob: -13.250246047973633
    7. '(' → logprob: -13.750246047973633
    8. '1' → logprob: -14.250246047973633
    9. '0' → logprob: -14.875246047973633
    10. '],[' → logprob: -15.250246047973633

Token 168: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0549277625977993
    2. '0' → logprob: -2.9299278259277344
    3. ' ' → logprob: -10.054927825927734
    4. '01' → logprob: -13.804927825927734
    5. ',' → logprob: -14.554927825927734
    6. '```' → logprob: -14.804927825927734
    7. ')' → logprob: -15.304927825927734
    8. '+' → logprob: -15.992427825927734
    9. '   ' → logprob: -16.929927825927734
    10. '
' → logprob: -16.929927825927734

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023250321100931615
    2. '1' → logprob: -8.375232696533203
    3. ',(' → logprob: -13.375232696533203
    4. ' ,' → logprob: -15.500232696533203
    5. ',+' → logprob: -15.625232696533203
    6. ',
' → logprob: -17.875232696533203
    7. '(' → logprob: -17.875232696533203
    8. ',-' → logprob: -18.125232696533203
    9. ',[' → logprob: -18.875232696533203
    10. ')' → logprob: -19.000232696533203

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2246291337069124e-05
    2. ' ' → logprob: -10.750021934509277
    3. '+' → logprob: -14.875021934509277
    4. '0' → logprob: -15.375021934509277
    5. '```' → logprob: -16.250022888183594
    6. ')' → logprob: -17.187522888183594
    7. '2' → logprob: -18.687522888183594
    8. '   ' → logprob: -19.312522888183594
    9. '11' → logprob: -19.375022888183594
    10. '``' → logprob: -19.500022888183594

Token 171: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0051615312695503235
    2. ']' → logprob: -5.755161762237549
    3. ')' → logprob: -6.380161762237549
    4. '])' → logprob: -9.13016128540039
    5. ')]
' → logprob: -9.88016128540039
    6. ' )' → logprob: -10.38016128540039
    7. ')])' → logprob: -10.63016128540039
    8. '])]' → logprob: -10.63016128540039
    9. ',' → logprob: -11.38016128540039
    10. '   ' → logprob: -11.63016128540039

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21192193031311035
    2. '
' → logprob: -1.7119219303131104
    3. 'queue' → logprob: -5.461921691894531
    4. ' queue' → logprob: -5.836921691894531
    5. '```' → logprob: -6.586921691894531
    6. 'visited' → logprob: -6.961921691894531
    7. ' visited' → logprob: -8.086921691894531
    8. '    
' → logprob: -8.211921691894531
    9. '	queue' → logprob: -8.711921691894531
    10. '  
' → logprob: -9.586921691894531

Token 173: ' max' (ID: 2999)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.2519305646419525
    2. 'visited' → logprob: -2.3769304752349854
    3. '   ' → logprob: -2.7519304752349854
    4. ' queue' → logprob: -3.0019304752349854
    5. ' visited' → logprob: -4.8769307136535645
    6. 'dist' → logprob: -5.2519307136535645
    7. 'q' → logprob: -6.0019307136535645
    8. '
' → logprob: -8.126930236816406
    9. ' dist' → logprob: -8.126930236816406
    10. 'que' → logprob: -8.876930236816406

Token 174: '_moves' (ID: 110706)
  Prédit: '_steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -0.5893712639808655
    2. '_moves' → logprob: -1.5893712043762207
    3. '_distance' → logprob: -2.3393712043762207
    4. '_dist' → logprob: -3.0893712043762207
    5. '_' → logprob: -3.4643712043762207
    6. '_queue' → logprob: -3.9643712043762207
    7. '_depth' → logprob: -4.089371204376221
    8. '_time' → logprob: -4.964371204376221
    9. '_j' → logprob: -5.214371204376221
    10. '_jump' → logprob: -5.464371204376221

Token 175: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002476016292348504
    2. '=' → logprob: -6.002476215362549
    3. ',' → logprob: -15.37747573852539
    4. ' ' → logprob: -17.12747573852539
    5. ' ' → logprob: -18.37747573852539
    6. '   ' → logprob: -18.75247573852539
    7. '=int' → logprob: -19.50247573852539
    8. ' =
' → logprob: -19.75247573852539
    9. '  ' → logprob: -20.12747573852539
    10. ' =
' → logprob: -20.50247573852539

Token 176: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.02650916390120983
    2. '5' → logprob: -5.2765092849731445
    3. '20' → logprob: -5.2765092849731445
    4. '100' → logprob: -5.2765092849731445
    5. '15' → logprob: -6.1515092849731445
    6. '3' → logprob: -6.4015092849731445
    7. '50' → logprob: -6.9015092849731445
    8. '11' → logprob: -6.9015092849731445
    9. '4' → logprob: -7.0265092849731445
    10. '7' → logprob: -7.1515092849731445

Token 177: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.008364219218492508
    2. '100' → logprob: -5.133364200592041
    3. '20' → logprob: -7.508364200592041
    4. '3' → logprob: -7.633364200592041
    5. '5' → logprob: -7.883364200592041
    6. '50' → logprob: -8.7583646774292
    7. '11' → logprob: -9.0083646774292
    8. '15' → logprob: -9.2583646774292
    9. '4' → logprob: -9.2583646774292
    10. '30' → logprob: -9.6333646774292

Token 178: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0024473541416227818
    2. '   ' → logprob: -6.252447128295898
    3. '  
' → logprob: -8.752447128295898
    4. '    
' → logprob: -8.877447128295898
    5. ' 
' → logprob: -9.877447128295898
    6. '
' → logprob: -10.252447128295898
    7. ',
' → logprob: -10.377447128295898
    8. ',' → logprob: -10.752447128295898
    9. 'queue' → logprob: -10.752447128295898
    10. ' queue' → logprob: -11.252447128295898

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014425568282604218
    2. '
' → logprob: -4.389425754547119
    3. 'queue' → logprob: -6.639425754547119
    4. ' queue' → logprob: -7.639425754547119
    5. '    
' → logprob: -9.389425277709961
    6. 'visited' → logprob: -10.764425277709961
    7. '```' → logprob: -11.639425277709961
    8. 'from' → logprob: -12.639425277709961
    9. ' visited' → logprob: -12.889425277709961
    10. 'def' → logprob: -13.639425277709961

Token 180: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.0844864472746849
    2. 'visited' → logprob: -2.584486484527588
    3. '   ' → logprob: -5.709486484527588
    4. 'from' → logprob: -7.209486484527588
    5. 'q' → logprob: -7.334486484527588
    6. ' queue' → logprob: -7.959486484527588
    7. ' visited' → logprob: -8.58448600769043
    8. 'dist' → logprob: -9.20948600769043
    9. 'dq' → logprob: -9.33448600769043
    10. 'que' → logprob: -9.70948600769043

Token 181: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001502717612311244
    2. '=' → logprob: -6.501502513885498
    3. ')' → logprob: -16.251502990722656
    4. ' ' → logprob: -16.501502990722656
    5. ',' → logprob: -16.501502990722656
    6. ' =
' → logprob: -17.001502990722656
    7. ' ' → logprob: -17.001502990722656
    8. ':' → logprob: -17.626502990722656
    9. '.' → logprob: -18.001502990722656
    10. '	' → logprob: -18.376502990722656

Token 182: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.005234002135694027
    2. ' deque' → logprob: -5.2552337646484375
    3. 'Deque' → logprob: -16.130233764648438
    4. 'de' → logprob: -16.255233764648438
    5. 'collections' → logprob: -18.380233764648438
    6. '(de' → logprob: -18.630233764648438
    7. '[(' → logprob: -19.005233764648438
    8. '```' → logprob: -19.880233764648438
    9. '	de' → logprob: -20.755233764648438
    10. '   ' → logprob: -21.505233764648438

Token 183: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.07936647534370422
    2. '()' → logprob: -2.579366445541382
    3. '([' → logprob: -7.954366683959961
    4. '()
' → logprob: -9.954366683959961
    5. '(' → logprob: -10.579366683959961
    6. '((' → logprob: -10.704366683959961
    7. '[(' → logprob: -11.579366683959961
    8. '([]' → logprob: -11.704366683959961
    9. '(((' → logprob: -12.454366683959961
    10. '()

' → logprob: -12.579366683959961

Token 184: '   ' (ID: 271)
  Prédit: '(queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(queue' → logprob: -0.9731200933456421
    2. '   ' → logprob: -1.098120093345642
    3. 'queue' → logprob: -1.598120093345642
    4. ' queue' → logprob: -2.4731202125549316
    5. ' (' → logprob: -7.598120212554932
    6. '[' → logprob: -7.973120212554932
    7. '	queue' → logprob: -8.223119735717773
    8. '[start' → logprob: -8.348119735717773
    9. '[(' → logprob: -8.598119735717773
    10. '(' → logprob: -8.973119735717773

Token 185: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.16022931039333344
    2. ' queue' → logprob: -1.9102293252944946
    3. '   ' → logprob: -12.410229682922363
    4. '(queue' → logprob: -14.035229682922363
    5. '	queue' → logprob: -16.285228729248047
    6. '
' → logprob: -16.660228729248047
    7. '.queue' → logprob: -17.285228729248047
    8. 'que' → logprob: -18.410228729248047
    9. '_queue' → logprob: -18.535228729248047
    10. 'visited' → logprob: -19.535228729248047

Token 186: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.392202976712724e-06
    2. '.extend' → logprob: -12.250006675720215
    3. '.enqueue' → logprob: -14.750006675720215
    4. '.put' → logprob: -15.125006675720215
    5. 'append' → logprob: -15.750006675720215
    6. '.' → logprob: -15.750006675720215
    7. ').' → logprob: -15.875006675720215
    8. '.push' → logprob: -16.2500057220459
    9. '_append' → logprob: -16.6250057220459
    10. '.Append' → logprob: -16.6250057220459

Token 187: '(' (ID: 7)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0010813985718414187
    2. '(((' → logprob: -6.876081466674805
    3. '(' → logprob: -10.501081466674805
    4. '(start' → logprob: -10.876081466674805
    5. '([(' → logprob: -13.376081466674805
    6. ' ((' → logprob: -15.126081466674805
    7. '((*' → logprob: -16.001081466674805
    8. '[(' → logprob: -16.501081466674805
    9. '(([' → logprob: -17.001081466674805
    10. '((((' → logprob: -17.001081466674805

Token 188: ' (' (ID: 350)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.0016450724797323346
    2. '(*' → logprob: -7.251645088195801
    3. '(' → logprob: -7.376645088195801
    4. '((' → logprob: -8.2516450881958
    5. ' (' → logprob: -10.2516450881958
    6. '((*' → logprob: -12.1266450881958
    7. '   ' → logprob: -12.8766450881958
    8. '[start' → logprob: -13.0016450881958
    9. '(s' → logprob: -14.6266450881958
    10. '(st' → logprob: -14.7516450881958

Token 189: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -2.7968066206085496e-05
    2. ' start' → logprob: -10.875027656555176
    3. '(start' → logprob: -12.250027656555176
    4. '0' → logprob: -13.500027656555176
    5. '2' → logprob: -13.750027656555176
    6. ')' → logprob: -13.875027656555176
    7. '[start' → logprob: -14.875027656555176
    8. '*' → logprob: -15.750027656555176
    9. '   ' → logprob: -15.750027656555176
    10. '(' → logprob: -17.000028610229492

Token 190: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012633961625397205
    2. ',' → logprob: -4.387633800506592
    3. ' ,' → logprob: -9.63763427734375
    4. '0' → logprob: -10.26263427734375
    5. ' ' → logprob: -10.88763427734375
    6. ')' → logprob: -13.38763427734375
    7. '   ' → logprob: -14.26263427734375
    8. '```' → logprob: -14.26263427734375
    9. ' [' → logprob: -14.38763427734375
    10. ' +' → logprob: -14.38763427734375

Token 191: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.375005722045898
    3. '
' → logprob: -14.625005722045898
    4. '   ' → logprob: -15.437505722045898
    5. '```' → logprob: -16.0625057220459
    6. '[' → logprob: -16.1875057220459
    7. '۰' → logprob: -16.3750057220459
    8. '

' → logprob: -16.9375057220459
    9. ')' → logprob: -17.0000057220459
    10. '-' → logprob: -17.3750057220459

Token 192: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033607007935643196
    2. ',start' → logprob: -6.253360748291016
    3. '],' → logprob: -6.628360748291016
    4. ' ,' → logprob: -9.503360748291016
    5. '},' → logprob: -11.128360748291016
    6. '>,' → logprob: -12.503360748291016
    7. '),' → logprob: -12.503360748291016
    8. '],[' → logprob: -12.878360748291016
    9. ',end' → logprob: -13.378360748291016
    10. '‌,' → logprob: -13.378360748291016

Token 193: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00317783304490149
    2. ' start' → logprob: -5.753177642822266
    3. '[start' → logprob: -16.753177642822266
    4. ',start' → logprob: -17.878177642822266
    5. '(start' → logprob: -18.253177642822266
    6. '	start' → logprob: -18.503177642822266
    7. ' ' → logprob: -18.628177642822266
    8. ':start' → logprob: -19.003177642822266
    9. '=start' → logprob: -19.003177642822266
    10. '
' → logprob: -19.628177642822266

Token 194: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010330495424568653
    2. '1' → logprob: -6.876032829284668
    3. '```' → logprob: -15.251032829284668
    4. '   ' → logprob: -17.251033782958984
    5. '-' → logprob: -17.876033782958984
    6. '][' → logprob: -18.001033782958984
    7. '[
' → logprob: -18.501033782958984
    8. ' ' → logprob: -18.501033782958984
    9. '
' → logprob: -18.876033782958984
    10. '.' → logprob: -19.001033782958984

Token 195: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. '
' → logprob: -14.375000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '```' → logprob: -15.500000953674316
    5. '[' → logprob: -16.250001907348633
    6. '0' → logprob: -16.250001907348633
    7. '-' → logprob: -17.187501907348633
    8. '   ' → logprob: -17.187501907348633
    9. '

' → logprob: -18.125001907348633
    10. '
' → logprob: -18.187501907348633

Token 196: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.8497312895488e-05
    2. ' ,' → logprob: -10.000068664550781
    3. '0' → logprob: -11.375068664550781
    4. '),' → logprob: -11.625068664550781
    5. '],' → logprob: -13.000068664550781
    6. '},' → logprob: -15.500068664550781
    7. '1' → logprob: -16.75006866455078
    8. ')' → logprob: -17.75006866455078
    9. ' ' → logprob: -18.50006866455078
    10. '   ' → logprob: -18.62506866455078

Token 197: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01107329223304987
    2. ' ' → logprob: -4.511073112487793
    3. '   ' → logprob: -11.136073112487793
    4. '  ' → logprob: -12.886073112487793
    5. ')' → logprob: -13.136073112487793
    6. 'max' → logprob: -13.261073112487793
    7. '1' → logprob: -13.761073112487793
    8. ' -' → logprob: -13.948573112487793
    9. '-' → logprob: -14.011073112487793
    10. 'None' → logprob: -15.198573112487793

Token 198: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.466968650580384e-05
    2. ' ' → logprob: -9.875054359436035
    3. '-' → logprob: -13.250054359436035
    4. '1' → logprob: -14.625054359436035
    5. 'max' → logprob: -15.500054359436035
    6. ')' → logprob: -15.500054359436035
    7. ' -' → logprob: -16.00005531311035
    8. '   ' → logprob: -16.12505531311035
    9. '10' → logprob: -17.06255531311035
    10. 'None' → logprob: -17.37505531311035

Token 199: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.847109812544659e-05
    2. ' )' → logprob: -10.375048637390137
    3. ',' → logprob: -11.125048637390137
    4. '))' → logprob: -13.000048637390137
    5. ')
' → logprob: -16.12504768371582
    6. ' ' → logprob: -17.75004768371582
    7. '0' → logprob: -18.00004768371582
    8. '}' → logprob: -18.00004768371582
    9. '   ' → logprob: -18.50004768371582
    10. ',)' → logprob: -18.50004768371582

Token 200: ' board' (ID: 6796)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06613651663064957
    2. '0' → logprob: -3.191136598587036
    3. 'None' → logprob: -4.316136360168457
    4. ' -' → logprob: -6.191136360168457
    5. 'False' → logprob: -6.191136360168457
    6. 'set' → logprob: -7.066136360168457
    7. '[])' → logprob: -7.566136360168457
    8. '[]' → logprob: -7.691136360168457
    9. ')' → logprob: -7.816136360168457
    10. 'start' → logprob: -7.941136360168457

Token 201: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022952310973778367
    2. '))' → logprob: -9.000229835510254
    3. '.copy' → logprob: -9.750229835510254
    4. ' )' → logprob: -10.000229835510254
    5. '))
' → logprob: -13.625229835510254
    6. ',' → logprob: -15.500229835510254
    7. '[:' → logprob: -15.625229835510254
    8. ' ))' → logprob: -15.750229835510254
    9. '))

' → logprob: -16.000228881835938
    10. ')
' → logprob: -16.250228881835938

Token 202: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011725161311915144
    2. ' )' → logprob: -9.125117301940918
    3. ')
' → logprob: -11.750117301940918
    4. ')

' → logprob: -15.750117301940918
    5. '))' → logprob: -16.0001163482666
    6. ',' → logprob: -16.8751163482666
    7. '   ' → logprob: -17.6251163482666
    8. '),' → logprob: -17.6251163482666
    9. ')`' → logprob: -17.6251163482666
    10. ')}' → logprob: -18.2501163482666

Token 203: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: ' visited' (ID: 18416)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1081880331039429
    2. ' while' → logprob: -1.1081880331039429
    3. 'while' → logprob: -1.2331880331039429
    4. '   ' → logprob: -3.4831881523132324
    5. '<|end|>' → logprob: -4.858188152313232
    6. ' 
' → logprob: -5.483188152313232
    7. '	while' → logprob: -6.483188152313232
    8. '    
' → logprob: -6.608188152313232
    9. ')' → logprob: -7.108188152313232
    10. 'visited' (adapté à ' visited') → logprob: -7.233188152313232

Token 205: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06201719865202904
    2. '=' → logprob: -2.8120172023773193
    3. '=set' → logprob: -9.937017440795898
    4. '.add' → logprob: -14.687017440795898
    5. '[' → logprob: -14.937017440795898
    6. 'set' → logprob: -15.937017440795898
    7. ',' → logprob: -16.6870174407959
    8. ')' → logprob: -16.6870174407959
    9. ' ' → logprob: -16.8120174407959
    10. 'add' → logprob: -17.3120174407959

Token 206: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.002605975838378072
    2. '{' → logprob: -6.00260591506958
    3. ' set' → logprob: -9.002606391906738
    4. '{}' → logprob: -12.002606391906738
    5. '[[' → logprob: -15.002606391906738
    6. '[]' → logprob: -15.127606391906738
    7. '(set' → logprob: -15.627606391906738
    8. '[{' → logprob: -15.877606391906738
    9. ' {(' → logprob: -16.377605438232422
    10. '	set' → logprob: -16.627605438232422

Token 207: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09581808745861053
    2. '()
' → logprob: -2.470818042755127
    3. '((' → logprob: -5.345818042755127
    4. '(' → logprob: -6.470818042755127
    5. '([(' → logprob: -8.220818519592285
    6. '(queue' → logprob: -8.970818519592285
    7. '   ' → logprob: -9.970818519592285
    8. '()

' → logprob: -9.970818519592285
    9. '()\' → logprob: -11.095818519592285
    10. '()
' → logprob: -11.845818519592285

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32303309440612793
    2. '<|end|>' → logprob: -1.698033094406128
    3. '(' → logprob: -3.698033094406128
    4. ' (' → logprob: -4.073033332824707
    5. ')' → logprob: -4.323033332824707
    6. ',' → logprob: -4.698033332824707
    7. ' ' → logprob: -5.448033332824707
    8. '    
' → logprob: -5.448033332824707
    9. '\' → logprob: -5.573033332824707
    10. ' 
' → logprob: -5.698033332824707

Token 209: ' def' (ID: 1056)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.591209888458252
    2. 'while' → logprob: -1.216209888458252
    3. '   ' → logprob: -2.091209888458252
    4. ' while' → logprob: -3.841209888458252
    5. ' visited' → logprob: -5.841209888458252
    6. ')' → logprob: -6.591209888458252
    7. '    
' → logprob: -8.466209411621094
    8. '(' → logprob: -9.216209411621094
    9. ' (' → logprob: -9.841209411621094
    10. '```' → logprob: -10.341209411621094

Token 210: ' board' (ID: 6796)
  Prédit: 'serialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'serialize' → logprob: -1.3004865646362305
    2. 'board' → logprob: -1.6754865646362305
    3. ' serialize' → logprob: -1.6754865646362305
    4. 'copy' → logprob: -2.6754865646362305
    5. ' board' → logprob: -2.6754865646362305
    6. ' deepcopy' → logprob: -2.9254865646362305
    7. 'hash' → logprob: -3.1754865646362305
    8. 'def' → logprob: -3.9254865646362305
    9. ' copy' → logprob: -4.0504865646362305
    10. ' def' → logprob: -4.5504865646362305

Token 211: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.3894689679145813
    2. '_hash' → logprob: -1.3894689083099365
    3. '_key' → logprob: -3.3894689083099365
    4. '_state' → logprob: -4.014469146728516
    5. '_signature' → logprob: -5.389469146728516
    6. 'to' → logprob: -5.514469146728516
    7. ')' → logprob: -5.889469146728516
    8. '_tuple' → logprob: -5.889469146728516
    9. '_' → logprob: -6.264469146728516
    10. '_repr' → logprob: -6.639469146728516

Token 212: '_tuple' (ID: 53371)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.03060430847108364
    2. '_tuple' → logprob: -3.530604362487793
    3. 'string' → logprob: -7.405604362487793
    4. '(tuple' → logprob: -10.030604362487793
    5. ' tuple' → logprob: -10.280604362487793
    6. 'immutable' → logprob: -10.280604362487793
    7. 'fro' → logprob: -10.405604362487793
    8. '_' → logprob: -10.405604362487793
    9. 'str' → logprob: -10.780604362487793
    10. 'tu' → logprob: -10.905604362487793

Token 213: '(b' (ID: 3229)
  Prédit: '(board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -0.06266099959611893
    2. '(b' → logprob: -2.8126609325408936
    3. '(' → logprob: -7.562661170959473
    4. '(matrix' → logprob: -9.812661170959473
    5. '(br' → logprob: -9.937661170959473
    6. '(row' → logprob: -10.687661170959473
    7. '(rows' → logprob: -11.562661170959473
    8. '(
' → logprob: -11.937661170959473
    9. '(bp' → logprob: -12.312661170959473
    10. '(arr' → logprob: -12.562661170959473

Token 214: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04668658599257469
    2. '):
' → logprob: -3.4216866493225098
    3. 'oard' → logprob: -5.42168664932251
    4. 'b' → logprob: -5.79668664932251
    5. '):

' → logprob: -6.17168664932251
    6. ')' → logprob: -6.79668664932251
    7. 'y' → logprob: -7.17168664932251
    8. '[][]' → logprob: -7.42168664932251
    9. '):
' → logprob: -8.421686172485352
    10. '[]):' → logprob: -8.671686172485352

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5381582379341125
    2. '   ' → logprob: -1.1631581783294678
    3. '(tuple' → logprob: -2.9131581783294678
    4. ' return' → logprob: -3.5381581783294678
    5. ' tuple' → logprob: -4.663158416748047
    6. 'tuple' → logprob: -5.538158416748047
    7. 'return' → logprob: -5.538158416748047
    8. '(' → logprob: -6.663158416748047
    9. '    
' → logprob: -7.538158416748047
    10. ' (' → logprob: -7.663158416748047

Token 216: ' return' (ID: 622)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.14387153089046478
    2. ' tuple' → logprob: -2.143871545791626
    3. 'return' (adapté à ' return') → logprob: -4.643871307373047
    4. '   ' → logprob: -5.018871307373047
    5. ' return' → logprob: -7.518871307373047
    6. '(tuple' → logprob: -10.768871307373047
    7. '       ' → logprob: -13.143871307373047
    8. '
' → logprob: -14.143871307373047
    9. '  ' → logprob: -14.143871307373047
    10. ' ' → logprob: -14.393871307373047

Token 217: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -1.5332478142227046e-05
    2. ' tuple' → logprob: -11.250015258789062
    3. '(tuple' → logprob: -13.000015258789062
    4. '   ' → logprob: -19.125015258789062
    5. 'tu' → logprob: -20.500015258789062
    6. '
' → logprob: -21.125015258789062
    7. '  ' → logprob: -22.375015258789062
    8. '

' → logprob: -22.750015258789062
    9. '```' → logprob: -22.750015258789062
    10. '_tuple' → logprob: -22.875015258789062

Token 218: '(tuple' (ID: 133029)
  Prédit: '(tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tuple' → logprob: -0.004801888018846512
    2. 'tuple' → logprob: -5.5048017501831055
    3. '(' → logprob: -7.2548017501831055
    4. '(map' → logprob: -11.379801750183105
    5. ' tuple' → logprob: -12.754801750183105
    6. '([' → logprob: -13.504801750183105
    7. '[' → logprob: -15.129801750183105
    8. 'map' → logprob: -15.504801750183105
    9. '(
' → logprob: -16.629802703857422
    10. '(row' → logprob: -17.129802703857422

Token 219: '(row' (ID: 15945)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.0003709701995830983
    2. '(row' → logprob: -8.000370979309082
    3. ' row' → logprob: -10.250370979309082
    4. '	row' → logprob: -16.000370025634766
    5. 'rows' → logprob: -16.875370025634766
    6. 'line' → logprob: -18.250370025634766
    7. '
' → logprob: -18.375370025634766
    8. '   ' → logprob: -18.875370025634766
    9. '[row' → logprob: -18.875370025634766
    10. '=row' → logprob: -19.125370025634766

Token 220: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3250414729118347
    2. ')' → logprob: -1.3250415325164795
    3. 'for' → logprob: -4.4500412940979
    4. '(row' → logprob: -11.950041770935059
    5. ' )' → logprob: -12.200041770935059
    6. '   ' → logprob: -12.200041770935059
    7. ' ' → logprob: -12.575041770935059
    8. ' in' → logprob: -12.950041770935059
    9. 'b' → logprob: -13.450041770935059
    10. '    ' → logprob: -13.700041770935059

Token 221: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13303148746490479
    2. 'for' → logprob: -2.1330313682556152
    3. ')' → logprob: -5.883031368255615
    4. '(row' → logprob: -6.633031368255615
    5. 'row' → logprob: -6.758031368255615
    6. ' row' → logprob: -7.633031368255615
    7. 'b' → logprob: -9.508031845092773
    8. '           ' → logprob: -9.633031845092773
    9. '        ' → logprob: -10.133031845092773
    10. ' b' → logprob: -10.383031845092773

Token 222: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.019223665818572044
    2. 'row' → logprob: -4.394223690032959
    3. ' b' → logprob: -5.394223690032959
    4. 'b' → logprob: -6.144223690032959
    5. '	row' → logprob: -13.2692232131958
    6. ' ' → logprob: -14.5192232131958
    7. '(row' → logprob: -14.8942232131958
    8. '=row' → logprob: -15.7692232131958
    9. ' ' → logprob: -16.019224166870117
    10. '	b' → logprob: -16.519224166870117

Token 223: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006297518964856863
    2. 'in' → logprob: -5.506297588348389
    3. 'b' → logprob: -6.131297588348389
    4. ' b' → logprob: -10.25629711151123
    5. 'row' → logprob: -12.88129711151123
    6. ' ' → logprob: -13.13129711151123
    7. '<|end|>' → logprob: -13.25629711151123
    8. ' row' → logprob: -14.88129711151123
    9. '<|end|>' → logprob: -15.38129711151123
    10. 's' → logprob: -15.38129711151123

Token 224: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06196768581867218
    2. ' b' → logprob: -2.811967611312866
    3. ')b' → logprob: -16.936967849731445
    4. '	b' → logprob: -17.311967849731445
    5. '[b' → logprob: -17.686967849731445
    6. '   ' → logprob: -18.186967849731445
    7. 'board' → logprob: -18.186967849731445
    8. ' ' → logprob: -18.436967849731445
    9. '
' → logprob: -18.686967849731445
    10. '(b' → logprob: -19.311967849731445

Token 225: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4736459888808895e-05
    2. '   ' → logprob: -11.250014305114746
    3. ' )' → logprob: -14.000014305114746
    4. ')
' → logprob: -14.500014305114746
    5. '())' → logprob: -15.500014305114746
    6. '))' → logprob: -16.000015258789062
    7. ')

' → logprob: -17.500015258789062
    8. '       ' → logprob: -18.250015258789062
    9. ')`' → logprob: -18.750015258789062
    10. '),' → logprob: -19.250015258789062

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5472675561904907
    2. '<|end|>' → logprob: -1.4222675561904907
    3. ')' → logprob: -2.547267436981201
    4. '
' → logprob: -2.797267436981201
    5. ' 
' → logprob: -4.547267436981201
    6. '  
' → logprob: -4.922267436981201
    7. '    
' → logprob: -5.172267436981201
    8. '<|end|>' → logprob: -5.672267436981201
    9. 'visited' → logprob: -6.172267436981201
    10. ' visited' → logprob: -6.422267436981201

Token 227: ' visited' (ID: 18416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9404591917991638
    2. 'while' → logprob: -1.0654592514038086
    3. ' while' → logprob: -1.4404592514038086
    4. 'visited' (adapté à ' visited') → logprob: -3.6904592514038086
    5. ' visited' → logprob: -6.065459251403809
    6. '	while' → logprob: -8.440459251403809
    7. '    
' → logprob: -8.565459251403809
    8. ')' → logprob: -8.815459251403809
    9. ',' → logprob: -10.065459251403809
    10. '
' → logprob: -10.065459251403809

Token 228: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.000431861262768507
    2. '.' → logprob: -7.750432014465332
    3. ' .' → logprob: -14.500432014465332
    4. '_add' → logprob: -15.125432014465332
    5. 'add' → logprob: -15.375432014465332
    6. '.update' → logprob: -16.625431060791016
    7. '.setdefault' → logprob: -16.625431060791016
    8. '.insert' → logprob: -17.375431060791016
    9. '.append' → logprob: -17.500431060791016
    10. '.Add' → logprob: -17.750431060791016

Token 229: '(' (ID: 7)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.2365858554840088
    2. '(' → logprob: -1.9865858554840088
    3. '(board' → logprob: -2.611585855484009
    4. '(((' → logprob: -10.11158561706543
    5. '(start' → logprob: -10.11158561706543
    6. ' (' → logprob: -11.36158561706543
    7. ' ((' → logprob: -12.36158561706543
    8. '((*' → logprob: -13.86158561706543
    9. '(Board' → logprob: -14.36158561706543
    10. '(('' → logprob: -14.98658561706543

Token 230: ' (' (ID: 350)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.007601300720125437
    2. '(' → logprob: -5.007601261138916
    3. '(board' → logprob: -7.507601261138916
    4. '((' → logprob: -8.382601737976074
    5. ' (' → logprob: -9.382601737976074
    6. '(i' → logprob: -11.132601737976074
    7. '(x' → logprob: -12.882601737976074
    8. '(s' → logprob: -13.632601737976074
    9. '(*' → logprob: -13.632601737976074
    10. '(state' → logprob: -14.132601737976074

Token 231: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -3.130576806142926e-05
    2. ' start' → logprob: -10.375031471252441
    3. '   ' → logprob: -17.500030517578125
    4. ')' → logprob: -17.625030517578125
    5. '0' → logprob: -18.500030517578125
    6. '(start' → logprob: -19.500030517578125
    7. 'can' → logprob: -19.625030517578125
    8. '  ' → logprob: -19.625030517578125
    9. '
' → logprob: -19.875030517578125
    10. '[start' → logprob: -20.125030517578125

Token 232: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6286106983898208e-05
    2. ')' → logprob: -11.250016212463379
    3. '0' → logprob: -13.125016212463379
    4. '(' → logprob: -15.125016212463379
    5. '```' → logprob: -15.500016212463379
    6. ' [' → logprob: -16.000017166137695
    7. ')}' → logprob: -16.000017166137695
    8. ' )' → logprob: -16.500017166137695
    9. '   ' → logprob: -16.500017166137695
    10. ' ' → logprob: -16.750017166137695

Token 233: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -14.125000953674316
    3. ' ' → logprob: -15.750000953674316
    4. '۰' → logprob: -16.750001907348633
    5. '```' → logprob: -16.875001907348633
    6. '])' → logprob: -17.125001907348633
    7. '2' → logprob: -17.687501907348633
    8. '
' → logprob: -18.000001907348633
    9. '   ' → logprob: -18.187501907348633
    10. ')' → logprob: -18.187501907348633

Token 234: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001569737563841045
    2. ',start' → logprob: -6.501569747924805
    3. ' ,' → logprob: -9.626569747924805
    4. ',
' → logprob: -14.626569747924805
    5. '[start' → logprob: -14.751569747924805
    6. 'start' → logprob: -15.001569747924805
    7. '(start' → logprob: -17.126569747924805
    8. '‌,' → logprob: -17.376569747924805
    9. '],' → logprob: -17.751569747924805
    10. '),' → logprob: -18.001569747924805

Token 235: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0007099286303855479
    2. ' start' → logprob: -7.2507100105285645
    3. '[start' → logprob: -20.500709533691406
    4. '(start' → logprob: -21.625709533691406
    5. '	start' → logprob: -21.625709533691406
    6. '   ' → logprob: -23.000709533691406
    7. ' ' → logprob: -23.125709533691406
    8. ':start' → logprob: -23.375709533691406
    9. 'Start' → logprob: -23.500709533691406
    10. '_start' → logprob: -24.375709533691406

Token 236: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.383526149671525e-05
    2. '][' → logprob: -10.375053405761719
    3. '1' → logprob: -11.250053405761719
    4. '],' → logprob: -12.000053405761719
    5. ',' → logprob: -13.375053405761719
    6. '   ' → logprob: -14.250053405761719
    7. '),' → logprob: -15.250053405761719
    8. ']' → logprob: -15.250053405761719
    9. '```' → logprob: -15.250053405761719
    10. '(' → logprob: -16.12505340576172

Token 237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.875001907348633
    3. '[' → logprob: -15.625001907348633
    4. '
' → logprob: -15.875001907348633
    5. '0' → logprob: -16.000001907348633
    6. ']' → logprob: -16.750001907348633
    7. '```' → logprob: -16.875001907348633
    8. '   ' → logprob: -17.250001907348633
    9. '

' → logprob: -17.500001907348633
    10. '])' → logprob: -17.750001907348633

Token 238: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009408952668309212
    2. '],' → logprob: -4.759408950805664
    3. '),' → logprob: -7.384408950805664
    4. ' ,' → logprob: -8.759408950805664
    5. ',
' → logprob: -12.259408950805664
    6. ',b' → logprob: -12.509408950805664
    7. '},' → logprob: -12.634408950805664
    8. '>,' → logprob: -13.759408950805664
    9. ')' → logprob: -14.634408950805664
    10. ',,' → logprob: -14.759408950805664

Token 239: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.005239326041191816
    2. ' board' → logprob: -5.255239486694336
    3. ')' → logprob: -13.005239486694336
    4. '   ' → logprob: -13.755239486694336
    5. ' ' → logprob: -14.005239486694336
    6. '	board' → logprob: -15.380239486694336
    7. '0' → logprob: -15.505239486694336
    8. '
' → logprob: -15.755239486694336
    9. '(board' → logprob: -15.755239486694336
    10. '  ' → logprob: -15.755239486694336

Token 240: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -9.610702363715973e-06
    2. 'to' → logprob: -11.875009536743164
    3. ')' → logprob: -13.375009536743164
    4. '))' → logprob: -14.750009536743164
    5. 'To' → logprob: -15.125009536743164
    6. ')]' → logprob: -16.125009536743164
    7. ')])' → logprob: -17.375009536743164
    8. ')))' → logprob: -17.500009536743164
    9. ')_' → logprob: -18.000009536743164
    10. '   ' → logprob: -18.125009536743164

Token 241: '_tuple' (ID: 53371)
  Prédit: '_tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -0.021441331133246422
    2. 'tuple' → logprob: -3.8964412212371826
    3. '(board' → logprob: -7.771441459655762
    4. ')' → logprob: -8.896441459655762
    5. '(b' → logprob: -9.146441459655762
    6. '
' → logprob: -9.646441459655762
    7. 'uple' → logprob: -10.146441459655762
    8. '(tuple' → logprob: -10.271441459655762
    9. ' tuple' → logprob: -10.521441459655762
    10. 'Tuple' → logprob: -10.771441459655762

Token 242: '(board' (ID: 41261)
  Prédit: '(board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -4.60414821645827e-06
    2. '(' → logprob: -12.750004768371582
    3. 'board' → logprob: -14.625004768371582
    4. ' (' → logprob: -14.625004768371582
    5. ')' → logprob: -14.875004768371582
    6. '(
' → logprob: -16.125003814697266
    7. ')(' → logprob: -16.875003814697266
    8. '
' → logprob: -17.000003814697266
    9. '(Board' → logprob: -17.375003814697266
    10. '	board' → logprob: -17.500003814697266

Token 243: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02695080079138279
    2. '()))' → logprob: -4.151950836181641
    3. ')))' → logprob: -5.151950836181641
    4. ')' → logprob: -5.401950836181641
    5. '())' → logprob: -7.651950836181641
    6. ' ))' → logprob: -10.52695083618164
    7. '()' → logprob: -10.90195083618164
    8. '())))' → logprob: -11.02695083618164
    9. ')))
' → logprob: -11.65195083618164
    10. ' ' → logprob: -12.52695083618164

Token 244: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.921253225300461e-05
    2. '   ' → logprob: -9.875069618225098
    3. ' )' → logprob: -11.250069618225098
    4. ')
' → logprob: -12.375069618225098
    5. '))' → logprob: -15.000069618225098
    6. ')

' → logprob: -16.87506866455078
    7. ')}' → logprob: -17.87506866455078
    8. ')`' → logprob: -18.12506866455078
    9. '),' → logprob: -18.25006866455078
    10. '}' → logprob: -18.62506866455078

Token 245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5198327302932739
    2. '<|end|>' → logprob: -1.769832730293274
    3. ')' → logprob: -2.1448326110839844
    4. '```' → logprob: -3.0198326110839844
    5. '
' → logprob: -3.7698326110839844
    6. ' while' → logprob: -4.519832611083984
    7. '    
' → logprob: -4.644832611083984
    8. 'while' → logprob: -4.769832611083984
    9. '	while' → logprob: -5.519832611083984
    10. ' 
' → logprob: -5.769832611083984

Token 246: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0013315484393388033
    2. '   ' → logprob: -6.751331329345703
    3. ' while' → logprob: -8.751331329345703
    4. '	while' → logprob: -12.876331329345703
    5. '```' → logprob: -15.126331329345703
    6. '    
' → logprob: -16.501331329345703
    7. 'While' → logprob: -16.626331329345703
    8. '
' → logprob: -17.751331329345703
    9. '       ' → logprob: -19.001331329345703
    10. ')' → logprob: -19.001331329345703

Token 247: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.03805456683039665
    2. ' queue' → logprob: -3.2880544662475586
    3. '(queue' → logprob: -12.288054466247559
    4. 'len' → logprob: -12.913054466247559
    5. '	queue' → logprob: -13.038054466247559
    6. '   ' → logprob: -13.038054466247559
    7. ' ' → logprob: -14.413054466247559
    8. 'que' → logprob: -15.038054466247559
    9. 'True' → logprob: -15.538054466247559
    10. '```' → logprob: -16.163055419921875

Token 248: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03365768492221832
    2. ':
' → logprob: -3.4086577892303467
    3. '   ' → logprob: -13.033658027648926
    4. ':

' → logprob: -13.283658027648926
    5. 'and' → logprob: -13.408658027648926
    6. '):' → logprob: -13.783658027648926
    7. '):
' → logprob: -13.783658027648926
    8. 'not' → logprob: -14.283658027648926
    9. ' and' → logprob: -14.408658027648926
    10. '.' → logprob: -14.908658027648926

Token 249: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001431114797014743
    2. ' (' → logprob: -9.750143051147461
    3. ' x' → logprob: -10.125143051147461
    4. ',' → logprob: -11.500143051147461
    5. '(x' → logprob: -11.500143051147461
    6. 'x' → logprob: -11.875143051147461
    7. '        
' → logprob: -12.750143051147461
    8. '   ' → logprob: -13.125143051147461
    9. '```' → logprob: -13.125143051147461
    10. '      ' → logprob: -13.750143051147461

Token 250: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.008774462155997753
    2. ' x' → logprob: -4.758774280548096
    3. '           ' → logprob: -8.758774757385254
    4. '(x' → logprob: -14.008774757385254
    5. 'i' → logprob: -14.508774757385254
    6. '       ' → logprob: -14.633774757385254
    7. '	x' → logprob: -15.008774757385254
    8. '   ' → logprob: -15.508774757385254
    9. '```' → logprob: -15.633774757385254
    10. 'cx' → logprob: -15.883774757385254

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.894790981779806e-05
    2. ' ,' → logprob: -10.125048637390137
    3. ',y' → logprob: -12.125048637390137
    4. '<|end|>' → logprob: -13.750048637390137
    5. ',x' → logprob: -13.875048637390137
    6. ',user' → logprob: -15.000048637390137
    7. ')' → logprob: -15.875048637390137
    8. ',next' → logprob: -16.000049591064453
    9. ',n' → logprob: -16.125049591064453
    10. ',
' → logprob: -16.250049591064453

Token 252: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0788901224732399
    2. ' y' → logprob: -2.578890085220337
    3. '   ' → logprob: -15.578889846801758
    4. '    ' → logprob: -16.078889846801758
    5. '       ' → logprob: -16.578889846801758
    6. '	y' → logprob: -17.203889846801758
    7. ' ' → logprob: -18.078889846801758
    8. '     ' → logprob: -18.203889846801758
    9. '  ' → logprob: -18.203889846801758
    10. ',' → logprob: -18.703889846801758

Token 253: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.024604277219623e-05
    2. ' ,' → logprob: -10.125040054321289
    3. '       ' → logprob: -17.75004005432129
    4. ',m' → logprob: -18.12504005432129
    5. '_,' → logprob: -18.25004005432129
    6. ',
' → logprob: -18.62504005432129
    7. ',n' → logprob: -19.00004005432129
    8. 'm' → logprob: -19.00004005432129
    9. '،' → logprob: -19.25004005432129
    10. 't' → logprob: -19.50004005432129

Token 254: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.009760575369000435
    2. 'dist' → logprob: -5.38476037979126
    3. ' moves' → logprob: -5.63476037979126
    4. 'depth' → logprob: -7.25976037979126
    5. 'move' → logprob: -7.75976037979126
    6. 'cnt' → logprob: -8.384760856628418
    7. 'steps' → logprob: -9.009760856628418
    8. ' dist' → logprob: -10.384760856628418
    9. 'd' → logprob: -10.634760856628418
    10. 'count' → logprob: -11.634760856628418

Token 255: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01307811588048935
    2. '=' → logprob: -4.388078212738037
    3. ' =' → logprob: -7.513078212738037
    4. ' ,' → logprob: -10.763077735900879
    5. ')' → logprob: -14.513077735900879
    6. '_,' → logprob: -15.763077735900879
    7. '‌,' → logprob: -16.888078689575195
    8. ' ' → logprob: -17.200578689575195
    9. '   ' → logprob: -17.263078689575195
    10. '،' → logprob: -17.325578689575195

Token 256: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3992668390274048
    2. 'current' → logprob: -2.0242667198181152
    3. 'curr' → logprob: -2.6492667198181152
    4. 'cur' → logprob: -2.7742667198181152
    5. 'board' → logprob: -3.2742667198181152
    6. ' current' → logprob: -4.399266719818115
    7. ' b' → logprob: -4.774266719818115
    8. ' curr' → logprob: -6.149266719818115
    9. 'br' → logprob: -6.399266719818115
    10. ' cur' → logprob: -7.024266719818115

Token 257: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.45709457993507385
    2. ' =' → logprob: -1.0820945501327515
    3. ')' → logprob: -3.582094669342041
    4. ',' → logprob: -9.457094192504883
    5. ')=' → logprob: -9.707094192504883
    6. ']' → logprob: -11.082094192504883
    7. ' )' → logprob: -11.582094192504883
    8. '   ' → logprob: -12.457094192504883
    9. ' ' → logprob: -12.707094192504883
    10. '),' → logprob: -13.707094192504883

Token 258: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.07889529317617416
    2. 'queue' → logprob: -2.578895330429077
    3. ' ' → logprob: -13.953895568847656
    4. '(queue' → logprob: -13.953895568847656
    5. ' =' → logprob: -14.203895568847656
    6. '   ' → logprob: -14.328895568847656
    7. '	queue' → logprob: -14.453895568847656
    8. '    ' → logprob: -14.828895568847656
    9. '.queue' → logprob: -14.828895568847656
    10. ' que' → logprob: -14.953895568847656

Token 259: '.p' (ID: 1201)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17994430661201477
    2. ' =' → logprob: -1.8049442768096924
    3. '.pop' → logprob: -9.304944038391113
    4. '   ' → logprob: -9.929944038391113
    5. ')' → logprob: -10.179944038391113
    6. 'pop' → logprob: -11.929944038391113
    7. 'p' → logprob: -12.304944038391113
    8. ')=' → logprob: -12.679944038391113
    9. '       ' → logprob: -13.679944038391113
    10. '.p' → logprob: -13.929944038391113

Token 260: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.001504982472397387
    2. 'op' → logprob: -6.501504898071289
    3. 'opl' → logprob: -13.001504898071289
    4. 'ople' → logprob: -15.251504898071289
    5. 'append' → logprob: -16.50150489807129
    6. 'opup' → logprob: -17.12650489807129
    7. 'opt' → logprob: -18.12650489807129
    8. 'opf' → logprob: -18.50150489807129
    9. 'opy' → logprob: -18.87650489807129
    10. '   ' → logprob: -19.00150489807129

Token 261: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3467109501361847
    2. ')' → logprob: -1.4717109203338623
    3. '(' → logprob: -3.2217109203338623
    4. ',' → logprob: -4.471711158752441
    5. '<|end|>' → logprob: -5.471711158752441
    6. ':' → logprob: -5.846711158752441
    7. '       ' → logprob: -6.346711158752441
    8. '   ' → logprob: -6.596711158752441
    9. '<|end|>' → logprob: -7.846711158752441
    10. '(
' → logprob: -7.971711158752441

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002174289431422949
    2. ' if' → logprob: -6.377174377441406
    3. '<|end|>' → logprob: -8.377174377441406
    4. 'if' → logprob: -9.252174377441406
    5. '
' → logprob: -9.752174377441406
    6. '   ' → logprob: -10.127174377441406
    7. '        
' → logprob: -10.877174377441406
    8. '```' → logprob: -11.127174377441406
    9. ')' → logprob: -12.752174377441406
    10. '<|end|>' → logprob: -13.002174377441406

Token 263: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -3.726595241460018e-05
    2. '       ' → logprob: -11.00003719329834
    3. ' if' → logprob: -11.25003719329834
    4. 'for' → logprob: -11.87503719329834
    5. '   ' → logprob: -15.00003719329834
    6. '           ' → logprob: -15.87503719329834
    7. '
' → logprob: -16.875038146972656
    8. '        
' → logprob: -16.875038146972656
    9. '```' → logprob: -18.625038146972656
    10. '#' → logprob: -18.875038146972656

Token 264: ' moves' (ID: 19523)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.1493513137102127
    2. ' (' → logprob: -2.1493513584136963
    3. '(b' → logprob: -4.274351119995117
    4. 'b' → logprob: -5.774351119995117
    5. '(board' → logprob: -5.899351119995117
    6. '(' → logprob: -7.024351119995117
    7. 'board' → logprob: -7.399351119995117
    8. ' b' → logprob: -7.774351119995117
    9. 'moves' → logprob: -8.649351119995117
    10. '(m' → logprob: -8.899351119995117

Token 265: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.18527472019195557
    2. ' ==' → logprob: -2.560274600982666
    3. '>=' → logprob: -2.935274600982666
    4. ' >' → logprob: -3.560274600982666
    5. '==' → logprob: -4.935274600982666
    6. '>' → logprob: -5.810274600982666
    7. ' ' → logprob: -9.560275077819824
    8. ' ' → logprob: -10.685275077819824
    9. '   ' → logprob: -12.310275077819824
    10. '≥' → logprob: -12.935275077819824

Token 266: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0015079588629305363
    2. ' max' → logprob: -6.501507759094238
    3. '10' → logprob: -12.126507759094238
    4. '   ' → logprob: -16.001508712768555
    5. ' ' → logprob: -17.751508712768555
    6. '=max' → logprob: -17.876508712768555
    7. '	max' → logprob: -18.126508712768555
    8. '
' → logprob: -18.751508712768555
    9. '(max' → logprob: -19.251508712768555
    10. '=' → logprob: -19.251508712768555

Token 267: '_moves' (ID: 110706)
  Prédit: '_moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -1.8624639324116288e-06
    2. ' _' → logprob: -13.625001907348633
    3. '_' → logprob: -14.875001907348633
    4. '_move' → logprob: -16.250001907348633
    5. 'moves' → logprob: -17.500001907348633
    6. '```' → logprob: -17.625001907348633
    7. '
' → logprob: -17.875001907348633
    8. '_mov' → logprob: -18.000001907348633
    9. '_
' → logprob: -18.625001907348633
    10. '   ' → logprob: -18.750001907348633

Token 268: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48076412081718445
    2. ':
' → logprob: -0.9807641506195068
    3. '           ' → logprob: -5.355763912200928
    4. '       ' → logprob: -6.480763912200928
    5. ' or' → logprob: -8.730764389038086
    6. ':return' → logprob: -8.980764389038086
    7. '   ' → logprob: -9.355764389038086
    8. ':
' → logprob: -10.980764389038086
    9. '               ' → logprob: -11.855764389038086
    10. ':

' → logprob: -12.730764389038086

Token 269: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007732265163213015
    2. 'continue' → logprob: -5.257732391357422
    3. ' continue' → logprob: -6.007732391357422
    4. '
' → logprob: -10.882732391357422
    5. '               ' → logprob: -12.007732391357422
    6. 'return' → logprob: -13.007732391357422
    7. '		' → logprob: -13.007732391357422
    8. '       ' → logprob: -13.757732391357422
    9. '```' → logprob: -13.882732391357422
    10. '   ' → logprob: -14.007732391357422

Token 270: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.2009144127368927
    2. ' continue' → logprob: -1.9509143829345703
    3. '           ' → logprob: -3.5759143829345703
    4. '       ' → logprob: -4.70091438293457
    5. 'break' → logprob: -6.70091438293457
    6. 'return' → logprob: -6.95091438293457
    7. '   ' → logprob: -8.32591438293457
    8. ' break' → logprob: -8.57591438293457
    9. ' return' → logprob: -8.95091438293457
    10. '               ' → logprob: -10.57591438293457

Token 271: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22945664823055267
    2. '<|end|>' → logprob: -1.6044566631317139
    3. '
' → logprob: -5.729456424713135
    4. '        
' → logprob: -8.354456901550293
    5. '<|end|>' → logprob: -8.354456901550293
    6. ' if' → logprob: -8.854456901550293
    7. ')' → logprob: -10.104456901550293
    8. ',' → logprob: -10.354456901550293
    9. 'if' → logprob: -10.854456901550293
    10. '  
' → logprob: -10.854456901550293

Token 272: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02840985357761383
    2. '<|end|>' → logprob: -3.653409957885742
    3. '        
' → logprob: -6.778409957885742
    4. '
' → logprob: -7.653409957885742
    5. '   ' → logprob: -8.778409957885742
    6. '  
' → logprob: -9.278409957885742
    7. ')' → logprob: -10.278409957885742
    8. '    
' → logprob: -10.278409957885742
    9. '<|end|>' → logprob: -10.278409957885742
    10. '```' → logprob: -10.528409957885742

Token 273: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2848567068576813
    2. ' for' → logprob: -1.5348566770553589
    3. 'for' (adapté à ' for') → logprob: -3.5348567962646484
    4. '<|end|>' → logprob: -6.534856796264648
    5. '        
' → logprob: -7.034856796264648
    6. '
' → logprob: -7.784856796264648
    7. '   ' → logprob: -7.909856796264648
    8. '	for' → logprob: -11.034856796264648
    9. '    
' → logprob: -11.034856796264648
    10. ',' → logprob: -11.409856796264648

Token 274: ' dx' (ID: 29472)
  Prédit: ' dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.018171247094869614
    2. 'dx' → logprob: -4.018171310424805
    3. '(dx' → logprob: -11.518171310424805
    4. '   ' → logprob: -12.143171310424805
    5. '_dx' → logprob: -12.768171310424805
    6. ' ' → logprob: -13.393171310424805
    7. '```' → logprob: -13.893171310424805
    8. '  ' → logprob: -14.393171310424805
    9. '    ' → logprob: -17.018171310424805
    10. '	d' → logprob: -17.018171310424805

Token 275: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00154533376917243
    2. ',d' → logprob: -6.751545429229736
    3. ' ,' → logprob: -8.001544952392578
    4. ' in' → logprob: -10.876544952392578
    5. ',y' → logprob: -11.626544952392578
    6. ',value' → logprob: -13.251544952392578
    7. ',in' → logprob: -13.251544952392578
    8. ',de' → logprob: -13.251544952392578
    9. ',user' → logprob: -13.626544952392578
    10. 'in' → logprob: -14.251544952392578

Token 276: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.10020667314529419
    2. ' dy' → logprob: -2.3502066135406494
    3. 'Dy' → logprob: -17.22520637512207
    4. 'dx' → logprob: -17.97520637512207
    5. '.dy' → logprob: -18.85020637512207
    6. 'd' → logprob: -19.47520637512207
    7. ' dx' → logprob: -20.60020637512207
    8. ' Dy' → logprob: -21.60020637512207
    9. 'dym' → logprob: -21.85020637512207
    10. '	d' → logprob: -21.97520637512207

Token 277: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015045057516545057
    2. 'in' → logprob: -6.501504421234131
    3. ',' → logprob: -13.876504898071289
    4. ' ' → logprob: -14.126504898071289
    5. ' ,' → logprob: -15.626504898071289
    6. '	in' → logprob: -16.25150489807129
    7. ')' → logprob: -16.37650489807129
    8. '<|end|>' → logprob: -16.50150489807129
    9. '    ' → logprob: -17.62650489807129
    10. '  ' → logprob: -17.93900489807129

Token 278: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.3132803440093994
    2. ' directions' → logprob: -1.3132803440093994
    3. 'd' → logprob: -11.81328010559082
    4. '   ' → logprob: -12.18828010559082
    5. 'direction' → logprob: -12.68828010559082
    6. ' ' → logprob: -14.06328010559082
    7. 'direct' → logprob: -14.18828010559082
    8. '[' → logprob: -14.43828010559082
    9. '
' → logprob: -15.06328010559082
    10. '```' → logprob: -15.68828010559082

Token 279: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008754377253353596
    2. ':
' → logprob: -4.758754253387451
    3. ',' → logprob: -9.38375473022461
    4. '       ' → logprob: -10.38375473022461
    5. ':

' → logprob: -12.38375473022461
    6. '<|end|>' → logprob: -12.50875473022461
    7. '):
' → logprob: -12.63375473022461
    8. '):' → logprob: -12.75875473022461
    9. ' :' → logprob: -12.75875473022461
    10. '           ' → logprob: -13.00875473022461

Token 280: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.435611754655838
    2. ' nx' → logprob: -1.0606117248535156
    3. 'nx' → logprob: -5.310611724853516
    4. '            ' → logprob: -7.560611724853516
    5. ' new' → logprob: -7.685611724853516
    6. ' if' → logprob: -8.560611724853516
    7. '            
' → logprob: -8.810611724853516
    8. ' x' → logprob: -9.060611724853516
    9. ' next' → logprob: -9.435611724853516
    10. ' ' → logprob: -9.935611724853516

Token 281: ' if' (ID: 538)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.39401283860206604
    2. ' nx' → logprob: -1.1440128087997437
    3. '           ' → logprob: -5.644012928009033
    4. 'tx' → logprob: -6.644012928009033
    5. '#' → logprob: -7.769012928009033
    6. '               ' → logprob: -7.894012928009033
    7. '```' → logprob: -8.519012451171875
    8. 'step' → logprob: -8.644012451171875
    9. 'new' → logprob: -8.894012451171875
    10. ' step' → logprob: -9.019012451171875

Token 282: ' not' (ID: 625)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.07024962455034256
    2. ' can' → logprob: -2.695249557495117
    3. ' not' → logprob: -8.570249557495117
    4. 'not' → logprob: -9.070249557495117
    5. '	can' → logprob: -12.945249557495117
    6. '   ' → logprob: -13.320249557495117
    7. '(can' → logprob: -13.945249557495117
    8. 'x' → logprob: -14.445249557495117
    9. '           ' → logprob: -14.445249557495117
    10. 'b' → logprob: -14.820249557495117

Token 283: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.001502598519437015
    2. ' can' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.626502990722656
    4. '(can' → logprob: -16.751502990722656
    5. '	can' → logprob: -16.876502990722656
    6. '.can' → logprob: -18.376502990722656
    7. '           ' → logprob: -18.501502990722656
    8. '_can' → logprob: -18.501502990722656
    9. '       ' → logprob: -18.876502990722656
    10. ' ' → logprob: -19.126502990722656

Token 284: '_throw' (ID: 182836)
  Prédit: '_throw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_throw' → logprob: -6.511406809295295e-06
    2. ' _' → logprob: -12.375006675720215
    3. '_' → logprob: -13.375006675720215
    4. '_THROW' → logprob: -15.625006675720215
    5. '_continue' → logprob: -15.750006675720215
    6. '_raise' → logprob: -15.875006675720215
    7. '_try' → logprob: -16.6250057220459
    8. ' ' → logprob: -16.8750057220459
    9. 'throw' → logprob: -17.3750057220459
    10. ' throw' → logprob: -17.8750057220459

Token 285: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0002523992152418941
    2. '(' → logprob: -8.500252723693848
    3. ' (' → logprob: -10.000252723693848
    4. '(board' → logprob: -13.750252723693848
    5. ')' → logprob: -14.750252723693848
    6. ',' → logprob: -14.750252723693848
    7. '```' → logprob: -14.875252723693848
    8. '(
' → logprob: -15.375252723693848
    9. 'b' → logprob: -15.625252723693848
    10. ',b' → logprob: -15.875252723693848

Token 286: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020826896652579308
    2. ',x' → logprob: -6.377082824707031
    3. ' ,' → logprob: -7.877082824707031
    4. '   ' → logprob: -15.002082824707031
    5. ',b' → logprob: -15.127082824707031
    6. ',
' → logprob: -16.25208282470703
    7. '```' → logprob: -16.50208282470703
    8. '(x' → logprob: -16.62708282470703
    9. ',w' → logprob: -17.00208282470703
    10. ' ' → logprob: -17.25208282470703

Token 287: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0008046258008107543
    2. ' x' → logprob: -7.125804424285889
    3. '(x' → logprob: -17.000804901123047
    4. ')x' → logprob: -17.375804901123047
    5. '	x' → logprob: -17.500804901123047
    6. '   ' → logprob: -17.750804901123047
    7. ' ' → logprob: -17.875804901123047
    8. ',x' → logprob: -17.875804901123047
    9. ',' → logprob: -18.250804901123047
    10. ')' → logprob: -18.625804901123047

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031730756163597107
    2. ' ,' → logprob: -6.503172874450684
    3. '+' → logprob: -6.878172874450684
    4. ' +' → logprob: -7.378172874450684
    5. 'dx' → logprob: -12.128172874450684
    6. '+,' → logprob: -12.878172874450684
    7. ' dx' → logprob: -13.253172874450684
    8. '```' → logprob: -13.628172874450684
    9. '+x' → logprob: -14.503172874450684
    10. ' ' → logprob: -14.503172874450684

Token 289: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0004882152716163546
    2. ' y' → logprob: -7.62548828125
    3. '	y' → logprob: -16.75048828125
    4. '   ' → logprob: -17.00048828125
    5. '    ' → logprob: -17.87548828125
    6. '           ' → logprob: -18.25048828125
    7. ' ' → logprob: -18.50048828125
    8. '  ' → logprob: -18.62548828125
    9. '     ' → logprob: -18.75048828125
    10. '         ' → logprob: -19.37548828125

Token 290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010487660765647888
    2. ' ,' → logprob: -6.876048564910889
    3. '           ' → logprob: -12.376049041748047
    4. '+' → logprob: -12.501049041748047
    5. '+,' → logprob: -13.251049041748047
    6. 'dx' → logprob: -13.501049041748047
    7. ',x' → logprob: -13.751049041748047
    8. ' +' → logprob: -14.001049041748047
    9. ',d' → logprob: -14.126049041748047
    10. ' dx' → logprob: -14.751049041748047

Token 291: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0015031944494694471
    2. ' dx' → logprob: -6.501502990722656
    3. '   ' → logprob: -15.126502990722656
    4. ' ' → logprob: -15.376502990722656
    5. '(dx' → logprob: -15.626502990722656
    6. '
' → logprob: -17.251502990722656
    7. '  ' → logprob: -17.501502990722656
    8. '_dx' → logprob: -17.751502990722656
    9. '    ' → logprob: -18.001502990722656
    10. 'tx' → logprob: -18.001502990722656

Token 292: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006277294596657157
    2. ' ,' → logprob: -7.375627517700195
    3. ',
' → logprob: -15.125627517700195
    4. ',y' → logprob: -15.375627517700195
    5. ',d' → logprob: -15.500627517700195
    6. ')' → logprob: -15.625627517700195
    7. '```' → logprob: -16.875627517700195
    8. 'dy' → logprob: -17.125627517700195
    9. '),' → logprob: -17.500627517700195
    10. ' ' → logprob: -17.750627517700195

Token 293: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.01416350994259119
    2. ' dy' → logprob: -4.264163494110107
    3. '0' → logprob: -18.014163970947266
    4. ' ' → logprob: -19.389163970947266
    5. '
' → logprob: -20.014163970947266
    6. 'Dy' → logprob: -20.139163970947266
    7. '1' → logprob: -20.389163970947266
    8. 'dx' → logprob: -20.389163970947266
    9. '.dy' → logprob: -20.514163970947266
    10. 'y' → logprob: -20.764163970947266

Token 294: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03957981988787651
    2. '):
' → logprob: -3.2895798683166504
    3. ' ):' → logprob: -7.16457986831665
    4. ',' → logprob: -7.91457986831665
    5. '):
' → logprob: -8.289579391479492
    6. '           ' → logprob: -9.789579391479492
    7. ' ):
' → logprob: -10.789579391479492
    8. '):

' → logprob: -11.039579391479492
    9. ':' → logprob: -11.414579391479492
    10. ')' → logprob: -11.539579391479492

Token 295: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00671584764495492
    2. ' w' → logprob: -5.006715774536133
    3. 'h' → logprob: -15.256715774536133
    4. '   ' → logprob: -15.506715774536133
    5. ' ' → logprob: -16.756715774536133
    6. '    ' → logprob: -16.881715774536133
    7. '	w' → logprob: -17.006715774536133
    8. '
' → logprob: -17.881715774536133
    9. ' h' → logprob: -18.506715774536133
    10. '  ' → logprob: -18.506715774536133

Token 296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025645215646363795
    2. ',h' → logprob: -8.500256538391113
    3. ' ,' → logprob: -9.875256538391113
    4. ',
' → logprob: -13.875256538391113
    5. ',w' → logprob: -15.375256538391113
    6. ',y' → logprob: -15.500256538391113
    7. '   ' → logprob: -16.750255584716797
    8. ',b' → logprob: -16.875255584716797
    9. ',

' → logprob: -16.875255584716797
    10. ',d' → logprob: -17.250255584716797

Token 297: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0007099286303855479
    2. ' h' → logprob: -7.2507100105285645
    3. '	h' → logprob: -20.125709533691406
    4. '   ' → logprob: -20.500709533691406
    5. ' ' → logprob: -20.750709533691406
    6. ')' → logprob: -20.750709533691406
    7. ',h' → logprob: -22.250709533691406
    8. '<h' → logprob: -23.000709533691406
    9. 'w' → logprob: -23.000709533691406
    10. '  ' → logprob: -23.125709533691406

Token 298: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2521503269672394
    2. '):
' → logprob: -1.502150297164917
    3. '           ' → logprob: -9.252150535583496
    4. '):
' → logprob: -9.877150535583496
    5. ':' → logprob: -10.252150535583496
    6. ')' → logprob: -10.877150535583496
    7. '):

' → logprob: -12.002150535583496
    8. '               ' → logprob: -12.252150535583496
    9. '       ' → logprob: -12.752150535583496
    10. ' ):' → logprob: -13.252150535583496

Token 299: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006845565512776375
    2. ' continue' → logprob: -7.37568473815918
    3. 'continue' → logprob: -10.50068473815918
    4. '           ' → logprob: -11.75068473815918
    5. '                
' → logprob: -12.00068473815918
    6. ':' → logprob: -12.37568473815918
    7. '                               ' → logprob: -13.00068473815918
    8. '                   ' → logprob: -13.25068473815918
    9. ',' → logprob: -13.50068473815918
    10. ' continues' → logprob: -13.87568473815918

Token 300: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7981473803520203
    2. '           ' → logprob: -1.298147439956665
    3. '               ' → logprob: -1.548147439956665
    4. 'continue' (adapté à ' continue') → logprob: -2.798147439956665
    5. '                   ' → logprob: -6.048147201538086
    6. '   ' → logprob: -7.298147201538086
    7. ' ' → logprob: -10.048147201538086
    8. '```' → logprob: -10.298147201538086
    9. '
' → logprob: -10.923147201538086
    10. '       ' → logprob: -10.923147201538086

Token 301: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00702106487005949
    2. '            
' → logprob: -5.257020950317383
    3. '
' → logprob: -7.507020950317383
    4. '<|end|>' → logprob: -7.757020950317383
    5. '  
' → logprob: -8.382020950317383
    6. '    
' → logprob: -8.757020950317383
    7. ' 
' → logprob: -9.007020950317383
    8. '               ' → logprob: -10.007020950317383
    9. '           
' → logprob: -10.132020950317383
    10. 'n' → logprob: -10.382020950317383

Token 302: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00023238400171976537
    2. '            
' → logprob: -9.125232696533203
    3. '               ' → logprob: -10.500232696533203
    4. '```' → logprob: -10.500232696533203
    5. '<|end|>' → logprob: -11.250232696533203
    6. '          ' → logprob: -11.375232696533203
    7. 'n' → logprob: -11.750232696533203
    8. ',' → logprob: -12.000232696533203
    9. '  
' → logprob: -12.375232696533203
    10. '            ' → logprob: -12.500232696533203

Token 303: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0963008403778076
    2. ' nx' → logprob: -1.0963008403778076
    3. 'nx' → logprob: -1.2213008403778076
    4. 'n' → logprob: -4.846301078796387
    5. ' new' → logprob: -5.096301078796387
    6. 'new' → logprob: -5.221301078796387
    7. '   ' → logprob: -5.346301078796387
    8. '               ' → logprob: -5.596301078796387
    9. 'tx' → logprob: -6.221301078796387
    10. 'next' → logprob: -6.846301078796387

Token 304: ' move' (ID: 5275)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.321169376373291
    2. ' nx' → logprob: -1.946169376373291
    3. '           ' → logprob: -2.196169376373291
    4. '#' → logprob: -4.821169376373291
    5. 'new' → logprob: -5.446169376373291
    6. '   ' → logprob: -6.571169376373291
    7. 'tx' → logprob: -6.696169376373291
    8. ' new' → logprob: -7.196169376373291
    9. '```' → logprob: -7.571169376373291
    10. 'next' → logprob: -7.696169376373291

Token 305: ' stone' (ID: 14352)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7535500526428223
    2. ' nx' → logprob: -1.0035500526428223
    3. 'nx' → logprob: -1.8785500526428223
    4. '(nx' → logprob: -5.378550052642822
    5. 'x' → logprob: -6.628550052642822
    6. ',' → logprob: -6.753550052642822
    7. 'tx' → logprob: -7.378550052642822
    8. '            
' → logprob: -8.253549575805664
    9. 'new' → logprob: -8.503549575805664
    10. ' x' → logprob: -8.628549575805664

Token 306: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14489240944385529
    2. ' nx' → logprob: -2.394892454147339
    3. '(nx' → logprob: -3.894892454147339
    4. 'nx' → logprob: -4.26989221572876
    5. ',' → logprob: -5.51989221572876
    6. '            
' → logprob: -6.51989221572876
    7. 'tx' → logprob: -7.39489221572876
    8. ' in' → logprob: -7.51989221572876
    9. 'x' → logprob: -7.89489221572876
    10. ' to' → logprob: -8.269892692565918

Token 307: ' direction' (ID: 9262)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.0783323049545288
    2. 'dx' → logprob: -1.7033323049545288
    3. 'x' → logprob: -2.2033324241638184
    4. 'range' → logprob: -2.3283324241638184
    5. ' the' → logprob: -2.5783324241638184
    6. 'b' → logprob: -2.5783324241638184
    7. 'that' → logprob: -3.7033324241638184
    8. 'direction' → logprob: -4.203332424163818
    9. ' range' → logprob: -4.453332424163818
    10. ' that' → logprob: -4.453332424163818

Token 308: ' dx' (ID: 29472)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009079182520508766
    2. ' nx' → logprob: -6.1340789794921875
    3. ',' → logprob: -6.2590789794921875
    4. '            
' → logprob: -6.6340789794921875
    5. ' x' → logprob: -7.6340789794921875
    6. 'x' → logprob: -7.6340789794921875
    7. '(nx' → logprob: -7.8840789794921875
    8. 'token' → logprob: -8.384078979492188
    9. 'nx' → logprob: -8.509078979492188
    10. '<|end|>' → logprob: -8.509078979492188

Token 309: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5785055160522461
    2. ',' → logprob: -0.8285055160522461
    3. ' ,' → logprob: -7.578505516052246
    4. '<|end|>' → logprob: -8.203505516052246
    5. '   ' → logprob: -8.578505516052246
    6. 's' → logprob: -8.703505516052246
    7. '=' → logprob: -8.953505516052246
    8. '		' → logprob: -9.078505516052246
    9. '            
' → logprob: -9.203505516052246
    10. ' while' → logprob: -9.578505516052246

Token 310: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.12692810595035553
    2. ' dy' → logprob: -2.1269280910491943
    3. '.dy' → logprob: -17.501928329467773
    4. '    ' → logprob: -18.251928329467773
    5. '       ' → logprob: -18.251928329467773
    6. '   ' → logprob: -18.251928329467773
    7. 'd' → logprob: -18.626928329467773
    8. ' ' → logprob: -19.251928329467773
    9. '
' → logprob: -19.251928329467773
    10. 'Dy' → logprob: -19.251928329467773

Token 311: ' until' (ID: 4609)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011855464428663254
    2. '
' → logprob: -5.261855602264404
    3. '            
' → logprob: -5.386855602264404
    4. ',' → logprob: -6.886855602264404
    5. '<|end|>' → logprob: -8.511855125427246
    6. '  
' → logprob: -8.761855125427246
    7. 'n' → logprob: -9.511855125427246
    8. ' 
' → logprob: -9.636855125427246
    9. '```' → logprob: -9.761855125427246
    10. '<|end|>' → logprob: -10.261855125427246

Token 312: ' hit' (ID: 7103)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.5994263291358948
    2. ' True' → logprob: -0.8494263291358948
    3. 'b' → logprob: -5.09942626953125
    4. '(True' → logprob: -5.47442626953125
    5. ' not' → logprob: -5.59942626953125
    6. ' b' → logprob: -6.09942626953125
    7. 'False' → logprob: -6.22442626953125
    8. '   ' → logprob: -6.72442626953125
    9. 'not' → logprob: -6.97442626953125
    10. 'board' → logprob: -7.22442626953125

Token 313: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2134820222854614
    2. ' or' → logprob: -1.4634820222854614
    3. '           ' → logprob: -1.5884820222854614
    4. '       ' → logprob: -3.088481903076172
    5. ' x' → logprob: -3.713481903076172
    6. ' while' → logprob: -3.838481903076172
    7. 'x' → logprob: -3.838481903076172
    8. '               ' → logprob: -4.088481903076172
    9. ' =' → logprob: -4.088481903076172
    10. '(x' → logprob: -4.213481903076172

Token 314: ' block' (ID: 4355)
  Prédit: ' wall'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wall' → logprob: -0.4473130702972412
    2. 'wall' → logprob: -1.6973130702972412
    3. ' ' → logprob: -2.697313070297241
    4. 'stone' → logprob: -2.697313070297241
    5. '1' → logprob: -3.697313070297241
    6. ' stone' → logprob: -4.32231330871582
    7. 'block' → logprob: -6.32231330871582
    8. ' block' → logprob: -6.82231330871582
    9. '   ' → logprob: -7.94731330871582
    10. ' obstacle' → logprob: -8.57231330871582

Token 315: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00572364404797554
    2. ',' → logprob: -6.005723476409912
    3. ' or' → logprob: -6.880723476409912
    4. 'n' → logprob: -7.380723476409912
    5. '
' → logprob: -7.880723476409912
    6. '            
' → logprob: -8.00572395324707
    7. '(nx' → logprob: -8.63072395324707
    8. 'nx' → logprob: -9.00572395324707
    9. ' nx' → logprob: -9.38072395324707
    10. 'x' → logprob: -9.50572395324707

Token 316: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'goal' → logprob: -1.5412144660949707
    2. 'y' → logprob: -2.0412144660949707
    3. 'ny' → logprob: -2.4162144660949707
    4. 'board' → logprob: -2.4162144660949707
    5. '3' → logprob: -2.9162144660949707
    6. 'not' → logprob: -3.1662144660949707
    7. 'a' → logprob: -3.4162144660949707
    8. ' a' → logprob: -3.4162144660949707
    9. '   ' → logprob: -3.5412144660949707
    10. ' not' → logprob: -3.6662144660949707

Token 317: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02143794111907482
    2. ',' → logprob: -5.146438121795654
    3. '
' → logprob: -5.146438121795654
    4. 'nx' → logprob: -5.896438121795654
    5. 'n' → logprob: -6.271438121795654
    6. ' nx' → logprob: -6.771438121795654
    7. '(nx' → logprob: -7.021438121795654
    8. '            
' → logprob: -7.271438121795654
    9. 'x' → logprob: -7.646438121795654
    10. ' or' → logprob: -7.771438121795654

Token 318: ' out' (ID: 842)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.8001290559768677
    2. 'another' → logprob: -1.9251290559768677
    3. 'wall' → logprob: -2.175128936767578
    4. 'out' → logprob: -2.550128936767578
    5. 'board' → logprob: -2.800128936767578
    6. ' out' → logprob: -3.050128936767578
    7. 'max' → logprob: -3.175128936767578
    8. ' another' → logprob: -3.175128936767578
    9. 'h' → logprob: -3.425128936767578
    10. '   ' → logprob: -3.800128936767578

Token 319: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.19816698133945465
    2. 'of' → logprob: -1.8231669664382935
    3. '_of' → logprob: -4.323166847229004
    4. '_' → logprob: -6.073166847229004
    5. ' _' → logprob: -7.198166847229004
    6. '           ' → logprob: -7.823166847229004
    7. '   ' → logprob: -8.198166847229004
    8. ' or' → logprob: -8.448166847229004
    9. ' (' → logprob: -8.573166847229004
    10. '_x' → logprob: -9.198166847229004

Token 320: ' board' (ID: 6796)
  Prédit: 'bounds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bounds' → logprob: -0.008357829414308071
    2. 'board' → logprob: -5.008358001708984
    3. 'bound' → logprob: -6.508358001708984
    4. 'range' → logprob: -9.008358001708984
    5. ' bounds' → logprob: -10.633358001708984
    6. 'boundary' → logprob: -12.883358001708984
    7. 'border' → logprob: -15.258358001708984
    8. 'boards' → logprob: -15.258358001708984
    9. 'bounce' → logprob: -15.633358001708984
    10. 'grid' → logprob: -15.758358001708984

Token 321: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004978404846042395
    2. ',' → logprob: -6.254978179931641
    3. '            
' → logprob: -7.129978179931641
    4. '
' → logprob: -7.254978179931641
    5. '<|end|>' → logprob: -7.629978179931641
    6. '<|end|>' → logprob: -8.12997817993164
    7. 'n' → logprob: -8.37997817993164
    8. '\n' → logprob: -8.62997817993164
    9. '  
' → logprob: -9.50497817993164
    10. 'x' → logprob: -10.25497817993164

Token 322: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011153311934322119
    2. '            
' → logprob: -7.876115322113037
    3. ',' → logprob: -8.626115798950195
    4. '<|end|>' → logprob: -9.001115798950195
    5. 'n' → logprob: -9.126115798950195
    6. ' x' → logprob: -10.001115798950195
    7. '<|end|>' → logprob: -10.251115798950195
    8. '               ' → logprob: -10.626115798950195
    9. '	       ' → logprob: -11.001115798950195
    10. '```' → logprob: -11.126115798950195

Token 323: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' (adapté à ' nx') → logprob: -0.06703045219182968
    2. ' nx' → logprob: -3.317030429840088
    3. '           ' → logprob: -4.442030429840088
    4. 'tx' → logprob: -4.942030429840088
    5. 'cx' → logprob: -5.067030429840088
    6. '```' → logprob: -6.692030429840088
    7. 'cur' → logprob: -7.692030429840088
    8. 'new' → logprob: -8.317030906677246
    9. '   ' → logprob: -8.817030906677246
    10. 'n' → logprob: -8.817030906677246

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2208639234304428
    2. '=' → logprob: -1.720863938331604
    3. ' =' → logprob: -3.9708638191223145
    4. ' ,' → logprob: -7.9708638191223145
    5. ',n' → logprob: -10.595864295959473
    6. '=n' → logprob: -11.595864295959473
    7. '<|end|>' → logprob: -12.095864295959473
    8. '=x' → logprob: -12.220864295959473
    9. ',x' → logprob: -12.470864295959473
    10. ')' → logprob: -13.345864295959473

Token 325: ' ny' (ID: 4423)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02077474631369114
    2. 'ny' → logprob: -4.020774841308594
    3. ' x' → logprob: -6.520774841308594
    4. ' ny' → logprob: -6.770774841308594
    5. 'n' → logprob: -13.395774841308594
    6. 'nx' → logprob: -15.020774841308594
    7. '   ' → logprob: -16.145774841308594
    8. 'nt' → logprob: -17.520774841308594
    9. '	x' → logprob: -17.895774841308594
    10. '    ' → logprob: -18.020774841308594

Token 326: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759730935096741
    2. ' =' → logprob: -0.8259730935096741
    3. ',' → logprob: -10.700973510742188
    4. '=x' → logprob: -11.450973510742188
    5. ')' → logprob: -16.450973510742188
    6. 'x' → logprob: -16.575973510742188
    7. '=n' → logprob: -16.575973510742188
    8. '=
' → logprob: -17.200973510742188
    9. '＝' → logprob: -17.450973510742188
    10. ' ' → logprob: -17.575973510742188

Token 327: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.4974866644479334e-05
    2. ' x' → logprob: -11.125015258789062
    3. '	x' → logprob: -17.000015258789062
    4. '   ' → logprob: -17.625015258789062
    5. ')x' → logprob: -18.250015258789062
    6. '=x' → logprob: -18.625015258789062
    7. ',x' → logprob: -18.750015258789062
    8. '"x' → logprob: -18.875015258789062
    9. '
' → logprob: -19.375015258789062
    10. '>x' → logprob: -19.500015258789062

Token 328: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9044656753540039
    2. '+' → logprob: -1.154465675354004
    3. ' +' → logprob: -1.279465675354004
    4. ' ,' → logprob: -6.404465675354004
    5. '+,' → logprob: -9.904465675354004
    6. '<|end|>' → logprob: -10.654465675354004
    7. '+x' → logprob: -10.904465675354004
    8. ',n' → logprob: -11.029465675354004
    9. '
' → logprob: -11.404465675354004
    10. '+n' → logprob: -11.404465675354004

Token 329: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00861468818038702
    2. ' y' → logprob: -4.758614540100098
    3. '	y' → logprob: -15.883614540100098
    4. '   ' → logprob: -18.133615493774414
    5. '    ' → logprob: -18.383615493774414
    6. ' ' → logprob: -19.383615493774414
    7. '<|end|>' → logprob: -20.133615493774414
    8. '  ' → logprob: -20.133615493774414
    9. ')y' → logprob: -20.758615493774414
    10. ',y' → logprob: -20.883615493774414

Token 330: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.46451765298843384
    2. '<|end|>' → logprob: -2.214517593383789
    3. ' while' → logprob: -2.464517593383789
    4. '   ' → logprob: -2.464517593383789
    5. '           ' → logprob: -3.089517593383789
    6. '<|end|>' → logprob: -4.339517593383789
    7. '       ' → logprob: -4.964517593383789
    8. '+' → logprob: -5.089517593383789
    9. '
' → logprob: -5.089517593383789
    10. ' +' → logprob: -5.214517593383789

Token 331: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2577057480812073
    2. ' while' → logprob: -1.6327056884765625
    3. 'while' → logprob: -3.5077056884765625
    4. '<|end|>' → logprob: -7.8827056884765625
    5. '            
' → logprob: -8.007705688476562
    6. '   ' → logprob: -8.257705688476562
    7. ',' → logprob: -8.382705688476562
    8. '
' → logprob: -8.632705688476562
    9. ' 
' → logprob: -9.632705688476562
    10. '       ' → logprob: -9.757705688476562

Token 332: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.09053320437669754
    2. ' while' → logprob: -2.5905332565307617
    3. '           ' → logprob: -4.465533256530762
    4. '            
' → logprob: -10.715533256530762
    5. '
' → logprob: -10.840533256530762
    6. '```' → logprob: -11.465533256530762
    7. 'While' → logprob: -11.965533256530762
    8. '   ' → logprob: -12.465533256530762
    9. '	while' → logprob: -12.590533256530762
    10. '``' → logprob: -13.715533256530762

Token 333: ' True' (ID: 6432)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3638648986816406
    2. 'True' → logprob: -1.7388648986816406
    3. ' True' → logprob: -2.1138648986816406
    4. ' ' → logprob: -4.863864898681641
    5. '   ' → logprob: -7.488864898681641
    6. 'can' → logprob: -8.98886489868164
    7. '    ' → logprob: -10.23886489868164
    8. '(True' → logprob: -10.61386489868164
    9. '(' → logprob: -10.86386489868164
    10. ' can' → logprob: -10.86386489868164

Token 334: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7811541557312012
    2. ':' → logprob: -1.2811541557312012
    3. ':
' → logprob: -2.656154155731201
    4. '(nx' → logprob: -2.906154155731201
    5. ',' → logprob: -3.031154155731201
    6. ' nx' → logprob: -3.281154155731201
    7. ' and' → logprob: -4.031154155731201
    8. '           ' → logprob: -4.031154155731201
    9. '<|end|>' → logprob: -5.156154155731201
    10. '       ' → logprob: -6.156154155731201

Token 335: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019183095544576645
    2. ' nx' → logprob: -4.394183158874512
    3. '(nx' → logprob: -5.269183158874512
    4. 'nx' → logprob: -7.144183158874512
    5. '                
' → logprob: -8.144183158874512
    6. 'n' → logprob: -9.769183158874512
    7. '(n' → logprob: -9.769183158874512
    8. '   ' → logprob: -10.144183158874512
    9. '                ' → logprob: -10.269183158874512
    10. '	           ' → logprob: -10.269183158874512

Token 336: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.04205416887998581
    2. 'nx' (adapté à ' nx') → logprob: -3.5420541763305664
    3. '(nx' → logprob: -4.542054176330566
    4. '
' → logprob: -7.667054176330566
    5. '               ' → logprob: -7.917054176330566
    6. '                   ' → logprob: -8.167054176330566
    7. '                ' → logprob: -9.167054176330566
    8. ' ' → logprob: -10.042054176330566
    9. 'tx' → logprob: -10.417054176330566
    10. '                    
' → logprob: -10.417054176330566

Token 337: ' +=' (ID: 2757)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.651619017124176
    2. ' +=' → logprob: -1.4016189575195312
    3. '+=' → logprob: -1.6516189575195312
    4. '+' → logprob: -3.4016189575195312
    5. '<|end|>' → logprob: -5.526618957519531
    6. ' ,' → logprob: -6.401618957519531
    7. ' +' → logprob: -7.026618957519531
    8. ',n' → logprob: -8.401618957519531
    9. '=' → logprob: -8.526618957519531
    10. '+,' → logprob: -8.651618957519531

Token 338: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.00015872348740231246
    2. ' dx' → logprob: -8.750158309936523
    3. '_dx' → logprob: -15.375158309936523
    4. '(dx' → logprob: -18.250158309936523
    5. '.dx' → logprob: -18.875158309936523
    6. 'd' → logprob: -20.500158309936523
    7. '	d' → logprob: -21.375158309936523
    8. '
' → logprob: -21.500158309936523
    9. '   ' → logprob: -21.625158309936523
    10. 'DX' → logprob: -21.750158309936523

Token 339: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006566775846295059
    2. ' ,' → logprob: -8.625657081604004
    3. ',n' → logprob: -8.875657081604004
    4. '               ' → logprob: -9.000657081604004
    5. ',
' → logprob: -9.500657081604004
    6. '<|end|>' → logprob: -9.625657081604004
    7. '
' → logprob: -10.000657081604004
    8. '                   ' → logprob: -11.500657081604004
    9. '<|end|>' → logprob: -12.500657081604004
    10. ' ny' → logprob: -12.625657081604004

Token 340: '               ' (ID: 506)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011509364703670144
    2. ' ,' → logprob: -7.001151084899902
    3. '               ' → logprob: -9.126151084899902
    4. ',
' → logprob: -9.876151084899902
    5. ',n' → logprob: -10.001151084899902
    6. ' ny' → logprob: -10.751151084899902
    7. '                   ' → logprob: -12.001151084899902
    8. 'ny' → logprob: -12.751151084899902
    9. ',y' → logprob: -14.126151084899902
    10. '<|end|>' → logprob: -14.501151084899902

Token 341: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' (adapté à ' ny') → logprob: -0.3925796449184418
    2. ' ny' → logprob: -1.1425796747207642
    3. ' dy' → logprob: -5.517579555511475
    4. 'dy' → logprob: -6.392579555511475
    5. ',' → logprob: -13.642580032348633
    6. '               ' → logprob: -14.392580032348633
    7. '                   ' → logprob: -15.392580032348633
    8. ' ' → logprob: -16.017580032348633
    9. 'n' → logprob: -16.142580032348633
    10. '                ' → logprob: -16.392580032348633

Token 342: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.19373849034309387
    2. '+=' → logprob: -2.0687384605407715
    3. ',' → logprob: -3.0687384605407715
    4. '+' → logprob: -6.1937384605407715
    5. ' +' → logprob: -7.3187384605407715
    6. '```' → logprob: -8.56873893737793
    7. '<|end|>' → logprob: -8.81873893737793
    8. ' ,' → logprob: -9.06873893737793
    9. '               ' → logprob: -10.19373893737793
    10. '+,' → logprob: -10.56873893737793

Token 343: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.04858759790658951
    2. ' dy' → logprob: -3.0485875606536865
    3. 'd' → logprob: -16.173587799072266
    4. '.dy' → logprob: -16.423587799072266
    5. ' ' → logprob: -18.048587799072266
    6. 'dx' → logprob: -18.673587799072266
    7. 'dj' → logprob: -18.798587799072266
    8. 'Dy' → logprob: -19.798587799072266
    9. '
' → logprob: -20.048587799072266
    10. 'ny' → logprob: -20.048587799072266

Token 344: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13505493104457855
    2. '<|end|>' → logprob: -2.13505482673645
    3. '           ' → logprob: -6.135055065155029
    4. '<|end|>' → logprob: -6.260055065155029
    5. '                
' → logprob: -7.135055065155029
    6. '```' → logprob: -7.135055065155029
    7. '  
' → logprob: -7.635055065155029
    8. '       ' → logprob: -7.760055065155029
    9. '
' → logprob: -7.885055065155029
    10. ',' → logprob: -7.885055065155029

Token 345: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03446616604924202
    2. ' if' → logprob: -4.03446626663208
    3. 'if' → logprob: -4.15946626663208
    4. '```' → logprob: -8.034465789794922
    5. '       ' → logprob: -9.159465789794922
    6. '           ' → logprob: -9.534465789794922
    7. '                
' → logprob: -10.034465789794922
    8. ',' → logprob: -12.034465789794922
    9. '<|end|>' → logprob: -12.409465789794922
    10. '   ' → logprob: -12.784465789794922

Token 346: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -5.2762428822461516e-05
    2. ' if' → logprob: -10.000052452087402
    3. '               ' → logprob: -12.250052452087402
    4. '           ' → logprob: -13.125052452087402
    5. '       ' → logprob: -14.625052452087402
    6. '#' → logprob: -16.25005340576172
    7. '0' → logprob: -17.50005340576172
    8. '```' → logprob: -17.62505340576172
    9. 'If' → logprob: -18.75005340576172
    10. '   ' → logprob: -18.75005340576172

Token 347: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7740662693977356
    2. 'nx' → logprob: -1.3990662097930908
    3. 'not' → logprob: -1.3990662097930908
    4. ' nx' → logprob: -3.149066209793091
    5. ' ' → logprob: -6.89906644821167
    6. '0' → logprob: -6.89906644821167
    7. '(nx' → logprob: -8.774065971374512
    8. '   ' → logprob: -9.149065971374512
    9. '	not' → logprob: -11.524065971374512
    10. '(not' → logprob: -11.649065971374512

Token 348: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01604410633444786
    2. ' (' → logprob: -4.1410441398620605
    3. 'can' → logprob: -12.266043663024902
    4. ' can' → logprob: -12.891043663024902
    5. '(can' → logprob: -13.891043663024902
    6. '0' → logprob: -14.266043663024902
    7. ' ' → logprob: -14.391043663024902
    8. '
' → logprob: -15.516043663024902
    9. '   ' → logprob: -16.26604461669922
    10. '(nx' → logprob: -17.01604461669922

Token 349: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002217584289610386
    2. ' ' → logprob: -6.127217769622803
    3. '(' → logprob: -10.502217292785645
    4. ' (' → logprob: -12.377217292785645
    5. '(nx' → logprob: -14.377217292785645
    6. ')' → logprob: -16.25221824645996
    7. '   ' → logprob: -17.25221824645996
    8. ' ' → logprob: -17.31471824645996
    9. 'nx' → logprob: -17.31471824645996
    10. '۰' → logprob: -17.56471824645996

Token 350: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.47407740354537964
    2. '<=' → logprob: -0.9740774035453796
    3. '<' → logprob: -15.474077224731445
    4. ')<=' → logprob: -16.974077224731445
    5. ' ' → logprob: -17.349077224731445
    6. ' ' → logprob: -17.474077224731445
    7. ' <' → logprob: -18.099077224731445
    8. '+' → logprob: -18.099077224731445
    9. '```' → logprob: -18.349077224731445
    10. ')' → logprob: -18.349077224731445

Token 351: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -4.668304245569743e-05
    2. ' nx' → logprob: -10.000046730041504
    3. '(nx' → logprob: -13.750046730041504
    4. 'ny' → logprob: -16.000045776367188
    5. 'n' → logprob: -18.250045776367188
    6. '
' → logprob: -18.875045776367188
    7. '   ' → logprob: -19.125045776367188
    8. 'Nx' → logprob: -19.875045776367188
    9. '```' → logprob: -20.125045776367188
    10. 'nk' → logprob: -20.250045776367188

Token 352: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.029802095144987106
    2. ' <' → logprob: -3.529802083969116
    3. '<n' → logprob: -9.904802322387695
    4. 'and' → logprob: -14.779802322387695
    5. ' ' → logprob: -15.154802322387695
    6. '<len' → logprob: -15.404802322387695
    7. '<N' → logprob: -15.654802322387695
    8. ' and' → logprob: -15.654802322387695
    9. '<w' → logprob: -16.279802322387695
    10. ')<' → logprob: -16.529802322387695

Token 353: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00023059594968799502
    2. ' h' → logprob: -8.37523078918457
    3. 'w' → logprob: -17.37523078918457
    4. '	h' → logprob: -19.00023078918457
    5. '
' → logprob: -20.00023078918457
    6. '   ' → logprob: -20.00023078918457
    7. ' ' → logprob: -20.50023078918457
    8. '```' → logprob: -20.87523078918457
    9. '_h' → logprob: -21.12523078918457
    10. ')' → logprob: -21.12523078918457

Token 354: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018152866512537003
    2. 'and' → logprob: -4.018152713775635
    3. ')' → logprob: -13.018153190612793
    4. ' ' → logprob: -15.143153190612793
    5. '               ' → logprob: -15.268153190612793
    6. '                ' → logprob: -16.768152236938477
    7. '                   ' → logprob: -17.643152236938477
    8. '           ' → logprob: -17.768152236938477
    9. ' )' → logprob: -17.893152236938477
    10. ' и' → logprob: -18.268152236938477

Token 355: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.9186317482963204e-05
    2. ' ' → logprob: -10.125049591064453
    3. 'ny' → logprob: -11.625049591064453
    4. ' ny' → logprob: -16.250049591064453
    5. '
' → logprob: -17.250049591064453
    6. '   ' → logprob: -17.625049591064453
    7. ' ' → logprob: -17.625049591064453
    8. '  ' → logprob: -18.625049591064453
    9. '     ' → logprob: -18.875049591064453
    10. '    ' → logprob: -18.875049591064453

Token 356: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008651803247630596
    2. 'ny' → logprob: -4.7586517333984375
    3. ' ' → logprob: -10.383651733398438
    4. ' ny' → logprob: -12.383651733398438
    5. 'w' → logprob: -14.383651733398438
    6. '
' → logprob: -14.883651733398438
    7. '   ' → logprob: -15.258651733398438
    8. '  ' → logprob: -16.133651733398438
    9. '    ' → logprob: -16.383651733398438
    10. 'wn' → logprob: -16.383651733398438

Token 357: ' <=' (ID: 5017)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.7415568828582764
    2. '<' → logprob: -1.3665568828582764
    3. ' ny' → logprob: -1.6165568828582764
    4. ' <' → logprob: -2.7415568828582764
    5. 'w' → logprob: -5.9915571212768555
    6. '0' → logprob: -6.9915571212768555
    7. ' ' → logprob: -6.9915571212768555
    8. ' and' → logprob: -8.366557121276855
    9. 'and' → logprob: -8.741557121276855
    10. ' <=' → logprob: -9.116557121276855

Token 358: ' ny' (ID: 4423)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.02387004718184471
    2. 'ny' → logprob: -3.7738699913024902
    3. ' w' → logprob: -7.52386999130249
    4. ' ny' → logprob: -9.773870468139648
    5. 'wy' → logprob: -10.648870468139648
    6. 'wn' → logprob: -12.773870468139648
    7. 'width' → logprob: -15.023870468139648
    8. '   ' → logprob: -15.398870468139648
    9. '
' → logprob: -16.02387046813965
    10. 'nw' → logprob: -16.14887046813965

Token 359: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.14285333454608917
    2. '<' → logprob: -2.017853260040283
    3. 'w' → logprob: -9.017853736877441
    4. '<w' → logprob: -9.892853736877441
    5. ' ' → logprob: -13.267853736877441
    6. ' w' → logprob: -13.392853736877441
    7. '<n' → logprob: -14.267853736877441
    8. ')' → logprob: -14.517853736877441
    9. 'h' → logprob: -14.892853736877441
    10. '<len' → logprob: -15.017853736877441

Token 360: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00033593899570405483
    2. ' w' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.125335693359375
    4. '
' → logprob: -16.875335693359375
    5. ' ' → logprob: -17.125335693359375
    6. '	w' → logprob: -17.250335693359375
    7. 'h' → logprob: -17.500335693359375
    8. '  ' → logprob: -18.000335693359375
    9. '    ' → logprob: -18.250335693359375
    10. '       ' → logprob: -18.500335693359375

Token 361: '):
' (ID: 1883)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6053287386894226
    2. '):
' → logprob: -1.4803287982940674
    3. ')' → logprob: -2.2303287982940674
    4. '):' → logprob: -2.3553287982940674
    5. 'and' → logprob: -3.7303287982940674
    6. '):

' → logprob: -8.980328559875488
    7. '):
' → logprob: -10.230328559875488
    8. ' ):
' → logprob: -11.230328559875488
    9. ' )' → logprob: -11.855328559875488
    10. ' ):' → logprob: -12.355328559875488

Token 362: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010932506993412971
    2. '               ' → logprob: -5.010932445526123
    3. ':' → logprob: -6.135932445526123
    4. ':
' → logprob: -6.760932445526123
    5. ' or' → logprob: -7.260932445526123
    6. '           ' → logprob: -9.510932922363281
    7. '                       ' → logprob: -9.760932922363281
    8. '   ' → logprob: -10.885932922363281
    9. 'break' → logprob: -12.260932922363281
    10. '                  ' → logprob: -12.385932922363281

Token 363: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.5955876708030701
    2. 'nx' → logprob: -1.3455877304077148
    3. '                   ' → logprob: -2.470587730407715
    4. ' break' → logprob: -3.220587730407715
    5. '               ' → logprob: -3.470587730407715
    6. ' nx' → logprob: -3.970587730407715
    7. '                       ' → logprob: -4.345587730407715
    8. '(nx' → logprob: -8.470587730407715
    9. '   ' → logprob: -8.720587730407715
    10. '           ' → logprob: -8.970587730407715

Token 364: ' stone' (ID: 14352)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.503511905670166
    2. 'nx' → logprob: -1.128511905670166
    3. ' break' → logprob: -3.253511905670166
    4. ' nx' → logprob: -4.003511905670166
    5. '                   ' → logprob: -4.503511905670166
    6. '               ' → logprob: -5.628511905670166
    7. '                       ' → logprob: -8.878511428833008
    8. '#' → logprob: -8.878511428833008
    9. '           ' → logprob: -9.628511428833008
    10. '   ' → logprob: -10.003511428833008

Token 365: ' goes' (ID: 8805)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -1.066396951675415
    2. '               ' → logprob: -1.316396951675415
    3. '                   ' → logprob: -1.441396951675415
    4. '=' → logprob: -3.316396951675415
    5. ' stops' → logprob: -4.066396713256836
    6. 'nx' → logprob: -4.191396713256836
    7. '#' → logprob: -4.316396713256836
    8. 'x' → logprob: -4.441396713256836
    9. '-=' → logprob: -4.441396713256836
    10. ' -=' → logprob: -4.816396713256836

Token 366: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.10227032750844955
    2. 'back' → logprob: -2.3522703647613525
    3. 'off' → logprob: -7.102270126342773
    4. ' out' → logprob: -7.102270126342773
    5. 'outside' → logprob: -8.102270126342773
    6. ' back' → logprob: -9.977270126342773
    7. 'one' → logprob: -10.852270126342773
    8. 'b' → logprob: -11.477270126342773
    9. '	out' → logprob: -11.602270126342773
    10. '   ' → logprob: -12.352270126342773

Token 367: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.47449031472206116
    2. ' of' → logprob: -0.9744902849197388
    3. '                   ' → logprob: -9.09949016571045
    4. '               ' → logprob: -9.59949016571045
    5. 'board' → logprob: -9.84949016571045
    6. '-of' → logprob: -10.22449016571045
    7. '_of' → logprob: -10.34949016571045
    8. '=' → logprob: -11.09949016571045
    9. 'bounds' → logprob: -11.47449016571045
    10. '-' → logprob: -11.59949016571045

Token 368: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.2608068883419037
    2. 'bounds' → logprob: -1.510806918144226
    3. 'bound' → logprob: -4.760807037353516
    4. 'the' → logprob: -8.760807037353516
    5. 'boundary' → logprob: -10.010807037353516
    6. ' bounds' → logprob: -10.135807037353516
    7. 'range' → logprob: -10.510807037353516
    8. 'b' → logprob: -13.385807037353516
    9. ' board' → logprob: -13.385807037353516
    10. 'boards' → logprob: -13.760807037353516

Token 369: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.018080992624163628
    2. '               ' → logprob: -4.143081188201904
    3. ',' → logprob: -7.018081188201904
    4. '                       ' → logprob: -7.893081188201904
    5. '                    
' → logprob: -8.893080711364746
    6. '           ' → logprob: -9.018080711364746
    7. 'break' → logprob: -9.018080711364746
    8. ' break' → logprob: -9.393080711364746
    9. '
' → logprob: -9.893080711364746
    10. '   ' → logprob: -10.393080711364746

Token 370: ' failure' (ID: 14090)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.15669776499271393
    2. ' break' → logprob: -2.4066977500915527
    3. '                   ' → logprob: -3.9066977500915527
    4. 'nx' → logprob: -3.9066977500915527
    5. '                       ' → logprob: -5.031697750091553
    6. ' nx' → logprob: -5.406697750091553
    7. 'continue' → logprob: -6.156697750091553
    8. '               ' → logprob: -7.031697750091553
    9. ' continue' → logprob: -8.656698226928711
    10. '#' → logprob: -8.781698226928711

Token 371: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010259108617901802
    2. '               ' → logprob: -4.63525915145874
    3. 'break' → logprob: -8.510258674621582
    4. '                       ' → logprob: -9.385258674621582
    5. '           ' → logprob: -9.635258674621582
    6. ',' → logprob: -9.885258674621582
    7. ')' → logprob: -10.510258674621582
    8. ' break' → logprob: -11.010258674621582
    9. '```' → logprob: -11.010258674621582
    10. '\n' → logprob: -12.010258674621582

Token 372: ' discard' (ID: 79636)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.6026411056518555
    2. 'break' → logprob: -0.8526411056518555
    3. '                   ' → logprob: -3.8526411056518555
    4. 'continue' → logprob: -6.1026411056518555
    5. ' continue' → logprob: -6.6026411056518555
    6. '               ' → logprob: -6.8526411056518555
    7. '                       ' → logprob: -7.7276411056518555
    8. '	break' → logprob: -11.727641105651855
    9. '           ' → logprob: -12.352641105651855
    10. '   ' → logprob: -12.352641105651855

Token 373: ' this' (ID: 495)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0829039216041565
    2. 'break' → logprob: -2.7079038619995117
    3. ' break' → logprob: -4.707903861999512
    4. '               ' → logprob: -5.957903861999512
    5. '                       ' → logprob: -7.082903861999512
    6. '
' → logprob: -9.082903861999512
    7. '           ' → logprob: -9.457903861999512
    8. 'continue' → logprob: -9.957903861999512
    9. ' ' → logprob: -10.207903861999512
    10. '                    
' → logprob: -10.332903861999512

Token 374: ' move' (ID: 5275)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.06172328069806099
    2. ' break' → logprob: -3.311723232269287
    3. '               ' → logprob: -4.936723232269287
    4. 'continue' → logprob: -5.186723232269287
    5. '           ' → logprob: -5.436723232269287
    6. '                   ' → logprob: -5.561723232269287
    7. 'token' → logprob: -7.186723232269287
    8. 'path' → logprob: -8.561723709106445
    9. 'iteration' → logprob: -8.686723709106445
    10. 'move' → logprob: -9.061723709106445

Token 375: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0016810097731649876
    2. 'break' → logprob: -6.751680850982666
    3. '               ' → logprob: -7.751680850982666
    4. ' break' → logprob: -10.251681327819824
    5. '                       ' → logprob: -10.876681327819824
    6. '				' → logprob: -11.751681327819824
    7. '           ' → logprob: -12.251681327819824
    8. ',' → logprob: -12.751681327819824
    9. '   ' → logprob: -12.876681327819824
    10. '                    
' → logprob: -12.876681327819824

Token 376: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005981888971291482
    2. 'break' → logprob: -7.750597953796387
    3. '               ' → logprob: -9.125597953796387
    4. '                       ' → logprob: -10.500597953796387
    5. ' break' → logprob: -10.750597953796387
    6. '				' → logprob: -12.875597953796387
    7. '           ' → logprob: -13.375597953796387
    8. '\n' → logprob: -14.000597953796387
    9. '                    
' → logprob: -14.000597953796387
    10. '```' → logprob: -14.375597953796387

Token 377: ' nx' (ID: 50118)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.006924115587025881
    2. ' break' → logprob: -5.006924152374268
    3. '                   ' → logprob: -8.50692367553711
    4. '                       ' → logprob: -12.63192367553711
    5. '               ' → logprob: -12.88192367553711
    6. '	break' → logprob: -14.63192367553711
    7. '   ' → logprob: -15.75692367553711
    8. '           ' → logprob: -16.25692367553711
    9. '       ' → logprob: -17.63192367553711
    10. ' ' → logprob: -18.13192367553711

Token 378: ' =' (ID: 314)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.14998768270015717
    2. '-=' → logprob: -2.0249876976013184
    3. ',' → logprob: -5.399987697601318
    4. '-' → logprob: -5.899987697601318
    5. ' -' → logprob: -10.64998722076416
    6. ' ,' → logprob: -13.02498722076416
    7. '```' → logprob: -13.64998722076416
    8. '=' → logprob: -13.89998722076416
    9. ' +=' → logprob: -14.89998722076416
    10. '+=' → logprob: -15.14998722076416

Token 379: ' -' (ID: 533)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.19612282514572144
    2. '-' → logprob: -2.196122884750366
    3. 'None' → logprob: -2.821122884750366
    4. 'x' → logprob: -5.071122646331787
    5. ' nx' → logprob: -7.946122646331787
    6. ' -' → logprob: -8.196123123168945
    7. '(nx' → logprob: -9.071123123168945
    8. 'none' → logprob: -10.071123123168945
    9. ' None' → logprob: -10.196123123168945
    10. '-n' → logprob: -10.196123123168945

Token 380: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '2' → logprob: -15.625
    3. '-' → logprob: -15.875
    4. '100' → logprob: -17.125
    5. ' ' → logprob: -17.5
    6. '10' → logprob: -17.5
    7. 'nx' → logprob: -18.25
    8. 'dx' → logprob: -19.75
    9. '999' → logprob: -20.25
    10. '۱' → logprob: -20.375

Token 381: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4569103717803955
    2. '<|end|>' → logprob: -1.4569103717803955
    3. ',' → logprob: -2.5819103717803955
    4. '<|end|>' → logprob: -3.7069103717803955
    5. '           ' → logprob: -4.456910133361816
    6. '               ' → logprob: -4.831910133361816
    7. '
' → logprob: -5.706910133361816
    8. '                       ' → logprob: -6.331910133361816
    9. '                           ' → logprob: -6.331910133361816
    10. '				' → logprob: -7.331910133361816

Token 382: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05091290548443794
    2. 'ny' → logprob: -3.925912857055664
    3. '<|end|>' → logprob: -4.425912857055664
    4. ',' → logprob: -4.800912857055664
    5. '<|end|>' → logprob: -6.050912857055664
    6. '           ' → logprob: -6.300912857055664
    7. '                           ' → logprob: -6.300912857055664
    8. '               ' → logprob: -6.675912857055664
    9. '                       ' → logprob: -7.675912857055664
    10. '                    ' → logprob: -8.425912857055664

Token 383: ' break' (ID: 2338)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.014833441004157066
    2. ' ny' → logprob: -4.264833450317383
    3. '-' → logprob: -7.889833450317383
    4. 'break' (adapté à ' break') → logprob: -8.639833450317383
    5. ' break' → logprob: -9.514833450317383
    6. '                   ' → logprob: -10.514833450317383
    7. ' -' → logprob: -11.389833450317383
    8. '                       ' → logprob: -13.639833450317383
    9. '                     ' → logprob: -14.264833450317383
    10. 'nyi' → logprob: -14.389833450317383

Token 384: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004963174578733742
    2. 'if' → logprob: -8.000495910644531
    3. ' if' → logprob: -9.875495910644531
    4. '<|end|>' → logprob: -10.000495910644531
    5. '                
' → logprob: -11.125495910644531
    6. 'elif' → logprob: -11.250495910644531
    7. '```' → logprob: -11.625495910644531
    8. '			' → logprob: -12.125495910644531
    9. ')' → logprob: -12.750495910644531
    10. '              ' → logprob: -12.750495910644531

Token 385: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011546355381142348
    2. 'if' → logprob: -9.375115394592285
    3. ' if' → logprob: -11.125115394592285
    4. 'elif' → logprob: -12.375115394592285
    5. '                
' → logprob: -12.500115394592285
    6. '```' → logprob: -12.875115394592285
    7. '<|end|>' → logprob: -13.750115394592285
    8. '              ' → logprob: -14.125115394592285
    9. '			' → logprob: -14.125115394592285
    10. '           ' → logprob: -14.875115394592285

Token 386: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06481920927762985
    2. '               ' → logprob: -2.814819097518921
    3. ' if' → logprob: -5.9398193359375
    4. '           ' → logprob: -9.1898193359375
    5. 'cell' → logprob: -9.4398193359375
    6. 'elif' → logprob: -10.8148193359375
    7. '                
' → logprob: -12.0648193359375
    8. '```' → logprob: -12.6898193359375
    9. '       ' → logprob: -13.3148193359375
    10. 'current' → logprob: -14.4398193359375

Token 387: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.038055602461099625
    2. ' b' → logprob: -3.288055658340454
    3. 'board' → logprob: -12.288055419921875
    4. '(b' → logprob: -12.413055419921875
    5. '           ' → logprob: -12.913055419921875
    6. '                   ' → logprob: -14.163055419921875
    7. '               ' → logprob: -14.538055419921875
    8. ' board' → logprob: -14.663055419921875
    9. '   ' → logprob: -15.788055419921875
    10. '(' → logprob: -15.913055419921875

Token 388: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -8.180258191714529e-06
    2. '[' → logprob: -12.375008583068848
    3. ' [' → logprob: -13.375008583068848
    4. 'nx' → logprob: -13.625008583068848
    5. '```' → logprob: -14.750008583068848
    6. '

' → logprob: -15.500008583068848
    7. '(nx' → logprob: -15.500008583068848
    8. '   ' → logprob: -16.75000762939453
    9. '][' → logprob: -16.87500762939453
    10. '
' → logprob: -17.37500762939453

Token 389: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: 0.0
    2. 'nx' → logprob: -17.75
    3. '[' → logprob: -18.375
    4. '[n' → logprob: -19.375
    5. '[x' → logprob: -19.5
    6. ']' → logprob: -20.125
    7. '
' → logprob: -20.375
    8. 'n' → logprob: -20.625
    9. '```' → logprob: -20.75
    10. '][' → logprob: -20.875

Token 390: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00010545044642640278
    2. '[n' → logprob: -9.250105857849121
    3. ']' → logprob: -12.000105857849121
    4. '   ' → logprob: -14.250105857849121
    5. ']==' → logprob: -14.250105857849121
    6. ']][' → logprob: -14.500105857849121
    7. ' ][' → logprob: -14.625105857849121
    8. '[' → logprob: -15.750105857849121
    9. ')][' → logprob: -16.000104904174805
    10. '[x' → logprob: -16.500104904174805

Token 391: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.0037227647844702005
    2. 'nx' → logprob: -5.628722667694092
    3. ' ny' → logprob: -9.37872314453125
    4. 'n' → logprob: -10.87872314453125
    5. '(nx' → logprob: -12.37872314453125
    6. '
' → logprob: -12.62872314453125
    7. ']' → logprob: -12.75372314453125
    8. 'y' → logprob: -12.87872314453125
    9. '0' → logprob: -13.12872314453125
    10. '][' → logprob: -14.00372314453125

Token 392: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07022196799516678
    2. ']==' → logprob: -2.6952219009399414
    3. '==' → logprob: -8.320221900939941
    4. ' ==' → logprob: -10.695221900939941
    5. ' ]' → logprob: -11.570221900939941
    6. ')' → logprob: -12.195221900939941
    7. ')==' → logprob: -13.695221900939941
    8. '']==' → logprob: -13.945221900939941
    9. ']!=' → logprob: -13.945221900939941
    10. '[' → logprob: -14.570221900939941

Token 393: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.020626092329621315
    2. ' ==' → logprob: -3.8956260681152344
    3. ']==' → logprob: -9.645626068115234
    4. ')==' → logprob: -11.520626068115234
    5. '===' → logprob: -13.645626068115234
    6. '<|end|>' → logprob: -13.645626068115234
    7. '()==' → logprob: -13.895626068115234
    8. ')' → logprob: -13.895626068115234
    9. '[' → logprob: -14.020626068115234
    10. '==
' → logprob: -14.270626068115234

Token 394: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0023899218067526817
    2. '0' → logprob: -6.127389907836914
    3. ' ' → logprob: -8.627389907836914
    4. '2' → logprob: -11.377389907836914
    5. '-' → logprob: -12.502389907836914
    6. '4' → logprob: -12.752389907836914
    7. '   ' → logprob: -13.002389907836914
    8. '9' → logprob: -13.127389907836914
    9. '  ' → logprob: -14.377389907836914
    10. ' -' → logprob: -14.627389907836914

Token 395: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.424530435353518e-05
    2. '0' → logprob: -9.750094413757324
    3. ' ' → logprob: -10.625094413757324
    4. '2' → logprob: -12.375094413757324
    5. '4' → logprob: -13.500094413757324
    6. '-' → logprob: -13.687594413757324
    7. '   ' → logprob: -13.687594413757324
    8. '  ' → logprob: -14.125094413757324
    9. '9' → logprob: -14.500094413757324
    10. '3' → logprob: -14.937594413757324

Token 396: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.3868805170059204
    2. ':' → logprob: -1.5118805170059204
    3. ':
' → logprob: -3.011880397796631
    4. '                   ' → logprob: -3.136880397796631
    5. '               ' → logprob: -5.136880397796631
    6. '<|end|>' → logprob: -7.386880397796631
    7. '           ' → logprob: -7.886880397796631
    8. '                       ' → logprob: -8.386880874633789
    9. '                  ' → logprob: -9.261880874633789
    10. 'or' → logprob: -9.261880874633789

Token 397: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01064476277679205
    2. '               ' → logprob: -5.135644912719727
    3. 'break' → logprob: -5.510644912719727
    4. ' break' → logprob: -7.760644912719727
    5. '                  ' → logprob: -9.760644912719727
    6. '           ' → logprob: -9.885644912719727
    7. '   ' → logprob: -10.135644912719727
    8. '                       ' → logprob: -10.635644912719727
    9. ':
' → logprob: -11.760644912719727
    10. '                ' → logprob: -11.760644912719727

Token 398: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.06613829731941223
    2. 'nx' → logprob: -3.56613826751709
    3. '                   ' → logprob: -3.94113826751709
    4. ' break' → logprob: -4.31613826751709
    5. ' nx' → logprob: -6.44113826751709
    6. '               ' → logprob: -6.81613826751709
    7. '                       ' → logprob: -8.69113826751709
    8. '#' (adapté à ' #') → logprob: -11.31613826751709
    9. '(nx' → logprob: -11.31613826751709
    10. '	break' → logprob: -11.56613826751709

Token 399: ' hits' (ID: 21571)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.418465793132782
    2. 'nx' → logprob: -1.6684658527374268
    3. ' break' → logprob: -2.1684658527374268
    4. ' nx' → logprob: -3.2934658527374268
    5. '#' → logprob: -6.543465614318848
    6. '   ' → logprob: -8.418465614318848
    7. ' #' → logprob: -9.543465614318848
    8. '                   ' → logprob: -10.793465614318848
    9. '               ' → logprob: -10.793465614318848
    10. '(nx' → logprob: -10.793465614318848

Token 400: ' a' (ID: 261)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.6439583897590637
    2. '                   ' → logprob: -1.643958330154419
    3. ' break' → logprob: -2.518958330154419
    4. ' stone' → logprob: -2.893958330154419
    5. '<|end|>' → logprob: -3.143958330154419
    6. '(block' → logprob: -4.018958568572998
    7. ' (' → logprob: -4.143958568572998
    8. 'stone' → logprob: -4.393958568572998
    9. '               ' → logprob: -4.643958568572998
    10. 'block' → logprob: -4.768958568572998

Token 401: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.506951630115509
    2. ' block' → logprob: -1.5069515705108643
    3. 'wall' → logprob: -2.7569515705108643
    4. 'stone' → logprob: -3.0069515705108643
    5. 'break' → logprob: -3.7569515705108643
    6. '<|end|>' → logprob: -3.7569515705108643
    7. ' wall' → logprob: -4.506951808929443
    8. ' stone' → logprob: -6.006951808929443
    9. ' break' → logprob: -6.631951808929443
    10. ' ' → logprob: -7.756951808929443

Token 402: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002854924649000168
    2. 'break' → logprob: -6.377854824066162
    3. ',' → logprob: -7.502854824066162
    4. '               ' → logprob: -7.877854824066162
    5. '                       ' → logprob: -10.00285530090332
    6. ' break' → logprob: -10.50285530090332
    7. '<|end|>' → logprob: -10.62785530090332
    8. '                    
' → logprob: -11.00285530090332
    9. ' and' → logprob: -11.25285530090332
    10. '                  ' → logprob: -11.37785530090332

Token 403: ' stops' (ID: 29924)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.4485792815685272
    2. 'break' → logprob: -1.1985793113708496
    3. ' nx' → logprob: -3.1985793113708496
    4. ' break' → logprob: -4.32357931137085
    5. '                   ' → logprob: -5.19857931137085
    6. '                       ' → logprob: -9.073578834533691
    7. '               ' → logprob: -9.823578834533691
    8. '(nx' → logprob: -10.448578834533691
    9. '#' → logprob: -11.323578834533691
    10. 'ny' → logprob: -12.323578834533691

Token 404: ' at' (ID: 540)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003318642033264041
    2. 'break' → logprob: -6.378318786621094
    3. ' at' → logprob: -7.253318786621094
    4. '               ' → logprob: -7.503318786621094
    5. '                       ' → logprob: -9.628318786621094
    6. ',' → logprob: -9.753318786621094
    7. 'nx' → logprob: -9.878318786621094
    8. ' break' → logprob: -10.003318786621094
    9. '(nx' → logprob: -10.128318786621094
    10. ' nx' → logprob: -11.003318786621094

Token 405: ' previous' (ID: 5880)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.2163197100162506
    2. '(nx' → logprob: -1.7163196802139282
    3. ' nx' → logprob: -4.216319561004639
    4. '(n' → logprob: -10.466320037841797
    5. ' (' → logprob: -11.216320037841797
    6. '   ' → logprob: -15.091320037841797
    7. '(' → logprob: -15.466320037841797
    8. '[n' → logprob: -15.591320037841797
    9. 'n' → logprob: -15.841320037841797
    10. '                   ' → logprob: -17.341320037841797

Token 406: ' square' (ID: 13749)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.5578510761260986
    2. '(nx' → logprob: -1.1828510761260986
    3. ' nx' → logprob: -2.5578510761260986
    4. 'x' → logprob: -3.3078510761260986
    5. 'position' → logprob: -5.6828508377075195
    6. ' position' → logprob: -6.5578508377075195
    7. ' (' → logprob: -7.4328508377075195
    8. 'n' → logprob: -7.4328508377075195
    9. '(n' → logprob: -8.18285083770752
    10. '
' → logprob: -8.43285083770752

Token 407: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.014437074773013592
    2. '(nx' → logprob: -5.264437198638916
    3. '               ' → logprob: -5.889437198638916
    4. 'nx' → logprob: -6.014437198638916
    5. ' nx' → logprob: -6.389437198638916
    6. ',' → logprob: -6.764437198638916
    7. '                    
' → logprob: -7.764437198638916
    8. '
' → logprob: -8.264436721801758
    9. '                  ' → logprob: -9.514436721801758
    10. ' (' → logprob: -9.514436721801758

Token 408: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0006278486107476056
    2. '               ' → logprob: -7.7506279945373535
    3. 'nx' → logprob: -9.875627517700195
    4. ',' → logprob: -10.500627517700195
    5. '                    
' → logprob: -10.625627517700195
    6. '
' → logprob: -10.625627517700195
    7. '           ' → logprob: -11.250627517700195
    8. '                       ' → logprob: -11.250627517700195
    9. '(nx' → logprob: -11.625627517700195
    10. 'break' → logprob: -12.000627517700195

Token 409: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' (adapté à ' nx') → logprob: -0.34551602602005005
    2. ' nx' → logprob: -1.3455159664154053
    3. '                   ' → logprob: -3.4705159664154053
    4. '(nx' → logprob: -7.720516204833984
    5. 'break' → logprob: -9.470516204833984
    6. '               ' → logprob: -9.720516204833984
    7. ' break' → logprob: -10.845516204833984
    8. '                       ' → logprob: -11.095516204833984
    9. '                  ' → logprob: -12.345516204833984
    10. '                 ' → logprob: -12.595516204833984

Token 410: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.39902132749557495
    2. '-' → logprob: -1.3990213871002197
    3. ' -=' → logprob: -2.5240213871002197
    4. ' -' → logprob: -6.649021148681641
    5. ',' → logprob: -7.274021148681641
    6. '=' → logprob: -10.77402114868164
    7. '```' → logprob: -11.52402114868164
    8. '               ' → logprob: -12.02402114868164
    9. '           ' → logprob: -12.27402114868164
    10. ')' → logprob: -13.02402114868164

Token 411: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -9.639096970204264e-05
    2. ' dx' → logprob: -9.250096321105957
    3. '1' → logprob: -15.375096321105957
    4. '_dx' → logprob: -17.625097274780273
    5. '.dx' → logprob: -19.375097274780273
    6. 'd' → logprob: -19.375097274780273
    7. '(dx' → logprob: -19.625097274780273
    8. 'DX' → logprob: -21.125097274780273
    9. '
' → logprob: -21.500097274780273
    10. '   ' → logprob: -21.500097274780273

Token 412: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3018715977668762
    2. '
' → logprob: -1.6768715381622314
    3. ',' → logprob: -3.3018715381622314
    4. '               ' → logprob: -3.6768715381622314
    5. '           ' → logprob: -6.3018717765808105
    6. '<|end|>' → logprob: -6.3018717765808105
    7. '                    
' → logprob: -6.4268717765808105
    8. '<|end|>' → logprob: -6.6768717765808105
    9. ',
' → logprob: -7.5518717765808105
    10. '                       ' → logprob: -7.9268717765808105

Token 413: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1698646992444992
    2. ',' → logprob: -2.4198646545410156
    3. '               ' → logprob: -4.044864654541016
    4. '<|end|>' → logprob: -4.044864654541016
    5. '
' → logprob: -4.169864654541016
    6. '<|end|>' → logprob: -4.669864654541016
    7. 'ny' → logprob: -6.044864654541016
    8. '           ' → logprob: -6.544864654541016
    9. ',
' → logprob: -7.169864654541016
    10. 'n' → logprob: -8.044864654541016

Token 414: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' (adapté à ' ny') → logprob: -0.2519516050815582
    2. ' ny' → logprob: -1.5019515752792358
    3. ' break' → logprob: -11.501951217651367
    4. 'break' → logprob: -11.501951217651367
    5. 'n' → logprob: -14.251951217651367
    6. 'ni' → logprob: -15.001951217651367
    7. 'nyi' → logprob: -15.126951217651367
    8. '                   ' → logprob: -15.376951217651367
    9. ',' → logprob: -16.126951217651367
    10. '```' → logprob: -16.376951217651367

Token 415: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.5839900970458984
    2. ' -=' → logprob: -0.8339900970458984
    3. '-' → logprob: -4.833990097045898
    4. '<|end|>' → logprob: -10.208990097045898
    5. '+=' → logprob: -11.583990097045898
    6. '   ' → logprob: -12.583990097045898
    7. ' ' → logprob: -12.833990097045898
    8. ' +=' → logprob: -13.333990097045898
    9. ' -' → logprob: -13.458990097045898
    10. '```' → logprob: -13.583990097045898

Token 416: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0005530327325686812
    2. ' dy' → logprob: -7.500553131103516
    3. '.dy' → logprob: -19.125553131103516
    4. 'd' → logprob: -19.500553131103516
    5. 'dj' → logprob: -20.125553131103516
    6. 'dx' → logprob: -20.250553131103516
    7. 'dym' → logprob: -21.000553131103516
    8. 'Dy' → logprob: -21.500553131103516
    9. '1' → logprob: -22.000553131103516
    10. 'dyr' → logprob: -23.000553131103516

Token 417: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0060901883989572525
    2. '               ' → logprob: -5.50609016418457
    3. '           ' → logprob: -7.38109016418457
    4. '<|end|>' → logprob: -7.50609016418457
    5. '                    
' → logprob: -8.38109016418457
    6. '
' → logprob: -8.38109016418457
    7. ',' → logprob: -9.25609016418457
    8. '                       ' → logprob: -10.13109016418457
    9. '  
' → logprob: -10.50609016418457
    10. '   ' → logprob: -10.75609016418457

Token 418: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008859548717737198
    2. '               ' → logprob: -5.008859634399414
    3. '<|end|>' → logprob: -7.008859634399414
    4. '           ' → logprob: -7.258859634399414
    5. '                    
' → logprob: -9.008859634399414
    6. ',' → logprob: -9.008859634399414
    7. '                       ' → logprob: -10.258859634399414
    8. '```' → logprob: -10.383859634399414
    9. '
' → logprob: -10.633859634399414
    10. '                  ' → logprob: -10.758859634399414

Token 419: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04427991807460785
    2. 'break' (adapté à ' break') → logprob: -3.7942798137664795
    3. '               ' → logprob: -4.419280052185059
    4. ' break' → logprob: -4.919280052185059
    5. '           ' → logprob: -6.919280052185059
    6. '                  ' → logprob: -9.294280052185059
    7. '                       ' → logprob: -9.419280052185059
    8. '                    
' → logprob: -9.794280052185059
    9. '	break' → logprob: -10.294280052185059
    10. '   ' → logprob: -10.544280052185059

Token 420: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09540757536888123
    2. '<|end|>' → logprob: -2.595407485961914
    3. '           ' → logprob: -4.470407485961914
    4. '                
' → logprob: -6.220407485961914
    5. '
' → logprob: -7.470407485961914
    6. '  
' → logprob: -7.595407485961914
    7. '<|end|>' → logprob: -7.720407485961914
    8. '            
' → logprob: -8.345407485961914
    9. '```' → logprob: -8.345407485961914
    10. '                   ' → logprob: -8.470407485961914

Token 421: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08234691619873047
    2. '               ' → logprob: -2.5823469161987305
    3. '```' → logprob: -6.7073469161987305
    4. 'if' → logprob: -7.7073469161987305
    5. ' if' → logprob: -7.8323469161987305
    6. '            
' → logprob: -8.08234691619873
    7. 'new' → logprob: -8.20734691619873
    8. ' new' → logprob: -8.45734691619873
    9. '       ' → logprob: -8.70734691619873
    10. '	       ' → logprob: -9.33234691619873

Token 422: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.030376754701137543
    2. 'if' (adapté à ' if') → logprob: -3.905376672744751
    3. ' if' → logprob: -5.15537691116333
    4. 'elif' → logprob: -5.65537691116333
    5. '           ' → logprob: -8.030376434326172
    6. ' elif' → logprob: -9.405376434326172
    7. '```' → logprob: -9.405376434326172
    8. '       ' → logprob: -11.405376434326172
    9. '
' → logprob: -11.905376434326172
    10. '                
' → logprob: -13.280376434326172

Token 423: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2014150768518448
    2. 'b' → logprob: -1.7014150619506836
    3. '(b' → logprob: -13.826415061950684
    4. '	b' → logprob: -15.701415061950684
    5. ' ' → logprob: -15.951415061950684
    6. ' ' → logprob: -16.201416015625
    7. '[b' → logprob: -16.451416015625
    8. ' (' → logprob: -16.451416015625
    9. '    ' → logprob: -16.576416015625
    10. '(' → logprob: -17.576416015625

Token 424: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -9.491498531133402e-06
    2. ' [' → logprob: -12.625009536743164
    3. '```' → logprob: -13.000009536743164
    4. '
' → logprob: -13.625009536743164
    5. 'nx' → logprob: -14.000009536743164
    6. '[' → logprob: -14.250009536743164
    7. '   ' → logprob: -15.250009536743164
    8. '

' → logprob: -15.375009536743164
    9. '``' → logprob: -15.625009536743164
    10. '[[' → logprob: -16.625009536743164

Token 425: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00012201975914649665
    2. '[n' → logprob: -9.5001220703125
    3. 'nx' → logprob: -10.0001220703125
    4. '[' → logprob: -14.0001220703125
    5. '[x' → logprob: -14.8751220703125
    6. 'n' → logprob: -15.2501220703125
    7. '(nx' → logprob: -16.0001220703125
    8. 'ex' → logprob: -16.2501220703125
    9. 'xn' → logprob: -17.0001220703125
    10. '```' → logprob: -17.1251220703125

Token 426: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.38692066073417664
    2. '][' → logprob: -1.136920690536499
    3. '[' → logprob: -10.136920928955078
    4. '}[' → logprob: -12.886920928955078
    5. '==' → logprob: -13.886920928955078
    6. ']' → logprob: -13.886920928955078
    7. ' ][' → logprob: -14.136920928955078
    8. '   ' → logprob: -14.386920928955078
    9. '"][' → logprob: -14.511920928955078
    10. '[next' → logprob: -14.636920928955078

Token 427: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -6.153795766294934e-06
    2. 'nx' → logprob: -12.500005722045898
    3. ' ny' → logprob: -13.250005722045898
    4. 'n' → logprob: -15.500005722045898
    5. '
' → logprob: -16.1250057220459
    6. 'nyi' → logprob: -16.3750057220459
    7. 'nj' → logprob: -16.6250057220459
    8. '```' → logprob: -17.2500057220459
    9. 'ni' → logprob: -17.3750057220459
    10. 'nye' → logprob: -18.1250057220459

Token 428: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24068452417850494
    2. ']==' → logprob: -2.4906845092773438
    3. ' ==' → logprob: -2.6156845092773438
    4. '==' → logprob: -2.8656845092773438
    5. '[' → logprob: -7.240684509277344
    6. '[]' → logprob: -9.240684509277344
    7. '[n' → logprob: -9.615684509277344
    8. ' ]' → logprob: -10.490684509277344
    9. '```' → logprob: -10.490684509277344
    10. '][' → logprob: -11.615684509277344

Token 429: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20146431028842926
    2. '==' → logprob: -1.701464295387268
    3. ']==' → logprob: -10.576464653015137
    4. '[' → logprob: -10.701464653015137
    5. ']' → logprob: -13.951464653015137
    6. ')==' → logprob: -14.076464653015137
    7. '[]' → logprob: -14.826464653015137
    8. ' ' → logprob: -15.326464653015137
    9. '==
' → logprob: -15.451464653015137
    10. ')' → logprob: -16.07646369934082

Token 430: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.009756204672157764
    2. ' ' → logprob: -4.634756088256836
    3. '   ' → logprob: -15.759756088256836
    4. '4' → logprob: -16.759756088256836
    5. '  ' → logprob: -17.072256088256836
    6. '۳' → logprob: -17.697256088256836
    7. ' ' → logprob: -18.447256088256836
    8. '    ' → logprob: -18.822256088256836
    9. '0' → logprob: -18.822256088256836
    10. '2' → logprob: -18.884756088256836

Token 431: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '4' → logprob: -16.5000057220459
    4. '۳' → logprob: -17.8125057220459
    5. '   ' → logprob: -18.5000057220459
    6. '৩' → logprob: -18.7500057220459
    7. '' → logprob: -19.0000057220459
    8. '0' → logprob: -19.3125057220459
    9. '  ' → logprob: -19.3125057220459
    10. '３' → logprob: -19.6250057220459

Token 432: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43238329887390137
    2. ':
' → logprob: -1.0573832988739014
    3. '                   ' → logprob: -6.1823835372924805
    4. '               ' → logprob: -6.5573835372924805
    5. ' or' → logprob: -9.93238353729248
    6. ':

' → logprob: -10.80738353729248
    7. '                  ' → logprob: -11.05738353729248
    8. '   ' → logprob: -11.18238353729248
    9. '<|end|>' → logprob: -11.18238353729248
    10. '):
' → logprob: -11.18238353729248

Token 433: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0006652565789408982
    2. '               ' → logprob: -7.625665187835693
    3. '           ' → logprob: -9.750665664672852
    4. 'break' → logprob: -10.375665664672852
    5. '                  ' → logprob: -10.750665664672852
    6. '   ' → logprob: -10.875665664672852
    7. '                    ' → logprob: -11.750665664672852
    8. ' break' → logprob: -11.875665664672852
    9. '                       ' → logprob: -12.125665664672852
    10. '                    
' → logprob: -12.250665664672852

Token 434: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9165533781051636
    2. 'return' → logprob: -1.2915533781051636
    3. '                   ' → logprob: -1.9165533781051636
    4. 'moves' → logprob: -2.666553497314453
    5. ' moves' → logprob: -3.291553497314453
    6. ' nx' → logprob: -3.541553497314453
    7. 'nx' → logprob: -3.791553497314453
    8. '               ' → logprob: -5.166553497314453
    9. '                       ' → logprob: -5.291553497314453
    10. 'x' → logprob: -6.041553497314453

Token 435: ' reached' (ID: 15237)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5757625102996826
    2. '#' → logprob: -1.0757625102996826
    3. ' return' → logprob: -2.8257625102996826
    4. ' #' → logprob: -4.200762748718262
    5. 'nx' → logprob: -4.825762748718262
    6. '                   ' → logprob: -4.950762748718262
    7. '               ' → logprob: -5.700762748718262
    8. 'visited' → logprob: -7.075762748718262
    9. 'x' → logprob: -7.450762748718262
    10. 'found' → logprob: -8.075762748718262

Token 436: ' goal' (ID: 8583)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.3980826735496521
    2. '(nx' → logprob: -1.1480827331542969
    3. ' nx' → logprob: -4.898082733154297
    4. 'goal' → logprob: -5.773082733154297
    5. '(' → logprob: -8.273082733154297
    6. ' (' → logprob: -9.023082733154297
    7. '(n' → logprob: -9.273082733154297
    8. '(goal' → logprob: -9.773082733154297
    9. '(True' → logprob: -11.273082733154297
    10. 'ny' → logprob: -11.523082733154297

Token 437: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.011481128633022308
    2. '               ' → logprob: -6.261481285095215
    3. 'return' → logprob: -6.386481285095215
    4. '
' → logprob: -6.511481285095215
    5. ',' → logprob: -6.636481285095215
    6. ' return' → logprob: -6.761481285095215
    7. '                    
' → logprob: -7.386481285095215
    8. 'break' → logprob: -7.636481285095215
    9. 'nx' → logprob: -7.636481285095215
    10. ' nx' → logprob: -7.761481285095215

Token 438: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004459554795175791
    2. ':
' → logprob: -6.629459381103516
    3. ':' → logprob: -7.129459381103516
    4. ' return' → logprob: -7.254459381103516
    5. ',' → logprob: -7.504459381103516
    6. '               ' → logprob: -7.879459381103516
    7. '
' → logprob: -8.129459381103516
    8. '                       ' → logprob: -8.629459381103516
    9. 'return' → logprob: -9.129459381103516
    10. '                    
' → logprob: -10.629459381103516

Token 439: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.038314249366521835
    2. 'moves' → logprob: -3.5383143424987793
    3. ' return' → logprob: -4.913314342498779
    4. 'nx' → logprob: -7.788314342498779
    5. '                   ' → logprob: -8.288313865661621
    6. ' moves' → logprob: -8.663313865661621
    7. '               ' → logprob: -8.788313865661621
    8. 'print' → logprob: -10.038313865661621
    9. '           ' → logprob: -10.663313865661621
    10. '
' → logprob: -10.913313865661621

Token 440: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.0001698094274615869
    2. ' moves' → logprob: -8.75016975402832
    3. '   ' → logprob: -12.25016975402832
    4. 'True' → logprob: -13.00016975402832
    5. 'move' → logprob: -13.12516975402832
    6. 'm' → logprob: -14.75016975402832
    7. '           ' → logprob: -15.00016975402832
    8. '               ' → logprob: -15.25016975402832
    9. '       ' → logprob: -15.25016975402832
    10. 'mov' → logprob: -15.62516975402832

Token 441: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47408542037010193
    2. ' +' → logprob: -0.9740854501724243
    3. '               ' → logprob: -12.349085807800293
    4. ' ' → logprob: -13.974085807800293
    5. '1' → logprob: -14.599085807800293
    6. '           ' → logprob: -14.599085807800293
    7. '                   ' → logprob: -14.849085807800293
    8. '
' → logprob: -15.099085807800293
    9. ' plus' → logprob: -15.224085807800293
    10. '＋' → logprob: -15.474085807800293

Token 442: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.0000057220459
    4. '
' → logprob: -18.3750057220459
    5. '```' → logprob: -18.5625057220459
    6. '2' → logprob: -18.9375057220459
    7. '+' → logprob: -19.1875057220459
    8. '۱' → logprob: -19.8125057220459
    9. ',' → logprob: -20.6250057220459
    10. '１' → logprob: -20.6250057220459

Token 443: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5659027695655823
    2. '           ' → logprob: -1.8159027099609375
    3. '<|end|>' → logprob: -1.8159027099609375
    4. '                
' → logprob: -3.4409027099609375
    5. '            
' → logprob: -4.0659027099609375
    6. ')' → logprob: -4.8159027099609375
    7. '  
' → logprob: -4.8159027099609375
    8. ' ' → logprob: -5.3159027099609375
    9. '                ' → logprob: -5.8159027099609375
    10. '                    
' → logprob: -5.9409027099609375

Token 444: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7801133990287781
    2. '               ' → logprob: -0.7801133990287781
    3. '                
' → logprob: -4.030113220214844
    4. '       ' → logprob: -4.155113220214844
    5. '```' → logprob: -4.280113220214844
    6. '            
' → logprob: -4.405113220214844
    7. '<|end|>' → logprob: -4.530113220214844
    8. '          ' → logprob: -6.530113220214844
    9. '        
' → logprob: -6.780113220214844
    10. '            ' → logprob: -6.780113220214844

Token 445: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010209199041128159
    2. '       ' → logprob: -5.135209083557129
    3. 'if' (adapté à ' if') → logprob: -6.760209083557129
    4. '            
' → logprob: -6.760209083557129
    5. ' if' → logprob: -7.010209083557129
    6. '<|end|>' → logprob: -7.885209083557129
    7. 'new' → logprob: -9.010209083557129
    8. '        
' → logprob: -9.260209083557129
    9. ' new' → logprob: -9.385209083557129
    10. '```' → logprob: -9.760209083557129

Token 446: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.014727138914167881
    2. '(nx' → logprob: -4.8897271156311035
    3. 'nx' → logprob: -5.1397271156311035
    4. ' (' → logprob: -7.0147271156311035
    5. ' ' → logprob: -8.764727592468262
    6. '(' → logprob: -9.389727592468262
    7. ' not' → logprob: -9.639727592468262
    8. '0' → logprob: -11.639727592468262
    9. '(n' → logprob: -11.764727592468262
    10. ' b' → logprob: -12.139727592468262

Token 447: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08819254487752914
    2. '==' → logprob: -2.7131924629211426
    3. ' !=' → logprob: -4.213192462921143
    4. '==-' → logprob: -6.088192462921143
    5. '!=' → logprob: -7.213192462921143
    6. '!=-' → logprob: -8.8381929397583
    7. '>=' → logprob: -9.3381929397583
    8. ' >=' → logprob: -10.8381929397583
    9. ' ' → logprob: -11.4631929397583
    10. '<' → logprob: -12.3381929397583

Token 448: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00010902655776590109
    2. ' -' → logprob: -9.12510871887207
    3. '-x' → logprob: -16.75010871887207
    4. 'x' → logprob: -17.25010871887207
    5. ' ' → logprob: -18.50010871887207
    6. '   ' → logprob: -19.62510871887207
    7. '-
' → logprob: -21.37510871887207
    8. '-start' → logprob: -21.62510871887207
    9. '```' → logprob: -22.12510871887207
    10. '\-' → logprob: -22.25010871887207

Token 449: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -18.25
    4. '۱' → logprob: -20.0
    5. '১' → logprob: -20.0
    6. '१' → logprob: -20.0625
    7. '0' → logprob: -20.875
    8. '2' → logprob: -21.0
    9. '１' → logprob: -21.0
    10. '   ' → logprob: -21.1875

Token 450: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3479480445384979
    2. '               ' → logprob: -1.5979480743408203
    3. ':' → logprob: -2.7229480743408203
    4. '           ' → logprob: -3.7229480743408203
    5. ' or' → logprob: -6.72294807434082
    6. ' continue' → logprob: -9.09794807434082
    7. '       ' → logprob: -9.22294807434082
    8. '                       ' → logprob: -9.84794807434082
    9. '                   ' → logprob: -9.97294807434082
    10. '   ' → logprob: -9.97294807434082

Token 451: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.264334112405777
    2. ' ny' → logprob: -2.014334201812744
    3. 'continue' → logprob: -3.514334201812744
    4. 'True' → logprob: -3.639334201812744
    5. ' True' → logprob: -4.139334201812744
    6. 'not' → logprob: -4.889334201812744
    7. ' continue' → logprob: -5.014334201812744
    8. ' not' → logprob: -5.139334201812744
    9. 'False' → logprob: -5.514334201812744
    10. ' False' → logprob: -7.514334201812744

Token 452: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.05001896247267723
    2. '==' → logprob: -3.0500190258026123
    3. '==-' → logprob: -6.550018787384033
    4. ']==' → logprob: -15.300019264221191
    5. ' ' → logprob: -16.425018310546875
    6. ')==' → logprob: -16.675018310546875
    7. '-' → logprob: -17.675018310546875
    8. '===' → logprob: -18.050018310546875
    9. '=' → logprob: -18.175018310546875
    10. ')' → logprob: -18.175018310546875

Token 453: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.547789674485102e-05
    2. ' -' → logprob: -10.250035285949707
    3. '0' → logprob: -17.125036239624023
    4. '1' → logprob: -17.750036239624023
    5. ' ' → logprob: -18.500036239624023
    6. '```' → logprob: -18.500036239624023
    7. '\-' → logprob: -19.750036239624023
    8. '`' → logprob: -20.375036239624023
    9. '−' → logprob: -20.500036239624023
    10. '   ' → logprob: -20.750036239624023

Token 454: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4378848391061183e-05
    2. '-' → logprob: -11.250014305114746
    3. ' -' → logprob: -14.000014305114746
    4. ' ' → logprob: -15.000014305114746
    5. '```' → logprob: -16.750015258789062
    6. '2' → logprob: -19.000015258789062
    7. '0' → logprob: -19.187515258789062
    8. '(-' → logprob: -19.375015258789062
    9. '१' → logprob: -19.687515258789062
    10. '১' → logprob: -19.812515258789062

Token 455: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5463542342185974
    2. ':' → logprob: -1.2963542938232422
    3. '               ' → logprob: -1.9213542938232422
    4. ' continue' → logprob: -7.671354293823242
    5. '           ' → logprob: -8.421354293823242
    6. '                   ' → logprob: -9.046354293823242
    7. 'continue' → logprob: -9.796354293823242
    8. '                       ' → logprob: -10.421354293823242
    9. ':
' → logprob: -10.546354293823242
    10. ' or' → logprob: -11.046354293823242

Token 456: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005424272385425866
    2. ' continue' → logprob: -8.250542640686035
    3. '			' → logprob: -9.125542640686035
    4. '           ' → logprob: -9.875542640686035
    5. 'continue' → logprob: -10.250542640686035
    6. '	           ' → logprob: -10.750542640686035
    7. '	continue' → logprob: -11.000542640686035
    8. ':
' → logprob: -11.625542640686035
    9. '                   ' → logprob: -11.750542640686035
    10. '	' → logprob: -12.125542640686035

Token 457: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0594220831990242
    2. 'continue' → logprob: -3.559422016143799
    3. ' continue' → logprob: -3.559422016143799
    4. '           ' → logprob: -7.434422016143799
    5. '                   ' → logprob: -8.684422492980957
    6. '   ' → logprob: -11.684422492980957
    7. '	continue' → logprob: -11.809422492980957
    8. '_continue' → logprob: -13.309422492980957
    9. '			' → logprob: -13.934422492980957
    10. '       ' → logprob: -14.809422492980957

Token 458: ' out' (ID: 842)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.32663044333457947
    2. ' continue' → logprob: -1.3266304731369019
    3. '               ' → logprob: -4.326630592346191
    4. '                   ' → logprob: -10.201630592346191
    5. '           ' → logprob: -10.826630592346191
    6. '	continue' → logprob: -11.701630592346191
    7. '   ' → logprob: -14.576630592346191
    8. '_continue' → logprob: -14.826630592346191
    9. 'continu' → logprob: -14.826630592346191
    10. ' ' → logprob: -15.326630592346191

Token 459: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.1331760138273239
    2. 'of' → logprob: -2.25817608833313
    3. '-of' → logprob: -4.508175849914551
    4. '_of' → logprob: -5.383175849914551
    5. '=' → logprob: -5.883175849914551
    6. '-' → logprob: -7.883175849914551
    7. '=-' → logprob: -7.883175849914551
    8. '           ' → logprob: -8.13317584991455
    9. 'Of' → logprob: -9.13317584991455
    10. '==-' → logprob: -9.38317584991455

Token 460: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.006829744204878807
    2. 'bounds' → logprob: -5.006829738616943
    3. 'bound' → logprob: -9.631830215454102
    4. ' board' → logprob: -10.756830215454102
    5. 'range' → logprob: -11.381830215454102
    6. ' bounds' → logprob: -11.756830215454102
    7. 'queue' → logprob: -12.131830215454102
    8. 'boundary' → logprob: -14.256830215454102
    9. 'the' → logprob: -14.381830215454102
    10. 'boards' → logprob: -14.506830215454102

Token 461: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013860350474715233
    2. '           ' → logprob: -4.51386022567749
    3. ' continue' → logprob: -6.38886022567749
    4. 'continue' → logprob: -7.51386022567749
    5. '                   ' → logprob: -7.88886022567749
    6. ',' → logprob: -9.388860702514648
    7. ' continues' → logprob: -11.138860702514648
    8. '			' → logprob: -11.263860702514648
    9. '
' → logprob: -11.263860702514648
    10. '		' → logprob: -11.388860702514648

Token 462: ' skip' (ID: 16677)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.0236279964447021
    2. 'continue' → logprob: -1.0236279964447021
    3. '               ' → logprob: -1.2736279964447021
    4. '                   ' → logprob: -6.523628234863281
    5. '           ' → logprob: -9.273628234863281
    6. '	continue' → logprob: -10.648628234863281
    7. '                ' → logprob: -12.023628234863281
    8. '                       ' → logprob: -12.148628234863281
    9. '_continue' → logprob: -13.148628234863281
    10. '   ' → logprob: -13.273628234863281

Token 463: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04972454532980919
    2. '           ' → logprob: -3.424724578857422
    3. ' continue' → logprob: -4.674724578857422
    4. 'continue' → logprob: -5.049724578857422
    5. '                   ' → logprob: -8.924724578857422
    6. '	continue' → logprob: -10.424724578857422
    7. '		' → logprob: -11.799724578857422
    8. '   ' → logprob: -11.799724578857422
    9. '			' → logprob: -12.049724578857422
    10. '       ' → logprob: -12.049724578857422

Token 464: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08010551333427429
    2. '               ' → logprob: -2.5801055431365967
    3. ' continue' → logprob: -7.330105304718018
    4. 'continue' → logprob: -7.580105304718018
    5. '       ' → logprob: -10.580105781555176
    6. '		' → logprob: -11.955105781555176
    7. '                   ' → logprob: -11.955105781555176
    8. '   ' → logprob: -12.830105781555176
    9. '	continue' → logprob: -12.955105781555176
    10. '```' → logprob: -13.830105781555176

Token 465: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3008904755115509
    2. 'continue' (adapté à ' continue') → logprob: -1.5508904457092285
    3. ' continue' → logprob: -3.0508904457092285
    4. '                   ' → logprob: -7.9258904457092285
    5. '           ' → logprob: -9.425890922546387
    6. '	continue' → logprob: -11.050890922546387
    7. '   ' → logprob: -12.300890922546387
    8. '			' → logprob: -14.050890922546387
    9. '_continue' → logprob: -14.550890922546387
    10. '                       ' → logprob: -15.050890922546387

Token 466: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13224400579929352
    2. '            
' → logprob: -2.882244110107422
    3. '
' → logprob: -3.382244110107422
    4. '       ' → logprob: -4.757244110107422
    5. '<|end|>' → logprob: -5.257244110107422
    6. '    
' → logprob: -5.382244110107422
    7. '        
' → logprob: -5.382244110107422
    8. '  
' → logprob: -6.382244110107422
    9. 'new' → logprob: -6.382244110107422
    10. ' 
' → logprob: -6.632244110107422

Token 467: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02423035353422165
    2. 'new' → logprob: -4.149230480194092
    3. '            
' → logprob: -6.024230480194092
    4. '#' → logprob: -6.649230480194092
    5. '       ' → logprob: -6.649230480194092
    6. '```' → logprob: -6.774230480194092
    7. ' new' → logprob: -7.024230480194092
    8. 'if' → logprob: -7.774230480194092
    9. 'b' → logprob: -8.774230003356934
    10. '
' → logprob: -8.899230003356934

Token 468: ' if' (ID: 538)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.3790320158004761
    2. '           ' → logprob: -1.879032015800476
    3. '#' → logprob: -2.1290321350097656
    4. ' new' → logprob: -3.5040321350097656
    5. 'import' → logprob: -5.379032135009766
    6. ' #' → logprob: -6.129032135009766
    7. 'b' → logprob: -6.129032135009766
    8. 'if' (adapté à ' if') → logprob: -6.254032135009766
    9. '            
' → logprob: -7.004032135009766
    10. 'nb' → logprob: -7.504032135009766

Token 469: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5895014405250549
    2. ' b' → logprob: -1.7145013809204102
    3. 'b' → logprob: -1.8395013809204102
    4. '(b' → logprob: -2.83950138092041
    5. '(' → logprob: -3.83950138092041
    6. '(nx' → logprob: -4.46450138092041
    7. '(x' → logprob: -4.71450138092041
    8. '(n' → logprob: -6.58950138092041
    9. '(not' → logprob: -7.46450138092041
    10. 'nx' → logprob: -7.46450138092041

Token 470: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.010563732124865055
    2. '(nx' → logprob: -4.760563850402832
    3. ' nx' → logprob: -6.260563850402832
    4. '   ' → logprob: -11.135563850402832
    5. ' (' → logprob: -11.260563850402832
    6. '       ' → logprob: -13.260563850402832
    7. '           ' → logprob: -13.510563850402832
    8. 'n' → logprob: -13.510563850402832
    9. '(' → logprob: -13.635563850402832
    10. 'x' → logprob: -13.635563850402832

Token 471: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005470762262120843
    2. ' ,' → logprob: -7.625546932220459
    3. '+' → logprob: -10.875547409057617
    4. ' -' → logprob: -11.375547409057617
    5. ' +' → logprob: -11.625547409057617
    6. '-' → logprob: -11.875547409057617
    7. '           ' → logprob: -12.000547409057617
    8. '```' → logprob: -13.875547409057617
    9. '   ' → logprob: -14.375547409057617
    10. '          ' → logprob: -14.625547409057617

Token 472: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.0001584850688232109
    2. ' ny' → logprob: -8.750158309936523
    3. 'nyi' → logprob: -17.500158309936523
    4. 'NY' → logprob: -19.250158309936523
    5. 'nym' → logprob: -19.375158309936523
    6. 'nyt' → logprob: -19.500158309936523
    7. 'Ny' → logprob: -20.000158309936523
    8. ''ny' → logprob: -20.250158309936523
    9. 'nye' → logprob: -21.125158309936523
    10. '   ' → logprob: -21.500158309936523

Token 473: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002123614540323615
    2. ' ,' → logprob: -8.750212669372559
    3. ')' → logprob: -10.125212669372559
    4. ',
' → logprob: -11.500212669372559
    5. '           ' → logprob: -13.750212669372559
    6. ' not' → logprob: -14.625212669372559
    7. '<|end|>' → logprob: -14.875212669372559
    8. ',n' → logprob: -15.125212669372559
    9. ',)' → logprob: -15.625212669372559
    10. 'not' → logprob: -15.625212669372559

Token 474: ' ==' (ID: 951)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011824887478724122
    2. ' ,' → logprob: -7.626182556152344
    3. ' not' → logprob: -8.126182556152344
    4. '==' → logprob: -9.376182556152344
    5. ',
' → logprob: -9.876182556152344
    6. ',n' → logprob: -9.876182556152344
    7. ')' → logprob: -10.001182556152344
    8. '!=' → logprob: -10.376182556152344
    9. ' ==' → logprob: -10.626182556152344
    10. 'not' → logprob: -10.751182556152344

Token 475: ' (' (ID: 350)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.8550611734390259
    2. '(x' → logprob: -0.9800611734390259
    3. ' (' → logprob: -1.9800611734390259
    4. '(goal' → logprob: -2.8550610542297363
    5. '(' → logprob: -6.230061054229736
    6. 'start' → logprob: -6.730061054229736
    7. 'goal' → logprob: -8.105061531066895
    8. '(go' → logprob: -8.605061531066895
    9. ' ' → logprob: -9.855061531066895
    10. ' start' → logprob: -10.105061531066895

Token 476: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0668763667345047
    2. 'start' → logprob: -3.3168764114379883
    3. 'goal' → logprob: -3.5668764114379883
    4. '(x' → logprob: -9.316876411437988
    5. '(goal' → logprob: -10.066876411437988
    6. ' x' → logprob: -10.816876411437988
    7. '(start' → logprob: -11.816876411437988
    8. ' start' → logprob: -12.691876411437988
    9. ' goal' → logprob: -13.066876411437988
    10. ')' → logprob: -13.316876411437988

Token 477: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012606535165105015
    2. ',y' → logprob: -9.000125885009766
    3. ' ,' → logprob: -13.250125885009766
    4. ',n' → logprob: -14.250125885009766
    5. '<|end|>' → logprob: -16.500125885009766
    6. ',
' → logprob: -17.375125885009766
    7. 'y' → logprob: -17.750125885009766
    8. '‌,' → logprob: -18.875125885009766
    9. ' ' → logprob: -19.000125885009766
    10. ',x' → logprob: -19.250125885009766

Token 478: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0005530327325686812
    2. ' y' → logprob: -7.500553131103516
    3. '	y' → logprob: -18.125553131103516
    4. '   ' → logprob: -18.250553131103516
    5. ' ' → logprob: -18.375553131103516
    6. '    ' → logprob: -19.125553131103516
    7. '           ' → logprob: -19.750553131103516
    8. '       ' → logprob: -19.875553131103516
    9. '     ' → logprob: -20.000553131103516
    10. ',y' → logprob: -20.125553131103516

Token 479: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05954238772392273
    2. ')' → logprob: -3.684542417526245
    3. ',' → logprob: -3.809542417526245
    4. '):
' → logprob: -4.559542179107666
    5. ' ):' → logprob: -10.809542655944824
    6. ':' → logprob: -11.059542655944824
    7. '           ' → logprob: -11.809542655944824
    8. '):

' → logprob: -12.184542655944824
    9. '               ' → logprob: -12.434542655944824
    10. '       ' → logprob: -12.684542655944824

Token 480: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.991464786347933e-05
    2. ' continue' → logprob: -10.125060081481934
    3. 'continue' → logprob: -11.500060081481934
    4. '           ' → logprob: -12.500060081481934
    5. '                   ' → logprob: -13.000060081481934
    6. ':' → logprob: -14.000060081481934
    7. '                       ' → logprob: -14.375060081481934
    8. ',' → logprob: -15.000060081481934
    9. '                
' → logprob: -15.250060081481934
    10. '	           ' → logprob: -15.375060081481934

Token 481: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005566229112446308
    2. ' continue' → logprob: -5.255566120147705
    3. 'continue' → logprob: -8.130566596984863
    4. '                   ' → logprob: -10.630566596984863
    5. '           ' → logprob: -11.505566596984863
    6. '                       ' → logprob: -14.130566596984863
    7. '	continue' → logprob: -14.255566596984863
    8. ' continues' → logprob: -14.505566596984863
    9. '	           ' → logprob: -14.755566596984863
    10. '			' → logprob: -15.005566596984863

Token 482: ' no' (ID: 860)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.24547302722930908
    2. 'continue' → logprob: -1.995473027229309
    3. '               ' → logprob: -2.8704729080200195
    4. ' #' → logprob: -4.2454729080200195
    5. '#' → logprob: -4.6204729080200195
    6. '           ' → logprob: -7.1204729080200195
    7. '                   ' → logprob: -10.37047290802002
    8. '	continue' → logprob: -11.24547290802002
    9. '   ' → logprob: -11.99547290802002
    10. ' ' → logprob: -12.62047290802002

Token 483: ' movement' (ID: 12772)
  Prédit: ' movement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' movement' → logprob: -0.944970428943634
    2. 'movement' → logprob: -1.1949703693389893
    3. ' move' → logprob: -2.0699703693389893
    4. 'move' → logprob: -2.5699703693389893
    5. 'continue' → logprob: -2.9449703693389893
    6. ' continue' → logprob: -4.194970607757568
    7. '           ' → logprob: -4.319970607757568
    8. 'change' → logprob: -5.444970607757568
    9. '<|end|>' → logprob: -5.694970607757568
    10. '            ' → logprob: -6.069970607757568

Token 484: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008467909647151828
    2. '                   ' → logprob: -7.875846862792969
    3. ' continue' → logprob: -8.250846862792969
    4. 'continue' → logprob: -9.250846862792969
    5. ':' → logprob: -9.875846862792969
    6. '           ' → logprob: -10.000846862792969
    7. '                       ' → logprob: -13.125846862792969
    8. ' continues' → logprob: -13.250846862792969
    9. ':
' → logprob: -13.500846862792969
    10. '   ' → logprob: -13.500846862792969

Token 485: ' skip' (ID: 16677)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1449281871318817
    2. ' continue' → logprob: -2.394928216934204
    3. 'continue' → logprob: -3.144928216934204
    4. '                   ' → logprob: -7.394927978515625
    5. '           ' → logprob: -10.644927978515625
    6. '	continue' → logprob: -10.894927978515625
    7. '   ' → logprob: -13.144927978515625
    8. '                       ' → logprob: -13.269927978515625
    9. '			' → logprob: -13.519927978515625
    10. '_continue' → logprob: -13.519927978515625

Token 486: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00039647609810344875
    2. '           ' → logprob: -8.750396728515625
    3. ' continue' → logprob: -9.125396728515625
    4. 'continue' → logprob: -9.500396728515625
    5. '                   ' → logprob: -9.875396728515625
    6. ',' → logprob: -14.250396728515625
    7. '
' → logprob: -15.250396728515625
    8. '                
' → logprob: -15.375396728515625
    9. '```' → logprob: -15.375396728515625
    10. '_continue' → logprob: -15.375396728515625

Token 487: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04987006634473801
    2. '           ' → logprob: -3.299870014190674
    3. ' continue' → logprob: -4.549870014190674
    4. 'continue' → logprob: -7.049870014190674
    5. '                   ' → logprob: -8.549870491027832
    6. '	continue' → logprob: -10.799870491027832
    7. '```' → logprob: -10.924870491027832
    8. '			' → logprob: -11.174870491027832
    9. '		' → logprob: -11.299870491027832
    10. '            
' → logprob: -11.549870491027832

Token 488: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.3695264458656311
    2. '               ' → logprob: -1.8695263862609863
    3. ' continue' → logprob: -1.8695263862609863
    4. '                   ' → logprob: -7.619526386260986
    5. '           ' → logprob: -10.369526863098145
    6. '	continue' → logprob: -11.369526863098145
    7. '   ' → logprob: -11.494526863098145
    8. ' ' → logprob: -14.994526863098145
    9. '_continue' → logprob: -15.244526863098145
    10. '                       ' → logprob: -15.369526863098145

Token 489: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016253103967756033
    2. 'new' → logprob: -7.2516255378723145
    3. '            
' → logprob: -7.3766255378723145
    4. '
' → logprob: -9.251625061035156
    5. ' new' → logprob: -9.376625061035156
    6. '```' → logprob: -9.751625061035156
    7. '#' → logprob: -10.626625061035156
    8. 'b' → logprob: -11.876625061035156
    9. '       ' → logprob: -12.376625061035156
    10. '          ' → logprob: -13.251625061035156

Token 490: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2966703474521637
    2. 'new' → logprob: -1.4216703176498413
    3. '#' → logprob: -4.921670436859131
    4. '       ' → logprob: -5.046670436859131
    5. ' new' → logprob: -6.671670436859131
    6. '   ' → logprob: -9.046669960021973
    7. '            
' → logprob: -9.421669960021973
    8. '```' → logprob: -9.671669960021973
    9. 'b' → logprob: -9.796669960021973
    10. 'import' → logprob: -10.171669960021973

Token 491: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.36650216579437256
    2. '           ' → logprob: -1.6165021657943726
    3. '#' (adapté à ' #') → logprob: -2.366502285003662
    4. ' new' → logprob: -4.491502285003662
    5. ' #' → logprob: -6.616502285003662
    6. '   ' → logprob: -6.991502285003662
    7. 'import' → logprob: -8.241501808166504
    8. 'b' → logprob: -8.366501808166504
    9. '            
' → logprob: -8.866501808166504
    10. '       ' → logprob: -9.491501808166504

Token 492: ' Remove' (ID: 18141)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.32363900542259216
    2. '#' → logprob: -1.5736390352249146
    3. 'import' → logprob: -2.823638916015625
    4. '           ' → logprob: -5.198638916015625
    5. 'b' → logprob: -6.073638916015625
    6. 'from' → logprob: -6.698638916015625
    7. 'nb' → logprob: -8.698638916015625
    8. 'next' → logprob: -8.823638916015625
    9. ' new' → logprob: -8.948638916015625
    10. ' #' → logprob: -9.323638916015625

Token 493: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6827072501182556
    2. ' the' → logprob: -1.5577073097229004
    3. 'b' → logprob: -2.3077073097229004
    4. ' stone' → logprob: -3.0577073097229004
    5. ' b' → logprob: -3.5577073097229004
    6. 'stone' → logprob: -3.5577073097229004
    7. 's' → logprob: -4.8077073097229
    8. 'import' → logprob: -4.8077073097229
    9. 'previous' → logprob: -4.9327073097229
    10. ' previous' → logprob: -5.0577073097229

Token 494: ' block' (ID: 4355)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.13003593683242798
    2. '1' → logprob: -3.130035877227783
    3. 'stone' → logprob: -4.130035877227783
    4. 'nx' → logprob: -4.255035877227783
    5. '3' → logprob: -4.505035877227783
    6. '2' → logprob: -5.130035877227783
    7. ' stone' → logprob: -5.130035877227783
    8. '0' → logprob: -5.505035877227783
    9. 'b' → logprob: -5.630035877227783
    10. '           ' → logprob: -6.255035877227783

Token 495: ' that' (ID: 484)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40270283818244934
    2. '=' → logprob: -2.652702808380127
    3. 'new' → logprob: -2.777702808380127
    4. '_copy' → logprob: -3.277702808380127
    5. 'd' → logprob: -3.777702808380127
    6. '           ' → logprob: -3.777702808380127
    7. 'b' → logprob: -3.902702808380127
    8. '_row' → logprob: -4.027702808380127
    9. '[n' → logprob: -4.277702808380127
    10. 'copy' → logprob: -4.527702808380127

Token 496: ' was' (ID: 673)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9168766736984253
    2. 'nx' → logprob: -1.5418766736984253
    3. 'b' → logprob: -1.7918766736984253
    4. 'x' → logprob: -2.666876792907715
    5. ' nx' → logprob: -3.041876792907715
    6. '(nx' → logprob: -3.541876792907715
    7. ' b' → logprob: -3.791876792907715
    8. '[n' → logprob: -4.416876792907715
    9. ' x' → logprob: -4.666876792907715
    10. '[x' → logprob: -5.166876792907715

Token 497: ' hit' (ID: 7103)
  Prédit: 'hit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hit' → logprob: -1.054707646369934
    2. ' hit' → logprob: -1.554707646369934
    3. 'm' → logprob: -1.804707646369934
    4. 'nx' → logprob: -2.1797075271606445
    5. 'th' → logprob: -2.6797075271606445
    6. '(nx' → logprob: -2.9297075271606445
    7. 'p' → logprob: -4.6797075271606445
    8. 'broken' → logprob: -4.8047075271606445
    9. 'jump' → logprob: -4.9297075271606445
    10. ' moved' → logprob: -5.4297075271606445

Token 498: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20510156452655792
    2. ' if' → logprob: -1.9551016092300415
    3. 'nx' → logprob: -4.080101490020752
    4. '           ' → logprob: -4.580101490020752
    5. ' =' → logprob: -5.705101490020752
    6. 'b' → logprob: -5.705101490020752
    7. '=' → logprob: -5.705101490020752
    8. 'prev' → logprob: -7.080101490020752
    9. ',' → logprob: -7.205101490020752
    10. 'board' → logprob: -7.330101490020752

Token 499: ' any' (ID: 1062)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04849594831466675
    2. ' b' → logprob: -3.4234960079193115
    3. 'nx' → logprob: -5.048495769500732
    4. '(b' → logprob: -5.923495769500732
    5. '(nx' → logprob: -6.173495769500732
    6. '(' → logprob: -6.673495769500732
    7. '0' → logprob: -6.923495769500732
    8. ' (' → logprob: -7.798495769500732
    9. ' nx' → logprob: -8.42349624633789
    10. ' ' → logprob: -8.54849624633789

Token 500: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2181355506181717
    2. 'new' → logprob: -2.2181355953216553
    3. 'if' → logprob: -3.0931355953216553
    4. ' if' → logprob: -3.5931355953216553
    5. ' new' → logprob: -5.343135356903076
    6. 'prev' → logprob: -5.593135356903076
    7. '
' → logprob: -6.218135356903076
    8. 'next' → logprob: -7.218135356903076
    9. ',' → logprob: -7.593135356903076
    10. 'b' → logprob: -7.968135356903076

Token 501: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013949817977845669
    2. 'if' → logprob: -4.638949871063232
    3. ' if' → logprob: -6.513949871063232
    4. 'new' → logprob: -7.013949871063232
    5. 'token' → logprob: -7.388949871063232
    6. '```' → logprob: -8.013949394226074
    7. 'next' → logprob: -8.638949394226074
    8. 'prev' → logprob: -8.888949394226074
    9. '            
' → logprob: -9.013949394226074
    10. 'block' → logprob: -9.138949394226074

Token 502: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.048428263515233994
    2. 'if' → logprob: -3.2984282970428467
    3. 'nb' → logprob: -5.298428058624268
    4. 'import' → logprob: -6.173428058624268
    5. '           ' → logprob: -6.548428058624268
    6. 'next' → logprob: -7.173428058624268
    7. 'b' → logprob: -7.548428058624268
    8. ' new' → logprob: -9.048428535461426
    9. 'found' → logprob: -9.048428535461426
    10. '#' → logprob: -9.923428535461426

Token 503: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -0.577038049697876
    2. '_b' → logprob: -0.827038049697876
    3. 'b' → logprob: -7.452037811279297
    4. ' =' → logprob: -7.952037811279297
    5. 'board' → logprob: -8.827037811279297
    6. '=' → logprob: -11.702037811279297
    7. ' board' → logprob: -12.702037811279297
    8. 'Board' → logprob: -12.827037811279297
    9. '	board' → logprob: -13.327037811279297
    10. '_block' → logprob: -14.452037811279297

Token 504: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693022191524506
    2. ' =' → logprob: -2.1269302368164062
    3. '=[' → logprob: -13.876930236816406
    4. '=[]' → logprob: -14.751930236816406
    5. '=
' → logprob: -15.376930236816406
    6. '[' → logprob: -15.626930236816406
    7. ' =[' → logprob: -16.251930236816406
    8. '=list' → logprob: -16.876930236816406
    9. '=[]
' → logprob: -17.126930236816406
    10. '=[[' → logprob: -17.126930236816406

Token 505: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007697483524680138
    2. '[list' → logprob: -5.507697582244873
    3. '[b' → logprob: -6.257697582244873
    4. '[array' → logprob: -7.757697582244873
    5. '[row' → logprob: -8.382697105407715
    6. ' [' → logprob: -8.507697105407715
    7. '[new' → logprob: -8.882697105407715
    8. '[List' → logprob: -9.007697105407715
    9. '[line' → logprob: -9.507697105407715
    10. '[var' → logprob: -9.632697105407715

Token 506: 'list' (ID: 2641)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.6933109760284424
    2. 'list' → logprob: -0.6933109760284424
    3. '[row' → logprob: -8.943310737609863
    4. '[list' → logprob: -10.693310737609863
    5. ' row' → logprob: -12.318310737609863
    6. '[' → logprob: -12.568310737609863
    7. ' list' → logprob: -13.068310737609863
    8. '[b' → logprob: -15.318310737609863
    9. ' [' → logprob: -16.31831169128418
    10. '[List' → logprob: -18.19331169128418

Token 507: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.048594869673252106
    2. 'row' → logprob: -3.0485949516296387
    3. '(r' → logprob: -12.29859447479248
    4. ' row' → logprob: -12.92359447479248
    5. '	row' → logprob: -15.54859447479248
    6. '_row' → logprob: -16.048595428466797
    7. '[row' → logprob: -16.423595428466797
    8. 'r' → logprob: -16.923595428466797
    9. '(' → logprob: -17.798595428466797
    10. '=row' → logprob: -17.798595428466797

Token 508: ')' (ID: 8)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.23855911195278168
    2. 'row' → logprob: -1.8635591268539429
    3. 'for' → logprob: -3.2385590076446533
    4. '(b' → logprob: -4.613559246063232
    5. ' for' → logprob: -5.488559246063232
    6. 'b' → logprob: -6.363559246063232
    7. ')' → logprob: -6.863559246063232
    8. '(r' → logprob: -7.738559246063232
    9. ' row' → logprob: -7.738559246063232
    10. '           ' → logprob: -9.863558769226074

Token 509: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22789925336837769
    2. ' for' → logprob: -1.7278993129730225
    3. '(row' → logprob: -4.102899074554443
    4. 'row' → logprob: -5.352899074554443
    5. '(b' → logprob: -5.602899074554443
    6. 'b' → logprob: -6.852899074554443
    7. '[:]' → logprob: -9.602899551391602
    8. ' row' → logprob: -10.727899551391602
    9. '   ' → logprob: -11.602899551391602
    10. ')' → logprob: -11.852899551391602

Token 510: ' row' (ID: 5225)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03806604817509651
    2. 'row' → logprob: -3.2880661487579346
    3. 'r' → logprob: -11.038065910339355
    4. ' b' → logprob: -12.163065910339355
    5. ' row' → logprob: -13.788065910339355
    6. 'bb' → logprob: -13.913065910339355
    7. 'line' → logprob: -14.413065910339355
    8. 'board' → logprob: -15.038065910339355
    9. 'block' → logprob: -15.913065910339355
    10. 'br' → logprob: -16.413066864013672

Token 511: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.014321926049888134
    2. ' in' → logprob: -4.264321804046631
    3. 'row' → logprob: -9.139322280883789
    4. 'b' → logprob: -9.889322280883789
    5. 'range' → logprob: -15.639322280883789
    6. ' ' → logprob: -16.88932228088379
    7. ' row' → logprob: -17.13932228088379
    8. 'for' → logprob: -17.38932228088379
    9. 'rows' → logprob: -18.76432228088379
    10. 'line' → logprob: -18.76432228088379

Token 512: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.1008713702030946e-06
    2. ' b' → logprob: -13.125001907348633
    3. '[b' → logprob: -18.125001907348633
    4. 'board' → logprob: -20.125001907348633
    5. '_b' → logprob: -21.000001907348633
    6. '   ' → logprob: -21.250001907348633
    7. '	b' → logprob: -21.375001907348633
    8. ')b' → logprob: -21.375001907348633
    9. '(b' → logprob: -21.625001907348633
    10. '
' → logprob: -21.750001907348633

Token 513: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.3161790072917938
    2. ']' → logprob: -1.3161790370941162
    3. '           ' → logprob: -5.941178798675537
    4. ']

' → logprob: -8.316179275512695
    5. ']
' → logprob: -10.566179275512695
    6. '       ' → logprob: -11.441179275512695
    7. '               ' → logprob: -13.816179275512695
    8. ' ]
' → logprob: -14.566179275512695
    9. 'if' → logprob: -15.191179275512695
    10. '   ' → logprob: -15.441179275512695

Token 514: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01860428787767887
    2. 'if' → logprob: -4.268604278564453
    3. 'new' → logprob: -6.643604278564453
    4. ' if' → logprob: -6.768604278564453
    5. '```' → logprob: -6.893604278564453
    6. 'for' → logprob: -7.893604278564453
    7. 'block' → logprob: -8.643604278564453
    8. '            
' → logprob: -8.893604278564453
    9. '               ' → logprob: -10.018604278564453
    10. ' for' → logprob: -10.143604278564453

Token 515: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.37486058473587036
    2. 'new' → logprob: -1.2498605251312256
    3. 'for' → logprob: -4.124860763549805
    4. '           ' → logprob: -5.249860763549805
    5. 'hit' → logprob: -6.374860763549805
    6. '#' (adapté à ' #') → logprob: -6.624860763549805
    7. 'block' → logprob: -7.249860763549805
    8. 'prev' → logprob: -8.249860763549805
    9. ' if' → logprob: -8.749860763549805
    10. 'while' → logprob: -9.499860763549805

Token 516: ' block' (ID: 4355)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.2624216079711914
    2. 'if' → logprob: -1.7624216079711914
    3. 'hit' → logprob: -3.3874216079711914
    4. 'for' → logprob: -4.262421607971191
    5. 'block' → logprob: -5.012421607971191
    6. '#' → logprob: -6.887421607971191
    7. 'nx' → logprob: -7.012421607971191
    8. 'prev' → logprob: -7.137421607971191
    9. 'hx' → logprob: -7.512421607971191
    10. 'bx' → logprob: -7.887421607971191

Token 517: ' position' (ID: 4010)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.8088487386703491
    2. 'x' → logprob: -1.8088487386703491
    3. '_x' → logprob: -1.8088487386703491
    4. 'pos' → logprob: -3.0588488578796387
    5. '[n' → logprob: -3.5588488578796387
    6. 'nx' → logprob: -4.058848857879639
    7. 'if' → logprob: -4.058848857879639
    8. '_position' → logprob: -4.058848857879639
    9. ' =' → logprob: -4.308848857879639
    10. '(nx' → logprob: -4.433848857879639

Token 518: ' is' (ID: 382)
  Prédit: 'hit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hit' → logprob: -0.3369167447090149
    2. '=' → logprob: -2.08691668510437
    3. 'block' → logprob: -2.96191668510437
    4. ' =' → logprob: -3.21191668510437
    5. 'nx' → logprob: -3.58691668510437
    6. 'hx' → logprob: -4.711916923522949
    7. 'remove' → logprob: -5.086916923522949
    8. '_hit' → logprob: -5.086916923522949
    9. 'x' → logprob: -5.586916923522949
    10. 'blocked' → logprob: -5.836916923522949

Token 519: ' position' (ID: 4010)
  Prédit: '(nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.1074027493596077
    2. 'nx' → logprob: -2.732402801513672
    3. '(n' → logprob: -3.607402801513672
    4. ' (' → logprob: -4.982402801513672
    5. ' nx' → logprob: -6.482402801513672
    6. '(x' → logprob: -7.732402801513672
    7. 'x' → logprob: -8.607402801513672
    8. 'n' → logprob: -8.732402801513672
    9. 'new' → logprob: -8.857402801513672
    10. '(' → logprob: -9.857402801513672

Token 520: ' next' (ID: 2613)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.8469181656837463
    2. '(nx' → logprob: -1.2219181060791016
    3. '=' → logprob: -2.3469181060791016
    4. ' =' → logprob: -2.4719181060791016
    5. 'before' → logprob: -3.2219181060791016
    6. '(n' → logprob: -4.721918106079102
    7. '[n' → logprob: -4.721918106079102
    8. ' nx' → logprob: -4.846918106079102
    9. '=(' → logprob: -4.846918106079102
    10. '```' → logprob: -5.596918106079102

Token 521: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.11665159463882446
    2. ' to' → logprob: -2.7416515350341797
    3. 'x' → logprob: -4.11665153503418
    4. 'after' → logprob: -4.61665153503418
    5. 'nx' → logprob: -5.49165153503418
    6. '=' → logprob: -5.61665153503418
    7. 'before' → logprob: -5.61665153503418
    8. 'token' → logprob: -6.11665153503418
    9. '(nx' → logprob: -6.74165153503418
    10. '_to' → logprob: -7.24165153503418

Token 522: ' where' (ID: 1919)
  Prédit: '(nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.027556346729397774
    2. 'nx' → logprob: -3.6525564193725586
    3. '(x' → logprob: -7.152556419372559
    4. 'x' → logprob: -8.277556419372559
    5. '(n' → logprob: -8.777556419372559
    6. ' (' → logprob: -10.277556419372559
    7. ' nx' → logprob: -11.277556419372559
    8. 'ny' → logprob: -12.902556419372559
    9. '#' → logprob: -13.277556419372559
    10. '(' → logprob: -13.402556419372559

Token 523: ' stone' (ID: 14352)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.1711486577987671
    2. '(nx' → logprob: -2.1711487770080566
    3. 'new' → logprob: -4.046148777008057
    4. 'x' → logprob: -5.046148777008057
    5. ' nx' → logprob: -5.296148777008057
    6. 'stone' → logprob: -5.546148777008057
    7. 'the' → logprob: -5.546148777008057
    8. 'b' → logprob: -6.671148777008057
    9. '(x' → logprob: -7.046148777008057
    10. '           ' → logprob: -7.046148777008057

Token 524: ' stopped' (ID: 18145)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.043582990765571594
    2. ' stopped' → logprob: -3.2935829162597656
    3. '-' → logprob: -7.168582916259766
    4. 'would' → logprob: -7.418582916259766
    5. 'stop' → logprob: -7.543582916259766
    6. 'hit' → logprob: -7.543582916259766
    7. '```' → logprob: -7.918582916259766
    8. 'was' → logprob: -8.168582916259766
    9. 'started' → logprob: -8.293582916259766
    10. '   ' → logprob: -8.418582916259766

Token 525: ' in' (ID: 306)
  Prédit: 'hit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hit' → logprob: -0.8009714484214783
    2. 'block' → logprob: -1.550971508026123
    3. 'nx' → logprob: -2.175971508026123
    4. 'before' → logprob: -2.925971508026123
    5. '           ' → logprob: -3.425971508026123
    6. 'behind' → logprob: -3.675971508026123
    7. ' =' → logprob: -4.175971508026123
    8. 'pos' → logprob: -4.300971508026123
    9. 'after' → logprob: -4.425971508026123
    10. '=' → logprob: -4.550971508026123

Token 526: ' movement' (ID: 12772)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.7867072820663452
    2. 'the' → logprob: -1.0367072820663452
    3. 'dx' → logprob: -2.5367074012756348
    4. 'op' → logprob: -4.036707401275635
    5. 'nx' → logprob: -4.036707401275635
    6. ' direction' → logprob: -4.161707401275635
    7. '-' → logprob: -4.536707401275635
    8. '-d' → logprob: -4.786707401275635
    9. '-direction' → logprob: -4.786707401275635
    10. 'x' → logprob: -4.911707401275635

Token 527: ' direction' (ID: 9262)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20460601150989532
    2. 'nx' → logprob: -2.829606056213379
    3. ' =' → logprob: -3.079606056213379
    4. 'if' → logprob: -4.329606056213379
    5. 'block' → logprob: -4.579606056213379
    6. 'x' → logprob: -5.079606056213379
    7. 'before' → logprob: -5.204606056213379
    8. '=' → logprob: -5.454606056213379
    9. 'new' → logprob: -5.454606056213379
    10. 'after' → logprob: -5.579606056213379

Token 528: '
' (ID: 198)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.6370921730995178
    2. '           ' → logprob: -2.137092113494873
    3. 'bx' → logprob: -2.637092113494873
    4. 'nx' → logprob: -2.637092113494873
    5. ' =' → logprob: -3.012092113494873
    6. '=' → logprob: -3.137092113494873
    7. 'hit' → logprob: -3.637092113494873
    8. 'x' → logprob: -4.512092113494873
    9. 'after' → logprob: -5.012092113494873
    10. 'before' → logprob: -5.012092113494873

Token 529: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7425885200500488
    2. 'block' → logprob: -1.1175885200500488
    3. 'hit' → logprob: -2.367588520050049
    4. 'nx' → logprob: -3.742588520050049
    5. 'bx' → logprob: -4.617588520050049
    6. 'x' → logprob: -4.617588520050049
    7. 'pos' → logprob: -4.867588520050049
    8. ' =' → logprob: -4.992588520050049
    9. 'remove' → logprob: -5.492588520050049
    10. 'prev' → logprob: -5.492588520050049

Token 530: ' block' (ID: 4355)
  Prédit: 'hit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hit' → logprob: -0.08855506777763367
    2. 'bx' → logprob: -3.213555097579956
    3. 'block' (adapté à ' block') → logprob: -3.338555097579956
    4. 'hx' → logprob: -5.588554859161377
    5. 'if' → logprob: -6.838554859161377
    6. ' hit' → logprob: -6.963554859161377
    7. ' bx' → logprob: -7.713554859161377
    8. 'remove' → logprob: -7.963554859161377
    9. 'nx' → logprob: -8.213555335998535
    10. 'b' → logprob: -8.338555335998535

Token 531: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0014203533064574003
    2. 'x' → logprob: -7.251420497894287
    3. '_pos' → logprob: -7.251420497894287
    4. 'pos' → logprob: -14.751420021057129
    5. '_n' → logprob: -15.376420021057129
    6. '_i' → logprob: -15.751420021057129
    7. '_position' → logprob: -17.251420974731445
    8. '_ix' → logprob: -17.501420974731445
    9. '_idx' → logprob: -17.876420974731445
    10. 'X' → logprob: -18.001420974731445

Token 532: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03968958929181099
    2. ' =' → logprob: -3.289689540863037
    3. ',' → logprob: -6.414689540863037
    4. '=n' → logprob: -13.164690017700195
    5. '```' → logprob: -13.289690017700195
    6. '=
' → logprob: -14.289690017700195
    7. 's' → logprob: -14.539690017700195
    8. '=x' → logprob: -14.539690017700195
    9. ',n' → logprob: -14.664690017700195
    10. 'x' → logprob: -14.914690017700195

Token 533: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.00020377879263833165
    2. ' block' → logprob: -8.500204086303711
    3. 'x' → logprob: -15.250204086303711
    4. 'ny' → logprob: -17.50020408630371
    5. '   ' → logprob: -17.87520408630371
    6. 'b' → logprob: -18.62520408630371
    7. '	block' → logprob: -18.62520408630371
    8. '=' → logprob: -19.00020408630371
    9. 'nx' → logprob: -19.00020408630371
    10. ':block' → logprob: -19.00020408630371

Token 534: '_y' (ID: 9410)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0032304716296494007
    2. '_y' → logprob: -5.753230571746826
    3. ' =' → logprob: -10.628230094909668
    4. '=' → logprob: -11.003230094909668
    5. ' y' → logprob: -12.003230094909668
    6. 'x' → logprob: -12.378230094909668
    7. '_x' → logprob: -14.378230094909668
    8. '	y' → logprob: -15.378230094909668
    9. '=y' → logprob: -15.503230094909668
    10. '   ' → logprob: -15.503230094909668

Token 535: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047814972698689
    2. ' =' → logprob: -4.511047840118408
    3. '=n' → logprob: -17.63604736328125
    4. ',' → logprob: -17.88604736328125
    5. '=x' → logprob: -18.01104736328125
    6. '=
' → logprob: -19.01104736328125
    7. '=ax' → logprob: -19.01104736328125
    8. '＝' → logprob: -19.13604736328125
    9. '=

' → logprob: -19.26104736328125
    10. 'x' → logprob: -19.76104736328125

Token 536: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.004671968519687653
    2. '(nx' → logprob: -5.504672050476074
    3. ' nx' → logprob: -7.504672050476074
    4. '   ' → logprob: -10.629672050476074
    5. 'n' → logprob: -11.379672050476074
    6. '(n' → logprob: -12.754672050476074
    7. 'ny' → logprob: -13.879672050476074
    8. '[n' → logprob: -14.129672050476074
    9. '(' → logprob: -14.879672050476074
    10. ' (' → logprob: -15.379672050476074

Token 537: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015078396536409855
    2. ' +' → logprob: -6.501507759094238
    3. '+x' → logprob: -12.751507759094238
    4. '+xml' → logprob: -14.251507759094238
    5. '[' → logprob: -14.876507759094238
    6. '```' → logprob: -15.251507759094238
    7. '+=' → logprob: -15.376507759094238
    8. '+d' → logprob: -15.626507759094238
    9. '+n' → logprob: -15.876507759094238
    10. 'x' → logprob: -16.001508712768555

Token 538: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -8.895480277715251e-06
    2. ' dx' → logprob: -12.000008583068848
    3. '   ' → logprob: -13.625008583068848
    4. '(dx' → logprob: -14.125008583068848
    5. '_dx' → logprob: -14.875008583068848
    6. '.dx' → logprob: -15.625008583068848
    7. '1' → logprob: -15.750008583068848
    8. '[' → logprob: -17.125009536743164
    9. 'd' → logprob: -17.500009536743164
    10. 'direction' → logprob: -18.125009536743164

Token 539: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013585673877969384
    2. 'block' → logprob: -6.626358509063721
    3. ' ,' → logprob: -10.876358985900879
    4. ' block' → logprob: -11.376358985900879
    5. ',
' → logprob: -13.251358985900879
    6. '(block' → logprob: -15.751358985900879
    7. ',n' → logprob: -15.751358985900879
    8. '	block' → logprob: -16.751358032226562
    9. ':block' → logprob: -17.126358032226562
    10. '           ' → logprob: -17.626358032226562

Token 540: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.000158842682139948
    2. ' ny' → logprob: -8.75015926361084
    3. 'n' → logprob: -15.50015926361084
    4. 'nyi' → logprob: -15.87515926361084
    5. 'iny' → logprob: -18.500158309936523
    6. '   ' → logprob: -18.500158309936523
    7. 'nym' → logprob: -18.750158309936523
    8. ''ny' → logprob: -18.875158309936523
    9. 'NY' → logprob: -19.500158309936523
    10. 'nye' → logprob: -19.750158309936523

Token 541: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.061967797577381134
    2. ' +' → logprob: -2.8119678497314453
    3. '+d' → logprob: -15.936967849731445
    4. '＋' → logprob: -18.436967849731445
    5. '+y' → logprob: -18.561967849731445
    6. '<|end|>' → logprob: -19.811967849731445
    7. '+=' → logprob: -19.936967849731445
    8. '[' → logprob: -20.061967849731445
    9. 'dy' → logprob: -20.436967849731445
    10. '+
' → logprob: -20.686967849731445

Token 542: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0002613358374219388
    2. ' dy' → logprob: -8.250261306762695
    3. '.dy' → logprob: -17.375261306762695
    4. 'dx' → logprob: -20.125261306762695
    5. 'Dy' → logprob: -20.625261306762695
    6. 'dym' → logprob: -20.625261306762695
    7. 'dj' → logprob: -21.000261306762695
    8. 'ddy' → logprob: -21.875261306762695
    9. '/d' → logprob: -22.000261306762695
    10. 'ny' → logprob: -22.500261306762695

Token 543: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06827447563409805
    2. ' if' → logprob: -2.81827449798584
    3. 'if' → logprob: -5.81827449798584
    4. '<|end|>' → logprob: -6.31827449798584
    5. '            
' → logprob: -7.44327449798584
    6. '	if' → logprob: -8.56827449798584
    7. '            ' → logprob: -9.19327449798584
    8. '		' → logprob: -9.19327449798584
    9. '
' → logprob: -9.44327449798584
    10. '   ' → logprob: -9.56827449798584

Token 544: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6488887071609497
    2. '           ' → logprob: -0.7738887071609497
    3. 'if' → logprob: -4.64888858795166
    4. '<|end|>' → logprob: -5.27388858795166
    5. '	if' → logprob: -7.77388858795166
    6. '            
' → logprob: -8.39888858795166
    7. '		' → logprob: -9.02388858795166
    8. '            ' → logprob: -9.27388858795166
    9. '	       ' → logprob: -9.39888858795166
    10. ' 
' → logprob: -9.52388858795166

Token 545: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03404548019170761
    2. '           ' → logprob: -3.784045457839966
    3. ' if' → logprob: -4.534045696258545
    4. '```' → logprob: -13.034045219421387
    5. '            ' → logprob: -14.784045219421387
    6. '       ' → logprob: -14.909045219421387
    7. '               ' → logprob: -15.034045219421387
    8. '   ' → logprob: -15.034045219421387
    9. '            
' → logprob: -15.034045219421387
    10. '#' → logprob: -15.284045219421387

Token 546: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013298832345753908
    2. ' ' → logprob: -6.6263298988342285
    3. '(' → logprob: -12.87632942199707
    4. ' (' → logprob: -14.25132942199707
    5. '   ' → logprob: -15.25132942199707
    6. 'block' → logprob: -15.75132942199707
    7. 'new' → logprob: -16.12632942199707
    8. '  ' → logprob: -16.50132942199707
    9. 'board' → logprob: -17.06382942199707
    10. '    ' → logprob: -17.75132942199707

Token 547: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.375004768371582
    3. '(' → logprob: -15.000004768371582
    4. '   ' → logprob: -16.875003814697266
    5. '```' → logprob: -17.250003814697266
    6. 'block' → logprob: -17.375003814697266
    7. 'new' → logprob: -18.250003814697266
    8. '
' → logprob: -18.625003814697266
    9. 'not' → logprob: -18.625003814697266
    10. '           ' → logprob: -18.750003814697266

Token 548: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5759849548339844
    2. '<=' → logprob: -0.8259849548339844
    3. '<' → logprob: -10.200984954833984
    4. ' <' → logprob: -12.075984954833984
    5. '0' → logprob: -13.700984954833984
    6. 'x' → logprob: -14.825984954833984
    7. '#' → logprob: -15.450984954833984
    8. ' ' → logprob: -15.575984954833984
    9. '<len' → logprob: -16.200984954833984
    10. 'if' → logprob: -16.325984954833984

Token 549: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -1.9361264946837764e-07
    2. ' block' → logprob: -16.625
    3. '	block' → logprob: -20.375
    4. '(block' → logprob: -20.875
    5. ':block' → logprob: -21.125
    6. 'h' → logprob: -21.25
    7. '.block' → logprob: -21.5
    8. '`' → logprob: -21.75
    9. 'bloc' → logprob: -21.875
    10. '```' → logprob: -21.875

Token 550: '_x' (ID: 7054)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.11418797820806503
    2. '_x' → logprob: -2.6141879558563232
    3. 'x' → logprob: -3.3641879558563232
    4. ' block' → logprob: -9.489188194274902
    5. '_block' → logprob: -11.489188194274902
    6. '(block' → logprob: -12.614188194274902
    7. ':block' → logprob: -13.739188194274902
    8. '=' → logprob: -14.114188194274902
    9. '```' → logprob: -15.114188194274902
    10. '.block' → logprob: -15.364188194274902

Token 551: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0005577972042374313
    2. ' <' → logprob: -7.500557899475098
    3. '<n' → logprob: -12.375557899475098
    4. '<len' → logprob: -15.625557899475098
    5. '<h' → logprob: -15.875557899475098
    6. ' and' → logprob: -16.87555694580078
    7. '[' → logprob: -16.87555694580078
    8. 'and' → logprob: -16.87555694580078
    9. '<w' → logprob: -17.25055694580078
    10. '<N' → logprob: -17.37555694580078

Token 552: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -6.704273118884885e-07
    2. ' h' → logprob: -14.250000953674316
    3. '   ' → logprob: -19.625
    4. '	h' → logprob: -21.0
    5. 'len' → logprob: -21.375
    6. '<h' → logprob: -21.5
    7. '"h' → logprob: -23.0
    8. '    ' → logprob: -23.5
    9. '```' → logprob: -23.875
    10. '_h' → logprob: -23.875

Token 553: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10020699352025986
    2. 'and' → logprob: -2.3502070903778076
    3. '           ' → logprob: -15.350207328796387
    4. '	and' → logprob: -16.97520637512207
    5. ',' → logprob: -17.47520637512207
    6. ' и' → logprob: -17.60020637512207
    7. '   ' → logprob: -18.60020637512207
    8. ' ' → logprob: -18.60020637512207
    9. '          ' → logprob: -18.72520637512207
    10. '       ' → logprob: -19.22520637512207

Token 554: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008240377064794302
    2. 'block' → logprob: -7.500823974609375
    3. ' ' → logprob: -8.250823974609375
    4. ' block' → logprob: -11.875823974609375
    5. '           ' → logprob: -13.375823974609375
    6. '               ' → logprob: -15.000823974609375
    7. '            ' → logprob: -15.125823974609375
    8. '   ' → logprob: -15.500823974609375
    9. 'w' → logprob: -16.250823974609375
    10. 'board' → logprob: -16.250823974609375

Token 555: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009143244242295623
    2. 'block' → logprob: -7.000914096832275
    3. 'w' → logprob: -13.125914573669434
    4. ' ' → logprob: -14.625914573669434
    5. ' block' → logprob: -15.000914573669434
    6. 'board' → logprob: -19.125913619995117
    7. ' w' → logprob: -20.625913619995117
    8. '   ' → logprob: -21.000913619995117
    9. 'h' → logprob: -21.625913619995117
    10. '(block' → logprob: -21.750913619995117

Token 556: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.02636822499334812
    2. 'block' → logprob: -4.151368141174316
    3. ' <' → logprob: -4.901368141174316
    4. '0' → logprob: -6.401368141174316
    5. '<=' → logprob: -7.276368141174316
    6. ' ' → logprob: -8.526368141174316
    7. ' block' → logprob: -9.276368141174316
    8. ' <=' → logprob: -9.526368141174316
    9. 'y' → logprob: -10.401368141174316
    10. '[' → logprob: -10.651368141174316

Token 557: ' block' (ID: 4355)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.005327435676008463
    2. 'block' → logprob: -5.255327224731445
    3. ' w' → logprob: -9.380327224731445
    4. ' block' → logprob: -11.755327224731445
    5. 'board' → logprob: -14.505327224731445
    6. '_w' → logprob: -15.505327224731445
    7. '   ' → logprob: -15.630327224731445
    8. 'width' → logprob: -15.755327224731445
    9. 'wd' → logprob: -16.630327224731445
    10. ' ' → logprob: -16.755327224731445

Token 558: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.10396681725978851
    2. 'y' → logprob: -2.35396671295166
    3. 'w' → logprob: -5.60396671295166
    4. '_w' → logprob: -9.97896671295166
    5. '_x' → logprob: -11.10396671295166
    6. 'x' → logprob: -11.85396671295166
    7. 'h' → logprob: -14.97896671295166
    8. 'dy' → logprob: -15.22896671295166
    9. 'Y' → logprob: -16.103967666625977
    10. 'd' → logprob: -16.228967666625977

Token 559: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.16022920608520508
    2. ' <' → logprob: -1.910229206085205
    3. '<w' → logprob: -12.785228729248047
    4. 'w' → logprob: -13.285228729248047
    5. '<|end|>' → logprob: -15.660228729248047
    6. ' ' → logprob: -16.160228729248047
    7. '[' → logprob: -16.785228729248047
    8. ')<' → logprob: -17.035228729248047
    9. '<len' → logprob: -17.660228729248047
    10. '<W' → logprob: -18.035228729248047

Token 560: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -4.5491004129871726e-05
    2. ' w' → logprob: -10.000045776367188
    3. '   ' → logprob: -19.500045776367188
    4. '	w' → logprob: -19.750045776367188
    5. ' ' → logprob: -21.000045776367188
    6. 'h' → logprob: -21.000045776367188
    7. '
' → logprob: -21.125045776367188
    8. '  ' → logprob: -22.625045776367188
    9. '_w' → logprob: -22.750045776367188
    10. '​' → logprob: -22.875045776367188

Token 561: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12717682123184204
    2. 'and' → logprob: -2.1271767616271973
    3. '           ' → logprob: -8.627177238464355
    4. ':
' → logprob: -10.127177238464355
    5. ':' → logprob: -11.502177238464355
    6. '       ' → logprob: -11.752177238464355
    7. '               ' → logprob: -12.502177238464355
    8. '   ' → logprob: -13.002177238464355
    9. '          ' → logprob: -13.127177238464355
    10. '	and' → logprob: -13.752177238464355

Token 562: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.19178761541843414
    2. 'and' → logprob: -2.1917877197265625
    3. '               ' → logprob: -2.8167877197265625
    4. '           ' → logprob: -6.1917877197265625
    5. '<|end|>' → logprob: -7.6917877197265625
    6. 'if' → logprob: -9.066787719726562
    7. '```' → logprob: -9.191787719726562
    8. '       ' → logprob: -9.566787719726562
    9. ' if' → logprob: -9.566787719726562
    10. '   ' → logprob: -9.941787719726562

Token 563: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04938818886876106
    2. ' if' → logprob: -3.2993881702423096
    3. '               ' → logprob: -4.549388408660889
    4. '                   ' → logprob: -7.299388408660889
    5. '           ' → logprob: -11.04938793182373
    6. '```' → logprob: -11.79938793182373
    7. '   ' → logprob: -12.04938793182373
    8. '                       ' → logprob: -13.79938793182373
    9. '	if' → logprob: -13.92438793182373
    10. 'new' → logprob: -14.67438793182373

Token 564: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0006108098896220326
    2. ' new' → logprob: -7.750610828399658
    3. 'b' → logprob: -8.6256103515625
    4. ' b' → logprob: -15.3756103515625
    5. '   ' → logprob: -15.3756103515625
    6. '           ' → logprob: -15.6256103515625
    7. '               ' → logprob: -17.8756103515625
    8. '	new' → logprob: -18.0006103515625
    9. '    ' → logprob: -18.2506103515625
    10. '  ' → logprob: -18.2506103515625

Token 565: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -3.128163257315464e-07
    2. 'board' → logprob: -15.375
    3. '_block' → logprob: -17.625
    4. '_BOARD' → logprob: -18.375
    5. 'Board' → logprob: -19.5
    6. ' board' → logprob: -19.75
    7. '_b' → logprob: -20.0
    8. '	board' → logprob: -20.0
    9. '```' → logprob: -21.125
    10. '_' → logprob: -21.75

Token 566: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.13388703338569e-06
    2. 'block' → logprob: -11.625009536743164
    3. '[n' → logprob: -16.625009536743164
    4. ' [' → logprob: -18.250009536743164
    5. ':block' → logprob: -18.625009536743164
    6. '```' → logprob: -18.875009536743164
    7. '   ' → logprob: -19.000009536743164
    8. 'nx' → logprob: -19.000009536743164
    9. '(block' → logprob: -19.500009536743164
    10. ' block' → logprob: -20.375009536743164

Token 567: 'block' (ID: 6230)
  Prédit: 'block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -4.961759259458631e-06
    2. ' block' → logprob: -12.500004768371582
    3. 'nx' → logprob: -13.750004768371582
    4. '[' → logprob: -17.0000057220459
    5. ':block' → logprob: -17.2500057220459
    6. '(block' → logprob: -17.3750057220459
    7. '	block' → logprob: -17.8750057220459
    8. '   ' → logprob: -18.7500057220459
    9. 'x' → logprob: -19.1250057220459
    10. '.block' → logprob: -19.6250057220459

Token 568: '_x' (ID: 7054)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5686183571815491
    2. '_x' → logprob: -1.0686182975769043
    3. 'block' → logprob: -2.4436182975769043
    4. 'nx' → logprob: -6.068618297576904
    5. '[' → logprob: -7.568618297576904
    6. ' block' → logprob: -7.943618297576904
    7. '(block' → logprob: -10.568618774414062
    8. '               ' → logprob: -11.193618774414062
    9. 'X' → logprob: -11.193618774414062
    10. '```' → logprob: -11.193618774414062

Token 569: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003178273618686944
    2. '[' → logprob: -8.125317573547363
    3. 'block' → logprob: -11.250317573547363
    4. ' ][' → logprob: -12.250317573547363
    5. ']' → logprob: -13.000317573547363
    6. '(block' → logprob: -15.125317573547363
    7. ':block' → logprob: -15.250317573547363
    8. ']][' → logprob: -15.500317573547363
    9. '```' → logprob: -15.500317573547363
    10. '"][' → logprob: -15.750317573547363

Token 570: 'block' (ID: 6230)
  Prédit: 'block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -9.746380237629637e-05
    2. ' block' → logprob: -9.250097274780273
    3. '	block' → logprob: -15.000097274780273
    4. '(block' → logprob: -15.500097274780273
    5. ':block' → logprob: -15.500097274780273
    6. ']' → logprob: -16.500097274780273
    7. 'x' → logprob: -16.625097274780273
    8. 'b' → logprob: -16.750097274780273
    9. ')' → logprob: -16.750097274780273
    10. '][' → logprob: -16.875097274780273

Token 571: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0011489099124446511
    2. 'y' → logprob: -6.876148700714111
    3. '_x' → logprob: -9.25114917755127
    4. 'block' → logprob: -11.50114917755127
    5. ']' → logprob: -11.87614917755127
    6. 'Y' → logprob: -13.62614917755127
    7. '   ' → logprob: -15.00114917755127
    8. '```' → logprob: -15.00114917755127
    9. 'x' → logprob: -15.25114917755127
    10. '_]' → logprob: -15.37614917755127

Token 572: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01830071024596691
    2. ']==' → logprob: -4.018300533294678
    3. '==' → logprob: -9.393301010131836
    4. ' ==' → logprob: -10.393301010131836
    5. ' ]' → logprob: -10.393301010131836
    6. '[' → logprob: -13.143301010131836
    7. '][' → logprob: -13.643301010131836
    8. '```' → logprob: -14.143301010131836
    9. ')' → logprob: -14.893301010131836
    10. '']' → logprob: -15.393301010131836

Token 573: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.015570187009871006
    2. ' ==' → logprob: -4.265570163726807
    3. ']==' → logprob: -7.140570163726807
    4. '[' → logprob: -7.640570163726807
    5. ']' → logprob: -9.140570640563965
    6. '===' → logprob: -12.015570640563965
    7. '=' → logprob: -12.265570640563965
    8. '==
' → logprob: -12.515570640563965
    9. ')==' → logprob: -12.890570640563965
    10. '```' → logprob: -12.890570640563965

Token 574: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -11.000021934509277
    3. '0' → logprob: -12.250021934509277
    4. '   ' → logprob: -15.875021934509277
    5. '  ' → logprob: -16.75002098083496
    6. '```' → logprob: -17.62502098083496
    7. '
' → logprob: -18.31252098083496
    8. '    ' → logprob: -18.31252098083496
    9. '2' → logprob: -18.37502098083496
    10. '`' → logprob: -18.43752098083496

Token 575: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.125015258789062
    3. '0' → logprob: -15.250015258789062
    4. '   ' → logprob: -17.062515258789062
    5. '  ' → logprob: -17.312515258789062
    6. '
' → logprob: -17.562515258789062
    7. '```' → logprob: -17.625015258789062
    8. '`' → logprob: -17.937515258789062
    9. '2' → logprob: -18.062515258789062
    10. '"' → logprob: -18.062515258789062

Token 576: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3177115023136139
    2. ':' → logprob: -1.9427114725112915
    3. '                   ' → logprob: -2.067711591720581
    4. '               ' → logprob: -6.942711353302002
    5. ' =' → logprob: -7.817711353302002
    6. '):
' → logprob: -8.06771183013916
    7. '=' → logprob: -8.19271183013916
    8. '                       ' → logprob: -9.31771183013916
    9. ',' → logprob: -9.69271183013916
    10. '           ' → logprob: -10.06771183013916

Token 577: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00024834630312398076
    2. ' new' → logprob: -9.875247955322266
    3. '               ' → logprob: -10.000247955322266
    4. 'new' → logprob: -10.250247955322266
    5. '0' → logprob: -10.375247955322266
    6. '1' → logprob: -10.625247955322266
    7. '                    
' → logprob: -11.250247955322266
    8. '           ' → logprob: -11.750247955322266
    9. ',' → logprob: -12.000247955322266
    10. '                       ' → logprob: -12.250247955322266

Token 578: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.3122600317001343
    2. 'new' (adapté à ' new') → logprob: -1.4372600317001343
    3. '                   ' → logprob: -3.562260150909424
    4. '                       ' → logprob: -6.187260150909424
    5. '               ' → logprob: -10.062259674072266
    6. '```' → logprob: -10.062259674072266
    7. '#' → logprob: -10.312259674072266
    8. '   ' → logprob: -10.687259674072266
    9. '                    ' → logprob: -11.312259674072266
    10. '           ' → logprob: -12.062259674072266

Token 579: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -1.5048530030981055e-06
    2. '_block' → logprob: -14.000001907348633
    3. 'Board' → logprob: -15.250001907348633
    4. '_BOARD' → logprob: -15.500001907348633
    5. 'board' → logprob: -15.625001907348633
    6. ' board' → logprob: -17.875001907348633
    7. '               ' → logprob: -18.000001907348633
    8. '	board' → logprob: -18.125001907348633
    9. '```' → logprob: -18.625001907348633
    10. '           ' → logprob: -19.000001907348633

Token 580: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.054500666621607e-06
    2. 'block' → logprob: -13.25000286102295
    3. ' [' → logprob: -14.87500286102295
    4. '   ' → logprob: -15.37500286102295
    5. '```' → logprob: -15.87500286102295
    6. '[cell' → logprob: -16.500003814697266
    7. '][' → logprob: -16.625003814697266
    8. '[next' → logprob: -16.750003814697266
    9. '(block' → logprob: -17.000003814697266
    10. 'def' → logprob: -17.375003814697266

Token 581: 'block' (ID: 6230)
  Prédit: 'block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -2.3199920178740285e-05
    2. ' block' → logprob: -10.750022888183594
    3. 'nx' → logprob: -13.500022888183594
    4. '(block' → logprob: -16.375022888183594
    5. '	block' → logprob: -17.000022888183594
    6. '   ' → logprob: -17.125022888183594
    7. '[' → logprob: -17.375022888183594
    8. 'x' → logprob: -17.375022888183594
    9. ':block' → logprob: -17.375022888183594
    10. ' ' → logprob: -18.250022888183594

Token 582: '_x' (ID: 7054)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.24673107266426086
    2. '_x' → logprob: -1.6217310428619385
    3. 'x' → logprob: -3.9967310428619385
    4. '[' → logprob: -6.496731281280518
    5. ' block' → logprob: -6.871731281280518
    6. '(block' → logprob: -9.12173080444336
    7. ':block' → logprob: -10.99673080444336
    8. '_block' → logprob: -11.12173080444336
    9. '```' → logprob: -11.74673080444336
    10. '][' → logprob: -11.99673080444336

Token 583: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1713160127401352
    2. '][' → logprob: -1.9213160276412964
    3. 'block' → logprob: -4.546316146850586
    4. ' block' → logprob: -8.921316146850586
    5. ':block' → logprob: -9.171316146850586
    6. '(block' → logprob: -9.546316146850586
    7. ' [' → logprob: -10.421316146850586
    8. '	block' → logprob: -10.921316146850586
    9. '_block' → logprob: -11.171316146850586
    10. '.block' → logprob: -11.421316146850586

Token 584: 'block' (ID: 6230)
  Prédit: 'block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -1.700132997939363e-05
    2. ' block' → logprob: -11.000017166137695
    3. '(block' → logprob: -16.000017166137695
    4. 'nx' → logprob: -17.125017166137695
    5. '	block' → logprob: -17.750017166137695
    6. ':block' → logprob: -17.875017166137695
    7. '[' → logprob: -18.125017166137695
    8. 'ny' → logprob: -18.250017166137695
    9. '_block' → logprob: -18.875017166137695
    10. '.block' → logprob: -19.125017166137695

Token 585: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0007662679417990148
    2. '_x' → logprob: -7.500766277313232
    3. 'block' → logprob: -8.500765800476074
    4. 'y' → logprob: -12.000765800476074
    5. '[' → logprob: -14.000765800476074
    6. 'Y' → logprob: -14.125765800476074
    7. '+' → logprob: -14.250765800476074
    8. '][' → logprob: -15.125765800476074
    9. ' block' → logprob: -15.250765800476074
    10. '   ' → logprob: -15.375765800476074

Token 586: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14509183168411255
    2. ']' → logprob: -2.3950917720794678
    3. ' =' → logprob: -3.2700917720794678
    4. ']=' → logprob: -5.145092010498047
    5. ')' → logprob: -10.145092010498047
    6. ')=' → logprob: -11.520092010498047
    7. '                   ' → logprob: -11.770092010498047
    8. '']=' → logprob: -14.270092010498047
    9. '```' → logprob: -14.395092010498047
    10. ' ]' → logprob: -14.395092010498047

Token 587: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163747429847717
    2. ' =' → logprob: -4.264163970947266
    3. '                   ' → logprob: -16.514163970947266
    4. '=
' → logprob: -16.889163970947266
    5. '＝' → logprob: -17.764163970947266
    6. '                    ' → logprob: -17.889163970947266
    7. '0' → logprob: -18.389163970947266
    8. ')=' → logprob: -18.389163970947266
    9. '.=' → logprob: -18.639163970947266
    10. '=

' → logprob: -19.014163970947266

Token 588: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '2' → logprob: -17.687551498413086
    4. '   ' → logprob: -17.875051498413086
    5. '                   ' → logprob: -17.875051498413086
    6. '                                           ' → logprob: -18.125051498413086
    7. '۰' → logprob: -18.687551498413086
    8. '０' → logprob: -19.125051498413086
    9. '                                   ' → logprob: -19.312551498413086
    10. '  ' → logprob: -19.500051498413086

Token 589: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.625001907348633
    4. '2' → logprob: -17.875001907348633
    5. '۰' → logprob: -17.875001907348633
    6. '                                           ' → logprob: -18.000001907348633
    7. '０' → logprob: -18.312501907348633
    8. '    ' → logprob: -18.937501907348633
    9. '०' → logprob: -19.125001907348633
    10. '  ' → logprob: -19.250001907348633

Token 590: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08499354869127274
    2. '                   ' → logprob: -2.584993600845337
    3. '
' → logprob: -5.334993362426758
    4. '<|end|>' → logprob: -7.334993362426758
    5. '```' → logprob: -8.709993362426758
    6. ',' → logprob: -8.959993362426758
    7. '            
' → logprob: -9.209993362426758
    8. '               ' → logprob: -9.459993362426758
    9. '                    
' → logprob: -9.959993362426758
    10. '<|end|>' → logprob: -10.709993362426758

Token 591: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011862179264426231
    2. '                   ' → logprob: -4.511862277984619
    3. 'queue' → logprob: -8.011861801147461
    4. '```' → logprob: -8.511861801147461
    5. ' queue' → logprob: -9.011861801147461
    6. '		' → logprob: -10.261861801147461
    7. '               ' → logprob: -10.261861801147461
    8. '
' → logprob: -10.386861801147461
    9. '   ' → logprob: -11.011861801147461
    10. ')' → logprob: -12.136861801147461

Token 592: ' state' (ID: 2608)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009235571138560772
    2. 'queue' → logprob: -5.509235382080078
    3. ' queue' → logprob: -5.759235382080078
    4. '   ' → logprob: -6.509235382080078
    5. 'token' → logprob: -9.134235382080078
    6. ' if' → logprob: -9.384235382080078
    7. 'visited' → logprob: -9.884235382080078
    8. 'state' (adapté à ' state') → logprob: -10.009235382080078
    9. '            
' → logprob: -10.134235382080078
    10. 'if' → logprob: -10.509235382080078

Token 593: '_tuple' (ID: 53371)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759677886962891
    2. '=' → logprob: -0.8259677886962891
    3. ')' → logprob: -11.075967788696289
    4. '_tuple' → logprob: -12.200967788696289
    5. '_state' → logprob: -13.325967788696289
    6. '   ' → logprob: -13.450967788696289
    7. '_key' → logprob: -13.825967788696289
    8. ')=' → logprob: -14.700967788696289
    9. 's' → logprob: -14.825967788696289
    10. '_tokens' → logprob: -14.825967788696289

Token 594: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858918860554695
    2. ' =' → logprob: -3.0485892295837402
    3. '<|end|>' → logprob: -14.423588752746582
    4. '=(' → logprob: -14.673588752746582
    5. '＝' → logprob: -15.423588752746582
    6. ')' → logprob: -16.0485897064209
    7. '=
' → logprob: -16.0485897064209
    8. '(' → logprob: -16.1735897064209
    9. ' =(' → logprob: -16.5485897064209
    10. ')=' → logprob: -16.9235897064209

Token 595: ' (' (ID: 350)
  Prédit: '(nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.06233702972531319
    2. ' (' → logprob: -2.8123369216918945
    3. '(' → logprob: -8.812336921691895
    4. '(n' → logprob: -9.062336921691895
    5. '(x' → logprob: -9.187336921691895
    6. '   ' → logprob: -13.562336921691895
    7. ' ' → logprob: -15.562336921691895
    8. '(next' → logprob: -16.18733787536621
    9. '           ' → logprob: -16.31233787536621
    10. '(ns' → logprob: -16.81233787536621

Token 596: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -3.1782583391759545e-05
    2. '(nx' → logprob: -10.500031471252441
    3. ' nx' → logprob: -12.500031471252441
    4. '   ' → logprob: -14.750031471252441
    5. 'n' → logprob: -17.000032424926758
    6. 'ny' → logprob: -19.500032424926758
    7. '(n' → logprob: -20.250032424926758
    8. '       ' → logprob: -20.375032424926758
    9. '           ' → logprob: -20.375032424926758
    10. ' (' → logprob: -20.625032424926758

Token 597: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024323153775185347
    2. ' ,' → logprob: -8.375243186950684
    3. '<|end|>' → logprob: -11.750243186950684
    4. ',n' → logprob: -12.750243186950684
    5. ',
' → logprob: -14.500243186950684
    6. '‌,' → logprob: -15.125243186950684
    7. '```' → logprob: -15.250243186950684
    8. '<|end|>' → logprob: -16.125244140625
    9. ',next' → logprob: -16.625244140625
    10. ',y' → logprob: -16.750244140625

Token 598: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.07889155298471451
    2. ' ny' → logprob: -2.5788915157318115
    3. 'nyi' → logprob: -13.70389175415039
    4. 'n' → logprob: -15.20389175415039
    5. 'ni' → logprob: -16.82889175415039
    6. 'yn' → logprob: -17.07889175415039
    7. 'iny' → logprob: -17.20389175415039
    8. ''ny' → logprob: -17.45389175415039
    9. 'nye' → logprob: -17.45389175415039
    10. ',' → logprob: -17.45389175415039

Token 599: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.558399319241289e-05
    2. ' ,' → logprob: -10.625025749206543
    3. ',
' → logprob: -14.875025749206543
    4. '           ' → logprob: -15.375025749206543
    5. '‌,' → logprob: -15.500025749206543
    6. ',state' → logprob: -16.500024795532227
    7. '<|end|>' → logprob: -16.875024795532227
    8. '   ' → logprob: -17.250024795532227
    9. '',' → logprob: -17.625024795532227
    10. '،' → logprob: -17.625024795532227

Token 600: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.001502598519437015
    2. ' board' → logprob: -6.501502513885498
    3. ' ' → logprob: -16.376502990722656
    4. '   ' → logprob: -16.626502990722656
    5. '(board' → logprob: -17.501502990722656
    6. '	board' → logprob: -18.626502990722656
    7. '  ' → logprob: -19.001502990722656
    8. '    ' → logprob: -19.251502990722656
    9. '
' → logprob: -19.376502990722656
    10. '           ' → logprob: -19.626502990722656

Token 601: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.5094070477061905e-05
    2. 'to' → logprob: -11.250015258789062
    3. 'To' → logprob: -13.250015258789062
    4. ')' → logprob: -15.625015258789062
    5. ' to' → logprob: -17.500015258789062
    6. '_t' → logprob: -18.500015258789062
    7. 't' → logprob: -18.500015258789062
    8. '```' → logprob: -18.500015258789062
    9. '_TO' → logprob: -19.000015258789062
    10. '-to' → logprob: -19.125015258789062

Token 602: '_tuple' (ID: 53371)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.31330275535583496
    2. '_tuple' → logprob: -1.313302755355835
    3. 'uple' → logprob: -10.938302993774414
    4. ' tuple' → logprob: -10.938302993774414
    5. 't' → logprob: -13.313302993774414
    6. '(tuple' → logprob: -13.563302993774414
    7. 'Tuple' → logprob: -14.188302993774414
    8. ')' → logprob: -14.563302993774414
    9. 'tu' → logprob: -14.563302993774414
    10. '```' → logprob: -14.563302993774414

Token 603: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -9.949026571121067e-05
    2. 'new' → logprob: -9.250099182128906
    3. '[new' → logprob: -13.500099182128906
    4. ')new' → logprob: -13.750099182128906
    5. '(' → logprob: -15.125099182128906
    6. ')' → logprob: -15.625099182128906
    7. '(tuple' → logprob: -15.625099182128906
    8. '```' → logprob: -16.125099182128906
    9. ' (' → logprob: -16.500099182128906
    10. ' new' → logprob: -16.750099182128906

Token 604: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -0.00016086915275081992
    2. 'board' → logprob: -8.750161170959473
    3. 'new' → logprob: -13.375161170959473
    4. '(board' → logprob: -15.000161170959473
    5. 'oard' → logprob: -15.625161170959473
    6. 'Board' → logprob: -16.250160217285156
    7. '_BOARD' → logprob: -17.000160217285156
    8. ' board' → logprob: -17.125160217285156
    9. '(new' → logprob: -17.250160217285156
    10. '_new' → logprob: -17.375160217285156

Token 605: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3869797885417938
    2. ')' → logprob: -1.1369798183441162
    3. '))
' → logprob: -9.261980056762695
    4. '           ' → logprob: -12.011980056762695
    5. ')
' → logprob: -12.761980056762695
    6. ')))' → logprob: -13.136980056762695
    7. '       ' → logprob: -14.636980056762695
    8. '))

' → logprob: -14.761980056762695
    9. '),' → logprob: -14.886980056762695
    10. ' )' → logprob: -15.136980056762695

Token 606: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14357757568359375
    2. ' if' → logprob: -2.7685775756835938
    3. 'if' → logprob: -3.0185775756835938
    4. '<|end|>' → logprob: -4.518577575683594
    5. '```' → logprob: -5.768577575683594
    6. '
' → logprob: -5.893577575683594
    7. '   ' → logprob: -6.143577575683594
    8. '       ' → logprob: -7.143577575683594
    9. '<|end|>' → logprob: -7.268577575683594
    10. ')' → logprob: -7.643577575683594

Token 607: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7996792793273926
    2. 'if' (adapté à ' if') → logprob: -1.1746792793273926
    3. '           ' → logprob: -1.4246792793273926
    4. '<|end|>' → logprob: -7.424679279327393
    5. '       ' → logprob: -8.924678802490234
    6. '   ' → logprob: -10.049678802490234
    7. '<|end|>' → logprob: -10.174678802490234
    8. '
' → logprob: -10.174678802490234
    9. '```' → logprob: -10.299678802490234
    10. '	if' → logprob: -10.424678802490234

Token 608: ' state' (ID: 2608)
  Prédit: ' state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' state' → logprob: -0.4740772247314453
    2. 'state' → logprob: -0.9740772247314453
    3. '(state' → logprob: -15.599077224731445
    4. '	state' → logprob: -17.599077224731445
    5. '_state' → logprob: -18.474077224731445
    6. '   ' → logprob: -18.599077224731445
    7. ' not' → logprob: -19.224077224731445
    8. ' ' → logprob: -19.599077224731445
    9. ',state' → logprob: -19.974077224731445
    10. 'State' → logprob: -20.349077224731445

Token 609: '_tuple' (ID: 53371)
  Prédit: '_tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -5.657694418914616e-05
    2. '_t' → logprob: -10.000056266784668
    3. 'tuple' → logprob: -12.250056266784668
    4. '_' → logprob: -12.750056266784668
    5. '
' → logprob: -14.750056266784668
    6. 'state' → logprob: -15.125056266784668
    7. '>' → logprob: -15.125056266784668
    8. '_state' → logprob: -15.125056266784668
    9. 'not' → logprob: -15.125056266784668
    10. 't' → logprob: -15.750056266784668

Token 610: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0030423623975366354
    2. 'not' → logprob: -6.003042221069336
    3. ' in' → logprob: -7.503042221069336
    4. 'in' → logprob: -11.128042221069336
    5. '	not' → logprob: -14.753042221069336
    6. '<|end|>' → logprob: -17.753042221069336
    7. ')' → logprob: -18.503042221069336
    8. '   ' → logprob: -19.003042221069336
    9. '_not' → logprob: -19.003042221069336
    10. ' ' → logprob: -19.503042221069336

Token 611: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.318681188422488e-05
    2. ' visited' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.62501335144043
    4. '           ' → logprob: -18.25001335144043
    5. '
' → logprob: -19.75001335144043
    6. '       ' → logprob: -20.62501335144043
    7. 'visit' → logprob: -20.87501335144043
    8. 'visible' → logprob: -21.87501335144043
    9. '```' → logprob: -21.87501335144043
    10. ' ' → logprob: -22.12501335144043

Token 612: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31593117117881775
    2. ':
' → logprob: -1.3159312009811401
    3. '               ' → logprob: -6.44093132019043
    4. '           ' → logprob: -7.81593132019043
    5. ' continue' → logprob: -8.56593132019043
    6. '):
' → logprob: -9.19093132019043
    7. 'continue' → logprob: -9.31593132019043
    8. ':return' → logprob: -9.69093132019043
    9. ' continues' → logprob: -10.31593132019043
    10. '                       ' → logprob: -10.44093132019043

Token 613: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1169760450720787
    2. ' continue' → logprob: -2.241976022720337
    3. 'continue' → logprob: -5.616976261138916
    4. '                   ' → logprob: -8.866975784301758
    5. '           ' → logprob: -9.116975784301758
    6. '	continue' → logprob: -9.616975784301758
    7. '```' → logprob: -10.116975784301758
    8. '                               ' → logprob: -10.366975784301758
    9. ' continues' → logprob: -10.366975784301758
    10. '                       ' → logprob: -10.741975784301758

Token 614: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.37235841155052185
    2. '               ' → logprob: -1.8723584413528442
    3. 'continue' (adapté à ' continue') → logprob: -1.8723584413528442
    4. '                   ' → logprob: -5.747358322143555
    5. '           ' → logprob: -8.997358322143555
    6. '   ' → logprob: -10.747358322143555
    7. '	continue' → logprob: -10.747358322143555
    8. '                       ' → logprob: -12.997358322143555
    9. '_continue' → logprob: -12.997358322143555
    10. '```' → logprob: -13.122358322143555

Token 615: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005512872710824013
    2. '
' → logprob: -5.755512714385986
    3. ' queue' → logprob: -7.255512714385986
    4. '```' → logprob: -7.630512714385986
    5. 'queue' → logprob: -8.130513191223145
    6. '		' → logprob: -8.130513191223145
    7. '            
' → logprob: -8.755513191223145
    8. '       ' → logprob: -9.630513191223145
    9. '<|end|>' → logprob: -9.630513191223145
    10. '   ' → logprob: -9.880513191223145

Token 616: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002999689429998398
    2. '```' → logprob: -6.752999782562256
    3. '
' → logprob: -7.252999782562256
    4. 'visited' → logprob: -7.627999782562256
    5. ' visited' → logprob: -8.002999305725098
    6. '       ' → logprob: -9.252999305725098
    7. '		' → logprob: -9.877999305725098
    8. '               ' → logprob: -10.252999305725098
    9. '            
' → logprob: -10.377999305725098
    10. '<|end|>' → logprob: -11.252999305725098

Token 617: ' visited' (ID: 18416)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.040175363421440125
    2. 'visited' (adapté à ' visited') → logprob: -3.290175437927246
    3. ' visited' → logprob: -6.540175437927246
    4. 'queue' → logprob: -8.540175437927246
    5. '   ' → logprob: -9.165175437927246
    6. '       ' → logprob: -9.165175437927246
    7. '
' → logprob: -9.165175437927246
    8. '		' → logprob: -9.540175437927246
    9. ' queue' → logprob: -9.665175437927246
    10. '	       ' → logprob: -11.040175437927246

Token 618: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -9.65101717156358e-05
    2. '.' → logprob: -9.250096321105957
    3. '.Add' → logprob: -16.375097274780273
    4. '.update' → logprob: -16.875097274780273
    5. '.setdefault' → logprob: -16.875097274780273
    6. '.append' → logprob: -17.250097274780273
    7. '.remove' → logprob: -17.500097274780273
    8. '<|end|>' → logprob: -18.000097274780273
    9. ' .' → logprob: -18.500097274780273
    10. ')add' → logprob: -18.875097274780273

Token 619: '(state' (ID: 16114)
  Prédit: '(state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -0.0024923032615333796
    2. '(' → logprob: -6.002492427825928
    3. ' (' → logprob: -11.12749195098877
    4. 'state' → logprob: -13.62749195098877
    5. ' state' → logprob: -14.50249195098877
    6. '((' → logprob: -16.502492904663086
    7. ',state' → logprob: -16.627492904663086
    8. '[state' → logprob: -18.127492904663086
    9. '(space' → logprob: -18.377492904663086
    10. '(states' → logprob: -18.377492904663086

Token 620: '_tuple' (ID: 53371)
  Prédit: '_tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -5.145118848304264e-05
    2. '(state' → logprob: -10.375051498413086
    3. 'tuple' → logprob: -11.250051498413086
    4. 'state' → logprob: -12.875051498413086
    5. 'uple' → logprob: -13.500051498413086
    6. '_state' → logprob: -13.625051498413086
    7. '_token' → logprob: -14.750051498413086
    8. 'Tuple' → logprob: -15.125051498413086
    9. '(tuple' → logprob: -15.250051498413086
    10. '_type' → logprob: -15.250051498413086

Token 621: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007742555346339941
    2. ')' → logprob: -5.132742404937744
    3. '<|end|>' → logprob: -7.507742404937744
    4. ',' → logprob: -7.632742404937744
    5. '
' → logprob: -7.757742404937744
    6. ')
' → logprob: -8.882742881774902
    7. '<|end|>' → logprob: -9.257742881774902
    8. '		' → logprob: -10.507742881774902
    9. '```' → logprob: -10.882742881774902
    10. '            
' → logprob: -11.507742881774902

Token 622: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1423756629228592
    2. '		' → logprob: -2.1423757076263428
    3. '	queue' → logprob: -4.892375469207764
    4. '	       ' → logprob: -6.392375469207764
    5. '```' → logprob: -6.517375469207764
    6. '   ' → logprob: -6.767375469207764
    7. '       ' → logprob: -6.767375469207764
    8. ' queue' → logprob: -7.642375469207764
    9. '(queue' → logprob: -7.892375469207764
    10. 'queue' → logprob: -8.017375946044922

Token 623: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.4977260231971741
    2. ' queue' → logprob: -1.3727259635925293
    3. '           ' → logprob: -1.9977259635925293
    4. '		' → logprob: -6.122725963592529
    5. '	queue' → logprob: -7.372725963592529
    6. '   ' → logprob: -9.747726440429688
    7. '       ' → logprob: -9.997726440429688
    8. '	       ' → logprob: -10.872726440429688
    9. '```' → logprob: -10.997726440429688
    10. '.queue' → logprob: -11.247726440429688

Token 624: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.08944896562025e-05
    2. '.p' → logprob: -9.625081062316895
    3. '.' → logprob: -11.375081062316895
    4. '.extend' → logprob: -13.375081062316895
    5. '.app' → logprob: -14.250081062316895
    6. '.enqueue' → logprob: -14.750081062316895
    7. ').' → logprob: -15.000081062316895
    8. 'append' → logprob: -15.375081062316895
    9. '_append' → logprob: -16.750080108642578
    10. '.put' → logprob: -17.250080108642578

Token 625: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07889793813228607
    2. '((' → logprob: -2.5788979530334473
    3. ' (' → logprob: -12.078897476196289
    4. '(nx' → logprob: -13.203897476196289
    5. ' ((' → logprob: -14.578897476196289
    6. '(n' → logprob: -16.70389747619629
    7. '(
' → logprob: -16.70389747619629
    8. '(((' → logprob: -17.32889747619629
    9. '```' → logprob: -18.20389747619629
    10. '   ' → logprob: -19.45389747619629

Token 626: ' (' (ID: 350)
  Prédit: '(nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.01823480799794197
    2. ' (' → logprob: -4.018234729766846
    3. '(' → logprob: -9.768235206604004
    4. '(n' → logprob: -10.518235206604004
    5. '(nn' → logprob: -15.018235206604004
    6. '   ' → logprob: -16.268234252929688
    7. '(x' → logprob: -17.643234252929688
    8. ' ' → logprob: -17.893234252929688
    9. '(cx' → logprob: -18.018234252929688
    10. '((' → logprob: -18.143234252929688

Token 627: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -2.975612187583465e-05
    2. ' nx' → logprob: -11.000029563903809
    3. '(nx' → logprob: -11.250029563903809
    4. '   ' → logprob: -17.750030517578125
    5. '
' → logprob: -19.875030517578125
    6. 'n' → logprob: -20.125030517578125
    7. 'ny' → logprob: -21.125030517578125
    8. '```' → logprob: -21.625030517578125
    9. ' ' → logprob: -22.500030517578125
    10. '  ' → logprob: -22.750030517578125

Token 628: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002622894535306841
    2. ' ,' → logprob: -8.250262260437012
    3. ',
' → logprob: -14.750262260437012
    4. ',y' → logprob: -15.375262260437012
    5. '<|end|>' → logprob: -15.625262260437012
    6. ',n' → logprob: -16.000263214111328
    7. '‌,' → logprob: -17.750263214111328
    8. ',next' → logprob: -17.750263214111328
    9. '[' → logprob: -17.875263214111328
    10. '```' → logprob: -18.125263214111328

Token 629: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.0004904801025986671
    2. ' ny' → logprob: -7.625490665435791
    3. 'nyi' → logprob: -13.000490188598633
    4. ''ny' → logprob: -17.125490188598633
    5. 'nym' → logprob: -17.250490188598633
    6. 'Ny' → logprob: -17.500490188598633
    7. 'nyt' → logprob: -17.625490188598633
    8. 'NY' → logprob: -18.125490188598633
    9. 'nye' → logprob: -18.375490188598633
    10. ' ' → logprob: -18.625490188598633

Token 630: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011355629976605996
    2. ' ,' → logprob: -9.250113487243652
    3. ',m' → logprob: -11.000113487243652
    4. ',
' → logprob: -15.125113487243652
    5. ',n' → logprob: -16.75011444091797
    6. '```' → logprob: -16.75011444091797
    7. '           ' → logprob: -16.87511444091797
    8. '<|end|>' → logprob: -17.12511444091797
    9. '),' → logprob: -17.25011444091797
    10. ')' → logprob: -17.75011444091797

Token 631: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.0024763736873865128
    2. ' moves' → logprob: -6.002476215362549
    3. 'm' → logprob: -15.002476692199707
    4. '   ' → logprob: -15.127476692199707
    5. 'mov' → logprob: -16.12747573852539
    6. '.moves' → logprob: -18.12747573852539
    7. 'move' → logprob: -18.25247573852539
    8. ' ' → logprob: -18.37747573852539
    9. '_moves' → logprob: -18.87747573852539
    10. 'movies' → logprob: -19.50247573852539

Token 632: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029750484973192215
    2. ' +' → logprob: -3.5297505855560303
    3. '＋' → logprob: -17.90475082397461
    4. '```' → logprob: -19.02975082397461
    5. '   ' → logprob: -19.15475082397461
    6. '1' → logprob: -20.02975082397461
    7. '+
' → logprob: -20.40475082397461
    8. ' ' → logprob: -20.52975082397461
    9. ',' → logprob: -20.90475082397461
    10. '	' → logprob: -20.90475082397461

Token 633: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.375001907348633
    4. '```' → logprob: -17.000001907348633
    5. '           ' → logprob: -18.500001907348633
    6. ',' → logprob: -19.750001907348633
    7. '       ' → logprob: -19.750001907348633
    8. ')' → logprob: -20.250001907348633
    9. '+' → logprob: -20.875001907348633
    10. '  ' → logprob: -20.875001907348633

Token 634: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.849109119386412e-06
    2. ',new' → logprob: -11.750009536743164
    3. ' ,' → logprob: -13.250009536743164
    4. ',
' → logprob: -16.625009536743164
    5. 'new' → logprob: -17.000009536743164
    6. '   ' → logprob: -18.375009536743164
    7. ',n' → logprob: -18.875009536743164
    8. '```' → logprob: -19.375009536743164
    9. '),' → logprob: -20.500009536743164
    10. ')' → logprob: -20.625009536743164

Token 635: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.004152360837906599
    2. ' new' → logprob: -5.504152297973633
    3. '[new' → logprob: -9.629152297973633
    4. '[' → logprob: -12.004152297973633
    5. ' [' → logprob: -14.129152297973633
    6. '   ' → logprob: -14.754152297973633
    7. ' ' → logprob: -15.879152297973633
    8. '	new' → logprob: -16.129152297973633
    9. '               ' → logprob: -16.379152297973633
    10. '                   ' → logprob: -16.629152297973633

Token 636: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -1.981667537620524e-06
    2. 'board' → logprob: -13.500001907348633
    3. '_' → logprob: -15.000001907348633
    4. '_new' → logprob: -16.625001907348633
    5. '_bo' → logprob: -17.000001907348633
    6. '_BOARD' → logprob: -17.000001907348633
    7. 'Board' → logprob: -17.375001907348633
    8. ' board' → logprob: -17.375001907348633
    9. '\' → logprob: -18.125001907348633
    10. 'new' → logprob: -18.375001907348633

Token 637: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.77627644513268e-06
    2. ' )' → logprob: -12.125008583068848
    3. '))' → logprob: -12.625008583068848
    4. ')
' → logprob: -18.125009536743164
    5. '   ' → logprob: -18.625009536743164
    6. ' ))' → logprob: -21.500009536743164
    7. '}' → logprob: -22.000009536743164
    8. '）' → logprob: -22.000009536743164
    9. ')`' → logprob: -22.125009536743164
    10. ' ' → logprob: -22.250009536743164

Token 638: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023917861108202487
    2. ' )' → logprob: -8.375239372253418
    3. ')
' → logprob: -11.875239372253418
    4. '   ' → logprob: -13.750239372253418
    5. '           ' → logprob: -15.250239372253418
    6. '       ' → logprob: -15.250239372253418
    7. '))' → logprob: -16.5002384185791
    8. ' ' → logprob: -17.5002384185791
    9. ' )
' → logprob: -17.8752384185791
    10. ')`' → logprob: -18.6252384185791

Token 639: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.14628727734088898
    2. '<|end|>' → logprob: -2.396287202835083
    3. '   ' → logprob: -3.771287202835083
    4. ')' → logprob: -4.771287441253662
    5. 'print' → logprob: -5.021287441253662
    6. '```' → logprob: -6.021287441253662
    7. ' return' → logprob: -6.146287441253662
    8. '
' → logprob: -7.146287441253662
    9. '#' → logprob: -7.521287441253662
    10. '    
' → logprob: -8.771286964416504

Token 640: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -5.68153518543113e-05
    2. ' return' → logprob: -10.500057220458984
    3. '   ' → logprob: -10.750057220458984
    4. '```' → logprob: -12.250057220458984
    5. '	return' → logprob: -12.875057220458984
    6. '{return' → logprob: -15.750057220458984
    7. ':return' → logprob: -16.500057220458984
    8. '
' → logprob: -16.625057220458984
    9. '@return' → logprob: -17.625057220458984
    10. 'Return' → logprob: -17.750057220458984

Token 641: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.988221684878226e-06
    2. ' -' → logprob: -11.875006675720215
    3. 'None' → logprob: -19.00000762939453
    4. 'False' → logprob: -20.37500762939453
    5. '-print' → logprob: -20.50000762939453
    6. '   ' → logprob: -21.00000762939453
    7. '\-' → logprob: -21.12500762939453
    8. '-im' → logprob: -21.25000762939453
    9. '```' → logprob: -21.25000762939453
    10. '-f' → logprob: -21.25000762939453

Token 642: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '2' → logprob: -19.0
    4. '```' → logprob: -20.5
    5. '１' → logprob: -21.0
    6. '3' → logprob: -21.125
    7. '   ' → logprob: -21.625
    8. '-' → logprob: -21.75
    9. '4' → logprob: -21.875
    10. '11' → logprob: -22.0

Token 643: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 644: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7170884609222412
    2. '<|end|>' → logprob: -0.7170884609222412
    3. 'w' → logprob: -4.84208869934082
    4. '<|end|>' → logprob: -5.46708869934082
    5. 'n' → logprob: -5.71708869934082
    6. 'if' → logprob: -5.71708869934082
    7. '```' → logprob: -5.84208869934082
    8. ')' → logprob: -7.96708869934082
    9. '.' → logprob: -8.34208869934082
    10. 'import' → logprob: -8.59208869934082

Token 645: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.048608023673295975
    2. ' main' → logprob: -3.0486080646514893
    3. 'input' → logprob: -11.04860782623291
    4. 'parse' → logprob: -13.29860782623291
    5. 'read' → logprob: -13.42360782623291
    6. '_main' → logprob: -14.04860782623291
    7. 'int' → logprob: -15.17360782623291
    8. '	main' → logprob: -15.92360782623291
    9. 'run' → logprob: -16.048608779907227
    10. ' input' → logprob: -16.673608779907227

Token 646: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0010281658032909036
    2. '():
' → logprob: -7.001028060913086
    3. ' ():' → logprob: -9.251028060913086
    4. '()' → logprob: -11.376028060913086
    5. '(' → logprob: -12.251028060913086
    6. '():
' → logprob: -13.126028060913086
    7. '()>' → logprob: -14.001028060913086
    8. '():

' → logprob: -14.251028060913086
    9. '_' → logprob: -14.876028060913086
    10. '()">' → logprob: -16.001028060913086

Token 647: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07142172008752823
    2. 'import' → logprob: -3.5714216232299805
    3. ' input' → logprob: -4.0714216232299805
    4. ' import' → logprob: -4.5714216232299805
    5. ' w' → logprob: -5.0714216232299805
    6. 'input' → logprob: -5.8214216232299805
    7. 'w' → logprob: -5.8214216232299805
    8. '```' → logprob: -7.4464216232299805
    9. ' readline' → logprob: -8.44642162322998
    10. 'if' → logprob: -9.57142162322998

Token 648: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.05884028226137161
    2. ' input' → logprob: -3.058840274810791
    3. 'import' → logprob: -4.933840274810791
    4. 't' → logprob: -6.558840274810791
    5. '   ' → logprob: -7.183840274810791
    6. 'w' → logprob: -8.55884075164795
    7. 'line' → logprob: -8.68384075164795
    8. 'for' → logprob: -8.68384075164795
    9. ' import' → logprob: -9.30884075164795
    10. 'n' → logprob: -9.43384075164795

Token 649: '_lines' (ID: 42980)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.42486876249313354
    2. '_data' → logprob: -2.0498688220977783
    3. '()' → logprob: -2.1748688220977783
    4. '=' → logprob: -2.5498688220977783
    5. ' =' → logprob: -4.174868583679199
    6. '_' → logprob: -5.174868583679199
    7. '_lines' → logprob: -5.674868583679199
    8. '_str' → logprob: -8.2998685836792
    9. '_=' → logprob: -8.2998685836792
    10. '_text' → logprob: -8.4248685836792

Token 650: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02088366635143757
    2. ' =' → logprob: -3.895883560180664
    3. '()' → logprob: -8.020883560180664
    4. '=[]' → logprob: -11.770883560180664
    5. '   ' → logprob: -13.270883560180664
    6. '=sys' → logprob: -13.645883560180664
    7. '=[]
' → logprob: -14.270883560180664
    8. '=input' → logprob: -15.145883560180664
    9. '[]' → logprob: -15.520883560180664
    10. '().' → logprob: -15.895883560180664

Token 651: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0009114635176956654
    2. ' sys' → logprob: -7.000911235809326
    3. '[' → logprob: -18.875911712646484
    4. '	sys' → logprob: -19.750911712646484
    5. '=sys' → logprob: -20.000911712646484
    6. '(sys' → logprob: -21.500911712646484
    7. ' [' → logprob: -22.500911712646484
    8. 'list' → logprob: -23.125911712646484
    9. '[]' → logprob: -23.125911712646484
    10. 'stdin' → logprob: -24.250911712646484

Token 652: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -9.960946772480384e-05
    2. 'stdin' → logprob: -9.250099182128906
    3. '.readline' → logprob: -13.875099182128906
    4. '.argv' → logprob: -14.000099182128906
    5. '(stdin' → logprob: -14.000099182128906
    6. '.stdout' → logprob: -14.500099182128906
    7. '.' → logprob: -16.000099182128906
    8. ' stdin' → logprob: -16.125099182128906
    9. 'input' → logprob: -17.500099182128906
    10. 'import' → logprob: -18.375099182128906

Token 653: '.read' (ID: 7211)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.4832113981246948
    2. '.readlines' → logprob: -1.4832113981246948
    3. '.readline' → logprob: -1.9832113981246948
    4. '.read' → logprob: -3.9832115173339844
    5. '_read' → logprob: -11.358211517333984
    6. ' readline' → logprob: -11.608211517333984
    7. '	read' → logprob: -11.733211517333984
    8. 'rea' → logprob: -13.233211517333984
    9. 'reads' → logprob: -13.358211517333984
    10. '.' → logprob: -13.483211517333984

Token 654: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0011748670367524028
    2. '()' → logprob: -6.7511749267578125
    3. 'lines' → logprob: -13.001174926757812
    4. '_lines' → logprob: -13.251174926757812
    5. '()
' → logprob: -15.376174926757812
    6. ' ().' → logprob: -16.001174926757812
    7. '()

' → logprob: -16.751174926757812
    8. '(' → logprob: -17.001174926757812
    9. '()\' → logprob: -17.251174926757812
    10. '()`' → logprob: -17.626174926757812

Token 655: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.313285231590271
    2. 'split' → logprob: -1.313285231590271
    3. 'read' → logprob: -11.188284873962402
    4. 'rstrip' → logprob: -11.688284873962402
    5. 'decode' → logprob: -13.688284873962402
    6. ' split' → logprob: -17.18828582763672
    7. 'lines' → logprob: -17.43828582763672
    8. ' strip' → logprob: -18.18828582763672
    9. '(split' → logprob: -18.43828582763672
    10. 'plit' → logprob: -18.93828582763672

Token 656: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0009119403548538685
    2. '()' → logprob: -7.000911712646484
    3. '.split' → logprob: -15.750911712646484
    4. ' ().' → logprob: -16.500911712646484
    5. 'split' → logprob: -16.625911712646484
    6. '()
' → logprob: -16.750911712646484
    7. '()\' → logprob: -17.875911712646484
    8. '()).' → logprob: -18.625911712646484
    9. '(' → logprob: -18.625911712646484
    10. '()

' → logprob: -18.750911712646484

Token 657: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -18.25
    3. '(split' → logprob: -18.75
    4. 'spl' → logprob: -20.125
    5. 'strip' → logprob: -22.625
    6. 'lines' → logprob: -22.625
    7. 'rstrip' → logprob: -23.5
    8. 'plit' → logprob: -23.625
    9. '.split' → logprob: -23.875
    10. 'decode' → logprob: -24.125

Token 658: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3316359519958496
    2. '('\' → logprob: -1.5816359519958496
    3. 'lines' → logprob: -2.5816359519958496
    4. '()\' → logprob: -7.33163595199585
    5. '("\' → logprob: -8.706636428833008
    6. '()
' → logprob: -8.956636428833008
    7. '(' → logprob: -12.581636428833008
    8. ''\' → logprob: -12.581636428833008
    9. '()[' → logprob: -12.956636428833008
    10. '()

' → logprob: -13.206636428833008

Token 659: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.896309739408025e-07
    2. '\n' → logprob: -14.125000953674316
    3. '
' → logprob: -18.125
    4. ' n' → logprob: -18.25
    5. 'newline' → logprob: -18.75
    6. '	n' → logprob: -19.5
    7. 'ndef' → logprob: -19.5
    8. '```' → logprob: -20.375
    9. 'ndata' → logprob: -21.0
    10. 'nl' → logprob: -21.125

Token 660: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25878801941871643
    2. ')
' → logprob: -1.883787989616394
    3. '')' → logprob: -3.5087881088256836
    4. '')
' → logprob: -3.6337881088256836
    5. '   ' → logprob: -4.008788108825684
    6. '()' → logprob: -6.758788108825684
    7. 'def' → logprob: -9.258788108825684
    8. ')
' → logprob: -9.633788108825684
    9. '())
' → logprob: -9.883788108825684
    10. ')')
' → logprob: -9.883788108825684

Token 661: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09300295263528824
    2. 'n' → logprob: -3.593003034591675
    3. ' n' → logprob: -3.968003034591675
    4. 'i' → logprob: -4.468002796173096
    5. 't' → logprob: -4.968002796173096
    6. 'idx' → logprob: -5.093002796173096
    7. 'for' → logprob: -5.218002796173096
    8. ' for' → logprob: -5.218002796173096
    9. ' i' → logprob: -6.343002796173096
    10. ' idx' → logprob: -6.468002796173096

Token 662: ' idx' (ID: 14016)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.21660763025283813
    2. 'idx' (adapté à ' idx') → logprob: -1.7166075706481934
    3. 'i' → logprob: -5.216607570648193
    4. 'T' → logprob: -5.591607570648193
    5. 'index' → logprob: -6.341607570648193
    6. 'n' → logprob: -6.591607570648193
    7. 'num' → logprob: -6.966607570648193
    8. '   ' → logprob: -7.591607570648193
    9. 'tc' → logprob: -7.591607570648193
    10. 'for' → logprob: -7.841607570648193

Token 663: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197787821292877
    2. '=' → logprob: -2.8119778633117676
    3. ' +=' → logprob: -12.811978340148926
    4. '   ' → logprob: -13.061978340148926
    5. ')' → logprob: -13.436978340148926
    6. '<|end|>' → logprob: -13.936978340148926
    7. ' ' → logprob: -14.811978340148926
    8. ',' → logprob: -14.936978340148926
    9. '+=' → logprob: -15.186978340148926
    10. '```' → logprob: -15.436978340148926

Token 664: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '1' → logprob: -15.750019073486328
    4. '2' → logprob: -18.000019073486328
    5. '   ' → logprob: -19.250019073486328
    6. '۰' → logprob: -19.937519073486328
    7. '０' → logprob: -20.875019073486328
    8. '```' → logprob: -20.875019073486328
    9. '  ' → logprob: -21.187519073486328
    10. '<|end|>' → logprob: -21.500019073486328

Token 665: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.41866585687967e-06
    2. '1' → logprob: -11.875008583068848
    3. ' ' → logprob: -13.750008583068848
    4. '2' → logprob: -14.875008583068848
    5. '   ' → logprob: -20.81250762939453
    6. '```' → logprob: -20.81250762939453
    7. '۰' → logprob: -20.87500762939453
    8. '3' → logprob: -21.62500762939453
    9. '=' → logprob: -21.75000762939453
    10. '[' → logprob: -21.75000762939453

Token 666: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.15266531705856323
    2. 'w' → logprob: -2.402665376663208
    3. '   ' → logprob: -3.152665376663208
    4. 't' → logprob: -5.777665138244629
    5. ' while' → logprob: -5.777665138244629
    6. 'n' → logprob: -6.527665138244629
    7. '```' → logprob: -8.527665138244629
    8. ' w' → logprob: -8.902665138244629
    9. '
' → logprob: -9.277665138244629
    10. 'for' → logprob: -9.402665138244629

Token 667: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5288965702056885
    2. 'while' → logprob: -1.5288965702056885
    3. ' while' → logprob: -2.4038965702056885
    4. 't' → logprob: -2.9038965702056885
    5. 'n' → logprob: -3.6538965702056885
    6. ' t' → logprob: -4.903896331787109
    7. ' n' → logprob: -5.153896331787109
    8. 'w' → logprob: -5.278896331787109
    9. ' w' → logprob: -6.653896331787109
    10. 'num' → logprob: -7.278896331787109

Token 668: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.09587982296943665
    2. 't' → logprob: -2.5958797931671143
    3. ' while' → logprob: -5.095880031585693
    4. 'T' → logprob: -5.095880031585693
    5. '   ' → logprob: -5.845880031585693
    6. ' t' → logprob: -7.470880031585693
    7. 'n' → logprob: -7.470880031585693
    8. 'num' → logprob: -7.845880031585693
    9. ' T' → logprob: -9.470879554748535
    10. 'tc' → logprob: -9.970879554748535

Token 669: ' True' (ID: 6432)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.25556278228759766
    2. ' idx' → logprob: -1.5055627822875977
    3. 'True' → logprob: -6.255562782287598
    4. ' True' → logprob: -6.380562782287598
    5. '(idx' → logprob: -12.130562782287598
    6. '	idx' → logprob: -12.130562782287598
    7. '   ' → logprob: -13.380562782287598
    8. '_idx' → logprob: -15.380562782287598
    9. '(True' → logprob: -15.630562782287598
    10. '[idx' → logprob: -16.00556182861328

Token 670: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06784337759017944
    2. '       ' → logprob: -3.442843437194824
    3. ':
' → logprob: -4.067843437194824
    4. '   ' → logprob: -4.192843437194824
    5. ',' → logprob: -7.567843437194824
    6. '<|end|>' → logprob: -7.567843437194824
    7. '):' → logprob: -9.567843437194824
    8. '):
' → logprob: -9.817843437194824
    9. '```' → logprob: -9.817843437194824
    10. '<|end|>' → logprob: -10.192843437194824

Token 671: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001992278266698122
    2. '   ' → logprob: -6.376992225646973
    3. ',' → logprob: -9.001992225646973
    4. '<|end|>' → logprob: -9.501992225646973
    5. '        
' → logprob: -10.751992225646973
    6. '	   ' → logprob: -11.376992225646973
    7. ' line' → logprob: -11.876992225646973
    8. '```' → logprob: -12.126992225646973
    9. 'line' → logprob: -12.376992225646973
    10. ' ' → logprob: -12.376992225646973

Token 672: ' if' (ID: 538)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.2992568016052246
    2. 'if' (adapté à ' if') → logprob: -2.1742568016052246
    3. 'line' → logprob: -2.4242568016052246
    4. ' w' → logprob: -3.9242568016052246
    5. ' if' → logprob: -4.424256801605225
    6. ' line' → logprob: -4.549256801605225
    7. '       ' → logprob: -5.549256801605225
    8. 'W' → logprob: -5.924256801605225
    9. '   ' → logprob: -6.049256801605225
    10. 'n' → logprob: -6.549256801605225

Token 673: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.01816117763519287
    2. ' idx' → logprob: -4.018161296844482
    3. '	idx' → logprob: -12.018160820007324
    4. '   ' → logprob: -12.268160820007324
    5. '_idx' → logprob: -15.393160820007324
    6. '(idx' → logprob: -16.01816177368164
    7. ' ' → logprob: -16.51816177368164
    8. '.idx' → logprob: -17.26816177368164
    9. '[idx' → logprob: -17.39316177368164
    10. '  ' → logprob: -17.76816177368164

Token 674: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.0003457136917859316
    2. ' >=' → logprob: -8.125346183776855
    3. '+' → logprob: -10.500346183776855
    4. ']>=' → logprob: -10.875346183776855
    5. ')>=' → logprob: -13.500346183776855
    6. '==' → logprob: -13.750346183776855
    7. '≥' → logprob: -14.625346183776855
    8. '>' → logprob: -15.750346183776855
    9. '=' → logprob: -16.50034523010254
    10. '```' → logprob: -16.87534523010254

Token 675: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.5048530030981055e-06
    2. ' len' → logprob: -13.500001907348633
    3. '(len' → logprob: -18.500001907348633
    4. '	len' → logprob: -18.625001907348633
    5. '=len' → logprob: -19.000001907348633
    6. 'length' → logprob: -19.125001907348633
    7. ',len' → logprob: -20.000001907348633
    8. '<len' → logprob: -20.375001907348633
    9. '   ' → logprob: -21.375001907348633
    10. ' ' → logprob: -21.500001907348633

Token 676: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1271595060825348
    2. 'input' → logprob: -2.127159595489502
    3. ' input' → logprob: -8.377159118652344
    4. '=input' → logprob: -14.252159118652344
    5. ',input' → logprob: -14.752159118652344
    6. '<input' → logprob: -15.377159118652344
    7. ' (' → logprob: -17.377159118652344
    8. 'code' → logprob: -17.377159118652344
    9. '[input' → logprob: -17.377159118652344
    10. '	input' → logprob: -17.377159118652344

Token 677: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0018207201501354575
    2. '):' → logprob: -6.8768205642700195
    3. '):
' → logprob: -7.2518205642700195
    4. ')' → logprob: -10.12682056427002
    5. '_' → logprob: -11.50182056427002
    6. 'lines' → logprob: -11.75182056427002
    7. '(lines' → logprob: -12.12682056427002
    8. '_LINES' → logprob: -12.75182056427002
    9. ' lines' → logprob: -12.87682056427002
    10. '```' → logprob: -13.50182056427002

Token 678: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5011733770370483
    2. ':
' → logprob: -1.0011733770370483
    3. '):
' → logprob: -4.501173496246338
    4. '):' → logprob: -5.001173496246338
    5. '       ' → logprob: -5.626173496246338
    6. ' or' → logprob: -5.751173496246338
    7. '   ' → logprob: -7.001173496246338
    8. '():
' → logprob: -7.751173496246338
    9. ')' → logprob: -8.62617301940918
    10. ':return' → logprob: -8.87617301940918

Token 679: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3565305769443512
    2. '       ' → logprob: -1.2315305471420288
    3. 'break' → logprob: -5.606530666351318
    4. '   ' → logprob: -5.856530666351318
    5. ' break' → logprob: -6.731530666351318
    6. '	break' → logprob: -8.85653018951416
    7. '		' → logprob: -10.10653018951416
    8. '	' → logprob: -10.10653018951416
    9. '	   ' → logprob: -10.23153018951416
    10. ' ' → logprob: -10.48153018951416

Token 680: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7182658910751343
    2. 'break' (adapté à ' break') → logprob: -0.9682658910751343
    3. '       ' → logprob: -2.468266010284424
    4. ' break' → logprob: -3.343266010284424
    5. 'return' → logprob: -4.468266010284424
    6. '	break' → logprob: -7.718266010284424
    7. ' return' → logprob: -7.968266010284424
    8. '   ' → logprob: -8.468265533447266
    9. '               ' → logprob: -9.468265533447266
    10. '		' → logprob: -10.468265533447266

Token 681: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003054599976167083
    2. '<|end|>' → logprob: -6.878054618835449
    3. '   ' → logprob: -7.128054618835449
    4. '        
' → logprob: -7.753054618835449
    5. ',' → logprob: -7.878054618835449
    6. '	' → logprob: -9.37805461883545
    7. '
' → logprob: -9.87805461883545
    8. '  
' → logprob: -9.87805461883545
    9. '```' → logprob: -10.00305461883545
    10. '    
' → logprob: -10.75305461883545

Token 682: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009890899993479252
    2. '   ' → logprob: -4.759891033172607
    3. '        
' → logprob: -8.13489055633545
    4. '```' → logprob: -8.25989055633545
    5. '	' → logprob: -9.00989055633545
    6. 'n' → logprob: -9.00989055633545
    7. '<|end|>' → logprob: -9.25989055633545
    8. ',' → logprob: -9.63489055633545
    9. 'w' → logprob: -10.00989055633545
    10. '
' → logprob: -10.13489055633545

Token 683: ' line' (ID: 2543)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.7311081886291504
    2. 'line' (adapté à ' line') → logprob: -1.3561081886291504
    3. '       ' → logprob: -1.6061081886291504
    4. 'n' → logprob: -3.4811081886291504
    5. 'size' → logprob: -4.85610818862915
    6. 'parts' → logprob: -5.23110818862915
    7. 'l' → logprob: -5.60610818862915
    8. ' w' → logprob: -5.73110818862915
    9. ' line' → logprob: -5.73110818862915
    10. '   ' → logprob: -6.98110818862915

Token 684: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014428675174713
    2. '=' → logprob: -1.701442837715149
    3. '=line' → logprob: -10.57644271850586
    4. 's' → logprob: -13.82644271850586
    5. '   ' → logprob: -14.07644271850586
    6. '=w' → logprob: -14.57644271850586
    7. '_tokens' → logprob: -14.57644271850586
    8. 'tokens' → logprob: -15.32644271850586
    9. ',' → logprob: -15.45144271850586
    10. ' ' → logprob: -15.70144271850586

Token 685: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006715370807796717
    2. ' input' → logprob: -5.006715297698975
    3. '   ' → logprob: -20.381715774536133
    4. ' ' → logprob: -21.006715774536133
    5. '(input' → logprob: -21.006715774536133
    6. '=input' → logprob: -21.006715774536133
    7. '	input' → logprob: -21.256715774536133
    8. 'import' → logprob: -22.506715774536133
    9. '       ' → logprob: -22.506715774536133
    10. '<input' → logprob: -22.881715774536133

Token 686: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.00011749001714633778
    2. 'lines' → logprob: -9.375117301940918
    3. 'Lines' → logprob: -11.000117301940918
    4. '[idx' → logprob: -12.000117301940918
    5. '_tokens' → logprob: -12.125117301940918
    6. '_LINES' → logprob: -13.625117301940918
    7. '```' → logprob: -13.875117301940918
    8. '_line' → logprob: -14.375117301940918
    9. 's' → logprob: -15.000117301940918
    10. '[line' → logprob: -15.000117301940918

Token 687: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.006235448643565178
    2. '=' → logprob: -5.131235599517822
    3. 'idx' → logprob: -9.006235122680664
    4. ' =' → logprob: -9.006235122680664
    5. 's' → logprob: -10.506235122680664
    6. '```' → logprob: -11.006235122680664
    7. '[' → logprob: -11.756235122680664
    8. '(idx' → logprob: -13.381235122680664
    9. '[token' → logprob: -13.881235122680664
    10. '_idx' → logprob: -14.006235122680664

Token 688: ']
' (ID: 1592)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.1521613895893097
    2. ']' → logprob: -2.1521613597869873
    3. ']
' → logprob: -4.027161598205566
    4. '.strip' → logprob: -5.027161598205566
    5. ')' → logprob: -8.652161598205566
    6. ').' → logprob: -9.027161598205566
    7. '.split' → logprob: -9.277161598205566
    8. '])' → logprob: -10.777161598205566
    9. '];' → logprob: -10.777161598205566
    10. '       ' → logprob: -10.902161598205566

Token 689: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05583265423774719
    2. '<|end|>' → logprob: -3.180832624435425
    3. '        
' → logprob: -4.805832862854004
    4. '<|end|>' → logprob: -6.430832862854004
    5. '   ' → logprob: -7.555832862854004
    6. ' if' → logprob: -7.930832862854004
    7. '
' → logprob: -8.055832862854004
    8. '```' → logprob: -8.555832862854004
    9. '  
' → logprob: -8.680832862854004
    10. '	' → logprob: -8.930832862854004

Token 690: ' idx' (ID: 14016)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7149674892425537
    2. ' if' → logprob: -1.0899674892425537
    3. '       ' → logprob: -1.9649674892425537
    4. 'idx' (adapté à ' idx') → logprob: -3.5899674892425537
    5. ' idx' → logprob: -5.839967727661133
    6. '        
' → logprob: -6.464967727661133
    7. 'tokens' → logprob: -6.714967727661133
    8. '[idx' → logprob: -8.339967727661133
    9. '   ' → logprob: -8.714967727661133
    10. '<|end|>' → logprob: -9.214967727661133

Token 691: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.043067362159490585
    2. ' +=' → logprob: -3.168067455291748
    3. '+' → logprob: -9.91806697845459
    4. ']+=' → logprob: -11.16806697845459
    5. '++' → logprob: -13.16806697845459
    6. '+="' → logprob: -13.91806697845459
    7. '+='' → logprob: -14.16806697845459
    8. '=' → logprob: -14.41806697845459
    9. '```' → logprob: -15.16806697845459
    10. '+++' → logprob: -16.168067932128906

Token 692: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '```' → logprob: -21.875009536743164
    4. '１' → logprob: -23.125009536743164
    5. '۱' → logprob: -24.250009536743164
    6. '0' → logprob: -24.750009536743164
    7. '+' → logprob: -25.000009536743164
    8. '2' → logprob: -25.250009536743164
    9. '   ' → logprob: -25.312509536743164
    10. '
' → logprob: -25.312509536743164

Token 693: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '```' → logprob: -20.75
    4. '１' → logprob: -21.625
    5. '
' → logprob: -23.25
    6. '+' → logprob: -23.25
    7. 'int' → logprob: -23.375
    8. '0' → logprob: -23.75
    9. '۱' → logprob: -23.875
    10. '-' → logprob: -24.0625

Token 694: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18727129697799683
    2. 'if' → logprob: -2.4372713565826416
    3. ' if' → logprob: -2.6872713565826416
    4. '   ' → logprob: -4.4372711181640625
    5. 'w' → logprob: -6.6872711181640625
    6. '
' → logprob: -7.1872711181640625
    7. '        
' → logprob: -7.9372711181640625
    8. '<|end|>' → logprob: -8.562271118164062
    9. 'tokens' → logprob: -8.687271118164062
    10. ',' → logprob: -8.937271118164062

Token 695: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3330582082271576
    2. ' if' → logprob: -1.70805823802948
    3. 'w' → logprob: -2.4580581188201904
    4. '       ' → logprob: -4.3330583572387695
    5. ' w' → logprob: -5.8330583572387695
    6. '   ' → logprob: -8.45805835723877
    7. 'n' → logprob: -9.70805835723877
    8. '```' → logprob: -9.95805835723877
    9. 'tokens' → logprob: -10.95805835723877
    10. '	if' → logprob: -11.08305835723877

Token 696: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.009415572509169579
    2. 'w' → logprob: -4.759415626525879
    3. ' if' → logprob: -7.134415626525879
    4. '```' → logprob: -13.384415626525879
    5. ' w' → logprob: -13.884415626525879
    6. '   ' → logprob: -15.134415626525879
    7. 'W' → logprob: -15.259415626525879
    8. '
' → logprob: -15.759415626525879
    9. '       ' → logprob: -16.384414672851562
    10. 'parts' → logprob: -17.009414672851562

Token 697: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.29153698682785034
    2. 'not' → logprob: -1.5415370464324951
    3. ' not' → logprob: -3.291537046432495
    4. ' line' → logprob: -6.416536808013916
    5. '   ' → logprob: -14.041537284851074
    6. '(line' → logprob: -14.166537284851074
    7. 'len' → logprob: -14.541537284851074
    8. '!' → logprob: -14.666537284851074
    9. '#line' → logprob: -16.041536331176758
    10. '=line' → logprob: -16.416536331176758

Token 698: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03841565176844597
    2. ' ==' → logprob: -3.2884156703948975
    3. '.strip' → logprob: -8.038415908813477
    4. '=' → logprob: -10.413415908813477
    5. '()==' → logprob: -11.663415908813477
    6. '===' → logprob: -11.913415908813477
    7. ')==' → logprob: -12.663415908813477
    8. ']==' → logprob: -13.913415908813477
    9. '==
' → logprob: -14.663415908813477
    10. ' =' → logprob: -14.913415908813477

Token 699: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6942107677459717
    2. '0' → logprob: -0.9442107677459717
    3. ''' → logprob: -2.1942107677459717
    4. ' ' → logprob: -10.19421100616455
    5. '''' → logprob: -10.81921100616455
    6. '00' → logprob: -11.06921100616455
    7. '""' → logprob: -11.69421100616455
    8. ' '' → logprob: -12.31921100616455
    9. '000' → logprob: -13.06921100616455
    10. '('' → logprob: -13.31921100616455

Token 700: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0128411203622818
    2. ''' → logprob: -4.38784122467041
    3. '"' → logprob: -8.51284122467041
    4. ' ' → logprob: -9.38784122467041
    5. '':' → logprob: -10.88784122467041
    6. '''' → logprob: -10.88784122467041
    7. '00' → logprob: -12.76284122467041
    8. '```' → logprob: -13.76284122467041
    9. '""' → logprob: -14.51284122467041
    10. ' '' → logprob: -14.51284122467041

Token 701: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08894111216068268
    2. '0' → logprob: -2.4639410972595215
    3. ''' → logprob: -14.08894157409668
    4. '':' → logprob: -14.58894157409668
    5. '<|end|>' → logprob: -16.33894157409668
    6. '':
' → logprob: -16.46394157409668
    7. ''>' → logprob: -16.58894157409668
    8. '<|end|>' → logprob: -17.33894157409668
    9. ' ' → logprob: -17.46394157409668
    10. '00' → logprob: -17.46394157409668

Token 702: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '  ' → logprob: -21.8750057220459
    4. '00' → logprob: -22.6250057220459
    5. '<|end|>' → logprob: -22.7500057220459
    6. '۰' → logprob: -22.8750057220459
    7. '<|end|>' → logprob: -23.1250057220459
    8. '   ' → logprob: -23.3750057220459
    9. '```' → logprob: -23.3750057220459
    10. '０' → logprob: -24.1250057220459

Token 703: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.006874860264360905
    2. '':' → logprob: -5.006875038146973
    3. '':
' → logprob: -9.006875038146973
    4. ''' → logprob: -10.881875038146973
    5. '\n' → logprob: -11.881875038146973
    6. '0' → logprob: -12.131875038146973
    7. ''):
' → logprob: -12.381875038146973
    8. '":
' → logprob: -14.006875038146973
    9. ':
' → logprob: -15.756875038146973
    10. ''
' → logprob: -15.881875038146973

Token 704: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0028057026211172342
    2. '       ' → logprob: -6.252805709838867
    3. ':' → logprob: -7.502805709838867
    4. ':
' → logprob: -8.252805709838867
    5. '		' → logprob: -10.377805709838867
    6. ',' → logprob: -11.502805709838867
    7. '	       ' → logprob: -12.127805709838867
    8. '          ' → logprob: -12.127805709838867
    9. '               ' → logprob: -12.252805709838867
    10. '         ' → logprob: -13.377805709838867

Token 705: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.03012382611632347
    2. '           ' → logprob: -3.780123710632324
    3. ' break' → logprob: -5.280123710632324
    4. '       ' → logprob: -7.030123710632324
    5. '	break' → logprob: -7.405123710632324
    6. '               ' → logprob: -8.780123710632324
    7. '		' → logprob: -9.530123710632324
    8. 'return' → logprob: -10.280123710632324
    9. '	       ' → logprob: -12.405123710632324
    10. '	' → logprob: -13.280123710632324

Token 706: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0070136068388819695
    2. 'w' → logprob: -5.75701379776001
    3. '   ' → logprob: -6.88201379776001
    4. '<|end|>' → logprob: -6.88201379776001
    5. '        
' → logprob: -7.38201379776001
    6. '
' → logprob: -7.88201379776001
    7. ' w' → logprob: -8.132013320922852
    8. '```' → logprob: -8.507013320922852
    9. ',w' → logprob: -10.257013320922852
    10. '	w' → logprob: -10.507013320922852

Token 707: '       ' (ID: 309)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.1357177346944809
    2. '       ' → logprob: -2.3857176303863525
    3. ' w' → logprob: -3.3857176303863525
    4. '	w' → logprob: -7.635717868804932
    5. '```' → logprob: -8.760717391967773
    6. '   ' → logprob: -9.010717391967773
    7. 'n' → logprob: -9.885717391967773
    8. ',w' → logprob: -10.385717391967773
    9. '        
' → logprob: -10.635717391967773
    10. '[w' → logprob: -10.760717391967773

Token 708: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.0003546502848621458
    2. ' w' → logprob: -8.000354766845703
    3. '       ' → logprob: -11.000354766845703
    4. 'W' → logprob: -13.875354766845703
    5. '	w' → logprob: -14.875354766845703
    6. 'h' → logprob: -15.250354766845703
    7. '```' → logprob: -15.375354766845703
    8. 'parts' → logprob: -15.625354766845703
    9. ',w' → logprob: -16.375354766845703
    10. '[w' → logprob: -16.625354766845703

Token 709: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019769940990954638
    2. '=' → logprob: -9.125197410583496
    3. ' ,' → logprob: -10.250197410583496
    4. ',w' → logprob: -10.500197410583496
    5. ',h' → logprob: -10.875197410583496
    6. ' =' → logprob: -12.875197410583496
    7. ',n' → logprob: -13.625197410583496
    8. ',s' → logprob: -14.750197410583496
    9. ',y' → logprob: -15.000197410583496
    10. ',
' → logprob: -15.125197410583496

Token 710: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.06196768581867218
    2. ' h' → logprob: -2.811967611312866
    3. ' =' → logprob: -19.311967849731445
    4. ',h' → logprob: -19.561967849731445
    5. '=' → logprob: -20.686967849731445
    6. '	h' → logprob: -21.061967849731445
    7. ' ' → logprob: -21.311967849731445
    8. '=h' → logprob: -21.811967849731445
    9. ',' → logprob: -22.811967849731445
    10. '*h' → logprob: -23.061967849731445

Token 711: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020937025547028
    2. ' =' → logprob: -2.3502094745635986
    3. ',' → logprob: -13.10020923614502
    4. '=int' → logprob: -15.10020923614502
    5. '＝' → logprob: -15.72520923614502
    6. '=line' → logprob: -16.350210189819336
    7. ')=' → logprob: -16.975210189819336
    8. '=w' → logprob: -16.975210189819336
    9. '=parse' → logprob: -17.725210189819336
    10. '<|end|>' → logprob: -17.850210189819336

Token 712: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.31326186656951904
    2. ' map' → logprob: -1.313261866569519
    3. '	map' → logprob: -16.938261032104492
    4. '(map' → logprob: -17.813261032104492
    5. 'list' → logprob: -18.688261032104492
    6. '_map' → logprob: -20.188261032104492
    7. '.map' → logprob: -20.188261032104492
    8. 'm' → logprob: -20.688261032104492
    9. '   ' → logprob: -20.813261032104492
    10. '[' → logprob: -21.063261032104492

Token 713: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009148012613877654
    2. 'int' → logprob: -7.000914573669434
    3. '(' → logprob: -13.750914573669434
    4. '(str' → logprob: -14.000914573669434
    5. '[int' → logprob: -14.250914573669434
    6. '(lambda' → logprob: -14.625914573669434
    7. '=int' → logprob: -15.375914573669434
    8. '<int' → logprob: -16.50091552734375
    9. '```' → logprob: -16.75091552734375
    10. ' int' → logprob: -17.37591552734375

Token 714: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.012362842448055744
    2. ',line' → logprob: -4.762362957000732
    3. 'line' → logprob: -5.762362957000732
    4. '=line' → logprob: -8.387362480163574
    5. ' line' → logprob: -8.887362480163574
    6. ',' → logprob: -9.012362480163574
    7. '[line' → logprob: -9.637362480163574
    8. '#line' → logprob: -10.262362480163574
    9. ')' → logprob: -11.887362480163574
    10. '	line' → logprob: -13.512362480163574

Token 715: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0002613358374219388
    2. ' line' → logprob: -8.250261306762695
    3. '(line' → logprob: -19.625261306762695
    4. '[line' → logprob: -20.875261306762695
    5. '	line' → logprob: -21.875261306762695
    6. '=line' → logprob: -21.875261306762695
    7. '#line' → logprob: -22.000261306762695
    8. ')' → logprob: -23.875261306762695
    9. '_line' → logprob: -24.125261306762695
    10. ',line' → logprob: -24.375261306762695

Token 716: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.11328298598527908
    2. '.split' → logprob: -2.2382829189300537
    3. '.strip' → logprob: -8.113283157348633
    4. ' .' → logprob: -9.863283157348633
    5. '.' → logprob: -9.988283157348633
    6. '.readline' → logprob: -10.238283157348633
    7. '(split' → logprob: -11.613283157348633
    8. 'split' → logprob: -11.988283157348633
    9. '(line' → logprob: -12.613283157348633
    10. '('').' → logprob: -12.863283157348633

Token 717: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003240816527977586
    2. '()' → logprob: -6.003240585327148
    3. '('' → logprob: -7.253240585327148
    4. ')' → logprob: -10.253240585327148
    5. '(' → logprob: -11.253240585327148
    6. '())
' → logprob: -12.003240585327148
    7. ' ())' → logprob: -13.628240585327148
    8. '(','' → logprob: -14.878240585327148
    9. ' )' → logprob: -15.128240585327148
    10. '()]' → logprob: -15.628240585327148

Token 718: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2557397484779358
    2. 'board' → logprob: -1.505739688873291
    3. '   ' → logprob: -6.130739688873291
    4. '```' → logprob: -7.380739688873291
    5. '	board' → logprob: -8.00574016571045
    6. 'grid' → logprob: -8.00574016571045
    7. ' board' → logprob: -8.63074016571045
    8. 'boards' → logprob: -9.75574016571045
    9. 'rows' → logprob: -10.38074016571045
    10. 'b' → logprob: -10.75574016571045

Token 719: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' (adapté à ' board') → logprob: -0.0001005630983854644
    2. ' board' → logprob: -9.250100135803223
    3. '       ' → logprob: -12.500100135803223
    4. '	board' → logprob: -15.375100135803223
    5. 'b' → logprob: -16.25010108947754
    6. 'grid' → logprob: -16.37510108947754
    7. '```' → logprob: -16.50010108947754
    8. '   ' → logprob: -16.75010108947754
    9. '_board' → logprob: -17.12510108947754
    10. 'boards' → logprob: -17.50010108947754

Token 720: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20144297182559967
    2. ' =' → logprob: -1.7014429569244385
    3. '=[]' → logprob: -10.45144271850586
    4. '=[]
' → logprob: -14.82644271850586
    5. '=[' → logprob: -15.95144271850586
    6. '＝' → logprob: -16.20144271850586
    7. ',' → logprob: -17.07644271850586
    8. '[' → logprob: -17.20144271850586
    9. ' =[' → logprob: -17.45144271850586
    10. '=

' → logprob: -17.82644271850586

Token 721: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5680053234100342
    2. '[]
' → logprob: -1.3180053234100342
    3. '[]' → logprob: -1.8180053234100342
    4. '[new' → logprob: -7.318005561828613
    5. '[input' → logprob: -8.193005561828613
    6. '[line' → logprob: -8.318005561828613
    7. '[start' → logprob: -8.318005561828613
    8. '[int' → logprob: -8.568005561828613
    9. '[user' → logprob: -8.693005561828613
    10. '[str' → logprob: -8.693005561828613

Token 722: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9501498937606812
    2. '       ' → logprob: -1.0751498937606812
    3. 'for' → logprob: -1.3251498937606812
    4. '	for' → logprob: -5.825150012969971
    5. '   ' → logprob: -6.450150012969971
    6. '<|end|>' → logprob: -6.450150012969971
    7. '	' → logprob: -10.075149536132812
    8. '	   ' → logprob: -10.450149536132812
    9. ' ' → logprob: -10.450149536132812
    10. '           ' → logprob: -10.950149536132812

Token 723: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011695586144924164
    2. ' for' → logprob: -4.511695384979248
    3. '       ' → logprob: -7.386695384979248
    4. '	for' → logprob: -10.636695861816406
    5. '   ' → logprob: -12.511695861816406
    6. '```' → logprob: -16.386695861816406
    7. 'while' → logprob: -16.636695861816406
    8. '
' → logprob: -16.886695861816406
    9. ' ' → logprob: -17.011695861816406
    10. '_for' → logprob: -17.511695861816406

Token 724: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.620622712536715e-05
    2. '_i' → logprob: -10.125045776367188
    3. '_in' → logprob: -12.375045776367188
    4. ' _' → logprob: -13.625045776367188
    5. '_range' → logprob: -14.750045776367188
    6. 'i' → logprob: -16.500045776367188
    7. ' in' → logprob: -17.000045776367188
    8. '_=' → logprob: -17.250045776367188
    9. '_next' → logprob: -17.500045776367188
    10. '_j' → logprob: -18.375045776367188

Token 725: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0014007141580805182
    2. 'range' → logprob: -6.751400947570801
    3. 'in' → logprob: -9.0014009475708
    4. '_' → logprob: -9.3764009475708
    5. ' range' → logprob: -10.8764009475708
    6. 'i' → logprob: -12.8764009475708
    7. ' ' → logprob: -15.0014009475708
    8. '_range' → logprob: -15.7514009475708
    9. '  ' → logprob: -16.251399993896484
    10. '   ' → logprob: -16.626399993896484

Token 726: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0206720617134124e-05
    2. ' range' → logprob: -11.50001049041748
    3. '(range' → logprob: -18.875009536743164
    4. '	range' → logprob: -19.625009536743164
    5. '   ' → logprob: -20.625009536743164
    6. 'r' → logprob: -22.125009536743164
    7. ' ' → logprob: -22.125009536743164
    8. ')' → logprob: -22.375009536743164
    9. '.range' → logprob: -22.375009536743164
    10. '_range' → logprob: -22.375009536743164

Token 727: '(h' (ID: 8120)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.007422633469104767
    2. '(h' → logprob: -5.00742244720459
    3. ' h' → logprob: -7.25742244720459
    4. '	h' → logprob: -13.38242244720459
    5. ' (' → logprob: -15.13242244720459
    6. '   ' → logprob: -16.132423400878906
    7. '<h' → logprob: -16.882423400878906
    8. 'range' → logprob: -17.132423400878906
    9. '_h' → logprob: -17.882423400878906
    10. ',h' → logprob: -18.382423400878906

Token 728: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.004509273450821638
    2. '):' → logprob: -5.504509449005127
    3. ':
' → logprob: -8.254508972167969
    4. '):
' → logprob: -9.629508972167969
    5. '   ' → logprob: -10.254508972167969
    6. '       ' → logprob: -10.379508972167969
    7. ':' → logprob: -11.129508972167969
    8. '():
' → logprob: -11.754508972167969
    9. '           ' → logprob: -11.879508972167969
    10. ')' → logprob: -13.004508972167969

Token 729: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08282788097858429
    2. '   ' → logprob: -3.0828278064727783
    3. '	       ' → logprob: -3.9578278064727783
    4. '       ' → logprob: -5.332828044891357
    5. '<|end|>' → logprob: -5.707828044891357
    6. '	   ' → logprob: -5.957828044891357
    7. '		   ' → logprob: -6.957828044891357
    8. '    	   ' → logprob: -7.082828044891357
    9. '<|end|>' → logprob: -7.207828044891357
    10. '```' → logprob: -8.3328275680542

Token 730: ' row' (ID: 5225)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.4833798110485077
    2. 'row' (adapté à ' row') → logprob: -1.10837984085083
    3. ' row' → logprob: -3.35837984085083
    4. ' board' → logprob: -4.48337984085083
    5. 'line' → logprob: -5.23337984085083
    6. '           ' → logprob: -6.60837984085083
    7. ' line' → logprob: -7.85837984085083
    8. '	board' → logprob: -10.858379364013672
    9. '   ' → logprob: -11.983379364013672
    10. 'b' → logprob: -12.358379364013672

Token 731: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10024344176054001
    2. '=' → logprob: -2.350243330001831
    3. '=line' → logprob: -10.35024356842041
    4. '   ' → logprob: -13.60024356842041
    5. '.append' → logprob: -13.60024356842041
    6. '=list' → logprob: -14.47524356842041
    7. '=int' → logprob: -15.10024356842041
    8. '=input' → logprob: -15.60024356842041
    9. '	' → logprob: -15.60024356842041
    10. ' ' → logprob: -15.97524356842041

Token 732: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.676292231422849e-05
    2. ' list' → logprob: -11.000017166137695
    3. '	list' → logprob: -24.875017166137695
    4. '=list' → logprob: -25.875017166137695
    5. '(list' → logprob: -27.500017166137695
    6. 'List' → logprob: -27.500017166137695
    7. '[list' → logprob: -27.500017166137695
    8. '.list' → logprob: -27.625017166137695
    9. '   ' → logprob: -28.125017166137695
    10. ':list' → logprob: -28.125017166137695

Token 733: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.5332478142227046e-05
    2. 'map' → logprob: -11.250015258789062
    3. '(' → logprob: -13.000015258789062
    4. '.map' → logprob: -18.750015258789062
    5. ' map' → logprob: -19.000015258789062
    6. '	map' → logprob: -19.125015258789062
    7. ',map' → logprob: -19.375015258789062
    8. '(
' → logprob: -21.250015258789062
    9. '_map' → logprob: -21.500015258789062
    10. '```' → logprob: -22.000015258789062

Token 734: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009203928639180958
    2. 'int' → logprob: -7.000920295715332
    3. ',int' → logprob: -12.625920295715332
    4. ' int' → logprob: -12.875920295715332
    5. '=int' → logprob: -13.250920295715332
    6. '[int' → logprob: -14.500920295715332
    7. '	int' → logprob: -15.375920295715332
    8. '<int' → logprob: -15.625920295715332
    9. '   ' → logprob: -15.750920295715332
    10. '(' → logprob: -16.37592124938965

Token 735: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2537435293197632
    2. ',input' → logprob: -1.5037435293197632
    3. 'input' → logprob: -6.753743648529053
    4. '(input' → logprob: -7.878743648529053
    5. ',line' → logprob: -8.503743171691895
    6. 'sys' → logprob: -10.253743171691895
    7. ' ,' → logprob: -11.378743171691895
    8. '(sys' → logprob: -11.503743171691895
    9. '(line' → logprob: -13.378743171691895
    10. '(' → logprob: -13.503743171691895

Token 736: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0009115827269852161
    2. ' input' → logprob: -7.000911712646484
    3. '(input' → logprob: -16.250911712646484
    4. 'list' → logprob: -17.500911712646484
    5. 'sys' → logprob: -17.625911712646484
    6. 'line' → logprob: -18.000911712646484
    7. ',input' → logprob: -18.875911712646484
    8. '	input' → logprob: -19.000911712646484
    9. '   ' → logprob: -19.125911712646484
    10. ')' → logprob: -19.375911712646484

Token 737: '_lines' (ID: 42980)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.29151350259780884
    2. '.readline' → logprob: -2.041513442993164
    3. '(input' → logprob: -3.416513442993164
    4. '_.' → logprob: -3.791513442993164
    5. '(sys' → logprob: -3.916513442993164
    6. ',input' → logprob: -3.916513442993164
    7. 'sys' → logprob: -4.666513442993164
    8. 'input' → logprob: -5.291513442993164
    9. '=sys' → logprob: -5.791513442993164
    10. ',' → logprob: -6.291513442993164

Token 738: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.875
    3. 'idx' → logprob: -15.875
    4. '   ' → logprob: -17.25
    5. ' [' → logprob: -17.5
    6. '[index' → logprob: -18.375
    7. '[id' → logprob: -18.625
    8. ' idx' → logprob: -18.875
    9. '[ind' → logprob: -19.5
    10. '```' → logprob: -19.75

Token 739: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.07316939532756805
    2. '[idx' → logprob: -2.698169469833374
    3. '][' → logprob: -6.323169231414795
    4. 'idx' → logprob: -7.323169231414795
    5. '   ' → logprob: -8.073169708251953
    6. '(idx' → logprob: -8.948169708251953
    7. ']' → logprob: -9.448169708251953
    8. '           ' → logprob: -9.573169708251953
    9. '.split' → logprob: -9.573169708251953
    10. '.strip' → logprob: -10.823169708251953

Token 740: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.6932007074356079
    2. 'strip' → logprob: -0.6932007074356079
    3. 'idx' → logprob: -10.318201065063477
    4. 'rstrip' → logprob: -10.943201065063477
    5. ' strip' → logprob: -13.068201065063477
    6. ' split' → logprob: -14.193201065063477
    7. '(split' → logprob: -17.068201065063477
    8. 'read' → logprob: -17.318201065063477
    9. '.strip' → logprob: -17.943201065063477
    10. ' idx' → logprob: -18.193201065063477

Token 741: '()))
' (ID: 24521)
  Prédit: '()))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))
' → logprob: -0.2574944794178009
    2. '()))' → logprob: -1.5074944496154785
    3. '(idx' → logprob: -5.5074944496154785
    4. '()' → logprob: -7.1324944496154785
    5. '()[' → logprob: -8.382494926452637
    6. '()));' → logprob: -9.007494926452637
    7. '()))

' → logprob: -9.382494926452637
    8. '))' → logprob: -9.757494926452637
    9. '())' → logprob: -9.882494926452637
    10. '()))
' → logprob: -10.382494926452637

Token 742: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009825033135712147
    2. 'idx' → logprob: -5.009825229644775
    3. '[idx' → logprob: -6.884825229644775
    4. '<|end|>' → logprob: -7.384825229644775
    5. '	idx' → logprob: -7.634825229644775
    6. '
' → logprob: -8.384824752807617
    7. ' idx' → logprob: -8.509824752807617
    8. '           ' → logprob: -8.634824752807617
    9. '```' → logprob: -9.884824752807617
    10. '	   ' → logprob: -10.009824752807617

Token 743: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.00032628714689053595
    2. ' idx' → logprob: -8.500326156616211
    3. '	idx' → logprob: -9.500326156616211
    4. '       ' → logprob: -10.125326156616211
    5. '_idx' → logprob: -12.125326156616211
    6. '[idx' → logprob: -13.500326156616211
    7. '   ' → logprob: -15.375326156616211
    8. 'index' → logprob: -15.500326156616211
    9. '
' → logprob: -16.12532615661621
    10. '           ' → logprob: -16.25032615661621

Token 744: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.000387535837944597
    2. ' +=' → logprob: -7.875387668609619
    3. ']+=' → logprob: -12.375387191772461
    4. '+' → logprob: -13.250387191772461
    5. '++' → logprob: -14.125387191772461
    6. '+="' → logprob: -15.125387191772461
    7. '+='' → logprob: -15.250387191772461
    8. '```' → logprob: -16.62538719177246
    9. '+++' → logprob: -17.12538719177246
    10. '=' → logprob: -17.12538719177246

Token 745: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -20.75
    4. '(' → logprob: -20.875
    5. '１' → logprob: -21.75
    6. '0' → logprob: -22.0
    7. '+' → logprob: -22.0
    8. '   ' → logprob: -22.0
    9. '>' → logprob: -22.375
    10. '۱' → logprob: -22.5

Token 746: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4749598503112793
    2. '       ' → logprob: -0.9749598503112793
    3. '   ' → logprob: -7.349959850311279
    4. '<|end|>' → logprob: -10.099960327148438
    5. 'board' → logprob: -10.349960327148438
    6. '               ' → logprob: -10.599960327148438
    7. '	board' → logprob: -10.599960327148438
    8. '		' → logprob: -10.724960327148438
    9. '	   ' → logprob: -11.099960327148438
    10. '	       ' → logprob: -11.224960327148438

Token 747: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27702388167381287
    2. 'board' → logprob: -1.5270239114761353
    3. '           ' → logprob: -4.402023792266846
    4. ' board' → logprob: -4.527023792266846
    5. '   ' → logprob: -6.652023792266846
    6. '	board' → logprob: -8.152024269104004
    7. '```' → logprob: -9.277024269104004
    8. ' ' → logprob: -11.652024269104004
    9. '(board' → logprob: -11.902024269104004
    10. '.board' → logprob: -12.402024269104004

Token 748: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' (adapté à ' board') → logprob: -0.0005549400229938328
    2. ' board' → logprob: -7.500555038452148
    3. '       ' → logprob: -14.000555038452148
    4. '   ' → logprob: -14.125555038452148
    5. '           ' → logprob: -15.500555038452148
    6. '	board' → logprob: -15.500555038452148
    7. ' ' → logprob: -18.25055503845215
    8. '.board' → logprob: -18.50055503845215
    9. '(board' → logprob: -19.50055503845215
    10. '```' → logprob: -20.37555503845215

Token 749: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.8961017202818766e-05
    2. '.' → logprob: -9.750059127807617
    3. '.extend' → logprob: -15.250059127807617
    4. 'append' → logprob: -16.125059127807617
    5. '.app' → logprob: -16.625059127807617
    6. ' .' → logprob: -16.875059127807617
    7. '.add' → logprob: -17.250059127807617
    8. '.Append' → logprob: -17.250059127807617
    9. '.ap' → logprob: -19.250059127807617
    10. ').' → logprob: -20.000059127807617

Token 750: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -9.710618905955926e-05
    2. 'row' → logprob: -9.250097274780273
    3. '(' → logprob: -14.250097274780273
    4. '(list' → logprob: -15.375097274780273
    5. ' row' → logprob: -17.875097274780273
    6. '=row' → logprob: -18.000097274780273
    7. '[row' → logprob: -18.875097274780273
    8. ',row' → logprob: -19.000097274780273
    9. '(line' → logprob: -20.375097274780273
    10. '	row' → logprob: -21.000097274780273

Token 751: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001830410328693688
    2. ')
' → logprob: -8.87518310546875
    3. '<|end|>' → logprob: -10.25018310546875
    4. ')return' → logprob: -12.62518310546875
    5. '       ' → logprob: -13.62518310546875
    6. '   ' → logprob: -13.75018310546875
    7. ' )' → logprob: -14.37518310546875
    8. '<|end|>' → logprob: -14.50018310546875
    9. ')}' → logprob: -15.75018310546875
    10. ')

' → logprob: -15.87518310546875

Token 752: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.29312536120414734
    2. 'print' → logprob: -1.5431253910064697
    3. ' result' → logprob: -3.4181253910064697
    4. '       ' → logprob: -5.543125152587891
    5. ' print' → logprob: -6.668125152587891
    6. '   ' → logprob: -6.793125152587891
    7. '
' → logprob: -7.793125152587891
    8. 'res' → logprob: -7.918125152587891
    9. '```' → logprob: -8.66812515258789
    10. 'output' → logprob: -9.16812515258789

Token 753: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3422899842262268
    2. 'result' → logprob: -1.342289924621582
    3. ' result' → logprob: -4.092289924621582
    4. ' print' → logprob: -4.717289924621582
    5. '       ' → logprob: -5.967289924621582
    6. '   ' → logprob: -8.592289924621582
    7. 'res' → logprob: -8.592289924621582
    8. 'answer' → logprob: -10.717289924621582
    9. ' res' → logprob: -12.217289924621582
    10. '```' → logprob: -12.467289924621582

Token 754: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00043162284418940544
    2. '(' → logprob: -7.750431537628174
    3. 'solve' → logprob: -14.125432014465332
    4. '(solution' → logprob: -16.250431060791016
    5. '(sol' → logprob: -16.500431060791016
    6. ' solve' → logprob: -18.125431060791016
    7. '(can' → logprob: -18.750431060791016
    8. ' (' → logprob: -19.125431060791016
    9. '(resolve' → logprob: -19.375431060791016
    10. '()' → logprob: -19.500431060791016

Token 755: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -1.306760805164231e-05
    2. 'solve' → logprob: -11.25001335144043
    3. 'ove' → logprob: -17.87501335144043
    4. '(' → logprob: -18.25001335144043
    5. 'ol' → logprob: -18.75001335144043
    6. 'olv' → logprob: -18.75001335144043
    7. 'olver' → logprob: -19.12501335144043
    8. 'OLVE' → logprob: -19.37501335144043
    9. '[' → logprob: -20.25001335144043
    10. '.solve' → logprob: -20.37501335144043

Token 756: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0001468067930545658
    2. '(' → logprob: -9.000146865844727
    3. ' (' → logprob: -10.875146865844727
    4. ')' → logprob: -12.750146865844727
    5. ')(' → logprob: -13.750146865844727
    6. 'w' → logprob: -15.500146865844727
    7. '((' → logprob: -16.625146865844727
    8. '(
' → logprob: -16.750146865844727
    9. '(width' → logprob: -18.000146865844727
    10. '```' → logprob: -18.125146865844727

Token 757: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06210537999868393
    2. ',h' → logprob: -2.812105417251587
    3. ',w' → logprob: -8.937105178833008
    4. ' ,' → logprob: -12.187105178833008
    5. ',
' → logprob: -15.437105178833008
    6. 'h' → logprob: -15.562105178833008
    7. ')' → logprob: -16.312105178833008
    8. '(h' → logprob: -16.312105178833008
    9. ',p' → logprob: -16.687105178833008
    10. ',s' → logprob: -16.812105178833008

Token 758: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0031777136027812958
    2. ' h' → logprob: -5.753177642822266
    3. '	h' → logprob: -19.378177642822266
    4. '   ' → logprob: -20.003177642822266
    5. ')' → logprob: -20.753177642822266
    6. ' ' → logprob: -21.128177642822266
    7. '```' → logprob: -21.378177642822266
    8. '(h' → logprob: -21.753177642822266
    9. ',h' → logprob: -22.003177642822266
    10. '<h' → logprob: -22.128177642822266

Token 759: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1517960956552997e-05
    2. ' ,' → logprob: -11.500011444091797
    3. '(board' → logprob: -13.750011444091797
    4. ')' → logprob: -16.500011444091797
    5. ',
' → logprob: -16.750011444091797
    6. '(' → logprob: -17.750011444091797
    7. '```' → logprob: -18.125011444091797
    8. '[' → logprob: -19.000011444091797
    9. '   ' → logprob: -19.500011444091797
    10. ' board' → logprob: -19.750011444091797

Token 760: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -3.547789674485102e-05
    2. ' board' → logprob: -10.250035285949707
    3. '(board' → logprob: -19.125036239624023
    4. '	board' → logprob: -19.750036239624023
    5. '.board' → logprob: -20.625036239624023
    6. 'boards' → logprob: -21.375036239624023
    7. '   ' → logprob: -21.750036239624023
    8. 'b' → logprob: -22.750036239624023
    9. ')' → logprob: -22.875036239624023
    10. 'Board' → logprob: -23.375036239624023

Token 761: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.31326648592948914
    2. ')' → logprob: -1.3132665157318115
    3. ')))' → logprob: -12.81326675415039
    4. ' ))' → logprob: -14.31326675415039
    5. '   ' → logprob: -14.68826675415039
    6. ' )' → logprob: -14.81326675415039
    7. '))
' → logprob: -15.31326675415039
    8. '())' → logprob: -15.56326675415039
    9. '()))' → logprob: -16.56326675415039
    10. ')")' → logprob: -17.43826675415039

Token 762: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.27680525183677673
    2. '```' → logprob: -1.7768052816390991
    3. '<|end|>' → logprob: -2.6518051624298096
    4. ' if' → logprob: -6.776805400848389
    5. '#' → logprob: -8.15180492401123
    6. '
' → logprob: -8.40180492401123
    7. '``' → logprob: -9.15180492401123
    8. '<|end|>' → logprob: -9.15180492401123
    9. 'main' → logprob: -9.65180492401123
    10. '\' → logprob: -10.15180492401123

Token 763: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00317783304490149
    2. '__' → logprob: -5.753177642822266
    3. '_name' → logprob: -16.753177642822266
    4. '_' → logprob: -17.003177642822266
    5. ' ' → logprob: -17.128177642822266
    6. ' ' → logprob: -17.378177642822266
    7. '/__' → logprob: -17.628177642822266
    8. 'name' → logprob: -17.753177642822266
    9. ' name' → logprob: -18.003177642822266
    10. '___' → logprob: -18.128177642822266

Token 764: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02744791842997074
    2. '==' → logprob: -4.152447700500488
    3. ' ==' → logprob: -5.527447700500488
    4. '.__' → logprob: -5.777447700500488
    5. '__.__' → logprob: -6.027447700500488
    6. 'name' → logprob: -7.277447700500488
    7. '=="' → logprob: -8.152447700500488
    8. '[' → logprob: -8.652447700500488
    9. '.' → logprob: -8.902447700500488
    10. 'if' → logprob: -9.027447700500488

Token 765: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00015062130114529282
    2. '__.__' → logprob: -8.875150680541992
    3. '==' → logprob: -11.625150680541992
    4. '__.' → logprob: -14.500150680541992
    5. '__["' → logprob: -15.125150680541992
    6. '__('' → logprob: -15.500150680541992
    7. '__
' → logprob: -15.500150680541992
    8. '__[' → logprob: -16.000150680541992
    9. ' ==' → logprob: -16.125150680541992
    10. '=="' → logprob: -16.750150680541992

Token 766: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3944273293018341
    2. '==' → logprob: -1.1444272994995117
    3. ' ==' → logprob: -5.019427299499512
    4. '=="' → logprob: -7.394427299499512
    5. '=='' → logprob: -8.269427299499512
    6. '__.__' → logprob: -10.644427299499512
    7. '=' → logprob: -12.269427299499512
    8. '==
' → logprob: -12.269427299499512
    9. '===' → logprob: -12.769427299499512
    10. '[' → logprob: -12.894427299499512

Token 767: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10024204105138779
    2. ''' → logprob: -2.3502421379089355
    3. '__' → logprob: -10.350241661071777
    4. ' "__' → logprob: -12.975241661071777
    5. ' '__' → logprob: -15.350241661071777
    6. '"user' → logprob: -15.350241661071777
    7. '"name' → logprob: -16.350242614746094
    8. ''"' → logprob: -16.600242614746094
    9. '('__' → logprob: -16.600242614746094
    10. ''name' → logprob: -16.725242614746094

Token 768: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00019269285257905722
    2. '__' → logprob: -8.875192642211914
    3. 'name' → logprob: -9.875192642211914
    4. 'py' → logprob: -13.750192642211914
    5. 'python' → logprob: -16.750192642211914
    6. '__':
' → logprob: -17.000192642211914
    7. '_main' → logprob: -17.000192642211914
    8. ' main' → logprob: -17.625192642211914
    9. '(main' → logprob: -17.875192642211914
    10. '__.' → logprob: -18.250192642211914

Token 769: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.008643528446555138
    2. '__' → logprob: -4.758643627166748
    3. '__":
' → logprob: -10.63364315032959
    4. '__.' → logprob: -12.63364315032959
    5. '__:' → logprob: -14.13364315032959
    6. '__.__' → logprob: -14.25864315032959
    7. '('__' → logprob: -16.008644104003906
    8. '__('' → logprob: -16.508644104003906
    9. '_' → logprob: -17.383644104003906
    10. '__((' → logprob: -18.133644104003906

Token 770: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -7.052377623040229e-05
    2. ' main' → logprob: -10.125070571899414
    3. '__' → logprob: -11.000070571899414
    4. '   ' → logprob: -12.250070571899414
    5. '	main' → logprob: -12.500070571899414
    6. '_main' → logprob: -12.625070571899414
    7. '(main' → logprob: -14.000070571899414
    8. '```' → logprob: -14.375070571899414
    9. 'run' → logprob: -15.625070571899414
    10. 'Main' → logprob: -16.375070571899414

Token 771: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -8.77627644513268e-06
    2. ' main' → logprob: -11.750008583068848
    3. '   ' → logprob: -14.250008583068848
    4. '	main' → logprob: -15.250008583068848
    5. '_main' → logprob: -20.000009536743164
    6. '.main' → logprob: -22.125009536743164
    7. '(main' → logprob: -23.250009536743164
    8. 'import' → logprob: -23.250009536743164
    9. ' ' → logprob: -24.375009536743164
    10. 'Main' → logprob: -24.500009536743164

Token 772: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 770
Tokens correctement prédits (1ère position, stricte): 320
Tokens correctement prédits (1ère position, avec adaptation): 353
Tokens correctement prédits (top 10): 680
Précision stricte (1ère position): 41.56%
Précision adaptée (1ère position): 45.84%
Précision (top 10): 88.31%
================================================================================
