================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

for line in sys.stdin:
    if not line.strip():
        continue
    a,b,n = map(int, line.split())
    r = a % b
    s = 0
    for _ in range(n):
        r *= 10
        s += r // b
        r %= b
    print(s)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'for' (ID: 1938)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18268179893493652
    2. '\n' → logprob: -2.1826817989349365
    3. 'import' → logprob: -3.5576817989349365
    4. '<|end|>' → logprob: -4.932682037353516
    5. '' → logprob: -5.807682037353516
    6. 'newline' → logprob: -5.932682037353516
    7. '\' → logprob: -6.057682037353516
    8. 'print' → logprob: -6.432682037353516
    9. '[' → logprob: -6.557682037353516
    10. '<|end|>' → logprob: -6.807682037353516

Token 4: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0024264329113066196
    2. '  ' → logprob: -6.127426624298096
    3. ' i' → logprob: -8.377426147460938
    4. ' space' → logprob: -13.377426147460938
    5. '_' → logprob: -13.877426147460938
    6. ' )' → logprob: -14.127426147460938
    7. 'i' → logprob: -14.127426147460938
    8. ' ‌' → logprob: -14.127426147460938
    9. ' a' → logprob: -14.252426147460938
    10. '```' → logprob: -14.377426147460938

Token 5: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13393063843250275
    2. 'in' → logprob: -2.5089306831359863
    3. '[' → logprob: -3.5089306831359863
    4. ':' → logprob: -5.258930683135986
    5. ' ' → logprob: -6.133930683135986
    6. '[:]' → logprob: -6.508930683135986
    7. '  ' → logprob: -7.383930683135986
    8. '.' → logprob: -7.383930683135986
    9. '[]' → logprob: -7.633930683135986
    10. '(' → logprob: -7.633930683135986

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0622611939907074
    2. 'sys' → logprob: -2.8122611045837402
    3. '=sys' → logprob: -9.062261581420898
    4. ' ' → logprob: -10.062261581420898
    5. ' iter' → logprob: -10.562261581420898
    6. ' file' → logprob: -10.687261581420898
    7. '	sys' → logprob: -10.812261581420898
    8. '(sys' → logprob: -11.062261581420898
    9. ' open' → logprob: -11.812261581420898
    10. '```' → logprob: -11.937261581420898

Token 7: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004592707380652428
    2. '.readline' → logprob: -5.5045928955078125
    3. '.stdin' → logprob: -8.129592895507812
    4. ' .' → logprob: -9.754592895507812
    5. '.argv' → logprob: -10.254592895507812
    6. '.stdout' → logprob: -10.254592895507812
    7. '.readlines' → logprob: -10.879592895507812
    8. 'import' → logprob: -11.129592895507812
    9. '.`' → logprob: -11.754592895507812
    10. ':' → logprob: -12.129592895507812

Token 8: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.636475493200123e-05
    2. ':
' → logprob: -10.250076293945312
    3. ' :' → logprob: -11.500076293945312
    4. ':**' → logprob: -11.625076293945312
    5. '[:]' → logprob: -12.000076293945312
    6. '):' → logprob: -12.375076293945312
    7. '>:' → logprob: -12.750076293945312
    8. '':' → logprob: -13.250076293945312
    9. '`:' → logprob: -14.250076293945312
    10. ',:' → logprob: -14.500076293945312

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00018542143516242504
    2. '    
' → logprob: -8.875185012817383
    3. ' print' → logprob: -10.875185012817383
    4. '```' → logprob: -11.750185012817383
    5. 'print' → logprob: -12.375185012817383
    6. '   ' → logprob: -12.500185012817383
    7. '    ' → logprob: -12.875185012817383
    8. ' if' → logprob: -13.625185012817383
    9. '`' → logprob: -13.750185012817383
    10. ' ' → logprob: -14.250185012817383

Token 10: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11841689050197601
    2. 'print' → logprob: -2.2434167861938477
    3. ' print' → logprob: -5.243416786193848
    4. '    ' → logprob: -8.993416786193848
    5. ' if' → logprob: -9.868416786193848
    6. 'pass' → logprob: -10.493416786193848
    7. '       ' → logprob: -10.618416786193848
    8. '```' → logprob: -10.868416786193848
    9. 'if' (adapté à ' if') → logprob: -10.993416786193848
    10. ' pass' → logprob: -11.743416786193848

Token 11: ' not' (ID: 625)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.017147734761238098
    2. ' not' → logprob: -4.517147541046143
    3. ' ' → logprob: -5.392147541046143
    4. 'line' → logprob: -7.142147541046143
    5. ''' → logprob: -8.0171480178833
    6. ' len' → logprob: -8.3921480178833
    7. '"' → logprob: -9.7671480178833
    8. ' '' → logprob: -9.8921480178833
    9. '   ' → logprob: -11.3921480178833
    10. '  ' → logprob: -11.5171480178833

Token 12: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0019362468738108873
    2. 'line' → logprob: -6.251936435699463
    3. ' ' → logprob: -12.126935958862305
    4. '	line' → logprob: -13.876935958862305
    5. '(line' → logprob: -14.751935958862305
    6. '=line' → logprob: -14.876935958862305
    7. '#line' → logprob: -16.001935958862305
    8. ' ' → logprob: -16.001935958862305
    9. '[line' → logprob: -16.376935958862305
    10. ''' → logprob: -16.501935958862305

Token 13: '.strip' (ID: 40613)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3522897958755493
    2. '.strip' → logprob: -1.2272897958755493
    3. '.rstrip' → logprob: -6.10228967666626
    4. '.startswith' → logprob: -6.47728967666626
    5. ' .' → logprob: -10.227290153503418
    6. '.endswith' → logprob: -11.477290153503418
    7. '.readline' → logprob: -12.352290153503418
    8. 'strip' → logprob: -12.852290153503418
    9. 'rstrip' → logprob: -12.977290153503418
    10. '.split' → logprob: -13.477290153503418

Token 14: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.008859428577125072
    2. ':' → logprob: -4.758859634399414
    3. ' ():' → logprob: -9.383859634399414
    4. '()' → logprob: -9.633859634399414
    5. '():
' → logprob: -9.758859634399414
    6. ' :' → logprob: -12.008859634399414
    7. '.' → logprob: -12.383859634399414
    8. '.:' → logprob: -12.633859634399414
    9. ':return' → logprob: -12.758859634399414
    10. '):' → logprob: -12.883859634399414

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0490429662168026
    2. '   ' → logprob: -3.4240429401397705
    3. ' continue' → logprob: -4.29904317855835
    4. 'continue' → logprob: -6.42404317855835
    5. '```' → logprob: -11.299042701721191
    6. '   ' → logprob: -11.424042701721191
    7. '    ' → logprob: -11.674042701721191
    8. '	continue' → logprob: -11.674042701721191
    9. ' break' → logprob: -11.674042701721191
    10. ' continues' → logprob: -11.924042701721191

Token 16: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.2576638162136078
    2. 'break' → logprob: -1.5076638460159302
    3. '   ' → logprob: -5.632663726806641
    4. '       ' → logprob: -6.382663726806641
    5. 'continue' (adapté à ' continue') → logprob: -8.50766372680664
    6. ' continue' → logprob: -8.88266372680664
    7. '	break' → logprob: -9.63266372680664
    8. '    ' → logprob: -10.63266372680664
    9. '_break' → logprob: -12.63266372680664
    10. '           ' → logprob: -12.75766372680664

Token 17: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01926436647772789
    2. '    
' → logprob: -4.019264221191406
    3. '        
' → logprob: -7.769264221191406
    4. '
' → logprob: -8.144264221191406
    5. '    ' → logprob: -9.394264221191406
    6. '```' → logprob: -9.769264221191406
    7. '\n' → logprob: -9.894264221191406
    8. '       ' → logprob: -10.019264221191406
    9. 'print' → logprob: -10.144264221191406
    10. '     
' → logprob: -10.519264221191406

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00035608073812909424
    2. 'print' → logprob: -8.00035572052002
    3. ' print' → logprob: -11.50035572052002
    4. '    
' → logprob: -12.37535572052002
    5. '```' → logprob: -12.50035572052002
    6. '       ' → logprob: -14.00035572052002
    7. '   ' → logprob: -14.25035572052002
    8. '    ' → logprob: -14.62535572052002
    9. 'for' → logprob: -16.125356674194336
    10. '
' → logprob: -16.125356674194336

Token 19: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31703540682792664
    2. 'print' → logprob: -1.317035436630249
    3. ' print' → logprob: -6.19203519821167
    4. 'data' → logprob: -7.94203519821167
    5. 'try' → logprob: -7.94203519821167
    6. 'import' → logprob: -9.192035675048828
    7. 'if' → logprob: -9.192035675048828
    8. 'tokens' → logprob: -9.192035675048828
    9. 'result' → logprob: -9.442035675048828
    10. ':' → logprob: -9.442035675048828

Token 20: ',b' (ID: 17568)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2815660238265991
    2. '=' → logprob: -2.6565661430358887
    3. ',' → logprob: -2.9065661430358887
    4. 'rg' → logprob: -3.1565661430358887
    5. 'r' → logprob: -3.4065661430358887
    6. ' ' → logprob: -4.156566143035889
    7. 'dd' → logprob: -4.656566143035889
    8. ',b' → logprob: -4.906566143035889
    9. 'rray' → logprob: -5.906566143035889
    10. ' +=' → logprob: -6.406566143035889

Token 21: ',n' (ID: 18103)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1426936537027359
    2. '=' → logprob: -2.0176937580108643
    3. ',' → logprob: -11.267693519592285
    4. '=line' → logprob: -12.642693519592285
    5. ')' → logprob: -14.017693519592285
    6. ' ' → logprob: -15.017693519592285
    7. '<|end|>' → logprob: -15.517693519592285
    8. '=int' → logprob: -15.767693519592285
    9. ' ,' → logprob: -15.892693519592285
    10. '=input' → logprob: -16.1426944732666

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193315744400024
    2. '=' → logprob: -1.5019330978393555
    3. '=line' → logprob: -13.126933097839355
    4. ',' → logprob: -13.626933097839355
    5. ')' → logprob: -14.751933097839355
    6. ' ' → logprob: -15.876933097839355
    7. '=int' → logprob: -16.001934051513672
    8. '=input' → logprob: -16.501934051513672
    9. '.' → logprob: -17.501934051513672
    10. '=

' → logprob: -17.751934051513672

Token 23: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.3370302617549896
    2. ' line' → logprob: -1.337030291557312
    3. 'map' → logprob: -3.9620301723480225
    4. 'line' → logprob: -5.462030410766602
    5. ' [' → logprob: -9.712030410766602
    6. ' ' → logprob: -9.962030410766602
    7. '[' → logprob: -10.087030410766602
    8. '[line' → logprob: -10.087030410766602
    9. ' list' → logprob: -12.212030410766602
    10. '(map' → logprob: -12.587030410766602

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0665111392736435
    2. '(' → logprob: -3.0665111541748047
    3. '(str' → logprob: -4.066511154174805
    4. '(lambda' → logprob: -7.441511154174805
    5. '(
' → logprob: -11.441511154174805
    6. 'int' → logprob: -11.566511154174805
    7. '[int' → logprob: -11.816511154174805
    8. '(list' → logprob: -12.691511154174805
    9. '<int' → logprob: -12.691511154174805
    10. 'str' → logprob: -13.691511154174805

Token 25: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0062129320576786995
    2. ')' → logprob: -5.5062127113342285
    3. ',line' → logprob: -6.8812127113342285
    4. ' line' → logprob: -7.8812127113342285
    5. '(' → logprob: -8.006213188171387
    6. ',' → logprob: -9.006213188171387
    7. '[line' → logprob: -9.131213188171387
    8. 'line' → logprob: -9.756213188171387
    9. '#line' → logprob: -10.256213188171387
    10. '=line' → logprob: -10.256213188171387

Token 26: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3869246244430542
    2. 'line' → logprob: -1.1369246244430542
    3. '   ' → logprob: -10.386924743652344
    4. '(line' → logprob: -11.761924743652344
    5. '	line' → logprob: -12.011924743652344
    6. '[line' → logprob: -12.636924743652344
    7. ')' → logprob: -13.011924743652344
    8. '=line' → logprob: -13.511924743652344
    9. ' ' → logprob: -14.261924743652344
    10. '#line' → logprob: -14.761924743652344

Token 27: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.08991213142871857
    2. '.split' → logprob: -2.589912176132202
    3. '.' → logprob: -4.589911937713623
    4. '.rstrip' → logprob: -7.214911937713623
    5. ').' → logprob: -10.589912414550781
    6. '.readline' → logprob: -10.714912414550781
    7. ' .' → logprob: -11.089912414550781
    8. ')' → logprob: -12.089912414550781
    9. '().' → logprob: -13.214912414550781
    10. '.replace' → logprob: -14.714912414550781

Token 28: '())
' (ID: 4574)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.7100694179534912
    2. ')' → logprob: -0.8350694179534912
    3. '())' → logprob: -2.710069417953491
    4. '(','' → logprob: -5.71006965637207
    5. '(' → logprob: -6.46006965637207
    6. '')' → logprob: -6.71006965637207
    7. '()' → logprob: -6.71006965637207
    8. '))' → logprob: -8.33506965637207
    9. '("' → logprob: -8.58506965637207
    10. '(',' → logprob: -8.83506965637207

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46556591987609863
    2. '
' → logprob: -1.7155659198760986
    3. '\n' → logprob: -2.3405659198760986
    4. '    
' → logprob: -3.4655659198760986
    5. '<|end|>' → logprob: -3.4655659198760986
    6. ':' → logprob: -5.2155656814575195
    7. ')' → logprob: -5.7155656814575195
    8. ' 
' → logprob: -5.7155656814575195
    9. '```' → logprob: -5.9655656814575195
    10. ',' → logprob: -6.0905656814575195

Token 30: ' r' (ID: 428)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24782665073871613
    2. '
' → logprob: -3.49782657623291
    3. '    
' → logprob: -3.49782657623291
    4. '    ' → logprob: -3.62282657623291
    5. ' ' → logprob: -3.87282657623291
    6. '[' → logprob: -3.99782657623291
    7. '\n' → logprob: -4.24782657623291
    8. 'n' → logprob: -4.37282657623291
    9. ')' → logprob: -4.49782657623291
    10. 'if' → logprob: -4.87282657623291

Token 31: ' =' (ID: 314)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.47046980261802673
    2. ' =' → logprob: -1.0954698324203491
    3. '=' → logprob: -4.345469951629639
    4. 'ema' → logprob: -4.970469951629639
    5. 'e' → logprob: -5.095469951629639
    6. ' ' → logprob: -5.720469951629639
    7. 's' → logprob: -6.095469951629639
    8. 'em' → logprob: -6.345469951629639
    9. 'ange' → logprob: -6.470469951629639
    10. 'a' → logprob: -6.470469951629639

Token 32: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7800367474555969
    2. ' a' → logprob: -0.7800367474555969
    3. 'pow' → logprob: -3.530036687850952
    4. ' n' → logprob: -4.280036926269531
    5. ' pow' → logprob: -4.405036926269531
    6. ' (' → logprob: -4.655036926269531
    7. 'n' → logprob: -4.780036926269531
    8. '(a' → logprob: -5.530036926269531
    9. '(pow' → logprob: -6.530036926269531
    10. '[a' → logprob: -6.905036926269531

Token 33: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6712831854820251
    2. '%' → logprob: -1.29628324508667
    3. '**' → logprob: -1.92128324508667
    4. ' **' → logprob: -3.42128324508667
    5. '%n' → logprob: -3.54628324508667
    6. '%b' → logprob: -5.17128324508667
    7. '*' → logprob: -6.79628324508667
    8. ' *' → logprob: -7.92128324508667
    9. ' ' → logprob: -9.796282768249512
    10. '+' → logprob: -9.921282768249512

Token 34: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04300491139292717
    2. 'n' → logprob: -3.1680049896240234
    3. ' b' → logprob: -12.918004989624023
    4. '10' → logprob: -14.293004989624023
    5. ' n' → logprob: -14.543004989624023
    6. 'm' → logprob: -14.668004989624023
    7. 'mod' → logprob: -15.168004989624023
    8. '%b' → logprob: -15.543004989624023
    9. '%n' → logprob: -15.668004989624023
    10. '1' → logprob: -15.668004989624023

Token 35: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20922578871250153
    2. '<|end|>' → logprob: -2.33422589302063
    3. '\n' → logprob: -3.45922589302063
    4. '%' → logprob: -3.58422589302063
    5. '**' → logprob: -4.959225654602051
    6. '   ' → logprob: -5.084225654602051
    7. '+' → logprob: -5.709225654602051
    8. '%n' → logprob: -6.084225654602051
    9. ' if' → logprob: -6.084225654602051
    10. '*' → logprob: -6.209225654602051

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.98973548412323
    2. '
' → logprob: -1.36473548412323
    3. '<|end|>' → logprob: -1.61473548412323
    4. '+' → logprob: -3.3647356033325195
    5. '\n' → logprob: -3.4897356033325195
    6. '*' → logprob: -3.8647356033325195
    7. '    
' → logprob: -4.4897356033325195
    8. '**' → logprob: -4.4897356033325195
    9. '%' → logprob: -4.6147356033325195
    10. ' if' → logprob: -4.7397356033325195

Token 37: ' s' (ID: 265)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.423474907875061
    2. '**' → logprob: -1.423474907875061
    3. ' if' → logprob: -1.798474907875061
    4. '+' → logprob: -1.923474907875061
    5. '   ' → logprob: -2.7984747886657715
    6. 'if' → logprob: -3.2984747886657715
    7. '%' → logprob: -3.6734747886657715
    8. '
' → logprob: -4.1734747886657715
    9. ' +' → logprob: -4.5484747886657715
    10. ' *' → logprob: -4.9234747886657715

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2683970034122467
    2. '=' → logprob: -1.5183969736099243
    3. ' +=' → logprob: -4.768396854400635
    4. '+=' → logprob: -5.518396854400635
    5. ' ' → logprob: -6.143396854400635
    6. 'um' → logprob: -8.018397331237793
    7. 't' → logprob: -8.518397331237793
    8. 'p' → logprob: -8.518397331237793
    9. ' *=' → logprob: -9.143397331237793
    10. '+' → logprob: -9.518397331237793

Token 39: ' ' (ID: 220)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.095649242401123
    2. 'n' → logprob: -1.470649242401123
    3. 'r' → logprob: -1.845649242401123
    4. '1' → logprob: -2.720649242401123
    5. 'b' → logprob: -3.345649242401123
    6. 'a' → logprob: -3.470649242401123
    7. ' (' → logprob: -3.470649242401123
    8. '0' → logprob: -3.970649242401123
    9. '(a' → logprob: -3.970649242401123
    10. '(n' → logprob: -4.345649242401123

Token 40: '0' (ID: 15)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8996061086654663
    2. 'pow' → logprob: -1.3996061086654663
    3. '1' → logprob: -2.274606227874756
    4. '(r' → logprob: -2.524606227874756
    5. '(a' → logprob: -3.024606227874756
    6. 'a' → logprob: -3.524606227874756
    7. '(' → logprob: -3.899606227874756
    8. 'b' → logprob: -4.399606227874756
    9. 'n' → logprob: -4.399606227874756
    10. '10' → logprob: -4.524606227874756

Token 41: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8713496327400208
    2. ' while' → logprob: -1.121349573135376
    3. 'for' (adapté à ' for') → logprob: -1.871349573135376
    4. ' for' → logprob: -2.621349573135376
    5. '   ' → logprob: -4.246349811553955
    6. ' ' → logprob: -4.996349811553955
    7. '    ' → logprob: -5.496349811553955
    8. '<|end|>' → logprob: -6.496349811553955
    9. '	while' → logprob: -6.996349811553955
    10. 'n' → logprob: -8.621349334716797

Token 44: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6557275652885437
    2. 'i' → logprob: -0.9057275652885437
    3. ' i' → logprob: -2.9057276248931885
    4. ' _' → logprob: -3.9057276248931885
    5. '_i' → logprob: -6.530727386474609
    6. ' ' → logprob: -8.53072738647461
    7. ' in' → logprob: -9.03072738647461
    8. 'n' → logprob: -11.03072738647461
    9. ' range' → logprob: -11.28072738647461
    10. 'x' → logprob: -12.15572738647461

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008742213249206543
    2. 'in' → logprob: -4.758742332458496
    3. ' ' → logprob: -9.133742332458496
    4. 'range' → logprob: -11.883742332458496
    5. 's' → logprob: -13.008742332458496
    6. ',' → logprob: -13.258742332458496
    7. '<|end|>' → logprob: -13.383742332458496
    8. '_' → logprob: -13.758742332458496
    9. 'n' → logprob: -14.133742332458496
    10. '	in' → logprob: -14.383742332458496

Token 46: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.523157000541687
    2. ' range' → logprob: -0.898157000541687
    3. ' ' → logprob: -11.148157119750977
    4. '	range' → logprob: -11.523157119750977
    5. ' xrange' → logprob: -12.648157119750977
    6. '  ' → logprob: -13.398157119750977
    7. '(range' → logprob: -13.523157119750977
    8. 'r' → logprob: -14.023157119750977
    9. ' ' → logprob: -14.898157119750977
    10. 'rang' → logprob: -14.898157119750977

Token 47: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004921223968267441
    2. '(' → logprob: -5.5049214363098145
    3. ' (' → logprob: -7.3799214363098145
    4. ' n' → logprob: -8.504920959472656
    5. 'n' → logprob: -11.129920959472656
    6. ' ' → logprob: -14.254920959472656
    7. '(a' → logprob: -15.254920959472656
    8. '(int' → logprob: -15.754920959472656
    9. '(
' → logprob: -16.379920959472656
    10. ')n' → logprob: -16.379920959472656

Token 48: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03664536401629448
    2. '):
' → logprob: -3.7866454124450684
    3. ' ):' → logprob: -4.411645412445068
    4. ' ):
' → logprob: -8.03664493560791
    5. '   ' → logprob: -8.16164493560791
    6. ')' → logprob: -8.53664493560791
    7. ':' → logprob: -8.53664493560791
    8. '):
' → logprob: -10.16164493560791
    9. '-' → logprob: -10.28664493560791
    10. '+' → logprob: -10.41164493560791

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024033451452851295
    2. '<|end|>' → logprob: -4.399033546447754
    3. '   ' → logprob: -5.399033546447754
    4. 's' → logprob: -6.149033546447754
    5. ' s' → logprob: -6.649033546447754
    6. '    ' → logprob: -7.399033546447754
    7. '```' → logprob: -7.774033546447754
    8. ' r' → logprob: -8.024033546447754
    9. '<|end|>' → logprob: -8.024033546447754
    10. 'r' → logprob: -8.274033546447754

Token 50: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.5724949836730957
    2. ' r' → logprob: -1.0724949836730957
    3. 's' → logprob: -3.1974949836730957
    4. ' s' → logprob: -3.6974949836730957
    5. '   ' → logprob: -3.6974949836730957
    6. '    ' → logprob: -6.197494983673096
    7. ' ' → logprob: -7.322494983673096
    8. ' if' → logprob: -8.447494506835938
    9. ' (' → logprob: -9.697494506835938
    10. 'if' → logprob: -9.822494506835938

Token 51: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.6288350820541382
    2. '=' → logprob: -1.0038350820541382
    3. ' =' → logprob: -2.8788352012634277
    4. ' *=' → logprob: -3.1288352012634277
    5. '*' → logprob: -8.25383472442627
    6. ' ' → logprob: -10.50383472442627
    7. '+=' → logprob: -11.25383472442627
    8. ' <<=' → logprob: -11.50383472442627
    9. '   ' → logprob: -11.75383472442627
    10. '=r' → logprob: -12.50383472442627

Token 52: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0026414142921566963
    2. ' ' → logprob: -6.127641201019287
    3. '2' → logprob: -8.502641677856445
    4. '1' → logprob: -9.002641677856445
    5. 'a' → logprob: -9.127641677856445
    6. 'r' → logprob: -12.377641677856445
    7. '```' → logprob: -12.627641677856445
    8. '100' → logprob: -13.252641677856445
    9. '0' → logprob: -13.502641677856445
    10. '   ' → logprob: -13.502641677856445

Token 53: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0007669831975363195
    2. 'a' → logprob: -7.500766754150391
    3. ' ' → logprob: -9.12576675415039
    4. '2' → logprob: -10.00076675415039
    5. '1' → logprob: -10.50076675415039
    6. 'r' → logprob: -11.37576675415039
    7. '3' → logprob: -12.12576675415039
    8. '   ' → logprob: -12.62576675415039
    9. '```' → logprob: -12.87576675415039
    10. '
' → logprob: -13.68826675415039

Token 54: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.697035551071167
    2. '       ' → logprob: -0.697035551071167
    3. '<|end|>' → logprob: -6.322035789489746
    4. '    ' → logprob: -7.322035789489746
    5. ' ' → logprob: -7.572035789489746
    6. '  ' → logprob: -8.822035789489746
    7. ' r' → logprob: -9.072035789489746
    8. 'r' → logprob: -9.197035789489746
    9. '        ' → logprob: -9.572035789489746
    10. '      ' → logprob: -9.822035789489746

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5241364240646362
    2. '   ' → logprob: -0.8991364240646362
    3. '<|end|>' → logprob: -7.399136543273926
    4. ' ' → logprob: -8.899136543273926
    5. '0' → logprob: -10.274136543273926
    6. '    ' → logprob: -10.524136543273926
    7. 's' → logprob: -10.524136543273926
    8. ' r' → logprob: -10.899136543273926
    9. '      ' → logprob: -11.149136543273926
    10. ',' → logprob: -11.274136543273926

Token 56: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.14463435113430023
    2. 's' (adapté à ' s') → logprob: -2.144634246826172
    3. '   ' → logprob: -5.144634246826172
    4. 'r' → logprob: -5.269634246826172
    5. ' r' → logprob: -5.394634246826172
    6. '       ' → logprob: -6.269634246826172
    7. '    ' → logprob: -9.894634246826172
    8. ' ' → logprob: -10.019634246826172
    9. 'd' → logprob: -11.519634246826172
    10. 'print' → logprob: -12.019634246826172

Token 57: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1448640525341034
    2. ' +=' → logprob: -2.019864082336426
    3. '=' → logprob: -6.269864082336426
    4. ' =' → logprob: -8.644864082336426
    5. '+=(' → logprob: -10.144864082336426
    6. ',' → logprob: -10.519864082336426
    7. '+' → logprob: -10.894864082336426
    8. ' ' → logprob: -11.519864082336426
    9. '//=' → logprob: -11.644864082336426
    10. ']+=' → logprob: -12.769864082336426

Token 58: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.021539103239774704
    2. ' r' → logprob: -4.021539211273193
    3. ' (' → logprob: -5.896539211273193
    4. '(r' → logprob: -7.396539211273193
    5. ' ' → logprob: -11.646538734436035
    6. '(' → logprob: -11.771538734436035
    7. 'int' → logprob: -13.771538734436035
    8. '(int' → logprob: -14.146538734436035
    9. '   ' → logprob: -14.271538734436035
    10. '7' → logprob: -14.771538734436035

Token 59: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.10116469860076904
    2. '//' → logprob: -2.3511648178100586
    3. '<|end|>' → logprob: -7.476164817810059
    4. 'div' → logprob: -9.351164817810059
    5. '//=' → logprob: -9.351164817810059
    6. ' ' → logprob: -9.601164817810059
    7. '0' → logprob: -10.351164817810059
    8. '```' → logprob: -10.851164817810059
    9. '%b' → logprob: -10.851164817810059
    10. '
' → logprob: -11.476164817810059

Token 60: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015048631466925144
    2. ' b' → logprob: -6.501504898071289
    3. '>b' → logprob: -13.751504898071289
    4. '   ' → logprob: -14.876504898071289
    5. '<|end|>' → logprob: -15.126504898071289
    6. '%b' → logprob: -15.251504898071289
    7. '	b' → logprob: -15.376504898071289
    8. 'B' → logprob: -16.25150489807129
    9. '*b' → logprob: -16.50150489807129
    10. ')b' → logprob: -16.62650489807129

Token 61: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40563035011291504
    2. '       ' → logprob: -1.280630350112915
    3. 'r' → logprob: -3.905630350112915
    4. ' ' → logprob: -4.655630111694336
    5. '<|end|>' → logprob: -4.655630111694336
    6. ' r' → logprob: -5.280630111694336
    7. '1' → logprob: -6.530630111694336
    8. '    
' → logprob: -6.780630111694336
    9. '10' → logprob: -6.780630111694336
    10. ')' → logprob: -6.905630111694336

Token 62: '       ' (ID: 309)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6454336643218994
    2. ' r' → logprob: -1.3954336643218994
    3. '       ' → logprob: -1.6454336643218994
    4. '   ' → logprob: -3.6454336643218994
    5. ' ' → logprob: -5.89543342590332
    6. '
' → logprob: -7.14543342590332
    7. '<|end|>' → logprob: -7.27043342590332
    8. ' 
' → logprob: -7.39543342590332
    9. '        
' → logprob: -7.77043342590332
    10. '    ' → logprob: -7.77043342590332

Token 63: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.0009207503753714263
    2. ' r' → logprob: -7.00092077255249
    3. '=' → logprob: -12.500920295715332
    4. '       ' → logprob: -13.375920295715332
    5. 's' → logprob: -13.625920295715332
    6. '   ' → logprob: -14.250920295715332
    7. '(r' → logprob: -14.375920295715332
    8. '(' → logprob: -14.875920295715332
    9. '_r' → logprob: -15.250920295715332
    10. ' ' → logprob: -15.375920295715332

Token 64: ' %=' (ID: 117035)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038398440927267075
    2. '%=' → logprob: -3.288398504257202
    3. ' %=' → logprob: -8.288398742675781
    4. ' =' → logprob: -9.163398742675781
    5. '%' → logprob: -14.913398742675781
    6. '.=' → logprob: -15.913398742675781
    7. '=%' → logprob: -16.28839874267578
    8. '＝' → logprob: -16.53839874267578
    9. '=

' → logprob: -17.41339874267578
    10. '=}' → logprob: -17.53839874267578

Token 65: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0007099286303855479
    2. ' b' → logprob: -7.2507100105285645
    3. '	b' → logprob: -18.625709533691406
    4. '   ' → logprob: -19.125709533691406
    5. ' ' → logprob: -19.250709533691406
    6. '  ' → logprob: -21.875709533691406
    7. '*b' → logprob: -21.875709533691406
    8. ')b' → logprob: -22.375709533691406
    9. '%b' → logprob: -22.500709533691406
    10. '>b' → logprob: -22.500709533691406

Token 66: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7505303025245667
    2. 'print' → logprob: -0.7505303025245667
    3. '
' → logprob: -3.250530242919922
    4. '    
' → logprob: -4.875530242919922
    5. '<|end|>' → logprob: -6.125530242919922
    6. '\n' → logprob: -6.500530242919922
    7. ' print' → logprob: -6.750530242919922
    8. '```' → logprob: -7.000530242919922
    9. '  
' → logprob: -7.750530242919922
    10. '  ' → logprob: -7.875530242919922

Token 67: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.1604614406824112
    2. ' print' → logprob: -1.91046142578125
    3. '   ' → logprob: -8.53546142578125
    4. ' 
' → logprob: -11.66046142578125
    5. ' ' → logprob: -11.91046142578125
    6. '.print' → logprob: -12.03546142578125
    7. '```' → logprob: -12.03546142578125
    8. '
' → logprob: -12.66046142578125
    9. '\n' → logprob: -12.91046142578125
    10. '    
' → logprob: -13.41046142578125

Token 69: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.013530058786273003
    2. '(' → logprob: -4.388530254364014
    3. '('' → logprob: -7.513530254364014
    4. 's' → logprob: -8.513529777526855
    5. '(f' → logprob: -9.138529777526855
    6. ' (' → logprob: -9.513529777526855
    7. '()' → logprob: -10.388529777526855
    8. '(str' → logprob: -10.638529777526855
    9. '("' → logprob: -11.263529777526855
    10. '((' → logprob: -11.388529777526855

Token 70: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ' )' → logprob: -13.000003814697266
    3. ')
' → logprob: -14.375003814697266
    4. '))' → logprob: -15.000003814697266
    5. '')' → logprob: -16.125003814697266
    6. '+' → logprob: -16.625003814697266
    7. ')#' → logprob: -16.750003814697266
    8. ')`' → logprob: -17.000003814697266
    9. '+)' → logprob: -17.125003814697266
    10. '   ' → logprob: -17.500003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 68
Tokens correctement prédits (1ère position, stricte): 24
Tokens correctement prédits (1ère position, avec adaptation): 27
Tokens correctement prédits (top 10): 54
Précision stricte (1ère position): 35.29%
Précision adaptée (1ère position): 39.71%
Précision (top 10): 79.41%
================================================================================
