================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Product:
    def __init__(self, name: str, weight: int, sell_price: int):
        self.name = name
        self.weight = weight
        self.sell_price = sell_price

class MarketProduct:
    def __init__(self, product: Product, buy_price: int):
        self.product = product
        self.buy_price = buy_price
        self.profit = product.sell_price - buy_price

class City:
    def __init__(self, idx: int, x: int, y: int, market_products: list):
        self.idx = idx
        self.x = x
        self.y = y
        self.market_products = market_products

    def distance_to_market(self) -> int:
        # Manhattan distance to market at (0,0)
        return abs(self.x) + abs(self.y)

from functools import lru_cache
from typing import Dict, Tuple, List

class TradingQuest:
    def __init__(self, N: int, M: int, W: int, T: int,\
                 products_data: List[Tuple[str,int,int]], cities_data: List[Tuple[int,int,int,List[Tuple[str,int]]]]):
        # Initialize products dict: name -> Product
        self.products: Dict[str, Product] = {}
        for name, weight, sell_price in products_data:
            self.products[name] = Product(name, weight, sell_price)

        # Initialize cities list
        self.cities: List[City] = []
        for idx, (L, X, Y, items) in enumerate(cities_data, start=1):
            market_products = []
            for r_name, q_price in items:
                product = self.products[r_name]
                mp = MarketProduct(product, q_price)
                market_products.append(mp)
            city = City(idx, X, Y, market_products)
            self.cities.append(city)

        self.N = N
        self.M = M
        self.W = W
        self.T = T

        self.market_x = 0
        self.market_y = 0

        # Precompute distances city <-> market
        self.city_to_market_dist = [abs(city.x) + abs(city.y) for city in self.cities]

        # For DP: cache max profit for time used and inventory (represented abstractly)
        # But we do not track inventory per se; we assume instant buy/sell at city/market
        # We plan route as: from market to some cities buy some products, back to market and sell, repeat.

        # We will generate all possible product load-outs per city that fit weight W and yield profit>0.
        # To simplify, we consider buying one type of product maximum allowed per trip (since unlimited stock).
        # We then consider trips: market->city->market with profitable load.

        # For sophistication, let's encapsulate possible purchases per city, with all combinations.

        # We'll build all possible loadouts per city
        self.city_loadouts = []
        for city in self.cities:
            loadouts = self.generate_loadouts(city)
            self.city_loadouts.append(loadouts)

    def generate_loadouts(self, city: City):
        # Generate all combos of products sold in this city with profit>0, that fit in weight limit W.
        # Because M<=7, L_j<=M, and W can be big, we use DP for knapsack of profits with weight limit W.
        # However profit per unit = sell_price - buy_price:
        # We want to maximize profit per trip for city visit.

        # First filter products with profit>0
        products = [mp for mp in city.market_products if mp.profit > 0]
        if not products:
            return []  # no profitable products here

        # Define dp[w] = max profit with weight <= w from these products (unbounded knapsack)
        dp = [0]*(self.W+1)
        for mp in products:
            w = mp.product.weight
            p = mp.profit
            # Unbounded knapsack update
            for weight in range(w, self.W+1):
                val = dp[weight - w] + p
                if val > dp[weight]:
                    dp[weight] = val

        # We find max profit achievable for city
        max_profit = max(dp)

        # To be able to reconstruct loadout, we store one of them. For sophistication, store multiple.
        # But complexity, we store only the best profit loadout here and its weight.

        # Find min weight for max_profit
        min_weight = next(w for w, val in enumerate(dp) if val == max_profit)

        return [(min_weight, max_profit)]

    def solve(self):
        # Strategy: Dynamic programming over time.
        # Each trip from market->city->market costs 2*distance(city, market) minutes.
        # We can repeat trips to same or different cities with profits given.

        # We'll make a list of all possible trips:
        # Each trip: time_cost, profit

        trips = []
        for idx, city in enumerate(self.cities):
            dist = self.city_to_market_dist[idx]
            time_cost = 2*dist
            loadouts = self.city_loadouts[idx]
            for (weight, profit) in loadouts:
                if time_cost <= self.T and profit > 0:
                    trips.append((time_cost, profit))

        # Now solve unbounded knapsack with time as capacity and profit as value
        # dp[t] = max profit achievable within time t
        dp = [0]*(self.T+1)
        for t in range(1,self.T+1):
            best = dp[t-1]
            for cost, profit in trips:
                if cost <= t:
                    candidate = dp[t - cost] + profit
                    if candidate > best:
                        best = candidate
            dp[t] = best

        return dp[self.T]

def main():
    import sys
    input = sys.stdin.readline
    N,M,W,T = map(int, input().split())
    products_data = []
    for _ in range(M):
        s,v,p = input().split()
        v = int(v)
        p = int(p)
        products_data.append((s,v,p))
    cities_data = []
    for _ in range(N):
        L,x,y = input().split()
        L = int(L)
        x = int(x)
        y = int(y)
        items = []
        for __ in range(L):
            r,q = input().split()
            q = int(q)
            items.append((r,q))
        cities_data.append((L,x,y,items))

    quest = TradingQuest(N,M,W,T,products_data,cities_data)
    ans = quest.solve()
    print(ans)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Product' (ID: 7451)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5160401463508606
    2. '(' → logprob: -1.1410400867462158
    3. '```' → logprob: -3.016040086746216
    4. '():' → logprob: -4.766040325164795
    5. '(
' → logprob: -5.141040325164795
    6. '\' → logprob: -5.516040325164795
    7. '()' → logprob: -5.516040325164795
    8. '   ' → logprob: -6.016040325164795
    9. '<|end|>' → logprob: -6.266040325164795
    10. ':
' → logprob: -6.266040325164795

Token 4: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.347002774477005
    2. '   ' → logprob: -1.8470027446746826
    3. '(' → logprob: -2.5970027446746826
    4. '_' → logprob: -4.472002983093262
    5. '    ' → logprob: -4.472002983093262
    6. ''' → logprob: -4.597002983093262
    7. '(space' → logprob: -5.347002983093262
    8. '```' → logprob: -5.347002983093262
    9. ' (' → logprob: -5.972002983093262
    10. '`' → logprob: -6.097002983093262

Token 5: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07304584980010986
    2. ' __' → logprob: -3.4480457305908203
    3. '__' → logprob: -4.19804573059082
    4. ' init' → logprob: -4.57304573059082
    5. '    ' → logprob: -6.44804573059082
    6. '_' → logprob: -6.94804573059082
    7. ' ' → logprob: -6.94804573059082
    8. ' def' → logprob: -6.94804573059082
    9. 'init' → logprob: -7.19804573059082
    10. ' calculate' → logprob: -7.19804573059082

Token 6: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.236549335066229e-05
    2. ' init' → logprob: -10.750021934509277
    3. '_init' → logprob: -14.500021934509277
    4. 'ini' → logprob: -15.125021934509277
    5. 'i' → logprob: -16.625022888183594
    6. '	init' → logprob: -17.375022888183594
    7. 'in' → logprob: -19.625022888183594
    8. 'inite' → logprob: -19.875022888183594
    9. 'innit' → logprob: -20.000022888183594
    10. '   ' → logprob: -20.375022888183594

Token 7: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.47559261322021484
    2. '__' → logprob: -0.9755926132202148
    3. '__(
' → logprob: -7.475592613220215
    4. '(' → logprob: -7.975592613220215
    5. '_' → logprob: -8.100592613220215
    6. '__((' → logprob: -8.850592613220215
    7. '__('' → logprob: -9.600592613220215
    8. '(self' → logprob: -10.475592613220215
    9. '_(' → logprob: -10.975592613220215
    10. '__(*' → logprob: -11.225592613220215

Token 8: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005757896578870714
    2. ' self' → logprob: -7.625576019287109
    3. ')' → logprob: -9.62557601928711
    4. 's' → logprob: -11.87557601928711
    5. ' )' → logprob: -12.25057601928711
    6. '(self' → logprob: -12.37557601928711
    7. ' ' → logprob: -13.37557601928711
    8. 'product' → logprob: -13.37557601928711
    9. 'sel' → logprob: -14.75057601928711
    10. '_self' → logprob: -14.75057601928711

Token 9: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4802430272102356
    2. '(' → logprob: -1.2302429676055908
    3. '<|end|>' → logprob: -3.230242967605591
    4. ',' → logprob: -4.48024320602417
    5. ' )' → logprob: -4.85524320602417
    6. 'self' → logprob: -5.23024320602417
    7. '.' → logprob: -5.23024320602417
    8. ' ' → logprob: -5.48024320602417
    9. '_' → logprob: -5.60524320602417
    10. '(self' → logprob: -6.48024320602417

Token 10: ' name' (ID: 1308)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.6305074095726013
    2. 'self' → logprob: -1.630507469177246
    3. 'name' → logprob: -2.130507469177246
    4. ')' → logprob: -2.630507469177246
    5. ' name' → logprob: -3.505507469177246
    6. 'product' → logprob: -4.005507469177246
    7. 's' → logprob: -4.630507469177246
    8. ' ' → logprob: -4.880507469177246
    9. ' self' → logprob: -5.380507469177246
    10. 'n' → logprob: -5.755507469177246

Token 11: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05596015602350235
    2. ')' → logprob: -3.305960178375244
    3. '):' → logprob: -4.055960178375244
    4. '<|end|>' → logprob: -9.305959701538086
    5. '=' → logprob: -9.430959701538086
    6. ' ,' → logprob: -9.555959701538086
    7. ':' → logprob: -9.930959701538086
    8. '_' → logprob: -10.430959701538086
    9. ',
' → logprob: -10.680959701538086
    10. '):
' → logprob: -10.930959701538086

Token 12: ' str' (ID: 989)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.31674471497535706
    2. ')' → logprob: -1.5667446851730347
    3. ' ' → logprob: -2.816744804382324
    4. '<|end|>' → logprob: -5.941744804382324
    5. ' ){' → logprob: -10.191744804382324
    6. ' ),' → logprob: -10.316744804382324
    7. '  ' → logprob: -10.316744804382324
    8. ' ,' → logprob: -10.316744804382324
    9. ' ' → logprob: -10.691744804382324
    10. ' ):' → logprob: -10.816744804382324

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05932942032814026
    2. '):' → logprob: -3.4343295097351074
    3. ')' → logprob: -3.6843295097351074
    4. ' ,' → logprob: -9.68432903289795
    5. '   ' → logprob: -9.80932903289795
    6. ',
' → logprob: -10.68432903289795
    7. '):
' → logprob: -10.80932903289795
    8. '<|end|>' → logprob: -10.93432903289795
    9. ':' → logprob: -11.55932903289795
    10. ' ' → logprob: -12.18432903289795

Token 14: ' weight' (ID: 6049)
  Prédit: ' price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.07398362457752228
    2. 'price' → logprob: -2.823983669281006
    3. ' ' → logprob: -5.198983669281006
    4. ' quantity' → logprob: -6.323983669281006
    5. '    ' → logprob: -6.448983669281006
    6. ' )' → logprob: -6.698983669281006
    7. 'quantity' → logprob: -6.948983669281006
    8. ')' → logprob: -8.698983192443848
    9. '	price' → logprob: -8.823983192443848
    10. '_price' → logprob: -9.198983192443848

Token 15: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25402918457984924
    2. '):' → logprob: -2.2540292739868164
    3. ',' → logprob: -2.5040292739868164
    4. ')' → logprob: -3.8790292739868164
    5. '=' → logprob: -4.129029273986816
    6. ' ,' → logprob: -7.629029273986816
    7. ' ):' → logprob: -9.004029273986816
    8. ' :' → logprob: -9.504029273986816
    9. ' )' → logprob: -9.879029273986816
    10. ')=' → logprob: -11.129029273986816

Token 16: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12097807973623276
    2. ' int' → logprob: -2.8709781169891357
    3. 'int' → logprob: -3.2459781169891357
    4. ')' → logprob: -4.870977878570557
    5. ' )' → logprob: -5.120977878570557
    6. ' float' → logprob: -6.120977878570557
    7. '<|end|>' → logprob: -6.995977878570557
    8. ' str' → logprob: -7.495977878570557
    9. 'float' → logprob: -7.870977878570557
    10. '<|end|>' → logprob: -9.120978355407715

Token 17: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18909649550914764
    2. ',' → logprob: -1.939096450805664
    3. ')' → logprob: -3.564096450805664
    4. ' ,' → logprob: -10.189096450805664
    5. ':' → logprob: -10.439096450805664
    6. ' ):' → logprob: -10.564096450805664
    7. '   ' → logprob: -10.939096450805664
    8. '),' → logprob: -11.564096450805664
    9. '):
' → logprob: -12.439096450805664
    10. ' ' → logprob: -12.564096450805664

Token 18: ' sell' (ID: 7437)
  Prédit: ' price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.004988493397831917
    2. 'price' → logprob: -5.379988670349121
    3. ' )' → logprob: -8.879988670349121
    4. ' quantity' → logprob: -9.629988670349121
    5. ')' → logprob: -10.379988670349121
    6. ' color' → logprob: -10.504988670349121
    7. ' cost' → logprob: -10.629988670349121
    8. ' ' → logprob: -10.754988670349121
    9. '    ' → logprob: -11.004988670349121
    10. ' ,' → logprob: -12.129988670349121

Token 19: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.35655248165130615
    2. '_' → logprob: -1.3565524816513062
    3. '_in' → logprob: -3.4815526008605957
    4. 'ing' → logprob: -4.481552600860596
    5. '_by' → logprob: -9.481552124023438
    6. '_value' → logprob: -10.231552124023438
    7. 'ed' → logprob: -10.481552124023438
    8. '_date' → logprob: -11.106552124023438
    9. '_cost' → logprob: -11.481552124023438
    10. '_ing' → logprob: -11.606552124023438

Token 20: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030453430488705635
    2. '):' → logprob: -3.6554534435272217
    3. ')' → logprob: -5.655453205108643
    4. ',' → logprob: -7.530453205108643
    5. '=' → logprob: -10.1554536819458
    6. ' ):' → logprob: -10.2804536819458
    7. ' :' → logprob: -10.5304536819458
    8. ' )' → logprob: -12.9054536819458
    9. '):
' → logprob: -13.4054536819458
    10. ':int' → logprob: -13.7804536819458

Token 21: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.697272777557373
    2. ' int' → logprob: -0.822272777557373
    3. ' float' → logprob: -2.947272777557373
    4. 'float' → logprob: -5.072272777557373
    5. ')' → logprob: -6.697272777557373
    6. ' )' → logprob: -7.072272777557373
    7. ' ' → logprob: -7.822272777557373
    8. '<|end|>' → logprob: -7.822272777557373
    9. ':int' → logprob: -8.197273254394531
    10. '<|end|>' → logprob: -9.072273254394531

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06830497831106186
    2. ')' → logprob: -3.193305015563965
    3. ',' → logprob: -3.693305015563965
    4. ':' → logprob: -9.568305015563965
    5. ' ):' → logprob: -11.443305015563965
    6. '):
' → logprob: -11.943305015563965
    7. ' ,' → logprob: -12.818305015563965
    8. '   ' → logprob: -12.943305015563965
    9. ' ' → logprob: -13.193305015563965
    10. '),' → logprob: -13.443305015563965

Token 23: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10510026663541794
    2. '   ' → logprob: -2.730100154876709
    3. '    ' → logprob: -4.230100154876709
    4. '<|end|>' → logprob: -4.980100154876709
    5. ')' → logprob: -6.105100154876709
    6. ' ' → logprob: -6.230100154876709
    7. ' 
' → logprob: -6.355100154876709
    8. ':' → logprob: -6.480100154876709
    9. '        
' → logprob: -7.105100154876709
    10. '\' → logprob: -7.230100154876709

Token 24: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.140997976064682
    2. '       ' → logprob: -2.390997886657715
    3. ' self' → logprob: -3.515997886657715
    4. '        ' → logprob: -5.390997886657715
    5. 's' → logprob: -6.390997886657715
    6. '   ' → logprob: -6.515997886657715
    7. ' ' → logprob: -7.140997886657715
    8. ' ' → logprob: -7.890997886657715
    9. '_' → logprob: -8.015997886657715
    10. '    ' → logprob: -8.140997886657715

Token 25: '.name' (ID: 4834)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00254617421887815
    2. '.name' → logprob: -6.002546310424805
    3. ' .' → logprob: -9.627546310424805
    4. '_name' → logprob: -14.252546310424805
    5. 'name' → logprob: -14.502546310424805
    6. '.weight' → logprob: -15.002546310424805
    7. '.Name' → logprob: -15.002546310424805
    8. '._' → logprob: -15.002546310424805
    9. '.user' → logprob: -15.127546310424805
    10. '.
' → logprob: -15.502546310424805

Token 26: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11258745193481445
    2. ' =' → logprob: -2.8625874519348145
    3. '.' → logprob: -3.1125874519348145
    4. '<|end|>' → logprob: -5.9875874519348145
    5. ')' → logprob: -6.9875874519348145
    6. ' ' → logprob: -7.7375874519348145
    7. '.=' → logprob: -7.9875874519348145
    8. '_' → logprob: -8.362586975097656
    9. ',' → logprob: -8.862586975097656
    10. ' )' → logprob: -9.737586975097656

Token 27: ' name' (ID: 1308)
  Prédit: ' name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' name' → logprob: -0.2812509536743164
    2. 'name' → logprob: -1.4062509536743164
    3. ' ' → logprob: -9.656250953674316
    4. '"name' → logprob: -11.031250953674316
    5. '	name' → logprob: -12.031250953674316
    6. '_name' → logprob: -12.531250953674316
    7. ''name' → logprob: -12.656250953674316
    8. '    ' → logprob: -13.531250953674316
    9. ' )' → logprob: -13.906250953674316
    10. '<|end|>' → logprob: -14.156250953674316

Token 28: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36436015367507935
    2. '<|end|>' → logprob: -1.4893600940704346
    3. ' ' → logprob: -3.4893600940704346
    4. '.' → logprob: -4.489360332489014
    5. '        ' → logprob: -5.114360332489014
    6. ')' → logprob: -5.364360332489014
    7. 'newline' → logprob: -5.364360332489014
    8. '   ' → logprob: -5.364360332489014
    9. '\' → logprob: -5.739360332489014
    10. '    ' → logprob: -5.864360332489014

Token 29: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05192183330655098
    2. '<|end|>' → logprob: -4.176921844482422
    3. ' ' → logprob: -4.926921844482422
    4. '        
' → logprob: -5.176921844482422
    5. '   ' → logprob: -5.676921844482422
    6. '    
' → logprob: -6.051921844482422
    7. ',' → logprob: -6.176921844482422
    8. '
' → logprob: -6.426921844482422
    9. '.' → logprob: -6.426921844482422
    10. '\' → logprob: -6.676921844482422

Token 30: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034539878368377686
    2. 'self' (adapté à ' self') → logprob: -3.4095399379730225
    3. ' self' → logprob: -8.034540176391602
    4. '        ' → logprob: -8.409540176391602
    5. ',' → logprob: -9.034540176391602
    6. ' ' → logprob: -9.784540176391602
    7. '
' → logprob: -9.909540176391602
    8. ' ' → logprob: -10.534540176391602
    9. '        
' → logprob: -11.284540176391602
    10. '      ' → logprob: -11.409540176391602

Token 31: '.weight' (ID: 49415)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16065829992294312
    2. '.weight' → logprob: -1.910658359527588
    3. '.price' → logprob: -8.53565788269043
    4. 'weight' → logprob: -8.78565788269043
    5. ' .' → logprob: -10.78565788269043
    6. '.weights' → logprob: -11.41065788269043
    7. '.Weight' → logprob: -11.66065788269043
    8. '.sell' → logprob: -12.03565788269043
    9. '.sale' → logprob: -12.16065788269043
    10. '.we' → logprob: -12.41065788269043

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0099280821159482
    2. '=' → logprob: -4.634928226470947
    3. '<|end|>' → logprob: -9.509927749633789
    4. ' ' → logprob: -9.884927749633789
    5. ')' → logprob: -11.259927749633789
    6. '_' → logprob: -11.384927749633789
    7. ' =
' → logprob: -12.009927749633789
    8. '.' → logprob: -12.634927749633789
    9. ' +=' → logprob: -13.009927749633789
    10. ' =)' → logprob: -13.134927749633789

Token 33: ' weight' (ID: 6049)
  Prédit: ' weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weight' → logprob: -0.011050417087972164
    2. 'weight' → logprob: -4.511050224304199
    3. ' ' → logprob: -13.2610502243042
    4. '(weight' → logprob: -14.8860502243042
    5. ' ' → logprob: -15.3860502243042
    6. ' gewicht' → logprob: -15.6360502243042
    7. ' weigh' → logprob: -16.761051177978516
    8. 'weig' → logprob: -16.886051177978516
    9. ' weig' → logprob: -17.011051177978516
    10. '.weight' → logprob: -17.386051177978516

Token 34: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013429021462798119
    2. ' 
' → logprob: -5.013429164886475
    3. '        
' → logprob: -6.263429164886475
    4. '<|end|>' → logprob: -6.513429164886475
    5. ' ' → logprob: -6.763429164886475
    6. '        ' → logprob: -7.513429164886475
    7. '
' → logprob: -7.513429164886475
    8. 'self' → logprob: -7.638429164886475
    9. '   ' → logprob: -9.138428688049316
    10. '```' → logprob: -9.513428688049316

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10276190936565399
    2. 'self' → logprob: -2.35276198387146
    3. ' self' → logprob: -6.852761745452881
    4. '        
' → logprob: -7.227761745452881
    5. '```' → logprob: -8.477762222290039
    6. '
' → logprob: -9.102762222290039
    7. ' 
' → logprob: -9.227762222290039
    8. '   ' → logprob: -9.477762222290039
    9. '        ' → logprob: -9.852762222290039
    10. '<|end|>' → logprob: -9.977762222290039

Token 36: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10846175998449326
    2. 'self' (adapté à ' self') → logprob: -2.358461856842041
    3. ' self' → logprob: -5.358461856842041
    4. '        ' → logprob: -6.733461856842041
    5. '        
' → logprob: -7.233461856842041
    6. ' ' → logprob: -8.108461380004883
    7. '   ' → logprob: -8.358461380004883
    8. '
' → logprob: -8.733461380004883
    9. '```' → logprob: -8.858461380004883
    10. ' ' → logprob: -9.108461380004883

Token 37: '.sell' (ID: 178448)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0017207576893270016
    2. '.sell' → logprob: -7.376720905303955
    3. '.s' → logprob: -7.501720905303955
    4. '.price' → logprob: -7.751720905303955
    5. '.sale' → logprob: -9.501720428466797
    6. ' .' → logprob: -10.751720428466797
    7. '._' → logprob: -12.376720428466797
    8. '.weight' → logprob: -13.251720428466797
    9. '.buy' → logprob: -13.626720428466797
    10. '.user' → logprob: -14.126720428466797

Token 38: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.3870560824871063
    2. '_' → logprob: -1.1370561122894287
    3. '_p' → logprob: -8.762056350708008
    4. ' _' → logprob: -11.762056350708008
    5. '_prices' → logprob: -12.012056350708008
    6. '_value' → logprob: -12.137056350708008
    7. '_score' → logprob: -14.137056350708008
    8. '_user' → logprob: -14.137056350708008
    9. '_
' → logprob: -14.262056350708008
    10. '_per' → logprob: -14.387056350708008

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519422471523285
    2. '=' → logprob: -1.5019422769546509
    3. ' =
' → logprob: -11.37694263458252
    4. ' ' → logprob: -14.12694263458252
    5. ' =)' → logprob: -15.12694263458252
    6. '.' → logprob: -16.251941680908203
    7. ')' → logprob: -16.376941680908203
    8. '=
' → logprob: -16.376941680908203
    9. '   ' → logprob: -16.626941680908203
    10. '=

' → logprob: -16.751941680908203

Token 40: ' sell' (ID: 7437)
  Prédit: ' sell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sell' → logprob: -0.023248620331287384
    2. 'sell' → logprob: -3.7732486724853516
    3. ' ' → logprob: -13.898248672485352
    4. ' ' → logprob: -14.148248672485352
    5. 'sel' → logprob: -14.523248672485352
    6. '.sell' → logprob: -14.898248672485352
    7. ' sel' → logprob: -15.148248672485352
    8. '_sell' → logprob: -16.39824867248535
    9. '	s' → logprob: -17.27324867248535
    10. '卖' → logprob: -17.39824867248535

Token 41: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.391014039516449
    2. '_' → logprob: -1.1410140991210938
    3. '_p' → logprob: -5.516014099121094
    4. ' _' → logprob: -10.641014099121094
    5. '_
' → logprob: -10.766014099121094
    6. '_i' → logprob: -11.266014099121094
    7. '_prices' → logprob: -11.891014099121094
    8. '_
' → logprob: -12.141014099121094
    9. '_e' → logprob: -12.391014099121094
    10. '_value' → logprob: -12.641014099121094

Token 42: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0015955570852383971
    2. '   ' → logprob: -7.501595497131348
    3. '    
' → logprob: -8.251595497131348
    4. '<|end|>' → logprob: -8.376595497131348
    5. ' 
' → logprob: -8.626595497131348
    6. '

' → logprob: -8.751595497131348
    7. '\n' → logprob: -9.876595497131348
    8. '  
' → logprob: -10.251595497131348
    9. '' → logprob: -10.876595497131348
    10. 'n' → logprob: -11.251595497131348

Token 43: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.014086519367992878
    2. '   ' → logprob: -4.514086723327637
    3. '    
' → logprob: -6.889086723327637
    4. '```' → logprob: -7.389086723327637
    5. ' 
' → logprob: -8.014086723327637
    6. '\n' → logprob: -8.389086723327637
    7. '\' → logprob: -8.514086723327637
    8. '  
' → logprob: -8.764086723327637
    9. '' → logprob: -9.139086723327637
    10. '<|end|>' → logprob: -9.764086723327637

Token 44: ' Market' (ID: 14208)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2606520354747772
    2. ' Product' → logprob: -1.5106520652770996
    3. ' ' → logprob: -5.8856520652771
    4. ' User' → logprob: -6.6356520652771
    5. ' ‌' → logprob: -7.3856520652771
    6. ' Buyer' → logprob: -7.5106520652771
    7. 'Product' → logprob: -7.5106520652771
    8. ' ​' → logprob: -7.5106520652771
    9. ' Space' → logprob: -8.010651588439941
    10. ' Car' → logprob: -8.635651588439941

Token 45: 'Product' (ID: 4532)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01138861384242773
    2. '(' → logprob: -4.511388778686523
    3. ':
' → logprob: -8.636388778686523
    4. ' :' → logprob: -9.886388778686523
    5. '():' → logprob: -10.261388778686523
    6. '):' → logprob: -10.386388778686523
    7. '<|end|>' → logprob: -11.761388778686523
    8. '(object' → logprob: -12.011388778686523
    9. ')' → logprob: -12.511388778686523
    10. '.' → logprob: -12.511388778686523

Token 46: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1278679221868515
    2. ':' → logprob: -2.1278679370880127
    3. '(Product' → logprob: -7.627867698669434
    4. '(:' → logprob: -9.002867698669434
    5. ' :' → logprob: -9.252867698669434
    6. '(P' → logprob: -9.627867698669434
    7. '(object' → logprob: -10.752867698669434
    8. ')' → logprob: -11.002867698669434
    9. '):' → logprob: -11.502867698669434
    10. '(
' → logprob: -11.502867698669434

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1421041190624237
    2. '(' → logprob: -2.392104148864746
    3. '    ' → logprob: -4.642104148864746
    4. ' ' → logprob: -4.892104148864746
    5. ' (' → logprob: -5.017104148864746
    6. '    
' → logprob: -5.392104148864746
    7. ' 
' → logprob: -5.767104148864746
    8. ' def' → logprob: -6.142104148864746
    9. '  ' → logprob: -6.517104148864746
    10. 'def' → logprob: -7.267104148864746

Token 48: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.21230867505073547
    2. '   ' → logprob: -2.462308645248413
    3. ' ' → logprob: -3.587308645248413
    4. '(' → logprob: -3.837308645248413
    5. 'def' (adapté à ' def') → logprob: -3.962308645248413
    6. '    ' → logprob: -3.962308645248413
    7. ' (' → logprob: -4.212308883666992
    8. 'd' → logprob: -7.087308883666992
    9. ' d' → logprob: -7.837308883666992
    10. ' ```' → logprob: -7.837308883666992

Token 49: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.008006662130355835
    2. ' _' → logprob: -5.258006572723389
    3. ' ' → logprob: -6.883006572723389
    4. ' init' → logprob: -7.383006572723389
    5. '_' → logprob: -8.133007049560547
    6. ' ‌' → logprob: -8.133007049560547
    7. ' ' → logprob: -8.633007049560547
    8. '_init' → logprob: -9.258007049560547
    9. ' ```' → logprob: -9.633007049560547
    10. ' ___' → logprob: -9.633007049560547

Token 50: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.07624045014381409
    2. '_init' → logprob: -2.8262405395507812
    3. '_' → logprob: -4.576240539550781
    4. '__' → logprob: -6.201240539550781
    5. '_i' → logprob: -7.451240539550781
    6. 'def' → logprob: -8.076240539550781
    7. ' __' → logprob: -8.201240539550781
    8. '   ' → logprob: -8.576240539550781
    9. 'ini' → logprob: -8.826240539550781
    10. 'i' → logprob: -8.826240539550781

Token 51: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06558593362569809
    2. ' (' → logprob: -2.9405858516693115
    3. '(self' → logprob: -5.190586090087891
    4. '__(' → logprob: -5.815586090087891
    5. '<|end|>' → logprob: -6.690586090087891
    6. ' ' → logprob: -8.06558609008789
    7. '_' → logprob: -8.94058609008789
    8. '_(' → logprob: -9.44058609008789
    9. 'self' → logprob: -9.81558609008789
    10. '__(
' → logprob: -10.06558609008789

Token 52: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003267639840487391
    2. ' self' → logprob: -8.250327110290527
    3. ')' → logprob: -10.250327110290527
    4. 'product' → logprob: -11.625327110290527
    5. 'name' → logprob: -11.625327110290527
    6. 'se' → logprob: -12.625327110290527
    7. 'sel' → logprob: -12.625327110290527
    8. 'seller' → logprob: -14.000327110290527
    9. 's' → logprob: -14.125327110290527
    10. '       ' → logprob: -14.250327110290527

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10064731538295746
    2. ' ,' → logprob: -2.350647211074829
    3. ' ' → logprob: -8.47564697265625
    4. 'self' → logprob: -9.10064697265625
    5. ' self' → logprob: -9.85064697265625
    6. ' )' → logprob: -10.47564697265625
    7. ')' → logprob: -10.85064697265625
    8. ',self' → logprob: -11.97564697265625
    9. '_,' → logprob: -12.72564697265625
    10. '<|end|>' → logprob: -13.10064697265625

Token 54: ' product' (ID: 1888)
  Prédit: ' product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.17411796748638153
    2. 'product' → logprob: -2.4241180419921875
    3. ' p' → logprob: -3.4241180419921875
    4. ' name' → logprob: -4.2991180419921875
    5. ' )' → logprob: -4.6741180419921875
    6. 'name' → logprob: -4.9241180419921875
    7. 'p' → logprob: -6.4241180419921875
    8. ' market' → logprob: -6.5491180419921875
    9. ')' → logprob: -6.9241180419921875
    10. ' ' → logprob: -7.5491180419921875

Token 55: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.044715914875268936
    2. ':' → logprob: -3.2947158813476562
    3. '):' → logprob: -5.544715881347656
    4. ' ,' → logprob: -6.419715881347656
    5. ')' → logprob: -7.169715881347656
    6. ' ):' → logprob: -9.044715881347656
    7. ' )' → logprob: -9.919715881347656
    8. '_id' → logprob: -10.294715881347656
    9. '=' → logprob: -10.419715881347656
    10. ' :' → logprob: -10.544715881347656

Token 56: ' Product' (ID: 7451)
  Prédit: ' Product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Product' → logprob: -0.0015284325927495956
    2. 'Product' → logprob: -6.626528263092041
    3. ' product' → logprob: -9.0015287399292
    4. ' ' → logprob: -10.1265287399292
    5. '	Product' → logprob: -10.6265287399292
    6. ' )' → logprob: -11.8765287399292
    7. 'product' → logprob: -12.8765287399292
    8. ')' → logprob: -13.5015287399292
    9. '_Product' → logprob: -13.6265287399292
    10. '_product' → logprob: -14.0015287399292

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001580447657033801
    2. '):' → logprob: -6.501580238342285
    3. ')' → logprob: -9.876580238342285
    4. ' ,' → logprob: -10.876580238342285
    5. '   ' → logprob: -12.876580238342285
    6. '       ' → logprob: -13.376580238342285
    7. '):
' → logprob: -13.626580238342285
    8. ',
' → logprob: -14.126580238342285
    9. '),' → logprob: -14.751580238342285
    10. '‌,' → logprob: -15.376580238342285

Token 58: ' buy' (ID: 3877)
  Prédit: ' quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' quantity' → logprob: -0.16677644848823547
    2. ' amount' → logprob: -2.916776418685913
    3. ' price' → logprob: -3.166776418685913
    4. ' )' → logprob: -4.166776657104492
    5. 'quantity' → logprob: -4.541776657104492
    6. ' ' → logprob: -4.916776657104492
    7. ' market' → logprob: -4.916776657104492
    8. ' stock' → logprob: -5.541776657104492
    9. ' count' → logprob: -6.041776657104492
    10. ' available' → logprob: -6.541776657104492

Token 59: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.0012291580205783248
    2. '_' → logprob: -6.751229286193848
    3. 'ing' → logprob: -10.751229286193848
    4. 'er' → logprob: -12.001229286193848
    5. '_amount' → logprob: -12.126229286193848
    6. ' _' → logprob: -12.126229286193848
    7. '_p' → logprob: -12.251229286193848
    8. '_cost' → logprob: -12.251229286193848
    9. '_quantity' → logprob: -12.626229286193848
    10. 'ed' → logprob: -13.251229286193848

Token 60: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00741862878203392
    2. '=' → logprob: -5.382418632507324
    3. '):' → logprob: -6.007418632507324
    4. ')' → logprob: -9.007418632507324
    5. ',' → logprob: -9.257418632507324
    6. ' :' → logprob: -9.882418632507324
    7. ':int' → logprob: -10.132418632507324
    8. ' ):' → logprob: -11.007418632507324
    9. ':)' → logprob: -12.882418632507324
    10. '=None' → logprob: -14.132418632507324

Token 61: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.22688227891921997
    2. 'int' → logprob: -1.6018822193145752
    3. ' )' → logprob: -7.351882457733154
    4. ' ' → logprob: -7.601882457733154
    5. ')' → logprob: -8.976881980895996
    6. ':int' → logprob: -9.476881980895996
    7. '[int' → logprob: -10.101881980895996
    8. '=int' → logprob: -10.101881980895996
    9. '	int' → logprob: -11.726881980895996
    10. '<|end|>' → logprob: -12.101881980895996

Token 62: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1629437506198883
    2. ',' → logprob: -1.912943720817566
    3. ')' → logprob: -6.0379438400268555
    4. '):
' → logprob: -8.662943840026855
    5. ' ):' → logprob: -9.662943840026855
    6. ' ,' → logprob: -10.287943840026855
    7. '   ' → logprob: -10.662943840026855
    8. ':' → logprob: -11.287943840026855
    9. '       ' → logprob: -11.412943840026855
    10. '),' → logprob: -12.912943840026855

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019568251445889473
    2. '        ' → logprob: -7.751956939697266
    3. '    ' → logprob: -8.126956939697266
    4. 'self' → logprob: -8.126956939697266
    5. ' ' → logprob: -8.251956939697266
    6. '   ' → logprob: -8.501956939697266
    7. '      ' → logprob: -9.376956939697266
    8. ',' → logprob: -9.626956939697266
    9. '     ' → logprob: -9.626956939697266
    10. ')' → logprob: -10.126956939697266

Token 64: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7813553214073181
    2. 'self' (adapté à ' self') → logprob: -0.7813553214073181
    3. '       ' → logprob: -2.531355381011963
    4. ' ' → logprob: -6.031355381011963
    5. ' ' → logprob: -6.781355381011963
    6. '        ' → logprob: -6.906355381011963
    7. '   ' → logprob: -9.031354904174805
    8. '	self' → logprob: -9.531354904174805
    9. '    ' → logprob: -10.656354904174805
    10. '     ' → logprob: -10.781354904174805

Token 65: '.product' (ID: 21166)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005494141485542059
    2. '.product' → logprob: -5.630494117736816
    3. '.buy' → logprob: -6.755494117736816
    4. ' .' → logprob: -7.505494117736816
    5. '.b' → logprob: -10.255494117736816
    6. '.user' → logprob: -10.380494117736816
    7. ' ' → logprob: -10.755494117736816
    8. '.prod' → logprob: -10.880494117736816
    9. '.period' → logprob: -11.505494117736816
    10. '.purchase' → logprob: -11.630494117736816

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2167690098285675
    2. '=' → logprob: -2.216768980026245
    3. '.' → logprob: -2.466768980026245
    4. '.=' → logprob: -7.216769218444824
    5. ' .=' → logprob: -9.466769218444824
    6. ' =
' → logprob: -9.466769218444824
    7. '<|end|>' → logprob: -9.716769218444824
    8. ' ' → logprob: -9.966769218444824
    9. '_' → logprob: -11.341769218444824
    10. ' .' → logprob: -11.591769218444824

Token 67: ' product' (ID: 1888)
  Prédit: ' product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.0076967752538621426
    2. 'product' → logprob: -4.882696628570557
    3. ' ' → logprob: -9.382697105407715
    4. '	product' → logprob: -12.257697105407715
    5. ' ' → logprob: -14.257697105407715
    6. 'Product' → logprob: -15.007697105407715
    7. '_product' → logprob: -15.882697105407715
    8. '$product' → logprob: -16.0076961517334
    9. '.product' → logprob: -16.1326961517334
    10. '(product' → logprob: -16.6326961517334

Token 68: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017984284088015556
    2. '
' → logprob: -5.017984390258789
    3. 'self' → logprob: -5.267984390258789
    4. '        
' → logprob: -5.767984390258789
    5. '<|end|>' → logprob: -6.892984390258789
    6. ' 
' → logprob: -7.017984390258789
    7. ' self' → logprob: -8.517984390258789
    8. '    
' → logprob: -8.642984390258789
    9. '   ' → logprob: -8.767984390258789
    10. ',' → logprob: -9.017984390258789

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010476665571331978
    2. 'self' → logprob: -4.760476589202881
    3. '        
' → logprob: -7.135476589202881
    4. ' self' → logprob: -7.260476589202881
    5. ' 
' → logprob: -8.760477066040039
    6. '
' → logprob: -9.885477066040039
    7. '   ' → logprob: -10.260477066040039
    8. '	' → logprob: -11.010477066040039
    9. ' ' → logprob: -11.010477066040039
    10. '        ' → logprob: -11.385477066040039

Token 70: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.009312703274190426
    2. '       ' → logprob: -5.259312629699707
    3. ' self' → logprob: -5.509312629699707
    4. '        ' → logprob: -12.009312629699707
    5. ' ' → logprob: -12.384312629699707
    6. '   ' → logprob: -12.509312629699707
    7. '
' → logprob: -13.134312629699707
    8. '	self' → logprob: -13.634312629699707
    9. '        
' → logprob: -13.634312629699707
    10. '         ' → logprob: -14.384312629699707

Token 71: '.buy' (ID: 124387)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04875927418470383
    2. '.buy' → logprob: -3.0487592220306396
    3. '.b' → logprob: -8.923759460449219
    4. '.s' → logprob: -11.423759460449219
    5. ' .' → logprob: -11.548759460449219
    6. '.sell' → logprob: -12.798759460449219
    7. '.purchase' → logprob: -13.298759460449219
    8. '.user' → logprob: -13.548759460449219
    9. '.con' → logprob: -13.798759460449219
    10. '.sale' → logprob: -14.548759460449219

Token 72: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.0004388942907098681
    2. '_' → logprob: -7.750438690185547
    3. '_p' → logprob: -12.000438690185547
    4. '_prices' → logprob: -14.125438690185547
    5. ' _' → logprob: -14.625438690185547
    6. '_pr' → logprob: -14.875438690185547
    7. '_value' → logprob: -16.125438690185547
    8. '_place' → logprob: -17.000438690185547
    9. '_pi' → logprob: -17.250438690185547
    10. '_user' → logprob: -17.250438690185547

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020925104618073
    2. '=' → logprob: -2.3502092361450195
    3. ' ' → logprob: -13.60020923614502
    4. ' =
' → logprob: -13.85020923614502
    5. '<|end|>' → logprob: -15.47520923614502
    6. ' =)' → logprob: -16.975210189819336
    7. ')' → logprob: -17.725210189819336
    8. '=

' → logprob: -17.850210189819336
    9. 'space' → logprob: -17.975210189819336
    10. ' =
' → logprob: -18.600210189819336

Token 74: ' buy' (ID: 3877)
  Prédit: ' buy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' buy' → logprob: -0.0004883344518020749
    2. 'buy' → logprob: -7.62548828125
    3. ' ' → logprob: -15.62548828125
    4. '_buy' → logprob: -16.62548828125
    5. '.buy' → logprob: -17.00048828125
    6. ' bu' → logprob: -17.37548828125
    7. ' ' → logprob: -18.12548828125
    8. '買' → logprob: -18.37548828125
    9. 'Buy' → logprob: -18.50048828125
    10. ' buying' → logprob: -18.75048828125

Token 75: '_price' (ID: 18814)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5268360376358032
    2. '_price' → logprob: -0.9018360376358032
    3. '_p' → logprob: -6.276835918426514
    4. ' _' → logprob: -7.026835918426514
    5. 'r' → logprob: -8.526836395263672
    6. 't' → logprob: -8.776836395263672
    7. ' ' → logprob: -9.651836395263672
    8. '_
' → logprob: -9.651836395263672
    9. '_r' → logprob: -9.776836395263672
    10. 'n' → logprob: -9.776836395263672

Token 76: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024850351735949516
    2. '   ' → logprob: -4.149850368499756
    3. '    
' → logprob: -6.024850368499756
    4. '  
' → logprob: -6.524850368499756
    5. ' 
' → logprob: -6.649850368499756
    6. '<|end|>' → logprob: -6.774850368499756
    7. ' ' → logprob: -7.399850368499756
    8. ':' → logprob: -7.899850368499756
    9. ',' → logprob: -8.149849891662598
    10. '' → logprob: -8.274849891662598

Token 77: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07104149460792542
    2. '   ' → logprob: -3.0710415840148926
    3. '    
' → logprob: -4.821041584014893
    4. ' 
' → logprob: -5.071041584014893
    5. '  
' → logprob: -6.071041584014893
    6. ' ' → logprob: -6.446041584014893
    7. '' → logprob: -6.946041584014893
    8. '\n' → logprob: -7.446041584014893
    9. '   
' → logprob: -7.946041584014893
    10. ',' → logprob: -7.946041584014893

Token 78: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20531313121318817
    2. '   ' → logprob: -2.080313205718994
    3. 'def' → logprob: -3.955313205718994
    4. '    
' → logprob: -4.955313205718994
    5. ':' → logprob: -5.205313205718994
    6. ' 
' → logprob: -5.330313205718994
    7. ',' → logprob: -5.330313205718994
    8. ')' → logprob: -5.330313205718994
    9. ' ' → logprob: -5.455313205718994
    10. '  
' → logprob: -6.205313205718994

Token 79: '.pro' (ID: 3231)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0003335585934109986
    2. '.s' → logprob: -9.375333786010742
    3. '.price' → logprob: -10.125333786010742
    4. '._' → logprob: -10.250333786010742
    5. '.
' → logprob: -10.250333786010742
    6. ' .' → logprob: -10.375333786010742
    7. '.sell' → logprob: -10.625333786010742
    8. '.sale' → logprob: -11.250333786010742
    9. '.quantity' → logprob: -11.750333786010742
    10. '_' → logprob: -12.125333786010742

Token 80: 'fit' (ID: 8487)
  Prédit: 'fit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fit' → logprob: -0.10243937373161316
    2. 'f' → logprob: -2.3524394035339355
    3. 'fi' → logprob: -6.9774394035339355
    4. 'fits' → logprob: -7.7274394035339355
    5. 'p' → logprob: -7.8524394035339355
    6. 'd' → logprob: -8.852438926696777
    7. '```' → logprob: -9.852438926696777
    8. 'duct' → logprob: -9.977438926696777
    9. '' → logprob: -10.227438926696777
    10. '_fit' → logprob: -11.102438926696777

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2881947457790375
    2. '_' → logprob: -2.0381946563720703
    3. '=' → logprob: -2.1631946563720703
    4. ' ' → logprob: -5.28819465637207
    5. ' =
' → logprob: -10.28819465637207
    6. '.' → logprob: -10.91319465637207
    7. ' _' → logprob: -11.16319465637207
    8. '_space' → logprob: -11.28819465637207
    9. '_=' → logprob: -11.28819465637207
    10. 's' → logprob: -12.91319465637207

Token 82: ' product' (ID: 1888)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2647238075733185
    2. 'self' → logprob: -1.764723777770996
    3. ' buy' → logprob: -3.139723777770996
    4. ' sell' → logprob: -4.639723777770996
    5. 'buy' → logprob: -5.889723777770996
    6. 'sell' → logprob: -6.014723777770996
    7. ' product' → logprob: -6.264723777770996
    8. ' ' → logprob: -7.139723777770996
    9. ' max' → logprob: -8.889723777770996
    10. 'product' → logprob: -9.139723777770996

Token 83: '.sell' (ID: 178448)
  Prédit: '.sell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sell' → logprob: -0.04881899431347847
    2. '.' → logprob: -3.048819065093994
    3. 'sell' → logprob: -9.298818588256836
    4. '.
' → logprob: -10.173818588256836
    5. '.sel' → logprob: -10.298818588256836
    6. '.s' → logprob: -10.798818588256836
    7. '.buy' → logprob: -11.298818588256836
    8. '.se' → logprob: -12.048818588256836
    9. '.sale' → logprob: -12.048818588256836
    10. '_sell' → logprob: -12.798818588256836

Token 84: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.0007131471065804362
    2. '_' → logprob: -7.250713348388672
    3. '_profit' → logprob: -13.125713348388672
    4. '_p' → logprob: -14.250713348388672
    5. '_prices' → logprob: -16.125713348388672
    6. ' _' → logprob: -16.250713348388672
    7. '_value' → logprob: -16.375713348388672
    8. '_pr' → logprob: -17.125713348388672
    9. '_cost' → logprob: -17.375713348388672
    10. '_score' → logprob: -17.875713348388672

Token 85: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012567223981022835
    2. '-' → logprob: -4.387567043304443
    3. ' ' → logprob: -10.262567520141602
    4. ' -
' → logprob: -11.012567520141602
    5. ' ' → logprob: -12.137567520141602
    6. ' −' → logprob: -16.3875675201416
    7. '-
' → logprob: -16.3875675201416
    8. '<|end|>' → logprob: -16.3875675201416
    9. ' ­' → logprob: -16.7625675201416
    10. ' -

' → logprob: -17.1375675201416

Token 86: ' buy' (ID: 3877)
  Prédit: ' buy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' buy' → logprob: -0.4291395843029022
    2. 'buy' → logprob: -1.0541396141052246
    3. 'self' → logprob: -7.929139614105225
    4. ' self' → logprob: -9.679139137268066
    5. '   ' → logprob: -12.804139137268066
    6. ' ' → logprob: -12.804139137268066
    7. '_buy' → logprob: -13.054139137268066
    8. 'b' → logprob: -13.179139137268066
    9. 'bu' → logprob: -13.429139137268066
    10. '       ' → logprob: -13.929139137268066

Token 87: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -4.167648876318708e-05
    2. '_' → logprob: -11.000041961669922
    3. ' _' → logprob: -11.500041961669922
    4. '_pr' → logprob: -11.875041961669922
    5. '_p' → logprob: -12.000041961669922
    6. '_
' → logprob: -14.500041961669922
    7. 'price' → logprob: -14.875041961669922
    8. '__' → logprob: -16.250041961669922
    9. '_prices' → logprob: -16.625041961669922
    10. '   ' → logprob: -16.750041961669922

Token 88: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022490452975034714
    2. '<|end|>' → logprob: -4.272490501403809
    3. ' ' → logprob: -6.147490501403809
    4. ' 
' → logprob: -6.647490501403809
    5. '\n' → logprob: -6.897490501403809
    6. '' → logprob: -6.897490501403809
    7. '

' → logprob: -7.397490501403809
    8. '   ' → logprob: -7.772490501403809
    9. '  
' → logprob: -8.397490501403809
    10. 'n' → logprob: -8.522490501403809

Token 89: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04158737510442734
    2. 'd' → logprob: -4.7915873527526855
    3. '   ' → logprob: -4.9165873527526855
    4. ' ' → logprob: -5.2915873527526855
    5. 'def' → logprob: -5.7915873527526855
    6. ' 
' → logprob: -6.0415873527526855
    7. 'class' → logprob: -6.4165873527526855
    8. ')' → logprob: -6.5415873527526855
    9. ',' → logprob: -6.5415873527526855
    10. '    
' → logprob: -6.5415873527526855

Token 90: ' City' (ID: 5686)
  Prédit: ' Market'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Market' → logprob: -0.5660315155982971
    2. ' ' → logprob: -1.0660314559936523
    3. ' Product' → logprob: -2.5660314559936523
    4. ' ' → logprob: -5.316031455993652
    5. ' Space' → logprob: -6.066031455993652
    6. ' M' → logprob: -7.441031455993652
    7. ' Buyer' → logprob: -8.316031455993652
    8. '  ' → logprob: -8.441031455993652
    9. 'Market' → logprob: -8.691031455993652
    10. ' Marketplace' → logprob: -8.691031455993652

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003712085890583694
    2. '(' → logprob: -8.250370979309082
    3. '():' → logprob: -10.125370979309082
    4. ':
' → logprob: -10.500370979309082
    5. '):' → logprob: -11.375370979309082
    6. ' :' → logprob: -11.375370979309082
    7. '<|end|>' → logprob: -11.750370979309082
    8. ':**' → logprob: -13.625370979309082
    9. '>:' → logprob: -13.750370979309082
    10. '(object' → logprob: -13.875370979309082

Token 92: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.4589919149875641
    2. '   ' → logprob: -1.3339918851852417
    3. '    
' → logprob: -3.3339920043945312
    4. ' ' → logprob: -3.4589920043945312
    5. '  
' → logprob: -4.083992004394531
    6. '
' → logprob: -5.208992004394531
    7. '    ' → logprob: -5.458992004394531
    8. '     
' → logprob: -5.833992004394531
    9. '   
' → logprob: -6.208992004394531
    10. '<|end|>' → logprob: -6.708992004394531

Token 93: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.32371601462364197
    2. ' def' → logprob: -1.3237160444259644
    3. '   ' → logprob: -4.573716163635254
    4. 'de' → logprob: -9.948716163635254
    5. ' de' → logprob: -11.573716163635254
    6. '	def' → logprob: -11.823716163635254
    7. '    ' → logprob: -11.823716163635254
    8. 'd' → logprob: -12.573716163635254
    9. ' ' → logprob: -13.073716163635254
    10. 'class' → logprob: -14.073716163635254

Token 94: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00493664713576436
    2. ' ' → logprob: -6.004936695098877
    3. '_' → logprob: -6.754936695098877
    4. ' _' → logprob: -7.629936695098877
    5. '__' → logprob: -7.879936695098877
    6. ' ' → logprob: -8.004936218261719
    7. ' ‌' → logprob: -10.129936218261719
    8. ' ___' → logprob: -10.754936218261719
    9. '_init' → logprob: -11.629936218261719
    10. ' ▁' → logprob: -12.254936218261719

Token 95: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.08133558183908463
    2. '_init' → logprob: -2.9563355445861816
    3. '__' → logprob: -3.9563355445861816
    4. '_' → logprob: -5.081335544586182
    5. 'def' → logprob: -7.581335544586182
    6. 'class' → logprob: -9.58133602142334
    7. '_i' → logprob: -9.70633602142334
    8. 'i' → logprob: -9.83133602142334
    9. '_def' → logprob: -11.45633602142334
    10. 'ini' → logprob: -11.58133602142334

Token 96: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0006201040814630687
    2. '(self' → logprob: -8.375619888305664
    3. '__(
' → logprob: -8.875619888305664
    4. '__' → logprob: -8.875619888305664
    5. '_(' → logprob: -9.750619888305664
    6. '(' → logprob: -10.125619888305664
    7. '__((' → logprob: -12.375619888305664
    8. '_' → logprob: -13.125619888305664
    9. '<>(' → logprob: -13.875619888305664
    10. '<|end|>' → logprob: -13.875619888305664

Token 97: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00594372907653451
    2. ' self' → logprob: -5.130943775177002
    3. ')' → logprob: -12.005943298339844
    4. 'name' → logprob: -12.505943298339844
    5. ',' → logprob: -12.755943298339844
    6. '
' → logprob: -14.130943298339844
    7. ' ' → logprob: -14.630943298339844
    8. '	self' → logprob: -15.505943298339844
    9. '   ' → logprob: -15.630943298339844
    10. '       ' → logprob: -15.880943298339844

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007613017223775387
    2. ' ,' → logprob: -4.882613182067871
    3. 'self' → logprob: -13.007613182067871
    4. '‌,' → logprob: -13.382613182067871
    5. ')' → logprob: -13.882613182067871
    6. '<|end|>' → logprob: -14.132613182067871
    7. ',
' → logprob: -14.507613182067871
    8. ' ' → logprob: -15.132613182067871
    9. '_,' → logprob: -15.382613182067871
    10. ' self' → logprob: -16.132612228393555

Token 99: ' idx' (ID: 14016)
  Prédit: ' name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' name' → logprob: -0.06985684484243393
    2. 'name' → logprob: -3.194856882095337
    3. ' self' → logprob: -3.819856882095337
    4. 'self' → logprob: -5.444856643676758
    5. ' ' → logprob: -9.569856643676758
    6. ' )' → logprob: -10.069856643676758
    7. '   ' → logprob: -10.569856643676758
    8. ')' → logprob: -10.694856643676758
    9. ' city' → logprob: -10.694856643676758
    10. ' n' → logprob: -11.319856643676758

Token 100: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004860023036599159
    2. ':' → logprob: -5.504859924316406
    3. ' ,' → logprob: -7.629859924316406
    4. '):' → logprob: -8.629859924316406
    5. ')' → logprob: -9.129859924316406
    6. ':int' → logprob: -12.629859924316406
    7. ',
' → logprob: -13.504859924316406
    8. '‌,' → logprob: -14.129859924316406
    9. ' :' → logprob: -14.254859924316406
    10. '<|end|>' → logprob: -14.504859924316406

Token 101: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.31394046545028687
    2. 'int' → logprob: -1.3139405250549316
    3. ' str' → logprob: -7.813940525054932
    4. ')' → logprob: -9.438940048217773
    5. ' )' → logprob: -9.563940048217773
    6. 'str' → logprob: -10.313940048217773
    7. ' ' → logprob: -10.313940048217773
    8. '[int' → logprob: -11.313940048217773
    9. ',' → logprob: -11.438940048217773
    10. ',int' → logprob: -11.688940048217773

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001980570232262835
    2. ' ,' → logprob: -8.750198364257812
    3. '):' → logprob: -10.250198364257812
    4. ')' → logprob: -13.750198364257812
    5. ',
' → logprob: -14.125198364257812
    6. '<|end|>' → logprob: -14.500198364257812
    7. '‌,' → logprob: -14.500198364257812
    8. '       ' → logprob: -14.750198364257812
    9. '   ' → logprob: -15.000198364257812
    10. ' ):' → logprob: -15.625198364257812

Token 103: ' x' (ID: 1215)
  Prédit: ' name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' name' → logprob: -0.1305924355983734
    2. 'name' → logprob: -2.3805923461914062
    3. ' products' → logprob: -3.8805923461914062
    4. 'products' → logprob: -5.505592346191406
    5. ' market' → logprob: -6.505592346191406
    6. ' product' → logprob: -6.630592346191406
    7. ' markets' → logprob: -7.630592346191406
    8. ' population' → logprob: -8.005592346191406
    9. ' ' → logprob: -8.630592346191406
    10. ')' → logprob: -8.755592346191406

Token 104: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07959570735692978
    2. ',' → logprob: -2.5795958042144775
    3. ':int' → logprob: -7.954595565795898
    4. '<|end|>' → logprob: -8.454595565795898
    5. ')' → logprob: -9.704595565795898
    6. '):' → logprob: -10.079595565795898
    7. '=' → logprob: -11.079595565795898
    8. '<|end|>' → logprob: -12.204595565795898
    9. '_coordinates' → logprob: -12.329595565795898
    10. ' :' → logprob: -12.954595565795898

Token 105: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4749917685985565
    2. ' int' → logprob: -0.9749917984008789
    3. ' float' → logprob: -7.474991798400879
    4. 'float' → logprob: -8.224991798400879
    5. '[int' → logprob: -10.474991798400879
    6. ':int' → logprob: -10.849991798400879
    7. '	int' → logprob: -11.724991798400879
    8. '<|end|>' → logprob: -11.849991798400879
    9. ' ' → logprob: -12.474991798400879
    10. '=int' → logprob: -12.724991798400879

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024096618872135878
    2. ':' → logprob: -6.1274094581604
    3. ' ,' → logprob: -8.627409934997559
    4. '):' → logprob: -10.752409934997559
    5. ':int' → logprob: -11.377409934997559
    6. ')' → logprob: -11.752409934997559
    7. ',int' → logprob: -13.002409934997559
    8. '   ' → logprob: -14.627409934997559
    9. '‌,' → logprob: -14.877409934997559
    10. ',y' → logprob: -15.002409934997559

Token 107: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.31327077746391296
    2. 'y' → logprob: -1.3132708072662354
    3. '<|end|>' → logprob: -12.063270568847656
    4. ' ' → logprob: -13.063270568847656
    5. ' ' → logprob: -14.563270568847656
    6. '<|end|>' → logprob: -15.063270568847656
    7. '	y' → logprob: -15.188270568847656
    8. ' ‌' → logprob: -16.563270568847656
    9. '    ' → logprob: -17.063270568847656
    10. ',' → logprob: -17.688270568847656

Token 108: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01921280100941658
    2. '):' → logprob: -4.01921272277832
    3. ')' → logprob: -7.51921272277832
    4. ':int' → logprob: -7.64421272277832
    5. ' :' → logprob: -11.14421272277832
    6. '):
' → logprob: -11.76921272277832
    7. ',' → logprob: -11.89421272277832
    8. ' ):' → logprob: -12.26921272277832
    9. '>:' → logprob: -12.76921272277832
    10. '}:' → logprob: -14.14421272277832

Token 109: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5760289430618286
    2. 'int' → logprob: -0.8260289430618286
    3. '	int' → logprob: -10.701028823852539
    4. ')' → logprob: -10.826028823852539
    5. ':int' → logprob: -10.826028823852539
    6. '[int' → logprob: -12.076028823852539
    7. ',int' → logprob: -12.451028823852539
    8. '(int' → logprob: -12.701028823852539
    9. ']int' → logprob: -12.701028823852539
    10. '=int' → logprob: -12.951028823852539

Token 110: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009293452836573124
    2. ')' → logprob: -5.134293556213379
    3. ',' → logprob: -5.759293556213379
    4. '):
' → logprob: -9.134293556213379
    5. ':' → logprob: -9.634293556213379
    6. ' ):' → logprob: -11.009293556213379
    7. '   ' → logprob: -11.384293556213379
    8. '       ' → logprob: -14.009293556213379
    9. '),' → logprob: -14.134293556213379
    10. ' ,' → logprob: -14.259293556213379

Token 111: ' market' (ID: 2910)
  Prédit: ' products'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' products' → logprob: -0.5599828958511353
    2. ' market' → logprob: -1.8099828958511353
    3. ' name' → logprob: -2.4349827766418457
    4. ' markets' → logprob: -2.8099827766418457
    5. 'products' → logprob: -3.6849827766418457
    6. ' product' → logprob: -4.309982776641846
    7. ' goods' → logprob: -4.684982776641846
    8. ' items' → logprob: -4.934982776641846
    9. ' population' → logprob: -5.247482776641846
    10. 'name' → logprob: -5.309982776641846

Token 112: '_products' (ID: 68048)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25305142998695374
    2. '_products' → logprob: -1.7530514001846313
    3. '):' → logprob: -3.753051519393921
    4. 's' → logprob: -4.128051280975342
    5. '_' → logprob: -5.253051280975342
    6. '_pro' → logprob: -6.503051280975342
    7. '_:' → logprob: -6.753051280975342
    8. '_product' → logprob: -7.253051280975342
    9. '_prices' → logprob: -7.253051280975342
    10. 'products' → logprob: -8.0030517578125

Token 113: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20289087295532227
    2. '):' → logprob: -1.7028908729553223
    3. ')' → logprob: -6.702890872955322
    4. ',' → logprob: -9.327890396118164
    5. ' ):' → logprob: -9.577890396118164
    6. ' :' → logprob: -10.327890396118164
    7. '):
' → logprob: -10.952890396118164
    8. ':list' → logprob: -11.202890396118164
    9. '=None' → logprob: -12.452890396118164
    10. ']:' → logprob: -12.577890396118164

Token 114: ' list' (ID: 1562)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.744735062122345
    2. 'list' → logprob: -1.9947350025177002
    3. ' list' → logprob: -1.9947350025177002
    4. ' List' → logprob: -2.4947350025177
    5. 'dict' → logprob: -3.3697350025177
    6. '[List' → logprob: -3.6197350025177
    7. ' dict' → logprob: -3.8697350025177
    8. ')' → logprob: -4.244735240936279
    9. '):' → logprob: -4.619735240936279
    10. '[' → logprob: -4.744735240936279

Token 115: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009304436855018139
    2. ')' → logprob: -5.509304523468018
    3. '[' → logprob: -5.759304523468018
    4. ':' → logprob: -6.884304523468018
    5. '[int' → logprob: -7.134304523468018
    6. '):
' → logprob: -8.75930404663086
    7. ' ):' → logprob: -10.75930404663086
    8. ',' → logprob: -11.25930404663086
    9. ' ' → logprob: -11.50930404663086
    10. '[list' → logprob: -11.50930404663086

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08241520822048187
    2. '<|end|>' → logprob: -3.7074151039123535
    3. '
' → logprob: -3.8324151039123535
    4. '   ' → logprob: -4.7074151039123535
    5. ' ' → logprob: -5.2074151039123535
    6. '        
' → logprob: -5.4574151039123535
    7. '    ' → logprob: -5.5824151039123535
    8. ' 
' → logprob: -5.9574151039123535
    9. ')' → logprob: -6.2074151039123535
    10. '    
' → logprob: -6.4574151039123535

Token 117: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006327147129923105
    2. ' self' → logprob: -5.506327152252197
    3. '       ' → logprob: -6.131327152252197
    4. '   ' → logprob: -10.631326675415039
    5. 'super' → logprob: -10.631326675415039
    6. ' ' → logprob: -11.131326675415039
    7. '	self' → logprob: -11.881326675415039
    8. '  ' → logprob: -14.631326675415039
    9. '        
' → logprob: -14.881326675415039
    10. '     ' → logprob: -15.131326675415039

Token 118: '.idx' (ID: 119077)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01307940948754549
    2. '.idx' → logprob: -4.388079643249512
    3. '.id' → logprob: -8.013079643249512
    4. ' .' → logprob: -9.013079643249512
    5. '.i' → logprob: -10.013079643249512
    6. '.x' → logprob: -10.763079643249512
    7. '.name' → logprob: -11.388079643249512
    8. ' ' → logprob: -11.638079643249512
    9. '.index' → logprob: -12.138079643249512
    10. '<|end|>' → logprob: -12.638079643249512

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20184928178787231
    2. '=' → logprob: -1.7018492221832275
    3. '<|end|>' → logprob: -8.076848983764648
    4. ' ' → logprob: -9.951848983764648
    5. ',' → logprob: -10.076848983764648
    6. '<|end|>' → logprob: -11.576848983764648
    7. ' =
' → logprob: -11.826848983764648
    8. '=int' → logprob: -12.076848983764648
    9. ')' → logprob: -12.201848983764648
    10. ':' → logprob: -12.326848983764648

Token 120: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.026353362947702408
    2. 'idx' → logprob: -3.651353359222412
    3. ' ' → logprob: -10.52635383605957
    4. '	idx' → logprob: -10.65135383605957
    5. '(idx' → logprob: -13.77635383605957
    6. ' ' → logprob: -14.52635383605957
    7. '_idx' → logprob: -15.27635383605957
    8. '[idx' → logprob: -15.40135383605957
    9. '.idx' → logprob: -16.02635383605957
    10. ' 
' → logprob: -16.52635383605957

Token 121: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5500698089599609
    2. '<|end|>' → logprob: -1.300069808959961
    3. ' 
' → logprob: -2.175069808959961
    4. '       ' → logprob: -4.175069808959961
    5. ' x' → logprob: -5.175069808959961
    6. ' self' → logprob: -5.425069808959961
    7. '
' → logprob: -6.175069808959961
    8. 'x' → logprob: -6.175069808959961
    9. '  
' → logprob: -6.425069808959961
    10. 'self' → logprob: -6.675069808959961

Token 123: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0731082335114479
    2. ' self' → logprob: -3.198108196258545
    3. 'x' → logprob: -3.573108196258545
    4. ' x' → logprob: -6.448108196258545
    5. '       ' → logprob: -12.823108673095703
    6. '	self' → logprob: -13.698108673095703
    7. ' ' → logprob: -13.948108673095703
    8. '
' → logprob: -14.073108673095703
    9. 's' → logprob: -14.323108673095703
    10. ' 
' → logprob: -14.573108673095703

Token 124: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08160172402858734
    2. '.x' → logprob: -2.581601619720459
    3. ' .' → logprob: -7.206601619720459
    4. ' ' → logprob: -7.456601619720459
    5. ' x' → logprob: -7.956601619720459
    6. 'x' → logprob: -8.206602096557617
    7. ' =' → logprob: -8.331602096557617
    8. ',' → logprob: -8.331602096557617
    9. '.
' → logprob: -10.206602096557617
    10. '._' → logprob: -10.706602096557617

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21386635303497314
    2. '=' → logprob: -1.7138663530349731
    3. '<|end|>' → logprob: -4.838866233825684
    4. ',' → logprob: -5.463866233825684
    5. ' ' → logprob: -8.713866233825684
    6. ' ,' → logprob: -10.588866233825684
    7. '<|end|>' → logprob: -11.463866233825684
    8. ' =
' → logprob: -11.713866233825684
    9. ')' → logprob: -11.838866233825684
    10. ':' → logprob: -13.588866233825684

Token 126: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4979385435581207
    2. ' y' → logprob: -1.4979385137557983
    3. 'x' → logprob: -1.8729385137557983
    4. 'y' → logprob: -4.747938632965088
    5. ' ' → logprob: -5.122938632965088
    6. '<|end|>' → logprob: -8.24793815612793
    7. ' ' → logprob: -10.62293815612793
    8. '<|end|>' → logprob: -11.24793815612793
    9. '	x' → logprob: -12.87293815612793
    10. ' ‌' → logprob: -12.87293815612793

Token 127: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 128: '       ' (ID: 309)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.22313639521598816
    2. 'self' → logprob: -2.0981364250183105
    3. ' y' → logprob: -3.4731364250183105
    4. ' ' → logprob: -3.9731364250183105
    5. 'y' → logprob: -4.3481364250183105
    6. ' ' → logprob: -4.8481364250183105
    7. '       ' → logprob: -5.7231364250183105
    8. '<|end|>' → logprob: -6.3481364250183105
    9. '        ' → logprob: -7.0981364250183105
    10. ' 
' → logprob: -8.223135948181152

Token 129: ' self' (ID: 1051)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.018499204888939857
    2. ' y' → logprob: -4.518499374389648
    3. 'self' (adapté à ' self') → logprob: -5.018499374389648
    4. ' self' → logprob: -7.143499374389648
    5. '       ' → logprob: -11.393499374389648
    6. '<|end|>' → logprob: -12.393499374389648
    7. '
' → logprob: -13.393499374389648
    8. ' ' → logprob: -14.143499374389648
    9. '	y' → logprob: -15.018499374389648
    10. '   ' → logprob: -15.393499374389648

Token 130: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.7357503175735474
    2. '=' → logprob: -0.8607503175735474
    3. ' =' → logprob: -2.735750198364258
    4. '.y' → logprob: -3.735750198364258
    5. '.' → logprob: -5.360750198364258
    6. ' y' → logprob: -6.110750198364258
    7. '<|end|>' → logprob: -6.610750198364258
    8. ',' → logprob: -7.360750198364258
    9. ' ' → logprob: -8.735750198364258
    10. ')' → logprob: -10.485750198364258

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.032323677092790604
    2. '=' → logprob: -3.5323235988616943
    3. '<|end|>' → logprob: -6.032323837280273
    4. ' ' → logprob: -9.407323837280273
    5. '<|end|>' → logprob: -9.657323837280273
    6. ' =
' → logprob: -11.032323837280273
    7. ',' → logprob: -12.532323837280273
    8. ')' → logprob: -13.657323837280273
    9. ' =)' → logprob: -14.032323837280273
    10. '=
' → logprob: -15.407323837280273

Token 132: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.020544573664665222
    2. 'y' → logprob: -3.8955445289611816
    3. ' ' → logprob: -13.27054500579834
    4. '	y' → logprob: -14.52054500579834
    5. '<|end|>' → logprob: -15.27054500579834
    6. ' ' → logprob: -15.64554500579834
    7. ')y' → logprob: -17.395544052124023
    8. ' 
' → logprob: -17.395544052124023
    9. ' x' → logprob: -17.895544052124023
    10. '```' → logprob: -17.895544052124023

Token 133: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005369475693441927
    2. 'self' → logprob: -7.625536918640137
    3. ' self' → logprob: -10.250536918640137
    4. '   ' → logprob: -12.125536918640137
    5. '	' → logprob: -12.750536918640137
    6. '	self' → logprob: -13.625536918640137
    7. ',' → logprob: -14.500536918640137
    8. '
' → logprob: -14.750536918640137
    9. '      ' → logprob: -14.750536918640137
    10. 'market' → logprob: -15.000536918640137

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01017026137560606
    2. ' self' → logprob: -4.8851704597473145
    3. 'self' → logprob: -6.0101704597473145
    4. '   ' → logprob: -10.635169982910156
    5. ' ' → logprob: -11.260169982910156
    6. '	self' → logprob: -11.385169982910156
    7. '
' → logprob: -11.510169982910156
    8. '      ' → logprob: -11.760169982910156
    9. '	' → logprob: -11.760169982910156
    10. '```' → logprob: -12.385169982910156

Token 135: ' self' (ID: 1051)
  Prédit: 'market'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'market' → logprob: -0.0019170953892171383
    2. ' market' → logprob: -6.376916885375977
    3. 'self' (adapté à ' self') → logprob: -8.501916885375977
    4. '
' → logprob: -12.626916885375977
    5. 'm' → logprob: -12.876916885375977
    6. '       ' → logprob: -13.501916885375977
    7. 'mark' → logprob: -13.751916885375977
    8. ' self' → logprob: -13.751916885375977
    9. '   ' → logprob: -14.251916885375977
    10. ' ' → logprob: -14.376916885375977

Token 136: '.market' (ID: 120386)
  Prédit: '.market'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.market' → logprob: -0.14057442545890808
    2. '.' → logprob: -2.1405744552612305
    3. 'market' → logprob: -5.1405744552612305
    4. ' .' → logprob: -5.1405744552612305
    5. '_market' → logprob: -7.2655744552612305
    6. ' market' → logprob: -7.8905744552612305
    7. '.
' → logprob: -8.01557445526123
    8. '.mark' → logprob: -8.76557445526123
    9. '.products' → logprob: -9.64057445526123
    10. '
' → logprob: -10.01557445526123

Token 137: '_products' (ID: 68048)
  Prédit: '_products'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_products' → logprob: -0.0005670914542861283
    2. '_' → logprob: -7.5005669593811035
    3. '_product' → logprob: -11.625567436218262
    4. '_pro' → logprob: -12.625567436218262
    5. '_
' → logprob: -14.875567436218262
    6. '_PRODUCTS' → logprob: -15.000567436218262
    7. '_items' → logprob: -15.500567436218262
    8. '_prices' → logprob: -15.625567436218262
    9. ' _' → logprob: -16.000566482543945
    10. '_particles' → logprob: -16.500566482543945

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17975258827209473
    2. '=' → logprob: -1.8047525882720947
    3. ' ' → logprob: -12.929752349853516
    4. '<|end|>' → logprob: -12.929752349853516
    5. ')' → logprob: -13.679752349853516
    6. '.' → logprob: -14.304752349853516
    7. ' =
' → logprob: -15.429752349853516
    8. ',' → logprob: -15.929752349853516
    9. '[' → logprob: -16.304752349853516
    10. '=list' → logprob: -16.554752349853516

Token 139: ' market' (ID: 2910)
  Prédit: ' market'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' market' → logprob: -0.055071279406547546
    2. 'market' → logprob: -2.9300713539123535
    3. ' []' → logprob: -8.930070877075195
    4. '[]' → logprob: -10.180070877075195
    5. ' list' → logprob: -12.430070877075195
    6. ' ' → logprob: -13.055070877075195
    7. '_market' → logprob: -13.305070877075195
    8. '[' → logprob: -13.680070877075195
    9. ' marketplace' → logprob: -13.805070877075195
    10. ' [' → logprob: -13.805070877075195

Token 140: '_products' (ID: 68048)
  Prédit: '_products'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_products' → logprob: -0.00025978617486543953
    2. '_' → logprob: -8.625259399414062
    3. '_pro' → logprob: -10.500259399414062
    4. '_product' → logprob: -10.875259399414062
    5. 'products' → logprob: -11.125259399414062
    6. 's' → logprob: -11.500259399414062
    7. ' _' → logprob: -12.625259399414062
    8. '_PRODUCTS' → logprob: -13.375259399414062
    9. 'Products' → logprob: -13.875259399414062
    10. 'ed' → logprob: -14.250259399414062

Token 141: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011816701851785183
    2. '<|end|>' → logprob: -4.886816501617432
    3. '

' → logprob: -5.636816501617432
    4. 'def' → logprob: -8.26181697845459
    5. '   ' → logprob: -8.88681697845459
    6. '<|end|>' → logprob: -9.51181697845459
    7. '
    
' → logprob: -9.63681697845459
    8. '    
' → logprob: -10.26181697845459
    9. ' def' → logprob: -10.76181697845459
    10. '
' → logprob: -11.63681697845459

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45338174700737
    2. 'def' → logprob: -1.2033817768096924
    3. '
' → logprob: -3.0783817768096924
    4. 'class' → logprob: -5.078381538391113
    5. '    
' → logprob: -5.453381538391113
    6. ' def' → logprob: -5.578381538391113
    7. ' 
' → logprob: -7.078381538391113
    8. 'd' → logprob: -7.453381538391113
    9. '```' → logprob: -7.453381538391113
    10. ' ' → logprob: -8.328381538391113

Token 143: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0005436192732304335
    2. 'd' → logprob: -8.375543594360352
    3. ' def' → logprob: -8.625543594360352
    4. '   ' → logprob: -9.625543594360352
    5. 'de' → logprob: -10.000543594360352
    6. '@' → logprob: -12.000543594360352
    7. ')' → logprob: -12.625543594360352
    8. '@property' → logprob: -12.625543594360352
    9. ' ' → logprob: -12.750543594360352
    10. '    
' → logprob: -13.000543594360352

Token 144: ' distance' (ID: 9324)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04179535433650017
    2. ' ' → logprob: -3.666795253753662
    3. ' _' → logprob: -5.541795253753662
    4. ' get' → logprob: -5.666795253753662
    5. ' distance' → logprob: -5.791795253753662
    6. ' calculate' → logprob: -6.541795253753662
    7. ' add' → logprob: -6.666795253753662
    8. '_distance' → logprob: -7.541795253753662
    9. ' space' → logprob: -8.04179573059082
    10. ' ' → logprob: -8.79179573059082

Token 145: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.08469928056001663
    2. '(self' → logprob: -2.5846993923187256
    3. '_' → logprob: -5.8346991539001465
    4. '(' → logprob: -5.9596991539001465
    5. 'To' → logprob: -9.209699630737305
    6. '_(' → logprob: -9.459699630737305
    7. 'to' → logprob: -9.959699630737305
    8. '_from' → logprob: -11.084699630737305
    9. '_self' → logprob: -11.459699630737305
    10. 'self' → logprob: -11.709699630737305

Token 146: '_market' (ID: 165999)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.009822086431086063
    2. '(' → logprob: -4.634821891784668
    3. '<|end|>' → logprob: -10.009821891784668
    4. '(other' → logprob: -11.759821891784668
    5. '(
' → logprob: -12.009821891784668
    6. ' (' → logprob: -12.509821891784668
    7. '(s' → logprob: -13.884821891784668
    8. '(city' → logprob: -14.259821891784668
    9. 'self' → logprob: -14.884821891784668
    10. '```' → logprob: -15.384821891784668

Token 147: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.010243412107229233
    2. '(' → logprob: -4.6352434158325195
    3. '_' → logprob: -8.26024341583252
    4. '_product' → logprob: -9.01024341583252
    5. '(s' → logprob: -10.51024341583252
    6. '_city' → logprob: -10.76024341583252
    7. 'self' → logprob: -11.13524341583252
    8. 's' → logprob: -11.88524341583252
    9. '(
' → logprob: -12.13524341583252
    10. ' (' → logprob: -12.26024341583252

Token 148: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -9.078839502763003e-05
    2. '(self' → logprob: -10.375090599060059
    3. ' ,' → logprob: -11.125090599060059
    4. 'self' → logprob: -11.375090599060059
    5. '_market' → logprob: -11.625090599060059
    6. 'market' → logprob: -12.500090599060059
    7. ',
' → logprob: -12.750090599060059
    8. 's' → logprob: -13.000090599060059
    9. '1' → logprob: -13.125090599060059
    10. '_,' → logprob: -13.375090599060059

Token 149: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06226959824562073
    2. '(' → logprob: -2.812269687652588
    3. '(
' → logprob: -8.81226921081543
    4. ' (' → logprob: -9.56226921081543
    5. 'self' → logprob: -10.31226921081543
    6. '(s' → logprob: -10.31226921081543
    7. 's' → logprob: -13.31226921081543
    8. '(

' → logprob: -13.31226921081543
    9. '(sel' → logprob: -13.56226921081543
    10. '()' → logprob: -14.06226921081543

Token 150: ' int' (ID: 677)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.39777785539627075
    2. ' int' → logprob: -1.272777795791626
    3. 'float' → logprob: -3.897777795791626
    4. ' City' → logprob: -4.147778034210205
    5. 'int' → logprob: -4.647778034210205
    6. ' self' → logprob: -6.647778034210205
    7. ' ' → logprob: -7.272778034210205
    8. 'self' → logprob: -9.147777557373047
    9. 'City' → logprob: -9.647777557373047
    10. ' '' → logprob: -10.147777557373047

Token 151: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33958619832992554
    2. '(self' → logprob: -1.3395862579345703
    3. ':' → logprob: -3.9645862579345703
    4. '_' → logprob: -5.83958625793457
    5. '(
' → logprob: -6.08958625793457
    6. '(s' → logprob: -7.58958625793457
    7. '():' → logprob: -8.33958625793457
    8. 'self' → logprob: -8.46458625793457
    9. 's' → logprob: -8.58958625793457
    10. ',' → logprob: -8.96458625793457

Token 152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13028596341609955
    2. ' return' → logprob: -2.5052859783172607
    3. 'return' → logprob: -4.005285739898682
    4. '    ' → logprob: -4.880285739898682
    5. 'abs' → logprob: -5.130285739898682
    6. ' abs' → logprob: -5.505285739898682
    7. '        ' → logprob: -6.630285739898682
    8. '0' → logprob: -6.755285739898682
    9. '   ' → logprob: -7.380285739898682
    10. '      ' → logprob: -7.880285739898682

Token 153: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5423204898834229
    2. '0' → logprob: -1.0423204898834229
    3. 'abs' → logprob: -3.042320489883423
    4. '       ' → logprob: -5.042320251464844
    5. '   ' → logprob: -5.917320251464844
    6. ' return' → logprob: -6.292320251464844
    7. 'ret' → logprob: -6.417320251464844
    8. 'self' → logprob: -6.417320251464844
    9. 'raise' → logprob: -7.042320251464844
    10. 'import' → logprob: -7.292320251464844

Token 154: ' Manhattan' (ID: 47130)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2938995361328125
    2. ' return' → logprob: -2.1688995361328125
    3. '0' → logprob: -3.5438995361328125
    4. 'import' → logprob: -3.7938995361328125
    5. 'abs' → logprob: -4.1688995361328125
    6. 'pass' → logprob: -4.5438995361328125
    7. ' pass' → logprob: -4.7938995361328125
    8. 'self' → logprob: -5.2938995361328125
    9. ' self' → logprob: -5.4188995361328125
    10. 'raise' → logprob: -5.4188995361328125

Token 155: ' distance' (ID: 9324)
  Prédit: '_distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.2182541936635971
    2. ' distance' → logprob: -2.8432540893554688
    3. 'Distance' → logprob: -3.0932540893554688
    4. ' return' → logprob: -3.3432540893554688
    5. 'distance' → logprob: -3.4682540893554688
    6. '_' → logprob: -4.843254089355469
    7. '_dist' → logprob: -5.468254089355469
    8. '   ' → logprob: -5.843254089355469
    9. ' ' → logprob: -5.968254089355469
    10. 'return' → logprob: -6.468254089355469

Token 156: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8411131501197815
    2. ' return' → logprob: -1.2161130905151367
    3. 'return' → logprob: -2.0911130905151367
    4. '   ' → logprob: -2.4661130905151367
    5. ' (' → logprob: -4.466113090515137
    6. ':' → logprob: -4.966113090515137
    7. ' ' → logprob: -4.966113090515137
    8. '(' → logprob: -5.091113090515137
    9. ',' → logprob: -5.466113090515137
    10. ' x' → logprob: -5.466113090515137

Token 157: ' market' (ID: 2910)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1183726787567139
    2. '(' → logprob: -1.3683726787567139
    3. '0' → logprob: -1.8683726787567139
    4. 'other' → logprob: -2.993372678756714
    5. ' origin' → logprob: -3.118372678756714
    6. 'origin' → logprob: -3.118372678756714
    7. ' (' → logprob: -3.368372678756714
    8. 'the' → logprob: -3.368372678756714
    9. 'another' → logprob: -3.868372678756714
    10. ' self' → logprob: -4.493372917175293

Token 158: ' at' (ID: 540)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.2156070470809937
    2. ' (' → logprob: -1.7156070470809937
    3. ' return' → logprob: -1.8406070470809937
    4. 'return' → logprob: -2.465607166290283
    5. '       ' → logprob: -2.715607166290283
    6. 'self' → logprob: -2.715607166290283
    7. ' self' → logprob: -3.090607166290283
    8. '(' → logprob: -3.340607166290283
    9. '   ' → logprob: -3.465607166290283
    10. 'def' → logprob: -5.340607166290283

Token 159: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1494174301624298
    2. ' ' → logprob: -2.0244174003601074
    3. '(' → logprob: -5.649417400360107
    4. ' (' → logprob: -5.899417400360107
    5. ' origin' → logprob: -8.024417877197266
    6. 'origin' → logprob: -10.149417877197266
    7. ' x' → logprob: -10.399417877197266
    8. 'x' → logprob: -11.274417877197266
    9. '   ' → logprob: -11.899417877197266
    10. '10' → logprob: -12.024417877197266

Token 160: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10035472363233566
    2. ' ' → logprob: -2.3503546714782715
    3. '100' → logprob: -9.85035514831543
    4. '10' → logprob: -10.47535514831543
    5. '50' → logprob: -10.60035514831543
    6. '1' → logprob: -12.03785514831543
    7. '5' → logprob: -12.28785514831543
    8. '500' → logprob: -12.53785514831543
    9. '20' → logprob: -13.16285514831543
    10. '250' → logprob: -13.28785514831543

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018625585653353482
    2. ' ,' → logprob: -8.7501859664917
    3. ',
' → logprob: -10.8751859664917
    4. '0' → logprob: -12.1251859664917
    5. ')' → logprob: -13.5001859664917
    6. '
' → logprob: -14.3751859664917
    7. ',

' → logprob: -14.6251859664917
    8. ',)' → logprob: -15.2501859664917
    9. ' ' → logprob: -15.5001859664917
    10. '

' → logprob: -15.7501859664917

Token 162: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01815064437687397
    2. ' ' → logprob: -4.018150806427002
    3. ')' → logprob: -15.268150329589844
    4. '   ' → logprob: -15.268150329589844
    5. '
' → logprob: -16.518150329589844
    6. '  ' → logprob: -16.643150329589844
    7. '    ' → logprob: -17.018150329589844
    8. ' ' → logprob: -17.143150329589844
    9. '	' → logprob: -18.393150329589844
    10. ',' → logprob: -19.143150329589844

Token 163: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018640203401446342
    2. '):' → logprob: -4.018640041351318
    3. '):
' → logprob: -8.143640518188477
    4. ')
' → logprob: -9.018640518188477
    5. '       ' → logprob: -10.393640518188477
    6. ' )' → logprob: -10.768640518188477
    7. '   ' → logprob: -12.143640518188477
    8. ')return' → logprob: -12.518640518188477
    9. ':' → logprob: -12.768640518188477
    10. '):

' → logprob: -12.893640518188477

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01595037616789341
    2. '
' → logprob: -4.3909502029418945
    3. 'return' → logprob: -6.3909502029418945
    4. '        
' → logprob: -7.0159502029418945
    5. ' return' → logprob: -7.6409502029418945
    6. '   ' → logprob: -9.015950202941895
    7. ' 
' → logprob: -10.015950202941895
    8. '  
' → logprob: -10.140950202941895
    9. '```' → logprob: -10.515950202941895
    10. '' → logprob: -10.515950202941895

Token 165: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.030535047873854637
    2. ' return' → logprob: -3.5305349826812744
    3. '       ' → logprob: -7.1555352210998535
    4. '	return' → logprob: -13.530534744262695
    5. '
' → logprob: -14.030534744262695
    6. '        
' → logprob: -14.280534744262695
    7. '   ' → logprob: -15.280534744262695
    8. 'eturn' → logprob: -15.655534744262695
    9. '        ' → logprob: -16.405534744262695
    10. 'ret' → logprob: -16.405534744262695

Token 166: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.08524305373430252
    2. 'abs' → logprob: -2.585242986679077
    3. ' self' → logprob: -5.585243225097656
    4. 'self' → logprob: -5.960243225097656
    5. '(abs' → logprob: -13.960243225097656
    6. '	self' → logprob: -16.710243225097656
    7. '.abs' → logprob: -17.460243225097656
    8. '   ' → logprob: -17.585243225097656
    9. ' ' → logprob: -17.835243225097656
    10. '_abs' → logprob: -18.335243225097656

Token 167: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00033581978641450405
    2. '(' → logprob: -8.000335693359375
    3. '(s' → logprob: -15.375335693359375
    4. '(
' → logprob: -16.750335693359375
    5. 'self' → logprob: -17.250335693359375
    6. '(sel' → logprob: -17.625335693359375
    7. '(

' → logprob: -20.000335693359375
    8. '<|end|>' → logprob: -20.750335693359375
    9. '[self' → logprob: -21.125335693359375
    10. '(this' → logprob: -21.125335693359375

Token 168: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0007251793285831809
    2. '.' → logprob: -7.250725269317627
    3. ' .' → logprob: -11.250724792480469
    4. '.idx' → logprob: -13.750724792480469
    5. '..' → logprob: -14.875724792480469
    6. ').' → logprob: -15.250724792480469
    7. 'x' → logprob: -15.375724792480469
    8. '‌.' → logprob: -17.62572479248047
    9. '._' → logprob: -18.00072479248047
    10. '.
' → logprob: -18.00072479248047

Token 169: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006734199821949005
    2. ' )' → logprob: -5.006734371185303
    3. ')+' → logprob: -10.881733894348145
    4. ' ' → logprob: -17.50673484802246
    5. '0' → logprob: -17.75673484802246
    6. '）' → logprob: -18.50673484802246
    7. ')
' → logprob: -18.63173484802246
    8. ' -' → logprob: -18.63173484802246
    9. '`)' → logprob: -18.75673484802246
    10. '   ' → logprob: -18.88173484802246

Token 170: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.018151583150029182
    2. '+' → logprob: -4.018151760101318
    3. '+self' → logprob: -13.89315128326416
    4. ' ' → logprob: -15.14315128326416
    5. ' ' → logprob: -15.51815128326416
    6. ' plus' → logprob: -16.518152236938477
    7. '    ' → logprob: -17.143152236938477
    8. '        ' → logprob: -17.393152236938477
    9. '   ' → logprob: -17.893152236938477
    10. ' +
' → logprob: -18.143152236938477

Token 171: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.3132631182670593
    2. ' abs' → logprob: -1.313263177871704
    3. '(abs' → logprob: -14.688262939453125
    4. '.abs' → logprob: -14.813262939453125
    5. '<|end|>' → logprob: -15.188262939453125
    6. '_abs' → logprob: -16.188262939453125
    7. ' ' → logprob: -16.438262939453125
    8. '   ' → logprob: -17.313262939453125
    9. '    ' → logprob: -17.563262939453125
    10. ' ' → logprob: -17.938262939453125

Token 172: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0024817234370857477
    2. '(' → logprob: -6.002481937408447
    3. '(s' → logprob: -12.502481460571289
    4. '(
' → logprob: -13.752481460571289
    5. 'self' → logprob: -14.752481460571289
    6. ' (' → logprob: -14.752481460571289
    7. '(sel' → logprob: -15.252481460571289
    8. '(

' → logprob: -16.50248146057129
    9. '<|end|>' → logprob: -16.50248146057129
    10. '(y' → logprob: -16.75248146057129

Token 173: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0019555140752345324
    2. '.' → logprob: -6.251955509185791
    3. 'y' → logprob: -11.25195598602295
    4. ' .' → logprob: -12.25195598602295
    5. ').' → logprob: -12.37695598602295
    6. '	y' → logprob: -13.25195598602295
    7. ' ' → logprob: -14.00195598602295
    8. ' y' → logprob: -14.50195598602295
    9. ')' → logprob: -15.00195598602295
    10. '<|end|>' → logprob: -16.001955032348633

Token 174: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -14.375001907348633
    3. '<|end|>' → logprob: -14.750001907348633
    4. ' )' → logprob: -15.375001907348633
    5. '}' → logprob: -16.500001907348633
    6. ')return' → logprob: -16.750001907348633
    7. ')#' → logprob: -17.625001907348633
    8. '))' → logprob: -18.000001907348633
    9. ')`' → logprob: -18.125001907348633
    10. '())' → logprob: -18.250001907348633

Token 175: 'from' (ID: 2845)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4315418004989624
    2. '
' → logprob: -1.4315418004989624
    3. '<|end|>' → logprob: -2.306541919708252
    4. '    
' → logprob: -5.056541919708252
    5. '<|end|>' → logprob: -5.681541919708252
    6. 'def' → logprob: -7.181541919708252
    7. '

' → logprob: -7.931541919708252
    8. '  
' → logprob: -8.556541442871094
    9. ' 
' → logprob: -8.931541442871094
    10. ' ' → logprob: -9.181541442871094

Token 176: ' functools' (ID: 142636)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.3891482353210449
    2. ' math' → logprob: -1.139148235321045
    3. ' dat' → logprob: -6.139148235321045
    4. ' collections' → logprob: -9.764148712158203
    5. ' random' → logprob: -11.014148712158203
    6. ' ' → logprob: -11.014148712158203
    7. 'typing' → logprob: -11.139148712158203
    8. ' itertools' → logprob: -11.889148712158203
    9. 'math' → logprob: -13.889148712158203
    10. ' datetime' → logprob: -13.889148712158203

Token 177: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.10717477649450302
    2. ' import' → logprob: -2.482174873352051
    3. '_import' → logprob: -4.607174873352051
    4. '.' → logprob: -5.107174873352051
    5. '_' → logprob: -7.232174873352051
    6. ' .' → logprob: -7.482174873352051
    7. 'from' → logprob: -7.857174873352051
    8. '._' → logprob: -9.10717487335205
    9. '<|end|>' → logprob: -9.73217487335205
    10. '	import' → logprob: -10.10717487335205

Token 178: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7009167671203613
    2. ' l' → logprob: -1.3259167671203613
    3. 'cached' → logprob: -2.5759167671203613
    4. 'total' → logprob: -2.9509167671203613
    5. 'cmp' → logprob: -2.9509167671203613
    6. 'reduce' → logprob: -3.4509167671203613
    7. 'cache' → logprob: -3.9509167671203613
    8. ' total' → logprob: -5.575916767120361
    9. 'wrap' → logprob: -6.700916767120361
    10. ' cmp' → logprob: -7.325916767120361

Token 179: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -9.877503907773644e-05
    2. 'RU' → logprob: -10.750099182128906
    3. 'fu' → logprob: -11.375099182128906
    4. 'r' → logprob: -11.500099182128906
    5. 'cm' → logprob: -11.500099182128906
    6. 'en' → logprob: -11.625099182128906
    7. '_ru' → logprob: -12.625099182128906
    8. 'Ru' → logprob: -12.750099182128906
    9. 'eft' → logprob: -12.875099182128906
    10. 'oad' → logprob: -13.125099182128906

Token 180: '_cache' (ID: 27045)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.4744104743003845
    2. '_cache' → logprob: -0.9744104743003845
    3. 'c' → logprob: -8.724410057067871
    4. '```' → logprob: -9.599410057067871
    5. 'ac' → logprob: -10.724410057067871
    6. 'ache' → logprob: -11.224410057067871
    7. 'Cache' → logprob: -11.474410057067871
    8. 'che' → logprob: -11.724410057067871
    9. 't' → logprob: -12.099410057067871
    10. '_CACHE' → logprob: -12.349410057067871

Token 181: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02188800275325775
    2. '@' → logprob: -4.39688777923584
    3. '

' → logprob: -4.89688777923584
    4. 'def' → logprob: -7.02188777923584
    5. '
' → logprob: -8.39688777923584
    6. '@
' → logprob: -8.39688777923584
    7. 'class' → logprob: -8.77188777923584
    8. '\n' → logprob: -10.27188777923584
    9. '@class' → logprob: -10.39688777923584
    10. '    
' → logprob: -10.39688777923584

Token 182: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5444545149803162
    2. 'def' → logprob: -1.544454574584961
    3. '@' → logprob: -1.794454574584961
    4. '

' → logprob: -3.669454574584961
    5. 'class' → logprob: -5.544454574584961
    6. '@
' → logprob: -5.919454574584961
    7. 'd' → logprob: -6.044454574584961
    8. '@app' → logprob: -7.044454574584961
    9. 'import' → logprob: -7.419454574584961
    10. '\n' → logprob: -7.794454574584961

Token 183: ' typing' (ID: 34152)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.22930851578712463
    2. ' typing' → logprob: -1.6043084859848022
    3. 'math' → logprob: -5.979308605194092
    4. 'typing' → logprob: -7.479308605194092
    5. ' itertools' → logprob: -7.979308605194092
    6. ' collections' → logprob: -8.729308128356934
    7. ' dat' → logprob: -8.854308128356934
    8. ' operator' → logprob: -9.979308128356934
    9. '_typ' → logprob: -10.229308128356934
    10. '_math' → logprob: -10.729308128356934

Token 184: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06609902530908585
    2. 'import' → logprob: -3.566098928451538
    3. '<|end|>' → logprob: -3.816098928451538
    4. '.' → logprob: -4.441099166870117
    5. ' ' → logprob: -7.191099166870117
    6. ',' → logprob: -7.691099166870117
    7. '<|end|>' → logprob: -8.566099166870117
    8. '[' → logprob: -8.691099166870117
    9. ' .' → logprob: -9.941099166870117
    10. ':' → logprob: -9.941099166870117

Token 185: ' Dict' (ID: 55179)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.005660460330545902
    2. 'List' → logprob: -5.880660533905029
    3. ' Tuple' → logprob: -5.880660533905029
    4. 'Tuple' → logprob: -10.755660057067871
    5. ' Optional' → logprob: -11.255660057067871
    6. '_list' → logprob: -12.130660057067871
    7. '.List' → logprob: -13.005660057067871
    8. ' tuple' → logprob: -13.255660057067871
    9. ' list' → logprob: -13.380660057067871
    10. '	List' → logprob: -13.380660057067871

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6475065350532532
    2. '
' → logprob: -1.2725064754486084
    3. 'class' → logprob: -2.1475064754486084
    4. 'from' → logprob: -3.0225064754486084
    5. '

' → logprob: -4.2725067138671875
    6. ',class' → logprob: -4.8975067138671875
    7. '<|end|>' → logprob: -5.8975067138671875
    8. ',
' → logprob: -6.2725067138671875
    9. ' ,' → logprob: -6.3975067138671875
    10. ' from' → logprob: -7.2725067138671875

Token 187: ' Tuple' (ID: 50841)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.17169880867004395
    2. ' List' → logprob: -1.921698808670044
    3. 'Tuple' → logprob: -4.671698570251465
    4. ' Tuple' → logprob: -6.796698570251465
    5. 'Set' → logprob: -7.296698570251465
    6. 'Optional' → logprob: -9.296698570251465
    7. ' Set' → logprob: -10.046698570251465
    8. 'Named' → logprob: -10.546698570251465
    9. 'Typed' → logprob: -10.796698570251465
    10. 'Iterable' → logprob: -11.671698570251465

Token 188: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2824847400188446
    2. 'class' → logprob: -1.532484769821167
    3. '

' → logprob: -3.657484769821167
    4. 'from' → logprob: -6.657484531402588
    5. 'def' → logprob: -6.657484531402588
    6. '
' → logprob: -7.282484531402588
    7. ' class' → logprob: -8.282485008239746
    8. ',' → logprob: -8.532485008239746
    9. 'import' → logprob: -8.907485008239746
    10. '@' → logprob: -9.532485008239746

Token 189: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.04775136709213257
    2. ' List' → logprob: -3.1727514266967773
    3. 'Set' → logprob: -5.422751426696777
    4. 'Named' → logprob: -9.297751426696777
    5. 'Optional' → logprob: -9.297751426696777
    6. ' Set' → logprob: -9.672751426696777
    7. 'list' → logprob: -10.297751426696777
    8. 'Frozen' → logprob: -11.547751426696777
    9. 'fro' → logprob: -12.172751426696777
    10. 'int' → logprob: -12.297751426696777

Token 190: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3781960606575012
    2. 'class' → logprob: -1.7531960010528564
    3. '

' → logprob: -2.0031960010528564
    4. 'def' → logprob: -5.8781962394714355
    5. 'from' → logprob: -6.7531962394714355
    6. ' class' → logprob: -7.0031962394714355
    7. '
' → logprob: -7.8781962394714355
    8. '```' → logprob: -8.128195762634277
    9. '<|end|>' → logprob: -8.253195762634277
    10. ',' → logprob: -8.503195762634277

Token 191: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.08097923547029495
    2. 'def' → logprob: -2.705979347229004
    3. '@' → logprob: -4.580979347229004
    4. 'from' → logprob: -8.330979347229004
    5. '@dat' → logprob: -8.580979347229004
    6. '
' → logprob: -9.705979347229004
    7. 'c' → logprob: -9.830979347229004
    8. ' class' → logprob: -10.205979347229004
    9. 'import' → logprob: -10.205979347229004
    10. 'cl' → logprob: -10.330979347229004

Token 192: ' Trading' (ID: 36132)
  Prédit: ' Trade'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Trade' → logprob: -0.5687741637229919
    2. ' Trader' → logprob: -1.1937742233276367
    3. ' Trading' → logprob: -2.6937742233276367
    4. ' Travel' → logprob: -3.6937742233276367
    5. ' Merchant' → logprob: -5.318774223327637
    6. ' Market' → logprob: -5.318774223327637
    7. ' Transport' → logprob: -5.693774223327637
    8. ' Traveler' → logprob: -5.818774223327637
    9. ' Game' → logprob: -6.068774223327637
    10. ' Product' → logprob: -6.193774223327637

Token 193: 'Quest' (ID: 37831)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.10398024320602417
    2. 'Route' → logprob: -3.603980302810669
    3. 'Session' → logprob: -3.603980302810669
    4. 'Planner' → logprob: -4.47898006439209
    5. 'Simulator' → logprob: -4.97898006439209
    6. 'Agent' → logprob: -5.22898006439209
    7. 'Optimizer' → logprob: -5.35398006439209
    8. 'Strategy' → logprob: -5.60398006439209
    9. 'Post' → logprob: -5.85398006439209
    10. 'Trip' → logprob: -6.72898006439209

Token 194: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00020652047533076257
    2. ':
' → logprob: -9.12520694732666
    3. ' :' → logprob: -9.50020694732666
    4. '():' → logprob: -11.25020694732666
    5. '(' → logprob: -12.00020694732666
    6. '):' → logprob: -13.25020694732666
    7. '(object' → logprob: -14.62520694732666
    8. ':

' → logprob: -14.75020694732666
    9. ':**' → logprob: -15.75020694732666
    10. '：' → logprob: -16.000205993652344

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03973609581589699
    2. '    
' → logprob: -3.914736032485962
    3. ' 
' → logprob: -4.664736270904541
    4. '    ' → logprob: -5.039736270904541
    5. '
' → logprob: -7.414736270904541
    6. '     
' → logprob: -7.539736270904541
    7. '  
' → logprob: -7.914736270904541
    8. ' def' → logprob: -8.289735794067383
    9. '   
' → logprob: -8.289735794067383
    10. ':' → logprob: -8.414735794067383

Token 196: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.127378448843956
    2. 'def' (adapté à ' def') → logprob: -2.127378463745117
    3. '   ' → logprob: -7.752378463745117
    4. ' ' → logprob: -11.252378463745117
    5. 'de' → logprob: -13.127378463745117
    6. ' de' → logprob: -13.252378463745117
    7. '  ' → logprob: -13.502378463745117
    8. '    ' → logprob: -14.002378463745117
    9. '	def' → logprob: -14.377378463745117
    10. 'class' → logprob: -15.627378463745117

Token 197: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.30706557631492615
    2. ' ' → logprob: -1.8070656061172485
    3. ' init' → logprob: -2.557065486907959
    4. ' ' → logprob: -4.807065486907959
    5. ' def' → logprob: -5.057065486907959
    6. '_init' → logprob: -5.307065486907959
    7. ' _' → logprob: -6.182065486907959
    8. 'init' → logprob: -7.432065486907959
    9. '  ' → logprob: -8.682065963745117
    10. ' ```' → logprob: -8.932065963745117

Token 198: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.981667537620524e-06
    2. 'nit' → logprob: -13.875001907348633
    3. ' init' → logprob: -15.500001907348633
    4. 'i' → logprob: -15.625001907348633
    5. 'int' → logprob: -15.625001907348633
    6. 'ini' → logprob: -15.875001907348633
    7. '   ' → logprob: -16.000001907348633
    8. 'it' → logprob: -16.250001907348633
    9. '```' → logprob: -16.750001907348633
    10. '_init' → logprob: -17.500001907348633

Token 199: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.023272383958101273
    2. '__' → logprob: -3.7732722759246826
    3. '__(
' → logprob: -10.648272514343262
    4. '__((' → logprob: -13.648272514343262
    5. '___' → logprob: -14.023272514343262
    6. '__('' → logprob: -14.148272514343262
    7. '__("' → logprob: -15.648272514343262
    8. '_' → logprob: -15.773272514343262
    9. '____' → logprob: -17.148271560668945
    10. '__(*' → logprob: -17.523271560668945

Token 200: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002833172446116805
    2. ' self' → logprob: -5.877833366394043
    3. '
' → logprob: -10.752833366394043
    4. '   ' → logprob: -12.627833366394043
    5. ')' → logprob: -13.627833366394043
    6. '       ' → logprob: -13.877833366394043
    7. ',' → logprob: -14.127833366394043
    8. ' ' → logprob: -15.127833366394043
    9. '0' → logprob: -16.377832412719727
    10. '  ' → logprob: -16.377832412719727

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4706404507160187
    2. '__,' → logprob: -1.0956404209136963
    3. '__' → logprob: -3.2206404209136963
    4. '__(' → logprob: -7.720640659332275
    5. 'self' → logprob: -8.095640182495117
    6. ' ,' → logprob: -8.970640182495117
    7. '_,' → logprob: -9.220640182495117
    8. '__,
' → logprob: -9.970640182495117
    9. '__(
' → logprob: -10.720640182495117
    10. '_' → logprob: -10.845640182495117

Token 202: ' N' (ID: 478)
  Prédit: ' cities'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cities' → logprob: -0.6623376607894897
    2. 'cities' → logprob: -0.9123376607894897
    3. 'self' → logprob: -3.4123377799987793
    4. 'start' → logprob: -4.287337779998779
    5. ' start' → logprob: -4.412337779998779
    6. ' starting' → logprob: -5.162337779998779
    7. 'starting' → logprob: -5.412337779998779
    8. '   ' → logprob: -5.787337779998779
    9. ' self' → logprob: -5.787337779998779
    10. 'max' → logprob: -6.787337779998779

Token 203: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06266424804925919
    2. ':' → logprob: -2.812664270401001
    3. ' ,' → logprob: -8.062664031982422
    4. ':int' → logprob: -8.812664031982422
    5. ')' → logprob: -9.062664031982422
    6. '):' → logprob: -9.187664031982422
    7. ' :' → logprob: -12.562664031982422
    8. ' ):' → logprob: -13.062664031982422
    9. ',
' → logprob: -13.187664031982422
    10. ' )' → logprob: -13.187664031982422

Token 204: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.029809851199388504
    2. ' int' → logprob: -3.5298099517822266
    3. ' ' → logprob: -10.654809951782227
    4. ')' → logprob: -10.779809951782227
    5. 'List' → logprob: -11.904809951782227
    6. ':int' → logprob: -13.029809951782227
    7. '[int' → logprob: -13.154809951782227
    8. '=int' → logprob: -14.529809951782227
    9. '<|end|>' → logprob: -14.529809951782227
    10. '	int' → logprob: -14.654809951782227

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1875571544806007e-05
    2. '):' → logprob: -12.125011444091797
    3. ' ,' → logprob: -12.125011444091797
    4. ')' → logprob: -14.375011444091797
    5. '   ' → logprob: -15.125011444091797
    6. '‌,' → logprob: -18.000011444091797
    7. ',int' → logprob: -18.250011444091797
    8. ',
' → logprob: -18.250011444091797
    9. ' ):' → logprob: -18.750011444091797
    10. '),' → logprob: -19.250011444091797

Token 206: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.0021744966506958
    2. 'cities' → logprob: -1.3771744966506958
    3. ' cities' → logprob: -1.8771744966506958
    4. ' M' → logprob: -1.8771744966506958
    5. 'markets' → logprob: -4.752174377441406
    6. ' markets' → logprob: -4.752174377441406
    7. 'K' → logprob: -4.877174377441406
    8. ' city' → logprob: -5.002174377441406
    9. ' start' → logprob: -5.377174377441406
    10. 'city' → logprob: -5.377174377441406

Token 207: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012257046764716506
    2. ':' → logprob: -6.876225471496582
    3. '):' → logprob: -8.751225471496582
    4. ' ,' → logprob: -11.126225471496582
    5. ')' → logprob: -11.251225471496582
    6. ':int' → logprob: -12.876225471496582
    7. '=' → logprob: -13.376225471496582
    8. ',
' → logprob: -14.626225471496582
    9. '<|end|>' → logprob: -14.626225471496582
    10. 'int' → logprob: -14.751225471496582

Token 208: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0663304254412651
    2. 'List' → logprob: -3.3163304328918457
    3. ' int' → logprob: -3.6913304328918457
    4. ' List' → logprob: -5.941330432891846
    5. ')' → logprob: -9.066329956054688
    6. 'Dict' → logprob: -9.941329956054688
    7. '[int' → logprob: -9.941329956054688
    8. 'list' → logprob: -10.316329956054688
    9. ':int' → logprob: -11.316329956054688
    10. '   ' → logprob: -11.316329956054688

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0043792095966637135
    2. '):' → logprob: -5.5043792724609375
    3. ')' → logprob: -8.254379272460938
    4. ' ,' → logprob: -11.129379272460938
    5. '):
' → logprob: -11.254379272460938
    6. ':' → logprob: -12.254379272460938
    7. ' ):' → logprob: -13.004379272460938
    8. ',
' → logprob: -13.379379272460938
    9. '   ' → logprob: -13.504379272460938
    10. '),' → logprob: -14.879379272460938

Token 210: ' W' (ID: 486)
  Prédit: 'cities'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cities' → logprob: -0.9695416688919067
    2. 'K' → logprob: -1.8445416688919067
    3. 'start' → logprob: -2.594541549682617
    4. 'products' → logprob: -2.844541549682617
    5. 'Q' → logprob: -2.969541549682617
    6. 'T' → logprob: -3.094541549682617
    7. ' cities' → logprob: -3.219541549682617
    8. 'C' → logprob: -3.469541549682617
    9. 'max' → logprob: -3.844541549682617
    10. 'starting' → logprob: -3.844541549682617

Token 211: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016342396847903728
    2. ':int' → logprob: -6.751634120941162
    3. ',' → logprob: -8.00163459777832
    4. '):' → logprob: -9.75163459777832
    5. ' :' → logprob: -10.12663459777832
    6. ')' → logprob: -10.75163459777832
    7. 'int' → logprob: -12.87663459777832
    8. ' ):' → logprob: -13.25163459777832
    9. '):
' → logprob: -13.75163459777832
    10. '=' → logprob: -14.37663459777832

Token 212: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.049296505749225616
    2. ' int' → logprob: -3.0492966175079346
    3. ')' → logprob: -8.049296379089355
    4. '<|end|>' → logprob: -9.174296379089355
    5. ' ' → logprob: -9.299296379089355
    6. '[int' → logprob: -10.049296379089355
    7. '0' → logprob: -10.174296379089355
    8. ':int' → logprob: -10.299296379089355
    9. '=int' → logprob: -10.924296379089355
    10. '  ' → logprob: -11.049296379089355

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006054567056708038
    2. '):' → logprob: -7.500605583190918
    3. ')' → logprob: -10.000605583190918
    4. ' ,' → logprob: -12.125605583190918
    5. '   ' → logprob: -13.875605583190918
    6. ',
' → logprob: -15.625605583190918
    7. ',int' → logprob: -16.0006046295166
    8. ':' → logprob: -16.5006046295166
    9. ' ):' → logprob: -16.8756046295166
    10. '‌,' → logprob: -17.1256046295166

Token 214: ' T' (ID: 353)
  Prédit: 'cities'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cities' → logprob: -0.533741295337677
    2. ' cities' → logprob: -1.2837412357330322
    3. 'products' → logprob: -3.6587412357330322
    4. 'C' → logprob: -4.158741474151611
    5. ' city' → logprob: -4.658741474151611
    6. '   ' → logprob: -5.033741474151611
    7. 'city' → logprob: -5.033741474151611
    8. 'prices' → logprob: -5.158741474151611
    9. 'P' → logprob: -5.283741474151611
    10. 'K' → logprob: -5.408741474151611

Token 215: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5050581693649292
    2. '):' → logprob: -1.2550581693649292
    3. ',' → logprob: -2.2550582885742188
    4. ')' → logprob: -5.130058288574219
    5. ':int' → logprob: -8.130058288574219
    6. ' ):' → logprob: -8.380058288574219
    7. ' :' → logprob: -10.255058288574219
    8. '):
' → logprob: -10.505058288574219
    9. '}:' → logprob: -11.005058288574219
    10. '=' → logprob: -11.255058288574219

Token 216: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.019869204610586166
    2. ' int' → logprob: -4.019869327545166
    3. ')' → logprob: -6.644869327545166
    4. '[int' → logprob: -8.519868850708008
    5. ':int' → logprob: -9.519868850708008
    6. '=int' → logprob: -10.144868850708008
    7. 'List' → logprob: -10.144868850708008
    8. ' )' → logprob: -11.894868850708008
    9. ']int' → logprob: -11.894868850708008
    10. '
' → logprob: -12.019868850708008

Token 217: ',\
' (ID: 111042)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.056549735367298126
    2. ',' → logprob: -2.9315497875213623
    3. ')' → logprob: -6.431549549102783
    4. ' ):' → logprob: -10.306550025939941
    5. '):
' → logprob: -11.181550025939941
    6. ':' → logprob: -12.056550025939941
    7. '),' → logprob: -14.431550025939941
    8. '   ' → logprob: -14.806550025939941
    9. ']:' → logprob: -15.056550025939941
    10. '):
' → logprob: -15.556550025939941

Token 218: '                ' (ID: 408)
  Prédit: ' cities'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cities' → logprob: -0.24556943774223328
    2. ' city' → logprob: -2.9955694675445557
    3. 'cities' → logprob: -3.3705694675445557
    4. ' products' → logprob: -3.4955694675445557
    5. '   ' → logprob: -4.495569229125977
    6. ' C' → logprob: -4.870569229125977
    7. ' markets' → logprob: -4.933069229125977
    8. 'products' → logprob: -5.183069229125977
    9. ' ' → logprob: -5.245569229125977
    10. ',' → logprob: -5.370569229125977

Token 219: ' products' (ID: 3891)
  Prédit: ' cities'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cities' → logprob: -0.42905285954475403
    2. 'cities' → logprob: -1.1790528297424316
    3. ' city' → logprob: -3.9290528297424316
    4. 'city' → logprob: -4.554052829742432
    5. ' start' → logprob: -5.804052829742432
    6. 'start' → logprob: -6.804052829742432
    7. '   ' → logprob: -6.929052829742432
    8. 'C' → logprob: -7.929052829742432
    9. ' starting' → logprob: -8.05405330657959
    10. '           ' → logprob: -8.30405330657959

Token 220: '_data' (ID: 3537)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -5.3596853831550106e-05
    2. ',' → logprob: -10.875053405761719
    3. ' :' → logprob: -11.125053405761719
    4. ':list' → logprob: -11.125053405761719
    5. '):' → logprob: -12.875053405761719
    6. ')' → logprob: -13.750053405761719
    7. '_list' → logprob: -14.000053405761719
    8. '_:' → logprob: -15.875053405761719
    9. '=' → logprob: -16.75005340576172
    10. ' ):' → logprob: -16.75005340576172

Token 221: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05019471049308777
    2. '):' → logprob: -3.05019474029541
    3. ',' → logprob: -6.67519474029541
    4. ')' → logprob: -8.67519474029541
    5. ' ):' → logprob: -9.42519474029541
    6. ' :' → logprob: -9.80019474029541
    7. ':list' → logprob: -10.67519474029541
    8. '=' → logprob: -12.42519474029541
    9. '),' → logprob: -13.17519474029541
    10. '):
' → logprob: -13.30019474029541

Token 222: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.5768634080886841
    2. 'List' → logprob: -0.8268634080886841
    3. ' list' → logprob: -7.5768632888793945
    4. 'list' → logprob: -7.9518632888793945
    5. '[List' → logprob: -9.826863288879395
    6. '_list' → logprob: -13.701863288879395
    7. ',List' → logprob: -14.076863288879395
    8. ')' → logprob: -14.076863288879395
    9. ' ' → logprob: -14.576863288879395
    10. '	List' → logprob: -14.576863288879395

Token 223: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.030999915674328804
    2. '[List' → logprob: -3.5309998989105225
    3. '[int' → logprob: -6.781000137329102
    4. '[str' → logprob: -10.031000137329102
    5. ',' → logprob: -10.656000137329102
    6. '[
' → logprob: -11.156000137329102
    7. '   ' → logprob: -11.781000137329102
    8. '),' → logprob: -12.531000137329102
    9. ')' → logprob: -12.531000137329102
    10. '):' → logprob: -12.906000137329102

Token 224: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.0019067394314333797
    2. ' Tuple' → logprob: -6.876906871795654
    3. 'Product' → logprob: -7.126906871795654
    4. 'Dict' → logprob: -10.376906394958496
    5. 'tuple' → logprob: -11.376906394958496
    6. '   ' → logprob: -11.501906394958496
    7. 'List' → logprob: -11.626906394958496
    8. '[' → logprob: -13.001906394958496
    9. ' ' → logprob: -13.626906394958496
    10. 'Tu' → logprob: -13.876906394958496

Token 225: '[str' (ID: 33439)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.10021228343248367
    2. '[str' → logprob: -2.350212335586548
    3. '[' → logprob: -13.100212097167969
    4. 'int' → logprob: -13.725212097167969
    5. '[
' → logprob: -13.975212097167969
    6. '(int' → logprob: -14.850212097167969
    7. ']])' → logprob: -15.100212097167969
    8. ']],' → logprob: -15.100212097167969
    9. '])' → logprob: -15.475212097167969
    10. ']]' → logprob: -15.975212097167969

Token 226: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013013073476031423
    2. ',int' → logprob: -6.876301288604736
    3. ' ,' → logprob: -8.251301765441895
    4. ',
' → logprob: -12.876301765441895
    5. '[int' → logprob: -14.001301765441895
    6. 'int' → logprob: -14.126301765441895
    7. ',float' → logprob: -14.376301765441895
    8. ' ' → logprob: -14.501301765441895
    9. '‌,' → logprob: -14.751301765441895
    10. '   ' → logprob: -14.751301765441895

Token 227: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12703163921833038
    2. ',int' → logprob: -2.1270315647125244
    3. ' ,' → logprob: -9.752031326293945
    4. ',float' → logprob: -11.127031326293945
    5. ',bool' → logprob: -11.877031326293945
    6. ',Integer' → logprob: -12.377031326293945
    7. ',
' → logprob: -12.627031326293945
    8. ',uint' → logprob: -12.627031326293945
    9. ',List' → logprob: -12.627031326293945
    10. 'int' → logprob: -13.377031326293945

Token 228: ']],' (ID: 37171)
  Prédit: ']],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']],' → logprob: -0.5598046779632568
    2. ',' → logprob: -0.9348046779632568
    3. ']])' → logprob: -3.934804677963257
    4. ']]' → logprob: -4.934804916381836
    5. ']],
' → logprob: -5.184804916381836
    6. ']' → logprob: -6.559804916381836
    7. ',int' → logprob: -7.434804916381836
    8. ' ,' → logprob: -7.809804916381836
    9. ',
' → logprob: -7.934804916381836
    10. ' ]' → logprob: -8.184804916381836

Token 229: ' cities' (ID: 15636)
  Prédit: ' cities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cities' → logprob: -0.0872577503323555
    2. 'cities' → logprob: -3.4622578620910645
    3. ' city' → logprob: -3.8372578620910645
    4. '                ' → logprob: -4.4622578620910645
    5. ' markets' → logprob: -4.9622578620910645
    6. ' market' → logprob: -5.4622578620910645
    7. '                 ' → logprob: -5.9622578620910645
    8. ' ' → logprob: -7.3372578620910645
    9. 'city' → logprob: -7.4622578620910645
    10. '   ' → logprob: -7.5872578620910645

Token 230: '_data' (ID: 3537)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019628899171948433
    2. '_data' → logprob: -6.251962661743164
    3. ' :' → logprob: -10.876962661743164
    4. 'Data' → logprob: -12.501962661743164
    5. 'data' → logprob: -12.751962661743164
    6. '   ' → logprob: -12.876962661743164
    7. '_:' → logprob: -13.876962661743164
    8. '):' → logprob: -14.376962661743164
    9. '=' → logprob: -14.501962661743164
    10. '_Data' → logprob: -14.501962661743164

Token 231: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00048656106810085475
    2. '=' → logprob: -8.000486373901367
    3. ' :' → logprob: -9.625486373901367
    4. '):' → logprob: -10.000486373901367
    5. ')' → logprob: -10.500486373901367
    6. ',' → logprob: -12.000486373901367
    7. ' =' → logprob: -12.875486373901367
    8. '=None' → logprob: -13.875486373901367
    9. '):
' → logprob: -14.750486373901367
    10. '   ' → logprob: -14.750486373901367

Token 232: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.38688600063323975
    2. 'List' → logprob: -1.1368860006332397
    3. '[List' → logprob: -11.386885643005371
    4. ' list' → logprob: -13.011885643005371
    5. 'list' → logprob: -14.386885643005371
    6. '	List' → logprob: -14.761885643005371
    7. '   ' → logprob: -15.636885643005371
    8. ' ' → logprob: -16.511886596679688
    9. '       ' → logprob: -17.386886596679688
    10. '_list' → logprob: -17.761886596679688

Token 233: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.2994620242971e-06
    2. '[List' → logprob: -12.375008583068848
    3. '[
' → logprob: -13.250008583068848
    4. '[int' → logprob: -13.875008583068848
    5. '       ' → logprob: -15.000008583068848
    6. '<Tuple' → logprob: -15.375008583068848
    7. ')' → logprob: -16.00000762939453
    8. '           ' → logprob: -16.12500762939453
    9. '```' → logprob: -16.37500762939453
    10. '   ' → logprob: -16.37500762939453

Token 234: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -3.4285862057004124e-05
    2. 'int' → logprob: -10.87503433227539
    3. ' Tuple' → logprob: -11.75003433227539
    4. 'tuple' → logprob: -12.37503433227539
    5. 'List' → logprob: -13.50003433227539
    6. 'Dict' → logprob: -13.75003433227539
    7. '[' → logprob: -15.75003433227539
    8. 'Tu' → logprob: -16.12503433227539
    9. '[int' → logprob: -16.50003433227539
    10. '   ' → logprob: -16.75003433227539

Token 235: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -8.613945101387799e-05
    2. 'int' → logprob: -9.500085830688477
    3. ',int' → logprob: -12.125085830688477
    4. '[str' → logprob: -12.625085830688477
    5. '[
' → logprob: -14.250085830688477
    6. '(int' → logprob: -14.250085830688477
    7. '   ' → logprob: -15.250085830688477
    8. ']int' → logprob: -15.250085830688477
    9. '[' → logprob: -15.750085830688477
    10. '<int' → logprob: -15.875085830688477

Token 236: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.007861185818910599
    2. ',' → logprob: -4.882861137390137
    3. ' ,' → logprob: -8.507861137390137
    4. '[int' → logprob: -11.007861137390137
    5. 'int' → logprob: -11.132861137390137
    6. ',float' → logprob: -11.257861137390137
    7. ']int' → logprob: -12.632861137390137
    8. ',List' → logprob: -13.257861137390137
    9. '   ' → logprob: -14.507861137390137
    10. ',bool' → logprob: -14.632861137390137

Token 237: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.0025506927631795406
    2. ',' → logprob: -6.0025506019592285
    3. ',List' → logprob: -10.752551078796387
    4. ']int' → logprob: -10.877551078796387
    5. ' ,' → logprob: -11.127551078796387
    6. 'int' → logprob: -11.377551078796387
    7. ',
' → logprob: -13.502551078796387
    8. '[int' → logprob: -13.877551078796387
    9. ',Integer' → logprob: -14.252551078796387
    10. ',bool' → logprob: -14.377551078796387

Token 238: ',List' (ID: 166273)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13335296511650085
    2. ']])' → logprob: -2.5083529949188232
    3. ']]' → logprob: -3.5083529949188232
    4. ']],' → logprob: -5.133352756500244
    5. ']' → logprob: -5.883352756500244
    6. ')]' → logprob: -6.383352756500244
    7. ',List' → logprob: -7.133352756500244
    8. ')])' → logprob: -7.383352756500244
    9. '])' → logprob: -8.008353233337402
    10. ' ,' → logprob: -8.258353233337402

Token 239: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0015703336102887988
    2. ']])' → logprob: -7.001570224761963
    3. ']]' → logprob: -7.626570224761963
    4. '[int' → logprob: -9.251570701599121
    5. ']],' → logprob: -10.251570701599121
    6. '[List' → logprob: -11.126570701599121
    7. '[
' → logprob: -11.376570701599121
    8. ']]]' → logprob: -11.626570701599121
    9. ']' → logprob: -13.751570701599121
    10. ']],
' → logprob: -13.876570701599121

Token 240: 'Tuple' (ID: 40048)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011601919308304787
    2. 'Market' → logprob: -4.76160192489624
    3. '[int' → logprob: -6.01160192489624
    4. ']]' → logprob: -8.136601448059082
    5. 'Tuple' → logprob: -9.761601448059082
    6. '[
' → logprob: -10.011601448059082
    7. ']])' → logprob: -10.136601448059082
    8. ']]]' → logprob: -10.386601448059082
    9. 'int' → logprob: -11.136601448059082
    10. ']' → logprob: -11.136601448059082

Token 241: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.11365237832069397
    2. '[int' → logprob: -2.238652467727661
    3. '[' → logprob: -7.238652229309082
    4. ']]' → logprob: -10.238652229309082
    5. ']]]' → logprob: -10.488652229309082
    6. 'str' → logprob: -10.613652229309082
    7. '[
' → logprob: -11.863652229309082
    8. ']])' → logprob: -12.113652229309082
    9. 'Product' → logprob: -12.863652229309082
    10. 'int' → logprob: -13.363652229309082

Token 242: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.002744365716353059
    2. ',' → logprob: -6.002744197845459
    3. 'int' → logprob: -8.252744674682617
    4. ' ,' → logprob: -12.627744674682617
    5. ',bool' → logprob: -13.627744674682617
    6. ']int' → logprob: -13.877744674682617
    7. '[int' → logprob: -14.002744674682617
    8. ',float' → logprob: -14.877744674682617
    9. '   ' → logprob: -15.127744674682617
    10. '	int' → logprob: -15.252744674682617

Token 243: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.03388161584734917
    2. ',int' → logprob: -3.908881664276123
    3. ',' → logprob: -4.783881664276123
    4. ']]]' → logprob: -5.533881664276123
    5. ']' → logprob: -7.908881664276123
    6. ' ]' → logprob: -9.158881187438965
    7. ',List' → logprob: -10.033881187438965
    8. ',str' → logprob: -10.033881187438965
    9. '[int' → logprob: -10.158881187438965
    10. 'int' → logprob: -10.283881187438965

Token 244: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.08622340857982635
    2. ']])' → logprob: -2.9612233638763428
    3. ']' → logprob: -4.336223602294922
    4. ']):' → logprob: -4.836223602294922
    5. ')]' → logprob: -5.086223602294922
    6. ']>' → logprob: -6.211223602294922
    7. '])' → logprob: -7.336223602294922
    8. ')' → logprob: -8.836223602294922
    9. ']]:
' → logprob: -8.836223602294922
    10. ']],' → logprob: -8.961223602294922

Token 245: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002224960131570697
    2. '):
' → logprob: -6.252224922180176
    3. ')' → logprob: -8.252224922180176
    4. ' ):' → logprob: -11.377224922180176
    5. '   ' → logprob: -12.002224922180176
    6. ',' → logprob: -12.127224922180176
    7. '       ' → logprob: -12.252224922180176
    8. ':' → logprob: -12.627224922180176
    9. '):
' → logprob: -12.627224922180176
    10. '):

' → logprob: -15.252224922180176

Token 246: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.947715832618997e-05
    2. ':' → logprob: -10.125089645385742
    3. 'self' → logprob: -11.000089645385742
    4. '):' → logprob: -11.750089645385742
    5. ')' → logprob: -12.250089645385742
    6. '        
' → logprob: -12.625089645385742
    7. '      ' → logprob: -12.750089645385742
    8. ' self' → logprob: -12.750089645385742
    9. '   ' → logprob: -12.750089645385742
    10. '```' → logprob: -13.125089645385742

Token 247: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01680867187678814
    2. '       ' → logprob: -4.26680850982666
    3. ' self' → logprob: -6.01680850982666
    4. '   ' → logprob: -8.51680850982666
    5. ' ' → logprob: -12.64180850982666
    6. '	self' → logprob: -14.64180850982666
    7. '     ' → logprob: -15.51680850982666
    8. '  ' → logprob: -16.016809463500977
    9. '    ' → logprob: -16.266809463500977
    10. '
' → logprob: -16.641809463500977

Token 248: ' Initialize' (ID: 19496)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2566635012626648
    2. ' self' → logprob: -1.5066635608673096
    3. '       ' → logprob: -5.3816633224487305
    4. '#' → logprob: -10.50666332244873
    5. '   ' → logprob: -10.88166332244873
    6. ' ' → logprob: -10.88166332244873
    7. '        ' → logprob: -11.25666332244873
    8. 'super' → logprob: -11.63166332244873
    9. '    ' → logprob: -11.75666332244873
    10. 'N' → logprob: -12.50666332244873

Token 249: ' products' (ID: 3891)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5839683413505554
    2. 'self' → logprob: -0.8339683413505554
    3. '       ' → logprob: -4.833968162536621
    4. '
' → logprob: -11.208968162536621
    5. '   ' → logprob: -11.208968162536621
    6. ' ' → logprob: -11.833968162536621
    7. '```' → logprob: -12.958968162536621
    8. '        
' → logprob: -13.458968162536621
    9. '	self' → logprob: -13.708968162536621
    10. '        ' → logprob: -14.458968162536621

Token 250: ' dict' (ID: 11878)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5039529800415039
    2. 'self' → logprob: -1.253952980041504
    3. ' self' → logprob: -2.378952980041504
    4. '<|end|>' → logprob: -4.378952980041504
    5. '
' → logprob: -5.503952980041504
    6. '        
' → logprob: -8.128952980041504
    7. '<|end|>' → logprob: -8.128952980041504
    8. ',' → logprob: -8.878952980041504
    9. '```' → logprob: -9.378952980041504
    10. '(self' → logprob: -9.503952980041504

Token 251: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33890628814697266
    2. 'self' → logprob: -1.5889062881469727
    3. '<|end|>' → logprob: -2.8389062881469727
    4. ' self' → logprob: -3.8389062881469727
    5. '        
' → logprob: -6.838906288146973
    6. '
' → logprob: -7.588906288146973
    7. '<|end|>' → logprob: -7.588906288146973
    8. '{' → logprob: -8.213906288146973
    9. ':' → logprob: -8.713906288146973
    10. ',' → logprob: -8.838906288146973

Token 252: ' name' (ID: 1308)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16293807327747345
    2. ' self' → logprob: -1.912938117980957
    3. '       ' → logprob: -5.912938117980957
    4. ' ' → logprob: -13.287938117980957
    5. '{' → logprob: -13.662938117980957
    6. '```' → logprob: -14.162938117980957
    7. '   ' → logprob: -14.287938117980957
    8. '	self' → logprob: -14.412938117980957
    9. '(self' → logprob: -15.162938117980957
    10. '        
' → logprob: -15.412938117980957

Token 253: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19257859885692596
    2. ' =' → logprob: -2.0675785541534424
    3. '=' → logprob: -3.8175785541534424
    4. ' :' → logprob: -5.1925787925720215
    5. '_to' → logprob: -5.3175787925720215
    6. ' ->' → logprob: -5.4425787925720215
    7. ')' → logprob: -5.5675787925720215
    8. ' to' → logprob: -5.8175787925720215
    9. ',' → logprob: -6.6925787925720215
    10. '->' → logprob: -6.9425787925720215

Token 254: ' Product' (ID: 7451)
  Prédit: 'Product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Product' → logprob: -0.029756855219602585
    2. ' Product' → logprob: -3.529756784439087
    3. 'product' → logprob: -12.654756546020508
    4. ' product' → logprob: -13.029756546020508
    5. '	Product' → logprob: -14.279756546020508
    6. 'self' → logprob: -15.529756546020508
    7. '_product' → logprob: -16.279756546020508
    8. '<Product' → logprob: -17.154756546020508
    9. '_Product' → logprob: -17.154756546020508
    10. '   ' → logprob: -17.404756546020508

Token 255: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19282576441764832
    2. 'self' → logprob: -1.8178257942199707
    3. '
' → logprob: -5.317825794219971
    4. '        
' → logprob: -5.817825794219971
    5. ' self' → logprob: -5.817825794219971
    6. '<|end|>' → logprob: -7.067825794219971
    7. '   ' → logprob: -7.942825794219971
    8. '```' → logprob: -8.317825317382812
    9. ',' → logprob: -8.942825317382812
    10. '  
' → logprob: -9.067825317382812

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02066894620656967
    2. 'self' → logprob: -4.020668983459473
    3. ' self' → logprob: -6.020668983459473
    4. '```' → logprob: -10.145668983459473
    5. ')' → logprob: -10.770668983459473
    6. ',' → logprob: -12.145668983459473
    7. '   ' → logprob: -12.270668983459473
    8. '        
' → logprob: -12.395668983459473
    9. '<|end|>' → logprob: -12.395668983459473
    10. '(self' → logprob: -13.270668983459473

Token 257: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03166697546839714
    2. ' self' → logprob: -3.7816669940948486
    3. '       ' → logprob: -4.7816667556762695
    4. '   ' → logprob: -13.03166675567627
    5. ' ' → logprob: -14.03166675567627
    6. '	self' → logprob: -14.40666675567627
    7. '```' → logprob: -15.90666675567627
    8. '(self' → logprob: -16.156667709350586
    9. '      ' → logprob: -16.781667709350586
    10. '        
' → logprob: -16.781667709350586

Token 258: '.products' (ID: 71677)
  Prédit: '.products'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.products' → logprob: -0.002938002347946167
    2. '.' → logprob: -6.1279377937316895
    3. '.product' → logprob: -8.002938270568848
    4. ' .' → logprob: -8.002938270568848
    5. 'products' → logprob: -9.877938270568848
    6. '.Products' → logprob: -11.377938270568848
    7. '.prod' → logprob: -11.627938270568848
    8. '._' → logprob: -12.252938270568848
    9. '.py' → logprob: -13.502938270568848
    10. '_products' → logprob: -14.002938270568848

Token 259: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4742847681045532
    2. '=' → logprob: -0.9742847681045532
    3. ':' → logprob: -8.724285125732422
    4. '[' → logprob: -10.849285125732422
    5. '_data' → logprob: -11.724285125732422
    6. '   ' → logprob: -11.974285125732422
    7. ' ' → logprob: -13.099285125732422
    8. 's' → logprob: -13.224285125732422
    9. ' ={' → logprob: -13.474285125732422
    10. '={}' → logprob: -13.474285125732422

Token 260: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.0005645881756208837
    2. ' Dict' → logprob: -7.5005645751953125
    3. 'dict' → logprob: -11.375564575195312
    4. '   ' → logprob: -16.750564575195312
    5. '.Dict' → logprob: -16.750564575195312
    6. ' dict' → logprob: -18.125564575195312
    7. '_dict' → logprob: -18.250564575195312
    8. '       ' → logprob: -19.375564575195312
    9. '{' → logprob: -19.375564575195312
    10. 'DICT' → logprob: -20.000564575195312

Token 261: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.500000953674316
    3. '[
' → logprob: -14.500000953674316
    4. '```' → logprob: -15.000000953674316
    5. 'str' → logprob: -16.750001907348633
    6. '=str' → logprob: -18.250001907348633
    7. '[int' → logprob: -18.625001907348633
    8. ']' → logprob: -18.625001907348633
    9. ')' → logprob: -19.000001907348633
    10. '<|end|>' → logprob: -19.250001907348633

Token 262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015605698572471738
    2. ']' → logprob: -6.626560688018799
    3. ' ,' → logprob: -8.50156021118164
    4. '[' → logprob: -11.37656021118164
    5. 'Product' → logprob: -11.50156021118164
    6. '   ' → logprob: -12.00156021118164
    7. ' ' → logprob: -14.37656021118164
    8. ',
' → logprob: -14.50156021118164
    9. ')' → logprob: -14.62656021118164
    10. ' ]' → logprob: -14.87656021118164

Token 263: ' Product' (ID: 7451)
  Prédit: 'Product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Product' → logprob: -0.0011705794604495168
    2. ' Product' → logprob: -6.751170635223389
    3. '	Product' → logprob: -14.87617015838623
    4. '   ' → logprob: -17.876171112060547
    5. 'product' → logprob: -18.376171112060547
    6. ' ' → logprob: -18.501171112060547
    7. ' product' → logprob: -19.876171112060547
    8. '  ' → logprob: -20.501171112060547
    9. '_Product' → logprob: -20.876171112060547
    10. '_product' → logprob: -21.126171112060547

Token 264: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2948405128554441e-05
    2. ']=' → logprob: -11.62501335144043
    3. ' ]' → logprob: -12.50001335144043
    4. '=' → logprob: -15.75001335144043
    5. '   ' → logprob: -16.87501335144043
    6. ')' → logprob: -17.62501335144043
    7. '>' → logprob: -18.37501335144043
    8. '       ' → logprob: -18.75001335144043
    9. '']' → logprob: -19.12501335144043
    10. '"]' → logprob: -19.12501335144043

Token 265: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021066665649414
    2. ' =' → logprob: -2.350210666656494
    3. '={}' → logprob: -12.850210189819336
    4. ')' → logprob: -14.975210189819336
    5. '       ' → logprob: -15.600210189819336
    6. ']' → logprob: -15.975210189819336
    7. '={}
' → logprob: -15.975210189819336
    8. ' =
' → logprob: -16.225210189819336
    9. '[' → logprob: -16.475210189819336
    10. '={' → logprob: -16.600210189819336

Token 266: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.4968508183956146
    2. '{' → logprob: -0.996850848197937
    3. ' {}' → logprob: -4.496850967407227
    4. ' {' → logprob: -4.496850967407227
    5. '{x' → logprob: -9.621850967407227
    6. '{name' → logprob: -9.996850967407227
    7. 'dict' → logprob: -10.246850967407227
    8. '{
' → logprob: -10.371850967407227
    9. '{}
' → logprob: -10.871850967407227
    10. '{id' → logprob: -10.996850967407227

Token 267: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28953713178634644
    2. ' for' → logprob: -1.5395371913909912
    3. 'for' → logprob: -3.539537191390991
    4. '<|end|>' → logprob: -5.664536952972412
    5. '        ' → logprob: -6.914536952972412
    6. ' ' → logprob: -6.914536952972412
    7. '	for' → logprob: -7.414536952972412
    8. '   ' → logprob: -7.789536952972412
    9. '        
' → logprob: -8.16453742980957
    10. '	' → logprob: -8.16453742980957

Token 268: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0069753751158714294
    2. ' for' → logprob: -5.006975173950195
    3. '       ' → logprob: -8.256975173950195
    4. '	for' → logprob: -14.756975173950195
    5. '   ' → logprob: -16.006975173950195
    6. '
' → logprob: -18.006975173950195
    7. '```' → logprob: -18.256975173950195
    8. '	' → logprob: -18.506975173950195
    9. '        
' → logprob: -18.881975173950195
    10. '        ' → logprob: -19.631975173950195

Token 269: ' name' (ID: 1308)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.09045807272195816
    2. ' name' → logprob: -2.4654581546783447
    3. 'i' → logprob: -7.590457916259766
    4. 'p' → logprob: -7.715457916259766
    5. ' i' → logprob: -8.465457916259766
    6. ' pname' → logprob: -8.465457916259766
    7. '   ' → logprob: -9.465457916259766
    8. ' ' → logprob: -10.965457916259766
    9. ' p' → logprob: -11.340457916259766
    10. 'n' → logprob: -11.590457916259766

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014013137842994183
    2. ' ,' → logprob: -9.125140190124512
    3. ',value' → logprob: -11.625140190124512
    4. ',w' → logprob: -12.000140190124512
    5. ',num' → logprob: -12.375140190124512
    6. ',name' → logprob: -13.250140190124512
    7. 'weight' → logprob: -13.250140190124512
    8. ',int' → logprob: -13.625140190124512
    9. ',data' → logprob: -13.750140190124512
    10. ',length' → logprob: -13.875140190124512

Token 271: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.008616226725280285
    2. ' weight' → logprob: -4.7586164474487305
    3. 'weig' → logprob: -14.13361644744873
    4. 'w' → logprob: -14.25861644744873
    5. 'wt' → logprob: -15.13361644744873
    6. 'we' → logprob: -16.758615493774414
    7. ' ' → logprob: -16.883615493774414
    8. '_weight' → logprob: -18.008615493774414
    9. 'wei' → logprob: -18.133615493774414
    10. '   ' → logprob: -18.258615493774414

Token 272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.074907287256792e-05
    2. ' ,' → logprob: -10.12506103515625
    3. ',int' → logprob: -10.87506103515625
    4. ',value' → logprob: -14.25006103515625
    5. 'int' → logprob: -15.62506103515625
    6. ',height' → logprob: -16.12506103515625
    7. ',num' → logprob: -16.12506103515625
    8. ',size' → logprob: -16.37506103515625
    9. '_,' → logprob: -16.62506103515625
    10. ',s' → logprob: -16.62506103515625

Token 273: ' sell' (ID: 7437)
  Prédit: 'sell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sell' → logprob: -0.00023357603640761226
    2. ' sell' → logprob: -8.37523365020752
    3. 'sel' → logprob: -12.87523365020752
    4. ' ' → logprob: -16.125232696533203
    5. 's' → logprob: -16.375232696533203
    6. '  ' → logprob: -16.875232696533203
    7. '.sell' → logprob: -16.875232696533203
    8. '_sell' → logprob: -17.125232696533203
    9. '   ' → logprob: -17.250232696533203
    10. '    ' → logprob: -18.500232696533203

Token 274: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -9.849109119386412e-06
    2. '_' → logprob: -11.625009536743164
    3. ' _' → logprob: -15.625009536743164
    4. '_p' → logprob: -16.125009536743164
    5. '_value' → logprob: -16.125009536743164
    6. '_weight' → logprob: -16.250009536743164
    7. '_code' → logprob: -16.625009536743164
    8. '_amount' → logprob: -16.625009536743164
    9. '_prices' → logprob: -16.750009536743164
    10. '_token' → logprob: -17.125009536743164

Token 275: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.054896723479032516
    2. 'in' → logprob: -2.929896831512451
    3. ' ' → logprob: -11.804896354675293
    4. '   ' → logprob: -13.304896354675293
    5. '  ' → logprob: -13.554896354675293
    6. '    ' → logprob: -13.679896354675293
    7. '_in' → logprob: -13.804896354675293
    8. '	in' → logprob: -14.179896354675293
    9. ')' → logprob: -15.554896354675293
    10. ' i' → logprob: -15.554896354675293

Token 276: ' products' (ID: 3891)
  Prédit: 'products'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'products' → logprob: -0.0021859495900571346
    2. ' products' → logprob: -6.127185821533203
    3. 'product' → logprob: -14.877185821533203
    4. '   ' → logprob: -15.127185821533203
    5. '(products' → logprob: -16.002185821533203
    6. '.products' → logprob: -17.377185821533203
    7. 'productos' → logprob: -17.377185821533203
    8. 'projects' → logprob: -17.502185821533203
    9. '_products' → logprob: -18.377185821533203
    10. '-products' → logprob: -18.502185821533203

Token 277: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -1.6240566083070007e-06
    2. '_products' → logprob: -14.250001907348633
    3. 's' → logprob: -15.500001907348633
    4. ':' → logprob: -15.750001907348633
    5. 'data' → logprob: -16.000001907348633
    6. '   ' → logprob: -16.000001907348633
    7. 'products' → logprob: -16.125001907348633
    8. ' in' → logprob: -16.250001907348633
    9. '_d' → logprob: -17.125001907348633
    10. ':
' → logprob: -17.250001907348633

Token 278: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002890109783038497
    2. ':
' → logprob: -5.877890110015869
    3. '):' → logprob: -9.627889633178711
    4. '       ' → logprob: -12.127889633178711
    5. '):
' → logprob: -12.127889633178711
    6. ')' → logprob: -12.752889633178711
    7. ',' → logprob: -13.127889633178711
    8. '   ' → logprob: -13.252889633178711
    9. ':
' → logprob: -14.002889633178711
    10. ' :' → logprob: -14.627889633178711

Token 279: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005866335122846067
    2. '       ' → logprob: -7.62558650970459
    3. '               ' → logprob: -10.37558650970459
    4. '            
' → logprob: -10.50058650970459
    5. '   ' → logprob: -11.75058650970459
    6. '<|end|>' → logprob: -12.12558650970459
    7. '          ' → logprob: -12.37558650970459
    8. ' self' → logprob: -12.50058650970459
    9. '            ' → logprob: -12.62558650970459
    10. '        ' → logprob: -12.87558650970459

Token 280: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.11304739862680435
    2. 'self' (adapté à ' self') → logprob: -2.3630473613739014
    3. '           ' → logprob: -4.3630475997924805
    4. '   ' → logprob: -11.48804759979248
    5. '       ' → logprob: -12.36304759979248
    6. '               ' → logprob: -12.86304759979248
    7. '	self' → logprob: -14.23804759979248
    8. '
' → logprob: -14.48804759979248
    9. ' ' → logprob: -14.98804759979248
    10. '            ' → logprob: -15.86304759979248

Token 281: '.products' (ID: 71677)
  Prédit: '.products'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.products' → logprob: -4.7159857786027715e-05
    2. ' .' → logprob: -11.000046730041504
    3. 'products' → logprob: -11.125046730041504
    4. '.' → logprob: -11.125046730041504
    5. '.product' → logprob: -14.750046730041504
    6. '.Products' → logprob: -15.750046730041504
    7. '.prod' → logprob: -16.25004768371582
    8. '.projects' → logprob: -16.62504768371582
    9. '.pro' → logprob: -17.25004768371582
    10. '.posts' → logprob: -17.25004768371582

Token 282: '[name' (ID: 23001)
  Prédit: '[name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[name' → logprob: -0.0007115975022315979
    2. '[' → logprob: -7.250711441040039
    3. ' [' → logprob: -13.375711441040039
    4. '[
' → logprob: -16.87571144104004
    5. '
' → logprob: -17.12571144104004
    6. 'name' → logprob: -17.37571144104004
    7. '[n' → logprob: -18.25071144104004
    8. '][' → logprob: -18.62571144104004
    9. '

' → logprob: -18.62571144104004
    10. ']' → logprob: -18.75071144104004

Token 283: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.968312951968983e-06
    2. ' ]' → logprob: -11.625009536743164
    3. ']=' → logprob: -13.875009536743164
    4. ')' → logprob: -18.625009536743164
    5. '=' → logprob: -18.750009536743164
    6. ' =' → logprob: -19.000009536743164
    7. '`]' → logprob: -21.000009536743164
    8. '']' → logprob: -21.125009536743164
    9. ']
' → logprob: -21.625009536743164
    10. '"]' → logprob: -22.250009536743164

Token 284: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8700919151306152
    2. '=' → logprob: -1.1200919151306152
    3. ']' → logprob: -1.3700919151306152
    4. ']=' → logprob: -7.245091915130615
    5. ' ]' → logprob: -10.495092391967773
    6. ')' → logprob: -11.870092391967773
    7. ' ' → logprob: -12.745092391967773
    8. '[' → logprob: -14.620092391967773
    9. ' =
' → logprob: -14.870092391967773
    10. ')=' → logprob: -15.370092391967773

Token 285: ' Product' (ID: 7451)
  Prédit: ' Product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Product' → logprob: -0.5759394764900208
    2. 'Product' → logprob: -0.8259394764900208
    3. '	Product' → logprob: -16.825939178466797
    4. ' product' → logprob: -20.450939178466797
    5. '_Product' → logprob: -20.450939178466797
    6. '(Product' → logprob: -21.575939178466797
    7. 'product' → logprob: -22.325939178466797
    8. '_product' → logprob: -22.575939178466797
    9. ' ' → logprob: -22.700939178466797
    10. '<Product' → logprob: -22.825939178466797

Token 286: '(name' (ID: 5587)
  Prédit: '(name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(name' → logprob: -0.011056429706513882
    2. '(' → logprob: -4.511056423187256
    3. '(
' → logprob: -12.261056900024414
    4. 'name' → logprob: -12.761056900024414
    5. ' (' → logprob: -13.886056900024414
    6. ' name' → logprob: -16.636056900024414
    7. '(n' → logprob: -17.386056900024414
    8. '(

' → logprob: -18.136056900024414
    9. '{name' → logprob: -19.136056900024414
    10. '((' → logprob: -20.011056900024414

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.643152740551159e-05
    2. ' ,' → logprob: -10.250036239624023
    3. ')' → logprob: -15.000036239624023
    4. ',
' → logprob: -15.375036239624023
    5. ',name' → logprob: -15.625036239624023
    6. '   ' → logprob: -16.250036239624023
    7. '‌,' → logprob: -16.875036239624023
    8. '    ' → logprob: -17.000036239624023
    9. '           ' → logprob: -17.125036239624023
    10. '        ' → logprob: -17.625036239624023

Token 288: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.03804183006286621
    2. ' weight' → logprob: -3.288041830062866
    3. '   ' → logprob: -15.663042068481445
    4. '    ' → logprob: -15.913042068481445
    5. 'weig' → logprob: -16.538042068481445
    6. ' ' → logprob: -17.163042068481445
    7. '
' → logprob: -17.413042068481445
    8. '       ' → logprob: -17.913042068481445
    9. '  ' → logprob: -17.913042068481445
    10. '(weight' → logprob: -18.163042068481445

Token 289: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.961759259458631e-06
    2. ' ,' → logprob: -12.500004768371582
    3. ',
' → logprob: -14.125004768371582
    4. ')' → logprob: -15.500004768371582
    5. ',

' → logprob: -16.6250057220459
    6. ',w' → logprob: -16.8750057220459
    7. '‌,' → logprob: -17.2500057220459
    8. '<|end|>' → logprob: -17.3750057220459
    9. ',int' → logprob: -17.7500057220459
    10. ',width' → logprob: -18.8750057220459

Token 290: ' sell' (ID: 7437)
  Prédit: 'sell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sell' → logprob: -0.1002068892121315
    2. ' sell' → logprob: -2.3502068519592285
    3. '.sell' → logprob: -16.85020637512207
    4. '
' → logprob: -17.35020637512207
    5. ' ' → logprob: -17.35020637512207
    6. '_sell' → logprob: -18.10020637512207
    7. '   ' → logprob: -18.22520637512207
    8. 'sel' → logprob: -18.60020637512207
    9. 's' → logprob: -18.97520637512207
    10. 'sold' → logprob: -19.35020637512207

Token 291: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -13.25000286102295
    3. 'price' → logprob: -15.37500286102295
    4. ' _' → logprob: -15.87500286102295
    5. '_code' → logprob: -16.500001907348633
    6. ')' → logprob: -17.000001907348633
    7. ',' → logprob: -17.125001907348633
    8. '       ' → logprob: -17.250001907348633
    9. '           ' → logprob: -17.500001907348633
    10. '_p' → logprob: -17.750001907348633

Token 292: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.6312321753939614e-05
    2. ')
' → logprob: -10.250036239624023
    3. '       ' → logprob: -14.500036239624023
    4. ' )' → logprob: -14.750036239624023
    5. ')

' → logprob: -17.250036239624023
    6. ')`' → logprob: -18.000036239624023
    7. '           ' → logprob: -18.500036239624023
    8. '   ' → logprob: -18.500036239624023
    9. ')
' → logprob: -19.125036239624023
    10. '))' → logprob: -19.250036239624023

Token 293: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.052329644560813904
    2. 'self' → logprob: -3.6773295402526855
    3. '
' → logprob: -3.9273295402526855
    4. '        
' → logprob: -5.3023295402526855
    5. '```' → logprob: -7.9273295402526855
    6. ' self' → logprob: -8.177330017089844
    7. '<|end|>' → logprob: -8.552330017089844
    8. '        ' → logprob: -10.427330017089844
    9. '
' → logprob: -11.302330017089844
    10. '        
        
' → logprob: -11.552330017089844

Token 294: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003700165543705225
    2. '       ' → logprob: -8.000370025634766
    3. '
' → logprob: -11.000370025634766
    4. '#' (adapté à ' #') → logprob: -11.625370025634766
    5. ' self' → logprob: -12.250370025634766
    6. '        
' → logprob: -12.875370025634766
    7. '   ' → logprob: -13.625370025634766
    8. 'for' → logprob: -15.875370025634766
    9. '```' → logprob: -16.000370025634766
    10. 'def' → logprob: -17.000370025634766

Token 295: ' Initialize' (ID: 19496)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007478613872081041
    2. '#' → logprob: -5.007478713989258
    3. '       ' → logprob: -8.132478713989258
    4. 'Initialize' → logprob: -8.507478713989258
    5. 'for' → logprob: -8.882478713989258
    6. ' self' → logprob: -9.132478713989258
    7. '
' → logprob: -11.757478713989258
    8. 'cities' → logprob: -12.882478713989258
    9. '   ' → logprob: -13.632478713989258
    10. ' Initialize' → logprob: -13.882478713989258

Token 296: ' cities' (ID: 15636)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2610165476799011
    2. ' self' → logprob: -1.761016607284546
    3. ' cities' → logprob: -3.261016607284546
    4. 'cities' → logprob: -4.011016368865967
    5. '       ' → logprob: -6.761016368865967
    6. '#' → logprob: -10.011016845703125
    7. '
' → logprob: -10.136016845703125
    8. '   ' → logprob: -10.761016845703125
    9. '```' → logprob: -11.136016845703125
    10. 's' → logprob: -11.261016845703125

Token 297: ' list' (ID: 1562)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24340204894542694
    2. ':' → logprob: -1.6184020042419434
    3. ' for' → logprob: -4.993402004241943
    4. 'for' → logprob: -5.118402004241943
    5. 'self' → logprob: -5.993402004241943
    6. '
' → logprob: -7.368402004241943
    7. ' self' → logprob: -7.493402004241943
    8. ' =' → logprob: -7.618402004241943
    9. '   ' → logprob: -7.743402004241943
    10. ':
' → logprob: -8.743402481079102

Token 298: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032273868564516306
    2. ':' → logprob: -5.878227233886719
    3. 'self' → logprob: -8.628227233886719
    4. '
' → logprob: -9.253227233886719
    5. ' self' → logprob: -9.503227233886719
    6. ':
' → logprob: -10.628227233886719
    7. ',' → logprob: -11.378227233886719
    8. '   ' → logprob: -12.003227233886719
    9. ' =' → logprob: -12.128227233886719
    10. '<|end|>' → logprob: -12.378227233886719

Token 299: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000936951139010489
    2. ':' → logprob: -7.625936985015869
    3. 'self' → logprob: -9.375936508178711
    4. '[]' → logprob: -9.375936508178711
    5. '<|end|>' → logprob: -9.375936508178711
    6. ',' → logprob: -9.625936508178711
    7. ' for' → logprob: -10.500936508178711
    8. ' self' → logprob: -11.000936508178711
    9. '=[]' → logprob: -11.250936508178711
    10. ':
' → logprob: -11.250936508178711

Token 300: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04116543009877205
    2. ' self' → logprob: -3.791165351867676
    3. '       ' → logprob: -4.041165351867676
    4. '
' → logprob: -8.666165351867676
    5. '   ' → logprob: -11.791165351867676
    6. '```' → logprob: -13.791165351867676
    7. '        
' → logprob: -13.916165351867676
    8. '[self' → logprob: -14.916165351867676
    9. ' ' → logprob: -15.416165351867676
    10. '(self' → logprob: -15.416165351867676

Token 301: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.011646588332951069
    2. ' .' → logprob: -5.386646747589111
    3. 'cities' → logprob: -5.636646747589111
    4. '.' → logprob: -5.761646747589111
    5. '.city' → logprob: -9.011646270751953
    6. '.classes' → logprob: -10.511646270751953
    7. 'Cities' → logprob: -10.636646270751953
    8. ' cities' → logprob: -11.136646270751953
    9. ').' → logprob: -11.386646270751953
    10. '   ' → logprob: -11.511646270751953

Token 302: 'ities' (ID: 1629)
  Prédit: 'ities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ities' → logprob: -4.4849443838757e-06
    2. '   ' → logprob: -13.750004768371582
    3. 'it' → logprob: -13.875004768371582
    4. 'itys' → logprob: -14.000004768371582
    5. 'ity' → logprob: -14.500004768371582
    6. 'ites' → logprob: -15.375004768371582
    7. 'iti' → logprob: -15.500004768371582
    8. 'ties' → logprob: -15.750004768371582
    9. 'cities' → logprob: -15.750004768371582
    10. 'itie' → logprob: -16.500003814697266

Token 303: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02814924530684948
    2. '=' → logprob: -4.278149127960205
    3. ' =' → logprob: -4.278149127960205
    4. '=[]' → logprob: -11.028149604797363
    5. ' :' → logprob: -13.028149604797363
    6. ':list' → logprob: -14.153149604797363
    7. '[:]' → logprob: -15.403149604797363
    8. '=[]
' → logprob: -15.403149604797363
    9. '.append' → logprob: -15.778149604797363
    10. ' ' → logprob: -16.403148651123047

Token 304: ' List' (ID: 2655)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5084827542304993
    2. ' []' → logprob: -1.0084826946258545
    3. 'List' → logprob: -3.7584826946258545
    4. ' List' → logprob: -4.758482933044434
    5. '[List' → logprob: -6.383482933044434
    6. '[' → logprob: -8.883482933044434
    7. ' [' → logprob: -9.883482933044434
    8. '=[]' → logprob: -11.133482933044434
    9. ' list' → logprob: -11.508482933044434
    10. '[]
' → logprob: -11.883482933044434

Token 305: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2723104848410003e-05
    2. ' =' → logprob: -11.375022888183594
    3. '[
' → logprob: -12.625022888183594
    4. '=' → logprob: -12.875022888183594
    5. '[int' → logprob: -13.375022888183594
    6. '[self' → logprob: -13.750022888183594
    7. '```' → logprob: -14.125022888183594
    8. '[C' → logprob: -14.500022888183594
    9. '[List' → logprob: -14.500022888183594
    10. '.append' → logprob: -15.750022888183594

Token 306: 'City' (ID: 15764)
  Prédit: 'City'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'City' → logprob: -1.7432603272027336e-06
    2. ' City' → logprob: -13.500001907348633
    3. '[' → logprob: -14.875001907348633
    4. ']' → logprob: -19.375001907348633
    5. 'Cities' → logprob: -19.625001907348633
    6. '_city' → logprob: -20.250001907348633
    7. '   ' → logprob: -20.875001907348633
    8. 'city' → logprob: -20.875001907348633
    9. 'Market' → logprob: -21.375001907348633
    10. '.City' → logprob: -21.375001907348633

Token 307: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.3856492842023727e-06
    2. ']=' → logprob: -13.625000953674316
    3. ' ]' → logprob: -15.875000953674316
    4. ')' → logprob: -17.000001907348633
    5. '[' → logprob: -17.375001907348633
    6. '=' → logprob: -17.625001907348633
    7. '[]' → logprob: -19.875001907348633
    8. ']
' → logprob: -20.625001907348633
    9. '()]' → logprob: -20.750001907348633
    10. ' =' → logprob: -20.875001907348633

Token 308: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193139910697937
    2. ' =' → logprob: -1.5019314289093018
    3. '=[]' → logprob: -13.001931190490723
    4. '   ' → logprob: -16.50193214416504
    5. ' ' → logprob: -17.37693214416504
    6. '=[]
' → logprob: -17.62693214416504
    7. ')' → logprob: -18.62693214416504
    8. '＝' → logprob: -18.75193214416504
    9. '.append' → logprob: -19.12693214416504
    10. '[]' → logprob: -19.62693214416504

Token 309: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.01816176250576973
    2. '[]
' → logprob: -4.018161773681641
    3. '[]

' → logprob: -11.76816177368164
    4. ' []' → logprob: -12.51816177368164
    5. '[' → logprob: -15.14316177368164
    6. '[]}' → logprob: -15.51816177368164
    7. '[]"' → logprob: -16.76816177368164
    8. '[
' → logprob: -17.14316177368164
    9. ' []
' → logprob: -17.76816177368164
    10. '[],' → logprob: -18.39316177368164

Token 310: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003085613250732422
    2. ' for' → logprob: -6.378085613250732
    3. 'for' → logprob: -7.003085613250732
    4. '
' → logprob: -7.878085613250732
    5. '   ' → logprob: -9.87808609008789
    6. '	' → logprob: -10.87808609008789
    7. '        
' → logprob: -12.00308609008789
    8. '	for' → logprob: -12.12808609008789
    9. '```' → logprob: -12.37808609008789
    10. '<|end|>' → logprob: -12.87808609008789

Token 311: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0009714908665046096
    2. '       ' → logprob: -7.25097131729126
    3. ' for' → logprob: -8.250971794128418
    4. '   ' → logprob: -14.750971794128418
    5. '	for' → logprob: -16.6259708404541
    6. ' ' → logprob: -16.8759708404541
    7. '```' → logprob: -17.7509708404541
    8. '
' → logprob: -19.6259708404541
    9. '     ' → logprob: -19.7509708404541
    10. '      ' → logprob: -19.8759708404541

Token 312: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.1863218992948532
    2. ' idx' → logprob: -1.9363218545913696
    3. 'city' → logprob: -4.06132173538208
    4. 'i' → logprob: -5.43632173538208
    5. ' city' → logprob: -5.68632173538208
    6. ' i' → logprob: -7.81132173538208
    7. 'c' → logprob: -8.436322212219238
    8. 'cid' → logprob: -10.186322212219238
    9. '(idx' → logprob: -10.811322212219238
    10. '   ' → logprob: -10.811322212219238

Token 313: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19377443194389343
    2. ' in' → logprob: -1.8187744617462158
    3. ' ,' → logprob: -4.318774223327637
    4. 'in' → logprob: -7.443774223327637
    5. '_,' → logprob: -11.068774223327637
    6. ' ' → logprob: -12.068774223327637
    7. ',c' → logprob: -12.943774223327637
    8. ',(' → logprob: -13.818774223327637
    9. '0' → logprob: -14.443774223327637
    10. ',value' → logprob: -14.568774223327637

Token 314: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.013717379420995712
    2. 'x' → logprob: -5.263717174530029
    3. ' (' → logprob: -5.388717174530029
    4. '(city' → logprob: -5.638717174530029
    5. 'city' → logprob: -8.763717651367188
    6. '(' → logprob: -9.263717651367188
    7. '(data' → logprob: -10.638717651367188
    8. '(c' → logprob: -11.638717651367188
    9. 'data' → logprob: -11.638717651367188
    10. ' x' → logprob: -11.888717651367188

Token 315: 'L' (ID: 43)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001454955490771681
    2. ' x' → logprob: -9.00014591217041
    3. '_x' → logprob: -11.25014591217041
    4. '   ' → logprob: -12.62514591217041
    5. '_,' → logprob: -12.87514591217041
    6. 'city' → logprob: -13.62514591217041
    7. 'cx' → logprob: -14.50014591217041
    8. ' ' → logprob: -15.25014591217041
    9. '  ' → logprob: -15.50014591217041
    10. 'c' → logprob: -15.75014591217041

Token 316: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015473345294594765
    2. ' ,' → logprob: -4.515473365783691
    3. ',x' → logprob: -5.890473365783691
    4. 'x' → logprob: -6.515473365783691
    5. ',int' → logprob: -9.515473365783691
    6. ' x' → logprob: -10.765473365783691
    7. '=' → logprob: -11.390473365783691
    8. 'int' → logprob: -11.765473365783691
    9. ',
' → logprob: -11.765473365783691
    10. '       ' → logprob: -12.140473365783691

Token 317: ' X' (ID: 2127)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0091426195576787
    2. 'X' → logprob: -4.7591423988342285
    3. ' x' → logprob: -7.6341423988342285
    4. '   ' → logprob: -11.134142875671387
    5. '_x' → logprob: -11.759142875671387
    6. ' X' → logprob: -12.009142875671387
    7. 'R' → logprob: -12.509142875671387
    8. ' ' → logprob: -13.384142875671387
    9. '  ' → logprob: -13.946642875671387
    10. ')' → logprob: -14.196642875671387

Token 318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002956591488327831
    2. ' ,' → logprob: -8.250295639038086
    3. ',Y' → logprob: -10.500295639038086
    4. ',y' → logprob: -12.125295639038086
    5. ',Q' → logprob: -15.375295639038086
    6. ',
' → logprob: -15.625295639038086
    7. '_,' → logprob: -15.625295639038086
    8. ' ' → logprob: -16.625295639038086
    9. ')' → logprob: -16.625295639038086
    10. ',K' → logprob: -16.875295639038086

Token 319: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0003374886582605541
    2. ' Y' → logprob: -8.000337600708008
    3. '   ' → logprob: -14.000337600708008
    4. '    ' → logprob: -14.750337600708008
    5. '  ' → logprob: -15.250337600708008
    6. ' ' → logprob: -15.250337600708008
    7. '	Y' → logprob: -15.500337600708008
    8. 'y' → logprob: -16.875337600708008
    9. ')' → logprob: -17.750337600708008
    10. '     ' → logprob: -17.875337600708008

Token 320: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006542971823364496
    2. ' ,' → logprob: -7.625654220581055
    3. ',m' → logprob: -9.125654220581055
    4. ',c' → logprob: -10.875654220581055
    5. ',List' → logprob: -11.875654220581055
    6. ')' → logprob: -12.000654220581055
    7. ',list' → logprob: -12.125654220581055
    8. ',s' → logprob: -12.750654220581055
    9. ',p' → logprob: -13.125654220581055
    10. '),' → logprob: -13.500654220581055

Token 321: ' items' (ID: 4732)
  Prédit: 'market'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'market' → logprob: -0.04034997895359993
    2. 'products' → logprob: -4.290349960327148
    3. 'city' → logprob: -4.665349960327148
    4. 'mp' → logprob: -5.040349960327148
    5. 'm' → logprob: -5.915349960327148
    6. 'product' → logprob: -6.165349960327148
    7. 'markets' → logprob: -6.165349960327148
    8. 'items' → logprob: -6.290349960327148
    9. 'prod' → logprob: -8.040349960327148
    10. 'goods' → logprob: -8.665349960327148

Token 322: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001394161517964676
    2. 'in' → logprob: -9.000139236450195
    3. ' )' → logprob: -11.250139236450195
    4. ' in' → logprob: -14.125139236450195
    5. '   ' → logprob: -14.375139236450195
    6. '_in' → logprob: -15.250139236450195
    7. 'items' → logprob: -15.250139236450195
    8. ')=' → logprob: -15.375139236450195
    9. 's' → logprob: -15.625139236450195
    10. '_list' → logprob: -15.875139236450195

Token 323: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03805985301733017
    2. 'in' → logprob: -3.288059949874878
    3. ')' → logprob: -11.038060188293457
    4. ' ' → logprob: -13.913060188293457
    5. ',' → logprob: -15.163060188293457
    6. '	in' → logprob: -15.288060188293457
    7. '   ' → logprob: -15.538060188293457
    8. '_in' → logprob: -16.16305923461914
    9. '  ' → logprob: -16.41305923461914
    10. '    ' → logprob: -16.66305923461914

Token 324: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.004082435742020607
    2. ' enumerate' → logprob: -5.504082202911377
    3. '   ' → logprob: -12.879082679748535
    4. '
' → logprob: -14.379082679748535
    5. 'enum' → logprob: -15.004082679748535
    6. 'en' → logprob: -16.00408172607422
    7. 'in' → logprob: -16.12908172607422
    8. 'enqueue' → logprob: -16.25408172607422
    9. '```' → logprob: -16.50408172607422
    10. ' ' → logprob: -17.12908172607422

Token 325: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.8720784783363342
    2. ' cities' → logprob: -1.2470784187316895
    3. 'cities' → logprob: -1.2470784187316895
    4. ' (' → logprob: -5.4970784187316895
    5. 'c' → logprob: -6.6220784187316895
    6. ')' → logprob: -7.6220784187316895
    7. '(' → logprob: -7.7470784187316895
    8. ')c' → logprob: -8.372078895568848
    9. ',' → logprob: -8.997078895568848
    10. ',c' → logprob: -8.997078895568848

Token 326: 'ities' (ID: 1629)
  Prédit: 'ities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ities' → logprob: -0.0003396343090571463
    2. 'cities' → logprob: -8.00033950805664
    3. 'ites' → logprob: -13.25033950805664
    4. 'it' → logprob: -14.25033950805664
    5. ' cities' → logprob: -15.00033950805664
    6. 'ity' → logprob: -15.12533950805664
    7. 'ITIES' → logprob: -15.50033950805664
    8. 'ties' → logprob: -15.62533950805664
    9. 's' → logprob: -15.62533950805664
    10. 'itys' → logprob: -15.75033950805664

Token 327: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.004029718693345785
    2. '):
' → logprob: -5.754029750823975
    3. '):' → logprob: -7.129029750823975
    4. 's' → logprob: -11.254029273986816
    5. '   ' → logprob: -11.379029273986816
    6. ')' → logprob: -12.004029273986816
    7. '_' → logprob: -12.254029273986816
    8. 'data' → logprob: -12.379029273986816
    9. ')_' → logprob: -13.129029273986816
    10. '):
' → logprob: -13.504029273986816

Token 328: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1279935985803604
    2. '):
' → logprob: -2.127993583679199
    3. '       ' → logprob: -7.002993583679199
    4. ':' → logprob: -10.0029935836792
    5. '):
' → logprob: -10.1279935836792
    6. ',' → logprob: -10.5029935836792
    7. ')' → logprob: -10.8779935836792
    8. '   ' → logprob: -11.3779935836792
    9. ' ):' → logprob: -12.0029935836792
    10. '           ' → logprob: -12.7529935836792

Token 329: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.33600476384162903
    2. ' start' → logprob: -1.5860047340393066
    3. '1' → logprob: -2.5860047340393066
    4. '0' → logprob: -5.836004734039307
    5. '):' → logprob: -6.961004734039307
    6. ' ' → logprob: -7.086004734039307
    7. ')' → logprob: -8.211005210876465
    8. '   ' → logprob: -9.086005210876465
    9. '       ' → logprob: -9.711005210876465
    10. '):
' → logprob: -9.711005210876465

Token 330: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.1008713702030946e-06
    2. '=
' → logprob: -13.625001907348633
    3. '1' → logprob: -14.000001907348633
    4. ')=' → logprob: -18.250001907348633
    5. '=

' → logprob: -19.000001907348633
    6. ' =' → logprob: -19.250001907348633
    7. ')' → logprob: -19.500001907348633
    8. '   ' → logprob: -21.000001907348633
    9. '=}' → logprob: -21.125001907348633
    10. ' ' → logprob: -21.375001907348633

Token 331: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03824642673134804
    2. '0' → logprob: -3.2882463932037354
    3. '   ' → logprob: -9.038246154785156
    4. ' ' → logprob: -9.413246154785156
    5. '           ' → logprob: -13.538246154785156
    6. '       ' → logprob: -14.038246154785156
    7. ')' → logprob: -14.288246154785156
    8. '2' → logprob: -14.663246154785156
    9. '
' → logprob: -14.913246154785156
    10. '=' → logprob: -15.163246154785156

Token 332: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38751059770584106
    2. '):
' → logprob: -1.1375105381011963
    3. '       ' → logprob: -7.637510776519775
    4. '):
' → logprob: -9.137510299682617
    5. ')' → logprob: -10.387510299682617
    6. ':' → logprob: -11.387510299682617
    7. '   ' → logprob: -13.012510299682617
    8. '           ' → logprob: -13.387510299682617
    9. '):

' → logprob: -13.637510299682617
    10. ',' → logprob: -14.012510299682617

Token 333: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023495997302234173
    2. '   ' → logprob: -7.127349376678467
    3. '       ' → logprob: -7.877349376678467
    4. ' ' → logprob: -8.002349853515625
    5. ' self' → logprob: -8.627349853515625
    6. ' market' → logprob: -8.752349853515625
    7. ')' → logprob: -9.127349853515625
    8. '    ' → logprob: -10.127349853515625
    9. ',' → logprob: -10.252349853515625
    10. '  ' → logprob: -10.502349853515625

Token 334: ' market' (ID: 2910)
  Prédit: 'market'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'market' (adapté à ' market') → logprob: -0.10708995163440704
    2. ' market' → logprob: -2.3570899963378906
    3. '           ' → logprob: -5.107089996337891
    4. 'products' → logprob: -8.10708999633789
    5. '   ' → logprob: -8.48208999633789
    6. 'm' → logprob: -9.35708999633789
    7. '       ' → logprob: -9.60708999633789
    8. '_market' → logprob: -9.98208999633789
    9. ' products' → logprob: -10.85708999633789
    10. '               ' → logprob: -10.98208999633789

Token 335: '_products' (ID: 68048)
  Prédit: '_products'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_products' → logprob: -0.0001887591351987794
    2. 'products' → logprob: -9.250188827514648
    3. '_items' → logprob: -9.500188827514648
    4. '_market' → logprob: -11.500188827514648
    5. '_product' → logprob: -12.250188827514648
    6. '_pro' → logprob: -13.750188827514648
    7. '_' → logprob: -14.250188827514648
    8. 'Products' → logprob: -14.875188827514648
    9. '=' → logprob: -15.375188827514648
    10. ' =' → logprob: -16.00018882751465

Token 336: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16033238172531128
    2. '=' → logprob: -1.910332441329956
    3. ':' → logprob: -9.910332679748535
    4. '=[]' → logprob: -9.910332679748535
    5. '=[]
' → logprob: -12.410332679748535
    6. '_list' → logprob: -13.285332679748535
    7. '=[' → logprob: -14.160332679748535
    8. 's' → logprob: -14.285332679748535
    9. '_products' → logprob: -14.410332679748535
    10. '   ' → logprob: -15.535332679748535

Token 337: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0632222518324852
    2. '[]
' → logprob: -2.8132221698760986
    3. ' []' → logprob: -7.563222408294678
    4. '[' → logprob: -7.563222408294678
    5. '[
' → logprob: -8.56322193145752
    6. ' []
' → logprob: -11.43822193145752
    7. '[]

' → logprob: -11.81322193145752
    8. '[]}' → logprob: -12.56322193145752
    9. ' [' → logprob: -13.93822193145752
    10. '[]>' → logprob: -14.68822193145752

Token 338: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004998090211302042
    2. ' for' → logprob: -5.504998207092285
    3. 'for' → logprob: -7.129998207092285
    4. '       ' → logprob: -9.254998207092285
    5. '
' → logprob: -11.754998207092285
    6. '               ' → logprob: -12.379998207092285
    7. '   ' → logprob: -12.504998207092285
    8. '          ' → logprob: -13.629998207092285
    9. '		' → logprob: -13.754998207092285
    10. '	       ' → logprob: -13.754998207092285

Token 339: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04083074629306793
    2. '           ' → logprob: -3.5408308506011963
    3. ' for' → logprob: -4.540830612182617
    4. '       ' → logprob: -8.040830612182617
    5. '   ' → logprob: -10.415830612182617
    6. '	for' → logprob: -13.540830612182617
    7. '               ' → logprob: -14.790830612182617
    8. ' ' → logprob: -15.415830612182617
    9. '
' → logprob: -15.540830612182617
    10. '	       ' → logprob: -16.165830612182617

Token 340: ' r' (ID: 428)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.4286383092403412
    2. 'p' → logprob: -2.178638219833374
    3. 'prod' → logprob: -2.428638219833374
    4. 'item' → logprob: -2.553638219833374
    5. 'name' → logprob: -2.803638219833374
    6. ' pname' → logprob: -5.303638458251953
    7. ' product' → logprob: -5.803638458251953
    8. ' item' → logprob: -7.803638458251953
    9. ' prod' → logprob: -8.553638458251953
    10. 'iname' → logprob: -9.428638458251953

Token 341: '_name' (ID: 2483)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.02688918262720108
    2. ',' → logprob: -4.526889324188232
    3. '_name' → logprob: -4.651889324188232
    4. ' name' → logprob: -5.901889324188232
    5. 'item' → logprob: -7.026889324188232
    6. 'product' → logprob: -7.276889324188232
    7. '   ' → logprob: -7.776889324188232
    8. ',name' → logprob: -8.401888847351074
    9. ' in' → logprob: -8.526888847351074
    10. ' product' → logprob: -8.651888847351074

Token 342: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000344044849043712
    2. ',r' → logprob: -8.000344276428223
    3. ' ,' → logprob: -12.000344276428223
    4. 'r' → logprob: -13.375344276428223
    5. '‌,' → logprob: -14.875344276428223
    6. '_,' → logprob: -16.375343322753906
    7. ',n' → logprob: -16.750343322753906
    8. ',row' → logprob: -17.125343322753906
    9. ',
' → logprob: -17.375343322753906
    10. ',user' → logprob: -17.500343322753906

Token 343: ' q' (ID: 2335)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10475271195173264
    2. 'buy' → logprob: -2.354752779006958
    3. 'b' → logprob: -6.104752540588379
    4. ' r' → logprob: -6.604752540588379
    5. ' buy' → logprob: -7.729752540588379
    6. 'price' → logprob: -8.604752540588379
    7. '   ' → logprob: -9.854752540588379
    8. '	r' → logprob: -10.104752540588379
    9. 'rb' → logprob: -10.667252540588379
    10. ' ' → logprob: -10.854752540588379

Token 344: '_price' (ID: 18814)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.1590079367160797
    2. 'ty' → logprob: -2.034008026123047
    3. 'buy' → logprob: -5.159008026123047
    4. 'ual' → logprob: -5.909008026123047
    5. 'price' → logprob: -6.159008026123047
    6. ',' → logprob: -7.034008026123047
    7. 'nty' → logprob: -7.159008026123047
    8. 'ue' → logprob: -7.784008026123047
    9. 'uity' → logprob: -7.784008026123047
    10. '_buy' → logprob: -8.034008026123047

Token 345: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04303298518061638
    2. 'in' → logprob: -3.1680328845977783
    3. ')' → logprob: -10.7930326461792
    4. ' ' → logprob: -12.2930326461792
    5. '	in' → logprob: -13.0430326461792
    6. '   ' → logprob: -13.4180326461792
    7. '  ' → logprob: -14.2930326461792
    8. '    ' → logprob: -14.4180326461792
    9. 'int' → logprob: -14.5430326461792
    10. ',' → logprob: -14.6680326461792

Token 346: ' items' (ID: 4732)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.008622728288173676
    2. ' items' → logprob: -4.758622646331787
    3. '(items' → logprob: -13.133623123168945
    4. 'item' → logprob: -13.758623123168945
    5. '.items' → logprob: -13.883623123168945
    6. ' ' → logprob: -13.883623123168945
    7. '	items' → logprob: -14.008623123168945
    8. '   ' → logprob: -14.258623123168945
    9. '[' → logprob: -14.633623123168945
    10. '
' → logprob: -14.883623123168945

Token 347: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4294772148132324
    2. ':
' → logprob: -1.0544772148132324
    3. '               ' → logprob: -7.554477214813232
    4. '):
' → logprob: -9.42947769165039
    5. ',' → logprob: -9.80447769165039
    6. '           ' → logprob: -10.30447769165039
    7. ' in' → logprob: -10.42947769165039
    8. ':
' → logprob: -10.92947769165039
    9. ':

' → logprob: -12.05447769165039
    10. '            ' → logprob: -12.17947769165039

Token 348: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0028417224530130625
    2. ' market' → logprob: -6.127841949462891
    3. '           ' → logprob: -7.627841949462891
    4. 'market' → logprob: -9.37784194946289
    5. '                
' → logprob: -11.12784194946289
    6. '	           ' → logprob: -11.50284194946289
    7. '       ' → logprob: -12.00284194946289
    8. '   ' → logprob: -12.00284194946289
    9. 'Market' → logprob: -12.00284194946289
    10. ' Market' → logprob: -12.12784194946289

Token 349: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' (adapté à ' product') → logprob: -0.9136311411857605
    2. '               ' → logprob: -1.1636312007904053
    3. ' product' → logprob: -1.9136312007904053
    4. 'market' → logprob: -2.9136312007904053
    5. 'if' → logprob: -3.5386312007904053
    6. ' if' → logprob: -3.7886312007904053
    7. ' market' → logprob: -4.038630962371826
    8. 'p' → logprob: -4.663630962371826
    9. '           ' → logprob: -5.788630962371826
    10. '
' → logprob: -6.913630962371826

Token 350: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975141443312168
    2. '=' → logprob: -3.5297513008117676
    3. ':' → logprob: -14.529751777648926
    4. '   ' → logprob: -15.904751777648926
    5. ' ' → logprob: -16.15475082397461
    6. ' =
' → logprob: -16.40475082397461
    7. ')' → logprob: -17.27975082397461
    8. '_product' → logprob: -17.40475082397461
    9. '=
' → logprob: -17.90475082397461
    10. '_obj' → logprob: -17.90475082397461

Token 351: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2519293427467346
    2. 'self' → logprob: -1.5019292831420898
    3. '               ' → logprob: -15.87692928314209
    4. '           ' → logprob: -17.001930236816406
    5. '(self' → logprob: -17.001930236816406
    6. '[self' → logprob: -17.001930236816406
    7. '	self' → logprob: -17.126930236816406
    8. '=self' → logprob: -17.376930236816406
    9. '                   ' → logprob: -18.376930236816406
    10. '            ' → logprob: -18.626930236816406

Token 352: '.products' (ID: 71677)
  Prédit: '.products'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.products' → logprob: -2.7848862373502925e-05
    2. 'products' → logprob: -10.875027656555176
    3. '.' → logprob: -12.500027656555176
    4. ' .' → logprob: -13.250027656555176
    5. '.product' → logprob: -13.250027656555176
    6. '.projects' → logprob: -14.625027656555176
    7. '.pro' → logprob: -15.375027656555176
    8. '
' → logprob: -16.125028610229492
    9. '.Products' → logprob: -16.375028610229492
    10. '.prod' → logprob: -16.500028610229492

Token 353: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.006719640456140041
    2. '.get' → logprob: -5.006719589233398
    3. '[' → logprob: -12.631719589233398
    4. 'get' → logprob: -14.881719589233398
    5. '.' → logprob: -15.756719589233398
    6. '.r' → logprob: -15.756719589233398
    7. '[
' → logprob: -15.881719589233398
    8. 'r' → logprob: -16.7567195892334
    9. '(r' → logprob: -17.0067195892334
    10. ' [' → logprob: -17.1317195892334

Token 354: '_name' (ID: 2483)
  Prédit: '_name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_name' → logprob: -1.2948405128554441e-05
    2. '_' → logprob: -11.37501335144043
    3. '_r' → logprob: -14.50001335144043
    4. '_
' → logprob: -15.00001335144043
    5. '_n' → logprob: -15.37501335144043
    6. 'r' → logprob: -16.00001335144043
    7. '_NAME' → logprob: -16.25001335144043
    8. 'name' → logprob: -16.87501335144043
    9. '_names' → logprob: -17.50001335144043
    10. '_
' → logprob: -17.62501335144043

Token 355: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02015092596411705
    2. ')
' → logprob: -4.145151138305664
    3. ']' → logprob: -5.520151138305664
    4. ']
' → logprob: -9.395151138305664
    5. ' )' → logprob: -12.270151138305664
    6. '               ' → logprob: -12.395151138305664
    7. ')
' → logprob: -13.145151138305664
    8. '           ' → logprob: -13.145151138305664
    9. ' ' → logprob: -13.520151138305664
    10. ')

' → logprob: -13.645151138305664

Token 356: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013905730098485947
    2. ' market' → logprob: -4.5139055252075195
    3. 'market' → logprob: -5.8889055252075195
    4. 'Market' → logprob: -10.63890552520752
    5. '           ' → logprob: -11.13890552520752
    6. '                   ' → logprob: -11.13890552520752
    7. '_market' → logprob: -11.13890552520752
    8. ' Market' → logprob: -12.38890552520752
    9. '                
' → logprob: -12.63890552520752
    10. '
' → logprob: -12.76390552520752

Token 357: ' mp' (ID: 11543)
  Prédit: ' market'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' market' → logprob: -0.2873423993587494
    2. 'market' → logprob: -1.4123424291610718
    3. ' mp' → logprob: -5.787342548370361
    4. '               ' → logprob: -5.912342548370361
    5. 'mp' (adapté à ' mp') → logprob: -8.162342071533203
    6. ' buy' → logprob: -10.412342071533203
    7. 'buy' → logprob: -10.787342071533203
    8. ' m' → logprob: -11.287342071533203
    9. '                   ' → logprob: -11.537342071533203
    10. '_market' → logprob: -11.662342071533203

Token 358: ' =' (ID: 314)
  Prédit: 'arket'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arket' → logprob: -0.24842621386051178
    2. ' =' → logprob: -1.7484261989593506
    3. '=' → logprob: -3.7484261989593506
    4. '_market' → logprob: -3.8734261989593506
    5. 'ark' → logprob: -7.37342643737793
    6. 'market' → logprob: -7.49842643737793
    7. 'ro' → logprob: -8.62342643737793
    8. 'Market' → logprob: -9.87342643737793
    9. '_' → logprob: -9.99842643737793
    10. 'ar' → logprob: -10.49842643737793

Token 359: ' Market' (ID: 14208)
  Prédit: ' Market'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Market' → logprob: -0.12692810595035553
    2. 'Market' → logprob: -2.1269280910491943
    3. ' market' → logprob: -17.126928329467773
    4. '_market' → logprob: -20.001928329467773
    5. ' ' → logprob: -20.251928329467773
    6. 'market' → logprob: -20.376928329467773
    7. '   ' → logprob: -20.626928329467773
    8. 'Product' → logprob: -20.751928329467773
    9. 'Marketplace' → logprob: -21.126928329467773
    10. ' Marketplace' → logprob: -21.376928329467773

Token 360: 'Product' (ID: 4532)
  Prédit: 'Product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Product' → logprob: -3.128163257315464e-07
    2. 'Market' → logprob: -16.25
    3. '	Product' → logprob: -16.375
    4. 'Products' → logprob: -17.0
    5. '_product' → logprob: -17.625
    6. 'product' → logprob: -18.25
    7. '<Product' → logprob: -18.75
    8. '_Product' → logprob: -18.875
    9. 'Pro' → logprob: -19.25
    10. ' Product' → logprob: -19.375

Token 361: '(product' (ID: 31697)
  Prédit: '(product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(product' → logprob: -0.001414996455423534
    2. '(' → logprob: -6.626414775848389
    3. '(
' → logprob: -9.376415252685547
    4. '(Product' → logprob: -13.001415252685547
    5. 'product' → logprob: -13.751415252685547
    6. ' (' → logprob: -15.376415252685547
    7. '(products' → logprob: -15.751415252685547
    8. '(

' → logprob: -15.876415252685547
    9. '<Product' → logprob: -15.876415252685547
    10. '(p' → logprob: -16.001415252685547

Token 362: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.856408536899835e-05
    2. ' ,' → logprob: -10.625028610229492
    3. ',
' → logprob: -13.375028610229492
    4. '=' → logprob: -13.625028610229492
    5. ',p' → logprob: -14.250028610229492
    6. ',q' → logprob: -15.250028610229492
    7. '(product' → logprob: -16.250028610229492
    8. ')' → logprob: -16.375028610229492
    9. '),' → logprob: -16.750028610229492
    10. ',

' → logprob: -16.750028610229492

Token 363: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.043014150112867355
    2. ' q' → logprob: -3.1680140495300293
    3. '
' → logprob: -12.543014526367188
    4. 'buy' → logprob: -12.793014526367188
    5. ')' → logprob: -13.793014526367188
    6. '                   ' → logprob: -13.918014526367188
    7. '	q' → logprob: -14.168014526367188
    8. ' buy' → logprob: -14.293014526367188
    9. 'int' → logprob: -14.293014526367188
    10. '               ' → logprob: -14.418014526367188

Token 364: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -2.935296834039036e-06
    2. 'price' → logprob: -12.87500286102295
    3. 'rice' → logprob: -15.37500286102295
    4. '_' → logprob: -17.250003814697266
    5. '_buy' → logprob: -17.375003814697266
    6. 'u' → logprob: -17.750003814697266
    7. '_PRICE' → logprob: -17.875003814697266
    8. '_pr' → logprob: -17.875003814697266
    9. ' price' → logprob: -18.750003814697266
    10. 'Price' → logprob: -18.750003814697266

Token 365: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03822784498333931
    2. ')
' → logprob: -3.2882277965545654
    3. '               ' → logprob: -8.663228034973145
    4. ')
' → logprob: -11.413228034973145
    5. '                   ' → logprob: -13.788228034973145
    6. '           ' → logprob: -14.038228034973145
    7. ' )' → logprob: -15.538228034973145
    8. ')`
' → logprob: -16.038227081298828
    9. ')

' → logprob: -16.413227081298828
    10. ' )
' → logprob: -17.038227081298828

Token 366: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.999452772201039e-05
    2. '                   ' → logprob: -11.250029563903809
    3. ')' → logprob: -12.500029563903809
    4. '<|end|>' → logprob: -12.625029563903809
    5. '           ' → logprob: -12.750029563903809
    6. '                
' → logprob: -12.875029563903809
    7. ',' → logprob: -13.625029563903809
    8. '              ' → logprob: -13.750029563903809
    9. '                ' → logprob: -14.875029563903809
    10. '
' → logprob: -14.875029563903809

Token 367: ' market' (ID: 2910)
  Prédit: 'market'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'market' (adapté à ' market') → logprob: -0.3450465202331543
    2. ' market' → logprob: -1.3450465202331543
    3. '               ' → logprob: -3.4700465202331543
    4. '                   ' → logprob: -8.970046997070312
    5. '           ' → logprob: -10.595046997070312
    6. '   ' → logprob: -12.345046997070312
    7. '_market' → logprob: -12.720046997070312
    8. 'mark' → logprob: -12.845046997070312
    9. '.market' → logprob: -13.595046997070312
    10. ' ' → logprob: -13.845046997070312

Token 368: '_products' (ID: 68048)
  Prédit: '_products'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_products' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.500000953674316
    3. 'products' → logprob: -16.000001907348633
    4. '_PRODUCTS' → logprob: -16.250001907348633
    5. 'Products' → logprob: -16.500001907348633
    6. '_market' → logprob: -17.250001907348633
    7. '_items' → logprob: -17.625001907348633
    8. '_product' → logprob: -17.625001907348633
    9. '_
' → logprob: -17.875001907348633
    10. '_projects' → logprob: -19.000001907348633

Token 369: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007145775598473847
    2. '.' → logprob: -7.2507147789001465
    3. '.app' → logprob: -12.750714302062988
    4. '.ap' → logprob: -13.500714302062988
    5. '.extend' → logprob: -16.000715255737305
    6. ' .' → logprob: -17.125715255737305
    7. '.Append' → logprob: -17.250715255737305
    8. 'append' → logprob: -17.750715255737305
    9. '.a' → logprob: -17.875715255737305
    10. '.add' → logprob: -17.875715255737305

Token 370: '(mp' (ID: 101414)
  Prédit: '(mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mp' → logprob: -1.1160349458805285e-05
    2. '(' → logprob: -11.500011444091797
    3. '(m' → logprob: -14.000011444091797
    4. '(
' → logprob: -16.250011444091797
    5. '(mc' → logprob: -19.000011444091797
    6. ' (' → logprob: -19.625011444091797
    7. '	mp' → logprob: -21.375011444091797
    8. 'mp' → logprob: -21.500011444091797
    9. '(md' → logprob: -21.500011444091797
    10. '(ms' → logprob: -21.500011444091797

Token 371: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017672323156148195
    2. '           ' → logprob: -9.375176429748535
    3. '       ' → logprob: -9.875176429748535
    4. ')
' → logprob: -10.250176429748535
    5. '               ' → logprob: -13.000176429748535
    6. ' )' → logprob: -13.625176429748535
    7. '   ' → logprob: -15.625176429748535
    8. '
' → logprob: -15.750176429748535
    9. '<|end|>' → logprob: -15.750176429748535
    10. ')return' → logprob: -15.875176429748535

Token 372: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007373234839178622
    2. '
' → logprob: -7.250737190246582
    3. '            
' → logprob: -11.750737190246582
    4. 'self' → logprob: -12.250737190246582
    5. '       ' → logprob: -12.375737190246582
    6. '          ' → logprob: -12.750737190246582
    7. ' self' → logprob: -13.000737190246582
    8. '               ' → logprob: -13.500737190246582
    9. '```' → logprob: -14.500737190246582
    10. '<|end|>' → logprob: -14.625737190246582

Token 373: ' city' (ID: 5030)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4404796361923218
    2. '           ' → logprob: -1.4404796361923218
    3. ' self' → logprob: -2.1904797554016113
    4. '       ' → logprob: -4.940479755401611
    5. '   ' → logprob: -8.565479278564453
    6. '
' → logprob: -9.315479278564453
    7. 'city' (adapté à ' city') → logprob: -9.565479278564453
    8. ' city' → logprob: -10.190479278564453
    9. ' ' → logprob: -11.815479278564453
    10. '            
' → logprob: -11.940479278564453

Token 374: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.012173483148217201
    2. '.s' → logprob: -5.137173652648926
    3. '.append' → logprob: -5.137173652648926
    4. ' =' → logprob: -8.262173652648926
    5. '=' → logprob: -10.012173652648926
    6. '.' → logprob: -11.887173652648926
    7. ' s' → logprob: -11.887173652648926
    8. ').' → logprob: -11.887173652648926
    9. '=s' → logprob: -11.887173652648926
    10. '.push' → logprob: -12.137173652648926

Token 375: ' City' (ID: 5686)
  Prédit: 'City'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'City' → logprob: -0.16022422909736633
    2. ' City' → logprob: -1.910224199295044
    3. '	C' → logprob: -19.28522491455078
    4. '.City' → logprob: -19.28522491455078
    5. '   ' → logprob: -19.41022491455078
    6. ' city' → logprob: -20.16022491455078
    7. '_city' → logprob: -20.16022491455078
    8. 'Cities' → logprob: -20.28522491455078
    9. ' ' → logprob: -20.78522491455078
    10. '       ' → logprob: -21.03522491455078

Token 376: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.0002779014757834375
    2. 'idx' → logprob: -8.375277519226074
    3. '(' → logprob: -10.250277519226074
    4. ' idx' → logprob: -12.125277519226074
    5. ' (' → logprob: -13.250277519226074
    6. '(L' → logprob: -13.250277519226074
    7. '(
' → logprob: -13.250277519226074
    8. '(index' → logprob: -15.125277519226074
    9. '[idx' → logprob: -15.250277519226074
    10. '(id' → logprob: -15.625277519226074

Token 377: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.804671233519912e-05
    2. ',L' → logprob: -9.87508773803711
    3. ' ,' → logprob: -11.25008773803711
    4. ',
' → logprob: -11.50008773803711
    5. '           ' → logprob: -12.00008773803711
    6. 'idx' → logprob: -12.62508773803711
    7. '(idx' → logprob: -13.62508773803711
    8. ')' → logprob: -14.75008773803711
    9. ' idx' → logprob: -15.62508773803711
    10. '       ' → logprob: -15.75008773803711

Token 378: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.01815064437687397
    2. ' X' → logprob: -4.018150806427002
    3. '   ' → logprob: -15.518150329589844
    4. '    ' → logprob: -15.768150329589844
    5. 'x' → logprob: -16.518150329589844
    6. ' ' → logprob: -16.768150329589844
    7. ')' → logprob: -17.393150329589844
    8. '	X' → logprob: -17.393150329589844
    9. '        ' → logprob: -17.768150329589844
    10. '
' → logprob: -18.018150329589844

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002851729223039001
    2. ' ,' → logprob: -8.500285148620605
    3. ',Y' → logprob: -9.500285148620605
    4. ',
' → logprob: -12.875285148620605
    5. ',y' → logprob: -12.875285148620605
    6. '<|end|>' → logprob: -14.000285148620605
    7. ',

' → logprob: -15.500285148620605
    8. '<|end|>' → logprob: -16.125286102294922
    9. 'Y' → logprob: -16.250286102294922
    10. ',\
' → logprob: -16.625286102294922

Token 380: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0040785204619169235
    2. ' Y' → logprob: -5.504078388214111
    3. '	Y' → logprob: -16.879077911376953
    4. ' ' → logprob: -17.754077911376953
    5. '   ' → logprob: -18.004077911376953
    6. '
' → logprob: -18.629077911376953
    7. ',Y' → logprob: -18.879077911376953
    8. '  ' → logprob: -19.379077911376953
    9. '<|end|>' → logprob: -19.504077911376953
    10. '    ' → logprob: -19.629077911376953

Token 381: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1517960956552997e-05
    2. 'market' → logprob: -12.125011444091797
    3. ' ,' → logprob: -12.875011444091797
    4. ',
' → logprob: -13.250011444091797
    5. ',m' → logprob: -14.375011444091797
    6. ' market' → logprob: -15.375011444091797
    7. '),' → logprob: -15.375011444091797
    8. '           ' → logprob: -15.750011444091797
    9. ')' → logprob: -15.875011444091797
    10. '```' → logprob: -16.375011444091797

Token 382: ' market' (ID: 2910)
  Prédit: 'market'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'market' → logprob: -0.0031844829209148884
    2. ' market' → logprob: -5.7531843185424805
    3. '           ' → logprob: -12.00318431854248
    4. '               ' → logprob: -15.50318431854248
    5. '
' → logprob: -15.75318431854248
    6. '   ' → logprob: -16.003185272216797
    7. '                   ' → logprob: -17.378185272216797
    8. '       ' → logprob: -17.503185272216797
    9. ')' → logprob: -17.628185272216797
    10. '.market' → logprob: -17.628185272216797

Token 383: '_products' (ID: 68048)
  Prédit: '_products'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_products' → logprob: -1.6240566083070007e-06
    2. 'products' → logprob: -13.375001907348633
    3. '_product' → logprob: -17.625001907348633
    4. 'Products' → logprob: -17.875001907348633
    5. '_PRODUCTS' → logprob: -18.375001907348633
    6. '```' → logprob: -18.500001907348633
    7. '_' → logprob: -18.750001907348633
    8. '_
' → logprob: -19.750001907348633
    9. '_pro' → logprob: -20.375001907348633
    10. '\' → logprob: -20.625001907348633

Token 384: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003213841700926423
    2. ')
' → logprob: -5.753213882446289
    3. '           ' → logprob: -10.378213882446289
    4. '       ' → logprob: -12.503213882446289
    5. ')
' → logprob: -13.878213882446289
    6. '))' → logprob: -16.37821388244629
    7. ')`' → logprob: -16.37821388244629
    8. ' )' → logprob: -16.75321388244629
    9. ')\
' → logprob: -17.00321388244629
    10. '),' → logprob: -17.00321388244629

Token 385: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007170771714299917
    2. '
' → logprob: -7.8757171630859375
    3. '       ' → logprob: -8.750717163085938
    4. '<|end|>' → logprob: -9.875717163085938
    5. ')' → logprob: -10.250717163085938
    6. 'self' → logprob: -11.125717163085938
    7. '	       ' → logprob: -11.125717163085938
    8. '		' → logprob: -11.375717163085938
    9. '               ' → logprob: -11.750717163085938
    10. ')
' → logprob: -11.875717163085938

Token 386: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004732722416520119
    2. '           ' → logprob: -5.754732608795166
    3. '       ' → logprob: -6.754732608795166
    4. ' self' → logprob: -7.879732608795166
    5. '	self' → logprob: -12.254733085632324
    6. '
' → logprob: -12.754733085632324
    7. '   ' → logprob: -14.004733085632324
    8. '        
' → logprob: -14.254733085632324
    9. '            
' → logprob: -14.379733085632324
    10. '(self' → logprob: -16.379732131958008

Token 387: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -9.782141569303349e-05
    2. '.' → logprob: -9.75009822845459
    3. 'cities' → logprob: -10.75009822845459
    4. ' .' → logprob: -11.62509822845459
    5. '.city' → logprob: -12.00009822845459
    6. ').' → logprob: -13.87509822845459
    7. '​.' → logprob: -14.87509822845459
    8. '.append' → logprob: -15.25009822845459
    9. '
' → logprob: -15.50009822845459
    10. '.
' → logprob: -15.75009822845459

Token 388: 'ities' (ID: 1629)
  Prédit: 'ities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ities' → logprob: -1.0087516784551553e-05
    2. 'it' → logprob: -12.25001049041748
    3. 'cities' → logprob: -13.12501049041748
    4. 'itys' → logprob: -13.62501049041748
    5. 'ites' → logprob: -14.25001049041748
    6. 'ity' → logprob: -14.62501049041748
    7. 'ties' → logprob: -15.12501049041748
    8. 'iti' → logprob: -15.62501049041748
    9. 'itie' → logprob: -15.75001049041748
    10. 'i' → logprob: -16.125009536743164

Token 389: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.575563020305708e-05
    2. '.' → logprob: -10.000065803527832
    3. '.app' → logprob: -11.375065803527832
    4. '.ap' → logprob: -11.875065803527832
    5. ' .' → logprob: -14.125065803527832
    6. '.py' → logprob: -15.625065803527832
    7. '           ' → logprob: -15.625065803527832
    8. '.extend' → logprob: -15.750065803527832
    9. '.push' → logprob: -16.000064849853516
    10. ').' → logprob: -16.250064849853516

Token 390: '(city' (ID: 84604)
  Prédit: '(city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(city' → logprob: -8.77627644513268e-06
    2. '(' → logprob: -11.750008583068848
    3. 'city' → logprob: -14.000008583068848
    4. '(
' → logprob: -16.750009536743164
    5. ' city' → logprob: -17.750009536743164
    6. '(country' → logprob: -19.250009536743164
    7. '(circle' → logprob: -19.875009536743164
    8. '(ci' → logprob: -20.250009536743164
    9. '(cell' → logprob: -20.875009536743164
    10. ' (' → logprob: -21.000009536743164

Token 391: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5570885807392187e-05
    2. ')
' → logprob: -12.125015258789062
    3. '       ' → logprob: -12.125015258789062
    4. '<|end|>' → logprob: -12.750015258789062
    5. ' )' → logprob: -14.250015258789062
    6. ')return' → logprob: -14.875015258789062
    7. ')}' → logprob: -15.625015258789062
    8. '),' → logprob: -17.000015258789062
    9. ')#' → logprob: -17.125015258789062
    10. '
' → logprob: -17.125015258789062

Token 392: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7239813208580017
    2. '<|end|>' → logprob: -1.4739813804626465
    3. '
' → logprob: -1.5989813804626465
    4. '       ' → logprob: -3.0989813804626465
    5. 'def' → logprob: -4.2239813804626465
    6. '    
' → logprob: -4.4739813804626465
    7. '<|end|>' → logprob: -5.3489813804626465
    8. '        
' → logprob: -5.3489813804626465
    9. '```' → logprob: -6.5989813804626465
    10. 'self' → logprob: -7.3489813804626465

Token 393: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.31926557421684265
    2. '       ' → logprob: -1.319265604019165
    3. ' self' → logprob: -5.194265365600586
    4. '
' → logprob: -8.069265365600586
    5. '        
' → logprob: -9.319265365600586
    6. '   ' → logprob: -11.194265365600586
    7. 'def' → logprob: -12.444265365600586
    8. '```' → logprob: -12.569265365600586
    9. '	self' → logprob: -13.194265365600586
    10. ' ' → logprob: -13.194265365600586

Token 394: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.3949107527732849
    2. '.W' → logprob: -1.1449108123779297
    3. '.T' → logprob: -5.14491081237793
    4. '.' → logprob: -7.26991081237793
    5. '._' → logprob: -8.01991081237793
    6. '.M' → logprob: -8.14491081237793
    7. ' .' → logprob: -8.51991081237793
    8. '.B' → logprob: -8.76991081237793
    9. '.C' → logprob: -9.14491081237793
    10. '.L' → logprob: -9.26991081237793

Token 395: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10024592280387878
    2. '=' → logprob: -2.350245952606201
    3. ',' → logprob: -10.350245475769043
    4. ' =
' → logprob: -12.850245475769043
    5. '=N' → logprob: -12.850245475769043
    6. ')' → logprob: -14.225245475769043
    7. '=
' → logprob: -15.350245475769043
    8. ' ' → logprob: -15.350245475769043
    9. '<|end|>' → logprob: -15.475245475769043
    10. '    ' → logprob: -16.10024642944336

Token 396: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00020354038861114532
    2. ' N' → logprob: -8.500203132629395
    3. '   ' → logprob: -18.37520408630371
    4. '	N' → logprob: -18.37520408630371
    5. '_N' → logprob: -20.75020408630371
    6. ' ' → logprob: -21.37520408630371
    7. 'Ｎ' → logprob: -21.62520408630371
    8. ',N' → logprob: -22.12520408630371
    9. '       ' → logprob: -22.25020408630371
    10. '=N' → logprob: -22.37520408630371

Token 397: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008869592100381851
    2. '
' → logprob: -5.133869647979736
    3. 'self' → logprob: -6.258869647979736
    4. '<|end|>' → logprob: -8.133869171142578
    5. '        
' → logprob: -8.258869171142578
    6. ' self' → logprob: -9.008869171142578
    7. ' 
' → logprob: -9.258869171142578
    8. '  
' → logprob: -9.258869171142578
    9. ',' → logprob: -9.383869171142578
    10. ' ' → logprob: -10.883869171142578

Token 398: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2694797217845917
    2. 'self' → logprob: -1.894479751586914
    3. '
' → logprob: -3.394479751586914
    4. ' self' → logprob: -3.769479751586914
    5. '        
' → logprob: -3.894479751586914
    6. ' 
' → logprob: -5.144479751586914
    7. '  
' → logprob: -7.144479751586914
    8. '        ' → logprob: -7.519479751586914
    9. ',' → logprob: -7.644479751586914
    10. '<|end|>' → logprob: -8.394479751586914

Token 399: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.029948106035590172
    2. 'self' (adapté à ' self') → logprob: -3.5299479961395264
    3. '       ' → logprob: -9.279948234558105
    4. ' M' → logprob: -9.279948234558105
    5. ' ' → logprob: -12.529948234558105
    6. 'M' → logprob: -12.654948234558105
    7. '        ' → logprob: -13.279948234558105
    8. ' ' → logprob: -14.279948234558105
    9. ' 
' → logprob: -14.279948234558105
    10. '
' → logprob: -15.154948234558105

Token 400: '.M' (ID: 2015)
  Prédit: '.M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.M' → logprob: -0.00854495633393526
    2. '.W' → logprob: -5.008544921875
    3. '.' → logprob: -6.633544921875
    4. '.T' → logprob: -8.133544921875
    5. 'M' → logprob: -8.758544921875
    6. '.N' → logprob: -10.883544921875
    7. ',' → logprob: -11.258544921875
    8. ',M' → logprob: -11.758544921875
    9. ' .' → logprob: -12.133544921875
    10. 'W' → logprob: -12.883544921875

Token 401: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 402: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.006718332413583994
    2. ' M' → logprob: -5.006718158721924
    3. '   ' → logprob: -13.631718635559082
    4. ' ' → logprob: -14.631718635559082
    5. '    ' → logprob: -14.756718635559082
    6. 'W' → logprob: -15.256718635559082
    7. '  ' → logprob: -16.256717681884766
    8. '     ' → logprob: -16.506717681884766
    9. 'N' → logprob: -16.631717681884766
    10. '       ' → logprob: -16.756717681884766

Token 403: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02397596463561058
    2. 'self' → logprob: -4.398975849151611
    3. '        
' → logprob: -5.523975849151611
    4. '
' → logprob: -5.523975849151611
    5. ' self' → logprob: -6.773975849151611
    6. '<|end|>' → logprob: -6.773975849151611
    7. ' 
' → logprob: -7.773975849151611
    8. '        ' → logprob: -8.39897632598877
    9. ',' → logprob: -8.64897632598877
    10. '  
' → logprob: -9.39897632598877

Token 404: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12045212835073471
    2. 'self' → logprob: -2.2454521656036377
    3. ' self' → logprob: -4.995451927185059
    4. '
' → logprob: -7.870451927185059
    5. '        
' → logprob: -8.620451927185059
    6. '```' → logprob: -9.370451927185059
    7. ',' → logprob: -9.995451927185059
    8. '        ' → logprob: -10.120451927185059
    9. '<|end|>' → logprob: -10.620451927185059
    10. '           ' → logprob: -11.370451927185059

Token 405: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.007203708868473768
    2. ' self' → logprob: -5.007203578948975
    3. '       ' → logprob: -7.632203578948975
    4. '	self' → logprob: -13.507204055786133
    5. '
' → logprob: -13.632204055786133
    6. '   ' → logprob: -15.007204055786133
    7. '        
' → logprob: -15.007204055786133
    8. '        ' → logprob: -16.132204055786133
    9. ' 
' → logprob: -16.507204055786133
    10. ' ' → logprob: -16.507204055786133

Token 406: '.W' (ID: 2342)
  Prédit: '.W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.W' → logprob: -0.1559862196445465
    2. '.' → logprob: -2.1559863090515137
    3. 'W' → logprob: -3.9059863090515137
    4. ',' → logprob: -5.655986309051514
    5. ' W' → logprob: -5.905986309051514
    6. '.T' → logprob: -7.280986309051514
    7. ' =' → logprob: -7.655986309051514
    8. ' .' → logprob: -7.655986309051514
    9. '=' → logprob: -8.655985832214355
    10. ',W' → logprob: -9.155985832214355

Token 407: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2105756402015686
    2. '=' → logprob: -1.7105755805969238
    3. '<|end|>' → logprob: -4.960575580596924
    4. ' ' → logprob: -6.835575580596924
    5. ',' → logprob: -7.085575580596924
    6. '<|end|>' → logprob: -9.460576057434082
    7. ')' → logprob: -10.335576057434082
    8. ' ,' → logprob: -10.960576057434082
    9. '        ' → logprob: -11.210576057434082
    10. '  ' → logprob: -12.210576057434082

Token 408: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.10020990669727325
    2. ' W' → logprob: -2.350209951400757
    3. 'T' → logprob: -13.725210189819336
    4. '	W' → logprob: -14.225210189819336
    5. ' ' → logprob: -14.475210189819336
    6. '   ' → logprob: -15.350210189819336
    7. ' ' → logprob: -15.850210189819336
    8. '    ' → logprob: -15.975210189819336
    9. '=W' → logprob: -15.975210189819336
    10. 'w' → logprob: -16.725210189819336

Token 409: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019353343173861504
    2. 'self' → logprob: -4.14435338973999
    3. '
' → logprob: -6.39435338973999
    4. ',' → logprob: -7.26935338973999
    5. '        
' → logprob: -7.76935338973999
    6. ' self' → logprob: -8.769352912902832
    7. '<|end|>' → logprob: -9.519352912902832
    8. '```' → logprob: -9.644352912902832
    9. ' 
' → logprob: -9.769352912902832
    10. ',
' → logprob: -10.644352912902832

Token 410: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.061389364302158356
    2. 'self' → logprob: -2.936389446258545
    3. ' self' → logprob: -5.561389446258545
    4. '
' → logprob: -6.561389446258545
    5. '        
' → logprob: -7.561389446258545
    6. '```' → logprob: -8.186388969421387
    7. ',' → logprob: -8.311388969421387
    8. '        ' → logprob: -10.186388969421387
    9. ' 
' → logprob: -10.311388969421387
    10. '<|end|>' → logprob: -11.311388969421387

Token 411: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004088373854756355
    2. '       ' → logprob: -5.754088401794434
    3. ' self' → logprob: -7.004088401794434
    4. '
' → logprob: -13.629088401794434
    5. '   ' → logprob: -15.004088401794434
    6. '\' → logprob: -15.129088401794434
    7. '        
' → logprob: -15.629088401794434
    8. '	self' → logprob: -17.129087448120117
    9. ' ' → logprob: -17.379087448120117
    10. '        ' → logprob: -17.504087448120117

Token 412: '.T' (ID: 2600)
  Prédit: '.T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.T' → logprob: -0.5373116731643677
    2. '.' → logprob: -1.5373116731643677
    3. '=' → logprob: -2.162311553955078
    4. ' =' → logprob: -3.037311553955078
    5. 'T' → logprob: -3.412311553955078
    6. '=T' → logprob: -6.162311553955078
    7. ' T' → logprob: -7.037311553955078
    8. ':' → logprob: -7.162311553955078
    9. ',' → logprob: -8.412311553955078
    10. ' .' → logprob: -8.787311553955078

Token 413: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28117048740386963
    2. '=' → logprob: -1.4061704874038696
    3. ' ' → logprob: -11.156170845031738
    4. ' =
' → logprob: -12.656170845031738
    5. '=
' → logprob: -14.406170845031738
    6. '=self' → logprob: -14.656170845031738
    7. ' ' → logprob: -15.031170845031738
    8. '        ' → logprob: -15.656170845031738
    9. '=T' → logprob: -15.906170845031738
    10. ',' → logprob: -16.031169891357422

Token 414: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0619683600962162
    2. ' T' → logprob: -2.8119683265686035
    3. '   ' → logprob: -15.311968803405762
    4. ' ' → logprob: -15.311968803405762
    5. '	T' → logprob: -16.061967849731445
    6. ' ' → logprob: -16.186967849731445
    7. '
' → logprob: -17.186967849731445
    8. '       ' → logprob: -17.811967849731445
    9. '  ' → logprob: -18.311967849731445
    10. '
' → logprob: -18.561967849731445

Token 415: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 416: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 417: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.38387230038642883
    2. 'def' → logprob: -1.6338722705841064
    3. '@' → logprob: -3.3838722705841064
    4. '       ' → logprob: -3.5088722705841064
    5. '   ' → logprob: -3.5088722705841064
    6. '@property' → logprob: -4.8838725090026855
    7. ' self' → logprob: -5.0088725090026855
    8. '<|end|>' → logprob: -5.2588725090026855
    9. '
' → logprob: -5.7588725090026855
    10. ')' → logprob: -6.0088725090026855

Token 418: '.market' (ID: 120386)
  Prédit: '.current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.17610785365104675
    2. '.' → logprob: -3.051107883453369
    3. '.dp' → logprob: -3.551107883453369
    4. '.best' → logprob: -3.551107883453369
    5. '.start' → logprob: -5.051107883453369
    6. '.max' → logprob: -5.051107883453369
    7. '.vis' → logprob: -5.301107883453369
    8. '.curr' → logprob: -5.551107883453369
    9. '.memo' → logprob: -5.551107883453369
    10. '.c' → logprob: -5.676107883453369

Token 419: '_x' (ID: 7054)
  Prédit: '_location'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_location' → logprob: -1.5143654346466064
    2. '_pos' → logprob: -2.1393654346466064
    3. '_positions' → logprob: -2.5143654346466064
    4. '_distance' → logprob: -2.7643654346466064
    5. '_position' → logprob: -2.7643654346466064
    6. '_idx' → logprob: -2.7643654346466064
    7. '_dist' → logprob: -3.0143654346466064
    8. 's' → logprob: -3.1393654346466064
    9. '_locations' → logprob: -3.1393654346466064
    10. '_' → logprob: -3.2643654346466064

Token 420: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2970438301563263
    2. ' =' → logprob: -1.422043800354004
    3. ',' → logprob: -4.422043800354004
    4. 'y' → logprob: -6.422043800354004
    5. 's' → logprob: -7.422043800354004
    6. '=self' → logprob: -7.797043800354004
    7. '_y' → logprob: -7.797043800354004
    8. '_positions' → logprob: -8.547043800354004
    9. '0' → logprob: -9.797043800354004
    10. '=
' → logprob: -10.047043800354004

Token 421: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8802491215174086e-05
    2. ' ' → logprob: -10.500028610229492
    3. '[' → logprob: -14.000028610229492
    4. 'self' → logprob: -15.625028610229492
    5. '{' → logprob: -16.250028610229492
    6. '   ' → logprob: -17.625028610229492
    7. '00' → logprob: -17.750028610229492
    8. '=' → logprob: -18.062528610229492
    9. '[]' → logprob: -18.500028610229492
    10. '{}' → logprob: -18.500028610229492

Token 422: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. 'self' → logprob: -18.250003814697266
    4. '   ' → logprob: -19.250003814697266
    5. '۰' → logprob: -20.375003814697266
    6. '00' → logprob: -20.500003814697266
    7. '=' → logprob: -20.750003814697266
    8. '  ' → logprob: -20.750003814697266
    9. '[' → logprob: -20.937503814697266
    10. '
' → logprob: -21.312503814697266

Token 423: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.014215926639735699
    2. '       ' → logprob: -5.01421594619751
    3. 'self' → logprob: -5.26421594619751
    4. '<|end|>' → logprob: -6.38921594619751
    5. ',' → logprob: -8.889215469360352
    6. '        
' → logprob: -9.514215469360352
    7. '  
' → logprob: -9.764215469360352
    8. ',
' → logprob: -9.764215469360352
    9. ' and' → logprob: -10.014215469360352
    10. '    
' → logprob: -10.514215469360352

Token 424: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06118250638246536
    2. '
' → logprob: -3.3111824989318848
    3. 'self' → logprob: -3.8111824989318848
    4. '<|end|>' → logprob: -8.186182975769043
    5. ',' → logprob: -8.811182975769043
    6. ' self' → logprob: -9.186182975769043
    7. ',self' → logprob: -10.311182975769043
    8. ',
' → logprob: -10.436182975769043
    9. '      ' → logprob: -10.686182975769043
    10. '   ' → logprob: -10.686182975769043

Token 425: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0012774959905073047
    2. '       ' → logprob: -6.751277446746826
    3. ' self' → logprob: -9.251277923583984
    4. '
' → logprob: -12.001277923583984
    5. '0' → logprob: -12.501277923583984
    6. '   ' → logprob: -14.876277923583984
    7. '        
' → logprob: -15.251277923583984
    8. '      ' → logprob: -15.751277923583984
    9. ',self' → logprob: -15.876277923583984
    10. '	self' → logprob: -16.376277923583984

Token 426: '.market' (ID: 120386)
  Prédit: '.market'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.market' → logprob: -0.5365819931030273
    2. '_y' → logprob: -1.7865819931030273
    3. '_market' → logprob: -1.9115819931030273
    4. 'market' → logprob: -2.5365819931030273
    5. 'y' → logprob: -5.161581993103027
    6. '.y' → logprob: -5.411581993103027
    7. ',' → logprob: -5.536581993103027
    8. '._' → logprob: -5.786581993103027
    9. '.' → logprob: -6.411581993103027
    10. ',y' → logprob: -7.786581993103027

Token 427: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.01545843668282032
    2. ' =' → logprob: -5.015458583831787
    3. '_' → logprob: -5.515458583831787
    4. '=' → logprob: -5.640458583831787
    5. '_x' → logprob: -7.140458583831787
    6. 'y' → logprob: -8.765458106994629
    7. ',' → logprob: -9.390458106994629
    8. '   ' → logprob: -10.515458106994629
    9. '_market' → logprob: -10.890458106994629
    10. '<|end|>' → logprob: -11.265458106994629

Token 428: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47410863637924194
    2. ' =' → logprob: -0.9741086363792419
    3. '0' → logprob: -10.599108695983887
    4. '<|end|>' → logprob: -12.974108695983887
    5. ' ' → logprob: -13.099108695983887
    6. ' =
' → logprob: -13.724108695983887
    7. ')' → logprob: -14.724108695983887
    8. '=
' → logprob: -14.724108695983887
    9. ',' → logprob: -15.849108695983887
    10. '
' → logprob: -15.849108695983887

Token 429: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '   ' → logprob: -17.625179290771484
    4. '  ' → logprob: -19.500179290771484
    5. '۰' → logprob: -19.875179290771484
    6. '=' → logprob: -21.000179290771484
    7. '    ' → logprob: -21.687679290771484
    8. ' ' → logprob: -21.687679290771484
    9. '	' → logprob: -22.125179290771484
    10. '00' → logprob: -22.187679290771484

Token 430: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '۰' → logprob: -18.250017166137695
    4. '   ' → logprob: -18.500017166137695
    5. '  ' → logprob: -19.687517166137695
    6. '00' → logprob: -20.562517166137695
    7. '=' → logprob: -20.625017166137695
    8. ' ' → logprob: -20.875017166137695
    9. '```' → logprob: -20.875017166137695
    10. '`' → logprob: -20.937517166137695

Token 431: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 432: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4567525088787079
    2. '<|end|>' → logprob: -1.0817525386810303
    3. '   ' → logprob: -4.456752300262451
    4. 'def' → logprob: -4.956752300262451
    5. '<|end|>' → logprob: -5.331752300262451
    6. '    
' → logprob: -6.331752300262451
    7. ')' → logprob: -7.081752300262451
    8. ' 
' → logprob: -8.08175277709961
    9. ',' → logprob: -8.20675277709961
    10. '  
' → logprob: -8.83175277709961

Token 433: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1260443478822708
    2. '<|end|>' → logprob: -3.126044273376465
    3. 'def' → logprob: -3.251044273376465
    4. '       ' → logprob: -4.376044273376465
    5. '   ' → logprob: -4.751044273376465
    6. '@' → logprob: -4.876044273376465
    7. ' self' → logprob: -6.251044273376465
    8. '@property' → logprob: -6.251044273376465
    9. ')' → logprob: -7.376044273376465
    10. '<|end|>' → logprob: -7.626044273376465

Token 434: ' Pre' (ID: 4659)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.7539522051811218
    2. 'def' → logprob: -0.8789522051811218
    3. 'self' → logprob: -3.2539522647857666
    4. 'current' → logprob: -3.6289522647857666
    5. '#' → logprob: -4.1289520263671875
    6. 'cache' → logprob: -4.3789520263671875
    7. 'visited' → logprob: -5.5039520263671875
    8. 'max' → logprob: -5.8789520263671875
    9. '   ' → logprob: -6.2539520263671875
    10. 'from' → logprob: -6.2539520263671875

Token 435: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.019976364448666573
    2. 'calculate' → logprob: -5.3949761390686035
    3. 'pare' → logprob: -5.5199761390686035
    4. 'process' → logprob: -5.5199761390686035
    5. 'sum' → logprob: -5.7699761390686035
    6. '_compute' → logprob: -7.0199761390686035
    7. 'computed' → logprob: -7.7699761390686035
    8. 'cache' → logprob: -7.7699761390686035
    9. 'distance' → logprob: -8.019976615905762
    10. 'calc' → logprob: -8.019976615905762

Token 436: ' distances' (ID: 48294)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004086275293957442
    2. ' self' → logprob: -8.875408172607422
    3. '#' → logprob: -9.000408172607422
    4. '       ' → logprob: -9.250408172607422
    5. 'dist' → logprob: -10.750408172607422
    6. '   ' → logprob: -11.500408172607422
    7. ' distances' → logprob: -11.750408172607422
    8. '[self' → logprob: -12.625408172607422
    9. '           ' → logprob: -13.750408172607422
    10. 'distance' → logprob: -13.875408172607422

Token 437: ' city' (ID: 5030)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000273136975010857
    2. 'self' → logprob: -8.500272750854492
    3. '
' → logprob: -10.250272750854492
    4. '   ' → logprob: -11.250272750854492
    5. '        
' → logprob: -11.750272750854492
    6. ',' → logprob: -12.375272750854492
    7. '<|end|>' → logprob: -12.750272750854492
    8. ' self' → logprob: -13.250272750854492
    9. 'for' → logprob: -14.250272750854492
    10. 'from' → logprob: -14.500272750854492

Token 438: ' <' (ID: 464)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.047247886657714844
    2. '_' → logprob: -4.172247886657715
    3. 's' → logprob: -4.297247886657715
    4. '_pairs' → logprob: -5.172247886657715
    5. '_matrix' → logprob: -5.547247886657715
    6. '_between' → logprob: -6.172247886657715
    7. '_dist' → logprob: -6.297247886657715
    8. 'to' → logprob: -6.547247886657715
    9. 'es' → logprob: -7.547247886657715
    10. '_city' → logprob: -7.672247886657715

Token 439: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.0017656205454841256
    2. '-->' → logprob: -7.251765727996826
    3. '=>' → logprob: -7.751765727996826
    4. ' ->' → logprob: -8.251765251159668
    5. ',' → logprob: -9.376765251159668
    6. '=' → logprob: -9.501765251159668
    7. '-' → logprob: -9.501765251159668
    8. '>' → logprob: -9.876765251159668
    9. '->[' → logprob: -10.751765251159668
    10. '[' → logprob: -11.501765251159668

Token 440: ' market' (ID: 2910)
  Prédit: 'market'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'market' → logprob: -0.019144505262374878
    2. 'city' → logprob: -4.269144535064697
    3. ' market' → logprob: -5.394144535064697
    4. ' city' → logprob: -8.894144058227539
    5. '(' → logprob: -9.269144058227539
    6. '0' → logprob: -9.519144058227539
    7. '_market' → logprob: -10.144144058227539
    8. 'Market' → logprob: -10.769144058227539
    9. 'self' → logprob: -11.019144058227539
    10. '.market' → logprob: -11.644144058227539

Token 441: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000577696890104562
    2. 'self' → logprob: -8.125577926635742
    3. '
' → logprob: -8.250577926635742
    4. '        
' → logprob: -11.500577926635742
    5. ',' → logprob: -12.625577926635742
    6. '<|end|>' → logprob: -13.125577926635742
    7. ' self' → logprob: -13.500577926635742
    8. '(self' → logprob: -14.625577926635742
    9. 'for' → logprob: -14.750577926635742
    10. '   ' → logprob: -14.875577926635742

Token 442: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005412388709373772
    2. 'self' → logprob: -8.375541687011719
    3. '
' → logprob: -8.875541687011719
    4. ',' → logprob: -9.125541687011719
    5. ' self' → logprob: -11.500541687011719
    6. '        
' → logprob: -11.750541687011719
    7. 's' → logprob: -11.875541687011719
    8. ' and' → logprob: -12.000541687011719
    9. ' for' → logprob: -12.000541687011719
    10. 'for' → logprob: -12.250541687011719

Token 443: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6936949491500854
    2. 'self' (adapté à ' self') → logprob: -0.6936949491500854
    3. ' self' → logprob: -7.568695068359375
    4. '   ' → logprob: -10.443695068359375
    5. ' ' → logprob: -14.943695068359375
    6. '	self' → logprob: -15.193695068359375
    7. '        
' → logprob: -15.318695068359375
    8. '      ' → logprob: -15.443695068359375
    9. '[self' → logprob: -15.693695068359375
    10. '```' → logprob: -15.693695068359375

Token 444: '.city' (ID: 50562)
  Prédit: '.dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dist' → logprob: -0.579967737197876
    2. '.city' → logprob: -0.829967737197876
    3. '.distance' → logprob: -5.954967498779297
    4. 'city' → logprob: -7.579967498779297
    5. 'dist' → logprob: -7.579967498779297
    6. '.market' → logprob: -8.579967498779297
    7. '.d' → logprob: -8.954967498779297
    8. '._' → logprob: -10.579967498779297
    9. '.' → logprob: -11.329967498779297
    10. '.c' → logprob: -11.579967498779297

Token 445: '_to' (ID: 5089)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.3333333432674408
    2. '_to' → logprob: -1.3333333730697632
    3. '_market' → logprob: -4.333333492279053
    4. 'dist' → logprob: -5.333333492279053
    5. '_distance' → logprob: -6.583333492279053
    6. '_d' → logprob: -8.208333015441895
    7. 'to' → logprob: -8.958333015441895
    8. '_city' → logprob: -9.833333015441895
    9. 'd' → logprob: -10.333333015441895
    10. 'market' → logprob: -10.958333015441895

Token 446: '_market' (ID: 165999)
  Prédit: 'market'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'market' → logprob: -0.07890642434358597
    2. '_market' → logprob: -2.578906536102295
    3. 'distance' → logprob: -12.328906059265137
    4. ' market' → logprob: -12.578906059265137
    5. 'city' → logprob: -13.078906059265137
    6. 'm' → logprob: -13.203906059265137
    7. '.market' → logprob: -14.203906059265137
    8. '_m' → logprob: -14.203906059265137
    9. 'Market' → logprob: -14.828906059265137
    10. '-market' → logprob: -14.828906059265137

Token 447: '_dist' (ID: 37968)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8234987258911133
    2. '_dist' → logprob: -0.8234987258911133
    3. '=' → logprob: -2.3234987258911133
    4. '_distance' → logprob: -3.8234987258911133
    5. 'dist' → logprob: -6.198498725891113
    6. '_d' → logprob: -8.823498725891113
    7. '_' → logprob: -9.323498725891113
    8. '   ' → logprob: -9.948498725891113
    9. 'd' → logprob: -10.198498725891113
    10. 'distance' → logprob: -10.948498725891113

Token 448: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8581666350364685
    2. '=' → logprob: -1.3581666946411133
    3. 'ances' → logprob: -1.3581666946411133
    4. 'ance' → logprob: -2.9831666946411133
    5. 's' → logprob: -4.733166694641113
    6. '   ' → logprob: -6.233166694641113
    7. ' ' → logprob: -9.608166694641113
    8. ':' → logprob: -9.608166694641113
    9. '=[' → logprob: -9.608166694641113
    10. 'a' → logprob: -9.858166694641113

Token 449: ' [' (ID: 723)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.5872651934623718
    2. '[' → logprob: -0.8372651934623718
    3. '{
' → logprob: -5.0872650146484375
    4. '{}' → logprob: -6.0872650146484375
    5. '{}
' → logprob: -6.7122650146484375
    6. ' [' → logprob: -7.4622650146484375
    7. '[self' → logprob: -8.462265014648438
    8. ' {' → logprob: -8.837265014648438
    9. '[
' → logprob: -8.962265014648438
    10. '{x' → logprob: -8.962265014648438

Token 450: 'abs' (ID: 6071)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.008252021856606007
    2. ' city' → logprob: -5.633252143859863
    3. 'c' → logprob: -6.508252143859863
    4. 'self' → logprob: -6.633252143859863
    5. 'abs' → logprob: -6.758252143859863
    6. '0' → logprob: -7.633252143859863
    7. 'cities' → logprob: -10.133252143859863
    8. '(city' → logprob: -10.258252143859863
    9. 'None' → logprob: -10.758252143859863
    10. '   ' → logprob: -11.383252143859863

Token 451: '(city' (ID: 84604)
  Prédit: '(city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(city' → logprob: -0.008445310406386852
    2. '(c' → logprob: -5.2584452629089355
    3. 'city' → logprob: -5.7584452629089355
    4. 'c' → logprob: -10.633445739746094
    5. '(self' → logprob: -10.633445739746094
    6. '(ci' → logprob: -14.258445739746094
    7. 'self' → logprob: -14.383445739746094
    8. ' city' → logprob: -14.508445739746094
    9. '(' → logprob: -15.383445739746094
    10. '_city' → logprob: -17.758445739746094

Token 452: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0011147352633997798
    2. '.' → logprob: -6.876114845275879
    3. ' .' → logprob: -9.626114845275879
    4. ').' → logprob: -12.001114845275879
    5. '.city' → logprob: -12.001114845275879
    6. '.y' → logprob: -13.876114845275879
    7. 'x' → logprob: -13.876114845275879
    8. ' ' → logprob: -14.126114845275879
    9. '].' → logprob: -15.251114845275879
    10. '
' → logprob: -15.251114845275879

Token 453: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00733802979812026
    2. ')+' → logprob: -5.382338047027588
    3. ' -' → logprob: -6.132338047027588
    4. '-' → logprob: -7.882338047027588
    5. ' )' → logprob: -8.88233757019043
    6. 'self' → logprob: -11.63233757019043
    7. '-self' → logprob: -12.00733757019043
    8. '0' → logprob: -13.00733757019043
    9. ')
' → logprob: -13.00733757019043
    10. '
' → logprob: -13.88233757019043

Token 454: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16043910384178162
    2. '+' → logprob: -1.910439133644104
    3. ')' → logprob: -8.910439491271973
    4. ')+' → logprob: -9.660439491271973
    5. '+)' → logprob: -12.160439491271973
    6. '+self' → logprob: -12.785439491271973
    7. '+
' → logprob: -13.410439491271973
    8. ' +
' → logprob: -13.910439491271973
    9. '+y' → logprob: -14.410439491271973
    10. ' plus' → logprob: -14.535439491271973

Token 455: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -4.0722858102526516e-05
    2. ' abs' → logprob: -10.500041007995605
    3. 'city' → logprob: -11.250041007995605
    4. '   ' → logprob: -16.37504005432129
    5. ' city' → logprob: -18.62504005432129
    6. '(abs' → logprob: -18.62504005432129
    7. '
' → logprob: -19.12504005432129
    8. '    ' → logprob: -19.25004005432129
    9. '.abs' → logprob: -19.50004005432129
    10. '_abs' → logprob: -19.62504005432129

Token 456: '(city' (ID: 84604)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.048608023673295975
    2. '(city' → logprob: -3.0486080646514893
    3. ' city' → logprob: -10.79860782623291
    4. '(' → logprob: -16.423608779907227
    5. '.city' → logprob: -16.673608779907227
    6. '   ' → logprob: -17.298608779907227
    7. ')' → logprob: -17.548608779907227
    8. ' (' → logprob: -18.173608779907227
    9. '-city' → logprob: -18.673608779907227
    10. '_city' → logprob: -19.048608779907227

Token 457: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -9.150362166110426e-05
    2. 'y' → logprob: -10.375091552734375
    3. '.x' → logprob: -10.375091552734375
    4. '.' → logprob: -11.125091552734375
    5. ')' → logprob: -11.875091552734375
    6. '.city' → logprob: -12.000091552734375
    7. '
' → logprob: -15.250091552734375
    8. ' .' → logprob: -15.500091552734375
    9. 'city' → logprob: -16.000091552734375
    10. '   ' → logprob: -16.125091552734375

Token 458: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001720742875477299
    2. ' )' → logprob: -8.875171661376953
    3. ' for' → logprob: -11.125171661376953
    4. 'for' → logprob: -12.000171661376953
    5. ')
' → logprob: -12.500171661376953
    6. '   ' → logprob: -13.000171661376953
    7. '       ' → logprob: -14.000171661376953
    8. ' ' → logprob: -14.125171661376953
    9. '))' → logprob: -14.375171661376953
    10. '0' → logprob: -14.875171661376953

Token 459: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10023222863674164
    2. 'for' → logprob: -2.3502321243286133
    3. '
' → logprob: -11.725232124328613
    4. ' ' → logprob: -11.725232124328613
    5. '           ' → logprob: -13.225232124328613
    6. '   ' → logprob: -13.225232124328613
    7. ')' → logprob: -13.225232124328613
    8. '       ' → logprob: -13.350232124328613
    9. '	for' → logprob: -14.350232124328613
    10. '+' → logprob: -14.850232124328613

Token 460: ' city' (ID: 5030)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.023424360901117325
    2. ' city' → logprob: -3.7734243869781494
    3. 'self' → logprob: -8.64842414855957
    4. ' self' → logprob: -13.02342414855957
    5. '   ' → logprob: -14.39842414855957
    6. '.city' → logprob: -15.39842414855957
    7. '(city' → logprob: -15.64842414855957
    8. '
' → logprob: -16.14842414855957
    9. ' ' → logprob: -16.39842414855957
    10. '_city' → logprob: -17.02342414855957

Token 461: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0297758337110281
    2. 'in' → logprob: -3.529775857925415
    3. 'self' → logprob: -11.279775619506836
    4. 's' → logprob: -12.779775619506836
    5. ' ' → logprob: -12.904775619506836
    6. 'n' → logprob: -12.904775619506836
    7. '   ' → logprob: -14.654775619506836
    8. ']' → logprob: -14.779775619506836
    9. '  ' → logprob: -14.904775619506836
    10. '
' → logprob: -15.154775619506836

Token 462: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003805064770858735
    2. ' self' → logprob: -7.875380516052246
    3. '
' → logprob: -16.00037956237793
    4. '(self' → logprob: -16.37537956237793
    5. '   ' → logprob: -17.12537956237793
    6. ')' → logprob: -17.50037956237793
    7. '[self' → logprob: -17.62537956237793
    8. '       ' → logprob: -17.75037956237793
    9. '	self' → logprob: -18.25037956237793
    10. '           ' → logprob: -18.62537956237793

Token 463: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.005601545795798302
    2. 's' → logprob: -5.255601406097412
    3. '.s' → logprob: -8.25560188293457
    4. 'cities' → logprob: -9.50560188293457
    5. 'self' → logprob: -10.88060188293457
    6. '.' → logprob: -12.25560188293457
    7. 'ities' → logprob: -13.00560188293457
    8. '._' → logprob: -13.13060188293457
    9. 'es' → logprob: -13.50560188293457
    10. '.city' → logprob: -13.88060188293457

Token 464: 'ities' (ID: 1629)
  Prédit: 'ities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ities' → logprob: -1.4498052223643754e-05
    2. 'cities' → logprob: -12.625014305114746
    3. 'ties' → logprob: -12.750014305114746
    4. 'ity' → logprob: -12.750014305114746
    5. 'self' → logprob: -12.750014305114746
    6. 'ites' → logprob: -13.875014305114746
    7. 'it' → logprob: -14.875014305114746
    8. 'itys' → logprob: -15.000014305114746
    9. 'ountries' → logprob: -15.375014305114746
    10. 'itie' → logprob: -15.875014305114746

Token 465: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004902417422272265
    2. ' ]' → logprob: -7.625490188598633
    3. ']
' → logprob: -13.500490188598633
    4. '       ' → logprob: -15.125490188598633
    5. ')]' → logprob: -15.250490188598633
    6. '()]' → logprob: -15.750490188598633
    7. '   ' → logprob: -16.250490188598633
    8. '`]' → logprob: -16.750490188598633
    9. '],' → logprob: -17.125490188598633
    10. '
' → logprob: -17.875490188598633

Token 466: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 467: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 468: ' For' (ID: 2214)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.7506116628646851
    2. 'self' → logprob: -1.250611662864685
    3. '@' → logprob: -2.3756117820739746
    4. '#' → logprob: -3.1256117820739746
    5. 'def' → logprob: -3.2506117820739746
    6. 'market' → logprob: -3.2506117820739746
    7. 'from' → logprob: -4.000611782073975
    8. 'current' → logprob: -5.375611782073975
    9. '   ' → logprob: -7.250611782073975
    10. 'cache' → logprob: -7.500611782073975

Token 469: ' DP' (ID: 51992)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.3031664788722992
    2. ' city' → logprob: -1.8031665086746216
    3. 'self' → logprob: -3.053166389465332
    4. 'each' → logprob: -4.303166389465332
    5. 'i' → logprob: -4.803166389465332
    6. ' self' → logprob: -4.928166389465332
    7. '_city' → logprob: -4.928166389465332
    8. 'c' → logprob: -6.053166389465332
    9. '_' → logprob: -6.053166389465332
    10. ' i' → logprob: -6.303166389465332

Token 470: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4867802858352661
    2. '<|end|>' → logprob: -2.2367801666259766
    3. 'def' → logprob: -2.6117801666259766
    4. '
' → logprob: -2.6117801666259766
    5. 'self' → logprob: -2.7367801666259766
    6. '   ' → logprob: -4.111780166625977
    7. ')' → logprob: -4.111780166625977
    8. '<|end|>' → logprob: -4.486780166625977
    9. ' self' → logprob: -4.736780166625977
    10. ',' → logprob: -5.111780166625977

Token 471: ' cache' (ID: 11956)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.76986163854599
    2. '       ' → logprob: -1.0198616981506348
    3. ' self' → logprob: -2.0198616981506348
    4. 'from' → logprob: -3.7698616981506348
    5. 'def' → logprob: -4.394861698150635
    6. '   ' → logprob: -6.144861698150635
    7. '
' → logprob: -6.269861698150635
    8. ' from' → logprob: -6.769861698150635
    9. ' @' → logprob: -7.519861698150635
    10. '#' → logprob: -7.519861698150635

Token 472: ' max' (ID: 2999)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5076377987861633
    2. '
' → logprob: -2.1326377391815186
    3. '   ' → logprob: -2.1326377391815186
    4. ')' → logprob: -2.2576377391815186
    5. '(' → logprob: -4.757637977600098
    6. '()' → logprob: -5.007637977600098
    7. '(self' → logprob: -5.382637977600098
    8. 'max' → logprob: -5.757637977600098
    9. 'self' → logprob: -5.882637977600098
    10. '(max' → logprob: -5.882637977600098

Token 473: ' profit' (ID: 15971)
  Prédit: '_profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -0.007783947046846151
    2. 'profit' → logprob: -5.007783889770508
    3. '_' → logprob: -8.382783889770508
    4. '_prof' → logprob: -8.757783889770508
    5. '_pro' → logprob: -8.757783889770508
    6. 'def' → logprob: -9.257783889770508
    7. '_value' → logprob: -9.382783889770508
    8. ' profit' → logprob: -9.757783889770508
    9. ')' → logprob: -10.007783889770508
    10. '_state' → logprob: -10.507783889770508

Token 474: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9170501232147217
    2. '
' → logprob: -1.2920501232147217
    3. '   ' → logprob: -2.1670501232147217
    4. 'self' → logprob: -2.6670501232147217
    5. 'def' → logprob: -2.9170501232147217
    6. '<|end|>' → logprob: -3.7920501232147217
    7. ')' → logprob: -3.7920501232147217
    8. '(self' → logprob: -4.542050361633301
    9. ',' → logprob: -4.792050361633301
    10. '@' → logprob: -5.042050361633301

Token 475: ' time' (ID: 1058)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9318617582321167
    2. 'state' → logprob: -1.1818617582321167
    3. 'current' → logprob: -2.3068618774414062
    4. '(' → logprob: -3.1818618774414062
    5. 'each' → logprob: -3.5568618774414062
    6. '(state' → logprob: -3.6818618774414062
    7. 'all' → logprob: -3.9318618774414062
    8. 'given' → logprob: -3.9318618774414062
    9. 'a' → logprob: -4.056861877441406
    10. '(current' → logprob: -4.556861877441406

Token 476: ' used' (ID: 2061)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4109328985214233
    2. ',' → logprob: -1.7859328985214233
    3. '_state' → logprob: -2.160933017730713
    4. 'def' → logprob: -2.410933017730713
    5. 'state' → logprob: -2.660933017730713
    6. '_remaining' → logprob: -3.160933017730713
    7. '_' → logprob: -3.160933017730713
    8. '_used' → logprob: -3.535933017730713
    9. 'states' → logprob: -3.660933017730713
    10. '=' → logprob: -3.785933017730713

Token 477: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4313993752002716
    2. '       ' → logprob: -1.8063993453979492
    3. 'self' → logprob: -2.306399345397949
    4. '
' → logprob: -3.056399345397949
    5. 'def' → logprob: -3.556399345397949
    6. ',' → logprob: -5.806399345397949
    7. ' self' → logprob: -6.556399345397949
    8. ')' → logprob: -6.681399345397949
    9. '@' → logprob: -7.181399345397949
    10. ' ' → logprob: -7.806399345397949

Token 478: ' inventory' (ID: 21752)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.8987187743186951
    2. 'weight' → logprob: -1.5237188339233398
    3. 'capacity' → logprob: -2.39871883392334
    4. 'state' → logprob: -2.64871883392334
    5. '(' → logprob: -3.14871883392334
    6. ' current' → logprob: -3.39871883392334
    7. 'city' → logprob: -3.52371883392334
    8. 'curr' → logprob: -4.77371883392334
    9. 'items' → logprob: -4.77371883392334
    10. 'car' → logprob: -4.77371883392334

Token 479: ' (' (ID: 350)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2413417547941208
    2. '_cache' → logprob: -2.6163418292999268
    3. '       ' → logprob: -2.9913418292999268
    4. ',' → logprob: -3.9913418292999268
    5. '(self' → logprob: -4.616341590881348
    6. 'def' → logprob: -4.616341590881348
    7. ' self' → logprob: -4.616341590881348
    8. ')' → logprob: -5.241341590881348
    9. '   ' → logprob: -5.241341590881348
    10. '_capacity' → logprob: -5.366341590881348

Token 480: 'represented' (ID: 112029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5914129614830017
    2. ',' → logprob: -1.7164130210876465
    3. '):' → logprob: -3.2164130210876465
    4. '),' → logprob: -3.5914130210876465
    5. 'weight' → logprob: -3.7164130210876465
    6. '       ' → logprob: -3.7164130210876465
    7. 'capacity' → logprob: -3.7164130210876465
    8. 'def' → logprob: -3.9664130210876465
    9. 'self' → logprob: -3.9664130210876465
    10. '           ' → logprob: -4.7164130210876465

Token 481: ' abstract' (ID: 13004)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.43074727058410645
    2. ',' → logprob: -1.8057472705841064
    3. ' as' → logprob: -2.6807472705841064
    4. 'by' → logprob: -2.6807472705841064
    5. ')' → logprob: -3.6807472705841064
    6. ' by' → logprob: -4.680747032165527
    7. '_as' → logprob: -4.930747032165527
    8. '=' → logprob: -5.680747032165527
    9. '),' → logprob: -6.805747032165527
    10. '   ' → logprob: -7.805747032165527

Token 482: 'ly' (ID: 423)
  Prédit: 'ion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.025894274935126305
    2. 'state' → logprob: -4.4008941650390625
    3. ')' → logprob: -5.2758941650390625
    4. '_' → logprob: -6.2758941650390625
    5. '_state' → logprob: -6.4008941650390625
    6. 'ly' → logprob: -6.9008941650390625
    7. '_set' → logprob: -7.4008941650390625
    8. ')_' → logprob: -7.5258941650390625
    9. '_repr' → logprob: -8.025894165039062
    10. 'ions' → logprob: -8.150894165039062

Token 483: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03998399153351784
    2. '):' → logprob: -4.164984226226807
    3. ',' → logprob: -4.289984226226807
    4. 'state' → logprob: -5.414984226226807
    5. '_state' → logprob: -6.164984226226807
    6. '),' → logprob: -7.039984226226807
    7. ',)' → logprob: -7.789984226226807
    8. '_key' → logprob: -8.039983749389648
    9. ',state' → logprob: -8.414983749389648
    10. '_states' → logprob: -8.789983749389648

Token 484: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45039552450180054
    2. ')' → logprob: -1.3253955841064453
    3. '       ' → logprob: -4.075395584106445
    4. '  
' → logprob: -4.075395584106445
    5. 'def' → logprob: -4.325395584106445
    6. '
' → logprob: -4.325395584106445
    7. '    
' → logprob: -4.575395584106445
    8. ' ' → logprob: -4.950395584106445
    9. '<|end|>' → logprob: -5.325395584106445
    10. ' 
' → logprob: -5.325395584106445

Token 485: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2680429220199585
    2. 'def' → logprob: -1.2680429220199585
    3. '   ' → logprob: -1.5180429220199585
    4. '<|end|>' → logprob: -1.8930429220199585
    5. '       ' → logprob: -3.143043041229248
    6. '
' → logprob: -4.518043041229248
    7. '<|end|>' → logprob: -5.893043041229248
    8. ' def' → logprob: -5.893043041229248
    9. 'self' → logprob: -6.143043041229248
    10. '    
' → logprob: -6.393043041229248

Token 486: ' But' (ID: 3072)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02532525546848774
    2. '   ' → logprob: -4.650325298309326
    3. 'self' → logprob: -5.275325298309326
    4. '@' → logprob: -5.775325298309326
    5. ')' → logprob: -6.025325298309326
    6. ' def' → logprob: -6.275325298309326
    7. '       ' → logprob: -6.650325298309326
    8. '#' → logprob: -7.400325298309326
    9. '
' → logprob: -7.650325298309326
    10. '@property' → logprob: -9.275324821472168

Token 487: ' we' (ID: 581)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7605693936347961
    2. 'def' → logprob: -1.8855693340301514
    3. 'the' → logprob: -2.3855693340301514
    4. '#' → logprob: -2.5105693340301514
    5. '...' → logprob: -2.8855693340301514
    6. 'we' → logprob: -4.1355695724487305
    7. '   ' → logprob: -4.2605695724487305
    8. 'inventory' → logprob: -4.2605695724487305
    9. 'for' → logprob: -4.5105695724487305
    10. ' the' → logprob: -4.5105695724487305

Token 488: ' do' (ID: 621)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.6336022615432739
    2. 'need' → logprob: -0.8836022615432739
    3. 'have' → logprob: -5.008602142333984
    4. ' haven't' → logprob: -5.133602142333984
    5. ' don't' → logprob: -5.258602142333984
    6. 'cannot' → logprob: -5.633602142333984
    7. 'don't' → logprob: -5.633602142333984
    8. ' have' → logprob: -5.883602142333984
    9. '   ' → logprob: -5.883602142333984
    10. '#' → logprob: -6.258602142333984

Token 489: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.28765538334846497
    2. ' not' → logprob: -1.4126553535461426
    3. 'n't' → logprob: -5.287655353546143
    4. '_not' → logprob: -7.287655353546143
    5. 'n' → logprob: -7.912655353546143
    6. '_' → logprob: -9.0376558303833
    7. 'def' → logprob: -9.2876558303833
    8. 'nt' → logprob: -9.6626558303833
    9. ' ' → logprob: -10.7876558303833
    10. 'no' → logprob: -10.9126558303833

Token 490: ' track' (ID: 5290)
  Prédit: 'store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'store' → logprob: -1.2177940607070923
    2. 'implement' → logprob: -1.2177940607070923
    3. 'have' → logprob: -1.5927940607070923
    4. 'cache' → logprob: -1.9677940607070923
    5. 'use' → logprob: -3.2177939414978027
    6. 'consider' → logprob: -4.842793941497803
    7. 'know' → logprob: -5.092793941497803
    8. 'support' → logprob: -6.092793941497803
    9. 'need' → logprob: -6.467793941497803
    10. 'model' → logprob: -7.092793941497803

Token 491: ' inventory' (ID: 21752)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.946149468421936
    2. 'inventory' → logprob: -1.071149468421936
    3. ' inventory' → logprob: -2.8211493492126465
    4. ' state' → logprob: -2.8211493492126465
    5. ' full' → logprob: -3.9461493492126465
    6. ' states' → logprob: -4.0711493492126465
    7. 'exact' → logprob: -4.1961493492126465
    8. ' exact' → logprob: -4.5711493492126465
    9. 'states' → logprob: -4.6961493492126465
    10. 'the' → logprob: -4.8211493492126465

Token 492: ' per' (ID: 777)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2761163711547852
    2. '   ' → logprob: -1.2761163711547852
    3. '
' → logprob: -2.026116371154785
    4. 'def' → logprob: -2.026116371154785
    5. '<|end|>' → logprob: -2.776116371154785
    6. '       ' → logprob: -3.776116371154785
    7. ')' → logprob: -3.901116371154785
    8. '.' → logprob: -4.026116371154785
    9. '    
' → logprob: -4.651116371154785
    10. ' and' → logprob: -4.776116371154785

Token 493: ' se' (ID: 458)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.9278676509857178
    2. 'state' → logprob: -1.0528676509857178
    3. 'item' → logprob: -2.1778676509857178
    4. 'se' → logprob: -2.5528676509857178
    5. 'city' → logprob: -2.9278676509857178
    6. 'class' → logprob: -5.427867889404297
    7. 'def' → logprob: -6.677867889404297
    8. 'function' → logprob: -7.552867889404297
    9. ' se' → logprob: -7.552867889404297
    10. 'time' → logprob: -7.677867889404297

Token 494: ';' (ID: 26)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0332883596420288
    2. 'def' → logprob: -1.1582883596420288
    3. '   ' → logprob: -2.0332884788513184
    4. ')' → logprob: -2.4082884788513184
    5. '<|end|>' → logprob: -3.0332884788513184
    6. '    
' → logprob: -4.408288478851318
    7. '  
' → logprob: -4.783288478851318
    8. '\n' → logprob: -4.783288478851318
    9. ' def' → logprob: -5.033288478851318
    10. ',' → logprob: -5.033288478851318

Token 495: ' we' (ID: 581)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9892701506614685
    2. '<|end|>' → logprob: -1.1142702102661133
    3. '
' → logprob: -2.7392702102661133
    4. '#' → logprob: -2.9892702102661133
    5. 'self' → logprob: -2.9892702102661133
    6. '       ' → logprob: -2.9892702102661133
    7. 'def' → logprob: -3.3642702102661133
    8. '```' → logprob: -4.489270210266113
    9. '<|end|>' → logprob: -4.489270210266113
    10. '   ' → logprob: -4.864270210266113

Token 496: ' assume' (ID: 19429)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -1.854405164718628
    2. ' only' → logprob: -1.979405164718628
    3. ' track' → logprob: -2.354405164718628
    4. ' use' → logprob: -2.479405164718628
    5. 'store' → logprob: -2.479405164718628
    6. 'only' → logprob: -2.979405164718628
    7. 'track' → logprob: -3.104405164718628
    8. ' store' → logprob: -3.479405164718628
    9. 'consider' → logprob: -3.479405164718628
    10. ' can' → logprob: -3.604405164718628

Token 497: ' instant' (ID: 12823)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.5066461563110352
    2. ' that' → logprob: -2.131646156311035
    3. ')' → logprob: -2.381646156311035
    4. 'self' → logprob: -2.881646156311035
    5. 'the' → logprob: -3.006646156311035
    6. ' self' → logprob: -3.006646156311035
    7. 'that' → logprob: -3.381646156311035
    8. ' we' → logprob: -3.506646156311035
    9. ' time' → logprob: -3.631646156311035
    10. 'max' → logprob: -3.756646156311035

Token 498: ' buy' (ID: 3877)
  Prédit: 'aneous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aneous' → logprob: -0.826740026473999
    2. '_' → logprob: -1.201740026473999
    3. 'purchase' → logprob: -2.701740026473999
    4. ')' → logprob: -2.826740026473999
    5. ' purchase' → logprob: -2.951740026473999
    6. '_purchase' → logprob: -3.951740026473999
    7. 'aneously' → logprob: -5.076740264892578
    8. '_buy' → logprob: -5.326740264892578
    9. ' purchases' → logprob: -5.451740264892578
    10. '
' → logprob: -5.576740264892578

Token 499: '/s' (ID: 5031)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6197531223297119
    2. ')' → logprob: -1.744753122329712
    3. '       ' → logprob: -1.994753122329712
    4. '_and' → logprob: -3.244753122329712
    5. '_price' → logprob: -3.494753122329712
    6. 'and' → logprob: -3.494753122329712
    7. '_' → logprob: -4.244752883911133
    8. '   ' → logprob: -4.994752883911133
    9. '_purchase' → logprob: -4.994752883911133
    10. ',' → logprob: -5.244752883911133

Token 500: 'ell' (ID: 596)
  Prédit: 'ell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ell' → logprob: -0.004931193310767412
    2. 'elling' → logprob: -6.0049309730529785
    3. 'el' → logprob: -7.0049309730529785
    4. 'ells' → logprob: -7.0049309730529785
    5. 'sell' → logprob: -9.004931449890137
    6. 'ale' → logprob: -9.254931449890137
    7. 'elf' → logprob: -9.379931449890137
    8. 'e' → logprob: -9.504931449890137
    9. 'old' → logprob: -9.879931449890137
    10. '#' → logprob: -10.254931449890137

Token 501: ' at' (ID: 540)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 502: ' city' (ID: 5030)
  Prédit: 'market'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'market' → logprob: -0.2634925842285156
    2. 'each' → logprob: -2.0134925842285156
    3. 'the' → logprob: -3.0134925842285156
    4. ' market' → logprob: -4.263492584228516
    5. 'cities' → logprob: -4.638492584228516
    6. 'markets' → logprob: -4.888492584228516
    7. 'city' → logprob: -5.013492584228516
    8. ' each' → logprob: -6.263492584228516
    9. '```' → logprob: -6.388492584228516
    10. ' the' → logprob: -6.763492584228516

Token 503: '/' (ID: 14)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 504: 'market' (ID: 27236)
  Prédit: 'market'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'market' → logprob: -0.0026729225646704435
    2. ' market' → logprob: -6.627673149108887
    3. '<|end|>' → logprob: -7.002673149108887
    4. '
' → logprob: -9.127673149108887
    5. '_market' → logprob: -9.252673149108887
    6. '#' → logprob: -9.502673149108887
    7. '<|end|>' → logprob: -10.627673149108887
    8. ')' → logprob: -11.127673149108887
    9. '0' → logprob: -11.252673149108887
    10. '_' → logprob: -11.627673149108887

Token 505: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22675220668315887
    2. '<|end|>' → logprob: -1.7267521619796753
    3. 'def' → logprob: -4.976752281188965
    4. '<|end|>' → logprob: -5.351752281188965
    5. ')' → logprob: -5.601752281188965
    6. '   ' → logprob: -5.726752281188965
    7. '    
' → logprob: -6.226752281188965
    8. '

' → logprob: -6.601752281188965
    9. ')
' → logprob: -7.226752281188965
    10. '        
' → logprob: -7.476752281188965

Token 506: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4586262106895447
    2. '<|end|>' → logprob: -1.3336262702941895
    3. '   ' → logprob: -2.5836262702941895
    4. ')' → logprob: -4.4586262702941895
    5. 'def' → logprob: -5.2086262702941895
    6. '    
' → logprob: -5.3336262702941895
    7. '<|end|>' → logprob: -5.7086262702941895
    8. '       ' → logprob: -7.2086262702941895
    9. ' def' → logprob: -7.9586262702941895
    10. ',' → logprob: -7.9586262702941895

Token 507: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8299931883811951
    2. '
' → logprob: -1.4549932479858398
    3. 'def' → logprob: -2.07999324798584
    4. '<|end|>' → logprob: -2.07999324798584
    5. '    
' → logprob: -3.20499324798584
    6. ')' → logprob: -3.82999324798584
    7. '  
' → logprob: -5.32999324798584
    8. '<|end|>' → logprob: -5.45499324798584
    9. ' 
' → logprob: -5.95499324798584
    10. '       ' → logprob: -6.45499324798584

Token 508: ' We' (ID: 1416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9350316524505615
    2. '<|end|>' → logprob: -1.3100316524505615
    3. 'def' → logprob: -1.9350316524505615
    4. '   ' → logprob: -2.4350316524505615
    5. '       ' → logprob: -2.9350316524505615
    6. '
' → logprob: -3.3100316524505615
    7. 'self' → logprob: -5.060031890869141
    8. '<|end|>' → logprob: -6.060031890869141
    9. ' def' → logprob: -6.185031890869141
    10. '```' → logprob: -6.935031890869141

Token 509: ' plan' (ID: 3496)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.159623622894287
    2. 'def' → logprob: -1.659623622894287
    3. '   ' → logprob: -2.284623622894287
    4. ' continue' → logprob: -2.784623622894287
    5. ' def' → logprob: -2.909623622894287
    6. ''ll' → logprob: -3.034623622894287
    7. ' will' → logprob: -3.534623622894287
    8. ' need' → logprob: -3.659623622894287
    9. 'continue' → logprob: -3.784623622894287
    10. ' want' → logprob: -3.784623622894287

Token 510: ' route' (ID: 9656)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7005566358566284
    2. 'def' → logprob: -1.7005566358566284
    3. ' to' → logprob: -1.8255566358566284
    4. ')' → logprob: -3.700556755065918
    5. 's' → logprob: -3.950556755065918
    6. '=' → logprob: -4.075556755065918
    7. '   ' → logprob: -4.200556755065918
    8. 'ning' → logprob: -4.200556755065918
    9. ' =' → logprob: -4.450556755065918
    10. '_time' → logprob: -4.700556755065918

Token 511: ' as' (ID: 472)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8395131230354309
    2. '   ' → logprob: -1.0895130634307861
    3. '<|end|>' → logprob: -2.714513063430786
    4. '
' → logprob: -2.964513063430786
    5. ')' → logprob: -2.964513063430786
    6. ',' → logprob: -4.464513301849365
    7. '<|end|>' → logprob: -4.464513301849365
    8. '    
' → logprob: -4.839513301849365
    9. ' and' → logprob: -4.839513301849365
    10. '       ' → logprob: -5.089513301849365

Token 512: ':' (ID: 25)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.404188871383667
    2. 'def' → logprob: -1.529188871383667
    3. 'self' → logprob: -3.404188871383667
    4. 'sequence' → logprob: -4.029189109802246
    5. '#' → logprob: -4.404189109802246
    6. 'states' → logprob: -4.404189109802246
    7. ' a' → logprob: -5.029189109802246
    8. 'list' → logprob: -5.279189109802246
    9. 'dp' → logprob: -5.779189109802246
    10. 'time' → logprob: -6.029189109802246

Token 513: ' from' (ID: 591)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8688808679580688
    2. 'self' → logprob: -1.2438808679580688
    3. '#' → logprob: -2.3688807487487793
    4. ' self' → logprob: -2.9938807487487793
    5. 'from' → logprob: -3.4938807487487793
    6. 'start' → logprob: -4.743880748748779
    7. ' def' → logprob: -4.743880748748779
    8. '(' → logprob: -4.868880748748779
    9. '       ' → logprob: -4.993880748748779
    10. ' visits' → logprob: -5.118880748748779

Token 514: ' market' (ID: 2910)
  Prédit: 'market'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'market' → logprob: -0.030384741723537445
    2. 'city' → logprob: -4.155384540557861
    3. ' market' → logprob: -5.030384540557861
    4. 'the' → logprob: -5.905384540557861
    5. '0' → logprob: -6.405384540557861
    6. 'current' → logprob: -6.655384540557861
    7. 'start' → logprob: -7.405384540557861
    8. 'self' → logprob: -8.03038501739502
    9. ' city' → logprob: -8.53038501739502
    10. 'starting' → logprob: -9.03038501739502

Token 515: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4812573194503784
    2. 'to' → logprob: -1.6062573194503784
    3. ',' → logprob: -1.8562573194503784
    4. '<|end|>' → logprob: -3.981257438659668
    5. '<|end|>' → logprob: -6.356257438659668
    6. ' ' → logprob: -7.731257438659668
    7. '.' → logprob: -7.731257438659668
    8. ' ,' → logprob: -7.856257438659668
    9. 'point' → logprob: -7.856257438659668
    10. 'def' → logprob: -7.856257438659668

Token 516: ' some' (ID: 1236)
  Prédit: ' city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' city' → logprob: -0.623641848564148
    2. 'city' → logprob: -0.873641848564148
    3. ' next' → logprob: -4.8736419677734375
    4. 'some' → logprob: -4.9986419677734375
    5. 'each' → logprob: -4.9986419677734375
    6. 'a' → logprob: -5.1236419677734375
    7. 'next' → logprob: -5.6236419677734375
    8. ' a' → logprob: -5.7486419677734375
    9. 'cities' → logprob: -5.7486419677734375
    10. ' cities' → logprob: -6.1236419677734375

Token 517: ' cities' (ID: 15636)
  Prédit: ' city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' city' → logprob: -0.6350375413894653
    2. 'city' → logprob: -0.7600375413894653
    3. 'cities' → logprob: -6.510037422180176
    4. ' cities' → logprob: -7.010037422180176
    5. '_city' → logprob: -11.510037422180176
    6. 'c' → logprob: -11.885037422180176
    7. 'City' → logprob: -12.510037422180176
    8. 'class' → logprob: -12.635037422180176
    9. 'ci' → logprob: -12.760037422180176
    10. 'product' → logprob: -13.635037422180176

Token 518: ' buy' (ID: 3877)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2855997085571289
    2. '   ' → logprob: -1.785599708557129
    3. 'def' → logprob: -3.535599708557129
    4. '    
' → logprob: -4.285599708557129
    5. ')' → logprob: -4.660599708557129
    6. '       ' → logprob: -4.910599708557129
    7. '        
' → logprob: -5.660599708557129
    8. '

' → logprob: -5.910599708557129
    9. ',' → logprob: -6.160599708557129
    10. '<|end|>' → logprob: -6.160599708557129

Token 519: ' some' (ID: 1236)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.917549729347229
    2. 'and' → logprob: -1.542549729347229
    3. ' and' → logprob: -1.667549729347229
    4. 'products' → logprob: -2.9175496101379395
    5. ')' → logprob: -3.0425496101379395
    6. '   ' → logprob: -4.1675496101379395
    7. '       ' → logprob: -4.1675496101379395
    8. '_products' → logprob: -4.2925496101379395
    9. '#' → logprob: -4.6675496101379395
    10. ' products' → logprob: -4.9175496101379395

Token 520: ' products' (ID: 3891)
  Prédit: 'products'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'products' → logprob: -0.4137440323829651
    2. ' products' → logprob: -1.6637439727783203
    3. '#' → logprob: -2.7887439727783203
    4. 'and' → logprob: -3.6637439727783203
    5. 'goods' → logprob: -3.6637439727783203
    6. 'items' → logprob: -4.91374397277832
    7. ' goods' → logprob: -5.16374397277832
    8. ' and' → logprob: -5.28874397277832
    9. '_products' → logprob: -5.53874397277832
    10. 'product' → logprob: -5.91374397277832

Token 521: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 522: ' back' (ID: 1602)
  Prédit: ' then'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' then' → logprob: -0.5819204449653625
    2. '#' → logprob: -1.2069203853607178
    3. 'from' → logprob: -2.9569203853607178
    4. 'then' → logprob: -3.0819203853607178
    5. 'and' → logprob: -4.081920623779297
    6. ' and' → logprob: -4.081920623779297
    7. ' sell' → logprob: -5.956920623779297
    8. ' from' → logprob: -6.331920623779297
    9. 'sell' → logprob: -6.706920623779297
    10. 'return' → logprob: -6.831920623779297

Token 523: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.492225706577301
    2. '   ' → logprob: -1.3672256469726562
    3. ')' → logprob: -2.1172256469726562
    4. 'def' → logprob: -4.867225646972656
    5. ' to' → logprob: -6.617225646972656
    6. '.' → logprob: -7.367225646972656
    7. ']' → logprob: -7.867225646972656
    8. ',' → logprob: -7.867225646972656
    9. ' and' → logprob: -8.117225646972656
    10. '
' → logprob: -8.117225646972656

Token 524: ' market' (ID: 2910)
  Prédit: 'market'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'market' → logprob: -0.012555561028420925
    2. ' market' → logprob: -4.3875555992126465
    3. 'the' → logprob: -10.262555122375488
    4. '
' → logprob: -13.137555122375488
    5. '_market' → logprob: -13.387555122375488
    6. ' the' → logprob: -13.637555122375488
    7. 'markets' → logprob: -13.887555122375488
    8. 'mark' → logprob: -14.012555122375488
    9. '市場' → logprob: -14.387555122375488
    10. '0' → logprob: -14.512555122375488

Token 525: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.809745728969574
    2. '<|end|>' → logprob: -1.3097457885742188
    3. '   ' → logprob: -1.5597457885742188
    4. 'def' → logprob: -3.1847457885742188
    5. '
' → logprob: -3.8097457885742188
    6. '<|end|>' → logprob: -4.809745788574219
    7. ' def' → logprob: -6.684745788574219
    8. '       ' → logprob: -7.684745788574219
    9. '    
' → logprob: -7.809745788574219
    10. ' ' → logprob: -8.309745788574219

Token 526: ' sell' (ID: 7437)
  Prédit: 'sell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sell' → logprob: -0.0047384146600961685
    2. ' sell' → logprob: -5.5047383308410645
    3. 'return' → logprob: -8.504738807678223
    4. 'buy' → logprob: -9.504738807678223
    5. 'profit' → logprob: -9.629738807678223
    6. 'then' → logprob: -9.879738807678223
    7. 'repeat' → logprob: -10.379738807678223
    8. 'rest' → logprob: -10.754738807678223
    9. 'calculate' → logprob: -10.879738807678223
    10. 'finish' → logprob: -10.879738807678223

Token 527: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13330674171447754
    2. 'def' → logprob: -2.5083067417144775
    3. '   ' → logprob: -3.7583067417144775
    4. '<|end|>' → logprob: -4.883306503295898
    5. ')' → logprob: -5.258306503295898
    6. '    
' → logprob: -6.133306503295898
    7. '

' → logprob: -6.883306503295898
    8. ' def' → logprob: -6.883306503295898
    9. ',' → logprob: -7.508306503295898
    10. ')
' → logprob: -7.883306503295898

Token 528: ' repeat' (ID: 22962)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6053548455238342
    2. '#' → logprob: -1.1053547859191895
    3. ' then' → logprob: -2.9803547859191895
    4. ' and' → logprob: -3.1053547859191895
    5. '   ' → logprob: -4.6053547859191895
    6. 'and' → logprob: -4.9803547859191895
    7. ')' → logprob: -6.1053547859191895
    8. '        ' → logprob: -6.7303547859191895
    9. '        
' → logprob: -6.8553547859191895
    10. '    ' → logprob: -7.2303547859191895

Token 529: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5797176957130432
    2. '<|end|>' → logprob: -0.9547176957130432
    3. 'def' → logprob: -3.8297176361083984
    4. ')' → logprob: -4.329717636108398
    5. '
' → logprob: -4.704717636108398
    6. '<|end|>' → logprob: -4.954717636108398
    7. '    
' → logprob: -6.204717636108398
    8. ' def' → logprob: -7.329717636108398
    9. '       ' → logprob: -7.704717636108398
    10. ' ' → logprob: -8.329717636108398

Token 530: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47312840819358826
    2. '   ' → logprob: -1.0981284379959106
    3. 'def' → logprob: -3.473128318786621
    4. '    
' → logprob: -4.973128318786621
    5. '<|end|>' → logprob: -6.098128318786621
    6. ')' → logprob: -6.973128318786621
    7. ' def' → logprob: -7.348128318786621
    8. '```' → logprob: -7.473128318786621
    9. '  
' → logprob: -8.098128318786621
    10. '<|end|>' → logprob: -8.598128318786621

Token 531: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2165943831205368
    2. ')' → logprob: -2.0915944576263428
    3. '   ' → logprob: -2.8415944576263428
    4. '       ' → logprob: -5.216594219207764
    5. '@' → logprob: -5.466594219207764
    6. 'self' → logprob: -6.591594219207764
    7. '<|end|>' → logprob: -6.966594219207764
    8. '@property' → logprob: -8.341594696044922
    9. ' def' → logprob: -8.591594696044922
    10. '<|end|>' → logprob: -9.591594696044922

Token 532: ' We' (ID: 1416)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001265825005248189
    2. '   ' → logprob: -8.001265525817871
    3. 'pass' → logprob: -8.376265525817871
    4. '@property' → logprob: -8.501265525817871
    5. 'self' → logprob: -8.626265525817871
    6. '@' → logprob: -8.876265525817871
    7. '<|end|>' → logprob: -10.126265525817871
    8. '...' → logprob: -10.251265525817871
    9. ' def' → logprob: -10.751265525817871
    10. '       ' → logprob: -10.876265525817871

Token 533: ' will' (ID: 738)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.49115338921546936
    2. 'continue' → logprob: -2.1161534786224365
    3. '#' → logprob: -3.2411534786224365
    4. ' need' → logprob: -3.6161534786224365
    5. ' continue' → logprob: -3.7411534786224365
    6. ' will' → logprob: -3.9911534786224365
    7. 'need' → logprob: -3.9911534786224365
    8. '   ' → logprob: -3.9911534786224365
    9. '       ' → logprob: -4.116153240203857
    10. 'max' → logprob: -4.366153240203857

Token 534: ' generate' (ID: 10419)
  Prédit: 'implement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'implement' → logprob: -1.01460862159729
    2. 'continue' → logprob: -1.26460862159729
    3. 'define' → logprob: -2.01460862159729
    4. 'use' → logprob: -2.63960862159729
    5. 'def' → logprob: -3.38960862159729
    6. 'store' → logprob: -3.63960862159729
    7. 'add' → logprob: -3.63960862159729
    8. 'build' → logprob: -4.764608383178711
    9. 'need' → logprob: -4.889608383178711
    10. 'pre' → logprob: -4.889608383178711

Token 535: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.0988599956035614
    2. ' all' → logprob: -2.848860025405884
    3. 'self' → logprob: -3.473860025405884
    4. 'the' → logprob: -6.348859786987305
    5. 'possible' → logprob: -6.473859786987305
    6. '<|end|>' → logprob: -6.973859786987305
    7. 'a' → logprob: -7.598859786987305
    8. '...' → logprob: -9.473859786987305
    9. 'cities' → logprob: -9.973859786987305
    10. ' self' → logprob: -10.098859786987305

Token 536: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.8782162070274353
    2. ' possible' → logprob: -1.12821626663208
    3. ' subsets' → logprob: -1.87821626663208
    4. ' combinations' → logprob: -3.00321626663208
    5. '_possible' → logprob: -4.00321626663208
    6. 'sub' → logprob: -4.00321626663208
    7. 'com' → logprob: -4.50321626663208
    8. '_com' → logprob: -6.00321626663208
    9. 'subset' → logprob: -6.50321626663208
    10. '_sub' → logprob: -6.62821626663208

Token 537: ' product' (ID: 1888)
  Prédit: ' subsets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subsets' → logprob: -0.2881763279438019
    2. ' combinations' → logprob: -2.0381762981414795
    3. 'sub' → logprob: -2.9131762981414795
    4. ' product' → logprob: -4.538176536560059
    5. 'com' → logprob: -4.788176536560059
    6. ' routes' → logprob: -5.038176536560059
    7. ' combos' → logprob: -5.538176536560059
    8. 'buy' → logprob: -5.663176536560059
    9. 'product' → logprob: -5.663176536560059
    10. 'subset' → logprob: -5.663176536560059

Token 538: ' load' (ID: 4700)
  Prédit: ' combinations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' combinations' → logprob: -0.49672386050224304
    2. '_com' → logprob: -1.3717238903045654
    3. ' subsets' → logprob: -2.2467238903045654
    4. 's' → logprob: -4.746723651885986
    5. 'com' → logprob: -5.246723651885986
    6. ' sets' → logprob: -5.621723651885986
    7. ' combos' → logprob: -5.621723651885986
    8. '_comb' → logprob: -5.746723651885986
    9. '_sets' → logprob: -6.121723651885986
    10. ' bundles' → logprob: -6.746723651885986

Token 539: '-outs' (ID: 141780)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.008301911875605583
    2. 'outs' → logprob: -4.883301734924316
    3. '_com' → logprob: -8.008301734924316
    4. '_s' → logprob: -8.883301734924316
    5. 'ings' → logprob: -9.258301734924316
    6. 'out' → logprob: -9.883301734924316
    7. ' combinations' → logprob: -10.633301734924316
    8. '_' → logprob: -10.758301734924316
    9. '_out' → logprob: -12.008301734924316
    10. ' s' → logprob: -12.258301734924316

Token 540: ' per' (ID: 777)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8908911943435669
    2. ':' → logprob: -1.140891194343567
    3. ',' → logprob: -2.7658910751342773
    4. ' for' → logprob: -3.0158910751342773
    5. 'self' → logprob: -3.7658910751342773
    6. ' self' → logprob: -4.140891075134277
    7. '   ' → logprob: -4.140891075134277
    8. '.' → logprob: -4.140891075134277
    9. '
' → logprob: -4.390891075134277
    10. '        
' → logprob: -4.515891075134277

Token 541: ' city' (ID: 5030)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.4279506206512451
    2. ' city' → logprob: -1.1779506206512451
    3. 'subset' → logprob: -3.802950620651245
    4. ' subset' → logprob: -4.677950859069824
    5. 'product' → logprob: -5.552950859069824
    6. ' product' → logprob: -7.302950859069824
    7. 'market' → logprob: -7.302950859069824
    8. ' combination' → logprob: -7.427950859069824
    9. 'class' → logprob: -7.927950859069824
    10. 'c' → logprob: -8.177950859069824

Token 542: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6350825428962708
    2. '
' → logprob: -1.010082483291626
    3. 'self' → logprob: -3.260082483291626
    4. '        
' → logprob: -4.010082721710205
    5. ',' → logprob: -4.135082721710205
    6. '   ' → logprob: -4.510082721710205
    7. '<|end|>' → logprob: -5.385082721710205
    8. 'def' → logprob: -5.760082721710205
    9. '    
' → logprob: -5.885082721710205
    10. '  
' → logprob: -6.135082721710205

Token 543: ' fit' (ID: 5769)
  Prédit: ' fit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fit' → logprob: -0.9336637854576111
    2. ' can' → logprob: -1.0586638450622559
    3. 'fit' → logprob: -2.058663845062256
    4. 'can' → logprob: -2.183663845062256
    5. 'sum' → logprob: -5.683663845062256
    6. '       ' → logprob: -6.308663845062256
    7. ' do' → logprob: -6.433663845062256
    8. ' respect' → logprob: -6.433663845062256
    9. ' could' → logprob: -6.683663845062256
    10. ' sum' → logprob: -6.808663845062256

Token 544: ' weight' (ID: 6049)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.35058629512786865
    2. ' into' → logprob: -1.3505862951278687
    3. 'in' → logprob: -3.850586414337158
    4. 'into' → logprob: -4.725586414337158
    5. 'weight' → logprob: -6.100586414337158
    6. ' the' → logprob: -6.225586414337158
    7. ' within' → logprob: -7.100586414337158
    8. '<|end|>' → logprob: -8.1005859375
    9. 'the' → logprob: -8.3505859375
    10. ' weight' → logprob: -8.7255859375

Token 545: ' W' (ID: 486)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.2501076459884644
    2. ' limit' → logprob: -1.6251076459884644
    3. ' limits' → logprob: -1.8751076459884644
    4. '       ' → logprob: -2.250107765197754
    5. '_limit' → logprob: -2.375107765197754
    6. '   ' → logprob: -2.875107765197754
    7. 'limits' → logprob: -3.750107765197754
    8. 'capacity' → logprob: -4.125107765197754
    9. ' and' → logprob: -4.250107765197754
    10. ',' → logprob: -4.500107765197754

Token 546: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21992751955986023
    2. '       ' → logprob: -1.7199275493621826
    3. 'self' → logprob: -5.0949273109436035
    4. '        
' → logprob: -5.4699273109436035
    5. ' 
' → logprob: -6.4699273109436035
    6. '   ' → logprob: -6.4699273109436035
    7. ',' → logprob: -6.8449273109436035
    8. 'def' → logprob: -6.9699273109436035
    9. '        ' → logprob: -7.4699273109436035
    10. '    
' → logprob: -7.8449273109436035

Token 547: ' yield' (ID: 14376)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' have' → logprob: -1.50869619846344
    2. 'maximize' → logprob: -1.50869619846344
    3. 'profit' → logprob: -1.88369619846344
    4. ' maximize' → logprob: -2.0086960792541504
    5. 'have' → logprob: -2.1336960792541504
    6. ' profit' → logprob: -3.3836960792541504
    7. 'calculate' → logprob: -3.8836960792541504
    8. ' compute' → logprob: -4.00869607925415
    9. 'compute' → logprob: -4.00869607925415
    10. ' calculate' → logprob: -5.00869607925415

Token 548: ' profit' (ID: 15971)
  Prédit: ' profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' profit' → logprob: -0.4976356327533722
    2. 'profit' → logprob: -1.8726356029510498
    3. ' positive' → logprob: -2.24763560295105
    4. 'positive' → logprob: -2.62263560295105
    5. 'some' → logprob: -3.62263560295105
    6. ' some' → logprob: -4.872635841369629
    7. 'a' → logprob: -5.497635841369629
    8. 'non' → logprob: -5.622635841369629
    9. ' profitable' → logprob: -5.622635841369629
    10. 'prof' → logprob: -5.622635841369629

Token 549: '>' (ID: 29)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8716183304786682
    2. 's' → logprob: -1.1216182708740234
    3. 'self' → logprob: -1.7466182708740234
    4. '   ' → logprob: -3.4966182708740234
    5. ',' → logprob: -3.4966182708740234
    6. ' self' → logprob: -5.496618270874023
    7. '
' → logprob: -5.871618270874023
    8. '_lists' → logprob: -5.996618270874023
    9. '        
' → logprob: -6.371618270874023
    10. '.' → logprob: -6.371618270874023

Token 550: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04912025108933449
    2. ' ' → logprob: -3.0491201877593994
    3. '=' → logprob: -8.04911994934082
    4. '>' → logprob: -8.67411994934082
    5. ' >' → logprob: -11.17411994934082
    6. '1' → logprob: -11.92411994934082
    7. 's' → logprob: -12.04911994934082
    8. ',' → logprob: -12.42411994934082
    9. '_' → logprob: -12.67411994934082
    10. '  ' → logprob: -13.79911994934082

Token 551: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6458344459533691
    2. '
' → logprob: -0.7708344459533691
    3. '        
' → logprob: -5.020834445953369
    4. 'self' → logprob: -5.770834445953369
    5. '   ' → logprob: -6.645834445953369
    6. 'def' → logprob: -6.895834445953369
    7. '    
' → logprob: -8.145833969116211
    8. '

' → logprob: -8.770833969116211
    9. ' 
' → logprob: -8.770833969116211
    10. ',' → logprob: -9.020833969116211

Token 552: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10727962106466293
    2. '
' → logprob: -2.4822795391082764
    3. '        
' → logprob: -4.8572797775268555
    4. ' 
' → logprob: -5.4822797775268555
    5. ',' → logprob: -6.9822797775268555
    6. '<|end|>' → logprob: -7.1072797775268555
    7. 'self' → logprob: -7.3572797775268555
    8. '  
' → logprob: -7.3572797775268555
    9. '   ' → logprob: -7.6072797775268555
    10. ' self' → logprob: -7.6072797775268555

Token 553: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11806696653366089
    2. 'self' → logprob: -2.4930670261383057
    3. ' self' → logprob: -3.9930670261383057
    4. '
' → logprob: -5.118066787719727
    5. '   ' → logprob: -6.618066787719727
    6. '        
' → logprob: -7.118066787719727
    7. 'from' → logprob: -7.118066787719727
    8. 'def' → logprob: -7.368066787719727
    9. ' 
' → logprob: -8.743066787719727
    10. ' ' → logprob: -8.993066787719727

Token 554: ' To' (ID: 2514)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12255455553531647
    2. 'self' → logprob: -2.2475545406341553
    3. ' self' → logprob: -5.497554779052734
    4. '
' → logprob: -5.622554779052734
    5. 'from' → logprob: -7.372554779052734
    6. '        
' → logprob: -7.497554779052734
    7. 'def' → logprob: -7.747554779052734
    8. '   ' → logprob: -8.247554779052734
    9. '#' → logprob: -10.247554779052734
    10. 'import' → logprob: -11.247554779052734

Token 555: ' simplify' (ID: 66240)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.4194883108139038
    2. 'self' → logprob: -1.6694883108139038
    3. 'generate' → logprob: -1.9194883108139038
    4. 'def' → logprob: -1.9194883108139038
    5. 'do' → logprob: -2.1694884300231934
    6. 'opt' → logprob: -3.6694884300231934
    7. 'store' → logprob: -4.044488430023193
    8. 'for' → logprob: -4.544488430023193
    9. 'build' → logprob: -4.544488430023193
    10. 'fill' → logprob: -4.919488430023193

Token 556: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.055655527859926224
    2. ' self' → logprob: -4.305655479431152
    3. ' ,' → logprob: -4.430655479431152
    4. 'self' → logprob: -4.555655479431152
    5. ' we' → logprob: -5.555655479431152
    6. 'we' → logprob: -5.930655479431152
    7. ' the' → logprob: -6.055655479431152
    8. ' for' → logprob: -6.180655479431152
    9. ' all' → logprob: -6.180655479431152
    10. 'for' → logprob: -6.555655479431152

Token 557: ' we' (ID: 581)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.49295496940612793
    2. ' self' → logprob: -2.242954969406128
    3. 'pass' → logprob: -2.617954969406128
    4. 'for' → logprob: -2.742954969406128
    5. '#' → logprob: -3.242954969406128
    6. ' pass' → logprob: -3.617954969406128
    7. ' for' → logprob: -3.867954969406128
    8. '       ' → logprob: -4.242955207824707
    9. 'we' → logprob: -4.242955207824707
    10. 'continue' → logprob: -4.492955207824707

Token 558: ' consider' (ID: 3331)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.24470342695713043
    2. 'continue' → logprob: -2.119703531265259
    3. 'def' → logprob: -3.994703531265259
    4. ' generate' → logprob: -4.11970329284668
    5. 'will' → logprob: -4.36970329284668
    6. ' continue' → logprob: -4.36970329284668
    7. 'consider' → logprob: -4.61970329284668
    8. ' will' → logprob: -4.99470329284668
    9. '...' → logprob: -5.24470329284668
    10. 'implement' → logprob: -6.11970329284668

Token 559: ' buying' (ID: 12398)
  Prédit: ' only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' only' → logprob: -0.9143909215927124
    2. 'all' → logprob: -1.2893909215927124
    3. 'only' → logprob: -1.5393909215927124
    4. ' all' → logprob: -2.539391040802002
    5. 'from' → logprob: -5.039391040802002
    6. 'each' → logprob: -5.664391040802002
    7. 'products' → logprob: -5.789391040802002
    8. 'possible' → logprob: -5.914391040802002
    9. 'self' → logprob: -6.289391040802002
    10. '   ' → logprob: -6.289391040802002

Token 560: ' one' (ID: 1001)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.8607726693153381
    2. 'only' → logprob: -0.9857726693153381
    3. ' all' → logprob: -2.6107726097106934
    4. ' only' → logprob: -2.9857726097106934
    5. 'from' → logprob: -3.7357726097106934
    6. 'products' → logprob: -3.8607726097106934
    7. 'com' → logprob: -4.860772609710693
    8. ' combinations' → logprob: -5.235772609710693
    9. ' at' → logprob: -5.985772609710693
    10. ' subsets' → logprob: -6.110772609710693

Token 561: ' type' (ID: 1490)
  Prédit: ' product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.2365695685148239
    2. ' or' → logprob: -2.48656964302063
    3. 'product' → logprob: -2.48656964302063
    4. ' ' → logprob: -3.98656964302063
    5. ' of' → logprob: -4.236569404602051
    6. '_product' → logprob: -5.861569404602051
    7. 'of' → logprob: -6.111569404602051
    8. ' item' → logprob: -6.861569404602051
    9. ' unit' → logprob: -6.861569404602051
    10. 'unit' → logprob: -7.361569404602051

Token 562: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.10090436786413193
    2. 'of' → logprob: -2.7259044647216797
    3. ',' → logprob: -4.97590446472168
    4. '_' → logprob: -5.22590446472168
    5. ' only' → logprob: -5.22590446472168
    6. ' per' → logprob: -5.35090446472168
    7. '_of' → logprob: -5.85090446472168
    8. 'only' → logprob: -7.10090446472168
    9. '_product' → logprob: -7.47590446472168
    10. '<|end|>' → logprob: -7.47590446472168

Token 563: ' product' (ID: 1888)
  Prédit: ' product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.31346482038497925
    2. 'product' → logprob: -1.313464879989624
    3. 'Product' → logprob: -9.563465118408203
    4. '_product' → logprob: -10.188465118408203
    5. 'products' → logprob: -10.438465118408203
    6. '
' → logprob: -10.688465118408203
    7. ' products' → logprob: -11.688465118408203
    8. '	product' → logprob: -12.063465118408203
    9. ' Product' → logprob: -12.313465118408203
    10. ' ' → logprob: -13.063465118408203

Token 564: ' maximum' (ID: 10562)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09366533160209656
    2. ' from' → logprob: -4.09366512298584
    3. '.' → logprob: -4.34366512298584
    4. '   ' → logprob: -4.46866512298584
    5. ' at' → logprob: -4.59366512298584
    6. 'from' → logprob: -4.59366512298584
    7. ',' → logprob: -4.84366512298584
    8. 's' → logprob: -5.21866512298584
    9. ' for' → logprob: -5.46866512298584
    10. ' in' → logprob: -6.21866512298584

Token 565: ' allowed' (ID: 9279)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.35129567980766296
    2. ' per' → logprob: -1.4762957096099854
    3. ' for' → logprob: -3.6012957096099854
    4. 'per' → logprob: -4.101295471191406
    5. '.' → logprob: -5.101295471191406
    6. ',' → logprob: -5.351295471191406
    7. '_per' → logprob: -6.101295471191406
    8. ' only' → logprob: -6.226295471191406
    9. ' each' → logprob: -6.476295471191406
    10. '_' → logprob: -6.476295471191406

Token 566: ' per' (ID: 777)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.8878306746482849
    2. '       ' → logprob: -1.5128307342529297
    3. '.' → logprob: -2.7628307342529297
    4. ',' → logprob: -2.8878307342529297
    5. '   ' → logprob: -2.8878307342529297
    6. 'from' → logprob: -3.6378307342529297
    7. ')' → logprob: -3.7628307342529297
    8. 's' → logprob: -4.01283073425293
    9. ' for' → logprob: -4.01283073425293
    10. ' per' → logprob: -4.26283073425293

Token 567: ' trip' (ID: 8831)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.16125614941120148
    2. ' city' → logprob: -1.911256194114685
    3. 'product' → logprob: -7.536256313323975
    4. 'class' → logprob: -9.286255836486816
    5. ' product' → logprob: -9.786255836486816
    6. 'quantity' → logprob: -9.786255836486816
    7. 'item' → logprob: -9.911255836486816
    8. 'market' → logprob: -10.286255836486816
    9. 'purchase' → logprob: -10.411255836486816
    10. '_city' → logprob: -10.661255836486816

Token 568: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17391683161258698
    2. '<|end|>' → logprob: -2.548916816711426
    3. '   ' → logprob: -3.548916816711426
    4. '       ' → logprob: -3.923916816711426
    5. 'def' → logprob: -4.548916816711426
    6. ')' → logprob: -4.923916816711426
    7. '    
' → logprob: -5.923916816711426
    8. '<|end|>' → logprob: -6.048916816711426
    9. '
    
' → logprob: -6.298916816711426
    10. '

' → logprob: -6.548916816711426

Token 569: 'since' (ID: 21910)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08281097561120987
    2. ' )' → logprob: -3.082810878753662
    3. ').' → logprob: -3.582810878753662
    4. ' at' → logprob: -5.957810878753662
    5. '),' → logprob: -6.332810878753662
    6. ' ).' → logprob: -7.332810878753662
    7. ' per' → logprob: -8.45781135559082
    8. ',' → logprob: -9.20781135559082
    9. ' ),' → logprob: -9.20781135559082
    10. 'per' → logprob: -10.20781135559082

Token 570: ' unlimited' (ID: 34136)
  Prédit: ' buying'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' buying' → logprob: -1.1715718507766724
    2. ' weight' → logprob: -1.5465718507766724
    3. ' only' → logprob: -1.6715718507766724
    4. ' the' → logprob: -3.171571731567383
    5. 'weight' → logprob: -3.546571731567383
    6. 'buy' → logprob: -3.671571731567383
    7. ' product' → logprob: -3.796571731567383
    8. ' we' → logprob: -4.046571731567383
    9. ' buy' → logprob: -4.546571731567383
    10. ' quantity' → logprob: -4.546571731567383

Token 571: ' stock' (ID: 6546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6293108463287354
    2. '<|end|>' → logprob: -1.5043108463287354
    3. ' )' → logprob: -2.1293108463287354
    4. ' amounts' → logprob: -3.7543108463287354
    5. ' stock' → logprob: -4.254310607910156
    6. ' space' → logprob: -4.379310607910156
    7. ' quantity' → logprob: -4.379310607910156
    8. ' demand' → logprob: -5.004310607910156
    9. ' product' → logprob: -5.379310607910156
    10. ' spaces' → logprob: -5.504310607910156

Token 572: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01165681891143322
    2. ' )' → logprob: -4.761656761169434
    3. '),' → logprob: -6.511656761169434
    4. ').' → logprob: -7.261656761169434
    5. ',' → logprob: -8.261656761169434
    6. ' is' → logprob: -8.511656761169434
    7. ' at' → logprob: -9.386656761169434
    8. 's' → logprob: -10.386656761169434
    9. ' of' → logprob: -10.386656761169434
    10. ' can' → logprob: -10.511656761169434

Token 573: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020725814625620842
    2. '
' → logprob: -5.270725727081299
    3. '   ' → logprob: -5.270725727081299
    4. 'self' → logprob: -6.020725727081299
    5. '        
' → logprob: -6.145725727081299
    6. ',' → logprob: -7.145725727081299
    7. ')' → logprob: -7.520725727081299
    8. 'def' → logprob: -7.645725727081299
    9. '#' → logprob: -7.770725727081299
    10. '        ' → logprob: -7.770725727081299

Token 574: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10894060134887695
    2. '
' → logprob: -2.733940601348877
    3. '<|end|>' → logprob: -3.858940601348877
    4. '        
' → logprob: -4.733940601348877
    5. '   ' → logprob: -5.733940601348877
    6. 'def' → logprob: -6.608940601348877
    7. 'self' → logprob: -7.108940601348877
    8. ' ' → logprob: -7.608940601348877
    9. ' 
' → logprob: -7.733940601348877
    10. '<|end|>' → logprob: -7.983940601348877

Token 575: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.295225590467453
    2. 'self' → logprob: -1.5452256202697754
    3. ' self' → logprob: -3.7952256202697754
    4. 'def' → logprob: -4.295225620269775
    5. '
' → logprob: -5.795225620269775
    6. '   ' → logprob: -6.545225620269775
    7. '#' → logprob: -7.420225620269775
    8. '        
' → logprob: -7.670225620269775
    9. 'from' → logprob: -8.545225143432617
    10. ' ' → logprob: -9.045225143432617

Token 576: ' then' (ID: 1815)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.17209622263908386
    2. ' def' → logprob: -2.9220962524414062
    3. 'continue' → logprob: -4.047096252441406
    4. ' ' → logprob: -4.297096252441406
    5. ' will' → logprob: -4.422096252441406
    6. '_' → logprob: -4.547096252441406
    7. 'def' → logprob: -4.922096252441406
    8. ' want' → logprob: -5.172096252441406
    9. '#' → logprob: -5.172096252441406
    10. ' #' → logprob: -5.547096252441406

Token 577: ' consider' (ID: 3331)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.4283801317214966
    2. 'continue' → logprob: -2.303380012512207
    3. ' generate' → logprob: -2.303380012512207
    4. ' continue' → logprob: -2.553380012512207
    5. ' pre' → logprob: -3.303380012512207
    6. 'pre' → logprob: -5.178380012512207
    7. 'def' → logprob: -5.928380012512207
    8. 'consider' → logprob: -5.928380012512207
    9. 'store' → logprob: -6.053380012512207
    10. 'prepare' → logprob: -6.303380012512207

Token 578: ' trips' (ID: 27647)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.29446670413017273
    2. 'com' → logprob: -2.544466733932495
    3. 'for' → logprob: -3.294466733932495
    4. 'self' → logprob: -3.794466733932495
    5. 'possible' → logprob: -3.794466733932495
    6. ' all' → logprob: -3.919466733932495
    7. '   ' → logprob: -4.294466495513916
    8. 'the' → logprob: -4.419466495513916
    9. 'each' → logprob: -5.044466495513916
    10. ' combinations' → logprob: -5.544466495513916

Token 579: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46875065565109253
    2. ' to' → logprob: -2.4687507152557373
    3. '_' → logprob: -3.0937507152557373
    4. ',' → logprob: -3.2187507152557373
    5. 's' → logprob: -3.2187507152557373
    6. ':' → logprob: -3.7187507152557373
    7. '_to' → logprob: -3.8437507152557373
    8. '       ' → logprob: -3.9687507152557373
    9. '.' → logprob: -4.093750476837158
    10. '=' → logprob: -4.343750476837158

Token 580: ' market' (ID: 2910)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5929164886474609
    2. 'for' → logprob: -1.842916488647461
    3. '       ' → logprob: -1.967916488647461
    4. ' self' → logprob: -2.092916488647461
    5. 'self' → logprob: -4.092916488647461
    6. '
' → logprob: -6.717916488647461
    7. 'from' → logprob: -6.842916488647461
    8. ' def' → logprob: -6.967916488647461
    9. '        ' → logprob: -6.967916488647461
    10. ' 
' → logprob: -7.217916488647461

Token 581: '->' (ID: 609)
  Prédit: ' ->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.11322188377380371
    2. '->' → logprob: -2.4882218837738037
    3. ' to' → logprob: -3.8632218837738037
    4. 'to' → logprob: -6.613222122192383
    5. '→' → logprob: -7.738222122192383
    6. ' -->' → logprob: -7.863222122192383
    7. ' →' → logprob: -7.988222122192383
    8. ' =>' → logprob: -9.113222122192383
    9. ' ' → logprob: -9.613222122192383
    10. ' -' → logprob: -9.738222122192383

Token 582: 'city' (ID: 17500)
  Prédit: 'city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.0024773201439529657
    2. ' city' → logprob: -6.002477169036865
    3. 'City' → logprob: -13.502477645874023
    4. 'cities' → logprob: -16.002477645874023
    5. 'c' → logprob: -16.627477645874023
    6. '_city' → logprob: -16.877477645874023
    7. '(city' → logprob: -17.127477645874023
    8. 'ci' → logprob: -18.002477645874023
    9. '   ' → logprob: -18.127477645874023
    10. '-city' → logprob: -18.627477645874023

Token 583: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.02254384197294712
    2. ' ->' → logprob: -3.8975439071655273
    3. '-' → logprob: -6.772543907165527
    4. ',' → logprob: -9.147543907165527
    5. '->[' → logprob: -9.147543907165527
    6. ')->' → logprob: -9.272543907165527
    7. '->_' → logprob: -9.772543907165527
    8. '→' → logprob: -10.022543907165527
    9. '}->' → logprob: -10.210043907165527
    10. ' ' → logprob: -10.272543907165527

Token 584: 'market' (ID: 27236)
  Prédit: 'market'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'market' → logprob: -9.901345038088039e-05
    2. ' market' → logprob: -9.250099182128906
    3. 'markt' → logprob: -13.500099182128906
    4. 'mark' → logprob: -14.375099182128906
    5. '_market' → logprob: -15.125099182128906
    6. 'markets' → logprob: -15.375099182128906
    7. 'marker' → logprob: -16.375099182128906
    8. 'm' → logprob: -16.625099182128906
    9. 'city' → logprob: -17.125099182128906
    10. '.market' → logprob: -17.500099182128906

Token 585: ' with' (ID: 483)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1457178294658661
    2. '       ' → logprob: -2.5207178592681885
    3. '   ' → logprob: -3.8957178592681885
    4. 'def' → logprob: -3.8957178592681885
    5. '        
' → logprob: -5.020717620849609
    6. '    
' → logprob: -5.770717620849609
    7. '

' → logprob: -6.895717620849609
    8. '
    
' → logprob: -7.020717620849609
    9. '  
' → logprob: -7.145717620849609
    10. ')' → logprob: -8.14571762084961

Token 586: ' profitable' (ID: 42749)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.9297800660133362
    2. 'possible' → logprob: -1.8047800064086914
    3. 'return' → logprob: -2.8047800064086914
    4. 'one' → logprob: -3.0547800064086914
    5. 'product' → logprob: -3.1797800064086914
    6. 'that' → logprob: -3.4297800064086914
    7. 'the' → logprob: -3.4297800064086914
    8. 'trip' → logprob: -3.5547800064086914
    9. 'some' → logprob: -3.6797800064086914
    10. 'a' → logprob: -3.8047800064086914

Token 587: ' load' (ID: 4700)
  Prédit: ' product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.47463861107826233
    2. 'product' → logprob: -1.22463858127594
    3. 'products' → logprob: -3.4746387004852295
    4. ' products' → logprob: -3.8496387004852295
    5. ' load' → logprob: -4.72463846206665
    6. 'load' → logprob: -5.34963846206665
    7. ' trip' → logprob: -6.22463846206665
    8. '_product' → logprob: -6.34963846206665
    9. 'loads' → logprob: -6.59963846206665
    10. ' loads' → logprob: -6.72463846206665

Token 588: '.

' (ID: 364)
  Prédit: 'outs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'outs' → logprob: -0.3695697784423828
    2. '   ' → logprob: -1.6195697784423828
    3. '       ' → logprob: -2.369569778442383
    4. 's' → logprob: -5.244569778442383
    5. '           ' → logprob: -5.619569778442383
    6. '-outs' → logprob: -5.994569778442383
    7. '_' → logprob: -6.369569778442383
    8. 'out' → logprob: -6.994569778442383
    9. '_out' → logprob: -7.869569778442383
    10. 'ings' → logprob: -8.119569778442383

Token 589: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8057829737663269
    2. '
' → logprob: -1.4307830333709717
    3. '   ' → logprob: -1.9307830333709717
    4. 'def' → logprob: -1.9307830333709717
    5. '        
' → logprob: -4.305782794952393
    6. '    
' → logprob: -5.680782794952393
    7. 'self' → logprob: -6.055782794952393
    8. ' def' → logprob: -6.680782794952393
    9. ' 
' → logprob: -7.555782794952393
    10. ' self' → logprob: -7.680782794952393

Token 590: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.706113338470459
    2. 'self' → logprob: -0.706113338470459
    3. ' self' → logprob: -5.331113338470459
    4. '#' (adapté à ' #') → logprob: -5.581113338470459
    5. 'def' → logprob: -5.831113338470459
    6. '
' → logprob: -7.456113338470459
    7. '   ' → logprob: -7.581113338470459
    8. '        
' → logprob: -9.081113815307617
    9. ' #' → logprob: -9.581113815307617
    10. 'from' → logprob: -10.956113815307617

Token 591: ' For' (ID: 2214)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3864808678627014
    2. 'def' → logprob: -1.2614808082580566
    3. '#' → logprob: -3.3864808082580566
    4. '       ' → logprob: -6.136480808258057
    5. ' self' → logprob: -7.386480808258057
    6. '   ' → logprob: -8.011481285095215
    7. '
' → logprob: -8.636481285095215
    8. '        
' → logprob: -10.011481285095215
    9. ' def' → logprob: -10.261481285095215
    10. 'from' → logprob: -10.511481285095215

Token 592: ' sophistication' (ID: 112044)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7822973132133484
    2. 'city' → logprob: -1.6572973728179932
    3. 'trip' → logprob: -2.407297372817993
    4. '_trip' → logprob: -2.907297372817993
    5. ' city' → logprob: -3.157297372817993
    6. ' self' → logprob: -3.657297372817993
    7. 'each' → logprob: -3.657297372817993
    8. '_city' → logprob: -3.907297372817993
    9. 'i' → logprob: -4.157297134399414
    10. ' trip' → logprob: -4.407297134399414

Token 593: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35581761598587036
    2. ' ,' → logprob: -1.3558175563812256
    3. ' ' → logprob: -3.3558175563812256
    4. ' in' → logprob: -6.230817794799805
    5. '_' → logprob: -6.355817794799805
    6. ' we' → logprob: -7.480817794799805
    7. ' reasons' → logprob: -7.730817794799805
    8. ' the' → logprob: -8.105817794799805
    9. '_,' → logprob: -8.355817794799805
    10. ' _' → logprob: -8.355817794799805

Token 594: ' let's' (ID: 35717)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.3087421655654907
    2. 'def' → logprob: -1.3087421655654907
    3. '#' → logprob: -1.6837421655654907
    4. 'pass' → logprob: -1.6837421655654907
    5. 'we' → logprob: -3.933742046356201
    6. '
' → logprob: -4.433742046356201
    7. '       ' → logprob: -4.558742046356201
    8. ' pass' → logprob: -4.558742046356201
    9. 'import' → logprob: -5.308742046356201
    10. ' self' → logprob: -5.308742046356201

Token 595: ' encaps' (ID: 79272)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.0592007637023926
    2. 'pass' → logprob: -2.3092007637023926
    3. 'define' → logprob: -2.5592007637023926
    4. 'implement' → logprob: -2.6842007637023926
    5. 'pre' → logprob: -2.8092007637023926
    6. 'store' → logprob: -3.0592007637023926
    7. 'compute' → logprob: -3.3092007637023926
    8. '   ' → logprob: -3.4342007637023926
    9. '...' → logprob: -3.5592007637023926
    10. 'add' → logprob: -3.6842007637023926

Token 596: 'ulate' (ID: 10111)
  Prédit: 'ulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulate' → logprob: -2.8921695047756657e-05
    2. 'u' → logprob: -11.875028610229492
    3. 'late' → logprob: -11.875028610229492
    4. 'ul' → logprob: -12.500028610229492
    5. 'uate' → logprob: -12.625028610229492
    6. '   ' → logprob: -13.125028610229492
    7. 'ule' → logprob: -13.250028610229492
    8. 'ula' → logprob: -14.250028610229492
    9. '       ' → logprob: -14.375028610229492
    10. '
' → logprob: -14.375028610229492

Token 597: ' possible' (ID: 4149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2201709747314453
    2. ' the' → logprob: -1.5951709747314453
    3. 'the' → logprob: -1.7201709747314453
    4. 'self' → logprob: -2.7201709747314453
    5. ' trips' → logprob: -2.8451709747314453
    6. 'class' → logprob: -3.0951709747314453
    7. 'this' → logprob: -3.3451709747314453
    8. 'trip' → logprob: -3.3451709747314453
    9. ' this' → logprob: -4.095170974731445
    10. ' def' → logprob: -4.220170974731445

Token 598: ' purchases' (ID: 27529)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.2221958488225937
    2. 'loads' → logprob: -2.847195863723755
    3. '_tr' → logprob: -2.972195863723755
    4. 'load' → logprob: -3.472195863723755
    5. '_load' → logprob: -3.597195863723755
    6. ' load' → logprob: -4.472195625305176
    7. ' loads' → logprob: -4.722195625305176
    8. ' trips' → logprob: -4.972195625305176
    9. '_trip' → logprob: -5.972195625305176
    10. 'trip' → logprob: -6.972195625305176

Token 599: ' per' (ID: 777)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34485822916030884
    2. '       ' → logprob: -2.094858169555664
    3. 'class' → logprob: -2.844858169555664
    4. 'self' → logprob: -3.219858169555664
    5. ',' → logprob: -4.219858169555664
    6. ' in' → logprob: -4.469858169555664
    7. ':' → logprob: -5.219858169555664
    8. 'def' → logprob: -5.219858169555664
    9. 'in' → logprob: -5.594858169555664
    10. '.' → logprob: -5.719858169555664

Token 600: ' city' (ID: 5030)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.07522495090961456
    2. ' city' → logprob: -2.7002248764038086
    3. 'class' → logprob: -5.950224876403809
    4. 'trip' → logprob: -6.450224876403809
    5. 'product' → logprob: -7.825224876403809
    6. '_city' → logprob: -7.950224876403809
    7. ' trip' → logprob: -9.325224876403809
    8. 'City' → logprob: -9.825224876403809
    9. '
' → logprob: -10.075224876403809
    10. ' class' → logprob: -10.325224876403809

Token 601: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07745826244354248
    2. '   ' → logprob: -3.327458381652832
    3. 'self' → logprob: -3.952458381652832
    4. ',' → logprob: -4.577458381652832
    5. ':' → logprob: -5.827458381652832
    6. ' self' → logprob: -5.827458381652832
    7. '.' → logprob: -7.202458381652832
    8. '
' → logprob: -7.202458381652832
    9. 'def' → logprob: -7.827458381652832
    10. '        
' → logprob: -7.827458381652832

Token 602: ' with' (ID: 483)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07710262387990952
    2. '       ' → logprob: -3.3271026611328125
    3. ' self' → logprob: -3.7021026611328125
    4. '#' → logprob: -5.0771026611328125
    5. 'and' → logprob: -6.4521026611328125
    6. 'class' → logprob: -6.7021026611328125
    7. ' and' → logprob: -6.9521026611328125
    8. '
' → logprob: -7.5771026611328125
    9. '           ' → logprob: -7.7021026611328125
    10. '   ' → logprob: -7.8271026611328125

Token 603: ' all' (ID: 722)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2383352518081665
    2. 'their' → logprob: -1.2383352518081665
    3. 'profit' → logprob: -1.7383352518081665
    4. 'product' → logprob: -2.613335132598877
    5. 'trip' → logprob: -2.738335132598877
    6. 'profits' → logprob: -3.738335132598877
    7. 'possible' → logprob: -4.488335132598877
    8. 'the' → logprob: -4.488335132598877
    9. 'all' → logprob: -5.113335132598877
    10. 'weight' → logprob: -5.113335132598877

Token 604: ' combinations' (ID: 43835)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.270434856414795
    2. ' possible' → logprob: -1.395434856414795
    3. ' combinations' → logprob: -1.520434856414795
    4. 'com' → logprob: -1.770434856414795
    5. 'trip' → logprob: -4.395434856414795
    6. ' trip' → logprob: -4.520434856414795
    7. ' feasible' → logprob: -4.895434856414795
    8. 'products' → logprob: -5.020434856414795
    9. 'product' → logprob: -5.270434856414795
    10. ' valid' → logprob: -5.395434856414795

Token 605: '.

' (ID: 364)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.8723390102386475
    2. ':' → logprob: -1.3723390102386475
    3. '       ' → logprob: -2.6223390102386475
    4. '.' → logprob: -2.6223390102386475
    5. ',' → logprob: -3.1223390102386475
    6. 'from' → logprob: -3.6223390102386475
    7. 'of' → logprob: -3.9973390102386475
    8. '   ' → logprob: -3.9973390102386475
    9. ' from' → logprob: -4.122339248657227
    10. '
' → logprob: -4.747339248657227

Token 606: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2606618106365204
    2. '
' → logprob: -1.7606618404388428
    3. '<|end|>' → logprob: -3.0106618404388428
    4. '        
' → logprob: -5.135661602020264
    5. '   ' → logprob: -7.010661602020264
    6. '<|end|>' → logprob: -7.635661602020264
    7. 'def' → logprob: -7.885661602020264
    8. 'self' → logprob: -9.260662078857422
    9. ' 
' → logprob: -9.385662078857422
    10. ' ' → logprob: -9.510662078857422

Token 607: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20035041868686676
    2. 'self' → logprob: -1.8253504037857056
    3. 'def' → logprob: -4.325350284576416
    4. ' self' → logprob: -5.950350284576416
    5. '   ' → logprob: -6.075350284576416
    6. '
' → logprob: -7.200350284576416
    7. 'from' → logprob: -7.325350284576416
    8. '#' (adapté à ' #') → logprob: -7.950350284576416
    9. '        
' → logprob: -7.950350284576416
    10. 'import' → logprob: -9.825350761413574

Token 608: ' We'll' (ID: 46830)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07476677745580673
    2. '       ' → logprob: -3.1997668743133545
    3. 'from' → logprob: -4.324766635894775
    4. '#' → logprob: -4.449766635894775
    5. 'def' → logprob: -5.699766635894775
    6. ' self' → logprob: -6.074766635894775
    7. '   ' → logprob: -8.324767112731934
    8. 'import' → logprob: -8.324767112731934
    9. '
' → logprob: -9.074767112731934
    10. '        
' → logprob: -10.449767112731934

Token 609: ' build' (ID: 3024)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7553510069847107
    2. ' continue' → logprob: -1.2553510665893555
    3. 'def' → logprob: -2.3803510665893555
    4. ' def' → logprob: -3.5053510665893555
    5. 'generate' → logprob: -3.6303510665893555
    6. '   ' → logprob: -3.8803510665893555
    7. 'import' → logprob: -4.0053510665893555
    8. '_continue' → logprob: -4.0053510665893555
    9. '       ' → logprob: -5.2553510665893555
    10. 'compute' → logprob: -5.6303510665893555

Token 610: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.39205825328826904
    2. 'self' → logprob: -2.0170583724975586
    3. ' self' → logprob: -2.3920583724975586
    4. ' a' → logprob: -3.1420583724975586
    5. 'all' → logprob: -3.2670583724975586
    6. 'possible' → logprob: -5.142058372497559
    7. ' possible' → logprob: -5.517058372497559
    8. ' an' → logprob: -5.642058372497559
    9. ' the' → logprob: -6.767058372497559
    10. 'a' → logprob: -6.892058372497559

Token 611: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.32523396611213684
    2. '_possible' → logprob: -2.2002339363098145
    3. ' possible' → logprob: -2.3252339363098145
    4. '_trip' → logprob: -4.3252339363098145
    5. ' combinations' → logprob: -4.4502339363098145
    6. '_p' → logprob: -4.4502339363098145
    7. '_com' → logprob: -4.4502339363098145
    8. 'tr' → logprob: -5.7002339363098145
    9. 'com' → logprob: -5.7002339363098145
    10. '_tr' → logprob: -5.9502339363098145

Token 612: ' load' (ID: 4700)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.2208316326141357
    2. '_load' → logprob: -1.9708316326141357
    3. 'loads' → logprob: -2.4708316326141357
    4. 'load' → logprob: -2.5958316326141357
    5. 'p' → logprob: -2.5958316326141357
    6. 'trip' → logprob: -3.0958316326141357
    7. '_p' → logprob: -3.0958316326141357
    8. ' load' → logprob: -3.2208316326141357
    9. ' trips' → logprob: -3.4708316326141357
    10. ' loads' → logprob: -3.5958316326141357

Token 613: 'outs' (ID: 16513)
  Prédit: 'outs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outs' → logprob: -0.6623890399932861
    2. 's' → logprob: -0.7873890399932861
    3. '_' → logprob: -4.162388801574707
    4. '_out' → logprob: -4.662388801574707
    5. '   ' → logprob: -6.787388801574707
    6. '_s' → logprob: -7.287388801574707
    7. '-outs' → logprob: -7.287388801574707
    8. 'out' → logprob: -7.537388801574707
    9. '_ins' → logprob: -8.912388801574707
    10. '_options' → logprob: -9.162388801574707

Token 614: ' per' (ID: 777)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5313681364059448
    2. ' =' → logprob: -1.6563681364059448
    3. 'self' → logprob: -2.5313682556152344
    4. ':' → logprob: -3.2813682556152344
    5. '=' → logprob: -3.6563682556152344
    6. '   ' → logprob: -3.9063682556152344
    7. 's' → logprob: -4.406368255615234
    8. '_per' → logprob: -4.781368255615234
    9. '(self' → logprob: -4.906368255615234
    10. ' self' → logprob: -5.406368255615234

Token 615: ' city' (ID: 5030)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.20187248289585114
    2. ' city' → logprob: -1.70187246799469
    3. '_city' → logprob: -7.9518723487854
    4. 'class' → logprob: -9.576872825622559
    5. 'City' → logprob: -11.951872825622559
    6. 'c' → logprob: -12.576872825622559
    7. 'def' → logprob: -12.701872825622559
    8. '   ' → logprob: -12.701872825622559
    9. 'cities' → logprob: -12.826872825622559
    10. '```' → logprob: -12.826872825622559

Token 616: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07407451421022415
    2. ',' → logprob: -3.8240745067596436
    3. '
' → logprob: -4.324074745178223
    4. ':' → logprob: -4.324074745178223
    5. 'self' → logprob: -4.824074745178223
    6. '   ' → logprob: -6.074074745178223
    7. ' self' → logprob: -6.074074745178223
    8. ' for' → logprob: -6.199074745178223
    9. 'from' → logprob: -6.824074745178223
    10. ' with' → logprob: -6.824074745178223

Token 617: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020327558740973473
    2. ' =' → logprob: -4.895327568054199
    3. ',' → logprob: -5.395327568054199
    4. ':' → logprob: -6.145327568054199
    5. '=' → logprob: -6.395327568054199
    6. '   ' → logprob: -6.770327568054199
    7. 'self' → logprob: -6.895327568054199
    8. '        
' → logprob: -8.1453275680542
    9. '.' → logprob: -8.3953275680542
    10. ' for' → logprob: -8.6453275680542

Token 618: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39503252506256104
    2. 'self' (adapté à ' self') → logprob: -1.145032525062561
    3. ' self' → logprob: -5.3950324058532715
    4. '
' → logprob: -5.8950324058532715
    5. '        
' → logprob: -7.7700324058532715
    6. '   ' → logprob: -8.02003288269043
    7. 'def' → logprob: -10.02003288269043
    8. 'from' → logprob: -10.77003288269043
    9. ' ' → logprob: -12.39503288269043
    10. 'for' → logprob: -13.02003288269043

Token 619: '.city' (ID: 50562)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.6851439476013184
    2. '.pos' → logprob: -1.0601439476013184
    3. '.load' → logprob: -2.8101439476013184
    4. '.product' → logprob: -3.4351439476013184
    5. '.city' → logprob: -3.4351439476013184
    6. '.' → logprob: -4.685143947601318
    7. '.products' → logprob: -5.310143947601318
    8. '.p' → logprob: -6.185143947601318
    9. '_possible' → logprob: -6.435143947601318
    10. '_city' → logprob: -6.810143947601318

Token 620: '_load' (ID: 28159)
  Prédit: '_load'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_load' → logprob: -0.2622895836830139
    2. '_p' → logprob: -2.012289524078369
    3. '_to' → logprob: -3.387289524078369
    4. '_possible' → logprob: -3.762289524078369
    5. '_product' → logprob: -4.262289524078369
    6. '_purchase' → logprob: -4.637289524078369
    7. '_buy' → logprob: -5.262289524078369
    8. '_pos' → logprob: -5.512289524078369
    9. '_products' → logprob: -5.887289524078369
    10. '_' → logprob: -6.137289524078369

Token 621: 'outs' (ID: 16513)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.576388418674469
    2. 'outs' → logprob: -0.826388418674469
    3. '_out' → logprob: -8.201388359069824
    4. 'out' → logprob: -9.451388359069824
    5. '_s' → logprob: -9.826388359069824
    6. '   ' → logprob: -11.076388359069824
    7. '_outputs' → logprob: -11.826388359069824
    8. '_' → logprob: -12.576388359069824
    9. ' outs' → logprob: -12.701388359069824
    10. ' s' → logprob: -12.701388359069824

Token 622: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2521972954273224
    2. '=' → logprob: -1.502197265625
    3. ':' → logprob: -8.377197265625
    4. '=[]' → logprob: -10.377197265625
    5. ' :' → logprob: -13.627197265625
    6. '[' → logprob: -13.627197265625
    7. ' ' → logprob: -13.752197265625
    8. '   ' → logprob: -13.877197265625
    9. 's' → logprob: -14.252197265625
    10. ']' → logprob: -15.002197265625

Token 623: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.09865997731685638
    2. ' []' → logprob: -3.0986599922180176
    3. '{}' → logprob: -3.3486599922180176
    4. '[' → logprob: -4.473659992218018
    5. ' {}' → logprob: -6.973659992218018
    6. ' [' → logprob: -7.473659992218018
    7. ' [[]' → logprob: -7.473659992218018
    8. ' [{}' → logprob: -8.59865951538086
    9. '[]
' → logprob: -10.72365951538086
    10. '{' → logprob: -11.47365951538086

Token 624: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6744288802146912
    2. 'for' → logprob: -1.299428939819336
    3. ' for' → logprob: -1.799428939819336
    4. '
' → logprob: -3.799428939819336
    5. '        
' → logprob: -5.049428939819336
    6. '[' → logprob: -5.174428939819336
    7. '   ' → logprob: -5.299428939819336
    8. '=' → logprob: -6.299428939819336
    9. '[
' → logprob: -6.674428939819336
    10. ' =' → logprob: -6.799428939819336

Token 625: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.15328863263130188
    2. ' for' → logprob: -2.5282886028289795
    3. '       ' → logprob: -2.7782886028289795
    4. '   ' → logprob: -9.528288841247559
    5. '        
' → logprob: -10.528288841247559
    6. '[]' → logprob: -10.778288841247559
    7. '
' → logprob: -11.653288841247559
    8. ')' → logprob: -12.028288841247559
    9. '           ' → logprob: -12.028288841247559
    10. '[]
' → logprob: -12.528288841247559

Token 626: ' city' (ID: 5030)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.016268493607640266
    2. ' city' → logprob: -4.141268730163574
    3. 'i' → logprob: -9.141268730163574
    4. 'c' → logprob: -9.891268730163574
    5. 'ci' → logprob: -10.266268730163574
    6. 'idx' → logprob: -11.266268730163574
    7. ' i' → logprob: -11.391268730163574
    8. '   ' → logprob: -12.891268730163574
    9. ' ci' → logprob: -13.141268730163574
    10. ' ' → logprob: -13.141268730163574

Token 627: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20225019752979279
    2. 'in' → logprob: -1.7022502422332764
    3. ',' → logprob: -8.327250480651855
    4. '_' → logprob: -8.702250480651855
    5. ' ' → logprob: -9.077250480651855
    6. '_in' → logprob: -9.702250480651855
    7. ' i' → logprob: -9.952250480651855
    8. '   ' → logprob: -10.077250480651855
    9. '_idx' → logprob: -10.077250480651855
    10. '  ' → logprob: -10.827250480651855

Token 628: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007608635816723108
    2. ' self' → logprob: -4.882608413696289
    3. '   ' → logprob: -13.882608413696289
    4. '	self' → logprob: -14.882608413696289
    5. '(self' → logprob: -14.882608413696289
    6. '[self' → logprob: -14.882608413696289
    7. ' ' → logprob: -15.882608413696289
    8. '       ' → logprob: -16.25760841369629
    9. '[' → logprob: -16.38260841369629
    10. '    ' → logprob: -16.88260841369629

Token 629: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.0004377022560220212
    2. '.' → logprob: -8.25043773651123
    3. 'cities' → logprob: -9.62543773651123
    4. '.city' → logprob: -9.75043773651123
    5. '.
' → logprob: -11.12543773651123
    6. ' .' → logprob: -11.25043773651123
    7. '._' → logprob: -12.12543773651123
    8. '..' → logprob: -12.62543773651123
    9. ').' → logprob: -12.87543773651123
    10. '   ' → logprob: -13.00043773651123

Token 630: 'ities' (ID: 1629)
  Prédit: 'ities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ities' → logprob: -0.0008497710223309696
    2. 'ity' → logprob: -7.125849723815918
    3. 'cities' → logprob: -10.625849723815918
    4. 'itys' → logprob: -11.500849723815918
    5. 'it' → logprob: -12.625849723815918
    6. 'ties' → logprob: -12.750849723815918
    7. '   ' → logprob: -13.375849723815918
    8. 'ites' → logprob: -14.000849723815918
    9. 'l' → logprob: -14.375849723815918
    10. 'i' → logprob: -15.000849723815918

Token 631: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00024548539659008384
    2. ':
' → logprob: -9.250245094299316
    3. ',' → logprob: -9.750245094299316
    4. '       ' → logprob: -10.125245094299316
    5. '           ' → logprob: -11.000245094299316
    6. '):' → logprob: -11.125245094299316
    7. ' :' → logprob: -12.000245094299316
    8. '[' → logprob: -12.500245094299316
    9. '   ' → logprob: -12.625245094299316
    10. '=' → logprob: -13.000245094299316

Token 632: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013344056205824018
    2. ':' → logprob: -7.376334190368652
    3. '       ' → logprob: -7.501334190368652
    4. '   ' → logprob: -9.001334190368652
    5. ',' → logprob: -11.626334190368652
    6. '            
' → logprob: -12.251334190368652
    7. ' for' → logprob: -12.876334190368652
    8. '               ' → logprob: -13.001334190368652
    9. '    ' → logprob: -13.126334190368652
    10. '	   ' → logprob: -13.376334190368652

Token 633: ' load' (ID: 4700)
  Prédit: 'load'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'load' (adapté à ' load') → logprob: -0.06145326793193817
    2. 'city' → logprob: -3.186453342437744
    3. 'loads' → logprob: -4.811453342437744
    4. '           ' → logprob: -5.561453342437744
    5. 'possible' → logprob: -5.686453342437744
    6. ' load' → logprob: -7.186453342437744
    7. '       ' → logprob: -7.186453342437744
    8. '   ' → logprob: -7.686453342437744
    9. 'valid' → logprob: -8.436452865600586
    10. 'all' → logprob: -9.311452865600586

Token 634: 'outs' (ID: 16513)
  Prédit: 'outs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outs' → logprob: -0.0008875182829797268
    2. 'out' → logprob: -7.125887393951416
    3. 's' → logprob: -10.000887870788574
    4. '=' → logprob: -11.000887870788574
    5. ' =' → logprob: -11.875887870788574
    6. '_out' → logprob: -12.250887870788574
    7. '   ' → logprob: -12.500887870788574
    8. '_' → logprob: -13.125887870788574
    9. '=[]' → logprob: -14.125887870788574
    10. '=[]
' → logprob: -14.500887870788574

Token 635: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2818498909473419
    2. '=' → logprob: -1.4068498611450195
    3. '=[]' → logprob: -7.6568498611450195
    4. '.append' → logprob: -9.03184986114502
    5. '_' → logprob: -9.78184986114502
    6. '=[]
' → logprob: -11.15684986114502
    7. ':' → logprob: -11.65684986114502
    8. '_city' → logprob: -11.90684986114502
    9. '.' → logprob: -12.53184986114502
    10. 's' → logprob: -12.65684986114502

Token 636: ' self' (ID: 1051)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.003188286442309618
    2. '[]
' → logprob: -5.753188133239746
    3. '[' → logprob: -12.003188133239746
    4. ' []' → logprob: -12.503188133239746
    5. '[]

' → logprob: -14.253188133239746
    6. '[]}' → logprob: -16.503189086914062
    7. '[]"' → logprob: -17.003189086914062
    8. '[
' → logprob: -18.003189086914062
    9. ' []
' → logprob: -18.128189086914062
    10. '[])' → logprob: -18.128189086914062

Token 637: '.generate' (ID: 33917)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03443587198853493
    2. '[]
' → logprob: -4.034435749053955
    3. '[' → logprob: -4.409435749053955
    4. '=[]' → logprob: -5.909435749053955
    5. ' []' → logprob: -7.909435749053955
    6. '.append' → logprob: -8.659436225891113
    7. '.' → logprob: -8.659436225891113
    8. '=[]
' → logprob: -8.784436225891113
    9. '[:]' → logprob: -9.909436225891113
    10. '=' → logprob: -10.159436225891113

Token 638: '_load' (ID: 28159)
  Prédit: '_load'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_load' → logprob: -0.017418382689356804
    2. '_city' → logprob: -4.392418384552002
    3. '_' → logprob: -5.392418384552002
    4. '(' → logprob: -9.142417907714844
    5. '_p' → logprob: -10.017417907714844
    6. '(city' → logprob: -10.267417907714844
    7. '_possible' → logprob: -10.517417907714844
    8. 'load' → logprob: -10.642417907714844
    9. '_product' → logprob: -11.017417907714844
    10. '('_' → logprob: -11.017417907714844

Token 639: 'outs' (ID: 16513)
  Prédit: 'outs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outs' → logprob: -1.735893965815194e-05
    2. 'out' → logprob: -11.000017166137695
    3. '_out' → logprob: -15.000017166137695
    4. 'ou' → logprob: -15.625017166137695
    5. 'outes' → logprob: -16.750017166137695
    6. '_' → logprob: -16.875017166137695
    7. 'puts' → logprob: -17.625017166137695
    8. 'uts' → logprob: -19.000017166137695
    9. 'outh' → logprob: -19.250017166137695
    10. '   ' → logprob: -19.250017166137695

Token 640: '(city' (ID: 84604)
  Prédit: '(city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(city' → logprob: -0.03806042671203613
    2. '(' → logprob: -3.288060426712036
    3. ' (' → logprob: -11.538060188293457
    4. '(
' → logprob: -11.913060188293457
    5. '(c' → logprob: -13.913060188293457
    6. '(ci' → logprob: -14.538060188293457
    7. 'city' → logprob: -15.538060188293457
    8. '   ' → logprob: -15.913060188293457
    9. '(country' → logprob: -15.913060188293457
    10. '(

' → logprob: -16.288061141967773

Token 641: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.704065213445574e-05
    2. '(city' → logprob: -10.500046730041504
    3. ',' → logprob: -11.875046730041504
    4. ' )' → logprob: -12.750046730041504
    5. '):' → logprob: -12.875046730041504
    6. ')`' → logprob: -13.500046730041504
    7. '(' → logprob: -13.625046730041504
    8. ')
' → logprob: -13.625046730041504
    9. '           ' → logprob: -14.250046730041504
    10. '   ' → logprob: -14.375046730041504

Token 642: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6382880806922913
    2. '       ' → logprob: -1.2632880210876465
    3. '<|end|>' → logprob: -3.2632880210876465
    4. '           ' → logprob: -3.3882880210876465
    5. ':' → logprob: -3.5132880210876465
    6. '
' → logprob: -4.3882880210876465
    7. ' ' → logprob: -4.3882880210876465
    8. ')' → logprob: -4.6382880210876465
    9. '    
' → logprob: -4.7632880210876465
    10. '    ' → logprob: -5.0132880210876465

Token 643: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.11339516937732697
    2. '           ' → logprob: -2.4883952140808105
    3. '       ' → logprob: -3.9883952140808105
    4. ' self' → logprob: -5.2383952140808105
    5. '   ' → logprob: -8.363394737243652
    6. ' ' → logprob: -9.863394737243652
    7. '	self' → logprob: -10.988394737243652
    8. '(self' → logprob: -12.863394737243652
    9. '  ' → logprob: -12.988394737243652
    10. '<|end|>' → logprob: -13.613394737243652

Token 644: '.city' (ID: 50562)
  Prédit: '.city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.city' → logprob: -0.009871418587863445
    2. '.' → logprob: -4.634871482849121
    3. ' .' → logprob: -9.384871482849121
    4. 'city' → logprob: -10.759871482849121
    5. '.append' → logprob: -12.634871482849121
    6. '.City' → logprob: -13.259871482849121
    7. ' city' → logprob: -14.134871482849121
    8. '.user' → logprob: -14.134871482849121
    9. '.c' → logprob: -14.509871482849121
    10. '._' → logprob: -14.759871482849121

Token 645: '_load' (ID: 28159)
  Prédit: '_load'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_load' → logprob: -0.0007673407671973109
    2. '._' → logprob: -7.750767230987549
    3. '.load' → logprob: -8.250767707824707
    4. '.' → logprob: -10.500767707824707
    5. 'load' → logprob: -10.875767707824707
    6. 's' → logprob: -12.500767707824707
    7. '_LOAD' → logprob: -12.500767707824707
    8. '   ' → logprob: -12.875767707824707
    9. 'Load' → logprob: -12.875767707824707
    10. '_.' → logprob: -13.000767707824707

Token 646: 'outs' (ID: 16513)
  Prédit: 'outs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outs' → logprob: -1.0325924449716695e-05
    2. 'out' → logprob: -12.62501049041748
    3. 'uts' → logprob: -13.37501049041748
    4. 'puts' → logprob: -13.62501049041748
    5. 'outputs' → logprob: -14.00001049041748
    6. '   ' → logprob: -14.12501049041748
    7. 's' → logprob: -14.25001049041748
    8. '_out' → logprob: -14.87501049041748
    9. 'loads' → logprob: -15.12501049041748
    10. 'ots' → logprob: -15.37501049041748

Token 647: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.02978196181356907
    2. '.' → logprob: -3.5297820568084717
    3. 'append' → logprob: -11.15478229522705
    4. '.app' → logprob: -11.52978229522705
    5. '.ap' → logprob: -12.40478229522705
    6. '.extend' → logprob: -13.52978229522705
    7. ' .' → logprob: -14.27978229522705
    8. '=' → logprob: -14.52978229522705
    9. '_append' → logprob: -15.65478229522705
    10. '.Append' → logprob: -16.029781341552734

Token 648: '(load' (ID: 83240)
  Prédit: '(load'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(load' → logprob: -0.00026622318546287715
    2. '(' → logprob: -8.250266075134277
    3. 'load' → logprob: -12.375266075134277
    4. '(
' → logprob: -14.750266075134277
    5. ' (' → logprob: -16.375267028808594
    6. '(lo' → logprob: -16.750267028808594
    7. ' load' → logprob: -17.125267028808594
    8. '(list' → logprob: -18.375267028808594
    9. '(

' → logprob: -18.875267028808594
    10. '(log' → logprob: -19.375267028808594

Token 649: 'outs' (ID: 16513)
  Prédit: 'outs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outs' → logprob: -2.093505099765025e-05
    2. 'uts' → logprob: -11.625020980834961
    3. 'ots' → logprob: -11.625020980834961
    4. 'out' → logprob: -13.500020980834961
    5. 'puts' → logprob: -14.250020980834961
    6. '[' → logprob: -15.875020980834961
    7. 'o' → logprob: -15.875020980834961
    8. ')' → logprob: -16.00002098083496
    9. 'orts' → logprob: -16.00002098083496
    10. 'opts' → logprob: -16.12502098083496

Token 650: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03355336934328079
    2. '<|end|>' → logprob: -3.5335533618927
    3. '
' → logprob: -6.408553600311279
    4. '       ' → logprob: -7.283553600311279
    5. '<|end|>' → logprob: -7.408553600311279
    6. '   ' → logprob: -7.533553600311279
    7. ']' → logprob: -10.033553123474121
    8. '           ' → logprob: -10.033553123474121
    9. ' )' → logprob: -10.533553123474121
    10. ' ' → logprob: -10.533553123474121

Token 651: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9436659216880798
    2. 'def' → logprob: -1.1936659812927246
    3. '
' → logprob: -1.3186659812927246
    4. '    
' → logprob: -3.4436659812927246
    5. ' def' → logprob: -5.568665981292725
    6. '```' → logprob: -6.693665981292725
    7. ' 
' → logprob: -7.068665981292725
    8. '        
' → logprob: -7.068665981292725
    9. '  
' → logprob: -8.068665504455566
    10. ' ' → logprob: -8.818665504455566

Token 652: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.20170354843139648
    2. '   ' → logprob: -2.3267035484313965
    3. '
' → logprob: -2.7017035484313965
    4. ' def' → logprob: -4.3267035484313965
    5. '    
' → logprob: -5.4517035484313965
    6. '        
' → logprob: -8.951704025268555
    7. ' 
' → logprob: -9.201704025268555
    8. ' ' → logprob: -9.826704025268555
    9. '  
' → logprob: -10.451704025268555
    10. '	def' → logprob: -10.576704025268555

Token 653: ' generate' (ID: 10419)
  Prédit: ' generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' generate' → logprob: -0.021513083949685097
    2. ' def' → logprob: -4.646512985229492
    3. 'generate' → logprob: -5.646512985229492
    4. ' _' → logprob: -5.896512985229492
    5. ' ' → logprob: -5.896512985229492
    6. ' space' → logprob: -6.271512985229492
    7. '_generate' → logprob: -7.646512985229492
    8. '_' → logprob: -8.521512985229492
    9. ' ' → logprob: -10.521512985229492
    10. '_space' → logprob: -10.771512985229492

Token 654: '_load' (ID: 28159)
  Prédit: '_load'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_load' → logprob: -9.253090865968261e-06
    2. '_' → logprob: -11.625009536743164
    3. 'load' → logprob: -16.000009536743164
    4. '_lo' → logprob: -16.125009536743164
    5. ' _' → logprob: -18.250009536743164
    6. '_
' → logprob: -19.750009536743164
    7. '_LOAD' → logprob: -19.875009536743164
    8. '_Load' → logprob: -19.875009536743164
    9. ' load' → logprob: -20.125009536743164
    10. '_l' → logprob: -20.375009536743164

Token 655: 'outs' (ID: 16513)
  Prédit: 'outs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outs' → logprob: -0.07198472321033478
    2. 'out' → logprob: -2.6969847679138184
    3. '_out' → logprob: -6.946984767913818
    4. '_load' → logprob: -7.196984767913818
    5. 'oad' → logprob: -8.32198429107666
    6. 'load' → logprob: -10.82198429107666
    7. 'outputs' → logprob: -10.94698429107666
    8. 'loads' → logprob: -10.94698429107666
    9. '_' → logprob: -11.32198429107666
    10. '   ' → logprob: -12.44698429107666

Token 656: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009236076730303466
    2. '(' → logprob: -7.0009236335754395
    3. ' (' → logprob: -11.375923156738281
    4. '(
' → logprob: -14.875923156738281
    5. '(s' → logprob: -15.250923156738281
    6. '(sel' → logprob: -16.87592315673828
    7. ' ' → logprob: -17.62592315673828
    8. 'self' → logprob: -17.87592315673828
    9. '   ' → logprob: -18.00092315673828
    10. '(Self' → logprob: -18.62592315673828

Token 657: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007977449335157871
    2. 'self' → logprob: -5.757977485656738
    3. '(' → logprob: -6.132977485656738
    4. ',' → logprob: -6.507977485656738
    5. ')' → logprob: -7.507977485656738
    6. ')(' → logprob: -8.257977485656738
    7. '   ' → logprob: -9.007977485656738
    8. ' (' → logprob: -9.132977485656738
    9. '       ' → logprob: -10.632977485656738
    10. '(
' → logprob: -11.257977485656738

Token 658: ' city' (ID: 5030)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.14348597824573517
    2. 'city' → logprob: -2.0184860229492188
    3. ' self' → logprob: -8.018486022949219
    4. ' city' → logprob: -8.393486022949219
    5. '   ' → logprob: -8.518486022949219
    6. '       ' → logprob: -10.268486022949219
    7. ')' → logprob: -11.643486022949219
    8. '(self' → logprob: -12.518486022949219
    9. ' ' → logprob: -13.768486022949219
    10. '           ' → logprob: -14.018486022949219

Token 659: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.046242114156484604
    2. '   ' → logprob: -4.2962422370910645
    3. '):
' → logprob: -4.9212422370910645
    4. ')' → logprob: -5.0462422370910645
    5. ',' → logprob: -5.0462422370910645
    6. '       ' → logprob: -5.2962422370910645
    7. ':' → logprob: -5.9212422370910645
    8. '(self' → logprob: -6.0462422370910645
    9. 'self' → logprob: -6.6712422370910645
    10. '):
' → logprob: -10.796241760253906

Token 660: ' City' (ID: 5686)
  Prédit: 'City'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'City' → logprob: -0.22983205318450928
    2. 'self' → logprob: -1.6048320531845093
    3. ' City' → logprob: -6.354832172393799
    4. '   ' → logprob: -6.854832172393799
    5. ')' → logprob: -7.604832172393799
    6. 'city' → logprob: -7.854832172393799
    7. 'def' → logprob: -7.979832172393799
    8. ' self' → logprob: -8.47983169555664
    9. '_city' → logprob: -9.72983169555664
    10. '       ' → logprob: -10.22983169555664

Token 661: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10200491547584534
    2. ')' → logprob: -2.3520050048828125
    3. '):
' → logprob: -6.4770050048828125
    4. '   ' → logprob: -8.977005004882812
    5. '):
' → logprob: -9.977005004882812
    6. 'self' → logprob: -9.977005004882812
    7. '       ' → logprob: -10.977005004882812
    8. ',' → logprob: -11.602005004882812
    9. ':' → logprob: -12.227005004882812
    10. ')->' → logprob: -12.352005004882812

Token 662: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006585848750546575
    2. '[]' → logprob: -7.5006585121154785
    3. '   ' → logprob: -9.625658988952637
    4. '[' → logprob: -10.875658988952637
    5. ' []' → logprob: -12.500658988952637
    6. 'self' → logprob: -12.750658988952637
    7. '        
' → logprob: -13.125658988952637
    8. '[]
' → logprob: -13.375658988952637
    9. '[
' → logprob: -13.625658988952637
    10. '```' → logprob: -14.000658988952637

Token 663: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005794051103293896
    2. 'load' → logprob: -5.255794048309326
    3. ' load' → logprob: -7.505794048309326
    4. 'loads' → logprob: -12.130794525146484
    5. '   ' → logprob: -12.630794525146484
    6. 'result' → logprob: -14.880794525146484
    7. '	load' → logprob: -14.880794525146484
    8. ' loads' → logprob: -15.255794525146484
    9. 'all' → logprob: -16.255794525146484
    10. '```' → logprob: -16.255794525146484

Token 664: ' Generate' (ID: 33886)
  Prédit: 'load'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'load' → logprob: -0.0004994167247787118
    2. ' load' → logprob: -7.625499248504639
    3. 'result' → logprob: -12.625499725341797
    4. '       ' → logprob: -12.625499725341797
    5. '   ' → logprob: -13.125499725341797
    6. 'all' → logprob: -13.875499725341797
    7. 'loads' → logprob: -14.000499725341797
    8. 'from' → logprob: -15.250499725341797
    9. 'possible' → logprob: -15.250499725341797
    10. '	load' → logprob: -16.250499725341797

Token 665: ' all' (ID: 722)
  Prédit: 'load'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'load' → logprob: -0.020945074036717415
    2. ' load' → logprob: -4.020945072174072
    3. '[]' → logprob: -6.020945072174072
    4. 'all' → logprob: -8.14594554901123
    5. '       ' → logprob: -10.27094554901123
    6. ' all' → logprob: -11.02094554901123
    7. 'loads' → logprob: -11.77094554901123
    8. '[]
' → logprob: -12.64594554901123
    9. 'possible' → logprob: -12.64594554901123
    10. '[
' → logprob: -13.27094554901123

Token 666: ' combos' (ID: 150243)
  Prédit: 'load'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'load' → logprob: -1.1554158926010132
    2. '_load' → logprob: -1.1554158926010132
    3. ' load' → logprob: -1.4054158926010132
    4. 'possible' → logprob: -2.9054160118103027
    5. '[]' → logprob: -3.2804160118103027
    6. ' possible' → logprob: -4.280416011810303
    7. '_possible' → logprob: -4.655416011810303
    8. '   ' → logprob: -5.905416011810303
    9. '[
' → logprob: -7.405416011810303
    10. ' combinations' → logprob: -7.655416011810303

Token 667: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.147085428237915
    2. ' of' → logprob: -1.147085428237915
    3. '(self' → logprob: -1.522085428237915
    4. '_' → logprob: -2.772085428237915
    5. '   ' → logprob: -3.647085428237915
    6. ' (' → logprob: -4.772085189819336
    7. '[' → logprob: -4.897085189819336
    8. '_of' → logprob: -5.022085189819336
    9. ' for' → logprob: -5.397085189819336
    10. '(' → logprob: -5.522085189819336

Token 668: ' products' (ID: 3891)
  Prédit: 'market'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'market' → logprob: -0.4639987349510193
    2. 'Market' → logprob: -2.088998794555664
    3. 'city' → logprob: -2.713998794555664
    4. '[' → logprob: -2.963998794555664
    5. 'products' → logprob: -3.213998794555664
    6. '1' → logprob: -3.838998794555664
    7. 'load' → logprob: -3.838998794555664
    8. '[(' → logprob: -4.213998794555664
    9. ' market' → logprob: -5.338998794555664
    10. 'product' → logprob: -5.588998794555664

Token 669: ' sold' (ID: 8754)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3032923638820648
    2. ' =' → logprob: -2.1782922744750977
    3. ' with' → logprob: -3.0532922744750977
    4. ' that' → logprob: -3.3032922744750977
    5. ':' → logprob: -3.6782922744750977
    6. '=[]' → logprob: -4.678292274475098
    7. ' from' → logprob: -5.053292274475098
    8. '[]' → logprob: -5.178292274475098
    9. '=' → logprob: -5.178292274475098
    10. ' in' → logprob: -6.428292274475098

Token 670: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7433600425720215
    2. 'in' → logprob: -1.7433600425720215
    3. '       ' → logprob: -2.2433600425720215
    4. '   ' → logprob: -2.4933600425720215
    5. ' by' → logprob: -2.8683600425720215
    6. 'by' → logprob: -3.1183600425720215
    7. ' at' → logprob: -3.8683600425720215
    8. ',' → logprob: -4.6183600425720215
    9. 'for' → logprob: -5.2433600425720215
    10. ' for' → logprob: -5.4933600425720215

Token 671: ' this' (ID: 495)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.07109645754098892
    2. ' city' → logprob: -2.696096420288086
    3. 'the' → logprob: -7.196096420288086
    4. '   ' → logprob: -8.821096420288086
    5. ' the' → logprob: -9.196096420288086
    6. '       ' → logprob: -9.571096420288086
    7. '[' → logprob: -10.571096420288086
    8. '
' → logprob: -11.446096420288086
    9. 'that' → logprob: -11.446096420288086
    10. '```' → logprob: -11.696096420288086

Token 672: ' city' (ID: 5030)
  Prédit: ' city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' city' → logprob: -0.3510686755180359
    2. 'city' → logprob: -1.2260687351226807
    3. 'market' → logprob: -7.226068496704102
    4. '   ' → logprob: -7.226068496704102
    5. ' market' → logprob: -8.101068496704102
    6. '_city' → logprob: -8.101068496704102
    7. '.city' → logprob: -8.351068496704102
    8. '       ' → logprob: -8.476068496704102
    9. ' ' → logprob: -10.851068496704102
    10. ',' → logprob: -11.726068496704102

Token 673: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02326434850692749
    2. '(self' → logprob: -4.398264408111572
    3. ',' → logprob: -4.898264408111572
    4. ':' → logprob: -6.773264408111572
    5. ' that' → logprob: -7.398264408111572
    6. '   ' → logprob: -7.898264408111572
    7. 'self' → logprob: -8.648263931274414
    8. '        
' → logprob: -8.773263931274414
    9. '(' → logprob: -9.148263931274414
    10. ' with' → logprob: -9.273263931274414

Token 674: ' profit' (ID: 15971)
  Prédit: 'positive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positive' → logprob: -0.37289148569107056
    2. 'profit' → logprob: -1.2478914260864258
    3. 'weight' → logprob: -4.872891426086426
    4. 'prof' → logprob: -5.247891426086426
    5. 'profits' → logprob: -5.622891426086426
    6. 'their' → logprob: -5.872891426086426
    7. 'quantity' → logprob: -7.122891426086426
    8. ' positive' → logprob: -7.247891426086426
    9. '   ' → logprob: -7.747891426086426
    10. 'self' → logprob: -7.747891426086426

Token 675: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.032694779336452484
    2. ' >' → logprob: -3.5326948165893555
    3. '=' → logprob: -5.9076948165893555
    4. 'greater' → logprob: -10.282694816589355
    5. ' =' → logprob: -10.782694816589355
    6. '       ' → logprob: -10.907694816589355
    7. '=[]' → logprob: -11.407694816589355
    8. '   ' → logprob: -11.532694816589355
    9. '<=' → logprob: -11.782694816589355
    10. ',' → logprob: -11.907694816589355

Token 676: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.64708495605737e-05
    2. ' ' → logprob: -9.625066757202148
    3. 'zero' → logprob: -16.75006675720215
    4. '
' → logprob: -16.87506675720215
    5. '>' → logprob: -17.37506675720215
    6. '```' → logprob: -17.62506675720215
    7. '   ' → logprob: -17.87506675720215
    8. ' zero' → logprob: -18.25006675720215
    9. '۰' → logprob: -18.37506675720215
    10. ',' → logprob: -18.50006675720215

Token 677: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013718906790018082
    2. ',' → logprob: -4.888719081878662
    3. ':' → logprob: -5.388719081878662
    4. ' that' → logprob: -7.888719081878662
    5. ' =' → logprob: -8.513718605041504
    6. ' from' → logprob: -8.888718605041504
    7. ' with' → logprob: -9.138718605041504
    8. '        
' → logprob: -9.138718605041504
    9. ' and' → logprob: -9.388718605041504
    10. '   ' → logprob: -9.388718605041504

Token 678: ' that' (ID: 484)
  Prédit: 'load'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'load' → logprob: -0.3342984616756439
    2. ' load' → logprob: -1.3342984914779663
    3. 'result' → logprob: -4.584298610687256
    4. '       ' → logprob: -4.959298610687256
    5. ' valid' → logprob: -6.709298610687256
    6. 'valid' → logprob: -7.209298610687256
    7. 'loads' → logprob: -7.709298610687256
    8. ' result' → logprob: -8.084298133850098
    9. 'possible' → logprob: -8.334298133850098
    10. 'all' → logprob: -8.709298133850098

Token 679: ' fit' (ID: 5769)
  Prédit: 'fit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fit' → logprob: -0.2645905017852783
    2. ' fit' → logprob: -1.5145905017852783
    3. 'can' → logprob: -6.264590263366699
    4. '   ' → logprob: -6.264590263366699
    5. 'weight' → logprob: -6.514590263366699
    6. ' can' → logprob: -6.514590263366699
    7. '       ' → logprob: -6.889590263366699
    8. ' weight' → logprob: -7.764590263366699
    9. 'self' → logprob: -8.0145902633667
    10. 'sum' → logprob: -8.0145902633667

Token 680: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8190996050834656
    2. 'self' → logprob: -1.9440996646881104
    3. ' self' → logprob: -2.3190996646881104
    4. ' within' → logprob: -2.5690996646881104
    5. '_weight' → logprob: -2.8190996646881104
    6. ' the' → logprob: -3.0690996646881104
    7. 'in' → logprob: -3.6940996646881104
    8. ' into' → logprob: -3.8190996646881104
    9. 'weight' → logprob: -4.069099426269531
    10. '           ' → logprob: -4.319099426269531

Token 681: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.47366970777511597
    2. 'self' → logprob: -1.7236697673797607
    3. 'W' → logprob: -2.5986697673797607
    4. 'the' → logprob: -3.0986697673797607
    5. ' weight' → logprob: -3.0986697673797607
    6. ' the' → logprob: -4.223669528961182
    7. ' self' → logprob: -4.598669528961182
    8. ' W' → logprob: -4.723669528961182
    9. '   ' → logprob: -8.09867000579834
    10. 'capacity' → logprob: -9.72367000579834

Token 682: ' limit' (ID: 5967)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1454527378082275
    2. '   ' → logprob: -1.7704527378082275
    3. ' capacity' → logprob: -1.7704527378082275
    4. 'capacity' → logprob: -1.8954527378082275
    5. 'limit' → logprob: -3.0204527378082275
    6. ',' → logprob: -3.1454527378082275
    7. ' limit' → logprob: -4.145452499389648
    8. '<=' → logprob: -4.270452499389648
    9. ' and' → logprob: -4.645452499389648
    10. ':' → logprob: -4.770452499389648

Token 683: ' W' (ID: 486)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.217573344707489
    2. '(self' → logprob: -1.7175734043121338
    3. '(' → logprob: -5.592573165893555
    4. '
' → logprob: -5.717573165893555
    5. ',' → logprob: -5.717573165893555
    6. 'self' → logprob: -6.217573165893555
    7. ' (' → logprob: -6.717573165893555
    8. ':' → logprob: -7.342573165893555
    9. '   ' → logprob: -7.592573165893555
    10. '```' → logprob: -8.467573165893555

Token 684: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006813380168750882
    2. ',' → logprob: -7.875681400299072
    3. '        
' → logprob: -9.250680923461914
    4. ':' → logprob: -9.500680923461914
    5. '
' → logprob: -10.250680923461914
    6. '(self' → logprob: -10.375680923461914
    7. '   ' → logprob: -10.750680923461914
    8. '(' → logprob: -12.250680923461914
    9. '```' → logprob: -12.375680923461914
    10. '      ' → logprob: -12.375680923461914

Token 685: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018077615823131055
    2. '        
' → logprob: -9.500181198120117
    3. '
' → logprob: -10.250181198120117
    4. '```' → logprob: -10.750181198120117
    5. '   ' → logprob: -11.375181198120117
    6. ',' → logprob: -12.125181198120117
    7. 'result' → logprob: -12.500181198120117
    8. 'import' → logprob: -12.750181198120117
    9. ' load' → logprob: -12.750181198120117
    10. 'from' → logprob: -13.250181198120117

Token 686: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011151928454637527
    2. ' load' → logprob: -5.0111517906188965
    3. 'load' → logprob: -5.5111517906188965
    4. 'result' → logprob: -8.386152267456055
    5. 'loads' → logprob: -10.261152267456055
    6. 'from' → logprob: -10.636152267456055
    7. ' result' → logprob: -10.886152267456055
    8. 'possible' → logprob: -11.636152267456055
    9. '```' → logprob: -11.636152267456055
    10. 'results' → logprob: -11.761152267456055

Token 687: ' Because' (ID: 13602)
  Prédit: 'load'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'load' → logprob: -0.06524994224309921
    2. '       ' → logprob: -3.1902499198913574
    3. ' load' → logprob: -4.065249919891357
    4. 'result' → logprob: -6.065249919891357
    5. 'from' → logprob: -6.440249919891357
    6. 'valid' → logprob: -7.940249919891357
    7. 'possible' → logprob: -8.440250396728516
    8. 'products' → logprob: -9.190250396728516
    9. 'results' → logprob: -9.940250396728516
    10. 'loads' → logprob: -10.315250396728516

Token 688: ' M' (ID: 391)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.307587742805481
    2. ' each' → logprob: -1.807587742805481
    3. ' we' → logprob: -2.0575876235961914
    4. ' products' → logprob: -2.5575876235961914
    5. ' of' → logprob: -2.8075876235961914
    6. ' product' → logprob: -2.9325876235961914
    7. 'we' → logprob: -3.3075876235961914
    8. 'the' → logprob: -3.5575876235961914
    9. 'each' → logprob: -3.5575876235961914
    10. ' self' → logprob: -3.6825876235961914

Token 689: '<=' (ID: 16672)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.1822646856307983
    2. '<=' → logprob: -1.4322646856307983
    3. ' is' → logprob: -1.8072646856307983
    4. '==' → logprob: -2.182264804840088
    5. '=' → logprob: -2.432264804840088
    6. ' ==' → logprob: -2.557264804840088
    7. ' =' → logprob: -6.182264804840088
    8. ' <' → logprob: -6.307264804840088
    9. ')' → logprob: -6.432264804840088
    10. ':' → logprob: -6.682264804840088

Token 690: '7' (ID: 22)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.40330272912979126
    2. '20' → logprob: -1.4033026695251465
    3. '15' → logprob: -3.0283026695251465
    4. '8' → logprob: -4.4033026695251465
    5. '5' → logprob: -4.5283026695251465
    6. '12' → logprob: -4.9033026695251465
    7. '7' → logprob: -5.6533026695251465
    8. '16' → logprob: -6.5283026695251465
    9. '6' → logprob: -6.9033026695251465
    10. '1' → logprob: -7.9033026695251465

Token 691: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5089238286018372
    2. ':' → logprob: -1.5089237689971924
    3. '       ' → logprob: -2.3839237689971924
    4. '
' → logprob: -3.2589237689971924
    5. 'from' → logprob: -4.5089240074157715
    6. ' from' → logprob: -4.8839240074157715
    7. ' ,' → logprob: -4.8839240074157715
    8. ':
' → logprob: -5.0089240074157715
    9. 'import' → logprob: -6.1339240074157715
    10. ',
' → logprob: -6.3839240074157715

Token 692: ' L' (ID: 451)
  Prédit: ' load'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' load' → logprob: -0.7931305766105652
    2. ' from' → logprob: -1.04313063621521
    3. 'from' → logprob: -2.16813063621521
    4. 'load' → logprob: -3.91813063621521
    5. ' result' → logprob: -4.043130397796631
    6. '       ' → logprob: -4.293130397796631
    7. ' res' → logprob: -4.793130397796631
    8. 'result' → logprob: -5.293130397796631
    9. ' we' → logprob: -5.293130397796631
    10. ' import' → logprob: -6.043130397796631

Token 693: '_j' (ID: 12021)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8548194169998169
    2. '<=' → logprob: -1.604819416999817
    3. 'imited' → logprob: -2.2298192977905273
    4. ' <=' → logprob: -3.2298192977905273
    5. ' =' → logprob: -3.3548192977905273
    6. 'imits' → logprob: -3.8548192977905273
    7. 'im' → logprob: -3.8548192977905273
    8. 'imit' → logprob: -3.9798192977905273
    9. '1' → logprob: -3.9798192977905273
    10. 'en' → logprob: -4.104819297790527

Token 694: '<=' (ID: 16672)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0608344078063965
    2. '<=' → logprob: -1.0608344078063965
    3. ' <=' → logprob: -2.6858344078063965
    4. 'imited' → logprob: -2.6858344078063965
    5. ' =' → logprob: -3.3108344078063965
    6. ',' → logprob: -3.4358344078063965
    7. ' is' → logprob: -3.9358344078063965
    8. 'imit' → logprob: -5.0608344078063965
    9. ':' → logprob: -5.0608344078063965
    10. '<' → logprob: -5.1858344078063965

Token 695: 'M' (ID: 44)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.9425546526908875
    2. '7' → logprob: -1.1925547122955322
    3. '20' → logprob: -2.4425547122955322
    4. '1' → logprob: -2.4425547122955322
    5. 'self' → logprob: -3.1925547122955322
    6. '5' → logprob: -3.4425547122955322
    7. '3' → logprob: -3.6925547122955322
    8. '15' → logprob: -4.442554473876953
    9. '2' → logprob: -5.192554473876953
    10. '100' → logprob: -5.567554473876953

Token 696: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10651614516973495
    2. '
' → logprob: -2.481516122817993
    3. '        
' → logprob: -4.731516361236572
    4. ',' → logprob: -5.856516361236572
    5. ':' → logprob: -5.856516361236572
    6. '<|end|>' → logprob: -7.981516361236572
    7. '  
' → logprob: -8.356515884399414
    8. '   ' → logprob: -8.356515884399414
    9. '```' → logprob: -8.356515884399414
    10. '        ' → logprob: -8.606515884399414

Token 697: ' and' (ID: 326)
  Prédit: 'load'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'load' → logprob: -0.4089367687702179
    2. ' load' → logprob: -1.1589367389678955
    3. '       ' → logprob: -4.658936977386475
    4. 'from' → logprob: -5.283936977386475
    5. 'result' → logprob: -5.908936977386475
    6. ' from' → logprob: -6.408936977386475
    7. '#' → logprob: -7.658936977386475
    8. 'res' → logprob: -7.783936977386475
    9. ' res' → logprob: -8.033936500549316
    10. ' result' → logprob: -8.283936500549316

Token 698: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -1.731397271156311
    2. 'self' → logprob: -1.856397271156311
    3. 'each' → logprob: -2.1063971519470215
    4. 'products' → logprob: -2.2313971519470215
    5. 'all' → logprob: -2.8563971519470215
    6. 'the' → logprob: -3.2313971519470215
    7. 'product' → logprob: -3.3563971519470215
    8. ' products' → logprob: -3.7313971519470215
    9. ' self' → logprob: -3.7313971519470215
    10. 'we' → logprob: -3.7313971519470215

Token 699: ' can' (ID: 665)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.6424545049667358
    2. ' >=' → logprob: -1.6424545049667358
    3. '>' → logprob: -2.1424546241760254
    4. '=' → logprob: -3.5174546241760254
    5. ',' → logprob: -3.5174546241760254
    6. '<=' → logprob: -4.017454624176025
    7. '   ' → logprob: -4.267454624176025
    8. ':' → logprob: -4.392454624176025
    9. ' <' → logprob: -4.392454624176025
    10. '       ' → logprob: -4.767454624176025

Token 700: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.4228738844394684
    2. ' range' → logprob: -1.922873854637146
    3. 'range' → logprob: -2.0478739738464355
    4. '=' → logprob: -3.6728739738464355
    5. 'be' → logprob: -4.1728739738464355
    6. ' not' → logprob: -4.7978739738464355
    7. '<=' → logprob: -5.9228739738464355
    8. 'not' → logprob: -6.2978739738464355
    9. ' ' → logprob: -6.5478739738464355
    10. '   ' → logprob: -6.9228739738464355

Token 701: ' big' (ID: 3464)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.1306905448436737
    2. 'handled' → logprob: -3.380690574645996
    3. '100' → logprob: -3.505690574645996
    4. 'very' → logprob: -4.255690574645996
    5. 'big' → logprob: -4.380690574645996
    6. 'up' → logprob: -4.505690574645996
    7. '10' → logprob: -5.130690574645996
    8. 'quite' → logprob: -5.755690574645996
    9. ' large' → logprob: -6.505690574645996
    10. '0' → logprob: -6.755690574645996

Token 702: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25289398431777954
    2. ':' → logprob: -2.0028939247131348
    3. '       ' → logprob: -3.3778939247131348
    4. '
' → logprob: -3.5028939247131348
    5. ':
' → logprob: -4.377893924713135
    6. ',
' → logprob: -5.252893924713135
    7. '.' → logprob: -6.377893924713135
    8. 'def' → logprob: -7.127893924713135
    9. 'from' → logprob: -7.252893924713135
    10. '        
' → logprob: -7.377893924713135

Token 703: ' we' (ID: 581)
  Prédit: ' load'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' load' → logprob: -0.20350933074951172
    2. 'load' → logprob: -1.8285093307495117
    3. '       ' → logprob: -4.078509330749512
    4. ' we' → logprob: -6.453509330749512
    5. 'result' → logprob: -6.703509330749512
    6. 'we' → logprob: -6.953509330749512
    7. ' result' → logprob: -7.828509330749512
    8. 'from' → logprob: -7.828509330749512
    9. ' all' → logprob: -7.953509330749512
    10. '#' → logprob: -7.953509330749512

Token 704: ' use' (ID: 1199)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.253656268119812
    2. ' def' → logprob: -1.753656268119812
    3. ' from' → logprob: -2.0036563873291016
    4. 'from' → logprob: -2.3786563873291016
    5. ' import' → logprob: -2.6286563873291016
    6. ' return' → logprob: -2.7536563873291016
    7. 'import' → logprob: -2.7536563873291016
    8. ' continue' → logprob: -3.6286563873291016
    9. ' will' → logprob: -4.128656387329102
    10. 'def' → logprob: -4.253656387329102

Token 705: ' DP' (ID: 51992)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.39572572708129883
    2. '[]' → logprob: -2.020725727081299
    3. 'def' → logprob: -2.395725727081299
    4. 'a' → logprob: -3.770725727081299
    5. 'from' → logprob: -4.145725727081299
    6. '[' → logprob: -4.270725727081299
    7. '[]
' → logprob: -4.395725727081299
    8. 'self' → logprob: -4.520725727081299
    9. 'dfs' → logprob: -4.520725727081299
    10. 'recursive' → logprob: -5.145725727081299

Token 706: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 707: ' kn' (ID: 1313)
  Prédit: 'kn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kn' → logprob: -0.14409253001213074
    2. 'subset' → logprob: -2.644092559814453
    3. 'weight' → logprob: -3.519092559814453
    4. '0' → logprob: -4.269092559814453
    5. 'capacity' → logprob: -5.394092559814453
    6. 'comb' → logprob: -5.644092559814453
    7. 'com' → logprob: -6.019092559814453
    8. ' kn' → logprob: -6.394092559814453
    9. 'product' → logprob: -7.019092559814453
    10. 'packing' → logprob: -7.019092559814453

Token 708: 'apsack' (ID: 178559)
  Prédit: 'apsack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apsack' → logprob: -0.007708839140832424
    2. 'ap' → logprob: -4.88270902633667
    3. 'aps' → logprob: -9.382708549499512
    4. '```' → logprob: -12.257708549499512
    5. 'ап' → logprob: -12.632708549499512
    6. '   ' → logprob: -13.257708549499512
    7. '
' → logprob: -13.382708549499512
    8. '       ' → logprob: -13.882708549499512
    9. '``' → logprob: -13.882708549499512
    10. 'ight' → logprob: -14.007708549499512

Token 709: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0780315399169922
    2. '(self' → logprob: -1.5780315399169922
    3. '
' → logprob: -2.453031539916992
    4. ',' → logprob: -2.703031539916992
    5. ':' → logprob: -2.703031539916992
    6. ' (' → logprob: -3.453031539916992
    7. '.' → logprob: -3.453031539916992
    8. '_' → logprob: -3.578031539916992
    9. '        
' → logprob: -4.203031539916992
    10. ')' → logprob: -4.453031539916992

Token 710: ' profits' (ID: 32798)
  Prédit: 'products'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'products' → logprob: -1.1950680017471313
    2. 'profit' → logprob: -1.9450680017471313
    3. 'the' → logprob: -2.070067882537842
    4. 'weight' → logprob: -2.320067882537842
    5. 'each' → logprob: -2.695067882537842
    6. 'this' → logprob: -3.070067882537842
    7. 'that' → logprob: -3.070067882537842
    8. 'profits' → logprob: -3.695067882537842
    9. 'capacity' → logprob: -3.945067882537842
    10. 'product' → logprob: -3.945067882537842

Token 711: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0468188524246216
    2. '(self' → logprob: -1.0468188524246216
    3. '.' → logprob: -2.921818733215332
    4. ',' → logprob: -3.171818733215332
    5. ' (' → logprob: -3.296818733215332
    6. ')' → logprob: -3.546818733215332
    7. '(' → logprob: -3.921818733215332
    8. ' for' → logprob: -3.921818733215332
    9. ' with' → logprob: -4.171818733215332
    10. '_' → logprob: -4.296818733215332

Token 712: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.6854693293571472
    2. 'products' → logprob: -1.560469388961792
    3. 'items' → logprob: -2.560469388961792
    4. 'capacity' → logprob: -2.810469388961792
    5. 'weights' → logprob: -3.060469388961792
    6. 'the' → logprob: -3.685469388961792
    7. 'product' → logprob: -4.310469150543213
    8. 'respect' → logprob: -4.310469150543213
    9. 'different' → logprob: -4.935469150543213
    10. ' weight' → logprob: -4.935469150543213

Token 713: ' limit' (ID: 5967)
  Prédit: ' constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -1.0244591236114502
    2. 'limit' → logprob: -1.2744591236114502
    3. ' limit' → logprob: -2.02445912361145
    4. ' limits' → logprob: -2.77445912361145
    5. 'constraints' → logprob: -3.27445912361145
    6. ' constraint' → logprob: -3.89945912361145
    7. 'limits' → logprob: -4.024458885192871
    8. 'constraint' → logprob: -4.149458885192871
    9. '_limit' → logprob: -4.274458885192871
    10. '.' → logprob: -4.649458885192871

Token 714: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.9694839119911194
    2. '.' → logprob: -1.2194838523864746
    3. '=' → logprob: -2.2194838523864746
    4. ' W' → logprob: -2.2194838523864746
    5. 'self' → logprob: -3.7194838523864746
    6. ' =' → logprob: -3.8444838523864746
    7. ')' → logprob: -4.469483852386475
    8. ',' → logprob: -4.719483852386475
    9. '=self' → logprob: -4.719483852386475
    10. ' self' → logprob: -4.969483852386475

Token 715: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2827645540237427
    2. '
' → logprob: -2.282764434814453
    3. ',' → logprob: -2.532764434814453
    4. '(self' → logprob: -3.282764434814453
    5. '        
' → logprob: -4.782764434814453
    6. '   ' → logprob: -5.032764434814453
    7. ':' → logprob: -6.157764434814453
    8. '.' → logprob: -6.407764434814453
    9. ')' → logprob: -6.532764434814453
    10. '(' → logprob: -6.657764434814453

Token 716: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00979197584092617
    2. '   ' → logprob: -5.884791851043701
    3. '        
' → logprob: -6.134791851043701
    4. '
' → logprob: -6.634791851043701
    5. ',' → logprob: -7.509791851043701
    6. '<|end|>' → logprob: -7.509791851043701
    7. '```' → logprob: -7.759791851043701
    8. 'def' → logprob: -7.759791851043701
    9. '    ' → logprob: -8.50979232788086
    10. ')' → logprob: -8.75979232788086

Token 717: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014645852148532867
    2. 'from' → logprob: -5.514646053314209
    3. 'dp' → logprob: -6.139646053314209
    4. ' from' → logprob: -6.764646053314209
    5. '        
' → logprob: -6.889646053314209
    6. '   ' → logprob: -7.014646053314209
    7. 'items' → logprob: -7.139646053314209
    8. 'products' → logprob: -7.389646053314209
    9. '
' → logprob: -7.514646053314209
    10. 'def' → logprob: -8.01464557647705

Token 718: ' However' (ID: 5551)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19858577847480774
    2. 'dp' → logprob: -2.0735857486724854
    3. 'from' → logprob: -3.8235857486724854
    4. ' from' → logprob: -4.9485859870910645
    5. ' dp' → logprob: -4.9485859870910645
    6. 'items' → logprob: -5.5735859870910645
    7. 'def' → logprob: -5.8235859870910645
    8. 'load' → logprob: -6.3235859870910645
    9. 'products' → logprob: -6.5735859870910645
    10. ' items' → logprob: -6.5735859870910645

Token 719: ' profit' (ID: 15971)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11896008253097534
    2. ':' → logprob: -2.61896014213562
    3. '       ' → logprob: -3.74396014213562
    4. ' ,' → logprob: -5.243959903717041
    5. ' we' → logprob: -5.493959903717041
    6. '        ' → logprob: -6.243959903717041
    7. ' ' → logprob: -7.368959903717041
    8. '   ' → logprob: -7.993959903717041
    9. ':
' → logprob: -7.993959903717041
    10. '    ' → logprob: -8.1189603805542

Token 720: ' per' (ID: 777)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2669437527656555
    2. '=' → logprob: -2.1419436931610107
    3. ',' → logprob: -3.5169436931610107
    4. 'max' → logprob: -3.5169436931610107
    5. ')' → logprob: -4.26694393157959
    6. ' >' → logprob: -5.14194393157959
    7. 'per' → logprob: -5.39194393157959
    8. '<=' → logprob: -5.51694393157959
    9. 's' → logprob: -5.76694393157959
    10. ' per' → logprob: -5.89194393157959

Token 721: ' unit' (ID: 7670)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.15815944969654083
    2. 'unit' → logprob: -2.6581594944000244
    3. 'weight' → logprob: -3.0331594944000244
    4. 'item' → logprob: -4.158159255981445
    5. ' product' → logprob: -4.783159255981445
    6. 'load' → logprob: -6.658159255981445
    7. ' unit' → logprob: -7.408159255981445
    8. ' weight' → logprob: -8.283159255981445
    9. 'city' → logprob: -8.533159255981445
    10. ' item' → logprob: -8.658159255981445

Token 722: ' =' (ID: 314)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9827051162719727
    2. '>' → logprob: -1.7327051162719727
    3. ' can' → logprob: -2.4827051162719727
    4. ' and' → logprob: -2.6077051162719727
    5. 'is' → logprob: -2.7327051162719727
    6. 'and' → logprob: -3.1077051162719727
    7. 'can' → logprob: -3.3577051162719727
    8. ' may' → logprob: -3.8577051162719727
    9. 'may' → logprob: -3.9827051162719727
    10. ',' → logprob: -4.107705116271973

Token 723: ' sell' (ID: 7437)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.893032431602478
    2. 'product' → logprob: -1.268032431602478
    3. ' mp' → logprob: -1.643032431602478
    4. '(mp' → logprob: -3.2680325508117676
    5. 'market' → logprob: -4.393032550811768
    6. '(product' → logprob: -4.518032550811768
    7. 'p' → logprob: -4.518032550811768
    8. 'self' → logprob: -4.643032550811768
    9. 'max' → logprob: -4.768032550811768
    10. 'city' → logprob: -4.893032550811768

Token 724: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.00011319868644932285
    2. '_product' → logprob: -10.000113487243652
    3. '_' → logprob: -10.250113487243652
    4. ' _' → logprob: -11.000113487243652
    5. 'price' → logprob: -12.250113487243652
    6. '_prices' → logprob: -12.250113487243652
    7. '_profit' → logprob: -14.250113487243652
    8. '_weight' → logprob: -14.500113487243652
    9. '\' → logprob: -14.625113487243652
    10. '```' → logprob: -14.625113487243652

Token 725: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012806398794054985
    2. '-' → logprob: -4.512806415557861
    3. ' *' → logprob: -8.137805938720703
    4. '   ' → logprob: -8.137805938720703
    5. '       ' → logprob: -8.387805938720703
    6. ')' → logprob: -8.762805938720703
    7. 'product' → logprob: -9.387805938720703
    8. ',' → logprob: -9.512805938720703
    9. '*' → logprob: -9.637805938720703
    10. ' ' → logprob: -9.887805938720703

Token 726: ' buy' (ID: 3877)
  Prédit: 'buy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buy' → logprob: -0.022901834920048714
    2. ' buy' → logprob: -4.147902011871338
    3. ' mp' → logprob: -5.772902011871338
    4. 'mp' → logprob: -6.397902011871338
    5. 'product' → logprob: -6.772902011871338
    6. 'city' → logprob: -8.27290153503418
    7. 'self' → logprob: -8.52290153503418
    8. ' product' → logprob: -9.52290153503418
    9. 'purchase' → logprob: -9.64790153503418
    10. 'sell' → logprob: -9.89790153503418

Token 727: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -3.023293538717553e-05
    2. 'price' → logprob: -10.875030517578125
    3. '_' → logprob: -11.500030517578125
    4. ' _' → logprob: -15.250030517578125
    5. '_cost' → logprob: -15.875030517578125
    6. '_product' → logprob: -16.000030517578125
    7. '_prices' → logprob: -16.125030517578125
    8. ' price' → logprob: -16.375030517578125
    9. 'Price' → logprob: -16.625030517578125
    10. '_purchase' → logprob: -17.000030517578125

Token 728: ':
' (ID: 734)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26678308844566345
    2. '       ' → logprob: -2.6417829990386963
    3. '<|end|>' → logprob: -2.8917829990386963
    4. ':' → logprob: -3.5167829990386963
    5. ',' → logprob: -3.5167829990386963
    6. '<|end|>' → logprob: -5.016783237457275
    7. '.' → logprob: -5.141783237457275
    8. '        
' → logprob: -5.641783237457275
    9. ')' → logprob: -5.766783237457275
    10. '

' → logprob: -6.016783237457275

Token 729: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0977340117096901
    2. '
' → logprob: -3.347733974456787
    3. '#' → logprob: -3.597733974456787
    4. '        
' → logprob: -4.347733974456787
    5. ' 
' → logprob: -5.597733974456787
    6. '<|end|>' → logprob: -6.222733974456787
    7. ')' → logprob: -6.347733974456787
    8. '  
' → logprob: -6.347733974456787
    9. ',' → logprob: -6.597733974456787
    10. ' tokens' → logprob: -6.722733974456787

Token 730: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29708564281463623
    2. '#' (adapté à ' #') → logprob: -2.047085762023926
    3. '
' → logprob: -2.922085762023926
    4. 'We' → logprob: -4.422085762023926
    5. ')' → logprob: -4.797085762023926
    6. '        
' → logprob: -5.297085762023926
    7. ' for' → logprob: -5.422085762023926
    8. 'product' → logprob: -5.797085762023926
    9. ' max' → logprob: -5.922085762023926
    10. 'max' → logprob: -6.047085762023926

Token 731: ' We' (ID: 1416)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8866058588027954
    2. '       ' → logprob: -1.2616058588027954
    3. '
' → logprob: -2.011605739593506
    4. 'We' → logprob: -3.511605739593506
    5. ' #' → logprob: -3.636605739593506
    6. ' return' → logprob: -4.261605739593506
    7. ' for' → logprob: -4.636605739593506
    8. ' We' → logprob: -4.636605739593506
    9. 'Let's' → logprob: -4.886605739593506
    10. ')' → logprob: -5.011605739593506

Token 732: ' want' (ID: 1682)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.44605517387390137
    2. 'can' → logprob: -2.9460551738739014
    3. ' continue' → logprob: -2.9460551738739014
    4. ' will' → logprob: -3.0710551738739014
    5. 'def' → logprob: -3.3210551738739014
    6. ' cannot' → logprob: -3.8210551738739014
    7. 'continue' → logprob: -4.1960554122924805
    8. 'consider' → logprob: -4.1960554122924805
    9. '   ' → logprob: -4.4460554122924805
    10. ' def' → logprob: -4.4460554122924805

Token 733: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5781586766242981
    2. 'to' → logprob: -0.8281586766242981
    3. '       ' → logprob: -7.203158855438232
    4. '   ' → logprob: -8.203158378601074
    5. 'def' → logprob: -8.328158378601074
    6. '           ' → logprob: -8.703158378601074
    7. 'max' → logprob: -8.828158378601074
    8. 'all' → logprob: -9.328158378601074
    9. 'the' → logprob: -9.828158378601074
    10. '               ' → logprob: -9.953158378601074

Token 734: ' maximize' (ID: 44207)
  Prédit: 'maximize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maximize' → logprob: -0.5753871202468872
    2. 'find' → logprob: -1.0753871202468872
    3. 'consider' → logprob: -3.7003870010375977
    4. 'select' → logprob: -3.7003870010375977
    5. 'choose' → logprob: -4.200387001037598
    6. 'max' → logprob: -4.950387001037598
    7. 'generate' → logprob: -4.950387001037598
    8. 'enumer' → logprob: -5.575387001037598
    9. 'collect' → logprob: -5.825387001037598
    10. 'buy' → logprob: -6.200387001037598

Token 735: ' profit' (ID: 15971)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.2894376218318939
    2. ' profit' → logprob: -1.4144376516342163
    3. ' total' → logprob: -5.914437770843506
    4. 'total' → logprob: -5.914437770843506
    5. 'self' → logprob: -7.164437770843506
    6. ' the' → logprob: -8.164437294006348
    7. 'def' → logprob: -8.414437294006348
    8. '_profit' → logprob: -8.414437294006348
    9. 'the' → logprob: -8.539437294006348
    10. 'return' → logprob: -8.664437294006348

Token 736: ' per' (ID: 777)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2533263862133026
    2. '.' → logprob: -2.253326416015625
    3. 'per' → logprob: -2.753326416015625
    4. '       ' → logprob: -4.253326416015625
    5. ' per' → logprob: -4.878326416015625
    6. '_per' → logprob: -5.253326416015625
    7. 'def' → logprob: -5.628326416015625
    8. 's' → logprob: -6.003326416015625
    9. 'max' → logprob: -6.003326416015625
    10. '=' → logprob: -6.003326416015625

Token 737: ' trip' (ID: 8831)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.6037153005599976
    2. 'weight' → logprob: -0.8537153005599976
    3. ' unit' → logprob: -3.853715419769287
    4. ' weight' → logprob: -5.353715419769287
    5. 'product' → logprob: -7.978715419769287
    6. '_weight' → logprob: -8.103714942932129
    7. 'trip' → logprob: -8.103714942932129
    8. '_unit' → logprob: -8.853714942932129
    9. 'city' → logprob: -9.728714942932129
    10. 'w' → logprob: -9.978714942932129

Token 738: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25998422503471375
    2. '
' → logprob: -2.009984254837036
    3. ',' → logprob: -3.009984254837036
    4. '        
' → logprob: -4.384984016418457
    5. '.' → logprob: -4.634984016418457
    6. ':' → logprob: -5.634984016418457
    7. '#' → logprob: -6.009984016418457
    8. 'def' → logprob: -6.259984016418457
    9. ' with' → logprob: -6.509984016418457
    10. '.
' → logprob: -6.509984016418457

Token 739: ' city' (ID: 5030)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.8747928738594055
    2. 'the' → logprob: -1.9997928142547607
    3. 'product' → logprob: -2.6247928142547607
    4. 'all' → logprob: -3.2497928142547607
    5. 'city' → logprob: -3.4997928142547607
    6. 'this' → logprob: -3.4997928142547607
    7. ' each' → logprob: -3.6247928142547607
    8. ' the' → logprob: -3.7497928142547607
    9. 'weight' → logprob: -3.7497928142547607
    10. 'profit' → logprob: -3.8747928142547607

Token 740: ' visit' (ID: 4030)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4089348018169403
    2. ',' → logprob: -1.9089348316192627
    3. '.' → logprob: -2.4089348316192627
    4. '
' → logprob: -3.2839348316192627
    5. '        
' → logprob: -4.158934593200684
    6. '(self' → logprob: -4.783934593200684
    7. '   ' → logprob: -5.158934593200684
    8. ')' → logprob: -5.533934593200684
    9. 'def' → logprob: -5.908934593200684
    10. '(products' → logprob: -6.158934593200684

Token 741: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30869632959365845
    2. '.' → logprob: -2.0586962699890137
    3. ',' → logprob: -2.1836962699890137
    4. '
' → logprob: -4.933696269989014
    5. '        
' → logprob: -4.933696269989014
    6. '.
' → logprob: -6.183696269989014
    7. ':' → logprob: -6.308696269989014
    8. ' with' → logprob: -6.308696269989014
    9. '   ' → logprob: -7.058696269989014
    10. ',
' → logprob: -7.808696269989014

Token 742: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002932656556367874
    2. '
' → logprob: -6.627932548522949
    3. '        
' → logprob: -6.627932548522949
    4. '   ' → logprob: -9.25293254852295
    5. '    
' → logprob: -10.37793254852295
    6. '  
' → logprob: -10.62793254852295
    7. '```' → logprob: -10.62793254852295
    8. ' 
' → logprob: -10.87793254852295
    9. ',' → logprob: -11.37793254852295
    10. '#' → logprob: -11.50293254852295

Token 743: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9796171188354492
    2. 'items' → logprob: -1.7296171188354492
    3. '       ' → logprob: -1.9796171188354492
    4. 'load' → logprob: -2.354617118835449
    5. 'from' → logprob: -2.479617118835449
    6. 'products' → logprob: -2.854617118835449
    7. '#' (adapté à ' #') → logprob: -4.604617118835449
    8. 'def' → logprob: -4.729617118835449
    9. 'valid' → logprob: -5.229617118835449
    10. ' items' → logprob: -5.229617118835449

Token 744: ' First' (ID: 8338)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.5498511791229248
    2. 'items' → logprob: -1.5498511791229248
    3. 'dp' → logprob: -1.6748511791229248
    4. 'products' → logprob: -2.049851179122925
    5. 'load' → logprob: -2.174851179122925
    6. '   ' → logprob: -3.799851179122925
    7. '       ' → logprob: -3.799851179122925
    8. 'valid' → logprob: -3.799851179122925
    9. 'def' → logprob: -4.299851417541504
    10. 'prof' → logprob: -4.424851417541504

Token 745: ' filter' (ID: 6690)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3132970333099365
    2. 'products' → logprob: -1.3132970333099365
    3. 'profits' → logprob: -1.5632970333099365
    4. ' profitable' → logprob: -3.1882970333099365
    5. 'prices' → logprob: -3.1882970333099365
    6. 'items' → logprob: -3.3132970333099365
    7. 'product' → logprob: -3.6882970333099365
    8. 'from' → logprob: -3.9382970333099365
    9. 'profit' → logprob: -3.9382970333099365
    10. '   ' → logprob: -4.063297271728516

Token 746: ' products' (ID: 3891)
  Prédit: 'products'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'products' → logprob: -0.2012110948562622
    2. ' profitable' → logprob: -2.7012109756469727
    3. '       ' → logprob: -3.4512109756469727
    4. ' products' → logprob: -4.076210975646973
    5. 'items' → logprob: -4.326210975646973
    6. 'positive' → logprob: -4.576210975646973
    7. 'pro' → logprob: -4.951210975646973
    8. 'prof' → logprob: -5.076210975646973
    9. 'valid' → logprob: -5.451210975646973
    10. '_products' → logprob: -5.451210975646973

Token 747: ' with' (ID: 483)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1278107613325119
    2. ' =' → logprob: -2.2528107166290283
    3. '       ' → logprob: -4.877810955047607
    4. 'with' → logprob: -6.002810955047607
    5. '   ' → logprob: -7.002810955047607
    6. '_prof' → logprob: -7.127810955047607
    7. 'prof' → logprob: -7.127810955047607
    8. '_with' → logprob: -8.00281047821045
    9. 'sold' → logprob: -8.00281047821045
    10. '_s' → logprob: -8.12781047821045

Token 748: ' profit' (ID: 15971)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.9587334394454956
    2. ' mp' → logprob: -1.0837334394454956
    3. 'profit' → logprob: -2.083733558654785
    4. 'positive' → logprob: -2.208733558654785
    5. 'city' → logprob: -3.958733558654785
    6. 'product' → logprob: -4.958733558654785
    7. ' positive' → logprob: -5.083733558654785
    8. '>' → logprob: -6.083733558654785
    9. 'p' → logprob: -6.083733558654785
    10. ' profit' → logprob: -6.333733558654785

Token 749: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.03200576826930046
    2. ' >' → logprob: -4.532005786895752
    3. '=' → logprob: -4.907005786895752
    4. '_positive' → logprob: -4.907005786895752
    5. ' =' → logprob: -6.032005786895752
    6. 'positive' → logprob: -6.782005786895752
    7. '<=' → logprob: -7.657005786895752
    8. '_items' → logprob: -8.157005310058594
    9. '_per' → logprob: -8.657005310058594
    10. '   ' → logprob: -8.782005310058594

Token 750: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -17.375051498413086
    4. '>' → logprob: -17.375051498413086
    5. '```' → logprob: -17.875051498413086
    6. '=' → logprob: -18.250051498413086
    7. '
' → logprob: -18.375051498413086
    8. '۰' → logprob: -18.750051498413086
    9. '.' → logprob: -19.000051498413086
    10. '       ' → logprob: -19.000051498413086

Token 751: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.292490154504776
    2. ':' → logprob: -2.417490243911743
    3. '
' → logprob: -2.792490243911743
    4. '        
' → logprob: -2.917490243911743
    5. ',' → logprob: -4.542490005493164
    6. ' profitable' → logprob: -4.667490005493164
    7. ' with' → logprob: -5.417490005493164
    8. ':
' → logprob: -5.542490005493164
    9. 'positive' → logprob: -5.917490005493164
    10. 'products' → logprob: -6.042490005493164

Token 752: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03237422555685043
    2. ':' → logprob: -4.282374382019043
    3. ',' → logprob: -5.282374382019043
    4. '        
' → logprob: -5.282374382019043
    5. '
' → logprob: -5.407374382019043
    6. 'products' → logprob: -7.782374382019043
    7. ' profitable' → logprob: -8.032374382019043
    8. ' with' → logprob: -8.157374382019043
    9. ':
' → logprob: -8.532374382019043
    10. ' and' → logprob: -8.532374382019043

Token 753: ' products' (ID: 3891)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06071974337100983
    2. 'prof' → logprob: -3.5607197284698486
    3. ' profitable' → logprob: -4.810719966888428
    4. 'valid' → logprob: -5.185719966888428
    5. 'positive' → logprob: -5.435719966888428
    6. 'products' (adapté à ' products') → logprob: -6.435719966888428
    7. ' prof' → logprob: -6.560719966888428
    8. ' valid' → logprob: -6.560719966888428
    9. 'profit' → logprob: -6.685719966888428
    10. ' positive' → logprob: -6.810719966888428

Token 754: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17992806434631348
    2. ' =' → logprob: -1.8049280643463135
    3. '=[]' → logprob: -9.929927825927734
    4. '_pos' → logprob: -10.054927825927734
    5. '_positive' → logprob: -10.804927825927734
    6. '_in' → logprob: -10.929927825927734
    7. '_with' → logprob: -11.179927825927734
    8. '=[' → logprob: -11.679927825927734
    9. '=[]
' → logprob: -11.804927825927734
    10. '_prof' → logprob: -11.929927825927734

Token 755: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0943332388997078
    2. '[p' → logprob: -3.0943331718444824
    3. '[
' → logprob: -3.5943331718444824
    4. '[]
' → logprob: -4.344333171844482
    5. '[]' → logprob: -6.469333171844482
    6. '[item' → logprob: -7.844333171844482
    7. ' [' → logprob: -7.969333171844482
    8. '[c' → logprob: -7.969333171844482
    9. '[i' → logprob: -8.21933364868164
    10. '[m' → logprob: -8.34433364868164

Token 756: 'mp' (ID: 2211)
  Prédit: 'mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.023968864232301712
    2. '(mp' → logprob: -3.7739689350128174
    3. 'p' → logprob: -7.773968696594238
    4. '(p' → logprob: -9.398968696594238
    5. ' mp' → logprob: -10.148968696594238
    6. '(m' → logprob: -10.398968696594238
    7. '(' → logprob: -10.523968696594238
    8. '(M' → logprob: -10.523968696594238
    9. 'market' → logprob: -10.773968696594238
    10. 'Market' → logprob: -10.898968696594238

Token 757: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.029767731204628944
    2. 'for' → logprob: -3.5297677516937256
    3. '	for' → logprob: -11.404767990112305
    4. '           ' → logprob: -13.404767990112305
    5. '            ' → logprob: -14.279767990112305
    6. ' ' → logprob: -14.404767990112305
    7. '.product' → logprob: -14.529767990112305
    8. '
' → logprob: -14.654767990112305
    9. '   ' → logprob: -14.779767990112305
    10. '          ' → logprob: -15.029767990112305

Token 758: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.0013276183744892478
    2. ' mp' → logprob: -6.6263275146484375
    3. '	mp' → logprob: -13.626327514648438
    4. '(mp' → logprob: -15.376327514648438
    5. '   ' → logprob: -16.376327514648438
    6. '           ' → logprob: -16.751327514648438
    7. '       ' → logprob: -17.001327514648438
    8. '_mp' → logprob: -17.001327514648438
    9. '/mp' → logprob: -18.001327514648438
    10. '    ' → logprob: -18.251327514648438

Token 759: ' in' (ID: 306)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.18174602091312408
    2. ' city' → logprob: -1.806746006011963
    3. '.city' → logprob: -6.931746006011963
    4. 'mp' → logprob: -7.806746006011963
    5. ' in' → logprob: -8.056746482849121
    6. ' mp' → logprob: -9.056746482849121
    7. '(city' → logprob: -9.931746482849121
    8. 'in' → logprob: -10.181746482849121
    9. ' ' → logprob: -10.306746482849121
    10. '_city' → logprob: -11.306746482849121

Token 760: ' city' (ID: 5030)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -2.951771421066951e-05
    2. ' city' → logprob: -10.625029563903809
    3. '   ' → logprob: -12.625029563903809
    4. '
' → logprob: -14.375029563903809
    5. ' ' → logprob: -14.500029563903809
    6. 'market' → logprob: -15.375029563903809
    7. '           ' → logprob: -15.625029563903809
    8. '       ' → logprob: -15.875029563903809
    9. '(city' → logprob: -16.375028610229492
    10. '  ' → logprob: -16.750028610229492

Token 761: '.market' (ID: 120386)
  Prédit: '.market'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.market' → logprob: -0.0005469570169225335
    2. '.product' → logprob: -8.000547409057617
    3. '.' → logprob: -9.375547409057617
    4. '.products' → logprob: -10.250547409057617
    5. 'market' → logprob: -10.250547409057617
    6. '_market' → logprob: -11.000547409057617
    7. ' .' → logprob: -11.375547409057617
    8. '   ' → logprob: -12.375547409057617
    9. '._' → logprob: -12.750547409057617
    10. '.mark' → logprob: -13.000547409057617

Token 762: '_products' (ID: 68048)
  Prédit: '_products'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_products' → logprob: -5.848420551046729e-05
    2. 'products' → logprob: -9.8750581741333
    3. '_product' → logprob: -12.7500581741333
    4. 's' → logprob: -13.6250581741333
    5. 'product' → logprob: -13.8750581741333
    6. 'Products' → logprob: -14.7500581741333
    7. '
' → logprob: -15.0000581741333
    8. '_' → logprob: -15.3750581741333
    9. '_PRODUCTS' → logprob: -15.7500581741333
    10. '_
' → logprob: -15.8750581741333

Token 763: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02324792370200157
    2. 'if' → logprob: -3.7732479572296143
    3. '           ' → logprob: -13.523247718811035
    4. ']' → logprob: -14.898247718811035
    5. '       ' → logprob: -14.898247718811035
    6. '   ' → logprob: -15.648247718811035
    7. ' ' → logprob: -16.14824867248535
    8. '        ' → logprob: -17.02324867248535
    9. '    ' → logprob: -17.39824867248535
    10. '
' → logprob: -17.52324867248535

Token 764: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.02975187823176384
    2. ' mp' → logprob: -3.529751777648926
    3. '(mp' → logprob: -13.529751777648926
    4. '	mp' → logprob: -16.154752731323242
    5. '   ' → logprob: -18.779752731323242
    6. '/mp' → logprob: -19.029752731323242
    7. '_mp' → logprob: -19.529752731323242
    8. ' ' → logprob: -20.154752731323242
    9. '.mp' → logprob: -20.904752731323242
    10. '
' → logprob: -21.029752731323242

Token 765: '.pro' (ID: 3231)
  Prédit: '.pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pro' → logprob: -0.005629293154925108
    2. '.' → logprob: -5.505629062652588
    3. '.prof' → logprob: -6.755629062652588
    4. ' .' → logprob: -8.630629539489746
    5. 'profit' → logprob: -9.255629539489746
    6. '
' → logprob: -10.755629539489746
    7. ').' → logprob: -10.880629539489746
    8. '.
' → logprob: -11.505629539489746
    9. '   ' → logprob: -11.755629539489746
    10. '.prod' → logprob: -11.880629539489746

Token 766: 'fit' (ID: 8487)
  Prédit: 'fit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fit' → logprob: -0.0008174888207577169
    2. 'of' → logprob: -8.37581729888916
    3. 'profit' → logprob: -9.12581729888916
    4. 'it' → logprob: -9.50081729888916
    5. 'duct' → logprob: -9.50081729888916
    6. 'fits' → logprob: -10.12581729888916
    7. '.fit' → logprob: -10.12581729888916
    8. 'ift' → logprob: -10.62581729888916
    9. '```' → logprob: -10.62581729888916
    10. '>' → logprob: -10.87581729888916

Token 767: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.14269839227199554
    2. ' >' → logprob: -2.017698287963867
    3. '>
' → logprob: -11.642698287963867
    4. ' ' → logprob: -12.267698287963867
    5. ' >
' → logprob: -12.517698287963867
    6. '>

' → logprob: -13.892698287963867
    7. ')' → logprob: -14.017698287963867
    8. '&gt' → logprob: -14.142698287963867
    9. '   ' → logprob: -14.392698287963867
    10. ']' → logprob: -14.392698287963867

Token 768: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '۰' → logprob: -20.875003814697266
    4. '   ' → logprob: -21.750003814697266
    5. '00' → logprob: -22.125003814697266
    6. '
' → logprob: -22.750003814697266
    7. '=' → logprob: -22.750003814697266
    8. '```' → logprob: -23.125003814697266
    9. '<|end|>' → logprob: -23.250003814697266
    10. '  ' → logprob: -23.625003814697266

Token 769: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '۰' → logprob: -19.125001907348633
    4. '
' → logprob: -20.750001907348633
    5. '٠' → logprob: -21.625001907348633
    6. '   ' → logprob: -21.750001907348633
    7. ' ' → logprob: -21.875001907348633
    8. '  
' → logprob: -22.250001907348633
    9. '-' → logprob: -22.250001907348633
    10. '  ' → logprob: -22.375001907348633

Token 770: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007254178053699434
    2. ' ]' → logprob: -7.375725269317627
    3. '       ' → logprob: -9.625725746154785
    4. ']
' → logprob: -10.375725746154785
    5. ']

' → logprob: -13.500725746154785
    6. ' ]
' → logprob: -16.62572479248047
    7. '           ' → logprob: -17.00072479248047
    8. '   ' → logprob: -17.00072479248047
    9. ']
' → logprob: -17.50072479248047
    10. '`]' → logprob: -17.87572479248047

Token 771: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15824268758296967
    2. '
' → logprob: -2.533242702484131
    3. '        
' → logprob: -2.783242702484131
    4. '[' → logprob: -7.033242702484131
    5. ',' → logprob: -7.158242702484131
    6. '    
' → logprob: -7.408242702484131
    7. '  
' → logprob: -8.033242225646973
    8. '```' → logprob: -8.033242225646973
    9. 'return' → logprob: -8.158242225646973
    10. ')' → logprob: -8.283242225646973

Token 772: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02799101732671261
    2. '
' → logprob: -3.9029910564422607
    3. '        
' → logprob: -5.652990818023682
    4. ' if' → logprob: -6.777990818023682
    5. ' load' → logprob: -7.027990818023682
    6. 'if' (adapté à ' if') → logprob: -8.27799129486084
    7. '```' → logprob: -8.40299129486084
    8. 'from' → logprob: -8.52799129486084
    9. 'load' → logprob: -8.65299129486084
    10. 'result' → logprob: -8.77799129486084

Token 773: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.16022716462612152
    2. 'not' → logprob: -1.9102271795272827
    3. 'n' → logprob: -14.035226821899414
    4. 'len' → logprob: -14.285226821899414
    5. '	not' → logprob: -14.410226821899414
    6. ' no' → logprob: -15.410226821899414
    7. ' ' → logprob: -15.660226821899414
    8. ' len' → logprob: -15.910226821899414
    9. '
' → logprob: -16.035226821899414
    10. 'n't' → logprob: -16.285226821899414

Token 774: ' products' (ID: 3891)
  Prédit: 'products'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'products' → logprob: -0.006715728435665369
    2. ' products' → logprob: -5.006715774536133
    3. '(products' → logprob: -15.756715774536133
    4. 'product' → logprob: -17.131715774536133
    5. '
' → logprob: -17.131715774536133
    6. '.products' → logprob: -17.631715774536133
    7. 'produ' → logprob: -17.756715774536133
    8. 'productos' → logprob: -17.881715774536133
    9. 'pro' → logprob: -18.256715774536133
    10. 'p' → logprob: -18.381715774536133

Token 775: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001347138429991901
    2. ':return' → logprob: -6.876347064971924
    3. ':
' → logprob: -8.126347541809082
    4. 'return' → logprob: -11.126347541809082
    5. '   ' → logprob: -13.251347541809082
    6. '       ' → logprob: -14.626347541809082
    7. '):' → logprob: -14.626347541809082
    8. ' :' → logprob: -14.751347541809082
    9. ' return' → logprob: -15.501347541809082
    10. '           ' → logprob: -15.876347541809082

Token 776: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019876331090927124
    2. ':' → logprob: -4.394876480102539
    3. ':
' → logprob: -5.394876480102539
    4. 'return' → logprob: -6.519876480102539
    5. ':return' → logprob: -7.144876480102539
    6. ' return' → logprob: -8.019876480102539
    7. '       ' → logprob: -9.894876480102539
    8. ',' → logprob: -10.144876480102539
    9. '
' → logprob: -10.519876480102539
    10. '   ' → logprob: -11.019876480102539

Token 777: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8581018447875977
    2. '           ' → logprob: -0.9831018447875977
    3. ' return' → logprob: -1.6081018447875977
    4. '
' → logprob: -7.108101844787598
    5. '   ' → logprob: -7.233101844787598
    6. '	return' → logprob: -10.858101844787598
    7. '       ' → logprob: -11.233101844787598
    8. ' ' → logprob: -11.608101844787598
    9. '{return' → logprob: -12.233101844787598
    10. ':return' → logprob: -12.358101844787598

Token 778: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0011958249378949404
    2. ' []' → logprob: -6.751195907592773
    3. '[' → logprob: -11.251195907592773
    4. '{}' → logprob: -12.126195907592773
    5. '[]
' → logprob: -12.251195907592773
    6. '[]}' → logprob: -13.626195907592773
    7. '[]

' → logprob: -14.251195907592773
    8. 'None' → logprob: -15.126195907592773
    9. '[],' → logprob: -16.001195907592773
    10. '[])' → logprob: -16.751195907592773

Token 779: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0182964950799942
    2. '       ' → logprob: -4.518296718597412
    3. '        
' → logprob: -5.393296718597412
    4. '

' → logprob: -6.518296718597412
    5. '<|end|>' → logprob: -7.393296718597412
    6. '
' → logprob: -9.143296241760254
    7. '[]
' → logprob: -9.268296241760254
    8. '    
' → logprob: -9.768296241760254
    9. '```' → logprob: -9.768296241760254
    10. '\n' → logprob: -10.143296241760254

Token 780: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.031777262687683105
    2. '       ' → logprob: -4.031777381896973
    3. '        
' → logprob: -4.781777381896973
    4. '

' → logprob: -5.531777381896973
    5. '
' → logprob: -8.031777381896973
    6. '[]
' → logprob: -8.531777381896973
    7. '```' → logprob: -8.781777381896973
    8. '[' → logprob: -9.281777381896973
    9. '[
' → logprob: -9.906777381896973
    10. 'from' → logprob: -10.031777381896973

Token 781: ' no' (ID: 860)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.04319717362523079
    2. '[]
' → logprob: -3.7931971549987793
    3. 'return' → logprob: -4.543197154998779
    4. '           ' → logprob: -5.418197154998779
    5. '       ' → logprob: -6.168197154998779
    6. ' []' → logprob: -6.418197154998779
    7. ' return' → logprob: -7.793197154998779
    8. '[]

' → logprob: -8.668197631835938
    9. '   ' → logprob: -9.293197631835938
    10. ' []
' → logprob: -9.418197631835938

Token 782: ' profitable' (ID: 42749)
  Prédit: 'load'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'load' → logprob: -0.3694363236427307
    2. 'products' → logprob: -2.119436264038086
    3. ' load' → logprob: -2.994436264038086
    4. 'profits' → logprob: -3.119436264038086
    5. 'valid' → logprob: -3.869436264038086
    6. 'profit' → logprob: -4.369436264038086
    7. ' profitable' → logprob: -4.494436264038086
    8. 'possible' → logprob: -4.494436264038086
    9. ' products' → logprob: -5.119436264038086
    10. ' valid' → logprob: -5.119436264038086

Token 783: ' products' (ID: 3891)
  Prédit: 'products'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'products' → logprob: -0.6512265801429749
    2. 'load' → logprob: -1.15122652053833
    3. ' load' → logprob: -2.52622652053833
    4. ' products' → logprob: -2.65122652053833
    5. 'product' → logprob: -5.77622652053833
    6. 'items' → logprob: -6.02622652053833
    7. 'return' → logprob: -6.65122652053833
    8. 's' → logprob: -7.40122652053833
    9. 'loads' → logprob: -7.40122652053833
    10. ' trips' → logprob: -7.52622652053833

Token 784: ' here' (ID: 2105)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6525936722755432
    2. '
' → logprob: -1.0275936126708984
    3. '        
' → logprob: -2.1525936126708984
    4. '

' → logprob: -6.027593612670898
    5. '        

' → logprob: -6.777593612670898
    6. '    
' → logprob: -7.777593612670898
    7. 'from' → logprob: -8.527593612670898
    8. ',' → logprob: -8.777593612670898
    9. '  
' → logprob: -9.027593612670898
    10. '```' → logprob: -9.027593612670898

Token 785: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5747625827789307
    2. '       ' → logprob: -1.0747625827789307
    3. '        
' → logprob: -2.6997625827789307
    4. '<|end|>' → logprob: -3.8247625827789307
    5. '

' → logprob: -6.949762344360352
    6. '
' → logprob: -7.324762344360352
    7. '  
' → logprob: -7.449762344360352
    8. '    
' → logprob: -7.574762344360352
    9. '[' → logprob: -7.824762344360352
    10. '<|end|>' → logprob: -7.949762344360352

Token 786: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1936405748128891
    2. '
' → logprob: -2.3186404705047607
    3. '        
' → logprob: -2.6936404705047607
    4. 'from' → logprob: -5.06864070892334
    5. 'result' → logprob: -7.31864070892334
    6. 'import' → logprob: -7.69364070892334
    7. '  
' → logprob: -7.81864070892334
    8. '    
' → logprob: -7.81864070892334
    9. ' from' → logprob: -8.06864070892334
    10. '```' → logprob: -8.19364070892334

Token 787: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.13093101978302
    2. 'from' → logprob: -1.25593101978302
    3. 'dp' → logprob: -1.63093101978302
    4. 'load' → logprob: -1.88093101978302
    5. 'result' → logprob: -3.6309309005737305
    6. ' from' → logprob: -5.5059309005737305
    7. 'n' → logprob: -5.7559309005737305
    8. ' load' → logprob: -5.8809309005737305
    9. 'results' → logprob: -6.2559309005737305
    10. 'res' → logprob: -6.6309309005737305

Token 788: ' Define' (ID: 38966)
  Prédit: 'load'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'load' → logprob: -0.511817455291748
    2. 'from' → logprob: -1.261817455291748
    3. 'dp' → logprob: -3.011817455291748
    4. '#' → logprob: -3.761817455291748
    5. 'result' → logprob: -3.761817455291748
    6. 'n' → logprob: -5.136817455291748
    7. 'res' → logprob: -5.261817455291748
    8. 'results' → logprob: -6.011817455291748
    9. 'max' → logprob: -6.386817455291748
    10. 'import' → logprob: -6.636817455291748

Token 789: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.19060729444026947
    2. 'items' → logprob: -3.0656073093414307
    3. 'load' → logprob: -3.1906073093414307
    4. 'n' → logprob: -3.4406073093414307
    5. 'def' → logprob: -3.9406073093414307
    6. '   ' → logprob: -4.565607070922852
    7. 'res' → logprob: -5.315607070922852
    8. 'max' → logprob: -5.440607070922852
    9. ' dp' → logprob: -5.940607070922852
    10. 'result' → logprob: -6.065607070922852

Token 790: '[w' (ID: 94341)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009311995469033718
    2. '=' → logprob: -4.884312152862549
    3. '       ' → logprob: -7.884312152862549
    4. 'dp' → logprob: -8.00931167602539
    5. '_dp' → logprob: -8.50931167602539
    6. '   ' → logprob: -8.75931167602539
    7. '_capacity' → logprob: -9.00931167602539
    8. '_size' → logprob: -9.38431167602539
    9. '```' → logprob: -9.50931167602539
    10. '_weight' → logprob: -9.88431167602539

Token 791: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5880820751190186
    2. ']' → logprob: -0.8380820751190186
    3. '=' → logprob: -5.213082313537598
    4. ':' → logprob: -5.588082313537598
    5. ']=' → logprob: -6.338082313537598
    6. ']:' → logprob: -7.338082313537598
    7. ' ]' → logprob: -8.463082313537598
    8. 's' → logprob: -9.838082313537598
    9. '   ' → logprob: -9.963082313537598
    10. '][' → logprob: -10.213082313537598

Token 792: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38696756958961487
    2. '=' → logprob: -1.1369675397872925
    3. ':' → logprob: -9.386967658996582
    4. '=[' → logprob: -12.011967658996582
    5. '=[]' → logprob: -14.136967658996582
    6. '=[]
' → logprob: -14.136967658996582
    7. '   ' → logprob: -14.136967658996582
    8. ',' → logprob: -14.261967658996582
    9. ' =[' → logprob: -14.386967658996582
    10. '[' → logprob: -14.511967658996582

Token 793: ' max' (ID: 2999)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29780757427215576
    2. '(-' → logprob: -1.9228075742721558
    3. '0' → logprob: -2.2978076934814453
    4. '-' → logprob: -5.047807693481445
    5. '(None' → logprob: -5.922807693481445
    6. 'None' → logprob: -6.922807693481445
    7. ' (' → logprob: -8.172807693481445
    8. '[' → logprob: -9.047807693481445
    9. '(float' → logprob: -9.047807693481445
    10. '[-' → logprob: -9.172807693481445

Token 794: ' profit' (ID: 15971)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.6442880034446716
    2. '_profit' → logprob: -0.8942880034446716
    3. ' profit' → logprob: -2.7692880630493164
    4. '   ' → logprob: -6.894288063049316
    5. '[' → logprob: -7.144288063049316
    6. '_pro' → logprob: -8.019288063049316
    7. '
' → logprob: -9.394288063049316
    8. '       ' → logprob: -9.519288063049316
    9. 'Profit' → logprob: -9.644288063049316
    10. '```' → logprob: -9.644288063049316

Token 795: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24532173573970795
    2. '=' → logprob: -1.7453217506408691
    3. ',' → logprob: -3.995321750640869
    4. ' for' → logprob: -4.995321750640869
    5. '       ' → logprob: -5.495321750640869
    6. 'for' → logprob: -5.620321750640869
    7. '   ' → logprob: -5.620321750640869
    8. ':' → logprob: -6.745321750640869
    9. '[' → logprob: -7.370321750640869
    10. '.' → logprob: -7.620321750640869

Token 796: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -1.1819278001785278
    2. 'w' → logprob: -1.4319278001785278
    3. '0' → logprob: -1.8069278001785278
    4. 'products' → logprob: -2.4319276809692383
    5. ' w' → logprob: -2.6819276809692383
    6. ' weight' → logprob: -3.1819276809692383
    7. '[' → logprob: -4.181927680969238
    8. ' products' → logprob: -4.806927680969238
    9. 'product' → logprob: -4.806927680969238
    10. 'the' → logprob: -5.056927680969238

Token 797: ' <=' (ID: 5017)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.2721838653087616
    2. '=' → logprob: -1.897183895111084
    3. ' =' → logprob: -3.897183895111084
    4. '=w' → logprob: -3.897183895111084
    5. '0' → logprob: -4.147183895111084
    6. '[w' → logprob: -4.772183895111084
    7. '_w' → logprob: -5.022183895111084
    8. ']' → logprob: -5.897183895111084
    9. '
' → logprob: -6.147183895111084
    10. ' w' → logprob: -6.147183895111084

Token 798: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0006273718317970634
    2. ' w' → logprob: -7.375627517700195
    3. '
' → logprob: -15.625627517700195
    4. '   ' → logprob: -16.125627517700195
    5. '_w' → logprob: -16.125627517700195
    6. ' ' → logprob: -16.500627517700195
    7. ' ' → logprob: -16.500627517700195
    8. '	w' → logprob: -16.625627517700195
    9. '=w' → logprob: -16.750627517700195
    10. '[w' → logprob: -17.625627517700195

Token 799: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.044299304485321045
    2. '       ' → logprob: -3.544299364089966
    3. '=' → logprob: -4.669299125671387
    4. ':' → logprob: -6.419299125671387
    5. ',' → logprob: -6.794299125671387
    6. 'dp' → logprob: -7.419299125671387
    7. '   ' → logprob: -7.544299125671387
    8. '[' → logprob: -8.169299125671387
    9. ' dp' → logprob: -8.294299125671387
    10. '
' → logprob: -9.169299125671387

Token 800: ' these' (ID: 1879)
  Prédit: 'products'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'products' → logprob: -0.05649903789162636
    2. ' products' → logprob: -3.0564990043640137
    3. '[]' → logprob: -6.181499004364014
    4. '[' → logprob: -6.431499004364014
    5. 'the' → logprob: -7.056499004364014
    6. '[]
' → logprob: -7.056499004364014
    7. ' the' → logprob: -7.431499004364014
    8. 'subset' → logprob: -7.931499004364014
    9. 'product' → logprob: -8.056499481201172
    10. ' these' → logprob: -8.556499481201172

Token 801: ' products' (ID: 3891)
  Prédit: 'products'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'products' → logprob: -0.2067488431930542
    2. ' products' → logprob: -1.9567488431930542
    3. '_products' → logprob: -3.4567489624023438
    4. '[' → logprob: -6.456748962402344
    5. '(products' → logprob: -6.581748962402344
    6. ']' → logprob: -6.581748962402344
    7. '_' → logprob: -6.956748962402344
    8. ' =' → logprob: -7.081748962402344
    9. '
' → logprob: -7.081748962402344
    10. '=' → logprob: -7.206748962402344

Token 802: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3479325473308563
    2. ' =' → logprob: -2.0979325771331787
    3. '
' → logprob: -2.4729325771331787
    4. ',' → logprob: -3.7229325771331787
    5. 'dp' → logprob: -3.8479325771331787
    6. ':' → logprob: -3.9729325771331787
    7. '=' → logprob: -5.2229323387146
    8. ' dp' → logprob: -5.4729323387146
    9. '        
' → logprob: -5.5979323387146
    10. '   ' → logprob: -5.9729323387146

Token 803: 'un' (ID: 373)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.128793865442276
    2. ')
' → logprob: -3.503793954849243
    3. ' )' → logprob: -4.003793716430664
    4. '[' → logprob: -4.128793716430664
    5. ',' → logprob: -4.378793716430664
    6. '),' → logprob: -4.628793716430664
    7. ' and' → logprob: -5.503793716430664
    8. 'products' → logprob: -5.628793716430664
    9. ']' → logprob: -5.753793716430664
    10. ' products' → logprob: -5.878793716430664

Token 804: 'bounded' (ID: 135171)
  Prédit: 'bounded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bounded' → logprob: -0.004011322278529406
    2. '
' → logprob: -6.504011154174805
    3. 'bound' → logprob: -7.129011154174805
    4. 'limited' → logprob: -7.254011154174805
    5. '```' → logprob: -7.379011154174805
    6. 'def' → logprob: -9.504011154174805
    7. 'der' → logprob: -10.254011154174805
    8. '   ' → logprob: -10.254011154174805
    9. ')' → logprob: -10.379011154174805
    10. 'defined' → logprob: -10.504011154174805

Token 805: ' kn' (ID: 1313)
  Prédit: ' kn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' kn' → logprob: -0.1425771564245224
    2. ')' → logprob: -2.6425771713256836
    3. 'kn' → logprob: -3.5175771713256836
    4. ' items' → logprob: -4.142577171325684
    5. '_kn' → logprob: -4.392577171325684
    6. 'items' → logprob: -6.892577171325684
    7. ' )' → logprob: -7.392577171325684
    8. '_' → logprob: -7.642577171325684
    9. '   ' → logprob: -8.517577171325684
    10. ' ' → logprob: -8.642577171325684

Token 806: 'apsack' (ID: 178559)
  Prédit: 'apsack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apsack' → logprob: -0.0006644221721217036
    2. 'ap' → logprob: -7.375664234161377
    3. 'aps' → logprob: -10.250664710998535
    4. '
' → logprob: -14.250664710998535
    5. 'p' → logprob: -15.125664710998535
    6. '[' → logprob: -15.250664710998535
    7. '```' → logprob: -15.250664710998535
    8. '

' → logprob: -15.875664710998535
    9. 'a' → logprob: -16.12566375732422
    10. 'ack' → logprob: -16.12566375732422

Token 807: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44646596908569336
    2. ']' → logprob: -1.5714659690856934
    3. '       ' → logprob: -2.4464659690856934
    4. ',' → logprob: -4.196465969085693
    5. ')
' → logprob: -4.571465969085693
    6. '   ' → logprob: -5.196465969085693
    7. '
' → logprob: -5.321465969085693
    8. '])' → logprob: -5.446465969085693
    9. ' for' → logprob: -5.571465969085693
    10. ' )' → logprob: -6.196465969085693

Token 808: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06225806102156639
    2. 'dp' → logprob: -3.687258005142212
    3. ' dp' → logprob: -3.812258005142212
    4. '
' → logprob: -4.687258243560791
    5. '   ' → logprob: -6.437258243560791
    6. ' =' → logprob: -7.187258243560791
    7. ',' → logprob: -7.187258243560791
    8. '        
' → logprob: -8.062257766723633
    9. '=' → logprob: -9.062257766723633
    10. '```' → logprob: -9.562257766723633

Token 809: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.3709377944469452
    2. '       ' → logprob: -1.6209378242492676
    3. ' dp' → logprob: -2.2459378242492676
    4. '
' → logprob: -5.370937824249268
    5. '   ' → logprob: -6.620937824249268
    6. '        
' → logprob: -9.12093734741211
    7. '_dp' → logprob: -9.12093734741211
    8. '```' → logprob: -9.87093734741211
    9. '	dp' → logprob: -10.12093734741211
    10. '    
' → logprob: -11.62093734741211

Token 810: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16024088859558105
    2. '=' → logprob: -1.910240888595581
    3. '[' → logprob: -12.28524112701416
    4. ':' → logprob: -12.28524112701416
    5. '=[' → logprob: -12.53524112701416
    6. ' =[' → logprob: -13.16024112701416
    7. '_' → logprob: -14.66024112701416
    8. '=[]' → logprob: -14.78524112701416
    9. ' ' → logprob: -15.28524112701416
    10. ')' → logprob: -15.78524112701416

Token 811: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00044544681441038847
    2. ' [' → logprob: -7.750445365905762
    3. '[-' → logprob: -11.250445365905762
    4. '{' → logprob: -13.500445365905762
    5. '[int' → logprob: -16.000446319580078
    6. '[self' → logprob: -16.375446319580078
    7. '   ' → logprob: -17.000446319580078
    8. ' [-' → logprob: -17.875446319580078
    9. ' ' → logprob: -19.875446319580078
    10. '0' → logprob: -20.000446319580078

Token 812: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028709694743156433
    2. '-' → logprob: -5.877871036529541
    3. '(' → logprob: -10.627870559692383
    4. 'float' → logprob: -10.752870559692383
    5. '-(' → logprob: -11.252870559692383
    6. '[' → logprob: -12.502870559692383
    7. '(-' → logprob: -13.627870559692383
    8. '[-' → logprob: -13.877870559692383
    9. ' ' → logprob: -14.752870559692383
    10. '-f' → logprob: -15.127870559692383

Token 813: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.037667758762836456
    2. ']*(' → logprob: -3.412667751312256
    3. ']*' → logprob: -5.537667751312256
    4. ' ]' → logprob: -10.537668228149414
    5. ']+' → logprob: -10.787668228149414
    6. ' for' → logprob: -11.037668228149414
    7. 'for' → logprob: -12.412668228149414
    8. ' *' → logprob: -12.787668228149414
    9. '*' → logprob: -12.912668228149414
    10. '*(' → logprob: -13.037668228149414

Token 814: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001463299704482779
    2. ' self' → logprob: -9.25014591217041
    3. '(self' → logprob: -10.25014591217041
    4. '[self' → logprob: -11.75014591217041
    5. '
' → logprob: -12.62514591217041
    6. '=self' → logprob: -13.00014591217041
    7. ')' → logprob: -15.50014591217041
    8. 'W' → logprob: -15.75014591217041
    9. '<|end|>' → logprob: -15.75014591217041
    10. '

' → logprob: -16.125146865844727

Token 815: '.W' (ID: 2342)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.02621692791581154
    2. '[' → logprob: -4.401216983795166
    3. '.W' → logprob: -4.526216983795166
    4. 'self' → logprob: -5.901216983795166
    5. ' W' → logprob: -11.151216506958008
    6. 'w' → logprob: -12.151216506958008
    7. ' self' → logprob: -12.401216506958008
    8. '{' → logprob: -12.651216506958008
    9. '_W' → logprob: -12.776216506958008
    10. '<W' → logprob: -12.776216506958008

Token 816: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008616226725280285
    2. ' +' → logprob: -4.7586164474487305
    3. '+
' → logprob: -13.50861644744873
    4. ' +
' → logprob: -15.75861644744873
    5. ')+' → logprob: -16.258615493774414
    6. '+)' → logprob: -17.133615493774414
    7. ')' → logprob: -17.883615493774414
    8. '0' → logprob: -19.008615493774414
    9. '[' → logprob: -19.008615493774414
    10. ' ' → logprob: -19.133615493774414

Token 817: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '
' → logprob: -19.75
    4. '   ' → logprob: -20.875
    5. '+' → logprob: -22.25
    6. '```' → logprob: -22.625
    7. '

' → logprob: -22.75
    8. ')' → logprob: -23.125
    9. '１' → logprob: -24.125
    10. '100' → logprob: -24.375

Token 818: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008208265644498169
    2. ')
' → logprob: -7.125820636749268
    3. '+' → logprob: -11.375821113586426
    4. ' )' → logprob: -13.125821113586426
    5. '       ' → logprob: -14.375821113586426
    6. '
' → logprob: -14.625821113586426
    7. '+)' → logprob: -14.750821113586426
    8. '),' → logprob: -15.000821113586426
    9. ')
' → logprob: -15.000821113586426
    10. ')

' → logprob: -15.500821113586426

Token 819: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4483874440193176
    2. 'for' → logprob: -1.0733873844146729
    3. ' for' → logprob: -4.198387622833252
    4. 'count' → logprob: -6.323387622833252
    5. 'quantity' → logprob: -6.823387622833252
    6. 'prev' → logprob: -7.698387622833252
    7. 'next' → logprob: -8.198387145996094
    8. '   ' → logprob: -8.448387145996094
    9. 'counts' → logprob: -8.573387145996094
    10. 'qty' → logprob: -9.323387145996094

Token 820: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.37037837505340576
    2. 'choice' → logprob: -1.7453783750534058
    3. '       ' → logprob: -2.6203784942626953
    4. 'item' → logprob: -3.7453784942626953
    5. ' for' → logprob: -3.8703784942626953
    6. '   ' → logprob: -5.370378494262695
    7. 'prev' → logprob: -5.495378494262695
    8. 'trace' → logprob: -6.245378494262695
    9. ' choice' → logprob: -6.370378494262695
    10. 'path' → logprob: -6.995378494262695

Token 821: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.019369596615433693
    2. 'p' → logprob: -4.144369602203369
    3. ' mp' → logprob: -6.269369602203369
    4. 'prod' → logprob: -7.394369602203369
    5. 'product' → logprob: -7.519369602203369
    6. 'w' → logprob: -8.519369125366211
    7. 'i' → logprob: -10.019369125366211
    8. ' p' → logprob: -11.519369125366211
    9. '
' → logprob: -12.144369125366211
    10. 'weight' → logprob: -12.644369125366211

Token 822: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07030118256807327
    2. 'in' → logprob: -2.6953012943267822
    3. '.' → logprob: -8.695301055908203
    4. ' ' → logprob: -9.820301055908203
    5. ',' → logprob: -9.945301055908203
    6. ')' → logprob: -11.070301055908203
    7. '  ' → logprob: -11.695301055908203
    8. '   ' → logprob: -11.695301055908203
    9. '<|end|>' → logprob: -11.695301055908203
    10. ':' → logprob: -12.070301055908203

Token 823: ' products' (ID: 3891)
  Prédit: 'products'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'products' → logprob: -0.0004988207365386188
    2. ' products' → logprob: -7.6254987716674805
    3. '   ' → logprob: -12.62549877166748
    4. '[' → logprob: -12.75049877166748
    5. ' ' → logprob: -13.87549877166748
    6. 'product' → logprob: -14.00049877166748
    7. '(products' → logprob: -14.12549877166748
    8. '.products' → logprob: -14.62549877166748
    9. '  ' → logprob: -14.75049877166748
    10. '
' → logprob: -15.50049877166748

Token 824: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1003151461482048
    2. ':
' → logprob: -2.3503150939941406
    3. ' :' → logprob: -9.97531509399414
    4. ' :
' → logprob: -10.60031509399414
    5. ',' → logprob: -10.97531509399414
    6. ':
' → logprob: -11.97531509399414
    7. '   ' → logprob: -12.10031509399414
    8. '[' → logprob: -13.47531509399414
    9. '           ' → logprob: -13.72531509399414
    10. '.' → logprob: -13.85031509399414

Token 825: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02060285210609436
    2. ' for' → logprob: -4.520602703094482
    3. '               ' → logprob: -5.395602703094482
    4. ':' → logprob: -6.770602703094482
    5. '   ' → logprob: -7.020602703094482
    6. '	       ' → logprob: -7.395602703094482
    7. '       ' → logprob: -7.645602703094482
    8. '            ' → logprob: -7.770602703094482
    9. ',' → logprob: -8.02060317993164
    10. ' ' → logprob: -8.89560317993164

Token 826: ' w' (ID: 286)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1171327754855156
    2. ' for' → logprob: -2.2421326637268066
    3. 'w' (adapté à ' w') → logprob: -5.742132663726807
    4. 'weight' → logprob: -7.242132663726807
    5. ' w' → logprob: -8.367133140563965
    6. '   ' → logprob: -9.242133140563965
    7. ' weight' → logprob: -10.117133140563965
    8. '       ' → logprob: -12.867133140563965
    9. 'wt' → logprob: -13.117133140563965
    10. '
' → logprob: -13.992133140563965

Token 827: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4982047975063324
    2. ' =' → logprob: -0.9982048273086548
    3. ' in' → logprob: -3.9982047080993652
    4. 'in' → logprob: -5.998204708099365
    5. ',' → logprob: -7.123204708099365
    6. 'w' → logprob: -7.498204708099365
    7. '.' → logprob: -8.123205184936523
    8. ' ' → logprob: -8.498205184936523
    9. ':' → logprob: -8.748205184936523
    10. '   ' → logprob: -8.748205184936523

Token 828: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -7.941850526549388e-06
    2. ' mp' → logprob: -11.750007629394531
    3. '(mp' → logprob: -18.75000762939453
    4. '	mp' → logprob: -19.62500762939453
    5. '_mp' → logprob: -20.50000762939453
    6. '/mp' → logprob: -22.25000762939453
    7. '.mp' → logprob: -22.87500762939453
    8. '   ' → logprob: -23.87500762939453
    9. 'mc' → logprob: -24.00000762939453
    10. 'm' → logprob: -25.37500762939453

Token 829: '.product' (ID: 21166)
  Prédit: '.product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.product' → logprob: -0.13070811331272125
    2. '.weight' → logprob: -2.1307082176208496
    3. '.' → logprob: -6.38070821762085
    4. 'product' → logprob: -7.25570821762085
    5. ' .' → logprob: -7.50570821762085
    6. '.pro' → logprob: -7.75570821762085
    7. 'weight' → logprob: -8.130707740783691
    8. '.w' → logprob: -10.380707740783691
    9. '.prod' → logprob: -11.505707740783691
    10. '.mp' → logprob: -11.755707740783691

Token 830: '.weight' (ID: 49415)
  Prédit: '.weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.weight' → logprob: -0.000500966387335211
    2. 'weight' → logprob: -7.6255011558532715
    3. '.' → logprob: -11.500500679016113
    4. ' weight' → logprob: -13.750500679016113
    5. '_weight' → logprob: -14.125500679016113
    6. ' .' → logprob: -14.500500679016113
    7. '.weights' → logprob: -16.00050163269043
    8. '```' → logprob: -16.00050163269043
    9. '.Weight' → logprob: -16.75050163269043
    10. 'Weight' → logprob: -17.50050163269043

Token 831: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0984807014465332
    2. ' for' → logprob: -1.2234807014465332
    3. 'for' → logprob: -1.7234807014465332
    4. '<|end|>' → logprob: -2.973480701446533
    5. '           ' → logprob: -3.348480701446533
    6. '<|end|>' → logprob: -4.098480701446533
    7. '       ' → logprob: -4.598480701446533
    8. '   ' → logprob: -4.723480701446533
    9. ' ' → logprob: -4.723480701446533
    10. '        ' → logprob: -4.848480701446533

Token 832: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0770728588104248
    2. ' 
' → logprob: -1.0770728588104248
    3. ' for' → logprob: -2.077072858810425
    4. '           ' → logprob: -2.452072858810425
    5. '  
' → logprob: -3.452072858810425
    6. '
' → logprob: -3.827072858810425
    7. 'for' → logprob: -4.077073097229004
    8. ',' → logprob: -5.452073097229004
    9. '            
' → logprob: -5.702073097229004
    10. '   
' → logprob: -5.702073097229004

Token 833: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.01432204619050026
    2. 'for' → logprob: -4.264322280883789
    3. 'profit' → logprob: -9.639322280883789
    4. 'v' → logprob: -10.514322280883789
    5. 'if' → logprob: -11.139322280883789
    6. ' p' → logprob: -11.139322280883789
    7. '```' → logprob: -11.764322280883789
    8. ' for' → logprob: -11.764322280883789
    9. 'prof' → logprob: -12.014322280883789
    10. 'c' → logprob: -12.889322280883789

Token 834: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7266683578491211
    2. 'ro' → logprob: -0.9766683578491211
    3. ' =' → logprob: -2.351668357849121
    4. 'r' → logprob: -3.226668357849121
    5. 'rof' → logprob: -5.726668357849121
    6. '```' → logprob: -7.976668357849121
    7. '   ' → logprob: -8.226668357849121
    8. '=
' → logprob: -8.726668357849121
    9. ' ' → logprob: -9.101668357849121
    10. '	' → logprob: -9.851668357849121

Token 835: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -9.627176768844947e-05
    2. ' mp' → logprob: -9.250096321105957
    3. '	mp' → logprob: -17.25009536743164
    4. '(mp' → logprob: -17.50009536743164
    5. '/mp' → logprob: -18.00009536743164
    6. 'max' → logprob: -18.62509536743164
    7. '_mp' → logprob: -19.00009536743164
    8. '.mp' → logprob: -19.12509536743164
    9. 'dp' → logprob: -19.25009536743164
    10. 'mc' → logprob: -19.75009536743164

Token 836: '.pro' (ID: 3231)
  Prédit: '.pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pro' → logprob: -0.0038085037376731634
    2. 'profit' → logprob: -5.628808498382568
    3. '.product' → logprob: -8.753808975219727
    4. '.prof' → logprob: -10.503808975219727
    5. '.' → logprob: -12.128808975219727
    6. '.prod' → logprob: -12.253808975219727
    7. 'pro' → logprob: -12.878808975219727
    8. ' .' → logprob: -12.878808975219727
    9. '	pro' → logprob: -13.128808975219727
    10. ' profit' → logprob: -13.253808975219727

Token 837: 'fit' (ID: 8487)
  Prédit: 'fit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fit' → logprob: -0.0003851517685689032
    2. 'of' → logprob: -8.000385284423828
    3. 'profit' → logprob: -10.375385284423828
    4. 'f' → logprob: -12.625385284423828
    5. 'it' → logprob: -13.375385284423828
    6. ' fit' → logprob: -13.500385284423828
    7. 'oft' → logprob: -13.875385284423828
    8. '0' → logprob: -14.000385284423828
    9. 'ro' → logprob: -14.000385284423828
    10. '   ' → logprob: -14.000385284423828

Token 838: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14408117532730103
    2. '
' → logprob: -2.0190811157226562
    3. ' for' → logprob: -7.894081115722656
    4. '       ' → logprob: -8.144081115722656
    5. 'for' → logprob: -9.269081115722656
    6. ',' → logprob: -9.394081115722656
    7. '               ' → logprob: -9.394081115722656
    8. ' 
' → logprob: -9.394081115722656
    9. '  
' → logprob: -9.519081115722656
    10. '            
' → logprob: -9.519081115722656

Token 839: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005934244254603982
    2. ' for' → logprob: -7.625593662261963
    3. 'for' → logprob: -10.250593185424805
    4. ',' → logprob: -10.500593185424805
    5. '       ' → logprob: -11.000593185424805
    6. '               ' → logprob: -11.750593185424805
    7. '            
' → logprob: -12.750593185424805
    8. '	       ' → logprob: -12.750593185424805
    9. '		' → logprob: -13.375593185424805
    10. '
' → logprob: -13.375593185424805

Token 840: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3871530592441559
    2. ' for' → logprob: -1.1371530294418335
    3. '           ' → logprob: -8.262152671813965
    4. '   ' → logprob: -10.887152671813965
    5. '       ' → logprob: -13.137152671813965
    6. 'i' → logprob: -14.387152671813965
    7. ' i' → logprob: -14.637152671813965
    8. ' ' → logprob: -14.637152671813965
    9. '               ' → logprob: -14.887152671813965
    10. 'j' → logprob: -15.262152671813965

Token 841: ' Un' (ID: 1367)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00671940203756094
    2. ' for' → logprob: -5.006719589233398
    3. '   ' → logprob: -12.631719589233398
    4. '           ' → logprob: -14.506719589233398
    5. '       ' → logprob: -16.5067195892334
    6. ' ' → logprob: -16.8817195892334
    7. 'i' → logprob: -17.5067195892334
    8. '  ' → logprob: -17.8817195892334
    9. 'fo' → logprob: -18.2567195892334
    10. '    ' → logprob: -18.8817195892334

Token 842: 'bounded' (ID: 135171)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49074646830558777
    2. ' for' → logprob: -1.4907464981079102
    3. '       ' → logprob: -2.24074649810791
    4. 'bounded' → logprob: -3.24074649810791
    5. 'def' → logprob: -5.74074649810791
    6. '```' → logprob: -6.11574649810791
    7. 'range' → logprob: -6.24074649810791
    8. '
' → logprob: -6.61574649810791
    9. '=' → logprob: -6.74074649810791
    10. '#' → logprob: -6.99074649810791

Token 843: ' kn' (ID: 1313)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008624386973679066
    2. ' for' → logprob: -4.75862455368042
    3. '           ' → logprob: -11.758624076843262
    4. '       ' → logprob: -14.258624076843262
    5. '   ' → logprob: -14.383624076843262
    6. '_for' → logprob: -15.008624076843262
    7. '    ' → logprob: -15.883624076843262
    8. '
' → logprob: -16.633625030517578
    9. '            ' → logprob: -16.633625030517578
    10. '               ' → logprob: -16.633625030517578

Token 844: 'apsack' (ID: 178559)
  Prédit: 'apsack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apsack' → logprob: -3.47626737493556e-05
    2. 'ap' → logprob: -10.37503433227539
    3. 'aps' → logprob: -12.62503433227539
    4. 'n' → logprob: -17.50003433227539
    5. 'pack' → logprob: -18.12503433227539
    6. 'p' → logprob: -18.25003433227539
    7. 'a' → logprob: -18.25003433227539
    8. 'nap' → logprob: -19.00003433227539
    9. 'app' → logprob: -19.50003433227539
    10. 'ack' → logprob: -19.62503433227539

Token 845: ' update' (ID: 4027)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5921177864074707
    2. '           ' → logprob: -1.2171177864074707
    3. 'for' → logprob: -1.9671177864074707
    4. '
' → logprob: -4.967117786407471
    5. '       ' → logprob: -5.592117786407471
    6. '   ' → logprob: -9.467117309570312
    7. '	for' → logprob: -10.842117309570312
    8. ',' → logprob: -10.967117309570312
    9. '            
' → logprob: -11.092117309570312
    10. '	       ' → logprob: -11.467117309570312

Token 846: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22832097113132477
    2. 'for' → logprob: -1.7283209562301636
    3. '
' → logprob: -3.978321075439453
    4. '           ' → logprob: -5.103321075439453
    5. '       ' → logprob: -6.478321075439453
    6. ' 
' → logprob: -9.228321075439453
    7. '   ' → logprob: -10.603321075439453
    8. '               ' → logprob: -10.978321075439453
    9. '	for' → logprob: -11.103321075439453
    10. '            
' → logprob: -11.353321075439453

Token 847: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01489274762570858
    2. 'for' → logprob: -5.139892578125
    3. '
' → logprob: -5.889892578125
    4. '       ' → logprob: -6.014892578125
    5. '           ' → logprob: -6.264892578125
    6. ' 
' → logprob: -6.639892578125
    7. '  
' → logprob: -9.139892578125
    8. '   ' → logprob: -9.389892578125
    9. ' ' → logprob: -9.889892578125
    10. ',' → logprob: -10.139892578125

Token 848: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5759528279304504
    2. ' for' → logprob: -0.8259528279304504
    3. '           ' → logprob: -11.450952529907227
    4. '       ' → logprob: -13.450952529907227
    5. '   ' → logprob: -14.200952529907227
    6. 'w' → logprob: -14.950952529907227
    7. ' w' → logprob: -15.825952529907227
    8. '```' → logprob: -17.075952529907227
    9. ' i' → logprob: -17.575952529907227
    10. ' ' → logprob: -17.825952529907227

Token 849: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.0037844041362404823
    2. ' weight' → logprob: -6.5037841796875
    3. 'wt' → logprob: -7.1287841796875
    4. 'cap' → logprob: -7.7537841796875
    5. 'capacity' → logprob: -7.7537841796875
    6. 'curr' → logprob: -8.1287841796875
    7. 'w' → logprob: -8.3787841796875
    8. 'j' → logprob: -10.2537841796875
    9. 'i' → logprob: -11.1287841796875
    10. 'ww' → logprob: -12.1287841796875

Token 850: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01798100396990776
    2. 'in' → logprob: -5.017981052398682
    3. 'w' → logprob: -5.392981052398682
    4. '1' → logprob: -5.767981052398682
    5. ' w' → logprob: -6.392981052398682
    6. ' ' → logprob: -6.892981052398682
    7. ' i' → logprob: -8.392980575561523
    8. 'i' → logprob: -8.767980575561523
    9. '_' → logprob: -9.017980575561523
    10. '[' → logprob: -9.392980575561523

Token 851: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03804149478673935
    2. ' range' → logprob: -3.288041591644287
    3. '(range' → logprob: -20.913042068481445
    4. '	range' → logprob: -21.163042068481445
    5. ' ' → logprob: -21.538042068481445
    6. '   ' → logprob: -21.538042068481445
    7. 'r' → logprob: -22.163042068481445
    8. '
' → logprob: -22.288042068481445
    9. 'rang' → logprob: -22.913042068481445
    10. 'w' → logprob: -23.288042068481445

Token 852: '(w' (ID: 7420)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -9.662937372922897e-05
    2. ' w' → logprob: -9.250096321105957
    3. '(w' → logprob: -15.625096321105957
    4. '	w' → logprob: -16.125097274780273
    5. '[w' → logprob: -16.500097274780273
    6. '   ' → logprob: -16.875097274780273
    7. 'mp' → logprob: -17.500097274780273
    8. '=w' → logprob: -17.625097274780273
    9. '_w' → logprob: -18.000097274780273
    10. '<w' → logprob: -19.625097274780273

Token 853: ',' (ID: 11)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.030208956450223923
    2. ',' → logprob: -3.7802090644836426
    3. ',w' → logprob: -5.530209064483643
    4. 'self' → logprob: -5.905209064483643
    5. 'mp' → logprob: -8.655208587646484
    6. ',self' → logprob: -10.155208587646484
    7. ' self' → logprob: -11.905208587646484
    8. ' w' → logprob: -12.030208587646484
    9. '[w' → logprob: -12.030208587646484
    10. '(mp' → logprob: -12.530208587646484

Token 854: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.644463479053229e-05
    2. ' self' → logprob: -10.000046730041504
    3. '(self' → logprob: -13.875046730041504
    4. '
' → logprob: -16.875045776367188
    5. '   ' → logprob: -18.000045776367188
    6. '=self' → logprob: -18.125045776367188
    7. '[self' → logprob: -18.375045776367188
    8. '           ' → logprob: -18.500045776367188
    9. '	self' → logprob: -19.625045776367188
    10. '       ' → logprob: -19.625045776367188

Token 855: '.W' (ID: 2342)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20415814220905304
    2. 'W' → logprob: -1.7041581869125366
    3. ' self' → logprob: -5.954158306121826
    4. '[self' → logprob: -10.704157829284668
    5. '(self' → logprob: -10.704157829284668
    6. '+self' → logprob: -10.704157829284668
    7. ' W' → logprob: -10.829157829284668
    8. '+' → logprob: -11.329157829284668
    9. '-self' → logprob: -11.954157829284668
    10. '[' → logprob: -11.954157829284668

Token 856: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00011069540778407827
    2. ' +' → logprob: -9.125110626220703
    3. '+
' → logprob: -13.500110626220703
    4. '+self' → logprob: -16.000110626220703
    5. ')+' → logprob: -16.500110626220703
    6. '   ' → logprob: -17.375110626220703
    7. '1' → logprob: -18.125110626220703
    8. '[' → logprob: -18.125110626220703
    9. '
' → logprob: -18.375110626220703
    10. '()+' → logprob: -18.500110626220703

Token 857: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5008392930030823
    2. '+' → logprob: -1.2508392333984375
    3. 'self' → logprob: -2.3758392333984375
    4. 'W' → logprob: -4.3758392333984375
    5. ' +' → logprob: -7.0008392333984375
    6. '(self' → logprob: -8.000839233398438
    7. '+self' → logprob: -8.000839233398438
    8. '[self' → logprob: -9.125839233398438
    9. ')' → logprob: -9.250839233398438
    10. 'w' → logprob: -9.375839233398438

Token 858: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20150737464427948
    2. '):' → logprob: -1.701507329940796
    3. '):
' → logprob: -9.826507568359375
    4. '           ' → logprob: -11.326507568359375
    5. '+' → logprob: -11.826507568359375
    6. '               ' → logprob: -12.076507568359375
    7. ':' → logprob: -12.451507568359375
    8. ',' → logprob: -12.951507568359375
    9. '       ' → logprob: -12.951507568359375
    10. ':
' → logprob: -13.076507568359375

Token 859: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009571973932906985
    2. '           ' → logprob: -8.250957489013672
    3. ' dp' → logprob: -8.250957489013672
    4. '                   ' → logprob: -8.875957489013672
    5. 'dp' → logprob: -9.625957489013672
    6. '                       ' → logprob: -9.875957489013672
    7. '	dp' → logprob: -10.125957489013672
    8. '                ' → logprob: -10.875957489013672
    9. '              ' → logprob: -11.000957489013672
    10. '   ' → logprob: -11.000957489013672

Token 860: ' val' (ID: 1459)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05837981030344963
    2. 'if' → logprob: -3.433379888534546
    3. ' dp' → logprob: -4.058379650115967
    4. ' if' → logprob: -5.058379650115967
    5. '               ' → logprob: -8.058380126953125
    6. 'new' → logprob: -8.433380126953125
    7. '                   ' → logprob: -8.433380126953125
    8. ' new' → logprob: -10.933380126953125
    9. '   ' → logprob: -11.433380126953125
    10. '	dp' → logprob: -12.183380126953125

Token 861: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03314613178372383
    2. ' =' → logprob: -3.5331461429595947
    3. '=
' → logprob: -7.033145904541016
    4. '           ' → logprob: -7.658145904541016
    5. '               ' → logprob: -8.033145904541016
    6. 's' → logprob: -8.033145904541016
    7. '                   ' → logprob: -8.408145904541016
    8. ']' → logprob: -8.533145904541016
    9. '   ' → logprob: -8.658145904541016
    10. 'dp' → logprob: -8.908145904541016

Token 862: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.26227885484695435
    2. 'max' → logprob: -1.6372787952423096
    3. ' max' → logprob: -4.012279033660889
    4. ' dp' → logprob: -4.012279033660889
    5. '(dp' → logprob: -12.76227855682373
    6. '	dp' → logprob: -12.76227855682373
    7. ' ' → logprob: -13.76227855682373
    8. '   ' → logprob: -14.01227855682373
    9. 'min' → logprob: -14.51227855682373
    10. 'd' → logprob: -15.26227855682373

Token 863: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.438573680294212e-06
    2. '[
' → logprob: -12.625005722045898
    3. 'weight' → logprob: -13.500005722045898
    4. '               ' → logprob: -15.250005722045898
    5. '                   ' → logprob: -15.625005722045898
    6. ' [' → logprob: -16.7500057220459
    7. '
' → logprob: -16.8750057220459
    8. '           ' → logprob: -17.2500057220459
    9. '[word' → logprob: -17.8750057220459
    10. '```' → logprob: -17.8750057220459

Token 864: 'weight' (ID: 8250)
  Prédit: 'weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -1.7120533811976202e-05
    2. ' weight' → logprob: -11.000017166137695
    3. '[' → logprob: -15.625017166137695
    4. '(weight' → logprob: -15.625017166137695
    5. '
' → logprob: -17.250017166137695
    6. '   ' → logprob: -17.500017166137695
    7. 'weights' → logprob: -17.625017166137695
    8. 'weig' → logprob: -19.000017166137695
    9. '[
' → logprob: -20.375017166137695
    10. '           ' → logprob: -20.875017166137695

Token 865: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24236714839935303
    2. '-' → logprob: -2.7423672676086426
    3. ' -' → logprob: -2.7423672676086426
    4. '[' → logprob: -3.1173672676086426
    5. '[w' → logprob: -4.367367267608643
    6. '-w' → logprob: -4.492367267608643
    7. '],' → logprob: -4.992367267608643
    8. '-weight' → logprob: -5.367367267608643
    9. '   ' → logprob: -6.617367267608643
    10. '[
' → logprob: -6.742367267608643

Token 866: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -3.4121114822482923e-06
    2. ' w' → logprob: -12.625003814697266
    3. '   ' → logprob: -20.125003814697266
    4. '	w' → logprob: -20.250003814697266
    5. '       ' → logprob: -20.625003814697266
    6. '           ' → logprob: -20.625003814697266
    7. '               ' → logprob: -20.625003814697266
    8. '[w' → logprob: -22.125003814697266
    9. ''w' → logprob: -22.250003814697266
    10. '            
' → logprob: -22.375003814697266

Token 867: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021869030315428972
    2. ']+' → logprob: -6.1271867752075195
    3. ' ]' → logprob: -13.62718677520752
    4. '+' → logprob: -14.87718677520752
    5. ']
' → logprob: -15.75218677520752
    6. '+]' → logprob: -16.877187728881836
    7. ')' → logprob: -17.877187728881836
    8. ']+=' → logprob: -18.127187728881836
    9. '[' → logprob: -18.252187728881836
    10. ' +' → logprob: -18.627187728881836

Token 868: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.266071081161499
    2. '+' → logprob: -1.516071081161499
    3. '+p' → logprob: -4.266071319580078
    4. 'p' → logprob: -12.891071319580078
    5. '+
' → logprob: -13.516071319580078
    6. ' +
' → logprob: -14.641071319580078
    7. ')' → logprob: -15.391071319580078
    8. ' ' → logprob: -15.766071319580078
    9. '+w' → logprob: -16.016071319580078
    10. ' p' → logprob: -16.266071319580078

Token 869: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.842555426876061e-06
    2. ' p' → logprob: -12.250004768371582
    3. '           ' → logprob: -21.2500057220459
    4. '               ' → logprob: -21.6250057220459
    5. '	p' → logprob: -22.5000057220459
    6. '   ' → logprob: -22.7500057220459
    7. '*p' → logprob: -22.8750057220459
    8. '<p' → logprob: -23.1250057220459
    9. '                   ' → logprob: -23.3750057220459
    10. '[p' → logprob: -23.6250057220459

Token 870: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9925040006637573
    2. '               ' → logprob: -0.9925040006637573
    3. '<|end|>' → logprob: -1.8675040006637573
    4. '           ' → logprob: -2.867504119873047
    5. 'if' → logprob: -3.867504119873047
    6. ' if' → logprob: -4.367504119873047
    7. '<|end|>' → logprob: -5.867504119873047
    8. '       ' → logprob: -5.867504119873047
    9. ')' → logprob: -5.992504119873047
    10. '                ' → logprob: -7.367504119873047

Token 871: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02241130918264389
    2. ' if' → logprob: -4.647411346435547
    3. 'if' → logprob: -4.772411346435547
    4. '           ' → logprob: -6.397411346435547
    5. '
' → logprob: -6.772411346435547
    6. ')' → logprob: -8.522411346435547
    7. '=' → logprob: -8.647411346435547
    8. ',' → logprob: -8.772411346435547
    9. '<|end|>' → logprob: -8.772411346435547
    10. ')
' → logprob: -9.522411346435547

Token 872: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12742169201374054
    2. ' if' → logprob: -2.1274216175079346
    3. '               ' → logprob: -7.627421855926514
    4. '           ' → logprob: -12.627421379089355
    5. '                   ' → logprob: -13.252421379089355
    6. '	if' → logprob: -14.252421379089355
    7. 'dp' → logprob: -14.502421379089355
    8. '                ' → logprob: -16.502422332763672
    9. '                       ' → logprob: -17.002422332763672
    10. '                
' → logprob: -17.502422332763672

Token 873: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0007142199319787323
    2. ' val' → logprob: -7.375714302062988
    3. 'dp' → logprob: -9.375714302062988
    4. '	val' → logprob: -13.750714302062988
    5. ' dp' → logprob: -13.875714302062988
    6. '   ' → logprob: -14.750714302062988
    7. 'va' → logprob: -16.375713348388672
    8. 'v' → logprob: -16.500713348388672
    9. '_val' → logprob: -17.375713348388672
    10. '(val' → logprob: -17.500713348388672

Token 874: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.07005247473716736
    2. ' >' → logprob: -2.6950523853302
    3. '[' → logprob: -9.320052146911621
    4. '>
' → logprob: -11.570052146911621
    5. '>[' → logprob: -12.320052146911621
    6. 'dp' → logprob: -13.195052146911621
    7. ']>' → logprob: -13.195052146911621
    8. ' >
' → logprob: -13.445052146911621
    9. '[]>' → logprob: -13.570052146911621
    10. ')>' → logprob: -14.195052146911621

Token 875: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.7848862373502925e-05
    2. ' dp' → logprob: -10.500027656555176
    3. '	dp' → logprob: -15.375027656555176
    4. '(dp' → logprob: -18.250028610229492
    5. '_dp' → logprob: -18.750028610229492
    6. '
' → logprob: -19.000028610229492
    7. 'd' → logprob: -20.625028610229492
    8. '   ' → logprob: -20.875028610229492
    9. '           ' → logprob: -21.250028610229492
    10. 'df' → logprob: -21.875028610229492

Token 876: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. 'weight' → logprob: -14.250000953674316
    3. '[
' → logprob: -15.000000953674316
    4. '   ' → logprob: -18.500001907348633
    5. '               ' → logprob: -20.000001907348633
    6. '```' → logprob: -20.375001907348633
    7. '
' → logprob: -20.875001907348633
    8. ' [' → logprob: -21.000001907348633
    9. '(weight' → logprob: -21.000001907348633
    10. '           ' → logprob: -21.125001907348633

Token 877: 'weight' (ID: 8250)
  Prédit: 'weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -6.704273118884885e-07
    2. ' weight' → logprob: -14.250000953674316
    3. '[' → logprob: -18.25
    4. 'weig' → logprob: -22.375
    5. 'weights' → logprob: -22.875
    6. '   ' → logprob: -22.875
    7. '(weight' → logprob: -24.0
    8. '_weight' → logprob: -25.0
    9. 'w' → logprob: -25.625
    10. '
' → logprob: -25.625

Token 878: ']:
' (ID: 22152)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -8.721228368813172e-05
    2. 'weight' → logprob: -9.500086784362793
    3. '[
' → logprob: -12.125086784362793
    4. ']' → logprob: -12.750086784362793
    5. ' weight' → logprob: -14.250086784362793
    6. '(weight' → logprob: -14.500086784362793
    7. '][' → logprob: -14.750086784362793
    8. '               ' → logprob: -14.875086784362793
    9. 'Weight' → logprob: -14.875086784362793
    10. ' [' → logprob: -15.000086784362793

Token 879: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.026155494153499603
    2. 'dp' → logprob: -3.776155471801758
    3. ' dp' → logprob: -6.526155471801758
    4. '(dp' → logprob: -6.901155471801758
    5. '	dp' → logprob: -8.401155471801758
    6. '_dp' → logprob: -9.651155471801758
    7. '                       ' → logprob: -9.901155471801758
    8. '                           ' → logprob: -11.151155471801758
    9. ':' → logprob: -11.276155471801758
    10. ':
' → logprob: -11.276155471801758

Token 880: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0031802060548216105
    2. ' dp' → logprob: -5.753180027008057
    3. '                   ' → logprob: -13.503180503845215
    4. '	dp' → logprob: -14.378180503845215
    5. '                       ' → logprob: -14.753180503845215
    6. '_dp' → logprob: -16.5031795501709
    7. '(dp' → logprob: -17.0031795501709
    8. '
' → logprob: -17.7531795501709
    9. 'd' → logprob: -18.8781795501709
    10. '                           ' → logprob: -19.0031795501709

Token 881: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '[
' → logprob: -14.500000953674316
    3. 'weight' → logprob: -17.375
    4. '
' → logprob: -19.875
    5. ' [' → logprob: -20.75
    6. '```' → logprob: -20.75
    7. '=' → logprob: -21.25
    8. '   ' → logprob: -21.375
    9. '  
' → logprob: -21.625
    10. '	' → logprob: -22.125

Token 882: 'weight' (ID: 8250)
  Prédit: 'weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -2.935296834039036e-06
    2. ' weight' → logprob: -12.75000286102295
    3. '[' → logprob: -21.125003814697266
    4. '(weight' → logprob: -22.375003814697266
    5. '   ' → logprob: -22.500003814697266
    6. 'weig' → logprob: -23.125003814697266
    7. 'w' → logprob: -23.375003814697266
    8. 'Weight' → logprob: -23.375003814697266
    9. '
' → logprob: -23.500003814697266
    10. 'weights' → logprob: -23.625003814697266

Token 883: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008087906171567738
    2. ']' → logprob: -8.250808715820312
    3. 'weight' → logprob: -8.250808715820312
    4. '[
' → logprob: -8.875808715820312
    5. '=' → logprob: -9.250808715820312
    6. '
' → logprob: -10.375808715820312
    7. '][' → logprob: -12.250808715820312
    8. ']=' → logprob: -12.375808715820312
    9. ' =' → logprob: -12.625808715820312
    10. ' weight' → logprob: -13.625808715820312

Token 884: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019348275382071733
    2. ' =' → logprob: -6.251935005187988
    3. '=
' → logprob: -12.251935005187988
    4. '[' → logprob: -13.626935005187988
    5. ']=' → logprob: -16.501934051513672
    6. '=

' → logprob: -16.501934051513672
    7. ']' → logprob: -17.751934051513672
    8. '.=' → logprob: -18.251934051513672
    9. '＝' → logprob: -19.001934051513672
    10. ' =
' → logprob: -19.001934051513672

Token 885: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -3.547789674485102e-05
    2. ' val' → logprob: -10.250035285949707
    3. 'va' → logprob: -19.875036239624023
    4. '	val' → logprob: -20.250036239624023
    5. '[val' → logprob: -20.750036239624023
    6. 'v' → logprob: -21.000036239624023
    7. '(val' → logprob: -21.125036239624023
    8. '_val' → logprob: -22.750036239624023
    9. '   ' → logprob: -23.750036239624023
    10. '.val' → logprob: -23.875036239624023

Token 886: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0363531112670898
    2. '<|end|>' → logprob: -1.5363531112670898
    3. ' 
' → logprob: -1.7863531112670898
    4. '       ' → logprob: -2.16135311126709
    5. '        ' → logprob: -3.03635311126709
    6. ' ' → logprob: -3.41135311126709
    7. '  
' → logprob: -4.41135311126709
    8. 'return' → logprob: -4.41135311126709
    9. '        
' → logprob: -4.66135311126709
    10. '                ' → logprob: -5.53635311126709

Token 887: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07069334387779236
    2. '        ' → logprob: -3.570693254470825
    3. '
' → logprob: -3.820693254470825
    4. '        
' → logprob: -4.695693492889404
    5. '<|end|>' → logprob: -5.820693492889404
    6. ' return' → logprob: -7.070693492889404
    7. ' 
' → logprob: -7.320693492889404
    8. 'return' → logprob: -7.320693492889404
    9. '    ' → logprob: -7.320693492889404
    10. '  
' → logprob: -7.320693492889404

Token 888: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5633981227874756
    2. '       ' → logprob: -0.9383981227874756
    3. 'result' → logprob: -3.5633981227874756
    4. 'load' → logprob: -5.063398361206055
    5. 'max' → logprob: -6.688398361206055
    6. ' return' → logprob: -6.938398361206055
    7. 'best' → logprob: -7.063398361206055
    8. '#' (adapté à ' #') → logprob: -7.438398361206055
    9. 'results' → logprob: -8.188398361206055
    10. 'res' → logprob: -8.688398361206055

Token 889: ' We' (ID: 1416)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8087021112442017
    2. 'load' → logprob: -0.9337021112442017
    3. 'return' → logprob: -2.558701992034912
    4. '#' → logprob: -2.933701992034912
    5. 'best' → logprob: -4.183701992034912
    6. 'result' → logprob: -4.433701992034912
    7. 'res' → logprob: -5.933701992034912
    8. 'results' → logprob: -8.05870246887207
    9. 'min' → logprob: -8.30870246887207
    10. 'from' → logprob: -9.05870246887207

Token 890: ' find' (ID: 1646)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7178575396537781
    2. '       ' → logprob: -1.4678575992584229
    3. 'return' → logprob: -2.342857599258423
    4. ' #' → logprob: -2.592857599258423
    5. '   ' → logprob: -3.092857599258423
    6. ' return' → logprob: -3.842857599258423
    7. 'best' → logprob: -4.092857360839844
    8. '_best' → logprob: -5.092857360839844
    9. '_return' → logprob: -5.592857360839844
    10. ' best' → logprob: -5.592857360839844

Token 891: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3659866750240326
    2. ' max' → logprob: -1.240986704826355
    3. 'best' → logprob: -4.2409868240356445
    4. ' best' → logprob: -6.6159868240356445
    5. 'profit' → logprob: -6.9909868240356445
    6. ' profit' → logprob: -8.740986824035645
    7. 'return' → logprob: -9.490986824035645
    8. '#' → logprob: -9.490986824035645
    9. 'load' → logprob: -9.615986824035645
    10. 'the' → logprob: -9.990986824035645

Token 892: ' profit' (ID: 15971)
  Prédit: '_profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_profit' → logprob: -0.004781949799507856
    2. 'profit' → logprob: -5.379781723022461
    3. '_prof' → logprob: -9.879781723022461
    4. '_val' → logprob: -10.129781723022461
    5. '_value' → logprob: -10.754781723022461
    6. '_load' → logprob: -11.504781723022461
    7. '_weight' → logprob: -11.504781723022461
    8. '_' → logprob: -11.504781723022461
    9. 'Profit' → logprob: -12.754781723022461
    10. '_p' → logprob: -12.879781723022461

Token 893: ' achievable' (ID: 118877)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5171563625335693
    2. '=' → logprob: -1.3921563625335693
    3. ',' → logprob: -2.7671563625335693
    4. '=max' → logprob: -3.1421563625335693
    5. '_idx' → logprob: -4.642156600952148
    6. '_index' → logprob: -4.767156600952148
    7. 'max' → logprob: -5.267156600952148
    8. '_weight' → logprob: -5.642156600952148
    9. 'index' → logprob: -6.017156600952148
    10. '.' → logprob: -6.017156600952148

Token 894: ' for' (ID: 395)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2488013356924057
    2. ' =' → logprob: -2.8738012313842773
    3. 'return' → logprob: -3.1238012313842773
    4. '=max' → logprob: -3.6238012313842773
    5. ' for' → logprob: -3.8738012313842773
    6. 'for' → logprob: -3.8738012313842773
    7. '=' → logprob: -3.8738012313842773
    8. ' max' → logprob: -4.498801231384277
    9. '       ' → logprob: -5.373801231384277
    10. '
' → logprob: -5.748801231384277

Token 895: ' city' (ID: 5030)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.8938419818878174
    2. 'w' → logprob: -1.3938419818878174
    3. ' weight' → logprob: -2.1438419818878174
    4. 'self' → logprob: -2.1438419818878174
    5. ' w' → logprob: -3.7688419818878174
    6. 'each' → logprob: -3.7688419818878174
    7. ' self' → logprob: -4.143841743469238
    8. ' all' → logprob: -4.143841743469238
    9. 'all' → logprob: -4.268841743469238
    10. ' each' → logprob: -4.893841743469238

Token 896: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5120897889137268
    2. '=' → logprob: -1.387089729309082
    3. ' for' → logprob: -3.512089729309082
    4. 'for' → logprob: -3.512089729309082
    5. ' at' → logprob: -4.012089729309082
    6. ',' → logprob: -4.262089729309082
    7. 'return' → logprob: -4.512089729309082
    8. '=max' → logprob: -4.637089729309082
    9. 'max' → logprob: -5.012089729309082
    10. '.' → logprob: -5.262089729309082

Token 897: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13447226583957672
    2. ',' → logprob: -2.259472370147705
    3. ' =' → logprob: -5.009472370147705
    4. '
' → logprob: -5.384472370147705
    5. ' and' → logprob: -6.134472370147705
    6. '=' → logprob: -6.384472370147705
    7. '.' → logprob: -6.884472370147705
    8. 'return' → logprob: -7.009472370147705
    9. ' for' → logprob: -7.009472370147705
    10. 'max' → logprob: -7.509472370147705

Token 898: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.27512773871421814
    2. ' max' → logprob: -1.5251277685165405
    3. '       ' → logprob: -4.02512788772583
    4. '
' → logprob: -5.52512788772583
    5. 'return' → logprob: -7.15012788772583
    6. ' return' → logprob: -8.650127410888672
    7. 'best' → logprob: -10.025127410888672
    8. '        
' → logprob: -10.400127410888672
    9. ' best' → logprob: -11.400127410888672
    10. '   ' → logprob: -11.775127410888672

Token 899: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -0.0006718054646626115
    2. '_prof' → logprob: -7.875671863555908
    3. 'profit' → logprob: -8.50067138671875
    4. '_' → logprob: -10.37567138671875
    5. '_dp' → logprob: -11.25067138671875
    6. '_val' → logprob: -11.37567138671875
    7. '_pro' → logprob: -11.50067138671875
    8. 'Profit' → logprob: -12.12567138671875
    9. '_p' → logprob: -12.75067138671875
    10. '(dp' → logprob: -12.87567138671875

Token 900: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021518170833588
    2. ' =' → logprob: -2.350215196609497
    3. '=max' → logprob: -11.975214958190918
    4. ',' → logprob: -14.225214958190918
    5. '_=' → logprob: -14.600214958190918
    6. '_' → logprob: -15.350214958190918
    7. '=
' → logprob: -15.475214958190918
    8. ' ' → logprob: -16.100215911865234
    9. '=

' → logprob: -16.350215911865234
    10. '_idx' → logprob: -16.475215911865234

Token 901: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7190181016921997
    2. 'dp' → logprob: -1.3440181016921997
    3. ' max' → logprob: -1.4690181016921997
    4. ' dp' → logprob: -3.84401798248291
    5. '0' → logprob: -7.84401798248291
    6. ' ' → logprob: -11.34401798248291
    7. '	dp' → logprob: -13.09401798248291
    8. '   ' → logprob: -13.21901798248291
    9. '	max' → logprob: -13.46901798248291
    10. '(dp' → logprob: -13.71901798248291

Token 902: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -8.458980300929397e-05
    2. 'dp' → logprob: -9.75008487701416
    3. '(' → logprob: -10.62508487701416
    4. ' dp' → logprob: -13.75008487701416
    5. '(
' → logprob: -14.75008487701416
    6. '_dp' → logprob: -15.37508487701416
    7. '	dp' → logprob: -16.250083923339844
    8. '([' → logprob: -17.250083923339844
    9. '(d' → logprob: -17.500083923339844
    10. '(self' → logprob: -17.625083923339844

Token 903: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.629921436891891e-05
    2. '[' → logprob: -11.75002670288086
    3. '[:' → logprob: -11.75002670288086
    4. ')
' → logprob: -12.00002670288086
    5. ')+' → logprob: -13.25002670288086
    6. '<|end|>' → logprob: -14.50002670288086
    7. ' )' → logprob: -15.00002670288086
    8. ')>' → logprob: -15.12502670288086
    9. '   ' → logprob: -15.75002670288086
    10. '),' → logprob: -16.00002670288086

Token 904: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0059290360659360886
    2. '
' → logprob: -5.505928993225098
    3. '<|end|>' → logprob: -7.005928993225098
    4. 'return' → logprob: -7.880928993225098
    5. ',' → logprob: -8.380928993225098
    6. '        
' → logprob: -9.130928993225098
    7. ' return' → logprob: -10.005928993225098
    8. '	' → logprob: -10.630928993225098
    9. '           ' → logprob: -10.755928993225098
    10. '   ' → logprob: -10.755928993225098

Token 905: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06564432382583618
    2. 'return' → logprob: -3.1906442642211914
    3. ' if' → logprob: -4.690644264221191
    4. ' return' → logprob: -5.190644264221191
    5. 'if' → logprob: -5.315644264221191
    6. '
' → logprob: -6.565644264221191
    7. ' load' → logprob: -7.815644264221191
    8. 'result' → logprob: -7.940644264221191
    9. '#' (adapté à ' #') → logprob: -8.315644264221191
    10. '        
' → logprob: -8.940644264221191

Token 906: ' To' (ID: 2514)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7308787703514099
    2. 'return' → logprob: -1.6058788299560547
    3. 'load' → logprob: -2.2308788299560547
    4. '#' → logprob: -2.4808788299560547
    5. 'result' → logprob: -2.7308788299560547
    6. 'best' → logprob: -3.3558788299560547
    7. 'res' → logprob: -4.605878829956055
    8. ' if' → logprob: -4.980878829956055
    9. 'results' → logprob: -5.605878829956055
    10. 'max' → logprob: -6.355878829956055

Token 907: ' be' (ID: 413)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5869624018669128
    2. 'return' → logprob: -0.9619624018669128
    3. 'recover' → logprob: -4.4619622230529785
    4. ' recover' → logprob: -4.7119622230529785
    5. ' find' → logprob: -5.0869622230529785
    6. ' #' → logprob: -5.2119622230529785
    7. '#' → logprob: -5.3369622230529785
    8. '
' → logprob: -5.5869622230529785
    9. ' reconstruct' → logprob: -5.5869622230529785
    10. 'extract' → logprob: -6.2119622230529785

Token 908: ' able' (ID: 3741)
  Prédit: 'continued'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continued' → logprob: -1.0846011638641357
    2. 'sure' → logprob: -1.3346011638641357
    3. 'prec' → logprob: -1.7096011638641357
    4. 'continue' → logprob: -2.5846011638641357
    5. 'exact' → logprob: -3.2096011638641357
    6. 'complete' → logprob: -3.7096011638641357
    7. 'hon' → logprob: -3.7096011638641357
    8. 'consistent' → logprob: -3.9596011638641357
    9. 'contin' → logprob: -4.959601402282715
    10. 'clear' → logprob: -5.334601402282715

Token 909: ' to' (ID: 316)
  Prédit: ' able'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' able' → logprob: -0.042124561965465546
    2. ' to' → logprob: -3.5421245098114014
    3. ' sure' → logprob: -5.1671247482299805
    4. 'to' → logprob: -6.2921247482299805
    5. '   ' → logprob: -7.0421247482299805
    6. '
' → logprob: -7.7921247482299805
    7. ' continued' → logprob: -7.9171247482299805
    8. ' exact' → logprob: -8.16712474822998
    9. ' continue' → logprob: -8.16712474822998
    10. '#' → logprob: -8.16712474822998

Token 910: ' reconstruct' (ID: 78298)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.36722445487976074
    2. 'recover' → logprob: -1.3672244548797607
    3. ' reconstruct' → logprob: -3.7422244548797607
    4. 'retrieve' → logprob: -4.11722469329834
    5. 'trace' → logprob: -4.74222469329834
    6. 'return' → logprob: -6.74222469329834
    7. 'restore' → logprob: -6.99222469329834
    8. 'back' → logprob: -7.24222469329834
    9. 'extract' → logprob: -8.36722469329834
    10. 'find' → logprob: -8.36722469329834

Token 911: ' load' (ID: 4700)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0415840148925781
    2. ' which' → logprob: -1.2915840148925781
    3. 'the' → logprob: -1.5415840148925781
    4. 'which' → logprob: -2.541584014892578
    5. '#' → logprob: -3.916584014892578
    6. ',' → logprob: -4.916584014892578
    7. 'all' → logprob: -5.291584014892578
    8. 'chosen' → logprob: -5.416584014892578
    9. ' all' → logprob: -5.541584014892578
    10. 'def' → logprob: -5.666584014892578

Token 912: 'out' (ID: 468)
  Prédit: 'outs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outs' → logprob: -0.033856265246868134
    2. 'out' → logprob: -3.408856153488159
    3. '   ' → logprob: -9.658856391906738
    4. '#' → logprob: -10.533856391906738
    5. 'ings' → logprob: -11.283856391906738
    6. ')' → logprob: -11.533856391906738
    7. 'ins' → logprob: -11.658856391906738
    8. '_out' → logprob: -11.658856391906738
    9. 'outes' → logprob: -11.908856391906738
    10. '```' → logprob: -12.033856391906738

Token 913: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06441701948642731
    2. ' ,' → logprob: -3.6894171237945557
    3. ',
' → logprob: -3.8144171237945557
    4. ' for' → logprob: -5.814416885375977
    5. '#' → logprob: -5.939416885375977
    6. ' weights' → logprob: -6.564416885375977
    7. ' weight' → logprob: -6.564416885375977
    8. 'weights' → logprob: -7.189416885375977
    9. 'for' → logprob: -7.314416885375977
    10. '       ' → logprob: -7.314416885375977

Token 914: ' we' (ID: 581)
  Prédit: ' load'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' load' → logprob: -0.6746931672096252
    2. 'load' → logprob: -1.2996931076049805
    3. '#' → logprob: -2.5496931076049805
    4. ' #' → logprob: -3.4246931076049805
    5. ' return' → logprob: -4.0496931076049805
    6. ' items' → logprob: -4.1746931076049805
    7. 'return' → logprob: -4.1746931076049805
    8. 're' → logprob: -5.0496931076049805
    9. ' best' → logprob: -5.1746931076049805
    10. ' we' → logprob: -5.4246931076049805

Token 915: ' store' (ID: 4897)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.5009030699729919
    2. 'need' → logprob: -1.7509031295776367
    3. 'def' → logprob: -3.0009031295776367
    4. 'return' → logprob: -3.0009031295776367
    5. '...' → logprob: -3.1259031295776367
    6. ' reconstruct' → logprob: -4.125903129577637
    7. ''ll' → logprob: -4.250903129577637
    8. ' will' → logprob: -4.500903129577637
    9. '#' → logprob: -4.875903129577637
    10. 're' → logprob: -5.000903129577637

Token 916: ' one' (ID: 1001)
  Prédit: 'choice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'choice' → logprob: -0.4377439320087433
    2. 'prev' → logprob: -2.187743902206421
    3. ' choice' → logprob: -2.562743902206421
    4. 'choices' → logprob: -2.812743902206421
    5. 'back' → logprob: -3.437743902206421
    6. 'parent' → logprob: -3.437743902206421
    7. ' choices' → logprob: -4.937744140625
    8. ' prev' → logprob: -5.062744140625
    9. 'item' → logprob: -5.437744140625
    10. 'chosen' → logprob: -5.812744140625

Token 917: ' of' (ID: 328)
  Prédit: 'choice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'choice' → logprob: -1.0522403717041016
    2. 'best' → logprob: -1.4272403717041016
    3. 'product' → logprob: -2.9272403717041016
    4. 'last' → logprob: -3.1772403717041016
    5. ' choice' → logprob: -3.3022403717041016
    6. 'prev' → logprob: -3.3022403717041016
    7. 'back' → logprob: -3.4272403717041016
    8. '_choice' → logprob: -3.9272403717041016
    9. '
' → logprob: -4.177240371704102
    10. ' product' → logprob: -4.302240371704102

Token 918: ' them' (ID: 1373)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9869266748428345
    2. 'self' → logprob: -1.6119266748428345
    3. 'dp' → logprob: -2.111926555633545
    4. 'mp' → logprob: -2.736926555633545
    5. 'weight' → logprob: -3.111926555633545
    6. '[' → logprob: -3.236926555633545
    7. 'weights' → logprob: -3.486926555633545
    8. 'products' → logprob: -4.111926555633545
    9. 'best' → logprob: -4.111926555633545
    10. ' the' → logprob: -4.361926555633545

Token 919: '.' (ID: 13)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0577672719955444
    2. ',' → logprob: -1.8077672719955444
    3. '       ' → logprob: -2.557767391204834
    4. 's' → logprob: -2.557767391204834
    5. ':' → logprob: -3.182767391204834
    6. '_index' → logprob: -3.682767391204834
    7. 'for' → logprob: -3.807767391204834
    8. ')' → logprob: -3.932767391204834
    9. 'indices' → logprob: -3.932767391204834
    10. ' for' → logprob: -3.932767391204834

Token 920: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7469017505645752
    2. ' load' → logprob: -1.2469017505645752
    3. '
' → logprob: -1.6219017505645752
    4. 'load' → logprob: -4.871901512145996
    5. '#' → logprob: -5.246901512145996
    6. ' prev' → logprob: -5.496901512145996
    7. '        
' → logprob: -5.746901512145996
    8. ' traceback' → logprob: -5.996901512145996
    9. ' weight' → logprob: -6.371901512145996
    10. ' for' → logprob: -6.371901512145996

Token 921: ' sophistication' (ID: 112044)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.7913427948951721
    2. 'weight' → logprob: -1.2913427352905273
    3. 'each' → logprob: -1.9163427352905273
    4. 're' → logprob: -2.6663427352905273
    5. 'city' → logprob: -4.291342735290527
    6. 'that' → logprob: -5.041342735290527
    7. 'mp' → logprob: -5.416342735290527
    8. 'back' → logprob: -5.666342735290527
    9. 'profit' → logprob: -5.666342735290527
    10. 'this' → logprob: -5.666342735290527

Token 922: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3969917297363281
    2. 'prev' → logprob: -2.271991729736328
    3. '#' → logprob: -2.396991729736328
    4. '
' → logprob: -3.646991729736328
    5. ' for' → logprob: -3.896991729736328
    6. ',
' → logprob: -4.021991729736328
    7. ' prev' → logprob: -4.146991729736328
    8. '       ' → logprob: -4.521991729736328
    9. 'dp' → logprob: -4.521991729736328
    10. 'for' → logprob: -5.146991729736328

Token 923: ' store' (ID: 4897)
  Prédit: 'load'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'load' → logprob: -0.1999680995941162
    2. ' load' → logprob: -2.324968099594116
    3. 're' → logprob: -3.699968099594116
    4. '#' → logprob: -4.324968338012695
    5. 'chosen' → logprob: -4.574968338012695
    6. 'prev' → logprob: -5.199968338012695
    7. 'for' → logprob: -5.449968338012695
    8. 'best' → logprob: -5.949968338012695
    9. 'choice' → logprob: -6.074968338012695
    10. ' chosen' → logprob: -6.199968338012695

Token 924: ' multiple' (ID: 7598)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.7674687504768372
    2. 'choice' → logprob: -1.5174686908721924
    3. 'load' → logprob: -2.6424686908721924
    4. 'parent' → logprob: -3.0174686908721924
    5. 'choices' → logprob: -3.1424686908721924
    6. 'back' → logprob: -3.6424686908721924
    7. 're' → logprob: -3.6424686908721924
    8. ' prev' → logprob: -4.0174689292907715
    9. ' choice' → logprob: -4.3924689292907715
    10. 'items' → logprob: -4.8924689292907715

Token 925: '.
' (ID: 558)
  Prédit: 'load'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'load' → logprob: -0.2834503650665283
    2. ' load' → logprob: -1.7834503650665283
    3. '_load' → logprob: -3.4084503650665283
    4. '
' → logprob: -4.533450126647949
    5. '.' → logprob: -4.658450126647949
    6. ',' → logprob: -5.408450126647949
    7. 'for' → logprob: -5.408450126647949
    8. ' for' → logprob: -5.533450126647949
    9. 's' → logprob: -6.033450126647949
    10. 'results' → logprob: -6.533450126647949

Token 926: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07819505780935287
    2. '
' → logprob: -3.078195095062256
    3. ' load' → logprob: -3.578195095062256
    4. '        
' → logprob: -7.703195095062256
    5. 'load' → logprob: -8.578194618225098
    6. ' return' → logprob: -8.828194618225098
    7. '#' → logprob: -9.203194618225098
    8. '<|end|>' → logprob: -9.453194618225098
    9. ' loads' → logprob: -10.203194618225098
    10. ',' → logprob: -10.578194618225098

Token 927: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.322434663772583
    2. 'load' → logprob: -1.322434663772583
    3. ' load' → logprob: -5.322434425354004
    4. 'return' → logprob: -6.322434425354004
    5. 'result' → logprob: -6.947434425354004
    6. '
' → logprob: -7.322434425354004
    7. '#' (adapté à ' #') → logprob: -7.697434425354004
    8. '        
' → logprob: -9.072434425354004
    9. 'results' → logprob: -9.197434425354004
    10. '   ' → logprob: -10.072434425354004

Token 928: ' But' (ID: 3072)
  Prédit: 'load'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'load' → logprob: -0.08417297154664993
    2. ' load' → logprob: -3.2091729640960693
    3. '       ' → logprob: -4.084173202514648
    4. '#' → logprob: -5.084173202514648
    5. 're' → logprob: -5.334173202514648
    6. 'return' → logprob: -5.459173202514648
    7. 'result' → logprob: -5.584173202514648
    8. 'res' → logprob: -5.834173202514648
    9. 'results' → logprob: -7.834173202514648
    10. 'best' → logprob: -8.709173202514648

Token 929: ' complexity' (ID: 37588)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5894734859466553
    2. 'return' → logprob: -0.9644734859466553
    3. ' return' → logprob: -2.9644734859466553
    4. ' #' → logprob: -5.464473724365234
    5. '
' → logprob: -5.714473724365234
    6. '       ' → logprob: -6.089473724365234
    7. 'result' → logprob: -7.464473724365234
    8. 'load' → logprob: -7.714473724365234
    9. 'for' → logprob: -7.964473724365234
    10. '   ' → logprob: -8.464473724365234

Token 930: ',' (ID: 11)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4450264871120453
    2. ' limits' → logprob: -2.320026397705078
    3. '...' → logprob: -2.945026397705078
    4. ' stops' → logprob: -3.320026397705078
    5. '.' → logprob: -3.570026397705078
    6. ' prevents' → logprob: -3.820026397705078
    7. ' remains' → logprob: -3.945026397705078
    8. ' constraints' → logprob: -4.320026397705078
    9. '#' → logprob: -4.570026397705078
    10. 'is' → logprob: -4.945026397705078

Token 931: ' we' (ID: 581)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9000148177146912
    2. ' so' → logprob: -1.900014877319336
    3. '#' → logprob: -2.025014877319336
    4. 'return' → logprob: -2.525014877319336
    5. ' #' → logprob: -2.650014877319336
    6. ' continue' → logprob: -2.900014877319336
    7. ' break' → logprob: -3.525014877319336
    8. ' we' → logprob: -3.900014877319336
    9. ' pass' → logprob: -4.275014877319336
    10. ' for' → logprob: -4.775014877319336

Token 932: ' store' (ID: 4897)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4576258361339569
    2. 'continue' → logprob: -1.9576258659362793
    3. ''ll' → logprob: -2.9576258659362793
    4. ' will' → logprob: -3.2076258659362793
    5. ' return' → logprob: -3.4576258659362793
    6. 'stop' → logprob: -3.7076258659362793
    7. ' continue' → logprob: -4.082625865936279
    8. 'will' → logprob: -4.457625865936279
    9. '#' → logprob: -4.582625865936279
    10. ' can' → logprob: -4.957625865936279

Token 933: ' only' (ID: 1606)
  Prédit: 'only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'only' → logprob: -0.47958531975746155
    2. 'one' → logprob: -1.7295852899551392
    3. '[]' → logprob: -2.8545854091644287
    4. 'just' → logprob: -3.2295854091644287
    5. 'best' → logprob: -3.4795854091644287
    6. 'load' → logprob: -4.10458517074585
    7. 'the' → logprob: -4.35458517074585
    8. '[' → logprob: -4.60458517074585
    9. 'None' → logprob: -4.85458517074585
    10. ' only' → logprob: -4.97958517074585

Token 934: ' the' (ID: 290)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.05963032692670822
    2. ' one' → logprob: -3.0596303939819336
    3. 'the' → logprob: -4.559630393981934
    4. ' the' → logprob: -8.059630393981934
    5. 'best' → logprob: -8.934630393981934
    6. '[' → logprob: -10.934630393981934
    7. 'max' → logprob: -11.434630393981934
    8. '_one' → logprob: -11.809630393981934
    9. '
' → logprob: -12.184630393981934
    10. '[]' → logprob: -12.434630393981934

Token 935: ' best' (ID: 1636)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7178894281387329
    2. 'best' → logprob: -0.7178894281387329
    3. 'dp' → logprob: -5.217889308929443
    4. 'first' → logprob: -5.217889308929443
    5. 'maximum' → logprob: -5.717889308929443
    6. 'next' → logprob: -5.967889308929443
    7. '[' → logprob: -6.217889308929443
    8. '[max' → logprob: -6.592889308929443
    9. 'highest' → logprob: -6.717889308929443
    10. 'single' → logprob: -6.967889308929443

Token 936: ' profit' (ID: 15971)
  Prédit: ' load'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' load' → logprob: -0.4623001515865326
    2. 'load' → logprob: -1.212300181388855
    3. ' one' → logprob: -2.8373000621795654
    4. ' at' → logprob: -5.8373003005981445
    5. 'weight' → logprob: -5.8373003005981445
    6. ' weight' → logprob: -5.9623003005981445
    7. 'one' → logprob: -6.7123003005981445
    8. '_load' → logprob: -6.7123003005981445
    9. ' combination' → logprob: -7.5873003005981445
    10. 'token' → logprob: -7.8373003005981445

Token 937: ' load' (ID: 4700)
  Prédit: ' load'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' load' → logprob: -0.519929826259613
    2. 'load' → logprob: -2.144929885864258
    3. '       ' → logprob: -2.269929885864258
    4. ',' → logprob: -2.769929885864258
    5. '.' → logprob: -3.519929885864258
    6. '<|end|>' → logprob: -3.769929885864258
    7. ' and' → logprob: -4.019929885864258
    8. '_load' → logprob: -4.144929885864258
    9. ' at' → logprob: -4.394929885864258
    10. '
' → logprob: -4.894929885864258

Token 938: 'out' (ID: 468)
  Prédit: 'out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.002003580564633012
    2. 'outs' → logprob: -6.2520036697387695
    3. '   ' → logprob: -10.25200366973877
    4. '
' → logprob: -11.25200366973877
    5. ' ' → logprob: -12.37700366973877
    6. '```' → logprob: -12.75200366973877
    7. 's' → logprob: -12.87700366973877
    8. 'in' → logprob: -12.87700366973877
    9. 'ou' → logprob: -13.00200366973877
    10. '       ' → logprob: -13.62700366973877

Token 939: ' here' (ID: 2105)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6753239035606384
    2. '       ' → logprob: -1.3003239631652832
    3. '
' → logprob: -2.050323963165283
    4. '.' → logprob: -2.675323963165283
    5. ',
' → logprob: -4.925323963165283
    6. '        
' → logprob: -6.425323963165283
    7. ' for' → logprob: -6.550323963165283
    8. ':' → logprob: -6.550323963165283
    9. 'return' → logprob: -6.675323963165283
    10. '<|end|>' → logprob: -6.800323963165283

Token 940: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36813345551490784
    2. '<|end|>' → logprob: -1.8681334257125854
    3. ',' → logprob: -2.368133544921875
    4. '
' → logprob: -3.243133544921875
    5. '        
' → logprob: -5.118133544921875
    6. '.' → logprob: -5.118133544921875
    7. '<|end|>' → logprob: -5.868133544921875
    8. 'return' → logprob: -5.993133544921875
    9. '        ' → logprob: -7.243133544921875
    10. ',
' → logprob: -7.368133544921875

Token 941: ' its' (ID: 1617)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5354816913604736
    2. ' return' → logprob: -0.9104816913604736
    3. ' its' → logprob: -5.1604814529418945
    4. ' reconstruct' → logprob: -5.4104814529418945
    5. '#' → logprob: -7.9104814529418945
    6. 'def' → logprob: -8.035481452941895
    7. ' their' → logprob: -8.910481452941895
    8. 'back' → logprob: -9.285481452941895
    9. 'weight' → logprob: -9.410481452941895
    10. ' pass' → logprob: -9.410481452941895

Token 942: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.20480118691921234
    2. 'composition' → logprob: -1.9548012018203735
    3. 'comb' → logprob: -4.579801082611084
    4. ' weight' → logprob: -5.079801082611084
    5. 'count' → logprob: -5.204801082611084
    6. ' composition' → logprob: -5.204801082611084
    7. 'details' → logprob: -5.454801082611084
    8. 'items' → logprob: -5.579801082611084
    9. 'weights' → logprob: -5.829801082611084
    10. 'break' → logprob: -7.079801082611084

Token 943: '.

' (ID: 364)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -1.4016249179840088
    2. 'max' → logprob: -1.5266249179840088
    3. '
' → logprob: -1.7766249179840088
    4. '       ' → logprob: -1.9016249179840088
    5. ' max' → logprob: -2.651624917984009
    6. ' best' → logprob: -3.401624917984009
    7. ' for' → logprob: -3.526624917984009
    8. 'weight' → logprob: -4.02662467956543
    9. 'load' → logprob: -4.15162467956543
    10. '#' → logprob: -4.52662467956543

Token 944: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6111220121383667
    2. '
' → logprob: -0.8611220121383667
    3. 'best' → logprob: -4.361122131347656
    4. 'max' → logprob: -4.611122131347656
    5. ' best' → logprob: -5.611122131347656
    6. '#' → logprob: -5.986122131347656
    7. ' max' → logprob: -5.986122131347656
    8. 'weight' → logprob: -6.361122131347656
    9. ' for' → logprob: -8.486122131347656
    10. ' weight' → logprob: -8.611122131347656

Token 945: ' #' (ID: 1069)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.7538149952888489
    2. 'max' → logprob: -1.253814935684204
    3. ' max' → logprob: -2.378814935684204
    4. ' best' → logprob: -2.503814935684204
    5. 'weight' → logprob: -3.628814935684204
    6. '#' (adapté à ' #') → logprob: -3.878814935684204
    7. ' weight' → logprob: -5.378815174102783
    8. 'load' → logprob: -5.503815174102783
    9. 'for' → logprob: -5.878815174102783
    10. '
' → logprob: -5.878815174102783

Token 946: ' Find' (ID: 9764)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.34327468276023865
    2. 'best' → logprob: -1.468274712562561
    3. '#' → logprob: -3.3432745933532715
    4. 'weight' → logprob: -4.0932745933532715
    5. ' max' → logprob: -5.5932745933532715
    6. 'for' → logprob: -6.5932745933532715
    7. '   ' → logprob: -6.9682745933532715
    8. ' best' → logprob: -7.5932745933532715
    9. '       ' → logprob: -7.8432745933532715
    10. 'idx' → logprob: -8.21827507019043

Token 947: ' min' (ID: 1349)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.47460681200027466
    2. ' max' → logprob: -1.5996067523956299
    3. 'weight' → logprob: -2.22460675239563
    4. 'best' → logprob: -3.22460675239563
    5. ' weight' → logprob: -3.84960675239563
    6. ' best' → logprob: -5.099606990814209
    7. 'w' → logprob: -8.22460651397705
    8. 'profit' → logprob: -9.09960651397705
    9. 'min' → logprob: -9.59960651397705
    10. ' w' → logprob: -10.34960651397705

Token 948: ' weight' (ID: 6049)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.011418196372687817
    2. '_w' → logprob: -4.511418342590332
    3. '_' → logprob: -8.386418342590332
    4. '(weight' → logprob: -9.886418342590332
    5. 'weight' → logprob: -10.386418342590332
    6. ' weight' → logprob: -10.386418342590332
    7. 'w' → logprob: -11.386418342590332
    8. '_idx' → logprob: -12.261418342590332
    9. '_we' → logprob: -13.386418342590332
    10. '_weights' → logprob: -13.761418342590332

Token 949: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.41659796237945557
    2. 'for' → logprob: -1.4165979623794556
    3. ' =' → logprob: -3.916597843170166
    4. 'weight' → logprob: -4.416597843170166
    5. 'idx' → logprob: -4.416597843170166
    6. 'w' → logprob: -5.041597843170166
    7. ' with' → logprob: -5.166597843170166
    8. ' of' → logprob: -5.291597843170166
    9. '_for' → logprob: -5.291597843170166
    10. '_weight' → logprob: -5.291597843170166

Token 950: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.14048494398593903
    2. 'w' → logprob: -2.2654850482940674
    3. 'weight' → logprob: -4.515484809875488
    4. 'profit' → logprob: -4.640484809875488
    5. 'dp' → logprob: -5.890484809875488
    6. ' max' → logprob: -6.390484809875488
    7. 'p' → logprob: -7.515484809875488
    8. 'i' → logprob: -7.765484809875488
    9. ' w' → logprob: -8.015484809875488
    10. 'which' → logprob: -8.265484809875488

Token 951: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -0.11419828981161118
    2. '_weight' → logprob: -2.9891982078552246
    3. 'profit' → logprob: -3.1141982078552246
    4. '_' → logprob: -5.239198207855225
    5. 'weight' → logprob: -5.989198207855225
    6. 'dp' → logprob: -6.489198207855225
    7. '(dp' → logprob: -6.864198207855225
    8. '[i' → logprob: -7.364198207855225
    9. '_dp' → logprob: -7.364198207855225
    10. '[' → logprob: -7.864198207855225

Token 952: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3514053225517273
    2. 'for' → logprob: -2.351405382156372
    3. 'min' → logprob: -2.351405382156372
    4. ' for' → logprob: -3.101405382156372
    5. '       ' → logprob: -3.351405382156372
    6. ' min' → logprob: -4.226405143737793
    7. 'weight' → logprob: -5.851405143737793
    8. ' =' → logprob: -6.226405143737793
    9. 'max' → logprob: -6.476405143737793
    10. '        
' → logprob: -7.476405143737793

Token 953: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5082904100418091
    2. '
' → logprob: -1.508290410041809
    3. ' for' → logprob: -2.5082902908325195
    4. 'for' → logprob: -2.7582902908325195
    5. 'min' → logprob: -3.8832902908325195
    6. ' min' → logprob: -5.0082902908325195
    7. '```' → logprob: -5.7582902908325195
    8. 'weight' → logprob: -7.3832902908325195
    9. '        
' → logprob: -8.25829029083252
    10. 'w' → logprob: -9.00829029083252

Token 954: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.6472525596618652
    2. 'min' (adapté à ' min') → logprob: -0.7722525596618652
    3. 'for' → logprob: -6.147252559661865
    4. ' w' → logprob: -6.272252559661865
    5. 'weight' → logprob: -6.272252559661865
    6. ' weight' → logprob: -6.522252559661865
    7. ' for' → logprob: -6.522252559661865
    8. 'best' → logprob: -6.647252559661865
    9. ' best' → logprob: -6.772252559661865
    10. '
' → logprob: -6.897252559661865

Token 955: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.0019323242595419288
    2. '_w' → logprob: -6.251932144165039
    3. 'w' → logprob: -13.001932144165039
    4. 'weight' → logprob: -14.501932144165039
    5. '_' → logprob: -14.501932144165039
    6. '_we' → logprob: -15.376932144165039
    7. '_weights' → logprob: -16.25193214416504
    8. '
' → logprob: -17.37693214416504
    9. '_cost' → logprob: -17.50193214416504
    10. 'Weight' → logprob: -17.75193214416504

Token 956: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008615515194833279
    2. ' =' → logprob: -4.758615493774414
    3. '=min' → logprob: -14.508615493774414
    4. '=max' → logprob: -15.133615493774414
    5. '=int' → logprob: -16.258615493774414
    6. '=index' → logprob: -17.258615493774414
    7. '=
' → logprob: -17.633615493774414
    8. '=None' → logprob: -17.883615493774414
    9. '=self' → logprob: -18.008615493774414
    10. 'for' → logprob: -18.008615493774414

Token 957: ' next' (ID: 2613)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.22369597852230072
    2. 'next' → logprob: -1.973695993423462
    3. 'min' → logprob: -3.348695993423462
    4. 'self' → logprob: -3.723695993423462
    5. ' next' → logprob: -6.723695755004883
    6. '0' → logprob: -7.473695755004883
    7. ' dp' → logprob: -7.973695755004883
    8. 'max' → logprob: -10.473695755004883
    9. ' min' → logprob: -10.598695755004883
    10. 'None' → logprob: -10.723695755004883

Token 958: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.1276921033859253
    2. '(i' → logprob: -2.377692222595215
    3. '(weight' → logprob: -3.627692222595215
    4. '((' → logprob: -7.752692222595215
    5. '(' → logprob: -9.627692222595215
    6. '(idx' → logprob: -10.502692222595215
    7. '(filter' → logprob: -12.252692222595215
    8. '(
' → logprob: -12.627692222595215
    9. '(x' → logprob: -13.752692222595215
    10. '(index' → logprob: -15.252692222595215

Token 959: ' for' (ID: 395)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6016269326210022
    2. '(w' → logprob: -0.8516269326210022
    3. 'for' → logprob: -3.8516268730163574
    4. ' for' → logprob: -5.976626873016357
    5. '(' → logprob: -7.351626873016357
    6. '(weight' → logprob: -7.726626873016357
    7. '(idx' → logprob: -8.226627349853516
    8. 'i' → logprob: -9.601627349853516
    9. '((' → logprob: -10.101627349853516
    10. 'w' → logprob: -10.226627349853516

Token 960: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.8624639324116288e-06
    2. ' w' → logprob: -13.250001907348633
    3. ',w' → logprob: -22.375001907348633
    4. '	w' → logprob: -23.250001907348633
    5. '(w' → logprob: -23.500001907348633
    6. '
' → logprob: -24.500001907348633
    7. '[w' → logprob: -24.875001907348633
    8. 'weight' → logprob: -25.750001907348633
    9. '```' → logprob: -25.750001907348633
    10. '<w' → logprob: -26.125001907348633

Token 961: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.41072115302085876
    2. ' in' → logprob: -1.1607211828231812
    3. ',w' → logprob: -4.410721302032471
    4. ',' → logprob: -4.535721302032471
    5. 'w' → logprob: -7.285721302032471
    6. ',in' → logprob: -12.410720825195312
    7. ',v' → logprob: -12.535720825195312
    8. 'range' → logprob: -13.160720825195312
    9. '```' → logprob: -13.910720825195312
    10. ' ,' → logprob: -14.160720825195312

Token 962: ' val' (ID: 1459)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.33416226506233215
    2. 'profit' → logprob: -1.8341622352600098
    3. 'p' → logprob: -2.3341622352600098
    4. 'val' → logprob: -4.08416223526001
    5. 'prof' → logprob: -4.70916223526001
    6. 'pr' → logprob: -6.83416223526001
    7. 'pv' → logprob: -7.95916223526001
    8. 'dp' → logprob: -10.334162712097168
    9. ' profit' → logprob: -10.834162712097168
    10. 'vp' → logprob: -10.959162712097168

Token 963: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12695635855197906
    2. ' in' → logprob: -2.1269564628601074
    3. ',' → logprob: -10.87695598602295
    4. ',val' → logprob: -12.00195598602295
    5. ' ' → logprob: -13.62695598602295
    6. 'val' → logprob: -14.62695598602295
    7. ')' → logprob: -15.12695598602295
    8. '
' → logprob: -15.75195598602295
    9. '   ' → logprob: -15.75195598602295
    10. 'is' → logprob: -15.87695598602295

Token 964: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0004311460361350328
    2. ' enumerate' → logprob: -7.750431060791016
    3. '
' → logprob: -15.750431060791016
    4. '```' → logprob: -15.875431060791016
    5. '[(' → logprob: -16.500431060791016
    6. 'enum' → logprob: -17.500431060791016
    7. 'enqueue' → logprob: -17.625431060791016
    8. 'en' → logprob: -18.000431060791016
    9. 'in' → logprob: -18.250431060791016
    10. '

' → logprob: -19.375431060791016

Token 965: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.014163628220558167
    2. 'dp' → logprob: -4.264163494110107
    3. ' dp' → logprob: -15.764163970947266
    4. '	dp' → logprob: -17.139163970947266
    5. '_dp' → logprob: -18.764163970947266
    6. '(d' → logprob: -19.389163970947266
    7. 'DP' → logprob: -19.889163970947266
    8. '(
' → logprob: -20.389163970947266
    9. 'Dp' → logprob: -20.889163970947266
    10. '
' → logprob: -21.139163970947266

Token 966: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5005202293395996
    2. ')' → logprob: -1.6255202293395996
    3. 'if' → logprob: -1.6255202293395996
    4. '   ' → logprob: -9.500520706176758
    5. '()' → logprob: -10.750520706176758
    6. '
' → logprob: -11.000520706176758
    7. ' )' → logprob: -11.500520706176758
    8. ' ' → logprob: -11.625520706176758
    9. '           ' → logprob: -12.125520706176758
    10. ']' → logprob: -12.250520706176758

Token 967: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20141762495040894
    2. 'if' → logprob: -1.7014176845550537
    3. '   ' → logprob: -13.701417922973633
    4. ' in' → logprob: -13.951417922973633
    5. '
' → logprob: -14.451417922973633
    6. ')' → logprob: -14.701417922973633
    7. '           ' → logprob: -15.201417922973633
    8. ' ' → logprob: -15.326417922973633
    9. 'in' → logprob: -15.451417922973633
    10. '            ' → logprob: -16.201417922973633

Token 968: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -6.611323624383658e-05
    2. ' val' → logprob: -9.625065803527832
    3. '(val' → logprob: -18.00006675720215
    4. '   ' → logprob: -18.00006675720215
    5. '	val' → logprob: -18.12506675720215
    6. '[val' → logprob: -18.50006675720215
    7. '_val' → logprob: -19.50006675720215
    8. 'v' → logprob: -20.62506675720215
    9. '.val' → logprob: -20.75006675720215
    10. 'vall' → logprob: -20.75006675720215

Token 969: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08936221152544022
    2. ' ==' → logprob: -2.464362144470215
    3. '>=' → logprob: -8.464362144470215
    4. '==
' → logprob: -8.589362144470215
    5. ' >=' → logprob: -11.714362144470215
    6. '=' → logprob: -11.964362144470215
    7. ']==' → logprob: -12.089362144470215
    8. ')==' → logprob: -12.589362144470215
    9. '===' → logprob: -14.839362144470215
    10. ' ==
' → logprob: -15.089362144470215

Token 970: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -7.493430894101039e-05
    2. ' max' → logprob: -9.500075340270996
    3. '[max' → logprob: -19.37507438659668
    4. '   ' → logprob: -20.12507438659668
    5. '
' → logprob: -21.00007438659668
    6. ' ' → logprob: -21.62507438659668
    7. '	max' → logprob: -21.87507438659668
    8. '(max' → logprob: -22.75007438659668
    9. '=max' → logprob: -23.00007438659668
    10. '_max' → logprob: -23.12507438659668

Token 971: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -1.1994775377388578e-05
    2. 'profit' → logprob: -12.000012397766113
    3. '_prof' → logprob: -12.375012397766113
    4. '_' → logprob: -14.875012397766113
    5. '_pro' → logprob: -15.000012397766113
    6. '_prob' → logprob: -15.125012397766113
    7. 'max' → logprob: -15.250012397766113
    8. ' profit' → logprob: -16.250011444091797
    9. '_max' → logprob: -16.500011444091797
    10. '\' → logprob: -16.750011444091797

Token 972: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.5252596464706585e-05
    2. ')
' → logprob: -10.125044822692871
    3. ' )' → logprob: -12.875044822692871
    4. ' and' → logprob: -13.625044822692871
    5. '       ' → logprob: -14.375044822692871
    6. ')return' → logprob: -15.375044822692871
    7. 'and' → logprob: -15.750044822692871
    8. ')

' → logprob: -16.375045776367188
    9. ')
' → logprob: -16.500045776367188
    10. ' if' → logprob: -17.000045776367188

Token 973: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0055409702472388744
    2. 'return' → logprob: -5.75554084777832
    3. '
' → logprob: -6.13054084777832
    4. ' return' → logprob: -8.75554084777832
    5. '        
' → logprob: -11.00554084777832
    6. ',' → logprob: -13.25554084777832
    7. '<|end|>' → logprob: -13.25554084777832
    8. '           ' → logprob: -13.63054084777832
    9. '\
' → logprob: -14.00554084777832
    10. '   ' → logprob: -14.00554084777832

Token 974: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03807627409696579
    2. '       ' → logprob: -3.288076162338257
    3. ' return' → logprob: -10.788076400756836
    4. 'load' → logprob: -11.538076400756836
    5. '
' → logprob: -13.288076400756836
    6. '#' → logprob: -13.288076400756836
    7. '   ' → logprob: -15.038076400756836
    8. 'if' → logprob: -15.288076400756836
    9. '        
' → logprob: -15.538076400756836
    10. 'import' → logprob: -15.788076400756836

Token 975: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.21148967742919922
    2. '(min' → logprob: -1.9614896774291992
    3. '(max' → logprob: -3.211489677429199
    4. '[min' → logprob: -5.711489677429199
    5. '(' → logprob: -5.836489677429199
    6. '{"' → logprob: -6.461489677429199
    7. '[' → logprob: -7.211489677429199
    8. '[max' → logprob: -7.461489677429199
    9. '{'' → logprob: -7.836489677429199
    10. '{' → logprob: -9.5864896774292

Token 976: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.006059267558157444
    2. 'max' → logprob: -5.131059169769287
    3. 'city' → logprob: -9.131059646606445
    4. '[min' → logprob: -11.506059646606445
    5. '(min' → logprob: -12.506059646606445
    6. ' min' → logprob: -12.631059646606445
    7. 'self' → logprob: -13.506059646606445
    8. '0' → logprob: -13.631059646606445
    9. '   ' → logprob: -14.131059646606445
    10. '[' → logprob: -15.006059646606445

Token 977: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -9.014684110297821e-06
    2. '_w' → logprob: -12.500008583068848
    3. '_we' → logprob: -12.750008583068848
    4. ' _' → logprob: -13.875008583068848
    5. '_' → logprob: -14.250008583068848
    6. '_weights' → logprob: -15.125008583068848
    7. '_width' → logprob: -15.750008583068848
    8. ')_' → logprob: -16.250009536743164
    9. '_weapon' → logprob: -17.125009536743164
    10. '\' → logprob: -17.250009536743164

Token 978: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.575563020305708e-05
    2. ',max' → logprob: -9.875065803527832
    3. ',
' → logprob: -12.125065803527832
    4. ' ,' → logprob: -12.375065803527832
    5. ',min' → logprob: -12.875065803527832
    6. ',p' → logprob: -15.125065803527832
    7. ',",' → logprob: -15.250065803527832
    8. ',{
' → logprob: -15.750065803527832
    9. '<|end|>' → logprob: -15.875065803527832
    10. ',m' → logprob: -16.000064849853516

Token 979: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.011048054322600365
    2. ' max' → logprob: -4.511047840118408
    3. '[max' → logprob: -16.63604736328125
    4. ' ' → logprob: -16.88604736328125
    5. '
' → logprob: -18.01104736328125
    6. '(max' → logprob: -18.38604736328125
    7. '   ' → logprob: -18.63604736328125
    8. ',max' → logprob: -18.88604736328125
    9. '	max' → logprob: -19.26104736328125
    10. ' 
' → logprob: -20.51104736328125

Token 980: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -2.2200749754119897e-06
    2. 'profit' → logprob: -13.250001907348633
    3. '_prof' → logprob: -15.000001907348633
    4. '_pro' → logprob: -17.375001907348633
    5. '_prob' → logprob: -18.375001907348633
    6. 'Profit' → logprob: -18.750001907348633
    7. '\' → logprob: -19.000001907348633
    8. '_product' → logprob: -19.750001907348633
    9. '_' → logprob: -19.750001907348633
    10. ' profit' → logprob: -19.875001907348633

Token 981: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00010425841173855588
    2. ')]
' → logprob: -10.125103950500488
    3. ',' → logprob: -10.375103950500488
    4. ')' → logprob: -11.000103950500488
    5. ' )' → logprob: -11.375103950500488
    6. ']' → logprob: -13.500103950500488
    7. '       ' → logprob: -13.625103950500488
    8. ')])' → logprob: -14.750103950500488
    9. ')],' → logprob: -14.875103950500488
    10. '   ' → logprob: -15.375103950500488

Token 982: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 983: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.16516511142253876
    2. '   ' → logprob: -1.9151650667190552
    3. ' def' → logprob: -5.790164947509766
    4. '@' → logprob: -6.290164947509766
    5. '```' → logprob: -12.040164947509766
    6. '    
' → logprob: -12.290164947509766
    7. ')' → logprob: -12.915164947509766
    8. '	def' → logprob: -14.040164947509766
    9. '
' → logprob: -14.540164947509766
    10. ' @' → logprob: -14.915164947509766

Token 984: ' solve' (ID: 17722)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.8419009447097778
    2. ' max' → logprob: -1.8419009447097778
    3. 'best' → logprob: -1.8419009447097778
    4. 'max' → logprob: -1.9669009447097778
    5. ' maximize' → logprob: -3.0919008255004883
    6. 'maximize' → logprob: -4.466900825500488
    7. ' can' → logprob: -4.716900825500488
    8. '_best' → logprob: -4.966900825500488
    9. 'can' → logprob: -5.091900825500488
    10. 'possible' → logprob: -5.216900825500488

Token 985: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.030191605910658836
    2. '(' → logprob: -3.530191659927368
    3. '_' → logprob: -8.905191421508789
    4. '_(' → logprob: -9.280191421508789
    5. ' (' → logprob: -9.405191421508789
    6. 'self' → logprob: -9.905191421508789
    7. '   ' → logprob: -10.280191421508789
    8. '(s' → logprob: -10.780191421508789
    9. '_self' → logprob: -12.280191421508789
    10. '__(' → logprob: -12.530191421508789

Token 986: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35291314125061035
    2. '):' → logprob: -1.6029131412506104
    3. 'self' → logprob: -3.3529131412506104
    4. '_' → logprob: -3.7279131412506104
    5. ')_' → logprob: -4.352912902832031
    6. '_,' → logprob: -4.477912902832031
    7. ')' → logprob: -5.102912902832031
    8. '_self' → logprob: -5.852912902832031
    9. '(self' → logprob: -6.727912902832031
    10. ',_' → logprob: -7.227912902832031

Token 987: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009236076730303466
    2. '   ' → logprob: -7.3759236335754395
    3. '        
' → logprob: -8.500923156738281
    4. '
' → logprob: -10.625923156738281
    5. '```' → logprob: -11.000923156738281
    6. 'self' → logprob: -11.000923156738281
    7. '    
' → logprob: -11.250923156738281
    8. '(self' → logprob: -12.000923156738281
    9. '    ' → logprob: -12.625923156738281
    10. '           ' → logprob: -12.750923156738281

Token 988: ' #' (ID: 1069)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.3585972785949707
    2. '       ' → logprob: -1.4835972785949707
    3. 'dp' → logprob: -3.4835972785949707
    4. 'max' → logprob: -4.233597278594971
    5. '#' (adapté à ' #') → logprob: -4.358597278594971
    6. 'from' → logprob: -4.483597278594971
    7. 'time' → logprob: -6.358597278594971
    8. 'import' → logprob: -6.483597278594971
    9. 'self' → logprob: -7.983597278594971
    10. 'cache' → logprob: -7.983597278594971

Token 989: ' Strategy' (ID: 39435)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.2636343836784363
    2. 'from' → logprob: -2.388634443283081
    3. 'dp' → logprob: -3.263634443283081
    4. 'max' → logprob: -3.388634443283081
    5. '#' → logprob: -3.513634443283081
    6. 'time' → logprob: -3.888634443283081
    7. 'cache' → logprob: -5.138634204864502
    8. 'import' → logprob: -5.263634204864502
    9. 'capacity' → logprob: -6.388634204864502
    10. 'memo' → logprob: -6.888634204864502

Token 990: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21427324414253235
    2. '       ' → logprob: -2.21427321434021
    3. ':
' → logprob: -2.83927321434021
    4. '
' → logprob: -4.089273452758789
    5. '=' → logprob: -5.339273452758789
    6. ' =' → logprob: -6.714273452758789
    7. '#' → logprob: -7.339273452758789
    8. '        
' → logprob: -7.464273452758789
    9. '```' → logprob: -8.089273452758789
    10. 'dp' → logprob: -8.714273452758789

Token 991: ' Dynamic' (ID: 37191)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.9565332531929016
    2. 'dp' → logprob: -1.0815331935882568
    3. '#' → logprob: -1.8315331935882568
    4. 'from' → logprob: -3.456533193588257
    5. 'max' → logprob: -3.456533193588257
    6. 'best' → logprob: -3.456533193588257
    7. 'time' → logprob: -4.706533432006836
    8. 'res' → logprob: -5.831533432006836
    9. 'cache' → logprob: -6.206533432006836
    10. 'import' → logprob: -6.331533432006836

Token 992: ' programming' (ID: 23238)
  Prédit: ' programming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programming' → logprob: -0.27946823835372925
    2. 'Programming' → logprob: -1.529468297958374
    3. 'program' → logprob: -4.529468059539795
    4. '_program' → logprob: -4.529468059539795
    5. ' Programming' → logprob: -5.279468059539795
    6. ' ' → logprob: -9.029468536376953
    7. '       ' → logprob: -9.029468536376953
    8. '   ' → logprob: -9.154468536376953
    9. '    ' → logprob: -10.404468536376953
    10. 'Program' → logprob: -10.654468536376953

Token 993: ' over' (ID: 1072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46930691599845886
    2. '
' → logprob: -1.5943069458007812
    3. '(
' → logprob: -2.5943069458007812
    4. '(self' → logprob: -3.3443069458007812
    5. '()' → logprob: -3.8443069458007812
    6. '(' → logprob: -4.219306945800781
    7. ':' → logprob: -4.969306945800781
    8. '()
' → logprob: -5.969306945800781
    9. '        
' → logprob: -5.969306945800781
    10. 'def' → logprob: -6.094306945800781

Token 994: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.06636277586221695
    2. '(' → logprob: -3.3163628578186035
    3. 'self' → logprob: -3.8163628578186035
    4. 'current' → logprob: -6.1913628578186035
    5. ' time' → logprob: -7.0663628578186035
    6. '(self' → logprob: -7.5663628578186035
    7. '(time' → logprob: -7.6913628578186035
    8. 'visited' → logprob: -7.9413628578186035
    9. 'remaining' → logprob: -8.191362380981445
    10. 'used' → logprob: -8.191362380981445

Token 995: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043887875974178314
    2. '
' → logprob: -3.2938878536224365
    3. ':' → logprob: -5.918888092041016
    4. ',' → logprob: -7.168888092041016
    5. '        
' → logprob: -7.418888092041016
    6. ' and' → logprob: -7.543888092041016
    7. 'def' → logprob: -8.168888092041016
    8. '   ' → logprob: -8.543888092041016
    9. ':
' → logprob: -9.043888092041016
    10. 'and' → logprob: -9.168888092041016

Token 996: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001484747277572751
    2. 'dp' → logprob: -7.8764848709106445
    3. '
' → logprob: -8.001484870910645
    4. '        
' → logprob: -8.126484870910645
    5. '   ' → logprob: -8.501484870910645
    6. ' dp' → logprob: -9.126484870910645
    7. 'from' → logprob: -10.251484870910645
    8. 'import' → logprob: -10.376484870910645
    9. '```' → logprob: -10.751484870910645
    10. ' from' → logprob: -11.626484870910645

Token 997: ' #' (ID: 1069)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.8387190103530884
    2. 'dp' → logprob: -0.9637190103530884
    3. '       ' → logprob: -2.088718891143799
    4. 'max' → logprob: -3.588718891143799
    5. 'from' → logprob: -4.338718891143799
    6. ' @' → logprob: -5.088718891143799
    7. '#' (adapté à ' #') → logprob: -5.588718891143799
    8. '   ' → logprob: -5.713718891143799
    9. '
' → logprob: -6.088718891143799
    10. 'import' → logprob: -6.713718891143799

Token 998: ' Each' (ID: 11555)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1461436003446579
    2. '@' → logprob: -2.146143674850464
    3. 'max' → logprob: -4.646143436431885
    4. 'from' → logprob: -5.896143436431885
    5. '       ' → logprob: -6.146143436431885
    6. '#' → logprob: -6.396143436431885
    7. 'memo' → logprob: -6.646143436431885
    8. 'cache' → logprob: -7.396143436431885
    9. '   ' → logprob: -7.896143436431885
    10. 'time' → logprob: -8.146143913269043

Token 999: ' trip' (ID: 8831)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -1.3524894714355469
    2. 'def' → logprob: -1.4774894714355469
    3. 'city' → logprob: -2.102489471435547
    4. 'time' → logprob: -2.977489471435547
    5. 'step' → logprob: -2.977489471435547
    6. '       ' → logprob: -3.227489471435547
    7. 'possible' → logprob: -3.352489471435547
    8. ' city' → logprob: -3.477489471435547
    9. ' step' → logprob: -3.602489471435547
    10. '   ' → logprob: -3.977489471435547

Token 1000: ' from' (ID: 591)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3230738639831543
    2. '       ' → logprob: -1.6980738639831543
    3. ' starts' → logprob: -1.6980738639831543
    4. ' can' → logprob: -2.3230738639831543
    5. ' is' → logprob: -2.4480738639831543
    6. 'starts' → logprob: -3.5730738639831543
    7. 'can' → logprob: -3.6980738639831543
    8. ' represents' → logprob: -4.073073863983154
    9. 'cons' → logprob: -4.073073863983154
    10. '=' → logprob: -4.448073863983154

Token 1001: ' market' (ID: 2910)
  Prédit: 'market'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'market' → logprob: -0.03427911922335625
    2. ' market' → logprob: -3.4092791080474854
    3. 'the' → logprob: -8.159278869628906
    4. 'self' → logprob: -9.159278869628906
    5. '_market' → logprob: -9.284278869628906
    6. ' the' → logprob: -10.534278869628906
    7. 'city' → logprob: -10.659278869628906
    8. 'def' → logprob: -10.909278869628906
    9. '#' → logprob: -11.409278869628906
    10. '   ' → logprob: -11.534278869628906

Token 1002: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.3531123995780945
    2. ' to' → logprob: -1.9781124591827393
    3. 'to' → logprob: -2.4781124591827393
    4. ' ->' → logprob: -2.7281124591827393
    5. '       ' → logprob: -5.72811222076416
    6. 'can' → logprob: -6.72811222076416
    7. '→' → logprob: -6.72811222076416
    8. ' can' → logprob: -6.85311222076416
    9. '   ' → logprob: -7.10311222076416
    10. ' ' → logprob: -7.97811222076416

Token 1003: 'city' (ID: 17500)
  Prédit: 'city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.0019580135121941566
    2. ' city' → logprob: -6.251957893371582
    3. 'cities' → logprob: -11.501957893371582
    4. 'any' → logprob: -11.626957893371582
    5. 'some' → logprob: -12.376957893371582
    6. 'market' → logprob: -13.376957893371582
    7. '_city' → logprob: -14.001957893371582
    8. 'City' → logprob: -14.126957893371582
    9. 'c' → logprob: -14.251957893371582
    10. 'a' → logprob: -14.251957893371582

Token 1004: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.00014811802248004824
    2. ' ->' → logprob: -9.250147819519043
    3. '->[' → logprob: -11.000147819519043
    4. '
' → logprob: -12.125147819519043
    5. '->{' → logprob: -12.250147819519043
    6. '->____' → logprob: -12.500147819519043
    7. '→' → logprob: -12.500147819519043
    8. '->_' → logprob: -12.625147819519043
    9. ')->' → logprob: -12.625147819519043
    10. '}->' → logprob: -12.875147819519043

Token 1005: 'market' (ID: 27236)
  Prédit: 'market'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'market' → logprob: -0.00016551809676457196
    2. ' market' → logprob: -9.250165939331055
    3. 'city' → logprob: -9.625165939331055
    4. '
' → logprob: -13.750165939331055
    5. '_market' → logprob: -14.375165939331055
    6. 'markt' → logprob: -14.500165939331055
    7. '   ' → logprob: -15.625165939331055
    8. ' ' → logprob: -15.750165939331055
    9. '```' → logprob: -16.125165939331055
    10. 'markets' → logprob: -16.125165939331055

Token 1006: ' costs' (ID: 8959)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.0681793689727783
    2. '       ' → logprob: -2.1931793689727783
    3. 'can' → logprob: -2.4431793689727783
    4. '#' → logprob: -2.6931793689727783
    5. '
' → logprob: -2.6931793689727783
    6. 'for' → logprob: -2.8181793689727783
    7. ':' → logprob: -3.1931793689727783
    8. ' for' → logprob: -3.6931793689727783
    9. ' with' → logprob: -3.6931793689727783
    10. ' involves' → logprob: -3.8181793689727783

Token 1007: ' ' (ID: 220)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.1090478897094727
    2. '2' → logprob: -1.2340478897094727
    3. ' time' → logprob: -1.4840478897094727
    4. ' ' → logprob: -2.6090478897094727
    5. '1' → logprob: -3.7340478897094727
    6. 'self' → logprob: -3.8590478897094727
    7. '0' → logprob: -4.984047889709473
    8. ' self' → logprob: -5.234047889709473
    9. '
' → logprob: -5.359047889709473
    10. ' at' → logprob: -5.609047889709473

Token 1008: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4143911600112915
    2. 'time' → logprob: -1.7893911600112915
    3. 'self' → logprob: -2.414391040802002
    4. '1' → logprob: -3.664391040802002
    5. '0' → logprob: -4.039391040802002
    6. 't' → logprob: -5.164391040802002
    7. '
' → logprob: -5.289391040802002
    8. 'distance' → logprob: -5.289391040802002
    9. 'trip' → logprob: -5.664391040802002
    10. 'lambda' → logprob: -5.789391040802002

Token 1009: '*' (ID: 9)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01150293555110693
    2. '*' → logprob: -4.511502742767334
    3. '*self' → logprob: -7.886502742767334
    4. '*(' → logprob: -10.011503219604492
    5. ' ' → logprob: -10.636503219604492
    6. ' *
' → logprob: -13.011503219604492
    7. '*time' → logprob: -13.261503219604492
    8. ' ' → logprob: -13.386503219604492
    9. '
' → logprob: -13.386503219604492
    10. ' +' → logprob: -15.011503219604492

Token 1010: 'distance' (ID: 40614)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3105618953704834
    2. 'distance' → logprob: -1.5605618953704834
    3. 'city' → logprob: -3.4355618953704834
    4. 'abs' → logprob: -4.5605621337890625
    5. 'dist' → logprob: -5.8105621337890625
    6. '(self' → logprob: -6.1855621337890625
    7. 'max' → logprob: -6.6855621337890625
    8. ' self' → logprob: -6.9355621337890625
    9. 'the' → logprob: -6.9355621337890625
    10. 'def' → logprob: -6.9355621337890625

Token 1011: '(city' (ID: 84604)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.3019222319126129
    2. '       ' → logprob: -1.8019222021102905
    3. '_' → logprob: -3.42692232131958
    4. ' to' → logprob: -4.17692232131958
    5. '   ' → logprob: -4.55192232131958
    6. '(self' → logprob: -4.67692232131958
    7. 'to' → logprob: -5.67692232131958
    8. '(' → logprob: -5.67692232131958
    9. ' =' → logprob: -5.92692232131958
    10. '
' → logprob: -6.17692232131958

Token 1012: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0339257717132568
    2. '.idx' → logprob: -1.0339257717132568
    3. '.x' → logprob: -1.2839257717132568
    4. '.' → logprob: -5.783926010131836
    5. '   ' → logprob: -5.908926010131836
    6. ' .' → logprob: -6.158926010131836
    7. ').' → logprob: -6.658926010131836
    8. '```' → logprob: -8.033926010131836
    9. ' ' → logprob: -8.158926010131836
    10. '.i' → logprob: -8.283926010131836

Token 1013: ' market' (ID: 2910)
  Prédit: 'market'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'market' → logprob: -0.46776461601257324
    2. 'city' → logprob: -1.2177646160125732
    3. ')' → logprob: -2.9677646160125732
    4. '0' → logprob: -4.092764854431152
    5. 'self' → logprob: -5.092764854431152
    6. ' market' → logprob: -6.967764854431152
    7. ' city' → logprob: -7.342764854431152
    8. ' ' → logprob: -8.217764854431152
    9. ' )' → logprob: -8.342764854431152
    10. '
' → logprob: -8.342764854431152

Token 1014: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007146418560296297
    2. ')+' → logprob: -5.00714635848999
    3. ')
' → logprob: -9.132146835327148
    4. ' )' → logprob: -9.257146835327148
    5. '),' → logprob: -10.007146835327148
    6. '))' → logprob: -10.257146835327148
    7. ').' → logprob: -10.632146835327148
    8. '   ' → logprob: -10.757146835327148
    9. '+' → logprob: -10.882146835327148
    10. '()' → logprob: -11.007146835327148

Token 1015: ' minutes' (ID: 5438)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6663528084754944
    2. '
' → logprob: -0.7913528084754944
    3. '+' → logprob: -4.16635274887085
    4. ' +' → logprob: -4.66635274887085
    5. '        
' → logprob: -5.41635274887085
    6. '  
' → logprob: -7.66635274887085
    7. '   ' → logprob: -7.79135274887085
    8. ',' → logprob: -7.79135274887085
    9. '```' → logprob: -7.79135274887085
    10. '*' → logprob: -8.291353225708008

Token 1016: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01465102843940258
    2. '
' → logprob: -4.389650821685791
    3. ',' → logprob: -7.014650821685791
    4. '        
' → logprob: -7.389650821685791
    5. '+' → logprob: -8.63965129852295
    6. '   ' → logprob: -9.38965129852295
    7. ' +' → logprob: -9.88965129852295
    8. '  
' → logprob: -10.13965129852295
    9. '.' → logprob: -10.38965129852295
    10. '           ' → logprob: -10.51465129852295

Token 1017: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011177030391991138
    2. '
' → logprob: -4.636177062988281
    3. '   ' → logprob: -7.636177062988281
    4. '        
' → logprob: -8.011177062988281
    5. ' for' → logprob: -9.386177062988281
    6. ',' → logprob: -9.386177062988281
    7. '```' → logprob: -9.511177062988281
    8. 'for' → logprob: -9.761177062988281
    9. '  
' → logprob: -9.886177062988281
    10. ' 
' → logprob: -10.511177062988281

Token 1018: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3744557797908783
    2. '
' → logprob: -1.2494558095932007
    3. ' 
' → logprob: -4.74945592880249
    4. '        
' → logprob: -5.24945592880249
    5. ' ' → logprob: -5.74945592880249
    6. '  
' → logprob: -6.37445592880249
    7. '   ' → logprob: -6.49945592880249
    8. '\n' → logprob: -7.24945592880249
    9. '    
' → logprob: -7.24945592880249
    10. '\' → logprob: -7.62445592880249

Token 1019: ' We' (ID: 1416)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3247906267642975
    2. 'max' → logprob: -2.3247907161712646
    3. 'results' → logprob: -2.5747907161712646
    4. '       ' → logprob: -3.3247907161712646
    5. 'res' → logprob: -3.8247907161712646
    6. 'result' → logprob: -4.0747904777526855
    7. '#' → logprob: -4.9497904777526855
    8. 'for' → logprob: -5.5747904777526855
    9. 'best' → logprob: -5.6997904777526855
    10. 'profit' → logprob: -5.9497904777526855

Token 1020: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.6720976233482361
    2. '       ' → logprob: -0.9220976233482361
    3. 'can' → logprob: -3.047097682952881
    4. '   ' → logprob: -4.297097682952881
    5. ' have' → logprob: -5.672097682952881
    6. 'def' → logprob: -5.797097682952881
    7. ' continue' → logprob: -5.797097682952881
    8. ' will' → logprob: -5.922097682952881
    9. 'continue' → logprob: -6.297097682952881
    10. ' =' → logprob: -6.297097682952881

Token 1021: ' repeat' (ID: 22962)
  Prédit: 'buy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'buy' → logprob: -0.8647946119308472
    2. 'use' → logprob: -1.3647946119308472
    3. ' use' → logprob: -1.8647946119308472
    4. 'visit' → logprob: -3.2397947311401367
    5. 'try' → logprob: -3.9897947311401367
    6. 'go' → logprob: -3.9897947311401367
    7. 'purchase' → logprob: -3.9897947311401367
    8. ' buy' → logprob: -4.114794731140137
    9. ' visit' → logprob: -4.489794731140137
    10. 'make' → logprob: -4.739794731140137

Token 1022: ' trips' (ID: 27647)
  Prédit: ' trips'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trips' → logprob: -0.916111946105957
    2. ' visiting' → logprob: -1.041111946105957
    3. '       ' → logprob: -2.166111946105957
    4. ' the' → logprob: -2.916111946105957
    5. ' visits' → logprob: -3.416111946105957
    6. ' for' → logprob: -4.166111946105957
    7. 'the' → logprob: -5.291111946105957
    8. '
' → logprob: -5.291111946105957
    9. 'for' → logprob: -5.416111946105957
    10. '   ' → logprob: -5.791111946105957

Token 1023: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00818699225783348
    2. ' to' → logprob: -6.0081868171691895
    3. ',' → logprob: -6.6331868171691895
    4. 'for' → logprob: -6.8831868171691895
    5. 'to' → logprob: -7.3831868171691895
    6. 'until' → logprob: -7.3831868171691895
    7. ' until' → logprob: -7.5081868171691895
    8. '.' → logprob: -8.008187294006348
    9. ' for' → logprob: -8.508187294006348
    10. '
' → logprob: -8.508187294006348

Token 1024: ' same' (ID: 2684)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.6634792685508728
    2. 'cities' → logprob: -1.0384793281555176
    3. 'different' → logprob: -3.4134793281555176
    4. 'multiple' → logprob: -3.4134793281555176
    5. 'var' → logprob: -3.9134793281555176
    6. ' cities' → logprob: -4.663479328155518
    7. 'each' → logprob: -4.913479328155518
    8. 'city' → logprob: -5.038479328155518
    9. 'the' → logprob: -5.413479328155518
    10. 'other' → logprob: -5.788479328155518

Token 1025: ' or' (ID: 503)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.47645047307014465
    2. ' city' → logprob: -0.9764504432678223
    3. 'cities' → logprob: -6.476450443267822
    4. ' cities' → logprob: -7.726450443267822
    5. '
' → logprob: -8.10145092010498
    6. '   ' → logprob: -10.97645092010498
    7. '_city' → logprob: -11.10145092010498
    8. ' ' → logprob: -11.60145092010498
    9. '       ' → logprob: -12.22645092010498
    10. '```' → logprob: -12.22645092010498

Token 1026: ' different' (ID: 2647)
  Prédit: 'different'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'different' → logprob: -0.014326975680887699
    2. ' different' → logprob: -4.889327049255371
    3. 'other' → logprob: -5.014327049255371
    4. ' other' → logprob: -10.389327049255371
    5. 'multiple' → logprob: -11.639327049255371
    6. '
' → logprob: -12.514327049255371
    7. 'diff' → logprob: -12.639327049255371
    8. '```' → logprob: -12.764327049255371
    9. 'ifferent' → logprob: -13.014327049255371
    10. 'from' → logprob: -14.014327049255371

Token 1027: ' cities' (ID: 15636)
  Prédit: ' city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' city' → logprob: -0.4577013850212097
    2. 'city' → logprob: -1.2077014446258545
    3. ' cities' → logprob: -3.2077014446258545
    4. 'cities' → logprob: -3.5827014446258545
    5. '_city' → logprob: -9.457701683044434
    6. '
' → logprob: -11.082701683044434
    7. ' ' → logprob: -12.082701683044434
    8. 'locations' → logprob: -12.457701683044434
    9. '.city' → logprob: -12.707701683044434
    10. 'c' → logprob: -12.832701683044434

Token 1028: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2109672725200653
    2. '
' → logprob: -1.7109673023223877
    3. ',' → logprob: -4.960967063903809
    4. '        
' → logprob: -6.585967063903809
    5. '```' → logprob: -8.460967063903809
    6. '.' → logprob: -8.835967063903809
    7. '   ' → logprob: -8.835967063903809
    8. ':' → logprob: -9.085967063903809
    9. '#' → logprob: -9.210967063903809
    10. ':
' → logprob: -9.335967063903809

Token 1029: ' profits' (ID: 32798)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.7796334028244019
    2. 'different' → logprob: -1.7796334028244019
    3. 'no' → logprob: -2.7796335220336914
    4. 'in' → logprob: -3.1546335220336914
    5. 'any' → logprob: -3.2796335220336914
    6. 'possible' → logprob: -3.4046335220336914
    7. ' no' → logprob: -3.5296335220336914
    8. 'remaining' → logprob: -3.6546335220336914
    9. ' different' → logprob: -3.7796335220336914
    10. 'time' → logprob: -3.9046335220336914

Token 1030: ' given' (ID: 4335)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6972825527191162
    2. '       ' → logprob: -0.9472825527191162
    3. '.' → logprob: -2.697282552719116
    4. '=' → logprob: -4.447282791137695
    5. ':' → logprob: -5.072282791137695
    6. ',' → logprob: -5.947282791137695
    7. ' >' → logprob: -5.947282791137695
    8. '   ' → logprob: -6.072282791137695
    9. '
' → logprob: -6.072282791137695
    10. ' up' → logprob: -6.197282791137695

Token 1031: '.

' (ID: 364)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.3865368664264679
    2. '       ' → logprob: -1.5115368366241455
    3. ' by' → logprob: -2.5115368366241455
    4. 'in' → logprob: -6.136537075042725
    5. '           ' → logprob: -6.136537075042725
    6. 'for' → logprob: -6.261537075042725
    7. 'from' → logprob: -6.261537075042725
    8. 'self' → logprob: -6.511537075042725
    9. '   ' → logprob: -6.636537075042725
    10. '#' → logprob: -6.636537075042725

Token 1032: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16773170232772827
    2. '
' → logprob: -1.917731761932373
    3. '        
' → logprob: -5.292731761932373
    4. '```' → logprob: -7.667731761932373
    5. '  
' → logprob: -7.917731761932373
    6. '   ' → logprob: -8.042731285095215
    7. ' 
' → logprob: -8.542731285095215
    8. '`
' → logprob: -8.792731285095215
    9. '    
' → logprob: -8.917731285095215
    10. ' ' → logprob: -9.292731285095215

Token 1033: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08339449018239975
    2. '       ' → logprob: -3.2083945274353027
    3. 'max' → logprob: -3.5833945274353027
    4. '#' (adapté à ' #') → logprob: -5.708394527435303
    5. 'time' → logprob: -5.708394527435303
    6. 'res' → logprob: -6.083394527435303
    7. 'best' → logprob: -6.958394527435303
    8. 'result' → logprob: -7.708394527435303
    9. 'dist' → logprob: -8.333394050598145
    10. 'def' → logprob: -8.583394050598145

Token 1034: ' We'll' (ID: 46830)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.052957795560359955
    2. 'max' → logprob: -3.802957773208618
    3. '#' → logprob: -4.677958011627197
    4. 'time' → logprob: -4.677958011627197
    5. 'res' → logprob: -5.427958011627197
    6. 'times' → logprob: -6.427958011627197
    7. 'result' → logprob: -7.177958011627197
    8. 'dist' → logprob: -7.177958011627197
    9. 'best' → logprob: -7.177958011627197
    10. 'results' → logprob: -7.302958011627197

Token 1035: ' make' (ID: 1520)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6910980939865112
    2. 'use' → logprob: -2.441098213195801
    3. 'def' → logprob: -2.566098213195801
    4. 'continue' → logprob: -2.941098213195801
    5. '   ' → logprob: -3.191098213195801
    6. 'from' → logprob: -3.191098213195801
    7. 'max' → logprob: -3.316098213195801
    8. '       ' → logprob: -3.316098213195801
    9. 'cache' → logprob: -3.691098213195801
    10. 'define' → logprob: -3.941098213195801

Token 1036: ' a' (ID: 261)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4090808928012848
    2. 'a' → logprob: -1.6590808629989624
    3. 'def' → logprob: -2.784080982208252
    4. 'max' → logprob: -3.534080982208252
    5. 'time' → logprob: -3.784080982208252
    6. '   ' → logprob: -4.909080982208252
    7. '       ' → logprob: -5.159080982208252
    8. '@' → logprob: -5.909080982208252
    9. 'times' → logprob: -5.909080982208252
    10. 'self' → logprob: -6.034080982208252

Token 1037: ' list' (ID: 1562)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1925511658191681
    2. ' dp' → logprob: -2.0675511360168457
    3. 'for' → logprob: -4.067551136016846
    4. 'def' → logprob: -4.317551136016846
    5. 'from' → logprob: -5.067551136016846
    6. ' for' → logprob: -5.692551136016846
    7. 'max' → logprob: -6.442551136016846
    8. '   ' → logprob: -7.067551136016846
    9. '       ' → logprob: -7.067551136016846
    10. 'range' → logprob: -7.692551136016846

Token 1038: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.09499973058700562
    2. 'of' → logprob: -2.5949997901916504
    3. '       ' → logprob: -4.46999979019165
    4. '
' → logprob: -5.59499979019165
    5. '_of' → logprob: -7.84499979019165
    6. '=' → logprob: -8.969999313354492
    7. '```' → logprob: -9.719999313354492
    8. '[' → logprob: -9.969999313354492
    9. ' =' → logprob: -10.219999313354492
    10. '        
' → logprob: -10.594999313354492

Token 1039: ' all' (ID: 722)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.6206053495407104
    2. 'possible' → logprob: -1.3706053495407104
    3. 'trip' → logprob: -2.37060546875
    4. 'prof' → logprob: -3.24560546875
    5. 'profits' → logprob: -3.62060546875
    6. 'all' → logprob: -3.87060546875
    7. 'city' → logprob: -4.62060546875
    8. 'cities' → logprob: -5.74560546875
    9. '(' → logprob: -5.87060546875
    10. '[(' → logprob: -6.49560546875

Token 1040: ' possible' (ID: 4149)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.6391364932060242
    2. 'possible' → logprob: -1.014136552810669
    3. 'trip' → logprob: -3.389136552810669
    4. 'prof' → logprob: -4.26413631439209
    5. 'load' → logprob: -4.38913631439209
    6. 'city' → logprob: -4.51413631439209
    7. ' possible' → logprob: -4.88913631439209
    8. '(' → logprob: -5.26413631439209
    9. ' trips' → logprob: -5.26413631439209
    10. 'cities' → logprob: -5.63913631439209

Token 1041: ' trips' (ID: 27647)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.23499839007854462
    2. '(' → logprob: -2.4849984645843506
    3. 'trip' → logprob: -2.7349984645843506
    4. 'actions' → logprob: -4.6099982261657715
    5. '(tr' → logprob: -4.7349982261657715
    6. 'load' → logprob: -4.8599982261657715
    7. 'cities' → logprob: -4.9849982261657715
    8. '(city' → logprob: -5.4849982261657715
    9. 'city' → logprob: -5.7349982261657715
    10. '(self' → logprob: -5.9849982261657715

Token 1042: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9156200885772705
    2. '       ' → logprob: -1.0406200885772705
    3. 'with' → logprob: -2.6656200885772705
    4. '=' → logprob: -3.1656200885772705
    5. ' with' → logprob: -3.2906200885772705
    6. ':' → logprob: -3.2906200885772705
    7. '_trip' → logprob: -3.7906200885772705
    8. ':
' → logprob: -5.165619850158691
    9. 'trip' → logprob: -5.290619850158691
    10. '
' → logprob: -5.540619850158691

Token 1043: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44859564304351807
    2. ' trips' → logprob: -1.698595643043518
    3. 'trip' → logprob: -2.9485955238342285
    4. '[
' → logprob: -3.9485955238342285
    5. '[]
' → logprob: -4.0735955238342285
    6. 'tr' → logprob: -4.1985955238342285
    7. '
' → logprob: -4.1985955238342285
    8. 'tokens' → logprob: -4.5735955238342285
    9. ' trip' → logprob: -4.6985955238342285
    10. '[' → logprob: -4.9485955238342285

Token 1044: ' #' (ID: 1069)
  Prédit: ' trips'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trips' → logprob: -0.5385182499885559
    2. 'tr' → logprob: -1.1635181903839111
    3. 'trip' → logprob: -2.913518190383911
    4. '       ' → logprob: -4.16351842880249
    5. '[]
' → logprob: -4.91351842880249
    6. ' trip' → logprob: -5.03851842880249
    7. 'all' → logprob: -5.28851842880249
    8. 'possible' → logprob: -5.53851842880249
    9. 'self' → logprob: -6.16351842880249
    10. '[
' → logprob: -6.41351842880249

Token 1045: ' Each' (ID: 11555)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.5092530846595764
    2. ' trips' → logprob: -1.3842530250549316
    3. 'trip' → logprob: -2.6342530250549316
    4. '       ' → logprob: -3.2592530250549316
    5. 'all' → logprob: -3.6342530250549316
    6. 'self' → logprob: -5.509253025054932
    7. ' trip' → logprob: -5.884253025054932
    8. ' all' → logprob: -6.384253025054932
    9. ' self' → logprob: -6.509253025054932
    10. 'possible' → logprob: -6.759253025054932

Token 1046: ' trip' (ID: 8831)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.7013477087020874
    2. 'trip' → logprob: -1.7013477087020874
    3. 'city' → logprob: -1.9513477087020874
    4. ' trip' → logprob: -2.076347827911377
    5. ' city' → logprob: -2.201347827911377
    6. '_trip' → logprob: -2.326347827911377
    7. '_city' → logprob: -3.451347827911377
    8. ' load' → logprob: -4.451347827911377
    9. '[' → logprob: -4.451347827911377
    10. ')' → logprob: -4.451347827911377

Token 1047: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11839921027421951
    2. '=' → logprob: -2.743399143218994
    3. ':' → logprob: -3.993399143218994
    4. '_trip' → logprob: -4.118399143218994
    5. ' is' → logprob: -5.743399143218994
    6. '_' → logprob: -6.368399143218994
    7. 's' → logprob: -6.618399143218994
    8. ' consists' → logprob: -6.743399143218994
    9. 'from' → logprob: -6.993399143218994
    10. '.append' → logprob: -6.993399143218994

Token 1048: ' time' (ID: 1058)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0707664489746094
    2. 'trip' → logprob: -1.3207664489746094
    3. '(' → logprob: -1.9457664489746094
    4. '(city' → logprob: -2.8207664489746094
    5. 'for' → logprob: -3.4457664489746094
    6. 'city' → logprob: -3.5707664489746094
    7. ' city' → logprob: -3.6957664489746094
    8. ' trip' → logprob: -3.6957664489746094
    9. '[
' → logprob: -4.070766448974609
    10. ' for' → logprob: -4.195766448974609

Token 1049: '_cost' (ID: 36820)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43187910318374634
    2. '_cost' → logprob: -1.3068790435791016
    3. '_' → logprob: -3.9318790435791016
    4. ' =' → logprob: -4.181879043579102
    5. '_required' → logprob: -4.181879043579102
    6. '_needed' → logprob: -4.431879043579102
    7. '=' → logprob: -4.806879043579102
    8. '_,' → logprob: -6.056879043579102
    9. ' ,' → logprob: -6.181879043579102
    10. '   ' → logprob: -6.306879043579102

Token 1050: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30279383063316345
    2. '=' → logprob: -1.8027938604354858
    3. ' =' → logprob: -2.4277937412261963
    4. '   ' → logprob: -6.177793979644775
    5. ',
' → logprob: -6.427793979644775
    6. '[' → logprob: -6.552793979644775
    7. ')' → logprob: -7.302793979644775
    8. ' ,' → logprob: -7.927793979644775
    9. '_cost' → logprob: -8.177793502807617
    10. '_' → logprob: -8.427793502807617

Token 1051: ' profit' (ID: 15971)
  Prédit: ' profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' profit' → logprob: -0.6370490789413452
    2. 'profit' → logprob: -0.7620490789413452
    3. 'city' → logprob: -6.262049198150635
    4. ' city' → logprob: -6.387049198150635
    5. ' max' → logprob: -8.137048721313477
    6. 'max' → logprob: -8.637048721313477
    7. 'weight' → logprob: -10.137048721313477
    8. ' ' → logprob: -10.512048721313477
    9. 'trip' → logprob: -10.637048721313477
    10. 'prof' → logprob: -10.637048721313477

Token 1052: '

' (ID: 279)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7729281783103943
    2. ' =' → logprob: -1.022928237915039
    3. '   ' → logprob: -3.272928237915039
    4. '_tr' → logprob: -3.522928237915039
    5. 's' → logprob: -3.647928237915039
    6. '_trip' → logprob: -3.772928237915039
    7. 'tr' → logprob: -4.647928237915039
    8. '       ' → logprob: -4.647928237915039
    9. '=[]
' → logprob: -4.772928237915039
    10. '=
' → logprob: -5.022928237915039

Token 1053: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03742997348308563
    2. '[
' → logprob: -4.2874298095703125
    3. '   ' → logprob: -5.2874298095703125
    4. ' =' → logprob: -5.7874298095703125
    5. '[' → logprob: -6.2874298095703125
    6. '=' → logprob: -6.5374298095703125
    7. ':' → logprob: -6.6624298095703125
    8. ' for' → logprob: -6.9124298095703125
    9. 'for' → logprob: -6.9124298095703125
    10. ',' → logprob: -7.0374298095703125

Token 1054: ' trips' (ID: 27647)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.38693442940711975
    2. '       ' → logprob: -1.2619343996047974
    3. ' trips' → logprob: -3.886934518814087
    4. 'trip' → logprob: -4.261934280395508
    5. 'all' → logprob: -5.886934280395508
    6. 'self' → logprob: -9.261934280395508
    7. '
' → logprob: -9.386934280395508
    8. ' trip' → logprob: -10.011934280395508
    9. 'possible' → logprob: -10.011934280395508
    10. '   ' → logprob: -10.511934280395508

Token 1055: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.252023309469223
    2. '=' → logprob: -1.5020233392715454
    3. '=[]' → logprob: -9.627023696899414
    4. '_' → logprob: -11.377023696899414
    5. 's' → logprob: -12.502023696899414
    6. '=[]
' → logprob: -12.627023696899414
    7. '=[' → logprob: -13.252023696899414
    8. ',' → logprob: -13.377023696899414
    9. ':' → logprob: -13.627023696899414
    10. '[' → logprob: -13.752023696899414

Token 1056: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03804895281791687
    2. '[]
' → logprob: -3.2880489826202393
    3. ' []' → logprob: -12.28804874420166
    4. '[]

' → logprob: -13.16304874420166
    5. '[
' → logprob: -14.78804874420166
    6. '[' → logprob: -15.03804874420166
    7. ' []
' → logprob: -15.16304874420166
    8. '[])' → logprob: -18.163049697875977
    9. '[])
' → logprob: -18.163049697875977
    10. '   ' → logprob: -18.538049697875977

Token 1057: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5487313866615295
    2. ' for' → logprob: -1.5487313270568848
    3. '       ' → logprob: -1.6737313270568848
    4. '
' → logprob: -3.9237313270568848
    5. '        
' → logprob: -7.048731327056885
    6. ')' → logprob: -7.298731327056885
    7. '   ' → logprob: -8.298731803894043
    8. ')
' → logprob: -9.173731803894043
    9. '           ' → logprob: -9.798731803894043
    10. ',' → logprob: -9.923731803894043

Token 1058: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0026383185759186745
    2. ' for' → logprob: -6.002638339996338
    3. '       ' → logprob: -8.75263786315918
    4. '
' → logprob: -12.62763786315918
    5. '```' → logprob: -13.75263786315918
    6. '        
' → logprob: -16.62763786315918
    7. '   ' → logprob: -16.87763786315918
    8. '	for' → logprob: -17.12763786315918
    9. '``' → logprob: -17.12763786315918
    10. ')' → logprob: -17.62763786315918

Token 1059: ' idx' (ID: 14016)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.08688973635435104
    2. 'i' → logprob: -3.2118897438049316
    3. ' city' → logprob: -3.3368897438049316
    4. 'idx' → logprob: -5.461889743804932
    5. ' i' → logprob: -6.086889743804932
    6. 'ci' → logprob: -7.836889743804932
    7. ' idx' → logprob: -8.211889266967773
    8. 'load' → logprob: -9.211889266967773
    9. 'self' → logprob: -10.461889266967773
    10. '   ' → logprob: -10.836889266967773

Token 1060: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005966392927803099
    2. ' in' → logprob: -8.12559700012207
    3. ' ,' → logprob: -8.75059700012207
    4. 'in' → logprob: -9.00059700012207
    5. ',
' → logprob: -11.50059700012207
    6. '_,' → logprob: -13.12559700012207
    7. '=' → logprob: -13.12559700012207
    8. ',c' → logprob: -14.12559700012207
    9. '1' → logprob: -14.37559700012207
    10. '0' → logprob: -14.75059700012207

Token 1061: ' city' (ID: 5030)
  Prédit: 'load'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'load' → logprob: -0.005226763430982828
    2. 'city' → logprob: -5.3802266120910645
    3. ' load' → logprob: -7.5052266120910645
    4. ' city' → logprob: -10.005227088928223
    5. 'loads' → logprob: -11.880227088928223
    6. '(load' → logprob: -13.005227088928223
    7. '	load' → logprob: -14.755227088928223
    8. '(city' → logprob: -14.880227088928223
    9. '   ' → logprob: -15.005227088928223
    10. ' ' → logprob: -15.630227088928223

Token 1062: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03823300078511238
    2. 'in' → logprob: -3.4132330417633057
    3. ',' → logprob: -5.663232803344727
    4. ')' → logprob: -8.038232803344727
    5. '_in' → logprob: -8.913232803344727
    6. 's' → logprob: -9.163232803344727
    7. '   ' → logprob: -9.413232803344727
    8. '=' → logprob: -9.413232803344727
    9. '_load' → logprob: -9.663232803344727
    10. ' ,' → logprob: -10.038232803344727

Token 1063: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.14656859636306763
    2. ' enumerate' → logprob: -2.146568536758423
    3. 'range' → logprob: -4.271568775177002
    4. 'self' → logprob: -5.646568775177002
    5. ',' → logprob: -6.396568775177002
    6. ' range' → logprob: -8.896568298339844
    7. ' self' → logprob: -9.521568298339844
    8. 'in' → logprob: -10.771568298339844
    9. '(self' → logprob: -11.396568298339844
    10. ' in' → logprob: -11.521568298339844

Token 1064: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8312473297119141
    2. '(self' → logprob: -0.8312473297119141
    3. ' self' → logprob: -2.081247329711914
    4. ' (' → logprob: -5.831247329711914
    5. ',' → logprob: -7.081247329711914
    6. ')' → logprob: -8.331247329711914
    7. ',self' → logprob: -10.081247329711914
    8. '(' → logprob: -10.456247329711914
    9. '[self' → logprob: -10.956247329711914
    10. ' range' → logprob: -11.081247329711914

Token 1065: '.c' (ID: 1081)
  Prédit: '.city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.city' → logprob: -0.01285642571747303
    2. '.c' → logprob: -4.387856483459473
    3. 's' → logprob: -9.012856483459473
    4. '.' → logprob: -9.637856483459473
    5. ' .' → logprob: -9.637856483459473
    6. '._' → logprob: -10.637856483459473
    7. '.s' → logprob: -10.887856483459473
    8. 'city' → logprob: -11.012856483459473
    9. ').' → logprob: -11.512856483459473
    10. '.
' → logprob: -12.512856483459473

Token 1066: 'ities' (ID: 1629)
  Prédit: 'ities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ities' → logprob: -0.005131169687956572
    2. 'ties' → logprob: -5.505131244659424
    3. 'ity' → logprob: -8.005130767822266
    4. 'i' → logprob: -8.255130767822266
    5. 'it' → logprob: -9.255130767822266
    6. ')' → logprob: -9.630130767822266
    7. 'ites' → logprob: -9.755130767822266
    8. 'cities' → logprob: -10.130130767822266
    9. 's' → logprob: -10.380130767822266
    10. 't' → logprob: -10.380130767822266

Token 1067: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2643533945083618
    2. '):' → logprob: -1.5143533945083618
    3. ',' → logprob: -4.639353275299072
    4. ':' → logprob: -6.889353275299072
    5. '       ' → logprob: -7.264353275299072
    6. '   ' → logprob: -8.01435375213623
    7. ':
' → logprob: -8.26435375213623
    8. ')' → logprob: -9.13935375213623
    9. '):
' → logprob: -9.26435375213623
    10. '           ' → logprob: -10.13935375213623

Token 1068: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6937610507011414
    2. '           ' → logprob: -1.0687611103057861
    3. ' load' → logprob: -2.193761110305786
    4. 'for' → logprob: -4.068760871887207
    5. '       ' → logprob: -4.568760871887207
    6. '_load' → logprob: -5.443760871887207
    7. 'load' → logprob: -5.568760871887207
    8. ':' → logprob: -5.568760871887207
    9. ',' → logprob: -6.068760871887207
    10. ':
' → logprob: -7.193760871887207

Token 1069: ' dist' (ID: 3601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4814099073410034
    2. ' for' → logprob: -1.3564099073410034
    3. 'load' → logprob: -2.231410026550293
    4. ' load' → logprob: -4.106410026550293
    5. '       ' → logprob: -7.981410026550293
    6. '   ' → logprob: -8.481410026550293
    7. '
' → logprob: -10.606410026550293
    8. 'if' → logprob: -11.231410026550293
    9. 'loads' → logprob: -11.356410026550293
    10. '           ' → logprob: -11.731410026550293

Token 1070: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015762288123369217
    2. '=' → logprob: -4.2657623291015625
    3. '_to' → logprob: -6.5157623291015625
    4. '           ' → logprob: -10.015762329101562
    5. '_time' → logprob: -10.640762329101562
    6. '   ' → logprob: -11.265762329101562
    7. '       ' → logprob: -12.015762329101562
    8. '_cost' → logprob: -12.265762329101562
    9. '_city' → logprob: -12.390762329101562
    10. '               ' → logprob: -12.515762329101562

Token 1071: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019737191032618284
    2. 'abs' → logprob: -6.376973628997803
    3. '2' → logprob: -8.876974105834961
    4. ' self' → logprob: -9.001974105834961
    5. '   ' → logprob: -12.376974105834961
    6. '(self' → logprob: -13.876974105834961
    7. ' abs' → logprob: -14.251974105834961
    8. '           ' → logprob: -14.376974105834961
    9. '       ' → logprob: -14.501974105834961
    10. '
' → logprob: -14.626974105834961

Token 1072: '.city' (ID: 50562)
  Prédit: '.city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.city' → logprob: -0.004181921482086182
    2. 'city' → logprob: -5.504181861877441
    3. '.distance' → logprob: -9.504181861877441
    4. '.' → logprob: -11.129181861877441
    5. '.dist' → logprob: -11.629181861877441
    6. '.market' → logprob: -12.879181861877441
    7. ' city' → logprob: -14.129181861877441
    8. 'distance' → logprob: -14.254181861877441
    9. 'dist' → logprob: -15.004181861877441
    10. '   ' → logprob: -15.629181861877441

Token 1073: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.00628177123144269
    2. '.distance' → logprob: -6.006281852722168
    3. '.idx' → logprob: -6.631281852722168
    4. '.dist' → logprob: -6.631281852722168
    5. 'distance' → logprob: -8.256281852722168
    6. 'dist' → logprob: -8.506281852722168
    7. 's' → logprob: -8.506281852722168
    8. 'idx' → logprob: -8.506281852722168
    9. '_dist' → logprob: -9.381281852722168
    10. '[idx' → logprob: -9.881281852722168

Token 1074: '_market' (ID: 165999)
  Prédit: '_market'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_market' → logprob: -0.029797818511724472
    2. 'market' → logprob: -3.5297977924346924
    3. '_mark' → logprob: -10.279797554016113
    4. 'idx' → logprob: -11.404797554016113
    5. 'city' → logprob: -14.779797554016113
    6. '_city' → logprob: -15.029797554016113
    7. '_' → logprob: -15.279797554016113
    8. '_m' → logprob: -15.654797554016113
    9. '
' → logprob: -15.904797554016113
    10. 'mark' → logprob: -16.02979850769043

Token 1075: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.5287083387374878
    2. 'dist' → logprob: -1.2787083387374878
    3. '[idx' → logprob: -2.0287084579467773
    4. 'd' → logprob: -7.653708457946777
    5. 'idx' → logprob: -9.153708457946777
    6. 'Dist' → logprob: -9.653708457946777
    7. '[' → logprob: -9.903708457946777
    8. '_idx' → logprob: -11.528708457946777
    9. 's' → logprob: -11.778708457946777
    10. '	dist' → logprob: -12.278708457946777

Token 1076: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.9743012671824545e-05
    2. '[' → logprob: -11.375020027160645
    3. ' [' → logprob: -13.375020027160645
    4. 'idx' → logprob: -13.625020027160645
    5. '
' → logprob: -13.750020027160645
    6. '   ' → logprob: -14.125020027160645
    7. '       ' → logprob: -14.500020027160645
    8. '(idx' → logprob: -14.500020027160645
    9. '[i' → logprob: -14.625020027160645
    10. ']' → logprob: -15.000020027160645

Token 1077: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08664238452911377
    2. ']
' → logprob: -2.586642265319824
    3. '           ' → logprob: -5.711642265319824
    4. ']*' → logprob: -5.711642265319824
    5. ')' → logprob: -7.461642265319824
    6. '
' → logprob: -8.961642265319824
    7. '               ' → logprob: -9.461642265319824
    8. ')
' → logprob: -9.461642265319824
    9. '*' → logprob: -9.836642265319824
    10. ' ]' → logprob: -10.211642265319824

Token 1078: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008193961111828685
    2. ' for' → logprob: -7.500819206237793
    3. 'for' → logprob: -8.375819206237793
    4. '       ' → logprob: -11.250819206237793
    5. ' if' → logprob: -12.000819206237793
    6. '   ' → logprob: -12.375819206237793
    7. ',' → logprob: -12.875819206237793
    8. '<|end|>' → logprob: -13.250819206237793
    9. 'if' → logprob: -13.375819206237793
    10. '               ' → logprob: -13.500819206237793

Token 1079: ' time' (ID: 1058)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0885725021362305
    2. '           ' → logprob: -1.3385725021362305
    3. 'for' → logprob: -1.7135725021362305
    4. 'time' (adapté à ' time') → logprob: -2.8385725021362305
    5. ' if' → logprob: -2.9635725021362305
    6. ' load' → logprob: -3.4635725021362305
    7. 'if' → logprob: -3.5885725021362305
    8. ' time' → logprob: -3.7135725021362305
    9. 'load' → logprob: -4.2135725021362305
    10. 'trip' → logprob: -5.3385725021362305

Token 1080: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0024883802980184555
    2. '_' → logprob: -6.127488613128662
    3. ' =' → logprob: -8.877488136291504
    4. '=' → logprob: -9.127488136291504
    5. 'cost' → logprob: -10.252488136291504
    6. '_c' → logprob: -12.752488136291504
    7. '=_' → logprob: -12.877488136291504
    8. '_COST' → logprob: -12.877488136291504
    9. ' _' → logprob: -13.252488136291504
    10. ',' → logprob: -14.002488136291504

Token 1081: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759444236755371
    2. '=' → logprob: -0.8259444236755371
    3. ' =
' → logprob: -13.075944900512695
    4. ',' → logprob: -13.450944900512695
    5. '=
' → logprob: -14.575944900512695
    6. ')' → logprob: -15.075944900512695
    7. 's' → logprob: -15.450944900512695
    8. ' ' → logprob: -15.700944900512695
    9. '*' → logprob: -16.575944900512695
    10. ' *=' → logprob: -16.825944900512695

Token 1082: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2814299166202545
    2. 'dist' → logprob: -1.4064298868179321
    3. ' dist' → logprob: -8.5314302444458
    4. ' ' → logprob: -9.6564302444458
    5. '
' → logprob: -12.4064302444458
    6. '   ' → logprob: -12.5314302444458
    7. '(dist' → logprob: -12.5314302444458
    8. '	dist' → logprob: -13.1564302444458
    9. '4' → logprob: -13.2814302444458
    10. '```' → logprob: -14.2814302444458

Token 1083: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.38695207238197327
    2. 'dist' → logprob: -1.1369520425796509
    3. ' dist' → logprob: -9.63695240020752
    4. ' ' → logprob: -12.26195240020752
    5. '
' → logprob: -12.26195240020752
    6. '(dist' → logprob: -12.88695240020752
    7. '	dist' → logprob: -14.26195240020752
    8. 'Dist' → logprob: -14.76195240020752
    9. '   ' → logprob: -14.88695240020752
    10. '```' → logprob: -15.26195240020752

Token 1084: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0788901224732399
    2. ' *' → logprob: -2.578890085220337
    3. '*object' → logprob: -16.078889846801758
    4. '*
' → logprob: -16.328889846801758
    5. ' ' → logprob: -16.703889846801758
    6. '*(' → logprob: -16.828889846801758
    7. '**' → logprob: -18.078889846801758
    8. '*self' → logprob: -18.203889846801758
    9. ' *
' → logprob: -18.703889846801758
    10. '   ' → logprob: -18.953889846801758

Token 1085: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.723973582556937e-05
    2. ' dist' → logprob: -11.000017166137695
    3. '(dist' → logprob: -14.500017166137695
    4. '	dist' → logprob: -18.500017166137695
    5. '.dist' → logprob: -20.750017166137695
    6. '_dist' → logprob: -21.000017166137695
    7. '-dist' → logprob: -21.875017166137695
    8. 'Dist' → logprob: -22.000017166137695
    9. 'd' → logprob: -23.000017166137695
    10. 'dest' → logprob: -24.250017166137695

Token 1086: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37187492847442627
    2. '<|end|>' → logprob: -1.6218749284744263
    3. '
' → logprob: -2.3718748092651367
    4. '<|end|>' → logprob: -5.121874809265137
    5. ',' → logprob: -5.496874809265137
    6. ')' → logprob: -5.996874809265137
    7. '       ' → logprob: -6.246874809265137
    8. '*' → logprob: -6.496874809265137
    9. '  
' → logprob: -7.121874809265137
    10. '            
' → logprob: -7.371874809265137

Token 1087: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00089442846365273
    2. ' for' → logprob: -7.875894546508789
    3. '
' → logprob: -9.000894546508789
    4. 'for' → logprob: -9.000894546508789
    5. '<|end|>' → logprob: -9.625894546508789
    6. '       ' → logprob: -9.875894546508789
    7. ',' → logprob: -10.000894546508789
    8. ' if' → logprob: -10.125894546508789
    9. '   ' → logprob: -11.125894546508789
    10. '            
' → logprob: -11.750894546508789

Token 1088: ' load' (ID: 4700)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38456887006759644
    2. ' for' → logprob: -1.8845689296722412
    3. 'load' (adapté à ' load') → logprob: -2.384568929672241
    4. 'if' → logprob: -3.259568929672241
    5. ' if' → logprob: -4.134568691253662
    6. ' load' → logprob: -4.509568691253662
    7. '           ' → logprob: -4.634568691253662
    8. 'loads' → logprob: -10.50956916809082
    9. '       ' → logprob: -10.63456916809082
    10. 'city' → logprob: -11.50956916809082

Token 1089: 'outs' (ID: 16513)
  Prédit: 'outs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outs' → logprob: -0.00819384679198265
    2. 's' → logprob: -5.5081939697265625
    3. 'out' → logprob: -5.5081939697265625
    4. '_out' → logprob: -10.633193969726562
    5. '_' → logprob: -11.133193969726562
    6. ')' → logprob: -13.008193969726562
    7. '   ' → logprob: -13.008193969726562
    8. 'ou' → logprob: -13.258193969726562
    9. 'o' → logprob: -13.633193969726562
    10. '=' → logprob: -13.758193969726562

Token 1090: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5232356786727905
    2. ' =' → logprob: -0.8982356786727905
    3. 'for' → logprob: -10.273235321044922
    4. ':' → logprob: -10.398235321044922
    5. '[' → logprob: -11.148235321044922
    6. ' for' → logprob: -11.273235321044922
    7. '.' → logprob: -12.273235321044922
    8. ')' → logprob: -12.773235321044922
    9. '=
' → logprob: -13.398235321044922
    10. ' in' → logprob: -13.648235321044922

Token 1091: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009115827269852161
    2. ' self' → logprob: -7.000911712646484
    3. '[self' → logprob: -16.625911712646484
    4. '(self' → logprob: -17.375911712646484
    5. '           ' → logprob: -18.500911712646484
    6. '	self' → logprob: -19.500911712646484
    7. '       ' → logprob: -19.625911712646484
    8. '=self' → logprob: -19.875911712646484
    9. '   ' → logprob: -20.000911712646484
    10. '
' → logprob: -20.625911712646484

Token 1092: '.city' (ID: 50562)
  Prédit: '.city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.city' → logprob: -0.014177731238305569
    2. 'city' → logprob: -4.2641777992248535
    3. '.' → logprob: -11.514177322387695
    4. '.generate' → logprob: -13.889177322387695
    5. 'generate' → logprob: -14.014177322387695
    6. ' city' → logprob: -14.014177322387695
    7. '_city' → logprob: -15.014177322387695
    8. ' .' → logprob: -15.264177322387695
    9. '.
' → logprob: -15.264177322387695
    10. '.country' → logprob: -16.014177322387695

Token 1093: '_load' (ID: 28159)
  Prédit: '_load'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_load' → logprob: -1.5048530030981055e-06
    2. 'load' → logprob: -13.500001907348633
    3. '_LOAD' → logprob: -17.000001907348633
    4. 'Load' → logprob: -17.750001907348633
    5. '\' → logprob: -17.875001907348633
    6. '
' → logprob: -18.000001907348633
    7. '```' → logprob: -18.375001907348633
    8. 's' → logprob: -18.625001907348633
    9. '[
' → logprob: -18.750001907348633
    10. '.load' → logprob: -18.750001907348633

Token 1094: 'outs' (ID: 16513)
  Prédit: 'outs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outs' → logprob: -0.0006778847891837358
    2. 'oad' → logprob: -7.625678062438965
    3. '[' → logprob: -9.875678062438965
    4. 'uts' → logprob: -10.125678062438965
    5. '[
' → logprob: -10.500678062438965
    6. '   ' → logprob: -11.250678062438965
    7. 'loads' → logprob: -12.000678062438965
    8. 'ots' → logprob: -12.250678062438965
    9. 'oud' → logprob: -12.375678062438965
    10. 's' → logprob: -12.375678062438965

Token 1095: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.25000286102295
    3. 'idx' → logprob: -15.12500286102295
    4. '[
' → logprob: -15.25000286102295
    5. '(idx' → logprob: -16.750001907348633
    6. '[ind' → logprob: -17.250001907348633
    7. '[index' → logprob: -17.750001907348633
    8. '```' → logprob: -17.875001907348633
    9. '[token' → logprob: -18.125001907348633
    10. '[id' → logprob: -18.250001907348633

Token 1096: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0441172830760479
    2. ']
' → logprob: -3.5441172122955322
    3. ':' → logprob: -5.044117450714111
    4. ')' → logprob: -6.044117450714111
    5. '           ' → logprob: -6.044117450714111
    6. ':
' → logprob: -6.544117450714111
    7. '
' → logprob: -7.794117450714111
    8. ']:
' → logprob: -7.919117450714111
    9. ']:' → logprob: -8.669116973876953
    10. '       ' → logprob: -9.044116973876953

Token 1097: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012413020012900233
    2. ' for' → logprob: -7.376241207122803
    3. 'for' → logprob: -7.876241207122803
    4. '       ' → logprob: -8.501241683959961
    5. '               ' → logprob: -11.376241683959961
    6. ',' → logprob: -12.001241683959961
    7. '```' → logprob: -12.876241683959961
    8. '   ' → logprob: -13.001241683959961
    9. '<|end|>' → logprob: -13.376241683959961
    10. '            
' → logprob: -13.751241683959961

Token 1098: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8700502514839172
    2. ' for' → logprob: -1.1200501918792725
    3. 'for' (adapté à ' for') → logprob: -1.3700501918792725
    4. '       ' → logprob: -7.495050430297852
    5. '   ' → logprob: -10.120050430297852
    6. '
' → logprob: -10.370050430297852
    7. '	for' → logprob: -10.620050430297852
    8. ' ' → logprob: -11.120050430297852
    9. '            
' → logprob: -11.245050430297852
    10. '               ' → logprob: -12.120050430297852

Token 1099: ' (' (ID: 350)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -1.3467274904251099
    2. 'weight' → logprob: -1.7217274904251099
    3. 'load' → logprob: -2.2217273712158203
    4. 'min' → logprob: -2.3467273712158203
    5. '(weight' → logprob: -2.3467273712158203
    6. ' weight' → logprob: -2.4717273712158203
    7. ' (' → logprob: -2.9717273712158203
    8. ' min' → logprob: -3.0967273712158203
    9. '(w' → logprob: -3.4717273712158203
    10. 'w' → logprob: -3.9717273712158203

Token 1100: 'weight' (ID: 8250)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4021724760532379
    2. 'w' → logprob: -1.4021724462509155
    3. 'weight' → logprob: -2.527172565460205
    4. '0' → logprob: -6.402172565460205
    5. 'wt' → logprob: -6.652172565460205
    6. 'mw' → logprob: -6.777172565460205
    7. 'wl' → logprob: -8.402172088623047
    8. 'load' → logprob: -8.652172088623047
    9. ' min' → logprob: -9.152172088623047
    10. ' weight' → logprob: -9.277172088623047

Token 1101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005413581384345889
    2. ' ,' → logprob: -7.6255412101745605
    3. ',
' → logprob: -11.375541687011719
    4. ',w' → logprob: -11.500541687011719
    5. '           ' → logprob: -12.250541687011719
    6. '),' → logprob: -12.375541687011719
    7. '‌,' → logprob: -13.125541687011719
    8. ',)' → logprob: -13.250541687011719
    9. ',size' → logprob: -13.375541687011719
    10. ',time' → logprob: -13.500541687011719

Token 1102: ' profit' (ID: 15971)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.0007113590254448354
    2. ' profit' → logprob: -7.250711441040039
    3. 'prof' → logprob: -13.875711441040039
    4. 'profits' → logprob: -15.875711441040039
    5. '_profit' → logprob: -16.50071144104004
    6. 'pro' → logprob: -17.12571144104004
    7. 'price' → logprob: -17.37571144104004
    8. 'Profit' → logprob: -18.00071144104004
    9. '
' → logprob: -18.12571144104004
    10. ' ' → logprob: -18.25071144104004

Token 1103: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.980854959692806e-05
    2. '),' → logprob: -10.125069618225098
    3. ' )' → logprob: -11.625069618225098
    4. ')
' → logprob: -12.125069618225098
    5. ',)' → logprob: -12.500069618225098
    6. 'in' → logprob: -12.625069618225098
    7. ' in' → logprob: -12.750069618225098
    8. ',' → logprob: -13.125069618225098
    9. '):
' → logprob: -14.000069618225098
    10. '           ' → logprob: -14.000069618225098

Token 1104: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.045744042843580246
    2. 'in' → logprob: -3.420743942260742
    3. ',' → logprob: -4.795743942260742
    4. ':' → logprob: -6.295743942260742
    5. ')' → logprob: -7.045743942260742
    6. ':
' → logprob: -8.170743942260742
    7. '           ' → logprob: -8.420743942260742
    8. '               ' → logprob: -9.045743942260742
    9. '):
' → logprob: -9.420743942260742
    10. ' ,' → logprob: -9.795743942260742

Token 1105: ' load' (ID: 4700)
  Prédit: 'load'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'load' → logprob: -0.0024764856789261103
    2. ' load' → logprob: -6.002476692199707
    3. '
' → logprob: -15.502476692199707
    4. '   ' → logprob: -15.502476692199707
    5. '(load' → logprob: -15.752476692199707
    6. ' ' → logprob: -16.37747573852539
    7. '	load' → logprob: -16.50247573852539
    8. '           ' → logprob: -17.00247573852539
    9. '       ' → logprob: -17.50247573852539
    10. '[
' → logprob: -17.62747573852539

Token 1106: 'outs' (ID: 16513)
  Prédit: 'outs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outs' → logprob: -4.572941179503687e-05
    2. 'uts' → logprob: -10.375045776367188
    3. 'puts' → logprob: -12.375045776367188
    4. 'out' → logprob: -12.750045776367188
    5. 'ots' → logprob: -13.500045776367188
    6. 'oad' → logprob: -13.750045776367188
    7. 'outputs' → logprob: -13.875045776367188
    8. 'ou' → logprob: -14.375045776367188
    9. '(' → logprob: -15.000045776367188
    10. '   ' → logprob: -15.125045776367188

Token 1107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05928930267691612
    2. ':
' → logprob: -3.3092892169952393
    3. '               ' → logprob: -4.059289455413818
    4. '           ' → logprob: -5.934289455413818
    5. ',' → logprob: -7.184289455413818
    6. '):
' → logprob: -9.43428897857666
    7. '<|end|>' → logprob: -9.93428897857666
    8. '):' → logprob: -10.18428897857666
    9. '                       ' → logprob: -10.30928897857666
    10. '       ' → logprob: -10.30928897857666

Token 1108: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.240481914370321e-05
    2. '           ' → logprob: -11.125052452087402
    3. '                   ' → logprob: -11.250052452087402
    4. '   ' → logprob: -12.125052452087402
    5. '       ' → logprob: -12.625052452087402
    6. ' if' → logprob: -12.750052452087402
    7. '                       ' → logprob: -13.125052452087402
    8. '                
' → logprob: -13.125052452087402
    9. '
' → logprob: -13.375052452087402
    10. '```' → logprob: -13.500052452087402

Token 1109: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.1624035835266113
    2. '                   ' → logprob: -1.2874035835266113
    3. ' if' → logprob: -1.2874035835266113
    4. '           ' → logprob: -2.7874035835266113
    5. 'tr' → logprob: -2.9124035835266113
    6. ' trips' → logprob: -4.537403583526611
    7. '                       ' → logprob: -5.787403583526611
    8. '               ' → logprob: -6.162403583526611
    9. '   ' → logprob: -6.662403583526611
    10. '```' → logprob: -7.662403583526611

Token 1110: ' time' (ID: 1058)
  Prédit: ' profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' profit' → logprob: -0.676077127456665
    2. ' time' → logprob: -1.176077127456665
    3. 'profit' → logprob: -1.926077127456665
    4. 'time' → logprob: -3.301077127456665
    5. ' weight' → logprob: -8.801076889038086
    6. 'prof' → logprob: -9.926076889038086
    7. 'weight' → logprob: -9.926076889038086
    8. '   ' → logprob: -10.426076889038086
    9. '                   ' → logprob: -11.551076889038086
    10. ' prof' → logprob: -12.051076889038086

Token 1111: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.028255628421902657
    2. '>' → logprob: -4.028255462646484
    3. '_' → logprob: -4.778255462646484
    4. ' >' → logprob: -7.653255462646484
    5. '_COST' → logprob: -8.403255462646484
    6. ' _' → logprob: -8.403255462646484
    7. '>=' → logprob: -8.528255462646484
    8. ' >=' → logprob: -9.028255462646484
    9. '<' → logprob: -9.653255462646484
    10. '               ' → logprob: -9.778255462646484

Token 1112: ' <=' (ID: 5017)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5762215256690979
    2. ' >' → logprob: -1.2012214660644531
    3. ' <=' → logprob: -2.701221466064453
    4. ' <' → logprob: -3.576221466064453
    5. '<=' → logprob: -3.826221466064453
    6. '<' → logprob: -5.201221466064453
    7. '==' → logprob: -5.701221466064453
    8. ' ==' → logprob: -5.701221466064453
    9. ' and' → logprob: -5.826221466064453
    10. '*' → logprob: -6.451221466064453

Token 1113: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007099286303855479
    2. ' self' → logprob: -7.2507100105285645
    3. '(self' → logprob: -17.750709533691406
    4. '	self' → logprob: -18.875709533691406
    5. '=self' → logprob: -19.375709533691406
    6. '   ' → logprob: -19.875709533691406
    7. '
' → logprob: -20.500709533691406
    8. ' ' → logprob: -20.750709533691406
    9. '0' → logprob: -21.500709533691406
    10. 's' → logprob: -21.625709533691406

Token 1114: '.T' (ID: 2600)
  Prédit: '.T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.T' → logprob: -0.07539112120866776
    2. 'T' → logprob: -2.7003910541534424
    3. '.' → logprob: -5.7003912925720215
    4. ' T' → logprob: -6.9503912925720215
    5. '.W' → logprob: -8.075390815734863
    6. ' .' → logprob: -8.450390815734863
    7. '_T' → logprob: -8.950390815734863
    8. ' ' → logprob: -9.200390815734863
    9. '	T' → logprob: -9.325390815734863
    10. 'self' → logprob: -9.450390815734863

Token 1115: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01455550454556942
    2. 'and' → logprob: -4.26455545425415
    3. '                   ' → logprob: -8.514555931091309
    4. '               ' → logprob: -9.139555931091309
    5. '                       ' → logprob: -9.764555931091309
    6. '           ' → logprob: -12.139555931091309
    7. ':' → logprob: -12.264555931091309
    8. ':
' → logprob: -12.264555931091309
    9. '                ' → logprob: -13.014555931091309
    10. '                    ' → logprob: -13.264555931091309

Token 1116: ' profit' (ID: 15971)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.003203019965440035
    2. ' profit' → logprob: -5.75320291519165
    3. 'weight' → logprob: -10.753203392028809
    4. 'prof' → logprob: -12.628203392028809
    5. 'pro' → logprob: -16.128202438354492
    6. '
' → logprob: -16.253202438354492
    7. 'prob' → logprob: -16.253202438354492
    8. ' weight' → logprob: -16.378202438354492
    9. '   ' → logprob: -16.628202438354492
    10. 'Profit' → logprob: -17.253202438354492

Token 1117: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.34902387857437134
    2. '>' → logprob: -1.2240238189697266
    3. '<|end|>' → logprob: -8.349023818969727
    4. ' >
' → logprob: -9.474023818969727
    5. ':' → logprob: -9.599023818969727
    6. '               ' → logprob: -10.599023818969727
    7. ' ' → logprob: -10.974023818969727
    8. '>
' → logprob: -10.974023818969727
    9. '<|end|>' → logprob: -11.349023818969727
    10. ' >=' → logprob: -11.599023818969727

Token 1118: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '<|end|>' → logprob: -17.75002670288086
    4. '
' → logprob: -20.37502670288086
    5. '۰' → logprob: -21.12502670288086
    6. '```' → logprob: -21.75002670288086
    7. '00' → logprob: -22.12502670288086
    8. ' ' → logprob: -22.25002670288086
    9. '   ' → logprob: -22.37502670288086
    10. '>' → logprob: -22.87502670288086

Token 1119: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '<|end|>' → logprob: -17.00001335144043
    4. '۰' → logprob: -20.37501335144043
    5. '
' → logprob: -20.37501335144043
    6. '   ' → logprob: -20.87501335144043
    7. '00' → logprob: -21.12501335144043
    8. '```' → logprob: -21.37501335144043
    9. 'zero' → logprob: -21.75001335144043
    10. '1' → logprob: -22.00001335144043

Token 1120: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8352532386779785
    2. '                   ' → logprob: -1.0852532386779785
    3. ':' → logprob: -1.5852532386779785
    4. ' and' → logprob: -3.8352532386779785
    5. '                       ' → logprob: -6.9602532386779785
    6. ',' → logprob: -8.08525276184082
    7. '               ' → logprob: -8.33525276184082
    8. 'and' → logprob: -8.96025276184082
    9. '                  ' → logprob: -9.21025276184082
    10. ':

' → logprob: -10.46025276184082

Token 1121: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000592947646509856
    2. '                       ' → logprob: -7.875593185424805
    3. '               ' → logprob: -9.750593185424805
    4. '                           ' → logprob: -9.750593185424805
    5. '                  ' → logprob: -10.500593185424805
    6. '           ' → logprob: -11.125593185424805
    7. ',' → logprob: -11.500593185424805
    8. '                    
' → logprob: -11.500593185424805
    9. '                    ' → logprob: -11.625593185424805
    10. '<|end|>' → logprob: -12.750593185424805

Token 1122: ' trips' (ID: 27647)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.23393909633159637
    2. ' trips' → logprob: -2.1089391708374023
    3. '                       ' → logprob: -2.6089391708374023
    4. '                   ' → logprob: -5.108939170837402
    5. '           ' → logprob: -6.108939170837402
    6. '   ' → logprob: -6.483939170837402
    7. '       ' → logprob: -6.858939170837402
    8. '               ' → logprob: -6.983939170837402
    9. '                           ' → logprob: -7.233939170837402
    10. '	tr' → logprob: -7.358939170837402

Token 1123: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.18024437129497528
    2. '.' → logprob: -1.8052443265914917
    3. '                   ' → logprob: -8.305244445800781
    4. ' .' → logprob: -9.055244445800781
    5. '                       ' → logprob: -9.555244445800781
    6. '.add' → logprob: -11.555244445800781
    7. '.extend' → logprob: -11.680244445800781
    8. '               ' → logprob: -12.055244445800781
    9. '.p' → logprob: -12.180244445800781
    10. '.push' → logprob: -12.305244445800781

Token 1124: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31928691267967224
    2. '((' → logprob: -1.3192869424819946
    3. ' (' → logprob: -5.194286823272705
    4. '(
' → logprob: -7.819286823272705
    5. ' ((' → logprob: -10.694287300109863
    6. '(('' → logprob: -10.694287300109863
    7. '   ' → logprob: -12.569287300109863
    8. '('' → logprob: -13.569287300109863
    9. '(("' → logprob: -13.569287300109863
    10. '                   ' → logprob: -13.694287300109863

Token 1125: 'time' (ID: 4580)
  Prédit: 'time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.000341541541274637
    2. ' time' → logprob: -8.000341415405273
    3. '   ' → logprob: -12.125341415405273
    4. '                   ' → logprob: -15.250341415405273
    5. '
' → logprob: -16.250341415405273
    6. ')' → logprob: -16.250341415405273
    7. '               ' → logprob: -16.750341415405273
    8. 'trip' → logprob: -17.000341415405273
    9. '"time' → logprob: -17.125341415405273
    10. 'ti' → logprob: -17.500341415405273

Token 1126: '_cost' (ID: 36820)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28970667719841003
    2. '_cost' → logprob: -1.6647067070007324
    3. '_,' → logprob: -3.1647067070007324
    4. '[' → logprob: -5.539706707000732
    5. ',' → logprob: -5.664706707000732
    6. '_
' → logprob: -6.039706707000732
    7. '_time' → logprob: -6.289706707000732
    8. ')' → logprob: -6.539706707000732
    9. ' _' → logprob: -6.789706707000732
    10. ')_' → logprob: -7.414706707000732

Token 1127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002777822664938867
    2. ',
' → logprob: -8.375277519226074
    3. '                   ' → logprob: -10.250277519226074
    4. ' ,' → logprob: -11.875277519226074
    5. '               ' → logprob: -13.875277519226074
    6. '‌,' → logprob: -15.125277519226074
    7. ',{
' → logprob: -15.250277519226074
    8. '                       ' → logprob: -15.375277519226074
    9. ',\
' → logprob: -15.375277519226074
    10. '),' → logprob: -15.500277519226074

Token 1128: ' profit' (ID: 15971)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.0036077939439564943
    2. ' profit' → logprob: -5.628607749938965
    3. 'prof' → logprob: -12.003607749938965
    4. 'pro' → logprob: -14.253607749938965
    5. 'prob' → logprob: -15.753607749938965
    6. 'profits' → logprob: -15.753607749938965
    7. 'price' → logprob: -16.12860870361328
    8. '
' → logprob: -16.25360870361328
    9. 'Profit' → logprob: -16.25360870361328
    10. 'weight' → logprob: -16.37860870361328

Token 1129: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006630589719861746
    2. ',' → logprob: -5.1316304206848145
    3. '))' → logprob: -7.8816304206848145
    4. '),' → logprob: -9.381630897521973
    5. '                   ' → logprob: -9.506630897521973
    6. ',
' → logprob: -9.881630897521973
    7. ',)' → logprob: -9.881630897521973
    8. '               ' → logprob: -10.631630897521973
    9. ')
' → logprob: -11.006630897521973
    10. ')))' → logprob: -12.256630897521973

Token 1130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2605559825897217
    2. '
' → logprob: -1.5105559825897217
    3. '        
' → logprob: -5.885556221008301
    4. '```' → logprob: -6.135556221008301
    5. 'for' → logprob: -6.760556221008301
    6. '  
' → logprob: -7.510556221008301
    7. ')' → logprob: -8.0105562210083
    8. ' for' → logprob: -8.2605562210083
    9. '   ' → logprob: -8.2605562210083
    10. ',' → logprob: -8.8855562210083

Token 1131: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6165826916694641
    2. '       ' → logprob: -1.3665826320648193
    3. 'max' → logprob: -2.1165826320648193
    4. '#' (adapté à ' #') → logprob: -3.1165826320648193
    5. 'tr' → logprob: -4.366582870483398
    6. '
' → logprob: -4.866582870483398
    7. 'time' → logprob: -5.741582870483398
    8. 'from' → logprob: -5.741582870483398
    9. 'import' → logprob: -6.241582870483398
    10. 'times' → logprob: -6.366582870483398

Token 1132: ' Now' (ID: 6549)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.24715113639831543
    2. 'tr' → logprob: -1.7471511363983154
    3. 'max' → logprob: -3.3721511363983154
    4. '@' → logprob: -4.9971513748168945
    5. '#' → logprob: -6.2471513748168945
    6. 'times' → logprob: -7.4971513748168945
    7. 'time' → logprob: -8.247151374816895
    8. '   ' → logprob: -8.747151374816895
    9. '       ' → logprob: -8.747151374816895
    10. 'capacity' → logprob: -8.747151374816895

Token 1133: ' solve' (ID: 17722)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.32774779200553894
    2. 'max' → logprob: -1.9527478218078613
    3. 'tr' → logprob: -2.2027478218078613
    4. '#' → logprob: -4.577747821807861
    5. '       ' → logprob: -5.577747821807861
    6. ' trips' → logprob: -5.577747821807861
    7. ' max' → logprob: -6.327747821807861
    8. ' dp' → logprob: -6.452747821807861
    9. 'capacity' → logprob: -6.452747821807861
    10. 'time' → logprob: -6.952747821807861

Token 1134: ' un' (ID: 537)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6192909479141235
    2. '       ' → logprob: -1.2442909479141235
    3. '
' → logprob: -1.9942909479141235
    4. '```' → logprob: -4.119290828704834
    5. '0' → logprob: -5.244290828704834
    6. ' dp' → logprob: -5.494290828704834
    7. 'from' → logprob: -5.744290828704834
    8. '#' → logprob: -5.994290828704834
    9. 'max' → logprob: -6.619290828704834
    10. 'import' → logprob: -7.119290828704834

Token 1135: 'bounded' (ID: 135171)
  Prédit: 'bounded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bounded' → logprob: -4.5252596464706585e-05
    2. ' bounded' → logprob: -10.375044822692871
    3. '
' → logprob: -11.375044822692871
    4. 'b' → logprob: -14.125044822692871
    5. 'bound' → logprob: -14.500044822692871
    6. '_' → logprob: -14.875044822692871
    7. '```' → logprob: -15.250044822692871
    8. '   ' → logprob: -15.500044822692871
    9. '_b' → logprob: -16.250045776367188
    10. '       ' → logprob: -16.750045776367188

Token 1136: ' kn' (ID: 1313)
  Prédit: 'kn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kn' → logprob: -0.3255426287651062
    2. ' kn' → logprob: -1.325542688369751
    3. '_kn' → logprob: -4.450542449951172
    4. '0' → logprob: -8.575542449951172
    5. '
' → logprob: -8.825542449951172
    6. '_' → logprob: -9.575542449951172
    7. ' ' → logprob: -9.825542449951172
    8. '(kn' → logprob: -10.575542449951172
    9. '   ' → logprob: -11.325542449951172
    10. 'Kn' → logprob: -11.575542449951172

Token 1137: 'apsack' (ID: 178559)
  Prédit: 'apsack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apsack' → logprob: -6.682846287731081e-05
    2. 'ap' → logprob: -9.625066757202148
    3. 'aps' → logprob: -14.250066757202148
    4. 'n' → logprob: -17.25006675720215
    5. 'ack' → logprob: -18.12506675720215
    6. '
' → logprob: -18.25006675720215
    7. '```' → logprob: -18.25006675720215
    8. 'a' → logprob: -19.12506675720215
    9. 'p' → logprob: -19.25006675720215
    10. 'ап' → logprob: -19.25006675720215

Token 1138: ' with' (ID: 483)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.263149619102478
    2. '       ' → logprob: -2.2631497383117676
    3. ' dp' → logprob: -3.0131497383117676
    4. ' =' → logprob: -4.013149738311768
    5. '_dp' → logprob: -4.013149738311768
    6. '
' → logprob: -4.638149738311768
    7. 'capacity' → logprob: -5.013149738311768
    8. ' capacity' → logprob: -5.263149738311768
    9. '_capacity' → logprob: -5.513149738311768
    10. ',' → logprob: -5.888149738311768

Token 1139: ' time' (ID: 1058)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.255263090133667
    2. 'range' → logprob: -1.255263090133667
    3. ' time' → logprob: -2.005263090133667
    4. 'self' → logprob: -2.130263090133667
    5. 'time' → logprob: -2.255263090133667
    6. ' self' → logprob: -2.880263090133667
    7. 'for' → logprob: -5.380263328552246
    8. ' trips' → logprob: -6.505263328552246
    9. 'T' → logprob: -6.630263328552246
    10. 't' → logprob: -6.755263328552246

Token 1140: ' as' (ID: 472)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.5857735276222229
    2. '_' → logprob: -1.2107734680175781
    3. '_capacity' → logprob: -2.585773468017578
    4. '_limit' → logprob: -2.835773468017578
    5. ' =' → logprob: -5.460773468017578
    6. '_cap' → logprob: -6.335773468017578
    7. '_,' → logprob: -6.835773468017578
    8. '_
' → logprob: -6.960773468017578
    9. ',' → logprob: -7.835773468017578
    10. '_remaining' → logprob: -7.960773468017578

Token 1141: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.06323232501745224
    2. ' capacity' → logprob: -2.813232421875
    3. 'the' → logprob: -7.188232421875
    4. ' the' → logprob: -8.563232421875
    5. 'kn' → logprob: -8.563232421875
    6. 'weight' → logprob: -9.813232421875
    7. 'limit' → logprob: -10.688232421875
    8. 'dp' → logprob: -11.063232421875
    9. 'constraint' → logprob: -11.688232421875
    10. '0' → logprob: -12.813232421875

Token 1142: ' and' (ID: 326)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.2429673969745636
    2. '       ' → logprob: -2.367967367172241
    3. ' capacity' → logprob: -2.492967367172241
    4. '
' → logprob: -3.992967367172241
    5. ',' → logprob: -4.49296760559082
    6. 'dp' → logprob: -5.61796760559082
    7. '_capacity' → logprob: -6.99296760559082
    8. 'cap' → logprob: -6.99296760559082
    9. ' =' → logprob: -7.11796760559082
    10. '```' → logprob: -7.49296760559082

Token 1143: ' profit' (ID: 15971)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.35168182849884033
    2. 'capacity' → logprob: -1.8516818284988403
    3. 'profits' → logprob: -3.226681709289551
    4. 'tr' → logprob: -3.476681709289551
    5. ' capacity' → logprob: -3.726681709289551
    6. ' profit' → logprob: -4.226681709289551
    7. ' trips' → logprob: -4.601681709289551
    8. 'for' → logprob: -4.976681709289551
    9. 'time' → logprob: -5.851681709289551
    10. 'trip' → logprob: -5.976681709289551

Token 1144: ' as' (ID: 472)
  Prédit: '_capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -0.46871188282966614
    2. ',' → logprob: -2.2187118530273438
    3. 'capacity' → logprob: -2.4687118530273438
    4. ' as' → logprob: -3.0937118530273438
    5. '       ' → logprob: -3.7187118530273438
    6. 'as' → logprob: -3.8437118530273438
    7. 'for' → logprob: -3.8437118530273438
    8. '=' → logprob: -4.218711853027344
    9. ' =' → logprob: -4.468711853027344
    10. '_cap' → logprob: -4.468711853027344

Token 1145: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.38619595766067505
    2. ' value' → logprob: -1.2611958980560303
    3. 'dp' → logprob: -4.636196136474609
    4. 'capacity' → logprob: -4.886196136474609
    5. 'values' → logprob: -5.511196136474609
    6. ' dp' → logprob: -5.511196136474609
    7. ' capacity' → logprob: -5.761196136474609
    8. 'int' → logprob: -6.011196136474609
    9. 'weight' → logprob: -6.011196136474609
    10. 'items' → logprob: -7.636196136474609

Token 1146: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1177209615707397
    2. 'dp' → logprob: -1.1177209615707397
    3. '       ' → logprob: -1.2427209615707397
    4. ' dp' → logprob: -3.2427210807800293
    5. ',' → logprob: -4.492721080780029
    6. ' capacity' → logprob: -6.492721080780029
    7. 'capacity' → logprob: -6.617721080780029
    8. ',
' → logprob: -6.742721080780029
    9. '_dp' → logprob: -6.742721080780029
    10. '        
' → logprob: -7.492721080780029

Token 1147: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7120230197906494
    2. 'dp' → logprob: -0.8370230197906494
    3. ' dp' → logprob: -3.3370230197906494
    4. 'capacity' → logprob: -3.8370230197906494
    5. ' capacity' → logprob: -4.46202278137207
    6. '```' → logprob: -5.58702278137207
    7. '
' → logprob: -7.33702278137207
    8. '``' → logprob: -7.33702278137207
    9. 'time' → logprob: -7.71202278137207
    10. '   ' → logprob: -7.96202278137207

Token 1148: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.015181377530097961
    2. 'capacity' → logprob: -4.890181541442871
    3. ' dp' → logprob: -5.015181541442871
    4. '   ' → logprob: -7.890181541442871
    5. ' capacity' → logprob: -8.015181541442871
    6. '
' → logprob: -9.765181541442871
    7. 'max' → logprob: -10.015181541442871
    8. '       ' → logprob: -10.390181541442871
    9. 'time' → logprob: -10.765181541442871
    10. 'kn' → logprob: -11.640181541442871

Token 1149: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0003357006062287837
    2. 'capacity' → logprob: -8.500335693359375
    3. 'max' → logprob: -9.250335693359375
    4. '   ' → logprob: -10.375335693359375
    5. ' dp' → logprob: -13.375335693359375
    6. 'time' → logprob: -14.375335693359375
    7. 'for' → logprob: -14.500335693359375
    8. 'kn' → logprob: -14.625335693359375
    9. '       ' → logprob: -14.750335693359375
    10. 'DP' → logprob: -15.250335693359375

Token 1150: '[t' (ID: 32184)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08681181073188782
    2. '=' → logprob: -2.5868117809295654
    3. '_' → logprob: -4.9618120193481445
    4. ' ' → logprob: -8.086812019348145
    5. '_time' → logprob: -8.461812019348145
    6. '```' → logprob: -9.211812019348145
    7. '=[' → logprob: -9.711812019348145
    8. '[' → logprob: -9.711812019348145
    9. '_capacity' → logprob: -10.211812019348145
    10. '
' → logprob: -10.586812019348145

Token 1151: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.435855895280838
    2. '=' → logprob: -1.1858558654785156
    3. ']' → logprob: -3.1858558654785156
    4. '
' → logprob: -6.060855865478516
    5. '[' → logprob: -6.685855865478516
    6. '_' → logprob: -7.435855865478516
    7. ')' → logprob: -7.935855865478516
    8. '```' → logprob: -7.935855865478516
    9. '[t' → logprob: -8.185855865478516
    10. ']=' → logprob: -8.185855865478516

Token 1152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2520168423652649
    2. '=' → logprob: -1.5020167827606201
    3. '=[' → logprob: -9.6270170211792
    4. '[' → logprob: -11.5020170211792
    5. ' =[' → logprob: -11.8770170211792
    6. '=
' → logprob: -13.5020170211792
    7. ']' → logprob: -14.2520170211792
    8. ' =
' → logprob: -14.2520170211792
    9. ')' → logprob: -14.7520170211792
    10. ',' → logprob: -15.0020170211792

Token 1153: ' max' (ID: 2999)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. 'max' → logprob: -17.00004005432129
    4. '
' → logprob: -19.75004005432129
    5. '[' → logprob: -19.75004005432129
    6. '-' → logprob: -20.12504005432129
    7. '   ' → logprob: -21.00004005432129
    8. ' max' → logprob: -21.12504005432129
    9. ' ' → logprob: -21.75004005432129
    10. '  ' → logprob: -22.62504005432129

Token 1154: ' profit' (ID: 15971)
  Prédit: '_profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -0.058252062648534775
    2. 'profit' → logprob: -3.0582520961761475
    3. ' profit' → logprob: -5.808251857757568
    4. '[t' → logprob: -5.933251857757568
    5. '[' → logprob: -6.433251857757568
    6. '_' → logprob: -6.808251857757568
    7. 'dp' → logprob: -7.683251857757568
    8. 'Profit' → logprob: -8.808252334594727
    9. 'profits' → logprob: -9.558252334594727
    10. '_dp' → logprob: -9.558252334594727

Token 1155: ' achievable' (ID: 118877)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18744495511054993
    2. '=' → logprob: -2.3124449253082275
    3. '[' → logprob: -3.3124449253082275
    4. '[t' → logprob: -3.4374449253082275
    5. '=[' → logprob: -7.187445163726807
    6. '```' → logprob: -7.562445163726807
    7. '+' → logprob: -7.937445163726807
    8. '=
' → logprob: -8.562444686889648
    9. '[
' → logprob: -8.562444686889648
    10. '
' → logprob: -8.687444686889648

Token 1156: ' within' (ID: 3518)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.8104820251464844
    2. ' =' → logprob: -0.9354820251464844
    3. '[' → logprob: -2.5604820251464844
    4. '=' → logprob: -2.8104820251464844
    5. ' for' → logprob: -4.685482025146484
    6. '
' → logprob: -5.435482025146484
    7. '```' → logprob: -6.060482025146484
    8. 'for' → logprob: -6.060482025146484
    9. '=[' → logprob: -6.560482025146484
    10. ' 
' → logprob: -6.810482025146484

Token 1157: ' time' (ID: 1058)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.08153063803911209
    2. ' t' → logprob: -2.5815305709838867
    3. 'time' → logprob: -6.581530570983887
    4. ' time' → logprob: -7.581530570983887
    5. 'T' → logprob: -7.956530570983887
    6. '
' → logprob: -8.581530570983887
    7. 'range' → logprob: -9.456530570983887
    8. ' T' → logprob: -10.081530570983887
    9. ' range' → logprob: -10.331530570983887
    10. '   ' → logprob: -11.081530570983887

Token 1158: ' t' (ID: 260)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9701808094978333
    2. ' =' → logprob: -1.2201807498931885
    3. '_capacity' → logprob: -2.3451807498931885
    4. '=' → logprob: -2.8451807498931885
    5. '   ' → logprob: -2.9701807498931885
    6. '```' → logprob: -3.4701807498931885
    7. '[' → logprob: -3.9701807498931885
    8. '_
' → logprob: -3.9701807498931885
    9. '
' → logprob: -4.720180988311768
    10. ']' → logprob: -5.095180988311768

Token 1159: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4988749027252197
    2. '       ' → logprob: -1.7488749027252197
    3. '=' → logprob: -2.2488749027252197
    4. '
' → logprob: -3.3738749027252197
    5. 'dp' → logprob: -3.6238749027252197
    6. ' dp' → logprob: -4.248874664306641
    7. '[' → logprob: -4.623874664306641
    8. '\' → logprob: -5.248874664306641
    9. '_dp' → logprob: -5.248874664306641
    10. '=
' → logprob: -5.373874664306641

Token 1160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.511360764503479
    2. 'dp' → logprob: -1.511360764503479
    3. ' dp' → logprob: -2.2613606452941895
    4. '
' → logprob: -2.8863606452941895
    5. '```' → logprob: -5.2613606452941895
    6. '\n' → logprob: -6.0113606452941895
    7. '`' → logprob: -6.3863606452941895
    8. '   ' → logprob: -6.5113606452941895
    9. '\' → logprob: -6.7613606452941895
    10. 'd' → logprob: -6.8863606452941895

Token 1161: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.5929882526397705
    2. '       ' → logprob: -1.4679882526397705
    3. ' dp' → logprob: -1.5929882526397705
    4. '
' → logprob: -5.467988014221191
    5. '```' → logprob: -5.592988014221191
    6. '[' → logprob: -6.217988014221191
    7. '   ' → logprob: -6.717988014221191
    8. '`' → logprob: -7.342988014221191
    9. '_dp' → logprob: -7.717988014221191
    10. 'd' → logprob: -8.342988014221191

Token 1162: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.058795321732759476
    2. '=' → logprob: -3.308795213699341
    3. '[' → logprob: -4.05879545211792
    4. '_' → logprob: -6.30879545211792
    5. '=[' → logprob: -6.93379545211792
    6. '```' → logprob: -8.683794975280762
    7. ' =[' → logprob: -8.933794975280762
    8. ')' → logprob: -10.183794975280762
    9. ' ' → logprob: -10.308794975280762
    10. '   ' → logprob: -10.808794975280762

Token 1163: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003361774142831564
    2. ' [' → logprob: -8.000336647033691
    3. '[-' → logprob: -14.125336647033691
    4. '[self' → logprob: -17.750335693359375
    5. '[t' → logprob: -17.750335693359375
    6. '[T' → logprob: -18.125335693359375
    7. '[int' → logprob: -19.125335693359375
    8. '   ' → logprob: -19.750335693359375
    9. '[max' → logprob: -20.500335693359375
    10. '0' → logprob: -21.750335693359375

Token 1164: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.522638169466518e-05
    2. '-' → logprob: -10.625024795532227
    3. ' ' → logprob: -14.250024795532227
    4. 'float' → logprob: -15.625024795532227
    5. '-(' → logprob: -16.500024795532227
    6. '[' → logprob: -18.375024795532227
    7. '-f' → logprob: -18.500024795532227
    8. ' -' → logprob: -18.750024795532227
    9. '
' → logprob: -19.000024795532227
    10. '-[' → logprob: -20.125024795532227

Token 1165: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.20041881501674652
    2. ']' → logprob: -1.9504188299179077
    3. '*(' → logprob: -3.575418710708618
    4. ']*' → logprob: -5.200418949127197
    5. ']+' → logprob: -6.450418949127197
    6. '+' → logprob: -6.450418949127197
    7. ' ]' → logprob: -6.825418949127197
    8. '*' → logprob: -7.575418949127197
    9. ' for' → logprob: -7.700418949127197
    10. '
' → logprob: -8.825418472290039

Token 1166: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.431207682704553e-05
    2. ' self' → logprob: -10.375054359436035
    3. '(self' → logprob: -10.875054359436035
    4. '[self' → logprob: -13.375054359436035
    5. '
' → logprob: -14.000054359436035
    6. '<|end|>' → logprob: -14.875054359436035
    7. '=self' → logprob: -15.000054359436035
    8. '   ' → logprob: -16.25005340576172
    9. '	self' → logprob: -16.37505340576172
    10. '[' → logprob: -16.50005340576172

Token 1167: '.T' (ID: 2600)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0008646531496196985
    2. 'self' → logprob: -7.125864505767822
    3. '+' → logprob: -10.87586498260498
    4. '.T' → logprob: -11.37586498260498
    5. '[T' → logprob: -11.37586498260498
    6. '(T' → logprob: -11.87586498260498
    7. '
' → logprob: -13.00086498260498
    8. '_T' → logprob: -13.12586498260498
    9. '[' → logprob: -13.50086498260498
    10. ' T' → logprob: -13.75086498260498

Token 1168: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.0590548703912646e-05
    2. ' +' → logprob: -10.500030517578125
    3. '+
' → logprob: -12.750030517578125
    4. ')+' → logprob: -18.625030517578125
    5. '＋' → logprob: -19.250030517578125
    6. ' +
' → logprob: -19.375030517578125
    7. '
' → logprob: -19.500030517578125
    8. '```' → logprob: -19.750030517578125
    9. '+[' → logprob: -19.875030517578125
    10. '()+' → logprob: -20.125030517578125

Token 1169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4332272410392761
    2. '+' → logprob: -1.058227300643921
    3. 'T' → logprob: -5.433227062225342
    4. ' +' → logprob: -9.3082275390625
    5. ' ' → logprob: -10.8082275390625
    6. '
' → logprob: -11.8082275390625
    7. '001' → logprob: -12.6832275390625
    8. '(T' → logprob: -12.8082275390625
    9. ']+' → logprob: -12.9332275390625
    10. '   ' → logprob: -13.3082275390625

Token 1170: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013563097454607487
    2. ')
' → logprob: -6.62635612487793
    3. ' )' → logprob: -11.00135612487793
    4. ']' → logprob: -12.12635612487793
    5. '
' → logprob: -12.75135612487793
    6. '+' → logprob: -13.50135612487793
    7. '   ' → logprob: -13.87635612487793
    8. '```' → logprob: -14.12635612487793
    9. '       ' → logprob: -14.25135612487793
    10. ')
' → logprob: -15.50135612487793

Token 1171: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8155568838119507
    2. 'for' → logprob: -1.0655568838119507
    3. '       ' → logprob: -1.5655568838119507
    4. '	for' → logprob: -6.19055700302124
    5. '	' → logprob: -6.81555700302124
    6. '   ' → logprob: -7.69055700302124
    7. '
' → logprob: -8.440556526184082
    8. ' 
' → logprob: -9.690556526184082
    9. ' ' → logprob: -10.065556526184082
    10. '           ' → logprob: -10.190556526184082

Token 1172: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.32146236300468445
    2. ' for' → logprob: -1.3214623928070068
    3. '       ' → logprob: -4.821462154388428
    4. '	for' → logprob: -9.821462631225586
    5. '
' → logprob: -10.071462631225586
    6. '   ' → logprob: -11.946462631225586
    7. '	' → logprob: -12.946462631225586
    8. '           ' → logprob: -13.321462631225586
    9. ' 
' → logprob: -13.321462631225586
    10. '```' → logprob: -13.571462631225586

Token 1173: ' t' (ID: 260)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.8902491331100464
    2. 'time' → logprob: -0.8902491331100464
    3. 't' → logprob: -2.265249252319336
    4. ' t' → logprob: -2.640249252319336
    5. 'trip' → logprob: -6.390249252319336
    6. ' trip' → logprob: -6.640249252319336
    7. 'i' → logprob: -8.515249252319336
    8. ' i' → logprob: -8.765249252319336
    9. 'cost' → logprob: -8.890249252319336
    10. '```' → logprob: -9.765249252319336

Token 1174: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009885113686323166
    2. 'in' → logprob: -4.634885311126709
    3. ' ' → logprob: -9.88488483428955
    4. ' i' → logprob: -9.88488483428955
    5. '_' → logprob: -12.13488483428955
    6. '+' → logprob: -12.38488483428955
    7. ',' → logprob: -12.38488483428955
    8. 'space' → logprob: -13.13488483428955
    9. ' ,' → logprob: -13.38488483428955
    10. '0' → logprob: -13.75988483428955

Token 1175: ' range' (ID: 3352)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5435463786125183
    2. 'range' → logprob: -1.668546438217163
    3. '0' → logprob: -1.793546438217163
    4. ' range' → logprob: -2.793546438217163
    5. ' ' → logprob: -6.543546199798584
    6. ' in' → logprob: -6.793546199798584
    7. 'in' → logprob: -7.793546199798584
    8. 'time' → logprob: -9.793546676635742
    9. ' time' → logprob: -9.793546676635742
    10. '_' → logprob: -10.293546676635742

Token 1176: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09376595169305801
    2. '0' → logprob: -3.0937659740448
    3. 'self' → logprob: -3.4687659740448
    4. '(' → logprob: -4.843765735626221
    5. '                   ' → logprob: -6.593765735626221
    6. '(self' → logprob: -6.843765735626221
    7. ' self' → logprob: -7.093765735626221
    8. '           ' → logprob: -7.468765735626221
    9. '               ' → logprob: -7.968765735626221
    10. '   ' → logprob: -7.968765735626221

Token 1177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16573937237262726
    2. 'self' → logprob: -2.0407392978668213
    3. '0' → logprob: -3.9157392978668213
    4. 'tr' → logprob: -6.4157395362854
    5. 'trip' → logprob: -7.0407395362854
    6. ' trips' → logprob: -9.290739059448242
    7. 'max' → logprob: -10.165739059448242
    8. 'time' → logprob: -10.165739059448242
    9. ' self' → logprob: -10.540739059448242
    10. 'min' → logprob: -10.540739059448242

Token 1178: ',self' (ID: 54040)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6303320527076721
    2. ',' → logprob: -0.8803320527076721
    3. '):' → logprob: -3.3803319931030273
    4. '
' → logprob: -5.630331993103027
    5. ',len' → logprob: -5.755331993103027
    6. ' ,' → logprob: -5.880331993103027
    7. '   ' → logprob: -6.755331993103027
    8. ',
' → logprob: -6.755331993103027
    9. '```' → logprob: -6.880331993103027
    10. ':' → logprob: -6.880331993103027

Token 1179: '.T' (ID: 2600)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.09069522470235825
    2. '+' → logprob: -2.4656951427459717
    3. '
' → logprob: -7.215695381164551
    4. 'self' → logprob: -7.840695381164551
    5. ' +' → logprob: -8.96569538116455
    6. '   ' → logprob: -9.21569538116455
    7. '```' → logprob: -9.59069538116455
    8. '.T' → logprob: -9.84069538116455
    9. '<T' → logprob: -9.96569538116455
    10. '0' → logprob: -10.09069538116455

Token 1180: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005100222188048065
    2. ' +' → logprob: -8.250510215759277
    3. '+
' → logprob: -9.125510215759277
    4. '):
' → logprob: -9.250510215759277
    5. '[' → logprob: -11.500510215759277
    6. '):' → logprob: -11.875510215759277
    7. ')+' → logprob: -12.000510215759277
    8. '```' → logprob: -12.500510215759277
    9. ')' → logprob: -12.750510215759277
    10. '+[' → logprob: -13.000510215759277

Token 1181: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4855665862560272
    2. '1' → logprob: -0.9855666160583496
    3. 'T' → logprob: -4.48556661605835
    4. '
' → logprob: -9.860566139221191
    5. '101' → logprob: -10.860566139221191
    6. '```' → logprob: -10.860566139221191
    7. ' +' → logprob: -11.110566139221191
    8. ' ' → logprob: -11.360566139221191
    9. '100' → logprob: -11.735566139221191
    10. '   ' → logprob: -11.735566139221191

Token 1182: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02478662319481373
    2. '):' → logprob: -3.7747867107391357
    3. ':' → logprob: -7.149786472320557
    4. ':
' → logprob: -7.399786472320557
    5. '       ' → logprob: -9.399786949157715
    6. '   ' → logprob: -10.274786949157715
    7. '):
' → logprob: -11.899786949157715
    8. ']:
' → logprob: -11.899786949157715
    9. ',' → logprob: -12.149786949157715
    10. ')' → logprob: -12.899786949157715

Token 1183: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48785898089408875
    2. ' for' → logprob: -0.9878590106964111
    3. 'for' → logprob: -5.362858772277832
    4. '   ' → logprob: -5.487858772277832
    5. '       ' → logprob: -5.987858772277832
    6. '	   ' → logprob: -6.737858772277832
    7. ' ' → logprob: -7.737858772277832
    8. '	       ' → logprob: -7.862858772277832
    9. '	for' → logprob: -8.737858772277832
    10. '```' → logprob: -10.237858772277832

Token 1184: ' best' (ID: 1636)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5816264152526855
    2. 'for' → logprob: -0.8316264152526855
    3. '           ' → logprob: -5.4566264152526855
    4. '       ' → logprob: -6.7066264152526855
    5. '   ' → logprob: -8.956626892089844
    6. ' ' → logprob: -10.456626892089844
    7. '	for' → logprob: -11.331626892089844
    8. '               ' → logprob: -11.956626892089844
    9. '```' → logprob: -13.956626892089844
    10. ' ' → logprob: -14.081626892089844

Token 1185: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19421236217021942
    2. ' =' → logprob: -1.8192123174667358
    3. '_profit' → logprob: -4.444212436676025
    4. '_' → logprob: -6.569212436676025
    5. '_=' → logprob: -8.194211959838867
    6. 'profit' → logprob: -8.319211959838867
    7. '_val' → logprob: -8.444211959838867
    8. '_pro' → logprob: -9.069211959838867
    9. '_dp' → logprob: -9.444211959838867
    10. '_t' → logprob: -9.819211959838867

Token 1186: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0009299254161305726
    2. '0' → logprob: -7.125929832458496
    3. ' dp' → logprob: -9.000929832458496
    4. 'd' → logprob: -14.250929832458496
    5. '   ' → logprob: -14.375929832458496
    6. '
' → logprob: -14.750929832458496
    7. '	dp' → logprob: -15.500929832458496
    8. ' ' → logprob: -15.750929832458496
    9. '(dp' → logprob: -16.375930786132812
    10. 'max' → logprob: -17.000930786132812

Token 1187: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.00012201975914649665
    2. 't' → logprob: -9.5001220703125
    3. '[' → logprob: -10.1251220703125
    4. '[
' → logprob: -12.0001220703125
    5. '
' → logprob: -15.0001220703125
    6. ' [' → logprob: -15.6251220703125
    7. '   ' → logprob: -16.1251220703125
    8. ' t' → logprob: -16.8751220703125
    9. '           ' → logprob: -17.0001220703125
    10. '[max' → logprob: -17.0001220703125

Token 1188: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.229711651802063
    2. '-' → logprob: -1.604711651802063
    3. ']
' → logprob: -6.604711532592773
    4. '])' → logprob: -6.979711532592773
    5. ' -' → logprob: -7.104711532592773
    6. ')' → logprob: -7.604711532592773
    7. ' ]' → logprob: -7.854711532592773
    8. ')]' → logprob: -9.354711532592773
    9. '
' → logprob: -9.729711532592773
    10. '   ' → logprob: -10.729711532592773

Token 1189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '
' → logprob: -17.500001907348633
    4. '   ' → logprob: -17.750001907348633
    5. ']' → logprob: -18.750001907348633
    6. ')' → logprob: -18.750001907348633
    7. '```' → logprob: -19.687501907348633
    8. '0' → logprob: -19.750001907348633
    9. '

' → logprob: -20.250001907348633
    10. 't' → logprob: -20.312501907348633

Token 1190: ']
' (ID: 1592)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2653424143791199
    2. ')' → logprob: -2.1403424739837646
    3. ')
' → logprob: -2.3903424739837646
    4. ']' → logprob: -4.8903422355651855
    5. ' 
' → logprob: -5.5153422355651855
    6. 'if' → logprob: -6.0153422355651855
    7. 'max' → logprob: -6.1403422355651855
    8. ' if' → logprob: -6.3903422355651855
    9. ',' → logprob: -6.6403422355651855
    10. ']
' → logprob: -7.1403422355651855

Token 1191: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8119073510169983
    2. '
' → logprob: -0.9369073510169983
    3. ' for' → logprob: -2.1869072914123535
    4. '           ' → logprob: -4.0619072914123535
    5. ' 
' → logprob: -4.3119072914123535
    6. 'for' → logprob: -4.4369072914123535
    7. '        
' → logprob: -6.8119072914123535
    8. '' → logprob: -7.0619072914123535
    9. '	' → logprob: -7.0619072914123535
    10. ' =' → logprob: -7.1869072914123535

Token 1192: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.591487467288971
    2. 'for' (adapté à ' for') → logprob: -0.841487467288971
    3. '           ' → logprob: -4.341487407684326
    4. '
' → logprob: -6.716487407684326
    5. '       ' → logprob: -7.216487407684326
    6. '   ' → logprob: -8.716487884521484
    7. '=' → logprob: -9.716487884521484
    8. ' ' → logprob: -9.841487884521484
    9. '```' → logprob: -9.841487884521484
    10. '	for' → logprob: -10.216487884521484

Token 1193: ' cost' (ID: 3097)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0960141196846962
    2. ' time' → logprob: -3.4710140228271484
    3. 'trip' → logprob: -3.8460140228271484
    4. '(time' → logprob: -3.9710140228271484
    5. 'tc' → logprob: -4.971014022827148
    6. 'cost' → logprob: -5.221014022827148
    7. '(tc' → logprob: -5.471014022827148
    8. ' trip' → logprob: -6.596014022827148
    9. ' tc' → logprob: -7.471014022827148
    10. '(' → logprob: -7.596014022827148

Token 1194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05164722353219986
    2. ' in' → logprob: -3.426647186279297
    3. 'in' → logprob: -4.176647186279297
    4. ' ,' → logprob: -6.301647186279297
    5. ',in' → logprob: -8.051647186279297
    6. ',
' → logprob: -9.426647186279297
    7. ',c' → logprob: -9.801647186279297
    8. ',p' → logprob: -10.426647186279297
    9. ',i' → logprob: -10.676647186279297
    10. ',value' → logprob: -11.176647186279297

Token 1195: ' profit' (ID: 15971)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.5593544244766235
    2. 'prof' → logprob: -1.4343544244766235
    3. 'value' → logprob: -2.309354305267334
    4. 'val' → logprob: -2.809354305267334
    5. 'p' → logprob: -4.059354305267334
    6. 'gain' → logprob: -4.684354305267334
    7. 'reward' → logprob: -6.684354305267334
    8. 'rev' → logprob: -7.059354305267334
    9. 'pr' → logprob: -7.059354305267334
    10. 'benef' → logprob: -8.059354782104492

Token 1196: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01607929915189743
    2. 'in' → logprob: -4.141079425811768
    3. ',' → logprob: -11.01607894897461
    4. '	in' → logprob: -11.39107894897461
    5. '_in' → logprob: -12.51607894897461
    6. ' ' → logprob: -12.51607894897461
    7. 'import' → logprob: -13.89107894897461
    8. '           ' → logprob: -13.89107894897461
    9. '            ' → logprob: -14.14107894897461
    10. '               ' → logprob: -14.14107894897461

Token 1197: ' trips' (ID: 27647)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.00012856863031629473
    2. ' trips' → logprob: -9.000128746032715
    3. 'trip' → logprob: -13.625128746032715
    4. '   ' → logprob: -13.875128746032715
    5. '[' → logprob: -14.000128746032715
    6. '(tr' → logprob: -14.000128746032715
    7. '
' → logprob: -14.500128746032715
    8. '[
' → logprob: -15.500128746032715
    9. '[(' → logprob: -16.0001277923584
    10. 'trs' → logprob: -16.5001277923584

Token 1198: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5069835186004639
    2. ':
' → logprob: -1.0069835186004639
    3. ' in' → logprob: -4.131983757019043
    4. '               ' → logprob: -4.506983757019043
    5. '           ' → logprob: -6.631983757019043
    6. ',' → logprob: -6.881983757019043
    7. 'in' → logprob: -7.506983757019043
    8. '=' → logprob: -8.006983757019043
    9. ' :' → logprob: -8.131983757019043
    10. '[' → logprob: -8.256983757019043

Token 1199: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014286901568993926
    2. ' if' → logprob: -6.626428604125977
    3. '	           ' → logprob: -10.751428604125977
    4. 'if' → logprob: -11.251428604125977
    5. '```' → logprob: -11.626428604125977
    6. '			' → logprob: -11.626428604125977
    7. ' ' → logprob: -11.751428604125977
    8. ' for' → logprob: -12.251428604125977
    9. '		       ' → logprob: -12.251428604125977
    10. '			   ' → logprob: -12.251428604125977

Token 1200: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.38757094740867615
    2. 'if' (adapté à ' if') → logprob: -1.1375709772109985
    3. '                   ' → logprob: -7.637570858001709
    4. '```' → logprob: -9.137571334838867
    5. '	if' → logprob: -10.012571334838867
    6. '               ' → logprob: -10.637571334838867
    7. '   ' → logprob: -11.012571334838867
    8. '``' → logprob: -12.137571334838867
    9. '           ' → logprob: -12.387571334838867
    10. '                       ' → logprob: -12.762571334838867

Token 1201: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.4350883364677429
    2. ' cost' → logprob: -1.0600883960723877
    3. 't' → logprob: -5.185088157653809
    4. ' t' → logprob: -7.310088157653809
    5. '                   ' → logprob: -10.060088157653809
    6. '               ' → logprob: -10.435088157653809
    7. '(cost' → logprob: -11.685088157653809
    8. '                ' → logprob: -12.435088157653809
    9. '_cost' → logprob: -13.185088157653809
    10. '                    ' → logprob: -13.560088157653809

Token 1202: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2519320547580719
    2. ' <=' → logprob: -1.5019320249557495
    3. ')<=' → logprob: -13.876932144165039
    4. ']<=' → logprob: -14.001932144165039
    5. '```' → logprob: -14.501932144165039
    6. '==' → logprob: -15.751932144165039
    7. '           ' → logprob: -16.37693214416504
    8. '≤' → logprob: -16.50193214416504
    9. '	' → logprob: -16.62693214416504
    10. '   ' → logprob: -17.25193214416504

Token 1203: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0019287518225610256
    2. ' t' → logprob: -6.251928806304932
    3. '   ' → logprob: -15.876928329467773
    4. '	t' → logprob: -17.126928329467773
    5. '`t' → logprob: -17.876928329467773
    6. '
' → logprob: -18.626928329467773
    7. ' ' → logprob: -18.751928329467773
    8. ')t' → logprob: -20.001928329467773
    9. '  ' → logprob: -20.626928329467773
    10. ' ' → logprob: -21.376928329467773

Token 1204: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.043232690542936325
    2. ':
' → logprob: -3.6682326793670654
    3. 'and' → logprob: -4.5432329177856445
    4. '                   ' → logprob: -5.4182329177856445
    5. ':' → logprob: -7.0432329177856445
    6. '               ' → logprob: -7.2932329177856445
    7. '                       ' → logprob: -9.293232917785645
    8. '           ' → logprob: -10.043232917785645
    9. ',' → logprob: -12.418232917785645
    10. '                    ' → logprob: -12.418232917785645

Token 1205: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007437197025865316
    2. '                       ' → logprob: -5.507437229156494
    3. ' and' → logprob: -6.257437229156494
    4. '               ' → logprob: -7.882437229156494
    5. '```' → logprob: -8.007436752319336
    6. 'and' → logprob: -8.257436752319336
    7. '                           ' → logprob: -9.007436752319336
    8. '   ' → logprob: -9.882436752319336
    9. ':' → logprob: -10.007436752319336
    10. ':
' → logprob: -10.132436752319336

Token 1206: ' candidate' (ID: 17098)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.009992638602852821
    2. 'best' → logprob: -5.509992599487305
    3. 'candidate' (adapté à ' candidate') → logprob: -6.009992599487305
    4. ' dp' → logprob: -6.509992599487305
    5. 'val' → logprob: -7.259992599487305
    6. 'cand' → logprob: -7.384992599487305
    7. 'if' → logprob: -7.759992599487305
    8. 'possible' → logprob: -10.384992599487305
    9. ' candidate' → logprob: -10.509992599487305
    10. 'new' → logprob: -10.759992599487305

Token 1207: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25196391344070435
    2. ' =' → logprob: -1.5019638538360596
    3. '=
' → logprob: -11.00196361541748
    4. '_profit' → logprob: -12.25196361541748
    5. '=max' → logprob: -12.62696361541748
    6. 'profit' → logprob: -12.75196361541748
    7. '_val' → logprob: -12.87696361541748
    8. '
' → logprob: -14.12696361541748
    9. 'dp' → logprob: -14.25196361541748
    10. ' =
' → logprob: -15.00196361541748

Token 1208: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -6.551721889991313e-05
    2. ' dp' → logprob: -10.125065803527832
    3. 'max' → logprob: -10.625065803527832
    4. '           ' → logprob: -15.000065803527832
    5. '
' → logprob: -15.625065803527832
    6. '               ' → logprob: -15.750065803527832
    7. '   ' → logprob: -15.750065803527832
    8. '                   ' → logprob: -16.250064849853516
    9. '	dp' → logprob: -16.250064849853516
    10. '(dp' → logprob: -17.375064849853516

Token 1209: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -9.209963900502771e-05
    2. 't' → logprob: -9.500092506408691
    3. '[
' → logprob: -11.125092506408691
    4. '[' → logprob: -13.250092506408691
    5. '
' → logprob: -14.875092506408691
    6. '   ' → logprob: -16.000091552734375
    7. '           ' → logprob: -16.125091552734375
    8. '                   ' → logprob: -16.875091552734375
    9. ' [' → logprob: -17.125091552734375
    10. '               ' → logprob: -17.125091552734375

Token 1210: ' -' (ID: 533)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.22455771267414093
    2. '-t' → logprob: -1.8495577573776245
    3. ' -' → logprob: -3.724557638168335
    4. '-' → logprob: -4.224557876586914
    5. '[' → logprob: -5.849557876586914
    6. '[
' → logprob: -6.849557876586914
    7. 't' → logprob: -7.099557876586914
    8. '-
' → logprob: -9.599557876586914
    9. '
' → logprob: -9.849557876586914
    10. '[-' → logprob: -9.974557876586914

Token 1211: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0007099286303855479
    2. ' cost' → logprob: -7.2507100105285645
    3. '(cost' → logprob: -19.250709533691406
    4. '_cost' → logprob: -19.875709533691406
    5. 'code' → logprob: -20.250709533691406
    6. '   ' → logprob: -20.500709533691406
    7. '               ' → logprob: -20.625709533691406
    8. 'Cost' → logprob: -20.875709533691406
    9. '.cost' → logprob: -21.250709533691406
    10. 'c' → logprob: -21.500709533691406

Token 1212: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11546288430690765
    2. ']+' → logprob: -2.2404627799987793
    3. '+' → logprob: -6.240462779998779
    4. ' +' → logprob: -7.365462779998779
    5. ' ]' → logprob: -10.240463256835938
    6. ')+' → logprob: -12.490463256835938
    7. ']
' → logprob: -12.740463256835938
    8. ')' → logprob: -12.740463256835938
    9. '[' → logprob: -12.865463256835938
    10. '+]' → logprob: -13.240463256835938

Token 1213: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25194093585014343
    2. '+' → logprob: -1.5019409656524658
    3. '+
' → logprob: -12.001940727233887
    4. '                   ' → logprob: -13.251940727233887
    5. ' +
' → logprob: -13.876940727233887
    6. '
' → logprob: -14.501940727233887
    7. '+c' → logprob: -14.626940727233887
    8. '                    ' → logprob: -15.126940727233887
    9. ' ' → logprob: -15.126940727233887
    10. '```' → logprob: -15.376940727233887

Token 1214: ' profit' (ID: 15971)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.0002615742268972099
    2. ' profit' → logprob: -8.250261306762695
    3. 'prof' → logprob: -15.125261306762695
    4. 'prob' → logprob: -18.125261306762695
    5. 'Profit' → logprob: -19.750261306762695
    6. 'price' → logprob: -20.000261306762695
    7. 'profits' → logprob: -20.000261306762695
    8. '_profit' → logprob: -20.625261306762695
    9. 'product' → logprob: -21.125261306762695
    10. 'pro' → logprob: -21.250261306762695

Token 1215: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09067769348621368
    2. '
' → logprob: -2.4656777381896973
    3. '               ' → logprob: -7.215677738189697
    4. '           ' → logprob: -7.840677738189697
    5. '                       ' → logprob: -8.840677261352539
    6. '                    
' → logprob: -8.840677261352539
    7. ' 
' → logprob: -9.965677261352539
    8. '				' → logprob: -10.340677261352539
    9. ',' → logprob: -10.715677261352539
    10. ' if' → logprob: -10.840677261352539

Token 1216: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0011818927014246583
    2. 'if' → logprob: -7.7511820793151855
    3. ' if' → logprob: -8.126181602478027
    4. '               ' → logprob: -8.751181602478027
    5. '
' → logprob: -9.001181602478027
    6. '           ' → logprob: -9.376181602478027
    7. '                       ' → logprob: -9.751181602478027
    8. '```' → logprob: -11.751181602478027
    9. '                    
' → logprob: -12.126181602478027
    10. '       ' → logprob: -12.876181602478027

Token 1217: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13484974205493927
    2. ' if' → logprob: -2.384849786758423
    3. '                   ' → logprob: -3.384849786758423
    4. '                       ' → logprob: -9.509849548339844
    5. 'best' → logprob: -9.884849548339844
    6. 'dp' → logprob: -11.384849548339844
    7. '
' → logprob: -11.634849548339844
    8. '               ' → logprob: -12.009849548339844
    9. '           ' → logprob: -12.884849548339844
    10. ' best' → logprob: -13.134849548339844

Token 1218: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -1.676292231422849e-05
    2. ' candidate' → logprob: -11.000017166137695
    3. '(candidate' → logprob: -16.875017166137695
    4. '                   ' → logprob: -17.000017166137695
    5. '_candidate' → logprob: -20.250017166137695
    6. 'cand' → logprob: -20.375017166137695
    7. 'c' → logprob: -20.500017166137695
    8. '
' → logprob: -20.875017166137695
    9. '           ' → logprob: -21.625017166137695
    10. '   ' → logprob: -22.000017166137695

Token 1219: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.03808428719639778
    2. ' >' → logprob: -3.2880842685699463
    3. '>
' → logprob: -10.663084030151367
    4. '                   ' → logprob: -11.663084030151367
    5. '                       ' → logprob: -12.913084030151367
    6. '[' → logprob: -13.038084030151367
    7. ' >
' → logprob: -13.413084030151367
    8. '">' → logprob: -14.288084030151367
    9. '```' → logprob: -14.288084030151367
    10. '
' → logprob: -14.663084030151367

Token 1220: ' best' (ID: 1636)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3136994540691376
    2. 'best' → logprob: -1.31369948387146
    3. ' dp' → logprob: -7.938699245452881
    4. ' best' → logprob: -9.688699722290039
    5. 'candidate' → logprob: -10.938699722290039
    6. '
' → logprob: -15.063699722290039
    7. '(dp' → logprob: -15.563699722290039
    8. '	dp' → logprob: -15.563699722290039
    9. '   ' → logprob: -15.813699722290039
    10. 'bp' → logprob: -16.06369972229004

Token 1221: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7187505960464478
    2. '                       ' → logprob: -0.9687505960464478
    3. ':' → logprob: -2.093750476837158
    4. '                   ' → logprob: -5.218750476837158
    5. '=' → logprob: -6.218750476837158
    6. '               ' → logprob: -6.968750476837158
    7. 'best' → logprob: -7.593750476837158
    8. '):
' → logprob: -8.468750953674316
    9. '(best' → logprob: -8.843750953674316
    10. '                           ' → logprob: -8.843750953674316

Token 1222: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.8693747520446777
    2. ' best' → logprob: -1.2443747520446777
    3. 'best' → logprob: -1.2443747520446777
    4. '                   ' → logprob: -5.994374752044678
    5. '(best' → logprob: -6.994374752044678
    6. '	best' → logprob: -8.369375228881836
    7. '                        
' → logprob: -8.994375228881836
    8. '                           ' → logprob: -9.119375228881836
    9. '                               ' → logprob: -9.244375228881836
    10. '=' → logprob: -9.369375228881836

Token 1223: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.0019325626781210303
    2. ' best' → logprob: -6.251932621002197
    3. '                       ' → logprob: -13.251932144165039
    4. 'candidate' → logprob: -13.251932144165039
    5. '                           ' → logprob: -15.501932144165039
    6. '	best' → logprob: -15.626932144165039
    7. '(best' → logprob: -17.62693214416504
    8. '                   ' → logprob: -17.75193214416504
    9. '```' → logprob: -17.87693214416504
    10. '                               ' → logprob: -17.87693214416504

Token 1224: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142951607704163
    2. ' =' → logprob: -1.7014294862747192
    3. '=
' → logprob: -12.07642936706543
    4. ' =
' → logprob: -12.82642936706543
    5. '=t' → logprob: -12.95142936706543
    6. '=b' → logprob: -13.45142936706543
    7. '[' → logprob: -13.45142936706543
    8. '<|end|>' → logprob: -14.70142936706543
    9. '=

' → logprob: -14.95142936706543
    10. ' =
' → logprob: -15.70142936706543

Token 1225: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.00020354038861114532
    2. ' candidate' → logprob: -8.500203132629395
    3. '(candidate' → logprob: -19.00020408630371
    4. '
' → logprob: -21.12520408630371
    5. '_candidate' → logprob: -21.37520408630371
    6. ' candidat' → logprob: -21.87520408630371
    7. 'c' → logprob: -22.00020408630371
    8. 'cand' → logprob: -22.25020408630371
    9. 'Candidate' → logprob: -23.00020408630371
    10. '                   ' → logprob: -23.25020408630371

Token 1226: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07825680077075958
    2. '           ' → logprob: -3.953256845474243
    3. 'dp' → logprob: -4.328256607055664
    4. '                   ' → logprob: -4.578256607055664
    5. '               ' → logprob: -4.703256607055664
    6. '                       ' → logprob: -4.703256607055664
    7. ' dp' → logprob: -5.453256607055664
    8. ')' → logprob: -6.203256607055664
    9. '```' → logprob: -6.328256607055664
    10. ' 
' → logprob: -6.953256607055664

Token 1227: '           ' (ID: 352)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.20919018983840942
    2. 'dp' → logprob: -1.7091901302337646
    3. ' 
' → logprob: -5.709190368652344
    4. '
' → logprob: -7.084190368652344
    5. ')' → logprob: -7.209190368652344
    6. '[' → logprob: -7.584190368652344
    7. '```' → logprob: -7.709190368652344
    8. '_dp' → logprob: -7.834190368652344
    9. '                       ' → logprob: -8.709190368652344
    10. '                        
' → logprob: -9.084190368652344

Token 1228: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.018729714676737785
    2. ' dp' → logprob: -4.2687296867370605
    3. '           ' → logprob: -5.5187296867370605
    4. '       ' → logprob: -8.518730163574219
    5. '_dp' → logprob: -8.643730163574219
    6. '   ' → logprob: -9.518730163574219
    7. '	dp' → logprob: -10.393730163574219
    8. '
' → logprob: -10.893730163574219
    9. '               ' → logprob: -11.268730163574219
    10. ' ' → logprob: -11.518730163574219

Token 1229: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -3.3451433409936726e-05
    2. '[' → logprob: -10.375033378601074
    3. '```' → logprob: -13.875033378601074
    4. '[
' → logprob: -14.875033378601074
    5. '\[' → logprob: -14.875033378601074
    6. 't' → logprob: -15.500033378601074
    7. '   ' → logprob: -17.25003433227539
    8. '	t' → logprob: -17.37503433227539
    9. ']' → logprob: -17.50003433227539
    10. '_t' → logprob: -17.75003433227539

Token 1230: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008089791052043438
    2. ']' → logprob: -5.633090019226074
    3. ' =' → logprob: -5.633090019226074
    4. ']=' → logprob: -7.258090019226074
    5. '=
' → logprob: -9.133090019226074
    6. '[' → logprob: -10.133090019226074
    7. ')' → logprob: -11.383090019226074
    8. '[t' → logprob: -11.633090019226074
    9. '=t' → logprob: -11.758090019226074
    10. '=max' → logprob: -11.758090019226074

Token 1231: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003048378275707364
    2. ' =' → logprob: -8.12530517578125
    3. '=
' → logprob: -11.75030517578125
    4. '[' → logprob: -14.50030517578125
    5. '=

' → logprob: -15.50030517578125
    6. ']=' → logprob: -16.87530517578125
    7. '=max' → logprob: -17.37530517578125
    8. '=[' → logprob: -17.37530517578125
    9. ')=' → logprob: -18.12530517578125
    10. ' =
' → logprob: -18.25030517578125

Token 1232: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -4.842555426876061e-06
    2. ' best' → logprob: -12.250004768371582
    3. '(best' → logprob: -20.5000057220459
    4. '	best' → logprob: -21.6250057220459
    5. 'b' → logprob: -22.3750057220459
    6. '_best' → logprob: -23.6250057220459
    7. 'max' → logprob: -24.0000057220459
    8. 'Best' → logprob: -24.2500057220459
    9. '.best' → logprob: -24.5000057220459
    10. '```' → logprob: -24.5000057220459

Token 1233: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1234: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12812595069408417
    2. 'return' → logprob: -2.1281259059906006
    3. ' return' → logprob: -7.25312614440918
    4. '   ' → logprob: -8.37812614440918
    5. '	' → logprob: -9.12812614440918
    6. '
' → logprob: -9.50312614440918
    7. '	return' → logprob: -10.25312614440918
    8. '```' → logprob: -10.37812614440918
    9. '        
' → logprob: -13.00312614440918
    10. '           ' → logprob: -13.75312614440918

Token 1235: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005556552205234766
    2. '       ' → logprob: -7.500555515289307
    3. ' return' → logprob: -13.000555992126465
    4. '```' → logprob: -15.625555992126465
    5. '
' → logprob: -16.25055503845215
    6. '	return' → logprob: -17.50055503845215
    7. '{return' → logprob: -18.00055503845215
    8. '_return' → logprob: -18.37555503845215
    9. '   ' → logprob: -18.75055503845215
    10. 'result' → logprob: -18.87555503845215

Token 1236: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0004307884373702109
    2. ' dp' → logprob: -7.750430583953857
    3. 'max' → logprob: -17.125431060791016
    4. '(dp' → logprob: -19.000431060791016
    5. '	dp' → logprob: -19.625431060791016
    6. '   ' → logprob: -21.625431060791016
    7. '_dp' → logprob: -21.875431060791016
    8. '
' → logprob: -22.375431060791016
    9. ' max' → logprob: -23.500431060791016
    10. '.dp' → logprob: -23.625431060791016

Token 1237: '[self' (ID: 33734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1238: '.T' (ID: 2600)
  Prédit: '.T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.T' → logprob: -1.9361264946837764e-07
    2. 'T' → logprob: -16.0
    3. '.' → logprob: -17.625
    4. ' .' → logprob: -20.625
    5. '.Т' → logprob: -20.625
    6. '   ' → logprob: -21.0
    7. '.t' → logprob: -21.25
    8. '.
' → logprob: -21.5
    9. '	T' → logprob: -21.625
    10. '_T' → logprob: -21.625

Token 1239: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.652451464906335e-05
    2. ']
' → logprob: -11.500016212463379
    3. ' ]' → logprob: -12.250016212463379
    4. '-' → logprob: -14.125016212463379
    5. '])' → logprob: -14.750016212463379
    6. ')]' → logprob: -16.375017166137695
    7. ')' → logprob: -16.375017166137695
    8. ']}' → logprob: -16.875017166137695
    9. ']

' → logprob: -17.000017166137695
    10. ']-' → logprob: -17.375017166137695

Token 1240: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1241: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3251894414424896
    2. ' solve' → logprob: -1.825189471244812
    3. ' Trading' → logprob: -3.4501893520355225
    4. ' test' → logprob: -3.4501893520355225
    5. ' run' → logprob: -4.575189590454102
    6. '_' → logprob: -4.575189590454102
    7. ' ' → logprob: -5.075189590454102
    8. 'main' → logprob: -5.325189590454102
    9. '_tr' → logprob: -5.450189590454102
    10. 'solve' → logprob: -5.825189590454102

Token 1242: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0028406570199877024
    2. '():
' → logprob: -5.877840518951416
    3. '()' → logprob: -10.377840995788574
    4. '().' → logprob: -13.627840995788574
    5. '():
' → logprob: -13.877840995788574
    6. ' ():' → logprob: -14.002840995788574
    7. '(' → logprob: -14.252840995788574
    8. ':' → logprob: -14.627840995788574
    9. '():

' → logprob: -15.002840995788574
    10. '()>' → logprob: -16.627840042114258

Token 1243: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008297769352793694
    2. 'import' → logprob: -6.258297920227051
    3. ' import' → logprob: -6.883297920227051
    4. ' input' → logprob: -7.383297920227051
    5. '```' → logprob: -7.383297920227051
    6. 'def' → logprob: -7.883297920227051
    7. '    ' → logprob: -7.883297920227051
    8. 'n' → logprob: -8.00829792022705
    9. ' trading' → logprob: -8.25829792022705
    10. ' lines' → logprob: -8.25829792022705

Token 1244: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.18507976830005646
    2. 'import' (adapté à ' import') → logprob: -1.93507981300354
    3. 'n' → logprob: -4.435079574584961
    4. ' n' → logprob: -5.185079574584961
    5. '   ' → logprob: -5.185079574584961
    6. ' N' → logprob: -7.060079574584961
    7. 'N' → logprob: -7.810079574584961
    8. ' input' → logprob: -9.060079574584961
    9. '	import' → logprob: -10.560079574584961
    10. 'input' → logprob: -11.310079574584961

Token 1245: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -8.061054359131958e-06
    2. ' sys' → logprob: -11.750007629394531
    3. '=sys' → logprob: -16.25000762939453
    4. '(sys' → logprob: -20.12500762939453
    5. '	sys' → logprob: -20.62500762939453
    6. '```' → logprob: -21.00000762939453
    7. 'math' → logprob: -21.12500762939453
    8. '_sys' → logprob: -22.00000762939453
    9. 'io' → logprob: -23.75000762939453
    10. 'json' → logprob: -24.25000762939453

Token 1246: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41241082549095154
    2. '
' → logprob: -1.287410855293274
    3. 'data' → logprob: -3.9124107360839844
    4. 'input' → logprob: -3.9124107360839844
    5. '    
' → logprob: -4.912410736083984
    6. '```' → logprob: -5.412410736083984
    7. ' lines' → logprob: -6.162410736083984
    8. 'n' → logprob: -6.537410736083984
    9. ' input' → logprob: -6.537410736083984
    10. 'import' → logprob: -7.162410736083984

Token 1247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3036072552204132
    2. 'input' → logprob: -2.428607225418091
    3. ' input' → logprob: -2.553607225418091
    4. ' lines' → logprob: -3.428607225418091
    5. ' readline' → logprob: -3.928607225418091
    6. 'data' → logprob: -4.17860746383667
    7. '```' → logprob: -4.17860746383667
    8. '
' → logprob: -5.30360746383667
    9. ' data' → logprob: -5.42860746383667
    10. 'import' → logprob: -6.80360746383667

Token 1248: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15427851676940918
    2. 'data' → logprob: -3.029278516769409
    3. 'input' (adapté à ' input') → logprob: -3.279278516769409
    4. '
' → logprob: -3.279278516769409
    5. ' lines' → logprob: -5.154278755187988
    6. ' input' → logprob: -5.404278755187988
    7. '```' → logprob: -6.029278755187988
    8. '    
' → logprob: -6.404278755187988
    9. ' data' → logprob: -6.404278755187988
    10. ' readline' → logprob: -7.154278755187988

Token 1249: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14997802674770355
    2. '_line' → logprob: -2.274977922439575
    3. '_data' → logprob: -3.774977922439575
    4. '().' → logprob: -5.024978160858154
    5. '=' → logprob: -5.524978160858154
    6. '_' → logprob: -6.399978160858154
    7. ' =' → logprob: -8.024977684020996
    8. 'data' → logprob: -8.524977684020996
    9. '_lines' → logprob: -8.899977684020996
    10. 'line' → logprob: -9.149977684020996

Token 1250: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0016238800017163157
    2. ' sys' → logprob: -6.50162410736084
    3. 'input' → logprob: -9.25162410736084
    4. '=sys' → logprob: -10.62662410736084
    5. '	sys' → logprob: -14.62662410736084
    6. '(sys' → logprob: -15.12662410736084
    7. 'lambda' → logprob: -15.25162410736084
    8. 'stdin' → logprob: -16.001623153686523
    9. 'open' → logprob: -16.501623153686523
    10. ' input' → logprob: -16.501623153686523

Token 1251: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.2694455683231354
    2. '().' → logprob: -1.519445538520813
    3. '.readline' → logprob: -5.269445419311523
    4. 'stdin' → logprob: -6.144445419311523
    5. 'ist' → logprob: -6.394445419311523
    6. 'import' → logprob: -6.644445419311523
    7. '```' → logprob: -7.144445419311523
    8. 'def' → logprob: -7.519445419311523
    9. '=sys' → logprob: -7.644445419311523
    10. '   ' → logprob: -7.769445419311523

Token 1252: '.readline' (ID: 74673)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.5776852965354919
    2. '.readline' → logprob: -0.8276852965354919
    3. '_read' → logprob: -7.077685356140137
    4. 'buffer' → logprob: -7.952685356140137
    5. ' readline' → logprob: -7.952685356140137
    6. 'reader' → logprob: -9.952685356140137
    7. 'rea' → logprob: -10.077685356140137
    8. 're' → logprob: -11.077685356140137
    9. ' =' → logprob: -11.077685356140137
    10. '.read' → logprob: -11.077685356140137

Token 1253: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020147543400526047
    2. 'n' → logprob: -4.395147323608398
    3. '
' → logprob: -5.145147323608398
    4. 'N' → logprob: -6.770147323608398
    5. '    
' → logprob: -7.645147323608398
    6. '```' → logprob: -9.145147323608398
    7. 'def' → logprob: -10.895147323608398
    8. '(n' → logprob: -12.020147323608398
    9. 'num' → logprob: -12.020147323608398
    10. 'for' → logprob: -12.520147323608398

Token 1254: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16527262330055237
    2. '
' → logprob: -2.0402727127075195
    3. '    
' → logprob: -5.0402727127075195
    4. 'n' → logprob: -5.2902727127075195
    5. 'def' → logprob: -6.1652727127075195
    6. 'for' → logprob: -6.4152727127075195
    7. 'N' → logprob: -6.5402727127075195
    8. '()
' → logprob: -6.6652727127075195
    9. '```' → logprob: -6.7902727127075195
    10. '(n' → logprob: -7.1652727127075195

Token 1255: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.014307122677564621
    2. 'n' → logprob: -4.264307022094727
    3. '   ' → logprob: -9.139307022094727
    4. ' N' → logprob: -11.514307022094727
    5. 'for' → logprob: -11.639307022094727
    6. '
' → logprob: -11.889307022094727
    7. '```' → logprob: -12.264307022094727
    8. '_N' → logprob: -12.764307022094727
    9. ' n' → logprob: -14.389307022094727
    10. '    
' → logprob: -14.514307022094727

Token 1256: ',M' (ID: 54127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019120756536722183
    2. '=' → logprob: -4.769120693206787
    3. '   ' → logprob: -5.394120693206787
    4. ' =' → logprob: -5.769120693206787
    5. ')' → logprob: -7.144120693206787
    6. '(' → logprob: -7.269120693206787
    7. '()' → logprob: -8.144121170043945
    8. ' ,' → logprob: -8.144121170043945
    9. ',
' → logprob: -8.644121170043945
    10. '.' → logprob: -9.644121170043945

Token 1257: ',W' (ID: 117252)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018711581826210022
    2. '=' → logprob: -4.518711566925049
    3. ' =' → logprob: -5.018711566925049
    4. ' ,' → logprob: -7.143711566925049
    5. ',M' → logprob: -10.268712043762207
    6. '=int' → logprob: -10.393712043762207
    7. ',N' → logprob: -10.518712043762207
    8. '   ' → logprob: -10.768712043762207
    9. ',int' → logprob: -10.893712043762207
    10. ',W' → logprob: -11.018712043762207

Token 1258: ',T' (ID: 44428)
  Prédit: ',T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',T' → logprob: -0.20284822583198547
    2. ',' → logprob: -1.827848196029663
    3. ' =' → logprob: -4.327848434448242
    4. '=' → logprob: -4.702848434448242
    5. ',Q' → logprob: -9.202848434448242
    6. ',P' → logprob: -9.327848434448242
    7. ',K' → logprob: -9.327848434448242
    8. '   ' → logprob: -10.077848434448242
    9. ',C' → logprob: -10.077848434448242
    10. ' ,' → logprob: -10.327848434448242

Token 1259: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029217490926384926
    2. ' =' → logprob: -3.654217481613159
    3. '   ' → logprob: -5.904217720031738
    4. '()' → logprob: -9.779217720031738
    5. '=int' → logprob: -10.529217720031738
    6. '=
' → logprob: -10.654217720031738
    7. ' ' → logprob: -10.904217720031738
    8. ',' → logprob: -10.904217720031738
    9. '=line' → logprob: -11.529217720031738
    10. '=input' → logprob: -11.904217720031738

Token 1260: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.07889165729284286
    2. ' map' → logprob: -2.5788917541503906
    3. 'list' → logprob: -13.70389175415039
    4. 'input' → logprob: -15.32889175415039
    5. '[' → logprob: -15.57889175415039
    6. 'tuple' → logprob: -15.82889175415039
    7. ' list' → logprob: -16.07889175415039
    8. '(map' → logprob: -16.32889175415039
    9. '	map' → logprob: -17.20389175415039
    10. 'm' → logprob: -17.32889175415039

Token 1261: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1612350344657898
    2. '(input' → logprob: -1.9112350940704346
    3. 'input' → logprob: -7.6612348556518555
    4. '(' → logprob: -8.286234855651855
    5. '(str' → logprob: -9.036234855651855
    6. 'int' → logprob: -9.286234855651855
    7. '(lambda' → logprob: -10.036234855651855
    8. '(
' → logprob: -10.911234855651855
    9. '[int' → logprob: -12.911234855651855
    10. '(list' → logprob: -13.036234855651855

Token 1262: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10621131956577301
    2. 'input' → logprob: -2.4812114238739014
    3. ',input' → logprob: -4.356211185455322
    4. ',' → logprob: -5.981211185455322
    5. '(' → logprob: -6.981211185455322
    6. ')' → logprob: -7.981211185455322
    7. '=input' → logprob: -8.60621166229248
    8. '(),' → logprob: -8.73121166229248
    9. '(
' → logprob: -10.23121166229248
    10. ' input' → logprob: -10.35621166229248

Token 1263: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -8.180258191714529e-06
    2. ' input' → logprob: -11.750008583068848
    3. '
' → logprob: -16.62500762939453
    4. '(input' → logprob: -17.37500762939453
    5. ')' → logprob: -17.50000762939453
    6. '=input' → logprob: -18.12500762939453
    7. '   ' → logprob: -18.25000762939453
    8. '<input' → logprob: -18.87500762939453
    9. ',input' → logprob: -18.87500762939453
    10. '```' → logprob: -19.75000762939453

Token 1264: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.096126576769166e-05
    2. '()' → logprob: -10.125041007995605
    3. '())' → logprob: -14.250041007995605
    4. ' ().' → logprob: -16.25004005432129
    5. '()
' → logprob: -17.00004005432129
    6. '(' → logprob: -17.25004005432129
    7. '()[' → logprob: -18.00004005432129
    8. ')' → logprob: -18.37504005432129
    9. '().'' → logprob: -18.87504005432129
    10. '('').' → logprob: -19.12504005432129

Token 1265: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.12765349447727203
    2. 'strip' → logprob: -2.1276535987854004
    3. 'rstrip' → logprob: -7.2526535987854
    4. '().' → logprob: -12.127653121948242
    5. '(split' → logprob: -12.752653121948242
    6. '())' → logprob: -12.752653121948242
    7. ')' → logprob: -13.377653121948242
    8. ' split' → logprob: -13.627653121948242
    9. ' strip' → logprob: -14.002653121948242
    10. '(strip' → logprob: -14.502653121948242

Token 1266: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1298617571592331
    2. ')' → logprob: -2.129861831665039
    3. '()' → logprob: -5.879861831665039
    4. '())
' → logprob: -9.129861831665039
    5. '(' → logprob: -11.379861831665039
    6. '   ' → logprob: -12.754861831665039
    7. '))' → logprob: -13.004861831665039
    8. '()
' → logprob: -13.004861831665039
    9. '().' → logprob: -13.129861831665039
    10. ')
' → logprob: -13.254861831665039

Token 1267: '   ' (ID: 271)
  Prédit: 'products'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'products' → logprob: -0.048643916845321655
    2. 'cities' → logprob: -3.2986438274383545
    3. '   ' → logprob: -4.673644065856934
    4. 'c' → logprob: -7.798644065856934
    5. 'product' → logprob: -8.048644065856934
    6. ' products' → logprob: -8.798644065856934
    7. 'city' → logprob: -9.298644065856934
    8. '(products' → logprob: -9.798644065856934
    9. '_products' → logprob: -10.423644065856934
    10. 'for' → logprob: -10.548644065856934

Token 1268: ' products' (ID: 3891)
  Prédit: 'products'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'products' (adapté à ' products') → logprob: -0.002034988021478057
    2. 'cities' → logprob: -6.252035140991211
    3. ' products' → logprob: -9.502035140991211
    4. 'product' → logprob: -11.377035140991211
    5. 'for' → logprob: -11.502035140991211
    6. 'city' → logprob: -12.752035140991211
    7. '_products' → logprob: -13.252035140991211
    8. '   ' → logprob: -13.377035140991211
    9. '
' → logprob: -13.502035140991211
    10. 'Products' → logprob: -14.502035140991211

Token 1269: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.2065218836069107
    2. '=' → logprob: -1.9565218687057495
    3. ' =' → logprob: -3.206521987915039
    4. 'data' → logprob: -5.706521987915039
    5. '=[]' → logprob: -7.831521987915039
    6. '=[]
' → logprob: -7.956521987915039
    7. '   ' → logprob: -8.956521987915039
    8. 'Data' → logprob: -9.206521987915039
    9. '_' → logprob: -9.331521987915039
    10. '[]' → logprob: -9.456521987915039

Token 1270: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5232105851173401
    2. ' =' → logprob: -0.8982105851173401
    3. '   ' → logprob: -10.523210525512695
    4. '=[]' → logprob: -10.648210525512695
    5. '[' → logprob: -11.773210525512695
    6. '[
' → logprob: -12.398210525512695
    7. '[]' → logprob: -12.523210525512695
    8. '=[
' → logprob: -12.648210525512695
    9. ')' → logprob: -12.773210525512695
    10. '=[]
' → logprob: -12.898210525512695

Token 1271: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008263026247732341
    2. '[int' → logprob: -7.500826358795166
    3. '[N' → logprob: -9.500825881958008
    4. '[str' → logprob: -9.750825881958008
    5. '[List' → logprob: -10.000825881958008
    6. '[class' → logprob: -11.000825881958008
    7. '[]' → logprob: -11.000825881958008
    8. '[n' → logprob: -12.125825881958008
    9. '[num' → logprob: -12.125825881958008
    10. ' [' → logprob: -12.375825881958008

Token 1272: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07979957014322281
    2. ' for' → logprob: -2.5797996520996094
    3. '   ' → logprob: -7.079799652099609
    4. '	for' → logprob: -9.82979965209961
    5. '    
' → logprob: -12.07979965209961
    6. ' 
' → logprob: -13.45479965209961
    7. '[' → logprob: -13.57979965209961
    8. '
' → logprob: -13.82979965209961
    9. 'while' → logprob: -13.95479965209961
    10. '  
' → logprob: -14.45479965209961

Token 1273: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.0206720617134124e-05
    2. ' for' → logprob: -11.50001049041748
    3. '
' → logprob: -18.125009536743164
    4. '   ' → logprob: -19.625009536743164
    5. '	for' → logprob: -21.375009536743164
    6. '```' → logprob: -24.125009536743164
    7. '    
' → logprob: -24.500009536743164
    8. '_for' → logprob: -24.625009536743164
    9. ' 
' → logprob: -25.000009536743164
    10. 'For' → logprob: -25.625009536743164

Token 1274: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.4121114822482923e-06
    2. ' _' → logprob: -12.750003814697266
    3. '_
' → logprob: -15.000003814697266
    4. '_range' → logprob: -16.500003814697266
    5. '_=' → logprob: -17.125003814697266
    6. '_i' → logprob: -17.750003814697266
    7. ' in' → logprob: -18.625003814697266
    8. '_in' → logprob: -19.250003814697266
    9. '_
' → logprob: -19.375003814697266
    10. '_

' → logprob: -20.000003814697266

Token 1275: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3234097361564636
    2. '_' → logprob: -1.8234097957611084
    3. 'in' → logprob: -2.3234097957611084
    4. 'range' → logprob: -4.198409557342529
    5. 'n' → logprob: -6.823409557342529
    6. ' range' → logprob: -8.323410034179688
    7. ' ' → logprob: -8.448410034179688
    8. 's' → logprob: -9.073410034179688
    9. '  ' → logprob: -10.073410034179688
    10. '```' → logprob: -10.448410034179688

Token 1276: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.5491004129871726e-05
    2. ' range' → logprob: -10.000045776367188
    3. '```' → logprob: -17.500045776367188
    4. '
' → logprob: -18.000045776367188
    5. '(range' → logprob: -18.875045776367188
    6. ')' → logprob: -19.375045776367188
    7. 'in' → logprob: -19.875045776367188
    8. '_' → logprob: -19.875045776367188
    9. '[' → logprob: -19.875045776367188
    10. '0' → logprob: -20.375045776367188

Token 1277: '(M' (ID: 6103)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03853804990649223
    2. '(N' → logprob: -3.2885379791259766
    3. 'M' → logprob: -7.788537979125977
    4. ' N' → logprob: -10.038537979125977
    5. '(M' → logprob: -10.788537979125977
    6. '(' → logprob: -11.663537979125977
    7. 'int' → logprob: -12.413537979125977
    8. '(int' → logprob: -13.038537979125977
    9. '_N' → logprob: -13.788537979125977
    10. 'range' → logprob: -13.913537979125977

Token 1278: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06711862236261368
    2. ':' → logprob: -3.9421186447143555
    3. '):' → logprob: -3.9421186447143555
    4. '   ' → logprob: -4.3171186447143555
    5. '():
' → logprob: -5.0671186447143555
    6. ':
' → logprob: -5.1921186447143555
    7. '```' → logprob: -8.192118644714355
    8. ',' → logprob: -8.692118644714355
    9. '():' → logprob: -9.567118644714355
    10. '       ' → logprob: -9.692118644714355

Token 1279: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25279805064201355
    2. 'name' → logprob: -2.502798080444336
    3. ' line' → logprob: -2.752798080444336
    4. 'line' → logprob: -3.252798080444336
    5. 'product' → logprob: -4.252798080444336
    6. 'products' → logprob: -5.002798080444336
    7. ' name' → logprob: -5.627798080444336
    8. 'data' → logprob: -5.877798080444336
    9. ' product' → logprob: -6.252798080444336
    10. 'code' → logprob: -6.502798080444336

Token 1280: ' s' (ID: 265)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.1034124419093132
    2. 'line' → logprob: -2.353412389755249
    3. ' line' → logprob: -6.478412628173828
    4. ' name' → logprob: -7.353412628173828
    5. 'n' → logprob: -7.853412628173828
    6. 's' (adapté à ' s') → logprob: -8.353412628173828
    7. 'parts' → logprob: -8.853412628173828
    8. 'data' → logprob: -9.103412628173828
    9. '   ' → logprob: -9.853412628173828
    10. 'product' → logprob: -10.228412628173828

Token 1281: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7080678343772888
    2. ' =' → logprob: -1.3330678939819336
    3. '=' → logprob: -1.5830678939819336
    4. ' ,' → logprob: -3.8330678939819336
    5. 'tr' → logprob: -4.583067893981934
    6. ',p' → logprob: -6.458067893981934
    7. '   ' → logprob: -6.708067893981934
    8. 'name' → logprob: -7.458067893981934
    9. '=input' → logprob: -7.708067893981934
    10. ',name' → logprob: -7.708067893981934

Token 1282: ',p' (ID: 14835)
  Prédit: ',w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.10202913731336594
    2. ',p' → logprob: -2.7270290851593018
    3. ',' → logprob: -3.7270290851593018
    4. ' ,' → logprob: -5.727029323577881
    5. '=' → logprob: -6.977029323577881
    6. ',v' → logprob: -7.477029323577881
    7. ' =' → logprob: -7.602029323577881
    8. 'w' → logprob: -7.602029323577881
    9. ',i' → logprob: -7.727029323577881
    10. ',t' → logprob: -8.602028846740723

Token 1283: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08900457620620728
    2. ' =' → logprob: -2.4640045166015625
    3. '=input' → logprob: -10.214004516601562
    4. ',' → logprob: -11.089004516601562
    5. '   ' → logprob: -12.589004516601562
    6. ' ' → logprob: -13.214004516601562
    7. '=line' → logprob: -13.214004516601562
    8. '=int' → logprob: -13.589004516601562
    9. '	' → logprob: -13.964004516601562
    10. ')' → logprob: -14.464004516601562

Token 1284: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.33680155873298645
    2. 'map' → logprob: -1.336801528930664
    3. ' input' → logprob: -4.336801528930664
    4. ' map' → logprob: -4.586801528930664
    5. '=input' → logprob: -14.461801528930664
    6. 'list' → logprob: -15.461801528930664
    7. '(input' → logprob: -15.836801528930664
    8. '[input' → logprob: -16.336801528930664
    9. 'int' → logprob: -16.961801528930664
    10. '	map' → logprob: -17.086801528930664

Token 1285: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0009120595059357584
    2. '()' → logprob: -7.000912189483643
    3. '()
' → logprob: -15.500911712646484
    4. '(' → logprob: -16.375911712646484
    5. '.split' → logprob: -16.375911712646484
    6. ' ().' → logprob: -16.375911712646484
    7. '()[' → logprob: -16.500911712646484
    8. '())' → logprob: -16.875911712646484
    9. '()).' → logprob: -17.625911712646484
    10. '.readline' → logprob: -18.625911712646484

Token 1286: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.6941149234771729
    2. 'strip' → logprob: -0.6941149234771729
    3. 'rstrip' → logprob: -6.944114685058594
    4. ' strip' → logprob: -13.944114685058594
    5. 'read' → logprob: -14.194114685058594
    6. ' split' → logprob: -14.444114685058594
    7. '(split' → logprob: -14.819114685058594
    8. '_split' → logprob: -15.569114685058594
    9. 'spl' → logprob: -16.319114685058594
    10. '_strip' → logprob: -16.944114685058594

Token 1287: '()
' (ID: 1234)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6381383538246155
    2. '   ' → logprob: -1.8881382942199707
    3. ',v' → logprob: -1.8881382942199707
    4. '    
' → logprob: -2.5131382942199707
    5. 'v' → logprob: -3.7631382942199707
    6. ' 
' → logprob: -4.388138294219971
    7. '
' → logprob: -4.638138294219971
    8. ' ,' → logprob: -4.763138294219971
    9. '        
' → logprob: -5.013138294219971
    10. '<|end|>' → logprob: -5.263138294219971

Token 1288: '       ' (ID: 309)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6629020571708679
    2. '   ' → logprob: -1.6629021167755127
    3. ' v' → logprob: -2.1629021167755127
    4. ',v' → logprob: -2.4129021167755127
    5. '
' → logprob: -3.2879021167755127
    6. ',' → logprob: -4.537901878356934
    7. '	v' → logprob: -5.162901878356934
    8. '    
' → logprob: -5.287901878356934
    9. ' 
' → logprob: -5.287901878356934
    10. 's' → logprob: -5.412901878356934

Token 1289: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.01616070605814457
    2. ' v' → logprob: -4.641160488128662
    3. 'products' → logprob: -5.266160488128662
    4. ' products' → logprob: -7.266160488128662
    5. 's' → logprob: -7.891160488128662
    6. 'w' → logprob: -9.89116096496582
    7. ' s' → logprob: -10.01616096496582
    8. 'p' → logprob: -10.26616096496582
    9. '   ' → logprob: -11.76616096496582
    10. ' p' → logprob: -13.01616096496582

Token 1290: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004177410155534744
    2. ' =' → logprob: -6.004177570343018
    3. '=int' → logprob: -6.379177570343018
    4. ',' → logprob: -12.87917709350586
    5. '=
' → logprob: -14.37917709350586
    6. 'int' → logprob: -15.12917709350586
    7. '=v' → logprob: -16.00417709350586
    8. 'v' → logprob: -16.12917709350586
    9. '   ' → logprob: -16.75417709350586
    10. ')' → logprob: -17.87917709350586

Token 1291: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.9361264946837764e-07
    2. ' int' → logprob: -15.75
    3. '=int' → logprob: -20.5
    4. '[int' → logprob: -21.125
    5. '<int' → logprob: -21.5
    6. ']int' → logprob: -23.0
    7. '
' → logprob: -23.125
    8. '(int' → logprob: -23.25
    9. 'inti' → logprob: -23.5
    10. '	int' → logprob: -23.5

Token 1292: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0010472200810909271
    2. 'v' → logprob: -6.876047134399414
    3. '(' → logprob: -11.751047134399414
    4. ')v' → logprob: -12.251047134399414
    5. '	v' → logprob: -14.251047134399414
    6. '(
' → logprob: -14.751047134399414
    7. ' v' → logprob: -14.876047134399414
    8. '[v' → logprob: -16.001047134399414
    9. ')' → logprob: -16.126047134399414
    10. '<|end|>' → logprob: -16.876047134399414

Token 1293: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024620062322355807
    2. ')
' → logprob: -8.875246047973633
    3. '<|end|>' → logprob: -9.875246047973633
    4. ')v' → logprob: -10.625246047973633
    5. ',' → logprob: -11.500246047973633
    6. ' )' → logprob: -11.625246047973633
    7. '   ' → logprob: -12.250246047973633
    8. '),' → logprob: -12.875246047973633
    9. '<|end|>' → logprob: -14.250246047973633
    10. '       ' → logprob: -14.625246047973633

Token 1294: '       ' (ID: 309)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.10715624690055847
    2. 'p' → logprob: -2.357156276702881
    3. '       ' → logprob: -4.982156276702881
    4. '   ' → logprob: -10.732155799865723
    5. '
' → logprob: -11.357155799865723
    6. ' 
' → logprob: -11.732155799865723
    7. ' ' → logprob: -11.982155799865723
    8. '	p' → logprob: -11.982155799865723
    9. ',p' → logprob: -12.107155799865723
    10. ' ' → logprob: -13.732155799865723

Token 1295: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.029750604182481766
    2. ' p' → logprob: -3.5297505855560303
    3. ' 
' → logprob: -16.02975082397461
    4. ' ' → logprob: -18.65475082397461
    5. '```' → logprob: -19.02975082397461
    6. '
' → logprob: -19.27975082397461
    7. ' ' → logprob: -19.27975082397461
    8. 's' → logprob: -20.27975082397461
    9. 'v' → logprob: -20.40475082397461
    10. '_p' → logprob: -20.90475082397461

Token 1296: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.015700921416282654
    2. ' =' → logprob: -4.265700817108154
    3. '=int' → logprob: -7.015700817108154
    4. '<|end|>' → logprob: -7.515700817108154
    5. '=
' → logprob: -9.890701293945312
    6. ')' → logprob: -11.140701293945312
    7. '<|end|>' → logprob: -11.765701293945312
    8. '=True' → logprob: -11.765701293945312
    9. '==' → logprob: -12.640701293945312
    10. ' =
' → logprob: -13.640701293945312

Token 1297: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.1008713702030946e-06
    2. ' int' → logprob: -13.250001907348633
    3. 'p' → logprob: -15.500001907348633
    4. '=int' → logprob: -17.125001907348633
    5. '<int' → logprob: -17.625001907348633
    6. '(int' → logprob: -18.250001907348633
    7. '[int' → logprob: -19.250001907348633
    8. ':int' → logprob: -21.125001907348633
    9. '	int' → logprob: -21.375001907348633
    10. 'intval' → logprob: -22.375001907348633

Token 1298: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.004767595790326595
    2. 'p' → logprob: -6.379767417907715
    3. '(input' → logprob: -6.379767417907715
    4. '(' → logprob: -7.629767417907715
    5. '(s' → logprob: -8.504767417907715
    6. ')p' → logprob: -8.504767417907715
    7. '<|end|>' → logprob: -9.004767417907715
    8. '(v' → logprob: -9.254767417907715
    9. '(int' → logprob: -9.379767417907715
    10. ')' → logprob: -9.629767417907715

Token 1299: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.811348480870947e-05
    2. '<|end|>' → logprob: -10.37504768371582
    3. ')
' → logprob: -11.12504768371582
    4. ' )' → logprob: -14.37504768371582
    5. '<|end|>' → logprob: -15.00004768371582
    6. ')return' → logprob: -15.00004768371582
    7. '),' → logprob: -16.00004768371582
    8. '[])' → logprob: -16.75004768371582
    9. '   ' → logprob: -16.75004768371582
    10. ');' → logprob: -16.87504768371582

Token 1300: '       ' (ID: 309)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.451908826828003
    2. 'v' → logprob: -1.701908826828003
    3. '       ' → logprob: -1.701908826828003
    4. ' products' → logprob: -2.326908826828003
    5. 'products' → logprob: -2.451908826828003
    6. ' w' → logprob: -2.451908826828003
    7. '<|end|>' → logprob: -2.826908826828003
    8. ' v' → logprob: -3.076908826828003
    9. 's' → logprob: -4.576909065246582
    10. ' s' → logprob: -5.701909065246582

Token 1301: ' products' (ID: 3891)
  Prédit: 'products'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'products' (adapté à ' products') → logprob: -0.0001848254178185016
    2. '   ' → logprob: -9.000185012817383
    3. ' products' → logprob: -9.750185012817383
    4. 'product' → logprob: -13.875185012817383
    5. 'cities' → logprob: -14.750185012817383
    6. 'p' → logprob: -14.750185012817383
    7. '(products' → logprob: -14.750185012817383
    8. 'city' → logprob: -14.875185012817383
    9. 's' → logprob: -16.375185012817383
    10. '  ' → logprob: -16.500185012817383

Token 1302: '_data' (ID: 3537)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.10618280619382858
    2. '=' → logprob: -2.731182813644409
    3. '<|end|>' → logprob: -4.10618257522583
    4. '.' → logprob: -4.85618257522583
    5. ' =' → logprob: -5.10618257522583
    6. ')' → logprob: -5.85618257522583
    7. ',' → logprob: -7.85618257522583
    8. '<|end|>' → logprob: -8.356183052062988
    9. ':' → logprob: -8.481183052062988
    10. '.setdefault' → logprob: -8.606183052062988

Token 1303: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004091935232281685
    2. '.' → logprob: -5.504091739654541
    3. '   ' → logprob: -12.3790922164917
    4. ' .' → logprob: -12.7540922164917
    5. '.app' → logprob: -12.8790922164917
    6. '       ' → logprob: -13.7540922164917
    7. 'append' → logprob: -13.8790922164917
    8. '.extend' → logprob: -15.1290922164917
    9. ').' → logprob: -15.3790922164917
    10. '.
' → logprob: -15.6290922164917

Token 1304: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.5305156707763672
    2. '(s' → logprob: -1.2805156707763672
    3. '(' → logprob: -2.030515670776367
    4. ' (' → logprob: -6.030515670776367
    5. '[(' → logprob: -9.905515670776367
    6. '(
' → logprob: -9.905515670776367
    7. '(tuple' → logprob: -11.030515670776367
    8. '   ' → logprob: -12.155515670776367
    9. '(S' → logprob: -12.905515670776367
    10. ' ((' → logprob: -13.155515670776367

Token 1305: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.13388703338569e-06
    2. ' s' → logprob: -11.625009536743164
    3. '(s' → logprob: -17.000009536743164
    4. ''s' → logprob: -18.500009536743164
    5. '`s' → logprob: -18.625009536743164
    6. '{s' → logprob: -18.875009536743164
    7. '"s' → logprob: -19.375009536743164
    8. '_s' → logprob: -20.375009536743164
    9. '   ' → logprob: -21.125009536743164
    10. ')s' → logprob: -21.500009536743164

Token 1306: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6330940127372742
    2. ',v' → logprob: -0.7580940127372742
    3. ' ,' → logprob: -7.75809383392334
    4. ',int' → logprob: -10.75809383392334
    5. ',p' → logprob: -11.75809383392334
    6. ' v' → logprob: -12.13309383392334
    7. ',
' → logprob: -12.25809383392334
    8. ',s' → logprob: -12.50809383392334
    9. ',n' → logprob: -12.63309383392334
    10. 'v' → logprob: -12.63309383392334

Token 1307: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16038163006305695
    2. ',p' → logprob: -1.9103816747665405
    3. ' ,' → logprob: -9.160381317138672
    4. ',
' → logprob: -10.160381317138672
    5. ',int' → logprob: -11.785381317138672
    6. 'p' → logprob: -13.035381317138672
    7. ' p' → logprob: -14.160381317138672
    8. ')' → logprob: -14.160381317138672
    9. '```' → logprob: -14.910381317138672
    10. ',n' → logprob: -15.410381317138672

Token 1308: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.002835184335708618
    2. ')' → logprob: -5.877835273742676
    3. '))
' → logprob: -10.877835273742676
    4. '   ' → logprob: -12.627835273742676
    5. ')))' → logprob: -12.877835273742676
    6. ',' → logprob: -12.877835273742676
    7. ' ))' → logprob: -14.127835273742676
    8. '       ' → logprob: -14.377835273742676
    9. ''))' → logprob: -14.627835273742676
    10. '),' → logprob: -14.627835273742676

Token 1309: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4049677550792694
    2. '   ' → logprob: -1.1549677848815918
    3. ' for' → logprob: -4.029967784881592
    4. '```' → logprob: -9.654967308044434
    5. '
' → logprob: -10.029967308044434
    6. 'city' → logprob: -10.904967308044434
    7. '    
' → logprob: -11.529967308044434
    8. 'cities' → logprob: -11.779967308044434
    9. ' ' → logprob: -12.779967308044434
    10. ' 
' → logprob: -13.279967308044434

Token 1310: ' cities' (ID: 15636)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.22149188816547394
    2. 'cities' (adapté à ' cities') → logprob: -2.721491813659668
    3. 'Q' → logprob: -2.846491813659668
    4. 'for' → logprob: -2.971491813659668
    5. 'C' → logprob: -4.471491813659668
    6. '   ' → logprob: -4.971491813659668
    7. 'city' → logprob: -5.721491813659668
    8. 'L' → logprob: -7.596491813659668
    9. 'S' → logprob: -7.971491813659668
    10. '
' → logprob: -8.096491813659668

Token 1311: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.016251955181360245
    2. ' =' → logprob: -5.016252040863037
    3. '=' → logprob: -5.516252040863037
    4. '   ' → logprob: -6.016252040863037
    5. 'data' → logprob: -6.766252040863037
    6. '_' → logprob: -6.766252040863037
    7. '=[]' → logprob: -8.641251564025879
    8. 'Data' → logprob: -9.016251564025879
    9. '=[]
' → logprob: -9.641251564025879
    10. '```' → logprob: -9.641251564025879

Token 1312: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2862761914730072
    2. ' =' → logprob: -1.4112762212753296
    3. '.append' → logprob: -6.036276340484619
    4. '=[]' → logprob: -6.161276340484619
    5. '   ' → logprob: -7.786276340484619
    6. '[]' → logprob: -9.161275863647461
    7. '=[]
' → logprob: -9.661275863647461
    8. '.' → logprob: -11.536275863647461
    9. 'append' → logprob: -12.661275863647461
    10. '=[]
' → logprob: -13.161275863647461

Token 1313: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.005344517063349485
    2. '[]' → logprob: -5.255344390869141
    3. '[' → logprob: -9.25534439086914
    4. ' []
' → logprob: -11.88034439086914
    5. '[int' → logprob: -12.25534439086914
    6. '[]

' → logprob: -13.63034439086914
    7. '[
' → logprob: -13.88034439086914
    8. '=[]
' → logprob: -14.13034439086914
    9. '[])
' → logprob: -15.88034439086914
    10. '([])
' → logprob: -16.50534439086914

Token 1314: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.160842627286911
    2. ' for' → logprob: -2.0358426570892334
    3. '   ' → logprob: -4.035842418670654
    4. '[
' → logprob: -9.160842895507812
    5. '    ' → logprob: -10.410842895507812
    6. '[' → logprob: -10.410842895507812
    7. '(' → logprob: -10.535842895507812
    8. ' ' → logprob: -10.660842895507812
    9. '	for' → logprob: -11.160842895507812
    10. '    
' → logprob: -11.160842895507812

Token 1315: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001935661886818707
    2. ' for' → logprob: -6.2519354820251465
    3. '   ' → logprob: -11.876935958862305
    4. '	for' → logprob: -16.126935958862305
    5. 'n' → logprob: -18.001935958862305
    6. '
' → logprob: -18.126935958862305
    7. ' ' → logprob: -18.626935958862305
    8. ' 
' → logprob: -18.751935958862305
    9. '```' → logprob: -19.376935958862305
    10. '  ' → logprob: -19.501935958862305

Token 1316: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.061676347395405e-05
    2. ' _' → logprob: -10.25005054473877
    3. ' in' → logprob: -11.75005054473877
    4. '_i' → logprob: -12.50005054473877
    5. 'i' → logprob: -13.87505054473877
    6. '_in' → logprob: -14.37505054473877
    7. '_range' → logprob: -14.62505054473877
    8. '_
' → logprob: -14.62505054473877
    9. ' range' → logprob: -15.12505054473877
    10. 'in' → logprob: -15.37505054473877

Token 1317: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.049183811992406845
    2. 'in' → logprob: -3.4241838455200195
    3. '_' → logprob: -4.1741838455200195
    4. 'range' → logprob: -11.17418384552002
    5. ' ' → logprob: -11.67418384552002
    6. ' _' → logprob: -13.17418384552002
    7. 's' → logprob: -13.54918384552002
    8. ' range' → logprob: -13.79918384552002
    9. '...' → logprob: -14.54918384552002
    10. '```' → logprob: -14.92418384552002

Token 1318: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011380011215806007
    2. ' range' → logprob: -4.511380195617676
    3. '_' → logprob: -8.011380195617676
    4. ' in' → logprob: -15.136380195617676
    5. '_range' → logprob: -15.511380195617676
    6. 'r' → logprob: -18.13637924194336
    7. 'in' → logprob: -18.63637924194336
    8. '
' → logprob: -18.63637924194336
    9. '(range' → logprob: -18.63637924194336
    10. ' ' → logprob: -19.76137924194336

Token 1319: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00017803447553887963
    2. ' N' → logprob: -8.750178337097168
    3. 'int' → logprob: -11.625178337097168
    4. '(N' → logprob: -11.750178337097168
    5. '   ' → logprob: -13.250178337097168
    6. '(' → logprob: -15.250178337097168
    7. '
' → logprob: -15.625178337097168
    8. '_N' → logprob: -15.750178337097168
    9. ' ' → logprob: -16.50017738342285
    10. '	N' → logprob: -17.25017738342285

Token 1320: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8332479596138
    2. '   ' → logprob: -1.0832479000091553
    3. '():
' → logprob: -1.8332479000091553
    4. '       ' → logprob: -3.0832479000091553
    5. ':
' → logprob: -4.083248138427734
    6. '):' → logprob: -6.583248138427734
    7. ':' → logprob: -6.708248138427734
    8. '()):
' → logprob: -7.333248138427734
    9. '()' → logprob: -8.083248138427734
    10. '():' → logprob: -8.083248138427734

Token 1321: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06263434886932373
    2. 'L' → logprob: -3.4376344680786133
    3. ' L' → logprob: -4.187634468078613
    4. 'x' → logprob: -5.062634468078613
    5. ' line' → logprob: -6.437634468078613
    6. ' x' → logprob: -6.687634468078613
    7. 'line' → logprob: -7.437634468078613
    8. 'r' → logprob: -7.562634468078613
    9. ' s' → logprob: -7.562634468078613
    10. 'l' → logprob: -7.812634468078613

Token 1322: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' (adapté à ' L') → logprob: -0.008857420645654202
    2. ' L' → logprob: -4.883857250213623
    3. 'l' → logprob: -6.883857250213623
    4. '   ' → logprob: -9.883857727050781
    5. 'line' → logprob: -9.883857727050781
    6. ' parts' → logprob: -10.008857727050781
    7. 'parts' → logprob: -10.633857727050781
    8. 'data' → logprob: -11.258857727050781
    9. ' l' → logprob: -11.508857727050781
    10. ' line' → logprob: -11.633857727050781

Token 1323: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.037384260445833206
    2. '=' → logprob: -3.662384271621704
    3. ',int' → logprob: -5.287384033203125
    4. ' ,' → logprob: -6.912384033203125
    5. ',L' → logprob: -7.412384033203125
    6. ',v' → logprob: -7.537384033203125
    7. ',line' → logprob: -7.537384033203125
    8. '=int' → logprob: -7.662384033203125
    9. ',n' → logprob: -7.912384033203125
    10. '   ' → logprob: -7.912384033203125

Token 1324: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.31432923674583435
    2. ',' → logprob: -1.3143292665481567
    3. ' ,' → logprob: -7.064329147338867
    4. ',int' → logprob: -9.189329147338867
    5. ',Y' → logprob: -10.439329147338867
    6. ',x' → logprob: -10.814329147338867
    7. 'y' → logprob: -10.939329147338867
    8. ',p' → logprob: -12.314329147338867
    9. ',u' → logprob: -12.439329147338867
    10. ',i' → logprob: -12.439329147338867

Token 1325: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31401142477989197
    2. ',k' → logprob: -2.064011335372925
    3. ',s' → logprob: -2.314011335372925
    4. ',p' → logprob: -4.439011573791504
    5. ',v' → logprob: -4.689011573791504
    6. ' ,' → logprob: -5.189011573791504
    7. ',q' → logprob: -5.314011573791504
    8. ',n' → logprob: -5.564011573791504
    9. ',num' → logprob: -6.814011573791504
    10. ',t' → logprob: -6.814011573791504

Token 1326: ' input' (ID: 3422)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.07920723408460617
    2. ' map' → logprob: -2.579207181930542
    3. 'input' → logprob: -8.079207420349121
    4. 'list' → logprob: -12.579207420349121
    5. ' input' → logprob: -12.704207420349121
    6. '(map' → logprob: -14.329207420349121
    7. '	map' → logprob: -15.704207420349121
    8. 'int' → logprob: -15.704207420349121
    9. ' list' → logprob: -16.954206466674805
    10. '_map' → logprob: -17.454206466674805

Token 1327: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.214019307051785e-05
    2. '()' → logprob: -10.625032424926758
    3. '()
' → logprob: -12.250032424926758
    4. '()[' → logprob: -13.375032424926758
    5. '   ' → logprob: -14.375032424926758
    6. '.split' → logprob: -15.125032424926758
    7. '       ' → logprob: -15.375032424926758
    8. ' ().' → logprob: -16.000032424926758
    9. '=' → logprob: -17.125032424926758
    10. 'split' → logprob: -17.625032424926758

Token 1328: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.16023458540439606
    2. 'strip' → logprob: -1.9102345705032349
    3. 'rstrip' → logprob: -11.910234451293945
    4. 'map' → logprob: -12.785234451293945
    5. ' split' → logprob: -15.160234451293945
    6. ' strip' → logprob: -15.410234451293945
    7. 'read' → logprob: -16.410234451293945
    8. 'replace' → logprob: -16.910234451293945
    9. '(split' → logprob: -17.035234451293945
    10. '   ' → logprob: -17.160234451293945

Token 1329: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.290908932685852
    2. '(' → logprob: -1.540908932685852
    3. '       ' → logprob: -1.790908932685852
    4. '()
' → logprob: -2.0409088134765625
    5. '(int' → logprob: -2.5409088134765625
    6. ' (' → logprob: -3.4159088134765625
    7. '   ' → logprob: -3.7909088134765625
    8. '(),' → logprob: -3.9159088134765625
    9. ',' → logprob: -4.5409088134765625
    10. '('' → logprob: -4.7909088134765625

Token 1330: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2222914844751358
    2. '       ' → logprob: -2.8472914695739746
    3. 'int' → logprob: -2.9722914695739746
    4. '(int' → logprob: -2.9722914695739746
    5. ',' → logprob: -4.847291469573975
    6. ' (' → logprob: -5.347291469573975
    7. '    
' → logprob: -5.722291469573975
    8. '(' → logprob: -5.847291469573975
    9. '0' → logprob: -5.847291469573975
    10. '```' → logprob: -5.972291469573975

Token 1331: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' (adapté à ' L') → logprob: -0.0005632805987261236
    2. ' L' → logprob: -7.625563144683838
    3. 'x' → logprob: -9.625563621520996
    4. '       ' → logprob: -12.750563621520996
    5. 'int' → logprob: -12.875563621520996
    6. '   ' → logprob: -13.000563621520996
    7. 'l' → logprob: -14.000563621520996
    8. '```' → logprob: -15.875563621520996
    9. 'y' → logprob: -16.25056266784668
    10. ' x' → logprob: -16.62556266784668

Token 1332: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009200616739690304
    2. ' =' → logprob: -4.759200572967529
    3. '=int' → logprob: -7.759200572967529
    4. ',' → logprob: -8.759201049804688
    5. '   ' → logprob: -14.009201049804688
    6. '=
' → logprob: -14.509201049804688
    7. ',int' → logprob: -15.009201049804688
    8. ' ,' → logprob: -16.259201049804688
    9. ')' → logprob: -16.509201049804688
    10. 'int' → logprob: -16.509201049804688

Token 1333: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.320199877838604e-07
    2. ' int' → logprob: -15.0
    3. '[int' → logprob: -20.5
    4. '=int' → logprob: -22.875
    5. '<int' → logprob: -23.0
    6. '(int' → logprob: -24.375
    7. '	int' → logprob: -24.375
    8. '   ' → logprob: -25.0
    9. '
' → logprob: -26.25
    10. ']int' → logprob: -26.5

Token 1334: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.00318353995680809
    2. 'L' → logprob: -5.753183364868164
    3. '(' → logprob: -12.378183364868164
    4. ')L' → logprob: -14.628183364868164
    5. '(
' → logprob: -15.003183364868164
    6. ',L' → logprob: -15.253183364868164
    7. ' (' → logprob: -15.628183364868164
    8. '	L' → logprob: -16.128183364868164
    9. ')' → logprob: -16.628183364868164
    10. ' L' → logprob: -16.628183364868164

Token 1335: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3500882387161255
    2. ')
' → logprob: -1.2250882387161255
    3. ')x' → logprob: -7.100088119506836
    4. ')L' → logprob: -8.350088119506836
    5. '<|end|>' → logprob: -8.725088119506836
    6. '),' → logprob: -9.225088119506836
    7. '       ' → logprob: -9.850088119506836
    8. ')y' → logprob: -9.975088119506836
    9. ')v' → logprob: -10.225088119506836
    10. ',' → logprob: -10.725088119506836

Token 1336: '       ' (ID: 309)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4032580554485321
    2. ' x' → logprob: -1.2782580852508545
    3. '       ' → logprob: -3.0282580852508545
    4. ',' → logprob: -5.778257846832275
    5. '   ' → logprob: -7.278257846832275
    6. ' y' → logprob: -7.903257846832275
    7. 'y' → logprob: -8.028258323669434
    8. ',x' → logprob: -8.903258323669434
    9. ' ' → logprob: -9.403258323669434
    10. ' ,' → logprob: -10.028258323669434

Token 1337: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.01692412607371807
    2. 'T' → logprob: -4.141923904418945
    3. 'W' → logprob: -7.891923904418945
    4. 'X' → logprob: -8.141923904418945
    5. '       ' → logprob: -10.016923904418945
    6. '   ' → logprob: -10.141923904418945
    7. 'rest' → logprob: -10.266923904418945
    8. ' x' → logprob: -10.516923904418945
    9. 'tokens' → logprob: -11.141923904418945
    10. 't' → logprob: -11.391923904418945

Token 1338: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.051048845052719116
    2. ' =' → logprob: -3.051048755645752
    3. '=int' → logprob: -6.051048755645752
    4. '=
' → logprob: -9.42604923248291
    5. ',' → logprob: -11.05104923248291
    6. '```' → logprob: -13.05104923248291
    7. ' =
' → logprob: -13.42604923248291
    8. '=

' → logprob: -14.42604923248291
    9. '   ' → logprob: -14.42604923248291
    10. ')' → logprob: -14.55104923248291

Token 1339: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.1472419600977446e-06
    2. ' int' → logprob: -13.750000953674316
    3. '=int' → logprob: -18.750001907348633
    4. '[int' → logprob: -19.125001907348633
    5. '<int' → logprob: -19.875001907348633
    6. '(int' → logprob: -20.500001907348633
    7. '	int' → logprob: -21.750001907348633
    8. '
' → logprob: -22.375001907348633
    9. ':int' → logprob: -22.375001907348633
    10. '   ' → logprob: -23.000001907348633

Token 1340: '(x' (ID: 4061)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3519733250141144
    2. '(x' → logprob: -1.601973295211792
    3. '(int' → logprob: -2.601973295211792
    4. '(input' → logprob: -4.351973533630371
    5. '(' → logprob: -4.976973533630371
    6. 'x' → logprob: -7.601973533630371
    7. '(
' → logprob: -8.101973533630371
    8. '=int' → logprob: -9.226973533630371
    9. '<int' → logprob: -9.851973533630371
    10. ' int' → logprob: -10.226973533630371

Token 1341: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13968752324581146
    2. ')' → logprob: -2.7646875381469727
    3. ')
' → logprob: -3.5146875381469727
    4. 'int' → logprob: -4.639687538146973
    5. ',int' → logprob: -4.889687538146973
    6. '=int' → logprob: -4.889687538146973
    7. '       ' → logprob: -5.764687538146973
    8. '<|end|>' → logprob: -5.764687538146973
    9. ',
' → logprob: -6.889687538146973
    10. '),' → logprob: -7.514687538146973

Token 1342: '       ' (ID: 309)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01732957549393177
    2. ' y' → logprob: -4.267329692840576
    3. '   ' → logprob: -6.392329692840576
    4. '       ' → logprob: -6.517329692840576
    5. '
' → logprob: -12.767329216003418
    6. '	y' → logprob: -13.392329216003418
    7. '    ' → logprob: -13.642329216003418
    8. ',y' → logprob: -13.892329216003418
    9. ' ' → logprob: -14.642329216003418
    10. '```' → logprob: -14.767329216003418

Token 1343: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -7.505351095460355e-05
    2. ' y' → logprob: -9.500075340270996
    3. '       ' → logprob: -16.87507438659668
    4. '   ' → logprob: -17.62507438659668
    5. '
' → logprob: -18.37507438659668
    6. 'int' → logprob: -18.50007438659668
    7. '    ' → logprob: -19.25007438659668
    8. '           ' → logprob: -20.12507438659668
    9. '```' → logprob: -20.62507438659668
    10. '	y' → logprob: -21.00007438659668

Token 1344: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04112550616264343
    2. ' =' → logprob: -3.291125535964966
    3. '=int' → logprob: -5.791125297546387
    4. '=
' → logprob: -10.666125297546387
    5. 'int' → logprob: -14.791125297546387
    6. ' =
' → logprob: -14.916125297546387
    7. '```' → logprob: -15.291125297546387
    8. '   ' → logprob: -16.041126251220703
    9. '=

' → logprob: -16.291126251220703
    10. ' ' → logprob: -17.166126251220703

Token 1345: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.8624639324116288e-06
    2. ' int' → logprob: -13.250001907348633
    3. '[int' → logprob: -19.250001907348633
    4. '=int' → logprob: -19.875001907348633
    5. '0' → logprob: -20.125001907348633
    6. '<int' → logprob: -20.750001907348633
    7. '(int' → logprob: -21.375001907348633
    8. '   ' → logprob: -21.625001907348633
    9. '
' → logprob: -21.750001907348633
    10. 'ints' → logprob: -22.250001907348633

Token 1346: '(y' (ID: 14684)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3890529274940491
    2. 'int' → logprob: -1.1390528678894043
    3. '=int' → logprob: -6.514052867889404
    4. '[int' → logprob: -8.264053344726562
    5. ':int' → logprob: -8.639053344726562
    6. ' int' → logprob: -8.764053344726562
    7. ',int' → logprob: -10.514053344726562
    8. '<int' → logprob: -10.889053344726562
    9. ']int' → logprob: -11.389053344726562
    10. '   ' → logprob: -11.389053344726562

Token 1347: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7263579964637756
    2. ',' → logprob: -0.9763579964637756
    3. '       ' → logprob: -2.476357936859131
    4. '
' → logprob: -3.851357936859131
    5. ')' → logprob: -4.476357936859131
    6. ',line' → logprob: -5.101357936859131
    7. '	' → logprob: -5.851357936859131
    8. ',n' → logprob: -6.226357936859131
    9. '	line' → logprob: -6.226357936859131
    10. '```' → logprob: -6.601357936859131

Token 1348: '       ' (ID: 309)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.6961941719055176
    2. '   ' → logprob: -1.0711941719055176
    3. '       ' → logprob: -2.4461941719055176
    4. ' items' → logprob: -2.8211941719055176
    5. 'Q' → logprob: -6.196194171905518
    6. 'rest' → logprob: -6.321194171905518
    7. 'q' → logprob: -6.821194171905518
    8. '```' → logprob: -6.821194171905518
    9. 'L' → logprob: -6.946194171905518
    10. '	items' → logprob: -7.321194171905518

Token 1349: ' items' (ID: 4732)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' (adapté à ' items') → logprob: -0.002323318039998412
    2. ' items' → logprob: -6.377323150634766
    3. '   ' → logprob: -7.752323150634766
    4. '       ' → logprob: -9.252323150634766
    5. 'products' → logprob: -9.502323150634766
    6. '	items' → logprob: -11.877323150634766
    7. '_items' → logprob: -12.752323150634766
    8. 'item' → logprob: -13.002323150634766
    9. 'q' → logprob: -13.627323150634766
    10. '(items' → logprob: -13.877323150634766

Token 1350: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16041502356529236
    2. ' =' → logprob: -1.9104150533676147
    3. '=[]
' → logprob: -9.660414695739746
    4. '   ' → logprob: -9.785414695739746
    5. '=[]' → logprob: -9.910414695739746
    6. '.append' → logprob: -10.910414695739746
    7. '    ' → logprob: -14.785414695739746
    8. '=[]
' → logprob: -15.285414695739746
    9. '       ' → logprob: -15.410414695739746
    10. '[]' → logprob: -15.410414695739746

Token 1351: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.31369221210479736
    2. '[]' → logprob: -1.3136922121047974
    3. '[' → logprob: -7.813692092895508
    4. ' []
' → logprob: -11.688692092895508
    5. '[int' → logprob: -11.688692092895508
    6. ' []' → logprob: -11.813692092895508
    7. '[]

' → logprob: -14.063692092895508
    8. '[
' → logprob: -14.313692092895508
    9. '   ' → logprob: -15.813692092895508
    10. '[])
' → logprob: -16.688692092895508

Token 1352: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8504417538642883
    2. 'for' → logprob: -0.8504417538642883
    3. ' for' → logprob: -1.9754416942596436
    4. '	for' → logprob: -5.100441932678223
    5. '       ' → logprob: -7.225441932678223
    6. '    ' → logprob: -11.850441932678223
    7. ' ' → logprob: -12.225441932678223
    8. '    
' → logprob: -12.475441932678223
    9. '  ' → logprob: -12.850441932678223
    10. '
' → logprob: -13.600441932678223

Token 1353: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00196836213581264
    2. ' for' → logprob: -6.3769683837890625
    3. 'k' → logprob: -8.751968383789062
    4. 'q' → logprob: -9.876968383789062
    5. 'count' → logprob: -11.001968383789062
    6. '       ' → logprob: -11.751968383789062
    7. '   ' → logprob: -12.001968383789062
    8. 'L' → logprob: -12.126968383789062
    9. 'l' → logprob: -12.251968383789062
    10. 'K' → logprob: -12.376968383789062

Token 1354: ' __' (ID: 2516)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -3.023293538717553e-05
    2. ' _' → logprob: -11.000030517578125
    3. 'range' → logprob: -12.375030517578125
    4. ' range' → logprob: -12.625030517578125
    5. '_range' → logprob: -12.750030517578125
    6. '__' → logprob: -13.500030517578125
    7. '___' → logprob: -14.625030517578125
    8. 'int' → logprob: -14.875030517578125
    9. '0' → logprob: -15.375030517578125
    10. '_in' → logprob: -15.625030517578125

Token 1355: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08475328236818314
    2. '_' → logprob: -2.7097532749176025
    3. 'in' → logprob: -4.459753513336182
    4. ' range' → logprob: -5.959753513336182
    5. 'range' → logprob: -7.584753513336182
    6. ' _' → logprob: -10.209753036499023
    7. '_range' → logprob: -12.209753036499023
    8. '_in' → logprob: -12.584753036499023
    9. '0' → logprob: -12.709753036499023
    10. ' ' → logprob: -13.209753036499023

Token 1356: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00015169414109550416
    2. ' range' → logprob: -9.000151634216309
    3. '_' → logprob: -10.500151634216309
    4. '_range' → logprob: -14.500151634216309
    5. '
' → logprob: -15.375151634216309
    6. 'in' → logprob: -17.875152587890625
    7. '0' → logprob: -18.750152587890625
    8. '	range' → logprob: -19.375152587890625
    9. 'ran' → logprob: -19.875152587890625
    10. '(range' → logprob: -20.375152587890625

Token 1357: '(L' (ID: 11075)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.005760387983173132
    2. '(L' → logprob: -5.255760192871094
    3. 'int' → logprob: -7.755760192871094
    4. ' L' → logprob: -9.505760192871094
    5. '(int' → logprob: -10.880760192871094
    6. '   ' → logprob: -13.005760192871094
    7. ' int' → logprob: -13.755760192871094
    8. '	L' → logprob: -14.255760192871094
    9. '(' → logprob: -14.630760192871094
    10. ' (' → logprob: -16.005760192871094

Token 1358: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.1185730695724487
    2. '   ' → logprob: -1.6185730695724487
    3. '       ' → logprob: -1.7435730695724487
    4. '():
' → logprob: -1.8685730695724487
    5. '           ' → logprob: -2.4935731887817383
    6. ':' → logprob: -3.6185731887817383
    7. '):' → logprob: -4.368573188781738
    8. ':
' → logprob: -4.993573188781738
    9. '():' → logprob: -5.493573188781738
    10. '()):
' → logprob: -5.618573188781738

Token 1359: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0038448516279459
    2. '	       ' → logprob: -5.753844738006592
    3. '	   ' → logprob: -8.62884521484375
    4. '   ' → logprob: -9.00384521484375
    5. '		   ' → logprob: -9.12884521484375
    6. '    	   ' → logprob: -9.25384521484375
    7. '    	' → logprob: -10.25384521484375
    8. '	           ' → logprob: -10.50384521484375
    9. '       ' → logprob: -10.87884521484375
    10. 'r' → logprob: -11.50384521484375

Token 1360: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.02151973731815815
    2. 's' → logprob: -4.271519660949707
    3. ' r' → logprob: -5.271519660949707
    4. ' s' → logprob: -7.646519660949707
    5. 'name' → logprob: -7.646519660949707
    6. 'item' → logprob: -8.021519660949707
    7. 'p' → logprob: -8.021519660949707
    8. 'line' → logprob: -9.021519660949707
    9. '   ' → logprob: -9.646519660949707
    10. ' name' → logprob: -9.771519660949707

Token 1361: ',q' (ID: 86188)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08218628168106079
    2. ',' → logprob: -3.582186222076416
    3. ' s' → logprob: -4.207186222076416
    4. 'name' → logprob: -4.207186222076416
    5. '_name' → logprob: -4.832186222076416
    6. '_,' → logprob: -5.332186222076416
    7. ',s' → logprob: -5.832186222076416
    8. 'n' → logprob: -6.582186222076416
    9. ' ,' → logprob: -7.207186222076416
    10. 'line' → logprob: -7.582186222076416

Token 1362: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1128711849451065
    2. ' =' → logprob: -2.6128711700439453
    3. ',' → logprob: -3.4878711700439453
    4. ',p' → logprob: -6.612871170043945
    5. '=line' → logprob: -7.987871170043945
    6. '=input' → logprob: -8.112871170043945
    7. ',q' → logprob: -8.987871170043945
    8. ' ,' → logprob: -9.112871170043945
    9. 's' → logprob: -9.612871170043945
    10. ',_' → logprob: -9.737871170043945

Token 1363: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0067154900170862675
    2. ' input' → logprob: -5.006715297698975
    3. '(input' → logprob: -16.881715774536133
    4. '=input' → logprob: -17.256715774536133
    5. '<input' → logprob: -17.881715774536133
    6. '	input' → logprob: -18.881715774536133
    7. 'map' → logprob: -19.131715774536133
    8. '_input' → logprob: -19.631715774536133
    9. '[input' → logprob: -20.131715774536133
    10. ',input' → logprob: -20.756715774536133

Token 1364: '().' (ID: 1454)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7889654636383057
    2. '().' → logprob: -0.7889654636383057
    3. '()' → logprob: -2.6639654636383057
    4. ' =' → logprob: -4.413965225219727
    5. 'split' → logprob: -5.163965225219727
    6. '()
' → logprob: -6.538965225219727
    7. '()='' → logprob: -7.538965225219727
    8. '_split' → logprob: -7.663965225219727
    9. '.split' → logprob: -8.163965225219727
    10. 's' → logprob: -8.788965225219727

Token 1365: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000913370808120817
    2. 'strip' → logprob: -7.000913143157959
    3. ' split' → logprob: -13.625913619995117
    4. '.split' → logprob: -15.500913619995117
    5. '(split' → logprob: -15.625913619995117
    6. 'rstrip' → logprob: -15.625913619995117
    7. 'str' → logprob: -15.875913619995117
    8. 'spl' → logprob: -16.250913619995117
    9. '().' → logprob: -17.500913619995117
    10. '   ' → logprob: -17.875913619995117

Token 1366: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0041402606293559074
    2. ',' → logprob: -6.879140377044678
    3. '               ' → logprob: -6.879140377044678
    4. '       ' → logprob: -7.879140377044678
    5. 'r' → logprob: -8.37913990020752
    6. '            
' → logprob: -8.50413990020752
    7. '            ' → logprob: -8.62913990020752
    8. 'q' → logprob: -8.75413990020752
    9. ',q' → logprob: -8.75413990020752
    10. '<|end|>' → logprob: -9.00413990020752

Token 1367: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008676333236508071
    2. 'q' → logprob: -8.12586784362793
    3. 'r' → logprob: -8.50086784362793
    4. '          ' → logprob: -9.50086784362793
    5. '<|end|>' → logprob: -9.50086784362793
    6. ' q' → logprob: -9.62586784362793
    7. '            ' → logprob: -10.12586784362793
    8. '       ' → logprob: -10.87586784362793
    9. '               ' → logprob: -11.12586784362793
    10. '		' → logprob: -11.25086784362793

Token 1368: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.026053404435515404
    2. '           ' → logprob: -3.9010534286499023
    3. ' q' → logprob: -5.276053428649902
    4. 'r' → logprob: -8.526053428649902
    5. '	q' → logprob: -9.401053428649902
    6. '   ' → logprob: -10.151053428649902
    7. '       ' → logprob: -10.276053428649902
    8. '          ' → logprob: -12.276053428649902
    9. '
' → logprob: -12.651053428649902
    10. ' ' → logprob: -12.776053428649902

Token 1369: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1019548550248146
    2. ' =' → logprob: -2.351954936981201
    3. '=int' → logprob: -6.351954936981201
    4. '=q' → logprob: -13.851954460144043
    5. 'q' → logprob: -14.101954460144043
    6. 'int' → logprob: -14.976954460144043
    7. '   ' → logprob: -15.101954460144043
    8. '=
' → logprob: -15.351954460144043
    9. ' ' → logprob: -15.476954460144043
    10. '_int' → logprob: -16.35195541381836

Token 1370: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.9361264946837764e-07
    2. ' int' → logprob: -15.75
    3. '[int' → logprob: -19.0
    4. '<int' → logprob: -20.0
    5. '=int' → logprob: -21.125
    6. '(int' → logprob: -22.625
    7. '	int' → logprob: -23.0
    8. ']int' → logprob: -23.125
    9. 'ints' → logprob: -23.625
    10. 'inti' → logprob: -23.75

Token 1371: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.043028879910707474
    2. 'q' → logprob: -3.1680288314819336
    3. '[q' → logprob: -11.668028831481934
    4. '	q' → logprob: -11.918028831481934
    5. ' q' → logprob: -12.168028831481934
    6. '(' → logprob: -12.918028831481934
    7. '(
' → logprob: -13.043028831481934
    8. ')' → logprob: -13.668028831481934
    9. '
' → logprob: -13.918028831481934
    10. '<|end|>' → logprob: -14.668028831481934

Token 1372: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006073639378882945
    2. '<|end|>' → logprob: -7.875607490539551
    3. ')
' → logprob: -8.75060749053955
    4. '<|end|>' → logprob: -10.25060749053955
    5. ')return' → logprob: -10.87560749053955
    6. '           ' → logprob: -12.50060749053955
    7. ')#' → logprob: -13.62560749053955
    8. ' )' → logprob: -13.62560749053955
    9. '       ' → logprob: -13.75060749053955
    10. '   ' → logprob: -13.87560749053955

Token 1373: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.033522818237543106
    2. '            ' → logprob: -4.158522605895996
    3. 'q' → logprob: -5.158522605895996
    4. '          ' → logprob: -5.783522605895996
    5. 'r' → logprob: -6.283522605895996
    6. 'tokens' → logprob: -6.908522605895996
    7. '```' → logprob: -7.033522605895996
    8. 'items' → logprob: -7.033522605895996
    9. ' q' → logprob: -7.283522605895996
    10. '       ' → logprob: -7.783522605895996

Token 1374: ' items' (ID: 4732)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.609515368938446
    2. 'items' (adapté à ' items') → logprob: -1.1095154285430908
    3. ' items' → logprob: -2.234515428543091
    4. 'products' → logprob: -4.859515190124512
    5. 'r' → logprob: -5.484515190124512
    6. ' products' → logprob: -6.234515190124512
    7. '```' → logprob: -6.609515190124512
    8. 'product' → logprob: -6.859515190124512
    9. 'tokens' → logprob: -7.484515190124512
    10. ' r' → logprob: -7.484515190124512

Token 1375: '.append' (ID: 3709)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1376: '((' (ID: 2054)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.005511214956641197
    2. '((' → logprob: -5.380511283874512
    3. '(q' → logprob: -7.630511283874512
    4. '(' → logprob: -7.880511283874512
    5. ' (' → logprob: -10.630511283874512
    6. '(
' → logprob: -14.130511283874512
    7. '(tuple' → logprob: -14.505511283874512
    8. '(t' → logprob: -14.755511283874512
    9. '(rt' → logprob: -15.630511283874512
    10. '   ' → logprob: -16.130510330200195

Token 1377: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.896309739408025e-07
    2. ' r' → logprob: -14.125000953674316
    3. '(r' → logprob: -18.875
    4. 'q' → logprob: -19.0
    5. '   ' → logprob: -20.625
    6. '_r' → logprob: -22.25
    7. '    ' → logprob: -22.375
    8. '	r' → logprob: -22.5
    9. '           ' → logprob: -23.125
    10. 's' → logprob: -23.625

Token 1378: ',q' (ID: 86188)
  Prédit: ',q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',q' → logprob: -0.4743684232234955
    2. ',' → logprob: -0.9743684530258179
    3. '',' → logprob: -8.97436809539795
    4. ',
' → logprob: -9.84936809539795
    5. ' ,' → logprob: -10.34936809539795
    6. 'q' → logprob: -10.59936809539795
    7. '",' → logprob: -11.09936809539795
    8. '
' → logprob: -11.47436809539795
    9. '','' → logprob: -11.47436809539795
    10. '   ' → logprob: -12.59936809539795

Token 1379: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.25419938564300537
    2. ')' → logprob: -1.5041993856430054
    3. ',' → logprob: -6.129199504852295
    4. ')))' → logprob: -10.879199028015137
    5. '));' → logprob: -11.004199028015137
    6. '))
' → logprob: -11.629199028015137
    7. ',)' → logprob: -11.754199028015137
    8. ',q' → logprob: -11.879199028015137
    9. ')}' → logprob: -12.254199028015137
    10. '),' → logprob: -12.379199028015137

Token 1380: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09746510535478592
    2. '   ' → logprob: -3.0974650382995605
    3. ')' → logprob: -3.3474650382995605
    4. '<|end|>' → logprob: -5.0974650382995605
    5. ')
' → logprob: -5.3474650382995605
    6. '
' → logprob: -7.3474650382995605
    7. '```' → logprob: -7.5974650382995605
    8. '#' → logprob: -9.597465515136719
    9. ' ' → logprob: -9.847465515136719
    10. '<|end|>' → logprob: -9.972465515136719

Token 1381: ' cities' (ID: 15636)
  Prédit: 'cities'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cities' (adapté à ' cities') → logprob: -0.007630177307873964
    2. '   ' → logprob: -5.132630348205566
    3. ' cities' → logprob: -7.132630348205566
    4. 'city' → logprob: -7.632630348205566
    5. ')' → logprob: -8.882630348205566
    6. ')
' → logprob: -9.007630348205566
    7. '
' → logprob: -9.632630348205566
    8. '       ' → logprob: -10.507630348205566
    9. 'c' → logprob: -10.632630348205566
    10. '```' → logprob: -10.757630348205566

Token 1382: '_data' (ID: 3537)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005821037339046597
    2. '_data' → logprob: -7.625582218170166
    3. '.' → logprob: -10.125581741333008
    4. 's' → logprob: -10.875581741333008
    5. '   ' → logprob: -11.250581741333008
    6. '.app' → logprob: -11.875581741333008
    7. 'append' → logprob: -12.250581741333008
    8. ').' → logprob: -12.750581741333008
    9. ' .' → logprob: -13.000581741333008
    10. '.extend' → logprob: -13.500581741333008

Token 1383: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000577696890104562
    2. '.' → logprob: -7.625577926635742
    3. ' .' → logprob: -9.625577926635742
    4. ').' → logprob: -11.500577926635742
    5. '.ap' → logprob: -12.875577926635742
    6. '           ' → logprob: -12.875577926635742
    7. '.extend' → logprob: -13.125577926635742
    8. '.app' → logprob: -13.375577926635742
    9. 'append' → logprob: -14.125577926635742
    10. '   ' → logprob: -14.125577926635742

Token 1384: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.08260630071163177
    2. '(' → logprob: -2.832606315612793
    3. '(L' → logprob: -4.457606315612793
    4. '(x' → logprob: -5.207606315612793
    5. '(_,' → logprob: -6.082606315612793
    6. '(
' → logprob: -8.082606315612793
    7. '((_' → logprob: -8.082606315612793
    8. '(len' → logprob: -9.082606315612793
    9. '((-' → logprob: -9.957606315612793
    10. ' (' → logprob: -9.957606315612793

Token 1385: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -6.110668618930504e-05
    2. 'len' → logprob: -10.50006103515625
    3. ' L' → logprob: -10.62506103515625
    4. 'int' → logprob: -12.62506103515625
    5. 'x' → logprob: -13.62506103515625
    6. '_L' → logprob: -13.87506103515625
    7. '   ' → logprob: -14.12506103515625
    8. ' ' → logprob: -14.87506103515625
    9. '(L' → logprob: -15.25006103515625
    10. '0' → logprob: -15.37506103515625

Token 1386: ',x' (ID: 29748)
  Prédit: ',x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.18016494810581207
    2. ',' → logprob: -1.8051649332046509
    3. ' ,' → logprob: -8.55516529083252
    4. ',y' → logprob: -8.80516529083252
    5. 'x' → logprob: -10.30516529083252
    6. ',
' → logprob: -10.93016529083252
    7. '   ' → logprob: -12.30516529083252
    8. ',user' → logprob: -12.68016529083252
    9. '       ' → logprob: -12.93016529083252
    10. ',len' → logprob: -12.93016529083252

Token 1387: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.10027653723955154
    2. ',' → logprob: -2.350276470184326
    3. ' ,' → logprob: -9.600276947021484
    4. 'y' → logprob: -13.850276947021484
    5. ' y' → logprob: -14.850276947021484
    6. ',
' → logprob: -14.850276947021484
    7. ',Y' → logprob: -14.975276947021484
    8. ',x' → logprob: -16.350276947021484
    9. ',user' → logprob: -16.600276947021484
    10. '   ' → logprob: -17.600276947021484

Token 1388: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020544764993246645
    2. ' ,' → logprob: -8.500205039978027
    3. 'items' → logprob: -13.375205039978027
    4. ',
' → logprob: -16.375205993652344
    5. ' items' → logprob: -16.375205993652344
    6. '   ' → logprob: -16.750205993652344
    7. '```' → logprob: -17.125205993652344
    8. '(items' → logprob: -17.500205993652344
    9. '       ' → logprob: -17.750205993652344
    10. '/items' → logprob: -18.125205993652344

Token 1389: 'items' (ID: 6918)
  Prédit: 'items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -4.842555426876061e-06
    2. ' items' → logprob: -12.250004768371582
    3. '(items' → logprob: -19.8750057220459
    4. '.items' → logprob: -20.0000057220459
    5. '	items' → logprob: -20.5000057220459
    6. '[
' → logprob: -21.8750057220459
    7. '[' → logprob: -22.0000057220459
    8. '   ' → logprob: -23.0000057220459
    9. '_items' → logprob: -23.3750057220459
    10. '
' → logprob: -23.3750057220459

Token 1390: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0009244420798495412
    2. ')' → logprob: -7.125924587249756
    3. '))
' → logprob: -9.125924110412598
    4. '   ' → logprob: -11.750924110412598
    5. ')))' → logprob: -12.875924110412598
    6. '       ' → logprob: -15.625924110412598
    7. ' ))' → logprob: -15.625924110412598
    8. ')
' → logprob: -15.875924110412598
    9. '))

' → logprob: -15.875924110412598
    10. '))
' → logprob: -17.375925064086914

Token 1391: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1460077464580536
    2. 'tr' → logprob: -2.771007776260376
    3. 'quest' → logprob: -3.646007776260376
    4. '
' → logprob: -4.021007537841797
    5. 't' → logprob: -4.646007537841797
    6. '```' → logprob: -4.771007537841797
    7. 'q' → logprob: -5.396007537841797
    8. 'trade' → logprob: -6.271007537841797
    9. '    
' → logprob: -6.521007537841797
    10. ' trading' → logprob: -7.021007537841797

Token 1392: ' quest' (ID: 2606)
  Prédit: 'quest'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quest' (adapté à ' quest') → logprob: -0.06466267257928848
    2. 't' → logprob: -3.8146626949310303
    3. 'tr' → logprob: -4.064662456512451
    4. 'q' → logprob: -4.564662456512451
    5. '   ' → logprob: -4.689662456512451
    6. ' tq' → logprob: -6.439662456512451
    7. 'trade' → logprob: -6.564662456512451
    8. ' quest' → logprob: -8.18966293334961
    9. 'tj' → logprob: -9.43966293334961
    10. 'tg' → logprob: -9.81466293334961

Token 1393: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602998673915863
    2. ' =' → logprob: -1.9102998971939087
    3. '_' → logprob: -10.535300254821777
    4. '   ' → logprob: -11.410300254821777
    5. '.' → logprob: -11.535300254821777
    6. '.solve' → logprob: -11.910300254821777
    7. '=
' → logprob: -12.035300254821777
    8. '    ' → logprob: -13.035300254821777
    9. '.quest' → logprob: -13.285300254821777
    10. '_=' → logprob: -13.410300254821777

Token 1394: ' Trading' (ID: 36132)
  Prédit: 'Trading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Trading' → logprob: -0.0011703446507453918
    2. ' Trading' → logprob: -6.7511701583862305
    3. 'Trade' → logprob: -15.62617015838623
    4. ' trading' → logprob: -17.376171112060547
    5. 'Trader' → logprob: -19.001171112060547
    6. 'Tracing' → logprob: -19.876171112060547
    7. 'Trades' → logprob: -20.626171112060547
    8. '   ' → logprob: -21.376171112060547
    9. 'Training' → logprob: -21.751171112060547
    10. 'Trending' → logprob: -22.001171112060547

Token 1395: 'Quest' (ID: 37831)
  Prédit: 'Quest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Quest' → logprob: -6.988221684878226e-06
    2. 'Q' → logprob: -12.750006675720215
    3. 'Qu' → logprob: -13.875006675720215
    4. '
' → logprob: -14.000006675720215
    5. 'quest' → logprob: -14.125006675720215
    6. '(' → logprob: -14.250006675720215
    7. '   ' → logprob: -16.12500762939453
    8. ' quest' → logprob: -16.37500762939453
    9. '```' → logprob: -16.50000762939453
    10. 'Quiz' → logprob: -16.62500762939453

Token 1396: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.010905510745942593
    2. '(' → logprob: -4.635905742645264
    3. 'N' → logprob: -7.135905742645264
    4. '(
' → logprob: -8.010905265808105
    5. 'Q' → logprob: -12.010905265808105
    6. '(T' → logprob: -12.510905265808105
    7. '(Q' → logprob: -13.010905265808105
    8. ' (' → logprob: -13.010905265808105
    9. 'T' → logprob: -13.510905265808105
    10. '(n' → logprob: -14.010905265808105

Token 1397: ',M' (ID: 54127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005351755302399397
    2. ',M' → logprob: -5.255351543426514
    3. ' ,' → logprob: -9.255352020263672
    4. '   ' → logprob: -11.505352020263672
    5. ',N' → logprob: -12.755352020263672
    6. ',
' → logprob: -13.005352020263672
    7. '<|end|>' → logprob: -13.005352020263672
    8. 'M' → logprob: -14.130352020263672
    9. ')' → logprob: -14.255352020263672
    10. ',C' → logprob: -14.505352020263672

Token 1398: ',W' (ID: 117252)
  Prédit: ',W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',W' → logprob: -0.08383341133594513
    2. 'W' → logprob: -2.8338334560394287
    3. ',' → logprob: -3.8338334560394287
    4. ' W' → logprob: -13.708833694458008
    5. ' ,' → logprob: -14.708833694458008
    6. '   ' → logprob: -15.708833694458008
    7. ',w' → logprob: -16.583833694458008
    8. ',
' → logprob: -17.083833694458008
    9. '```' → logprob: -17.958833694458008
    10. ',T' → logprob: -18.333833694458008

Token 1399: ',T' (ID: 44428)
  Prédit: ',T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',T' → logprob: -0.20161253213882446
    2. ',' → logprob: -1.7016124725341797
    3. '   ' → logprob: -8.70161247253418
    4. 'T' → logprob: -11.32661247253418
    5. ' ,' → logprob: -11.57661247253418
    6. ',
' → logprob: -11.95161247253418
    7. ',Q' → logprob: -13.07661247253418
    8. '
' → logprob: -14.45161247253418
    9. '  ' → logprob: -15.07661247253418
    10. ',S' → logprob: -15.32661247253418

Token 1400: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008691829279996455
    2. '(' → logprob: -7.750869274139404
    3. ')
' → logprob: -8.125868797302246
    4. '   ' → logprob: -9.875868797302246
    5. '<|end|>' → logprob: -10.625868797302246
    6. '(
' → logprob: -10.875868797302246
    7. ').' → logprob: -11.000868797302246
    8. 'quest' → logprob: -11.750868797302246
    9. ',' → logprob: -12.250868797302246
    10. '.quest' → logprob: -12.625868797302246

Token 1401: 'products' (ID: 19009)
  Prédit: 'products'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'products' → logprob: -7.941850526549388e-06
    2. ' products' → logprob: -11.750007629394531
    3. '(products' → logprob: -19.37500762939453
    4. 'product' → logprob: -20.12500762939453
    5. '   ' → logprob: -20.87500762939453
    6. 'projects' → logprob: -21.50000762939453
    7. '.products' → logprob: -21.87500762939453
    8. 'productos' → logprob: -22.12500762939453
    9. '
' → logprob: -22.25000762939453
    10. '-products' → logprob: -22.50000762939453

Token 1402: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: 0.0
    2. 'data' → logprob: -17.5
    3. '_code' → logprob: -19.375
    4. '_DATA' → logprob: -19.875
    5. '_' → logprob: -20.375
    6. '_datas' → logprob: -20.375
    7. '```' → logprob: -20.5
    8. ')_' → logprob: -20.75
    9. '_Data' → logprob: -20.75
    10. '_dat' → logprob: -20.75

Token 1403: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08926092833280563
    2. ',c' → logprob: -2.4642608165740967
    3. ',
' → logprob: -8.464261054992676
    4. ',C' → logprob: -9.464261054992676
    5. ' ,' → logprob: -11.464261054992676
    6. '   ' → logprob: -11.839261054992676
    7. ',\
' → logprob: -12.464261054992676
    8. ',user' → logprob: -13.089261054992676
    9. '
' → logprob: -13.214261054992676
    10. ')' → logprob: -13.589261054992676

Token 1404: 'ities' (ID: 1629)
  Prédit: 'ities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ities' → logprob: -1.3902033970225602e-05
    2. 'ites' → logprob: -12.000014305114746
    3. 'cities' → logprob: -12.750014305114746
    4. 'itys' → logprob: -13.625014305114746
    5. 'ity' → logprob: -13.875014305114746
    6. 'it' → logprob: -14.000014305114746
    7. 'ountries' → logprob: -14.875014305114746
    8. 's' → logprob: -15.250014305114746
    9. '[' → logprob: -15.625014305114746
    10. 'ties' → logprob: -15.875014305114746

Token 1405: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.0024842156562954187
    2. 'ata' → logprob: -6.002484321594238
    3. '   ' → logprob: -12.377484321594238
    4. 'data' → logprob: -13.002484321594238
    5. '_' → logprob: -14.252484321594238
    6. '```' → logprob: -14.377484321594238
    7. 'a' → logprob: -15.002484321594238
    8. ')' → logprob: -15.752484321594238
    9. 'adata' → logprob: -16.252483367919922
    10. 'Data' → logprob: -16.377483367919922

Token 1406: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002913884585723281
    2. ')
' → logprob: -5.877913951873779
    3. '   ' → logprob: -9.127913475036621
    4. ')
' → logprob: -15.877913475036621
    5. ' )' → logprob: -16.127914428710938
    6. ')

' → logprob: -16.627914428710938
    7. ').' → logprob: -17.002914428710938
    8. ' ' → logprob: -17.252914428710938
    9. '  ' → logprob: -17.377914428710938
    10. '
' → logprob: -17.877914428710938

Token 1407: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012149984249845147
    2. '   ' → logprob: -6.751214981079102
    3. 'result' → logprob: -10.376214981079102
    4. '```' → logprob: -11.501214981079102
    5. ' print' → logprob: -13.126214981079102
    6. '
' → logprob: -13.751214981079102
    7. 'res' → logprob: -15.876214981079102
    8. '``' → logprob: -16.0012149810791
    9. '    
' → logprob: -16.3762149810791
    10. '`' → logprob: -16.7512149810791

Token 1408: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.65707261255011e-06
    2. '   ' → logprob: -12.000008583068848
    3. 'result' → logprob: -13.125008583068848
    4. ' print' → logprob: -15.375008583068848
    5. '```' → logprob: -15.625008583068848
    6. 'res' → logprob: -17.250009536743164
    7. '    
' → logprob: -17.500009536743164
    8. '
' → logprob: -18.125009536743164
    9. 'answer' → logprob: -19.375009536743164
    10. 'pr' → logprob: -20.250009536743164

Token 1409: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033958256244659424
    2. '=' → logprob: -4.158958435058594
    3. '.' → logprob: -5.408958435058594
    4. '   ' → logprob: -5.908958435058594
    5. '.write' → logprob: -5.908958435058594
    6. '.print' → logprob: -6.658958435058594
    7. 'print' → logprob: -7.283958435058594
    8. '=True' → logprob: -7.408958435058594
    9. ')' → logprob: -7.783958435058594
    10. '().' → logprob: -8.033958435058594

Token 1410: ' quest' (ID: 2606)
  Prédit: 'quest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quest' → logprob: -0.023245712742209435
    2. ' quest' → logprob: -3.7732458114624023
    3. 'quests' → logprob: -16.148244857788086
    4. '   ' → logprob: -17.398244857788086
    5. '.quest' → logprob: -17.398244857788086
    6. 'ques' → logprob: -19.023244857788086
    7. '
' → logprob: -20.398244857788086
    8. '```' → logprob: -20.648244857788086
    9. 'que' → logprob: -20.898244857788086
    10. 'print' → logprob: -21.023244857788086

Token 1411: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -0.0009221808286383748
    2. '.' → logprob: -7.000922203063965
    3. '.
' → logprob: -11.750922203063965
    4. '.sol' → logprob: -13.625922203063965
    5. ' .' → logprob: -14.750922203063965
    6. '.s' → logprob: -15.000922203063965
    7. '​.' → logprob: -15.250922203063965
    8. '
' → logprob: -15.750922203063965
    9. 'solve' → logprob: -16.00092124938965
    10. '.run' → logprob: -16.12592124938965

Token 1412: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.26671624183654785
    2. 'print' → logprob: -1.7667162418365479
    3. '()' → logprob: -2.766716241836548
    4. '   ' → logprob: -8.141716003417969
    5. '
' → logprob: -10.266716003417969
    6. ' print' → logprob: -11.641716003417969
    7. '(print' → logprob: -12.891716003417969
    8. '()

' → logprob: -13.016716003417969
    9. '()
' → logprob: -13.266716003417969
    10. '(
' → logprob: -14.141716003417969

Token 1413: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3869180679321289
    2. '   ' → logprob: -1.136918067932129
    3. '```' → logprob: -10.511918067932129
    4. ' print' → logprob: -11.261918067932129
    5. '	print' → logprob: -12.886918067932129
    6. '    
' → logprob: -13.136918067932129
    7. '
' → logprob: -13.886918067932129
    8. '<|end|>' → logprob: -14.386918067932129
    9. '``' → logprob: -15.011918067932129
    10. '#print' → logprob: -15.261918067932129

Token 1414: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005251187365502119
    2. '   ' → logprob: -5.255251407623291
    3. ' print' → logprob: -11.380250930786133
    4. '```' → logprob: -12.630250930786133
    5. '
' → logprob: -12.880250930786133
    6. '	print' → logprob: -16.255250930786133
    7. '    
' → logprob: -17.255250930786133
    8. '``' → logprob: -17.630250930786133
    9. '#print' → logprob: -17.755250930786133
    10. '`' → logprob: -18.380250930786133

Token 1415: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.339278580620885e-06
    2. 'ans' → logprob: -13.375001907348633
    3. '(' → logprob: -14.500001907348633
    4. '()' → logprob: -16.375001907348633
    5. '(
' → logprob: -16.875001907348633
    6. '	ans' → logprob: -18.250001907348633
    7. ' (' → logprob: -19.125001907348633
    8. '(answer' → logprob: -19.375001907348633
    9. ' ans' → logprob: -20.625001907348633
    10. '_ans' → logprob: -21.125001907348633

Token 1416: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.822646693966817e-06
    2. '())' → logprob: -12.500007629394531
    3. '()' → logprob: -12.625007629394531
    4. ')
' → logprob: -14.875007629394531
    5. '`)' → logprob: -16.62500762939453
    6. ')`' → logprob: -16.75000762939453
    7. ' )' → logprob: -16.87500762939453
    8. '   ' → logprob: -17.12500762939453
    9. '))' → logprob: -17.25000762939453
    10. '```' → logprob: -17.87500762939453

Token 1417: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003520277969073504
    2. '<|end|>' → logprob: -8.875351905822754
    3. '```' → logprob: -9.250351905822754
    4. ' if' → logprob: -9.250351905822754
    5. '#' → logprob: -11.250351905822754
    6. 'main' → logprob: -13.125351905822754
    7. '{}' → logprob: -13.625351905822754
    8. 'If' → logprob: -14.000351905822754
    9. '<|end|>' → logprob: -14.375351905822754
    10. '
' → logprob: -14.750351905822754

Token 1418: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16030283272266388
    2. ' __' → logprob: -1.9103028774261475
    3. '_name' → logprob: -10.535303115844727
    4. '___' → logprob: -10.660303115844727
    5. 'name' → logprob: -10.910303115844727
    6. '_' → logprob: -11.785303115844727
    7. '____' → logprob: -14.160303115844727
    8. 'Name' → logprob: -14.410303115844727
    9. '```' → logprob: -15.035303115844727
    10. 'True' → logprob: -15.660303115844727

Token 1419: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02264045923948288
    2. ' ==' → logprob: -4.022640228271484
    3. '==' → logprob: -5.647640228271484
    4. ' __' → logprob: -7.647640228271484
    5. '=="' → logprob: -9.147640228271484
    6. 'name' → logprob: -9.647640228271484
    7. '__":
' → logprob: -10.022640228271484
    8. '_name' → logprob: -10.522640228271484
    9. '__':
' → logprob: -10.647640228271484
    10. '_' → logprob: -10.647640228271484

Token 1420: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0022400659509003162
    2. '==' → logprob: -6.752240180969238
    3. ' ==' → logprob: -7.377240180969238
    4. '=="' → logprob: -7.877240180969238
    5. '=='' → logprob: -10.627240180969238
    6. '__":
' → logprob: -11.002240180969238
    7. '__.__' → logprob: -12.127240180969238
    8. '__':
' → logprob: -12.502240180969238
    9. '__
' → logprob: -12.752240180969238
    10. '__["' → logprob: -13.002240180969238

Token 1421: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5663781762123108
    2. '__' → logprob: -1.441378116607666
    3. '=="' → logprob: -2.316378116607666
    4. ' ==' → logprob: -2.441378116607666
    5. '=='' → logprob: -4.691378116607666
    6. '==
' → logprob: -7.816378116607666
    7. '__":
' → logprob: -8.691378593444824
    8. '```' → logprob: -9.441378593444824
    9. '()==' → logprob: -9.691378593444824
    10. '__.__' → logprob: -10.441378593444824

Token 1422: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12694574892520905
    2. ''' → logprob: -2.126945734024048
    3. '__' → logprob: -11.001945495605469
    4. ' "__' → logprob: -14.126945495605469
    5. '   ' → logprob: -15.876945495605469
    6. ' '__' → logprob: -17.12694549560547
    7. '"name' → logprob: -17.75194549560547
    8. '"user' → logprob: -17.87694549560547
    9. ''"' → logprob: -18.00194549560547
    10. '("__' → logprob: -18.25194549560547

Token 1423: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0440899059176445
    2. 'main' → logprob: -3.6690897941589355
    3. '"' → logprob: -4.1690897941589355
    4. ''' → logprob: -6.1690897941589355
    5. '__
' → logprob: -10.419090270996094
    6. '__":
' → logprob: -10.669090270996094
    7. '___' → logprob: -12.169090270996094
    8. 'name' → logprob: -12.794090270996094
    9. '__':
' → logprob: -12.794090270996094
    10. '____' → logprob: -12.919090270996094

Token 1424: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.05111035332083702
    2. '__' → logprob: -3.05111026763916
    3. '__':
' → logprob: -6.17611026763916
    4. '__
' → logprob: -8.05111026763916
    5. '__["' → logprob: -10.80111026763916
    6. '">
' → logprob: -10.80111026763916
    7. '__()
' → logprob: -11.17611026763916
    8. '_' → logprob: -11.30111026763916
    9. '   ' → logprob: -11.30111026763916
    10. '__.__' → logprob: -11.67611026763916

Token 1425: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.08777641505002975
    2. '   ' → logprob: -2.5877764225006104
    3. ' main' → logprob: -4.837776184082031
    4. '	main' → logprob: -7.337776184082031
    5. '_main' → logprob: -9.587776184082031
    6. '    
' → logprob: -9.712776184082031
    7. '```' → logprob: -9.962776184082031
    8. 'run' → logprob: -10.087776184082031
    9. '__' → logprob: -10.837776184082031
    10. '(main' → logprob: -11.087776184082031

Token 1426: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.5
    3. '   ' → logprob: -17.25
    4. '	main' → logprob: -18.375
    5. '_main' → logprob: -22.75
    6. '
' → logprob: -23.75
    7. '(main' → logprob: -24.125
    8. '```' → logprob: -24.125
    9. '.main' → logprob: -24.375
    10. 'import' → logprob: -24.375

Token 1427: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1425
Tokens correctement prédits (1ère position, stricte): 522
Tokens correctement prédits (1ère position, avec adaptation): 584
Tokens correctement prédits (top 10): 1087
Précision stricte (1ère position): 36.63%
Précision adaptée (1ère position): 40.98%
Précision (top 10): 76.28%
================================================================================
