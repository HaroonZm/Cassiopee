================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:13:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n=int(input())
m=int(input())
cards=list(range(1,2*n+1))
for _ in range(m):
    k=int(input())
    if k==0:
        A,B=cards[:n],cards[n:]
        cards=[a for pair in zip(A,B) for a in pair]
    else:
        A,B=cards[:k],cards[k:]
        cards=B+A
for c in cards:
    print(c)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33144018054008484
    2. '(' → logprob: -1.3314402103424072
    3. '()' → logprob: -5.206439971923828
    4. '())' → logprob: -5.206439971923828
    5. '```' → logprob: -5.706439971923828
    6. '")' → logprob: -7.331439971923828
    7. '`)' → logprob: -7.456439971923828
    8. '(
' → logprob: -7.706439971923828
    9. '<|end|>' → logprob: -7.956439971923828
    10. '')' → logprob: -7.956439971923828

Token 4: 'm' (ID: 76)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.308822751045227
    2. '+' → logprob: -1.683822751045227
    3. '*' → logprob: -2.0588226318359375
    4. 'for' → logprob: -2.3088226318359375
    5. 'i' → logprob: -2.6838226318359375
    6. '#' → logprob: -2.8088226318359375
    7. '\n' → logprob: -3.3088226318359375
    8. 's' → logprob: -3.4338226318359375
    9. '%' → logprob: -3.4338226318359375
    10. ''' → logprob: -4.0588226318359375

Token 5: '=int' (ID: 37431)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7553136944770813
    2. '=' → logprob: -0.8803136944770813
    3. ' =' → logprob: -3.0053136348724365
    4. '*' → logprob: -3.3803136348724365
    5. '[' → logprob: -4.505313873291016
    6. ' ' → logprob: -4.755313873291016
    7. ')' → logprob: -5.880313873291016
    8. '.' → logprob: -6.380313873291016
    9. '-' → logprob: -6.505313873291016
    10. ' +' → logprob: -6.505313873291016

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048669010400772095
    2. '(input' → logprob: -3.0486690998077393
    3. '(
' → logprob: -10.29866886138916
    4. ' (' → logprob: -10.67366886138916
    5. '(

' → logprob: -12.42366886138916
    6. '()' → logprob: -12.92366886138916
    7. '(eval' → logprob: -13.04866886138916
    8. '('' → logprob: -13.29866886138916
    9. '(user' → logprob: -13.67366886138916
    10. '(output' → logprob: -13.92366886138916

Token 7: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7022868990898132
    2. '())' → logprob: -0.8272868990898132
    3. ')' → logprob: -2.702286958694458
    4. '(' → logprob: -8.827286720275879
    5. ' ())' → logprob: -9.702286720275879
    6. '`)' → logprob: -11.577286720275879
    7. '();)' → logprob: -11.702286720275879
    8. '()))' → logprob: -11.702286720275879
    9. '()
' → logprob: -12.702286720275879
    10. '()>' → logprob: -12.827286720275879

Token 8: 'cards' (ID: 40956)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25941476225852966
    2. 'if' → logprob: -1.884414792060852
    3. 's' → logprob: -3.1344146728515625
    4. 'r' → logprob: -4.7594146728515625
    5. 'sum' → logprob: -5.0094146728515625
    6. 'result' → logprob: -5.2594146728515625
    7. 'i' → logprob: -6.0094146728515625
    8. 'a' → logprob: -6.0094146728515625
    9. 'f' → logprob: -6.1344146728515625
    10. 'matrix' → logprob: -6.6344146728515625

Token 9: '=list' (ID: 93413)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.051870446652173996
    2. '_' → logprob: -3.301870346069336
    3. '.' → logprob: -4.551870346069336
    4. 's' → logprob: -6.551870346069336
    5. '=' → logprob: -7.051870346069336
    6. ' =' → logprob: -8.051870346069336
    7. '[:]' → logprob: -8.926870346069336
    8. '\[' → logprob: -9.551870346069336
    9. ' ' → logprob: -9.801870346069336
    10. '['' → logprob: -9.926870346069336

Token 10: '(range' (ID: 50017)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012198569253087044
    2. '(cards' → logprob: -4.887198448181152
    3. '(range' → logprob: -5.887198448181152
    4. '()' → logprob: -7.012198448181152
    5. '(input' → logprob: -7.887198448181152
    6. '(tokens' → logprob: -9.387198448181152
    7. '((' → logprob: -9.762198448181152
    8. '(int' → logprob: -10.637198448181152
    9. '(`' → logprob: -10.887198448181152
    10. '(card' → logprob: -10.887198448181152

Token 11: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04865242913365364
    2. '(n' → logprob: -3.048652410507202
    3. '(
' → logprob: -10.048652648925781
    4. '(m' → logprob: -11.923652648925781
    5. '((' → logprob: -12.548652648925781
    6. ' (' → logprob: -12.673652648925781
    7. '(len' → logprob: -12.798652648925781
    8. 'n' → logprob: -13.798652648925781
    9. '(-' → logprob: -13.923652648925781
    10. '(start' → logprob: -14.048652648925781

Token 12: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00506261782720685
    2. 'n' → logprob: -5.505062580108643
    3. ' ' → logprob: -7.505062580108643
    4. 'm' → logprob: -8.0050630569458
    5. ' n' → logprob: -9.8800630569458
    6. '0' → logprob: -10.3800630569458
    7. '2' → logprob: -11.8800630569458
    8. ' m' → logprob: -12.7550630569458
    9. '   ' → logprob: -13.5050630569458
    10. '10' → logprob: -13.6925630569458

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028279386460781097
    2. ' ,' → logprob: -6.752828121185303
    3. ',n' → logprob: -6.877828121185303
    4. ',m' → logprob: -7.377828121185303
    5. ',
' → logprob: -15.627827644348145
    6. '，' → logprob: -15.627827644348145
    7. 'm' → logprob: -15.752827644348145
    8. ',

' → logprob: -15.877827644348145
    9. ',int' → logprob: -16.62782859802246
    10. ' ' → logprob: -16.75282859802246

Token 14: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12340757995843887
    2. 'm' → logprob: -2.2484076023101807
    3. ' n' → logprob: -4.623407363891602
    4. ' m' → logprob: -7.373407363891602
    5. '51' → logprob: -10.373407363891602
    6. ' ' → logprob: -11.498407363891602
    7. '10' → logprob: -11.498407363891602
    8. ')n' → logprob: -12.498407363891602
    9. '52' → logprob: -12.998407363891602
    10. '53' → logprob: -12.998407363891602

Token 15: '*n' (ID: 58470)
  Prédit: '*n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.15109921991825104
    2. 'n' → logprob: -3.15109920501709
    3. '0' → logprob: -3.52609920501709
    4. '5' → logprob: -4.27609920501709
    5. '1' → logprob: -4.40109920501709
    6. '**' → logprob: -4.52609920501709
    7. '*m' → logprob: -4.65109920501709
    8. '6' → logprob: -5.27609920501709
    9. ' n' → logprob: -5.40109920501709
    10. ' *' → logprob: -5.52609920501709

Token 16: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01135666761547327
    2. ' +' → logprob: -4.511356830596924
    3. '+m' → logprob: -8.761356353759766
    4. '*m' → logprob: -9.136356353759766
    5. '*' → logprob: -10.761356353759766
    6. '))' → logprob: -11.636356353759766
    7. '+
' → logprob: -12.761356353759766
    8. ')+' → logprob: -13.011356353759766
    9. ' ' → logprob: -13.386356353759766
    10. '*n' → logprob: -13.636356353759766

Token 17: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026264708139933646
    2. '+' → logprob: -9.000262260437012
    3. ' ' → logprob: -9.250262260437012
    4. '2' → logprob: -10.125262260437012
    5. ' +' → logprob: -13.750262260437012
    6. 'm' → logprob: -14.875262260437012
    7. '   ' → logprob: -15.375262260437012
    8. '  ' → logprob: -15.500262260437012
    9. '12' → logprob: -16.125263214111328
    10. '```' → logprob: -16.250263214111328

Token 18: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06203020364046097
    2. ')' → logprob: -2.81203031539917
    3. '+' → logprob: -10.062029838562012
    4. ')))' → logprob: -11.687029838562012
    5. ' ))' → logprob: -12.562029838562012
    6. '))
' → logprob: -12.687029838562012
    7. '),' → logprob: -13.937029838562012
    8. ''))' → logprob: -14.312029838562012
    9. ' ' → logprob: -14.687029838562012
    10. '[' → logprob: -14.937029838562012

Token 19: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 20: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06554507464170456
    2. ' ' → logprob: -3.565545082092285
    3. ' _' → logprob: -4.065545082092285
    4. '_' → logprob: -4.190545082092285
    5. 'i' → logprob: -5.940545082092285
    6. ' card' → logprob: -9.815545082092285
    7. '  ' → logprob: -10.065545082092285
    8. ' ' → logprob: -10.065545082092285
    9. ' j' → logprob: -10.565545082092285
    10. '_i' → logprob: -11.190545082092285

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28561466932296753
    2. 'in' → logprob: -1.4106147289276123
    3. 'n' → logprob: -5.660614490509033
    4. ' ' → logprob: -8.160614967346191
    5. 's' → logprob: -9.035614967346191
    6. '```' → logprob: -9.160614967346191
    7. 'i' → logprob: -9.410614967346191
    8. '	in' → logprob: -9.785614967346191
    9. 'range' → logprob: -9.910614967346191
    10. '  ' → logprob: -10.035614967346191

Token 22: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005975604057312012
    2. ' range' → logprob: -5.130975723266602
    3. 'cards' → logprob: -10.755975723266602
    4. '(range' → logprob: -11.505975723266602
    5. '[' → logprob: -12.255975723266602
    6. 'card' → logprob: -12.755975723266602
    7. '(' → logprob: -13.130975723266602
    8. 'm' → logprob: -13.505975723266602
    9. '	range' → logprob: -14.130975723266602
    10. ' cards' → logprob: -14.255975723266602

Token 23: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.586513102054596
    2. '(' → logprob: -0.836513102054596
    3. '(n' → logprob: -4.586513042449951
    4. ' (' → logprob: -8.33651351928711
    5. '(s' → logprob: -9.71151351928711
    6. '(space' → logprob: -11.71151351928711
    7. '(range' → logprob: -11.71151351928711
    8. 'm' → logprob: -12.58651351928711
    9. ' m' → logprob: -13.33651351928711
    10. '((' → logprob: -13.71151351928711

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5553109645843506
    2. ')' → logprob: -0.9303109645843506
    3. ' ):' → logprob: -4.05531120300293
    4. ' )' → logprob: -4.30531120300293
    5. '+' → logprob: -7.68031120300293
    6. ':' → logprob: -8.68031120300293
    7. ' ' → logprob: -10.05531120300293
    8. ',' → logprob: -10.05531120300293
    9. ' :' → logprob: -10.93031120300293
    10. '*' → logprob: -11.18031120300293

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1943747103214264
    2. ' ' → logprob: -3.1943747997283936
    3. ' cards' → logprob: -3.5693747997283936
    4. ' a' → logprob: -3.6943747997283936
    5. ' x' → logprob: -3.9443747997283936
    6. '    ' → logprob: -4.5693745613098145
    7. ' i' → logprob: -4.8193745613098145
    8. '<|end|>' → logprob: -4.8193745613098145
    9. ' ind' → logprob: -5.1943745613098145
    10. 'a' → logprob: -5.3193745613098145

Token 26: ' k' (ID: 372)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4595857858657837
    2. ' a' → logprob: -1.5845857858657837
    3. ' cards' → logprob: -3.834585666656494
    4. 'l' → logprob: -3.959585666656494
    5. '   ' → logprob: -4.084585666656494
    6. 'b' → logprob: -4.209585666656494
    7. ' l' → logprob: -4.459585666656494
    8. 'x' → logprob: -4.584585666656494
    9. 'n' → logprob: -4.834585666656494
    10. 'i' → logprob: -4.959585666656494

Token 27: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6245859265327454
    2. ' =' → logprob: -1.1245858669281006
    3. '=int' → logprob: -2.7495858669281006
    4. ',k' → logprob: -3.1245858669281006
    5. ',' → logprob: -4.49958610534668
    6. ',a' → logprob: -4.87458610534668
    7. ',i' → logprob: -5.12458610534668
    8. '=k' → logprob: -6.24958610534668
    9. ' ' → logprob: -6.62458610534668
    10. '=i' → logprob: -6.87458610534668

Token 28: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.005242056678980589
    2. '(' → logprob: -5.255241870880127
    3. ' (' → logprob: -12.005242347717285
    4. 'input' → logprob: -14.130242347717285
    5. '=input' → logprob: -15.505242347717285
    6. '(
' → logprob: -15.630242347717285
    7. '(in' → logprob: -15.755242347717285
    8. ' input' → logprob: -16.00524139404297
    9. '()' → logprob: -16.13024139404297
    10. ',input' → logprob: -16.25524139404297

Token 29: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03928804025053978
    2. '()' → logprob: -3.53928804397583
    3. ')' → logprob: -4.66428804397583
    4. '())
' → logprob: -10.539287567138672
    5. '(' → logprob: -11.164287567138672
    6. ' ())' → logprob: -11.289287567138672
    7. '()
' → logprob: -12.789287567138672
    8. ' )' → logprob: -12.914287567138672
    9. '()))' → logprob: -13.039287567138672
    10. '())

' → logprob: -13.789287567138672

Token 30: '   ' (ID: 271)
  Prédit: ' cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -1.1190122365951538
    2. '   ' → logprob: -1.7440122365951538
    3. 'indices' → logprob: -1.9940122365951538
    4. 'cards' → logprob: -2.4940123558044434
    5. ' indices' → logprob: -3.4940123558044434
    6. '    ' → logprob: -3.7440123558044434
    7. 's' → logprob: -4.244012355804443
    8. 'idx' → logprob: -4.244012355804443
    9. '	card' → logprob: -4.494012355804443
    10. 'pos' → logprob: -4.494012355804443

Token 31: ' if' (ID: 538)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.515132188796997
    2. 'p' → logprob: -2.140132188796997
    3. ' cards' → logprob: -2.390132188796997
    4. 'cards' → logprob: -2.390132188796997
    5. 'a' → logprob: -2.640132188796997
    6. ' cut' → logprob: -2.890132188796997
    7. ' a' → logprob: -3.140132188796997
    8. 'tmp' → logprob: -3.265132188796997
    9. 'temp' → logprob: -3.390132188796997
    10. 'cut' → logprob: -3.640132188796997

Token 32: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.037595540285110474
    2. 'k' → logprob: -3.912595510482788
    3. ' cards' → logprob: -4.162595748901367
    4. ' ' → logprob: -7.537595748901367
    5. 'cards' → logprob: -8.037595748901367
    6. ' len' → logprob: -8.287595748901367
    7. 'len' → logprob: -10.350095748901367
    8. ')' → logprob: -10.537595748901367
    9. '(cards' → logprob: -10.725095748901367
    10. ' n' → logprob: -10.850095748901367

Token 33: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9276772141456604
    2. '==' → logprob: -1.3026771545410156
    3. ' >' → logprob: -1.9276771545410156
    4. '>' → logprob: -2.8026771545410156
    5. ' <' → logprob: -2.9276771545410156
    6. '<' → logprob: -3.4276771545410156
    7. ' <=' → logprob: -4.052677154541016
    8. '<=' → logprob: -5.177677154541016
    9. ' !=' → logprob: -5.552677154541016
    10. ' ' → logprob: -5.552677154541016

Token 34: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.36471500992774963
    2. '0' → logprob: -1.2397149801254272
    3. ' ' → logprob: -4.489715099334717
    4. '2' → logprob: -5.364715099334717
    5. '3' → logprob: -9.489714622497559
    6. '-' → logprob: -9.864714622497559
    7. 'n' → logprob: -10.114714622497559
    8. 'k' → logprob: -10.989714622497559
    9. '4' → logprob: -11.114714622497559
    10. '  ' → logprob: -12.177214622497559

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002433332148939371
    2. ' :' → logprob: -6.3774333000183105
    3. ':
' → logprob: -7.2524333000183105
    4. ' :
' → logprob: -11.127433776855469
    5. ':return' → logprob: -13.377433776855469
    6. '   ' → logprob: -13.752433776855469
    7. ' continue' → logprob: -13.752433776855469
    8. ',' → logprob: -14.377433776855469
    9. ' or' → logprob: -14.502433776855469
    10. ':
' → logprob: -15.002433776855469

Token 36: '       ' (ID: 309)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.08091700822114944
    2. ' break' → logprob: -3.3309171199798584
    3. '   ' → logprob: -4.580916881561279
    4. ' cards' → logprob: -4.830916881561279
    5. ' pass' → logprob: -5.080916881561279
    6. '    ' → logprob: -5.580916881561279
    7. ' ' → logprob: -5.830916881561279
    8. ' print' → logprob: -6.080916881561279
    9. ' for' → logprob: -6.455916881561279
    10. 'continue' → logprob: -6.830916881561279

Token 37: ' A' (ID: 355)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.28305140137672424
    2. ' cards' → logprob: -1.9080513715744019
    3. ' continue' → logprob: -2.9080514907836914
    4. ' pass' → logprob: -3.4080514907836914
    5. 'break' → logprob: -6.033051490783691
    6. '   ' → logprob: -6.533051490783691
    7. ' for' → logprob: -6.658051490783691
    8. '    ' → logprob: -6.658051490783691
    9. 'cards' → logprob: -6.783051490783691
    10. ' print' → logprob: -7.158051490783691

Token 38: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.926609456539154
    2. ' =' → logprob: -1.1766095161437988
    3. '=' → logprob: -1.9266095161437988
    4. '[' → logprob: -3.176609516143799
    5. ',B' → logprob: -3.676609516143799
    6. ' ,' → logprob: -4.176609516143799
    7. ',b' → logprob: -4.301609516143799
    8. '+=' → logprob: -5.301609516143799
    9. '[:]' → logprob: -5.301609516143799
    10. '.append' → logprob: -5.426609516143799

Token 39: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0035116916988044977
    2. ' =' → logprob: -5.753511905670166
    3. '=A' → logprob: -8.378511428833008
    4. '=k' → logprob: -10.503511428833008
    5. '[' → logprob: -11.128511428833008
    6. '=[' → logprob: -11.128511428833008
    7. '=input' → logprob: -11.628511428833008
    8. '=[]' → logprob: -11.878511428833008
    9. '=

' → logprob: -12.003511428833008
    10. '=list' → logprob: -12.378511428833008

Token 40: 'cards' (ID: 40956)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6399113535881042
    2. 'cards' → logprob: -1.639911413192749
    3. ' ' → logprob: -2.389911413192749
    4. ' cards' → logprob: -2.514911413192749
    5. '1' → logprob: -3.514911413192749
    6. 'map' → logprob: -4.01491117477417
    7. ' map' → logprob: -4.88991117477417
    8. 'list' → logprob: -5.13991117477417
    9. '[]' → logprob: -5.13991117477417
    10. '[' → logprob: -5.13991117477417

Token 41: '[:' (ID: 7808)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.44174081087112427
    2. '[' → logprob: -1.8167407512664795
    3. '[:' → logprob: -1.8167407512664795
    4. ',' → logprob: -3.5667407512664795
    5. '[::-' → logprob: -6.316740989685059
    6. '[:-' → logprob: -7.566740989685059
    7. '[:,' → logprob: -8.691740989685059
    8. '.split' → logprob: -8.691740989685059
    9. '[]' → logprob: -9.066740989685059
    10. '.' → logprob: -9.316740989685059

Token 42: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.031212536618113518
    2. ' n' → logprob: -3.656212568283081
    3. '2' → logprob: -6.656212329864502
    4. '1' → logprob: -6.906212329864502
    5. 'k' → logprob: -6.906212329864502
    6. ' ' → logprob: -7.531212329864502
    7. 'len' → logprob: -7.781212329864502
    8. ']' → logprob: -7.906212329864502
    9. ' len' → logprob: -10.53121280670166
    10. ' 

' → logprob: -10.65621280670166

Token 43: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00569579191505909
    2. ']' → logprob: -5.255695819854736
    3. ' ],' → logprob: -7.755695819854736
    4. '],[' → logprob: -11.630695343017578
    5. '][' → logprob: -12.005695343017578
    6. ',' → logprob: -12.255695343017578
    7. ' ]' → logprob: -12.380695343017578
    8. ']
' → logprob: -13.130695343017578
    9. '),' → logprob: -13.630695343017578
    10. ']+' → logprob: -13.880695343017578

Token 44: 'cards' (ID: 40956)
  Prédit: 'cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.31348058581352234
    2. ' cards' → logprob: -1.3134806156158447
    3. '(cards' → logprob: -8.938480377197266
    4. '.cards' → logprob: -10.188480377197266
    5. ' ' → logprob: -11.063480377197266
    6. '/cards' → logprob: -12.125980377197266
    7. '[' → logprob: -12.563480377197266
    8. '_cards' → logprob: -12.625980377197266
    9. 'card' → logprob: -12.813480377197266
    10. ' ' → logprob: -13.188480377197266

Token 45: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0108228400349617
    2. '[' → logprob: -5.260822772979736
    3. '[:' → logprob: -5.260822772979736
    4. '[:]' → logprob: -8.135823249816895
    5. '```' → logprob: -10.510823249816895
    6. 'n' → logprob: -11.135823249816895
    7. ' [' → logprob: -12.010823249816895
    8. '[N' → logprob: -12.135823249816895
    9. '[
' → logprob: -12.385823249816895
    10. '\[' → logprob: -12.385823249816895

Token 46: ':]
' (ID: 61598)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10123332589864731
    2. ':]' → logprob: -2.3512332439422607
    3. ' ]' → logprob: -7.10123348236084
    4. ' :]' → logprob: -9.72623348236084
    5. '+]' → logprob: -10.22623348236084
    6. ':' → logprob: -10.35123348236084
    7. ']

' → logprob: -10.47623348236084
    8. ']
' → logprob: -11.72623348236084
    9. ':]

' → logprob: -12.60123348236084
    10. '++]' → logprob: -12.72623348236084

Token 47: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9798779487609863
    2. '   ' → logprob: -1.6048779487609863
    3. 'else' → logprob: -1.9798779487609863
    4. '    
' → logprob: -2.4798779487609863
    5. '\n' → logprob: -2.4798779487609863
    6. 'elif' → logprob: -3.6048779487609863
    7. ' else' → logprob: -3.9798779487609863
    8. '[' → logprob: -4.354877948760986
    9. '<|end|>' → logprob: -4.729877948760986
    10. '  
' → logprob: -4.854877948760986

Token 48: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' (adapté à ' cards') → logprob: -0.030833017081022263
    2. '   ' → logprob: -3.9058330059051514
    3. ' cards' → logprob: -4.7808332443237305
    4. '       ' → logprob: -7.1558332443237305
    5. 'for' → logprob: -8.03083324432373
    6. '.cards' → logprob: -9.03083324432373
    7. '(cards' → logprob: -9.15583324432373
    8. ' for' → logprob: -9.53083324432373
    9. 'c' → logprob: -9.90583324432373
    10. '```' → logprob: -10.03083324432373

Token 49: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3185672461986542
    2. '=A' → logprob: -1.3185672760009766
    3. '=k' → logprob: -5.943567276000977
    4. '=B' → logprob: -6.568567276000977
    5. '=n' → logprob: -7.193567276000977
    6. '=[' → logprob: -8.818567276000977
    7. '=a' → logprob: -9.693567276000977
    8. '=s' → logprob: -9.818567276000977
    9. ' =' → logprob: -9.818567276000977
    10. '=b' → logprob: -10.193567276000977

Token 50: 'a' (ID: 64)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6000998020172119
    2. 'b' → logprob: -1.225099802017212
    3. 'val' → logprob: -2.225099802017212
    4. 'A' → logprob: -3.975099802017212
    5. 'item' → logprob: -5.225099563598633
    6. 'y' → logprob: -5.225099563598633
    7. 'elem' → logprob: -5.350099563598633
    8. 'j' → logprob: -5.600099563598633
    9. 'a' → logprob: -5.850099563598633
    10. '*' → logprob: -5.850099563598633

Token 51: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6471551656723022
    2. ' for' → logprob: -0.7721551656723022
    3. 'B' → logprob: -5.397155284881592
    4. ']+' → logprob: -5.897155284881592
    5. ',b' → logprob: -5.897155284881592
    6. 'b' → logprob: -6.147155284881592
    7. ']' → logprob: -6.897155284881592
    8. '+b' → logprob: -8.397154808044434
    9. '
' → logprob: -8.897154808044434
    10. '*' → logprob: -9.022154808044434

Token 52: ' pair' (ID: 10610)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1253772974014282
    2. 'A' → logprob: -1.3753772974014282
    3. 'b' → logprob: -2.2503771781921387
    4. 'B' → logprob: -2.2503771781921387
    5. ' A' → logprob: -2.6253771781921387
    6. ' b' → logprob: -2.8753771781921387
    7. ' a' → logprob: -3.2503771781921387
    8. ' B' → logprob: -3.2503771781921387
    9. ' cards' → logprob: -6.375377178192139
    10. ' ' → logprob: -7.500377178192139

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08901526033878326
    2. 'in' → logprob: -2.464015245437622
    3. ',' → logprob: -10.964015007019043
    4. ' ' → logprob: -11.089015007019043
    5. 'a' → logprob: -11.339015007019043
    6. 'import' → logprob: -11.714015007019043
    7. 'for' → logprob: -11.839015007019043
    8. '   ' → logprob: -12.214015007019043
    9. '       ' → logprob: -13.839015007019043
    10. '  ' → logprob: -13.964015007019043

Token 54: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.16033339500427246
    2. ' zip' → logprob: -1.9103333950042725
    3. '(zip' → logprob: -9.160333633422852
    4. '.zip' → logprob: -13.160333633422852
    5. ' ' → logprob: -13.785333633422852
    6. 'z' → logprob: -14.660333633422852
    7. '_zip' → logprob: -15.160333633422852
    8. 'zi' → logprob: -16.16033363342285
    9. '
' → logprob: -16.53533363342285
    10. '   ' → logprob: -16.53533363342285

Token 55: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.16333089768886566
    2. '(B' → logprob: -1.9133309125900269
    3. '(' → logprob: -5.788331031799316
    4. ' (' → logprob: -11.913331031799316
    5. '(
' → logprob: -12.038331031799316
    6. '(*' → logprob: -12.288331031799316
    7. '((' → logprob: -12.288331031799316
    8. '(a' → logprob: -12.788331031799316
    9. '(C' → logprob: -13.288331031799316
    10. '(S' → logprob: -13.413331031799316

Token 56: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.17962440848350525
    2. ',' → logprob: -2.179624319076538
    3. 'B' → logprob: -3.304624319076538
    4. ',b' → logprob: -4.554624557495117
    5. ' ,' → logprob: -6.429624557495117
    6. ' B' → logprob: -6.679624557495117
    7. '   ' → logprob: -7.429624557495117
    8. ' ' → logprob: -8.429624557495117
    9. '    ' → logprob: -8.929624557495117
    10. '        ' → logprob: -10.054624557495117

Token 57: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009137284359894693
    2. ' for' → logprob: -7.750913619995117
    3. 'for' → logprob: -8.250913619995117
    4. ']' → logprob: -10.000913619995117
    5. ' ' → logprob: -10.000913619995117
    6. '   ' → logprob: -10.500913619995117
    7. ')]' → logprob: -10.500913619995117
    8. ' )' → logprob: -10.625913619995117
    9. '       ' → logprob: -11.375913619995117
    10. 'a' → logprob: -11.375913619995117

Token 58: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.008994353003799915
    2. 'for' → logprob: -4.7589945793151855
    3. ' ' → logprob: -8.633994102478027
    4. '   ' → logprob: -9.383994102478027
    5. ' a' → logprob: -10.508994102478027
    6. '
' → logprob: -10.883994102478027
    7. 'a' → logprob: -11.008994102478027
    8. ']' → logprob: -11.383994102478027
    9. '	for' → logprob: -11.508994102478027
    10. ')' → logprob: -12.383994102478027

Token 59: ' a' (ID: 261)
  Prédit: ' pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.0017501497641205788
    2. 'pair' → logprob: -6.3767499923706055
    3. '(pair' → logprob: -10.001749992370605
    4. ' ' → logprob: -13.001749992370605
    5. '<pair' → logprob: -15.501749992370605
    6. '  ' → logprob: -16.751750946044922
    7. '   ' → logprob: -16.876750946044922
    8. '_pair' → logprob: -16.876750946044922
    9. ' paire' → logprob: -18.001750946044922
    10. 'Pair' → logprob: -18.626750946044922

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05520530417561531
    2. ' pair' → logprob: -3.0552053451538086
    3. 'in' → logprob: -5.930205345153809
    4. 'pair' → logprob: -6.055205345153809
    5. 'air' → logprob: -7.555205345153809
    6. '(pair' → logprob: -7.555205345153809
    7. ' ' → logprob: -7.930205345153809
    8. '<|end|>' → logprob: -10.305205345153809
    9. ' i' → logprob: -10.680205345153809
    10. 'e' → logprob: -10.680205345153809

Token 61: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.1603306531906128
    2. ' pair' → logprob: -1.9103306531906128
    3. '(pair' → logprob: -9.160330772399902
    4. ' ' → logprob: -14.035330772399902
    5. '<pair' → logprob: -15.660330772399902
    6. '[' → logprob: -15.785330772399902
    7. '   ' → logprob: -16.285329818725586
    8. '(' → logprob: -17.035329818725586
    9. '  ' → logprob: -17.285329818725586
    10. 'p' → logprob: -18.035329818725586

Token 62: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003767778165638447
    2. ']
' → logprob: -5.628767967224121
    3. ']

' → logprob: -9.753767967224121
    4. ' ]' → logprob: -9.878767967224121
    5. ']
' → logprob: -10.253767967224121
    6. '   ' → logprob: -11.128767967224121
    7. ')' → logprob: -12.878767967224121
    8. 'else' → logprob: -13.128767967224121
    9. ' ]
' → logprob: -14.378767967224121
    10. ']

' → logprob: -14.378767967224121

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020264018326997757
    2. 'else' → logprob: -4.395264148712158
    3. '<|end|>' → logprob: -5.645264148712158
    4. ' else' → logprob: -6.145264148712158
    5. '\n' → logprob: -7.645264148712158
    6. '    
' → logprob: -7.645264148712158
    7. 'elif' → logprob: -7.895264148712158
    8. '	else' → logprob: -8.645263671875
    9. '
' → logprob: -9.645263671875
    10. ')' → logprob: -9.645263671875

Token 64: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0824907124042511
    2. ' else' → logprob: -2.5824906826019287
    3. 'elif' → logprob: -5.707490921020508
    4. ' elif' → logprob: -8.582490921020508
    5. '   ' → logprob: -10.332490921020508
    6. ' ' → logprob: -11.582490921020508
    7. 's' → logprob: -11.707490921020508
    8. '```' → logprob: -11.832490921020508
    9. '	else' → logprob: -12.207490921020508
    10. 'e' → logprob: -12.457490921020508

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038282010704278946
    2. ':
' → logprob: -4.1632819175720215
    3. '   ' → logprob: -4.2882819175720215
    4. '       ' → logprob: -5.2882819175720215
    5. ' cards' → logprob: -7.2882819175720215
    6. ' :' → logprob: -7.6632819175720215
    7. '```' → logprob: -7.6632819175720215
    8. 'cards' → logprob: -7.7882819175720215
    9. '    ' → logprob: -7.9132819175720215
    10. '(cards' → logprob: -8.78828239440918

Token 66: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2893148958683014
    2. ' cards' → logprob: -1.664314866065979
    3. 'cards' → logprob: -3.1643149852752686
    4. ' n' → logprob: -5.1643147468566895
    5. '   ' → logprob: -5.4143147468566895
    6. ' s' → logprob: -6.2893147468566895
    7. '```' → logprob: -6.5393147468566895
    8. '        ' → logprob: -6.6643147468566895
    9. ' k' → logprob: -6.9143147468566895
    10. 'n' → logprob: -7.4143147468566895

Token 67: ' A' (ID: 355)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.5783905982971191
    2. ' cards' → logprob: -0.8283905982971191
    3. '   ' → logprob: -6.453390598297119
    4. 'print' → logprob: -9.203390121459961
    5. '(cards' → logprob: -9.203390121459961
    6. 'c' → logprob: -9.578390121459961
    7. 's' → logprob: -9.703390121459961
    8. '       ' → logprob: -9.828390121459961
    9. '```' → logprob: -10.078390121459961
    10. '.cards' → logprob: -10.515890121459961

Token 68: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.742245614528656
    2. ',' → logprob: -1.2422456741333008
    3. '=' → logprob: -1.4922456741333008
    4. '=B' → logprob: -4.867245674133301
    5. ',b' → logprob: -6.617245674133301
    6. '=[' → logprob: -8.8672456741333
    7. 'B' → logprob: -8.8672456741333
    8. ' =' → logprob: -9.2422456741333
    9. ',C' → logprob: -9.2422456741333
    10. '=(' → logprob: -9.2422456741333

Token 69: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5451681974809617e-05
    2. '=A' → logprob: -12.500015258789062
    3. '=[' → logprob: -13.000015258789062
    4. '=c' → logprob: -13.625015258789062
    5. '=[]' → logprob: -13.750015258789062
    6. ' =' → logprob: -13.875015258789062
    7. '=cut' → logprob: -14.000015258789062
    8. ',' → logprob: -14.500015258789062
    9. '=C' → logprob: -14.750015258789062
    10. '=B' → logprob: -14.875015258789062

Token 70: 'cards' (ID: 40956)
  Prédit: 'cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.14597870409488678
    2. ' cards' → logprob: -2.0209786891937256
    3. '(cards' → logprob: -6.145978927612305
    4. '   ' → logprob: -7.645978927612305
    5. '[' → logprob: -8.020978927612305
    6. ' ' → logprob: -9.520978927612305
    7. '.cards' → logprob: -9.770978927612305
    8. '  ' → logprob: -10.458478927612305
    9. ' [' → logprob: -10.645978927612305
    10. 'card' → logprob: -10.895978927612305

Token 71: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.026430342346429825
    2. '[n' → logprob: -3.651430368423462
    3. '[:-' → logprob: -9.651430130004883
    4. '[-' → logprob: -10.526430130004883
    5. '[' → logprob: -11.151430130004883
    6. ' [:' → logprob: -11.776430130004883
    7. 'n' → logprob: -11.901430130004883
    8. '[:]' → logprob: -12.776430130004883
    9. ':' → logprob: -13.776430130004883
    10. '   ' → logprob: -13.901430130004883

Token 72: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3729739785194397
    2. 'n' → logprob: -1.247973918914795
    3. '2' → logprob: -4.122973918914795
    4. '(' → logprob: -5.622973918914795
    5. '-k' → logprob: -6.622973918914795
    6. '-n' → logprob: -6.997973918914795
    7. '-' → logprob: -7.122973918914795
    8. '1' → logprob: -7.997973918914795
    9. ' n' → logprob: -8.372974395751953
    10. ' k' → logprob: -8.872974395751953

Token 73: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00406225211918354
    2. '],[' → logprob: -6.254062175750732
    3. ']' → logprob: -6.504062175750732
    4. ' ],' → logprob: -8.62906265258789
    5. ']+' → logprob: -8.62906265258789
    6. 'n' → logprob: -9.37906265258789
    7. '*n' → logprob: -9.50406265258789
    8. '][' → logprob: -10.25406265258789
    9. ',n' → logprob: -10.62906265258789
    10. ',' → logprob: -11.25406265258789

Token 74: 'cards' (ID: 40956)
  Prédit: 'cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.03823702409863472
    2. ' cards' → logprob: -3.2882370948791504
    3. '(cards' → logprob: -9.288236618041992
    4. '.cards' → logprob: -10.288236618041992
    5. '   ' → logprob: -11.038236618041992
    6. '/cards' → logprob: -11.038236618041992
    7. 'card' → logprob: -11.663236618041992
    8. ' ' → logprob: -12.100736618041992
    9. '[' → logprob: -12.163236618041992
    10. 'cars' → logprob: -12.788236618041992

Token 75: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.005753630306571722
    2. '[n' → logprob: -5.505753517150879
    3. '[:' → logprob: -6.505753517150879
    4. '[' → logprob: -10.130753517150879
    5. '[m' → logprob: -10.255753517150879
    6. '[:]' → logprob: -10.380753517150879
    7. 'k' → logprob: -12.005753517150879
    8. '[b' → logprob: -12.005753517150879
    9. '[key' → logprob: -12.005753517150879
    10. '[a' → logprob: -12.005753517150879

Token 76: ':]
' (ID: 61598)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007376850116997957
    2. ']+' → logprob: -5.132376670837402
    3. '],' → logprob: -7.132376670837402
    4. ':]' → logprob: -7.507376670837402
    5. '+]' → logprob: -10.257376670837402
    6. ' ]' → logprob: -10.507376670837402
    7. ']+"' → logprob: -12.382376670837402
    8. ':],' → logprob: -12.632376670837402
    9. ']
' → logprob: -12.757376670837402
    10. '()]' → logprob: -12.882376670837402

Token 77: '       ' (ID: 309)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.3776082694530487
    2. '   ' → logprob: -1.752608299255371
    3. ' cards' → logprob: -2.502608299255371
    4. '       ' → logprob: -3.002608299255371
    5. '```' → logprob: -5.252608299255371
    6. ' A' → logprob: -6.877608299255371
    7. '[' → logprob: -7.127608299255371
    8. '(cards' → logprob: -7.752608299255371
    9. 'A' → logprob: -8.002608299255371
    10. '``' → logprob: -8.002608299255371

Token 78: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' (adapté à ' cards') → logprob: -0.0011932061752304435
    2. ' cards' → logprob: -7.001193046569824
    3. 'B' → logprob: -8.376193046569824
    4. '   ' → logprob: -10.876193046569824
    5. '       ' → logprob: -11.751193046569824
    6. 'A' → logprob: -11.876193046569824
    7. ' B' → logprob: -12.001193046569824
    8. 'card' → logprob: -13.126193046569824
    9. '.cards' → logprob: -13.251193046569824
    10. '[' → logprob: -13.376193046569824

Token 79: '=B' (ID: 139140)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32439735531806946
    2. '=[' → logprob: -1.324397325515747
    3. '=B' → logprob: -4.949397563934326
    4. '=A' → logprob: -6.199397563934326
    5. '=k' → logprob: -7.074397563934326
    6. '=b' → logprob: -7.574397563934326
    7. ' =' → logprob: -9.199397087097168
    8. '[' → logprob: -9.574397087097168
    9. '=['' → logprob: -9.699397087097168
    10. '=[]' → logprob: -9.824397087097168

Token 80: '+A' (ID: 195068)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006735934875905514
    2. ' +' → logprob: -7.750673770904541
    3. '+A' → logprob: -9.125673294067383
    4. '+k' → logprob: -9.750673294067383
    5. '+a' → logprob: -9.875673294067383
    6. '+[' → logprob: -12.125673294067383
    7. '+c' → logprob: -12.375673294067383
    8. '+B' → logprob: -12.875673294067383
    9. '```' → logprob: -13.125673294067383
    10. '   ' → logprob: -13.375673294067383

Token 81: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0020091719925403595
    2. '<|end|>' → logprob: -6.502009391784668
    3. '
' → logprob: -8.627009391784668
    4. 'for' → logprob: -9.252009391784668
    5. '```' → logprob: -9.627009391784668
    6. '[' → logprob: -9.877009391784668
    7. '\n' → logprob: -10.502009391784668
    8. ' print' → logprob: -11.002009391784668
    9. 'n' → logprob: -11.377009391784668
    10. '#' → logprob: -11.502009391784668

Token 82: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02341621182858944
    2. 'for' → logprob: -3.77341628074646
    3. '```' → logprob: -8.773416519165039
    4. '
' → logprob: -12.523416519165039
    5. '    
' → logprob: -12.898416519165039
    6. ' for' → logprob: -12.898416519165039
    7. '<|end|>' → logprob: -13.148416519165039
    8. '``' → logprob: -13.273416519165039
    9. ' print' → logprob: -14.273416519165039
    10. '  
' → logprob: -14.648416519165039

Token 83: ' c' (ID: 274)
  Prédit: ' card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -1.0496011972427368
    2. 'c' → logprob: -1.5496011972427368
    3. ' c' → logprob: -1.7996011972427368
    4. 'card' → logprob: -1.9246011972427368
    5. '_' → logprob: -3.0496010780334473
    6. ' i' → logprob: -3.1746010780334473
    7. 'i' → logprob: -3.5496010780334473
    8. ' _' → logprob: -5.299601078033447
    9. ' ' → logprob: -7.049601078033447
    10. 'x' → logprob: -7.174601078033447

Token 84: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22567643225193024
    2. 'in' → logprob: -1.600676417350769
    3. ' ' → logprob: -8.850676536560059
    4. '  ' → logprob: -10.100676536560059
    5. 'i' → logprob: -10.850676536560059
    6. '	in' → logprob: -10.850676536560059
    7. 's' → logprob: -11.225676536560059
    8. '   ' → logprob: -11.850676536560059
    9. 'n' → logprob: -12.350676536560059
    10. ' ' → logprob: -12.850676536560059

Token 85: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.0011952288914471865
    2. ' cards' → logprob: -6.751195430755615
    3. '(cards' → logprob: -10.751194953918457
    4. 'card' → logprob: -13.001194953918457
    5. 'c' → logprob: -14.751194953918457
    6. '.cards' → logprob: -15.001194953918457
    7. 'range' → logprob: -15.751194953918457
    8. 'codes' → logprob: -15.751194953918457
    9. '_cards' → logprob: -15.751194953918457
    10. '/cards' → logprob: -16.626195907592773

Token 86: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024507366120815277
    2. 'print' → logprob: -3.7745072841644287
    3. ':
' → logprob: -7.274507522583008
    4. ' print' → logprob: -7.774507522583008
    5. '.print' → logprob: -9.899507522583008
    6. '	print' → logprob: -10.024507522583008
    7. '_print' → logprob: -11.024507522583008
    8. '   ' → logprob: -11.774507522583008
    9. '(print' → logprob: -11.774507522583008
    10. ')' → logprob: -12.899507522583008

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19720321893692017
    2. ' print' → logprob: -1.8222031593322754
    3. 'print' → logprob: -4.072203159332275
    4. '	print' → logprob: -8.947203636169434
    5. '```' → logprob: -9.572203636169434
    6. '    
' → logprob: -10.697203636169434
    7. ' 
' → logprob: -11.072203636169434
    8. '<|end|>' → logprob: -11.947203636169434
    9. '       ' → logprob: -12.322203636169434
    10. '`' → logprob: -12.697203636169434

Token 88: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00014072739577386528
    2. ' print' → logprob: -8.875141143798828
    3. '   ' → logprob: -14.875141143798828
    4. '```' → logprob: -15.250141143798828
    5. 'pr' → logprob: -16.625141143798828
    6. 'printf' → logprob: -17.375141143798828
    7. '    
' → logprob: -17.500141143798828
    8. '.print' → logprob: -17.500141143798828
    9. '	print' → logprob: -17.750141143798828
    10. '
' → logprob: -18.000141143798828

Token 89: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.000275040598353371
    2. '(' → logprob: -8.250274658203125
    3. '(f' → logprob: -11.375274658203125
    4. 'c' → logprob: -13.375274658203125
    5. '('' → logprob: -14.750274658203125
    6. '()' → logprob: -16.250274658203125
    7. '(card' → logprob: -17.000274658203125
    8. '(chr' → logprob: -17.125274658203125
    9. ')c' → logprob: -17.875274658203125
    10. '((' → logprob: -18.125274658203125

Token 90: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. '))' → logprob: -13.87500286102295
    3. ')
' → logprob: -14.12500286102295
    4. ')`' → logprob: -14.50000286102295
    5. ' )' → logprob: -14.75000286102295
    6. '`)' → logprob: -15.75000286102295
    7. '')' → logprob: -15.75000286102295
    8. ')}' → logprob: -16.750003814697266
    9. ')")' → logprob: -17.500003814697266
    10. '),' → logprob: -17.750003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 88
Tokens correctement prédits (1ère position, stricte): 36
Tokens correctement prédits (1ère position, avec adaptation): 40
Tokens correctement prédits (top 10): 69
Précision stricte (1ère position): 40.91%
Précision adaptée (1ère position): 45.45%
Précision (top 10): 78.41%
================================================================================
