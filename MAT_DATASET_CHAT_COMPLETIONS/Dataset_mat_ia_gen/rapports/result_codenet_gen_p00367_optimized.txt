================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def time_to_min(h, m):
    return h * 60 + m

def max_customers():
    N = int(input())
    breakfast_times = []
    lunch_times = []
    supper_times = []
    for _ in range(N):
        ast, aet, hst, het, bst, bet = map(int, input().split())
        breakfast_times.append((time_to_min(ast, aet), time_to_min(aet, 0)))
        lunch_times.append((time_to_min(hst, het), time_to_min(het, 0)))
        supper_times.append((time_to_min(bst, bet), time_to_min(bet, 0)))

    # Correction: The above code incorrectly uses time_to_min with 2 arguments, must fix input parsing.

def max_customers():
    N = int(input())
    breakfast = []
    lunch = []
    supper = []
    for _ in range(N):
        ast_h, ast_m, aet_h, aet_m, hst_h, hst_m, het_h, het_m, bst_h, bst_m, bet_h, bet_m = map(int, input().split())
        breakfast.append((time_to_min(ast_h, ast_m), time_to_min(aet_h, aet_m)))
        lunch.append((time_to_min(hst_h, hst_m), time_to_min(het_h, het_m)))
        supper.append((time_to_min(bst_h, bst_m), time_to_min(bet_h, bet_m)))

    # Candidate serving times must be selected from customers' time zone edges
    breakfast_candidates = set()
    lunch_candidates = set()
    supper_candidates = set()

    for i in range(N):
        breakfast_candidates.add(breakfast[i][0])
        breakfast_candidates.add(breakfast[i][1])
        lunch_candidates.add(lunch[i][0])
        lunch_candidates.add(lunch[i][1])
        supper_candidates.add(supper[i][0])
        supper_candidates.add(supper[i][1])

    max_count = 0
    # For each combination of breakfast, lunch, supper serving times, count how many customers fit all three
    for b in breakfast_candidates:
        for l in lunch_candidates:
            if l <= b:
                continue
            for s in supper_candidates:
                if s <= l:
                    continue
                count = 0
                for i in range(N):
                    if breakfast[i][0] <= b <= breakfast[i][1] and lunch[i][0] <= l <= lunch[i][1] and supper[i][0] <= s <= supper[i][1]:
                        count += 1
                if count > max_count:
                    max_count = count
    print(max_count)

max_customers()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' time' (ID: 1058)
  → Token d'amorce (pas de prédiction)

Token 2: '_to' (ID: 5089)
  → Token d'amorce (pas de prédiction)

Token 3: '_min' (ID: 15950)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005512753967195749
    2. '_convert' → logprob: -6.255512714385986
    3. '_take' → logprob: -7.380512714385986
    4. '_return' → logprob: -8.005513191223145
    5. '_time' → logprob: -8.130513191223145
    6. '_sleep' → logprob: -8.130513191223145
    7. ' _' → logprob: -8.380513191223145
    8. '_seconds' → logprob: -8.630513191223145
    9. '_save' → logprob: -9.005513191223145
    10. '_find' → logprob: -9.130513191223145

Token 4: '(h' (ID: 8120)
  Prédit: 'ute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ute' → logprob: -0.3594967722892761
    2. 's' → logprob: -2.234496831893921
    3. '_' → logprob: -2.609496831893921
    4. '(' → logprob: -3.109496831893921
    5. 'ut' → logprob: -3.234496831893921
    6. '(s' → logprob: -4.859496593475342
    7. '(_' → logprob: -5.234496593475342
    8. '():' → logprob: -5.734496593475342
    9. '_ut' → logprob: -5.734496593475342
    10. 'utes' → logprob: -5.984496593475342

Token 5: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1991519033908844
    2. ',' → logprob: -1.824151873588562
    3. ')' → logprob: -4.824151992797852
    4. 'e' → logprob: -5.074151992797852
    5. 's' → logprob: -6.699151992797852
    6. 'i' → logprob: -6.949151992797852
    7. ':' → logprob: -7.074151992797852
    8. 'u' → logprob: -7.324151992797852
    9. 'o' → logprob: -8.199151992797852
    10. 'our' → logprob: -8.199151992797852

Token 6: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.07904533296823502
    2. ' m' → logprob: -2.579045295715332
    3. ' ' → logprob: -9.329045295715332
    4. 'min' → logprob: -10.954045295715332
    5. 's' → logprob: -11.204045295715332
    6. '_m' → logprob: -11.454045295715332
    7. '	m' → logprob: -11.829045295715332
    8. 'i' → logprob: -12.204045295715332
    9. '   ' → logprob: -12.954045295715332
    10. '  ' → logprob: -13.579045295715332

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004672206938266754
    2. ')' → logprob: -5.379672050476074
    3. ':' → logprob: -11.629672050476074
    4. ',' → logprob: -11.754672050476074
    5. 's' → logprob: -12.004672050476074
    6. '**' → logprob: -12.129672050476074
    7. '):
' → logprob: -12.129672050476074
    8. ''):' → logprob: -12.379672050476074
    9. '*' → logprob: -12.504672050476074
    10. '_' → logprob: -13.254672050476074

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5444055795669556
    2. '   ' → logprob: -0.9194055795669556
    3. ' return' → logprob: -4.544405460357666
    4. '```' → logprob: -5.669405460357666
    5. ':return' → logprob: -5.794405460357666
    6. ' ' → logprob: -6.919405460357666
    7. '	return' → logprob: -7.294405460357666
    8. ' :' → logprob: -8.044405937194824
    9. '":' → logprob: -8.169405937194824
    10. '):' → logprob: -8.169405937194824

Token 9: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.129130020737648
    2. ' ' → logprob: -2.7541301250457764
    3. ' return' → logprob: -3.1291301250457764
    4. 'return' (adapté à ' return') → logprob: -5.379129886627197
    5. '```' → logprob: -6.004129886627197
    6. ''' → logprob: -6.254129886627197
    7. '`' → logprob: -7.004129886627197
    8. '    ' → logprob: -7.004129886627197
    9. '       ' → logprob: -7.129129886627197
    10. '"' → logprob: -7.379129886627197

Token 10: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.027339108288288116
    2. 'h' → logprob: -3.652339220046997
    3. ' ' → logprob: -6.902338981628418
    4. ' (' → logprob: -11.527338981628418
    5. '(h' → logprob: -11.902338981628418
    6. '  ' → logprob: -13.277338981628418
    7. '"' → logprob: -13.402338981628418
    8. 's' → logprob: -13.402338981628418
    9. ''' → logprob: -13.527338981628418
    10. '   ' → logprob: -13.527338981628418

Token 11: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04935913905501366
    2. ' *' → logprob: -3.049359083175659
    3. ')' → logprob: -8.299359321594238
    4. '_' → logprob: -8.799359321594238
    5. ' ' → logprob: -9.049359321594238
    6. '+' → logprob: -9.174359321594238
    7. '**' → logprob: -10.299359321594238
    8. ',' → logprob: -10.799359321594238
    9. '```' → logprob: -11.049359321594238
    10. '`' → logprob: -11.299359321594238

Token 12: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4740878641605377
    2. '60' → logprob: -0.9740878343582153
    3. '360' → logprob: -11.849087715148926
    4. '  ' → logprob: -13.724087715148926
    5. '6' → logprob: -14.474087715148926
    6. '```' → logprob: -14.974087715148926
    7. '30' → logprob: -15.099087715148926
    8. '36' → logprob: -15.099087715148926
    9. '600' → logprob: -15.349087715148926
    10. '   ' → logprob: -15.474087715148926

Token 13: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.0009118211455643177
    2. ' ' → logprob: -7.000911712646484
    3. '6' → logprob: -16.000911712646484
    4. '   ' → logprob: -16.125911712646484
    5. '600' → logprob: -16.875911712646484
    6. '  ' → logprob: -17.625911712646484
    7. '```' → logprob: -17.750911712646484
    8. '360' → logprob: -18.250911712646484
    9. '30' → logprob: -19.000911712646484
    10. '61' → logprob: -20.000911712646484

Token 14: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01455057505518198
    2. ' +' → logprob: -4.264550685882568
    3. '<|end|>' → logprob: -8.63955020904541
    4. '*' → logprob: -8.88955020904541
    5. ' ' → logprob: -10.63955020904541
    6. ')' → logprob: -11.01455020904541
    7. '```' → logprob: -11.76455020904541
    8. '+
' → logprob: -12.01455020904541
    9. ' +
' → logprob: -12.88955020904541
    10. ''' → logprob: -13.13955020904541

Token 15: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.4740773141384125
    2. 'm' → logprob: -0.9740773439407349
    3. ' ' → logprob: -15.224077224731445
    4. ' ' → logprob: -16.224077224731445
    5. '	m' → logprob: -18.724077224731445
    6. ' м' → logprob: -18.974077224731445
    7. '_m' → logprob: -20.349077224731445
    8. '<|end|>' → logprob: -20.349077224731445
    9. '1' → logprob: -20.849077224731445
    10. '```' → logprob: -20.849077224731445

Token 16: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6724991798400879
    2. '(' → logprob: -1.172499179840088
    3. '\n' → logprob: -2.672499179840088
    4. '
' → logprob: -3.547499179840088
    5. '\' → logprob: -3.922499179840088
    6. '<|end|>' → logprob: -4.047499179840088
    7. '```' → logprob: -4.422499179840088
    8. '*' → logprob: -5.047499179840088
    9. '#' → logprob: -5.297499179840088
    10. '(
' → logprob: -5.422499179840088

Token 17: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7844237685203552
    2. ')' → logprob: -2.159423828125
    3. '(' → logprob: -2.284423828125
    4. '*' → logprob: -2.534423828125
    5. 'def' → logprob: -3.159423828125
    6. '```' → logprob: -3.284423828125
    7. '#' → logprob: -3.409423828125
    8. '\n' → logprob: -3.534423828125
    9. '\' → logprob: -3.909423828125
    10. '

' → logprob: -3.909423828125

Token 18: ' max' (ID: 2999)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.09244153648614883
    2. ' space' → logprob: -2.5924415588378906
    3. ' convert' → logprob: -5.967441558837891
    4. ' day' → logprob: -6.092441558837891
    5. ' calculate' → logprob: -6.092441558837891
    6. ' total' → logprob: -6.342441558837891
    7. '_' → logprob: -6.842441558837891
    8. ' average' → logprob: -7.842441558837891
    9. ' minutes' → logprob: -7.967441558837891
    10. ' add' → logprob: -8.09244155883789

Token 19: '_custom' (ID: 36825)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01566031575202942
    2. '(' → logprob: -4.390660285949707
    3. '_time' → logprob: -6.140660285949707
    4. '_max' → logprob: -8.390660285949707
    5. ' _' → logprob: -8.640660285949707
    6. 'imum' → logprob: -9.515660285949707
    7. '_(' → logprob: -9.515660285949707
    8. '(_' → logprob: -10.140660285949707
    9. '_minutes' → logprob: -10.515660285949707
    10. '(a' → logprob: -10.765660285949707

Token 20: 'ers' (ID: 409)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.1508162021636963
    2. '_' → logprob: -2.2758162021636963
    3. '_er' → logprob: -4.150815963745117
    4. '_def' → logprob: -5.525815963745117
    5. 'ers' → logprob: -5.650815963745117
    6. 'izer' → logprob: -6.025815963745117
    7. '_max' → logprob: -6.275815963745117
    8. '_function' → logprob: -7.025815963745117
    9. '_func' → logprob: -7.025815963745117
    10. '_time' → logprob: -7.650815963745117

Token 21: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0029471551533788443
    2. '_' → logprob: -6.1279473304748535
    3. ' (' → logprob: -8.252946853637695
    4. '_(' → logprob: -8.752946853637695
    5. '(_' → logprob: -9.377946853637695
    6. '("("' → logprob: -10.377946853637695
    7. '<|end|>' → logprob: -10.377946853637695
    8. '```' → logprob: -11.002946853637695
    9. 's' → logprob: -11.127946853637695
    10. ')' → logprob: -11.502946853637695

Token 22: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03080400452017784
    2. '(' → logprob: -4.53080415725708
    3. '<|end|>' → logprob: -4.53080415725708
    4. ' (' → logprob: -6.40580415725708
    5. '   ' → logprob: -6.53080415725708
    6. '    ' → logprob: -6.65580415725708
    7. '[' → logprob: -7.15580415725708
    8. '\' → logprob: -7.15580415725708
    9. ' return' → logprob: -8.030803680419922
    10. ''' → logprob: -8.155803680419922

Token 23: ' N' (ID: 478)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.32177892327308655
    2. 'max' → logprob: -1.6967788934707642
    3. ' ' → logprob: -3.5717790126800537
    4. 'n' → logprob: -4.196778774261475
    5. '   ' → logprob: -4.821778774261475
    6. 'r' → logprob: -5.196778774261475
    7. '[' → logprob: -5.321778774261475
    8. 'c' → logprob: -5.321778774261475
    9. '(' → logprob: -5.821778774261475
    10. ' return' → logprob: -5.821778774261475

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01971411518752575
    2. '=' → logprob: -4.144713878631592
    3. ' ' → logprob: -6.519713878631592
    4. ',' → logprob: -6.519713878631592
    5. '   ' → logprob: -8.76971435546875
    6. ' ,' → logprob: -9.14471435546875
    7. '  ' → logprob: -9.14471435546875
    8. ')' → logprob: -9.26971435546875
    9. '<|end|>' → logprob: -9.26971435546875
    10. '.' → logprob: -9.64471435546875

Token 25: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.057861074805259705
    2. ' ' → logprob: -3.057861089706421
    3. 'int' → logprob: -4.932860851287842
    4. '10' → logprob: -6.682860851287842
    5. '0' → logprob: -7.932860851287842
    6. ' input' → logprob: -9.057861328125
    7. '20' → logprob: -9.807861328125
    8. '5' → logprob: -9.932861328125
    9. ' len' → logprob: -10.432861328125
    10. '=int' → logprob: -10.557861328125

Token 26: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.029873361811041832
    2. '(' → logprob: -3.5298733711242676
    3. 'input' → logprob: -9.02987289428711
    4. '(
' → logprob: -13.40487289428711
    5. ' (' → logprob: -14.27987289428711
    6. ' input' → logprob: -14.65487289428711
    7. '()' → logprob: -16.02987289428711
    8. '(

' → logprob: -16.02987289428711
    9. '<input' → logprob: -16.27987289428711
    10. '(open' → logprob: -16.90487289428711

Token 27: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5441738367080688
    2. '(' → logprob: -1.0441738367080688
    3. '('' → logprob: -3.4191737174987793
    4. '())' → logprob: -3.5441737174987793
    5. ')' → logprob: -5.419173717498779
    6. '("("' → logprob: -7.169173717498779
    7. ' ' → logprob: -8.919174194335938
    8. '("' → logprob: -9.169174194335938
    9. '(""))' → logprob: -9.294174194335938
    10. '(
' → logprob: -9.294174194335938

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.189900279045105
    2. '
' → logprob: -1.564900279045105
    3. ' 
' → logprob: -1.939900279045105
    4. '    
' → logprob: -2.0649003982543945
    5. ')' → logprob: -2.6899003982543945
    6. 'n' → logprob: -3.4399003982543945
    7. '    ' → logprob: -3.4399003982543945
    8. ' ' → logprob: -3.5649003982543945
    9. '  
' → logprob: -4.3149003982543945
    10. '\n' → logprob: -4.8149003982543945

Token 29: ' breakfast' (ID: 16356)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.4503158628940582
    2. ' customers' → logprob: -2.2003159523010254
    3. ' best' → logprob: -2.4503159523010254
    4. 'max' → logprob: -2.5753159523010254
    5. 'customers' → logprob: -3.4503159523010254
    6. ' maximum' → logprob: -4.575315952301025
    7. ' total' → logprob: -4.950315952301025
    8. ' customer' → logprob: -4.950315952301025
    9. ' current' → logprob: -5.825315952301025
    10. ' arrivals' → logprob: -5.950315952301025

Token 30: '_times' (ID: 53425)
  Prédit: '_custom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_custom' → logprob: -0.7985994815826416
    2. '_' → logprob: -1.4235994815826416
    3. '_time' → logprob: -2.7985994815826416
    4. '_items' → logprob: -2.9235994815826416
    5. '_times' → logprob: -3.2985994815826416
    6. ' =' → logprob: -3.4235994815826416
    7. '_count' → logprob: -3.5485994815826416
    8. '_sp' → logprob: -4.2985992431640625
    9. 's' → logprob: -4.5485992431640625
    10. '_list' → logprob: -4.9235992431640625

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019722413271665573
    2. '=' → logprob: -4.0197224617004395
    3. '_' → logprob: -7.3947224617004395
    4. '   ' → logprob: -8.019721984863281
    5. '[]' → logprob: -8.644721984863281
    6. '[' → logprob: -8.894721984863281
    7. ')' → logprob: -9.144721984863281
    8. ' ' → logprob: -9.769721984863281
    9. 's' → logprob: -10.019721984863281
    10. ',' → logprob: -10.769721984863281

Token 32: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.1352800726890564
    2. '[]' → logprob: -3.135280132293701
    3. ' list' → logprob: -3.260280132293701
    4. ' [' → logprob: -3.385280132293701
    5. 'list' → logprob: -4.760280132293701
    6. '[' → logprob: -6.260280132293701
    7. '[list' → logprob: -9.385279655456543
    8. '[input' → logprob: -9.510279655456543
    9. ' ' → logprob: -9.635279655456543
    10. '[int' → logprob: -11.010279655456543

Token 33: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3687264621257782
    2. ' for' → logprob: -1.8687264919281006
    3. '   ' → logprob: -2.1187264919281006
    4. '<|end|>' → logprob: -3.9937264919281006
    5. '	for' → logprob: -4.6187262535095215
    6. '    
' → logprob: -6.1187262535095215
    7. '[' → logprob: -6.9937262535095215
    8. ' ' → logprob: -7.4937262535095215
    9. '    ' → logprob: -7.4937262535095215
    10. '<|end|>' → logprob: -7.7437262535095215

Token 34: ' lunch' (ID: 17418)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0022841955069452524
    2. ' for' → logprob: -6.127284049987793
    3. '	for' → logprob: -9.627284049987793
    4. '   ' → logprob: -11.002284049987793
    5. '<|end|>' → logprob: -11.377284049987793
    6. ' ' → logprob: -13.252284049987793
    7. '[' → logprob: -14.127284049987793
    8. '```' → logprob: -14.377284049987793
    9. ')' → logprob: -15.002284049987793
    10. '<|end|>' → logprob: -15.127284049987793

Token 35: '_times' (ID: 53425)
  Prédit: '_times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_times' → logprob: -0.11508374661207199
    2. '_' → logprob: -2.240083694458008
    3. ' =' → logprob: -7.240083694458008
    4. ' _' → logprob: -7.490083694458008
    5. '_t' → logprob: -8.240083694458008
    6. '=' → logprob: -8.615083694458008
    7. '_tim' → logprob: -8.990083694458008
    8. '_s' → logprob: -9.365083694458008
    9. '=_' → logprob: -9.865083694458008
    10. '()' → logprob: -10.240083694458008

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0021989059168845415
    2. '=' → logprob: -6.127198696136475
    3. '<|end|>' → logprob: -11.627199172973633
    4. ' ' → logprob: -13.127199172973633
    5. '=[]' → logprob: -13.752199172973633
    6. ')' → logprob: -14.127199172973633
    7. ' =
' → logprob: -15.252199172973633
    8. '<|end|>' → logprob: -15.252199172973633
    9. ',' → logprob: -15.877199172973633
    10. '.' → logprob: -16.377199172973633

Token 37: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.28178781270980835
    2. ' []' → logprob: -1.4067878723144531
    3. ' ' → logprob: -7.531787872314453
    4. '[]
' → logprob: -9.781787872314453
    5. '[' → logprob: -11.031787872314453
    6. ' []
' → logprob: -11.406787872314453
    7. '  ' → logprob: -12.656787872314453
    8. '   ' → logprob: -12.656787872314453
    9. '[]}' → logprob: -12.781787872314453
    10. '[]

' → logprob: -13.281787872314453

Token 38: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19980870187282562
    2. '   ' → logprob: -2.1998085975646973
    3. ' for' → logprob: -2.6998085975646973
    4. '<|end|>' → logprob: -6.574808597564697
    5. '
' → logprob: -7.074808597564697
    6. '```' → logprob: -8.449809074401855
    7. '	for' → logprob: -8.574809074401855
    8. '    
' → logprob: -8.949809074401855
    9. ' ' → logprob: -8.949809074401855
    10. ' 
' → logprob: -9.699809074401855

Token 39: ' supper' (ID: 120158)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0018518929136916995
    2. ' for' → logprob: -6.751852035522461
    3. 'max' → logprob: -7.501852035522461
    4. '   ' → logprob: -10.001852035522461
    5. 'times' → logprob: -10.876852035522461
    6. 'customers' → logprob: -11.626852035522461
    7. '```' → logprob: -12.251852035522461
    8. ')' → logprob: -12.376852035522461
    9. 'count' → logprob: -12.501852035522461
    10. 'break' → logprob: -12.501852035522461

Token 40: '_times' (ID: 53425)
  Prédit: '_times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_times' → logprob: -0.017089251428842545
    2. 's' → logprob: -4.517089366912842
    3. '_s' → logprob: -5.892089366912842
    4. '_' → logprob: -6.642089366912842
    5. ' =' → logprob: -6.642089366912842
    6. '=' → logprob: -7.767089366912842
    7. '_t' → logprob: -9.892088890075684
    8. '   ' → logprob: -9.892088890075684
    9. 'times' → logprob: -9.892088890075684
    10. '_tim' → logprob: -11.767088890075684

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12703657150268555
    2. '=' → logprob: -2.1270365715026855
    3. '=[]' → logprob: -9.502037048339844
    4. '   ' → logprob: -11.002037048339844
    5. ' ' → logprob: -11.627037048339844
    6. '[]' → logprob: -12.752037048339844
    7. ']' → logprob: -13.752037048339844
    8. '=[]
' → logprob: -13.752037048339844
    9. ':' → logprob: -14.002037048339844
    10. ')' → logprob: -14.252037048339844

Token 42: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.08909595012664795
    2. ' []' → logprob: -2.4640960693359375
    3. ' ' → logprob: -9.714096069335938
    4. '0' → logprob: -10.464096069335938
    5. '[]}' → logprob: -10.589096069335938
    6. '[]
' → logprob: -10.714096069335938
    7. '[' → logprob: -12.089096069335938
    8. '=[]' → logprob: -12.839096069335938
    9. '  ' → logprob: -13.089096069335938
    10. ' []
' → logprob: -13.589096069335938

Token 43: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35687631368637085
    2. '   ' → logprob: -1.8568763732910156
    3. ' for' → logprob: -2.3568763732910156
    4. '
' → logprob: -3.6068763732910156
    5. '<|end|>' → logprob: -4.106876373291016
    6. '    
' → logprob: -6.606876373291016
    7. ' 
' → logprob: -7.106876373291016
    8. '	for' → logprob: -7.231876373291016
    9. '```' → logprob: -7.481876373291016
    10. ' ' → logprob: -7.731876373291016

Token 44: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0025616264902055264
    2. ' for' → logprob: -6.002561569213867
    3. '   ' → logprob: -9.627561569213867
    4. '	for' → logprob: -11.377561569213867
    5. '
' → logprob: -13.127561569213867
    6. '```' → logprob: -13.377561569213867
    7. '<|end|>' → logprob: -13.752561569213867
    8. 'n' → logprob: -13.877561569213867
    9. '    
' → logprob: -14.127561569213867
    10. ' ' → logprob: -14.502561569213867

Token 45: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.016260985285043716
    2. ' i' → logprob: -4.766261100769043
    3. '_' → logprob: -5.266261100769043
    4. ' ' → logprob: -6.016261100769043
    5. ' range' → logprob: -11.766261100769043
    6. ' ' → logprob: -12.141261100769043
    7. 'i' → logprob: -13.891261100769043
    8. ' in' → logprob: -14.016261100769043
    9. ' ‌' → logprob: -14.641261100769043
    10. ' I' → logprob: -15.641261100769043

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0220299381762743
    2. 'in' → logprob: -4.272029876708984
    3. 'range' → logprob: -4.897029876708984
    4. '_' → logprob: -9.147029876708984
    5. 'n' → logprob: -9.397029876708984
    6. ' ' → logprob: -9.647029876708984
    7. ' range' → logprob: -9.897029876708984
    8. 'i' → logprob: -10.397029876708984
    9. 's' → logprob: -12.272029876708984
    10. ' _' → logprob: -12.522029876708984

Token 47: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009125363430939615
    2. ' range' → logprob: -7.000912666320801
    3. '(range' → logprob: -14.0009126663208
    4. 'rang' → logprob: -16.250911712646484
    5. 'ran' → logprob: -16.375911712646484
    6. 'input' → logprob: -17.250911712646484
    7. '```' → logprob: -17.375911712646484
    8. 'ange' → logprob: -18.000911712646484
    9. '	range' → logprob: -18.000911712646484
    10. 'r' → logprob: -18.250911712646484

Token 48: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3349965214729309
    2. ' N' → logprob: -1.7099964618682861
    3. '(N' → logprob: -2.584996461868286
    4. ' (' → logprob: -3.709996461868286
    5. ' range' → logprob: -6.834996700286865
    6. ' )' → logprob: -6.959996700286865
    7. ')' → logprob: -7.459996700286865
    8. ' ' → logprob: -7.459996700286865
    9. 'N' → logprob: -7.834996700286865
    10. 'range' → logprob: -8.959996223449707

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005436400882899761
    2. ')' → logprob: -5.505436420440674
    3. ' ):' → logprob: -7.255436420440674
    4. '):
' → logprob: -7.755436420440674
    5. ':' → logprob: -8.880435943603516
    6. '   ' → logprob: -10.255435943603516
    7. ' )' → logprob: -10.755435943603516
    8. ',' → logprob: -11.255435943603516
    9. '():' → logprob: -12.380435943603516
    10. '<|end|>' → logprob: -13.505435943603516

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012911133468151093
    2. '   ' → logprob: -4.512911319732666
    3. ' times' → logprob: -7.262911319732666
    4. '    ' → logprob: -8.387910842895508
    5. ' time' → logprob: -9.012910842895508
    6. ' ```' → logprob: -9.137910842895508
    7. '```' → logprob: -9.387910842895508
    8. ' line' → logprob: -9.637910842895508
    9. ' input' → logprob: -9.762910842895508
    10. 'time' → logprob: -10.012910842895508

Token 51: ' ast' (ID: 12004)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5836510062217712
    2. ' time' → logprob: -1.083651065826416
    3. 'time' → logprob: -3.458651065826416
    4. ' t' → logprob: -4.083651065826416
    5. ' arrival' → logprob: -4.833651065826416
    6. '   ' → logprob: -4.958651065826416
    7. ' meal' → logprob: -5.458651065826416
    8. ' times' → logprob: -5.583651065826416
    9. ' data' → logprob: -5.583651065826416
    10. 'line' → logprob: -5.708651065826416

Token 52: ',' (ID: 11)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0638505145907402
    2. 'er' → logprob: -3.6888504028320312
    3. 'ime' → logprob: -3.8138504028320312
    4. '_r' → logprob: -5.563850402832031
    5. 'ype' → logprob: -6.063850402832031
    6. 'ri' → logprob: -6.688850402832031
    7. 'udent' → logprob: -7.313850402832031
    8. 'ar' → logprob: -7.563850402832031
    9. 'rip' → logprob: -7.813850402832031
    10. '.r' → logprob: -7.938850402832031

Token 53: ' aet' (ID: 199194)
  Prédit: 'bst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bst' → logprob: -1.5055897235870361
    2. 'lst' → logprob: -1.7555897235870361
    3. ' bst' → logprob: -2.130589723587036
    4. 'a' → logprob: -2.630589723587036
    5. 'dst' → logprob: -2.630589723587036
    6. 'al' → logprob: -3.005589723587036
    7. 'at' → logprob: -4.130589485168457
    8. 'et' → logprob: -4.193089485168457
    9. 'ast' → logprob: -4.318089485168457
    10. 'b' → logprob: -4.443089485168457

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028453199192881584
    2. ' =' → logprob: -4.153453350067139
    3. '=' → logprob: -5.153453350067139
    4. ')' → logprob: -5.778453350067139
    5. ' ,' → logprob: -5.778453350067139
    6. 'ime' → logprob: -8.77845287322998
    7. ' )' → logprob: -9.65345287322998
    8. ' ' → logprob: -10.65345287322998
    9. 's' → logprob: -10.65345287322998
    10. ')=' → logprob: -10.77845287322998

Token 55: ' h' (ID: 312)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.04731383174657822
    2. ' lst' → logprob: -3.547313928604126
    3. 'sst' → logprob: -5.297313690185547
    4. 'l' → logprob: -6.172313690185547
    5. 'dst' → logprob: -6.172313690185547
    6. 's' → logprob: -6.297313690185547
    7. 'bst' → logprob: -6.672313690185547
    8. 'rst' → logprob: -6.672313690185547
    9. 'c' → logprob: -7.172313690185547
    10. 'st' → logprob: -7.422313690185547

Token 56: 'st' (ID: 302)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020000117365270853
    2. ' =' → logprob: -6.751999855041504
    3. '=' → logprob: -7.376999855041504
    4. '1' → logprob: -10.501999855041504
    5. ' ,' → logprob: -10.501999855041504
    6. ',m' → logprob: -10.751999855041504
    7. '   ' → logprob: -10.876999855041504
    8. ')' → logprob: -11.251999855041504
    9. '<|end|>' → logprob: -11.251999855041504
    10. 's' → logprob: -11.376999855041504

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017042214749380946
    2. ' =' → logprob: -6.626704216003418
    3. '=' → logprob: -8.126704216003418
    4. ' ,' → logprob: -10.001704216003418
    5. ')' → logprob: -11.126704216003418
    6. 's' → logprob: -11.626704216003418
    7. ' ' → logprob: -13.001704216003418
    8. '1' → logprob: -13.751704216003418
    9. ',m' → logprob: -13.876704216003418
    10. '   ' → logprob: -14.251704216003418

Token 58: ' het' (ID: 1448)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.5471329689025879
    2. 'hst' → logprob: -1.297132968902588
    3. ' m' → logprob: -3.797132968902588
    4. 'h' → logprob: -3.922132968902588
    5. ' hs' → logprob: -4.047132968902588
    6. 'm' → logprob: -4.047132968902588
    7. ' he' → logprob: -4.297132968902588
    8. ' ' → logprob: -4.547132968902588
    9. 'mst' → logprob: -4.672132968902588
    10. ' est' → logprob: -4.672132968902588

Token 59: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4901532828807831
    2. '=' → logprob: -1.1151533126831055
    3. ',' → logprob: -2.8651533126831055
    4. ')' → logprob: -5.9901533126831055
    5. '   ' → logprob: -10.115153312683105
    6. ' ' → logprob: -10.740153312683105
    7. '),' → logprob: -11.240153312683105
    8. ' ,' → logprob: -11.490153312683105
    9. '  ' → logprob: -11.740153312683105
    10. ')=' → logprob: -11.740153312683105

Token 60: ' bst' (ID: 157814)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.34769004583358765
    2. ' lst' → logprob: -1.3476901054382324
    3. 'l' → logprob: -4.222690105438232
    4. 'sst' → logprob: -5.097690105438232
    5. ' l' → logprob: -5.222690105438232
    6. 's' → logprob: -6.347690105438232
    7. ' s' → logprob: -6.472690105438232
    8. 'ls' → logprob: -7.722690105438232
    9. '_lst' → logprob: -7.722690105438232
    10. ' ' → logprob: -7.847690105438232

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009824917651712894
    2. '=' → logprob: -4.884824752807617
    3. ' =' → logprob: -6.134824752807617
    4. '<|end|>' → logprob: -10.759824752807617
    5. ')' → logprob: -11.134824752807617
    6. '<|end|>' → logprob: -12.134824752807617
    7. ' ,' → logprob: -12.384824752807617
    8. ' ' → logprob: -14.384824752807617
    9. 's' → logprob: -14.384824752807617
    10. '```' → logprob: -15.197324752807617

Token 62: ' bet' (ID: 1413)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7762712240219116
    2. ' b' → logprob: -1.1512712240219116
    3. ' bst' → logprob: -2.526271343231201
    4. 'bet' → logprob: -2.901271343231201
    5. 'bst' → logprob: -2.901271343231201
    6. 'best' → logprob: -4.026271343231201
    7. ' bet' → logprob: -4.776271343231201
    8. 'bs' → logprob: -5.651271343231201
    9. ' best' → logprob: -5.901271343231201
    10. ' ' → logprob: -7.776271343231201

Token 63: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8698338270187378
    2. ' =' → logprob: -0.9948338270187378
    3. ')' → logprob: -1.6198338270187378
    4. ',' → logprob: -4.369833946228027
    5. ')=' → logprob: -7.994833946228027
    6. '),' → logprob: -9.619833946228027
    7. '<|end|>' → logprob: -9.869833946228027
    8. '):' → logprob: -10.244833946228027
    9. ' ' → logprob: -10.744833946228027
    10. '   ' → logprob: -10.869833946228027

Token 64: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0015698568895459175
    2. ' input' → logprob: -7.126569747924805
    3. ' list' → logprob: -7.876569747924805
    4. 'map' → logprob: -8.001569747924805
    5. ' ' → logprob: -10.251569747924805
    6. '   ' → logprob: -12.251569747924805
    7. ' [' → logprob: -12.501569747924805
    8. 'input' → logprob: -13.126569747924805
    9. '[' → logprob: -13.501569747924805
    10. ' ' → logprob: -13.751569747924805

Token 65: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0014015485066920519
    2. '(' → logprob: -6.876401424407959
    3. '(str' → logprob: -8.376401901245117
    4. '(input' → logprob: -9.126401901245117
    5. '(lambda' → logprob: -11.126401901245117
    6. 'int' → logprob: -12.626401901245117
    7. '(time' → logprob: -13.126401901245117
    8. '(float' → logprob: -13.126401901245117
    9. '[int' → logprob: -13.251401901245117
    10. ' (' → logprob: -13.501401901245117

Token 66: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.14382167160511017
    2. ',input' → logprob: -2.2688217163085938
    3. ')' → logprob: -3.8938217163085938
    4. 'input' → logprob: -5.143821716308594
    5. ',' → logprob: -5.893821716308594
    6. '(' → logprob: -6.643821716308594
    7. ' input' → logprob: -9.518821716308594
    8. '=input' → logprob: -9.768821716308594
    9. '()' → logprob: -10.018821716308594
    10. '(),' → logprob: -11.143821716308594

Token 67: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0031784253660589457
    2. ' input' → logprob: -5.753178596496582
    3. ')' → logprob: -14.503178596496582
    4. ',input' → logprob: -17.253177642822266
    5. '   ' → logprob: -17.378177642822266
    6. '=input' → logprob: -17.628177642822266
    7. '(input' → logprob: -17.753177642822266
    8. '```' → logprob: -17.753177642822266
    9. ' ' → logprob: -18.003177642822266
    10. '	input' → logprob: -18.128177642822266

Token 68: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.392202976712724e-06
    2. '()' → logprob: -12.375006675720215
    3. ')' → logprob: -13.500006675720215
    4. ' ().' → logprob: -14.375006675720215
    5. '(' → logprob: -17.0000057220459
    6. 'split' → logprob: -17.5000057220459
    7. '.' → logprob: -17.5000057220459
    8. '())' → logprob: -17.5000057220459
    9. '   ' → logprob: -17.6250057220459
    10. '.split' → logprob: -17.7500057220459

Token 69: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020592445798683912
    2. 'strip' → logprob: -8.500205993652344
    3. ' split' → logprob: -14.000205993652344
    4. 'rstrip' → logprob: -14.250205993652344
    5. 'spl' → logprob: -14.500205993652344
    6. '(split' → logprob: -14.750205993652344
    7. 's' → logprob: -18.375205993652344
    8. 'sp' → logprob: -19.250205993652344
    9. '.split' → logprob: -19.250205993652344
    10. ')' → logprob: -19.625205993652344

Token 70: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0037313217762857676
    2. '()' → logprob: -5.7537312507629395
    3. ')' → logprob: -7.7537312507629395
    4. '()))' → logprob: -9.128731727600098
    5. '(' → logprob: -11.378731727600098
    6. '())
' → logprob: -13.003731727600098
    7. '))' → logprob: -13.753731727600098
    8. ' ())' → logprob: -14.878731727600098
    9. '('' → logprob: -15.128731727600098
    10. '()),' → logprob: -16.62873077392578

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4019320607185364
    2. ')' → logprob: -1.2769320011138916
    3. '   ' → logprob: -3.5269320011138916
    4. '    
' → logprob: -5.026932239532471
    5. '        
' → logprob: -5.026932239532471
    6. ' )' → logprob: -5.776932239532471
    7. '
' → logprob: -6.401932239532471
    8. '<|end|>' → logprob: -6.901932239532471
    9. ')
' → logprob: -7.151932239532471
    10. '    ' → logprob: -7.276932239532471

Token 72: ' breakfast' (ID: 16356)
  Prédit: ' breakfast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' breakfast' → logprob: -0.17418977618217468
    2. '       ' → logprob: -2.174189805984497
    3. '   ' → logprob: -3.799189805984497
    4. ' ast' → logprob: -5.049189567565918
    5. 'break' → logprob: -5.924189567565918
    6. ')' → logprob: -6.049189567565918
    7. '        
' → logprob: -6.424189567565918
    8. ' if' → logprob: -6.674189567565918
    9. ' breakfasts' → logprob: -6.799189567565918
    10. '
' → logprob: -6.924189567565918

Token 73: '_times' (ID: 53425)
  Prédit: '_times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_times' → logprob: -5.955703818472102e-05
    2. '_' → logprob: -10.750059127807617
    3. '_t' → logprob: -11.000059127807617
    4. '_time' → logprob: -11.750059127807617
    5. '_start' → logprob: -12.375059127807617
    6. 'times' → logprob: -12.500059127807617
    7. '_tim' → logprob: -13.125059127807617
    8. '_to' → logprob: -14.000059127807617
    9. '_s' → logprob: -14.250059127807617
    10. '_end' → logprob: -14.625059127807617

Token 74: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004224066622555256
    2. '.' → logprob: -5.5042243003845215
    3. '.extend' → logprob: -8.879223823547363
    4. '.ap' → logprob: -13.254223823547363
    5. '.setdefault' → logprob: -14.004223823547363
    6. ' .' → logprob: -14.129223823547363
    7. 'append' → logprob: -14.129223823547363
    8. '.app' → logprob: -14.379223823547363
    9. '.add' → logprob: -14.629223823547363
    10. '.push' → logprob: -15.004223823547363

Token 75: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.023324089124798775
    2. '(' → logprob: -3.7733240127563477
    3. '(b' → logprob: -10.023324012756348
    4. '(time' → logprob: -10.648324012756348
    5. '(
' → logprob: -12.273324012756348
    6. '([' → logprob: -13.398324012756348
    7. '(((' → logprob: -13.898324012756348
    8. '(t' → logprob: -14.273324012756348
    9. '(('' → logprob: -14.398324012756348
    10. '(

' → logprob: -14.898324012756348

Token 76: 'time' (ID: 4580)
  Prédit: 'time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.24647638201713562
    2. 'bst' → logprob: -2.121476411819458
    3. 'bet' → logprob: -2.746476411819458
    4. ' time' → logprob: -3.621476411819458
    5. ' bst' → logprob: -5.121476173400879
    6. 'ast' → logprob: -7.371476173400879
    7. 'bs' → logprob: -8.246476173400879
    8. ' bet' → logprob: -8.371476173400879
    9. ' ast' → logprob: -9.371476173400879
    10. 'bets' → logprob: -9.621476173400879

Token 77: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.4855663721391466e-05
    2. '_t' → logprob: -11.250015258789062
    3. 'to' → logprob: -14.125015258789062
    4. ' _' → logprob: -14.500015258789062
    5. '_' → logprob: -15.250015258789062
    6. 'To' → logprob: -15.625015258789062
    7. 't' → logprob: -16.625015258789062
    8. ')_' → logprob: -17.000015258789062
    9. '_TO' → logprob: -17.250015258789062
    10. ' to' → logprob: -17.750015258789062

Token 78: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.000442351185483858
    2. '_' → logprob: -8.125442504882812
    3. 'min' → logprob: -8.875442504882812
    4. '_m' → logprob: -12.750442504882812
    5. ' min' → logprob: -14.375442504882812
    6. '_max' → logprob: -14.500442504882812
    7. ' _' → logprob: -14.500442504882812
    8. '_minutes' → logprob: -15.000442504882812
    9. '_hour' → logprob: -15.125442504882812
    10. '_hr' → logprob: -15.750442504882812

Token 79: '(ast' (ID: 118219)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0007176732178777456
    2. '(' → logprob: -7.875717639923096
    3. '(ast' → logprob: -9.375718116760254
    4. '(bs' → logprob: -9.875718116760254
    5. ')(' → logprob: -10.125718116760254
    6. ' (' → logprob: -10.250718116760254
    7. '(bt' → logprob: -10.375718116760254
    8. 'bst' → logprob: -10.875718116760254
    9. ' bst' → logprob: -11.375718116760254
    10. '(h' → logprob: -11.500718116760254

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010891393758356571
    2. ' ,' → logprob: -7.001089096069336
    3. '),' → logprob: -8.751089096069336
    4. ')' → logprob: -12.251089096069336
    5. '‌,' → logprob: -12.876089096069336
    6. ',h' → logprob: -13.251089096069336
    7. '```' → logprob: -13.376089096069336
    8. ' ' → logprob: -13.501089096069336
    9. ',
' → logprob: -13.876089096069336
    10. ',b' → logprob: -14.251089096069336

Token 81: ' aet' (ID: 199194)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0012155943550169468
    2. ' aet' → logprob: -6.87621545791626
    3. ' a' → logprob: -8.876215934753418
    4. '0' → logprob: -11.376215934753418
    5. ' ' → logprob: -11.376215934753418
    6. 'ae' → logprob: -12.001215934753418
    7. '	a' → logprob: -12.001215934753418
    8. 'ast' → logprob: -13.251215934753418
    9. ')a' → logprob: -13.626215934753418
    10. '   ' → logprob: -13.751215934753418

Token 82: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13216504454612732
    2. '))' → logprob: -2.38216495513916
    3. ')))' → logprob: -4.13216495513916
    4. ')' → logprob: -4.88216495513916
    5. '),' → logprob: -5.50716495513916
    6. ' ,' → logprob: -6.00716495513916
    7. ' ))' → logprob: -6.88216495513916
    8. ' ' → logprob: -9.63216495513916
    9. ' )' → logprob: -9.88216495513916
    10. ')),' → logprob: -10.38216495513916

Token 83: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.22581151127815247
    2. ' time' → logprob: -1.60081148147583
    3. 'bet' → logprob: -9.600811958312988
    4. ')' → logprob: -9.725811958312988
    5. '(time' → logprob: -9.725811958312988
    6. ' ' → logprob: -10.100811958312988
    7. '   ' → logprob: -10.850811958312988
    8. ' (' → logprob: -10.850811958312988
    9. ' bst' → logprob: -11.100811958312988
    10. ' bet' → logprob: -11.475811958312988

Token 84: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -3.292907877039397e-06
    2. 'to' → logprob: -12.87500286102295
    3. ' to' → logprob: -15.50000286102295
    4. ')' → logprob: -16.000003814697266
    5. 'To' → logprob: -16.125003814697266
    6. '))' → logprob: -16.875003814697266
    7. 's' → logprob: -17.625003814697266
    8. '_TO' → logprob: -17.750003814697266
    9. 't' → logprob: -18.000003814697266
    10. '-to' → logprob: -18.125003814697266

Token 85: '_min' (ID: 15950)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4763272702693939
    2. '_min' → logprob: -0.9763273000717163
    3. 'bst' → logprob: -6.851327419281006
    4. 'm' → logprob: -7.601327419281006
    5. 'bet' → logprob: -7.851327419281006
    6. 'mst' → logprob: -8.851326942443848
    7. 'ast' → logprob: -10.101326942443848
    8. '_m' → logprob: -10.351326942443848
    9. 's' → logprob: -11.226326942443848
    10. 'hst' → logprob: -11.226326942443848

Token 86: '(a' (ID: 6271)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.03431977331638336
    2. '(b' → logprob: -3.4093198776245117
    3. ' (' → logprob: -7.784319877624512
    4. '(' → logprob: -8.909319877624512
    5. 'bst' → logprob: -10.534319877624512
    6. '(st' → logprob: -10.659319877624512
    7. ' bst' → logprob: -10.659319877624512
    8. ' h' → logprob: -11.284319877624512
    9. ' ' → logprob: -11.659319877624512
    10. '(s' → logprob: -12.159319877624512

Token 87: 'et' (ID: 292)
  Prédit: 'bst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bst' → logprob: -0.4742903709411621
    2. 'hst' → logprob: -1.099290370941162
    3. 'st' → logprob: -4.349290370941162
    4. 'h' → logprob: -4.349290370941162
    5. ' bst' → logprob: -4.849290370941162
    6. ' h' → logprob: -5.724290370941162
    7. 'hs' → logprob: -5.724290370941162
    8. 'bs' → logprob: -6.849290370941162
    9. ' ' → logprob: -7.224290370941162
    10. 'sst' → logprob: -8.34929084777832

Token 88: ',' (ID: 11)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.4543699026107788
    2. ',' → logprob: -1.0793699026107788
    3. ')' → logprob: -3.8293700218200684
    4. '))' → logprob: -6.329370021820068
    5. '),' → logprob: -6.829370021820068
    6. ')));' → logprob: -8.70436954498291
    7. ' ' → logprob: -8.82936954498291
    8. '')))' → logprob: -9.45436954498291
    9. ')))

' → logprob: -9.95436954498291
    10. ')),' → logprob: -9.95436954498291

Token 89: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.30405741930007935
    2. ' ' → logprob: -1.5540573596954346
    3. 'h' → logprob: -3.6790573596954346
    4. ' h' → logprob: -4.179057598114014
    5. 'bst' → logprob: -5.304057598114014
    6. 'hst' → logprob: -6.304057598114014
    7. ' bst' → logprob: -6.429057598114014
    8. '   ' → logprob: -8.241557121276855
    9. '  ' → logprob: -8.554057121276855
    10. ' a' → logprob: -8.554057121276855

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.035717178136110306
    2. ' ' → logprob: -3.660717248916626
    3. 'bst' → logprob: -5.410717010498047
    4. 'hst' → logprob: -5.785717010498047
    5. 'h' → logprob: -7.035717010498047
    6. '   ' → logprob: -8.535717010498047
    7. '  ' → logprob: -9.035717010498047
    8. 'ast' → logprob: -9.223217010498047
    9. ' h' → logprob: -9.285717010498047
    10. ' bst' → logprob: -9.723217010498047

Token 91: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.08377499133348465
    2. ')' → logprob: -2.708775043487549
    3. '))' → logprob: -4.458775043487549
    4. '),' → logprob: -6.833775043487549
    5. ' ' → logprob: -6.958775043487549
    6. '0' → logprob: -10.58377456665039
    7. ')))
' → logprob: -10.95877456665039
    8. '))))' → logprob: -11.33377456665039
    9. '1' → logprob: -11.70877456665039
    10. ')))

' → logprob: -11.70877456665039

Token 92: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003018114482983947
    2. ',' → logprob: -6.753017902374268
    3. '))' → logprob: -7.753017902374268
    4. ' ' → logprob: -8.128018379211426
    5. '[' → logprob: -8.378018379211426
    6. '<|end|>' → logprob: -8.878018379211426
    7. ' )' → logprob: -9.128018379211426
    8. '),' → logprob: -9.128018379211426
    9. ')
' → logprob: -9.253018379211426
    10. '+' → logprob: -9.503018379211426

Token 93: ' lunch' (ID: 17418)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12740354239940643
    2. ' (' → logprob: -3.252403497695923
    3. '(time' → logprob: -3.502403497695923
    4. ')' → logprob: -4.377403736114502
    5. ' bst' → logprob: -4.752403736114502
    6. '(b' → logprob: -5.502403736114502
    7. '<|end|>' → logprob: -5.627403736114502
    8. 'bst' → logprob: -5.752403736114502
    9. '(
' → logprob: -5.752403736114502
    10. '       ' → logprob: -6.002403736114502

Token 94: '_times' (ID: 53425)
  Prédit: '_times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_times' → logprob: -9.014684110297821e-06
    2. 'times' → logprob: -12.500008583068848
    3. '```' → logprob: -14.125008583068848
    4. '_sizes' → logprob: -14.375008583068848
    5. '_' → logprob: -14.750008583068848
    6. 's' → logprob: -15.125008583068848
    7. '_to' → logprob: -15.375008583068848
    8. ')_' → logprob: -15.500008583068848
    9. '<|end|>' → logprob: -15.500008583068848
    10. '   ' → logprob: -15.500008583068848

Token 95: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001029471677611582
    2. '.' → logprob: -9.250102996826172
    3. '.extend' → logprob: -13.125102996826172
    4. '.setdefault' → logprob: -13.250102996826172
    5. 'append' → logprob: -13.750102996826172
    6. '<|end|>' → logprob: -14.125102996826172
    7. ').' → logprob: -15.250102996826172
    8. '.add' → logprob: -15.250102996826172
    9. '.Append' → logprob: -15.250102996826172
    10. ' .' → logprob: -15.625102996826172

Token 96: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0009858887642621994
    2. '(' → logprob: -7.250986099243164
    3. '(time' → logprob: -8.250986099243164
    4. ' (' → logprob: -11.875986099243164
    5. ' ((' → logprob: -12.125986099243164
    6. ' ' → logprob: -14.625986099243164
    7. '<|end|>' → logprob: -14.750986099243164
    8. '(('' → logprob: -14.875986099243164
    9. '(t' → logprob: -15.375986099243164
    10. '(times' → logprob: -15.750986099243164

Token 97: 'time' (ID: 4580)
  Prédit: 'time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.5866550803184509
    2. '(time' → logprob: -0.8366550803184509
    3. ' time' → logprob: -4.586655139923096
    4. ' (' → logprob: -8.211654663085938
    5. '(h' → logprob: -9.211654663085938
    6. '(' → logprob: -9.961654663085938
    7. 'hst' → logprob: -10.961654663085938
    8. 'h' → logprob: -11.461654663085938
    9. '	time' → logprob: -12.211654663085938
    10. '"time' → logprob: -12.461654663085938

Token 98: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.00021105022460687906
    2. 'to' → logprob: -8.500210762023926
    3. 'To' → logprob: -12.500210762023926
    4. ' to' → logprob: -13.375210762023926
    5. ')' → logprob: -14.750210762023926
    6. '_' → logprob: -14.750210762023926
    7. '(' → logprob: -15.250210762023926
    8. 'min' → logprob: -15.750210762023926
    9. 't' → logprob: -16.125211715698242
    10. 'tolist' → logprob: -16.375211715698242

Token 99: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.3486398756504059
    2. 'min' → logprob: -1.2236398458480835
    3. 'time' → logprob: -9.598639488220215
    4. ' min' → logprob: -9.723639488220215
    5. 'bst' → logprob: -10.848639488220215
    6. 'int' → logprob: -11.223639488220215
    7. '(min' → logprob: -12.098639488220215
    8. 'in' → logprob: -12.598639488220215
    9. ')' → logprob: -12.723639488220215
    10. 'ast' → logprob: -12.723639488220215

Token 100: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.006072656717151403
    2. ' (' → logprob: -5.631072521209717
    3. '(' → logprob: -6.131072521209717
    4. ' h' → logprob: -8.756072998046875
    5. 'hst' → logprob: -9.756072998046875
    6. '(b' → logprob: -10.631072998046875
    7. '(st' → logprob: -11.381072998046875
    8. 'h' → logprob: -12.006072998046875
    9. '(l' → logprob: -12.256072998046875
    10. ' ' → logprob: -12.256072998046875

Token 101: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.00033522743615321815
    2. ' st' → logprob: -8.125335693359375
    3. ' ' → logprob: -12.062835693359375
    4. 'bst' → logprob: -12.812835693359375
    5. 'hst' → logprob: -12.937835693359375
    6. 'h' → logprob: -13.062835693359375
    7. 's' → logprob: -13.062835693359375
    8. ',' → logprob: -13.125335693359375
    9. '
' → logprob: -13.187835693359375
    10. 'ст' → logprob: -13.375335693359375

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7385154428193346e-05
    2. ' ,' → logprob: -10.25003719329834
    3. '),' → logprob: -14.00003719329834
    4. ')' → logprob: -15.62503719329834
    5. ',
' → logprob: -15.62503719329834
    6. 's' → logprob: -15.87503719329834
    7. ',h' → logprob: -16.000038146972656
    8. '‌,' → logprob: -16.750038146972656
    9. '<|end|>' → logprob: -17.000038146972656
    10. '7' → logprob: -17.187538146972656

Token 103: ' het' (ID: 1448)
  Prédit: 'het'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'het' → logprob: -0.04625986889004707
    2. ' het' → logprob: -3.296259880065918
    3. 'hst' → logprob: -5.546259880065918
    4. '0' → logprob: -6.296259880065918
    5. ' ' → logprob: -6.421259880065918
    6. '   ' → logprob: -8.921259880065918
    7. 'ht' → logprob: -9.296259880065918
    8. 'hets' → logprob: -9.546259880065918
    9. 'h' → logprob: -9.921259880065918
    10. '  ' → logprob: -9.921259880065918

Token 104: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.016827184706926346
    2. ',' → logprob: -4.14182710647583
    3. ')))' → logprob: -7.64182710647583
    4. ')' → logprob: -8.266827583312988
    5. ' ),' → logprob: -10.141827583312988
    6. ',),' → logprob: -12.141827583312988
    7. '))' → logprob: -12.891827583312988
    8. '0' → logprob: -13.766827583312988
    9. '1' → logprob: -13.891827583312988
    10. ')),' → logprob: -13.891827583312988

Token 105: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.20173120498657227
    2. 'time' → logprob: -1.7017312049865723
    3. '(time' → logprob: -8.076730728149414
    4. ' (' → logprob: -12.826730728149414
    5. ' ' → logprob: -13.326730728149414
    6. '   ' → logprob: -13.326730728149414
    7. '    ' → logprob: -14.951730728149414
    8. '	time' → logprob: -14.951730728149414
    9. '       ' → logprob: -15.826730728149414
    10. '        ' → logprob: -15.951730728149414

Token 106: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -7.20734242349863e-05
    2. 'to' → logprob: -10.125072479248047
    3. ')' → logprob: -10.875072479248047
    4. ' to' → logprob: -12.000072479248047
    5. ')_' → logprob: -13.250072479248047
    6. 'To' → logprob: -13.375072479248047
    7. '))' → logprob: -14.000072479248047
    8. '```' → logprob: -14.375072479248047
    9. '(' → logprob: -15.125072479248047
    10. ',' → logprob: -15.250072479248047

Token 107: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.07061948627233505
    2. 'min' → logprob: -2.695619583129883
    3. ' min' → logprob: -7.320619583129883
    4. 'm' → logprob: -11.945619583129883
    5. '_m' → logprob: -12.070619583129883
    6. ' ' → logprob: -13.820619583129883
    7. 'bst' → logprob: -13.820619583129883
    8. '_max' → logprob: -13.820619583129883
    9. '60' → logprob: -14.070619583129883
    10. '_h' → logprob: -14.695619583129883

Token 108: '(' (ID: 7)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.6350199580192566
    2. '(b' → logprob: -0.7600199580192566
    3. '(' → logprob: -6.135019779205322
    4. ' (' → logprob: -9.26002025604248
    5. 'bst' → logprob: -10.38502025604248
    6. '(ast' → logprob: -10.63502025604248
    7. '(m' → logprob: -10.88502025604248
    8. '(lst' → logprob: -11.26002025604248
    9. '((' → logprob: -11.76002025604248
    10. '(a' → logprob: -11.76002025604248

Token 109: 'het' (ID: 5785)
  Prédit: 'bst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bst' → logprob: -0.5238405466079712
    2. 'hst' → logprob: -0.8988405466079712
    3. 'h' → logprob: -8.14884090423584
    4. 'het' → logprob: -8.52384090423584
    5. 'hs' → logprob: -8.89884090423584
    6. 'bet' → logprob: -11.14884090423584
    7. 'ht' → logprob: -11.27384090423584
    8. ' bst' → logprob: -11.39884090423584
    9. 'bh' → logprob: -11.52384090423584
    10. '0' → logprob: -11.52384090423584

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8193366486229934e-05
    2. ' ,' → logprob: -11.125018119812012
    3. '0' → logprob: -14.250018119812012
    4. 's' → logprob: -14.250018119812012
    5. ' ' → logprob: -14.500018119812012
    6. ')' → logprob: -14.875018119812012
    7. '   ' → logprob: -15.500018119812012
    8. '```' → logprob: -16.000019073486328
    9. ',
' → logprob: -16.250019073486328
    10. 'h' → logprob: -16.500019073486328

Token 111: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021905910689383745
    2. ' ' → logprob: -6.127190589904785
    3. 'bst' → logprob: -13.002190589904785
    4. ' bst' → logprob: -13.377190589904785
    5. '```' → logprob: -14.877190589904785
    6. '30' → logprob: -15.377190589904785
    7. ')' → logprob: -15.627190589904785
    8. '00' → logprob: -15.877190589904785
    9. ' ' → logprob: -16.1271915435791
    10. '``' → logprob: -16.1271915435791

Token 112: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004897649050690234
    2. ' ' → logprob: -7.625489711761475
    3. '00' → logprob: -14.000490188598633
    4. '   ' → logprob: -15.750490188598633
    5. 'bst' → logprob: -15.750490188598633
    6. '```' → logprob: -15.750490188598633
    7. '30' → logprob: -15.875490188598633
    8. ' bst' → logprob: -16.250490188598633
    9. ')' → logprob: -16.937990188598633
    10. '  ' → logprob: -17.062990188598633

Token 113: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.35778138041496277
    2. ')))' → logprob: -1.4827814102172852
    3. ')' → logprob: -2.607781410217285
    4. ' ))' → logprob: -11.107781410217285
    5. '),' → logprob: -11.857781410217285
    6. ')))
' → logprob: -11.857781410217285
    7. '))))' → logprob: -12.107781410217285
    8. '))
' → logprob: -12.107781410217285
    9. ')
' → logprob: -12.357781410217285
    10. '       ' → logprob: -12.482781410217285

Token 114: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023660168517380953
    2. '<|end|>' → logprob: -7.002366065979004
    3. ',' → logprob: -8.127366065979004
    4. '   ' → logprob: -8.377366065979004
    5. ')
' → logprob: -8.877366065979004
    6. '\n' → logprob: -9.002366065979004
    7. '[' → logprob: -9.127366065979004
    8. ' ' → logprob: -9.252366065979004
    9. '_' → logprob: -9.627366065979004
    10. 'newline' → logprob: -9.877366065979004

Token 115: ' supper' (ID: 120158)
  Prédit: ' breakfast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' breakfast' → logprob: -0.6824575662612915
    2. 'break' → logprob: -0.9324575662612915
    3. '(' → logprob: -2.932457447052002
    4. ' (' → logprob: -4.557457447052002
    5. '(
' → logprob: -4.557457447052002
    6. ')' → logprob: -5.432457447052002
    7. 's' → logprob: -5.557457447052002
    8. '       ' → logprob: -5.557457447052002
    9. '(b' → logprob: -5.682457447052002
    10. '(s' → logprob: -6.057457447052002

Token 116: '_times' (ID: 53425)
  Prédit: '_times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_times' → logprob: -7.3458322731312364e-06
    2. '_s' → logprob: -12.875007629394531
    3. 's' → logprob: -13.125007629394531
    4. 'times' → logprob: -13.125007629394531
    5. '```' → logprob: -16.12500762939453
    6. '_sizes' → logprob: -16.25000762939453
    7. ')_' → logprob: -17.12500762939453
    8. '_tasks' → logprob: -17.25000762939453
    9. '('_' → logprob: -17.37500762939453
    10. '_tim' → logprob: -17.37500762939453

Token 117: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00017970333283301443
    2. '.' → logprob: -8.750179290771484
    3. '.setdefault' → logprob: -11.750179290771484
    4. ').' → logprob: -12.375179290771484
    5. 'append' → logprob: -12.750179290771484
    6. '.extend' → logprob: -13.250179290771484
    7. '.app' → logprob: -13.500179290771484
    8. '.Append' → logprob: -14.250179290771484
    9. '<|end|>' → logprob: -14.875179290771484
    10. '.add' → logprob: -15.000179290771484

Token 118: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00011558275582501665
    2. '(' → logprob: -9.125115394592285
    3. '(time' → logprob: -12.000115394592285
    4. ' ((' → logprob: -15.875115394592285
    5. '(('' → logprob: -16.0001163482666
    6. ' ' → logprob: -16.3751163482666
    7. '(
' → logprob: -16.8751163482666
    8. '   ' → logprob: -17.0001163482666
    9. '  ' → logprob: -17.5001163482666
    10. ' (' → logprob: -17.6251163482666

Token 119: 'time' (ID: 4580)
  Prédit: 'time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -7.803360495017841e-05
    2. ' time' → logprob: -9.625078201293945
    3. 'bet' → logprob: -12.125078201293945
    4. 'bst' → logprob: -12.375078201293945
    5. '(time' → logprob: -13.125078201293945
    6. 'b' → logprob: -16.500078201293945
    7. '   ' → logprob: -16.500078201293945
    8. 'bt' → logprob: -17.750078201293945
    9. '	time' → logprob: -18.000078201293945
    10. 'bs' → logprob: -18.500078201293945

Token 120: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -4.167648876318708e-05
    2. 'to' → logprob: -10.125041961669922
    3. 'To' → logprob: -13.875041961669922
    4. ' to' → logprob: -14.625041961669922
    5. ')' → logprob: -17.500041961669922
    6. '-to' → logprob: -18.125041961669922
    7. '```' → logprob: -18.125041961669922
    8. '_TO' → logprob: -18.375041961669922
    9. '_min' → logprob: -18.625041961669922
    10. '_' → logprob: -18.875041961669922

Token 121: '_min' (ID: 15950)
  Prédit: 'bst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bst' → logprob: -0.04817098751664162
    2. 'min' → logprob: -3.548171043395996
    3. 'bet' → logprob: -4.548171043395996
    4. 'st' → logprob: -6.173171043395996
    5. 'mst' → logprob: -6.298171043395996
    6. 'hst' → logprob: -6.298171043395996
    7. 'm' → logprob: -7.423171043395996
    8. 's' → logprob: -7.548171043395996
    9. ' bst' → logprob: -7.798171043395996
    10. '_min' → logprob: -8.923171043395996

Token 122: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0001793457195162773
    2. 'bst' → logprob: -9.375179290771484
    3. '(s' → logprob: -9.875179290771484
    4. '(bs' → logprob: -11.125179290771484
    5. '(' → logprob: -11.500179290771484
    6. ' bst' → logprob: -11.750179290771484
    7. '((' → logprob: -13.375179290771484
    8. ')' → logprob: -13.625179290771484
    9. '   ' → logprob: -13.750179290771484
    10. '	b' → logprob: -13.875179290771484

Token 123: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -9.491498531133402e-06
    2. 'et' → logprob: -12.750009536743164
    3. 's' → logprob: -13.000009536743164
    4. ' st' → logprob: -13.000009536743164
    5. 'bst' → logprob: -13.500009536743164
    6. 'ст' → logprob: -15.375009536743164
    7. 'bet' → logprob: -16.000009536743164
    8. ',' → logprob: -16.125009536743164
    9. 'est' → logprob: -17.125009536743164
    10. 'sp' → logprob: -17.500009536743164

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.723973582556937e-05
    2. ' ,' → logprob: -11.375017166137695
    3. ' bet' → logprob: -13.125017166137695
    4. ',b' → logprob: -13.375017166137695
    5. 'bet' → logprob: -14.000017166137695
    6. '),' → logprob: -14.125017166137695
    7. ',
' → logprob: -15.000017166137695
    8. ')' → logprob: -15.625017166137695
    9. '```' → logprob: -16.500017166137695
    10. ',

' → logprob: -17.500017166137695

Token 125: ' bet' (ID: 1413)
  Prédit: 'bet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bet' → logprob: -0.18008218705654144
    2. ' bet' → logprob: -1.8050822019577026
    3. ',' → logprob: -8.055082321166992
    4. 'bt' → logprob: -11.930082321166992
    5. 'beta' → logprob: -12.805082321166992
    6. 'b' → logprob: -13.180082321166992
    7. ' ' → logprob: -13.555082321166992
    8. '0' → logprob: -13.805082321166992
    9. ' ,' → logprob: -14.180082321166992
    10. 'be' → logprob: -14.305082321166992

Token 126: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6521822214126587
    2. '),' → logprob: -0.7771822214126587
    3. ')))' → logprob: -4.027182102203369
    4. '))' → logprob: -7.402182102203369
    5. ')),' → logprob: -7.652182102203369
    6. '0' → logprob: -8.527182579040527
    7. ')' → logprob: -9.402182579040527
    8. ',b' → logprob: -9.902182579040527
    9. ' ,' → logprob: -10.527182579040527
    10. '))),' → logprob: -10.902182579040527

Token 127: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.5760184526443481
    2. ' time' → logprob: -0.8260184526443481
    3. '(time' → logprob: -10.326018333435059
    4. 'bet' → logprob: -10.701018333435059
    5. ' bet' → logprob: -11.576018333435059
    6. 'b' → logprob: -11.951018333435059
    7. ' (' → logprob: -12.951018333435059
    8. '0' → logprob: -13.201018333435059
    9. ')' → logprob: -13.701018333435059
    10. ' ' → logprob: -14.201018333435059

Token 128: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.00038837024476379156
    2. 'to' → logprob: -8.000388145446777
    3. ')' → logprob: -10.875388145446777
    4. 'To' → logprob: -11.125388145446777
    5. ' to' → logprob: -11.250388145446777
    6. ',' → logprob: -13.375388145446777
    7. '_' → logprob: -13.500388145446777
    8. '*' → logprob: -14.000388145446777
    9. ')_' → logprob: -14.500388145446777
    10. '))' → logprob: -14.875388145446777

Token 129: '_min' (ID: 15950)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.1805392950773239
    2. '0' → logprob: -2.55553936958313
    3. ' min' → logprob: -3.80553936958313
    4. '_min' → logprob: -4.055539131164551
    5. ' ' → logprob: -4.305539131164551
    6. 'm' → logprob: -4.430539131164551
    7. '60' → logprob: -5.055539131164551
    8. '(' → logprob: -5.180539131164551
    9. 'bet' → logprob: -5.430539131164551
    10. ' bet' → logprob: -6.930539131164551

Token 130: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.16121363639831543
    2. 'bet' → logprob: -1.9112136363983154
    3. '(' → logprob: -7.1612138748168945
    4. ' bet' → logprob: -9.661213874816895
    5. '(beta' → logprob: -10.536213874816895
    6. ')' → logprob: -10.661213874816895
    7. '(bot' → logprob: -11.036213874816895
    8. '(s' → logprob: -11.036213874816895
    9. 'b' → logprob: -12.036213874816895
    10. '0' → logprob: -12.036213874816895

Token 131: 'et' (ID: 292)
  Prédit: 'et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.011246467009186745
    2. 'bet' → logprob: -5.011246681213379
    3. ',' → logprob: -6.261246681213379
    4. 's' → logprob: -6.886246681213379
    5. 'est' → logprob: -8.386246681213379
    6. 'sup' → logprob: -8.386246681213379
    7. 'ett' → logprob: -8.636246681213379
    8. ')' → logprob: -8.761246681213379
    9. 'st' → logprob: -8.886246681213379
    10. '))' → logprob: -9.136246681213379

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.5491004129871726e-05
    2. '0' → logprob: -10.750045776367188
    3. ')))' → logprob: -11.750045776367188
    4. ' ,' → logprob: -12.000045776367188
    5. '))' → logprob: -12.375045776367188
    6. ')' → logprob: -12.625045776367188
    7. '```' → logprob: -14.500045776367188
    8. ',
' → logprob: -15.125045776367188
    9. ' ' → logprob: -15.250045776367188
    10. 'b' → logprob: -15.250045776367188

Token 133: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021896373946219683
    2. ' ' → logprob: -6.127189636230469
    3. 'bet' → logprob: -13.502189636230469
    4. '   ' → logprob: -14.377189636230469
    5. '1' → logprob: -14.689689636230469
    6. ' bet' → logprob: -15.002189636230469
    7. 'b' → logprob: -15.689689636230469
    8. '```' → logprob: -15.689689636230469
    9. ')' → logprob: -15.752189636230469
    10. '))' → logprob: -15.752189636230469

Token 134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. ',' → logprob: -16.875003814697266
    4. ')' → logprob: -17.000003814697266
    5. '1' → logprob: -17.375003814697266
    6. '```' → logprob: -17.500003814697266
    7. 'bet' → logprob: -17.562503814697266
    8. '00' → logprob: -17.812503814697266
    9. '))' → logprob: -18.250003814697266
    10. 'b' → logprob: -18.250003814697266

Token 135: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.007404892705380917
    2. ')' → logprob: -5.007404804229736
    3. ')))' → logprob: -7.632404804229736
    4. '))
' → logprob: -8.507405281066895
    5. ')
' → logprob: -13.632405281066895
    6. ' ))' → logprob: -14.632405281066895
    7. '   ' → logprob: -15.507405281066895
    8. '))))' → logprob: -15.507405281066895
    9. '))

' → logprob: -15.757405281066895
    10. ''))' → logprob: -16.007404327392578

Token 136: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007253654301166534
    2. '(' → logprob: -6.132253646850586
    3. '[' → logprob: -6.257253646850586
    4. '   ' → logprob: -7.507253646850586
    5. '\n' → logprob: -7.757253646850586
    6. '_' → logprob: -7.882253646850586
    7. ' ' → logprob: -8.007253646850586
    8. '))' → logprob: -8.507253646850586
    9. '(
' → logprob: -8.507253646850586
    10. ' )' → logprob: -8.632253646850586

Token 137: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09744023531675339
    2. '(' → logprob: -2.597440242767334
    3. '_' → logprob: -4.847440242767334
    4. '[' → logprob: -5.222440242767334
    5. '\n' → logprob: -6.597440242767334
    6. '(
' → logprob: -7.097440242767334
    7. 'newline' → logprob: -7.472440242767334
    8. '   ' → logprob: -7.597440242767334
    9. ',' → logprob: -8.222439765930176
    10. ' ' → logprob: -8.472439765930176

Token 138: ' Correction' (ID: 134873)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19061213731765747
    2. '(' → logprob: -2.9406120777130127
    3. ' ' → logprob: -3.6906120777130127
    4. '   ' → logprob: -3.6906120777130127
    5. ']' → logprob: -4.565612316131592
    6. 'for' → logprob: -4.690612316131592
    7. '_' → logprob: -4.940612316131592
    8. '[' → logprob: -5.065612316131592
    9. 'break' → logprob: -5.315612316131592
    10. ' breakfast' → logprob: -5.565612316131592

Token 139: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6777729392051697
    2. '(' → logprob: -1.0527729988098145
    3. '[' → logprob: -2.4277729988098145
    4. ',' → logprob: -3.3027729988098145
    5. '(ast' → logprob: -4.5527729988098145
    6. '   ' → logprob: -5.8027729988098145
    7. '(
' → logprob: -6.3027729988098145
    8. 'def' → logprob: -8.177772521972656
    9. '(st' → logprob: -8.302772521972656
    10. '(b' → logprob: -8.427772521972656

Token 140: ' The' (ID: 623)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9430350661277771
    2. ')' → logprob: -1.8180351257324219
    3. '   ' → logprob: -1.8180351257324219
    4. ' ,' → logprob: -2.818035125732422
    5. ' breakfast' → logprob: -3.068035125732422
    6. ' ' → logprob: -3.193035125732422
    7. '    ' → logprob: -3.568035125732422
    8. '))' → logprob: -3.943035125732422
    9. '       ' → logprob: -4.193035125732422
    10. '),' → logprob: -4.318035125732422

Token 141: ' above' (ID: 5151)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6689726710319519
    2. ')' → logprob: -0.7939726710319519
    3. '))' → logprob: -4.293972492218018
    4. ' ' → logprob: -5.668972492218018
    5. '[' → logprob: -5.918972492218018
    6. '   ' → logprob: -6.043972492218018
    7. ' )' → logprob: -6.043972492218018
    8. ' ,' → logprob: -6.168972492218018
    9. ',)' → logprob: -6.418972492218018
    10. 'def' → logprob: -6.918972492218018

Token 142: ' code' (ID: 3490)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02203122340142727
    2. ',' → logprob: -4.522031307220459
    3. '))' → logprob: -4.647031307220459
    4. '   ' → logprob: -7.772031307220459
    5. ')))' → logprob: -8.5220308303833
    6. ',)' → logprob: -8.8970308303833
    7. ')\' → logprob: -9.1470308303833
    8. '(' → logprob: -9.1470308303833
    9. '\n' → logprob: -9.2720308303833
    10. '),' → logprob: -9.6470308303833

Token 143: ' incorrectly' (ID: 87633)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004795238375663757
    2. ',' → logprob: -6.004795074462891
    3. '   ' → logprob: -7.379795074462891
    4. ' )' → logprob: -7.379795074462891
    5. '[' → logprob: -8.00479507446289
    6. '<|end|>' → logprob: -8.12979507446289
    7. '(' → logprob: -9.62979507446289
    8. '),' → logprob: -10.00479507446289
    9. ':' → logprob: -10.37979507446289
    10. ' ' → logprob: -10.37979507446289

Token 144: ' uses' (ID: 8844)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20738470554351807
    2. ',' → logprob: -1.707384705543518
    3. '),' → logprob: -6.0823845863342285
    4. '))' → logprob: -6.9573845863342285
    5. '):' → logprob: -7.5823845863342285
    6. '   ' → logprob: -7.8323845863342285
    7. ')))' → logprob: -7.9573845863342285
    8. ' ,' → logprob: -8.082385063171387
    9. '(' → logprob: -8.332385063171387
    10. ' )' → logprob: -8.457385063171387

Token 145: ' time' (ID: 1058)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12561054527759552
    2. ',' → logprob: -2.375610589981079
    3. '),' → logprob: -4.0006103515625
    4. '))' → logprob: -5.7506103515625
    5. ',)' → logprob: -6.7506103515625
    6. 'm' → logprob: -8.3756103515625
    7. ')>' → logprob: -8.5006103515625
    8. ')))' → logprob: -8.7506103515625
    9. '1' → logprob: -8.8756103515625
    10. ')),' → logprob: -9.0006103515625

Token 146: '_to' (ID: 5089)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26053935289382935
    2. '(' → logprob: -1.6355392932891846
    3. '(ast' → logprob: -4.260539531707764
    4. ',' → logprob: -4.760539531707764
    5. '(
' → logprob: -6.135539531707764
    6. '   ' → logprob: -6.385539531707764
    7. '_' → logprob: -6.635539531707764
    8. '[' → logprob: -7.260539531707764
    9. '(st' → logprob: -7.260539531707764
    10. '_)' → logprob: -7.385539531707764

Token 147: '_min' (ID: 15950)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4982547461986542
    2. '(' → logprob: -1.1232547760009766
    3. '(ast' → logprob: -3.3732547760009766
    4. ',' → logprob: -3.6232547760009766
    5. '_ast' → logprob: -6.248254776000977
    6. '_' → logprob: -6.748254776000977
    7. '_,' → logprob: -7.373254776000977
    8. '),' → logprob: -7.998254776000977
    9. '<|end|>' → logprob: -7.998254776000977
    10. 'def' → logprob: -8.873254776000977

Token 148: ' with' (ID: 483)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28543850779533386
    2. ')' → logprob: -1.4104385375976562
    3. '(ast' → logprob: -6.035438537597656
    4. '(
' → logprob: -7.535438537597656
    5. ',' → logprob: -8.035438537597656
    6. '   ' → logprob: -8.410438537597656
    7. '(a' → logprob: -8.910438537597656
    8. '<|end|>' → logprob: -9.285438537597656
    9. '(h' → logprob: -9.410438537597656
    10. ' ' → logprob: -9.910438537597656

Token 149: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47813406586647034
    2. ',' → logprob: -1.353134036064148
    3. '))' → logprob: -3.1031341552734375
    4. '),' → logprob: -3.1031341552734375
    5. '',' → logprob: -5.6031341552734375
    6. ',)' → logprob: -5.8531341552734375
    7. '<|end|>' → logprob: -5.8531341552734375
    8. '','' → logprob: -5.9781341552734375
    9. 'the' → logprob: -6.2281341552734375
    10. 'a' → logprob: -6.3531341552734375

Token 150: '2' (ID: 17)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0053625106811523
    2. ',' → logprob: -1.0053625106811523
    3. '))' → logprob: -1.5053625106811523
    4. '0' → logprob: -4.505362510681152
    5. ')))' → logprob: -4.630362510681152
    6. '),' → logprob: -4.755362510681152
    7. 'bet' → logprob: -5.380362510681152
    8. ',b' → logprob: -6.380362510681152
    9. '1' → logprob: -7.130362510681152
    10. 'm' → logprob: -7.130362510681152

Token 151: ' arguments' (ID: 11917)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017676537856459618
    2. ',' → logprob: -4.64267635345459
    3. '(' → logprob: -5.01767635345459
    4. '<|end|>' → logprob: -7.51767635345459
    5. ',)' → logprob: -9.01767635345459
    6. '),' → logprob: -9.26767635345459
    7. '[' → logprob: -9.64267635345459
    8. '(h' → logprob: -9.76767635345459
    9. ')>' → logprob: -9.89267635345459
    10. ' )' → logprob: -10.26767635345459

Token 152: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0045599499717354774
    2. '(ast' → logprob: -6.2545599937438965
    3. ',' → logprob: -6.7545599937438965
    4. '))' → logprob: -7.1295599937438965
    5. ',)' → logprob: -8.504559516906738
    6. '),' → logprob: -9.004559516906738
    7. '   ' → logprob: -9.379559516906738
    8. '(' → logprob: -10.129559516906738
    9. ')))' → logprob: -10.379559516906738
    10. '):' → logprob: -10.504559516906738

Token 153: ' must' (ID: 2804)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015152193373069167
    2. ',' → logprob: -6.7515153884887695
    3. '(' → logprob: -9.25151538848877
    4. ' )' → logprob: -9.25151538848877
    5. '))' → logprob: -9.62651538848877
    6. '   ' → logprob: -11.37651538848877
    7. ' ' → logprob: -11.50151538848877
    8. '),' → logprob: -11.87651538848877
    9. ')))' → logprob: -11.87651538848877
    10. '(
' → logprob: -12.25151538848877

Token 154: ' fix' (ID: 9295)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5808338522911072
    2. ')' → logprob: -0.8308338522911072
    3. ',h' → logprob: -6.955833911895752
    4. '(' → logprob: -7.205833911895752
    5. ' ,' → logprob: -7.955833911895752
    6. '<|end|>' → logprob: -8.080833435058594
    7. '[' → logprob: -8.205833435058594
    8. '),' → logprob: -8.205833435058594
    9. '(h' → logprob: -8.330833435058594
    10. ',)' → logprob: -8.330833435058594

Token 155: ' input' (ID: 3422)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15114359557628632
    2. ',' → logprob: -2.6511435508728027
    3. ',)' → logprob: -3.2761435508728027
    4. '(ast' → logprob: -4.276143550872803
    5. '))' → logprob: -4.776143550872803
    6. '(' → logprob: -5.276143550872803
    7. '),' → logprob: -6.151143550872803
    8. '0' → logprob: -7.526143550872803
    9. 'ast' → logprob: -7.776143550872803
    10. '())' → logprob: -8.776144027709961

Token 156: ' parsing' (ID: 51039)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.9204104542732239
    2. ')' → logprob: -1.295410394668579
    3. ',' → logprob: -1.545410394668579
    4. '(ast' → logprob: -2.545410394668579
    5. '(' → logprob: -4.670410633087158
    6. '0' → logprob: -4.920410633087158
    7. '),' → logprob: -5.670410633087158
    8. 'bst' → logprob: -5.795410633087158
    9. 'ast' → logprob: -6.295410633087158
    10. '1' → logprob: -6.420410633087158

Token 157: '.

' (ID: 364)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007434469647705555
    2. '(' → logprob: -6.632434368133545
    3. '[' → logprob: -6.632434368133545
    4. '(ast' → logprob: -6.757434368133545
    5. ' )' → logprob: -7.382434368133545
    6. ',' → logprob: -7.382434368133545
    7. '   ' → logprob: -7.507434368133545
    8. ' ' → logprob: -8.132434844970703
    9. 'def' → logprob: -8.757434844970703
    10. '):' → logprob: -8.757434844970703

Token 158: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01768450066447258
    2. ',' → logprob: -5.017684459686279
    3. ',)' → logprob: -5.017684459686279
    4. ' )' → logprob: -6.892684459686279
    5. '(ast' → logprob: -7.017684459686279
    6. '(' → logprob: -7.517684459686279
    7. ' ' → logprob: -7.892684459686279
    8. '0' → logprob: -8.142684936523438
    9. '())' → logprob: -8.267684936523438
    10. '   ' → logprob: -8.767684936523438

Token 159: ' max' (ID: 2999)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.30987727642059326
    2. 'time' → logprob: -1.6848772764205933
    3. ' max' → logprob: -2.684877395629883
    4. 'max' → logprob: -4.684877395629883
    5. ' main' → logprob: -6.934877395629883
    6. ' parse' → logprob: -7.059877395629883
    7. ' input' → logprob: -8.059877395629883
    8. ' fix' → logprob: -8.059877395629883
    9. ' process' → logprob: -8.684877395629883
    10. 'parse' → logprob: -9.059877395629883

Token 160: '_custom' (ID: 36825)
  Prédit: '_custom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_custom' → logprob: -0.00012701898231171072
    2. '(' → logprob: -11.125126838684082
    3. '(_' → logprob: -11.250126838684082
    4. '_' → logprob: -11.375126838684082
    5. '):' → logprob: -11.625126838684082
    6. '_users' → logprob: -11.750126838684082
    7. 'def' → logprob: -11.875126838684082
    8. '_to' → logprob: -11.875126838684082
    9. 'customers' → logprob: -11.875126838684082
    10. ')_' → logprob: -12.000126838684082

Token 161: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: -0.00032879042555578053
    2. '_custom' → logprob: -8.87532901763916
    3. 'customers' → logprob: -9.87532901763916
    4. '```' → logprob: -10.25032901763916
    5. '_users' → logprob: -10.37532901763916
    6. 'users' → logprob: -11.75032901763916
    7. 'er' → logprob: -12.25032901763916
    8. 'sers' → logprob: -12.37532901763916
    9. '_time' → logprob: -12.50032901763916
    10. 'usters' → logprob: -12.62532901763916

Token 162: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0038802388589829206
    2. '(' → logprob: -6.378880023956299
    3. '()' → logprob: -7.003880023956299
    4. '):' → logprob: -7.253880023956299
    5. '(h' → logprob: -8.378880500793457
    6. '_' → logprob: -9.878880500793457
    7. '():
' → logprob: -10.253880500793457
    8. '_times' → logprob: -10.503880500793457
    9. '(s' → logprob: -10.753880500793457
    10. 'def' → logprob: -11.128880500793457

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5128220915794373
    2. 'N' → logprob: -1.137822151184082
    3. ')' → logprob: -3.512822151184082
    4. 'def' → logprob: -4.012822151184082
    5. ' ' → logprob: -5.387822151184082
    6. ' N' → logprob: -5.387822151184082
    7. '  ' → logprob: -5.512822151184082
    8. '):' → logprob: -5.762822151184082
    9. '(' → logprob: -5.887822151184082
    10. ':' → logprob: -5.887822151184082

Token 164: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.22698649764060974
    2. 'int' → logprob: -1.6019865274429321
    3. 'n' → logprob: -7.476986408233643
    4. ' int' → logprob: -7.476986408233643
    5. ' N' → logprob: -8.7269868850708
    6. '   ' → logprob: -9.2269868850708
    7. 'def' → logprob: -10.2269868850708
    8. '(int' → logprob: -10.4769868850708
    9. '=int' → logprob: -10.4769868850708
    10. ' ' → logprob: -10.7269868850708

Token 165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8761817812919617
    2. ')' → logprob: -1.2511818408966064
    3. '=' → logprob: -1.2511818408966064
    4. '<|end|>' → logprob: -5.501181602478027
    5. 'def' → logprob: -5.876181602478027
    6. '   ' → logprob: -7.501181602478027
    7. '()' → logprob: -7.501181602478027
    8. '())' → logprob: -7.751181602478027
    9. '<|end|>' → logprob: -7.751181602478027
    10. ',' → logprob: -7.876181602478027

Token 166: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004103927407413721
    2. ' int' → logprob: -5.504104137420654
    3. '(int' → logprob: -11.379103660583496
    4. '=int' → logprob: -12.629103660583496
    5. '[int' → logprob: -12.879103660583496
    6. '<int' → logprob: -13.004103660583496
    7. ' ' → logprob: -13.379103660583496
    8. 'N' → logprob: -13.629103660583496
    9. 'input' → logprob: -14.129103660583496
    10. '1' → logprob: -15.004103660583496

Token 167: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.018167732283473015
    2. 'input' → logprob: -4.018167495727539
    3. ' input' → logprob: -12.268167495727539
    4. '(' → logprob: -12.518167495727539
    5. '()' → logprob: -12.518167495727539
    6. '=input' → logprob: -13.143167495727539
    7. ')' → logprob: -13.268167495727539
    8. '[input' → logprob: -14.268167495727539
    9. ',input' → logprob: -14.643167495727539
    10. '())' → logprob: -14.768167495727539

Token 168: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.006623235531151295
    2. '())
' → logprob: -5.631623268127441
    3. '()' → logprob: -5.881623268127441
    4. ')' → logprob: -8.631623268127441
    5. '()
' → logprob: -10.256623268127441
    6. '())

' → logprob: -12.131623268127441
    7. '()))' → logprob: -12.631623268127441
    8. ' ())' → logprob: -13.256623268127441
    9. '();)' → logprob: -13.631623268127441
    10. '(' → logprob: -13.881623268127441

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033655960112810135
    2. 'break' → logprob: -3.908655881881714
    3. 'for' → logprob: -5.158656120300293
    4. 'times' → logprob: -5.408656120300293
    5. ')' → logprob: -7.533656120300293
    6. 'arrival' → logprob: -8.283656120300293
    7. 'customers' → logprob: -8.283656120300293
    8. 'time' → logprob: -8.408656120300293
    9. 's' → logprob: -8.408656120300293
    10. ' for' → logprob: -8.533656120300293

Token 170: ' breakfast' (ID: 16356)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.21781353652477264
    2. '   ' → logprob: -1.717813491821289
    3. 'times' → logprob: -5.467813491821289
    4. 'for' → logprob: -5.592813491821289
    5. 'arrival' → logprob: -5.592813491821289
    6. '    
' → logprob: -7.592813491821289
    7. '```' → logprob: -7.717813491821289
    8. 'customers' → logprob: -7.842813491821289
    9. 'interval' → logprob: -8.217813491821289
    10. '_' → logprob: -8.467813491821289

Token 171: ' =' (ID: 314)
  Prédit: '_times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_times' → logprob: -0.018169960007071495
    2. ',' → logprob: -5.14316987991333
    3. ')' → logprob: -5.64316987991333
    4. '_' → logprob: -6.14316987991333
    5. '_,' → logprob: -6.39316987991333
    6. 'times' → logprob: -6.39316987991333
    7. '[' → logprob: -6.89316987991333
    8. '_time' → logprob: -7.64316987991333
    9. ',_' → logprob: -7.89316987991333
    10. ')_' → logprob: -8.268170356750488

Token 172: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0010803256882354617
    2. '[]
' → logprob: -6.876080513000488
    3. '[' → logprob: -11.126080513000488
    4. 'list' → logprob: -11.876080513000488
    5. '[]

' → logprob: -12.251080513000488
    6. '[])' → logprob: -12.376080513000488
    7. '()' → logprob: -12.501080513000488
    8. '[int' → logprob: -12.751080513000488
    9. '[(' → logprob: -13.001080513000488
    10. '[input' → logprob: -13.126080513000488

Token 173: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2674792408943176
    2. 'for' → logprob: -2.267479181289673
    3. '<|end|>' → logprob: -3.017479181289673
    4. ')' → logprob: -3.642479181289673
    5. '()
' → logprob: -3.767479181289673
    6. '[]' → logprob: -4.642479419708252
    7. '   ' → logprob: -4.767479419708252
    8. '(N' → logprob: -5.642479419708252
    9. '(' → logprob: -5.892479419708252
    10. ' for' → logprob: -6.267479419708252

Token 174: ' lunch' (ID: 17418)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06777341663837433
    2. '[]' → logprob: -4.192773342132568
    3. ')' → logprob: -4.942773342132568
    4. 'break' → logprob: -4.942773342132568
    5. ' for' → logprob: -5.067773342132568
    6. 'b' → logprob: -5.192773342132568
    7. 's' → logprob: -5.692773342132568
    8. '()' → logprob: -5.817773342132568
    9. '   ' → logprob: -5.942773342132568
    10. 'l' → logprob: -6.067773342132568

Token 175: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.9764978885650635
    2. ')' → logprob: -1.8514978885650635
    3. '_times' → logprob: -1.8514978885650635
    4. '[]' → logprob: -2.4764978885650635
    5. '=' → logprob: -2.7264978885650635
    6. '_' → logprob: -3.1014978885650635
    7. ' =' → logprob: -3.3514978885650635
    8. '=[]' → logprob: -3.8514978885650635
    9. '(' → logprob: -4.226497650146484
    10. ',' → logprob: -4.726497650146484

Token 176: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.001513312105089426
    2. '[]
' → logprob: -6.501513481140137
    3. ' []' → logprob: -12.626513481140137
    4. '[]}' → logprob: -13.251513481140137
    5. '[]

' → logprob: -13.751513481140137
    6. '([]' → logprob: -13.876513481140137
    7. '[])' → logprob: -13.876513481140137
    8. '()' → logprob: -14.251513481140137
    9. '[' → logprob: -14.626513481140137
    10. 'def' → logprob: -14.751513481140137

Token 177: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0502620935440063
    2. ')' → logprob: -1.9252620935440063
    3. '[]' → logprob: -2.050261974334717
    4. '   ' → logprob: -2.300261974334717
    5. '(' → logprob: -2.425261974334717
    6. 'for' → logprob: -2.800261974334717
    7. 'def' → logprob: -3.550261974334717
    8. '()
' → logprob: -3.800261974334717
    9. '=' → logprob: -4.050261974334717
    10. '_' → logprob: -4.425261974334717

Token 178: ' supper' (ID: 120158)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.27287057042121887
    2. 'for' → logprob: -2.3978705406188965
    3. '[]' → logprob: -2.6478705406188965
    4. 'sup' → logprob: -2.8978705406188965
    5. '[]
' → logprob: -4.5228705406188965
    6. 'break' → logprob: -5.5228705406188965
    7. 'd' → logprob: -6.1478705406188965
    8. '   ' → logprob: -7.0228705406188965
    9. 'supp' → logprob: -7.0228705406188965
    10. ' supper' → logprob: -7.1478705406188965

Token 179: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.039135366678237915
    2. ' =' → logprob: -3.289135456085205
    3. '=[]' → logprob: -7.414135456085205
    4. '.append' → logprob: -8.539134979248047
    5. '(' → logprob: -8.914134979248047
    6. '.' → logprob: -10.414134979248047
    7. ')' → logprob: -10.414134979248047
    8. '   ' → logprob: -10.414134979248047
    9. '()' → logprob: -10.664134979248047
    10. '=[]
' → logprob: -11.664134979248047

Token 180: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -4.572941179503687e-05
    2. '[]
' → logprob: -10.500045776367188
    3. ' []' → logprob: -11.625045776367188
    4. '[]

' → logprob: -12.250045776367188
    5. '([]' → logprob: -13.000045776367188
    6. '[]}' → logprob: -14.000045776367188
    7. '[])' → logprob: -14.500045776367188
    8. '()' → logprob: -15.125045776367188
    9. '[]>' → logprob: -16.000045776367188
    10. '[' → logprob: -16.250045776367188

Token 181: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23768162727355957
    2. '   ' → logprob: -1.8626816272735596
    3. ' for' → logprob: -2.9876816272735596
    4. '<|end|>' → logprob: -5.4876813888549805
    5. ')' → logprob: -6.8626813888549805
    6. '	for' → logprob: -8.11268138885498
    7. '
' → logprob: -9.23768138885498
    8. ' ' → logprob: -9.36268138885498
    9. '(' → logprob: -9.98768138885498
    10. '  ' → logprob: -10.11268138885498

Token 182: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005370717961341143
    2. ' for' → logprob: -5.255370616912842
    3. '   ' → logprob: -9.50537109375
    4. '	for' → logprob: -9.88037109375
    5. '
' → logprob: -12.25537109375
    6. 'range' → logprob: -12.38037109375
    7. '<|end|>' → logprob: -14.13037109375
    8. ')' → logprob: -15.00537109375
    9. '    
' → logprob: -15.38037109375
    10. '\t' → logprob: -16.13037109375

Token 183: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00016098834748845547
    2. ' _' → logprob: -8.750161170959473
    3. '_i' → logprob: -13.500161170959473
    4. ' in' → logprob: -14.625161170959473
    5. '_range' → logprob: -15.375161170959473
    6. 'range' → logprob: -16.000160217285156
    7. 'i' → logprob: -16.125160217285156
    8. ' i' → logprob: -16.500160217285156
    9. '__' → logprob: -16.625160217285156
    10. ' range' → logprob: -17.125160217285156

Token 184: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9806205630302429
    2. 'range' → logprob: -1.2306206226348877
    3. 'in' → logprob: -1.3556206226348877
    4. ' range' → logprob: -2.9806206226348877
    5. '_' → logprob: -3.7306206226348877
    6. ' _' → logprob: -8.605620384216309
    7. ' ' → logprob: -9.730620384216309
    8. '_range' → logprob: -10.605620384216309
    9. '0' → logprob: -13.105620384216309
    10. 'n' → logprob: -13.105620384216309

Token 185: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018235161900520325
    2. ' range' → logprob: -4.018235206604004
    3. '_' → logprob: -9.393235206604004
    4. '_range' → logprob: -13.893235206604004
    5. ' in' → logprob: -15.143235206604004
    6. 'in' → logprob: -15.268235206604004
    7. '0' → logprob: -15.768235206604004
    8. '(range' → logprob: -16.268234252929688
    9. ' ' → logprob: -16.518234252929688
    10. '	range' → logprob: -16.518234252929688

Token 186: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.01671840436756611
    2. '(' → logprob: -4.39171838760376
    3. 'N' → logprob: -5.64171838760376
    4. 'range' → logprob: -7.39171838760376
    5. ' (' → logprob: -11.516718864440918
    6. '(range' → logprob: -11.891718864440918
    7. '(int' → logprob: -12.391718864440918
    8. '(n' → logprob: -12.766718864440918
    9. ' N' → logprob: -12.891718864440918
    10. ' range' → logprob: -12.891718864440918

Token 187: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3648007810115814
    2. '):' → logprob: -1.2398008108139038
    3. '():
' → logprob: -4.239800930023193
    4. '():' → logprob: -6.864800930023193
    5. '()):
' → logprob: -7.614800930023193
    6. '   ' → logprob: -8.989800453186035
    7. '()' → logprob: -9.739800453186035
    8. '):

' → logprob: -10.489800453186035
    9. '):
' → logprob: -10.614800453186035
    10. ',' → logprob: -11.864800453186035

Token 188: '       ' (ID: 309)
  Prédit: ' ast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ast' → logprob: -0.46129101514816284
    2. '       ' → logprob: -1.9612910747528076
    3. ' map' → logprob: -2.4612910747528076
    4. '   ' → logprob: -2.5862910747528076
    5. 'map' → logprob: -3.7112910747528076
    6. 'ast' → logprob: -3.9612910747528076
    7. '(ast' → logprob: -4.8362908363342285
    8. ' input' → logprob: -5.8362908363342285
    9. ' bst' → logprob: -6.5862908363342285
    10. '    ' → logprob: -6.5862908363342285

Token 189: ' ast' (ID: 12004)
  Prédit: 'ast'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' (adapté à ' ast') → logprob: -0.10777484625577927
    2. ' ast' → logprob: -2.8577747344970703
    3. 'a' → logprob: -4.23277473449707
    4. '*' → logprob: -4.35777473449707
    5. 'map' → logprob: -4.98277473449707
    6. 'as' → logprob: -5.60777473449707
    7. '_ast' → logprob: -6.35777473449707
    8. 'list' → logprob: -6.98277473449707
    9. ' map' → logprob: -6.98277473449707
    10. '.ast' → logprob: -7.35777473449707

Token 190: '_h' (ID: 3434)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007786541245877743
    2. ',b' → logprob: -7.625778675079346
    3. ',h' → logprob: -8.875778198242188
    4. ' ,' → logprob: -10.125778198242188
    5. ',a' → logprob: -10.375778198242188
    6. ',m' → logprob: -10.750778198242188
    7. 'a' → logprob: -11.500778198242188
    8. 's' → logprob: -11.875778198242188
    9. 'b' → logprob: -12.125778198242188
    10. ',int' → logprob: -12.500778198242188

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.922563963802531e-05
    2. ' ,' → logprob: -9.625079154968262
    3. ',a' → logprob: -12.875079154968262
    4. ',b' → logprob: -13.250079154968262
    5. 'ast' → logprob: -13.375079154968262
    6. ',s' → logprob: -14.000079154968262
    7. ',input' → logprob: -14.000079154968262
    8. ',int' → logprob: -14.125079154968262
    9. '_ast' → logprob: -14.125079154968262
    10. '_,' → logprob: -14.500079154968262

Token 192: ' ast' (ID: 12004)
  Prédit: 'ast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.12693724036216736
    2. ' ast' → logprob: -2.1269371509552
    3. '_ast' → logprob: -12.626936912536621
    4. 'aster' → logprob: -13.501936912536621
    5. '(ast' → logprob: -13.626936912536621
    6. 'astr' → logprob: -14.001936912536621
    7. ' ' → logprob: -14.626936912536621
    8. '.ast' → logprob: -14.626936912536621
    9. 'AST' → logprob: -15.001936912536621
    10. '   ' → logprob: -15.126936912536621

Token 193: '_m' (ID: 1285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6220604777336121
    2. ',' → logprob: -0.9970604777336121
    3. '_ast' → logprob: -2.622060537338257
    4. '_h' → logprob: -4.372060298919678
    5. '_,' → logprob: -5.622060298919678
    6. ',_' → logprob: -6.622060298919678
    7. ')' → logprob: -7.497060298919678
    8. ' ast' → logprob: -7.497060298919678
    9. '<|end|>' → logprob: -7.497060298919678
    10. ' _' → logprob: -7.747060298919678

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038849301636219025
    2. '=' → logprob: -3.413849353790283
    3. ' =' → logprob: -5.288849353790283
    4. ' ,' → logprob: -9.038848876953125
    5. ')' → logprob: -12.288848876953125
    6. ' ' → logprob: -12.538848876953125
    7. '<|end|>' → logprob: -12.913848876953125
    8. '   ' → logprob: -13.163848876953125
    9. ',_' → logprob: -13.663848876953125
    10. '=input' → logprob: -13.663848876953125

Token 195: ' aet' (ID: 199194)
  Prédit: 'ast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.026611216366291046
    2. ' ast' → logprob: -3.651611328125
    3. 'aste' → logprob: -9.026611328125
    4. '_ast' → logprob: -9.526611328125
    5. 'aster' → logprob: -10.401611328125
    6. 'astar' → logprob: -10.526611328125
    7. '.ast' → logprob: -11.651611328125
    8. '(ast' → logprob: -11.651611328125
    9. 'a' → logprob: -11.901611328125
    10. 'astr' → logprob: -12.276611328125

Token 196: '_h' (ID: 3434)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020252352114766836
    2. '_,' → logprob: -7.252025127410889
    3. '_ast' → logprob: -7.502025127410889
    4. ')' → logprob: -8.377025604248047
    5. '_' → logprob: -8.627025604248047
    6. ' ,' → logprob: -8.877025604248047
    7. '=' → logprob: -9.877025604248047
    8. ',_' → logprob: -10.252025604248047
    9. '),' → logprob: -10.377025604248047
    10. '<|end|>' → logprob: -10.877025604248047

Token 197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002148953964933753
    2. '=' → logprob: -6.2521491050720215
    3. ' ,' → logprob: -8.752148628234863
    4. ' =' → logprob: -11.252148628234863
    5. ' ast' → logprob: -11.627148628234863
    6. 'ast' → logprob: -12.002148628234863
    7. '       ' → logprob: -12.127148628234863
    8. ')' → logprob: -12.252148628234863
    9. '_ast' → logprob: -12.252148628234863
    10. ',a' → logprob: -12.377148628234863

Token 198: ' aet' (ID: 199194)
  Prédit: 'ast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.3136884570121765
    2. ' ast' → logprob: -1.3136885166168213
    3. '_ast' → logprob: -8.813688278198242
    4. 'aster' → logprob: -8.938688278198242
    5. 'astar' → logprob: -10.063688278198242
    6. '.ast' → logprob: -10.063688278198242
    7. '(ast' → logprob: -10.813688278198242
    8. ' ' → logprob: -11.813688278198242
    9. 'astr' → logprob: -11.938688278198242
    10. 'aste' → logprob: -12.563688278198242

Token 199: '_m' (ID: 1285)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08512723445892334
    2. '_m' → logprob: -2.835127353668213
    3. '_' → logprob: -4.210127353668213
    4. '_h' → logprob: -5.460127353668213
    5. '_,' → logprob: -5.835127353668213
    6. ' ,' → logprob: -8.210126876831055
    7. 'm' → logprob: -8.710126876831055
    8. '=' → logprob: -8.960126876831055
    9. ')' → logprob: -9.710126876831055
    10. '_ast' → logprob: -10.335126876831055

Token 200: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3555755615234375
    2. ',' → logprob: -1.7305755615234375
    3. ' =' → logprob: -2.1055755615234375
    4. ')' → logprob: -8.855575561523438
    5. ' ,' → logprob: -9.605575561523438
    6. ' ' → logprob: -11.105575561523438
    7. ')=' → logprob: -11.230575561523438
    8. '   ' → logprob: -11.355575561523438
    9. '       ' → logprob: -12.105575561523438
    10. '<|end|>' → logprob: -12.855575561523438

Token 201: ' h' (ID: 312)
  Prédit: 'ast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.026042019948363304
    2. 'a' → logprob: -4.2760419845581055
    3. 'bst' → logprob: -4.9010419845581055
    4. ' ast' → logprob: -6.0260419845581055
    5. ' bst' → logprob: -7.5260419845581055
    6. 'aste' → logprob: -7.9010419845581055
    7. 'aster' → logprob: -9.026041984558105
    8. ' a' → logprob: -9.026041984558105
    9. ' ' → logprob: -9.026041984558105
    10. '   ' → logprob: -9.151041984558105

Token 202: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.025998352095484734
    2. '_' → logprob: -3.77599835395813
    3. '_s' → logprob: -6.650998115539551
    4. '_st' → logprob: -7.150998115539551
    5. 's' → logprob: -8.40099811553955
    6. '_,' → logprob: -8.40099811553955
    7. ',' → logprob: -8.52599811553955
    8. '_
' → logprob: -12.90099811553955
    9. '_

' → logprob: -13.15099811553955
    10. '<|end|>' → logprob: -13.27599811553955

Token 203: '_h' (ID: 3434)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024037064576987177
    2. ' ,' → logprob: -8.875240325927734
    3. '_,' → logprob: -10.000240325927734
    4. '_h' → logprob: -10.375240325927734
    5. ',h' → logprob: -11.625240325927734
    6. '_' → logprob: -13.000240325927734
    7. '‌,' → logprob: -13.250240325927734
    8. ',m' → logprob: -13.250240325927734
    9. ',_' → logprob: -13.250240325927734
    10. '_ast' → logprob: -13.375240325927734

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.2762428822461516e-05
    2. ' ,' → logprob: -10.625052452087402
    3. '=' → logprob: -11.750052452087402
    4. 'ast' → logprob: -12.500052452087402
    5. ' ast' → logprob: -12.500052452087402
    6. '(ast' → logprob: -13.250052452087402
    7. ',a' → logprob: -13.250052452087402
    8. '_ast' → logprob: -13.375052452087402
    9. ',h' → logprob: -13.500052452087402
    10. '<|end|>' → logprob: -13.625052452087402

Token 205: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.21364454925060272
    2. 'hst' → logprob: -1.7136445045471191
    3. ' ast' → logprob: -4.838644504547119
    4. 'h' → logprob: -6.213644504547119
    5. 'ast' → logprob: -6.463644504547119
    6. ' ' → logprob: -7.838644504547119
    7. 'hs' → logprob: -9.838644981384277
    8. '   ' → logprob: -10.088644981384277
    9. '	h' → logprob: -10.338644981384277
    10. ' hs' → logprob: -11.088644981384277

Token 206: 'st' (ID: 302)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.025369657203555107
    2. ',' → logprob: -4.525369644165039
    3. '_s' → logprob: -5.025369644165039
    4. '_' → logprob: -5.525369644165039
    5. 's' → logprob: -6.275369644165039
    6. 'st' → logprob: -6.775369644165039
    7. 'm' → logprob: -8.025369644165039
    8. '_,' → logprob: -8.525369644165039
    9. '<|end|>' → logprob: -9.900369644165039
    10. '<|end|>' → logprob: -10.650369644165039

Token 207: '_m' (ID: 1285)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23262609541416168
    2. '_m' → logprob: -2.10762619972229
    3. '_' → logprob: -2.73262619972229
    4. '_,' → logprob: -4.357625961303711
    5. '_h' → logprob: -4.857625961303711
    6. 'm' → logprob: -8.732625961303711
    7. ' ,' → logprob: -9.482625961303711
    8. '<|end|>' → logprob: -10.357625961303711
    9. '_s' → logprob: -10.982625961303711
    10. ',h' → logprob: -11.357625961303711

Token 208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041637211688794196
    2. '=' → logprob: -8.00041675567627
    3. ' ,' → logprob: -9.87541675567627
    4. ',a' → logprob: -11.75041675567627
    5. 'a' → logprob: -11.87541675567627
    6. ',h' → logprob: -12.62541675567627
    7. '<|end|>' → logprob: -12.87541675567627
    8. '       ' → logprob: -13.87541675567627
    9. '<|end|>' → logprob: -13.87541675567627
    10. ' =' → logprob: -13.87541675567627

Token 209: ' het' (ID: 1448)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.08599438518285751
    2. 'a' → logprob: -2.7109944820404053
    3. 'hst' → logprob: -4.335994243621826
    4. ' h' → logprob: -6.710994243621826
    5. 'het' → logprob: -7.085994243621826
    6. ' ' → logprob: -8.710994720458984
    7. ' a' → logprob: -8.835994720458984
    8. '   ' → logprob: -8.835994720458984
    9. ' aet' → logprob: -9.335994720458984
    10. '	h' → logprob: -9.835994720458984

Token 210: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.007987739518284798
    2. ',' → logprob: -5.382987976074219
    3. '_' → logprob: -6.257987976074219
    4. '_,' → logprob: -6.632987976074219
    5. '_m' → logprob: -9.132987976074219
    6. '_s' → logprob: -12.257987976074219
    7. ' ,' → logprob: -12.882987976074219
    8. 'h' → logprob: -13.007987976074219
    9. ',h' → logprob: -13.007987976074219
    10. '<|end|>' → logprob: -13.507987976074219

Token 211: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032628714689053595
    2. ',h' → logprob: -9.125326156616211
    3. ' ,' → logprob: -9.500326156616211
    4. '=' → logprob: -10.000326156616211
    5. '_h' → logprob: -10.000326156616211
    6. '_,' → logprob: -10.625326156616211
    7. 'h' → logprob: -12.000326156616211
    8. '‌,' → logprob: -12.500326156616211
    9. '<|end|>' → logprob: -12.875326156616211
    10. '```' → logprob: -13.000326156616211

Token 212: ' het' (ID: 1448)
  Prédit: 'het'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'het' → logprob: -0.281908243894577
    2. ' het' → logprob: -1.4069082736968994
    3. 'hets' → logprob: -7.78190803527832
    4. ' h' → logprob: -9.40690803527832
    5. 'he' → logprob: -9.53190803527832
    6. 'hethe' → logprob: -10.40690803527832
    7. ' he' → logprob: -10.78190803527832
    8. ' ' → logprob: -10.90690803527832
    9. 'h' → logprob: -10.90690803527832
    10. 'heten' → logprob: -11.65690803527832

Token 213: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.00010747690976131707
    2. ',' → logprob: -9.500107765197754
    3. '_' → logprob: -10.875107765197754
    4. '_,' → logprob: -11.750107765197754
    5. '_h' → logprob: -12.750107765197754
    6. 'm' → logprob: -12.875107765197754
    7. ')' → logprob: -16.375106811523438
    8. 'et' → logprob: -16.875106811523438
    9. '```' → logprob: -17.250106811523438
    10. ',_' → logprob: -17.875106811523438

Token 214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42988619208335876
    2. '=' → logprob: -1.0548862218856812
    3. ' =' → logprob: -7.054886341094971
    4. ' ,' → logprob: -8.554885864257812
    5. '       ' → logprob: -9.679885864257812
    6. ')' → logprob: -11.054885864257812
    7. '   ' → logprob: -11.054885864257812
    8. ' ' → logprob: -11.679885864257812
    9. ' ast' → logprob: -12.429885864257812
    10. 'ast' → logprob: -13.054885864257812

Token 215: ' bst' (ID: 157814)
  Prédit: 'bst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bst' → logprob: -0.04868876561522484
    2. ' bst' → logprob: -3.0486886501312256
    3. ' ' → logprob: -9.923688888549805
    4. 'bs' → logprob: -10.173688888549805
    5. '   ' → logprob: -11.548688888549805
    6. 'b' → logprob: -12.798688888549805
    7. '```' → logprob: -14.923688888549805
    8. '  ' → logprob: -14.923688888549805
    9. '
' → logprob: -15.423688888549805
    10. '    ' → logprob: -15.923688888549805

Token 216: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.369942307472229
    2. ',' → logprob: -1.494942307472229
    3. '_' → logprob: -2.8699421882629395
    4. '_,' → logprob: -3.6199421882629395
    5. ' ,' → logprob: -7.9949421882629395
    6. '_m' → logprob: -7.9949421882629395
    7. '<|end|>' → logprob: -8.244942665100098
    8. ',_' → logprob: -8.744942665100098
    9. '_b' → logprob: -9.244942665100098
    10. ' _' → logprob: -9.494942665100098

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.537180211627856e-05
    2. ' ,' → logprob: -10.500045776367188
    3. ',b' → logprob: -11.875045776367188
    4. '<|end|>' → logprob: -12.125045776367188
    5. '=' → logprob: -12.875045776367188
    6. '‌,' → logprob: -13.750045776367188
    7. '<|end|>' → logprob: -14.750045776367188
    8. ',
' → logprob: -15.125045776367188
    9. ')' → logprob: -15.625045776367188
    10. ' ' → logprob: -15.625045776367188

Token 218: ' bst' (ID: 157814)
  Prédit: ' bst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bst' → logprob: -0.002193563850596547
    2. 'bst' → logprob: -6.127193450927734
    3. ' ' → logprob: -12.252193450927734
    4. ' bsp' → logprob: -13.252193450927734
    5. ' bt' → logprob: -15.127193450927734
    6. ' bfs' → logprob: -15.377193450927734
    7. ' b' → logprob: -15.502193450927734
    8. ' BST' → logprob: -15.627193450927734
    9. 'b' → logprob: -15.627193450927734
    10. '	b' → logprob: -16.002193450927734

Token 219: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.0002031827752944082
    2. '_' → logprob: -8.625203132629395
    3. ',' → logprob: -11.500203132629395
    4. '_,' → logprob: -12.125203132629395
    5. ' _' → logprob: -12.250203132629395
    6. ',_' → logprob: -13.750203132629395
    7. '_h' → logprob: -14.125203132629395
    8. 'm' → logprob: -14.125203132629395
    9. '_b' → logprob: -15.250203132629395
    10. '<|end|>' → logprob: -15.875203132629395

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.334533878136426e-05
    2. ' ,' → logprob: -10.625042915344238
    3. ',b' → logprob: -11.250042915344238
    4. '=' → logprob: -12.375042915344238
    5. ' bst' → logprob: -14.500042915344238
    6. 'b' → logprob: -15.375042915344238
    7. '_,' → logprob: -15.625042915344238
    8. '‌,' → logprob: -15.750042915344238
    9. 'bst' → logprob: -15.875042915344238
    10. ',
' → logprob: -16.000043869018555

Token 221: ' bet' (ID: 1413)
  Prédit: 'bet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bet' → logprob: -0.11952076107263565
    2. 'bst' → logprob: -2.244520664215088
    3. ' bst' → logprob: -5.869520664215088
    4. 'b' → logprob: -6.119520664215088
    5. ' bet' → logprob: -7.119520664215088
    6. 'bett' → logprob: -7.994520664215088
    7. 's' → logprob: -8.494521141052246
    8. 'beth' → logprob: -9.244521141052246
    9. 'bs' → logprob: -9.494521141052246
    10. 'best' → logprob: -10.244521141052246

Token 222: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -7.255023956531659e-05
    2. '_' → logprob: -9.750072479248047
    3. '_,' → logprob: -11.750072479248047
    4. ',' → logprob: -12.750072479248047
    5. '```' → logprob: -14.500072479248047
    6. ' _' → logprob: -14.625072479248047
    7. '_b' → logprob: -14.625072479248047
    8. '<|end|>' → logprob: -15.125072479248047
    9. '_w' → logprob: -15.500072479248047
    10. 'h' → logprob: -15.500072479248047

Token 223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027325618430040777
    2. ' ,' → logprob: -8.375273704528809
    3. ',b' → logprob: -10.875273704528809
    4. '=' → logprob: -11.500273704528809
    5. ',
' → logprob: -12.250273704528809
    6. ' ' → logprob: -13.000273704528809
    7. ' bet' → logprob: -13.375273704528809
    8. 'bet' → logprob: -13.750273704528809
    9. '   ' → logprob: -14.000273704528809
    10. '_,' → logprob: -14.250273704528809

Token 224: ' bet' (ID: 1413)
  Prédit: ' bet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bet' → logprob: -0.38687199354171753
    2. 'bet' → logprob: -1.1368720531463623
    3. 'bett' → logprob: -15.511872291564941
    4. '.bet' → logprob: -15.636872291564941
    5. 'beta' → logprob: -15.761872291564941
    6. ' ' → logprob: -16.136871337890625
    7. 'Bet' → logprob: -16.261871337890625
    8. ' betal' → logprob: -16.636871337890625
    9. ' bst' → logprob: -16.886871337890625
    10. 'bt' → logprob: -17.261871337890625

Token 225: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -4.9186317482963204e-05
    2. 'm' → logprob: -10.000049591064453
    3. ',' → logprob: -13.250049591064453
    4. '_' → logprob: -13.500049591064453
    5. '_,' → logprob: -14.500049591064453
    6. '```' → logprob: -16.000049591064453
    7. ',m' → logprob: -17.625049591064453
    8. '_ml' → logprob: -19.000049591064453
    9. '=' → logprob: -19.250049591064453
    10. '   ' → logprob: -19.375049591064453

Token 226: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08697136491537094
    2. ' =' → logprob: -2.5869712829589844
    3. ')' → logprob: -4.836971282958984
    4. ')=' → logprob: -9.336971282958984
    5. '   ' → logprob: -11.211971282958984
    6. ',' → logprob: -11.961971282958984
    7. ' ' → logprob: -13.086971282958984
    8. ' )' → logprob: -13.211971282958984
    9. '),' → logprob: -13.336971282958984
    10. '):' → logprob: -14.211971282958984

Token 227: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.16022484004497528
    2. 'map' → logprob: -1.9102247953414917
    3. '    ' → logprob: -15.160224914550781
    4. ' list' → logprob: -15.910224914550781
    5. '   ' → logprob: -16.16022491455078
    6. 'list' → logprob: -16.41022491455078
    7. ' ' → logprob: -17.16022491455078
    8. '	map' → logprob: -17.53522491455078
    9. '  ' → logprob: -19.28522491455078
    10. '(map' → logprob: -20.16022491455078

Token 228: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004983438993804157
    2. 'int' → logprob: -7.625498294830322
    3. '(' → logprob: -12.12549877166748
    4. '=int' → logprob: -13.25049877166748
    5. ',int' → logprob: -14.25049877166748
    6. '<int' → logprob: -14.75049877166748
    7. '   ' → logprob: -14.75049877166748
    8. ']int' → logprob: -14.87549877166748
    9. '```' → logprob: -15.00049877166748
    10. ' int' → logprob: -15.25049877166748

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22097152471542358
    2. ',input' → logprob: -1.7209715843200684
    3. '(input' → logprob: -4.095971584320068
    4. ')' → logprob: -7.345971584320068
    5. '<|end|>' → logprob: -7.345971584320068
    6. '(' → logprob: -7.970971584320068
    7. ' ,' → logprob: -8.22097110748291
    8. 'input' → logprob: -8.22097110748291
    9. '(),' → logprob: -8.34597110748291
    10. ' input' → logprob: -9.09597110748291

Token 230: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.048587486147880554
    2. ' input' → logprob: -3.0485875606536865
    3. '(input' → logprob: -16.923587799072266
    4. ',input' → logprob: -17.548587799072266
    5. '<input' → logprob: -18.298587799072266
    6. '	input' → logprob: -18.423587799072266
    7. '=input' → logprob: -18.548587799072266
    8. '_input' → logprob: -18.923587799072266
    9. '   ' → logprob: -19.298587799072266
    10. ' ' → logprob: -20.423587799072266

Token 231: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.8444881536415778e-05
    2. '()' → logprob: -10.500028610229492
    3. '())' → logprob: -14.250028610229492
    4. ')' → logprob: -15.750028610229492
    5. ' ().' → logprob: -16.625028610229492
    6. '()))' → logprob: -16.875028610229492
    7. '()
' → logprob: -18.125028610229492
    8. '(' → logprob: -18.375028610229492
    9. '   ' → logprob: -19.125028610229492
    10. '()),' → logprob: -19.500028610229492

Token 232: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6240566083070007e-06
    2. 'strip' → logprob: -13.750001907348633
    3. ' split' → logprob: -14.875001907348633
    4. '(split' → logprob: -16.625001907348633
    5. 'spl' → logprob: -17.625001907348633
    6. '().' → logprob: -18.375001907348633
    7. '.split' → logprob: -19.125001907348633
    8. 'rstrip' → logprob: -19.375001907348633
    9. 'read' → logprob: -20.375001907348633
    10. '```' → logprob: -20.750001907348633

Token 233: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004144168924540281
    2. '()' → logprob: -5.879144191741943
    3. ')' → logprob: -6.629144191741943
    4. '(' → logprob: -11.879143714904785
    5. ' ())' → logprob: -12.254143714904785
    6. '())
' → logprob: -12.879143714904785
    7. '()))' → logprob: -13.879143714904785
    8. '();)' → logprob: -14.254143714904785
    9. '(),' → logprob: -15.004143714904785
    10. '());' → logprob: -15.254143714904785

Token 234: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013302695006132126
    2. ')' → logprob: -4.388302803039551
    3. '<|end|>' → logprob: -8.01330280303955
    4. '   ' → logprob: -8.76330280303955
    5. '        
' → logprob: -9.51330280303955
    6. ' breakfast' → logprob: -9.63830280303955
    7. '[' → logprob: -10.01330280303955
    8. '
' → logprob: -10.63830280303955
    9. '):
' → logprob: -11.38830280303955
    10. '```' → logprob: -11.51330280303955

Token 235: ' breakfast' (ID: 16356)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.02947007492184639
    2. '       ' → logprob: -4.154469966888428
    3. '   ' → logprob: -4.904469966888428
    4. ' breakfast' → logprob: -5.154469966888428
    5. 'bre' → logprob: -9.654470443725586
    6. ' break' → logprob: -11.029470443725586
    7. '```' → logprob: -11.654470443725586
    8. 'Breakfast' → logprob: -11.779470443725586
    9. 'def' → logprob: -11.904470443725586
    10. 'start' → logprob: -11.904470443725586

Token 236: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00018244501552544534
    2. '.' → logprob: -8.625182151794434
    3. 'append' → logprob: -13.750182151794434
    4. ' .' → logprob: -14.125182151794434
    5. '_append' → logprob: -14.750182151794434
    6. ').' → logprob: -15.625182151794434
    7. '.ap' → logprob: -16.12518310546875
    8. '.setdefault' → logprob: -16.50018310546875
    9. '.app' → logprob: -16.87518310546875
    10. '.extend' → logprob: -17.37518310546875

Token 237: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0016429269453510642
    2. '(' → logprob: -6.50164270401001
    3. '(time' → logprob: -8.876643180847168
    4. '(((' → logprob: -14.126643180847168
    5. '(
' → logprob: -15.751643180847168
    6. ' ((' → logprob: -16.50164222717285
    7. '   ' → logprob: -17.12664222717285
    8. ' (' → logprob: -18.37664222717285
    9. '(t' → logprob: -18.87664222717285
    10. '(Time' → logprob: -19.00164222717285

Token 238: 'time' (ID: 4580)
  Prédit: 'time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -4.842555426876061e-06
    2. ' time' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.7500057220459
    4. 'ast' → logprob: -18.8750057220459
    5. '(time' → logprob: -19.0000057220459
    6. '"time' → logprob: -19.8750057220459
    7. '           ' → logprob: -20.0000057220459
    8. '    ' → logprob: -20.5000057220459
    9. '	time' → logprob: -20.5000057220459
    10. '
' → logprob: -20.7500057220459

Token 239: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -9.014684110297821e-06
    2. 'to' → logprob: -12.000008583068848
    3. ')_' → logprob: -13.625008583068848
    4. '_t' → logprob: -14.625008583068848
    5. '_ast' → logprob: -14.875008583068848
    6. 'To' → logprob: -15.000008583068848
    7. ' _' → logprob: -15.250008583068848
    8. ' to' → logprob: -16.250009536743164
    9. '_h' → logprob: -16.875009536743164
    10. '_' → logprob: -17.375009536743164

Token 240: '_min' (ID: 15950)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.25343167781829834
    2. '_min' → logprob: -1.5034316778182983
    3. 'ast' → logprob: -6.878431797027588
    4. '(ast' → logprob: -7.878431797027588
    5. 'Min' → logprob: -10.00343132019043
    6. '_ast' → logprob: -11.00343132019043
    7. 'in' → logprob: -12.12843132019043
    8. '(min' → logprob: -12.25343132019043
    9. 'm' → logprob: -12.62843132019043
    10. 'max' → logprob: -12.87843132019043

Token 241: '(ast' (ID: 118219)
  Prédit: '(ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ast' → logprob: -1.1279553291387856e-05
    2. 'ast' → logprob: -11.500011444091797
    3. '(' → logprob: -14.500011444091797
    4. '_ast' → logprob: -15.375011444091797
    5. ' ast' → logprob: -15.625011444091797
    6. '(AST' → logprob: -16.375011444091797
    7. '.ast' → logprob: -17.125011444091797
    8. 'AST' → logprob: -17.250011444091797
    9. '(
' → logprob: -18.500011444091797
    10. ' (' → logprob: -18.625011444091797

Token 242: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.02995736338198185
    2. '_ast' → logprob: -3.7799572944641113
    3. ',' → logprob: -5.654957294464111
    4. '(ast' → logprob: -5.904957294464111
    5. ' ast' → logprob: -8.77995777130127
    6. 'ast' → logprob: -8.77995777130127
    7. ',_' → logprob: -10.15495777130127
    8. ' ,' → logprob: -10.27995777130127
    9. '_' → logprob: -10.90495777130127
    10. '_,' → logprob: -10.90495777130127

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004652273200917989
    2. ' ,' → logprob: -7.750465393066406
    3. ',
' → logprob: -11.125465393066406
    4. '_ast' → logprob: -11.750465393066406
    5. '(ast' → logprob: -12.750465393066406
    6. '‌,' → logprob: -13.125465393066406
    7. '_,' → logprob: -13.250465393066406
    8. 'ast' → logprob: -13.375465393066406
    9. ' ast' → logprob: -13.625465393066406
    10. '.ast' → logprob: -15.000465393066406

Token 244: ' ast' (ID: 12004)
  Prédit: 'ast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.0024764856789261103
    2. ' ast' → logprob: -6.002476692199707
    3. '(ast' → logprob: -15.877476692199707
    4. '.ast' → logprob: -16.00247573852539
    5. '_ast' → logprob: -16.25247573852539
    6. 'astar' → logprob: -16.37747573852539
    7. 'aster' → logprob: -16.37747573852539
    8. 'astr' → logprob: -16.50247573852539
    9. ' ' → logprob: -17.62747573852539
    10. 'astro' → logprob: -18.00247573852539

Token 245: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.0004309076175559312
    2. 'm' → logprob: -7.750431060791016
    3. '_h' → logprob: -16.750431060791016
    4. 'ast' → logprob: -17.000431060791016
    5. 's' → logprob: -17.625431060791016
    6. 'м' → logprob: -17.750431060791016
    7. '```' → logprob: -18.000431060791016
    8. '))' → logprob: -18.125431060791016
    9. '   ' → logprob: -18.750431060791016
    10. '	m' → logprob: -18.875431060791016

Token 246: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0014754603616893291
    2. ',' → logprob: -6.6264753341674805
    3. ' ),' → logprob: -9.62647533416748
    4. ')' → logprob: -9.75147533416748
    5. '),
' → logprob: -10.87647533416748
    6. '   ' → logprob: -13.12647533416748
    7. ' ,' → logprob: -13.62647533416748
    8. '),

' → logprob: -13.62647533416748
    9. '),(' → logprob: -14.75147533416748
    10. ',),' → logprob: -14.75147533416748

Token 247: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.001170460251159966
    2. ' time' → logprob: -6.751170635223389
    3. '   ' → logprob: -16.001171112060547
    4. '       ' → logprob: -17.251171112060547
    5. '    ' → logprob: -17.626171112060547
    6. '           ' → logprob: -17.751171112060547
    7. '	time' → logprob: -18.126171112060547
    8. '        ' → logprob: -19.251171112060547
    9. '               ' → logprob: -19.376171112060547
    10. '(time' → logprob: -19.876171112060547

Token 248: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -8.995397365652025e-05
    2. 'to' → logprob: -9.625089645385742
    3. ')_' → logprob: -11.625089645385742
    4. ')' → logprob: -12.625089645385742
    5. 'To' → logprob: -12.750089645385742
    6. '   ' → logprob: -13.250089645385742
    7. '(' → logprob: -13.750089645385742
    8. '_min' → logprob: -13.750089645385742
    9. '))' → logprob: -14.000089645385742
    10. '_' → logprob: -14.375089645385742

Token 249: '_min' (ID: 15950)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0807582288980484
    2. '_min' → logprob: -2.5807583332061768
    3. 'max' → logprob: -6.955758094787598
    4. 'm' → logprob: -8.080758094787598
    5. 'ast' → logprob: -8.080758094787598
    6. 'et' → logprob: -9.455758094787598
    7. '_max' → logprob: -9.830758094787598
    8. 'time' → logprob: -10.330758094787598
    9. ' min' → logprob: -10.330758094787598
    10. 'Min' → logprob: -10.955758094787598

Token 250: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.906711546937004e-05
    2. 'a' → logprob: -10.125048637390137
    3. '(' → logprob: -12.375048637390137
    4. ')(' → logprob: -14.000048637390137
    5. ' (' → logprob: -14.375048637390137
    6. ' aet' → logprob: -14.625048637390137
    7. '(e' → logprob: -14.750048637390137
    8. '(et' → logprob: -14.750048637390137
    9. '(
' → logprob: -15.125048637390137
    10. '   ' → logprob: -15.250048637390137

Token 251: 'et' (ID: 292)
  Prédit: 'et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.007845336571335793
    2. 'e' → logprob: -5.507845401763916
    3. 'a' → logprob: -5.632845401763916
    4. '(et' → logprob: -9.382844924926758
    5. 'ет' → logprob: -11.007844924926758
    6. ' aet' → logprob: -11.382844924926758
    7. 'etet' → logprob: -11.507844924926758
    8. '(a' → logprob: -11.507844924926758
    9. '   ' → logprob: -12.007844924926758
    10. 'cet' → logprob: -12.382844924926758

Token 252: '_h' (ID: 3434)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9548529386520386
    2. 'et' → logprob: -1.2048529386520386
    3. '_h' → logprob: -1.2048529386520386
    4. 'e' → logprob: -4.579853057861328
    5. 'het' → logprob: -5.954853057861328
    6. '_a' → logprob: -6.829853057861328
    7. 'bet' → logprob: -8.579853057861328
    8. 'h' → logprob: -8.579853057861328
    9. '(a' → logprob: -8.579853057861328
    10. ' aet' → logprob: -8.579853057861328

Token 253: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.9292415749514475e-05
    2. ' ,' → logprob: -10.875039100646973
    3. ',a' → logprob: -11.750039100646973
    4. 'a' → logprob: -12.500039100646973
    5. ',
' → logprob: -12.875039100646973
    6. '‌,' → logprob: -13.750039100646973
    7. ',b' → logprob: -14.000039100646973
    8. 'bet' → logprob: -14.375039100646973
    9. ',

' → logprob: -14.875039100646973
    10. ',\
' → logprob: -15.000039100646973

Token 254: ' aet' (ID: 199194)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.003632731270045042
    2. ' aet' → logprob: -5.628632545471191
    3. ' a' → logprob: -10.378632545471191
    4. 'ae' → logprob: -15.378632545471191
    5. '	a' → logprob: -15.878632545471191
    6. ' ' → logprob: -15.878632545471191
    7. 'et' → logprob: -15.878632545471191
    8. 'aed' → logprob: -16.378633499145508
    9. 'aes' → logprob: -16.503633499145508
    10. '   ' → logprob: -16.628633499145508

Token 255: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -4.036524842376821e-05
    2. 'm' → logprob: -10.125040054321289
    3. 'a' → logprob: -15.625040054321289
    4. '```' → logprob: -17.50004005432129
    5. ')' → logprob: -18.00004005432129
    6. '_' → logprob: -18.12504005432129
    7. 'et' → logprob: -18.50004005432129
    8. '))' → logprob: -18.62504005432129
    9. '_a' → logprob: -18.75004005432129
    10. 's' → logprob: -19.00004005432129

Token 256: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.002561268862336874
    2. ')' → logprob: -6.252561092376709
    3. '))' → logprob: -8.002561569213867
    4. ')))
' → logprob: -8.252561569213867
    5. '),' → logprob: -10.627561569213867
    6. ' ' → logprob: -12.252561569213867
    7. '   ' → logprob: -12.627561569213867
    8. '')))' → logprob: -13.752561569213867
    9. '())))' → logprob: -14.002561569213867
    10. ')));' → logprob: -14.252561569213867

Token 257: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06271877884864807
    2. ')' → logprob: -2.8127188682556152
    3. ')
' → logprob: -8.437718391418457
    4. '```' → logprob: -9.062718391418457
    5. '   ' → logprob: -9.312718391418457
    6. '``' → logprob: -9.687718391418457
    7. ' lunch' → logprob: -9.937718391418457
    8. '[' → logprob: -10.062718391418457
    9. '        
' → logprob: -10.187718391418457
    10. '<|end|>' → logprob: -10.437718391418457

Token 258: ' lunch' (ID: 17418)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3172321319580078
    2. ' lunch' → logprob: -1.3172321319580078
    3. '       ' → logprob: -5.817232131958008
    4. '   ' → logprob: -7.067232131958008
    5. ' ' → logprob: -9.692232131958008
    6. ' l' → logprob: -11.442232131958008
    7. 'lun' → logprob: -11.942232131958008
    8. '        ' → logprob: -12.067232131958008
    9. '
' → logprob: -12.067232131958008
    10. ' lunchtime' → logprob: -12.192232131958008

Token 259: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002128382766386494
    2. '.' → logprob: -8.500212669372559
    3. '.extend' → logprob: -12.750212669372559
    4. ').' → logprob: -13.500212669372559
    5. '.setdefault' → logprob: -13.750212669372559
    6. '_append' → logprob: -14.125212669372559
    7. ' .' → logprob: -14.250212669372559
    8. '.app' → logprob: -14.625212669372559
    9. '._' → logprob: -15.250212669372559
    10. '.add' → logprob: -15.375212669372559

Token 260: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0002644351334311068
    2. '(time' → logprob: -8.875264167785645
    3. '(' → logprob: -9.000264167785645
    4. ' (' → logprob: -14.750264167785645
    5. ' ((' → logprob: -15.250264167785645
    6. '(
' → logprob: -15.625264167785645
    7. '   ' → logprob: -15.875264167785645
    8. '[(' → logprob: -16.50026512145996
    9. ' ' → logprob: -17.25026512145996
    10. '       ' → logprob: -17.37526512145996

Token 261: 'time' (ID: 4580)
  Prédit: '(time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(time' → logprob: -0.38689419627189636
    2. 'time' → logprob: -1.1368942260742188
    3. ' time' → logprob: -10.761894226074219
    4. ' (' → logprob: -13.511894226074219
    5. '"time' → logprob: -14.761894226074219
    6. '(' → logprob: -15.636894226074219
    7. '	time' → logprob: -16.88689422607422
    8. ',time' → logprob: -17.01189422607422
    9. '=time' → logprob: -17.01189422607422
    10. '   ' → logprob: -18.13689422607422

Token 262: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.016580183058977127
    2. 'to' → logprob: -4.141580104827881
    3. '(h' → logprob: -8.266580581665039
    4. '_h' → logprob: -8.641580581665039
    5. 'To' → logprob: -9.641580581665039
    6. ' to' → logprob: -10.891580581665039
    7. '(' → logprob: -11.016580581665039
    8. '(to' → logprob: -12.266580581665039
    9. ')' → logprob: -13.641580581665039
    10. '(st' → logprob: -14.016580581665039

Token 263: '_min' (ID: 15950)
  Prédit: 'hst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hst' → logprob: -0.001956467516720295
    2. ' h' → logprob: -6.626956462860107
    3. 'time' → logprob: -7.876956462860107
    4. 'lst' → logprob: -9.126956939697266
    5. '(h' → logprob: -10.251956939697266
    6. ' time' → logprob: -10.251956939697266
    7. 'ht' → logprob: -10.501956939697266
    8. 'mst' → logprob: -11.626956939697266
    9. 'hs' → logprob: -11.751956939697266
    10. 'h' → logprob: -11.876956939697266

Token 264: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -13.250003814697266
    3. 'hst' → logprob: -13.375003814697266
    4. '(hist' → logprob: -15.000003814697266
    5. '   ' → logprob: -17.000003814697266
    6. '(
' → logprob: -17.250003814697266
    7. '[h' → logprob: -17.375003814697266
    8. '	h' → logprob: -17.375003814697266
    9. '```' → logprob: -17.500003814697266
    10. '{' → logprob: -17.500003814697266

Token 265: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -2.935296834039036e-06
    2. '_st' → logprob: -14.00000286102295
    3. 'hst' → logprob: -14.62500286102295
    4. ' st' → logprob: -15.12500286102295
    5. 'ст' → logprob: -15.50000286102295
    6. '
' → logprob: -15.62500286102295
    7. '_h' → logprob: -15.87500286102295
    8. '```' → logprob: -16.250003814697266
    9. 's' → logprob: -16.375003814697266
    10. '_' → logprob: -16.375003814697266

Token 266: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.14422939717769623
    2. ',' → logprob: -2.0192294120788574
    3. ',h' → logprob: -7.394229412078857
    4. '_,' → logprob: -7.519229412078857
    5. ' ,' → logprob: -8.7692289352417
    6. 'h' → logprob: -8.8942289352417
    7. ',_' → logprob: -9.6442289352417
    8. '_' → logprob: -11.1442289352417
    9. '_l' → logprob: -11.6442289352417
    10. '_m' → logprob: -12.7692289352417

Token 267: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012701898231171072
    2. ' ,' → logprob: -9.750126838684082
    3. ',h' → logprob: -9.875126838684082
    4. ',
' → logprob: -11.625126838684082
    5. '‌,' → logprob: -12.500126838684082
    6. '<|end|>' → logprob: -13.125126838684082
    7. ',

' → logprob: -14.875126838684082
    8. '),' → logprob: -15.250126838684082
    9. '[' → logprob: -15.250126838684082
    10. '<|end|>' → logprob: -15.500126838684082

Token 268: ' h' (ID: 312)
  Prédit: 'hst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hst' → logprob: -0.006731949746608734
    2. ' h' → logprob: -5.006731986999512
    3. 'h' → logprob: -11.256731986999512
    4. 'hs' → logprob: -13.381731986999512
    5. '	h' → logprob: -13.881731986999512
    6. ' ' → logprob: -14.256731986999512
    7. 'mst' → logprob: -16.131731033325195
    8. 'ht' → logprob: -16.256731033325195
    9. 'kst' → logprob: -16.256731033325195
    10. ',h' → logprob: -16.506731033325195

Token 269: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.09354200959205627
    2. 'hst' → logprob: -2.4685420989990234
    3. ',' → logprob: -6.468542098999023
    4. 'h' → logprob: -6.718542098999023
    5. 'mst' → logprob: -7.343542098999023
    6. '_m' → logprob: -7.718542098999023
    7. 'm' → logprob: -7.843542098999023
    8. '_st' → logprob: -9.093542098999023
    9. '_h' → logprob: -9.218542098999023
    10. 'kst' → logprob: -11.093542098999023

Token 270: '_m' (ID: 1285)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5801520347595215
    2. '_m' → logprob: -0.8301520347595215
    3. ',' → logprob: -5.9551520347595215
    4. 'mst' → logprob: -6.4551520347595215
    5. 'hst' → logprob: -11.70515251159668
    6. ' m' → logprob: -11.70515251159668
    7. ',m' → logprob: -12.08015251159668
    8. 'h' → logprob: -12.08015251159668
    9. 'st' → logprob: -12.83015251159668
    10. '_,' → logprob: -13.58015251159668

Token 271: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -7.76759916334413e-05
    2. ',' → logprob: -9.500077247619629
    3. ' ),' → logprob: -13.250077247619629
    4. ')' → logprob: -14.500077247619629
    5. '       ' → logprob: -16.125078201293945
    6. '   ' → logprob: -16.125078201293945
    7. '()),' → logprob: -16.375078201293945
    8. '),
' → logprob: -16.875078201293945
    9. ',),' → logprob: -17.125078201293945
    10. ' ,' → logprob: -17.625078201293945

Token 272: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.01104935072362423
    2. ' time' → logprob: -4.511049270629883
    3. '(time' → logprob: -13.386049270629883
    4. '   ' → logprob: -18.886049270629883
    5. '	time' → logprob: -19.761049270629883
    6. ' ' → logprob: -20.886049270629883
    7. '       ' → logprob: -20.886049270629883
    8. '    ' → logprob: -21.136049270629883
    9. '
' → logprob: -21.136049270629883
    10. '"time' → logprob: -21.136049270629883

Token 273: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.771655115589965e-05
    2. 'to' → logprob: -11.000018119812012
    3. '_min' → logprob: -14.875018119812012
    4. 'To' → logprob: -14.875018119812012
    5. ' to' → logprob: -16.375017166137695
    6. 'def' → logprob: -16.875017166137695
    7. ')' → logprob: -17.625017166137695
    8. '(min' → logprob: -17.875017166137695
    9. 'min' → logprob: -18.000017166137695
    10. '(to' → logprob: -18.250017166137695

Token 274: '_min' (ID: 15950)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2465299516916275
    2. '_min' → logprob: -1.8715299367904663
    3. 'het' → logprob: -2.746530055999756
    4. 'hst' → logprob: -9.371529579162598
    5. 'int' → logprob: -9.496529579162598
    6. 'max' → logprob: -9.871529579162598
    7. ' min' → logprob: -10.121529579162598
    8. '_m' → logprob: -10.371529579162598
    9. ' het' → logprob: -10.871529579162598
    10. 'ht' → logprob: -10.871529579162598

Token 275: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.981667537620524e-06
    2. 'het' → logprob: -13.375001907348633
    3. ' het' → logprob: -15.625001907348633
    4. '(let' → logprob: -15.875001907348633
    5. ' (' → logprob: -16.750001907348633
    6. 'Het' → logprob: -16.875001907348633
    7. '(
' → logprob: -17.375001907348633
    8. '(et' → logprob: -17.625001907348633
    9. '((' → logprob: -18.750001907348633
    10. '```' → logprob: -19.000001907348633

Token 276: 'het' (ID: 5785)
  Prédit: 'het'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'het' → logprob: -4.842555426876061e-06
    2. 'bet' → logprob: -13.000004768371582
    3. ' het' → logprob: -13.250004768371582
    4. 'he' → logprob: -14.875004768371582
    5. '
' → logprob: -16.1250057220459
    6. 'et' → logprob: -16.2500057220459
    7. '(' → logprob: -16.8750057220459
    8. 'Het' → logprob: -17.0000057220459
    9. 'let' → logprob: -17.6250057220459
    10. '```' → logprob: -17.6250057220459

Token 277: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.0026248814538121223
    2. '_' → logprob: -6.127624988555908
    3. 'het' → logprob: -7.752624988555908
    4. 'h' → logprob: -12.00262451171875
    5. '(' → logprob: -13.62762451171875
    6. ' het' → logprob: -14.00262451171875
    7. '_he' → logprob: -14.75262451171875
    8. '_ht' → logprob: -15.25262451171875
    9. '```' → logprob: -15.75262451171875
    10. 'et' → logprob: -15.75262451171875

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.253090865968261e-06
    2. ' ,' → logprob: -11.750009536743164
    3. '<|end|>' → logprob: -14.750009536743164
    4. '‌,' → logprob: -15.125009536743164
    5. ',
' → logprob: -15.625009536743164
    6. '```' → logprob: -16.625009536743164
    7. '<|end|>' → logprob: -16.750009536743164
    8. ',\
' → logprob: -16.875009536743164
    9. ' ' → logprob: -16.875009536743164
    10. 'het' → logprob: -17.125009536743164

Token 279: ' het' (ID: 1448)
  Prédit: 'het'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'het' → logprob: -0.00023178798437584192
    2. ' het' → logprob: -8.375231742858887
    3. 'he' → logprob: -14.375231742858887
    4. 'et' → logprob: -16.000232696533203
    5. 'Het' → logprob: -16.375232696533203
    6. ' ' → logprob: -16.500232696533203
    7. 'hethe' → logprob: -16.500232696533203
    8. 'hets' → logprob: -16.625232696533203
    9. '
' → logprob: -16.750232696533203
    10. 'heth' → logprob: -17.625232696533203

Token 280: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.0007858026656322181
    2. 'm' → logprob: -7.250785827636719
    3. 'et' → logprob: -9.750785827636719
    4. 'het' → logprob: -11.000785827636719
    5. 'eth' → logprob: -15.500785827636719
    6. '_h' → logprob: -16.00078582763672
    7. 'let' → logprob: -16.12578582763672
    8. 'etch' → logprob: -17.00078582763672
    9. '_' → logprob: -17.12578582763672
    10. 'her' → logprob: -17.75078582763672

Token 281: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -1.9981420336989686e-05
    2. '))
' → logprob: -11.875020027160645
    3. ')))' → logprob: -12.250020027160645
    4. ' ))' → logprob: -12.375020027160645
    5. ')' → logprob: -12.500020027160645
    6. '))

' → logprob: -16.500019073486328
    7. '()))' → logprob: -16.625019073486328
    8. '   ' → logprob: -17.250019073486328
    9. ' ' → logprob: -18.125019073486328
    10. ''))' → logprob: -18.500019073486328

Token 282: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017243229085579515
    2. 's' → logprob: -6.3767242431640625
    3. '   ' → logprob: -11.251724243164062
    4. '```' → logprob: -12.376724243164062
    5. '        
' → logprob: -14.001724243164062
    6. '           ' → logprob: -14.001724243164062
    7. ')' → logprob: -14.126724243164062
    8. ' supper' → logprob: -14.876724243164062
    9. '      ' → logprob: -15.126724243164062
    10. '<|end|>' → logprob: -15.126724243164062

Token 283: ' supper' (ID: 120158)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.629921436891891e-05
    2. '       ' → logprob: -11.25002670288086
    3. ' supper' → logprob: -12.25002670288086
    4. '   ' → logprob: -12.50002670288086
    5. 'd' → logprob: -13.50002670288086
    6. 'super' → logprob: -14.37502670288086
    7. 'sup' → logprob: -14.50002670288086
    8. '
' → logprob: -14.87502670288086
    9. 'supp' → logprob: -14.87502670288086
    10. '```' → logprob: -15.00002670288086

Token 284: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.580929347255733e-05
    2. '.' → logprob: -11.125016212463379
    3. 'append' → logprob: -14.000016212463379
    4. ' .' → logprob: -15.750016212463379
    5. ').' → logprob: -18.750015258789062
    6. '.app' → logprob: -19.000015258789062
    7. '.Append' → logprob: -20.000015258789062
    8. '].' → logprob: -20.250015258789062
    9. '\.' → logprob: -20.375015258789062
    10. '_append' → logprob: -20.750015258789062

Token 285: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -15.000000953674316
    3. '(time' → logprob: -15.250000953674316
    4. ' ((' → logprob: -18.625
    5. '(
' → logprob: -19.75
    6. '   ' → logprob: -20.75
    7. '[(' → logprob: -20.875
    8. '```' → logprob: -21.75
    9. '>((' → logprob: -21.75
    10. ' ' → logprob: -22.125

Token 286: 'time' (ID: 4580)
  Prédit: 'time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -2.236549335066229e-05
    2. '(time' → logprob: -10.750021934509277
    3. ' time' → logprob: -14.000021934509277
    4. '"time' → logprob: -17.375022888183594
    5. '
' → logprob: -20.000022888183594
    6. '	time' → logprob: -20.125022888183594
    7. '   ' → logprob: -20.625022888183594
    8. ')' → logprob: -21.125022888183594
    9. '=time' → logprob: -21.625022888183594
    10. 'times' → logprob: -22.125022888183594

Token 287: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.00023238400171976537
    2. 'to' → logprob: -8.375232696533203
    3. 'To' → logprob: -14.625232696533203
    4. '.append' → logprob: -15.000232696533203
    5. ')_' → logprob: -15.375232696533203
    6. ')' → logprob: -15.500232696533203
    7. ' to' → logprob: -15.625232696533203
    8. '```' → logprob: -16.125232696533203
    9. '._' → logprob: -16.500232696533203
    10. '.to' → logprob: -16.500232696533203

Token 288: '_min' (ID: 15950)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.38713762164115906
    2. '_min' → logprob: -1.1371376514434814
    3. 'time' → logprob: -8.512137413024902
    4. ' min' → logprob: -10.637137413024902
    5. '(min' → logprob: -10.637137413024902
    6. 'max' → logprob: -11.887137413024902
    7. '(time' → logprob: -12.887137413024902
    8. '[min' → logprob: -13.012137413024902
    9. ' time' → logprob: -13.262137413024902
    10. 'Min' → logprob: -13.887137413024902

Token 289: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.006742135155946016
    2. '(s' → logprob: -5.006742000579834
    3. '(bs' → logprob: -10.881742477416992
    4. '(' → logprob: -12.131742477416992
    5. 's' → logprob: -14.006742477416992
    6. ')' → logprob: -15.006742477416992
    7. 'bst' → logprob: -15.131742477416992
    8. '(bot' → logprob: -15.256742477416992
    9. '(bus' → logprob: -16.006742477416992
    10. '
' → logprob: -16.131742477416992

Token 290: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.014223560690879822
    2. 's' → logprob: -4.264223575592041
    3. 't' → logprob: -10.389223098754883
    4. 'et' → logprob: -10.514223098754883
    5. 'est' → logprob: -14.014223098754883
    6. '_s' → logprob: -14.514223098754883
    7. 'sm' → logprob: -15.389223098754883
    8. 'sp' → logprob: -15.764223098754883
    9. 'bst' → logprob: -16.014223098754883
    10. '_st' → logprob: -16.764223098754883

Token 291: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.0015153385465964675
    2. '_b' → logprob: -6.5015153884887695
    3. '_s' → logprob: -11.62651538848877
    4. 'bet' → logprob: -13.75151538848877
    5. '_,' → logprob: -13.87651538848877
    6. '_' → logprob: -14.87651538848877
    7. '_m' → logprob: -15.00151538848877
    8. 'b' → logprob: -15.37651538848877
    9. ',' → logprob: -15.37651538848877
    10. 's' → logprob: -15.87651538848877

Token 292: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002908910100813955
    2. ',b' → logprob: -8.250290870666504
    3. ' ,' → logprob: -10.500290870666504
    4. ',
' → logprob: -13.375290870666504
    5. '‌,' → logprob: -15.750290870666504
    6. 'b' → logprob: -16.12529182434082
    7. ' ' → logprob: -16.50029182434082
    8. ',

' → logprob: -16.75029182434082
    9. ',user' → logprob: -17.37529182434082
    10. '[' → logprob: -17.50029182434082

Token 293: ' bst' (ID: 157814)
  Prédit: 'bst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bst' → logprob: -0.04860950633883476
    2. ' bst' → logprob: -3.048609495162964
    3. 'bet' → logprob: -11.048609733581543
    4. 'bs' → logprob: -12.423609733581543
    5. 'b' → logprob: -13.423609733581543
    6. 'bt' → logprob: -14.923609733581543
    7. 'bm' → logprob: -16.173608779907227
    8. '	b' → logprob: -16.923608779907227
    9. ' ' → logprob: -17.048608779907227
    10. 'bsd' → logprob: -17.673608779907227

Token 294: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -9.253090865968261e-06
    2. 'm' → logprob: -11.625009536743164
    3. '_s' → logprob: -15.500009536743164
    4. '_b' → logprob: -17.375009536743164
    5. 's' → logprob: -17.750009536743164
    6. 'м' → logprob: -17.875009536743164
    7. '_h' → logprob: -18.000009536743164
    8. 'b' → logprob: -19.375009536743164
    9. '```' → logprob: -19.875009536743164
    10. '	m' → logprob: -20.125009536743164

Token 295: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.06202370300889015
    2. ',' → logprob: -2.812023639678955
    3. ' ,' → logprob: -10.687024116516113
    4. ' ),' → logprob: -11.437024116516113
    5. '   ' → logprob: -12.312024116516113
    6. '(),' → logprob: -12.312024116516113
    7. ')' → logprob: -12.812024116516113
    8. '),
' → logprob: -13.312024116516113
    9. '>,' → logprob: -13.562024116516113
    10. '       ' → logprob: -13.937024116516113

Token 296: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.008615872822701931
    2. ' time' → logprob: -4.758615970611572
    3. '(time' → logprob: -13.508615493774414
    4. '	time' → logprob: -20.383615493774414
    5. 'bet' → logprob: -21.758615493774414
    6. '"time' → logprob: -23.008615493774414
    7. 'b' → logprob: -23.258615493774414
    8. 'times' → logprob: -23.508615493774414
    9. '=time' → logprob: -23.508615493774414
    10. '
' → logprob: -24.008615493774414

Token 297: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.00024620062322355807
    2. 'to' → logprob: -8.625246047973633
    3. 'To' → logprob: -9.750246047973633
    4. '_m' → logprob: -13.500246047973633
    5. '_s' → logprob: -13.625246047973633
    6. '(to' → logprob: -13.625246047973633
    7. ')' → logprob: -14.750246047973633
    8. '_max' → logprob: -14.875246047973633
    9. '_b' → logprob: -15.125246047973633
    10. '_' → logprob: -15.125246047973633

Token 298: '_min' (ID: 15950)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.13627471029758453
    2. '_m' → logprob: -2.136274814605713
    3. 'm' → logprob: -5.386274814605713
    4. '_min' → logprob: -5.761274814605713
    5. 'max' → logprob: -7.261274814605713
    6. 'bet' → logprob: -7.636274814605713
    7. 's' → logprob: -8.886274337768555
    8. 'sup' → logprob: -9.136274337768555
    9. '_s' → logprob: -9.886274337768555
    10. '_b' → logprob: -10.636274337768555

Token 299: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0008265409851446748
    2. 'bet' → logprob: -7.250826358795166
    3. '(s' → logprob: -9.250826835632324
    4. '(' → logprob: -11.000826835632324
    5. ' bet' → logprob: -13.625826835632324
    6. '.bet' → logprob: -14.125826835632324
    7. '(beta' → logprob: -14.875826835632324
    8. ')' → logprob: -14.875826835632324
    9. ' (' → logprob: -15.125826835632324
    10. '
' → logprob: -15.375826835632324

Token 300: 'et' (ID: 292)
  Prédit: 'et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.05866875872015953
    2. 's' → logprob: -3.433668851852417
    3. 'bet' → logprob: -4.308668613433838
    4. 'st' → logprob: -4.558668613433838
    5. '_s' → logprob: -8.058669090270996
    6. 'est' → logprob: -8.433669090270996
    7. '_h' → logprob: -10.058669090270996
    8. 't' → logprob: -10.058669090270996
    9. ' bet' → logprob: -10.183669090270996
    10. '(b' → logprob: -10.433669090270996

Token 301: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: 0.0
    2. '_b' → logprob: -16.75
    3. 'h' → logprob: -18.5
    4. '_H' → logprob: -20.125
    5. '_w' → logprob: -20.375
    6. '```' → logprob: -20.75
    7. '_k' → logprob: -21.125
    8. '_s' → logprob: -21.25
    9. '	h' → logprob: -21.25
    10. '   ' → logprob: -21.75

Token 302: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022487416572403163
    2. ',b' → logprob: -8.625225067138672
    3. ' ,' → logprob: -10.625225067138672
    4. 'bet' → logprob: -11.000225067138672
    5. ' bet' → logprob: -13.250225067138672
    6. ',
' → logprob: -13.875225067138672
    7. 'b' → logprob: -14.000225067138672
    8. '```' → logprob: -15.125225067138672
    9. 'm' → logprob: -16.000225067138672
    10. ',m' → logprob: -16.750225067138672

Token 303: ' bet' (ID: 1413)
  Prédit: 'bet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bet' → logprob: -0.014165983535349369
    2. ' bet' → logprob: -4.264165878295898
    3. 'beta' → logprob: -14.514165878295898
    4. ' ' → logprob: -14.764165878295898
    5. 'bett' → logprob: -14.889165878295898
    6. '.bet' → logprob: -14.889165878295898
    7. 'b' → logprob: -15.639165878295898
    8. 'bot' → logprob: -16.2641658782959
    9. 'be' → logprob: -16.5141658782959
    10. 'bt' → logprob: -16.7641658782959

Token 304: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -8.602024900028482e-05
    2. 'm' → logprob: -9.375085830688477
    3. ',' → logprob: -14.000085830688477
    4. '_b' → logprob: -15.875085830688477
    5. ',m' → logprob: -16.125085830688477
    6. 'bet' → logprob: -17.125085830688477
    7. ')' → logprob: -17.500085830688477
    8. '```' → logprob: -17.625085830688477
    9. 'M' → logprob: -17.875085830688477
    10. '_s' → logprob: -18.250085830688477

Token 305: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00017183588352054358
    2. ')' → logprob: -9.125171661376953
    3. '))
' → logprob: -10.250171661376953
    4. ')))' → logprob: -10.625171661376953
    5. '()))' → logprob: -13.125171661376953
    6. ' ))' → logprob: -14.375171661376953
    7. '()' → logprob: -15.250171661376953
    8. '))

' → logprob: -16.250171661376953
    9. '   ' → logprob: -16.250171661376953
    10. ''))' → logprob: -16.875171661376953

Token 306: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03838341310620308
    2. 'events' → logprob: -4.288383483886719
    3. 'times' → logprob: -4.288383483886719
    4. 'all' → logprob: -6.038383483886719
    5. '```' → logprob: -6.288383483886719
    6. '    
' → logprob: -6.413383483886719
    7. '#' → logprob: -7.038383483886719
    8. 'time' → logprob: -7.413383483886719
    9. 'interval' → logprob: -7.413383483886719
    10. 'def' → logprob: -7.788383483886719

Token 307: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.540601372718811
    2. 'all' → logprob: -1.665601372718811
    3. 'def' → logprob: -2.7906012535095215
    4. '#' (adapté à ' #') → logprob: -3.1656012535095215
    5. 'max' → logprob: -3.1656012535095215
    6. 'times' → logprob: -3.5406012535095215
    7. 'break' → logprob: -3.6656012535095215
    8. 'events' → logprob: -4.7906012535095215
    9. 'count' → logprob: -5.2906012535095215
    10. 'interval' → logprob: -5.6656012535095215

Token 308: ' Candidate' (ID: 81541)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.8340367078781128
    2. 'def' → logprob: -1.0840367078781128
    3. 'times' → logprob: -2.4590368270874023
    4. 'events' → logprob: -3.3340368270874023
    5. 'max' → logprob: -3.3340368270874023
    6. '   ' → logprob: -4.084036827087402
    7. '#' → logprob: -4.084036827087402
    8. 'break' → logprob: -4.459036827087402
    9. 'interval' → logprob: -4.709036827087402
    10. 'time' → logprob: -5.334036827087402

Token 309: ' serving' (ID: 17662)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017855720594525337
    2. '    
' → logprob: -5.017855644226074
    3. 'def' → logprob: -5.017855644226074
    4. 'max' → logprob: -7.142855644226074
    5. 'all' → logprob: -7.392855644226074
    6. ')' → logprob: -7.767855644226074
    7. 'from' → logprob: -8.017855644226074
    8. 'counts' → logprob: -8.267855644226074
    9. ' times' → logprob: -8.392855644226074
    10. '
' → logprob: -8.517855644226074

Token 310: ' times' (ID: 4238)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3526737093925476
    2. 'times' → logprob: -1.9776737689971924
    3. ' intervals' → logprob: -3.1026737689971924
    4. ' times' → logprob: -3.6026737689971924
    5. '   ' → logprob: -4.227673530578613
    6. 'interval' → logprob: -4.227673530578613
    7. ')' → logprob: -4.352673530578613
    8. 'max' → logprob: -5.227673530578613
    9. ' def' → logprob: -5.352673530578613
    10. 'slots' → logprob: -5.352673530578613

Token 311: ' must' (ID: 2804)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9510835409164429
    2. '   ' → logprob: -1.3260835409164429
    3. 'def' → logprob: -2.2010836601257324
    4. 'times' → logprob: -2.3260836601257324
    5. 'break' → logprob: -3.7010836601257324
    6. 'all' → logprob: -3.8260836601257324
    7. '<|end|>' → logprob: -4.326083660125732
    8. 'events' → logprob: -4.451083660125732
    9. ' times' → logprob: -4.576083660125732
    10. ' breakfast' → logprob: -4.701083660125732

Token 312: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.22325803339481354
    2. 'be' → logprob: -1.7232580184936523
    3. '=' → logprob: -4.348258018493652
    4. ' =' → logprob: -5.848258018493652
    5. 'def' → logprob: -6.848258018493652
    6. ' not' → logprob: -7.223258018493652
    7. '[]' → logprob: -7.223258018493652
    8. 'not' → logprob: -7.598258018493652
    9. 'over' → logprob: -7.848258018493652
    10. '_be' → logprob: -7.973258018493652

Token 313: ' selected' (ID: 6386)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.46645861864089966
    2. 'set' → logprob: -1.2164585590362549
    3. 'sorted' → logprob: -2.841458559036255
    4. '[]
' → logprob: -4.841458797454834
    5. 'list' → logprob: -5.591458797454834
    6. '[' → logprob: -5.841458797454834
    7. ' set' → logprob: -6.841458797454834
    8. 'range' → logprob: -6.841458797454834
    9. ' []' → logprob: -7.216458797454834
    10. '[]

' → logprob: -9.341458320617676

Token 314: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07172445207834244
    2. 'def' → logprob: -3.0717244148254395
    3. 'times' → logprob: -5.0717244148254395
    4. 'all' → logprob: -5.4467244148254395
    5. '
' → logprob: -5.6967244148254395
    6. 'from' → logprob: -5.8217244148254395
    7. '    
' → logprob: -6.4467244148254395
    8. ' times' → logprob: -6.6967244148254395
    9. ')' → logprob: -7.3217244148254395
    10. '#' → logprob: -7.8217244148254395

Token 315: ' customers' (ID: 6028)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.08982791006565094
    2. '[' → logprob: -3.7148280143737793
    3. '[b' → logprob: -3.8398280143737793
    4. 'set' → logprob: -4.339828014373779
    5. '   ' → logprob: -4.964828014373779
    6. 'sorted' → logprob: -5.214828014373779
    7. '[]' → logprob: -5.464828014373779
    8. '[
' → logprob: -5.714828014373779
    9. 'all' → logprob: -6.714828014373779
    10. '[start' → logprob: -6.839828014373779

Token 316: ''' (ID: 6)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3615085482597351
    2. 'times' → logprob: -2.11150860786438
    3. 'def' → logprob: -2.48650860786438
    4. '_times' → logprob: -3.11150860786438
    5. ')' → logprob: -3.61150860786438
    6. 'all' → logprob: -4.611508369445801
    7. 'interval' → logprob: -6.111508369445801
    8. 'break' → logprob: -6.111508369445801
    9. ',' → logprob: -6.236508369445801
    10. ' times' → logprob: -6.736508369445801

Token 317: ' time' (ID: 1058)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.78171706199646
    2. 'start' → logprob: -1.40671706199646
    3. 'break' → logprob: -2.40671706199646
    4. ' times' → logprob: -3.03171706199646
    5. 'interval' → logprob: -3.03171706199646
    6. 'arrival' → logprob: -3.53171706199646
    7. '_times' → logprob: -3.65671706199646
    8. '[]' → logprob: -4.781717300415039
    9. '[start' → logprob: -4.781717300415039
    10. 'all' → logprob: -5.031717300415039

Token 318: ' zone' (ID: 15070)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9284195303916931
    2. 'points' → logprob: -2.053419589996338
    3. 'break' → logprob: -2.178419589996338
    4. '_inter' → logprob: -2.428419589996338
    5. '_ranges' → logprob: -2.678419589996338
    6. '_points' → logprob: -3.303419589996338
    7. 'interval' → logprob: -3.553419589996338
    8. '   ' → logprob: -3.553419589996338
    9. 'ranges' → logprob: -3.553419589996338
    10. '_times' → logprob: -4.053419589996338

Token 319: ' edges' (ID: 22569)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30515405535697937
    2. 'times' → logprob: -2.0551540851593018
    3. ')' → logprob: -2.4301540851593018
    4. 'all' → logprob: -4.180153846740723
    5. '```' → logprob: -4.805153846740723
    6. 'def' → logprob: -5.180153846740723
    7. ' times' → logprob: -5.805153846740723
    8. 'break' → logprob: -5.930153846740723
    9. ')
' → logprob: -5.930153846740723
    10. '#' → logprob: -6.555153846740723

Token 320: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0820712000131607
    2. 'all' → logprob: -3.707071304321289
    3. ' times' → logprob: -3.832071304321289
    4. 'times' → logprob: -3.957071304321289
    5. ' all' → logprob: -4.957071304321289
    6. 'def' → logprob: -5.957071304321289
    7. 'from' → logprob: -7.582071304321289
    8. '
' → logprob: -7.957071304321289
    9. '    
' → logprob: -8.082071304321289
    10. '```' → logprob: -8.207071304321289

Token 321: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.179268017411232
    2. 'times' → logprob: -2.1792681217193604
    3. 'all' → logprob: -4.179267883300781
    4. ' times' → logprob: -4.429267883300781
    5. 'break' → logprob: -4.554267883300781
    6. 'def' → logprob: -5.304267883300781
    7. '```' → logprob: -5.429267883300781
    8. 'points' → logprob: -6.929267883300781
    9. 'from' → logprob: -7.429267883300781
    10. ' all' → logprob: -7.554267883300781

Token 322: ' breakfast' (ID: 16356)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05492154881358147
    2. '
' → logprob: -3.6799216270446777
    3. '    
' → logprob: -4.679921627044678
    4. 'all' → logprob: -5.054921627044678
    5. ' times' → logprob: -5.179921627044678
    6. ' 
' → logprob: -6.054921627044678
    7. ' all' → logprob: -6.679921627044678
    8. 'times' → logprob: -6.929921627044678
    9. ' breakfast' → logprob: -7.304921627044678
    10. '```' → logprob: -7.679921627044678

Token 323: '_candidates' (ID: 186937)
  Prédit: '_times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_times' → logprob: -0.006668128073215485
    2. '_edges' → logprob: -5.6316680908203125
    3. '_points' → logprob: -7.0066680908203125
    4. '_' → logprob: -7.1316680908203125
    5. 'times' → logprob: -8.006668090820312
    6. ' =' → logprob: -8.131668090820312
    7. '_start' → logprob: -8.131668090820312
    8. '=' → logprob: -8.256668090820312
    9. '_slots' → logprob: -10.756668090820312
    10. '_st' → logprob: -11.256668090820312

Token 324: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11324402689933777
    2. '=' → logprob: -2.23824405670166
    3. '_times' → logprob: -8.86324405670166
    4. '_break' → logprob: -9.36324405670166
    5. '=set' → logprob: -9.98824405670166
    6. 'break' → logprob: -10.11324405670166
    7. '=[]' → logprob: -10.48824405670166
    8. '_time' → logprob: -10.48824405670166
    9. '_b' → logprob: -11.36324405670166
    10. '_' → logprob: -11.36324405670166

Token 325: ' set' (ID: 920)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.9232181906700134
    2. 'set' → logprob: -1.4232182502746582
    3. '[]' → logprob: -1.9232182502746582
    4. ' set' → logprob: -2.173218250274658
    5. ' sorted' → logprob: -3.298218250274658
    6. '[]
' → logprob: -3.548218250274658
    7. '[b' → logprob: -4.048218250274658
    8. '[' → logprob: -4.423218250274658
    9. ' []' → logprob: -5.923218250274658
    10. ' [' → logprob: -6.923218250274658

Token 326: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09630885720252991
    2. '()
' → logprob: -2.471308946609497
    3. '([' → logprob: -5.721308708190918
    4. '(b' → logprob: -6.346308708190918
    5. '(t' → logprob: -6.846308708190918
    6. '()

' → logprob: -7.846308708190918
    7. '(i' → logprob: -7.971308708190918
    8. '(x' → logprob: -8.471308708190918
    9. '(time' → logprob: -8.596308708190918
    10. '(start' → logprob: -10.596308708190918

Token 327: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21247804164886475
    2. 'for' → logprob: -2.2124781608581543
    3. '.update' → logprob: -3.3374781608581543
    4. 'break' → logprob: -3.5874781608581543
    5. '()' → logprob: -4.712478160858154
    6. '()
' → logprob: -6.087478160858154
    7. '().' → logprob: -6.712478160858154
    8. 'b' → logprob: -6.712478160858154
    9. '.break' → logprob: -6.962478160858154
    10. '.' → logprob: -7.462478160858154

Token 328: ' lunch' (ID: 17418)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008140355930663645
    2. ' for' → logprob: -7.250813961029053
    3. 'break' → logprob: -9.750814437866211
    4. '   ' → logprob: -10.000814437866211
    5. '
' → logprob: -15.875814437866211
    6. '```' → logprob: -16.12581443786621
    7. '    
' → logprob: -16.37581443786621
    8. 'l' → logprob: -17.12581443786621
    9. ' breakfast' → logprob: -17.37581443786621
    10. '	for' → logprob: -17.62581443786621

Token 329: '_candidates' (ID: 186937)
  Prédit: '_candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -0.08197169750928879
    2. '.update' → logprob: -2.8319716453552246
    3. '_times' → logprob: -4.956971645355225
    4. ' =' → logprob: -5.081971645355225
    5. '_' → logprob: -6.206971645355225
    6. '.' → logprob: -6.331971645355225
    7. '=' → logprob: -6.581971645355225
    8. '.extend' → logprob: -8.081972122192383
    9. '._' → logprob: -8.581972122192383
    10. '.setdefault' → logprob: -8.956972122192383

Token 330: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3194214999675751
    2. ' =' → logprob: -1.3194215297698975
    3. '.update' → logprob: -5.569421291351318
    4. '.add' → logprob: -6.444421291351318
    5. '()' → logprob: -8.194421768188477
    6. '.' → logprob: -8.944421768188477
    7. '   ' → logprob: -9.069421768188477
    8. ' ' → logprob: -9.319421768188477
    9. '(' → logprob: -10.444421768188477
    10. '.=' → logprob: -11.069421768188477

Token 331: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.000946472748182714
    2. ' set' → logprob: -7.000946521759033
    3. '[]' → logprob: -10.625946044921875
    4. 'break' → logprob: -11.875946044921875
    5. '{}' → logprob: -13.500946044921875
    6. '[]
' → logprob: -13.875946044921875
    7. '(set' → logprob: -15.000946044921875
    8. '{' → logprob: -15.375946044921875
    9. '=set' → logprob: -15.500946044921875
    10. '   ' → logprob: -15.625946044921875

Token 332: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004794999957084656
    2. '()
' → logprob: -5.379795074462891
    3. '(b' → logprob: -8.75479507446289
    4. '()

' → logprob: -12.00479507446289
    5. 'break' → logprob: -12.87979507446289
    6. 'Breakfast' → logprob: -13.00479507446289
    7. '()\' → logprob: -13.37979507446289
    8. '(' → logprob: -14.12979507446289
    9. '   ' → logprob: -14.50479507446289
    10. ' breakfast' → logprob: -14.62979507446289

Token 333: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09164435416460037
    2. 'for' → logprob: -2.841644287109375
    3. ' for' → logprob: -3.591644287109375
    4. ' breakfast' → logprob: -7.341644287109375
    5. 's' → logprob: -7.591644287109375
    6. 'break' → logprob: -7.966644287109375
    7. '```' → logprob: -9.841644287109375
    8. ' ' → logprob: -10.091644287109375
    9. ' supper' → logprob: -11.591644287109375
    10. '  ' → logprob: -11.841644287109375

Token 334: ' supper' (ID: 120158)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002186545403674245
    2. 'for' → logprob: -6.2521867752075195
    3. '   ' → logprob: -9.00218677520752
    4. ' supper' → logprob: -9.75218677520752
    5. 'sup' → logprob: -10.50218677520752
    6. 'break' → logprob: -10.50218677520752
    7. ' for' → logprob: -12.25218677520752
    8. 'd' → logprob: -12.75218677520752
    9. 'super' → logprob: -12.87718677520752
    10. '  ' → logprob: -13.00218677520752

Token 335: '_candidates' (ID: 186937)
  Prédit: '_candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -0.005409838631749153
    2. '=' → logprob: -5.8804097175598145
    3. ' =' → logprob: -6.1304097175598145
    4. '_' → logprob: -8.505410194396973
    5. '()' → logprob: -9.130410194396973
    6. 'Candidates' → logprob: -10.380410194396973
    7. '.' → logprob: -11.005410194396973
    8. '_times' → logprob: -11.005410194396973
    9. '_candidate' → logprob: -11.255410194396973
    10. 's' → logprob: -12.005410194396973

Token 336: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269376575946808
    2. ' =' → logprob: -2.1269376277923584
    3. '=set' → logprob: -11.876937866210938
    4. '()' → logprob: -13.626937866210938
    5. '   ' → logprob: -14.501937866210938
    6. 'set' → logprob: -15.501937866210938
    7. '(' → logprob: -15.501937866210938
    8. ' ' → logprob: -16.001937866210938
    9. '.' → logprob: -16.126937866210938
    10. ')' → logprob: -16.251937866210938

Token 337: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.03804229199886322
    2. ' set' → logprob: -3.2880423069000244
    3. '(set' → logprob: -15.288042068481445
    4. '	set' → logprob: -15.288042068481445
    5. '=set' → logprob: -15.913042068481445
    6. '[]' → logprob: -16.288042068481445
    7. ' ' → logprob: -17.038042068481445
    8. '{' → logprob: -17.913042068481445
    9. ')set' → logprob: -18.163042068481445
    10. '   ' → logprob: -18.288042068481445

Token 338: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.30946120619773865
    2. '()
' → logprob: -1.809461236000061
    3. '   ' → logprob: -2.3094611167907715
    4. 'for' → logprob: -6.0594611167907715
    5. '(b' → logprob: -7.5594611167907715
    6. '()

' → logprob: -9.30946159362793
    7. 'break' → logprob: -10.30946159362793
    8. 'def' → logprob: -10.80946159362793
    9. ' for' → logprob: -10.93446159362793
    10. '()
' → logprob: -11.43446159362793

Token 339: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16041645407676697
    2. '   ' → logprob: -1.9104164838790894
    3. ' for' → logprob: -8.660416603088379
    4. '	for' → logprob: -11.160416603088379
    5. '```' → logprob: -12.660416603088379
    6. '    
' → logprob: -14.035416603088379
    7. '
' → logprob: -14.660416603088379
    8. 'break' → logprob: -16.035415649414062
    9. '       ' → logprob: -16.660415649414062
    10. 'def' → logprob: -16.785415649414062

Token 340: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0002624086628202349
    2. '   ' → logprob: -8.250262260437012
    3. ' for' → logprob: -13.750262260437012
    4. '
' → logprob: -18.000263214111328
    5. '```' → logprob: -18.000263214111328
    6. '	for' → logprob: -18.500263214111328
    7. '    
' → logprob: -18.625263214111328
    8. 'break' → logprob: -18.875263214111328
    9. '#' → logprob: -22.000263214111328
    10. '``' → logprob: -22.500263214111328

Token 341: ' i' (ID: 575)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.5290220379829407
    2. ' intervals' → logprob: -1.904021978378296
    3. ' b' → logprob: -2.279021978378296
    4. ' i' → logprob: -2.779021978378296
    5. ' times' → logprob: -3.904021978378296
    6. 'start' → logprob: -3.904021978378296
    7. ' interval' → logprob: -4.029022216796875
    8. ' s' → logprob: -4.154022216796875
    9. ' arr' → logprob: -5.279022216796875
    10. ' st' → logprob: -5.279022216796875

Token 342: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026570463553071022
    2. 'in' → logprob: -3.6515705585479736
    3. '   ' → logprob: -8.651570320129395
    4. 'range' → logprob: -9.776570320129395
    5. ' ' → logprob: -11.651570320129395
    6. '  ' → logprob: -11.901570320129395
    7. ' range' → logprob: -12.401570320129395
    8. '```' → logprob: -13.151570320129395
    9. ')' → logprob: -13.276570320129395
    10. '    ' → logprob: -13.276570320129395

Token 343: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2561413049697876
    2. ' range' → logprob: -1.8811413049697876
    3. 'break' → logprob: -2.631141185760498
    4. ' breakfast' → logprob: -6.506141185760498
    5. '[' → logprob: -10.756141662597656
    6. ' break' → logprob: -11.506141662597656
    7. 'Breakfast' → logprob: -11.631141662597656
    8. '(range' → logprob: -12.006141662597656
    9. 'bread' → logprob: -12.506141662597656
    10. 'bre' → logprob: -13.131141662597656

Token 344: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.002788003534078598
    2. 'len' → logprob: -6.002788066864014
    3. '(N' → logprob: -8.502787590026855
    4. ' N' → logprob: -9.252787590026855
    5. '(len' → logprob: -11.752787590026855
    6. 'range' → logprob: -12.877787590026855
    7. ' len' → logprob: -13.877787590026855
    8. '   ' → logprob: -13.877787590026855
    9. 'n' → logprob: -15.127787590026855
    10. '0' → logprob: -15.502787590026855

Token 345: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0067372736521065235
    2. '):
' → logprob: -5.006737232208252
    3. ' ):' → logprob: -10.88173770904541
    4. '   ' → logprob: -12.88173770904541
    5. '):
' → logprob: -15.75673770904541
    6. ':' → logprob: -16.131736755371094
    7. ')' → logprob: -16.506736755371094
    8. ' ):
' → logprob: -16.631736755371094
    9. '       ' → logprob: -16.881736755371094
    10. '):

' → logprob: -16.881736755371094

Token 346: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.547789674485102e-05
    2. '   ' → logprob: -10.875035285949707
    3. ',' → logprob: -12.250035285949707
    4. ' breakfast' → logprob: -12.375035285949707
    5. '```' → logprob: -12.500035285949707
    6. ' for' → logprob: -14.125035285949707
    7. 'break' → logprob: -14.750035285949707
    8. '
' → logprob: -15.000035285949707
    9. '):
' → logprob: -15.125035285949707
    10. 'for' → logprob: -15.125035285949707

Token 347: ' breakfast' (ID: 16356)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.23632726073265076
    2. '   ' → logprob: -1.8613272905349731
    3. '       ' → logprob: -2.9863271713256836
    4. ' breakfast' → logprob: -5.486327171325684
    5. 'for' → logprob: -8.111327171325684
    6. 'bre' → logprob: -10.486327171325684
    7. ' break' → logprob: -10.611327171325684
    8. 'Breakfast' → logprob: -11.236327171325684
    9. 'b' → logprob: -12.736327171325684
    10. '_break' → logprob: -12.861327171325684

Token 348: '_candidates' (ID: 186937)
  Prédit: '_candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -0.00024763107649050653
    2. '.add' → logprob: -8.500247955322266
    3. '.append' → logprob: -10.375247955322266
    4. 'add' → logprob: -11.750247955322266
    5. '.update' → logprob: -13.375247955322266
    6. '_candidate' → logprob: -13.875247955322266
    7. 'Candidates' → logprob: -14.000247955322266
    8. '.setdefault' → logprob: -15.000247955322266
    9. '.' → logprob: -15.500247955322266
    10. 'break' → logprob: -15.625247955322266

Token 349: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -2.927930654550437e-05
    2. '.' → logprob: -10.750029563903809
    3. '.update' → logprob: -12.125029563903809
    4. ' .' → logprob: -13.625029563903809
    5. 'add' → logprob: -13.750029563903809
    6. '].' → logprob: -17.250028610229492
    7. ').' → logprob: -18.625028610229492
    8. '.append' → logprob: -19.750028610229492
    9. ' add' → logprob: -19.875028610229492
    10. '   ' → logprob: -20.500028610229492

Token 350: '(b' (ID: 3229)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0007706748438067734
    2. '(b' → logprob: -7.750770568847656
    3. ' breakfast' → logprob: -8.000770568847656
    4. 'bre' → logprob: -12.875770568847656
    5. ' break' → logprob: -13.750770568847656
    6. 'bread' → logprob: -14.625770568847656
    7. 'b' → logprob: -14.875770568847656
    8. 'birth' → logprob: -16.125770568847656
    9. '_break' → logprob: -16.375770568847656
    10. '(' → logprob: -16.500770568847656

Token 351: 'reak' (ID: 1738)
  Prédit: 'reak'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reak' → logprob: -0.0014533287612721324
    2. 'break' → logprob: -7.376453399658203
    3. '[' → logprob: -7.501453399658203
    4. 're' → logprob: -8.376453399658203
    5. 'fast' → logprob: -11.251453399658203
    6. 'rea' → logprob: -11.626453399658203
    7. 'read' → logprob: -12.001453399658203
    8. 'ak' → logprob: -12.876453399658203
    9. 'rek' → logprob: -13.001453399658203
    10. 'r' → logprob: -13.376453399658203

Token 352: 'fast' (ID: 10472)
  Prédit: 'fast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fast' → logprob: -1.3544423381972592e-05
    2. '_fast' → logprob: -11.62501335144043
    3. 'ast' → logprob: -12.50001335144043
    4. 'Fast' → logprob: -14.87501335144043
    5. 'ak' → logprob: -15.62501335144043
    6. 'FAST' → logprob: -16.37501335144043
    7. 'af' → logprob: -16.50001335144043
    8. '.fast' → logprob: -16.75001335144043
    9. ' fast' → logprob: -17.12501335144043
    10. 'fas' → logprob: -17.25001335144043

Token 353: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.5
    3. ' [' → logprob: -17.0
    4. ')[' → logprob: -18.75
    5. '[j' → logprob: -20.0
    6. '```' → logprob: -20.75
    7. '[s' → logprob: -21.875
    8. '[b' → logprob: -22.0
    9. 'i' → logprob: -22.0
    10. ')' → logprob: -22.125

Token 354: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.100382961332798
    2. '][' → logprob: -2.3503830432891846
    3. '0' → logprob: -8.975382804870605
    4. ']' → logprob: -10.975382804870605
    5. ' [' → logprob: -11.100382804870605
    6. ')[' → logprob: -11.975382804870605
    7. '1' → logprob: -12.850382804870605
    8. '
' → logprob: -13.725382804870605
    9. '   ' → logprob: -13.725382804870605
    10. ' ][' → logprob: -13.850382804870605

Token 355: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8087270038668066e-05
    2. '1' → logprob: -10.500027656555176
    3. ' ' → logprob: -15.000027656555176
    4. '   ' → logprob: -16.312528610229492
    5. '
' → logprob: -17.125028610229492
    6. '[' → logprob: -17.687528610229492
    7. ')' → logprob: -18.625028610229492
    8. '۰' → logprob: -18.750028610229492
    9. ']' → logprob: -19.062528610229492
    10. '```' → logprob: -19.500028610229492

Token 356: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014362464658915997
    2. ')
' → logprob: -4.264362335205078
    3. ' )' → logprob: -8.639362335205078
    4. ' )
' → logprob: -11.014362335205078
    5. ')
' → logprob: -13.014362335205078
    6. '   ' → logprob: -13.639362335205078
    7. ')

' → logprob: -14.139362335205078
    8. '),' → logprob: -15.389362335205078
    9. ')}' → logprob: -15.889362335205078
    10. ' ' → logprob: -15.889362335205078

Token 357: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007457832107320428
    2. '   ' → logprob: -7.50074577331543
    3. ' breakfast' → logprob: -9.12574577331543
    4. 'break' → logprob: -10.25074577331543
    5. ' ' → logprob: -11.50074577331543
    6. ' break' → logprob: -11.62574577331543
    7. '	' → logprob: -12.12574577331543
    8. ',b' → logprob: -12.37574577331543
    9. '
' → logprob: -12.87574577331543
    10. 'b' → logprob: -13.00074577331543

Token 358: ' breakfast' (ID: 16356)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.06201429292559624
    2. ' breakfast' → logprob: -2.81201434135437
    3. ' break' → logprob: -10.18701457977295
    4. '       ' → logprob: -12.43701457977295
    5. '   ' → logprob: -13.31201457977295
    6. 'Breakfast' → logprob: -13.68701457977295
    7. '_break' → logprob: -14.68701457977295
    8. 'bread' → logprob: -14.81201457977295
    9. 'bre' → logprob: -15.31201457977295
    10. 'birth' → logprob: -15.68701457977295

Token 359: '_candidates' (ID: 186937)
  Prédit: '_candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -5.512236498361744e-07
    2. '_choices' → logprob: -15.500000953674316
    3. ')_' → logprob: -17.25
    4. '_candidate' → logprob: -17.375
    5. '
' → logprob: -17.375
    6. '[' → logprob: -17.625
    7. '```' → logprob: -17.875
    8. '_constraints' → logprob: -18.5
    9. '.setdefault' → logprob: -18.5
    10. '._' → logprob: -18.625

Token 360: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.029767613857984543
    2. '.' → logprob: -3.5297675132751465
    3. ' .' → logprob: -11.029767990112305
    4. '.update' → logprob: -15.029767990112305
    5. 'add' → logprob: -15.154767990112305
    6. '.Add' → logprob: -15.779767990112305
    7. '.
' → logprob: -16.154767990112305
    8. ').' → logprob: -16.654767990112305
    9. '.append' → logprob: -16.904767990112305
    10. '   ' → logprob: -17.279767990112305

Token 361: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -7.107425062713446e-06
    2. '(' → logprob: -11.875006675720215
    3. '((' → logprob: -18.00000762939453
    4. ' (' → logprob: -18.00000762939453
    5. '(B' → logprob: -19.25000762939453
    6. '(
' → logprob: -20.37500762939453
    7. 'break' → logprob: -20.50000762939453
    8. '(f' → logprob: -21.37500762939453
    9. '/b' → logprob: -21.50000762939453
    10. 'b' → logprob: -21.75000762939453

Token 362: 'reak' (ID: 1738)
  Prédit: 'reak'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reak' → logprob: -0.3884042799472809
    2. 'break' → logprob: -1.1384042501449585
    3. 'fast' → logprob: -6.513404369354248
    4. 'Breakfast' → logprob: -11.13840389251709
    5. 'ak' → logprob: -11.63840389251709
    6. 're' → logprob: -12.13840389251709
    7. '```' → logprob: -12.38840389251709
    8. '   ' → logprob: -12.76340389251709
    9. '_break' → logprob: -12.76340389251709
    10. ' breakfast' → logprob: -13.13840389251709

Token 363: 'fast' (ID: 10472)
  Prédit: 'fast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fast' → logprob: -0.00010425841173855588
    2. '_fast' → logprob: -10.250103950500488
    3. 'FAST' → logprob: -11.125103950500488
    4. 'ak' → logprob: -11.250103950500488
    5. '[i' → logprob: -11.250103950500488
    6. 'Fast' → logprob: -11.625103950500488
    7. 'ast' → logprob: -11.875103950500488
    8. '[' → logprob: -12.625103950500488
    9. 'fst' → logprob: -12.875103950500488
    10. '.fast' → logprob: -13.000103950500488

Token 364: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.0
    3. 'i' → logprob: -17.25
    4. '```' → logprob: -17.75
    5. ' [' → logprob: -18.0
    6. '
' → logprob: -18.0
    7. '[
' → logprob: -19.375
    8. 's' → logprob: -19.5
    9. ')[' → logprob: -19.625
    10. ' ' → logprob: -20.0

Token 365: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006872137077152729
    2. '[i' → logprob: -5.006872177124023
    3. '[' → logprob: -9.131872177124023
    4. ' ][' → logprob: -10.756872177124023
    5. ']' → logprob: -11.881872177124023
    6. ')[' → logprob: -12.006872177124023
    7. 'i' → logprob: -12.381872177124023
    8. '   ' → logprob: -13.006872177124023
    9. '"][' → logprob: -13.381872177124023
    10. '
' → logprob: -14.006872177124023

Token 366: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. '0' → logprob: -12.500003814697266
    3. 'i' → logprob: -15.625003814697266
    4. ' ' → logprob: -16.250003814697266
    5. '```' → logprob: -17.500003814697266
    6. '   ' → logprob: -17.875003814697266
    7. '[i' → logprob: -17.875003814697266
    8. '(i' → logprob: -19.000003814697266
    9. '
' → logprob: -19.125003814697266
    10. '`' → logprob: -19.125003814697266

Token 367: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.746380237629637e-05
    2. ')
' → logprob: -9.375097274780273
    3. '   ' → logprob: -12.125097274780273
    4. '       ' → logprob: -12.750097274780273
    5. ' )' → logprob: -12.875097274780273
    6. '())' → logprob: -14.250097274780273
    7. '<|end|>' → logprob: -15.250097274780273
    8. '))' → logprob: -15.750097274780273
    9. '])' → logprob: -15.875097274780273
    10. '})' → logprob: -16.125097274780273

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04084219038486481
    2. ' lunch' → logprob: -3.790842294692993
    3. '
' → logprob: -4.665842056274414
    4. '   ' → logprob: -5.040842056274414
    5. '	l' → logprob: -7.540842056274414
    6. 'for' → logprob: -8.040842056274414
    7. '```' → logprob: -9.290842056274414
    8. '        
' → logprob: -9.540842056274414
    9. 'l' → logprob: -9.790842056274414
    10. ' for' → logprob: -9.915842056274414

Token 369: ' lunch' (ID: 17418)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5719996094703674
    2. ' lunch' → logprob: -1.0719995498657227
    3. '   ' → logprob: -2.8219995498657227
    4. '       ' → logprob: -3.4469995498657227
    5. ' ' → logprob: -6.821999549865723
    6. ' l' → logprob: -8.071999549865723
    7. 'for' → logprob: -8.446999549865723
    8. '	l' → logprob: -8.946999549865723
    9. ' for' → logprob: -9.696999549865723
    10. '  ' → logprob: -10.446999549865723

Token 370: '_candidates' (ID: 186937)
  Prédit: '_candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -1.9361264946837764e-07
    2. '_choices' → logprob: -17.25
    3. '_candidate' → logprob: -18.375
    4. '
' → logprob: -18.5
    5. '_targets' → logprob: -18.625
    6. '_' → logprob: -18.75
    7. 'Candidates' → logprob: -18.75
    8. '```' → logprob: -19.0
    9. ''_' → logprob: -19.125
    10. '_students' → logprob: -19.5

Token 371: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0015152193373069167
    2. '.' → logprob: -6.5015153884887695
    3. ' .' → logprob: -11.37651538848877
    4. '.update' → logprob: -13.62651538848877
    5. 'add' → logprob: -16.376514434814453
    6. '.setdefault' → logprob: -16.501514434814453
    7. '   ' → logprob: -17.001514434814453
    8. '.append' → logprob: -17.251514434814453
    9. '       ' → logprob: -17.376514434814453
    10. '.Add' → logprob: -17.751514434814453

Token 372: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -2.5776860184123507e-06
    2. 'l' → logprob: -13.25000286102295
    3. '(' → logprob: -14.37500286102295
    4. ' lunch' → logprob: -16.750001907348633
    5. 'Lunch' → logprob: -17.750001907348633
    6. '	l' → logprob: -17.875001907348633
    7. '(s' → logprob: -18.125001907348633
    8. '((' → logprob: -18.750001907348633
    9. '(L' → logprob: -18.750001907348633
    10. ' (' → logprob: -18.750001907348633

Token 373: 'unch' (ID: 4446)
  Prédit: 'unch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unch' → logprob: -0.1639096438884735
    2. 'l' → logprob: -1.913909673690796
    3. ' lunch' → logprob: -5.913909435272217
    4. 'break' → logprob: -7.163909435272217
    5. 'Lunch' → logprob: -9.538909912109375
    6. '   ' → logprob: -9.663909912109375
    7. '(l' → logprob: -11.288909912109375
    8. '[l' → logprob: -12.038909912109375
    9. 'un' → logprob: -12.163909912109375
    10. '    ' → logprob: -12.288909912109375

Token 374: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02975570224225521
    2. '[l' → logprob: -3.5297555923461914
    3. '[j' → logprob: -12.404755592346191
    4. '[' → logprob: -14.404755592346191
    5. 'l' → logprob: -15.654755592346191
    6. '_candidates' → logprob: -16.779756546020508
    7. '[L' → logprob: -17.029756546020508
    8. '[c' → logprob: -17.529756546020508
    9. '_l' → logprob: -17.779756546020508
    10. '
' → logprob: -18.029756546020508

Token 375: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.20640482008457184
    2. '[i' → logprob: -1.8314048051834106
    3. '[' → logprob: -3.7064049243927
    4. ')[' → logprob: -6.706404685974121
    5. '0' → logprob: -9.206404685974121
    6. '   ' → logprob: -9.331404685974121
    7. ' ][' → logprob: -9.456404685974121
    8. 'i' → logprob: -9.581404685974121
    9. ' [' → logprob: -9.956404685974121
    10. '       ' → logprob: -10.081404685974121

Token 376: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.491498531133402e-06
    2. '1' → logprob: -12.375009536743164
    3. ' ' → logprob: -12.750009536743164
    4. 'i' → logprob: -13.250009536743164
    5. '   ' → logprob: -15.750009536743164
    6. '[' → logprob: -16.500009536743164
    7. '
' → logprob: -16.750009536743164
    8. ' i' → logprob: -17.375009536743164
    9. '۰' → logprob: -17.875009536743164
    10. '  ' → logprob: -17.937509536743164

Token 377: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20236638188362122
    2. ')
' → logprob: -1.7023663520812988
    3. '       ' → logprob: -7.327366352081299
    4. '   ' → logprob: -8.202366828918457
    5. ' )
' → logprob: -11.577366828918457
    6. ' )' → logprob: -12.077366828918457
    7. '())
' → logprob: -13.202366828918457
    8. ')
' → logprob: -13.452366828918457
    9. '())' → logprob: -14.577366828918457
    10. ' ' → logprob: -14.702366828918457

Token 378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11322423070669174
    2. ' lunch' → logprob: -2.2382242679595947
    3. 'l' → logprob: -8.363224029541016
    4. '   ' → logprob: -9.238224029541016
    5. 'Lunch' → logprob: -10.863224029541016
    6. '[l' → logprob: -11.613224029541016
    7. ' l' → logprob: -11.613224029541016
    8. '	l' → logprob: -11.863224029541016
    9. '<|end|>' → logprob: -12.113224029541016
    10. ' ' → logprob: -12.113224029541016

Token 379: ' lunch' (ID: 17418)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.25195178389549255
    2. ' lunch' → logprob: -1.501951813697815
    3. 'Lunch' → logprob: -11.376952171325684
    4. 'lun' → logprob: -11.751952171325684
    5. '   ' → logprob: -14.376952171325684
    6. '	l' → logprob: -14.751952171325684
    7. 'laugh' → logprob: -15.001952171325684
    8. ' l' → logprob: -15.126952171325684
    9. '[l' → logprob: -15.376952171325684
    10. '       ' → logprob: -15.751952171325684

Token 380: '_candidates' (ID: 186937)
  Prédit: '_candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -1.8624639324116288e-06
    2. 'Candidates' → logprob: -14.250001907348633
    3. '[i' → logprob: -14.375001907348633
    4. 'c' → logprob: -15.875001907348633
    5. 's' → logprob: -15.875001907348633
    6. 'for' → logprob: -16.250001907348633
    7. '```' → logprob: -16.875001907348633
    8. '
' → logprob: -17.250001907348633
    9. '_choices' → logprob: -17.625001907348633
    10. '.add' → logprob: -17.750001907348633

Token 381: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00041398804751224816
    2. '.' → logprob: -8.37541389465332
    3. 'add' → logprob: -8.62541389465332
    4. '       ' → logprob: -13.12541389465332
    5. ' .' → logprob: -13.62541389465332
    6. '   ' → logprob: -15.50041389465332
    7. ')add' → logprob: -16.00041389465332
    8. '           ' → logprob: -16.37541389465332
    9. ' add' → logprob: -16.50041389465332
    10. ').' → logprob: -16.50041389465332

Token 382: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.0206720617134124e-05
    2. '(' → logprob: -12.50001049041748
    3. 'l' → logprob: -12.62501049041748
    4. '(s' → logprob: -13.37501049041748
    5. ' lunch' → logprob: -13.62501049041748
    6. 'Lunch' → logprob: -16.250009536743164
    7. '	l' → logprob: -16.500009536743164
    8. ' (' → logprob: -16.750009536743164
    9. '(
' → logprob: -16.875009536743164
    10. 's' → logprob: -17.125009536743164

Token 383: 'unch' (ID: 4446)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03383437544107437
    2. 'unch' → logprob: -4.283834457397461
    3. '[i' → logprob: -4.533834457397461
    4. '[l' → logprob: -5.158834457397461
    5. 's' → logprob: -6.283834457397461
    6. '(l' → logprob: -8.033834457397461
    7. ' lunch' → logprob: -8.033834457397461
    8. '(i' → logprob: -8.533834457397461
    9. 'i' → logprob: -9.158834457397461
    10. 'lun' → logprob: -9.658834457397461

Token 384: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.664371848164592e-05
    2. 'i' → logprob: -11.750016212463379
    3. '[l' → logprob: -12.000016212463379
    4. '[' → logprob: -13.000016212463379
    5. '
' → logprob: -16.000017166137695
    6. '```' → logprob: -16.375017166137695
    7. '(i' → logprob: -17.125017166137695
    8. '{i' → logprob: -17.375017166137695
    9. 's' → logprob: -18.125017166137695
    10. ' [' → logprob: -18.250017166137695

Token 385: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7163621187210083
    2. '][' → logprob: -1.2163621187210083
    3. '[' → logprob: -1.5913621187210083
    4. '1' → logprob: -4.716361999511719
    5. 'i' → logprob: -6.341361999511719
    6. ')[' → logprob: -7.466361999511719
    7. ']' → logprob: -9.591361999511719
    8. '(i' → logprob: -10.216361999511719
    9. ' [' → logprob: -10.466361999511719
    10. ')' → logprob: -10.716361999511719

Token 386: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.951771421066951e-05
    2. 'i' → logprob: -10.500029563903809
    3. '0' → logprob: -13.625029563903809
    4. '[i' → logprob: -14.500029563903809
    5. '[' → logprob: -16.375028610229492
    6. '
' → logprob: -16.875028610229492
    7. ' ' → logprob: -17.375028610229492
    8. ' i' → logprob: -17.500028610229492
    9. '(i' → logprob: -17.875028610229492
    10. '   ' → logprob: -18.250028610229492

Token 387: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007271760143339634
    2. '       ' → logprob: -5.132271766662598
    3. ')
' → logprob: -6.882271766662598
    4. '   ' → logprob: -8.257271766662598
    5. ' )' → logprob: -10.257271766662598
    6. '<|end|>' → logprob: -11.382271766662598
    7. '()' → logprob: -13.132271766662598
    8. ' ' → logprob: -13.382271766662598
    9. '```' → logprob: -13.382271766662598
    10. '())' → logprob: -13.632271766662598

Token 388: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010828498750925064
    2. 's' → logprob: -4.635828495025635
    3. '   ' → logprob: -6.885828495025635
    4. 'for' → logprob: -10.385828971862793
    5. 'sup' → logprob: -11.510828971862793
    6. ' supper' → logprob: -12.885828971862793
    7. ' ' → logprob: -13.385828971862793
    8. '           ' → logprob: -13.510828971862793
    9. '      ' → logprob: -14.010828971862793
    10. '     ' → logprob: -14.260828971862793

Token 389: ' supper' (ID: 120158)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.6696149840718135e-05
    2. ' supper' → logprob: -10.125056266784668
    3. 'for' → logprob: -11.625056266784668
    4. '       ' → logprob: -12.375056266784668
    5. '   ' → logprob: -13.125056266784668
    6. 'd' → logprob: -14.375056266784668
    7. 'sup' → logprob: -15.625056266784668
    8. 'supp' → logprob: -15.875056266784668
    9. 'super' → logprob: -16.250057220458984
    10. ' for' → logprob: -16.375057220458984

Token 390: '_candidates' (ID: 186937)
  Prédit: '_candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -1.9361264946837764e-07
    2. '_choices' → logprob: -17.25
    3. '_s' → logprob: -17.375
    4. 's' → logprob: -17.625
    5. 'Candidates' → logprob: -18.25
    6. '_targets' → logprob: -18.625
    7. '```' → logprob: -19.5
    8. '_candidate' → logprob: -19.625
    9. '_samples' → logprob: -20.0
    10. '._' → logprob: -20.125

Token 391: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0004324573092162609
    2. '.' → logprob: -7.75043249130249
    3. 'add' → logprob: -13.500432014465332
    4. ' .' → logprob: -15.750432014465332
    5. '.append' → logprob: -16.50043296813965
    6. '.update' → logprob: -16.50043296813965
    7. '.Add' → logprob: -17.00043296813965
    8. '.setdefault' → logprob: -17.12543296813965
    9. '	add' → logprob: -19.50043296813965
    10. '_add' → logprob: -19.62543296813965

Token 392: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -9.014684110297821e-06
    2. 's' → logprob: -11.625008583068848
    3. '(' → logprob: -18.375009536743164
    4. '((' → logprob: -20.125009536743164
    5. '(super' → logprob: -20.875009536743164
    6. ' (' → logprob: -21.000009536743164
    7. 'sup' → logprob: -21.125009536743164
    8. '   ' → logprob: -21.500009536743164
    9. '(
' → logprob: -21.625009536743164
    10. '(b' → logprob: -22.250009536743164

Token 393: 'upper' (ID: 26119)
  Prédit: 'upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.0012114259880036116
    2. 's' → logprob: -6.751211643218994
    3. 'sup' → logprob: -11.126211166381836
    4. '(s' → logprob: -11.626211166381836
    5. '[' → logprob: -12.876211166381836
    6. '[s' → logprob: -12.876211166381836
    7. ' supper' → logprob: -13.126211166381836
    8. 'pper' → logprob: -13.251211166381836
    9. '.upper' → logprob: -13.626211166381836
    10. 'uper' → logprob: -13.626211166381836

Token 394: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.057743949990254e-05
    2. '[s' → logprob: -10.875020980834961
    3. '_candidates' → logprob: -14.000020980834961
    4. '[' → logprob: -15.000020980834961
    5. '[j' → logprob: -15.250020980834961
    6. '[c' → logprob: -16.87502098083496
    7. 's' → logprob: -17.37502098083496
    8. '_s' → logprob: -17.50002098083496
    9. '```' → logprob: -18.50002098083496
    10. 'Candidates' → logprob: -18.75002098083496

Token 395: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.45546793937683105
    2. '[' → logprob: -1.580467939376831
    3. '[i' → logprob: -2.080467939376831
    4. '0' → logprob: -3.705467939376831
    5. 'i' → logprob: -4.70546817779541
    6. ')[' → logprob: -7.58046817779541
    7. ' [' → logprob: -8.58046817779541
    8. '[][' → logprob: -9.08046817779541
    9. ' ][' → logprob: -9.33046817779541
    10. '   ' → logprob: -9.58046817779541

Token 396: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006261985283344984
    2. 'i' → logprob: -5.506261825561523
    3. '1' → logprob: -6.131261825561523
    4. ' ' → logprob: -12.631261825561523
    5. ' i' → logprob: -13.506261825561523
    6. '[i' → logprob: -14.006261825561523
    7. '   ' → logprob: -14.756261825561523
    8. '[' → logprob: -14.881261825561523
    9. '
' → logprob: -15.131261825561523
    10. '(i' → logprob: -15.256261825561523

Token 397: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3144356906414032
    2. ')
' → logprob: -1.3144357204437256
    3. '       ' → logprob: -7.1894354820251465
    4. ')s' → logprob: -8.939435958862305
    5. ' )
' → logprob: -9.314435958862305
    6. '   ' → logprob: -9.314435958862305
    7. ' )' → logprob: -9.439435958862305
    8. 's' → logprob: -10.814435958862305
    9. ' ' → logprob: -13.564435958862305
    10. ')

' → logprob: -13.689435958862305

Token 398: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006416652468033135
    2. 's' → logprob: -7.500641822814941
    3. '   ' → logprob: -9.500641822814941
    4. '```' → logprob: -12.000641822814941
    5. ' ' → logprob: -13.375641822814941
    6. '``' → logprob: -13.625641822814941
    7. '      ' → logprob: -13.750641822814941
    8. 'sup' → logprob: -14.125641822814941
    9. '        
' → logprob: -14.250641822814941
    10. '        ' → logprob: -14.375641822814941

Token 399: ' supper' (ID: 120158)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3856492842023727e-06
    2. ' supper' → logprob: -13.750000953674316
    3. 'sup' → logprob: -15.625000953674316
    4. 'supp' → logprob: -17.125001907348633
    5. '   ' → logprob: -17.500001907348633
    6. '       ' → logprob: -17.625001907348633
    7. '```' → logprob: -17.875001907348633
    8. 'super' → logprob: -18.625001907348633
    9. '
' → logprob: -18.875001907348633
    10. 'd' → logprob: -19.250001907348633

Token 400: '_candidates' (ID: 186937)
  Prédit: '_candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -1.8312570318812504e-05
    2. '.add' → logprob: -11.125018119812012
    3. 'add' → logprob: -13.375018119812012
    4. 'Candidates' → logprob: -14.000018119812012
    5. 's' → logprob: -14.500018119812012
    6. '._' → logprob: -16.375019073486328
    7. '_choices' → logprob: -16.625019073486328
    8. '.' → logprob: -16.750019073486328
    9. '```' → logprob: -16.750019073486328
    10. '.append' → logprob: -16.875019073486328

Token 401: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00030721822986379266
    2. '.' → logprob: -8.250307083129883
    3. 'add' → logprob: -10.000307083129883
    4. ' .' → logprob: -15.125307083129883
    5. 's' → logprob: -16.500307083129883
    6. '.update' → logprob: -17.125307083129883
    7. '   ' → logprob: -17.625307083129883
    8. ' add' → logprob: -18.375307083129883
    9. '.append' → logprob: -18.500307083129883
    10. '{}.' → logprob: -18.625307083129883

Token 402: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.8624639324116288e-06
    2. 's' → logprob: -13.250001907348633
    3. '(' → logprob: -19.500001907348633
    4. '(super' → logprob: -19.875001907348633
    5. 'sup' → logprob: -20.375001907348633
    6. '((' → logprob: -21.125001907348633
    7. ' (' → logprob: -21.250001907348633
    8. '(b' → logprob: -22.000001907348633
    9. '   ' → logprob: -22.125001907348633
    10. '(
' → logprob: -22.375001907348633

Token 403: 'upper' (ID: 26119)
  Prédit: 'upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.021066943183541298
    2. 's' → logprob: -3.896066904067993
    3. 'sup' → logprob: -8.146066665649414
    4. 'up' → logprob: -9.646066665649414
    5. '(s' → logprob: -10.146066665649414
    6. 'uppe' → logprob: -10.396066665649414
    7. ' supper' → logprob: -11.146066665649414
    8. '[s' → logprob: -11.146066665649414
    9. 'upp' → logprob: -11.146066665649414
    10. '[' → logprob: -11.271066665649414

Token 404: '[i' (ID: 1768)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7105896472930908
    2. '[i' → logprob: -0.7105896472930908
    3. '[s' → logprob: -4.085589408874512
    4. 'sup' → logprob: -8.085589408874512
    5. '[' → logprob: -9.085589408874512
    6. 'i' → logprob: -10.960589408874512
    7. '(i' → logprob: -11.710589408874512
    8. '(s' → logprob: -11.710589408874512
    9. '
' → logprob: -12.460589408874512
    10. '   ' → logprob: -12.460589408874512

Token 405: '][' (ID: 2696)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09793822467327118
    2. '][' → logprob: -2.722938299179077
    3. '[' → logprob: -3.597938299179077
    4. ']' → logprob: -9.097938537597656
    5. '   ' → logprob: -9.972938537597656
    6. ')[' → logprob: -10.597938537597656
    7. '])' → logprob: -11.847938537597656
    8. '0' → logprob: -11.972938537597656
    9. ' ' → logprob: -12.347938537597656
    10. '(' → logprob: -12.597938537597656

Token 406: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.5
    3. '0' → logprob: -16.0
    4. '
' → logprob: -16.5
    5. ' ' → logprob: -17.25
    6. '```' → logprob: -17.375
    7. '   ' → logprob: -17.875
    8. '１' → logprob: -18.25
    9. 'i' → logprob: -18.5
    10. ']' → logprob: -18.5

Token 407: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.700132997939363e-05
    2. ')
' → logprob: -12.250017166137695
    3. '   ' → logprob: -12.625017166137695
    4. '())' → logprob: -12.750017166137695
    5. '       ' → logprob: -12.875017166137695
    6. ' )' → logprob: -13.375017166137695
    7. '()' → logprob: -13.375017166137695
    8. ')

' → logprob: -16.125017166137695
    9. '))' → logprob: -16.500017166137695
    10. '`)' → logprob: -17.000017166137695

Token 408: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021190200001001358
    2. 'max' → logprob: -4.396190166473389
    3. '
' → logprob: -5.271190166473389
    4. 'def' → logprob: -6.646190166473389
    5. '    
' → logprob: -6.896190166473389
    6. ' max' → logprob: -7.271190166473389
    7. '```' → logprob: -8.521190643310547
    8. 'count' → logprob: -8.896190643310547
    9. 'counts' → logprob: -10.271190643310547
    10. ' counts' → logprob: -11.146190643310547

Token 409: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.0043736291117966175
    2. 'best' → logprob: -6.004373550415039
    3. '   ' → logprob: -7.004373550415039
    4. 'def' → logprob: -7.629373550415039
    5. 'result' → logprob: -8.504373550415039
    6. 'answer' → logprob: -9.004373550415039
    7. 'ans' → logprob: -9.879373550415039
    8. 'count' → logprob: -10.254373550415039
    9. 'res' → logprob: -10.379373550415039
    10. ' max' → logprob: -10.379373550415039

Token 410: '_count' (ID: 7536)
  Prédit: '_custom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_custom' → logprob: -0.36157524585723877
    2. '_count' → logprob: -1.2365752458572388
    3. '_break' → logprob: -4.611575126647949
    4. '_serv' → logprob: -6.236575126647949
    5. '_customer' → logprob: -7.486575126647949
    6. '_counts' → logprob: -8.48657512664795
    7. '_clients' → logprob: -8.98657512664795
    8. '_cnt' → logprob: -9.48657512664795
    9. '_b' → logprob: -10.48657512664795
    10. '_total' → logprob: -10.48657512664795

Token 411: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03827671706676483
    2. '=' → logprob: -3.2882766723632812
    3. '_' → logprob: -8.538276672363281
    4. '   ' → logprob: -10.663276672363281
    5. '  ' → logprob: -12.663276672363281
    6. '_=' → logprob: -12.663276672363281
    7. ',' → logprob: -13.288276672363281
    8. ' ' → logprob: -13.288276672363281
    9. '_space' → logprob: -13.538276672363281
    10. '_b' → logprob: -13.788276672363281

Token 412: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013296448159962893
    2. ' ' → logprob: -6.62632942199707
    3. '-' → logprob: -13.37632942199707
    4. '   ' → logprob: -13.50132942199707
    5. ' -' → logprob: -14.62632942199707
    6. '[' → logprob: -16.62632942199707
    7. ' ' → logprob: -16.68882942199707
    8. '```' → logprob: -17.06382942199707
    9. '  ' → logprob: -17.62632942199707
    10. '=' → logprob: -18.56382942199707

Token 413: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0325924449716695e-05
    2. '-' → logprob: -12.00001049041748
    3. ' ' → logprob: -12.62501049041748
    4. '[' → logprob: -15.00001049041748
    5. 'float' → logprob: -15.50001049041748
    6. '   ' → logprob: -16.562509536743164
    7. '```' → logprob: -16.812509536743164
    8. 'max' → logprob: -17.312509536743164
    9. ' -' → logprob: -17.500009536743164
    10. '(' → logprob: -17.750009536743164

Token 414: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010442462749779224
    2. '
' → logprob: -4.88544225692749
    3. '    
' → logprob: -6.76044225692749
    4. 'for' → logprob: -6.88544225692749
    5. ' for' → logprob: -7.38544225692749
    6. '<|end|>' → logprob: -11.385442733764648
    7. '```' → logprob: -12.635442733764648
    8. ' 
' → logprob: -12.635442733764648
    9. '  
' → logprob: -13.010442733764648
    10. ',' → logprob: -13.135442733764648

Token 415: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00033903829171322286
    2. 'for' → logprob: -8.25033950805664
    3. ' for' → logprob: -9.62533950805664
    4. '    
' → logprob: -11.62533950805664
    5. '
' → logprob: -13.12533950805664
    6. '```' → logprob: -14.75033950805664
    7. '	for' → logprob: -15.50033950805664
    8. '<|end|>' → logprob: -15.87533950805664
    9. 'def' → logprob: -17.00033950805664
    10. '       ' → logprob: -17.37533950805664

Token 416: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.031217385083436966
    2. '   ' → logprob: -3.531217336654663
    3. ' for' → logprob: -6.531217575073242
    4. '	for' → logprob: -12.656217575073242
    5. '
' → logprob: -13.031217575073242
    6. '```' → logprob: -13.531217575073242
    7. '    
' → logprob: -13.781217575073242
    8. ' ' → logprob: -15.031217575073242
    9. '  ' → logprob: -15.656217575073242
    10. 'break' → logprob: -15.781217575073242

Token 417: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004634392389561981
    2. '   ' → logprob: -7.750463485717773
    3. ' for' → logprob: -10.375463485717773
    4. '```' → logprob: -13.625463485717773
    5. 'times' → logprob: -16.375463485717773
    6. 'break' → logprob: -16.625463485717773
    7. '
' → logprob: -16.750463485717773
    8. '``' → logprob: -17.375463485717773
    9. 'all' → logprob: -17.500463485717773
    10. 'from' → logprob: -18.000463485717773

Token 418: ' each' (ID: 2454)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10292915254831314
    2. 'bt' → logprob: -2.97792911529541
    3. 'break' → logprob: -3.60292911529541
    4. 'bf' → logprob: -5.10292911529541
    5. 'time' → logprob: -5.47792911529541
    6. 'bs' → logprob: -6.22792911529541
    7. 'bst' → logprob: -6.60292911529541
    8. 'br' → logprob: -6.60292911529541
    9. 'bk' → logprob: -6.72792911529541
    10. ' b' → logprob: -6.85292911529541

Token 419: ' combination' (ID: 14083)
  Prédit: 'meal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'meal' → logprob: -0.45524486899375916
    2. 'time' → logprob: -1.5802448987960815
    3. 'candidate' → logprob: -2.705244779586792
    4. 'period' → logprob: -3.705244779586792
    5. 'b' → logprob: -4.080245018005371
    6. 'cand' → logprob: -4.455245018005371
    7. ' meal' → logprob: -4.955245018005371
    8. 'c' → logprob: -5.080245018005371
    9. 't' → logprob: -5.455245018005371
    10. 'category' → logprob: -5.580245018005371

Token 420: ' of' (ID: 328)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.210243359208107
    2. '   ' → logprob: -2.2102434635162354
    3. 'in' → logprob: -3.3352434635162354
    4. 'for' → logprob: -4.085243225097656
    5. 'of' → logprob: -4.460243225097656
    6. ' of' → logprob: -4.585243225097656
    7. 'b' → logprob: -5.710243225097656
    8. 'break' → logprob: -6.835243225097656
    9. ' for' → logprob: -7.085243225097656
    10. ' b' → logprob: -9.210243225097656

Token 421: ' breakfast' (ID: 16356)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06576086580753326
    2. 'break' → logprob: -2.940760850906372
    3. 'bt' → logprob: -5.190761089324951
    4. 'bf' → logprob: -6.065761089324951
    5. ' b' → logprob: -6.690761089324951
    6. ' breakfast' → logprob: -6.940761089324951
    7. 'bk' → logprob: -8.065760612487793
    8. 'br' → logprob: -9.315760612487793
    9. 'bst' → logprob: -9.565760612487793
    10. ' bt' → logprob: -10.065760612487793

Token 422: ',' (ID: 11)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.1566813737154007
    2. 'time' → logprob: -2.1566812992095947
    3. '_times' → logprob: -4.281681537628174
    4. '_start' → logprob: -4.906681537628174
    5. '_candidate' → logprob: -5.406681537628174
    6. 'times' → logprob: -6.531681537628174
    7. 'start' → logprob: -6.906681537628174
    8. '_candidates' → logprob: -7.656681537628174
    9. '_' → logprob: -8.281681060791016
    10. 'candidate' → logprob: -9.281681060791016

Token 423: ' lunch' (ID: 17418)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.448718786239624
    2. ' lunch' → logprob: -1.323718786239624
    3. 'for' → logprob: -2.573718786239624
    4. ' for' → logprob: -4.323719024658203
    5. 'break' → logprob: -5.448719024658203
    6. ' breakfast' → logprob: -6.698719024658203
    7. '   ' → logprob: -8.823719024658203
    8. ' l' → logprob: -9.448719024658203
    9. 'lun' → logprob: -9.573719024658203
    10. ' break' → logprob: -10.948719024658203

Token 424: ',' (ID: 11)
  Prédit: '_candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -0.8240067362785339
    2. ',' → logprob: -0.9490067362785339
    3. '_times' → logprob: -1.9490067958831787
    4. 'times' → logprob: -4.0740065574646
    5. 'time' → logprob: -5.6990065574646
    6. ',_' → logprob: -5.8240065574646
    7. '_,' → logprob: -6.3240065574646
    8. 'for' → logprob: -6.3240065574646
    9. '_candidate' → logprob: -6.6990065574646
    10. '_time' → logprob: -7.0740065574646

Token 425: ' supper' (ID: 120158)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0105833038687706
    2. ' supper' → logprob: -5.260583400726318
    3. 'and' → logprob: -5.510583400726318
    4. ' and' → logprob: -7.260583400726318
    5. 'sup' → logprob: -8.51058292388916
    6. '   ' → logprob: -8.63558292388916
    7. '```' → logprob: -9.13558292388916
    8. ' ' → logprob: -10.63558292388916
    9. '#' → logprob: -11.01058292388916
    10. 'd' → logprob: -11.38558292388916

Token 426: ' serving' (ID: 17662)
  Prédit: '_times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_times' → logprob: -0.1274169683456421
    2. '_candidates' → logprob: -3.5024170875549316
    3. 'for' → logprob: -3.7524170875549316
    4. '   ' → logprob: -4.002417087554932
    5. ' for' → logprob: -4.627417087554932
    6. ':
' → logprob: -4.877417087554932
    7. ' in' → logprob: -5.127417087554932
    8. ' times' → logprob: -5.127417087554932
    9. '_time' → logprob: -5.377417087554932
    10. 'times' → logprob: -5.502417087554932

Token 427: ' times' (ID: 4238)
  Prédit: '_times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_times' → logprob: -0.3379227817058563
    2. 'times' → logprob: -1.3379228115081787
    3. 'time' → logprob: -4.3379225730896
    4. '_time' → logprob: -4.5879225730896
    5. 'for' → logprob: -6.9629225730896
    6. ' times' → logprob: -9.462923049926758
    7. '_break' → logprob: -9.962923049926758
    8. 'break' → logprob: -10.337923049926758
    9. '   ' → logprob: -11.962923049926758
    10. '```' → logprob: -13.087923049926758

Token 428: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025616264902055264
    2. 'for' → logprob: -6.252561569213867
    3. ' for' → logprob: -7.627561569213867
    4. '
' → logprob: -9.002561569213867
    5. '    
' → logprob: -11.252561569213867
    6. ',' → logprob: -11.752561569213867
    7. '	for' → logprob: -14.752561569213867
    8. ':' → logprob: -15.002561569213867
    9. 'from' → logprob: -15.377561569213867
    10. '<|end|>' → logprob: -15.877561569213867

Token 429: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5549765825271606
    2. 'for' → logprob: -1.0549765825271606
    3. ' for' → logprob: -2.554976463317871
    4. '	for' → logprob: -12.054976463317871
    5. ' ' → logprob: -12.804976463317871
    6. '  ' → logprob: -12.929976463317871
    7. '
' → logprob: -13.054976463317871
    8. '    
' → logprob: -13.054976463317871
    9. 'from' → logprob: -13.054976463317871
    10. '    ' → logprob: -13.804976463317871

Token 430: ' how' (ID: 1495)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.205940380692482
    2. '   ' → logprob: -1.7059403657913208
    3. ' for' → logprob: -5.455940246582031
    4. '       ' → logprob: -9.580940246582031
    5. '(
' → logprob: -10.205940246582031
    6. '    ' → logprob: -10.705940246582031
    7. '	for' → logprob: -10.830940246582031
    8. '  ' → logprob: -10.830940246582031
    9. '(' → logprob: -11.080940246582031
    10. ' ' → logprob: -11.205940246582031

Token 431: ' many' (ID: 1991)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2824038565158844
    2. 'for' → logprob: -2.2824039459228516
    3. '       ' → logprob: -2.5324039459228516
    4. 'break' → logprob: -3.5324039459228516
    5. '_break' → logprob: -4.657403945922852
    6. '    ' → logprob: -5.407403945922852
    7. 'many' → logprob: -5.407403945922852
    8. '  ' → logprob: -5.532403945922852
    9. '           ' → logprob: -5.782403945922852
    10. ' ' → logprob: -6.657403945922852

Token 432: ' customers' (ID: 6028)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08051683753728867
    2. ' for' → logprob: -2.580516815185547
    3. '   ' → logprob: -6.830516815185547
    4. 'customers' → logprob: -7.705516815185547
    5. 'break' → logprob: -10.080516815185547
    6. ' customers' → logprob: -10.580516815185547
    7. ' ' → logprob: -11.705516815185547
    8. '	for' → logprob: -11.955516815185547
    9. '       ' → logprob: -12.330516815185547
    10. '  ' → logprob: -13.205516815185547

Token 433: ' fit' (ID: 5769)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.807550311088562
    2. 'for' → logprob: -0.807550311088562
    3. '   ' → logprob: -2.6825504302978516
    4. ' can' → logprob: -3.4325504302978516
    5. ' will' → logprob: -6.182550430297852
    6. ' are' → logprob: -6.182550430297852
    7. 'can' → logprob: -6.807550430297852
    8. '       ' → logprob: -8.057550430297852
    9. '```' → logprob: -8.307550430297852
    10. ' ' → logprob: -8.682550430297852

Token 434: ' all' (ID: 722)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004239973612129688
    2. 'for' → logprob: -6.129240036010742
    3. ' for' → logprob: -6.254240036010742
    4. '       ' → logprob: -9.629240036010742
    5. '	for' → logprob: -10.629240036010742
    6. ' in' → logprob: -11.129240036010742
    7. '           ' → logprob: -12.379240036010742
    8. '```' → logprob: -12.754240036010742
    9. '    ' → logprob: -13.004240036010742
    10. '    
' → logprob: -13.504240036010742

Token 435: ' three' (ID: 3407)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38540953397750854
    2. ' for' → logprob: -2.0104095935821533
    3. '   ' → logprob: -2.3854095935821533
    4. '(
' → logprob: -3.7604095935821533
    5. '(' → logprob: -3.8854095935821533
    6. 'in' → logprob: -4.260409355163574
    7. 'break' → logprob: -5.135409355163574
    8. ' in' → logprob: -5.135409355163574
    9. '_for' → logprob: -6.010409355163574
    10. '       ' → logprob: -6.135409355163574

Token 436: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034594569355249405
    2. 'for' → logprob: -3.5345945358276367
    3. ' for' → logprob: -5.409594535827637
    4. ' times' → logprob: -8.659594535827637
    5. 'times' → logprob: -10.034594535827637
    6. '	for' → logprob: -10.284594535827637
    7. '    
' → logprob: -10.284594535827637
    8. '  ' → logprob: -10.909594535827637
    9. '
' → logprob: -11.409594535827637
    10. '    ' → logprob: -11.909594535827637

Token 437: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0071906885132193565
    2. 'for' → logprob: -5.132190704345703
    3. ' for' → logprob: -7.132190704345703
    4. '    
' → logprob: -8.132190704345703
    5. '	for' → logprob: -9.757190704345703
    6. '```' → logprob: -10.007190704345703
    7. '
' → logprob: -10.257190704345703
    8. '<|end|>' → logprob: -11.132190704345703
    9. '  
' → logprob: -13.257190704345703
    10. '   
' → logprob: -13.507190704345703

Token 438: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.25719448924064636
    2. '   ' → logprob: -1.5071945190429688
    3. ' for' → logprob: -5.257194519042969
    4. '	for' → logprob: -11.007194519042969
    5. '
' → logprob: -11.507194519042969
    6. '    
' → logprob: -11.632194519042969
    7. 'from' → logprob: -13.132194519042969
    8. '```' → logprob: -13.507194519042969
    9. ' ' → logprob: -13.632194519042969
    10. 'break' → logprob: -14.382194519042969

Token 439: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.9009656310081482
    2. 'bst' → logprob: -1.400965690612793
    3. ' b' → logprob: -2.025965690612793
    4. 'bt' → logprob: -2.150965690612793
    5. ' bst' → logprob: -2.775965690612793
    6. ' bt' → logprob: -3.650965690612793
    7. 'break' → logprob: -5.650965690612793
    8. ' breakfast' → logprob: -5.900965690612793
    9. 'bs' → logprob: -5.900965690612793
    10. ' bs' → logprob: -7.275965690612793

Token 440: ' in' (ID: 306)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.02968372032046318
    2. '_t' → logprob: -4.029683589935303
    3. '_' → logprob: -5.404683589935303
    4. ' in' → logprob: -6.404683589935303
    5. '_c' → logprob: -6.654683589935303
    6. '_b' → logprob: -7.029683589935303
    7. '_serv' → logprob: -7.279683589935303
    8. 'time' → logprob: -7.404683589935303
    9. '_candidate' → logprob: -7.404683589935303
    10. '_break' → logprob: -7.529683589935303

Token 441: ' breakfast' (ID: 16356)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -9.698698704596609e-05
    2. ' breakfast' → logprob: -9.250097274780273
    3. 'bread' → logprob: -14.250097274780273
    4. 'bre' → logprob: -15.500097274780273
    5. '_break' → logprob: -18.625097274780273
    6. ' break' → logprob: -18.750097274780273
    7. 'Breakfast' → logprob: -18.875097274780273
    8. 'breaking' → logprob: -19.000097274780273
    9. 'birth' → logprob: -19.875097274780273
    10. 'BREAK' → logprob: -21.000097274780273

Token 442: '_candidates' (ID: 186937)
  Prédit: '_candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -1.7432603272027336e-06
    2. '_candidate' → logprob: -14.000001907348633
    3. ''_' → logprob: -16.000001907348633
    4. ':' → logprob: -16.250001907348633
    5. 'c' → logprob: -16.250001907348633
    6. '_' → logprob: -16.250001907348633
    7. 'in' → logprob: -16.375001907348633
    8. '```' → logprob: -16.750001907348633
    9. ')_' → logprob: -17.250001907348633
    10. '_choices' → logprob: -17.500001907348633

Token 443: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014397578779608011
    2. ':
' → logprob: -6.626439571380615
    3. '   ' → logprob: -9.251440048217773
    4. '       ' → logprob: -11.251440048217773
    5. ' :' → logprob: -13.501440048217773
    6. 'for' → logprob: -14.001440048217773
    7. ' for' → logprob: -14.251440048217773
    8. ',' → logprob: -14.376440048217773
    9. '):' → logprob: -14.376440048217773
    10. ':
' → logprob: -15.376440048217773

Token 444: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31863877177238464
    2. ' for' → logprob: -1.318638801574707
    3. 'for' → logprob: -6.068638801574707
    4. '   ' → logprob: -6.193638801574707
    5. '	for' → logprob: -8.193638801574707
    6. '    ' → logprob: -8.818638801574707
    7. '<|end|>' → logprob: -8.943638801574707
    8. ' ' → logprob: -9.193638801574707
    9. '    ' → logprob: -9.443638801574707
    10. '	' → logprob: -9.943638801574707

Token 445: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04911661893129349
    2. ' for' → logprob: -3.049116611480713
    3. '   ' → logprob: -7.549116611480713
    4. '       ' → logprob: -13.174117088317871
    5. '	for' → logprob: -15.049117088317871
    6. ' ' → logprob: -15.424117088317871
    7. '  ' → logprob: -16.924116134643555
    8. '           ' → logprob: -18.799116134643555
    9. '    ' → logprob: -18.924116134643555
    10. '_for' → logprob: -19.924116134643555

Token 446: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -5.676981345459353e-06
    2. ' l' → logprob: -12.125005722045898
    3. 's' → logprob: -16.1250057220459
    4. 'c' → logprob: -16.6250057220459
    5. '`' → logprob: -16.8750057220459
    6. '```' → logprob: -17.0000057220459
    7. 'L' → logprob: -17.6250057220459
    8. '   ' → logprob: -17.7500057220459
    9. '	l' → logprob: -17.8750057220459
    10. '``' → logprob: -18.0000057220459

Token 447: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002478273818269372
    2. 'in' → logprob: -6.002478122711182
    3. ' ' → logprob: -13.75247859954834
    4. 's' → logprob: -14.62747859954834
    5. 'l' → logprob: -14.75247859954834
    6. 'c' → logprob: -16.002477645874023
    7. 'n' → logprob: -16.127477645874023
    8. 'e' → logprob: -16.377477645874023
    9. ' ' → logprob: -16.377477645874023
    10. '_' → logprob: -16.502477645874023

Token 448: ' lunch' (ID: 17418)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.20141500234603882
    2. ' lunch' → logprob: -1.7014150619506836
    3. 'lun' → logprob: -13.951415061950684
    4. 'Lunch' → logprob: -14.451415061950684
    5. '	l' → logprob: -16.076414108276367
    6. ' l' → logprob: -17.451414108276367
    7. ' luncheon' → logprob: -17.451414108276367
    8. 'break' → logprob: -17.701414108276367
    9. ' lunchtime' → logprob: -17.826414108276367
    10. '[l' → logprob: -18.076414108276367

Token 449: '_candidates' (ID: 186937)
  Prédit: '_candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -3.054500666621607e-06
    2. 'c' → logprob: -12.75000286102295
    3. 's' → logprob: -17.250003814697266
    4. 'Candidates' → logprob: -17.500003814697266
    5. '_candidate' → logprob: -17.500003814697266
    6. '```' → logprob: -18.625003814697266
    7. '_choices' → logprob: -18.875003814697266
    8. 'candidate' → logprob: -18.875003814697266
    9. 'time' → logprob: -19.125003814697266
    10. 'andidates' → logprob: -19.750003814697266

Token 450: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09929066896438599
    2. ':' → logprob: -2.474290609359741
    3. ':
' → logprob: -4.59929084777832
    4. '       ' → logprob: -9.59929084777832
    5. '               ' → logprob: -9.84929084777832
    6. '	       ' → logprob: -10.84929084777832
    7. '<|end|>' → logprob: -10.84929084777832
    8. '          ' → logprob: -11.59929084777832
    9. ',' → logprob: -11.59929084777832
    10. '[' → logprob: -11.72429084777832

Token 451: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011331788846291602
    2. 'for' → logprob: -9.625113487243652
    3. ' for' → logprob: -10.000113487243652
    4. '       ' → logprob: -14.250113487243652
    5. '               ' → logprob: -14.250113487243652
    6. '```' → logprob: -15.375113487243652
    7. '	       ' → logprob: -16.375112533569336
    8. '          ' → logprob: -16.750112533569336
    9. '		' → logprob: -16.875112533569336
    10. '         ' → logprob: -17.000112533569336

Token 452: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006719991099089384
    2. ' for' → logprob: -5.006720066070557
    3. '           ' → logprob: -12.881719589233398
    4. '               ' → logprob: -13.506719589233398
    5. '       ' → logprob: -14.381719589233398
    6. '   ' → logprob: -16.6317195892334
    7. '	for' → logprob: -16.6317195892334
    8. '```' → logprob: -18.6317195892334
    9. ' ' → logprob: -20.6317195892334
    10. '
' → logprob: -20.7567195892334

Token 453: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8535858392715454
    2. 'b' → logprob: -0.9785858392715454
    3. ' l' → logprob: -2.478585720062256
    4. ' b' → logprob: -2.728585720062256
    5. 'abs' → logprob: -3.853585720062256
    6. '(b' → logprob: -5.103585720062256
    7. ' abs' → logprob: -5.228585720062256
    8. ' not' → logprob: -5.228585720062256
    9. 'not' → logprob: -5.478585720062256
    10. ' (' → logprob: -5.978585720062256

Token 454: ' <=' (ID: 5017)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.8555251955986023
    2. '<' → logprob: -1.105525255203247
    3. ' >=' → logprob: -1.980525255203247
    4. ' <' → logprob: -2.355525255203247
    5. '<=' → logprob: -4.730525016784668
    6. ' <=' → logprob: -6.480525016784668
    7. '>' → logprob: -7.855525016784668
    8. '<b' → logprob: -8.855525016784668
    9. ' ' → logprob: -9.980525016784668
    10. ' >' → logprob: -10.230525016784668

Token 455: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.588793960167095e-05
    2. ' b' → logprob: -9.500076293945312
    3. '0' → logprob: -15.250076293945312
    4. '12' → logprob: -15.750076293945312
    5. '9' → logprob: -15.875076293945312
    6. 'max' → logprob: -16.500076293945312
    7. '10' → logprob: -16.500076293945312
    8. '=' → logprob: -16.750076293945312
    9. ' ' → logprob: -16.875076293945312
    10. '	b' → logprob: -17.000076293945312

Token 456: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04227679222822189
    2. ':' → logprob: -4.042276859283447
    3. ':
' → logprob: -4.042276859283447
    4. 'continue' → logprob: -5.167276859283447
    5. ' continue' → logprob: -7.792276859283447
    6. '           ' → logprob: -9.292276382446289
    7. '			' → logprob: -11.042276382446289
    8. '                   ' → logprob: -11.167276382446289
    9. '	continue' → logprob: -11.292276382446289
    10. '              ' → logprob: -12.042276382446289

Token 457: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011843960965052247
    2. 'continue' → logprob: -7.001184463500977
    3. ' continue' → logprob: -8.376184463500977
    4. '			' → logprob: -10.501184463500977
    5. '	           ' → logprob: -12.751184463500977
    6. '                   ' → logprob: -13.001184463500977
    7. '                               ' → logprob: -13.001184463500977
    8. '	continue' → logprob: -13.126184463500977
    9. '           ' → logprob: -13.751184463500977
    10. '			   ' → logprob: -13.876184463500977

Token 458: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.416621595621109
    2. 'continue' (adapté à ' continue') → logprob: -1.6666215658187866
    3. ' continue' → logprob: -2.416621685028076
    4. '                   ' → logprob: -2.791621685028076
    5. '	continue' → logprob: -7.291621685028076
    6. '   ' → logprob: -7.916621685028076
    7. '
' → logprob: -9.916621208190918
    8. '                               ' → logprob: -10.041621208190918
    9. '                                       ' → logprob: -10.666621208190918
    10. '			' → logprob: -11.041621208190918

Token 459: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.895480277715251e-06
    2. '		' → logprob: -12.500008583068848
    3. '               ' → logprob: -12.875008583068848
    4. 'for' → logprob: -13.875008583068848
    5. ' for' → logprob: -14.875008583068848
    6. '       ' → logprob: -14.875008583068848
    7. '```' → logprob: -14.875008583068848
    8. '
' → logprob: -16.250009536743164
    9. '	       ' → logprob: -16.375009536743164
    10. '            
' → logprob: -16.500009536743164

Token 460: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.874882430769503e-05
    2. '               ' → logprob: -10.250079154968262
    3. 'for' → logprob: -10.250079154968262
    4. '		' → logprob: -12.250079154968262
    5. ' for' → logprob: -13.625079154968262
    6. '```' → logprob: -13.875079154968262
    7. '       ' → logprob: -15.000079154968262
    8. '	       ' → logprob: -15.250079154968262
    9. '                   ' → logprob: -15.625079154968262
    10. '          ' → logprob: -16.500078201293945

Token 461: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.05033109337091446
    2. '           ' → logprob: -3.3003311157226562
    3. '       ' → logprob: -4.550331115722656
    4. ' for' → logprob: -6.425331115722656
    5. '	for' → logprob: -11.300331115722656
    6. '   ' → logprob: -12.300331115722656
    7. '               ' → logprob: -12.550331115722656
    8. '	       ' → logprob: -12.550331115722656
    9. '         ' → logprob: -13.425331115722656
    10. '		' → logprob: -13.425331115722656

Token 462: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.5491004129871726e-05
    2. ' s' → logprob: -10.000045776367188
    3. 'c' → logprob: -19.750045776367188
    4. 'p' → logprob: -19.875045776367188
    5. 'r' → logprob: -20.500045776367188
    6. '	s' → logprob: -20.500045776367188
    7. '   ' → logprob: -20.625045776367188
    8. '```' → logprob: -20.750045776367188
    9. 'd' → logprob: -20.875045776367188
    10. 'su' → logprob: -21.125045776367188

Token 463: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038131460547447205
    2. 'in' → logprob: -3.2881314754486084
    3. 's' → logprob: -9.538131713867188
    4. ' ' → logprob: -11.913131713867188
    5. 'up' → logprob: -12.288131713867188
    6. 'u' → logprob: -12.788131713867188
    7. 'uper' → logprob: -14.163131713867188
    8. 'i' → logprob: -14.913131713867188
    9. 'upp' → logprob: -14.913131713867188
    10. '	in' → logprob: -15.038131713867188

Token 464: ' supper' (ID: 120158)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20148564875125885
    2. ' supper' → logprob: -1.7014856338500977
    3. 'sup' → logprob: -9.576485633850098
    4. 'supp' → logprob: -12.951485633850098
    5. 'super' → logprob: -14.701485633850098
    6. ' dinner' → logprob: -16.951486587524414
    7. '```' → logprob: -17.201486587524414
    8. ')s' → logprob: -17.576486587524414
    9. ' sup' → logprob: -17.951486587524414
    10. '	s' → logprob: -17.951486587524414

Token 465: '_candidates' (ID: 186937)
  Prédit: '_candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: 0.0
    2. 's' → logprob: -17.5
    3. '_choices' → logprob: -17.625
    4. 'Candidates' → logprob: -18.0
    5. '_candidate' → logprob: -19.125
    6. 'c' → logprob: -19.125
    7. '```' → logprob: -19.625
    8. '_s' → logprob: -20.0
    9. 'andidates' → logprob: -20.0
    10. '_students' → logprob: -20.125

Token 466: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4644273817539215
    2. ':
' → logprob: -1.3394273519515991
    3. ':' → logprob: -2.2144274711608887
    4. '():
' → logprob: -10.33942699432373
    5. ':

' → logprob: -10.33942699432373
    6. '<|end|>' → logprob: -10.33942699432373
    7. '):
' → logprob: -10.71442699432373
    8. '			   ' → logprob: -10.96442699432373
    9. '		       ' → logprob: -11.08942699432373
    10. '			' → logprob: -11.21442699432373

Token 467: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.860340752406046e-05
    2. 'if' → logprob: -10.5000581741333
    3. ' if' → logprob: -10.7500581741333
    4. '			' → logprob: -12.3750581741333
    5. '              ' → logprob: -13.6250581741333
    6. '           ' → logprob: -13.7500581741333
    7. '		       ' → logprob: -14.0000581741333
    8. '                   ' → logprob: -14.3750581741333
    9. '	           ' → logprob: -14.6250581741333
    10. '                
' → logprob: -15.2500581741333

Token 468: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3918117880821228
    2. 'if' (adapté à ' if') → logprob: -1.1418118476867676
    3. ' if' → logprob: -5.391811847686768
    4. '                   ' → logprob: -8.01681137084961
    5. '                       ' → logprob: -10.64181137084961
    6. '                ' → logprob: -11.89181137084961
    7. '                               ' → logprob: -12.76681137084961
    8. '              ' → logprob: -13.14181137084961
    9. '           ' → logprob: -13.39181137084961
    10. '       ' → logprob: -13.39181137084961

Token 469: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00218583014793694
    2. ' s' → logprob: -6.127185821533203
    3. '               ' → logprob: -15.127185821533203
    4. '                   ' → logprob: -15.377185821533203
    5. '(s' → logprob: -16.627185821533203
    6. '   ' → logprob: -16.627185821533203
    7. '              ' → logprob: -17.877185821533203
    8. '<s' → logprob: -17.877185821533203
    9. '                  ' → logprob: -18.127185821533203
    10. '                ' → logprob: -18.252185821533203

Token 470: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.474077969789505
    2. '<=' → logprob: -0.9740779399871826
    3. ')<=' → logprob: -14.349078178405762
    4. ']<=' → logprob: -15.724078178405762
    5. '```' → logprob: -16.349077224731445
    6. '   ' → logprob: -17.474077224731445
    7. ' <=",' → logprob: -17.724077224731445
    8. '  ' → logprob: -17.974077224731445
    9. ' ' → logprob: -18.099077224731445
    10. ' ' → logprob: -18.099077224731445

Token 471: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -5.919942486798391e-05
    2. ' l' → logprob: -9.750059127807617
    3. '_l' → logprob: -14.500059127807617
    4. '	l' → logprob: -15.250059127807617
    5. '<|end|>' → logprob: -17.500059127807617
    6. '[l' → logprob: -18.750059127807617
    7. 's' → logprob: -19.000059127807617
    8. ',l' → logprob: -19.125059127807617
    9. '```' → logprob: -19.500059127807617
    10. 'max' → logprob: -19.625059127807617

Token 472: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.49513134360313416
    2. '                   ' → logprob: -0.9951313734054565
    3. ':' → logprob: -4.245131492614746
    4. '               ' → logprob: -5.120131492614746
    5. 'continue' → logprob: -8.370131492614746
    6. '                       ' → logprob: -8.620131492614746
    7. '           ' → logprob: -10.370131492614746
    8. '                  ' → logprob: -10.495131492614746
    9. ' or' → logprob: -11.245131492614746
    10. '                 ' → logprob: -11.995131492614746

Token 473: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00023965541913639754
    2. 'continue' → logprob: -9.125239372253418
    3. '               ' → logprob: -9.250239372253418
    4. '                       ' → logprob: -11.250239372253418
    5. '           ' → logprob: -11.875239372253418
    6. '                  ' → logprob: -12.125239372253418
    7. ' continue' → logprob: -12.750239372253418
    8. '                 ' → logprob: -13.125239372253418
    9. '       ' → logprob: -14.000239372253418
    10. '   ' → logprob: -14.250239372253418

Token 474: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.007356020621955395
    2. '                       ' → logprob: -5.5073561668396
    3. '                   ' → logprob: -6.2573561668396
    4. ' continue' → logprob: -6.6323561668396
    5. '               ' → logprob: -11.257355690002441
    6. '       ' → logprob: -11.382355690002441
    7. '	continue' → logprob: -12.257355690002441
    8. '   ' → logprob: -12.382355690002441
    9. '```' → logprob: -13.007355690002441
    10. '
' → logprob: -13.507355690002441

Token 475: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007149025797843933
    2. '                   ' → logprob: -5.0071492195129395
    3. '                
' → logprob: -9.007148742675781
    4. '
' → logprob: -9.257148742675781
    5. '                       ' → logprob: -9.507148742675781
    6. '                ' → logprob: -10.757148742675781
    7. '                    
' → logprob: -10.757148742675781
    8. '                               ' → logprob: -11.257148742675781
    9. '```' → logprob: -11.257148742675781
    10. '           ' → logprob: -11.382148742675781

Token 476: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3166045546531677
    2. '               ' → logprob: -1.3166046142578125
    3. '```' → logprob: -6.9416046142578125
    4. '                       ' → logprob: -7.0666046142578125
    5. '       ' → logprob: -8.066604614257812
    6. '<|end|>' → logprob: -8.316604614257812
    7. '                ' → logprob: -8.691604614257812
    8. 'token' → logprob: -8.816604614257812
    9. '           ' → logprob: -9.191604614257812
    10. '<|end|>' → logprob: -9.566604614257812

Token 477: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.109963059425354
    2. '               ' → logprob: -2.3599629402160645
    3. 'current' → logprob: -4.8599629402160645
    4. '                   ' → logprob: -6.4849629402160645
    5. ' count' → logprob: -8.234963417053223
    6. 'total' → logprob: -9.609963417053223
    7. 'cnt' → logprob: -10.109963417053223
    8. 'counter' → logprob: -10.609963417053223
    9. ' current' → logprob: -11.734963417053223
    10. '                
' → logprob: -11.859963417053223

Token 478: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692831456661224
    2. '=' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.626928329467773
    4. ' +=' → logprob: -17.001928329467773
    5. ')' → logprob: -17.501928329467773
    6. '   ' → logprob: -18.001928329467773
    7. '<|end|>' → logprob: -18.126928329467773
    8. ' =
' → logprob: -18.251928329467773
    9. '```' → logprob: -18.876928329467773
    10. 's' → logprob: -18.876928329467773

Token 479: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006271334132179618
    2. ' ' → logprob: -7.375627040863037
    3. 'sum' → logprob: -14.750627517700195
    4. '   ' → logprob: -16.125627517700195
    5. ' sum' → logprob: -16.875627517700195
    6. '=' → logprob: -19.375627517700195
    7. '  ' → logprob: -19.688127517700195
    8. '                   ' → logprob: -20.000627517700195
    9. '۰' → logprob: -20.063127517700195
    10. '000' → logprob: -20.125627517700195

Token 480: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0802738870552275e-05
    2. 'sum' → logprob: -11.87501049041748
    3. ' ' → logprob: -12.50001049041748
    4. ' sum' → logprob: -18.125011444091797
    5. '   ' → logprob: -19.125011444091797
    6. '000' → logprob: -19.250011444091797
    7. '```' → logprob: -19.937511444091797
    8. '=' → logprob: -20.125011444091797
    9. '۰' → logprob: -20.125011444091797
    10. 'max' → logprob: -20.875011444091797

Token 481: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04220730811357498
    2. '<|end|>' → logprob: -3.4172072410583496
    3. ' for' → logprob: -5.91720724105835
    4. '<|end|>' → logprob: -6.54220724105835
    5. 'for' → logprob: -6.66720724105835
    6. '                
' → logprob: -7.16720724105835
    7. '                ' → logprob: -7.91720724105835
    8. '			' → logprob: -8.292207717895508
    9. '
' → logprob: -8.292207717895508
    10. '                   ' → logprob: -8.667207717895508

Token 482: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01518337707966566
    2. ' for' → logprob: -5.015183448791504
    3. 'for' → logprob: -5.140183448791504
    4. '<|end|>' → logprob: -6.890183448791504
    5. '       ' → logprob: -8.140183448791504
    6. '		       ' → logprob: -8.515183448791504
    7. '                
' → logprob: -8.515183448791504
    8. '                ' → logprob: -8.890183448791504
    9. '			' → logprob: -8.890183448791504
    10. '<|end|>' → logprob: -9.265183448791504

Token 483: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.000204851632588543
    2. ' for' → logprob: -8.500205039978027
    3. '   ' → logprob: -14.375205039978027
    4. '               ' → logprob: -14.500205039978027
    5. '	for' → logprob: -15.125205039978027
    6. '           ' → logprob: -17.75020408630371
    7. '       ' → logprob: -19.25020408630371
    8. '```' → logprob: -19.25020408630371
    9. '                
' → logprob: -19.75020408630371
    10. '
' → logprob: -19.87520408630371

Token 484: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0024876687675714493
    2. ' i' → logprob: -6.002487659454346
    3. 'idx' → logprob: -12.377488136291504
    4. 'j' → logprob: -12.502488136291504
    5. 'c' → logprob: -13.002488136291504
    6. 'customer' → logprob: -14.377488136291504
    7. 'k' → logprob: -14.627488136291504
    8. '_i' → logprob: -15.127488136291504
    9. '	i' → logprob: -16.002487182617188
    10. 'cust' → logprob: -16.002487182617188

Token 485: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014186889864504337
    2. 'in' → logprob: -4.264186859130859
    3. '	in' → logprob: -11.38918685913086
    4. '<|end|>' → logprob: -12.01418685913086
    5. ' ' → logprob: -12.76418685913086
    6. 's' → logprob: -14.38918685913086
    7. ')' → logprob: -15.38918685913086
    8. '   ' → logprob: -15.38918685913086
    9. 'In' → logprob: -15.51418685913086
    10. '  ' → logprob: -15.76418685913086

Token 486: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033546582562848926
    2. ' range' → logprob: -8.000335693359375
    3. '	range' → logprob: -19.250335693359375
    4. '(range' → logprob: -20.000335693359375
    5. '   ' → logprob: -20.375335693359375
    6. '
' → logprob: -21.625335693359375
    7. '_range' → logprob: -22.125335693359375
    8. '.range' → logprob: -22.250335693359375
    9. '0' → logprob: -22.625335693359375
    10. '```' → logprob: -22.750335693359375

Token 487: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00018149138486478478
    2. '(N' → logprob: -8.625181198120117
    3. ' N' → logprob: -13.500181198120117
    4. '(' → logprob: -14.875181198120117
    5. '(len' → logprob: -16.125181198120117
    6. 'len' → logprob: -18.000181198120117
    7. '                   ' → logprob: -18.250181198120117
    8. '0' → logprob: -18.250181198120117
    9. '<|end|>' → logprob: -18.625181198120117
    10. '_N' → logprob: -19.000181198120117

Token 488: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.011238803155720234
    2. '):' → logprob: -4.5112385749816895
    3. '                   ' → logprob: -9.886239051818848
    4. ':
' → logprob: -10.011239051818848
    5. ':' → logprob: -10.386239051818848
    6. '):
' → logprob: -10.761239051818848
    7. '():
' → logprob: -10.761239051818848
    8. '               ' → logprob: -12.011239051818848
    9. '):

' → logprob: -12.386239051818848
    10. '           ' → logprob: -12.886239051818848

Token 489: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010673071257770061
    2. '               ' → logprob: -5.6356730461120605
    3. '                    ' → logprob: -6.5106730461120605
    4. '                ' → logprob: -6.8856730461120605
    5. '			       ' → logprob: -6.8856730461120605
    6. '	               ' → logprob: -7.2606730461120605
    7. '                    
' → logprob: -7.3856730461120605
    8. '		           ' → logprob: -7.8856730461120605
    9. '<|end|>' → logprob: -8.135673522949219
    10. '                  ' → logprob: -8.760673522949219

Token 490: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6883381605148315
    2. ' if' → logprob: -1.3133381605148315
    3. 'if' (adapté à ' if') → logprob: -2.063338279724121
    4. '                       ' → logprob: -2.563338279724121
    5. '	               ' → logprob: -5.188338279724121
    6. '                    ' → logprob: -5.313338279724121
    7. '	                   ' → logprob: -6.188338279724121
    8. '       ' → logprob: -6.688338279724121
    9. '	if' → logprob: -6.813338279724121
    10. 'b' → logprob: -6.813338279724121

Token 491: ' breakfast' (ID: 16356)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.2541058361530304
    2. ' breakfast' → logprob: -1.504105806350708
    3. ' break' → logprob: -6.754106044769287
    4. '   ' → logprob: -7.129106044769287
    5. '(b' → logprob: -9.629105567932129
    6. ' ' → logprob: -9.879105567932129
    7. 'b' → logprob: -10.379105567932129
    8. ' breakfasts' → logprob: -11.629105567932129
    9. '	b' → logprob: -11.754105567932129
    10. '_break' → logprob: -12.129105567932129

Token 492: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.41866585687967e-06
    2. '[' → logprob: -11.750008583068848
    3. 'i' → logprob: -15.250008583068848
    4. ' [' → logprob: -16.50000762939453
    5. 's' → logprob: -17.37500762939453
    6. '```' → logprob: -18.62500762939453
    7. '[][' → logprob: -18.75000762939453
    8. '[b' → logprob: -18.75000762939453
    9. '[I' → logprob: -18.87500762939453
    10. '[start' → logprob: -19.00000762939453

Token 493: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002466774603817612
    2. '][' → logprob: -8.37524700164795
    3. '0' → logprob: -11.50024700164795
    4. '(' → logprob: -12.62524700164795
    5. '<=' → logprob: -14.12524700164795
    6. '```' → logprob: -14.50024700164795
    7. ''][' → logprob: -14.87524700164795
    8. '"][' → logprob: -15.37524700164795
    9. 'and' → logprob: -15.50024700164795
    10. ')[' → logprob: -16.125246047973633

Token 494: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -12.125005722045898
    3. '[' → logprob: -15.500005722045898
    4. '<|end|>' → logprob: -16.3750057220459
    5. '(' → logprob: -16.5625057220459
    6. '```' → logprob: -17.2500057220459
    7. '<|end|>' → logprob: -17.5000057220459
    8. '1' → logprob: -17.6250057220459
    9. '۰' → logprob: -17.6875057220459
    10. '   ' → logprob: -17.8125057220459

Token 495: ']' (ID: 60)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4742010235786438
    2. '<=' → logprob: -0.9742010235786438
    3. ']<=' → logprob: -9.474201202392578
    4. ')<=' → logprob: -10.099201202392578
    5. ')' → logprob: -12.724201202392578
    6. '[' → logprob: -13.349201202392578
    7. '```' → logprob: -14.224201202392578
    8. ']' → logprob: -14.474201202392578
    9. ' ' → logprob: -16.224201202392578
    10. '≤' → logprob: -17.474201202392578

Token 496: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.0019355426775291562
    2. ' <=' → logprob: -6.2519354820251465
    3. ')<=' → logprob: -12.376935958862305
    4. ']<=' → logprob: -13.001935958862305
    5. '[' → logprob: -15.376935958862305
    6. '```' → logprob: -16.376935958862305
    7. ')' → logprob: -16.751935958862305
    8. '≤' → logprob: -16.876935958862305
    9. 'le' → logprob: -18.001935958862305
    10. '>=' → logprob: -19.001935958862305

Token 497: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019286326132714748
    2. ' b' → logprob: -6.251928806304932
    3. '	b' → logprob: -21.001928329467773
    4. '   ' → logprob: -21.251928329467773
    5. '                   ' → logprob: -21.501928329467773
    6. ' ' → logprob: -22.376928329467773
    7. '<b' → logprob: -22.501928329467773
    8. '               ' → logprob: -23.126928329467773
    9. '=b' → logprob: -24.001928329467773
    10. '                               ' → logprob: -24.126928329467773

Token 498: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.04662026837468147
    2. 'and' → logprob: -3.9216203689575195
    3. ' and' → logprob: -4.0466203689575195
    4. ' <=' → logprob: -4.7966203689575195
    5. '                   ' → logprob: -14.29662036895752
    6. '≤' → logprob: -15.17162036895752
    7. '               ' → logprob: -15.17162036895752
    8. '>=' → logprob: -15.54662036895752
    9. '                  ' → logprob: -15.92162036895752
    10. '```' → logprob: -16.046619415283203

Token 499: ' breakfast' (ID: 16356)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -3.5954712075181305e-05
    2. ' breakfast' → logprob: -10.250036239624023
    3. 'bre' → logprob: -15.000036239624023
    4. ' break' → logprob: -16.625036239624023
    5. 'bread' → logprob: -17.125036239624023
    6. 'Breakfast' → logprob: -17.875036239624023
    7. '_break' → logprob: -19.000036239624023
    8. '   ' → logprob: -19.000036239624023
    9. 'BREAK' → logprob: -19.500036239624023
    10. 'b' → logprob: -20.000036239624023

Token 500: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.5
    3. 'i' → logprob: -15.75
    4. ' [' → logprob: -19.25
    5. 's' → logprob: -20.0
    6. '
' → logprob: -20.375
    7. '```' → logprob: -20.375
    8. '[
' → logprob: -21.25
    9. '   ' → logprob: -21.625
    10. ' ' → logprob: -21.625

Token 501: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005720335524529219
    2. '1' → logprob: -5.880720138549805
    3. '][' → logprob: -5.880720138549805
    4. ' [' → logprob: -9.755720138549805
    5. '[i' → logprob: -10.005720138549805
    6. ']' → logprob: -11.505720138549805
    7. '   ' → logprob: -13.130720138549805
    8. ' ' → logprob: -14.130720138549805
    9. '```' → logprob: -14.130720138549805
    10. ')[' → logprob: -15.380720138549805

Token 502: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '[' → logprob: -19.125
    3. '```' → logprob: -19.25
    4. '
' → logprob: -20.375
    5. '`' → logprob: -20.5
    6. ' ' → logprob: -20.625
    7. '   ' → logprob: -21.375
    8. '3' → logprob: -22.25
    9. '１' → logprob: -22.375
    10. '۱' → logprob: -22.5

Token 503: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.003539132419973612
    2. '                   ' → logprob: -6.003539085388184
    3. 'and' → logprob: -6.878539085388184
    4. '                       ' → logprob: -11.003539085388184
    5. '               ' → logprob: -12.503539085388184
    6. ' ' → logprob: -12.878539085388184
    7. '                    ' → logprob: -12.878539085388184
    8. ')' → logprob: -13.128539085388184
    9. '                  ' → logprob: -13.878539085388184
    10. '                ' → logprob: -14.378539085388184

Token 504: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00673491507768631
    2. '                   ' → logprob: -5.381734848022461
    3. 'and' → logprob: -6.256734848022461
    4. '                       ' → logprob: -8.631734848022461
    5. '                    ' → logprob: -11.756734848022461
    6. '                  ' → logprob: -12.881734848022461
    7. '               ' → logprob: -13.631734848022461
    8. '                      ' → logprob: -13.881734848022461
    9. '                     ' → logprob: -14.131734848022461
    10. ',' → logprob: -14.631734848022461

Token 505: ' lunch' (ID: 17418)
  Prédit: ' lunch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lunch' → logprob: -0.048613592982292175
    2. 'l' → logprob: -3.0486135482788086
    3. '                   ' → logprob: -10.923613548278809
    4. ' l' → logprob: -13.298613548278809
    5. 'Lunch' → logprob: -13.673613548278809
    6. '                  ' → logprob: -13.798613548278809
    7. '               ' → logprob: -14.673613548278809
    8. '   ' → logprob: -14.673613548278809
    9. ' lunchtime' → logprob: -14.673613548278809
    10. 'lun' → logprob: -14.673613548278809

Token 506: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. ' [' → logprob: -14.375000953674316
    3. '```' → logprob: -16.25
    4. '           ' → logprob: -16.875
    5. '   ' → logprob: -17.75
    6. '[' → logprob: -17.875
    7. '               ' → logprob: -18.5
    8. '(i' → logprob: -18.625
    9. '[j' → logprob: -18.625
    10. 'i' → logprob: -19.125

Token 507: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8908587662735954e-05
    2. '][' → logprob: -11.750019073486328
    3. '[i' → logprob: -12.250019073486328
    4. '```' → logprob: -12.625019073486328
    5. ' [' → logprob: -13.625019073486328
    6. '   ' → logprob: -14.500019073486328
    7. '0' → logprob: -14.750019073486328
    8. ' ' → logprob: -15.375019073486328
    9. '       ' → logprob: -15.875019073486328
    10. '           ' → logprob: -16.500019073486328

Token 508: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004998935619369149
    2. 'l' → logprob: -7.750499725341797
    3. 'i' → logprob: -9.875499725341797
    4. ' ' → logprob: -12.125499725341797
    5. '[' → logprob: -12.500499725341797
    6. 'b' → logprob: -13.250499725341797
    7. '
' → logprob: -13.500499725341797
    8. '```' → logprob: -13.750499725341797
    9. '   ' → logprob: -14.250499725341797
    10. '       ' → logprob: -14.562999725341797

Token 509: ']' (ID: 60)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.020568285137414932
    2. '<=' → logprob: -3.895568370819092
    3. ']<=' → logprob: -11.520567893981934
    4. ')<=' → logprob: -12.395567893981934
    5. ' ≤' → logprob: -12.770567893981934
    6. '```' → logprob: -13.395567893981934
    7. ' ' → logprob: -13.520567893981934
    8. '            ' → logprob: -13.895567893981934
    9. '[]' → logprob: -14.145567893981934
    10. '          ' → logprob: -14.395567893981934

Token 510: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3868767023086548
    2. '<=' → logprob: -1.1368767023086548
    3. '```' → logprob: -12.886877059936523
    4. ')<=' → logprob: -13.386877059936523
    5. ']<=' → logprob: -14.386877059936523
    6. ' ' → logprob: -15.386877059936523
    7. '[i' → logprob: -15.886877059936523
    8. ' ≤' → logprob: -16.261877059936523
    9. '          ' → logprob: -16.261877059936523
    10. '                   ' → logprob: -16.386877059936523

Token 511: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -9.65101717156358e-05
    2. ' l' → logprob: -9.250096321105957
    3. '           ' → logprob: -16.625097274780273
    4. '```' → logprob: -16.875097274780273
    5. '
' → logprob: -17.000097274780273
    6. '   ' → logprob: -17.000097274780273
    7. '                   ' → logprob: -17.250097274780273
    8. '	l' → logprob: -17.375097274780273
    9. ' ' → logprob: -17.875097274780273
    10. '[l' → logprob: -18.125097274780273

Token 512: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.3882765769958496
    2. ' <=' → logprob: -1.1382765769958496
    3. 'and' → logprob: -6.88827657699585
    4. ' and' → logprob: -7.88827657699585
    5. '```' → logprob: -12.263277053833008
    6. ' ' → logprob: -13.388277053833008
    7. ' ' → logprob: -13.638277053833008
    8. ']<=' → logprob: -14.388277053833008
    9. ')<=' → logprob: -14.638277053833008
    10. '                   ' → logprob: -15.638277053833008

Token 513: ' lunch' (ID: 17418)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0011934408685192466
    2. ' lunch' → logprob: -6.751193523406982
    3. 'lun' → logprob: -10.876193046569824
    4. 'Lunch' → logprob: -12.751193046569824
    5. '
' → logprob: -14.251193046569824
    6. '[l' → logprob: -15.001193046569824
    7. '	l' → logprob: -15.876193046569824
    8. 'luck' → logprob: -16.12619400024414
    9. 'laugh' → logprob: -16.50119400024414
    10. '```' → logprob: -17.00119400024414

Token 514: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. 'i' → logprob: -14.375000953674316
    3. '[' → logprob: -15.000000953674316
    4. 's' → logprob: -16.750001907348633
    5. '```' → logprob: -18.875001907348633
    6. '[l' → logprob: -19.500001907348633
    7. ' [' → logprob: -19.625001907348633
    8. '[s' → logprob: -19.750001907348633
    9. '   ' → logprob: -19.750001907348633
    10. '
' → logprob: -20.000001907348633

Token 515: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.36534029245376587
    2. '[' → logprob: -1.240340232849121
    3. '1' → logprob: -4.115340232849121
    4. '][' → logprob: -8.240340232849121
    5. 'i' → logprob: -9.490340232849121
    6. ']' → logprob: -10.115340232849121
    7. ' [' → logprob: -11.240340232849121
    8. '   ' → logprob: -11.865340232849121
    9. '[
' → logprob: -11.865340232849121
    10. 's' → logprob: -12.365340232849121

Token 516: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. '[i' → logprob: -12.000009536743164
    3. 'i' → logprob: -13.375009536743164
    4. '[' → logprob: -14.000009536743164
    5. ' ' → logprob: -15.625009536743164
    6. 's' → logprob: -15.625009536743164
    7. 'l' → logprob: -16.250009536743164
    8. '   ' → logprob: -16.750009536743164
    9. '１' → logprob: -17.000009536743164
    10. '[l' → logprob: -17.312509536743164

Token 517: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0031917323358356953
    2. 'and' → logprob: -5.753191947937012
    3. '                   ' → logprob: -11.378191947937012
    4. ' ' → logprob: -13.753191947937012
    5. '               ' → logprob: -14.378191947937012
    6. '                ' → logprob: -15.128191947937012
    7. '                    ' → logprob: -15.253191947937012
    8. '```' → logprob: -16.128190994262695
    9. ')' → logprob: -16.503190994262695
    10. '                  ' → logprob: -17.003190994262695

Token 518: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.004387390334159136
    2. 'and' → logprob: -5.504387378692627
    3. '                   ' → logprob: -8.129387855529785
    4. '                    ' → logprob: -11.754387855529785
    5. '                ' → logprob: -13.254387855529785
    6. '                  ' → logprob: -13.504387855529785
    7. '                       ' → logprob: -13.754387855529785
    8. '               ' → logprob: -14.504387855529785
    9. '                     ' → logprob: -15.129387855529785
    10. ' ' → logprob: -15.254387855529785

Token 519: ' supper' (ID: 120158)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20173363387584686
    2. ' supper' → logprob: -1.7017335891723633
    3. 'sup' → logprob: -8.326733589172363
    4. '   ' → logprob: -10.451733589172363
    5. '       ' → logprob: -11.451733589172363
    6. '  ' → logprob: -11.826733589172363
    7. 'super' → logprob: -11.951733589172363
    8. ' ' → logprob: -12.326733589172363
    9. 'supp' → logprob: -12.326733589172363
    10. '               ' → logprob: -12.701733589172363

Token 520: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -14.250001907348633
    3. 's' → logprob: -14.375001907348633
    4. '[s' → logprob: -15.250001907348633
    5. '```' → logprob: -15.375001907348633
    6. ' [' → logprob: -16.250001907348633
    7. 'i' → logprob: -16.875001907348633
    8. '<|end|>' → logprob: -17.750001907348633
    9. '               ' → logprob: -18.000001907348633
    10. '           ' → logprob: -18.125001907348633

Token 521: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001513312105089426
    2. '[' → logprob: -6.501513481140137
    3. '][' → logprob: -12.126513481140137
    4. ' [' → logprob: -13.251513481140137
    5. '```' → logprob: -13.376513481140137
    6. 'i' → logprob: -15.251513481140137
    7. '[s' → logprob: -15.376513481140137
    8. '[
' → logprob: -15.501513481140137
    9. '<|end|>' → logprob: -15.501513481140137
    10. '[j' → logprob: -15.751513481140137

Token 522: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002712297427933663
    2. 'i' → logprob: -8.25027084350586
    3. '[' → logprob: -12.25027084350586
    4. 's' → logprob: -12.62527084350586
    5. ' ' → logprob: -14.37527084350586
    6. '[i' → logprob: -14.50027084350586
    7. '1' → logprob: -15.00027084350586
    8. ' i' → logprob: -15.62527084350586
    9. '   ' → logprob: -16.00027084350586
    10. '
' → logprob: -16.75027084350586

Token 523: ']' (ID: 60)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0298149511218071
    2. '<=' → logprob: -3.5298149585723877
    3. ']<=' → logprob: -10.654814720153809
    4. ')<=' → logprob: -11.404814720153809
    5. '[]' → logprob: -11.529814720153809
    6. '```' → logprob: -11.904814720153809
    7. '[' → logprob: -12.529814720153809
    8. '[i' → logprob: -12.904814720153809
    9. ']' → logprob: -13.154814720153809
    10. ' ≤' → logprob: -13.529814720153809

Token 524: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.25193601846694946
    2. '<=' → logprob: -1.5019359588623047
    3. '```' → logprob: -12.501935958862305
    4. ')<=' → logprob: -13.126935958862305
    5. ']<=' → logprob: -14.251935958862305
    6. ' ' → logprob: -15.751935958862305
    7. '[]' → logprob: -16.126935958862305
    8. '                  ' → logprob: -16.876935958862305
    9. '[' → logprob: -16.876935958862305
    10. '                   ' → logprob: -17.001935958862305

Token 525: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011047814972698689
    2. ' s' → logprob: -4.511047840118408
    3. '   ' → logprob: -17.63604736328125
    4. ' ' → logprob: -18.76104736328125
    5. '  ' → logprob: -19.13604736328125
    6. '	s' → logprob: -19.88604736328125
    7. '    ' → logprob: -20.51104736328125
    8. ''s' → logprob: -20.76104736328125
    9. ' ' → logprob: -20.76104736328125
    10. '       ' → logprob: -20.88604736328125

Token 526: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.47424691915512085
    2. '<=' → logprob: -0.9742469191551208
    3. 'and' → logprob: -9.724246978759766
    4. ' and' → logprob: -10.099246978759766
    5. '[i' → logprob: -10.349246978759766
    6. '```' → logprob: -10.724246978759766
    7. '               ' → logprob: -12.599246978759766
    8. '                   ' → logprob: -12.724246978759766
    9. '                  ' → logprob: -13.349246978759766
    10. ' ' → logprob: -13.599246978759766

Token 527: ' supper' (ID: 120158)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03265659511089325
    2. ' supper' → logprob: -3.532656669616699
    3. 'sup' → logprob: -6.032656669616699
    4. 'supp' → logprob: -7.907656669616699
    5. 'super' → logprob: -9.0326566696167
    6. '       ' → logprob: -12.9076566696167
    7. '   ' → logprob: -12.9076566696167
    8. '(s' → logprob: -13.4076566696167
    9. ' ' → logprob: -13.6576566696167
    10. '  ' → logprob: -13.9076566696167

Token 528: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. '[s' → logprob: -13.500001907348633
    3. 's' → logprob: -16.625001907348633
    4. 'i' → logprob: -17.750001907348633
    5. '[' → logprob: -18.000001907348633
    6. '```' → logprob: -18.000001907348633
    7. '{i' → logprob: -20.500001907348633
    8. '(i' → logprob: -20.625001907348633
    9. '``' → logprob: -21.000001907348633
    10. '
' → logprob: -21.000001907348633

Token 529: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.16159312427043915
    2. '[' → logprob: -2.161593198776245
    3. '1' → logprob: -3.411593198776245
    4. '][' → logprob: -7.411592960357666
    5. ']' → logprob: -8.286593437194824
    6. 'i' → logprob: -8.786593437194824
    7. 's' → logprob: -9.911593437194824
    8. '-' → logprob: -12.161593437194824
    9. '   ' → logprob: -12.661593437194824
    10. '
' → logprob: -13.036593437194824

Token 530: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2233183042553719e-05
    2. 'i' → logprob: -11.875012397766113
    3. 's' → logprob: -12.750012397766113
    4. '[i' → logprob: -13.125012397766113
    5. ']' → logprob: -16.375011444091797
    6. '[' → logprob: -16.500011444091797
    7. ' ' → logprob: -16.625011444091797
    8. '```' → logprob: -17.125011444091797
    9. '   ' → logprob: -17.250011444091797
    10. '１' → logprob: -17.375011444091797

Token 531: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6726076006889343
    2. ':
' → logprob: -1.297607660293579
    3. ':' → logprob: -2.047607660293579
    4. '):' → logprob: -3.297607660293579
    5. '               ' → logprob: -3.672607660293579
    6. '                   ' → logprob: -3.797607660293579
    7. ']:
' → logprob: -7.047607421875
    8. '```' → logprob: -7.672607421875
    9. ')' → logprob: -7.797607421875
    10. '():
' → logprob: -8.797607421875

Token 532: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2026832550764084
    2. '                       ' → logprob: -1.7026832103729248
    3. '               ' → logprob: -7.952683448791504
    4. '                           ' → logprob: -8.577683448791504
    5. '                        
' → logprob: -8.577683448791504
    6. '                    
' → logprob: -8.827683448791504
    7. '                    ' → logprob: -9.327683448791504
    8. '
' → logprob: -10.077683448791504
    9. '           ' → logprob: -10.077683448791504
    10. '       ' → logprob: -10.202683448791504

Token 533: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.1319708675146103
    2. '                   ' → logprob: -2.1319708824157715
    3. ' count' → logprob: -5.3819708824157715
    4. '   ' → logprob: -8.631970405578613
    5. '                       ' → logprob: -9.381970405578613
    6. '               ' → logprob: -9.756970405578613
    7. '                               ' → logprob: -10.256970405578613
    8. '                           ' → logprob: -10.881970405578613
    9. ' ' → logprob: -11.381970405578613
    10. '           ' → logprob: -11.631970405578613

Token 534: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.038072019815444946
    2. ' +=' → logprob: -3.288072109222412
    3. ']+=' → logprob: -10.913071632385254
    4. '+' → logprob: -12.038071632385254
    5. '```' → logprob: -13.663071632385254
    6. '                       ' → logprob: -13.788071632385254
    7. '                           ' → logprob: -13.788071632385254
    8. '=' → logprob: -14.288071632385254
    9. '                               ' → logprob: -14.913071632385254
    10. '           ' → logprob: -15.038071632385254

Token 535: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -21.5
    4. '```' → logprob: -21.75
    5. '１' → logprob: -23.125
    6. '
' → logprob: -24.0
    7. '۱' → logprob: -24.125
    8. ' ' → logprob: -24.25
    9. '+' → logprob: -25.0
    10. '111' → logprob: -25.25

Token 536: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -20.75
    4. '１' → logprob: -21.0
    5. '   ' → logprob: -21.5
    6. '۱' → logprob: -22.4375
    7. '
' → logprob: -23.3125
    8. '100' → logprob: -23.5
    9. '111' → logprob: -24.0625
    10. '१' → logprob: -24.125

Token 537: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1651124507188797
    2. '
' → logprob: -1.9151124954223633
    3. '                
' → logprob: -6.040112495422363
    4. '                   ' → logprob: -7.290112495422363
    5. '                        
' → logprob: -7.290112495422363
    6. '                       ' → logprob: -8.665112495422363
    7. '  
' → logprob: -8.915112495422363
    8. '                    
' → logprob: -8.915112495422363
    9. '           ' → logprob: -9.040112495422363
    10. '    
' → logprob: -9.415112495422363

Token 538: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003210395807400346
    2. '                   ' → logprob: -6.253210544586182
    3. '                       ' → logprob: -7.503210544586182
    4. '                
' → logprob: -8.378210067749023
    5. '                               ' → logprob: -8.878210067749023
    6. '                ' → logprob: -9.253210067749023
    7. '
' → logprob: -10.128210067749023
    8. '           ' → logprob: -10.253210067749023
    9. '                           ' → logprob: -10.253210067749023
    10. '              ' → logprob: -10.378210067749023

Token 539: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7348863482475281
    2. 'if' (adapté à ' if') → logprob: -1.2348864078521729
    3. ' if' → logprob: -1.4848864078521729
    4. 'max' → logprob: -6.109886169433594
    5. ' max' → logprob: -7.859886169433594
    6. '                   ' → logprob: -8.484886169433594
    7. '   ' → logprob: -9.109886169433594
    8. '
' → logprob: -10.234886169433594
    9. '           ' → logprob: -10.484886169433594
    10. '                       ' → logprob: -10.984886169433594

Token 540: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.029750604182481766
    2. ' count' → logprob: -3.5297505855560303
    3. '	count' → logprob: -16.65475082397461
    4. 'max' → logprob: -17.27975082397461
    5. '   ' → logprob: -19.02975082397461
    6. '(count' → logprob: -19.90475082397461
    7. ' max' → logprob: -19.90475082397461
    8. '[count' → logprob: -21.15475082397461
    9. '$count' → logprob: -21.65475082397461
    10. '_count' → logprob: -22.15475082397461

Token 541: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.25195613503456116
    2. '>' → logprob: -1.5019561052322388
    3. '   ' → logprob: -11.62695598602295
    4. '           ' → logprob: -12.37695598602295
    5. '               ' → logprob: -12.37695598602295
    6. '                   ' → logprob: -13.00195598602295
    7. ' ' → logprob: -13.25195598602295
    8. '       ' → logprob: -14.25195598602295
    9. ')' → logprob: -14.37695598602295
    10. ' ' → logprob: -14.37695598602295

Token 542: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0024756586644798517
    2. ' max' → logprob: -6.002475738525391
    3. '
' → logprob: -19.12747573852539
    4. '=max' → logprob: -19.50247573852539
    5. '_max' → logprob: -20.37747573852539
    6. '	max' → logprob: -20.62747573852539
    7. '(max' → logprob: -21.12747573852539
    8. '[max' → logprob: -22.12747573852539
    9. '               ' → logprob: -22.12747573852539
    10. '           ' → logprob: -22.50247573852539

Token 543: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.696889623621246e-06
    2. '_max' → logprob: -12.87500286102295
    3. '_' → logprob: -17.750001907348633
    4. ' _' → logprob: -17.875001907348633
    5. 'max' → logprob: -18.750001907348633
    6. 'count' → logprob: -18.875001907348633
    7. '_code' → logprob: -19.750001907348633
    8. '_counts' → logprob: -19.750001907348633
    9. '\' → logprob: -20.125001907348633
    10. ')_' → logprob: -20.250001907348633

Token 544: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.018971405923366547
    2. ':' → logprob: -4.6439714431762695
    3. ':
' → logprob: -5.1439714431762695
    4. '                       ' → logprob: -6.6439714431762695
    5. '               ' → logprob: -7.6439714431762695
    6. 'max' → logprob: -8.01897144317627
    7. '=max' → logprob: -8.01897144317627
    8. '                           ' → logprob: -9.14397144317627
    9. ' max' → logprob: -9.26897144317627
    10. '           ' → logprob: -9.26897144317627

Token 545: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00017636561824474484
    2. '                       ' → logprob: -9.000176429748535
    3. ' max' → logprob: -10.750176429748535
    4. '               ' → logprob: -11.000176429748535
    5. '                  ' → logprob: -12.625176429748535
    6. 'max' → logprob: -12.875176429748535
    7. '                           ' → logprob: -13.000176429748535
    8. '
' → logprob: -13.125176429748535
    9. '```' → logprob: -13.625176429748535
    10. '           ' → logprob: -13.750176429748535

Token 546: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6975337266921997
    2. 'max' (adapté à ' max') → logprob: -0.6975337266921997
    3. '                   ' → logprob: -5.44753360748291
    4. '                       ' → logprob: -9.69753360748291
    5. '```' → logprob: -12.57253360748291
    6. '               ' → logprob: -12.82253360748291
    7. '           ' → logprob: -14.69753360748291
    8. '                    ' → logprob: -15.07253360748291
    9. '
' → logprob: -15.32253360748291
    10. '``' → logprob: -15.57253360748291

Token 547: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.0
    3. ' _' → logprob: -17.25
    4. '_counts' → logprob: -17.75
    5. 'count' → logprob: -18.25
    6. '_c' → logprob: -18.25
    7. '_max' → logprob: -18.375
    8. '_code' → logprob: -18.375
    9. '_score' → logprob: -19.625
    10. '_time' → logprob: -20.125

Token 548: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519300878047943
    2. '=' → logprob: -1.5019301176071167
    3. '=max' → logprob: -14.251930236816406
    4. '＝' → logprob: -16.251930236816406
    5. ' =
' → logprob: -16.501930236816406
    6. '=
' → logprob: -17.376930236816406
    7. '=count' → logprob: -17.376930236816406
    8. ' =
' → logprob: -17.501930236816406
    9. '=

' → logprob: -17.501930236816406
    10. 'max' → logprob: -18.251930236816406

Token 549: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.07888978719711304
    2. ' count' → logprob: -2.578889846801758
    3. '	count' → logprob: -18.828889846801758
    4. '[count' → logprob: -20.203889846801758
    5. '(count' → logprob: -21.328889846801758
    6. '$count' → logprob: -21.453889846801758
    7. '_count' → logprob: -21.953889846801758
    8. '<count' → logprob: -22.453889846801758
    9. '=count' → logprob: -22.828889846801758
    10. 'c' → logprob: -23.328889846801758

Token 550: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14766281843185425
    2. '   ' → logprob: -2.022662878036499
    3. '    
' → logprob: -5.64766263961792
    4. 'return' → logprob: -6.64766263961792
    5. ' return' → logprob: -9.397663116455078
    6. '                    
' → logprob: -10.522663116455078
    7. '
' → logprob: -11.147663116455078
    8. '                   ' → logprob: -12.022663116455078
    9. '  
' → logprob: -12.397663116455078
    10. '

' → logprob: -12.647663116455078

Token 551: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5812669396400452
    2. '
' → logprob: -0.8312669396400452
    3. '    
' → logprob: -5.7062668800354
    4. 'return' → logprob: -6.3312668800354
    5. ' return' → logprob: -9.081267356872559
    6. '                    
' → logprob: -10.456267356872559
    7. '```' → logprob: -10.581267356872559
    8. '  
' → logprob: -11.581267356872559
    9. '
' → logprob: -11.706267356872559
    10. '   
' → logprob: -12.581267356872559

Token 552: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5083814859390259
    2. 'return' → logprob: -1.1333814859390259
    3. ' return' → logprob: -2.8833813667297363
    4. '
' → logprob: -4.008381366729736
    5. '	return' → logprob: -6.258381366729736
    6. '    
' → logprob: -8.133381843566895
    7. '```' → logprob: -9.883381843566895
    8. ':return' → logprob: -10.008381843566895
    9. '<|end|>' → logprob: -10.008381843566895
    10. ' 
' → logprob: -11.133381843566895

Token 553: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.04859782010316849
    2. '(' → logprob: -3.048597812652588
    3. 'max' → logprob: -12.298598289489746
    4. '('' → logprob: -12.673598289489746
    5. '(
' → logprob: -13.798598289489746
    6. ' (' → logprob: -14.298598289489746
    7. '()' → logprob: -14.423598289489746
    8. '("("' → logprob: -15.548598289489746
    9. '(Max' → logprob: -15.798598289489746
    10. '(MAX' → logprob: -16.67359733581543

Token 554: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.250000953674316
    3. '_max' → logprob: -16.25
    4. ')' → logprob: -17.125
    5. '_counts' → logprob: -17.25
    6. 'count' → logprob: -17.375
    7. '_token' → logprob: -18.0
    8. '_code' → logprob: -18.125
    9. ')_' → logprob: -18.125
    10. '_score' → logprob: -18.875

Token 555: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.703443770878948e-06
    2. ')
' → logprob: -12.375007629394531
    3. '()' → logprob: -14.000007629394531
    4. '())' → logprob: -14.250007629394531
    5. '<|end|>' → logprob: -14.500007629394531
    6. '```' → logprob: -14.750007629394531
    7. '   ' → logprob: -15.250007629394531
    8. ' )' → logprob: -15.625007629394531
    9. '}' → logprob: -16.00000762939453
    10. '')' → logprob: -16.25000762939453

Token 556: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5336212515830994
    2. ')' → logprob: -1.5336213111877441
    3. '<|end|>' → logprob: -2.033621311187744
    4. '(max' → logprob: -3.908621311187744
    5. '#' → logprob: -4.158621311187744
    6. '```' → logprob: -4.533621311187744
    7. 'def' → logprob: -5.158621311187744
    8. '<|end|>' → logprob: -5.658621311187744
    9. '
' → logprob: -5.783621311187744
    10. '[max' → logprob: -6.283621311187744

Token 557: '_custom' (ID: 36825)
  Prédit: '_custom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_custom' → logprob: -2.629921436891891e-05
    2. '_' → logprob: -11.50002670288086
    3. '_max' → logprob: -12.50002670288086
    4. '_users' → logprob: -12.62502670288086
    5. '```' → logprob: -13.00002670288086
    6. '_Custom' → logprob: -13.25002670288086
    7. '(_' → logprob: -13.75002670288086
    8. '()' → logprob: -14.37502670288086
    9. '_c' → logprob: -14.50002670288086
    10. '_clients' → logprob: -14.62502670288086

Token 558: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: -0.00010747690976131707
    2. '_custom' → logprob: -10.500107765197754
    3. 'customers' → logprob: -11.000107765197754
    4. '_users' → logprob: -11.625107765197754
    5. '_' → logprob: -11.625107765197754
    6. 'er' → logprob: -11.750107765197754
    7. '```' → logprob: -11.750107765197754
    8. 'bers' → logprob: -12.250107765197754
    9. 'sers' → logprob: -12.500107765197754
    10. '[' → logprob: -12.625107765197754

Token 559: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.28597137331962585
    2. '(' → logprob: -1.4109714031219482
    3. ')' → logprob: -6.410971164703369
    4. '<|end|>' → logprob: -6.660971164703369
    5. '(
' → logprob: -7.035971164703369
    6. '#' → logprob: -7.785971164703369
    7. '```' → logprob: -8.160971641540527
    8. '()
' → logprob: -9.785971641540527
    9. '())' → logprob: -10.035971641540527
    10. '[' → logprob: -10.410971641540527


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 557
Tokens correctement prédits (1ère position, stricte): 255
Tokens correctement prédits (1ère position, avec adaptation): 268
Tokens correctement prédits (top 10): 458
Précision stricte (1ère position): 45.78%
Précision adaptée (1ère position): 48.11%
Précision (top 10): 82.23%
================================================================================
