================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
coins = [i*i for i in range(1,18)]
max_amount = 300
dp = [0]*(max_amount+1)
dp[0] = 1
for c in coins:
    for i in range(c, max_amount+1):
        dp[i] += dp[i-c]
import sys
for line in sys.stdin:
    n = int(line)
    if n == 0:
        break
    print(dp[n])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'coins' (ID: 48264)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' [' (ID: 723)
  → Token d'amorce (pas de prédiction)

Token 3: 'i' (ID: 72)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03857084736227989
    2. '0' → logprob: -3.7885708808898926
    3. '10' → logprob: -4.413570880889893
    4. '100' → logprob: -6.163570880889893
    5. '5' → logprob: -7.538570880889893
    6. '50' → logprob: -8.663570404052734
    7. ']' → logprob: -8.913570404052734
    8. ' ' → logprob: -10.163570404052734
    9. '```' → logprob: -10.413570404052734
    10. '25' → logprob: -10.538570404052734

Token 4: '*i' (ID: 51147)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06534252315759659
    2. ' for' → logprob: -2.940342426300049
    3. '+' → logprob: -5.815342426300049
    4. 'nt' → logprob: -6.065342426300049
    5. 'for' → logprob: -6.190342426300049
    6. ' ' → logprob: -7.065342426300049
    7. ',' → logprob: -7.690342426300049
    8. '*' → logprob: -7.690342426300049
    9. ' n' → logprob: -8.065342903137207
    10. ']' → logprob: -8.690342903137207

Token 5: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20143838226795197
    2. 'for' → logprob: -1.7014384269714355
    3. ' ' → logprob: -10.951437950134277
    4. ']' → logprob: -12.826437950134277
    5. '	for' → logprob: -13.701437950134277
    6. '```' → logprob: -13.826437950134277
    7. '+' → logprob: -14.076437950134277
    8. ')' → logprob: -14.701437950134277
    9. '-' → logprob: -15.201437950134277
    10. '   ' → logprob: -15.326437950134277

Token 6: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5384453535079956
    2. ' coin' → logprob: -1.6634453535079956
    3. ' range' → logprob: -2.538445472717285
    4. ' ' → logprob: -2.788445472717285
    5. ' coins' → logprob: -2.913445472717285
    6. ' in' → logprob: -3.913445472717285
    7. 'i' → logprob: -4.913445472717285
    8. 'range' → logprob: -6.663445472717285
    9. '  ' → logprob: -6.788445472717285
    10. 'coins' → logprob: -7.163445472717285

Token 7: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0549476183950901
    2. 'in' → logprob: -2.9299476146698
    3. '<|end|>' → logprob: -10.679947853088379
    4. ' ' → logprob: -11.054947853088379
    5. '	in' → logprob: -11.304947853088379
    6. '```' → logprob: -12.054947853088379
    7. '  ' → logprob: -13.554947853088379
    8. 'import' → logprob: -13.804947853088379
    9. '[in' → logprob: -13.929947853088379
    10. '_in' → logprob: -14.304947853088379

Token 8: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06994932144880295
    2. 'range' → logprob: -2.6949493885040283
    3. ' ' → logprob: -12.06994915008545
    4. ' coins' → logprob: -12.19494915008545
    5. '(range' → logprob: -13.81994915008545
    6. '	range' → logprob: -14.69494915008545
    7. ' xrange' → logprob: -15.06994915008545
    8. 'coins' → logprob: -15.56994915008545
    9. '[' → logprob: -16.194950103759766
    10. '  ' → logprob: -16.694950103759766

Token 9: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.596781946020201e-05
    2. '(len' → logprob: -10.750045776367188
    3. '```' → logprob: -11.375045776367188
    4. ' (' → logprob: -12.625045776367188
    5. '((' → logprob: -13.250045776367188
    6. '(
' → logprob: -13.375045776367188
    7. '(

' → logprob: -13.875045776367188
    8. '(n' → logprob: -14.250045776367188
    9. '(i' → logprob: -14.500045776367188
    10. '(int' → logprob: -14.750045776367188

Token 10: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03607013821601868
    2. '1' → logprob: -3.4110701084136963
    3. '100' → logprob: -6.786070346832275
    4. ' ' → logprob: -7.786070346832275
    5. '20' → logprob: -8.161069869995117
    6. '11' → logprob: -8.911069869995117
    7. '5' → logprob: -9.036069869995117
    8. '0' → logprob: -9.036069869995117
    9. '50' → logprob: -9.286069869995117
    10. '101' → logprob: -10.536069869995117

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006216724403202534
    2. ' ,' → logprob: -5.881216526031494
    3. '20' → logprob: -6.381216526031494
    4. '10' → logprob: -6.881216526031494
    5. '18' → logprob: -8.506217002868652
    6. '25' → logprob: -9.006217002868652
    7. '0' → logprob: -9.881217002868652
    8. '30' → logprob: -10.506217002868652
    9. '26' → logprob: -10.756217002868652
    10. '35' → logprob: -10.881217002868652

Token 12: '18' (ID: 1157)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '11' → logprob: -0.2955983579158783
    2. '101' → logprob: -1.6705983877182007
    3. ' ' → logprob: -3.295598268508911
    4. '10' → logprob: -4.29559850692749
    5. '100' → logprob: -4.54559850692749
    6. '21' → logprob: -5.67059850692749
    7. '51' → logprob: -6.42059850692749
    8. '50' → logprob: -8.170598030090332
    9. '13' → logprob: -8.170598030090332
    10. '7' → logprob: -8.170598030090332

Token 13: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00011856284982059151
    2. ')' → logprob: -9.125118255615234
    3. ')])' → logprob: -12.125118255615234
    4. '+' → logprob: -13.125118255615234
    5. ']' → logprob: -14.500118255615234
    6. '])]' → logprob: -14.625118255615234
    7. ')}' → logprob: -15.250118255615234
    8. '))' → logprob: -15.625118255615234
    9. '')]' → logprob: -15.875118255615234
    10. ' ' → logprob: -16.000118255615234

Token 14: 'max' (ID: 3228)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4974931478500366
    2. '[' → logprob: -2.247493267059326
    3. '+' → logprob: -2.372493267059326
    4. '```' → logprob: -2.997493267059326
    5. '#' → logprob: -3.122493267059326
    6. '\n' → logprob: -3.372493267059326
    7. ')' → logprob: -4.372493267059326
    8. ',' → logprob: -4.622493267059326
    9. '.' → logprob: -5.122493267059326
    10. ' ' → logprob: -5.247493267059326

Token 15: '_amount' (ID: 29145)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2875433564186096
    2. '_' → logprob: -1.4125432968139648
    3. '(_)' → logprob: -5.662543296813965
    4. '_value' → logprob: -7.537543296813965
    5. '_co' → logprob: -8.037543296813965
    6. '(_' → logprob: -8.412543296813965
    7. '_val' → logprob: -8.662543296813965
    8. '_len' → logprob: -8.662543296813965
    9. '_space' → logprob: -9.037543296813965
    10. '(`' → logprob: -9.037543296813965

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21648533642292023
    2. '=' → logprob: -1.7164853811264038
    3. '_' → logprob: -4.966485500335693
    4. '[' → logprob: -4.966485500335693
    5. ' ' → logprob: -7.716485500335693
    6. ')' → logprob: -9.341485023498535
    7. '[:]' → logprob: -9.341485023498535
    8. '  ' → logprob: -9.716485023498535
    9. '```' → logprob: -9.966485023498535
    10. '.' → logprob: -9.966485023498535

Token 17: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0650482326745987
    2. '100' → logprob: -2.9400482177734375
    3. ' coins' → logprob: -5.5650482177734375
    4. ' sum' → logprob: -6.5650482177734375
    5. 'coins' → logprob: -7.1900482177734375
    6. ' max' → logprob: -7.3150482177734375
    7. '17' → logprob: -7.8150482177734375
    8. '99' → logprob: -8.065048217773438
    9. '500' → logprob: -8.065048217773438
    10. '0' → logprob: -8.065048217773438

Token 18: '300' (ID: 4095)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.06140831112861633
    2. ' ' → logprob: -3.936408281326294
    3. '17' → logprob: -4.186408519744873
    4. 'sum' → logprob: -5.436408519744873
    5. '200' → logprob: -5.561408519744873
    6. '500' → logprob: -5.686408519744873
    7. '10' → logprob: -5.936408519744873
    8. '300' → logprob: -6.561408519744873
    9. '289' → logprob: -6.811408519744873
    10. 'max' → logprob: -7.061408519744873

Token 19: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07432818412780762
    2. '\' → logprob: -4.324328422546387
    3. '' → logprob: -4.449328422546387
    4. '\n' → logprob: -4.449328422546387
    5. 'for' → logprob: -4.824328422546387
    6. ' 
' → logprob: -5.199328422546387
    7. ':' → logprob: -5.324328422546387
    8. '=' → logprob: -6.324328422546387
    9. ',' → logprob: -6.324328422546387
    10. '*' → logprob: -6.449328422546387

Token 20: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8003455996513367
    2. 'amount' → logprob: -1.8003456592559814
    3. '
' → logprob: -2.1753456592559814
    4. 'result' → logprob: -2.5503456592559814
    5. 'for' → logprob: -2.5503456592559814
    6. 'total' → logprob: -2.9253456592559814
    7. '\n' → logprob: -4.425345420837402
    8. '' → logprob: -4.925345420837402
    9. 'c' → logprob: -5.050345420837402
    10. '\' → logprob: -5.175345420837402

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41742783784866333
    2. '[' → logprob: -1.1674277782440186
    3. '=' → logprob: -3.5424277782440186
    4. '[:]' → logprob: -7.667428016662598
    5. ' ' → logprob: -8.417428016662598
    6. '_' → logprob: -8.792428016662598
    7. ' =[' → logprob: -9.542428016662598
    8. '=[' → logprob: -9.667428016662598
    9. ']' → logprob: -9.792428016662598
    10. '[]' → logprob: -9.792428016662598

Token 22: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02977374941110611
    2. ' [' → logprob: -3.529773712158203
    3. '[max' → logprob: -11.154773712158203
    4. '[int' → logprob: -12.404773712158203
    5. '[min' → logprob: -13.779773712158203
    6. '[[' → logprob: -13.904773712158203
    7. '[len' → logprob: -14.154773712158203
    8. '[-' → logprob: -14.279773712158203
    9. '[m' → logprob: -14.779773712158203
    10. '{' → logprob: -15.154773712158203

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036904551088809967
    2. 'max' → logprob: -6.253690242767334
    3. 'float' → logprob: -6.378690242767334
    4. 'False' → logprob: -10.128690719604492
    5. ' ' → logprob: -11.503690719604492
    6. ' max' → logprob: -12.378690719604492
    7. ' float' → logprob: -13.128690719604492
    8. '(max' → logprob: -13.503690719604492
    9. '300' → logprob: -13.628690719604492
    10. '100' → logprob: -14.003690719604492

Token 24: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1328309029340744
    2. ']*(' → logprob: -2.132830858230591
    3. ']*' → logprob: -5.38283109664917
    4. ']+' → logprob: -7.00783109664917
    5. ' ]' → logprob: -8.007830619812012
    6. ' for' → logprob: -10.257830619812012
    7. '(max' → logprob: -12.132830619812012
    8. 'for' → logprob: -12.382830619812012
    9. ',' → logprob: -12.632830619812012
    10. '*' → logprob: -13.382830619812012

Token 25: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -2.45848218582978e-06
    2. ' max' → logprob: -13.00000286102295
    3. '(max' → logprob: -16.000001907348633
    4. '300' → logprob: -17.000001907348633
    5. '+' → logprob: -19.500001907348633
    6. '301' → logprob: -20.000001907348633
    7. '[max' → logprob: -20.750001907348633
    8. '	max' → logprob: -21.125001907348633
    9. 'ma' → logprob: -21.750001907348633
    10. '=max' → logprob: -22.000001907348633

Token 26: '_amount' (ID: 29145)
  Prédit: '_amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amount' → logprob: -0.0002398938377154991
    2. '+' → logprob: -8.500240325927734
    3. '_' → logprob: -10.500240325927734
    4. '_amt' → logprob: -12.625240325927734
    5. '_am' → logprob: -13.375240325927734
    6. '_AMOUNT' → logprob: -13.875240325927734
    7. 'amount' → logprob: -14.125240325927734
    8. ' _' → logprob: -14.875240325927734
    9. '```' → logprob: -14.875240325927734
    10. '_max' → logprob: -15.250240325927734

Token 27: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004078758880496025
    2. ' +' → logprob: -5.5040788650512695
    3. ')+' → logprob: -15.87907886505127
    4. ')' → logprob: -16.504077911376953
    5. '+)' → logprob: -18.129077911376953
    6. '＋' → logprob: -18.379077911376953
    7. '+
' → logprob: -18.629077911376953
    8. '```' → logprob: -18.879077911376953
    9. ' plus' → logprob: -19.129077911376953
    10. '()+' → logprob: -19.379077911376953

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.3750057220459
    4. '```' → logprob: -19.1250057220459
    5. ')' → logprob: -20.2500057220459
    6. '+' → logprob: -20.5000057220459
    7. '  ' → logprob: -20.5000057220459
    8. '2' → logprob: -20.6250057220459
    9. '１' → logprob: -21.5000057220459
    10. '7' → logprob: -22.1875057220459

Token 29: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ']' → logprob: -13.62500286102295
    3. ' )' → logprob: -14.12500286102295
    4. ')
' → logprob: -14.62500286102295
    5. '`)' → logprob: -16.000003814697266
    6. '])' → logprob: -16.750003814697266
    7. ')`' → logprob: -16.750003814697266
    8. ')

' → logprob: -17.000003814697266
    9. '))' → logprob: -17.125003814697266
    10. '```' → logprob: -17.250003814697266

Token 30: 'dp' (ID: 19037)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1964938640594482
    2. 'for' → logprob: -1.3214938640594482
    3. '
' → logprob: -1.5714938640594482
    4. '\n' → logprob: -1.5714938640594482
    5. ' 
' → logprob: -4.571494102478027
    6. '' → logprob: -6.571494102478027
    7. '\' → logprob: -6.946494102478027
    8. '  
' → logprob: -7.321494102478027
    9. ' ' → logprob: -8.071494102478027
    10. '<|end|>' → logprob: -8.071494102478027

Token 31: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06321844458580017
    2. '<|end|>' → logprob: -2.938218355178833
    3. '[:]' → logprob: -5.438218593597412
    4. '[]' → logprob: -7.063218593597412
    5. '<|end|>' → logprob: -7.313218593597412
    6. '```' → logprob: -7.313218593597412
    7. '[
' → logprob: -7.813218593597412
    8. '.' → logprob: -7.938218593597412
    9. ' =' → logprob: -8.563218116760254
    10. '=' → logprob: -8.688218116760254

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.751746746478602e-05
    2. '1' → logprob: -10.75004768371582
    3. ' ' → logprob: -11.25004768371582
    4. 'coins' → logprob: -11.50004768371582
    5. ']' → logprob: -14.25004768371582
    6. ')' → logprob: -14.68754768371582
    7. 'coin' → logprob: -14.93754768371582
    8. '000' → logprob: -15.62504768371582
    9. '   ' → logprob: -15.87504768371582
    10. 'max' → logprob: -16.06254768371582

Token 33: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017990543274208903
    2. ']=' → logprob: -6.5017991065979
    3. ' ]' → logprob: -8.126798629760742
    4. '=' → logprob: -14.376798629760742
    5. ']==' → logprob: -14.751798629760742
    6. '`]' → logprob: -16.751798629760742
    7. ')]' → logprob: -17.126798629760742
    8. ')' → logprob: -17.251798629760742
    9. ']+=' → logprob: -17.251798629760742
    10. '[' → logprob: -17.376798629760742

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03374781832098961
    2. '=' → logprob: -3.408747911453247
    3. ' ' → logprob: -9.533747673034668
    4. '<|end|>' → logprob: -11.033747673034668
    5. ' +=' → logprob: -11.658747673034668
    6. ' =
' → logprob: -13.033747673034668
    7. ',' → logprob: -14.158747673034668
    8. '0' → logprob: -15.158747673034668
    9. '+' → logprob: -15.158747673034668
    10. ' |=' → logprob: -15.283747673034668

Token 35: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006638261256739497
    2. ' ' → logprob: -7.750663757324219
    3. '0' → logprob: -8.375663757324219
    4. 'True' → logprob: -13.000663757324219
    5. ' True' → logprob: -15.500663757324219
    6. '-' → logprob: -16.25066375732422
    7. ' ' → logprob: -16.93816375732422
    8. '   ' → logprob: -17.00066375732422
    9. '100' → logprob: -17.06316375732422
    10. '  ' → logprob: -17.31316375732422

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00034595211036503315
    2. '0' → logprob: -8.000346183776855
    3. 'True' → logprob: -11.500346183776855
    4. '-' → logprob: -15.375346183776855
    5. ' ' → logprob: -15.625346183776855
    6. ' True' → logprob: -17.87534523010254
    7. '

' → logprob: -18.37534523010254
    8. '{' → logprob: -18.56284523010254
    9. '```' → logprob: -19.06284523010254
    10. '   ' → logprob: -19.37534523010254

Token 37: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11977269500494003
    2. '\n' → logprob: -2.9947726726531982
    3. 'for' → logprob: -3.7447726726531982
    4. ' for' → logprob: -3.7447726726531982
    5. '' → logprob: -4.369772911071777
    6. ' 
' → logprob: -6.869772911071777
    7. '\' → logprob: -7.994772911071777
    8. '  
' → logprob: -7.994772911071777
    9. '<|end|>' → logprob: -8.369772911071777
    10. '```' → logprob: -8.494772911071777

Token 38: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3314763903617859
    2. ' for' → logprob: -1.8314764499664307
    3. '
' → logprob: -2.2064764499664307
    4. '\n' → logprob: -4.956476211547852
    5. '' → logprob: -5.706476211547852
    6. '```' → logprob: -7.081476211547852
    7. '\' → logprob: -7.956476211547852
    8. ' 
' → logprob: -8.956476211547852
    9. '

' → logprob: -10.581476211547852
    10. '  
' → logprob: -10.706476211547852

Token 39: ' c' (ID: 274)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.28574591875076294
    2. ' ' → logprob: -1.4107458591461182
    3. ' amount' → logprob: -6.160746097564697
    4. 'i' → logprob: -6.910746097564697
    5. '  ' → logprob: -7.535746097564697
    6. ' space' → logprob: -8.035745620727539
    7. ' coin' → logprob: -8.535745620727539
    8. ' _' → logprob: -9.160745620727539
    9. 'amount' → logprob: -9.910745620727539
    10. ' ‌' → logprob: -10.160745620727539

Token 40: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14860934019088745
    2. 'in' → logprob: -2.0236093997955322
    3. ' ' → logprob: -5.773609161376953
    4. 'i' → logprob: -6.648609161376953
    5. 'n' → logprob: -7.523609161376953
    6. 'o' → logprob: -7.523609161376953
    7. '  ' → logprob: -8.648609161376953
    8. ' i' → logprob: -8.773609161376953
    9. 'oin' → logprob: -10.648609161376953
    10. '	in' → logprob: -10.898609161376953

Token 41: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.16022655367851257
    2. ' coins' → logprob: -1.910226583480835
    3. ' ' → logprob: -14.285226821899414
    4. 'co' → logprob: -14.410226821899414
    5. ' range' → logprob: -14.660226821899414
    6. 'coin' → logprob: -15.285226821899414
    7. 'c' → logprob: -15.410226821899414
    8. 'range' → logprob: -16.035226821899414
    9. '[' → logprob: -16.785226821899414
    10. 'Coins' → logprob: -17.160226821899414

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.869017852295656e-06
    2. ' :' → logprob: -12.500006675720215
    3. ':**' → logprob: -13.000006675720215
    4. ':
' → logprob: -14.875006675720215
    5. '):' → logprob: -15.625006675720215
    6. ':

' → logprob: -17.50000762939453
    7. '>:' → logprob: -17.62500762939453
    8. ':`' → logprob: -17.75000762939453
    9. '[:]' → logprob: -18.12500762939453
    10. ' in' → logprob: -18.25000762939453

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24866005778312683
    2. ' for' → logprob: -1.9986600875854492
    3. ' ' → logprob: -3.248660087585449
    4. ' 
' → logprob: -3.498660087585449
    5. '    
' → logprob: -4.748660087585449
    6. '    ' → logprob: -6.373660087585449
    7. '\' → logprob: -6.623660087585449
    8. '```' → logprob: -7.123660087585449
    9. '  ' → logprob: -7.748660087585449
    10. '  
' → logprob: -7.748660087585449

Token 44: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.00019603055261541158
    2. 'for' (adapté à ' for') → logprob: -9.00019645690918
    3. ' range' → logprob: -9.62519645690918
    4. '   ' → logprob: -12.25019645690918
    5. ' if' → logprob: -13.75019645690918
    6. ' ' → logprob: -15.50019645690918
    7. '    ' → logprob: -15.62519645690918
    8. ' in' → logprob: -16.25019645690918
    9. ' ```' → logprob: -16.37519645690918
    10. ' dp' → logprob: -17.00019645690918

Token 45: ' i' (ID: 575)
  Prédit: ' amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' amount' → logprob: -0.025638336315751076
    2. ' a' → logprob: -4.775638103485107
    3. ' range' → logprob: -4.900638103485107
    4. ' i' → logprob: -5.150638103485107
    5. 'amount' → logprob: -6.775638103485107
    6. ' ' → logprob: -7.025638103485107
    7. ' x' → logprob: -7.400638103485107
    8. ' j' → logprob: -7.775638103485107
    9. ' amt' → logprob: -7.900638103485107
    10. ' v' → logprob: -10.150638580322266

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003347397781908512
    2. 'in' → logprob: -5.878347396850586
    3. ' c' → logprob: -8.128347396850586
    4. 'c' → logprob: -9.253347396850586
    5. ' ' → logprob: -9.253347396850586
    6. ' i' → logprob: -11.128347396850586
    7. '<|end|>' → logprob: -11.628347396850586
    8. ' range' → logprob: -11.878347396850586
    9. 'range' → logprob: -12.253347396850586
    10. ' =' → logprob: -12.628347396850586

Token 47: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3590727150440216
    2. ' c' → logprob: -1.3590726852416992
    3. 'range' → logprob: -3.359072685241699
    4. 'c' → logprob: -4.609072685241699
    5. ' coin' → logprob: -10.6090726852417
    6. ' ' → logprob: -11.8590726852417
    7. ' xrange' → logprob: -12.1090726852417
    8. ' coins' → logprob: -12.8590726852417
    9. '(range' → logprob: -13.1090726852417
    10. 'coin' → logprob: -13.2340726852417

Token 48: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.002188449027016759
    2. '(' → logprob: -6.127188682556152
    3. 'c' → logprob: -14.002188682556152
    4. '(co' → logprob: -14.127188682556152
    5. ' (' → logprob: -14.252188682556152
    6. ' c' → logprob: -15.127188682556152
    7. ')' → logprob: -15.502188682556152
    8. ')c' → logprob: -15.502188682556152
    9. '(len' → logprob: -16.127187728881836
    10. '(i' → logprob: -16.127187728881836

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019473218126222491
    2. ',max' → logprob: -6.251947402954102
    3. ' ,' → logprob: -11.126947402954102
    4. ',len' → logprob: -12.626947402954102
    5. 'max' → logprob: -14.876947402954102
    6. ',num' → logprob: -16.5019474029541
    7. ',min' → logprob: -16.7519474029541
    8. ',m' → logprob: -16.8769474029541
    9. '，' → logprob: -17.0019474029541
    10. ',
' → logprob: -17.1269474029541

Token 50: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.004078758880496025
    2. ' max' → logprob: -5.5040788650512695
    3. '(max' → logprob: -16.129077911376953
    4. 'len' → logprob: -16.504077911376953
    5. '300' → logprob: -17.004077911376953
    6. '   ' → logprob: -17.629077911376953
    7. '	max' → logprob: -18.129077911376953
    8. ' ' → logprob: -18.254077911376953
    9. ',max' → logprob: -18.879077911376953
    10. '[max' → logprob: -19.629077911376953

Token 51: '_amount' (ID: 29145)
  Prédit: '_amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amount' → logprob: -5.512236498361744e-07
    2. 'amount' → logprob: -15.125000953674316
    3. '_AMOUNT' → logprob: -16.375
    4. '_' → logprob: -16.75
    5. 'Amount' → logprob: -16.875
    6. '_amt' → logprob: -17.625
    7. '(amount' → logprob: -18.375
    8. '+' → logprob: -19.125
    9. '_a' → logprob: -19.125
    10. '_am' → logprob: -19.25

Token 52: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003357006062287837
    2. ' +' → logprob: -8.000335693359375
    3. ')+' → logprob: -15.750335693359375
    4. '+
' → logprob: -17.500335693359375
    5. '   ' → logprob: -18.125335693359375
    6. '```' → logprob: -18.125335693359375
    7. '()+' → logprob: -18.500335693359375
    8. '+)' → logprob: -18.625335693359375
    9. '＋' → logprob: -18.625335693359375
    10. ')' → logprob: -18.750335693359375

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.62501049041748
    3. '```' → logprob: -14.12501049041748
    4. ')' → logprob: -14.87501049041748
    5. '   ' → logprob: -15.87501049041748
    6. '-' → logprob: -17.875009536743164
    7. '``' → logprob: -18.062509536743164
    8. '  ' → logprob: -18.062509536743164
    9. '+' → logprob: -18.562509536743164
    10. '`' → logprob: -18.625009536743164

Token 54: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00020783171930816025
    2. ':' → logprob: -9.125207901000977
    3. '):
' → logprob: -9.500207901000977
    4. ')' → logprob: -11.375207901000977
    5. ']:' → logprob: -12.250207901000977
    6. ',' → logprob: -12.250207901000977
    7. ' ):' → logprob: -13.625207901000977
    8. '   ' → logprob: -14.000207901000977
    9. '}:' → logprob: -15.250207901000977
    10. '):
' → logprob: -15.875207901000977

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05561166629195213
    2. 'dp' → logprob: -3.5556116104125977
    3. ' dp' → logprob: -3.6806116104125977
    4. '	dp' → logprob: -8.930611610412598
    5. '   ' → logprob: -9.055611610412598
    6. '    ' → logprob: -10.930611610412598
    7. '(dp' → logprob: -11.305611610412598
    8. '           ' → logprob: -11.430611610412598
    9. '      ' → logprob: -11.930611610412598
    10. '     ' → logprob: -12.180611610412598

Token 56: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.07956147193908691
    2. ' dp' → logprob: -2.579561471939087
    3. '           ' → logprob: -7.329561233520508
    4. '	dp' → logprob: -11.704561233520508
    5. '       ' → logprob: -12.454561233520508
    6. '   ' → logprob: -13.579561233520508
    7. '(dp' → logprob: -13.954561233520508
    8. '               ' → logprob: -14.829561233520508
    9. '_dp' → logprob: -15.329561233520508
    10. '.dp' → logprob: -15.954561233520508

Token 57: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.500001907348633
    3. '```' → logprob: -17.375001907348633
    4. '[I' → logprob: -17.750001907348633
    5. 'i' → logprob: -18.250001907348633
    6. ' [' → logprob: -19.250001907348633
    7. '\[' → logprob: -19.625001907348633
    8. '[
' → logprob: -20.625001907348633
    9. '[j' → logprob: -21.250001907348633
    10. '[...]' → logprob: -21.375001907348633

Token 58: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12974020838737488
    2. ']+=' → logprob: -2.1297402381896973
    3. ' ]' → logprob: -6.254740238189697
    4. ' +=' → logprob: -7.754740238189697
    5. '+=' → logprob: -7.879740238189697
    6. ')' → logprob: -10.504739761352539
    7. '+' → logprob: -11.129739761352539
    8. ']+' → logprob: -11.254739761352539
    9. '[' → logprob: -11.379739761352539
    10. '+]' → logprob: -12.004739761352539

Token 59: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0033274299930781126
    2. ' +=' → logprob: -5.753327369689941
    3. ']+=' → logprob: -9.253327369689941
    4. '+' → logprob: -10.128327369689941
    5. '=' → logprob: -12.003327369689941
    6. '+=(' → logprob: -12.628327369689941
    7. '|' → logprob: -13.128327369689941
    8. '+='' → logprob: -14.128327369689941
    9. '(' → logprob: -14.378327369689941
    10. '```' → logprob: -14.628327369689941

Token 60: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.014163628220558167
    2. ' dp' → logprob: -4.264163494110107
    3. '	dp' → logprob: -16.389163970947266
    4. '   ' → logprob: -18.889163970947266
    5. '_dp' → logprob: -19.389163970947266
    6. ' ' → logprob: -19.889163970947266
    7. '(dp' → logprob: -19.889163970947266
    8. 'd' → logprob: -20.139163970947266
    9. '.dp' → logprob: -21.639163970947266
    10. 'df' → logprob: -21.764163970947266

Token 61: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.625001907348633
    3. 'i' → logprob: -15.500001907348633
    4. '```' → logprob: -17.125001907348633
    5. '[
' → logprob: -17.500001907348633
    6. ' [' → logprob: -18.375001907348633
    7. '\[' → logprob: -19.375001907348633
    8. '`' → logprob: -19.625001907348633
    9. '   ' → logprob: -19.625001907348633
    10. '[I' → logprob: -20.250001907348633

Token 62: '-c' (ID: 3452)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.32175180315971375
    2. '-' → logprob: -1.3217518329620361
    3. '-c' → logprob: -4.946751594543457
    4. '-i' → logprob: -6.696751594543457
    5. '[i' → logprob: -10.071751594543457
    6. '[' → logprob: -10.196751594543457
    7. '   ' → logprob: -11.196751594543457
    8. '[-' → logprob: -12.821751594543457
    9. 'i' → logprob: -13.196751594543457
    10. ' ' → logprob: -13.196751594543457

Token 63: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ')
' → logprob: -12.875003814697266
    3. ']' → logprob: -13.875003814697266
    4. ')]' → logprob: -16.000003814697266
    5. ' )' → logprob: -16.375003814697266
    6. '）' → logprob: -17.250003814697266
    7. '))' → logprob: -17.375003814697266
    8. '])' → logprob: -17.500003814697266
    9. ')`' → logprob: -17.875003814697266
    10. ')

' → logprob: -18.250003814697266

Token 64: 'import' (ID: 561)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08644899725914001
    2. '
' → logprob: -2.836448907852173
    3. '[' → logprob: -4.961449146270752
    4. '\n' → logprob: -5.211449146270752
    5. '<|end|>' → logprob: -5.461449146270752
    6. '```' → logprob: -5.961449146270752
    7. '#' → logprob: -6.836449146270752
    8. '  
' → logprob: -6.836449146270752
    9. '[
' → logprob: -7.336449146270752
    10. '\' → logprob: -8.086448669433594

Token 65: ' sys' (ID: 12228)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.529835045337677
    2. ' itertools' → logprob: -1.1548349857330322
    3. ' sys' → logprob: -2.5298349857330322
    4. ' collections' → logprob: -4.904835224151611
    5. ' ' → logprob: -5.029835224151611
    6. ' functools' → logprob: -6.529835224151611
    7. ' numpy' → logprob: -7.154835224151611
    8. ' random' → logprob: -8.404834747314453
    9. ' os' → logprob: -10.529834747314453
    10. ' pandas' → logprob: -10.904834747314453

Token 66: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24921470880508423
    2. 'for' → logprob: -1.6242146492004395
    3. 'input' → logprob: -4.7492146492004395
    4. 'print' → logprob: -5.1242146492004395
    5. '\n' → logprob: -5.9992146492004395
    6. 'data' → logprob: -5.9992146492004395
    7. ' for' → logprob: -6.7492146492004395
    8. '
' → logprob: -7.3742146492004395
    9. 'sys' → logprob: -7.3742146492004395
    10. 'n' → logprob: -7.7492146492004395

Token 67: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12955443561077118
    2. 'print' → logprob: -2.754554510116577
    3. '
' → logprob: -3.254554510116577
    4. 'data' → logprob: -4.629554271697998
    5. 'input' → logprob: -5.879554271697998
    6. '\n' → logprob: -6.504554271697998
    7. 'n' → logprob: -6.629554271697998
    8. 'if' → logprob: -6.754554271697998
    9. ' for' → logprob: -7.004554271697998
    10. 'sys' → logprob: -7.379554271697998

Token 68: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.4283449053764343
    2. ' amount' → logprob: -1.178344964981079
    3. ' ' → logprob: -4.4283447265625
    4. ' i' → logprob: -4.8033447265625
    5. 'amount' → logprob: -5.4283447265625
    6. 'line' → logprob: -5.5533447265625
    7. ' money' → logprob: -6.0533447265625
    8. ' arg' → logprob: -6.0533447265625
    9. ' _' → logprob: -6.1783447265625
    10. ' a' → logprob: -6.5533447265625

Token 69: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014203350991010666
    2. 'in' → logprob: -4.2642035484313965
    3. ' ' → logprob: -10.264203071594238
    4. '	in' → logprob: -12.889203071594238
    5. 'import' → logprob: -14.389203071594238
    6. '  ' → logprob: -14.514203071594238
    7. '<|end|>' → logprob: -15.139203071594238
    8. 'inth' → logprob: -15.639203071594238
    9. 'line' → logprob: -16.201704025268555
    10. 'inthe' → logprob: -16.389204025268555

Token 70: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3132679760456085
    2. 'sys' → logprob: -1.3132679462432861
    3. '=sys' → logprob: -12.188267707824707
    4. '	sys' → logprob: -14.313267707824707
    5. '(sys' → logprob: -14.438267707824707
    6. 's' → logprob: -19.188268661499023
    7. '_sys' → logprob: -19.188268661499023
    8. ' ' → logprob: -19.688268661499023
    9. 'stdin' → logprob: -19.688268661499023
    10. '.sys' → logprob: -19.813268661499023

Token 71: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0025195383932441473
    2. 'stdin' → logprob: -6.002519607543945
    3. ' stdin' → logprob: -11.627519607543945
    4. '.readline' → logprob: -11.877519607543945
    5. '(stdin' → logprob: -12.002519607543945
    6. '.' → logprob: -12.127519607543945
    7. '.stdout' → logprob: -12.252519607543945
    8. '.argv' → logprob: -12.377519607543945
    9. '.readlines' → logprob: -13.252519607543945
    10. 'in' → logprob: -13.877519607543945

Token 72: ':
' (ID: 734)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.35587021708488464
    2. ':' → logprob: -1.230870246887207
    3. '.readlines' → logprob: -5.105870246887207
    4. '.' → logprob: -6.855870246887207
    5. ' in' → logprob: -9.855870246887207
    6. ':
' → logprob: -9.980870246887207
    7. '.strip' → logprob: -10.230870246887207
    8. ' readline' → logprob: -10.230870246887207
    9. '.rstrip' → logprob: -10.605870246887207
    10. '.read' → logprob: -10.730870246887207

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001716827624477446
    2. '    
' → logprob: -7.376716613769531
    3. ' print' → logprob: -8.001716613769531
    4. ' readline' → logprob: -8.001716613769531
    5. ' if' → logprob: -9.001716613769531
    6. ',' → logprob: -9.626716613769531
    7. ' line' → logprob: -10.501716613769531
    8. 'print' → logprob: -11.001716613769531
    9. '<|end|>' → logprob: -11.001716613769531
    10. '.strip' → logprob: -11.126716613769531

Token 74: ' n' (ID: 297)
  Prédit: ' amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' amount' → logprob: -0.4163648784160614
    2. ' n' → logprob: -1.2913649082183838
    3. '   ' → logprob: -3.916364908218384
    4. ' print' → logprob: -4.041364669799805
    5. ' amt' → logprob: -4.791364669799805
    6. 'amount' → logprob: -5.041364669799805
    7. 'n' (adapté à ' n') → logprob: -5.541364669799805
    8. ' value' → logprob: -5.916364669799805
    9. ' num' → logprob: -6.291364669799805
    10. ' if' → logprob: -6.791364669799805

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10029444843530655
    2. '=' → logprob: -2.350294351577759
    3. '=int' → logprob: -9.35029411315918
    4. ' =
' → logprob: -14.60029411315918
    5. ' ' → logprob: -15.97529411315918
    6. ' =)' → logprob: -16.22529411315918
    7. '=

' → logprob: -16.22529411315918
    8. ')' → logprob: -17.10029411315918
    9. 'int' → logprob: -17.22529411315918
    10. '＝' → logprob: -17.35029411315918

Token 76: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023247109726071358
    2. ' int' → logprob: -3.773247003555298
    3. '=int' → logprob: -14.273246765136719
    4. '(int' → logprob: -14.898246765136719
    5. '[int' → logprob: -15.023246765136719
    6. '<int' → logprob: -15.773246765136719
    7. 'line' → logprob: -16.27324676513672
    8. '   ' → logprob: -16.52324676513672
    9. ' ' → logprob: -17.14824676513672
    10. ']int' → logprob: -17.77324676513672

Token 77: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0019288709154352546
    2. '(' → logprob: -6.251928806304932
    3. '(n' → logprob: -16.376928329467773
    4. 'line' → logprob: -16.751928329467773
    5. '=line' → logprob: -17.376928329467773
    6. '#line' → logprob: -17.751928329467773
    7. '(
' → logprob: -17.876928329467773
    8. '[line' → logprob: -18.001928329467773
    9. '(lines' → logprob: -18.251928329467773
    10. '(Line' → logprob: -18.251928329467773

Token 78: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031230561435222626
    2. '.strip' → logprob: -5.8781232833862305
    3. ')
' → logprob: -8.37812328338623
    4. '.rstrip' → logprob: -9.50312328338623
    5. '.readline' → logprob: -12.87812328338623
    6. '[' → logprob: -13.12812328338623
    7. '[:-' → logprob: -13.50312328338623
    8. '))' → logprob: -14.00312328338623
    9. ' )' → logprob: -14.12812328338623
    10. '')' → logprob: -14.12812328338623

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7631024718284607
    2. 'print' → logprob: -1.2631025314331055
    3. '
' → logprob: -2.0131025314331055
    4. ' print' → logprob: -3.2631025314331055
    5. '    
' → logprob: -3.5131025314331055
    6. '<|end|>' → logprob: -4.2631025314331055
    7. ' if' → logprob: -5.2631025314331055
    8. '  
' → logprob: -5.2631025314331055
    9. ' 
' → logprob: -5.6381025314331055
    10. ' ' → logprob: -5.7631025314331055

Token 80: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3353138566017151
    2. ' print' → logprob: -1.3353137969970703
    3. ' if' → logprob: -4.21031379699707
    4. '   ' → logprob: -5.71031379699707
    5. 'if' (adapté à ' if') → logprob: -5.96031379699707
    6. ' 
' → logprob: -7.21031379699707
    7. ' ' → logprob: -9.46031379699707
    8. '    
' → logprob: -9.58531379699707
    9. '    ' → logprob: -9.71031379699707
    10. '```' → logprob: -11.08531379699707

Token 81: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12233728170394897
    2. ' dp' → logprob: -2.2473373413085938
    3. 'n' → logprob: -4.747337341308594
    4. 'dp' → logprob: -7.372337341308594
    5. ' ' → logprob: -9.122337341308594
    6. ' not' → logprob: -10.372337341308594
    7. ' ' → logprob: -11.622337341308594
    8. '0' → logprob: -12.247337341308594
    9. '(dp' → logprob: -12.497337341308594
    10. '	dp' → logprob: -13.622337341308594

Token 82: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18539872765541077
    2. '==' → logprob: -1.9353986978530884
    3. ' <' → logprob: -4.310398578643799
    4. '<' → logprob: -4.560398578643799
    5. ' <=' → logprob: -7.560398578643799
    6. '<=' → logprob: -8.310399055480957
    7. '=' → logprob: -9.560399055480957
    8. '>' → logprob: -10.060399055480957
    9. ' >' → logprob: -10.060399055480957
    10. '<|end|>' → logprob: -11.560399055480957

Token 83: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22541794180870056
    2. '0' → logprob: -1.600417971611023
    3. ' ' → logprob: -13.225418090820312
    4. ' -' → logprob: -13.475418090820312
    5. '  ' → logprob: -13.850418090820312
    6. '-' → logprob: -15.225418090820312
    7. '   ' → logprob: -15.600418090820312
    8. '<|end|>' → logprob: -16.225418090820312
    9. '```' → logprob: -16.350418090820312
    10. '`' → logprob: -17.100418090820312

Token 84: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001801801408873871
    2. ' ' → logprob: -8.6251802444458
    3. '-' → logprob: -14.5001802444458
    4. ' -' → logprob: -17.500179290771484
    5. '۰' → logprob: -17.625179290771484
    6. '  ' → logprob: -18.125179290771484
    7. '```' → logprob: -18.125179290771484
    8. '"' → logprob: -19.250179290771484
    9. '０' → logprob: -19.500179290771484
    10. '   ' → logprob: -19.500179290771484

Token 85: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001552355824969709
    2. ':
' → logprob: -6.501552581787109
    3. ' :' → logprob: -10.25155258178711
    4. '   ' → logprob: -11.62655258178711
    5. ':return' → logprob: -12.87655258178711
    6. ':
' → logprob: -13.50155258178711
    7. ':

' → logprob: -14.75155258178711
    8. ' :
' → logprob: -14.87655258178711
    9. '):' → logprob: -15.12655258178711
    10. '.' → logprob: -16.12655258178711

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12732303142547607
    2. '   ' → logprob: -2.3773231506347656
    3. ':' → logprob: -3.6273231506347656
    4. '    ' → logprob: -10.502323150634766
    5. '	break' → logprob: -10.627323150634766
    6. ' break' → logprob: -10.877323150634766
    7. 'break' → logprob: -11.127323150634766
    8. ' ' → logprob: -11.127323150634766
    9. '      ' → logprob: -11.627323150634766
    10. '\t' → logprob: -11.752323150634766

Token 87: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.47372010350227356
    2. '       ' → logprob: -1.5987200736999512
    3. 'break' (adapté à ' break') → logprob: -2.098720073699951
    4. '   ' → logprob: -2.973720073699951
    5. '	break' → logprob: -6.723720073699951
    6. '           ' → logprob: -9.22372055053711
    7. ' ' → logprob: -9.72372055053711
    8. '    ' → logprob: -10.84872055053711
    9. '_break' → logprob: -11.34872055053711
    10. '```' → logprob: -11.72372055053711

Token 88: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3534182608127594
    2. '
' → logprob: -1.353418231010437
    3. '    
' → logprob: -3.4784183502197266
    4. '<|end|>' → logprob: -5.228418350219727
    5. '  
' → logprob: -6.603418350219727
    6. 'print' → logprob: -7.728418350219727
    7. '<|end|>' → logprob: -7.728418350219727
    8. ' 
' → logprob: -8.353418350219727
    9. '   
' → logprob: -8.728418350219727
    10. '        
' → logprob: -8.978418350219727

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049802012741565704
    2. '
' → logprob: -3.42480206489563
    3. 'print' → logprob: -4.424801826477051
    4. '    
' → logprob: -5.674801826477051
    5. ' print' → logprob: -8.67480182647705
    6. '<|end|>' → logprob: -9.29980182647705
    7. '```' → logprob: -9.29980182647705
    8. '  
' → logprob: -9.92480182647705
    9. '	print' → logprob: -10.29980182647705
    10. '        
' → logprob: -10.42480182647705

Token 90: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6941753625869751
    2. 'print' (adapté à ' print') → logprob: -0.6941753625869751
    3. ' print' → logprob: -7.0691752433776855
    4. '    
' → logprob: -9.069175720214844
    5. '```' → logprob: -9.944175720214844
    6. '  
' → logprob: -12.944175720214844
    7. '
' → logprob: -12.944175720214844
    8. '	print' → logprob: -13.069175720214844
    9. '        
' → logprob: -13.694175720214844
    10. '   
' → logprob: -13.819175720214844

Token 91: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.000580792548134923
    2. '(' → logprob: -7.500580787658691
    3. 'dp' → logprob: -10.750580787658691
    4. ' dp' → logprob: -12.625580787658691
    5. '(f' → logprob: -13.250580787658691
    6. ' (' → logprob: -14.000580787658691
    7. '()' → logprob: -15.875580787658691
    8. '	dp' → logprob: -16.625581741333008
    9. '((' → logprob: -16.875581741333008
    10. '(d' → logprob: -17.000581741333008

Token 92: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.796184723294573e-06
    2. '[' → logprob: -12.125005722045898
    3. 'n' → logprob: -15.875005722045898
    4. '[
' → logprob: -16.3750057220459
    5. ' [' → logprob: -17.1250057220459
    6. ')n' → logprob: -17.2500057220459
    7. ')[' → logprob: -18.6250057220459
    8. '[i' → logprob: -19.0000057220459
    9. ')' → logprob: -19.0000057220459
    10. '\[' → logprob: -19.1250057220459

Token 93: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.003191612893715501
    2. ')' → logprob: -5.7531914710998535
    3. '))' → logprob: -12.003191947937012
    4. ']' → logprob: -12.628191947937012
    5. ' ])' → logprob: -13.378191947937012
    6. '])
' → logprob: -13.753191947937012
    7. ')])' → logprob: -14.128191947937012
    8. '})' → logprob: -14.503191947937012
    9. ')]' → logprob: -15.003191947937012
    10. ''])' → logprob: -16.253190994262695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 91
Tokens correctement prédits (1ère position, stricte): 57
Tokens correctement prédits (1ère position, avec adaptation): 58
Tokens correctement prédits (top 10): 81
Précision stricte (1ère position): 62.64%
Précision adaptée (1ère position): 63.74%
Précision (top 10): 89.01%
================================================================================
