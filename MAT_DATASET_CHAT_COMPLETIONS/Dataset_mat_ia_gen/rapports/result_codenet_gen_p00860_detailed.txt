================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque
import sys

def solve():
    # Directions for movement: up, down, left, right
    directions = [(-1, 0), (1, 0), (0, -1), (0, 1)]

    # Read input until "0 0 0" is encountered
    while True:
        line = ''
        # Skip empty lines if any
        while line.strip() == '':
            line = sys.stdin.readline()
            if not line:
                return
        w, h, n = map(int, line.strip().split())
        if w == 0 and h == 0 and n == 0:
            break

        grid = []
        for _ in range(h):
            grid.append(list(sys.stdin.readline().rstrip('\n')))

        # Map letters for ghosts: the first n lowercase letters indicate ghosts
        # and their corresponding uppercase letters indicate destinations
        ghosts_pos = [None]*n  # store current positions of ghosts
        targets_pos = [None]*n  # store target positions of ghosts

        # We will map ghost letters 'a', 'b', 'c' to indices 0,1,2
        # Similarly for their uppercase targets 'A', 'B', 'C'
        # Scan the grid to find positions of these ghosts (initial and target)
        for i in range(h):
            for j in range(w):
                ch = grid[i][j]
                if 'a' <= ch <= 'z':
                    idx = ord(ch) - ord('a')
                    if idx < n:
                        ghosts_pos[idx] = (i, j)
                elif 'A' <= ch <= 'Z':
                    idx = ord(ch) - ord('A')
                    if idx < n:
                        targets_pos[idx] = (i, j)

        # Preprocessing: collect all corridor cells for movement validation
        # Walls are '#', corridor cells are anything else (including spaces and ghost chars)
        # We will use a grid of booleans indicating corridor cells
        is_corridor = [[False]*w for _ in range(h)]
        for i in range(h):
            for j in range(w):
                if grid[i][j] != '#':
                    is_corridor[i][j] = True

        # State: positions of all ghosts (tuple of coordinates)
        # We want to find minimal steps to move all ghosts from ghosts_pos to targets_pos
        # BFS over states, at each step each ghost can stay or move one step to an adjacent corridor cell
        # Conditions:
        # - No two ghosts occupy the same cell after move
        # - No pair swap positions in one step
        # At each step, we move simultaneously all ghosts

        # To implement the no-swap condition: if ghost A moves to ghost B's previous pos and ghost B moves to ghost A's previous pos in the same step, forbidden

        # BFS variables
        start_state = tuple(ghosts_pos)
        goal_state = tuple(targets_pos)

        # Visited set to avoid repeated states
        visited = set()
        visited.add(start_state)

        queue = deque()
        queue.append((start_state, 0))  # (state, steps)

        # Generate all possible moves for ghosts:
        # Each ghost can move to one of 5 positions: stay, or move to one of adjacent corridor cells
        # Generate moves for each ghost, then consider all combinations (up to 5^n)
        # n ≤ 3, so at most 125 states per iteration (manageable)

        while queue:
            state, steps = queue.popleft()

            # Check if goal reached
            if state == goal_state:
                print(steps)
                break

            # Generate possible next positions for each ghost
            possible_moves = []
            for pos in state:
                moves_for_ghost = []
                i, j = pos
                # ghost can stay
                moves_for_ghost.append((i, j))
                # ghost can move to adjacent corridor cells
                for di, dj in directions:
                    ni, nj = i+di, j+dj
                    if 0 <= ni < h and 0 <= nj < w and is_corridor[ni][nj]:
                        moves_for_ghost.append((ni, nj))
                possible_moves.append(moves_for_ghost)

            # Iterate over Cartesian product of all ghosts' moves
            # To avoid importing product from itertools for minimal code, implement simple recursive combination

            next_states = []

            def backtrack(idx, current_positions):
                if idx == n:
                    # Check conditions on the move:
                    # 1) No duplicate final positions
                    # 2) No pair of ghosts swapped positions (i.e. ghosts A and B do not end in each other's previous positions simultaneously)
                    # current_positions is tuple of positions after the move
                    positions_set = set(current_positions)
                    if len(positions_set) < n:
                        # some ghosts occupy same cell -> invalid
                        return
                    # Check no swaps:
                    # For every pair of ghosts i < j:
                    # if current_positions[i] == state[j] and current_positions[j] == state[i]: invalid
                    for i1 in range(n):
                        for j1 in range(i1+1, n):
                            if current_positions[i1] == state[j1] and current_positions[j1] == state[i1]:
                                return
                    # Valid next state
                    next_states.append(tuple(current_positions))
                    return

                for pos_to in possible_moves[idx]:
                    backtrack(idx+1, current_positions + [pos_to])

            backtrack(0, [])

            # For each valid next state, if not visited, add to queue
            for nxt in next_states:
                if nxt not in visited:
                    visited.add(nxt)
                    queue.append((nxt, steps+1))

if __name__ == '__main__':
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.0142356157302856
    2. 'default' → logprob: -1.3892356157302856
    3. 'abc' → logprob: -1.6392356157302856
    4. 'Counter' → logprob: -2.264235496520996
    5. ' defaultdict' → logprob: -2.639235496520996
    6. ' Counter' → logprob: -5.014235496520996
    7. 'named' → logprob: -5.389235496520996
    8. ' abc' → logprob: -5.764235496520996
    9. ' deque' → logprob: -6.389235496520996
    10. '```' → logprob: -6.639235496520996

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01551173534244299
    2. '.' → logprob: -4.515511512756348
    3. '\(' → logprob: -6.015511512756348
    4. '\' → logprob: -7.640511512756348
    5. '[' → logprob: -7.765511512756348
    6. '```' → logprob: -8.265511512756348
    7. ',' → logprob: -8.765511512756348
    8. '\[' → logprob: -8.890511512756348
    9. 'import' → logprob: -9.015511512756348
    10. 'newline' → logprob: -9.390511512756348

Token 5: 'import' (ID: 561)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4899742901325226
    2. '(' → logprob: -1.9899742603302002
    3. '
' → logprob: -2.9899742603302
    4. 'a' → logprob: -2.9899742603302
    5. '\' → logprob: -3.4899742603302
    6. '\n' → logprob: -3.7399742603302
    7. '`' → logprob: -4.364974498748779
    8. '' → logprob: -4.614974498748779
    9. ' ' → logprob: -4.614974498748779
    10. 'newline' → logprob: -4.739974498748779

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.1530393809080124
    2. ' os' → logprob: -2.1530394554138184
    3. ' collections' → logprob: -3.7780394554138184
    4. ' itertools' → logprob: -6.778039455413818
    5. ' re' → logprob: -7.153039455413818
    6. ' ' → logprob: -8.02803897857666
    7. ' queue' → logprob: -8.52803897857666
    8. ' math' → logprob: -8.90303897857666
    9. ' heap' → logprob: -9.40303897857666
    10. ' threading' → logprob: -10.15303897857666

Token 7: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2356182187795639
    2. '\' → logprob: -1.860618233680725
    3. '.' → logprob: -3.7356181144714355
    4. '
' → logprob: -4.2356181144714355
    5. '```' → logprob: -4.9856181144714355
    6. 'newline' → logprob: -5.8606181144714355
    7. 'for' → logprob: -6.4856181144714355
    8. 'import' → logprob: -7.4856181144714355
    9. '`' → logprob: -7.4856181144714355
    10. '' → logprob: -7.4856181144714355

Token 8: 'def' (ID: 1314)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.2886168956756592
    2. 'for' → logprob: -1.7886168956756592
    3. '.' → logprob: -1.9136168956756592
    4. 'input' → logprob: -2.038616895675659
    5. '`' → logprob: -3.038616895675659
    6. '\' → logprob: -3.163616895675659
    7. '\n' → logprob: -3.538616895675659
    8. 'deque' → logprob: -3.538616895675659
    9. 'def' → logprob: -3.663616895675659
    10. 'd' → logprob: -3.663616895675659

Token 9: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21727254986763
    2. ' process' → logprob: -2.3422725200653076
    3. ' bfs' → logprob: -3.0922725200653076
    4. ' main' → logprob: -3.9672725200653076
    5. ' read' → logprob: -4.717272758483887
    6. ' ' → logprob: -4.842272758483887
    7. ' breadth' → logprob: -6.467272758483887
    8. ' shortest' → logprob: -6.592272758483887
    9. ' deque' → logprob: -6.842272758483887
    10. ' BFS' → logprob: -6.967272758483887

Token 10: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010678203543648124
    2. '():' → logprob: -8.001068115234375
    3. '_' → logprob: -8.626068115234375
    4. ':' → logprob: -8.876068115234375
    5. ' (' → logprob: -9.001068115234375
    6. '```' → logprob: -9.376068115234375
    7. '<|end|>' → logprob: -10.751068115234375
    8. '(
' → logprob: -10.751068115234375
    9. '()' → logprob: -11.251068115234375
    10. ')' → logprob: -11.501068115234375

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038444940000772476
    2. '```' → logprob: -6.753844261169434
    3. 'input' → logprob: -7.253844261169434
    4. '    ' → logprob: -7.628844261169434
    5. ' input' → logprob: -8.128844261169434
    6. 'n' → logprob: -8.378844261169434
    7. ' readline' → logprob: -8.628844261169434
    8. ' n' → logprob: -8.753844261169434
    9. '    
' → logprob: -9.128844261169434
    10. 'data' → logprob: -9.253844261169434

Token 12: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6951292157173157
    2. ' input' → logprob: -1.695129156112671
    3. ' n' → logprob: -2.570129156112671
    4. ' data' → logprob: -2.695129156112671
    5. ' readline' → logprob: -2.695129156112671
    6. ' queue' → logprob: -3.695129156112671
    7. 'input' → logprob: -3.820129156112671
    8. ' line' → logprob: -4.32012939453125
    9. 'data' → logprob: -4.44512939453125
    10. 'n' → logprob: -5.07012939453125

Token 13: ' Directions' (ID: 85422)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.46017929911613464
    2. ' n' → logprob: -1.960179328918457
    3. 'input' → logprob: -1.960179328918457
    4. ' data' → logprob: -3.585179328918457
    5. '   ' → logprob: -3.835179328918457
    6. 'data' → logprob: -4.335179328918457
    7. ' pass' → logprob: -4.710179328918457
    8. 'n' → logprob: -4.960179328918457
    9. '    ' → logprob: -6.085179328918457
    10. 'pass' → logprob: -6.210179328918457

Token 14: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0037358261179178953
    2. ':' → logprob: -6.1287360191345215
    3. '=' → logprob: -7.2537360191345215
    4. '<|end|>' → logprob: -7.8787360191345215
    5. '   ' → logprob: -8.503735542297363
    6. '[' → logprob: -9.628735542297363
    7. '[]' → logprob: -10.003735542297363
    8. ' ' → logprob: -10.503735542297363
    9. '```' → logprob: -10.503735542297363
    10. '<|end|>' → logprob: -10.878735542297363

Token 15: ' movement' (ID: 12772)
  Prédit: ' up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' up' → logprob: -1.8090567588806152
    2. ' moving' → logprob: -1.9340567588806152
    3. ' ' → logprob: -2.1840567588806152
    4. ' BFS' → logprob: -2.1840567588806152
    5. ' adjacent' → logprob: -2.3090567588806152
    6. ' the' → logprob: -2.8090567588806152
    7. ' movements' → logprob: -2.8090567588806152
    8. ' movement' → logprob: -2.9340567588806152
    9. ' bfs' → logprob: -2.9340567588806152
    10. ' neighbors' → logprob: -3.0590567588806152

Token 16: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5644421577453613
    2. ' directions' → logprob: -1.0644421577453613
    3. ' :' → logprob: -3.5644421577453613
    4. 'dire' → logprob: -3.6894421577453613
    5. ' =' → logprob: -4.939442157745361
    6. ' dx' → logprob: -5.189442157745361
    7. ' in' → logprob: -5.314442157745361
    8. ' ' → logprob: -5.814442157745361
    9. ' (' → logprob: -5.939442157745361
    10. 'dx' → logprob: -5.939442157745361

Token 17: ' up' (ID: 869)
  Prédit: ' directions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.8240768313407898
    2. ' [(' → logprob: -1.3240768909454346
    3. ' (' → logprob: -1.5740768909454346
    4. ' [' → logprob: -3.8240768909454346
    5. '[' → logprob: -4.1990766525268555
    6. '[(' → logprob: -4.3240766525268555
    7. ' up' → logprob: -4.3240766525268555
    8. ' (-' → logprob: -4.9490766525268555
    9. '(' → logprob: -5.6990766525268555
    10. 'dire' → logprob: -6.0740766525268555

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04190156236290932
    2. ' ,' → logprob: -3.2919015884399414
    3. '   ' → logprob: -5.791901588439941
    4. '[' → logprob: -8.166901588439941
    5. '(' → logprob: -8.291901588439941
    6. '    ' → logprob: -10.291901588439941
    7. '```' → logprob: -10.291901588439941
    8. ' =' → logprob: -10.416901588439941
    9. ')' → logprob: -10.416901588439941
    10. '=' → logprob: -11.166901588439941

Token 19: ' down' (ID: 1917)
  Prédit: ' down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' down' → logprob: -0.5769015550613403
    2. 'down' → logprob: -0.8269015550613403
    3. ' right' → logprob: -7.826901435852051
    4. ' ' → logprob: -8.20190143585205
    5. '_down' → logprob: -9.20190143585205
    6. 'right' → logprob: -9.82690143585205
    7. '0' → logprob: -9.82690143585205
    8. '1' → logprob: -10.45190143585205
    9. ',' → logprob: -10.45190143585205
    10. ' ,' → logprob: -12.32690143585205

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026976398658007383
    2. ' ,' → logprob: -6.002697467803955
    3. '<|end|>' → logprob: -9.002697944641113
    4. '```' → logprob: -10.252697944641113
    5. '   ' → logprob: -10.627697944641113
    6. ' (' → logprob: -11.752697944641113
    7. '(' → logprob: -12.002697944641113
    8. ',(' → logprob: -12.252697944641113
    9. ',
' → logprob: -12.877697944641113
    10. '<|end|>' → logprob: -13.127697944641113

Token 21: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.1477038562297821
    2. 'left' → logprob: -2.0227038860321045
    3. ' right' → logprob: -6.522703647613525
    4. ',' → logprob: -6.772703647613525
    5. ' ,' → logprob: -7.522703647613525
    6. '-left' → logprob: -7.897703647613525
    7. ',left' → logprob: -7.897703647613525
    8. '1' → logprob: -8.272704124450684
    9. ' ' → logprob: -8.272704124450684
    10. '_left' → logprob: -8.647704124450684

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029518234077841043
    2. ' ,' → logprob: -8.250295639038086
    3. '<|end|>' → logprob: -11.250295639038086
    4. ' and' → logprob: -12.125295639038086
    5. '   ' → logprob: -13.000295639038086
    6. 'and' → logprob: -13.000295639038086
    7. '```' → logprob: -13.000295639038086
    8. ',right' → logprob: -13.500295639038086
    9. '`,' → logprob: -13.750295639038086
    10. '<|end|>' → logprob: -13.750295639038086

Token 23: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.5759594440460205
    2. 'right' → logprob: -0.8259594440460205
    3. ',right' → logprob: -11.950959205627441
    4. '_right' → logprob: -12.325959205627441
    5. 'Right' → logprob: -12.700959205627441
    6. '```' → logprob: -12.950959205627441
    7. '1' → logprob: -13.450959205627441
    8. '	right' → logprob: -13.700959205627441
    9. '[right' → logprob: -15.450959205627441
    10. 'up' → logprob: -15.450959205627441

Token 24: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12680085003376007
    2. 'dire' → logprob: -3.126800775527954
    3. ' directions' → logprob: -3.501800775527954
    4. '
' → logprob: -3.501800775527954
    5. '```' → logprob: -4.376801013946533
    6. 'moves' → logprob: -6.876801013946533
    7. '    
' → logprob: -8.001800537109375
    8. ' moves' → logprob: -8.126800537109375
    9. 'dx' → logprob: -8.876800537109375
    10. '``' → logprob: -9.251800537109375

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017644217237830162
    2. 'dire' → logprob: -4.76764440536499
    3. ' directions' → logprob: -5.64264440536499
    4. '
' → logprob: -6.01764440536499
    5. '```' → logprob: -6.26764440536499
    6. 'moves' → logprob: -7.39264440536499
    7. ' moves' → logprob: -8.767643928527832
    8. '    
' → logprob: -9.267643928527832
    9. 'd' → logprob: -10.267643928527832
    10. ',' → logprob: -10.267643928527832

Token 26: ' directions' (ID: 24921)
  Prédit: ' directions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.7433992028236389
    2. 'dire' → logprob: -0.7433992028236389
    3. '   ' → logprob: -3.993399143218994
    4. 'moves' → logprob: -4.118399143218994
    5. ' moves' → logprob: -4.618399143218994
    6. 'dirs' → logprob: -5.618399143218994
    7. 'dx' → logprob: -8.118399620056152
    8. 'd' → logprob: -8.368399620056152
    9. ' dirs' → logprob: -9.243399620056152
    10. 'D' → logprob: -10.618399620056152

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001326433615759015
    2. '=' → logprob: -6.626326560974121
    3. ' =[' → logprob: -15.251326560974121
    4. '[:]' → logprob: -16.876325607299805
    5. ' ' → logprob: -17.001325607299805
    6. ':' → logprob: -17.376325607299805
    7. '[' → logprob: -17.501325607299805
    8. '```' → logprob: -17.751325607299805
    9. '=[' → logprob: -17.751325607299805
    10. '[]' → logprob: -18.001325607299805

Token 28: ' [' (ID: 723)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.45431533455848694
    2. ' [(' → logprob: -1.2043153047561646
    3. '[' → logprob: -3.204315423965454
    4. ' [' → logprob: -3.704315423965454
    5. ' ' → logprob: -12.204315185546875
    6. '[
' → logprob: -12.204315185546875
    7. '[((' → logprob: -12.454315185546875
    8. '   ' → logprob: -13.579315185546875
    9. ' [
' → logprob: -14.829315185546875
    10. '[[' → logprob: -15.329315185546875

Token 29: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.3144148886203766
    2. '(' → logprob: -1.3144148588180542
    3. ' (' → logprob: -7.064414978027344
    4. ' (-' → logprob: -8.314414978027344
    5. '   ' → logprob: -9.939414978027344
    6. ' ' → logprob: -13.064414978027344
    7. '(up' → logprob: -14.064414978027344
    8. '-' → logprob: -14.064414978027344
    9. '[-' → logprob: -15.689414978027344
    10. '  ' → logprob: -15.814414978027344

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.375
    3. '2' → logprob: -19.75
    4. '-' → logprob: -20.125
    5. '```' → logprob: -21.125
    6. '3' → logprob: -21.375
    7. '0' → logprob: -21.375
    8. '4' → logprob: -22.25
    9. ')' → logprob: -22.3125
    10. '   ' → logprob: -22.375

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.319370302458992e-06
    2. ' ,' → logprob: -12.750005722045898
    3. '0' → logprob: -13.375005722045898
    4. '),' → logprob: -14.875005722045898
    5. '<|end|>' → logprob: -15.250005722045898
    6. ',),' → logprob: -16.7500057220459
    7. ')' → logprob: -17.1250057220459
    8. '1' → logprob: -17.2500057220459
    9. '‌,' → logprob: -17.6250057220459
    10. ',)' → logprob: -17.8750057220459

Token 32: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01416350994259119
    2. ' ' → logprob: -4.264163494110107
    3. ')' → logprob: -17.639163970947266
    4. ' ' → logprob: -19.139163970947266
    5. '۰' → logprob: -19.264163970947266
    6. '  ' → logprob: -19.639163970947266
    7. '   ' → logprob: -20.014163970947266
    8. '    ' → logprob: -20.264163970947266
    9. '０' → logprob: -20.764163970947266
    10. ' )' → logprob: -21.076663970947266

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. ')' → logprob: -19.62501335144043
    4. '),' → logprob: -19.87501335144043
    5. '```' → logprob: -20.12501335144043
    6. ',' → logprob: -20.62501335144043
    7. '   ' → logprob: -21.37501335144043
    8. '1' → logprob: -21.75001335144043
    9. ' ' → logprob: -21.75001335144043
    10. '  ' → logprob: -21.87501335144043

Token 34: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0008903791895136237
    2. ')' → logprob: -7.625890254974365
    3. ')]' → logprob: -8.000890731811523
    4. '),(' → logprob: -10.250890731811523
    5. '),
' → logprob: -10.500890731811523
    6. '),

' → logprob: -13.375890731811523
    7. ' ),' → logprob: -13.625890731811523
    8. '   ' → logprob: -14.375890731811523
    9. '],' → logprob: -15.125890731811523
    10. '),
' → logprob: -15.750890731811523

Token 35: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10067739337682724
    2. ' (' → logprob: -2.350677490234375
    3. '1' → logprob: -8.100677490234375
    4. ')' → logprob: -9.100677490234375
    5. '<|end|>' → logprob: -10.100677490234375
    6. '0' → logprob: -11.725677490234375
    7. ' ' → logprob: -12.600677490234375
    8. ' )' → logprob: -13.475677490234375
    9. ')]' → logprob: -14.600677490234375
    10. '  ' → logprob: -14.850677490234375

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -10.875019073486328
    3. '0' → logprob: -15.125019073486328
    4. '(' → logprob: -17.000019073486328
    5. '+' → logprob: -17.125019073486328
    6. ')' → logprob: -17.750019073486328
    7. '```' → logprob: -18.000019073486328
    8. ',' → logprob: -19.250019073486328
    9. '   ' → logprob: -19.750019073486328
    10. ' (' → logprob: -20.000019073486328

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6776029699249193e-05
    2. ' ,' → logprob: -10.87502670288086
    3. '),' → logprob: -12.62502670288086
    4. '0' → logprob: -12.75002670288086
    5. ')' → logprob: -14.25002670288086
    6. '<|end|>' → logprob: -14.62502670288086
    7. '‌,' → logprob: -15.25002670288086
    8. ' ' → logprob: -15.50002670288086
    9. '```' → logprob: -16.62502670288086
    10. '1' → logprob: -17.50002670288086

Token 38: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.054883070290088654
    2. ' ' → logprob: -2.9298830032348633
    3. ')' → logprob: -15.054883003234863
    4. ' )' → logprob: -15.804883003234863
    5. '<|end|>' → logprob: -16.42988395690918
    6. '```' → logprob: -16.86738395690918
    7. '  ' → logprob: -16.99238395690918
    8. '۰' → logprob: -17.17988395690918
    9. ' ' → logprob: -18.05488395690918
    10. ',' → logprob: -18.11738395690918

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009117019944824278
    2. ' ' → logprob: -7.000911712646484
    3. '```' → logprob: -16.875911712646484
    4. ',' → logprob: -17.500911712646484
    5. '  ' → logprob: -17.625911712646484
    6. ')' → logprob: -17.625911712646484
    7. '۰' → logprob: -18.313411712646484
    8. '-' → logprob: -18.438411712646484
    9. '1' → logprob: -18.750911712646484
    10. '   ' → logprob: -18.813411712646484

Token 40: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0006042646709829569
    2. ')' → logprob: -7.750604152679443
    3. '),(' → logprob: -9.000604629516602
    4. ')]' → logprob: -10.250604629516602
    5. '),
' → logprob: -12.375604629516602
    6. ',' → logprob: -12.500604629516602
    7. ' ),' → logprob: -12.875604629516602
    8. ')],' → logprob: -13.500604629516602
    9. '],' → logprob: -14.125604629516602
    10. ' ' → logprob: -14.500604629516602

Token 41: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2800915837287903
    2. '(' → logprob: -1.5300915241241455
    3. ' ' → logprob: -4.030091762542725
    4. '0' → logprob: -4.655091762542725
    5. '<|end|>' → logprob: -7.780091762542725
    6. ')' → logprob: -10.155091285705566
    7. ' ,' → logprob: -11.780091285705566
    8. ',' → logprob: -12.405091285705566
    9. '```' → logprob: -12.530091285705566
    10. ' ' → logprob: -12.655091285705566

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024764856789261103
    2. ' ' → logprob: -6.002476692199707
    3. '```' → logprob: -15.877476692199707
    4. '-' → logprob: -16.12747573852539
    5. ',' → logprob: -16.12747573852539
    6. '   ' → logprob: -16.25247573852539
    7. '  ' → logprob: -16.50247573852539
    8. '۰' → logprob: -17.00247573852539
    9. ')' → logprob: -17.06497573852539
    10. '00' → logprob: -17.75247573852539

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.339278580620885e-06
    2. ' ,' → logprob: -13.125001907348633
    3. '1' → logprob: -15.375001907348633
    4. ' ' → logprob: -17.250001907348633
    5. ',-' → logprob: -17.500001907348633
    6. ',
' → logprob: -17.500001907348633
    7. '‌,' → logprob: -17.750001907348633
    8. '<|end|>' → logprob: -18.250001907348633
    9. ')' → logprob: -18.625001907348633
    10. '-' → logprob: -19.250001907348633

Token 44: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0019506559474393725
    2. ' -' → logprob: -6.251950740814209
    3. '1' → logprob: -10.75195026397705
    4. ' ' → logprob: -14.25195026397705
    5. '```' → logprob: -19.251951217651367
    6. '   ' → logprob: -20.376951217651367
    7. ')' → logprob: -20.501951217651367
    8. '−' → logprob: -20.626951217651367
    9. '{-' → logprob: -21.376951217651367
    10. '-)' → logprob: -21.501951217651367

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.500001907348633
    3. ',' → logprob: -14.500001907348633
    4. ' ,' → logprob: -17.375001907348633
    5. '```' → logprob: -18.250001907348633
    6. ')' → logprob: -18.250001907348633
    7. '),' → logprob: -18.750001907348633
    8. '0' → logprob: -18.937501907348633
    9. '2' → logprob: -19.187501907348633
    10. '   ' → logprob: -19.250001907348633

Token 46: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00033296257606707513
    2. '),(' → logprob: -8.500332832336426
    3. ',' → logprob: -9.875332832336426
    4. '(' → logprob: -10.375332832336426
    5. ' ),' → logprob: -10.750332832336426
    6. ')' → logprob: -10.750332832336426
    7. ')]' → logprob: -13.750332832336426
    8. '   ' → logprob: -14.375332832336426
    9. ',),' → logprob: -14.625332832336426
    10. ''),' → logprob: -14.750332832336426

Token 47: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6796699166297913
    2. '(' → logprob: -1.6796698570251465
    3. ' (' → logprob: -1.8046698570251465
    4. ' ' → logprob: -2.1796698570251465
    5. '1' → logprob: -3.5546698570251465
    6. ')' → logprob: -7.5546698570251465
    7. ' )' → logprob: -10.179670333862305
    8. ')]' → logprob: -12.429670333862305
    9. '```' → logprob: -12.554670333862305
    10. ',' → logprob: -12.554670333862305

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38716450333595276
    2. '1' → logprob: -1.1371644735336304
    3. ' ' → logprob: -8.137164115905762
    4. ',' → logprob: -15.012164115905762
    5. '   ' → logprob: -16.012165069580078
    6. ')' → logprob: -16.012165069580078
    7. '2' → logprob: -16.262165069580078
    8. '```' → logprob: -16.262165069580078
    9. '  ' → logprob: -16.387165069580078
    10. '4' → logprob: -17.012165069580078

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.13388703338569e-06
    2. ' ,' → logprob: -12.000009536743164
    3. '1' → logprob: -12.875009536743164
    4. '```' → logprob: -16.125009536743164
    5. '0' → logprob: -16.500009536743164
    6. ' ' → logprob: -17.000009536743164
    7. ')' → logprob: -17.500009536743164
    8. '<|end|>' → logprob: -17.625009536743164
    9. '`,' → logprob: -17.875009536743164
    10. '4' → logprob: -18.125009536743164

Token 50: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018152983859181404
    2. ' ' → logprob: -4.018153190612793
    3. ')' → logprob: -13.143153190612793
    4. '```' → logprob: -14.643153190612793
    5. '+' → logprob: -15.893153190612793
    6. '0' → logprob: -15.893153190612793
    7. '<|end|>' → logprob: -16.268152236938477
    8. '  ' → logprob: -16.768152236938477
    9. ' )' → logprob: -16.830652236938477
    10. '   ' → logprob: -17.268152236938477

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.750003814697266
    3. '+' → logprob: -15.500003814697266
    4. '```' → logprob: -15.750003814697266
    5. ')' → logprob: -16.000003814697266
    6. '0' → logprob: -17.375003814697266
    7. '   ' → logprob: -19.312503814697266
    8. ',' → logprob: -19.750003814697266
    9. '2' → logprob: -19.750003814697266
    10. '<|end|>' → logprob: -19.812503814697266

Token 52: ')]

' (ID: 56882)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6493605971336365
    2. ')]' → logprob: -0.8993605971336365
    3. ')' → logprob: -2.6493606567382812
    4. '])]' → logprob: -10.524360656738281
    5. ')])' → logprob: -10.524360656738281
    6. '])' → logprob: -11.024360656738281
    7. ' ]' → logprob: -11.399360656738281
    8. '`]' → logprob: -12.524360656738281
    9. '   ' → logprob: -12.899360656738281
    10. ' )' → logprob: -13.149360656738281

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029617056250572205
    2. 'n' → logprob: -3.9046170711517334
    3. '
' → logprob: -5.654616832733154
    4. 'r' → logprob: -6.279616832733154
    5. '```' → logprob: -6.779616832733154
    6. '    
' → logprob: -7.404616832733154
    7. 'd' → logprob: -7.654616832733154
    8. 'def' → logprob: -8.654617309570312
    9. ' ' → logprob: -8.904617309570312
    10. '\' → logprob: -8.904617309570312

Token 54: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00998473260551691
    2. 'r' → logprob: -4.884984970092773
    3. 'rows' → logprob: -7.509984970092773
    4. 'N' → logprob: -7.634984970092773
    5. 'm' → logprob: -7.759984970092773
    6. 'grid' → logprob: -8.509984970092773
    7. 'for' → logprob: -8.884984970092773
    8. 'h' → logprob: -8.884984970092773
    9. 'R' → logprob: -9.009984970092773
    10. 'H' → logprob: -9.384984970092773

Token 55: ' Read' (ID: 5405)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.579749345779419
    2. 'input' → logprob: -1.204749345779419
    3. 'n' → logprob: -2.954749345779419
    4. ' n' → logprob: -2.954749345779419
    5. '   ' → logprob: -4.45474910736084
    6. 'rows' → logprob: -4.82974910736084
    7. ' rows' → logprob: -5.20474910736084
    8. ' grid' → logprob: -5.82974910736084
    9. 'read' → logprob: -5.95474910736084
    10. 'r' → logprob: -6.95474910736084

Token 56: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5514719486236572
    2. 'input' → logprob: -2.1764719486236572
    3. '   ' → logprob: -2.3014719486236572
    4. ' line' → logprob: -2.6764719486236572
    5. ' lines' → logprob: -3.3014719486236572
    6. ' data' → logprob: -4.051471710205078
    7. ' size' → logprob: -4.426471710205078
    8. ' n' → logprob: -4.426471710205078
    9. 'n' → logprob: -5.051471710205078
    10. '(' → logprob: -5.051471710205078

Token 57: ' until' (ID: 4609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18215297162532806
    2. 'n' → logprob: -1.9321529865264893
    3. 'rows' → logprob: -4.93215274810791
    4. 'data' → logprob: -5.43215274810791
    5. '```' → logprob: -5.55715274810791
    6. 'row' → logprob: -6.80715274810791
    7. ' n' → logprob: -7.05715274810791
    8. 'r' → logprob: -7.30715274810791
    9. ' rows' → logprob: -7.43215274810791
    10. ' lines' → logprob: -7.43215274810791

Token 58: ' "' (ID: 392)
  Prédit: ' EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' EOF' → logprob: -0.05573512986302376
    2. 'EOF' → logprob: -2.9307351112365723
    3. ' True' → logprob: -7.555735111236572
    4. ' sys' → logprob: -9.18073558807373
    5. ' eof' → logprob: -9.18073558807373
    6. ' False' → logprob: -10.05573558807373
    7. ' not' → logprob: -11.05573558807373
    8. ' the' → logprob: -11.30573558807373
    9. ' a' → logprob: -11.43073558807373
    10. 'True' → logprob: -11.55573558807373

Token 59: '0' (ID: 15)
  Prédit: 'EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EOF' → logprob: -0.12936267256736755
    2. '"' → logprob: -3.1293625831604004
    3. 'END' → logprob: -3.7543625831604004
    4. ' EOF' → logprob: -4.1293625831604
    5. '0' → logprob: -4.2543625831604
    6. '#' → logprob: -4.7543625831604
    7. 'end' → logprob: -5.7543625831604
    8. ' ' → logprob: -5.8793625831604
    9. 'E' → logprob: -7.0043625831604
    10. '```' → logprob: -7.1293625831604

Token 60: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09443444758653641
    2. '0' → logprob: -3.0944344997406006
    3. '"' → logprob: -3.5944344997406006
    4. ' "' → logprob: -4.2194342613220215
    5. ' ")' → logprob: -6.7194342613220215
    6. '<|end|>' → logprob: -7.5944342613220215
    7. '")' → logprob: -8.21943473815918
    8. ',' → logprob: -8.96943473815918
    9. '<|end|>' → logprob: -8.96943473815918
    10. '">' → logprob: -9.59443473815918

Token 61: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012516596354544163
    2. ' ' → logprob: -4.387516498565674
    3. '"' → logprob: -12.012516975402832
    4. '")' → logprob: -15.262516975402832
    5. ',' → logprob: -15.762516975402832
    6. ' "' → logprob: -16.637516021728516
    7. ')' → logprob: -16.887516021728516
    8. '  ' → logprob: -17.137516021728516
    9. '">' → logprob: -17.137516021728516
    10. '```' → logprob: -17.387516021728516

Token 62: ' ' (ID: 220)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.003636065172031522
    2. '\n' → logprob: -5.753635883331299
    3. '")' → logprob: -8.503636360168457
    4. '```' → logprob: -9.628636360168457
    5. ')"' → logprob: -10.003636360168457
    6. '"\' → logprob: -10.003636360168457
    7. '":' → logprob: -10.378636360168457
    8. '"""' → logprob: -11.128636360168457
    9. ')' → logprob: -11.128636360168457
    10. '".' → logprob: -11.753636360168457

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6365534067153931
    2. '"' → logprob: -1.011553406715393
    3. '\n' → logprob: -2.7615532875061035
    4. ' ' → logprob: -3.1365532875061035
    5. ' "' → logprob: -8.261553764343262
    6. '"\' → logprob: -9.386553764343262
    7. '")' → logprob: -9.886553764343262
    8. '\r' → logprob: -10.261553764343262
    9. '```' → logprob: -10.761553764343262
    10. '".' → logprob: -11.074053764343262

Token 64: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.22844620048999786
    2. '\n' → logprob: -1.6034462451934814
    3. '")' → logprob: -6.603446006774902
    4. ')' → logprob: -7.478446006774902
    5. '```' → logprob: -8.103446006774902
    6. '"\' → logprob: -8.228446006774902
    7. ')"' → logprob: -8.478446006774902
    8. '"
' → logprob: -9.228446006774902
    9. '":' → logprob: -9.603446006774902
    10. '"""' → logprob: -10.353446006774902

Token 65: ' is' (ID: 382)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02350110374391079
    2. '   ' → logprob: -4.023500919342041
    3. '\n' → logprob: -5.523500919342041
    4. '    
' → logprob: -7.273500919342041
    5. 'n' → logprob: -8.0235013961792
    6. '   
' → logprob: -9.7735013961792
    7. '  
' → logprob: -10.2735013961792
    8. '' → logprob: -10.2735013961792
    9. '```' → logprob: -10.6485013961792
    10. ' while' → logprob: -10.7735013961792

Token 66: ' encountered' (ID: 41065)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.036586180329322815
    2. 'not' → logprob: -4.286586284637451
    3. ' reached' → logprob: -4.661586284637451
    4. ' encountered' → logprob: -4.661586284637451
    5. ' received' → logprob: -6.786586284637451
    6. ' found' → logprob: -7.036586284637451
    7. ' given' → logprob: -7.911586284637451
    8. 'n't' → logprob: -8.911585807800293
    9. ' ' → logprob: -8.911585807800293
    10. '\n' → logprob: -9.036585807800293

Token 67: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43853825330734253
    2. '
' → logprob: -1.1885383129119873
    3. 'while' → logprob: -3.9385383129119873
    4. '```' → logprob: -4.188538074493408
    5. ' while' → logprob: -4.313538074493408
    6. '    
' → logprob: -6.438538074493408
    7. 'n' → logprob: -8.438538551330566
    8. '\n' → logprob: -8.563538551330566
    9. '``' → logprob: -9.438538551330566
    10. '   
' → logprob: -9.938538551330566

Token 68: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1929977685213089
    2. '   ' → logprob: -1.8179978132247925
    3. '```' → logprob: -5.317997932434082
    4. '    
' → logprob: -5.692997932434082
    5. 'while' → logprob: -5.942997932434082
    6. ' while' → logprob: -6.942997932434082
    7. '\n' → logprob: -7.567997932434082
    8. 'n' → logprob: -7.817997932434082
    9. '   
' → logprob: -9.567997932434082
    10. '  
' → logprob: -9.567997932434082

Token 69: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.08036559820175171
    2. ' while' → logprob: -2.5803656578063965
    3. '   ' → logprob: -7.0803656578063965
    4. 'w' → logprob: -7.7053656578063965
    5. '
' → logprob: -9.455365180969238
    6. 'wh' → logprob: -9.455365180969238
    7. '    
' → logprob: -11.830365180969238
    8. '```' → logprob: -11.955365180969238
    9. ' w' → logprob: -12.705365180969238
    10. ' 
' → logprob: -13.080365180969238

Token 70: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0004050514253322035
    2. 'True' → logprob: -7.8754048347473145
    3. '(True' → logprob: -10.625405311584473
    4. ' Tru' → logprob: -15.000405311584473
    5. ' ' → logprob: -15.375405311584473
    6. '=True' → logprob: -16.000404357910156
    7. ' (' → logprob: -17.875404357910156
    8. '  ' → logprob: -19.375404357910156
    9. '(' → logprob: -19.375404357910156
    10. '1' → logprob: -19.625404357910156

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038562860572710633
    2. '):' → logprob: -8.125385284423828
    3. ':
' → logprob: -9.625385284423828
    4. ',' → logprob: -11.500385284423828
    5. '():' → logprob: -12.250385284423828
    6. ' :' → logprob: -13.000385284423828
    7. ':**' → logprob: -13.125385284423828
    8. '   ' → logprob: -13.375385284423828
    9. '):
' → logprob: -13.875385284423828
    10. ',:' → logprob: -14.250385284423828

Token 72: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01953526772558689
    2. '   ' → logprob: -4.019535064697266
    3. ' line' → logprob: -7.394535064697266
    4. '    ' → logprob: -8.644535064697266
    5. '    
' → logprob: -9.144535064697266
    6. '        
' → logprob: -9.394535064697266
    7. 'input' → logprob: -9.644535064697266
    8. 'line' → logprob: -10.144535064697266
    9. '     ' → logprob: -10.269535064697266
    10. '```' → logprob: -10.269535064697266

Token 73: ' line' (ID: 2543)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.0462062358856201
    2. 'line' (adapté à ' line') → logprob: -1.1712062358856201
    3. ' line' → logprob: -2.29620623588562
    4. 'm' → logprob: -3.04620623588562
    5. 'l' → logprob: -3.29620623588562
    6. 'x' → logprob: -3.42120623588562
    7. 'w' → logprob: -3.54620623588562
    8. 'n' → logprob: -3.92120623588562
    9. ' h' → logprob: -3.92120623588562
    10. 'H' → logprob: -4.421206474304199

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004078878089785576
    2. '=' → logprob: -5.5040788650512695
    3. 's' → logprob: -16.254079818725586
    4. ' ' → logprob: -16.254079818725586
    5. ' =
' → logprob: -16.629079818725586
    6. '=line' → logprob: -16.754079818725586
    7. ' =)' → logprob: -17.129079818725586
    8. ')' → logprob: -17.879079818725586
    9. '   ' → logprob: -18.004079818725586
    10. ' ==' → logprob: -18.379079818725586

Token 75: ' ''
' (ID: 25366)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.16038791835308075
    2. 'sys' → logprob: -1.9103878736495972
    3. ' input' → logprob: -9.160387992858887
    4. 'input' → logprob: -9.785387992858887
    5. '=sys' → logprob: -13.410387992858887
    6. '	sys' → logprob: -14.535387992858887
    7. '(sys' → logprob: -15.410387992858887
    8. 's' → logprob: -16.53538703918457
    9. ' ' → logprob: -17.53538703918457
    10. '_sys' → logprob: -17.91038703918457

Token 76: '       ' (ID: 309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08039727061986923
    2. ' =' → logprob: -2.580397367477417
    3. '=line' → logprob: -7.080397129058838
    4. '       ' → logprob: -7.705397129058838
    5. '=sys' → logprob: -9.205397605895996
    6. '.readline' → logprob: -10.705397605895996
    7. 'line' → logprob: -10.705397605895996
    8. ' line' → logprob: -11.205397605895996
    9. '.strip' → logprob: -11.455397605895996
    10. ' if' → logprob: -11.830397605895996

Token 77: ' #' (ID: 1069)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.13525384664535522
    2. ' line' → logprob: -2.26025390625
    3. '       ' → logprob: -4.01025390625
    4. 'for' → logprob: -6.38525390625
    5. 'while' → logprob: -6.88525390625
    6. 'try' → logprob: -7.63525390625
    7. 'if' → logprob: -8.13525390625
    8. ' for' → logprob: -8.51025390625
    9. ' while' → logprob: -9.51025390625
    10. '   ' → logprob: -10.13525390625

Token 78: ' Skip' (ID: 47626)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.04712917283177376
    2. ' line' → logprob: -3.9221291542053223
    3. 'while' → logprob: -4.547129154205322
    4. 'for' → logprob: -4.797129154205322
    5. 'try' → logprob: -5.422129154205322
    6. 'l' → logprob: -7.172129154205322
    7. '   ' → logprob: -7.172129154205322
    8. ' while' → logprob: -7.547129154205322
    9. ' for' → logprob: -7.922129154205322
    10. '       ' → logprob: -8.92212963104248

Token 79: ' empty' (ID: 8213)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.922855019569397
    2. 'while' → logprob: -1.172855019569397
    3. ' line' → logprob: -1.797855019569397
    4. 'line' → logprob: -2.5478549003601074
    5. '       ' → logprob: -3.2978549003601074
    6. ' not' → logprob: -4.672854900360107
    7. '   ' → logprob: -7.422854900360107
    8. ' if' → logprob: -7.672854900360107
    9. 'not' → logprob: -7.797854900360107
    10. 'len' → logprob: -8.047855377197266

Token 80: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.2311297208070755
    2. ' line' → logprob: -2.1061296463012695
    3. 'line' → logprob: -2.8561296463012695
    4. 'lines' → logprob: -4.2311296463012695
    5. '       ' → logprob: -6.1061296463012695
    6. ' ' → logprob: -6.1061296463012695
    7. '.readline' → logprob: -6.3561296463012695
    8. 's' → logprob: -6.9811296463012695
    9. '(lines' → logprob: -7.2311296463012695
    10. ' readline' → logprob: -7.3561296463012695

Token 81: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019229989498853683
    2. 'while' → logprob: -4.394229888916016
    3. ' while' → logprob: -6.019229888916016
    4. '<|end|>' → logprob: -6.394229888916016
    5. '        
' → logprob: -6.519229888916016
    6. '
' → logprob: -7.144229888916016
    7. '        ' → logprob: -9.894229888916016
    8. '	while' → logprob: -10.394229888916016
    9. '   ' → logprob: -10.519229888916016
    10. ' ' → logprob: -10.644229888916016

Token 82: ' any' (ID: 1062)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6999723315238953
    2. 'not' → logprob: -0.6999723315238953
    3. 'line' → logprob: -5.199972152709961
    4. ' line' → logprob: -6.699972152709961
    5. 'len' → logprob: -10.574972152709961
    6. '(line' → logprob: -11.449972152709961
    7. ' ' → logprob: -12.574972152709961
    8. '(not' → logprob: -12.949972152709961
    9. '```' → logprob: -12.949972152709961
    10. ' len' → logprob: -13.074972152709961

Token 83: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02935258485376835
    2. 'while' → logprob: -4.40435266494751
    3. '<|end|>' → logprob: -5.27935266494751
    4. '        
' → logprob: -5.52935266494751
    5. '
' → logprob: -5.52935266494751
    6. ' while' → logprob: -6.15435266494751
    7. ' line' → logprob: -8.279352188110352
    8. '        ' → logprob: -8.529352188110352
    9. '  
' → logprob: -8.654352188110352
    10. '#line' → logprob: -8.904352188110352

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009043150348588824
    2. '<|end|>' → logprob: -7.750904083251953
    3. '        
' → logprob: -8.500904083251953
    4. 'while' → logprob: -8.875904083251953
    5. ' while' → logprob: -9.750904083251953
    6. '
' → logprob: -10.500904083251953
    7. '   ' → logprob: -12.125904083251953
    8. '#line' → logprob: -12.125904083251953
    9. '<|end|>' → logprob: -12.375904083251953
    10. ' line' → logprob: -12.625904083251953

Token 85: ' while' (ID: 2049)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4744369685649872
    2. ' line' → logprob: -1.3494369983673096
    3. '       ' → logprob: -2.7244369983673096
    4. 'while' (adapté à ' while') → logprob: -3.4744369983673096
    5. ' while' → logprob: -3.9744369983673096
    6. ' ' → logprob: -6.4744367599487305
    7. '   ' → logprob: -7.2244367599487305
    8. 'try' → logprob: -8.72443675994873
    9. 'if' → logprob: -8.97443675994873
    10. '        
' → logprob: -9.22443675994873

Token 86: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.20856159925460815
    2. 'not' → logprob: -2.583561658859253
    3. ' line' → logprob: -2.708561658859253
    4. 'line' → logprob: -3.083561658859253
    5. ' len' → logprob: -8.958561897277832
    6. 'len' → logprob: -9.083561897277832
    7. '(line' → logprob: -10.708561897277832
    8. ' ' → logprob: -11.208561897277832
    9. '	line' → logprob: -11.708561897277832
    10. ' True' → logprob: -12.083561897277832

Token 87: '.strip' (ID: 40613)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.481132447719574
    2. '==' → logprob: -1.1061325073242188
    3. ' =' → logprob: -3.4811325073242188
    4. '=' → logprob: -4.481132507324219
    5. '.strip' → logprob: -4.731132507324219
    6. ' ' → logprob: -9.481132507324219
    7. ' :=' → logprob: -10.856132507324219
    8. '.' → logprob: -10.981132507324219
    9. ' in' → logprob: -11.606132507324219
    10. 'strip' → logprob: -11.731132507324219

Token 88: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08383286744356155
    2. '()==' → logprob: -2.5838329792022705
    3. '==' → logprob: -5.333832740783691
    4. ' ==' → logprob: -9.208832740783691
    5. ' ()' → logprob: -13.333832740783691
    6. '=' → logprob: -13.833832740783691
    7. ')' → logprob: -14.833832740783691
    8. '()!=' → logprob: -14.958832740783691
    9. ')==' → logprob: -14.958832740783691
    10. '()=="' → logprob: -14.958832740783691

Token 89: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3571329116821289
    2. ' ==' → logprob: -1.232132911682129
    3. '()==' → logprob: -4.857132911682129
    4. '()' → logprob: -7.107132911682129
    5. '=' → logprob: -9.982132911682129
    6. ' =' → logprob: -12.232132911682129
    7. ')==' → logprob: -12.982132911682129
    8. ' ' → logprob: -13.857132911682129
    9. ' is' → logprob: -14.482132911682129
    10. ')' → logprob: -14.482132911682129

Token 90: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.023256778717041016
    2. ''' → logprob: -3.773256778717041
    3. '""' → logprob: -11.898256301879883
    4. '"":' → logprob: -12.648256301879883
    5. ''''' → logprob: -14.898256301879883
    6. ' '' → logprob: -15.898256301879883
    7. '"' → logprob: -15.898256301879883
    8. '':' → logprob: -16.023256301879883
    9. '''''' → logprob: -16.148256301879883
    10. '''.' → logprob: -16.273256301879883

Token 91: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7117510437965393
    2. '       ' → logprob: -1.4617509841918945
    3. 'line' → logprob: -2.4617509841918945
    4. ' line' → logprob: -2.5867509841918945
    5. ':' → logprob: -3.0867509841918945
    6. '   ' → logprob: -3.7117509841918945
    7. ',' → logprob: -4.4617509841918945
    8. '=line' → logprob: -4.9617509841918945
    9. '<|end|>' → logprob: -5.3367509841918945
    10. ',line' → logprob: -5.8367509841918945

Token 92: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.10020915418863297
    2. ' line' → logprob: -2.3502092361450195
    3. '           ' → logprob: -14.22520923614502
    4. '   ' → logprob: -14.22520923614502
    5. '	line' → logprob: -14.47520923614502
    6. 'try' → logprob: -15.35020923614502
    7. '```' → logprob: -15.72520923614502
    8. '#line' → logprob: -16.975208282470703
    9. '=line' → logprob: -17.100208282470703
    10. 'l' → logprob: -17.225208282470703

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741329550743103
    2. '=' → logprob: -0.9741329550743103
    3. '=sys' → logprob: -10.349132537841797
    4. '=line' → logprob: -10.849132537841797
    5. '=input' → logprob: -13.724132537841797
    6. ' ' → logprob: -14.599132537841797
    7. '+=' → logprob: -14.724132537841797
    8. ' =
' → logprob: -14.849132537841797
    9. '=
' → logprob: -14.974132537841797
    10. ' +=' → logprob: -14.974132537841797

Token 94: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.25196096301078796
    2. ' sys' → logprob: -1.5019609928131104
    3. 'input' → logprob: -10.501960754394531
    4. ' input' → logprob: -13.126960754394531
    5. '=sys' → logprob: -13.376960754394531
    6. '	sys' → logprob: -14.501960754394531
    7. '(sys' → logprob: -15.126960754394531
    8. '_sys' → logprob: -17.75196075439453
    9. 'stdin' → logprob: -18.00196075439453
    10. 'system' → logprob: -18.25196075439453

Token 95: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00010604646377032623
    2. '.' → logprob: -9.375105857849121
    3. '.readline' → logprob: -11.625105857849121
    4. '.stdout' → logprob: -11.750105857849121
    5. 'stdin' → logprob: -12.750105857849121
    6. '.std' → logprob: -14.125105857849121
    7. '.argv' → logprob: -15.500105857849121
    8. '.stderr' → logprob: -15.750105857849121
    9. '(stdin' → logprob: -16.625106811523438
    10. ' stdin' → logprob: -17.000106811523438

Token 96: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.700132997939363e-05
    2. '.' → logprob: -11.000017166137695
    3. ' readline' → logprob: -16.125017166137695
    4. '.readlines' → logprob: -16.500017166137695
    5. '.read' → logprob: -17.250017166137695
    6. 'read' → logprob: -20.000017166137695
    7. '.stdin' → logprob: -20.250017166137695
    8. '().' → logprob: -21.000017166137695
    9. ' .' → logprob: -21.625017166137695
    10. 'rea' → logprob: -21.625017166137695

Token 97: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00014942926645744592
    2. '().' → logprob: -9.625149726867676
    3. '()
' → logprob: -9.875149726867676
    4. '(' → logprob: -11.250149726867676
    5. '()

' → logprob: -11.875149726867676
    6. '())' → logprob: -12.250149726867676
    7. '()>' → logprob: -13.625149726867676
    8. '()`' → logprob: -13.875149726867676
    9. '()]' → logprob: -13.875149726867676
    10. '()<' → logprob: -14.250149726867676

Token 98: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011435531778261065
    2. '        
' → logprob: -8.626143455505371
    3. '.strip' → logprob: -8.876143455505371
    4. '           ' → logprob: -9.126143455505371
    5. '<|end|>' → logprob: -9.126143455505371
    6. '   ' → logprob: -9.251143455505371
    7. '
' → logprob: -9.376143455505371
    8. '.rstrip' → logprob: -9.376143455505371
    9. ')' → logprob: -9.626143455505371
    10. 'rstrip' → logprob: -10.126143455505371

Token 99: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14843076467514038
    2. ' if' → logprob: -2.148430824279785
    3. 'if' (adapté à ' if') → logprob: -4.398430824279785
    4. '           ' → logprob: -5.023430824279785
    5. '
' → logprob: -6.648430824279785
    6. '        
' → logprob: -7.398430824279785
    7. ' line' → logprob: -9.773430824279785
    8. '```' → logprob: -9.898430824279785
    9. '   ' → logprob: -10.023430824279785
    10. 'rstrip' → logprob: -10.148430824279785

Token 100: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.38940203189849854
    2. 'line' → logprob: -2.014401912689209
    3. ' line' → logprob: -2.139401912689209
    4. 'not' → logprob: -2.639401912689209
    5. ' ' → logprob: -12.764402389526367
    6. 'len' → logprob: -13.639402389526367
    7. '	line' → logprob: -13.764402389526367
    8. '#line' → logprob: -14.014402389526367
    9. '(line' → logprob: -14.764402389526367
    10. ' lin' → logprob: -15.139402389526367

Token 101: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.4740876853466034
    2. 'line' → logprob: -0.9740877151489258
    3. '	line' → logprob: -11.724087715148926
    4. '#line' → logprob: -14.224087715148926
    5. '(line' → logprob: -14.224087715148926
    6. '=line' → logprob: -14.849087715148926
    7. ' ' → logprob: -15.099087715148926
    8. '[line' → logprob: -15.099087715148926
    9. '_line' → logprob: -16.97408676147461
    10. 'l' → logprob: -17.22408676147461

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02227899432182312
    2. ':
' → logprob: -3.8972790241241455
    3. '.strip' → logprob: -7.397278785705566
    4. '):' → logprob: -7.772278785705566
    5. ':return' → logprob: -8.647278785705566
    6. ' or' → logprob: -8.897278785705566
    7. '):
' → logprob: -9.022278785705566
    8. ')' → logprob: -9.647278785705566
    9. '<|end|>' → logprob: -9.897278785705566
    10. ' :' → logprob: -10.022278785705566

Token 103: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00041696816333569586
    2. '           ' → logprob: -8.12541675567627
    3. 'return' → logprob: -10.62541675567627
    4. '                   ' → logprob: -10.87541675567627
    5. '                
' → logprob: -11.25041675567627
    6. ' return' → logprob: -11.50041675567627
    7. ':return' → logprob: -11.62541675567627
    8. 'break' → logprob: -11.87541675567627
    9. ' break' → logprob: -12.00041675567627
    10. '   ' → logprob: -12.12541675567627

Token 104: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.31549546122550964
    2. ' return' → logprob: -1.315495491027832
    3. '               ' → logprob: -6.315495491027832
    4. '                   ' → logprob: -7.940495491027832
    5. 'break' → logprob: -10.440495491027832
    6. ' break' → logprob: -11.065495491027832
    7. '
' → logprob: -11.815495491027832
    8. '           ' → logprob: -12.315495491027832
    9. '	return' → logprob: -12.940495491027832
    10. '                       ' → logprob: -12.940495491027832

Token 105: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0777050331234932
    2. '        
' → logprob: -3.702705144882202
    3. '
' → logprob: -3.827705144882202
    4. '<|end|>' → logprob: -4.202704906463623
    5. '\n' → logprob: -4.702704906463623
    6. ',' → logprob: -7.327704906463623
    7. ' ' → logprob: -7.577704906463623
    8. '<|end|>' → logprob: -7.827704906463623
    9. ' 
' → logprob: -7.952704906463623
    10. '        

' → logprob: -7.952704906463623

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015708031132817268
    2. '<|end|>' → logprob: -7.501570701599121
    3. ',' → logprob: -8.001570701599121
    4. '
' → logprob: -8.126570701599121
    5. '        
' → logprob: -8.251570701599121
    6. ')' → logprob: -10.751570701599121
    7. '      ' → logprob: -11.251570701599121
    8. ' s' → logprob: -11.501570701599121
    9. '        

' → logprob: -11.626570701599121
    10. ' ' → logprob: -11.626570701599121

Token 107: ' w' (ID: 286)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7355687022209167
    2. 'x' → logprob: -1.6105687618255615
    3. 'n' → logprob: -1.7355687618255615
    4. 'r' → logprob: -3.1105687618255615
    5. 'h' → logprob: -3.6105687618255615
    6. 'm' → logprob: -3.6105687618255615
    7. 'R' → logprob: -4.985568523406982
    8. ' n' → logprob: -5.235568523406982
    9. 'w' (adapté à ' w') → logprob: -5.485568523406982
    10. 'parts' → logprob: -5.485568523406982

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032038541976362467
    2. ' ,' → logprob: -5.753203868865967
    3. ',w' → logprob: -11.628203392028809
    4. ' =' → logprob: -11.878203392028809
    5. '=' → logprob: -12.128203392028809
    6. ',int' → logprob: -13.753203392028809
    7. ',
' → logprob: -13.753203392028809
    8. ',s' → logprob: -14.753203392028809
    9. ',h' → logprob: -15.378203392028809
    10. ',input' → logprob: -15.628203392028809

Token 109: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5763285756111145
    2. ' h' → logprob: -0.8263285756111145
    3. '<|end|>' → logprob: -8.07632827758789
    4. ' ' → logprob: -9.70132827758789
    5. 's' → logprob: -11.95132827758789
    6. '	h' → logprob: -12.57632827758789
    7. ',h' → logprob: -14.20132827758789
    8. 'd' → logprob: -14.45132827758789
    9. 'n' → logprob: -14.45132827758789
    10. 'H' → logprob: -14.45132827758789

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003015001420862973
    2. '=' → logprob: -8.625301361083984
    3. ' ,' → logprob: -9.500301361083984
    4. ' =' → logprob: -10.000301361083984
    5. '<|end|>' → logprob: -14.500301361083984
    6. '‌,' → logprob: -15.500301361083984
    7. '<|end|>' → logprob: -15.500301361083984
    8. ')' → logprob: -16.125301361083984
    9. ',...' → logprob: -16.250301361083984
    10. ',
' → logprob: -16.500301361083984

Token 111: ' n' (ID: 297)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6995625495910645
    2. 'n' → logprob: -1.0745625495910645
    3. 'm' → logprob: -3.0745625495910645
    4. 't' → logprob: -3.1995625495910645
    5. 'f' → logprob: -3.6995625495910645
    6. 'k' → logprob: -3.6995625495910645
    7. 'l' → logprob: -5.0745625495910645
    8. 'c' → logprob: -5.1995625495910645
    9. 's' → logprob: -5.6995625495910645
    10. 'p' → logprob: -6.0745625495910645

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022878885269165
    2. '=' → logprob: -1.9102287292480469
    3. ')' → logprob: -12.785228729248047
    4. ',' → logprob: -13.785228729248047
    5. '<|end|>' → logprob: -15.410228729248047
    6. ' ' → logprob: -16.035228729248047
    7. '=line' → logprob: -16.285228729248047
    8. ' =
' → logprob: -16.410228729248047
    9. '=int' → logprob: -17.160228729248047
    10. '=input' → logprob: -17.285228729248047

Token 113: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.3133094608783722
    2. 'map' → logprob: -1.3133094310760498
    3. ' line' → logprob: -10.938309669494629
    4. '[' → logprob: -11.688309669494629
    5. 'line' → logprob: -11.938309669494629
    6. 'm' → logprob: -12.563309669494629
    7. ' ma' → logprob: -13.063309669494629
    8. '(map' → logprob: -13.313309669494629
    9. ' [' → logprob: -13.563309669494629
    10. ' m' → logprob: -13.563309669494629

Token 114: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.09314458817243576
    2. '(' → logprob: -3.093144655227661
    3. '(str' → logprob: -3.718144655227661
    4. '(lambda' → logprob: -3.968144655227661
    5. '(list' → logprob: -8.843144416809082
    6. '(line' → logprob: -9.093144416809082
    7. '(tuple' → logprob: -9.718144416809082
    8. '(map' → logprob: -11.093144416809082
    9. ' (' → logprob: -11.468144416809082
    10. 'int' → logprob: -11.718144416809082

Token 115: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0021195695735514164
    2. ')' → logprob: -6.377119541168213
    3. '(' → logprob: -8.252120018005371
    4. ' line' → logprob: -9.877120018005371
    5. ',line' → logprob: -10.002120018005371
    6. 'line' → logprob: -10.502120018005371
    7. ')(' → logprob: -11.127120018005371
    8. '#line' → logprob: -12.252120018005371
    9. '[line' → logprob: -12.502120018005371
    10. '=line' → logprob: -12.627120018005371

Token 116: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.062107279896736145
    2. ' line' → logprob: -2.8121073246002197
    3. ')' → logprob: -9.06210708618164
    4. '(line' → logprob: -11.18710708618164
    5. '[line' → logprob: -12.06210708618164
    6. '	line' → logprob: -13.43710708618164
    7. '=line' → logprob: -13.81210708618164
    8. '#line' → logprob: -14.06210708618164
    9. '           ' → logprob: -15.06210708618164
    10. ' ' → logprob: -15.93710708618164

Token 117: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.05053624138236046
    2. '.split' → logprob: -3.0505361557006836
    3. '.' → logprob: -6.425536155700684
    4. '().' → logprob: -8.300536155700684
    5. '.readline' → logprob: -10.675536155700684
    6. ' .' → logprob: -10.675536155700684
    7. '.rstrip' → logprob: -11.175536155700684
    8. ')' → logprob: -11.550536155700684
    9. 'strip' → logprob: -11.925536155700684
    10. 'split' → logprob: -14.175536155700684

Token 118: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.672236824873835e-05
    2. '()' → logprob: -9.500076293945312
    3. '()
' → logprob: -14.625076293945312
    4. '())' → logprob: -14.625076293945312
    5. '(' → logprob: -15.250076293945312
    6. ')' → logprob: -15.750076293945312
    7. ' ().' → logprob: -15.750076293945312
    8. '('' → logprob: -15.875076293945312
    9. '.split' → logprob: -16.000076293945312
    10. 'split' → logprob: -17.000076293945312

Token 119: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.981667537620524e-06
    2. '(split' → logprob: -13.500001907348633
    3. ')' → logprob: -15.750001907348633
    4. ' split' → logprob: -15.750001907348633
    5. 'plit' → logprob: -16.000001907348633
    6. '.split' → logprob: -16.000001907348633
    7. 'rstrip' → logprob: -17.125001907348633
    8. 'spl' → logprob: -17.625001907348633
    9. '```' → logprob: -18.125001907348633
    10. 'sp' → logprob: -18.250001907348633

Token 120: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.11389494687318802
    2. '('' → logprob: -2.9888949394226074
    3. '()' → logprob: -3.7388949394226074
    4. ')' → logprob: -3.7388949394226074
    5. '(' → logprob: -4.738894939422607
    6. '(','' → logprob: -7.238894939422607
    7. '())
' → logprob: -9.488895416259766
    8. '()))' → logprob: -9.863895416259766
    9. '(',' → logprob: -9.988895416259766
    10. '("' → logprob: -10.238895416259766

Token 121: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1365828961133957
    2. ' if' → logprob: -2.261582851409912
    3. '<|end|>' → logprob: -4.761582851409912
    4. '
' → logprob: -5.386582851409912
    5. 'if' (adapté à ' if') → logprob: -5.386582851409912
    6. ' 
' → logprob: -6.761582851409912
    7. '        
' → logprob: -6.886582851409912
    8. ' ' → logprob: -7.136582851409912
    9. '   ' → logprob: -7.511582851409912
    10. ')' → logprob: -7.761582851409912

Token 123: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.001777757192030549
    2. 'w' → logprob: -6.376777648925781
    3. ' (' → logprob: -9.626777648925781
    4. ' ' → logprob: -11.751777648925781
    5. '(w' → logprob: -13.626777648925781
    6. '(' → logprob: -14.751777648925781
    7. '	w' → logprob: -16.25177764892578
    8. ' ' → logprob: -16.50177764892578
    9. '  ' → logprob: -17.75177764892578
    10. '```' → logprob: -19.12677764892578

Token 124: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3871365785598755
    2. '==' → logprob: -1.1371365785598755
    3. ' ' → logprob: -9.012136459350586
    4. '=' → logprob: -9.137136459350586
    5. '0' → logprob: -11.762136459350586
    6. ')==' → logprob: -12.387136459350586
    7. '```' → logprob: -12.512136459350586
    8. ' =' → logprob: -12.887136459350586
    9. ')' → logprob: -12.887136459350586
    10. ',' → logprob: -13.012136459350586

Token 125: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031786637846380472
    2. ' ' → logprob: -5.753178596496582
    3. '<|end|>' → logprob: -14.003178596496582
    4. '<|end|>' → logprob: -17.1281795501709
    5. ' 
' → logprob: -18.2531795501709
    6. '۰' → logprob: -18.6281795501709
    7. '  ' → logprob: -18.8781795501709
    8. '  
' → logprob: -19.3156795501709
    9. '```' → logprob: -19.3156795501709
    10. '   ' → logprob: -19.4406795501709

Token 126: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '<|end|>' → logprob: -18.87504005432129
    4. 'and' → logprob: -19.25004005432129
    5. '۰' → logprob: -20.12504005432129
    6. '  ' → logprob: -20.75004005432129
    7. '...' → logprob: -21.25004005432129
    8. '   ' → logprob: -21.25004005432129
    9. ' and' → logprob: -21.37504005432129
    10. '```' → logprob: -21.37504005432129

Token 127: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.061991553753614426
    2. 'and' → logprob: -2.8119914531707764
    3. ' ' → logprob: -11.436991691589355
    4. '<|end|>' → logprob: -11.561991691589355
    5. ' or' → logprob: -13.186991691589355
    6. ',' → logprob: -14.436991691589355
    7. '0' → logprob: -15.186991691589355
    8. '  ' → logprob: -15.436991691589355
    9. ' ' → logprob: -16.31199073791504
    10. '   ' → logprob: -16.56199073791504

Token 128: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.1602245420217514
    2. 'h' → logprob: -1.9102245569229126
    3. '	h' → logprob: -15.660224914550781
    4. ' ' → logprob: -15.910224914550781
    5. ' ' → logprob: -16.41022491455078
    6. ',h' → logprob: -17.41022491455078
    7. '```' → logprob: -17.66022491455078
    8. '<h' → logprob: -18.28522491455078
    9. '"h' → logprob: -18.41022491455078
    10. '   ' → logprob: -18.66022491455078

Token 129: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4311564266681671
    2. '==' → logprob: -1.0561563968658447
    3. ' ' → logprob: -6.806156635284424
    4. ' and' → logprob: -7.181156635284424
    5. 'and' → logprob: -8.306156158447266
    6. '<|end|>' → logprob: -8.681156158447266
    7. '0' → logprob: -9.056156158447266
    8. '=' → logprob: -10.931156158447266
    9. ' =' → logprob: -11.431156158447266
    10. '<|end|>' → logprob: -11.931156158447266

Token 130: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20141948759555817
    2. ' ' → logprob: -1.701419472694397
    3. '<|end|>' → logprob: -12.326419830322266
    4. ' and' → logprob: -13.826419830322266
    5. '<|end|>' → logprob: -15.076419830322266
    6. 'and' → logprob: -15.451419830322266
    7. '  ' → logprob: -15.888919830322266
    8. '   ' → logprob: -16.763919830322266
    9. ' ' → logprob: -17.076419830322266
    10. ' 
' → logprob: -17.451419830322266

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009119403548538685
    2. ' ' → logprob: -7.000911712646484
    3. '<|end|>' → logprob: -15.000911712646484
    4. ' and' → logprob: -16.500911712646484
    5. 'and' → logprob: -17.125911712646484
    6. '<|end|>' → logprob: -17.625911712646484
    7. '  ' → logprob: -19.250911712646484
    8. '   ' → logprob: -19.375911712646484
    9. '۰' → logprob: -20.063411712646484
    10. '```' → logprob: -20.500911712646484

Token 132: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07889209687709808
    2. 'and' → logprob: -2.5788919925689697
    3. '0' → logprob: -13.82889175415039
    4. '<|end|>' → logprob: -14.82889175415039
    5. ' ' → logprob: -14.95389175415039
    6. 'a' → logprob: -16.07889175415039
    7. '```' → logprob: -16.07889175415039
    8. ' и' → logprob: -16.07889175415039
    9. '<|end|>' → logprob: -16.07889175415039
    10. '	and' → logprob: -16.20389175415039

Token 133: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3868723213672638
    2. 'n' → logprob: -1.1368722915649414
    3. '	n' → logprob: -14.636872291564941
    4. '0' → logprob: -14.761872291564941
    5. ' ' → logprob: -15.261872291564941
    6. '   ' → logprob: -16.636873245239258
    7. '       ' → logprob: -16.886873245239258
    8. '    ' → logprob: -17.136873245239258
    9. '
' → logprob: -17.761873245239258
    10. ')n' → logprob: -17.886873245239258

Token 134: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5827990174293518
    2. ' ==' → logprob: -0.8327990174293518
    3. '<|end|>' → logprob: -5.707798957824707
    4. '=' → logprob: -6.207798957824707
    5. ')' → logprob: -7.832798957824707
    6. '0' → logprob: -8.207798957824707
    7. ':' → logprob: -8.332798957824707
    8. ')==' → logprob: -8.332798957824707
    9. '<|end|>' → logprob: -8.707798957824707
    10. ' ' → logprob: -9.957798957824707

Token 135: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05488532781600952
    2. ' ' → logprob: -2.9298853874206543
    3. '<|end|>' → logprob: -13.429884910583496
    4. ' ' → logprob: -14.304884910583496
    5. '   ' → logprob: -14.554884910583496
    6. '  ' → logprob: -14.804884910583496
    7. '```' → logprob: -16.929885864257812
    8. '<|end|>' → logprob: -17.304885864257812
    9. '    ' → logprob: -17.554885864257812
    10. '#' → logprob: -17.804885864257812

Token 136: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -18.875085830688477
    4. '```' → logprob: -18.875085830688477
    5. '  ' → logprob: -19.125085830688477
    6. '`' → logprob: -20.000085830688477
    7. ')' → logprob: -20.000085830688477
    8. ''' → logprob: -20.250085830688477
    9. '<|end|>' → logprob: -20.500085830688477
    10. '000' → logprob: -21.187585830688477

Token 137: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015124812489375472
    2. ':
' → logprob: -6.50151252746582
    3. ':return' → logprob: -11.75151252746582
    4. '       ' → logprob: -13.37651252746582
    5. ':
' → logprob: -15.00151252746582
    6. '           ' → logprob: -16.12651252746582
    7. '   ' → logprob: -16.37651252746582
    8. '):' → logprob: -16.62651252746582
    9. ':

' → logprob: -17.50151252746582
    10. ' :' → logprob: -18.12651252746582

Token 138: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1271003931760788
    2. '       ' → logprob: -2.1271004676818848
    3. ':' → logprob: -9.252099990844727
    4. '               ' → logprob: -10.627099990844727
    5. '          ' → logprob: -11.127099990844727
    6. ',' → logprob: -11.877099990844727
    7. '		' → logprob: -12.252099990844727
    8. '   ' → logprob: -12.502099990844727
    9. ' break' → logprob: -12.627099990844727
    10. '        ' → logprob: -12.627099990844727

Token 139: ' break' (ID: 2338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.95447838306427
    2. '           ' → logprob: -1.20447838306427
    3. 'break' (adapté à ' break') → logprob: -1.95447838306427
    4. ' return' → logprob: -2.4544782638549805
    5. ' break' → logprob: -2.4544782638549805
    6. '       ' → logprob: -6.7044782638549805
    7. '               ' → logprob: -7.8294782638549805
    8. '   ' → logprob: -10.82947826385498
    9. '	break' → logprob: -11.20447826385498
    10. '```' → logprob: -11.95447826385498

Token 140: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0488780252635479
    2. '       ' → logprob: -3.7988779544830322
    3. '<|end|>' → logprob: -3.9238779544830322
    4. '        
' → logprob: -5.298878192901611
    5. ',' → logprob: -9.048877716064453
    6. '<|end|>' → logprob: -9.298877716064453
    7. '    
' → logprob: -9.673877716064453
    8. '  
' → logprob: -9.798877716064453
    9. ',
' → logprob: -10.298877716064453
    10. '#' → logprob: -10.298877716064453

Token 141: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3996495008468628
    2. '   ' → logprob: -2.1496496200561523
    3. '        
' → logprob: -2.6496496200561523
    4. '
' → logprob: -2.8996496200561523
    5. 'grid' → logprob: -3.2746496200561523
    6. '    
' → logprob: -3.7746496200561523
    7. ' grid' → logprob: -5.899649620056152
    8. ' 
' → logprob: -6.149649620056152
    9. 'map' → logprob: -6.274649620056152
    10. '```' → logprob: -6.399649620056152

Token 142: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.14602380990982056
    2. '       ' → logprob: -2.646023750305176
    3. 'map' → logprob: -3.896023750305176
    4. ' grid' → logprob: -4.521023750305176
    5. 'maze' → logprob: -5.021023750305176
    6. 'graph' → logprob: -5.396023750305176
    7. '#' → logprob: -5.771023750305176
    8. 'board' → logprob: -5.771023750305176
    9. 'field' → logprob: -6.521023750305176
    10. 'matrix' → logprob: -6.646023750305176

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04300752282142639
    2. '=' → logprob: -3.1680076122283936
    3. ',' → logprob: -13.168007850646973
    4. '[' → logprob: -13.293007850646973
    5. '=[]' → logprob: -13.918007850646973
    6. ')' → logprob: -14.168007850646973
    7. '_' → logprob: -14.293007850646973
    8. ' ' → logprob: -14.418007850646973
    9. '   ' → logprob: -14.418007850646973
    10. ' =
' → logprob: -14.543007850646973

Token 144: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011508945375680923
    2. ' [' → logprob: -5.011508941650391
    3. '[]' → logprob: -5.511508941650391
    4. '[['' → logprob: -8.76150894165039
    5. '['' → logprob: -9.01150894165039
    6. '[n' → logprob: -10.01150894165039
    7. '[h' → logprob: -10.13650894165039
    8. '[s' → logprob: -10.26150894165039
    9. '[class' → logprob: -10.26150894165039
    10. '[int' → logprob: -10.38650894165039

Token 145: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5500354766845703
    2. '       ' → logprob: -1.0500354766845703
    3. '<|end|>' → logprob: -3.1750354766845703
    4. 'for' → logprob: -3.5500354766845703
    5. '	for' → logprob: -7.30003547668457
    6. '   ' → logprob: -7.80003547668457
    7. ' ' → logprob: -8.17503547668457
    8. '	' → logprob: -8.17503547668457
    9. '<|end|>' → logprob: -8.17503547668457
    10. ')' → logprob: -8.42503547668457

Token 146: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4747224748134613
    2. ' for' → logprob: -0.9747225046157837
    3. '       ' → logprob: -7.349722385406494
    4. '	for' → logprob: -13.974722862243652
    5. 'start' → logprob: -14.974722862243652
    6. ' ' → logprob: -15.474722862243652
    7. '        
' → logprob: -15.599722862243652
    8. '        ' → logprob: -16.599721908569336
    9. '   ' → logprob: -16.599721908569336
    10. 'empty' → logprob: -16.599721908569336

Token 147: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.005234475247561932
    2. '_' → logprob: -5.255234241485596
    3. ' i' → logprob: -15.005234718322754
    4. '_i' → logprob: -15.130234718322754
    5. ' ' → logprob: -16.255233764648438
    6. ' ' → logprob: -17.005233764648438
    7. '_h' → logprob: -17.505233764648438
    8. 'i' → logprob: -19.005233764648438
    9. 'h' → logprob: -19.130233764648438
    10. ' h' → logprob: -19.505233764648438

Token 148: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7243282794952393
    2. 'in' → logprob: -0.8493282794952393
    3. ' in' → logprob: -2.4743282794952393
    4. ' range' → logprob: -5.72432804107666
    5. ' ' → logprob: -8.97432804107666
    6. ')' → logprob: -11.72432804107666
    7. '  ' → logprob: -11.72432804107666
    8. '	range' → logprob: -12.72432804107666
    9. ' xrange' → logprob: -12.84932804107666
    10. '<|end|>' → logprob: -13.09932804107666

Token 149: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078401252627373
    2. ' range' → logprob: -5.504078388214111
    3. '(range' → logprob: -17.004077911376953
    4. '	range' → logprob: -17.004077911376953
    5. 'rang' → logprob: -20.129077911376953
    6. ' ' → logprob: -20.379077911376953
    7. '_range' → logprob: -20.504077911376953
    8. ' xrange' → logprob: -21.129077911376953
    9. ')' → logprob: -21.379077911376953
    10. 'ran' → logprob: -21.504077911376953

Token 150: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0011529591865837574
    2. 'h' → logprob: -7.126152992248535
    3. ' h' → logprob: -8.001152992248535
    4. ' (' → logprob: -11.626152992248535
    5. '(' → logprob: -12.376152992248535
    6. '	h' → logprob: -15.251152992248535
    7. ')' → logprob: -18.87615203857422
    8. '(H' → logprob: -19.00115203857422
    9. '(
' → logprob: -19.00115203857422
    10. '   ' → logprob: -19.37615203857422

Token 151: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.048682522028684616
    2. '):
' → logprob: -3.048682451248169
    3. ')' → logprob: -9.79868221282959
    4. ' ):' → logprob: -10.67368221282959
    5. '):
' → logprob: -11.67368221282959
    6. '   ' → logprob: -12.92368221282959
    7. ':' → logprob: -12.92368221282959
    8. ' ):
' → logprob: -14.04868221282959
    9. '       ' → logprob: -14.17368221282959
    10. '):

' → logprob: -14.42368221282959

Token 152: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02858724072575569
    2. '   ' → logprob: -4.403587341308594
    3. '       ' → logprob: -4.403587341308594
    4. '	   ' → logprob: -7.403587341308594
    5. '    ' → logprob: -7.903587341308594
    6. '    	   ' → logprob: -8.153587341308594
    7. '<|end|>' → logprob: -8.278587341308594
    8. '	       ' → logprob: -8.528587341308594
    9. '#' → logprob: -8.528587341308594
    10. '    
' → logprob: -8.653587341308594

Token 153: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.3418704867362976
    2. 'grid' (adapté à ' grid') → logprob: -1.7168705463409424
    3. ' row' → logprob: -2.4668705463409424
    4. 'row' → logprob: -4.091870307922363
    5. ' line' → logprob: -5.091870307922363
    6. 'line' → logprob: -6.591870307922363
    7. '           ' → logprob: -7.216870307922363
    8. '   ' → logprob: -10.216870307922363
    9. '	grid' → logprob: -10.716870307922363
    10. ' ' → logprob: -11.341870307922363

Token 154: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0024802929256111383
    2. '.' → logprob: -6.002480506896973
    3. ' .' → logprob: -12.752480506896973
    4. '.extend' → logprob: -14.377480506896973
    5. '.app' → logprob: -14.877480506896973
    6. '.ap' → logprob: -15.002480506896973
    7. 'append' → logprob: -15.877480506896973
    8. '().' → logprob: -16.627479553222656
    9. '=' → logprob: -16.877479553222656
    10. '   ' → logprob: -17.002479553222656

Token 155: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.07950730621814728
    2. '(sys' → logprob: -2.579507350921631
    3. '(' → logprob: -7.454507350921631
    4. 'list' → logprob: -10.579506874084473
    5. '(input' → logprob: -11.954506874084473
    6. '(tuple' → logprob: -12.579506874084473
    7. 'sys' → logprob: -13.329506874084473
    8. '(line' → logprob: -14.704506874084473
    9. ' list' → logprob: -15.079506874084473
    10. '(str' → logprob: -15.454506874084473

Token 156: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.000800811278168112
    2. '(' → logprob: -7.750800609588623
    3. '(input' → logprob: -8.375801086425781
    4. '(map' → logprob: -9.125801086425781
    5. 'sys' → logprob: -10.625801086425781
    6. '=sys' → logprob: -13.000801086425781
    7. '()' → logprob: -13.500801086425781
    8. ' sys' → logprob: -14.500801086425781
    9. '(system' → logprob: -14.625801086425781
    10. ')' → logprob: -14.750801086425781

Token 157: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -5.796184723294573e-06
    2. 'stdin' → logprob: -12.250005722045898
    3. '.stdout' → logprob: -14.000005722045898
    4. '.readline' → logprob: -16.0000057220459
    5. '.argv' → logprob: -16.8750057220459
    6. '.' → logprob: -17.5000057220459
    7. '.std' → logprob: -18.0000057220459
    8. '(stdin' → logprob: -18.0000057220459
    9. ' stdin' → logprob: -18.1250057220459
    10. '.stderr' → logprob: -20.2500057220459

Token 158: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.4974866644479334e-05
    2. '.stdin' → logprob: -11.125015258789062
    3. '.' → logprob: -15.875015258789062
    4. '.read' → logprob: -18.500015258789062
    5. 'stdin' → logprob: -18.625015258789062
    6. ' readline' → logprob: -19.375015258789062
    7. '.stdout' → logprob: -20.125015258789062
    8. '.readlines' → logprob: -20.250015258789062
    9. '().' → logprob: -20.625015258789062
    10. ' .' → logprob: -21.125015258789062

Token 159: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.165027217415627e-05
    2. '()' → logprob: -11.000021934509277
    3. '())' → logprob: -12.375021934509277
    4. ' ().' → logprob: -15.250021934509277
    5. '()))' → logprob: -15.750021934509277
    6. 'rstrip' → logprob: -16.25002098083496
    7. '(' → logprob: -16.37502098083496
    8. '.readline' → logprob: -17.37502098083496
    9. '.rstrip' → logprob: -17.50002098083496
    10. '.strip' → logprob: -18.00002098083496

Token 160: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.31326186656951904
    2. 'rstrip' → logprob: -1.313261866569519
    3. ' strip' → logprob: -16.813261032104492
    4. 'read' → logprob: -17.563261032104492
    5. '.rstrip' → logprob: -19.313261032104492
    6. '_strip' → logprob: -19.688261032104492
    7. 'split' → logprob: -19.938261032104492
    8. 'str' → logprob: -20.188261032104492
    9. 'r' → logprob: -20.563261032104492
    10. 'rs' → logprob: -20.688261032104492

Token 161: '('\' (ID: 24345)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5880825519561768
    2. '('\' → logprob: -0.8380825519561768
    3. '()))
' → logprob: -5.213082313537598
    4. '()' → logprob: -5.463082313537598
    5. '())' → logprob: -6.338082313537598
    6. '()\' → logprob: -8.338082313537598
    7. '().' → logprob: -9.088082313537598
    8. '("\' → logprob: -9.713082313537598
    9. '()));' → logprob: -9.963082313537598
    10. ''\' → logprob: -10.213082313537598

Token 162: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.836499985889532e-05
    2. '\n' → logprob: -9.7500581741333
    3. '
' → logprob: -17.625059127807617
    4. 'r' → logprob: -17.875059127807617
    5. 'newline' → logprob: -19.625059127807617
    6. ' n' → logprob: -20.250059127807617
    7. ''\' → logprob: -20.750059127807617
    8. '

' → logprob: -21.500059127807617
    9. '\' → logprob: -22.375059127807617
    10. '\
' → logprob: -22.500059127807617

Token 163: ''))' (ID: 7974)
  Prédit: '')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')))' → logprob: -0.02533036470413208
    2. ')' → logprob: -4.150330543518066
    3. ')))' → logprob: -5.150330543518066
    4. ''))' → logprob: -6.150330543518066
    5. '')' → logprob: -7.275330543518066
    6. '')))
' → logprob: -7.900330543518066
    7. '()' → logprob: -9.275330543518066
    8. '")))' → logprob: -9.400330543518066
    9. '').' → logprob: -10.650330543518066
    10. '())))' → logprob: -11.150330543518066

Token 164: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.049755782238208e-05
    2. '       ' → logprob: -10.62505054473877
    3. ')
' → logprob: -10.75005054473877
    4. ' )' → logprob: -12.62505054473877
    5. '))' → logprob: -13.87505054473877
    6. ')

' → logprob: -15.75005054473877
    7. '())' → logprob: -16.125049591064453
    8. ')`' → logprob: -16.750049591064453
    9. '   ' → logprob: -16.875049591064453
    10. '
' → logprob: -17.375049591064453

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26535987854003906
    2. '   ' → logprob: -2.140359878540039
    3. 's' → logprob: -3.515359878540039
    4. '        
' → logprob: -3.890359878540039
    5. '
' → logprob: -4.390359878540039
    6. 'start' → logprob: -4.765359878540039
    7. 'visited' → logprob: -5.265359878540039
    8. '#' → logprob: -5.390359878540039
    9. '    
' → logprob: -5.390359878540039
    10. '  
' → logprob: -6.015359878540039

Token 166: ' #' (ID: 1069)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -2.2486138343811035
    2. 'start' → logprob: -2.3736138343811035
    3. 'visited' → logprob: -2.4986138343811035
    4. 'points' → logprob: -2.7486138343811035
    5. 'targets' → logprob: -3.3736138343811035
    6. 'keys' → logprob: -3.3736138343811035
    7. 'robots' → logprob: -3.3736138343811035
    8. '   ' → logprob: -3.6236138343811035
    9. 'starts' → logprob: -3.7486138343811035
    10. 'players' → logprob: -3.7486138343811035

Token 167: ' Map' (ID: 7343)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.7042139768600464
    2. 'for' → logprob: -2.204214096069336
    3. 'points' → logprob: -2.454214096069336
    4. 'start' → logprob: -2.454214096069336
    5. 'visited' → logprob: -2.579214096069336
    6. 'robots' → logprob: -3.454214096069336
    7. 'targets' → logprob: -3.579214096069336
    8. 'items' → logprob: -3.704214096069336
    9. 'starts' → logprob: -3.829214096069336
    10. 'sources' → logprob: -3.954214096069336

Token 168: ' letters' (ID: 18151)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.6232987642288208
    2. ' positions' → logprob: -1.3732987642288208
    3. 'points' → logprob: -3.6232986450195312
    4. 'items' → logprob: -3.9982986450195312
    5. '_positions' → logprob: -4.248298645019531
    6. 's' → logprob: -4.498298645019531
    7. 'for' → logprob: -4.748298645019531
    8. ' of' → logprob: -4.873298645019531
    9. 'targets' → logprob: -4.998298645019531
    10. ' items' → logprob: -5.123298645019531

Token 169: ' for' (ID: 395)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.8482173681259155
    2. ' =' → logprob: -0.9732173681259155
    3. '=' → logprob: -1.9732173681259155
    4. 'positions' → logprob: -3.723217487335205
    5. '_to' → logprob: -4.973217487335205
    6. '_pos' → logprob: -5.223217487335205
    7. ' to' → logprob: -5.348217487335205
    8. ' positions' → logprob: -5.723217487335205
    9. 'to' → logprob: -5.848217487335205
    10. '_position' → logprob: -6.098217487335205

Token 170: ' ghosts' (ID: 100279)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' positions' → logprob: -1.1420751810073853
    2. 'positions' → logprob: -2.2670750617980957
    3. 'targets' → logprob: -2.8920750617980957
    4. ' targets' → logprob: -3.5170750617980957
    5. ' teleport' → logprob: -3.5170750617980957
    6. ' portals' → logprob: -3.5170750617980957
    7. ' treasures' → logprob: -3.5795750617980957
    8. ' delivery' → logprob: -3.7670750617980957
    9. ' keys' → logprob: -3.8295750617980957
    10. ' locations' → logprob: -3.9545750617980957

Token 171: ':' (ID: 25)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.7477462291717529
    2. ' =' → logprob: -1.122746229171753
    3. 'positions' → logprob: -2.122746229171753
    4. '=' → logprob: -3.122746229171753
    5. ' positions' → logprob: -4.497746467590332
    6. '_pos' → logprob: -4.622746467590332
    7. '_position' → logprob: -5.622746467590332
    8. '_' → logprob: -5.997746467590332
    9. ',' → logprob: -6.247746467590332
    10. ' and' → logprob: -6.372746467590332

Token 172: ' the' (ID: 290)
  Prédit: ' ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ghost' → logprob: -0.652205228805542
    2. ' ghosts' → logprob: -1.277205228805542
    3. 'ghost' → logprob: -1.652205228805542
    4. '       ' → logprob: -5.652205467224121
    5. ' positions' → logprob: -5.902205467224121
    6. ' letters' → logprob: -7.777205467224121
    7. ' g' → logprob: -7.902205467224121
    8. 'positions' → logprob: -8.277205467224121
    9. 'g' → logprob: -8.402205467224121
    10. '        
' → logprob: -8.839705467224121

Token 173: ' first' (ID: 1577)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -1.8350303173065186
    2. ' next' → logprob: -1.9600303173065186
    3. ' ghosts' → logprob: -1.9600303173065186
    4. 'y' → logprob: -2.5850303173065186
    5. ' ghost' → logprob: -2.7100303173065186
    6. 'n' → logprob: -2.9600303173065186
    7. 'ghost' → logprob: -2.9600303173065186
    8. ' first' → logprob: -3.3350303173065186
    9. 'positions' → logprob: -3.4600303173065186
    10. ' letters' → logprob: -3.9600303173065186

Token 174: ' n' (ID: 297)
  Prédit: ' ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ghost' → logprob: -0.8099631667137146
    2. 'ghost' → logprob: -0.9349631667137146
    3. ' n' → logprob: -3.5599632263183594
    4. 'n' → logprob: -4.059963226318359
    5. ' found' → logprob: -4.184963226318359
    6. 'occ' → logprob: -4.184963226318359
    7. 'found' → logprob: -4.809963226318359
    8. ' is' → logprob: -5.059963226318359
    9. ' letter' → logprob: -5.184963226318359
    10. '_' → logprob: -5.434963226318359

Token 175: ' lowercase' (ID: 90395)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.999161958694458
    2. ' ghosts' → logprob: -1.624161958694458
    3. 'ghost' → logprob: -2.249161958694458
    4. 'letters' → logprob: -2.624161958694458
    5. ' letters' → logprob: -2.999161958694458
    6. ' ghost' → logprob: -2.999161958694458
    7. 'lines' → logprob: -3.374161958694458
    8. 'positions' → logprob: -3.499161958694458
    9. ' positions' → logprob: -3.624161958694458
    10. ' are' → logprob: -3.874161958694458

Token 176: ' letters' (ID: 18151)
  Prédit: ' letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' letters' → logprob: -0.4750724732875824
    2. 'letters' → logprob: -0.9750725030899048
    3. '_letters' → logprob: -8.225072860717773
    4. 'alphabet' → logprob: -8.475072860717773
    5. 'alph' → logprob: -8.850072860717773
    6. 'abcdefghijklmnopqrstuvwxyz' → logprob: -9.725072860717773
    7. ' alph' → logprob: -9.725072860717773
    8. ' ones' → logprob: -9.850072860717773
    9. ' alphabet' → logprob: -10.475072860717773
    10. 'and' → logprob: -10.600072860717773

Token 177: ' indicate' (ID: 21611)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.4726535677909851
    2. '       ' → logprob: -2.22265362739563
    3. ' ghosts' → logprob: -2.84765362739563
    4. 'abcdefghijklmnopqrstuvwxyz' → logprob: -3.09765362739563
    5. ' ghost' → logprob: -3.72265362739563
    6. ' =' → logprob: -3.72265362739563
    7. 'a' → logprob: -4.347653388977051
    8. ',' → logprob: -4.472653388977051
    9. 'letters' → logprob: -4.472653388977051
    10. '=' → logprob: -4.597653388977051

Token 178: ' ghosts' (ID: 100279)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.6636670231819153
    2. ' ghost' → logprob: -1.2886669635772705
    3. ' ghosts' → logprob: -2.6636669635772705
    4. ' the' → logprob: -2.6636669635772705
    5. 'the' → logprob: -3.2886669635772705
    6. ' their' → logprob: -4.53866720199585
    7. ' positions' → logprob: -4.91366720199585
    8. 'positions' → logprob: -5.28866720199585
    9. 'their' → logprob: -5.41366720199585
    10. ' starting' → logprob: -7.22616720199585

Token 179: '
' (ID: 198)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.2100197076797485
    2. ''s' → logprob: -1.5850197076797485
    3. ',' → logprob: -1.7100197076797485
    4. '       ' → logprob: -2.335019588470459
    5. ' positions' → logprob: -2.585019588470459
    6. ''' → logprob: -3.335019588470459
    7. '.' → logprob: -3.585019588470459
    8. ' and' → logprob: -4.085019588470459
    9. '   ' → logprob: -4.835019588470459
    10. 'ghost' → logprob: -4.835019588470459

Token 180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027367589063942432
    2. ',' → logprob: -6.752736568450928
    3. '      ' → logprob: -8.377737045288086
    4. '<|end|>' → logprob: -8.377737045288086
    5. '.' → logprob: -8.502737045288086
    6. '        ' → logprob: -8.502737045288086
    7. 'positions' → logprob: -9.002737045288086
    8. ' and' → logprob: -9.377737045288086
    9. '        
' → logprob: -9.377737045288086
    10. ' positions' → logprob: -9.877737045288086

Token 181: ' #' (ID: 1069)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.04432838410139084
    2. ' ghost' → logprob: -3.294328451156616
    3. ' ghosts' → logprob: -5.169328212738037
    4. 'positions' → logprob: -8.919328689575195
    5. '   ' → logprob: -9.169328689575195
    6. '       ' → logprob: -9.669328689575195
    7. 'letters' → logprob: -9.669328689575195
    8. ' positions' → logprob: -10.294328689575195
    9. 'gh' → logprob: -10.669328689575195
    10. 'visited' → logprob: -10.794328689575195

Token 182: ' and' (ID: 326)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.15083874762058258
    2. ' ghost' → logprob: -2.275838851928711
    3. ' ghosts' → logprob: -3.400838851928711
    4. 'positions' → logprob: -6.900838851928711
    5. ' positions' → logprob: -7.525838851928711
    6. 'letters' → logprob: -7.775838851928711
    7. '   ' → logprob: -8.400838851928711
    8. '#' → logprob: -8.525838851928711
    9. 'start' → logprob: -8.650838851928711
    10. 'visited' → logprob: -8.838338851928711

Token 183: ' their' (ID: 1043)
  Prédit: 'their'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'their' → logprob: -0.18810297548770905
    2. ' their' → logprob: -2.188102960586548
    3. 'the' → logprob: -3.688102960586548
    4. 'positions' → logprob: -4.688103199005127
    5. 'targets' → logprob: -5.063103199005127
    6. ' the' → logprob: -5.688103199005127
    7. '#' → logprob: -5.938103199005127
    8. 'ghost' → logprob: -5.938103199005127
    9. 'they' → logprob: -7.188103199005127
    10. 'empty' → logprob: -7.313103199005127

Token 184: ' corresponding' (ID: 21824)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.0056294202804565
    2. ' positions' → logprob: -1.3806294202804565
    3. ' starting' → logprob: -1.5056294202804565
    4. 'starting' → logprob: -3.005629539489746
    5. ' initial' → logprob: -3.130629539489746
    6. 'initial' → logprob: -3.505629539489746
    7. 'start' → logprob: -3.880629539489746
    8. ' start' → logprob: -5.130629539489746
    9. 'targets' → logprob: -5.380629539489746
    10. 'target' → logprob: -6.755629539489746

Token 185: ' uppercase' (ID: 79050)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.5229032039642334
    2. 'targets' → logprob: -1.3979032039642334
    3. 'uppercase' → logprob: -3.3979032039642334
    4. 'target' → logprob: -3.7729032039642334
    5. 'starting' → logprob: -3.7729032039642334
    6. 'start' → logprob: -3.8979032039642334
    7. ' positions' → logprob: -4.2729034423828125
    8. ' starting' → logprob: -5.2729034423828125
    9. 'dist' → logprob: -5.5229034423828125
    10. 'upper' → logprob: -5.6479034423828125

Token 186: ' letters' (ID: 18151)
  Prédit: ' letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' letters' → logprob: -0.24717535078525543
    2. 'letters' → logprob: -1.8721753358840942
    3. ' counterparts' → logprob: -2.872175455093384
    4. '_letters' → logprob: -5.747175216674805
    5. '<|end|>' → logprob: -5.872175216674805
    6. ' versions' → logprob: -7.372175216674805
    7. 'positions' → logprob: -8.247175216674805
    8. 'versions' → logprob: -8.747175216674805
    9. 'neighbors' → logprob: -8.997175216674805
    10. 'counter' → logprob: -9.122175216674805

Token 187: ' indicate' (ID: 21611)
  Prédit: ' represent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' represent' → logprob: -0.9324802756309509
    2. ' are' → logprob: -1.8074803352355957
    3. ' for' → logprob: -2.3074803352355957
    4. 'for' → logprob: -2.5574803352355957
    5. ' indicate' → logprob: -3.1824803352355957
    6. ' denote' → logprob: -3.1824803352355957
    7. ' positions' → logprob: -3.6824803352355957
    8. 'positions' → logprob: -3.6824803352355957
    9. 'represent' → logprob: -3.8074803352355957
    10. 'are' → logprob: -4.057480335235596

Token 188: ' destinations' (ID: 39004)
  Prédit: ' their'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' their' → logprob: -0.5784274935722351
    2. 'their' → logprob: -2.07842755317688
    3. 'pac' → logprob: -2.20342755317688
    4. ' the' → logprob: -2.82842755317688
    5. ' pac' → logprob: -3.32842755317688
    6. ' walls' → logprob: -3.57842755317688
    7. 'the' → logprob: -3.95342755317688
    8. 'targets' → logprob: -4.203427314758301
    9. ' Pac' → logprob: -5.203427314758301
    10. 'walls' → logprob: -5.328427314758301

Token 189: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03635755926370621
    2. '.' → logprob: -4.036357402801514
    3. '<|end|>' → logprob: -4.661357402801514
    4. ',' → logprob: -5.911357402801514
    5. ' for' → logprob: -5.911357402801514
    6. '        
' → logprob: -7.036357402801514
    7. '<|end|>' → logprob: -7.911357402801514
    8. ' positions' → logprob: -8.411357879638672
    9. 'positions' → logprob: -8.848857879638672
    10. 'for' → logprob: -8.973857879638672

Token 190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004806395620107651
    2. '<|end|>' → logprob: -5.8798065185546875
    3. '        
' → logprob: -6.7548065185546875
    4. ',' → logprob: -8.254806518554688
    5. '        ' → logprob: -8.879806518554688
    6. '      ' → logprob: -9.504806518554688
    7. '#' → logprob: -9.754806518554688
    8. '
' → logprob: -9.754806518554688
    9. '.' → logprob: -10.004806518554688
    10. '<|end|>' → logprob: -10.629806518554688

Token 191: ' ghosts' (ID: 100279)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.008191362023353577
    2. 'positions' → logprob: -5.8831915855407715
    3. ' ghost' → logprob: -6.0081915855407715
    4. ' ghosts' → logprob: -6.2581915855407715
    5. '   ' → logprob: -8.508191108703613
    6. 'pos' → logprob: -8.883191108703613
    7. 'letters' → logprob: -9.008191108703613
    8. 'start' → logprob: -9.133191108703613
    9. '    
' → logprob: -9.883191108703613
    10. '#' → logprob: -10.008191108703613

Token 192: '_pos' (ID: 14692)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6770368814468384
    2. '_positions' → logprob: -0.8020368814468384
    3. '=' → logprob: -3.177036762237549
    4. '_pos' → logprob: -7.427036762237549
    5. '_' → logprob: -7.552036762237549
    6. '_locations' → logprob: -7.802036762237549
    7. '_map' → logprob: -9.677037239074707
    8. 'positions' → logprob: -10.302037239074707
    9. ',' → logprob: -10.427037239074707
    10. 'Positions' → logprob: -10.677037239074707

Token 193: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5433146357536316
    2. '=' → logprob: -0.9183146357536316
    3. 's' → logprob: -3.9183146953582764
    4. ',' → logprob: -10.293314933776855
    5. '=[]' → logprob: -10.293314933776855
    6. 'itions' → logprob: -10.918314933776855
    7. 'essions' → logprob: -11.918314933776855
    8. 'ions' → logprob: -12.543314933776855
    9. 'ition' → logprob: -12.543314933776855
    10. ']' → logprob: -13.543314933776855

Token 194: ' [' (ID: 723)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.17183484137058258
    2. ' {}' → logprob: -1.9218348264694214
    3. '[]' → logprob: -5.046834945678711
    4. ' []' → logprob: -5.671834945678711
    5. 'dict' → logprob: -7.171834945678711
    6. ' [' → logprob: -7.921834945678711
    7. ' dict' → logprob: -8.046834945678711
    8. '[' → logprob: -8.671834945678711
    9. ' {}
' → logprob: -10.421834945678711
    10. '{}
' → logprob: -11.296834945678711

Token 195: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.10286709666252136
    2. '(-' → logprob: -2.8528671264648438
    3. '()]' → logprob: -3.7278671264648438
    4. ']' → logprob: -4.602867126464844
    5. '()' → logprob: -6.102867126464844
    6. '(None' → logprob: -6.602867126464844
    7. '[]' → logprob: -7.102867126464844
    8. '-' → logprob: -7.227867126464844
    9. '(' → logprob: -7.727867126464844
    10. ' None' → logprob: -8.477867126464844

Token 196: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3075530230998993
    2. ']' → logprob: -1.8075530529022217
    3. 'for' → logprob: -2.3075530529022217
    4. ']*' → logprob: -7.057552814483643
    5. ')' → logprob: -8.5575532913208
    6. ',' → logprob: -9.6825532913208
    7. ' ]' → logprob: -10.4325532913208
    8. '	for' → logprob: -11.1825532913208
    9. ']*(' → logprob: -11.9325532913208
    10. '<|end|>' → logprob: -12.3075532913208

Token 197: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -8.518582762917504e-05
    2. ' n' → logprob: -9.37508487701416
    3. '(n' → logprob: -15.75008487701416
    4. '	n' → logprob: -16.125085830688477
    5. '26' → logprob: -17.625085830688477
    6. '10' → logprob: -18.125085830688477
    7. '   ' → logprob: -18.500085830688477
    8. '9' → logprob: -18.625085830688477
    9. ' ' → logprob: -19.000085830688477
    10. '
' → logprob: -19.625085830688477

Token 198: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0811661034822464
    2. '       ' → logprob: -2.7061660289764404
    3. '<|end|>' → logprob: -5.0811662673950195
    4. '        
' → logprob: -6.4561662673950195
    5. ',' → logprob: -6.8311662673950195
    6. '
' → logprob: -7.7061662673950195
    7. ' for' → logprob: -8.20616626739502
    8. ',
' → logprob: -8.33116626739502
    9. ' ghosts' → logprob: -8.45616626739502
    10. 'for' → logprob: -8.58116626739502

Token 199: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3918604552745819
    2. '       ' → logprob: -2.0168604850769043
    3. '<|end|>' → logprob: -2.3918604850769043
    4. ',' → logprob: -3.1418604850769043
    5. ' ghosts' → logprob: -4.016860485076904
    6. ',
' → logprob: -4.516860485076904
    7. 'for' → logprob: -5.141860485076904
    8. 'ghost' → logprob: -5.141860485076904
    9. 'positions' → logprob: -5.391860485076904
    10. '        
' → logprob: -6.016860485076904

Token 200: ' store' (ID: 4897)
  Prédit: ' destinations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' destinations' → logprob: -1.1321890354156494
    2. ' ghosts' → logprob: -1.3821890354156494
    3. 'dest' → logprob: -2.3821890354156494
    4. '[]' → logprob: -2.7571890354156494
    5. ' for' → logprob: -2.8821890354156494
    6. 'ghost' → logprob: -3.1321890354156494
    7. 'for' → logprob: -3.3821890354156494
    8. 'Ghost' → logprob: -3.8821890354156494
    9. 'positions' → logprob: -4.13218879699707
    10. 'None' → logprob: -4.63218879699707

Token 201: ' current' (ID: 2208)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.107824683189392
    2. 'positions' → logprob: -1.107824683189392
    3. 'ghost' → logprob: -1.607824683189392
    4. ' the' → logprob: -2.8578248023986816
    5. 'coordinates' → logprob: -3.4828248023986816
    6. ' ghosts' → logprob: -4.482824802398682
    7. 'starting' → logprob: -4.732824802398682
    8. ' ghost' → logprob: -4.982824802398682
    9. ' positions' → logprob: -5.232824802398682
    10. 'initial' → logprob: -5.607824802398682

Token 202: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.0618182010948658
    2. ' positions' → logprob: -3.0618181228637695
    3. '<|end|>' → logprob: -5.0618181228637695
    4. '_positions' → logprob: -5.3118181228637695
    5. 'ghost' → logprob: -7.6868181228637695
    6. 'locations' → logprob: -8.18681812286377
    7. 'coordinates' → logprob: -8.31181812286377
    8. 'position' → logprob: -9.06181812286377
    9. '_' → logprob: -9.18681812286377
    10. '[' → logprob: -9.31181812286377

Token 203: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1803968846797943
    2. '<|end|>' → logprob: -2.555396795272827
    3. ',' → logprob: -3.430396795272827
    4. ' for' → logprob: -3.555396795272827
    5. ' ghosts' → logprob: -4.555397033691406
    6. 'for' → logprob: -4.930397033691406
    7. ' of' → logprob: -5.805397033691406
    8. ' and' → logprob: -6.680397033691406
    9. 'ghost' → logprob: -6.930397033691406
    10. 'Ghost' → logprob: -7.805397033691406

Token 204: ' ghosts' (ID: 100279)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.3424811065196991
    2. ' ghosts' → logprob: -1.3424811363220215
    3. 'the' → logprob: -4.2174811363220215
    4. ' the' → logprob: -4.4674811363220215
    5. 'each' → logprob: -6.8424811363220215
    6. ' ghost' → logprob: -7.2174811363220215
    7. ' each' → logprob: -8.342480659484863
    8. 'Ghost' → logprob: -8.717480659484863
    9. 'all' → logprob: -9.342480659484863
    10. 'n' → logprob: -9.967480659484863

Token 205: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0498164892196655
    2. '<|end|>' → logprob: -1.0498164892196655
    3. '       ' → logprob: -1.5498164892196655
    4. ',' → logprob: -3.174816608428955
    5. ' for' → logprob: -3.924816608428955
    6. 'for' → logprob: -4.924816608428955
    7. ' ghosts' → logprob: -5.049816608428955
    8. ',
' → logprob: -5.924816608428955
    9. '        
' → logprob: -6.424816608428955
    10. '[' → logprob: -6.549816608428955

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02863810770213604
    2. '<|end|>' → logprob: -4.778637886047363
    3. 'for' → logprob: -4.903637886047363
    4. ' for' → logprob: -5.528637886047363
    5. 'ghost' → logprob: -5.903637886047363
    6. ',' → logprob: -6.028637886047363
    7. '   ' → logprob: -6.903637886047363
    8. ' ghosts' → logprob: -7.528637886047363
    9. 'targets' → logprob: -7.903637886047363
    10. '        
' → logprob: -8.028637886047363

Token 207: ' targets' (ID: 22836)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.7373040318489075
    2. 'ghost' → logprob: -1.2373039722442627
    3. 'targets' (adapté à ' targets') → logprob: -2.2373039722442627
    4. 'go' → logprob: -2.3623039722442627
    5. 'd' → logprob: -4.237304210662842
    6. 'for' → logprob: -4.487304210662842
    7. 'goal' → logprob: -6.737304210662842
    8. '```' → logprob: -7.362304210662842
    9. 'destination' → logprob: -7.612304210662842
    10. 'dst' → logprob: -7.862304210662842

Token 208: '_pos' (ID: 14692)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141704380512238
    2. ' =' → logprob: -1.701417088508606
    3. '=[]' → logprob: -13.076416969299316
    4. '<|end|>' → logprob: -14.951416969299316
    5. ')' → logprob: -15.076416969299316
    6. ']' → logprob: -15.451416969299316
    7. '_' → logprob: -15.951416969299316
    8. ' ' → logprob: -15.951416969299316
    9. '_pos' → logprob: -16.076417922973633
    10. 's' → logprob: -16.451417922973633

Token 209: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327024102211
    2. '=' → logprob: -1.3132702112197876
    3. ' =[' → logprob: -12.563270568847656
    4. '=[]' → logprob: -12.938270568847656
    5. '=[' → logprob: -13.688270568847656
    6. ' ' → logprob: -14.438270568847656
    7. '[' → logprob: -15.063270568847656
    8. 's' → logprob: -16.188270568847656
    9. '=[]
' → logprob: -16.438270568847656
    10. ')' → logprob: -16.563270568847656

Token 210: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16151310503482819
    2. ' [' → logprob: -1.911513090133667
    3. '[n' → logprob: -6.661513328552246
    4. '[N' → logprob: -13.036513328552246
    5. '{}' → logprob: -13.786513328552246
    6. ' ' → logprob: -14.161513328552246
    7. '[num' → logprob: -14.161513328552246
    8. '[new' → logprob: -14.536513328552246
    9. '[node' → logprob: -14.911513328552246
    10. '   ' → logprob: -15.161513328552246

Token 211: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0007573349867016077
    2. '[' → logprob: -7.625757217407227
    3. ' None' → logprob: -8.375757217407227
    4. '(None' → logprob: -10.625757217407227
    5. ']' → logprob: -11.875757217407227
    6. ',None' → logprob: -13.125757217407227
    7. '
' → logprob: -13.500757217407227
    8. ' [' → logprob: -13.750757217407227
    9. '_None' → logprob: -13.875757217407227
    10. ')' → logprob: -14.500757217407227

Token 212: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.0009929145453497767
    2. ']' → logprob: -7.625992774963379
    3. '*n' → logprob: -7.625992774963379
    4. '*' → logprob: -11.125992774963379
    5. ')*' → logprob: -13.750992774963379
    6. ']*(' → logprob: -15.000992774963379
    7. ' ]' → logprob: -15.750992774963379
    8. '#' → logprob: -15.875992774963379
    9. 'n' → logprob: -15.875992774963379
    10. ' for' → logprob: -16.500993728637695

Token 213: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.320199877838604e-07
    2. ' n' → logprob: -14.75
    3. '
' → logprob: -19.625
    4. '(n' → logprob: -19.75
    5. '<|end|>' → logprob: -20.125
    6. '	n' → logprob: -20.5
    7. '   ' → logprob: -21.0
    8. ',' → logprob: -21.5
    9. ',n' → logprob: -21.875
    10. '[n' → logprob: -22.25

Token 214: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9306219816207886
    2. '       ' → logprob: -0.9306219816207886
    3. '<|end|>' → logprob: -1.8056219816207886
    4. ' for' → logprob: -3.555622100830078
    5. '        
' → logprob: -4.930622100830078
    6. 'for' → logprob: -5.555622100830078
    7. '<|end|>' → logprob: -6.430622100830078
    8. ' ' → logprob: -6.805622100830078
    9. '

' → logprob: -7.180622100830078
    10. '   ' → logprob: -7.555622100830078

Token 215: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 216: ' store' (ID: 4897)
  Prédit: 'store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'store' → logprob: -0.13505223393440247
    2. ' store' → logprob: -2.13505220413208
    3. '#' → logprob: -4.88505220413208
    4. 'None' → logprob: -8.385052680969238
    5. '[]' → logprob: -8.510052680969238
    6. 'set' → logprob: -11.135052680969238
    7. ' #' → logprob: -11.260052680969238
    8. ' None' → logprob: -11.260052680969238
    9. 'stores' → logprob: -11.385052680969238
    10. 'list' → logprob: -12.135052680969238

Token 217: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.42121177911758423
    2. ' target' → logprob: -1.6712117195129395
    3. 'positions' → logprob: -3.1712117195129395
    4. 'destination' → logprob: -3.1712117195129395
    5. 'current' → logprob: -4.1712117195129395
    6. 'targets' → logprob: -4.6712117195129395
    7. ' destination' → logprob: -4.7962117195129395
    8. 'their' → logprob: -4.9212117195129395
    9. 'None' → logprob: -5.0462117195129395
    10. ' destinations' → logprob: -5.0462117195129395

Token 218: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.6344180703163147
    2. ' positions' → logprob: -0.7594180703163147
    3. '_positions' → logprob: -6.75941801071167
    4. '<|end|>' → logprob: -7.63441801071167
    5. 's' → logprob: -9.384418487548828
    6. '.positions' → logprob: -10.884418487548828
    7. 'locations' → logprob: -11.009418487548828
    8. ' locations' → logprob: -11.634418487548828
    9. ')' → logprob: -11.759418487548828
    10. ' destinations' → logprob: -11.884418487548828

Token 219: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 220: ' ghosts' (ID: 100279)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.3750249445438385
    2. 'targets' → logprob: -1.6250249147415161
    3. 'None' → logprob: -2.8750250339508057
    4. ' ghosts' → logprob: -3.6250250339508057
    5. 'the' → logprob: -4.250024795532227
    6. ' None' → logprob: -5.000024795532227
    7. 'dest' → logprob: -6.375024795532227
    8. 'each' → logprob: -6.500024795532227
    9. ' targets' → logprob: -6.500024795532227
    10. 'their' → logprob: -6.625024795532227

Token 221: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29660600423812866
    2. '<|end|>' → logprob: -1.7966060638427734
    3. '
' → logprob: -2.5466060638427734
    4. ' for' → logprob: -4.796606063842773
    5. 'for' → logprob: -6.546606063842773
    6. '<|end|>' → logprob: -6.796606063842773
    7. '        
' → logprob: -7.046606063842773
    8. ',' → logprob: -7.796606063842773
    9. ')' → logprob: -9.671606063842773
    10. '   ' → logprob: -9.921606063842773

Token 222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012705178000032902
    2. ' for' → logprob: -4.762705326080322
    3. '
' → logprob: -6.262705326080322
    4. 'for' → logprob: -6.762705326080322
    5. '        
' → logprob: -8.012704849243164
    6. '<|end|>' → logprob: -8.012704849243164
    7. '   ' → logprob: -8.512704849243164
    8. '	for' → logprob: -10.012704849243164
    9. '	' → logprob: -10.762704849243164
    10. '	   ' → logprob: -11.387704849243164

Token 223: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011672728694975376
    2. ' for' → logprob: -4.636672496795654
    3. '       ' → logprob: -6.261672496795654
    4. '#' (adapté à ' #') → logprob: -12.886672973632812
    5. '   ' → logprob: -14.136672973632812
    6. 'found' → logprob: -14.136672973632812
    7. '        
' → logprob: -14.261672973632812
    8. '
' → logprob: -14.261672973632812
    9. '```' → logprob: -14.886672973632812
    10. '	for' → logprob: -15.136672973632812

Token 224: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005035852082073689
    2. ' for' → logprob: -7.6255035400390625
    3. '       ' → logprob: -11.250503540039062
    4. '#' → logprob: -13.125503540039062
    5. '   ' → logprob: -15.000503540039062
    6. '
' → logprob: -15.875503540039062
    7. 'found' → logprob: -16.625503540039062
    8. 'For' → logprob: -18.125503540039062
    9. '	for' → logprob: -18.250503540039062
    10. '        
' → logprob: -18.625503540039062

Token 225: ' will' (ID: 738)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28292977809906006
    2. ' for' → logprob: -1.40792977809906
    3. '       ' → logprob: -6.78292989730835
    4. '   ' → logprob: -8.282929420471191
    5. '=' → logprob: -8.782929420471191
    6. ' ' → logprob: -10.157929420471191
    7. '#' → logprob: -10.157929420471191
    8. 'continue' → logprob: -10.532929420471191
    9. ' continue' → logprob: -10.657929420471191
    10. ' need' → logprob: -10.782929420471191

Token 226: ' map' (ID: 4014)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.21531134843826294
    2. 'for' → logprob: -2.465311288833618
    3. ' continue' → logprob: -3.840311288833618
    4. '...' → logprob: -4.090311527252197
    5. 'process' → logprob: -4.215311527252197
    6. 'use' → logprob: -4.340311527252197
    7. ' for' → logprob: -4.965311527252197
    8. 'find' → logprob: -5.215311527252197
    9. 'b' → logprob: -5.715311527252197
    10. ' use' → logprob: -5.840311527252197

Token 227: ' ghost' (ID: 33168)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.61168372631073
    2. ' for' → logprob: -2.2366838455200195
    3. ' through' → logprob: -2.4866838455200195
    4. ' each' → logprob: -2.4866838455200195
    5. ' letters' → logprob: -2.4866838455200195
    6. ' ghosts' → logprob: -2.4866838455200195
    7. ' ghost' → logprob: -2.7366838455200195
    8. ' grid' → logprob: -2.7366838455200195
    9. 'ghost' → logprob: -2.7366838455200195
    10. 'for' → logprob: -3.4866838455200195

Token 228: ' letters' (ID: 18151)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -1.2009621858596802
    2. '_indices' → logprob: -1.3259621858596802
    3. 's' → logprob: -2.0759620666503906
    4. '_letters' → logprob: -2.4509620666503906
    5. '_index' → logprob: -2.8259620666503906
    6. '_idx' → logprob: -3.2009620666503906
    7. '_id' → logprob: -3.5759620666503906
    8. ' indices' → logprob: -4.325962066650391
    9. '_indexes' → logprob: -4.325962066650391
    10. '_letter' → logprob: -4.575962066650391

Token 229: ' '' (ID: 461)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.9035192728042603
    2. ' for' → logprob: -1.4035192728042603
    3. 'for' → logprob: -2.4035191535949707
    4. ' and' → logprob: -2.6535191535949707
    5. ' =' → logprob: -2.7785191535949707
    6. '<|end|>' → logprob: -3.0285191535949707
    7. ' ' → logprob: -3.9035191535949707
    8. 'to' → logprob: -4.153519153594971
    9. ' in' → logprob: -4.403519153594971
    10. '=' → logprob: -4.903519153594971

Token 230: 'a' (ID: 64)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.6265677809715271
    2. 'abcdefghijklmnopqrstuvwxyz' → logprob: -1.3765678405761719
    3. 'a' → logprob: -1.6265678405761719
    4. 'abcdefghijkl' → logprob: -5.126567840576172
    5. '(chr' → logprob: -6.001567840576172
    6. 'abcdefgh' → logprob: -6.376567840576172
    7. 'from' → logprob: -6.626567840576172
    8. 'for' → logprob: -6.751567840576172
    9. ''' → logprob: -7.001567840576172
    10. ''a' → logprob: -7.126567840576172

Token 231: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0004428243264555931
    2. '',' → logprob: -8.125442504882812
    3. 'a' → logprob: -10.750442504882812
    4. ''t' → logprob: -10.750442504882812
    5. ''a' → logprob: -10.875442504882812
    6. ''-' → logprob: -11.000442504882812
    7. '')' → logprob: -11.625442504882812
    8. ' to' → logprob: -12.000442504882812
    9. ''s' → logprob: -12.000442504882812
    10. 'to' → logprob: -12.125442504882812

Token 232: ' '' (ID: 461)
  Prédit: ''b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''b' → logprob: -0.4424225986003876
    2. ' '' → logprob: -1.06742262840271
    3. ''' → logprob: -5.067422389984131
    4. ' b' → logprob: -5.692422389984131
    5. 'b' → logprob: -6.067422389984131
    6. '...' → logprob: -7.067422389984131
    7. ''a' → logprob: -8.567422866821289
    8. ' ' → logprob: -8.942422866821289
    9. ',' → logprob: -9.067422866821289
    10. ''s' → logprob: -9.317422866821289

Token 233: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01313516404479742
    2. ''b' → logprob: -4.513134956359863
    3. ' b' → logprob: -6.388134956359863
    4. '...' → logprob: -8.513134956359863
    5. ''' → logprob: -9.638134956359863
    6. 'a' → logprob: -9.763134956359863
    7. '<|end|>' → logprob: -10.263134956359863
    8. ''a' → logprob: -11.138134956359863
    9. ' '' → logprob: -11.513134956359863
    10. ' ' → logprob: -12.888134956359863

Token 234: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.018587788566946983
    2. ''' → logprob: -4.018587589263916
    3. ',' → logprob: -7.893587589263916
    4. '','' → logprob: -11.018588066101074
    5. 'c' → logprob: -11.393588066101074
    6. '',...
' → logprob: -12.143588066101074
    7. '...' → logprob: -12.393588066101074
    8. 'a' → logprob: -12.518588066101074
    9. ')',' → logprob: -13.018588066101074
    10. ' ',' → logprob: -13.143588066101074

Token 235: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.7094498872756958
    2. ''' → logprob: -0.8344498872756958
    3. '...' → logprob: -2.7094497680664062
    4. 'c' → logprob: -6.459449768066406
    5. ' c' → logprob: -6.584449768066406
    6. '       ' → logprob: -7.209449768066406
    7. '...,' → logprob: -7.334449768066406
    8. '<|end|>' → logprob: -7.459449768066406
    9. ',' → logprob: -7.709449768066406
    10. ' ...' → logprob: -7.834449768066406

Token 236: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.014695419929921627
    2. ''' → logprob: -4.639695644378662
    3. ' c' → logprob: -5.514695644378662
    4. '...' → logprob: -8.264695167541504
    5. ' '' → logprob: -8.514695167541504
    6. '',' → logprob: -8.764695167541504
    7. '<|end|>' → logprob: -8.889695167541504
    8. '')' → logprob: -9.889695167541504
    9. ' ' → logprob: -10.389695167541504
    10. ',' → logprob: -10.389695167541504

Token 237: ''' (ID: 6)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.02617105096578598
    2. ''' → logprob: -3.7761709690093994
    3. ',' → logprob: -5.9011712074279785
    4. '...' → logprob: -9.77617073059082
    5. '...'' → logprob: -10.27617073059082
    6. '...',' → logprob: -11.15117073059082
    7. '','' → logprob: -11.52617073059082
    8. '   ' → logprob: -11.77617073059082
    9. '',...
' → logprob: -11.77617073059082
    10. ','' → logprob: -12.15117073059082

Token 238: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09151164442300797
    2. ' to' → logprob: -3.0915117263793945
    3. ' through' → logprob: -4.0915117263793945
    4. '...' → logprob: -4.3415117263793945
    5. 'to' → logprob: -5.5915117263793945
    6. ' ,' → logprob: -5.7165117263793945
    7. '<|end|>' → logprob: -6.7165117263793945
    8. ',...' → logprob: -7.0915117263793945
    9. ' for' → logprob: -7.9665117263793945
    10. 'for' → logprob: -8.091511726379395

Token 239: ' indices' (ID: 30378)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.32132086157798767
    2. 'range' → logprob: -1.57132089138031
    3. ' their' → logprob: -2.9463207721710205
    4. ' the' → logprob: -5.5713210105896
    5. 'their' → logprob: -6.0713210105896
    6. ' indices' → logprob: -6.4463210105896
    7. 'i' → logprob: -6.6963210105896
    8. ' ord' → logprob: -7.0713210105896
    9. ' i' → logprob: -7.0713210105896
    10. ' index' → logprob: -7.5713210105896

Token 240: ' ' (ID: 220)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17042340338230133
    2. 'for' → logprob: -1.9204233884811401
    3. '       ' → logprob: -5.42042350769043
    4. ' in' → logprob: -6.17042350769043
    5. ',' → logprob: -6.67042350769043
    6. '   ' → logprob: -7.42042350769043
    7. ' to' → logprob: -8.17042350769043
    8. ' and' → logprob: -8.17042350769043
    9. '<|end|>' → logprob: -8.17042350769043
    10. '        ' → logprob: -8.67042350769043

Token 241: '0' (ID: 15)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28352218866348267
    2. ' for' → logprob: -1.783522129058838
    3. ' in' → logprob: -3.283522129058838
    4. 'in' → logprob: -4.408522129058838
    5. '=' → logprob: -5.033522129058838
    6. 'range' → logprob: -5.158522129058838
    7. ',' → logprob: -5.783522129058838
    8. ' =' → logprob: -5.783522129058838
    9. ' range' → logprob: -5.908522129058838
    10. '       ' → logprob: -6.033522129058838

Token 242: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0448155477643013
    2. ' through' → logprob: -4.294815540313721
    3. '...' → logprob: -4.669815540313721
    4. ' to' → logprob: -5.669815540313721
    5. ':' → logprob: -5.919815540313721
    6. '       ' → logprob: -5.919815540313721
    7. '<|end|>' → logprob: -5.919815540313721
    8. '#' → logprob: -6.294815540313721
    9. ',...' → logprob: -6.669815540313721
    10. '   ' → logprob: -7.044815540313721

Token 243: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21126194298267365
    2. ' ' → logprob: -1.7112619876861572
    3. '...' → logprob: -5.086261749267578
    4. '<|end|>' → logprob: -6.586261749267578
    5. ',' → logprob: -7.086261749267578
    6. 'd' → logprob: -8.211261749267578
    7. '  ' → logprob: -8.461261749267578
    8. ' ...' → logprob: -8.586261749267578
    9. '   ' → logprob: -8.836261749267578
    10. ' '' → logprob: -8.961261749267578

Token 244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02574743516743183
    2. '...' → logprob: -4.025747299194336
    3. ',...' → logprob: -6.150747299194336
    4. '       ' → logprob: -6.775747299194336
    5. '<|end|>' → logprob: -7.150747299194336
    6. ' ,' → logprob: -7.275747299194336
    7. ' through' → logprob: -7.650747299194336
    8. '   ' → logprob: -7.650747299194336
    9. ',
' → logprob: -7.650747299194336
    10. ',n' → logprob: -8.275747299194336

Token 245: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004752172622829676
    2. '...' → logprob: -5.879752159118652
    3. ' ' → logprob: -6.254752159118652
    4. '<|end|>' → logprob: -11.254752159118652
    5. ',' → logprob: -12.754752159118652
    6. '...,' → logprob: -13.004752159118652
    7. ' ...' → logprob: -13.129752159118652
    8. '```' → logprob: -13.754752159118652
    9. '  ' → logprob: -14.004752159118652
    10. '…' → logprob: -14.254752159118652

Token 246: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07277554273605347
    2. ' for' → logprob: -2.9477756023406982
    3. ',' → logprob: -5.197775363922119
    4. 'for' → logprob: -5.447775363922119
    5. '<|end|>' → logprob: -5.947775363922119
    6. '.' → logprob: -6.197775363922119
    7. ' and' → logprob: -6.322775363922119
    8. '   ' → logprob: -7.572775363922119
    9. '
' → logprob: -8.697775840759277
    10. '      ' → logprob: -9.197775840759277

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24619506299495697
    2. ' for' → logprob: -1.8711950778961182
    3. '<|end|>' → logprob: -3.496195077896118
    4. 'for' → logprob: -4.121194839477539
    5. ',' → logprob: -5.496194839477539
    6. '.' → logprob: -5.621194839477539
    7. ' ' → logprob: -5.996194839477539
    8. '
' → logprob: -6.496194839477539
    9. '        
' → logprob: -6.496194839477539
    10. '   ' → logprob: -6.746194839477539

Token 248: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.44046327471733093
    2. ' for' → logprob: -1.3154633045196533
    3. '       ' → logprob: -2.4404633045196533
    4. '   ' → logprob: -9.065463066101074
    5. 'index' → logprob: -9.315463066101074
    6. 'idx' → logprob: -9.440463066101074
    7. '#' (adapté à ' #') → logprob: -9.565463066101074
    8. 'i' → logprob: -9.690463066101074
    9. '        
' → logprob: -10.440463066101074
    10. ' i' → logprob: -10.440463066101074

Token 249: ' Similarly' (ID: 65037)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2373131960630417
    2. ' for' → logprob: -1.737313151359558
    3. '       ' → logprob: -3.3623132705688477
    4. '#' → logprob: -8.237313270568848
    5. '
' → logprob: -9.987313270568848
    6. 'For' → logprob: -9.987313270568848
    7. '   ' → logprob: -10.487313270568848
    8. 'index' → logprob: -10.612313270568848
    9. ' #' → logprob: -10.862313270568848
    10. 'i' → logprob: -10.987313270568848

Token 250: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7296281456947327
    2. '       ' → logprob: -1.354628086090088
    3. 'for' → logprob: -1.354628086090088
    4. ',' → logprob: -7.354628086090088
    5. '#' → logprob: -7.729628086090088
    6. '
' → logprob: -8.104628562927246
    7. '   ' → logprob: -9.479628562927246
    8. '      ' → logprob: -9.854628562927246
    9. ' ' → logprob: -9.979628562927246
    10. 'targets' → logprob: -10.104628562927246

Token 251: ' their' (ID: 1043)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.7282372117042542
    2. 'target' → logprob: -1.9782371520996094
    3. 'targets' → logprob: -1.9782371520996094
    4. ' ghost' → logprob: -3.1032371520996094
    5. 'dest' → logprob: -3.8532371520996094
    6. ' target' → logprob: -3.8532371520996094
    7. 'the' → logprob: -4.103237152099609
    8. 'uppercase' → logprob: -4.228237152099609
    9. 'g' → logprob: -4.603237152099609
    10. ' ghosts' → logprob: -4.603237152099609

Token 252: ' uppercase' (ID: 79050)
  Prédit: 'uppercase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uppercase' → logprob: -0.6049579381942749
    2. ' uppercase' → logprob: -1.229957938194275
    3. 'cor' → logprob: -2.4799580574035645
    4. ' corresponding' → logprob: -3.2299580574035645
    5. 'targets' → logprob: -3.7299580574035645
    6. 'positions' → logprob: -5.9799580574035645
    7. ' targets' → logprob: -5.9799580574035645
    8. ' destinations' → logprob: -6.2299580574035645
    9. 'target' → logprob: -6.3549580574035645
    10. 'A' → logprob: -6.4799580574035645

Token 253: ' targets' (ID: 22836)
  Prédit: ' counterparts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' counterparts' → logprob: -0.9823632836341858
    2. 'letters' → logprob: -1.232363224029541
    3. 'counter' → logprob: -1.607363224029541
    4. ' letters' → logprob: -2.107363224029541
    5. 'targets' → logprob: -6.107363224029541
    6. 'ghost' → logprob: -6.607363224029541
    7. ' counter' → logprob: -6.607363224029541
    8. '<|end|>' → logprob: -6.982363224029541
    9. 'versions' → logprob: -7.232363224029541
    10. ',' → logprob: -7.669863224029541

Token 254: ' '' (ID: 461)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017961567267775536
    2. ' for' → logprob: -4.642961502075195
    3. '<|end|>' → logprob: -5.892961502075195
    4. 'for' → logprob: -6.017961502075195
    5. '
' → logprob: -6.517961502075195
    6. ',' → logprob: -7.392961502075195
    7. '        
' → logprob: -8.017961502075195
    8. '.' → logprob: -8.642961502075195
    9. '<|end|>' → logprob: -9.142961502075195
    10. '        ' → logprob: -9.642961502075195

Token 255: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0017025562701746821
    2. ''A' → logprob: -6.501702785491943
    3. ' A' → logprob: -9.376702308654785
    4. 'a' → logprob: -9.376702308654785
    5. ' ' → logprob: -12.251702308654785
    6. '```' → logprob: -12.501702308654785
    7. ''a' → logprob: -12.876702308654785
    8. '   ' → logprob: -12.876702308654785
    9. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -13.251702308654785
    10. '  ' → logprob: -13.376702308654785

Token 256: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0010898546315729618
    2. ''' → logprob: -7.251090049743652
    3. '','' → logprob: -8.251090049743652
    4. ',' → logprob: -9.251090049743652
    5. '',
' → logprob: -11.626090049743652
    6. ')',' → logprob: -12.501090049743652
    7. ' ',' → logprob: -13.126090049743652
    8. '",' → logprob: -13.251090049743652
    9. '',...
' → logprob: -14.251090049743652
    10. '`,' → logprob: -14.501090049743652

Token 257: ' '' (ID: 461)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.019891381263733
    2. ' '' → logprob: -1.144891381263733
    3. ''' → logprob: -1.269891381263733
    4. ' B' → logprob: -3.2698912620544434
    5. ' ' → logprob: -7.269891262054443
    6. '<|end|>' → logprob: -8.269891738891602
    7. '"B' → logprob: -8.394891738891602
    8. ',' → logprob: -8.644891738891602
    9. ''b' → logprob: -8.644891738891602
    10. 'b' → logprob: -9.144891738891602

Token 258: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00044401636114344
    2. 'b' → logprob: -8.125444412231445
    3. ' B' → logprob: -8.875444412231445
    4. ''' → logprob: -12.250444412231445
    5. 'a' → logprob: -14.125444412231445
    6. '<|end|>' → logprob: -14.625444412231445
    7. '
' → logprob: -14.750444412231445
    8. ')' → logprob: -14.750444412231445
    9. ' ' → logprob: -15.625444412231445
    10. 'A' → logprob: -15.750444412231445

Token 259: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.3493478298187256
    2. ',' → logprob: -1.2243478298187256
    3. ''' → logprob: -7.099348068237305
    4. ','' → logprob: -10.974348068237305
    5. '','' → logprob: -10.974348068237305
    6. '`,' → logprob: -11.724348068237305
    7. ',C' → logprob: -12.349348068237305
    8. '')' → logprob: -12.599348068237305
    9. '   ' → logprob: -12.724348068237305
    10. ' ,' → logprob: -12.974348068237305

Token 260: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.7777147889137268
    2. ''C' → logprob: -1.152714729309082
    3. ''' → logprob: -1.652714729309082
    4. 'C' → logprob: -3.652714729309082
    5. ' C' → logprob: -5.402714729309082
    6. '...' → logprob: -6.527714729309082
    7. 'c' → logprob: -8.152714729309082
    8. ' ' → logprob: -8.277714729309082
    9. '`' → logprob: -8.652714729309082
    10. ',' → logprob: -9.527714729309082

Token 261: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0003298632800579071
    2. ''C' → logprob: -8.750329971313477
    3. ' C' → logprob: -9.625329971313477
    4. ''' → logprob: -10.375329971313477
    5. 'c' → logprob: -10.625329971313477
    6. '<|end|>' → logprob: -11.375329971313477
    7. '')' → logprob: -11.625329971313477
    8. '...' → logprob: -11.750329971313477
    9. '3' → logprob: -11.875329971313477
    10. ' ' → logprob: -13.000329971313477

Token 262: ''
' (ID: 2207)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '']' → logprob: -0.08434928208589554
    2. ']' → logprob: -3.0843493938446045
    3. ')' → logprob: -4.334349155426025
    4. '']
' → logprob: -4.584349155426025
    5. ''' → logprob: -4.959349155426025
    6. '       ' → logprob: -6.584349155426025
    7. '']

' → logprob: -6.584349155426025
    8. ']'' → logprob: -7.209349155426025
    9. '')' → logprob: -7.709349155426025
    10. ')]' → logprob: -8.834349632263184

Token 263: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013996411580592394
    2. '<|end|>' → logprob: -8.001399993896484
    3. '        
' → logprob: -8.126399993896484
    4. '
' → logprob: -8.126399993896484
    5. ' for' → logprob: -8.251399993896484
    6. 'for' → logprob: -8.876399993896484
    7. ',' → logprob: -10.751399993896484
    8. '   ' → logprob: -11.251399993896484
    9. '<|end|>' → logprob: -12.001399993896484
    10. '  
' → logprob: -12.376399993896484

Token 264: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5280210971832275
    2. ' for' → logprob: -1.2780210971832275
    3. 'for' → logprob: -2.0280210971832275
    4. '        
' → logprob: -10.903020858764648
    5. '   ' → logprob: -11.653020858764648
    6. '      ' → logprob: -11.778020858764648
    7. '	for' → logprob: -13.028020858764648
    8. '     ' → logprob: -13.778020858764648
    9. '
' → logprob: -13.903020858764648
    10. ' ' → logprob: -13.903020858764648

Token 265: ' Scan' (ID: 52181)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8114908337593079
    2. ' for' → logprob: -1.061490774154663
    3. '       ' → logprob: -1.561490774154663
    4. '   ' → logprob: -10.561491012573242
    5. '      ' → logprob: -12.686491012573242
    6. '	for' → logprob: -12.686491012573242
    7. '        
' → logprob: -12.936491012573242
    8. ' ' → logprob: -13.186491012573242
    9. '           ' → logprob: -13.561491012573242
    10. '     ' → logprob: -14.061491012573242

Token 266: ' the' (ID: 290)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3922940194606781
    2. 'for' → logprob: -1.8922940492630005
    3. '   ' → logprob: -2.892293930053711
    4. ' the' → logprob: -3.142293930053711
    5. '(' → logprob: -4.017293930053711
    6. '(h' → logprob: -4.017293930053711
    7. ' ' → logprob: -4.892293930053711
    8. ' h' → logprob: -5.392293930053711
    9. 'range' → logprob: -5.892293930053711
    10. ' row' → logprob: -5.892293930053711

Token 267: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.8760669231414795
    2. 'grid' → logprob: -1.6260669231414795
    3. 'range' → logprob: -1.6260669231414795
    4. ' range' → logprob: -1.8760669231414795
    5. 'for' → logprob: -3.7510669231414795
    6. ' for' → logprob: -4.626067161560059
    7. 'h' → logprob: -5.876067161560059
    8. ' h' → logprob: -7.501067161560059
    9. ' ' → logprob: -9.001067161560059
    10. '   ' → logprob: -9.751067161560059

Token 268: ' to' (ID: 316)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2868924140930176
    2. 'for' → logprob: -1.7868924140930176
    3. '       ' → logprob: -2.5368924140930176
    4. '   ' → logprob: -6.036892414093018
    5. ':' → logprob: -8.53689193725586
    6. ' to' → logprob: -9.41189193725586
    7. ',' → logprob: -10.28689193725586
    8. '           ' → logprob: -10.28689193725586
    9. '	for' → logprob: -10.91189193725586
    10. ' ' → logprob: -11.28689193725586

Token 269: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.4645940065383911
    2. ' find' → logprob: -1.0895940065383911
    3. 'identify' → logprob: -3.8395938873291016
    4. 'for' → logprob: -5.089593887329102
    5. ' identify' → logprob: -5.339593887329102
    6. ' for' → logprob: -6.964593887329102
    7. ' locate' → logprob: -7.214593887329102
    8. '
' → logprob: -7.839593887329102
    9. '   ' → logprob: -7.964593887329102
    10. 'loc' → logprob: -9.339593887329102

Token 270: ' positions' (ID: 15897)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8903279900550842
    2. ' ghosts' → logprob: -1.3903279304504395
    3. ' positions' → logprob: -2.3903279304504395
    4. ' ghost' → logprob: -2.6403279304504395
    5. 'for' → logprob: -2.7653279304504395
    6. 'ghost' → logprob: -2.8903279304504395
    7. ' the' → logprob: -3.1403279304504395
    8. 'positions' → logprob: -5.2653279304504395
    9. ' all' → logprob: -5.7653279304504395
    10. 'the' → logprob: -6.2653279304504395

Token 271: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36729633808135986
    2. ' for' → logprob: -1.2422963380813599
    3. 'for' → logprob: -3.9922962188720703
    4. '   ' → logprob: -9.24229621887207
    5. '           ' → logprob: -10.36729621887207
    6. ' of' → logprob: -10.49229621887207
    7. '	for' → logprob: -11.49229621887207
    8. ':' → logprob: -11.49229621887207
    9. ',' → logprob: -11.61729621887207
    10. '      ' → logprob: -11.74229621887207

Token 272: ' these' (ID: 1879)
  Prédit: ' ghosts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ghosts' → logprob: -0.2981386184692383
    2. 'ghost' → logprob: -1.4231386184692383
    3. ' all' → logprob: -4.548138618469238
    4. 'all' → logprob: -5.923138618469238
    5. ' each' → logprob: -6.673138618469238
    6. ' ghost' → logprob: -6.673138618469238
    7. 'each' → logprob: -7.298138618469238
    8. ' the' → logprob: -8.423138618469238
    9. ''' → logprob: -9.923138618469238
    10. 'the' → logprob: -10.048138618469238

Token 273: ' ghosts' (ID: 100279)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.49581605195999146
    2. 'for' → logprob: -0.9958160519599915
    3. ' ghosts' → logprob: -4.120816230773926
    4. 'ghost' → logprob: -6.245816230773926
    5. ' letters' → logprob: -6.745816230773926
    6. ' characters' → logprob: -7.120816230773926
    7. 'letters' → logprob: -7.870816230773926
    8. ' ghost' → logprob: -8.120816230773926
    9. 'characters' → logprob: -8.245816230773926
    10. '   ' → logprob: -9.245816230773926

Token 274: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49826279282569885
    2. ' for' → logprob: -1.1232627630233765
    3. 'for' → logprob: -3.248262882232666
    4. '   ' → logprob: -4.123262882232666
    5. ' and' → logprob: -4.623262882232666
    6. ',' → logprob: -7.373262882232666
    7. '	for' → logprob: -7.873262882232666
    8. '
' → logprob: -7.998262882232666
    9. '        
' → logprob: -8.373262405395508
    10. '<|end|>' → logprob: -8.498262405395508

Token 275: 'initial' (ID: 17493)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.143344521522522
    2. 'for' → logprob: -1.143344521522522
    3. 'and' → logprob: -1.768344521522522
    4. ' for' → logprob: -2.0183444023132324
    5. ')' → logprob: -3.0183444023132324
    6. '       ' → logprob: -5.393344402313232
    7. ' ghosts' → logprob: -5.643344402313232
    8. 'ghost' → logprob: -7.268344402313232
    9. ',' → logprob: -8.14334487915039
    10. ' )' → logprob: -8.76834487915039

Token 276: ' and' (ID: 326)
  Prédit: 'ly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -0.01980949193239212
    2. ' and' → logprob: -4.769809722900391
    3. ')' → logprob: -5.644809722900391
    4. ' ghosts' → logprob: -5.769809722900391
    5. ' positions' → logprob: -6.519809722900391
    6. 'positions' → logprob: -6.894809722900391
    7. 'ghost' → logprob: -8.01980972290039
    8. 'for' → logprob: -8.01980972290039
    9. ' for' → logprob: -8.26980972290039
    10. 'y' → logprob: -8.26980972290039

Token 277: ' target' (ID: 3783)
  Prédit: 'targets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'targets' → logprob: -0.11993057280778885
    2. ' targets' → logprob: -2.9949305057525635
    3. 'target' → logprob: -3.1199305057525635
    4. ')' → logprob: -4.619930744171143
    5. 'dest' → logprob: -5.619930744171143
    6. ' target' → logprob: -6.244930744171143
    7. 'their' → logprob: -6.994930744171143
    8. 'destination' → logprob: -7.119930744171143
    9. ' destinations' → logprob: -7.869930744171143
    10. 'final' → logprob: -8.119930267333984

Token 278: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13369666039943695
    2. 's' → logprob: -2.3836965560913086
    3. ')
' → logprob: -4.258696556091309
    4. 'for' → logprob: -5.008696556091309
    5. ' for' → logprob: -5.133696556091309
    6. ' and' → logprob: -6.758696556091309
    7. ',' → logprob: -7.508696556091309
    8. 'positions' → logprob: -7.633696556091309
    9. ' )' → logprob: -7.758696556091309
    10. 'ghost' → logprob: -7.883696556091309

Token 279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001900436356663704
    2. ' for' → logprob: -7.251900672912598
    3. '
' → logprob: -7.626900672912598
    4. '        
' → logprob: -8.126900672912598
    5. 'for' → logprob: -8.376900672912598
    6. '<|end|>' → logprob: -9.501900672912598
    7. '   ' → logprob: -10.251900672912598
    8. ',' → logprob: -10.376900672912598
    9. '    
' → logprob: -12.126900672912598
    10. '           ' → logprob: -12.251900672912598

Token 280: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4984397292137146
    2. 'for' (adapté à ' for') → logprob: -1.2484397888183594
    3. ' for' → logprob: -2.2484397888183594
    4. '   ' → logprob: -12.87343978881836
    5. '	for' → logprob: -13.74843978881836
    6. '           ' → logprob: -14.37343978881836
    7. ' ' → logprob: -14.62343978881836
    8. '        
' → logprob: -14.62343978881836
    9. '
' → logprob: -14.87343978881836
    10. '      ' → logprob: -15.37343978881836

Token 281: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7600044012069702
    2. ' i' → logprob: -0.7600044012069702
    3. ' y' → logprob: -3.3850045204162598
    4. 'y' → logprob: -4.01000452041626
    5. 'r' → logprob: -4.76000452041626
    6. ' r' → logprob: -5.76000452041626
    7. ' row' → logprob: -7.51000452041626
    8. 'row' → logprob: -7.88500452041626
    9. '	i' → logprob: -12.010004043579102
    10. '_i' → logprob: -12.635004043579102

Token 282: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02679228037595749
    2. 'in' → logprob: -3.651792287826538
    3. ',' → logprob: -7.776792049407959
    4. ' ' → logprob: -10.276792526245117
    5. '   ' → logprob: -11.526792526245117
    6. ' ,' → logprob: -11.651792526245117
    7. '	in' → logprob: -12.151792526245117
    8. ')' → logprob: -12.651792526245117
    9. 'range' → logprob: -12.901792526245117
    10. ' range' → logprob: -13.651792526245117

Token 283: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141372084617615
    2. ' range' → logprob: -1.7014137506484985
    3. '(range' → logprob: -16.076414108276367
    4. ' xrange' → logprob: -16.201414108276367
    5. '	range' → logprob: -16.576414108276367
    6. ' ' → logprob: -16.826414108276367
    7. 'ange' → logprob: -17.576414108276367
    8. 'h' → logprob: -18.076414108276367
    9. 'rang' → logprob: -18.076414108276367
    10. ' rang' → logprob: -19.201414108276367

Token 284: '(h' (ID: 8120)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6373083591461182
    2. '(h' → logprob: -0.7623083591461182
    3. ' h' → logprob: -5.387308120727539
    4. '(' → logprob: -9.637308120727539
    5. '	h' → logprob: -10.637308120727539
    6. ' (' → logprob: -11.387308120727539
    7. '   ' → logprob: -11.887308120727539
    8. '(len' → logprob: -11.887308120727539
    9. 'len' → logprob: -12.887308120727539
    10. ',h' → logprob: -13.137308120727539

Token 285: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.42881152033805847
    2. '):
' → logprob: -1.0538115501403809
    3. '   ' → logprob: -10.053811073303223
    4. '):
' → logprob: -10.553811073303223
    5. '       ' → logprob: -11.053811073303223
    6. ':' → logprob: -11.428811073303223
    7. ')' → logprob: -12.303811073303223
    8. '):

' → logprob: -12.803811073303223
    9. ',' → logprob: -13.428811073303223
    10. ':
' → logprob: -13.553811073303223

Token 286: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2170560210943222
    2. ' for' → logprob: -1.8420560359954834
    3. '   ' → logprob: -3.3420560359954834
    4. '           ' → logprob: -7.592055797576904
    5. 'for' → logprob: -8.217056274414062
    6. '<|end|>' → logprob: -8.217056274414062
    7. '	   ' → logprob: -9.717056274414062
    8. ' ' → logprob: -10.467056274414062
    9. '	for' → logprob: -10.467056274414062
    10. '<|end|>' → logprob: -10.592056274414062

Token 287: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3137862980365753
    2. ' for' → logprob: -1.313786268234253
    3. '   ' → logprob: -7.563786506652832
    4. '       ' → logprob: -12.938786506652832
    5. '	for' → logprob: -12.938786506652832
    6. '           ' → logprob: -14.938786506652832
    7. ' ' → logprob: -15.188786506652832
    8. '    ' → logprob: -17.563785552978516
    9. '               ' → logprob: -18.188785552978516
    10. 'j' → logprob: -19.438785552978516

Token 288: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0031777136027812958
    2. ' j' → logprob: -5.753177642822266
    3. '	j' → logprob: -17.753177642822266
    4. '   ' → logprob: -18.628177642822266
    5. '```' → logprob: -19.003177642822266
    6. '
' → logprob: -19.378177642822266
    7. 'x' → logprob: -19.378177642822266
    8. 'w' → logprob: -20.253177642822266
    9. 'y' → logprob: -20.628177642822266
    10. ' ' → logprob: -20.753177642822266

Token 289: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08910740911960602
    2. 'in' → logprob: -2.4641075134277344
    3. ' ' → logprob: -9.464107513427734
    4. '           ' → logprob: -10.839107513427734
    5. '	in' → logprob: -10.839107513427734
    6. '<|end|>' → logprob: -11.089107513427734
    7. ')' → logprob: -11.589107513427734
    8. ',' → logprob: -12.339107513427734
    9. '   ' → logprob: -12.714107513427734
    10. '            ' → logprob: -12.714107513427734

Token 290: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01416350994259119
    2. ' range' → logprob: -4.264163494110107
    3. '(range' → logprob: -17.639163970947266
    4. ' ' → logprob: -19.389163970947266
    5. '   ' → logprob: -20.389163970947266
    6. '	range' → logprob: -20.389163970947266
    7. 'grid' → logprob: -20.764163970947266
    8. ')' → logprob: -21.889163970947266
    9. '```' → logprob: -22.014163970947266
    10. '    ' → logprob: -22.264163970947266

Token 291: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.7009460926055908
    2. '(h' → logprob: -0.7009460926055908
    3. ' (' → logprob: -5.325945854187012
    4. '(' → logprob: -6.450945854187012
    5. 'w' → logprob: -7.325945854187012
    6. 'h' → logprob: -7.575945854187012
    7. 'range' → logprob: -9.325945854187012
    8. ')' → logprob: -11.325945854187012
    9. '(grid' → logprob: -11.575945854187012
    10. '(range' → logprob: -11.575945854187012

Token 292: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08107113838195801
    2. '):
' → logprob: -2.581071138381958
    3. ')' → logprob: -6.206070899963379
    4. ':' → logprob: -9.456070899963379
    5. '):
' → logprob: -10.456070899963379
    6. '):

' → logprob: -11.081070899963379
    7. '           ' → logprob: -11.081070899963379
    8. '               ' → logprob: -12.081070899963379
    9. '       ' → logprob: -12.581070899963379
    10. ' ):' → logprob: -12.706070899963379

Token 293: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0038240645080804825
    2. ' if' → logprob: -6.253824234008789
    3. '           ' → logprob: -6.378824234008789
    4. 'if' → logprob: -10.128824234008789
    5. '```' → logprob: -11.003824234008789
    6. '              ' → logprob: -11.128824234008789
    7. '            ' → logprob: -11.128824234008789
    8. '                   ' → logprob: -11.253824234008789
    9. '                       ' → logprob: -11.378824234008789
    10. ':' → logprob: -11.378824234008789

Token 294: ' ch' (ID: 549)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.922774612903595
    2. '                   ' → logprob: -1.5477745532989502
    3. ' ch' → logprob: -1.9227745532989502
    4. ' cell' → logprob: -2.17277455329895
    5. ' char' → logprob: -2.92277455329895
    6. 'ch' (adapté à ' ch') → logprob: -4.047774791717529
    7. '               ' → logprob: -4.297774791717529
    8. ' if' → logprob: -4.422774791717529
    9. 'c' → logprob: -4.547774791717529
    10. 'cell' → logprob: -4.672774791717529

Token 295: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740826487541199
    2. ' =' → logprob: -0.9740826487541199
    3. ' ' → logprob: -12.724082946777344
    4. ' =
' → logprob: -14.599082946777344
    5. '=
' → logprob: -15.099082946777344
    6. '=line' → logprob: -15.099082946777344
    7. ' ==' → logprob: -15.349082946777344
    8. '                ' → logprob: -15.849082946777344
    9. '==' → logprob: -15.849082946777344
    10. '        ' → logprob: -15.974082946777344

Token 296: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.0067154900170862675
    2. ' grid' → logprob: -5.006715297698975
    3. '	grid' → logprob: -17.006715774536133
    4. ' ' → logprob: -17.256715774536133
    5. '(grid' → logprob: -17.256715774536133
    6. '.grid' → logprob: -18.006715774536133
    7. '   ' → logprob: -18.756715774536133
    8. ':grid' → logprob: -19.756715774536133
    9. '/grid' → logprob: -20.381715774536133
    10. '`' → logprob: -20.631715774536133

Token 297: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.692145012086257e-05
    2. '[j' → logprob: -10.000046730041504
    3. '[' → logprob: -14.250046730041504
    4. '```' → logprob: -15.250046730041504
    5. '[I' → logprob: -15.750046730041504
    6. '[
' → logprob: -15.875046730041504
    7. 'i' → logprob: -16.25004768371582
    8. ' [' → logprob: -16.37504768371582
    9. '[h' → logprob: -16.37504768371582
    10. '
' → logprob: -18.25004768371582

Token 298: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.018830563873052597
    2. '[i' → logprob: -4.0188307762146
    3. ']' → logprob: -7.3938307762146
    4. 'i' → logprob: -10.893830299377441
    5. '[j' → logprob: -10.893830299377441
    6. '[' → logprob: -11.643830299377441
    7. ' ][' → logprob: -12.268830299377441
    8. '```' → logprob: -12.893830299377441
    9. '[I' → logprob: -13.393830299377441
    10. '   ' → logprob: -13.518830299377441

Token 299: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.816093228830141e-06
    2. ' j' → logprob: -13.37500286102295
    3. '```' → logprob: -15.37500286102295
    4. '[j' → logprob: -15.50000286102295
    5. ':j' → logprob: -15.50000286102295
    6. '][' → logprob: -16.375001907348633
    7. '   ' → logprob: -16.625001907348633
    8. ']' → logprob: -16.750001907348633
    9. '	j' → logprob: -16.750001907348633
    10. ')' → logprob: -16.875001907348633

Token 300: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06059926748275757
    2. ']' → logprob: -3.4355993270874023
    3. ')
' → logprob: -3.6855993270874023
    4. '])' → logprob: -7.560599327087402
    5. ']
' → logprob: -7.685599327087402
    6. ')]' → logprob: -8.560599327087402
    7. '               ' → logprob: -9.185599327087402
    8. '           ' → logprob: -10.060599327087402
    9. ' )' → logprob: -10.060599327087402
    10. '）' → logprob: -10.185599327087402

Token 301: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005466993898153305
    2. '<|end|>' → logprob: -6.505466938018799
    3. '                ' → logprob: -6.630466938018799
    4. '                
' → logprob: -7.005466938018799
    5. ' ' → logprob: -7.380466938018799
    6. ' if' → logprob: -8.255467414855957
    7. '           ' → logprob: -8.380467414855957
    8. ' 
' → logprob: -8.630467414855957
    9. '                   ' → logprob: -9.380467414855957
    10. '       ' → logprob: -10.005467414855957

Token 302: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.031323447823524475
    2. 'if' (adapté à ' if') → logprob: -3.7813234329223633
    3. '               ' → logprob: -4.906323432922363
    4. ' ' → logprob: -8.531323432922363
    5. '                ' → logprob: -8.656323432922363
    6. '           ' → logprob: -8.656323432922363
    7. '                   ' → logprob: -10.281323432922363
    8. '            ' → logprob: -11.156323432922363
    9. '        ' → logprob: -11.281323432922363
    10. '       ' → logprob: -11.656323432922363

Token 303: ' '' (ID: 461)
  Prédit: ''ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ch' → logprob: -0.3179486095905304
    2. ' '' → logprob: -1.692948579788208
    3. ''a' → logprob: -2.567948579788208
    4. ''' → logprob: -4.692948818206787
    5. 'ch' → logprob: -6.817948818206787
    6. ' ch' → logprob: -7.817948818206787
    7. ''g' → logprob: -8.317948341369629
    8. ' ' → logprob: -8.692948341369629
    9. ''ab' → logprob: -9.317948341369629
    10. ''o' → logprob: -9.692948341369629

Token 304: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1160349458805285e-05
    2. ''a' → logprob: -11.500011444091797
    3. 'abcdefghijklmnopqrstuvwxyz' → logprob: -14.750011444091797
    4. '`' → logprob: -15.250011444091797
    5. ''' → logprob: -15.375011444091797
    6. '```' → logprob: -16.625011444091797
    7. 'а' → logprob: -17.125011444091797
    8. ' a' → logprob: -18.250011444091797
    9. '97' → logprob: -18.375011444091797
    10. 'abcdefghijkl' → logprob: -18.375011444091797

Token 305: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -2.1054253011243418e-05
    2. ''<' → logprob: -11.750020980834961
    3. ''[' → logprob: -12.500020980834961
    4. '"' → logprob: -13.000020980834961
    5. 'a' → logprob: -13.500020980834961
    6. ''''' → logprob: -13.875020980834961
    7. ''
' → logprob: -14.125020980834961
    8. ''>' → logprob: -14.375020980834961
    9. ''a' → logprob: -14.875020980834961
    10. ' '' → logprob: -15.125020980834961

Token 306: ' <=' (ID: 5017)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00017624642350710928
    2. ''[' → logprob: -9.875176429748535
    3. ''''' → logprob: -10.250176429748535
    4. '<=' → logprob: -10.750176429748535
    5. ''>' → logprob: -11.000176429748535
    6. ''<' → logprob: -11.375176429748535
    7. '"' → logprob: -11.875176429748535
    8. '[' → logprob: -12.500176429748535
    9. '[i' → logprob: -12.500176429748535
    10. ''
' → logprob: -13.000176429748535

Token 307: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -4.56102097814437e-05
    2. ' ch' → logprob: -10.000045776367188
    3. '[ch' → logprob: -15.875045776367188
    4. '	ch' → logprob: -18.500045776367188
    5. '(ch' → logprob: -18.750045776367188
    6. ''ch' → logprob: -19.250045776367188
    7. 'c' → logprob: -19.875045776367188
    8. '_ch' → logprob: -20.375045776367188
    9. ' ' → logprob: -20.375045776367188
    10. '
' → logprob: -20.625045776367188

Token 308: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.4315231144428253
    2. ' <=' → logprob: -1.056523084640503
    3. 'and' → logprob: -6.556523323059082
    4. ' and' → logprob: -7.056523323059082
    5. '<' → logprob: -7.806523323059082
    6. '[' → logprob: -9.556523323059082
    7. 'a' → logprob: -11.056523323059082
    8. '```' → logprob: -12.431523323059082
    9. '[i' → logprob: -12.556523323059082
    10. ' ' → logprob: -12.681523323059082

Token 309: ' '' (ID: 461)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.02364547736942768
    2. ' chr' → logprob: -3.7736454010009766
    3. '(chr' → logprob: -8.023645401000977
    4. ''a' → logprob: -10.023645401000977
    5. ''' → logprob: -11.773645401000977
    6. ' ' → logprob: -11.898645401000977
    7. 'a' → logprob: -12.523645401000977
    8. '
' → logprob: -13.398645401000977
    9. ''ch' → logprob: -13.523645401000977
    10. '_chr' → logprob: -13.523645401000977

Token 310: 'z' (ID: 89)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.0033068740740418434
    2. ' chr' → logprob: -6.378306865692139
    3. 'a' → logprob: -7.253306865692139
    4. '(chr' → logprob: -7.503306865692139
    5. ''a' → logprob: -8.253307342529297
    6. '```' → logprob: -10.503307342529297
    7. ''' → logprob: -11.128307342529297
    8. '`' → logprob: -11.628307342529297
    9. '_chr' → logprob: -12.503307342529297
    10. 'z' → logprob: -12.628307342529297

Token 311: '':
' (ID: 7669)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1303153783082962
    2. 'and' → logprob: -2.6303153038024902
    3. ''' → logprob: -3.0053153038024902
    4. '':
' → logprob: -7.75531530380249
    5. ':
' → logprob: -9.130315780639648
    6. '':' → logprob: -10.505315780639648
    7. ':' → logprob: -11.005315780639648
    8. '           ' → logprob: -11.755315780639648
    9. '               ' → logprob: -12.505315780639648
    10. '                   ' → logprob: -13.755315780639648

Token 312: '                   ' (ID: 699)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07309848070144653
    2. ':' → logprob: -3.5730984210968018
    3. '                   ' → logprob: -3.9480984210968018
    4. ':
' → logprob: -4.448098659515381
    5. '               ' → logprob: -5.698098659515381
    6. 'and' → logprob: -5.823098659515381
    7. ' :' → logprob: -6.323098659515381
    8. '                       ' → logprob: -6.948098659515381
    9. ' :
' → logprob: -7.573098659515381
    10. ' if' → logprob: -7.948098659515381

Token 313: ' idx' (ID: 14016)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.31404417753219604
    2. ' ghosts' → logprob: -1.3140442371368408
    3. ' ghost' → logprob: -7.439043998718262
    4. 'g' → logprob: -9.689043998718262
    5. 'index' → logprob: -11.314043998718262
    6. ' if' → logprob: -11.314043998718262
    7. '               ' → logprob: -11.314043998718262
    8. ' index' → logprob: -11.314043998718262
    9. '   ' → logprob: -11.439043998718262
    10. '       ' → logprob: -11.564043998718262

Token 314: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408154606819153
    2. '=' → logprob: -0.9740815162658691
    3. 's' → logprob: -13.724081993103027
    4. '[' → logprob: -14.849081993103027
    5. '           ' → logprob: -14.974081993103027
    6. ' ' → logprob: -15.349081993103027
    7. '=int' → logprob: -15.599081993103027
    8. ']' → logprob: -15.599081993103027
    9. '=
' → logprob: -15.724081993103027
    10. '=index' → logprob: -15.849081993103027

Token 315: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.029778728261590004
    2. ' ord' → logprob: -3.5297787189483643
    3. '(ord' → logprob: -10.529778480529785
    4. '   ' → logprob: -14.154778480529785
    5. 'ords' → logprob: -14.529778480529785
    6. ' ' → logprob: -17.4047794342041
    7. '               ' → logprob: -17.5297794342041
    8. 'ordi' → logprob: -17.6547794342041
    9. 'orde' → logprob: -17.7797794342041
    10. 'orders' → logprob: -18.1547794342041

Token 316: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.00044830769184045494
    2. 'ch' → logprob: -7.750448226928711
    3. '[ch' → logprob: -11.000448226928711
    4. '(' → logprob: -14.125448226928711
    5. '	ch' → logprob: -16.50044822692871
    6. ',ch' → logprob: -17.75044822692871
    7. '(
' → logprob: -17.87544822692871
    8. ' (' → logprob: -18.25044822692871
    9. ' ch' → logprob: -18.37544822692871
    10. '/ch' → logprob: -18.62544822692871

Token 317: ')' (ID: 8)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2650924026966095
    2. ')' → logprob: -1.765092372894287
    3. '('' → logprob: -3.890092372894287
    4. '-' → logprob: -4.140092372894287
    5. '(ch' → logprob: -4.140092372894287
    6. '[' → logprob: -5.890092372894287
    7. '(i' → logprob: -6.140092372894287
    8. '('-' → logprob: -6.890092372894287
    9. ')-' → logprob: -7.265092372894287
    10. ' -' → logprob: -7.765092372894287

Token 318: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02478126995265484
    2. '(' → logprob: -4.274781227111816
    3. ' -' → logprob: -4.774781227111816
    4. '[' → logprob: -6.399781227111816
    5. '(ord' → logprob: -9.399781227111816
    6. '()-' → logprob: -9.524781227111816
    7. '(-' → logprob: -9.649781227111816
    8. '('' → logprob: -9.899781227111816
    9. '()' → logprob: -10.649781227111816
    10. '(ch' → logprob: -10.899781227111816

Token 319: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.08156052231788635
    2. '97' → logprob: -2.5815606117248535
    3. 'a' → logprob: -6.5815606117248535
    4. ' ord' → logprob: -6.8315606117248535
    5. ''a' → logprob: -8.956560134887695
    6. '(ord' → logprob: -10.456560134887695
    7. '96' → logprob: -11.331560134887695
    8. ' ' → logprob: -11.331560134887695
    9. '`' → logprob: -11.706560134887695
    10. '```' → logprob: -12.081560134887695

Token 320: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0002509687910787761
    2. ''a' → logprob: -8.375250816345215
    3. '(' → logprob: -11.250250816345215
    4. 'a' → logprob: -12.000250816345215
    5. ''' → logprob: -14.250250816345215
    6. ' ('' → logprob: -15.250250816345215
    7. '(a' → logprob: -16.00025177001953
    8. ''s' → logprob: -16.12525177001953
    9. '("' → logprob: -17.37525177001953
    10. '(\'' → logprob: -17.75025177001953

Token 321: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.306760805164231e-05
    2. ''a' → logprob: -11.25001335144043
    3. ''' → logprob: -19.50001335144043
    4. ' a' → logprob: -20.12501335144043
    5. '```' → logprob: -20.25001335144043
    6. '`' → logprob: -20.50001335144043
    7. 'а' → logprob: -20.87501335144043
    8. 'abcdefghijklmnopqrstuvwxyz' → logprob: -21.00001335144043
    9. '	a' → logprob: -21.62501335144043
    10. '"a' → logprob: -23.50001335144043

Token 322: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.019902747124433517
    2. ')' → logprob: -4.01990270614624
    3. '')
' → logprob: -6.64490270614624
    4. ']' → logprob: -7.89490270614624
    5. '<|end|>' → logprob: -11.019903182983398
    6. '')]' → logprob: -11.269903182983398
    7. '']' → logprob: -11.519903182983398
    8. ''' → logprob: -11.519903182983398
    9. '")' → logprob: -12.019903182983398
    10. '')
' → logprob: -12.394903182983398

Token 323: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04078748822212219
    2. '               ' → logprob: -4.040787696838379
    3. '<|end|>' → logprob: -4.540787696838379
    4. '                       ' → logprob: -4.790787696838379
    5. '           ' → logprob: -7.165787696838379
    6. '       ' → logprob: -7.915787696838379
    7. '                           ' → logprob: -8.290787696838379
    8. '                    
' → logprob: -8.290787696838379
    9. ' if' → logprob: -8.665787696838379
    10. ',' → logprob: -8.665787696838379

Token 324: ' if' (ID: 538)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.7483816742897034
    2. ' ghosts' → logprob: -0.9983816742897034
    3. '                   ' → logprob: -2.2483816146850586
    4. ' if' → logprob: -3.8733816146850586
    5. '                       ' → logprob: -4.248381614685059
    6. 'if' (adapté à ' if') → logprob: -4.373381614685059
    7. '               ' → logprob: -6.373381614685059
    8. '           ' → logprob: -7.123381614685059
    9. ' ghost' → logprob: -7.123381614685059
    10. '                           ' → logprob: -7.998381614685059

Token 325: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.023378713056445122
    2. ' idx' → logprob: -3.773378610610962
    3. '0' → logprob: -9.273378372192383
    4. '	idx' → logprob: -10.898378372192383
    5. '(idx' → logprob: -11.398378372192383
    6. '[idx' → logprob: -13.148378372192383
    7. '                   ' → logprob: -13.523378372192383
    8. 'ghost' → logprob: -14.023378372192383
    9. ' ' → logprob: -14.148378372192383
    10. '_idx' → logprob: -14.460878372192383

Token 326: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6352675557136536
    2. '<' → logprob: -0.7602675557136536
    3. '<n' → logprob: -6.135267734527588
    4. '<|end|>' → logprob: -7.885267734527588
    5. '<size' → logprob: -10.26026725769043
    6. '<num' → logprob: -11.01026725769043
    7. '<len' → logprob: -11.13526725769043
    8. '>=' → logprob: -11.51026725769043
    9. '<int' → logprob: -11.76026725769043
    10. ' >=' → logprob: -11.88526725769043

Token 327: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005530327325686812
    2. ' n' → logprob: -7.500553131103516
    3. '	n' → logprob: -16.625553131103516
    4. ')n' → logprob: -19.750553131103516
    5. '   ' → logprob: -20.125553131103516
    6. '
' → logprob: -20.250553131103516
    7. '_n' → logprob: -20.750553131103516
    8. '(n' → logprob: -21.250553131103516
    9. 'n't' → logprob: -21.500553131103516
    10. '0' → logprob: -21.500553131103516

Token 328: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0483991876244545
    2. ' and' → logprob: -3.6733992099761963
    3. ':' → logprob: -3.9233992099761963
    4. '                       ' → logprob: -7.173398971557617
    5. '                           ' → logprob: -7.423398971557617
    6. '):
' → logprob: -7.673398971557617
    7. 'and' → logprob: -9.048398971557617
    8. '                   ' → logprob: -9.923398971557617
    9. ':
' → logprob: -10.423398971557617
    10. ']:
' → logprob: -11.173398971557617

Token 329: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.016170909628272057
    2. '                   ' → logprob: -4.641170978546143
    3. 'ghost' → logprob: -6.266170978546143
    4. ':' → logprob: -7.016170978546143
    5. ' ghosts' → logprob: -7.016170978546143
    6. '               ' → logprob: -7.641170978546143
    7. '                           ' → logprob: -7.766170978546143
    8. ':
' → logprob: -7.766170978546143
    9. '                               ' → logprob: -7.891170978546143
    10. '                        
' → logprob: -8.516170501708984

Token 330: ' ghosts' (ID: 100279)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.14453718066215515
    2. ' ghosts' → logprob: -2.0195372104644775
    3. '                       ' → logprob: -6.394536972045898
    4. ' ghost' → logprob: -9.519536972045898
    5. '                           ' → logprob: -9.644536972045898
    6. '                   ' → logprob: -11.269536972045898
    7. '   ' → logprob: -11.644536972045898
    8. '           ' → logprob: -11.894536972045898
    9. '                               ' → logprob: -12.019536972045898
    10. 'Ghost' → logprob: -12.019536972045898

Token 331: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.0280383548888494e-06
    2. '[_' → logprob: -15.000000953674316
    3. '[' → logprob: -16.000001907348633
    4. '[pos' → logprob: -16.250001907348633
    5. '_positions' → logprob: -16.375001907348633
    6. '_' → logprob: -16.375001907348633
    7. 'Pos' → logprob: -16.500001907348633
    8. 'pos' → logprob: -16.625001907348633
    9. ' _' → logprob: -16.750001907348633
    10. '\' → logprob: -16.750001907348633

Token 332: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.2233183042553719e-05
    2. '][' → logprob: -12.375012397766113
    3. '[' → logprob: -12.500012397766113
    4. 'idx' → logprob: -13.500012397766113
    5. '[i' → logprob: -14.000012397766113
    6. ' [' → logprob: -14.125012397766113
    7. '```' → logprob: -14.750012397766113
    8. ')[' → logprob: -15.625012397766113
    9. '
' → logprob: -16.000011444091797
    10. ' idx' → logprob: -16.250011444091797

Token 333: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005730479606427252
    2. ']=' → logprob: -7.50057315826416
    3. '=' → logprob: -11.00057315826416
    4. ' ]' → logprob: -13.12557315826416
    5. ')' → logprob: -13.75057315826416
    6. ']=(' → logprob: -15.37557315826416
    7. ' =' → logprob: -15.87557315826416
    8. '],' → logprob: -17.375572204589844
    9. ']

' → logprob: -18.375572204589844
    10. ',' → logprob: -18.500572204589844

Token 334: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759415626525879
    2. ' =' → logprob: -0.8259415626525879
    3. ')' → logprob: -13.57594108581543
    4. ',' → logprob: -15.82594108581543
    5. ']' → logprob: -15.82594108581543
    6. ')=' → logprob: -15.95094108581543
    7. '<|end|>' → logprob: -15.95094108581543
    8. ']=' → logprob: -16.20094108581543
    9. ' ' → logprob: -16.45094108581543
    10. '＝' → logprob: -17.07594108581543

Token 335: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0040978738106787205
    2. '(j' → logprob: -5.754097938537598
    3. ' (' → logprob: -7.004097938537598
    4. '(' → logprob: -11.379097938537598
    5. '(ii' → logprob: -16.00409698486328
    6. '(I' → logprob: -16.50409698486328
    7. '[i' → logprob: -17.00409698486328
    8. '   ' → logprob: -17.25409698486328
    9. ' ' → logprob: -19.62909698486328
    10. '(int' → logprob: -19.87909698486328

Token 336: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.2729995988775045e-06
    2. ' i' → logprob: -12.000006675720215
    3. ')i' → logprob: -16.8750057220459
    4. ')' → logprob: -17.7500057220459
    5. '   ' → logprob: -18.2500057220459
    6. '(i' → logprob: -18.7500057220459
    7. '	i' → logprob: -19.6250057220459
    8. '_i' → logprob: -19.8750057220459
    9. ',i' → logprob: -21.5000057220459
    10. '                   ' → logprob: -21.6250057220459

Token 337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004140972159802914
    2. ',j' → logprob: -5.504140853881836
    3. ' ,' → logprob: -10.504140853881836
    4. ',
' → logprob: -10.629140853881836
    5. '<|end|>' → logprob: -12.379140853881836
    6. ',y' → logprob: -13.879140853881836
    7. ',n' → logprob: -14.379140853881836
    8. ',w' → logprob: -14.379140853881836
    9. ',b' → logprob: -14.879140853881836
    10. ')' → logprob: -14.879140853881836

Token 338: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004078401252627373
    2. ' j' → logprob: -5.504078388214111
    3. ',j' → logprob: -18.629077911376953
    4. '
' → logprob: -18.754077911376953
    5. '	j' → logprob: -18.879077911376953
    6. '   ' → logprob: -19.504077911376953
    7. ' ' → logprob: -20.004077911376953
    8. '$j' → logprob: -20.004077911376953
    9. '                   ' → logprob: -20.379077911376953
    10. ')' → logprob: -20.629077911376953

Token 339: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011105302110081539
    2. ')
' → logprob: -9.250110626220703
    3. '<|end|>' → logprob: -11.750110626220703
    4. ' )' → logprob: -12.625110626220703
    5. '                       ' → logprob: -14.125110626220703
    6. '                   ' → logprob: -14.250110626220703
    7. ')#' → logprob: -14.250110626220703
    8. '               ' → logprob: -15.125110626220703
    9. '       ' → logprob: -15.750110626220703
    10. '),' → logprob: -15.750110626220703

Token 340: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018727132119238377
    2. '<|end|>' → logprob: -6.626872539520264
    3. 'elif' → logprob: -8.001873016357422
    4. ' elif' → logprob: -9.626873016357422
    5. '.' → logprob: -10.126873016357422
    6. '                ' → logprob: -10.251873016357422
    7. ')' → logprob: -11.376873016357422
    8. '                   ' → logprob: -11.751873016357422
    9. '```' → logprob: -11.876873016357422
    10. '<|end|>' → logprob: -12.001873016357422

Token 341: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.049844544380903244
    2. 'elif' (adapté à ' elif') → logprob: -3.54984450340271
    3. ' elif' → logprob: -3.92484450340271
    4. ' if' → logprob: -10.424844741821289
    5. '	elif' → logprob: -10.549844741821289
    6. '<|end|>' → logprob: -10.674844741821289
    7. '           ' → logprob: -11.049844741821289
    8. 'if' → logprob: -11.299844741821289
    9. '
' → logprob: -12.049844741821289
    10. '                   ' → logprob: -12.049844741821289

Token 342: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.2016189694404602
    2. ' '' → logprob: -1.7016189098358154
    3. ''a' → logprob: -9.701619148254395
    4. ''' → logprob: -9.701619148254395
    5. '('' → logprob: -10.451619148254395
    6. ' ' → logprob: -10.451619148254395
    7. '   ' → logprob: -12.326619148254395
    8. '’A' → logprob: -12.576619148254395
    9. 'A' → logprob: -12.951619148254395
    10. '               ' → logprob: -13.201619148254395

Token 343: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5235715508460999
    2. ''A' → logprob: -0.8985715508460999
    3. ''' → logprob: -7.898571491241455
    4. ''a' → logprob: -10.523571968078613
    5. 'ord' → logprob: -11.398571968078613
    6. '
' → logprob: -11.398571968078613
    7. 'a' → logprob: -12.023571968078613
    8. '’A' → logprob: -12.523571968078613
    9. '

' → logprob: -12.773571968078613
    10. '`' → logprob: -13.023571968078613

Token 344: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0034246123395860195
    2. ' <=' → logprob: -6.253424644470215
    3. '<=' → logprob: -6.628424644470215
    4. '=' → logprob: -10.503424644470215
    5. '`' → logprob: -10.753424644470215
    6. '')' → logprob: -10.878424644470215
    7. '```' → logprob: -10.878424644470215
    8. ''=' → logprob: -11.128424644470215
    9. '']' → logprob: -11.253424644470215
    10. ''[' → logprob: -12.128424644470215

Token 345: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.043056052178144455
    2. '<=' → logprob: -3.168056011199951
    3. ' ' → logprob: -11.16805648803711
    4. ' ≤' → logprob: -11.41805648803711
    5. '=' → logprob: -11.66805648803711
    6. ')<=' → logprob: -12.54305648803711
    7. '   ' → logprob: -12.79305648803711
    8. ' =' → logprob: -12.91805648803711
    9. ']<=' → logprob: -13.29305648803711
    10. ''' → logprob: -13.41805648803711

Token 346: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.00026574634830467403
    2. ' ch' → logprob: -8.250266075134277
    3. '[ch' → logprob: -13.000266075134277
    4. '	ch' → logprob: -14.500266075134277
    5. 'code' → logprob: -15.125266075134277
    6. '(ch' → logprob: -15.625266075134277
    7. '<|end|>' → logprob: -16.12526512145996
    8. ''ch' → logprob: -16.12526512145996
    9. ' ' → logprob: -16.18776512145996
    10. '```' → logprob: -16.25026512145996

Token 347: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.31330031156539917
    2. '<=' → logprob: -1.313300371170044
    3. '<' → logprob: -10.938300132751465
    4. ')<=' → logprob: -12.563300132751465
    5. ' ' → logprob: -12.688300132751465
    6. ']<=' → logprob: -12.938300132751465
    7. '<|end|>' → logprob: -12.938300132751465
    8. '=' → logprob: -13.063300132751465
    9. '               ' → logprob: -13.688300132751465
    10. '                   ' → logprob: -13.813300132751465

Token 348: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0025484352372586727
    2. 'ch' → logprob: -7.2525482177734375
    3. ' '' → logprob: -7.3775482177734375
    4. ''z' → logprob: -7.7525482177734375
    5. ''C' → logprob: -8.502548217773438
    6. 'Z' → logprob: -8.627548217773438
    7. ''ch' → logprob: -8.752548217773438
    8. ''A' → logprob: -9.752548217773438
    9. 'chr' → logprob: -9.752548217773438
    10. ''S' → logprob: -10.627548217773438

Token 349: 'Z' (ID: 57)
  Prédit: 'Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.0007232757634483278
    2. ''' → logprob: -7.375723361968994
    3. 'z' → logprob: -10.000722885131836
    4. ''z' → logprob: -10.250722885131836
    5. 'ord' → logprob: -12.500722885131836
    6. '90' → logprob: -12.750722885131836
    7. '`' → logprob: -13.000722885131836
    8. 'ch' → logprob: -13.000722885131836
    9. '65' → logprob: -13.375722885131836
    10. 'chr' → logprob: -13.625722885131836

Token 350: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1724642515182495
    2. ':
' → logprob: -1.4224642515182495
    3. '                   ' → logprob: -1.6724642515182495
    4. '):
' → logprob: -1.9224642515182495
    5. '):' → logprob: -3.297464370727539
    6. ')' → logprob: -4.172464370727539
    7. '               ' → logprob: -4.172464370727539
    8. '':
' → logprob: -4.297464370727539
    9. ''):
' → logprob: -4.422464370727539
    10. '':' → logprob: -4.922464370727539

Token 351: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0011246218346059322
    2. '               ' → logprob: -7.376124858856201
    3. '           ' → logprob: -8.626124382019043
    4. '                  ' → logprob: -9.626124382019043
    5. 'idx' → logprob: -9.876124382019043
    6. '<|end|>' → logprob: -9.876124382019043
    7. '{
' → logprob: -10.251124382019043
    8. '                       ' → logprob: -10.876124382019043
    9. '```' → logprob: -11.001124382019043
    10. '                 ' → logprob: -11.376124382019043

Token 352: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.0363391675055027
    2. ' idx' → logprob: -3.536339282989502
    3. '                   ' → logprob: -5.036339282989502
    4. '               ' → logprob: -10.161338806152344
    5. '	idx' → logprob: -11.911338806152344
    6. '           ' → logprob: -12.161338806152344
    7. '                       ' → logprob: -12.161338806152344
    8. '                  ' → logprob: -12.161338806152344
    9. 'indx' → logprob: -13.286338806152344
    10. 'index' → logprob: -13.411338806152344

Token 353: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687145709991455
    2. '=' → logprob: -1.1368714570999146
    3. '<|end|>' → logprob: -16.011871337890625
    4. ' ' → logprob: -16.261871337890625
    5. '   ' → logprob: -17.011871337890625
    6. '=int' → logprob: -17.261871337890625
    7. '                   ' → logprob: -17.636871337890625
    8. '           ' → logprob: -17.636871337890625
    9. '=
' → logprob: -17.761871337890625
    10. '    ' → logprob: -18.136871337890625

Token 354: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.2014625519514084
    2. ' ord' → logprob: -1.7014625072479248
    3. '(ord' → logprob: -9.951462745666504
    4. 'ords' → logprob: -14.576462745666504
    5. '   ' → logprob: -14.951462745666504
    6. ' ' → logprob: -15.701462745666504
    7. 'ordinal' → logprob: -16.201461791992188
    8. 'order' → logprob: -16.451461791992188
    9. 'orm' → logprob: -16.576461791992188
    10. 'ordin' → logprob: -16.951461791992188

Token 355: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.0010360259329900146
    2. 'ch' → logprob: -6.876036167144775
    3. '[ch' → logprob: -13.376035690307617
    4. '(' → logprob: -13.751035690307617
    5. '	ch' → logprob: -15.751035690307617
    6. ' ch' → logprob: -15.876035690307617
    7. ',ch' → logprob: -16.626035690307617
    8. '('' → logprob: -16.626035690307617
    9. ''ch' → logprob: -16.626035690307617
    10. '(chr' → logprob: -16.876035690307617

Token 356: ')' (ID: 8)
  Prédit: '(ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.18693920969963074
    2. ')' → logprob: -2.311939239501953
    3. 'ch' → logprob: -3.436939239501953
    4. '('' → logprob: -3.936939239501953
    5. '-' → logprob: -4.811939239501953
    6. '(' → logprob: -5.811939239501953
    7. '[ch' → logprob: -5.811939239501953
    8. ' ch' → logprob: -5.936939239501953
    9. ' -' → logprob: -6.936939239501953
    10. '   ' → logprob: -8.186939239501953

Token 357: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.15914855897426605
    2. ' -' → logprob: -2.4091484546661377
    3. '(ch' → logprob: -3.0341484546661377
    4. 'ch' → logprob: -5.159148693084717
    5. '('' → logprob: -6.534148693084717
    6. '-ch' → logprob: -7.409148693084717
    7. ')' → logprob: -7.659148693084717
    8. ' ch' → logprob: -8.159148216247559
    9. '(' → logprob: -8.784148216247559
    10. '(ord' → logprob: -9.159148216247559

Token 358: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.004724057391285896
    2. '65' → logprob: -5.504724025726318
    3. ' ord' → logprob: -7.629724025726318
    4. '(ord' → logprob: -9.004724502563477
    5. ''A' → logprob: -11.004724502563477
    6. 'A' → logprob: -11.254724502563477
    7. '64' → logprob: -12.504724502563477
    8. ''' → logprob: -13.629724502563477
    9. 'ordinal' → logprob: -14.254724502563477
    10. '61' → logprob: -15.379724502563477

Token 359: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.002681945450603962
    2. ''A' → logprob: -6.627681732177734
    3. 'ch' → logprob: -7.752681732177734
    4. '(ch' → logprob: -7.877681732177734
    5. ''' → logprob: -8.002681732177734
    6. ''ch' → logprob: -8.752681732177734
    7. ''a' → logprob: -10.127681732177734
    8. '(' → logprob: -12.877681732177734
    9. ')' → logprob: -13.377681732177734
    10. ''S' → logprob: -13.752681732177734

Token 360: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13099676370620728
    2. 'A' → logprob: -2.1309967041015625
    3. ''a' → logprob: -6.2559967041015625
    4. '65' → logprob: -6.6309967041015625
    5. ''A' → logprob: -7.1309967041015625
    6. ''' → logprob: -11.255996704101562
    7. 'ord' → logprob: -12.630996704101562
    8. '97' → logprob: -13.505996704101562
    9. '```' → logprob: -13.505996704101562
    10. '64' → logprob: -13.755996704101562

Token 361: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7375918030738831
    2. ')
' → logprob: -0.7375918030738831
    3. '')' → logprob: -3.6125917434692383
    4. '')
' → logprob: -4.112591743469238
    5. ')
' → logprob: -10.112591743469238
    6. '                   ' → logprob: -10.362591743469238
    7. ')')
' → logprob: -11.987591743469238
    8. '           ' → logprob: -12.112591743469238
    9. '               ' → logprob: -12.237591743469238
    10. '       ' → logprob: -12.362591743469238

Token 362: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.017336247488856316
    2. ' if' → logprob: -4.642336368560791
    3. 'if' → logprob: -6.017336368560791
    4. '                       ' → logprob: -6.017336368560791
    5. '<|end|>' → logprob: -6.017336368560791
    6. '               ' → logprob: -9.267335891723633
    7. '           ' → logprob: -10.517335891723633
    8. '                    ' → logprob: -11.017335891723633
    9. ' ' → logprob: -11.142335891723633
    10. ')' → logprob: -11.517335891723633

Token 363: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.21645796298980713
    2. ' if' → logprob: -1.7164579629898071
    3. '                   ' → logprob: -4.216457843780518
    4. '                       ' → logprob: -8.716458320617676
    5. '               ' → logprob: -12.091458320617676
    6. '           ' → logprob: -12.841458320617676
    7. 'elif' → logprob: -13.341458320617676
    8. ' ' → logprob: -13.841458320617676
    9. '```' → logprob: -13.841458320617676
    10. 'If' → logprob: -13.966458320617676

Token 364: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.06197318062186241
    2. ' idx' → logprob: -2.8119730949401855
    3. '(idx' → logprob: -12.561973571777344
    4. '	idx' → logprob: -14.061973571777344
    5. '[idx' → logprob: -14.186973571777344
    6. '                   ' → logprob: -15.061973571777344
    7. '0' → logprob: -15.936973571777344
    8. 'index' → logprob: -16.936973571777344
    9. '_idx' → logprob: -17.561973571777344
    10. 'indx' → logprob: -17.936973571777344

Token 365: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.17584942281246185
    2. '<' → logprob: -2.050849437713623
    3. '<n' → logprob: -3.425849437713623
    4. '<w' → logprob: -9.800848960876465
    5. '<size' → logprob: -10.800848960876465
    6. 'n' → logprob: -12.175848960876465
    7. '<num' → logprob: -12.175848960876465
    8. '<|end|>' → logprob: -12.175848960876465
    9. '<len' → logprob: -12.925848960876465
    10. '<int' → logprob: -13.050848960876465

Token 366: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02975071594119072
    2. ' n' → logprob: -3.5297508239746094
    3. '	n' → logprob: -15.77975082397461
    4. '```' → logprob: -17.02975082397461
    5. '
' → logprob: -17.52975082397461
    6. ')n' → logprob: -17.65475082397461
    7. '   ' → logprob: -17.90475082397461
    8. '_n' → logprob: -18.02975082397461
    9. '(n' → logprob: -18.52975082397461
    10. ' ' → logprob: -18.52975082397461

Token 367: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5337525010108948
    2. '                       ' → logprob: -1.28375244140625
    3. ':' → logprob: -2.03375244140625
    4. '                   ' → logprob: -5.53375244140625
    5. '):
' → logprob: -6.65875244140625
    6. '                           ' → logprob: -9.03375244140625
    7. '               ' → logprob: -9.78375244140625
    8. ',' → logprob: -9.78375244140625
    9. ' :
' → logprob: -10.03375244140625
    10. '):' → logprob: -10.15875244140625

Token 368: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.17741650342941284
    2. 'targets' → logprob: -1.9274165630340576
    3. ' targets' → logprob: -4.1774163246154785
    4. '                   ' → logprob: -6.9274163246154785
    5. '                           ' → logprob: -8.052416801452637
    6. '.targets' → logprob: -9.177416801452637
    7. '               ' → logprob: -9.552416801452637
    8. '                      ' → logprob: -10.177416801452637
    9. '                               ' → logprob: -10.427416801452637
    10. '_targets' → logprob: -10.677416801452637

Token 369: ' targets' (ID: 22836)
  Prédit: 'targets'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'targets' (adapté à ' targets') → logprob: -2.463036435074173e-05
    2. ' targets' → logprob: -10.625024795532227
    3. '.targets' → logprob: -16.250024795532227
    4. '                       ' → logprob: -16.250024795532227
    5. '                   ' → logprob: -17.375024795532227
    6. '   ' → logprob: -17.625024795532227
    7. '               ' → logprob: -17.625024795532227
    8. '
' → logprob: -18.250024795532227
    9. '                           ' → logprob: -18.375024795532227
    10. 'target' → logprob: -18.625024795532227

Token 370: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.0280383548888494e-06
    2. 'pos' → logprob: -14.500000953674316
    3. '[pos' → logprob: -15.125000953674316
    4. 'Pos' → logprob: -16.500001907348633
    5. '[' → logprob: -17.250001907348633
    6. '[_' → logprob: -17.500001907348633
    7. '```' → logprob: -18.500001907348633
    8. '\' → logprob: -19.750001907348633
    9. '_POS' → logprob: -20.125001907348633
    10. ' _' → logprob: -20.125001907348633

Token 371: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.4121114822482923e-06
    2. 'idx' → logprob: -13.125003814697266
    3. '[' → logprob: -15.000003814697266
    4. '
' → logprob: -15.000003814697266
    5. '[
' → logprob: -15.625003814697266
    6. '```' → logprob: -15.875003814697266
    7. '	idx' → logprob: -16.375003814697266
    8. '[index' → logprob: -16.375003814697266
    9. '[id' → logprob: -16.875003814697266
    10. ' idx' → logprob: -17.000003814697266

Token 372: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.35745567083358765
    2. ')' → logprob: -1.6074557304382324
    3. '=' → logprob: -2.4824557304382324
    4. ']=' → logprob: -4.232455730438232
    5. ')=' → logprob: -6.857455730438232
    6. ' =' → logprob: -6.982455730438232
    7. ']=(' → logprob: -9.482455253601074
    8. '<|end|>' → logprob: -11.482455253601074
    9. '])' → logprob: -11.732455253601074
    10. ' ]' → logprob: -12.232455253601074

Token 373: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804321587085724
    2. ' =' → logprob: -3.288043260574341
    3. '=(' → logprob: -14.538043022155762
    4. ')' → logprob: -14.538043022155762
    5. ')=' → logprob: -15.038043022155762
    6. '<|end|>' → logprob: -15.038043022155762
    7. '=
' → logprob: -16.538043975830078
    8. ' =(' → logprob: -16.788043975830078
    9. ']=' → logprob: -16.913043975830078
    10. '=j' → logprob: -17.288043975830078

Token 374: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.023369982838630676
    2. ' (' → logprob: -3.7733700275421143
    3. '(j' → logprob: -9.023369789123535
    4. '(' → logprob: -12.523369789123535
    5. '(ii' → logprob: -15.273369789123535
    6. '(I' → logprob: -17.77337074279785
    7. ' ' → logprob: -19.64837074279785
    8. '(iv' → logprob: -19.77337074279785
    9. ' ' → logprob: -20.39837074279785
    10. '[i' → logprob: -20.64837074279785

Token 375: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.6240566083070007e-06
    2. ' i' → logprob: -13.500001907348633
    3. 'I' → logprob: -15.750001907348633
    4. ')' → logprob: -16.750001907348633
    5. '(i' → logprob: -16.750001907348633
    6. ')i' → logprob: -17.000001907348633
    7. '
' → logprob: -18.750001907348633
    8. '   ' → logprob: -19.125001907348633
    9. '[i' → logprob: -19.250001907348633
    10. 'h' → logprob: -19.375001907348633

Token 376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19768160581588745
    2. 'i' → logprob: -2.1976816654205322
    3. 'j' → logprob: -2.6976816654205322
    4. ',j' → logprob: -7.947681427001953
    5. ' j' → logprob: -8.197681427001953
    6. ' i' → logprob: -9.197681427001953
    7. ',i' → logprob: -9.447681427001953
    8. ' ,' → logprob: -9.447681427001953
    9. '                   ' → logprob: -11.197681427001953
    10. '           ' → logprob: -11.322681427001953

Token 377: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.20603168499656e-05
    2. ' i' → logprob: -10.125061988830566
    3. 'j' → logprob: -10.875061988830566
    4. 'h' → logprob: -13.375061988830566
    5. ')' → logprob: -14.375061988830566
    6. '
' → logprob: -15.000061988830566
    7. 'I' → logprob: -16.000062942504883
    8. '(i' → logprob: -16.625062942504883
    9. ')i' → logprob: -16.625062942504883
    10. '0' → logprob: -17.625062942504883

Token 378: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011248346709180623
    2. '<|end|>' → logprob: -9.750112533569336
    3. ')
' → logprob: -10.000112533569336
    4. ' )' → logprob: -12.625112533569336
    5. ')

' → logprob: -13.625112533569336
    6. ')#' → logprob: -13.875112533569336
    7. '               ' → logprob: -14.250112533569336
    8. ')return' → logprob: -14.750112533569336
    9. '#' → logprob: -15.125112533569336
    10. '                   ' → logprob: -15.375112533569336

Token 379: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 380: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.55269855260849
    2. 'from' → logprob: -2.1776986122131348
    3. '       ' → logprob: -2.3026986122131348
    4. 'state' → logprob: -2.5526986122131348
    5. 'def' → logprob: -3.0526986122131348
    6. 'queue' → logprob: -3.1776986122131348
    7. 'visited' → logprob: -3.5526986122131348
    8. 'states' → logprob: -5.052698612213135
    9. 'distance' → logprob: -6.552698612213135
    10. '
' → logprob: -6.802698612213135

Token 381: ' Pre' (ID: 4659)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.6157773733139038
    2. 'queue' → logprob: -1.7407773733139038
    3. 'state' → logprob: -1.8657773733139038
    4. 'def' → logprob: -1.9907773733139038
    5. 'from' → logprob: -1.9907773733139038
    6. '#' → logprob: -2.2407774925231934
    7. 'initial' → logprob: -3.6157774925231934
    8. 'dist' → logprob: -4.365777492523193
    9. 'states' → logprob: -4.365777492523193
    10. '       ' → logprob: -4.615777492523193

Token 382: 'processing' (ID: 41376)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.5913271307945251
    2. 'v' → logprob: -1.96632719039917
    3. 'vious' → logprob: -2.34132719039917
    4. 'pare' → logprob: -3.09132719039917
    5. 'vent' → logprob: -3.34132719039917
    6. '#' → logprob: -3.96632719039917
    7. 'dict' → logprob: -4.09132719039917
    8. 'visited' → logprob: -4.21632719039917
    9. 'computed' → logprob: -4.21632719039917
    10. '       ' → logprob: -4.84132719039917

Token 383: ':' (ID: 25)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5521231889724731
    2. '       ' → logprob: -1.5521231889724731
    3. 'visited' → logprob: -1.9271231889724731
    4. 'distance' → logprob: -2.6771230697631836
    5. ' visited' → logprob: -2.9271230697631836
    6. ' states' → logprob: -3.4271230697631836
    7. ' for' → logprob: -3.5521230697631836
    8. 'dist' → logprob: -3.5521230697631836
    9. ' distances' → logprob: -3.6771230697631836
    10. 'states' → logprob: -3.8021230697631836

Token 384: ' collect' (ID: 7916)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.297155499458313
    2. 'visited' → logprob: -1.422155499458313
    3. 'dist' → logprob: -2.1721553802490234
    4. 'from' → logprob: -2.1721553802490234
    5. ' from' → logprob: -3.0471553802490234
    6. ' visited' → logprob: -3.6721553802490234
    7. 'def' → logprob: -3.9221553802490234
    8. ' dist' → logprob: -3.9221553802490234
    9. 'max' → logprob: -4.172155380249023
    10. ' #' → logprob: -4.297155380249023

Token 385: ' all' (ID: 722)
  Prédit: ' walls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' walls' → logprob: -1.4444341659545898
    2. 'walls' → logprob: -1.9444341659545898
    3. 'positions' → logprob: -2.44443416595459
    4. ' obstacles' → logprob: -2.56943416595459
    5. 'dead' → logprob: -2.81943416595459
    6. 'all' → logprob: -2.81943416595459
    7. 'ob' → logprob: -3.06943416595459
    8. 'states' → logprob: -3.19443416595459
    9. ' all' → logprob: -3.56943416595459
    10. ' dead' → logprob: -3.81943416595459

Token 386: ' corridor' (ID: 92467)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.3326414823532104
    2. 'walls' → logprob: -1.4576414823532104
    3. 'empty' → logprob: -2.3326416015625
    4. 'ghost' → logprob: -2.5826416015625
    5. 'ob' → logprob: -2.7076416015625
    6. 'states' → logprob: -3.0826416015625
    7. ' walls' → logprob: -3.2076416015625
    8. 'open' → logprob: -3.5826416015625
    9. 'targets' → logprob: -3.7076416015625
    10. ' positions' → logprob: -3.9576416015625

Token 387: ' cells' (ID: 11242)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.9822945594787598
    2. '_positions' → logprob: -1.6072945594787598
    3. 'cells' → logprob: -1.6072945594787598
    4. 's' → logprob: -1.8572945594787598
    5. ' cells' → logprob: -3.2322945594787598
    6. 'positions' → logprob: -4.10729455947876
    7. '_spaces' → logprob: -5.10729455947876
    8. ' positions' → logprob: -6.10729455947876
    9. 'spaces' → logprob: -6.10729455947876
    10. '_' → logprob: -7.85729455947876

Token 388: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6903393864631653
    2. 'corr' → logprob: -0.9403393864631653
    3. 'cells' → logprob: -3.4403393268585205
    4. 'empty' → logprob: -4.0653395652771
    5. ' corridor' → logprob: -4.0653395652771
    6. ',' → logprob: -4.9403395652771
    7. '.' → logprob: -5.0653395652771
    8. ' corridors' → logprob: -5.0653395652771
    9. 'free' → logprob: -5.8153395652771
    10. 'pass' → logprob: -5.9403395652771

Token 389: ' movement' (ID: 12772)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.2934653759002686
    2. 'free' → logprob: -1.6684653759002686
    3. 'ghost' → logprob: -2.9184653759002686
    4. 'each' → logprob: -3.4184653759002686
    5. 'movement' → logprob: -3.5434653759002686
    6. 'b' → logprob: -3.7934653759002686
    7. ' bfs' → logprob: -3.7934653759002686
    8. 'valid' → logprob: -3.7934653759002686
    9. ' movement' → logprob: -3.9184653759002686
    10. 'empty' → logprob: -3.9184653759002686

Token 390: ' validation' (ID: 19618)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33895641565322876
    2. ' corridor' → logprob: -2.588956356048584
    3. 'corr' → logprob: -2.588956356048584
    4. ' corridors' → logprob: -3.588956356048584
    5. 'cells' → logprob: -3.838956356048584
    6. ',' → logprob: -3.838956356048584
    7. '.' → logprob: -4.338956356048584
    8. ' cells' → logprob: -4.338956356048584
    9. ' for' → logprob: -5.338956356048584
    10. ' and' → logprob: -5.463956356048584

Token 391: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.104495570063591
    2. ' corridor' → logprob: -3.3544955253601074
    3. ' corridors' → logprob: -3.6044955253601074
    4. 'corr' → logprob: -4.604495525360107
    5. ',' → logprob: -4.854495525360107
    6. ' empty' → logprob: -5.604495525360107
    7. 'empty' → logprob: -5.979495525360107
    8. '.' → logprob: -6.229495525360107
    9. 'valid' → logprob: -6.604495525360107
    10. ' valid' → logprob: -6.729495525360107

Token 392: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03867361322045326
    2. ' corridor' → logprob: -5.413673400878906
    3. '        
' → logprob: -5.413673400878906
    4. 'empty' → logprob: -5.913673400878906
    5. ' corridors' → logprob: -5.913673400878906
    6. ' empty' → logprob: -6.038673400878906
    7. '.' → logprob: -6.163673400878906
    8. ',' → logprob: -6.163673400878906
    9. ' pass' → logprob: -6.538673400878906
    10. ' cells' → logprob: -6.663673400878906

Token 393: ' #' (ID: 1069)
  Prédit: 'corr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'corr' → logprob: -0.39465177059173584
    2. ' corridor' → logprob: -1.8946517705917358
    3. 'pass' → logprob: -2.8946518898010254
    4. 'free' → logprob: -3.5196518898010254
    5. 'empty' → logprob: -3.7696518898010254
    6. ' free' → logprob: -4.394651889801025
    7. 'floor' → logprob: -4.894651889801025
    8. 'valid' → logprob: -4.894651889801025
    9. 'walk' → logprob: -5.019651889801025
    10. ' corridors' → logprob: -5.144651889801025

Token 394: ' Walls' (ID: 120584)
  Prédit: 'corr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'corr' → logprob: -0.07190418988466263
    2. 'pass' → logprob: -3.571904182434082
    3. ' corridor' → logprob: -4.696904182434082
    4. 'empty' → logprob: -4.821904182434082
    5. 'valid' → logprob: -5.446904182434082
    6. 'free' → logprob: -5.446904182434082
    7. ' corridors' → logprob: -5.821904182434082
    8. 'walk' → logprob: -5.946904182434082
    9. 'cells' → logprob: -6.696904182434082
    10. 'floor' → logprob: -6.696904182434082

Token 395: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10470172017812729
    2. ' are' → logprob: -2.8547017574310303
    3. '=' → logprob: -3.4797017574310303
    4. ' and' → logprob: -5.979701519012451
    5. ',' → logprob: -6.104701519012451
    6. '<|end|>' → logprob: -6.729701519012451
    7. '#' → logprob: -7.104701519012451
    8. '=set' → logprob: -7.229701519012451
    9. 'cells' → logprob: -7.604701519012451
    10. ' cells' → logprob: -7.854701519012451

Token 396: ' '#' (ID: 11284)
  Prédit: ' '#''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '#'' → logprob: -0.4090651571750641
    2. ''#' → logprob: -1.7840651273727417
    3. ' set' → logprob: -2.7840652465820312
    4. ' cells' → logprob: -3.6590652465820312
    5. ' represented' → logprob: -4.409065246582031
    6. '#' → logprob: -4.659065246582031
    7. 'represented' → logprob: -4.909065246582031
    8. ' '#' → logprob: -4.909065246582031
    9. 'set' → logprob: -4.909065246582031
    10. '('#' → logprob: -5.159065246582031

Token 397: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.032054029405117035
    2. '')' → logprob: -3.6570539474487305
    3. '',' → logprob: -5.2820539474487305
    4. ''
' → logprob: -8.53205394744873
    5. ''),' → logprob: -9.40705394744873
    6. '']' → logprob: -9.53205394744873
    7. '')
' → logprob: -10.03205394744873
    8. ')' → logprob: -10.03205394744873
    9. ''#' → logprob: -10.28205394744873
    10. '#' → logprob: -10.40705394744873

Token 398: ' corridor' (ID: 92467)
  Prédit: ' corridors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' corridors' → logprob: -1.3255277872085571
    2. '.' → logprob: -1.4505277872085571
    3. 'corr' → logprob: -2.4505276679992676
    4. 'empty' → logprob: -2.9505276679992676
    5. 'spaces' → logprob: -3.0755276679992676
    6. 'open' → logprob: -3.4505276679992676
    7. ' and' → logprob: -3.5755276679992676
    8. ' empty' → logprob: -3.5755276679992676
    9. 'free' → logprob: -3.9505276679992676
    10. ' so' → logprob: -3.9505276679992676

Token 399: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.4670617878437042
    2. ' cells' → logprob: -1.5920617580413818
    3. 's' → logprob: -2.342061758041382
    4. ' are' → logprob: -2.842061758041382
    5. ',' → logprob: -5.842061996459961
    6. ' is' → logprob: -5.967061996459961
    7. 'are' → logprob: -6.217061996459961
    8. '<|end|>' → logprob: -6.717061996459961
    9. 'spaces' → logprob: -6.967061996459961
    10. ''s' → logprob: -7.092061996459961

Token 400: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.28197962045669556
    2. 'are' → logprob: -1.4069795608520508
    3. ',' → logprob: -7.781979560852051
    4. 'and' → logprob: -9.15697956085205
    5. ' and' → logprob: -10.03197956085205
    6. ' or' → logprob: -10.28197956085205
    7. '#' → logprob: -10.65697956085205
    8. '.' → logprob: -10.78197956085205
    9. ' ' → logprob: -11.15697956085205
    10. '=' → logprob: -11.28197956085205

Token 401: ' anything' (ID: 6137)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.008066379465162754
    2. ''' → logprob: -5.633066177368164
    3. ' '.'' → logprob: -6.133066177368164
    4. '.' → logprob: -6.883066177368164
    5. '('.')' → logprob: -7.633066177368164
    6. '['' → logprob: -7.883066177368164
    7. ' '' → logprob: -9.133066177368164
    8. ' '.' → logprob: -9.758066177368164
    9. '[]' → logprob: -10.258066177368164
    10. ' ' → logprob: -10.383066177368164

Token 402: ' else' (ID: 1203)
  Prédit: ' but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.6922464966773987
    2. 'but' → logprob: -1.192246437072754
    3. 'else' → logprob: -2.692246437072754
    4. 'except' → logprob: -3.067246437072754
    5. 'not' → logprob: -3.442246437072754
    6. ' other' → logprob: -4.192246437072754
    7. ' else' → logprob: -4.442246437072754
    8. ' except' → logprob: -4.567246437072754
    9. ' not' → logprob: -4.692246437072754
    10. 'other' → logprob: -6.317246437072754

Token 403: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0600535087287426
    2. 'corr' → logprob: -3.560053586959839
    3. ' corridor' → logprob: -4.93505334854126
    4. ' corridors' → logprob: -5.18505334854126
    5. ',' → logprob: -5.43505334854126
    6. '.' → logprob: -5.68505334854126
    7. '<|end|>' → logprob: -5.68505334854126
    8. ' cells' → logprob: -6.43505334854126
    9. 'cells' → logprob: -6.93505334854126
    10. '
' → logprob: -6.93505334854126

Token 404: 'including' (ID: 26167)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09743861109018326
    2. ' and' → logprob: -4.097438812255859
    3. ' )' → logprob: -4.097438812255859
    4. ' not' → logprob: -4.347438812255859
    5. 'and' → logprob: -4.722438812255859
    6. 'not' → logprob: -5.097438812255859
    7. ''' → logprob: -5.347438812255859
    8. ').' → logprob: -5.597438812255859
    9. '!=' → logprob: -5.597438812255859
    10. 'except' → logprob: -5.597438812255859

Token 405: ' spaces' (ID: 18608)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.3764907419681549
    2. ''' → logprob: -1.2514907121658325
    3. '.' → logprob: -4.751490592956543
    4. 'spaces' → logprob: -4.751490592956543
    5. 'letters' → logprob: -5.751490592956543
    6. ' '' → logprob: -7.126490592956543
    7. 'space' → logprob: -7.126490592956543
    8. 'dots' → logprob: -7.126490592956543
    9. ' '.')' → logprob: -7.501490592956543
    10. ''s' → logprob: -7.626490592956543

Token 406: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8550007939338684
    2. ' and' → logprob: -1.1050007343292236
    3. ',' → logprob: -1.9800007343292236
    4. '')' → logprob: -3.1050007343292236
    5. 'and' → logprob: -4.105000972747803
    6. ' or' → logprob: -4.105000972747803
    7. ' )' → logprob: -4.355000972747803
    8. ''' → logprob: -4.730000972747803
    9. ' ,' → logprob: -5.980000972747803
    10. '',' → logprob: -7.355000972747803

Token 407: ' ghost' (ID: 33168)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.6541377305984497
    2. ''.' → logprob: -1.4041377305984497
    3. 'letters' → logprob: -1.7791377305984497
    4. '.' → logprob: -3.27913761138916
    5. 'dots' → logprob: -4.65413761138916
    6. 'targets' → logprob: -5.02913761138916
    7. 'other' → logprob: -5.52913761138916
    8. 'lower' → logprob: -6.27913761138916
    9. 'uppercase' → logprob: -6.65413761138916
    10. 'target' → logprob: -7.52913761138916

Token 408: ' chars' (ID: 47991)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16252870857715607
    2. 'letters' → logprob: -2.6625287532806396
    3. ' letters' → logprob: -3.0375287532806396
    4. 'positions' → logprob: -4.5375285148620605
    5. ' positions' → logprob: -5.0375285148620605
    6. ' starting' → logprob: -5.6625285148620605
    7. ''s' → logprob: -5.7875285148620605
    8. 'start' → logprob: -6.2875285148620605
    9. '<|end|>' → logprob: -6.6625285148620605
    10. ')' → logprob: -6.9125285148620605

Token 409: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02562299743294716
    2. '')' → logprob: -4.150622844696045
    3. ' )' → logprob: -5.025622844696045
    4. ',' → logprob: -6.525622844696045
    5. ').' → logprob: -7.525622844696045
    6. ' and' → logprob: -7.900622844696045
    7. ''' → logprob: -8.275623321533203
    8. ' ,' → logprob: -10.150623321533203
    9. ')
' → logprob: -10.275623321533203
    10. '.' → logprob: -10.275623321533203

Token 410: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4416818618774414
    2. 'corr' → logprob: -1.4416818618774414
    3. ' corridor' → logprob: -2.4416818618774414
    4. ' corridors' → logprob: -4.066681861877441
    5. '        
' → logprob: -6.191681861877441
    6. '
' → logprob: -6.441681861877441
    7. ',' → logprob: -6.566681861877441
    8. '.' → logprob: -6.816681861877441
    9. 'empty' → logprob: -6.816681861877441
    10. 'valid' → logprob: -6.816681861877441

Token 411: ' #' (ID: 1069)
  Prédit: 'corr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'corr' → logprob: -0.12124611437320709
    2. ' corridor' → logprob: -3.246246099472046
    3. 'pass' → logprob: -3.996246099472046
    4. 'free' → logprob: -3.996246099472046
    5. '       ' → logprob: -4.496246337890625
    6. 'empty' → logprob: -4.996246337890625
    7. 'valid' → logprob: -5.121246337890625
    8. ' free' → logprob: -5.496246337890625
    9. ' corridors' → logprob: -6.496246337890625
    10. 'floor' → logprob: -6.621246337890625

Token 412: ' We' (ID: 1416)
  Prédit: 'corr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'corr' → logprob: -0.18638759851455688
    2. 'pass' → logprob: -2.936387538909912
    3. 'free' → logprob: -3.311387538909912
    4. ' corridor' → logprob: -3.936387538909912
    5. 'empty' → logprob: -4.061387538909912
    6. 'valid' → logprob: -4.811387538909912
    7. 'walk' → logprob: -4.936387538909912
    8. ' free' → logprob: -5.061387538909912
    9. 'floor' → logprob: -5.436387538909912
    10. ' corridors' → logprob: -5.686387538909912

Token 413: ' will' (ID: 738)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7231765985488892
    2. 'can' → logprob: -1.9731765985488892
    3. ' can' → logprob: -2.5981764793395996
    4. 'need' → logprob: -2.7231764793395996
    5. ' continue' → logprob: -2.9731764793395996
    6. ' need' → logprob: -3.4731764793395996
    7. '       ' → logprob: -3.5981764793395996
    8. '#' → logprob: -3.9731764793395996
    9. 'valid' → logprob: -4.5981764793396
    10. ''ll' → logprob: -4.5981764793396

Token 414: ' use' (ID: 1199)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -1.5237317085266113
    2. 'continue' → logprob: -1.6487317085266113
    3. 'use' → logprob: -1.8987317085266113
    4. 'store' → logprob: -2.5237317085266113
    5. 'build' → logprob: -3.0237317085266113
    6. 'consider' → logprob: -3.0237317085266113
    7. 'mark' → logprob: -3.2737317085266113
    8. 'collect' → logprob: -3.3987317085266113
    9. 'pass' → logprob: -3.7737317085266113
    10. 'pre' → logprob: -3.8987317085266113

Token 415: ' a' (ID: 261)
  Prédit: 'corr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'corr' → logprob: -0.94407719373703
    2. ' a' → logprob: -1.8190772533416748
    3. 'valid' → logprob: -2.194077253341675
    4. 'a' → logprob: -2.194077253341675
    5. 'pass' → logprob: -2.694077253341675
    6. ' corridor' → logprob: -3.194077253341675
    7. 'walk' → logprob: -3.694077253341675
    8. 'the' → logprob: -3.944077253341675
    9. 'walls' → logprob: -4.694077014923096
    10. 'set' → logprob: -4.694077014923096

Token 416: ' grid' (ID: 10586)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.6537774205207825
    2. 'deque' → logprob: -1.2787773609161377
    3. 'valid' → logprob: -1.9037773609161377
    4. 'def' → logprob: -3.9037773609161377
    5. 'queue' → logprob: -4.153777599334717
    6. 'visited' → logprob: -4.528777599334717
    7. 'grid' → logprob: -6.528777599334717
    8. ' set' → logprob: -7.903777599334717
    9. 'list' → logprob: -7.903777599334717
    10. 'wall' → logprob: -8.028777122497559

Token 417: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.8240156769752502
    2. '_' → logprob: -1.9490156173706055
    3. '_valid' → logprob: -2.4490156173706055
    4. '_walk' → logprob: -2.5740156173706055
    5. '_cells' → logprob: -3.4490156173706055
    6. 'walk' → logprob: -3.4490156173706055
    7. '_pass' → logprob: -3.5740156173706055
    8. '_access' → logprob: -3.6990156173706055
    9. 'to' → logprob: -3.6990156173706055
    10. ' of' → logprob: -4.0740156173706055

Token 418: ' bo' (ID: 1581)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.12997490167617798
    2. 'bo' → logprob: -2.504974842071533
    3. ' bo' → logprob: -3.504974842071533
    4. 'boolean' → logprob: -4.879974842071533
    5. 'True' → logprob: -6.254974842071533
    6. ' bool' → logprob: -8.129975318908691
    7. 'visited' → logprob: -8.754975318908691
    8. 'b' → logprob: -9.504975318908691
    9. 'False' → logprob: -10.129975318908691
    10. ' True' → logprob: -11.129975318908691

Token 419: 'ole' (ID: 1491)
  Prédit: 'ol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ol' → logprob: -0.16114301979541779
    2. 'olean' → logprob: -2.1611430644989014
    3. 'ole' → logprob: -3.6611430644989014
    4. 'OLEAN' → logprob: -5.911142826080322
    5. '[' → logprob: -6.786142826080322
    6. 'oolean' → logprob: -7.036142826080322
    7. '#' → logprob: -7.036142826080322
    8. 'dy' → logprob: -8.03614330291748
    9. 'olist' → logprob: -8.66114330291748
    10. '   ' → logprob: -8.78614330291748

Token 420: 'ans' (ID: 616)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.00040934275602921844
    2. 'ans' → logprob: -8.375409126281738
    3. 'a' → logprob: -9.625409126281738
    4. '[' → logprob: -10.250409126281738
    5. 'al' → logprob: -10.625409126281738
    6. 'l' → logprob: -11.875409126281738
    7. 'n' → logprob: -11.875409126281738
    8. ' an' → logprob: -12.875409126281738
    9. 'anse' → logprob: -12.875409126281738
    10. '```' → logprob: -12.875409126281738

Token 421: ' indicating' (ID: 34700)
  Prédit: ' walk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' walk' → logprob: -1.3636910915374756
    2. 'walk' → logprob: -1.4886910915374756
    3. ' to' → logprob: -2.3636910915374756
    4. 'valid' → logprob: -2.7386910915374756
    5. ' for' → logprob: -2.7386910915374756
    6. ' valid' → logprob: -2.9886910915374756
    7. '   ' → logprob: -3.2386910915374756
    8. ' pass' → logprob: -3.4886910915374756
    9. ' free' → logprob: -3.4886910915374756
    10. 'pass' → logprob: -3.9886910915374756

Token 422: ' corridor' (ID: 92467)
  Prédit: 'walk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'walk' → logprob: -0.6381436586380005
    2. 'pass' → logprob: -1.1381436586380005
    3. ' pass' → logprob: -2.638143539428711
    4. 'valid' → logprob: -2.888143539428711
    5. ' walk' → logprob: -5.013143539428711
    6. ' valid' → logprob: -5.513143539428711
    7. 'True' → logprob: -6.013143539428711
    8. 'accessible' → logprob: -6.138143539428711
    9. ' travers' → logprob: -6.263143539428711
    10. ' accessible' → logprob: -6.513143539428711

Token 423: ' cells' (ID: 11242)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.815635621547699
    2. ' =' → logprob: -1.1906356811523438
    3. '_' → logprob: -1.9406356811523438
    4. 'cells' → logprob: -3.0656356811523438
    5. 's' → logprob: -3.5656356811523438
    6. '   ' → logprob: -4.315635681152344
    7. '=' → logprob: -5.440635681152344
    8. ' cells' → logprob: -5.690635681152344
    9. '_walk' → logprob: -5.940635681152344
    10. ' ' → logprob: -6.065635681152344

Token 424: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5394933819770813
    2. '   ' → logprob: -1.9144933223724365
    3. 'corr' → logprob: -2.4144933223724365
    4. '       ' → logprob: -3.0394933223724365
    5. ',' → logprob: -3.5394933223724365
    6. '=' → logprob: -3.7894933223724365
    7. ' corridor' → logprob: -4.164493560791016
    8. 'visited' → logprob: -4.914493560791016
    9. '_corr' → logprob: -5.039493560791016
    10. 'valid' → logprob: -5.289493560791016

Token 425: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2726781964302063
    2. 'corr' → logprob: -2.6476781368255615
    3. '   ' → logprob: -2.7726781368255615
    4. '
' → logprob: -3.0226781368255615
    5. ' corridor' → logprob: -4.022678375244141
    6. ',' → logprob: -5.022678375244141
    7. '```' → logprob: -5.022678375244141
    8. '_corr' → logprob: -5.272678375244141
    9. '        
' → logprob: -5.897678375244141
    10. '<|end|>' → logprob: -6.022678375244141

Token 426: ' is' (ID: 382)
  Prédit: 'corr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'corr' → logprob: -0.7558989524841309
    2. ' corridor' → logprob: -2.130898952484131
    3. 'walk' → logprob: -2.255898952484131
    4. '   ' → logprob: -2.380898952484131
    5. 'pass' → logprob: -3.005898952484131
    6. '       ' → logprob: -3.505898952484131
    7. 'is' (adapté à ' is') → logprob: -3.505898952484131
    8. ' walk' → logprob: -3.880898952484131
    9. 'can' → logprob: -4.255898952484131
    10. 'valid' → logprob: -4.255898952484131

Token 427: '_corr' (ID: 121608)
  Prédit: '_corr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_corr' → logprob: -0.011460978537797928
    2. '_pass' → logprob: -4.636460781097412
    3. '_walk' → logprob: -7.011460781097412
    4. 'corr' → logprob: -7.511460781097412
    5. '_' → logprob: -9.26146125793457
    6. '_cor' → logprob: -10.13646125793457
    7. '_open' → logprob: -10.38646125793457
    8. '_access' → logprob: -10.88646125793457
    9. '_valid' → logprob: -11.38646125793457
    10. '_c' → logprob: -11.51146125793457

Token 428: 'idor' (ID: 19769)
  Prédit: 'idor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idor' → logprob: -0.0010505540994927287
    2. 'id' → logprob: -7.3760504722595215
    3. 'idors' → logprob: -9.12605094909668
    4. '```' → logprob: -9.87605094909668
    5. '_' → logprob: -10.12605094909668
    6. '**' → logprob: -10.12605094909668
    7. '   ' → logprob: -10.37605094909668
    8. '_id' → logprob: -10.87605094909668
    9. '=' → logprob: -11.25105094909668
    10. ']' → logprob: -11.25105094909668

Token 429: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061992112547159195
    2. ' =' → logprob: -2.8119921684265137
    3. '[' → logprob: -11.311991691589355
    4. '=[' → logprob: -12.311991691589355
    5. ' ' → logprob: -12.811991691589355
    6. '   ' → logprob: -12.811991691589355
    7. '=
' → logprob: -14.811991691589355
    8. '_' → logprob: -15.311991691589355
    9. ',' → logprob: -15.561991691589355
    10. '=

' → logprob: -15.561991691589355

Token 430: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.004101908300071955
    2. ' [[' → logprob: -5.504101753234863
    3. '[' → logprob: -10.754101753234863
    4. '[]
' → logprob: -13.754101753234863
    5. ' [' → logprob: -14.879101753234863
    6. '[
' → logprob: -15.129101753234863
    7. '[['' → logprob: -15.129101753234863
    8. '[]' → logprob: -15.754101753234863
    9. '   ' → logprob: -17.75410270690918
    10. '[][]' → logprob: -18.37910270690918

Token 431: 'False' (ID: 8168)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.3548751473426819
    2. 'grid' → logprob: -1.354875087738037
    3. 'ch' → logprob: -3.729875087738037
    4. 'c' → logprob: -4.729875087738037
    5. 'True' → logprob: -5.479875087738037
    6. 'False' → logprob: -6.354875087738037
    7. '(grid' → logprob: -7.229875087738037
    8. '(c' → logprob: -7.729875087738037
    9. '(cell' → logprob: -7.979875087738037
    10. '(ch' → logprob: -8.354875564575195

Token 432: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31349366903305054
    2. 'for' → logprob: -1.3134937286376953
    3. ' if' → logprob: -8.813493728637695
    4. 'if' → logprob: -10.063493728637695
    5. '           ' → logprob: -10.938493728637695
    6. '   ' → logprob: -12.313493728637695
    7. ']' → logprob: -12.313493728637695
    8. '               ' → logprob: -12.938493728637695
    9. '	for' → logprob: -12.938493728637695
    10. '                   ' → logprob: -13.063493728637695

Token 433: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.1888679839321412e-05
    2. '(w' → logprob: -10.875021934509277
    3. ' w' → logprob: -12.875021934509277
    4. '   ' → logprob: -15.000021934509277
    5. 'h' → logprob: -17.12502098083496
    6. '	w' → logprob: -17.12502098083496
    7. '       ' → logprob: -18.12502098083496
    8. '           ' → logprob: -18.25002098083496
    9. '
' → logprob: -18.62502098083496
    10. '[w' → logprob: -18.62502098083496

Token 434: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2519439160823822
    2. 'for' → logprob: -1.5019439458847046
    3. ')' → logprob: -12.126943588256836
    4. '   ' → logprob: -12.626943588256836
    5. '	for' → logprob: -13.376943588256836
    6. '           ' → logprob: -13.626943588256836
    7. ' ' → logprob: -14.001943588256836
    8. '       ' → logprob: -14.251943588256836
    9. '    ' → logprob: -15.376943588256836
    10. '               ' → logprob: -15.501943588256836

Token 435: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10320808738470078
    2. ' _' → logprob: -2.353208065032959
    3. ' range' → logprob: -5.978208065032959
    4. 'range' → logprob: -8.728208541870117
    5. '_h' → logprob: -8.728208541870117
    6. '_range' → logprob: -9.478208541870117
    7. '_i' → logprob: -10.103208541870117
    8. ' ' → logprob: -11.978208541870117
    9. ' in' → logprob: -12.353208541870117
    10. ' i' → logprob: -12.603208541870117

Token 436: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0057066925801336765
    2. ' range' → logprob: -5.880706787109375
    3. 'in' → logprob: -6.005706787109375
    4. ' in' → logprob: -8.255706787109375
    5. 'h' → logprob: -9.380706787109375
    6. '(range' → logprob: -9.630706787109375
    7. 'grid' → logprob: -11.130706787109375
    8. '[h' → logprob: -12.630706787109375
    9. 'row' → logprob: -13.005706787109375
    10. '[' → logprob: -14.005706787109375

Token 437: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009115827269852161
    2. ' range' → logprob: -7.000911712646484
    3. '(range' → logprob: -16.625911712646484
    4. '	range' → logprob: -18.375911712646484
    5. '   ' → logprob: -19.250911712646484
    6. '[' → logprob: -19.625911712646484
    7. '
' → logprob: -20.375911712646484
    8. ' ' → logprob: -20.625911712646484
    9. '_range' → logprob: -21.875911712646484
    10. '  ' → logprob: -22.500911712646484

Token 438: '(h' (ID: 8120)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0008193961111828685
    2. '(h' → logprob: -7.375819206237793
    3. ' h' → logprob: -9.250819206237793
    4. 'range' → logprob: -9.375819206237793
    5. '   ' → logprob: -12.750819206237793
    6. '[h' → logprob: -12.875819206237793
    7. '
' → logprob: -13.500819206237793
    8. '	h' → logprob: -13.875819206237793
    9. ' range' → logprob: -13.875819206237793
    10. '           ' → logprob: -14.000819206237793

Token 439: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.077528764260933e-05
    2. ')' → logprob: -10.000081062316895
    3. ')]
' → logprob: -10.875081062316895
    4. '       ' → logprob: -11.500081062316895
    5. ']' → logprob: -12.750081062316895
    6. '   ' → logprob: -13.375081062316895
    7. ' )' → logprob: -14.625081062316895
    8. '           ' → logprob: -14.750081062316895
    9. ')]

' → logprob: -15.750081062316895
    10. ')
' → logprob: -16.000080108642578

Token 440: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11213028430938721
    2. ' for' → logprob: -2.3621301651000977
    3. '
' → logprob: -5.112130165100098
    4. 'for' → logprob: -5.987130165100098
    5. '<|end|>' → logprob: -5.987130165100098
    6. '   ' → logprob: -7.862130165100098
    7. '        
' → logprob: -9.362130165100098
    8. '	for' → logprob: -9.737130165100098
    9. '           ' → logprob: -9.737130165100098
    10. '	' → logprob: -10.362130165100098

Token 441: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7999576330184937
    2. ' for' → logprob: -1.1749576330184937
    3. 'for' (adapté à ' for') → logprob: -1.4249576330184937
    4. '<|end|>' → logprob: -7.049957752227783
    5. '	for' → logprob: -8.424957275390625
    6. '   ' → logprob: -8.674957275390625
    7. ' ' → logprob: -11.674957275390625
    8. '           ' → logprob: -12.174957275390625
    9. '<|end|>' → logprob: -12.424957275390625
    10. ')' → logprob: -12.424957275390625

Token 442: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0067161982879042625
    2. ' i' → logprob: -5.006716251373291
    3. '	i' → logprob: -14.506715774536133
    4. 'x' → logprob: -15.631715774536133
    5. '_i' → logprob: -15.756715774536133
    6. ' ' → logprob: -17.131715774536133
    7. 'y' → logprob: -17.381715774536133
    8. '   ' → logprob: -17.881715774536133
    9. 'row' → logprob: -18.006715774536133
    10. ' ' → logprob: -18.631715774536133

Token 443: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03807041049003601
    2. 'in' → logprob: -3.2880704402923584
    3. ',' → logprob: -11.288070678710938
    4. ' ' → logprob: -11.288070678710938
    5. '	in' → logprob: -14.163070678710938
    6. '   ' → logprob: -14.413070678710938
    7. 'import' → logprob: -14.913070678710938
    8. 'range' → logprob: -15.038070678710938
    9. '<|end|>' → logprob: -15.163070678710938
    10. 'In' → logprob: -15.288070678710938

Token 444: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007102862582542002
    2. ' range' → logprob: -7.250710487365723
    3. ' ' → logprob: -16.000709533691406
    4. '   ' → logprob: -16.125709533691406
    5. '
' → logprob: -17.000709533691406
    6. '	range' → logprob: -17.500709533691406
    7. '(range' → logprob: -17.750709533691406
    8. ')' → logprob: -18.125709533691406
    9. '  ' → logprob: -18.500709533691406
    10. '

' → logprob: -18.875709533691406

Token 445: '(h' (ID: 8120)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4335796535015106
    2. '(h' → logprob: -1.433579683303833
    3. 'h' → logprob: -2.183579683303833
    4. ' range' → logprob: -7.308579444885254
    5. '(range' → logprob: -10.058579444885254
    6. ' h' → logprob: -12.058579444885254
    7. '(' → logprob: -13.683579444885254
    8. ')' → logprob: -13.933579444885254
    9. '
' → logprob: -14.183579444885254
    10. '[h' → logprob: -14.183579444885254

Token 446: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05517822876572609
    2. '):' → logprob: -2.930178165435791
    3. '   ' → logprob: -9.18017864227295
    4. '       ' → logprob: -9.30517864227295
    5. '):
' → logprob: -10.80517864227295
    6. ')' → logprob: -10.93017864227295
    7. 'for' → logprob: -11.18017864227295
    8. ']:
' → logprob: -11.68017864227295
    9. ':' → logprob: -11.80517864227295
    10. ':
' → logprob: -12.05517864227295

Token 447: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06051982194185257
    2. ' for' → logprob: -3.0605199337005615
    3. '   ' → logprob: -4.935519695281982
    4. '           ' → logprob: -5.435519695281982
    5. 'for' → logprob: -8.68552017211914
    6. '	   ' → logprob: -9.81052017211914
    7. '	for' → logprob: -9.93552017211914
    8. '<|end|>' → logprob: -10.93552017211914
    9. '	       ' → logprob: -11.43552017211914
    10. '               ' → logprob: -13.18552017211914

Token 448: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20479562878608704
    2. 'for' (adapté à ' for') → logprob: -1.7047955989837646
    3. '   ' → logprob: -5.829795837402344
    4. ' j' → logprob: -7.954795837402344
    5. 'j' → logprob: -9.954795837402344
    6. '	for' → logprob: -11.079795837402344
    7. ' ' → logprob: -11.329795837402344
    8. '       ' → logprob: -11.954795837402344
    9. '    ' → logprob: -12.329795837402344
    10. ',j' → logprob: -15.204795837402344

Token 449: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06196802109479904
    2. ' j' → logprob: -2.8119680881500244
    3. '   ' → logprob: -15.686967849731445
    4. '	j' → logprob: -16.686967849731445
    5. '    ' → logprob: -16.811967849731445
    6. ' ' → logprob: -17.936967849731445
    7. '_j' → logprob: -18.311967849731445
    8. '<|end|>' → logprob: -18.561967849731445
    9. ',j' → logprob: -18.686967849731445
    10. '           ' → logprob: -18.686967849731445

Token 450: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00768683897331357
    2. 'in' → logprob: -4.882686614990234
    3. ')' → logprob: -10.132686614990234
    4. '<|end|>' → logprob: -11.382686614990234
    5. '           ' → logprob: -11.882686614990234
    6. ' ' → logprob: -12.132686614990234
    7. ',' → logprob: -12.632686614990234
    8. '=' → logprob: -13.507686614990234
    9. 'In' → logprob: -13.632686614990234
    10. '        ' → logprob: -13.632686614990234

Token 451: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008663497865200043
    2. ' range' → logprob: -4.758663654327393
    3. 'w' → logprob: -10.258663177490234
    4. '(w' → logprob: -11.633663177490234
    5. '(range' → logprob: -12.258663177490234
    6. '[w' → logprob: -15.883663177490234
    7. ' w' → logprob: -17.258663177490234
    8. '   ' → logprob: -17.508663177490234
    9. '	range' → logprob: -19.633663177490234
    10. '<w' → logprob: -19.883663177490234

Token 452: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.07032841444015503
    2. 'w' → logprob: -2.6953284740448
    3. ' w' → logprob: -8.320328712463379
    4. ' (' → logprob: -9.070328712463379
    5. '(' → logprob: -11.195328712463379
    6. '[w' → logprob: -12.070328712463379
    7. '   ' → logprob: -12.195328712463379
    8. '           ' → logprob: -13.320328712463379
    9. 'range' → logprob: -13.445328712463379
    10. '<w' → logprob: -13.570328712463379

Token 453: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.008340926840901375
    2. '):' → logprob: -5.008340835571289
    3. ')' → logprob: -7.258340835571289
    4. '           ' → logprob: -8.008340835571289
    5. ')]' → logprob: -8.258340835571289
    6. ']:
' → logprob: -8.758340835571289
    7. '               ' → logprob: -10.008340835571289
    8. '       ' → logprob: -10.258340835571289
    9. '):
' → logprob: -10.383340835571289
    10. '):

' → logprob: -11.258340835571289

Token 454: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018817579839378595
    2. ' is' → logprob: -7.1268815994262695
    3. 'is' → logprob: -7.6268815994262695
    4. '                   ' → logprob: -8.62688159942627
    5. '           ' → logprob: -8.62688159942627
    6. '                       ' → logprob: -9.87688159942627
    7. ' if' → logprob: -10.50188159942627
    8. ')' → logprob: -11.37688159942627
    9. '[' → logprob: -11.37688159942627
    10. '                ' → logprob: -11.50188159942627

Token 455: ' if' (ID: 538)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.04303663969039917
    2. ' is' → logprob: -3.793036699295044
    3. '                   ' → logprob: -4.418036460876465
    4. 'if' (adapté à ' if') → logprob: -6.043036460876465
    5. '               ' → logprob: -6.043036460876465
    6. 'ch' → logprob: -6.543036460876465
    7. '   ' → logprob: -7.293036460876465
    8. ' if' → logprob: -7.793036460876465
    9. 'cell' → logprob: -8.918036460876465
    10. ' ch' → logprob: -10.543036460876465

Token 456: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.00033546582562848926
    2. ' grid' → logprob: -8.000335693359375
    3. '	grid' → logprob: -19.250335693359375
    4. '   ' → logprob: -19.750335693359375
    5. '(grid' → logprob: -20.625335693359375
    6. '.grid' → logprob: -20.875335693359375
    7. ' ' → logprob: -20.875335693359375
    8. 'gr' → logprob: -21.375335693359375
    9. '_grid' → logprob: -22.250335693359375
    10. 'Grid' → logprob: -22.625335693359375

Token 457: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.9153885558771435e-06
    2. '[j' → logprob: -12.125005722045898
    3. '[' → logprob: -15.125005722045898
    4. 'i' → logprob: -16.5000057220459
    5. '[
' → logprob: -17.1250057220459
    6. '               ' → logprob: -17.7500057220459
    7. '[I' → logprob: -17.7500057220459
    8. ' [' → logprob: -18.0000057220459
    9. '   ' → logprob: -18.3750057220459
    10. '                   ' → logprob: -18.7500057220459

Token 458: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.31427454948425293
    2. '[i' → logprob: -1.314274549484253
    3. 'i' → logprob: -7.064274787902832
    4. '[j' → logprob: -9.814274787902832
    5. ']' → logprob: -10.564274787902832
    6. '[' → logprob: -10.689274787902832
    7. '           ' → logprob: -11.064274787902832
    8. ')[' → logprob: -11.689274787902832
    9. 'j' → logprob: -11.814274787902832
    10. '               ' → logprob: -12.314274787902832

Token 459: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.0219828002154827e-05
    2. '][' → logprob: -11.125020027160645
    3. ']' → logprob: -12.250020027160645
    4. '[j' → logprob: -15.250020027160645
    5. ' j' → logprob: -16.12502098083496
    6. '```' → logprob: -16.50002098083496
    7. 'i' → logprob: -16.62502098083496
    8. '   ' → logprob: -17.12502098083496
    9. '	j' → logprob: -17.75002098083496
    10. '0' → logprob: -17.87502098083496

Token 460: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01658264361321926
    2. ']!=' → logprob: -4.141582489013672
    3. ']!='' → logprob: -8.266582489013672
    4. '[' → logprob: -8.641582489013672
    5. '!=' → logprob: -9.641582489013672
    6. '[j' → logprob: -10.516582489013672
    7. '[i' → logprob: -11.516582489013672
    8. ' ]' → logprob: -13.266582489013672
    9. ')!=' → logprob: -13.391582489013672
    10. 'not' → logprob: -13.516582489013672

Token 461: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.004957408644258976
    2. ' !=' → logprob: -5.75495719909668
    3. ')!=' → logprob: -7.37995719909668
    4. ']!=' → logprob: -7.37995719909668
    5. '!='' → logprob: -8.12995719909668
    6. 'not' → logprob: -9.75495719909668
    7. ')' → logprob: -10.00495719909668
    8. '()!=' → logprob: -10.12995719909668
    9. ']' → logprob: -10.25495719909668
    10. ' not' → logprob: -11.50495719909668

Token 462: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -3.786196975852363e-05
    2. ' '#'' → logprob: -10.750038146972656
    3. ' '#' → logprob: -11.625038146972656
    4. ''' → logprob: -12.750038146972656
    5. '"#' → logprob: -12.750038146972656
    6. '('#' → logprob: -14.500038146972656
    7. ''>' → logprob: -15.500038146972656
    8. '#' → logprob: -15.750038146972656
    9. ''\' → logprob: -15.750038146972656
    10. ':'#' → logprob: -15.875038146972656

Token 463: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.16882812976837158
    2. '):' → logprob: -3.293828010559082
    3. ''):' → logprob: -3.793828010559082
    4. '':
' → logprob: -4.168828010559082
    5. ''):
' → logprob: -4.293828010559082
    6. ':' → logprob: -4.293828010559082
    7. ''' → logprob: -4.543828010559082
    8. '):
' → logprob: -4.668828010559082
    9. '']:' → logprob: -4.918828010559082
    10. ']:' → logprob: -4.918828010559082

Token 464: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004924546927213669
    2. ':
' → logprob: -5.879924774169922
    3. ':' → logprob: -7.004924774169922
    4. '                       ' → logprob: -7.004924774169922
    5. '               ' → logprob: -8.629924774169922
    6. '                           ' → logprob: -10.504924774169922
    7. '                  ' → logprob: -11.129924774169922
    8. ',' → logprob: -11.379924774169922
    9. ' =' → logprob: -11.629924774169922
    10. ' :
' → logprob: -11.754924774169922

Token 465: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.007109490688890219
    2. 'is' (adapté à ' is') → logprob: -5.007109642028809
    3. '                   ' → logprob: -7.882109642028809
    4. '                       ' → logprob: -11.382109642028809
    5. '               ' → logprob: -12.382109642028809
    6. '   ' → logprob: -15.132109642028809
    7. '           ' → logprob: -15.257109642028809
    8. ' ' → logprob: -15.507109642028809
    9. '                           ' → logprob: -16.382108688354492
    10. '                    ' → logprob: -16.507108688354492

Token 466: '_corr' (ID: 121608)
  Prédit: '_corr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_corr' → logprob: -5.872261317563243e-05
    2. 'corr' → logprob: -9.750059127807617
    3. '_' → logprob: -15.500059127807617
    4. '_cor' → logprob: -16.125059127807617
    5. '_curr' → logprob: -18.625059127807617
    6. ' corridor' → logprob: -18.875059127807617
    7. '```' → logprob: -18.875059127807617
    8. ' _' → logprob: -18.875059127807617
    9. '
' → logprob: -19.000059127807617
    10. '_COR' → logprob: -19.250059127807617

Token 467: 'idor' (ID: 19769)
  Prédit: 'idor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idor' → logprob: -0.3438614308834076
    2. '_corr' → logprob: -1.34386146068573
    3. 'or' → logprob: -4.9688615798950195
    4. 'id' → logprob: -5.2188615798950195
    5. '                   ' → logprob: -5.3438615798950195
    6. ' corridor' → logprob: -5.4688615798950195
    7. 'corr' → logprob: -6.4688615798950195
    8. 'orr' → logprob: -6.7188615798950195
    9. '   ' → logprob: -7.2188615798950195
    10. '[i' → logprob: -7.5938615798950195

Token 468: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. ' [' → logprob: -14.750000953674316
    3. '[' → logprob: -15.125000953674316
    4. '=' → logprob: -17.5
    5. '[j' → logprob: -18.0
    6. '[
' → logprob: -18.375
    7. '                   ' → logprob: -18.5
    8. '[I' → logprob: -18.5
    9. ' =' → logprob: -18.75
    10. '   ' → logprob: -18.75

Token 469: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0018154787831008434
    2. '[i' → logprob: -6.376815319061279
    3. ']' → logprob: -9.501815795898438
    4. '[' → logprob: -11.376815795898438
    5. ' ][' → logprob: -11.626815795898438
    6. '[j' → logprob: -11.751815795898438
    7. 'i' → logprob: -13.001815795898438
    8. ']=' → logprob: -13.626815795898438
    9. ']][' → logprob: -14.126815795898438
    10. '   ' → logprob: -14.126815795898438

Token 470: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.339278580620885e-06
    2. ' j' → logprob: -13.875001907348633
    3. ']' → logprob: -14.375001907348633
    4. 'True' → logprob: -15.375001907348633
    5. '[j' → logprob: -15.750001907348633
    6. '][' → logprob: -16.000001907348633
    7. '   ' → logprob: -16.750001907348633
    8. '
' → logprob: -16.750001907348633
    9. '1' → logprob: -17.125001907348633
    10. '```' → logprob: -17.375001907348633

Token 471: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0056155347265303135
    2. ']=' → logprob: -5.380615711212158
    3. '=' → logprob: -7.005615711212158
    4. ' ]' → logprob: -9.630615234375
    5. ' =' → logprob: -10.755615234375
    6. '[' → logprob: -14.505615234375
    7. '=True' → logprob: -15.005615234375
    8. ')' → logprob: -16.255615234375
    9. ']
' → logprob: -16.380615234375
    10. 'True' → logprob: -18.005615234375

Token 472: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023249322548508644
    2. ' =' → logprob: -3.773249387741089
    3. '=True' → logprob: -12.523249626159668
    4. '[' → logprob: -15.898249626159668
    5. '=

' → logprob: -17.27324867248535
    6. ']=' → logprob: -17.52324867248535
    7. '=
' → logprob: -17.52324867248535
    8. ']' → logprob: -17.89824867248535
    9. ' ' → logprob: -18.02324867248535
    10. '=true' → logprob: -19.14824867248535

Token 473: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00033546582562848926
    2. ' True' → logprob: -8.000335693359375
    3. '(True' → logprob: -19.375335693359375
    4. '=True' → logprob: -22.125335693359375
    5. '   ' → logprob: -22.500335693359375
    6. 'true' → logprob: -24.250335693359375
    7. 'Tr' → logprob: -24.625335693359375
    8. '1' → logprob: -24.875335693359375
    9. 'False' → logprob: -25.375335693359375
    10. 'TRUE' → logprob: -25.500335693359375

Token 474: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 475: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 476: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.313467264175415
    2. '       ' → logprob: -1.563467264175415
    3. 'from' → logprob: -1.563467264175415
    4. 'visited' → logprob: -1.938467264175415
    5. 'state' → logprob: -2.813467264175415
    6. 'start' → logprob: -3.188467264175415
    7. 'queue' → logprob: -4.063467025756836
    8. 'def' → logprob: -4.438467025756836
    9. 'initial' → logprob: -4.438467025756836
    10. '   ' → logprob: -5.063467025756836

Token 477: ' State' (ID: 5388)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.6471539735794067
    2. 'from' → logprob: -1.6471539735794067
    3. '#' → logprob: -2.022153854370117
    4. 'initial' → logprob: -2.647153854370117
    5. 'visited' → logprob: -3.022153854370117
    6. 'queue' → logprob: -4.147153854370117
    7. 'def' → logprob: -4.897153854370117
    8. '   ' → logprob: -5.647153854370117
    9. 'state' → logprob: -6.022153854370117
    10. '       ' → logprob: -6.772153854370117

Token 478: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16121535003185272
    2. '_' → logprob: -3.161215305328369
    3. '=' → logprob: -3.661215305328369
    4. '_space' → logprob: -3.661215305328369
    5. '_size' → logprob: -4.161215305328369
    6. ':' → logprob: -4.286215305328369
    7. 's' → logprob: -4.536215305328369
    8. ',' → logprob: -5.661215305328369
    9. ')' → logprob: -5.661215305328369
    10. 'space' → logprob: -6.411215305328369

Token 479: ' positions' (ID: 15897)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.577419102191925
    2. '(' → logprob: -1.2024190425872803
    3. 'from' → logprob: -2.9524190425872803
    4. ' ghosts' → logprob: -3.0774190425872803
    5. 'positions' → logprob: -4.952419281005859
    6. '(queue' → logprob: -5.202419281005859
    7. ' from' → logprob: -5.452419281005859
    8. ' positions' → logprob: -5.827419281005859
    9. '(start' → logprob: -5.952419281005859
    10. 'ghost' → logprob: -5.952419281005859

Token 480: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04479057341814041
    2. '=' → logprob: -3.544790506362915
    3. 's' → logprob: -4.794790744781494
    4. ',' → logprob: -5.669790744781494
    5. ' of' → logprob: -6.294790744781494
    6. '_states' → logprob: -7.794790744781494
    7. ')' → logprob: -7.919790744781494
    8. 'of' → logprob: -8.294790267944336
    9. 'states' → logprob: -9.544790267944336
    10. ':' → logprob: -10.044790267944336

Token 481: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.10337579250335693
    2. ' all' → logprob: -2.8533759117126465
    3. 'ghost' → logprob: -3.9783759117126465
    4. 'the' → logprob: -4.2283759117126465
    5. ' ghosts' → logprob: -5.6033759117126465
    6. 'n' → logprob: -6.3533759117126465
    7. ' the' → logprob: -6.4783759117126465
    8. 'each' → logprob: -8.603375434875488
    9. ' n' → logprob: -9.853375434875488
    10. ' each' → logprob: -11.728375434875488

Token 482: ' ghosts' (ID: 100279)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.16045910120010376
    2. ' ghosts' → logprob: -1.910459041595459
    3. ' ghost' → logprob: -8.410459518432617
    4. 'the' → logprob: -12.160459518432617
    5. 'gu' → logprob: -13.410459518432617
    6. 'Ghost' → logprob: -13.410459518432617
    7. ' the' → logprob: -13.785459518432617
    8. 'n' → logprob: -13.910459518432617
    9. ')' → logprob: -14.410459518432617
    10. ' n' → logprob: -15.285459518432617

Token 483: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021583328023552895
    2. ',' → logprob: -4.646583557128906
    3. '_states' → logprob: -5.521583557128906
    4. '_positions' → logprob: -6.521583557128906
    5. 's' → logprob: -6.896583557128906
    6. ')' → logprob: -6.896583557128906
    7. '=' → logprob: -7.021583557128906
    8. '   ' → logprob: -7.271583557128906
    9. '<|end|>' → logprob: -7.896583557128906
    10. ' ,' → logprob: -8.021583557128906

Token 484: 'tuple' (ID: 52834)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0863078311085701
    2. ',' → logprob: -4.336308002471924
    3. ' tuples' → logprob: -4.461308002471924
    4. 'tuple' → logprob: -4.711308002471924
    5. ' as' → logprob: -5.086308002471924
    6. ')]' → logprob: -5.086308002471924
    7. ' tuple' → logprob: -5.586308002471924
    8. '))' → logprob: -5.711308002471924
    9. 'a' → logprob: -5.961308002471924
    10. ' )' → logprob: -5.961308002471924

Token 485: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007220515049993992
    2. ' of' → logprob: -6.00722074508667
    3. 's' → logprob: -6.00722074508667
    4. '(' → logprob: -7.00722074508667
    5. ',' → logprob: -7.25722074508667
    6. '[' → logprob: -8.882220268249512
    7. ' )' → logprob: -8.882220268249512
    8. '_of' → logprob: -9.632220268249512
    9. '(s' → logprob: -9.632220268249512
    10. 'of' → logprob: -9.632220268249512

Token 486: ' coordinates' (ID: 27933)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.2799326181411743
    2. '(i' → logprob: -1.5299326181411743
    3. ' (' → logprob: -2.1549324989318848
    4. '(h' → logprob: -2.6549324989318848
    5. ' tuples' → logprob: -2.6549324989318848
    6. '(' → logprob: -3.0299324989318848
    7. 'coordinates' → logprob: -3.1549324989318848
    8. '(w' → logprob: -3.1549324989318848
    9. '(n' → logprob: -3.2799324989318848
    10. '(x' → logprob: -4.279932498931885

Token 487: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016126219183206558
    2. 's' → logprob: -4.1411261558532715
    3. ')s' → logprob: -10.26612663269043
    4. ',' → logprob: -10.76612663269043
    5. ' )' → logprob: -10.76612663269043
    6. '),' → logprob: -11.89112663269043
    7. ')
' → logprob: -13.64112663269043
    8. ')**' → logprob: -13.76612663269043
    9. '   ' → logprob: -14.01612663269043
    10. ',)' → logprob: -14.39112663269043

Token 488: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2299736887216568
    2. ',' → logprob: -2.104973793029785
    3. ')' → logprob: -3.479973793029785
    4. '   ' → logprob: -4.104973793029785
    5. '        
' → logprob: -4.854973793029785
    6. 'state' → logprob: -5.479973793029785
    7. '
' → logprob: -5.729973793029785
    8. ',
' → logprob: -5.729973793029785
    9. '    
' → logprob: -6.104973793029785
    10. '#' → logprob: -6.604973793029785

Token 489: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49939677119255066
    2. '   ' → logprob: -1.624396800994873
    3. 'state' → logprob: -2.124396800994873
    4. ' state' → logprob: -4.249396800994873
    5. 'states' → logprob: -4.749396800994873
    6. ' states' → logprob: -4.874396800994873
    7. 'start' → logprob: -5.124396800994873
    8. ' initial' → logprob: -5.124396800994873
    9. 'initial' → logprob: -5.124396800994873
    10. 'current' → logprob: -5.249396800994873

Token 490: ' We' (ID: 1416)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.2850147485733032
    2. 'initial' → logprob: -2.6600146293640137
    3. 'visited' → logprob: -2.6600146293640137
    4. 'from' → logprob: -3.2850146293640137
    5. '   ' → logprob: -3.5350146293640137
    6. 'queue' → logprob: -3.9100146293640137
    7. 'state' → logprob: -4.785014629364014
    8. ' start' → logprob: -5.285014629364014
    9. '#' → logprob: -6.410014629364014
    10. ' initial' → logprob: -6.660014629364014

Token 491: ' want' (ID: 1682)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4602632224559784
    2. '=' → logprob: -1.4602632522583008
    3. '   ' → logprob: -3.960263252258301
    4. 'continue' → logprob: -3.960263252258301
    5. ' need' → logprob: -3.960263252258301
    6. ')' → logprob: -4.335263252258301
    7. 'need' → logprob: -4.710263252258301
    8. ' continue' → logprob: -4.835263252258301
    9. '#' → logprob: -5.210263252258301
    10. ' want' → logprob: -5.335263252258301

Token 492: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.42931708693504333
    2. ' to' → logprob: -1.0543171167373657
    3. '   ' → logprob: -7.554316997528076
    4. 'def' → logprob: -10.179317474365234
    5. ')' → logprob: -11.929317474365234
    6. 't' → logprob: -11.929317474365234
    7. '_to' → logprob: -12.054317474365234
    8. '    ' → logprob: -12.179317474365234
    9. '
' → logprob: -12.304317474365234
    10. ' a' → logprob: -12.429317474365234

Token 493: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.7032680511474609
    2. 'search' → logprob: -1.203268051147461
    3. 'expl' → logprob: -2.203268051147461
    4. 'check' → logprob: -3.953268051147461
    5. 'start' → logprob: -4.578268051147461
    6. ' find' → logprob: -4.578268051147461
    7. 'queue' → logprob: -4.828268051147461
    8. 'import' → logprob: -5.078268051147461
    9. 'visit' → logprob: -5.453268051147461
    10. 'def' → logprob: -5.453268051147461

Token 494: ' minimal' (ID: 19957)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.0682758092880249
    2. ' a' → logprob: -3.4432759284973145
    3. 'the' → logprob: -3.4432759284973145
    4. ' shortest' → logprob: -7.4432759284973145
    5. 'a' → logprob: -7.8182759284973145
    6. '<|end|>' → logprob: -7.9432759284973145
    7. ' an' → logprob: -8.318275451660156
    8. ' states' → logprob: -9.443275451660156
    9. ' steps' → logprob: -9.693275451660156
    10. ' minimal' → logprob: -9.818275451660156

Token 495: ' steps' (ID: 10331)
  Prédit: ' steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' steps' → logprob: -0.07823541015386581
    2. 'steps' → logprob: -2.953235387802124
    3. ' number' → logprob: -4.953235626220703
    4. ' distance' → logprob: -5.203235626220703
    5. 'moves' → logprob: -5.703235626220703
    6. ' moves' → logprob: -6.078235626220703
    7. 'distance' → logprob: -6.828235626220703
    8. '_steps' → logprob: -6.953235626220703
    9. '_moves' → logprob: -7.203235626220703
    10. ' state' → logprob: -7.828235626220703

Token 496: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.9725273251533508
    2. '<|end|>' → logprob: -1.097527265548706
    3. ' ' → logprob: -1.847527265548706
    4. ',' → logprob: -3.722527265548706
    5. '<|end|>' → logprob: -4.097527503967285
    6. ')' → logprob: -4.097527503967285
    7. '   ' → logprob: -4.347527503967285
    8. ' (' → logprob: -4.472527503967285
    9. ' for' → logprob: -4.597527503967285
    10. '    ' → logprob: -5.472527503967285

Token 497: ' move' (ID: 5275)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.5656819939613342
    2. ' reach' → logprob: -0.9406819939613342
    3. 'all' → logprob: -4.8156819343566895
    4. 'have' → logprob: -5.1906819343566895
    5. 'solve' → logprob: -5.3156819343566895
    6. 'get' → logprob: -5.5656819343566895
    7. 'visit' → logprob: -5.6906819343566895
    8. 'move' → logprob: -5.6906819343566895
    9. 'return' → logprob: -6.3156819343566895
    10. ' move' → logprob: -6.5656819343566895

Token 498: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.16132067143917084
    2. 'all' → logprob: -1.911320686340332
    3. ' ghosts' → logprob: -8.161320686340332
    4. ' the' → logprob: -8.411320686340332
    5. 'the' → logprob: -9.286320686340332
    6. ' to' → logprob: -9.411320686340332
    7. ' them' → logprob: -10.036320686340332
    8. ',' → logprob: -10.036320686340332
    9. ' forward' → logprob: -10.286320686340332
    10. ' ,' → logprob: -10.286320686340332

Token 499: ' ghosts' (ID: 100279)
  Prédit: ' ghosts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ghosts' → logprob: -0.24230335652828217
    2. 'ghost' → logprob: -1.6173033714294434
    3. ' ghost' → logprob: -4.117303371429443
    4. ')' → logprob: -7.992303371429443
    5. ' Ghost' → logprob: -10.242302894592285
    6. 'Ghost' → logprob: -10.742302894592285
    7. ' positions' → logprob: -11.367302894592285
    8. ' )' → logprob: -11.617302894592285
    9. 'tokens' → logprob: -11.992302894592285
    10. ' ' → logprob: -12.242302894592285

Token 500: ' from' (ID: 591)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' states' → logprob: -1.2077546119689941
    2. 'states' → logprob: -1.9577546119689941
    3. 'from' → logprob: -2.207754611968994
    4. ' to' → logprob: -2.332754611968994
    5. ' from' → logprob: -2.332754611968994
    6. ',' → logprob: -2.707754611968994
    7. '   ' → logprob: -3.082754611968994
    8. 'state' → logprob: -3.207754611968994
    9. '       ' → logprob: -3.707754611968994
    10. ')' → logprob: -3.707754611968994

Token 501: ' ghosts' (ID: 100279)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.7086862325668335
    2. 'their' → logprob: -0.9586862325668335
    3. ' ghosts' → logprob: -2.583686351776123
    4. ' their' → logprob: -3.458686351776123
    5. 'initial' → logprob: -5.083686351776123
    6. 'start' → logprob: -5.208686351776123
    7. 'starting' → logprob: -6.583686351776123
    8. 'current' → logprob: -6.958686351776123
    9. ' initial' → logprob: -6.958686351776123
    10. 'the' → logprob: -7.208686351776123

Token 502: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.01913490891456604
    2. '_positions' → logprob: -4.144134998321533
    3. ''_' → logprob: -6.519134998321533
    4. 'pos' → logprob: -6.894134998321533
    5. 'positions' → logprob: -8.019134521484375
    6. '_' → logprob: -9.269134521484375
    7. '   ' → logprob: -9.519134521484375
    8. ' positions' → logprob: -10.894134521484375
    9. ' _' → logprob: -10.894134521484375
    10. '```' → logprob: -11.144134521484375

Token 503: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.007872186601161957
    2. 'to' → logprob: -5.632872104644775
    3. ')' → logprob: -5.882872104644775
    4. ',' → logprob: -7.757872104644775
    5. '_to' → logprob: -8.257872581481934
    6. 's' → logprob: -8.757872581481934
    7. '<|end|>' → logprob: -9.132872581481934
    8. ' states' → logprob: -9.257872581481934
    9. ' )' → logprob: -9.257872581481934
    10. ' ' → logprob: -9.507872581481934

Token 504: ' targets' (ID: 22836)
  Prédit: 'targets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'targets' → logprob: -0.06330528110265732
    2. ' targets' → logprob: -2.813305377960205
    3. 'tuple' → logprob: -6.938305377960205
    4. ' tuple' → logprob: -8.188304901123047
    5. '   ' → logprob: -10.188304901123047
    6. 'target' → logprob: -10.813304901123047
    7. ' ' → logprob: -12.188304901123047
    8. '
' → logprob: -12.563304901123047
    9. 'their' → logprob: -12.563304901123047
    10. 'positions' → logprob: -12.688304901123047

Token 505: '_pos' (ID: 14692)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -1.1380603313446045
    2. '_states' → logprob: -1.3880603313446045
    3. '_pos' → logprob: -1.7630603313446045
    4. '_' → logprob: -1.8880603313446045
    5. '_positions' → logprob: -2.7630603313446045
    6. ')' → logprob: -3.8880603313446045
    7. ' _' → logprob: -4.763060569763184
    8. '.' → logprob: -5.763060569763184
    9. ':' → logprob: -6.138060569763184
    10. '   ' → logprob: -6.263060569763184

Token 506: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8236961960792542
    2. '       ' → logprob: -1.1986961364746094
    3. ',' → logprob: -2.4486961364746094
    4. '.' → logprob: -2.6986961364746094
    5. '<|end|>' → logprob: -3.3236961364746094
    6. ',
' → logprob: -3.9486961364746094
    7. ')' → logprob: -4.448696136474609
    8. '   ' → logprob: -4.573696136474609
    9. '#' → logprob: -4.948696136474609
    10. ':' → logprob: -4.948696136474609

Token 507: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1303129643201828
    2. '
' → logprob: -2.255312919616699
    3. ',' → logprob: -5.255312919616699
    4. '        
' → logprob: -5.630312919616699
    5. '   ' → logprob: -5.630312919616699
    6. '.' → logprob: -6.630312919616699
    7. ',
' → logprob: -7.130312919616699
    8. ')' → logprob: -7.755312919616699
    9. '#' → logprob: -7.880312919616699
    10. '<|end|>' → logprob: -8.0053129196167

Token 508: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8217435479164124
    2. '       ' → logprob: -1.0717434883117676
    3. '   ' → logprob: -1.8217434883117676
    4. '    
' → logprob: -4.321743488311768
    5. '        
' → logprob: -4.321743488311768
    6. ' 
' → logprob: -4.946743488311768
    7. 'visited' → logprob: -5.196743488311768
    8. 'queue' → logprob: -5.696743488311768
    9. '  
' → logprob: -5.696743488311768
    10. ' queue' → logprob: -5.946743488311768

Token 509: ' BFS' (ID: 190016)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.40266862511634827
    2. ' visited' → logprob: -2.2776687145233154
    3. 'queue' → logprob: -2.7776687145233154
    4. '   ' → logprob: -3.2776687145233154
    5. 'state' → logprob: -3.2776687145233154
    6. '
' → logprob: -3.7776687145233154
    7. 'start' → logprob: -3.7776687145233154
    8. ' queue' → logprob: -4.152668476104736
    9. '       ' → logprob: -5.402668476104736
    10. ' start' → logprob: -5.527668476104736

Token 510: ' over' (ID: 1072)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.4435994625091553
    2. '   ' → logprob: -1.6935994625091553
    3. ' queue' → logprob: -1.6935994625091553
    4. '_queue' → logprob: -1.9435994625091553
    5. '(queue' → logprob: -2.1935994625091553
    6. '
' → logprob: -2.3185994625091553
    7. '       ' → logprob: -3.5685994625091553
    8. ':' → logprob: -5.318599700927734
    9. ')' → logprob: -6.943599700927734
    10. '	queue' → logprob: -6.943599700927734

Token 511: ' states' (ID: 9407)
  Prédit: ' states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.8396860957145691
    2. 'states' → logprob: -0.8396860957145691
    3. 'the' → logprob: -2.714686155319214
    4. ' the' → logprob: -3.339686155319214
    5. 'positions' → logprob: -4.714685916900635
    6. 'state' → logprob: -5.089685916900635
    7. ' tuples' → logprob: -5.589685916900635
    8. 'ghost' → logprob: -6.089685916900635
    9. 'all' → logprob: -6.214685916900635
    10. ' positions' → logprob: -6.214685916900635

Token 512: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46069061756134033
    2. '   ' → logprob: -1.3356906175613403
    3. '       ' → logprob: -2.335690498352051
    4. ' queue' → logprob: -6.335690498352051
    5. '    
' → logprob: -6.460690498352051
    6. ',' → logprob: -6.460690498352051
    7. 'queue' → logprob: -6.585690498352051
    8. ',
' → logprob: -7.585690498352051
    9. '        
' → logprob: -7.835690498352051
    10. ':' → logprob: -7.835690498352051

Token 513: ' at' (ID: 540)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.23032644391059875
    2. '   ' → logprob: -2.7303264141082764
    3. 'queue' → logprob: -2.7303264141082764
    4. '       ' → logprob: -3.3553264141082764
    5. ' visited' → logprob: -3.6053264141082764
    6. 'visited' → logprob: -4.4803266525268555
    7. ' start' → logprob: -6.9803266525268555
    8. '    ' → logprob: -8.855326652526855
    9. 'start' → logprob: -8.980326652526855
    10. '
' → logprob: -9.105326652526855

Token 514: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.46115630865097046
    2. ' each' → logprob: -2.0861563682556152
    3. 'most' → logprob: -2.3361563682556152
    4. 'least' → logprob: -3.0861563682556152
    5. ' most' → logprob: -3.2111563682556152
    6. ' least' → logprob: -3.9611563682556152
    7. 'first' → logprob: -4.836156368255615
    8. 'which' → logprob: -5.336156368255615
    9. ' which' → logprob: -5.461156368255615
    10. ' first' → logprob: -5.711156368255615

Token 515: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.02445490099489689
    2. 'step' → logprob: -4.0244550704956055
    3. ' state' → logprob: -6.3994550704956055
    4. ' iteration' → logprob: -6.6494550704956055
    5. ' level' → logprob: -6.8994550704956055
    6. 'state' → logprob: -6.8994550704956055
    7. ' move' → logprob: -8.399455070495605
    8. 'level' → logprob: -8.524455070495605
    9. 'iteration' → logprob: -8.774455070495605
    10. ' BFS' → logprob: -8.774455070495605

Token 516: ' each' (ID: 2454)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5247843861579895
    2. ':' → logprob: -1.2747843265533447
    3. ' ,' → logprob: -2.7747843265533447
    4. '   ' → logprob: -3.5247843265533447
    5. ' :' → logprob: -4.899784564971924
    6. '<|end|>' → logprob: -5.024784564971924
    7. '       ' → logprob: -5.524784564971924
    8. ' we' → logprob: -5.524784564971924
    9. ')' → logprob: -5.774784564971924
    10. '<|end|>' → logprob: -5.899784564971924

Token 517: ' ghost' (ID: 33168)
  Prédit: ' ghost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ghost' → logprob: -0.11629839241504669
    2. 'ghost' → logprob: -2.4912984371185303
    3. '_' → logprob: -4.491298198699951
    4. ' possible' → logprob: -5.491298198699951
    5. ' of' → logprob: -5.866298198699951
    6. ' agent' → logprob: -6.491298198699951
    7. ')' → logprob: -6.616298198699951
    8. ' token' → logprob: -7.116298198699951
    9. 'possible' → logprob: -7.366298198699951
    10. ' position' → logprob: -7.616298198699951

Token 518: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.010258285328745842
    2. 'can' → logprob: -4.635258197784424
    3. ' may' → logprob: -8.260258674621582
    4. '<|end|>' → logprob: -9.260258674621582
    5. 's' → logprob: -10.510258674621582
    6. '_can' → logprob: -10.635258674621582
    7. '	can' → logprob: -10.760258674621582
    8. ' has' → logprob: -10.885258674621582
    9. ',' → logprob: -11.760258674621582
    10. '<|end|>' → logprob: -11.760258674621582

Token 519: ' stay' (ID: 5092)
  Prédit: ' move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.15055063366889954
    2. 'move' → logprob: -2.025550603866577
    3. ' either' → logprob: -5.400550842285156
    4. ' stay' → logprob: -6.400550842285156
    5. 'either' → logprob: -7.525550842285156
    6. 'stay' → logprob: -8.275550842285156
    7. '	move' → logprob: -8.525550842285156
    8. 'choose' → logprob: -8.775550842285156
    9. '   ' → logprob: -9.025550842285156
    10. ' ' → logprob: -9.275550842285156

Token 520: ' or' (ID: 503)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9812212586402893
    2. ' or' → logprob: -1.1062211990356445
    3. 'in' → logprob: -1.7312211990356445
    4. 'or' → logprob: -2.9812211990356445
    5. ',' → logprob: -4.2312211990356445
    6. ' ' → logprob: -4.2312211990356445
    7. ' put' → logprob: -4.7312211990356445
    8. '<|end|>' → logprob: -4.8562211990356445
    9. 'put' → logprob: -5.4812211990356445
    10. '  ' → logprob: -5.4812211990356445

Token 521: ' move' (ID: 5275)
  Prédit: ' move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.4740873873233795
    2. 'move' → logprob: -0.9740873575210571
    3. '	move' → logprob: -12.224087715148926
    4. 'm' → logprob: -12.849087715148926
    5. '_move' → logprob: -14.224087715148926
    6. '   ' → logprob: -14.724087715148926
    7. 'mov' → logprob: -14.724087715148926
    8. '.move' → logprob: -14.849087715148926
    9. ' ' → logprob: -15.224087715148926
    10. 'moves' → logprob: -15.599087715148926

Token 522: ' one' (ID: 1001)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 523: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.3553215563297272
    2. '<|end|>' → logprob: -1.4803215265274048
    3. ' ' → logprob: -3.6053216457366943
    4. ' of' → logprob: -5.230321407318115
    5. ' (' → logprob: -5.230321407318115
    6. 'step' → logprob: -5.480321407318115
    7. ' space' → logprob: -5.480321407318115
    8. '    ' → logprob: -5.605321407318115
    9. ' )' → logprob: -5.605321407318115
    10. ')' → logprob: -5.605321407318115

Token 524: ' to' (ID: 316)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.7691026329994202
    2. ',' → logprob: -0.8941026329994202
    3. ' ' → logprob: -2.8941025733947754
    4. 's' → logprob: -3.7691025733947754
    5. '   ' → logprob: -4.269102573394775
    6. '       ' → logprob: -5.269102573394775
    7. '    ' → logprob: -5.644102573394775
    8. '(s' → logprob: -5.644102573394775
    9. ' s' → logprob: -5.769102573394775
    10. '  ' → logprob: -5.894102573394775

Token 525: ' an' (ID: 448)
  Prédit: ' one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -1.2429229021072388
    2. 'any' → logprob: -1.3679229021072388
    3. ' any' → logprob: -1.6179229021072388
    4. 'adj' → logprob: -2.367922782897949
    5. 'one' → logprob: -3.242922782897949
    6. 'a' → logprob: -3.742922782897949
    7. ' a' → logprob: -3.742922782897949
    8. 'each' → logprob: -3.867922782897949
    9. ' an' → logprob: -4.242922782897949
    10. ' adjacent' → logprob: -4.242922782897949

Token 526: ' adjacent' (ID: 39069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.14438889920711517
    2. ' adjacent' → logprob: -2.0193889141082764
    3. 'empty' → logprob: -7.144388675689697
    4. 'neighbor' → logprob: -8.144389152526855
    5. 'direction' → logprob: -9.019389152526855
    6. 'available' → logprob: -9.144389152526855
    7. '```' → logprob: -9.644389152526855
    8. 'is' → logprob: -10.019389152526855
    9. ' of' → logprob: -10.019389152526855
    10. 'ad' → logprob: -10.394389152526855

Token 527: ' corridor' (ID: 92467)
  Prédit: ' cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cell' → logprob: -0.25055861473083496
    2. '<|end|>' → logprob: -2.000558614730835
    3. 'cell' → logprob: -3.750558614730835
    4. ')' → logprob: -4.000558853149414
    5. ',' → logprob: -4.375558853149414
    6. 'space' → logprob: -5.125558853149414
    7. ' (' → logprob: -5.250558853149414
    8. ' space' → logprob: -5.250558853149414
    9. ' ' → logprob: -6.000558853149414
    10. ' )' → logprob: -6.000558853149414

Token 528: ' cell' (ID: 4206)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.133811354637146
    2. ',' → logprob: -3.2588114738464355
    3. 's' → logprob: -3.2588114738464355
    4. '<|end|>' → logprob: -3.5088114738464355
    5. '        
' → logprob: -5.2588114738464355
    6. '   ' → logprob: -6.3838114738464355
    7. '<|end|>' → logprob: -6.6338114738464355
    8. '
' → logprob: -6.6338114738464355
    9. '(s' → logprob: -6.8838114738464355
    10. ' ' → logprob: -7.2588114738464355

Token 529: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021948307752609253
    2. '
' → logprob: -4.521948337554932
    3. ',' → logprob: -5.646948337554932
    4. '        
' → logprob: -5.896948337554932
    5. '<|end|>' → logprob: -6.021948337554932
    6. '   ' → logprob: -7.521948337554932
    7. 's' → logprob: -8.771947860717773
    8. '#' → logprob: -8.896947860717773
    9. '.' → logprob: -8.896947860717773
    10. ',
' → logprob: -9.021947860717773

Token 530: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01423238031566143
    2. ',' → logprob: -5.139232158660889
    3. '<|end|>' → logprob: -5.639232158660889
    4. '   ' → logprob: -6.389232158660889
    5. '        
' → logprob: -6.889232158660889
    6. '.' → logprob: -8.264232635498047
    7. '#' → logprob: -8.514232635498047
    8. ')' → logprob: -8.639232635498047
    9. '
' → logprob: -8.639232635498047
    10. ' ' → logprob: -8.889232635498047

Token 531: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09010419994592667
    2. '
' → logprob: -3.340104103088379
    3. ' 
' → logprob: -4.465104103088379
    4. '        
' → logprob: -4.840104103088379
    5. '   ' → logprob: -5.215104103088379
    6. ' states' → logprob: -5.340104103088379
    7. 'states' → logprob: -5.590104103088379
    8. 'queue' → logprob: -5.840104103088379
    9. ' visited' → logprob: -6.340104103088379
    10. 'visited' → logprob: -6.340104103088379

Token 532: ' Conditions' (ID: 39333)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.9828912615776062
    2. 'queue' → logprob: -1.357891321182251
    3. 'from' → logprob: -2.482891321182251
    4. ' from' → logprob: -2.482891321182251
    5. ' visited' → logprob: -2.482891321182251
    6. ' queue' → logprob: -3.107891321182251
    7. '   ' → logprob: -3.232891321182251
    8. '       ' → logprob: -4.357891082763672
    9. '
' → logprob: -5.357891082763672
    10. '#' → logprob: -5.732891082763672

Token 533: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24791868031024933
    2. ' for' → logprob: -2.1229186058044434
    3. ' =' → logprob: -2.9979186058044434
    4. '   ' → logprob: -4.247918605804443
    5. ' are' → logprob: -4.497918605804443
    6. ':
' → logprob: -4.997918605804443
    7. '=' → logprob: -4.997918605804443
    8. 'for' → logprob: -4.997918605804443
    9. ' to' → logprob: -7.622918605804443
    10. ',' → logprob: -7.747918605804443

Token 534: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008543417789041996
    2. '#' → logprob: -6.133543491363525
    3. ' #' → logprob: -6.383543491363525
    4. '        
' → logprob: -6.508543491363525
    5. '           ' → logprob: -7.508543491363525
    6. '        ' → logprob: -7.508543491363525
    7. '               ' → logprob: -7.883543491363525
    8. ' for' → logprob: -8.133543014526367
    9. '   ' → logprob: -8.508543014526367
    10. ' ' → logprob: -8.633543014526367

Token 535: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1291630119085312
    2. ' #' → logprob: -2.6291630268096924
    3. '#' (adapté à ' #') → logprob: -3.2541630268096924
    4. '               ' → logprob: -5.754162788391113
    5. '           ' → logprob: -6.379162788391113
    6. '        ' → logprob: -6.504162788391113
    7. '   ' → logprob: -7.254162788391113
    8. '                   ' → logprob: -7.379162788391113
    9. '        
' → logprob: -7.379162788391113
    10. ' for' → logprob: -7.629162788391113

Token 536: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2522101402282715
    2. '       ' → logprob: -1.3772101402282715
    3. ' #' → logprob: -1.3772101402282715
    4. '1' → logprob: -3.2522101402282715
    5. '        ' → logprob: -3.3772101402282715
    6. ' ' → logprob: -3.6272101402282715
    7. ' for' → logprob: -3.7522101402282715
    8. ' Each' → logprob: -4.6272101402282715
    9. '               ' → logprob: -4.7522101402282715
    10. 'Each' → logprob: -4.7522101402282715

Token 537: ' No' (ID: 3004)
  Prédit: ' No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' No' → logprob: -0.7680242657661438
    2. 'No' → logprob: -1.893024206161499
    3. ' Ghost' → logprob: -2.643024206161499
    4. ' All' → logprob: -2.893024206161499
    5. 'Each' → logprob: -2.893024206161499
    6. 'All' → logprob: -3.018024206161499
    7. 'Ghost' → logprob: -3.393024206161499
    8. ' Each' → logprob: -3.393024206161499
    9. ' ghosts' → logprob: -3.768024206161499
    10. 'At' → logprob: -4.143024444580078

Token 538: ' two' (ID: 1920)
  Prédit: ' two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.01428926456719637
    2. 'two' → logprob: -4.764289379119873
    3. ' ghost' → logprob: -5.264289379119873
    4. 'ghost' → logprob: -8.889288902282715
    5. ' overlap' → logprob: -9.139288902282715
    6. ' ghosts' → logprob: -9.514288902282715
    7. ' ' → logprob: -10.139288902282715
    8. 't' → logprob: -10.389288902282715
    9. ' overlapping' → logprob: -10.514288902282715
    10. ' collisions' → logprob: -10.764288902282715

Token 539: ' ghosts' (ID: 100279)
  Prédit: ' ghosts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ghosts' → logprob: -0.016655920073390007
    2. 'ghost' → logprob: -4.391655921936035
    3. ' ghost' → logprob: -5.516655921936035
    4. ' adjacent' → logprob: -10.391655921936035
    5. ' ' → logprob: -10.516655921936035
    6. ' Ghost' → logprob: -11.766655921936035
    7. 'Ghost' → logprob: -11.766655921936035
    8. ' ' → logprob: -11.766655921936035
    9. '   ' → logprob: -12.141655921936035
    10. ' spaces' → logprob: -12.266655921936035

Token 540: ' occupy' (ID: 89046)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.11386208981275558
    2. ' occupy' → logprob: -2.4888620376586914
    3. ' are' → logprob: -4.613862037658691
    4. ' ' → logprob: -5.488862037658691
    5. ' may' → logprob: -6.238862037658691
    6. 'occup' → logprob: -6.238862037658691
    7. ' move' → logprob: -6.613862037658691
    8. ' at' → logprob: -6.988862037658691
    9. ' of' → logprob: -7.238862037658691
    10. ' in' → logprob: -7.488862037658691

Token 541: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.005964226555079222
    2. 'the' → logprob: -5.130964279174805
    3. ' same' → logprob: -10.755964279174805
    4. ' ' → logprob: -11.630964279174805
    5. '  ' → logprob: -13.130964279174805
    6. '   ' → logprob: -13.255964279174805
    7. '	the' → logprob: -14.505964279174805
    8. 'same' → logprob: -14.755964279174805
    9. '<|end|>' → logprob: -15.380964279174805
    10. '```' → logprob: -15.755964279174805

Token 542: ' same' (ID: 2684)
  Prédit: ' same'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' same' → logprob: -0.16026119887828827
    2. 'same' → logprob: -1.9102611541748047
    3. ' ' → logprob: -11.410261154174805
    4. ' ' → logprob: -11.910261154174805
    5. 'space' → logprob: -12.160261154174805
    6. '_same' → logprob: -12.785261154174805
    7. ' space' → logprob: -13.285261154174805
    8. ' samme' → logprob: -13.660261154174805
    9. '```' → logprob: -13.660261154174805
    10. 's' → logprob: -13.910261154174805

Token 543: ' cell' (ID: 4206)
  Prédit: ' cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cell' → logprob: -0.09957516193389893
    2. ' position' → logprob: -3.0995750427246094
    3. ' space' → logprob: -3.5995750427246094
    4. ' _' → logprob: -4.849575042724609
    5. ' ' → logprob: -5.474575042724609
    6. 'cell' → logprob: -5.724575042724609
    7. '_' → logprob: -5.849575042724609
    8. 'position' → logprob: -7.099575042724609
    9. ' 
' → logprob: -7.224575042724609
    10. 'space' → logprob: -7.474575042724609

Token 544: ' after' (ID: 1934)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 545: ' move' (ID: 5275)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5968002676963806
    2. ' move' → logprob: -1.5968003273010254
    3. 'a' → logprob: -1.7218003273010254
    4. 'move' → logprob: -2.9718003273010254
    5. 'moves' → logprob: -4.721800327301025
    6. ' moves' → logprob: -6.096800327301025
    7. ' movement' → logprob: -6.096800327301025
    8. 'movement' → logprob: -6.221800327301025
    9. ' the' → logprob: -7.471800327301025
    10. 'moving' → logprob: -8.221799850463867

Token 546: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5269596576690674
    2. '<|end|>' → logprob: -1.4019596576690674
    3. '
' → logprob: -2.6519596576690674
    4. ',' → logprob: -3.2769596576690674
    5. '#' → logprob: -4.276959419250488
    6. ',
' → logprob: -4.526959419250488
    7. '  
' → logprob: -5.151959419250488
    8. '           ' → logprob: -5.151959419250488
    9. '<|end|>' → logprob: -5.401959419250488
    10. ' 
' → logprob: -5.901959419250488

Token 547: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3176478445529938
    2. '       ' → logprob: -1.3176478147506714
    3. '           ' → logprob: -6.817647933959961
    4. ' #' → logprob: -6.942647933959961
    5. '<|end|>' → logprob: -7.067647933959961
    6. ',' → logprob: -7.317647933959961
    7. '               ' → logprob: -8.317647933959961
    8. '   ' → logprob: -8.817647933959961
    9. ' ' → logprob: -9.442647933959961
    10. '<|end|>' → logprob: -9.692647933959961

Token 548: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5778176188468933
    2. '       ' → logprob: -0.8278176188468933
    3. '<|end|>' → logprob: -7.077817440032959
    4. ' #' → logprob: -7.577817440032959
    5. '           ' → logprob: -8.827817916870117
    6. ',' → logprob: -8.952817916870117
    7. '   ' → logprob: -9.577817916870117
    8. '<|end|>' → logprob: -10.077817916870117
    9. ' ' → logprob: -10.577817916870117
    10. ' or' → logprob: -11.077817916870117

Token 549: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08056347072124481
    2. '       ' → logprob: -2.580563545227051
    3. ' #' → logprob: -6.705563545227051
    4. '           ' → logprob: -8.70556354522705
    5. ' ' → logprob: -9.33056354522705
    6. '   ' → logprob: -9.58056354522705
    7. '-' → logprob: -10.33056354522705
    8. '               ' → logprob: -10.45556354522705
    9. '
' → logprob: -11.33056354522705
    10. ',' → logprob: -11.33056354522705

Token 550: ' No' (ID: 3004)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.15412300825119019
    2. ' No' → logprob: -2.154123067855835
    3. 'Ghost' → logprob: -4.029122829437256
    4. ' Ghost' → logprob: -6.029122829437256
    5. '#' → logprob: -6.779122829437256
    6. ' ghosts' → logprob: -6.904122829437256
    7. 'Positions' → logprob: -7.029122829437256
    8. 'They' → logprob: -7.029122829437256
    9. 'Moves' → logprob: -7.279122829437256
    10. ' no' → logprob: -7.654122829437256

Token 551: ' pair' (ID: 10610)
  Prédit: ' two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.8001532554626465
    2. 'two' → logprob: -1.3001532554626465
    3. ' ghost' → logprob: -1.8001532554626465
    4. 'ghost' → logprob: -2.3001532554626465
    5. 't' → logprob: -5.9251532554626465
    6. ' ' → logprob: -6.0501532554626465
    7. 'swap' → logprob: -6.1751532554626465
    8. ' swapping' → logprob: -6.4251532554626465
    9. ' swap' → logprob: -6.9251532554626465
    10. '
' → logprob: -7.4251532554626465

Token 552: ' swap' (ID: 25489)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.019770802929997444
    2. 'wise' → logprob: -4.519770622253418
    3. 'of' → logprob: -6.019770622253418
    4. '   ' → logprob: -6.269770622253418
    5. ' (' → logprob: -6.644770622253418
    6. '(' → logprob: -7.769770622253418
    7. ' ' → logprob: -7.894770622253418
    8. ')' → logprob: -8.019770622253418
    9. '<|end|>' → logprob: -8.019770622253418
    10. '  ' → logprob: -8.644770622253418

Token 553: ' positions' (ID: 15897)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8682006001472473
    2. ')' → logprob: -1.7432005405426025
    3. '   ' → logprob: -2.4932005405426025
    4. '           ' → logprob: -2.8682005405426025
    5. ',' → logprob: -2.9932005405426025
    6. 's' → logprob: -3.4932005405426025
    7. ' of' → logprob: -3.9932005405426025
    8. '_positions' → logprob: -4.118200778961182
    9. '               ' → logprob: -4.118200778961182
    10. ' positions' → logprob: -4.368200778961182

Token 554: ' in' (ID: 306)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.855173647403717
    2. '       ' → logprob: -0.855173647403717
    3. '        
' → logprob: -2.4801735877990723
    4. '\' → logprob: -4.230173587799072
    5. ' 
' → logprob: -4.230173587799072
    6. '<|end|>' → logprob: -4.730173587799072
    7. '  
' → logprob: -4.980173587799072
    8. '\n' → logprob: -4.980173587799072
    9. ',' → logprob: -5.730173587799072
    10. '    
' → logprob: -6.355173587799072

Token 555: ' one' (ID: 1001)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8489556908607483
    2. 'the' → logprob: -1.3489556312561035
    3. 'one' → logprob: -1.5989556312561035
    4. 'two' → logprob: -3.5989556312561035
    5. ' a' → logprob: -3.7239556312561035
    6. 'con' → logprob: -3.8489556312561035
    7. ' the' → logprob: -4.3489556312561035
    8. ' one' → logprob: -4.7239556312561035
    9. 'moves' → logprob: -5.3489556312561035
    10. ' two' → logprob: -5.7239556312561035

Token 556: ' step' (ID: 5983)
  Prédit: ' move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.324075847864151
    2. ' step' → logprob: -1.3240758180618286
    3. 'move' → logprob: -5.824075698852539
    4. ' ' → logprob: -6.199075698852539
    5. ' time' → logprob: -6.199075698852539
    6. 'step' → logprob: -6.574075698852539
    7. '   ' → logprob: -7.199075698852539
    8. ' turn' → logprob: -8.074075698852539
    9. ' timestep' → logprob: -8.074075698852539
    10. ' )' → logprob: -8.449075698852539

Token 557: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3317425847053528
    2. '
' → logprob: -1.331742525100708
    3. '        
' → logprob: -4.206742763519287
    4. '<|end|>' → logprob: -7.081742763519287
    5. ' 
' → logprob: -7.456742763519287
    6. '  
' → logprob: -7.456742763519287
    7. '    
' → logprob: -8.331742286682129
    8. ')' → logprob: -8.706742286682129
    9. '   ' → logprob: -8.831742286682129
    10. ',' → logprob: -8.831742286682129

Token 558: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02522505819797516
    2. '        
' → logprob: -4.1502251625061035
    3. '<|end|>' → logprob: -5.1502251625061035
    4. '  
' → logprob: -7.5252251625061035
    5. '<|end|>' → logprob: -8.025224685668945
    6. '           ' → logprob: -8.150224685668945
    7. '
' → logprob: -8.400224685668945
    8. '    
' → logprob: -8.400224685668945
    9. '   ' → logprob: -8.650224685668945
    10. ',' → logprob: -8.775224685668945

Token 559: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08082486689090729
    2. '
' → logprob: -2.830824851989746
    3. '        
' → logprob: -4.455824851989746
    4. '  
' → logprob: -6.455824851989746
    5. ' 
' → logprob: -6.705824851989746
    6. '#' (adapté à ' #') → logprob: -6.830824851989746
    7. '<|end|>' → logprob: -6.955824851989746
    8. '```' → logprob: -8.080824851989746
    9. '        ' → logprob: -8.580824851989746
    10. '   ' → logprob: -8.705824851989746

Token 560: ' At' (ID: 3604)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49510854482650757
    2. 'visited' → logprob: -1.6201086044311523
    3. '
' → logprob: -2.2451086044311523
    4. 'queue' → logprob: -3.3701086044311523
    5. 'from' → logprob: -4.495108604431152
    6. ' visited' → logprob: -4.495108604431152
    7. '#' → logprob: -4.745108604431152
    8. '   ' → logprob: -5.120108604431152
    9. ' queue' → logprob: -5.745108604431152
    10. '        
' → logprob: -5.745108604431152

Token 561: ' each' (ID: 2454)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.49449628591537476
    2. ' least' → logprob: -1.2444963455200195
    3. 'least' → logprob: -3.1194963455200195
    4. 'tempt' → logprob: -3.4944963455200195
    5. ' ' → logprob: -3.9944963455200195
    6. '#' → logprob: -6.6194963455200195
    7. ' t' → logprob: -6.7444963455200195
    8. ' #' → logprob: -6.9944963455200195
    9. 'c' → logprob: -7.1194963455200195
    10. 'tention' → logprob: -7.3694963455200195

Token 562: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.03225015476346016
    2. ' space' → logprob: -4.657249927520752
    3. ' ghost' → logprob: -5.282249927520752
    4. ' ' → logprob: -5.532249927520752
    5. ' level' → logprob: -5.907249927520752
    6. ' token' → logprob: -6.282249927520752
    7. ' time' → logprob: -6.532249927520752
    8. '_' → logprob: -6.782249927520752
    9. 'step' → logprob: -7.032249927520752
    10. ' turn' → logprob: -7.282249927520752

Token 563: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13152407109737396
    2. ' ,' → logprob: -3.256524085998535
    3. '   ' → logprob: -3.381524085998535
    4. '       ' → logprob: -3.506524085998535
    5. ':' → logprob: -4.131524085998535
    6. '    ' → logprob: -7.006524085998535
    7. ' :' → logprob: -7.131524085998535
    8. ' tokens' → logprob: -8.131524085998535
    9. ' for' → logprob: -8.256524085998535
    10. 'tokens' → logprob: -8.506524085998535

Token 564: ' we' (ID: 581)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.49054643511772156
    2. 'queue' → logprob: -1.865546464920044
    3. ' for' → logprob: -2.490546464920044
    4. '       ' → logprob: -3.615546464920044
    5. ' from' → logprob: -3.740546464920044
    6. 'for' → logprob: -4.240546226501465
    7. '   ' → logprob: -4.365546226501465
    8. 'from' → logprob: -4.365546226501465
    9. ' states' → logprob: -4.490546226501465
    10. ' visited' → logprob: -4.615546226501465

Token 565: ' move' (ID: 5275)
  Prédit: ' generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' generate' → logprob: -0.7832257151603699
    2. 'generate' → logprob: -1.9082257747650146
    3. ' continue' → logprob: -2.5332257747650146
    4. '   ' → logprob: -2.5332257747650146
    5. ' try' → logprob: -2.6582257747650146
    6. '       ' → logprob: -3.4082257747650146
    7. 'continue' → logprob: -4.1582255363464355
    8. ' need' → logprob: -4.4082255363464355
    9. ' have' → logprob: -4.5332255363464355
    10. ' consider' → logprob: -4.7832255363464355

Token 566: ' simultaneously' (ID: 38328)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.26656222343444824
    2. 'all' → logprob: -2.0165622234344482
    3. ' ghosts' → logprob: -3.1415622234344482
    4. ' each' → logprob: -3.3915622234344482
    5. 'each' → logprob: -4.266562461853027
    6. 'ghost' → logprob: -4.891562461853027
    7. ' ghost' → logprob: -6.641562461853027
    8. '   ' → logprob: -7.141562461853027
    9. ' the' → logprob: -9.266562461853027
    10. 'the' → logprob: -10.516562461853027

Token 567: ' all' (ID: 722)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8293887972831726
    2. '   ' → logprob: -1.3293888568878174
    3. ',' → logprob: -1.9543888568878174
    4. ' ,' → logprob: -2.3293888568878174
    5. ' ghosts' → logprob: -4.079388618469238
    6. '    ' → logprob: -4.454388618469238
    7. '        
' → logprob: -5.454388618469238
    8. '_' → logprob: -6.079388618469238
    9. ' ' → logprob: -6.204388618469238
    10. '        ' → logprob: -6.204388618469238

Token 568: ' ghosts' (ID: 100279)
  Prédit: ' ghosts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ghosts' → logprob: -0.25266408920288086
    2. 'ghost' → logprob: -1.5026640892028809
    3. ' ghost' → logprob: -7.252664089202881
    4. 'n' → logprob: -11.752664566040039
    5. ' n' → logprob: -12.252664566040039
    6. 'Ghost' → logprob: -12.752664566040039
    7. '   ' → logprob: -13.252664566040039
    8. ' possible' → logprob: -13.502664566040039
    9. 'positions' → logprob: -13.877664566040039
    10. ' positions' → logprob: -14.002664566040039

Token 569: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2604016065597534
    2. '   ' → logprob: -2.010401725769043
    3. ',' → logprob: -2.760401725769043
    4. 'tokens' → logprob: -4.885401725769043
    5. '        
' → logprob: -5.885401725769043
    6. ' tokens' → logprob: -6.260401725769043
    7. '<|end|>' → logprob: -6.260401725769043
    8. ':' → logprob: -6.510401725769043
    9. '_tokens' → logprob: -6.510401725769043
    10. '    
' → logprob: -6.635401725769043

Token 570: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08578565716743469
    2. '   ' → logprob: -2.8357856273651123
    3. '        
' → logprob: -4.835785865783691
    4. '
' → logprob: -5.210785865783691
    5. '    
' → logprob: -5.335785865783691
    6. ' 
' → logprob: -6.460785865783691
    7. '  
' → logprob: -6.585785865783691
    8. ',' → logprob: -7.835785865783691
    9. '   
' → logprob: -7.835785865783691
    10. '    ' → logprob: -8.335785865783691

Token 571: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.1071014404296875
    2. '   ' → logprob: -1.6071014404296875
    3. 'from' → logprob: -1.6071014404296875
    4. 'queue' → logprob: -1.9821014404296875
    5. '       ' → logprob: -2.4821014404296875
    6. 'state' → logprob: -4.1071014404296875
    7. ' from' → logprob: -4.6071014404296875
    8. '#' (adapté à ' #') → logprob: -5.8571014404296875
    9. 'start' → logprob: -6.1071014404296875
    10. '        
' → logprob: -6.1071014404296875

Token 572: ' To' (ID: 2514)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.1874665021896362
    2. 'from' → logprob: -1.4374665021896362
    3. 'visited' → logprob: -1.4374665021896362
    4. 'start' → logprob: -2.187466621398926
    5. '   ' → logprob: -2.562466621398926
    6. ' from' → logprob: -4.562466621398926
    7. 'initial' → logprob: -4.812466621398926
    8. '       ' → logprob: -5.812466621398926
    9. ' queue' → logprob: -5.937466621398926
    10. ' visited' → logprob: -6.062466621398926

Token 573: ' implement' (ID: 6365)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.5949667692184448
    2. ' solve' → logprob: -1.8449667692184448
    3. 'expl' → logprob: -2.9699668884277344
    4. 'visit' → logprob: -3.0949668884277344
    5. 'continue' → logprob: -3.8449668884277344
    6. '_visit' → logprob: -3.9699668884277344
    7. 'do' → logprob: -4.219966888427734
    8. 'check' → logprob: -4.219966888427734
    9. 'keep' → logprob: -4.344966888427734
    10. ' continue' → logprob: -4.844966888427734

Token 574: ' the' (ID: 290)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.5845130681991577
    2. ' queue' → logprob: -1.5845130681991577
    3. '       ' → logprob: -2.5845131874084473
    4. 'from' → logprob: -2.7095131874084473
    5. ' visited' → logprob: -3.0845131874084473
    6. '   ' → logprob: -3.4595131874084473
    7. ' import' → logprob: -4.709513187408447
    8. ' #' → logprob: -6.584513187408447
    9. 'import' → logprob: -6.584513187408447
    10. 'queue' → logprob: -6.709513187408447

Token 575: ' no' (ID: 860)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.065147042274475
    2. 'from' → logprob: -1.065147042274475
    3. 'B' → logprob: -1.565147042274475
    4. 'queue' → logprob: -3.4401469230651855
    5. 'next' → logprob: -3.8151469230651855
    6. ' BFS' → logprob: -4.5651469230651855
    7. 'collections' → logprob: -5.0651469230651855
    8. ' next' → logprob: -5.4401469230651855
    9. 'search' → logprob: -5.4401469230651855
    10. 'def' → logprob: -5.5651469230651855

Token 576: '-s' (ID: 2011)
  Prédit: ' two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' two' → logprob: -1.0501437187194824
    2. 't' → logprob: -1.6751437187194824
    3. ' duplicate' → logprob: -1.6751437187194824
    4. ' overlap' → logprob: -2.9251437187194824
    5. ' visited' → logprob: -3.3001437187194824
    6. 'import' → logprob: -3.6751437187194824
    7. '   ' → logprob: -3.8001437187194824
    8. '-' → logprob: -3.8001437187194824
    9. '       ' → logprob: -4.425143718719482
    10. ' space' → logprob: -4.550143718719482

Token 577: 'wap' (ID: 32847)
  Prédit: 'wap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wap' → logprob: -0.6272307634353638
    2. 'ame' → logprob: -1.1272307634353638
    3. 't' → logprob: -2.252230644226074
    4. 'state' → logprob: -5.127230644226074
    5. 'swap' → logprob: -5.127230644226074
    6. 'w' → logprob: -5.252230644226074
    7. 'nap' → logprob: -5.627230644226074
    8. 'im' → logprob: -5.877230644226074
    9. 'same' → logprob: -5.877230644226074
    10. 'tep' → logprob: -6.377230644226074

Token 578: ' condition' (ID: 7060)
  Prédit: ' condition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' condition' → logprob: -0.6973413228988647
    2. ' constraint' → logprob: -1.4473413228988647
    3. '_positions' → logprob: -2.1973414421081543
    4. 'constraint' → logprob: -3.3223414421081543
    5. ' ' → logprob: -4.072341442108154
    6. ' check' → logprob: -4.197341442108154
    7. 'condition' → logprob: -4.322341442108154
    8. ' rule' → logprob: -4.572341442108154
    9. ' positions' → logprob: -4.697341442108154
    10. '_condition' → logprob: -4.947341442108154

Token 579: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2978355586528778
    2. '#' → logprob: -2.2978355884552
    3. ',' → logprob: -2.7978355884552
    4. 'visited' → logprob: -2.7978355884552
    5. '
' → logprob: -5.172835350036621
    6. ' visited' → logprob: -5.422835350036621
    7. 'positions' → logprob: -5.422835350036621
    8. 'def' → logprob: -5.422835350036621
    9. ',
' → logprob: -5.672835350036621
    10. '        
' → logprob: -5.922835350036621

Token 580: ' if' (ID: 538)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.894554078578949
    2. 'visited' → logprob: -0.894554078578949
    3. '       ' → logprob: -3.3945541381835938
    4. ' from' → logprob: -3.5195541381835938
    5. ' for' → logprob: -3.6445541381835938
    6. '#' → logprob: -3.7695541381835938
    7. 'from' → logprob: -4.144554138183594
    8. ' prev' → logprob: -4.144554138183594
    9. ' next' → logprob: -5.019554138183594
    10. 'prev' → logprob: -5.019554138183594

Token 581: ' ghost' (ID: 33168)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -1.5833193063735962
    2. 'new' → logprob: -1.8333193063735962
    3. 'prev' → logprob: -1.8333193063735962
    4. 'pos' → logprob: -2.3333191871643066
    5. 'the' → logprob: -2.8333191871643066
    6. 'next' → logprob: -3.4583191871643066
    7. 'old' → logprob: -3.4583191871643066
    8. 'a' → logprob: -3.5833191871643066
    9. 'previous' → logprob: -3.5833191871643066
    10. 'two' → logprob: -3.9583191871643066

Token 582: ' A' (ID: 355)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06269682943820953
    2. '_positions' → logprob: -4.187696933746338
    3. '_next' → logprob: -4.562696933746338
    4. 'positions' → logprob: -5.312696933746338
    5. '   ' → logprob: -5.437696933746338
    6. 'next' → logprob: -5.937696933746338
    7. ' ' → logprob: -6.437696933746338
    8. '#' → logprob: -6.437696933746338
    9. ' s' → logprob: -6.437696933746338
    10. 'moves' → logprob: -6.562696933746338

Token 583: ' moves' (ID: 19523)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -1.2938436269760132
    2. 'moves' → logprob: -1.2938436269760132
    3. 's' → logprob: -1.6688436269760132
    4. ' moves' → logprob: -1.9188436269760132
    5. ' and' → logprob: -2.6688437461853027
    6. '_moves' → logprob: -4.543843746185303
    7. 'and' → logprob: -4.793843746185303
    8. '#' → logprob: -5.793843746185303
    9. ' stays' → logprob: -5.793843746185303
    10. 'from' → logprob: -5.793843746185303

Token 584: ' to' (ID: 316)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3055954575538635
    2. 's' → logprob: -2.4305953979492188
    3. ' into' → logprob: -3.0555953979492188
    4. ' from' → logprob: -3.0555953979492188
    5. 'to' → logprob: -3.4305953979492188
    6. ' to' → logprob: -4.055595397949219
    7. 'into' → logprob: -4.805595397949219
    8. '_pos' → logprob: -5.555595397949219
    9. '[i' → logprob: -5.805595397949219
    10. 'pos' → logprob: -5.805595397949219

Token 585: ' ghost' (ID: 33168)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8137471079826355
    2. 'pos' → logprob: -1.1887471675872803
    3. 'ghost' → logprob: -1.6887471675872803
    4. 'a' → logprob: -4.188746929168701
    5. ' ghost' → logprob: -4.563746929168701
    6. 'position' → logprob: -4.813746929168701
    7. ' the' → logprob: -4.938746929168701
    8. 'B' → logprob: -4.938746929168701
    9. 'positions' → logprob: -5.188746929168701
    10. 'prev' → logprob: -5.438746929168701

Token 586: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3184692859649658
    2. ' B' → logprob: -1.9434692859649658
    3. 's' → logprob: -2.318469285964966
    4. '_positions' → logprob: -4.443469047546387
    5. 'A' → logprob: -5.193469047546387
    6. '_pos' → logprob: -5.443469047546387
    7. ''s' → logprob: -5.943469047546387
    8. ' ' → logprob: -6.443469047546387
    9. '_' → logprob: -6.943469047546387
    10. '_B' → logprob: -7.193469047546387

Token 587: ''s' (ID: 885)
  Prédit: ''s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.0011324746301397681
    2. 's' → logprob: -8.001132011413574
    3. ''' → logprob: -8.126132011413574
    4. '_pos' → logprob: -8.251132011413574
    5. '_new' → logprob: -10.126132011413574
    6. '’s' → logprob: -10.251132011413574
    7. 'pos' → logprob: -10.501132011413574
    8. 'position' → logprob: -10.501132011413574
    9. '_old' → logprob: -11.126132011413574
    10. '_prev' → logprob: -11.126132011413574

Token 588: ' previous' (ID: 5880)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.28646042943000793
    2. 'old' → logprob: -2.7864603996276855
    3. ' position' → logprob: -2.9114603996276855
    4. 'previous' → logprob: -3.0364603996276855
    5. 'pos' → logprob: -3.1614603996276855
    6. 'current' → logprob: -3.6614603996276855
    7. 'prev' → logprob: -5.7864603996276855
    8. ' current' → logprob: -5.9114603996276855
    9. ' old' → logprob: -6.0364603996276855
    10. ' previous' → logprob: -6.1614603996276855

Token 589: ' pos' (ID: 1253)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.6762017607688904
    2. 'position' → logprob: -1.3012018203735352
    3. '_pos' → logprob: -2.551201820373535
    4. '_' → logprob: -3.176201820373535
    5. '_position' → logprob: -3.301201820373535
    6. 'pos' → logprob: -3.426201820373535
    7. '_positions' → logprob: -4.551201820373535
    8. '```' → logprob: -4.926201820373535
    9. ' _' → logprob: -6.176201820373535
    10. ')' → logprob: -6.176201820373535

Token 590: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7656661868095398
    2. 'ition' → logprob: -0.7656661868095398
    3. 'itions' → logprob: -3.8906662464141846
    4. '   ' → logprob: -4.3906660079956055
    5. ')' → logprob: -4.6406660079956055
    6. '_,' → logprob: -5.5156660079956055
    7. 'i' → logprob: -5.6406660079956055
    8. 'it' → logprob: -5.7656660079956055
    9. '
' → logprob: -6.2656660079956055
    10. '_' → logprob: -6.2656660079956055

Token 591: ' ghost' (ID: 33168)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.14302371442317963
    2. ' ghost' → logprob: -2.018023729324341
    3. 'B' → logprob: -8.393023490905762
    4. 'vice' → logprob: -10.018023490905762
    5. ' B' → logprob: -10.643023490905762
    6. ' vice' → logprob: -11.143023490905762
    7. '
' → logprob: -11.893023490905762
    8. ' ' → logprob: -11.893023490905762
    9. ' ' → logprob: -12.143023490905762
    10. 'Ghost' → logprob: -12.393023490905762

Token 592: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.18250998854637146
    2. 'B' → logprob: -1.8075100183486938
    3. 'A' → logprob: -6.432509899139404
    4. ' A' → logprob: -7.307509899139404
    5. 's' → logprob: -8.557510375976562
    6. ' ' → logprob: -9.057510375976562
    7. ' ' → logprob: -9.432510375976562
    8. '_' → logprob: -10.182510375976562
    9. '`' → logprob: -11.057510375976562
    10. '```' → logprob: -11.307510375976562

Token 593: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.026463665068149567
    2. ' moves' → logprob: -3.901463747024536
    3. '_moves' → logprob: -6.151463508605957
    4. ' stays' → logprob: -7.151463508605957
    5. ''s' → logprob: -7.276463508605957
    6. 'm' → logprob: -7.651463508605957
    7. 'does' → logprob: -7.651463508605957
    8. 'st' → logprob: -8.526463508605957
    9. 's' → logprob: -8.651463508605957
    10. '.moves' → logprob: -9.151463508605957

Token 594: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.47438326478004456
    2. ' to' → logprob: -0.9743832349777222
    3. '<|end|>' → logprob: -8.974383354187012
    4. '_to' → logprob: -9.099383354187012
    5. ' onto' → logprob: -11.349383354187012
    6. ' ' → logprob: -11.349383354187012
    7. ' into' → logprob: -11.349383354187012
    8. '<|end|>' → logprob: -11.599383354187012
    9. '	to' → logprob: -11.849383354187012
    10. 'from' → logprob: -12.724383354187012

Token 595: ' ghost' (ID: 33168)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.0004935794277116656
    2. ' ghost' → logprob: -7.62549352645874
    3. 'A' → logprob: -13.250494003295898
    4. ' ghosts' → logprob: -13.375494003295898
    5. '   ' → logprob: -14.500494003295898
    6. 'previous' → logprob: -14.875494003295898
    7. ' ' → logprob: -15.625494003295898
    8. 'prev' → logprob: -15.750494003295898
    9. 'gh' → logprob: -15.875494003295898
    10. '
' → logprob: -15.875494003295898

Token 596: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.013053753413259983
    2. ' A' → logprob: -4.388053894042969
    3. 's' → logprob: -8.138053894042969
    4. ''s' → logprob: -8.388053894042969
    5. ' ' → logprob: -12.388053894042969
    6. ''' → logprob: -12.513053894042969
    7. ''A' → logprob: -12.763053894042969
    8. '`s' → logprob: -12.888053894042969
    9. 'a' → logprob: -13.138053894042969
    10. '`' → logprob: -13.263053894042969

Token 597: ''s' (ID: 885)
  Prédit: ''s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.0009570781840011477
    2. ''' → logprob: -7.500957012176514
    3. '_prev' → logprob: -9.500957489013672
    4. 'pos' → logprob: -9.625957489013672
    5. 'prev' → logprob: -9.625957489013672
    6. '`s' → logprob: -9.750957489013672
    7. 'previous' → logprob: -10.125957489013672
    8. 's' → logprob: -10.750957489013672
    9. '```' → logprob: -11.000957489013672
    10. '_pos' → logprob: -11.125957489013672

Token 598: ' previous' (ID: 5880)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -1.0124454498291016
    2. 'previous' → logprob: -1.1374454498291016
    3. 'pos' → logprob: -1.3874454498291016
    4. ' previous' → logprob: -2.8874454498291016
    5. '_prev' → logprob: -5.512445449829102
    6. ' prev' → logprob: -5.762445449829102
    7. '_previous' → logprob: -6.387445449829102
    8. ' pos' → logprob: -7.012445449829102
    9. '	prev' → logprob: -8.512445449829102
    10. '```' → logprob: -8.887445449829102

Token 599: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.06080915033817291
    2. '_pos' → logprob: -3.0608091354370117
    3. ' pos' → logprob: -4.435809135437012
    4. 'position' → logprob: -9.560809135437012
    5. ',' → logprob: -10.185809135437012
    6. '	pos' → logprob: -10.185809135437012
    7. ' _' → logprob: -10.560809135437012
    8. '```' → logprob: -11.060809135437012
    9. ' ' → logprob: -11.310809135437012
    10. ' position' → logprob: -11.560809135437012

Token 600: ' in' (ID: 306)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6630555987358093
    2. ',' → logprob: -0.7880555987358093
    3. ')' → logprob: -4.288055419921875
    4. '):' → logprob: -5.163055419921875
    5. '#' → logprob: -5.413055419921875
    6. '               ' → logprob: -6.663055419921875
    7. ':
' → logprob: -6.913055419921875
    8. '           ' → logprob: -7.538055419921875
    9. ',
' → logprob: -7.913055419921875
    10. '.' → logprob: -7.913055419921875

Token 601: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.22040116786956787
    2. 'one' → logprob: -2.3454012870788574
    3. ' the' → logprob: -2.8454012870788574
    4. 'this' → logprob: -3.9704012870788574
    5. '1' → logprob: -4.470401287078857
    6. ' one' → logprob: -5.720401287078857
    7. 'same' → logprob: -5.720401287078857
    8. 'positions' → logprob: -6.220401287078857
    9. 'a' → logprob: -7.095401287078857
    10. ' this' → logprob: -7.220401287078857

Token 602: ' same' (ID: 2684)
  Prédit: ' same'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' same' → logprob: -0.8702688813209534
    2. ' next' → logprob: -1.3702688217163086
    3. 'same' → logprob: -1.4952688217163086
    4. 'next' → logprob: -2.3702688217163086
    5. '
' → logprob: -6.120268821716309
    6. ' previous' → logprob: -6.745268821716309
    7. 'current' → logprob: -6.745268821716309
    8. ' current' → logprob: -6.995268821716309
    9. 'previous' → logprob: -7.245268821716309
    10. 'state' → logprob: -7.995268821716309

Token 603: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.19458699226379395
    2. ' ' → logprob: -2.819586992263794
    3. ' line' → logprob: -3.444586992263794
    4. '_' → logprob: -3.694586992263794
    5. ')' → logprob: -4.569586753845215
    6. ' _' → logprob: -4.694586753845215
    7. ',' → logprob: -4.694586753845215
    8. '_step' → logprob: -5.194586753845215
    9. ' )' → logprob: -5.319586753845215
    10. 'step' → logprob: -5.569586753845215

Token 604: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7140437960624695
    2. ':' → logprob: -0.7140437960624695
    3. ')' → logprob: -4.589043617248535
    4. '):' → logprob: -5.089043617248535
    5. ':
' → logprob: -7.214043617248535
    6. '       ' → logprob: -7.214043617248535
    7. '#' → logprob: -7.339043617248535
    8. ',
' → logprob: -7.589043617248535
    9. ' ,' → logprob: -7.589043617248535
    10. '.' → logprob: -8.339043617248535

Token 605: ' forbidden' (ID: 74435)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.2612318694591522
    2. ')' → logprob: -2.5112318992614746
    3. 'continue' → logprob: -2.6362318992614746
    4. '#' → logprob: -3.7612318992614746
    5. ' we' → logprob: -3.8862318992614746
    6. ' )' → logprob: -5.761231899261475
    7. ' pass' → logprob: -5.886231899261475
    8. ' 
' → logprob: -5.886231899261475
    9. ':' → logprob: -5.886231899261475
    10. ' ' → logprob: -6.011231899261475

Token 606: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3194970190525055
    2. '
' → logprob: -1.694496989250183
    3. ')' → logprob: -3.5694971084594727
    4. '   ' → logprob: -3.9444971084594727
    5. '<|end|>' → logprob: -4.819497108459473
    6. '#' → logprob: -4.944497108459473
    7. '        
' → logprob: -5.069497108459473
    8. ',' → logprob: -5.194497108459473
    9. ' 
' → logprob: -6.569497108459473
    10. '    
' → logprob: -6.569497108459473

Token 607: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42641735076904297
    2. '   ' → logprob: -2.676417350769043
    3. ' 
' → logprob: -2.676417350769043
    4. '        
' → logprob: -3.426417350769043
    5. '  
' → logprob: -3.551417350769043
    6. '
' → logprob: -3.801417350769043
    7. '    
' → logprob: -3.926417350769043
    8. ':' → logprob: -4.051417350769043
    9. '\n' → logprob: -4.051417350769043
    10. ',' → logprob: -4.176417350769043

Token 608: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5875439047813416
    2. '       ' → logprob: -1.5875439643859863
    3. 'visited' → logprob: -2.3375439643859863
    4. 'state' → logprob: -2.8375439643859863
    5. 'queue' → logprob: -3.4625439643859863
    6. '
' → logprob: -4.462543964385986
    7. 'states' → logprob: -4.837543964385986
    8. 'from' → logprob: -4.837543964385986
    9. '    
' → logprob: -5.337543964385986
    10. '#' (adapté à ' #') → logprob: -5.462543964385986

Token 609: ' BFS' (ID: 190016)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.4823760986328125
    2. 'from' → logprob: -1.3573760986328125
    3. 'visited' → logprob: -2.4823760986328125
    4. '   ' → logprob: -4.1073760986328125
    5. ' from' → logprob: -4.7323760986328125
    6. 'q' → logprob: -4.9823760986328125
    7. 'def' → logprob: -5.4823760986328125
    8. ' queue' → logprob: -6.1073760986328125
    9. '#' → logprob: -6.9823760986328125
    10. '       ' → logprob: -7.9823760986328125

Token 610: ' variables' (ID: 13955)
  Prédit: '(queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(queue' → logprob: -0.9559851884841919
    2. '   ' → logprob: -1.330985188484192
    3. '_queue' → logprob: -2.3309850692749023
    4. ':' → logprob: -2.4559850692749023
    5. 'queue' → logprob: -2.9559850692749023
    6. '(' → logprob: -3.4559850692749023
    7. '=' → logprob: -4.330985069274902
    8. ' queue' → logprob: -4.330985069274902
    9. '_' → logprob: -4.455985069274902
    10. '(
' → logprob: -4.830985069274902

Token 611: '
' (ID: 198)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6816940903663635
    2. 'queue' → logprob: -0.9316940903663635
    3. '
' → logprob: -3.0566940307617188
    4. ' queue' → logprob: -3.8066940307617188
    5. '   ' → logprob: -4.306694030761719
    6. ' visited' → logprob: -4.556694030761719
    7. 'distance' → logprob: -5.431694030761719
    8. '```' → logprob: -7.931694030761719
    9. 'q' → logprob: -8.056694030761719
    10. ' =' → logprob: -8.306694030761719

Token 612: '       ' (ID: 309)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.8001489639282227
    2. '   ' → logprob: -1.3001489639282227
    3. ' visited' → logprob: -2.0501489639282227
    4. 'queue' → logprob: -2.8001489639282227
    5. ' queue' → logprob: -3.1751489639282227
    6. '
' → logprob: -3.1751489639282227
    7. '```' → logprob: -6.550148963928223
    8. 'q' → logprob: -7.675148963928223
    9. 'import' → logprob: -7.925148963928223
    10. 'distance' → logprob: -8.175148963928223

Token 613: ' start' (ID: 1604)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.4387648105621338
    2. 'queue' → logprob: -1.1887648105621338
    3. 'from' → logprob: -3.438764810562134
    4. '   ' → logprob: -4.563764572143555
    5. ' visited' → logprob: -5.313764572143555
    6. ' queue' → logprob: -6.313764572143555
    7. ' from' → logprob: -7.313764572143555
    8. '
' → logprob: -7.688764572143555
    9. 'q' → logprob: -9.813764572143555
    10. 'start' (adapté à ' start') → logprob: -10.188764572143555

Token 614: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.3132084608078003
    2. '=' → logprob: -2.06320858001709
    3. '_states' → logprob: -2.56320858001709
    4. ' =' → logprob: -2.93820858001709
    5. '_positions' → logprob: -5.18820858001709
    6. '_' → logprob: -5.93820858001709
    7. ')' → logprob: -6.06320858001709
    8. '_pos' → logprob: -7.68820858001709
    9. 'state' → logprob: -7.93820858001709
    10. ',' → logprob: -9.06320858001709

Token 615: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602790653705597
    2. '=' → logprob: -1.9102790355682373
    3. ',' → logprob: -10.410279273986816
    4. ')' → logprob: -10.660279273986816
    5. ' =
' → logprob: -14.660279273986816
    6. ')=' → logprob: -15.410279273986816
    7. '<|end|>' → logprob: -16.1602783203125
    8. ' =(' → logprob: -16.2852783203125
    9. ' =
' → logprob: -16.5352783203125
    10. ']' → logprob: -16.5352783203125

Token 616: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.005393126513808966
    2. ' tuple' → logprob: -5.255393028259277
    3. '(tuple' → logprob: -8.755393028259277
    4. '   ' → logprob: -13.255393028259277
    5. 'tu' → logprob: -17.880393981933594
    6. '(' → logprob: -18.130393981933594
    7. '       ' → logprob: -18.380393981933594
    8. '_tuple' → logprob: -19.505393981933594
    9. '(*' → logprob: -19.505393981933594
    10. ' ' → logprob: -19.630393981933594

Token 617: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004114730749279261
    2. '(tuple' → logprob: -5.504114627838135
    3. '((' → logprob: -10.504115104675293
    4. 'tuple' → logprob: -12.629115104675293
    5. '([' → logprob: -12.879115104675293
    6. '(map' → logprob: -13.879115104675293
    7. '([(' → logprob: -14.504115104675293
    8. '(sorted' → logprob: -14.504115104675293
    9. 'ghost' → logprob: -14.879115104675293
    10. '[' → logprob: -15.254115104675293

Token 618: 'ghost' (ID: 78754)
  Prédit: 'ghost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -1.5570885807392187e-05
    2. 'tuple' → logprob: -11.750015258789062
    3. '(' → logprob: -12.000015258789062
    4. '[' → logprob: -14.250015258789062
    5. 'gh' → logprob: -15.250015258789062
    6. 'fro' → logprob: -15.500015258789062
    7. '[(' → logprob: -16.125015258789062
    8. ' ghosts' → logprob: -16.500015258789062
    9. '   ' → logprob: -17.000015258789062
    10. '((' → logprob: -17.875015258789062

Token 619: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0001450187264708802
    2. '_pos' → logprob: -8.875144958496094
    3. '_s' → logprob: -12.750144958496094
    4. '_positions' → logprob: -13.875144958496094
    5. 'pos' → logprob: -14.750144958496094
    6. '`s' → logprob: -14.875144958496094
    7. '```' → logprob: -15.500144958496094
    8. ' s' → logprob: -15.750144958496094
    9. ''s' → logprob: -17.000144958496094
    10. 'с' → logprob: -17.125144958496094

Token 620: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -5.676981345459353e-06
    2. 'pos' → logprob: -12.250005722045898
    3. ')' → logprob: -15.500005722045898
    4. 'Pos' → logprob: -15.625005722045898
    5. '[pos' → logprob: -15.750005722045898
    6. ''_' → logprob: -17.0000057220459
    7. '_positions' → logprob: -17.0000057220459
    8. ')_' → logprob: -17.1250057220459
    9. 's' → logprob: -17.2500057220459
    10. '[' → logprob: -17.5000057220459

Token 621: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003851517685689032
    2. ')
' → logprob: -7.875385284423828
    3. ' )' → logprob: -13.125385284423828
    4. '   ' → logprob: -14.500385284423828
    5. '       ' → logprob: -14.625385284423828
    6. ')`' → logprob: -14.625385284423828
    7. '),' → logprob: -15.000385284423828
    8. ')#' → logprob: -15.250385284423828
    9. ',' → logprob: -15.500385284423828
    10. '<|end|>' → logprob: -15.625385284423828

Token 622: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4677523076534271
    2. 'queue' → logprob: -1.9677523374557495
    3. ' queue' → logprob: -2.59275221824646
    4. 'visited' → logprob: -2.71775221824646
    5. '_queue' → logprob: -3.96775221824646
    6. ')' → logprob: -4.092752456665039
    7. '<|end|>' → logprob: -4.342752456665039
    8. ' visited' → logprob: -4.717752456665039
    9. ',
' → logprob: -4.842752456665039
    10. '   ' → logprob: -4.967752456665039

Token 623: ' goal' (ID: 8583)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.7263752818107605
    2. 'visited' → logprob: -0.9763752818107605
    3. 'from' → logprob: -1.9763753414154053
    4. 'if' → logprob: -7.601375102996826
    5. '   ' → logprob: -8.351375579833984
    6. '
' → logprob: -8.851375579833984
    7. 'target' → logprob: -9.726375579833984
    8. 'q' → logprob: -9.976375579833984
    9. ' visited' → logprob: -10.726375579833984
    10. '```' → logprob: -10.851375579833984

Token 624: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.00011760921915993094
    2. '_states' → logprob: -9.375117301940918
    3. '_' → logprob: -10.625117301940918
    4. '_pos' → logprob: -12.750117301940918
    5. '_STATE' → logprob: -13.250117301940918
    6. '=' → logprob: -14.000117301940918
    7. '_stat' → logprob: -14.250117301940918
    8. '_positions' → logprob: -14.625117301940918
    9. 'state' → logprob: -14.875117301940918
    10. ' =' → logprob: -14.875117301940918

Token 625: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407716512680054
    2. '=' → logprob: -0.9740771651268005
    3. ')' → logprob: -16.724077224731445
    4. ',' → logprob: -17.724077224731445
    5. ' =
' → logprob: -17.724077224731445
    6. '＝' → logprob: -18.099077224731445
    7. ' ' → logprob: -18.224077224731445
    8. 's' → logprob: -18.349077224731445
    9. ' =
' → logprob: -18.474077224731445
    10. ' =",' → logprob: -18.849077224731445

Token 626: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.02976194955408573
    2. ' tuple' → logprob: -3.529762029647827
    3. '(tuple' → logprob: -11.404762268066406
    4. '   ' → logprob: -15.904762268066406
    5. 'tu' → logprob: -16.029762268066406
    6. '       ' → logprob: -17.279762268066406
    7. '_tuple' → logprob: -18.154762268066406
    8. 't' → logprob: -18.404762268066406
    9. 'Tuple' → logprob: -18.529762268066406
    10. '           ' → logprob: -19.154762268066406

Token 627: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -6.682846287731081e-05
    2. 'targets' → logprob: -10.125066757202148
    3. '(tuple' → logprob: -10.625066757202148
    4. 'target' → logprob: -13.125066757202148
    5. 'tuple' → logprob: -15.750066757202148
    6. '((' → logprob: -16.25006675720215
    7. '(' → logprob: -17.12506675720215
    8. '```' → logprob: -17.50006675720215
    9. '(
' → logprob: -17.75006675720215
    10. '(Target' → logprob: -17.87506675720215

Token 628: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002918757265433669
    2. '_pos' → logprob: -5.877918720245361
    3. 'pos' → logprob: -9.12791919708252
    4. '_positions' → logprob: -12.87791919708252
    5. 'positions' → logprob: -13.37791919708252
    6. 'targets' → logprob: -15.12791919708252
    7. 'Pos' → logprob: -16.002918243408203
    8. '_state' → logprob: -16.127918243408203
    9. '`s' → logprob: -16.252918243408203
    10. '_targets' → logprob: -16.377918243408203

Token 629: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -6.988221684878226e-06
    2. '_positions' → logprob: -12.750006675720215
    3. 'pos' → logprob: -13.000006675720215
    4. 's' → logprob: -13.750006675720215
    5. 'Pos' → logprob: -15.125006675720215
    6. '```' → logprob: -16.25000762939453
    7. ')' → logprob: -16.37500762939453
    8. '_state' → logprob: -16.87500762939453
    9. '_p' → logprob: -17.25000762939453
    10. '[pos' → logprob: -17.50000762939453

Token 630: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00763892475515604
    2. ')
' → logprob: -4.882638931274414
    3. '   ' → logprob: -11.757638931274414
    4. ' )' → logprob: -12.007638931274414
    5. '       ' → logprob: -12.257638931274414
    6. ')

' → logprob: -12.757638931274414
    7. ')
' → logprob: -12.757638931274414
    8. '
' → logprob: -13.007638931274414
    9. '):' → logprob: -13.257638931274414
    10. ')`' → logprob: -14.132638931274414

Token 631: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2695944309234619
    2. 'visited' → logprob: -2.019594430923462
    3. '
' → logprob: -2.769594430923462
    4. 'queue' → logprob: -3.269594430923462
    5. '       ' → logprob: -6.394594192504883
    6. '    
' → logprob: -7.394594192504883
    7. ' visited' → logprob: -8.519594192504883
    8. ' queue' → logprob: -9.019594192504883
    9. '```' → logprob: -9.269594192504883
    10. '	queue' → logprob: -10.394594192504883

Token 632: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.0456908755004406
    2. 'visited' → logprob: -3.2956907749176025
    3. '
' → logprob: -5.295691013336182
    4. '   ' → logprob: -6.045691013336182
    5. 'from' → logprob: -8.545690536499023
    6. '    
' → logprob: -11.045690536499023
    7. ' queue' → logprob: -11.920690536499023
    8. 'que' → logprob: -12.170690536499023
    9. 'q' → logprob: -12.170690536499023
    10. '       ' → logprob: -12.920690536499023

Token 633: ' Vis' (ID: 9469)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.31721147894859314
    2. 'queue' → logprob: -1.3172115087509155
    3. 'from' → logprob: -6.067211627960205
    4. '   ' → logprob: -7.067211627960205
    5. '
' → logprob: -7.317211627960205
    6. 'q' → logprob: -10.067211151123047
    7. 'que' → logprob: -10.942211151123047
    8. ' visited' → logprob: -10.942211151123047
    9. 'seen' → logprob: -11.692211151123047
    10. ' queue' → logprob: -12.567211151123047

Token 634: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -2.935296834039036e-06
    2. '
' → logprob: -13.12500286102295
    3. 'ted' → logprob: -15.12500286102295
    4. 'isted' → logprob: -15.62500286102295
    5. 'ITED' → logprob: -15.62500286102295
    6. '

' → logprob: -16.250003814697266
    7. '#' → logprob: -16.875003814697266
    8. 'ed' → logprob: -16.875003814697266
    9. 'it' → logprob: -17.750003814697266
    10. 'iting' → logprob: -17.875003814697266

Token 635: ' set' (ID: 920)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012763554230332375
    2. '=' → logprob: -4.387763500213623
    3. '_states' → logprob: -8.887763977050781
    4. '=set' → logprob: -9.137763977050781
    5. 'states' → logprob: -13.137763977050781
    6. ' ' → logprob: -13.512763977050781
    7. 'set' → logprob: -13.887763977050781
    8. '_' → logprob: -14.512763977050781
    9. 's' → logprob: -14.762763977050781
    10. '  ' → logprob: -14.762763977050781

Token 636: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048685021698474884
    2. '=' → logprob: -3.048685073852539
    3. '=set' → logprob: -9.423685073852539
    4. 'visited' → logprob: -11.298685073852539
    5. 'set' → logprob: -12.923685073852539
    6. '   ' → logprob: -13.673685073852539
    7. '```' → logprob: -15.548685073852539
    8. ')' → logprob: -15.548685073852539
    9. ',' → logprob: -16.29868507385254
    10. ' =
' → logprob: -16.42368507385254

Token 637: ' avoid' (ID: 8397)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.0760037899017334
    2. 'set' → logprob: -1.2010037899017334
    3. 'store' → logprob: -1.4510037899017334
    4. 'add' → logprob: -2.5760037899017334
    5. '=set' → logprob: -3.9510037899017334
    6. 'keep' → logprob: -4.2010040283203125
    7. 'hold' → logprob: -6.2010040283203125
    8. 'track' → logprob: -6.2010040283203125
    9. 'avoid' → logprob: -6.2010040283203125
    10. ' store' → logprob: -6.3260040283203125

Token 638: ' repeated' (ID: 24161)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.025223782286047935
    2. 'states' → logprob: -4.650223731994629
    3. ' states' → logprob: -4.900223731994629
    4. ' visited' → logprob: -5.525223731994629
    5. 'seen' → logprob: -6.275223731994629
    6. ')' → logprob: -6.900223731994629
    7. 'set' → logprob: -8.025223731994629
    8. '_states' → logprob: -8.775223731994629
    9. ' seen' → logprob: -9.400223731994629
    10. 'add' → logprob: -9.525223731994629

Token 639: ' states' (ID: 9407)
  Prédit: '_states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.5526435375213623
    2. 'states' → logprob: -1.4276435375213623
    3. ' states' → logprob: -1.8026435375213623
    4. ' =' → logprob: -4.427643775939941
    5. ')' → logprob: -6.177643775939941
    6. ' ' → logprob: -6.177643775939941
    7. '   ' → logprob: -6.552643775939941
    8. 's' → logprob: -7.552643775939941
    9. '=' → logprob: -8.177643775939941
    10. '       ' → logprob: -8.677643775939941

Token 640: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46181726455688477
    2. 'visited' → logprob: -1.0868172645568848
    3. ' visited' → logprob: -3.5868172645568848
    4. '=' → logprob: -5.336817264556885
    5. '   ' → logprob: -10.711816787719727
    6. ',' → logprob: -11.336816787719727
    7. '
' → logprob: -11.586816787719727
    8. '       ' → logprob: -11.836816787719727
    9. 'seen' → logprob: -11.836816787719727
    10. ' =
' → logprob: -12.586816787719727

Token 641: '       ' (ID: 309)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.47469356656074524
    2. ' visited' → logprob: -0.9746935367584229
    3. '       ' → logprob: -7.599693775177002
    4. ' =' → logprob: -9.724693298339844
    5. '
' → logprob: -10.474693298339844
    6. '   ' → logprob: -10.724693298339844
    7. ',' → logprob: -13.724693298339844
    8. 'Visited' → logprob: -13.849693298339844
    9. '=' → logprob: -13.974693298339844
    10. '        
' → logprob: -14.599693298339844

Token 642: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -2.5776860184123507e-06
    2. ' visited' → logprob: -13.00000286102295
    3. '       ' → logprob: -16.125001907348633
    4. '   ' → logprob: -16.375001907348633
    5. 'import' → logprob: -18.625001907348633
    6. 'seen' → logprob: -19.000001907348633
    7. 'vis' → logprob: -19.500001907348633
    8. '
' → logprob: -19.625001907348633
    9. '           ' → logprob: -20.000001907348633
    10. 'from' → logprob: -20.500001907348633

Token 643: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269463747739792
    2. '=' → logprob: -2.126946449279785
    3. '=set' → logprob: -11.126946449279785
    4. ')' → logprob: -13.626946449279785
    5. '.add' → logprob: -13.876946449279785
    6. ',' → logprob: -14.876946449279785
    7. ' ' → logprob: -15.251946449279785
    8. '.' → logprob: -15.376946449279785
    9. 's' → logprob: -16.00194549560547
    10. ' =
' → logprob: -16.25194549560547

Token 644: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.000972325331531465
    2. '{' → logprob: -7.250972270965576
    3. ' set' → logprob: -8.250972747802734
    4. ' {' → logprob: -13.625972747802734
    5. '=set' → logprob: -16.750972747802734
    6. '	set' → logprob: -17.625972747802734
    7. '   ' → logprob: -17.875972747802734
    8. ' ' → logprob: -19.250972747802734
    9. '(set' → logprob: -19.250972747802734
    10. '{s' → logprob: -19.500972747802734

Token 645: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017276734113693237
    2. '()' → logprob: -4.892276763916016
    3. '(
' → logprob: -6.392276763916016
    4. '([' → logprob: -6.392276763916016
    5. '(start' → logprob: -6.517276763916016
    6. '<|end|>' → logprob: -6.517276763916016
    7. '((' → logprob: -7.267276763916016
    8. '(space' → logprob: -7.517276763916016
    9. ' (' → logprob: -8.017276763916016
    10. '({' → logprob: -8.017276763916016

Token 646: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45100346207618713
    2. ' =' → logprob: -1.4510034322738647
    3. 'visited' → logprob: -3.2010035514831543
    4. ' visited' → logprob: -3.7010035514831543
    5. '       ' → logprob: -3.8260035514831543
    6. '    
' → logprob: -4.326003551483154
    7. ' 
' → logprob: -4.826003551483154
    8. '
' → logprob: -5.076003551483154
    9. ')' → logprob: -5.951003551483154
    10. '<|end|>' → logprob: -6.076003551483154

Token 647: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.09463509172201157
    2. 'queue' → logprob: -2.844635009765625
    3. '   ' → logprob: -3.844635009765625
    4. '       ' → logprob: -4.719635009765625
    5. 'from' → logprob: -7.219635009765625
    6. ' visited' → logprob: -7.344635009765625
    7. '
' → logprob: -7.969635009765625
    8. ' queue' → logprob: -9.719635009765625
    9. 'import' → logprob: -11.094635009765625
    10. 'deque' → logprob: -12.094635009765625

Token 648: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.023301033303141594
    2. '.' → logprob: -3.773301124572754
    3. '.setdefault' → logprob: -11.148301124572754
    4. '<|end|>' → logprob: -11.523301124572754
    5. ' .' → logprob: -11.898301124572754
    6. '_add' → logprob: -12.023301124572754
    7. '.append' → logprob: -12.273301124572754
    8. 'add' → logprob: -12.523301124572754
    9. ').' → logprob: -13.148301124572754
    10. '<|end|>' → logprob: -13.148301124572754

Token 649: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -5.9795445849886164e-05
    2. '(' → logprob: -9.750060081481934
    3. '((' → logprob: -14.000060081481934
    4. 'start' → logprob: -14.500060081481934
    5. '(st' → logprob: -16.625059127807617
    6. ' (' → logprob: -16.625059127807617
    7. '(
' → logprob: -17.500059127807617
    8. '(s' → logprob: -17.750059127807617
    9. '(state' → logprob: -17.875059127807617
    10. '(end' → logprob: -19.375059127807617

Token 650: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -1.8624639324116288e-06
    2. 'state' → logprob: -13.375001907348633
    3. '_start' → logprob: -16.125001907348633
    4. '_states' → logprob: -16.250001907348633
    5. ')' → logprob: -16.625001907348633
    6. ')_' → logprob: -18.375001907348633
    7. '_STATE' → logprob: -18.750001907348633
    8. '   ' → logprob: -18.750001907348633
    9. 's' → logprob: -18.875001907348633
    10. '```' → logprob: -19.125001907348633

Token 651: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010259009432047606
    2. ')
' → logprob: -7.376025676727295
    3. '       ' → logprob: -8.626026153564453
    4. '
' → logprob: -9.001026153564453
    5. '   ' → logprob: -10.501026153564453
    6. ',' → logprob: -10.501026153564453
    7. ' )' → logprob: -10.626026153564453
    8. ',
' → logprob: -12.126026153564453
    9. '<|end|>' → logprob: -12.376026153564453
    10. '),' → logprob: -13.251026153564453

Token 652: '       ' (ID: 309)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.898013710975647
    2. '   ' → logprob: -1.273013710975647
    3. '       ' → logprob: -1.273013710975647
    4. '
' → logprob: -3.8980135917663574
    5. ' queue' → logprob: -5.273013591766357
    6. '```' → logprob: -5.773013591766357
    7. 'from' → logprob: -6.023013591766357
    8. '        
' → logprob: -7.523013591766357
    9. '    
' → logprob: -7.648013591766357
    10. '	queue' → logprob: -8.523014068603516

Token 653: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.007149622309952974
    2. '   ' → logprob: -5.757149696350098
    3. '       ' → logprob: -5.757149696350098
    4. 'from' → logprob: -7.632149696350098
    5. ' queue' → logprob: -8.632149696350098
    6. '
' → logprob: -9.757149696350098
    7. '```' → logprob: -10.007149696350098
    8. 'que' → logprob: -10.882149696350098
    9. 'q' → logprob: -11.132149696350098
    10. '``' → logprob: -13.632149696350098

Token 654: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10025304555892944
    2. '=' → logprob: -2.350253105163574
    3. '.append' → logprob: -10.850253105163574
    4. '.' → logprob: -10.850253105163574
    5. ')' → logprob: -12.725253105163574
    6. '   ' → logprob: -13.850253105163574
    7. '.=' → logprob: -14.725253105163574
    8. '=[]' → logprob: -14.850253105163574
    9. '<|end|>' → logprob: -14.850253105163574
    10. ' ' → logprob: -15.225253105163574

Token 655: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.25192928314208984
    2. ' deque' → logprob: -1.5019292831420898
    3. 'Deque' → logprob: -15.87692928314209
    4. 'de' → logprob: -17.876930236816406
    5. '   ' → logprob: -18.376930236816406
    6. '	de' → logprob: -19.501930236816406
    7. 'collections' → logprob: -19.876930236816406
    8. '```' → logprob: -19.876930236816406
    9. '(de' → logprob: -21.001930236816406
    10. ' ' → logprob: -21.376930236816406

Token 656: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3751813471317291
    2. '([' → logprob: -1.7501813173294067
    3. '([(' → logprob: -2.1251814365386963
    4. '(' → logprob: -4.375181198120117
    5. '([
' → logprob: -5.500181198120117
    6. '(start' → logprob: -6.375181198120117
    7. '([]' → logprob: -8.000181198120117
    8. '()
' → logprob: -8.375181198120117
    9. '[(' → logprob: -8.625181198120117
    10. '((' → logprob: -8.750181198120117

Token 657: '       ' (ID: 309)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.4259969890117645
    2. '       ' → logprob: -1.425997018814087
    3. '(queue' → logprob: -2.550997018814087
    4. '   ' → logprob: -4.300996780395508
    5. '.append' → logprob: -5.050996780395508
    6. ' queue' → logprob: -5.425996780395508
    7. '.queue' → logprob: -6.300996780395508
    8. '	queue' → logprob: -6.675996780395508
    9. '.enqueue' → logprob: -8.175996780395508
    10. '=' → logprob: -8.425996780395508

Token 658: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.00021021578868385404
    2. ' queue' → logprob: -8.50020980834961
    3. '       ' → logprob: -12.00020980834961
    4. '   ' → logprob: -14.75020980834961
    5. '(queue' → logprob: -16.37520980834961
    6. '```' → logprob: -17.62520980834961
    7. '	queue' → logprob: -18.50020980834961
    8. '
' → logprob: -19.37520980834961
    9. '.queue' → logprob: -19.75020980834961
    10. 'append' → logprob: -20.75020980834961

Token 659: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002469709375873208
    2. '.' → logprob: -6.627469539642334
    3. '.p' → logprob: -7.377469539642334
    4. '.extend' → logprob: -8.127470016479492
    5. '.put' → logprob: -9.252470016479492
    6. '.enqueue' → logprob: -9.252470016479492
    7. ').' → logprob: -11.627470016479492
    8. '.Append' → logprob: -12.877470016479492
    9. '.emplace' → logprob: -13.002470016479492
    10. '   ' → logprob: -13.377470016479492

Token 660: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.3166506588459015
    2. '(start' → logprob: -1.316650629043579
    3. '(' → logprob: -5.691650867462158
    4. ' (' → logprob: -12.816650390625
    5. 'start' → logprob: -12.816650390625
    6. '(
' → logprob: -13.316650390625
    7. '(s' → logprob: -14.566650390625
    8. '(('' → logprob: -15.191650390625
    9. '([' → logprob: -15.316650390625
    10. '```' → logprob: -15.441650390625

Token 661: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0024781543761491776
    2. '0' → logprob: -6.002478122711182
    3. ' start' → logprob: -13.37747859954834
    4. '(start' → logprob: -14.12747859954834
    5. '(' → logprob: -15.62747859954834
    6. ')' → logprob: -17.877477645874023
    7. '
' → logprob: -18.377477645874023
    8. ' ' → logprob: -18.377477645874023
    9. 'state' → logprob: -19.377477645874023
    10. '[start' → logprob: -19.377477645874023

Token 662: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -6.64708495605737e-05
    2. 'state' → logprob: -9.750066757202148
    3. '_states' → logprob: -12.750066757202148
    4. ',' → logprob: -13.250066757202148
    5. ')' → logprob: -13.875066757202148
    6. '_start' → logprob: -14.750066757202148
    7. 'State' → logprob: -14.750066757202148
    8. ')_' → logprob: -15.000066757202148
    9. '_STATE' → logprob: -15.125066757202148
    10. '   ' → logprob: -15.500066757202148

Token 663: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.749814019713085e-06
    2. ' ,' → logprob: -12.250006675720215
    3. ',
' → logprob: -13.750006675720215
    4. '0' → logprob: -14.125006675720215
    5. '       ' → logprob: -17.25000762939453
    6. '   ' → logprob: -17.37500762939453
    7. '
' → logprob: -17.50000762939453
    8. '‌,' → logprob: -17.62500762939453
    9. '`,' → logprob: -17.62500762939453
    10. '),' → logprob: -17.75000762939453

Token 664: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '
' → logprob: -19.875019073486328
    4. ' ' → logprob: -20.750019073486328
    5. ')' → logprob: -21.000019073486328
    6. '   ' → logprob: -21.250019073486328
    7. '00' → logprob: -22.250019073486328
    8. '۰' → logprob: -22.500019073486328
    9. ' 
' → logprob: -22.750019073486328
    10. ',' → logprob: -23.125019073486328

Token 665: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. ')' → logprob: -19.375
    4. '   ' → logprob: -21.125
    5. '۰' → logprob: -21.625
    6. '
' → logprob: -21.75
    7. '00' → logprob: -21.875
    8. '))' → logprob: -22.0
    9. '000' → logprob: -22.5
    10. '[' → logprob: -22.5

Token 666: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31327033042907715
    2. '))' → logprob: -1.3132703304290771
    3. ')
' → logprob: -12.688270568847656
    4. ')))' → logprob: -12.938270568847656
    5. '))
' → logprob: -13.438270568847656
    6. '),' → logprob: -14.563270568847656
    7. ')}' → logprob: -15.813270568847656
    8. '));' → logprob: -15.938270568847656
    9. ' )' → logprob: -16.063270568847656
    10. '   ' → logprob: -16.188270568847656

Token 667: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6687581539154053
    2. '       ' → logprob: -1.6687581539154053
    3. ')' → logprob: -1.7937581539154053
    4. '
' → logprob: -3.4187581539154053
    5. '<|end|>' → logprob: -3.5437581539154053
    6. '    
' → logprob: -3.7937581539154053
    7. ',' → logprob: -4.168758392333984
    8. '  
' → logprob: -4.668758392333984
    9. ':' → logprob: -5.043758392333984
    10. '        
' → logprob: -5.668758392333984

Token 668: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1666599065065384
    2. ')' → logprob: -2.1666598320007324
    3. 'while' → logprob: -4.416659832000732
    4. '    
' → logprob: -4.541659832000732
    5. '
' → logprob: -5.416659832000732
    6. '       ' → logprob: -5.791659832000732
    7. ' while' → logprob: -5.916659832000732
    8. ',' → logprob: -6.166659832000732
    9. '<|end|>' → logprob: -6.791659832000732
    10. '  
' → logprob: -7.041659832000732

Token 669: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05914526805281639
    2. '<|end|>' → logprob: -3.434145212173462
    3. ' )' → logprob: -4.559145450592041
    4. '0' → logprob: -5.309145450592041
    5. '
' → logprob: -6.434145450592041
    6. 'depth' → logprob: -6.559145450592041
    7. 'steps' → logprob: -6.684145450592041
    8. ' ' → logprob: -6.809145450592041
    9. '  
' → logprob: -7.309145450592041
    10. 'state' → logprob: -7.559145450592041

Token 670: 'state' (ID: 5294)
  Prédit: 'state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.1805095374584198
    2. 'positions' → logprob: -1.9305095672607422
    3. 'queue' → logprob: -5.305509567260742
    4. ' positions' → logprob: -5.430509567260742
    5. ')' → logprob: -5.555509567260742
    6. ' state' → logprob: -5.680509567260742
    7. 'states' → logprob: -7.055509567260742
    8. 'current' → logprob: -7.305509567260742
    9. ' queue' → logprob: -7.930509567260742
    10. 'position' → logprob: -8.305509567260742

Token 671: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00136368942912668
    2. ')' → logprob: -6.751363754272461
    3. ',)' → logprob: -9.001363754272461
    4. '<|end|>' → logprob: -10.501363754272461
    5. '),' → logprob: -11.251363754272461
    6. '[' → logprob: -12.251363754272461
    7. ' ,' → logprob: -12.376363754272461
    8. ',
' → logprob: -12.626363754272461
    9. '   ' → logprob: -12.876363754272461
    10. '       ' → logprob: -13.001363754272461

Token 672: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.05385554954409599
    2. ' steps' → logprob: -3.9288556575775146
    3. 'depth' → logprob: -4.1788554191589355
    4. 'distance' → logprob: -4.3038554191589355
    5. '0' → logprob: -6.4288554191589355
    6. 'step' → logprob: -7.4288554191589355
    7. ' distance' → logprob: -7.5538554191589355
    8. 'cost' → logprob: -8.053855895996094
    9. ' depth' → logprob: -8.178855895996094
    10. ')' → logprob: -8.428855895996094

Token 673: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.73446003627032e-05
    2. '))' → logprob: -9.250097274780273
    3. ' )' → logprob: -14.500097274780273
    4. ')
' → logprob: -15.250097274780273
    5. ')))' → logprob: -15.625097274780273
    6. '   ' → logprob: -16.000097274780273
    7. ')}' → logprob: -17.625097274780273
    8. '       ' → logprob: -17.875097274780273
    9. '),' → logprob: -18.375097274780273
    10. ')`' → logprob: -18.625097274780273

Token 674: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005984609015285969
    2. 'while' → logprob: -5.630984783172607
    3. '       ' → logprob: -6.255984783172607
    4. ' while' → logprob: -8.38098430633545
    5. '    
' → logprob: -9.38098430633545
    6. '
' → logprob: -9.88098430633545
    7. '	while' → logprob: -10.00598430633545
    8. '```' → logprob: -10.00598430633545
    9. ')' → logprob: -12.50598430633545
    10. '        
' → logprob: -13.13098430633545

Token 675: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -4.692145012086257e-05
    2. ' while' → logprob: -10.750046730041504
    3. '       ' → logprob: -11.000046730041504
    4. '   ' → logprob: -11.750046730041504
    5. '	while' → logprob: -14.625046730041504
    6. '
' → logprob: -15.375046730041504
    7. '```' → logprob: -15.750046730041504
    8. '        
' → logprob: -18.37504768371582
    9. 'While' → logprob: -18.37504768371582
    10. 'for' → logprob: -18.50004768371582

Token 676: ' Generate' (ID: 33886)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06239941343665123
    2. ' while' → logprob: -2.812399387359619
    3. '   ' → logprob: -8.062399864196777
    4. '
' → logprob: -9.437399864196777
    5. '       ' → logprob: -11.062399864196777
    6. ' 
' → logprob: -11.437399864196777
    7. '    
' → logprob: -12.687399864196777
    8. '	while' → logprob: -12.687399864196777
    9. 'While' → logprob: -13.187399864196777
    10. '        
' → logprob: -14.062399864196777

Token 677: ' all' (ID: 722)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.9678505659103394
    2. 'moves' → logprob: -1.9678505659103394
    3. 'next' → logprob: -2.467850685119629
    4. ' next' → logprob: -2.717850685119629
    5. 'all' → logprob: -2.842850685119629
    6. 'from' → logprob: -2.967850685119629
    7. ' possible' → logprob: -3.092850685119629
    8. 'neighbors' → logprob: -3.342850685119629
    9. '_next' → logprob: -3.842850685119629
    10. '_possible' → logprob: -3.967850685119629

Token 678: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -1.5317736864089966
    2. ' next' → logprob: -1.6567736864089966
    3. 'possible' → logprob: -1.9067736864089966
    4. 'moves' → logprob: -2.406773567199707
    5. '_moves' → logprob: -2.531773567199707
    6. '_next' → logprob: -2.781773567199707
    7. '_possible' → logprob: -3.156773567199707
    8. 'ghost' → logprob: -3.406773567199707
    9. 'next' → logprob: -3.656773567199707
    10. 'positions' → logprob: -3.906773567199707

Token 679: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.029250362887978554
    2. '_moves' → logprob: -4.029250144958496
    3. ' moves' → logprob: -4.904250144958496
    4. 'next' → logprob: -6.029250144958496
    5. ' next' → logprob: -7.404250144958496
    6. 'positions' → logprob: -8.654250144958496
    7. '_next' → logprob: -8.779250144958496
    8. '   ' → logprob: -8.904250144958496
    9. 'mov' → logprob: -10.279250144958496
    10. 'm' → logprob: -10.779250144958496

Token 680: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9101848602294922
    2. 'for' → logprob: -1.5351848602294922
    3. ':' → logprob: -1.9101848602294922
    4. ' for' → logprob: -2.535184860229492
    5. 's' → logprob: -3.035184860229492
    6. '   ' → logprob: -3.035184860229492
    7. '       ' → logprob: -3.535184860229492
    8. '=' → logprob: -5.035184860229492
    9. ':
' → logprob: -5.535184860229492
    10. ',' → logprob: -6.160184860229492

Token 681: ' ghosts' (ID: 100279)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.18695145845413208
    2. ' ghosts' → logprob: -2.1869513988494873
    3. '_' → logprob: -4.061951637268066
    4. ' ghost' → logprob: -4.186951637268066
    5. 'range' → logprob: -5.186951637268066
    6. 'each' → logprob: -5.186951637268066
    7. ' range' → logprob: -5.936951637268066
    8. 'i' → logprob: -5.936951637268066
    9. ' each' → logprob: -6.686951637268066
    10. '_g' → logprob: -6.686951637268066

Token 682: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33302292227745056
    2. 's' → logprob: -2.9580228328704834
    3. ':
' → logprob: -2.9580228328704834
    4. '   ' → logprob: -3.5830228328704834
    5. '
' → logprob: -3.8330228328704834
    6. '  
' → logprob: -4.0830230712890625
    7. '       ' → logprob: -4.4580230712890625
    8. ',' → logprob: -4.4580230712890625
    9. ' =' → logprob: -4.4580230712890625
    10. ' :' → logprob: -4.5830230712890625

Token 683: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16758936643600464
    2. 'moves' → logprob: -3.2925894260406494
    3. ' moves' → logprob: -3.4175894260406494
    4. ' for' → logprob: -3.4175894260406494
    5. '   ' → logprob: -4.41758918762207
    6. ' from' → logprob: -4.54258918762207
    7. 'for' → logprob: -5.16758918762207
    8. 'from' → logprob: -5.66758918762207
    9. '```' → logprob: -5.91758918762207
    10. '[' → logprob: -6.16758918762207

Token 684: ' #' (ID: 1069)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.6344215273857117
    2. '       ' → logprob: -1.1344215869903564
    3. ' moves' → logprob: -3.2594215869903564
    4. 'ghost' → logprob: -3.5094215869903564
    5. 'move' → logprob: -4.259421348571777
    6. 'all' → logprob: -4.384421348571777
    7. 'def' → logprob: -4.634421348571777
    8. 'for' → logprob: -4.759421348571777
    9. 'possible' → logprob: -4.759421348571777
    10. 'while' → logprob: -5.134421348571777

Token 685: ' Each' (ID: 11555)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.3342192769050598
    2. 'from' → logprob: -2.334219217300415
    3. ' moves' → logprob: -2.709219217300415
    4. 'move' → logprob: -3.459219217300415
    5. 'all' → logprob: -3.834219217300415
    6. 'for' → logprob: -4.209219455718994
    7. ' from' → logprob: -4.334219455718994
    8. 'while' → logprob: -4.584219455718994
    9. 'def' → logprob: -4.834219455718994
    10. ' move' → logprob: -5.209219455718994

Token 686: ' ghost' (ID: 33168)
  Prédit: ' ghost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ghost' → logprob: -0.5243682265281677
    2. 'ghost' → logprob: -0.8993682265281677
    3. '_' → logprob: -7.6493682861328125
    4. ' _' → logprob: -8.149368286132812
    5. '   ' → logprob: -9.649368286132812
    6. ' possible' → logprob: -9.899368286132812
    7. ' ghosts' → logprob: -10.274368286132812
    8. '_g' → logprob: -10.274368286132812
    9. ' ' → logprob: -10.774368286132812
    10. 'possible' → logprob: -10.774368286132812

Token 687: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.1677657663822174
    2. 'can' → logprob: -2.2927658557891846
    3. '_moves' → logprob: -3.6677658557891846
    4. ':' → logprob: -4.9177656173706055
    5. ' has' → logprob: -5.0427656173706055
    6. ''s' → logprob: -5.4177656173706055
    7. 's' → logprob: -6.1677656173706055
    8. '_can' → logprob: -6.2927656173706055
    9. 'moves' → logprob: -6.6677656173706055
    10. '_positions' → logprob: -7.0427656173706055

Token 688: ' move' (ID: 5275)
  Prédit: ' either'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' either' → logprob: -0.8317611217498779
    2. ' stay' → logprob: -1.581761121749878
    3. ' move' → logprob: -1.831761121749878
    4. 'move' → logprob: -1.956761121749878
    5. 'either' → logprob: -3.206761121749878
    6. 'stay' → logprob: -5.331761360168457
    7. 'choose' → logprob: -6.206761360168457
    8. ' have' → logprob: -6.331761360168457
    9. 'range' → logprob: -6.456761360168457
    10. '
' → logprob: -6.706761360168457

Token 689: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.1057277917861938
    2. ' in' → logprob: -1.8557277917861938
    3. ' either' → logprob: -1.8557277917861938
    4. 'to' → logprob: -2.6057276725769043
    5. 'either' → logprob: -3.3557276725769043
    6. 'in' → logprob: -3.3557276725769043
    7. ' (' → logprob: -3.4807276725769043
    8. ')' → logprob: -3.4807276725769043
    9. ' or' → logprob: -3.6057276725769043
    10. 'st' → logprob: -4.355727672576904

Token 690: ' one' (ID: 1001)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.1212115287780762
    2. 'dire' → logprob: -1.4962115287780762
    3. '[' → logprob: -1.9962115287780762
    4. '[-' → logprob: -2.621211528778076
    5. ' directions' → logprob: -3.621211528778076
    6. 'the' → logprob: -3.871211528778076
    7. 'adj' → logprob: -3.871211528778076
    8. '   ' → logprob: -3.996211528778076
    9. 'any' → logprob: -4.121211528778076
    10. '[i' → logprob: -4.371211528778076

Token 691: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.26645317673683167
    2. 'of' → logprob: -1.5164531469345093
    3. ')' → logprob: -4.891453266143799
    4. ' or' → logprob: -6.766453266143799
    5. '[' → logprob: -7.141453266143799
    6. '
' → logprob: -7.266453266143799
    7. ' )' → logprob: -7.391453266143799
    8. ' ,' → logprob: -7.641453266143799
    9. '_' → logprob: -7.766453266143799
    10. ',' → logprob: -7.766453266143799

Token 692: ' ' (ID: 220)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.613071620464325
    2. 'dire' → logprob: -1.1130716800689697
    3. '[' → logprob: -2.2380716800689697
    4. '4' → logprob: -4.988071441650391
    5. '5' → logprob: -5.363071441650391
    6. '   ' → logprob: -6.238071441650391
    7. '[-' → logprob: -6.363071441650391
    8. ' directions' → logprob: -6.363071441650391
    9. '[
' → logprob: -6.738071441650391
    10. 'the' → logprob: -6.738071441650391

Token 693: '5' (ID: 20)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.07064569741487503
    2. '[(' → logprob: -2.820645809173584
    3. '[' → logprob: -5.820645809173584
    4. 'the' → logprob: -5.820645809173584
    5. ' directions' → logprob: -6.945645809173584
    6. '[-' → logprob: -7.570645809173584
    7. '4' → logprob: -7.695645809173584
    8. '   ' → logprob: -8.195645332336426
    9. '5' → logprob: -9.445645332336426
    10. '[
' → logprob: -9.570645332336426

Token 694: ' positions' (ID: 15897)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.1141347885131836
    2. ' positions' → logprob: -1.4891347885131836
    3. ' possible' → logprob: -1.6141347885131836
    4. ' possibilities' → logprob: -2.7391347885131836
    5. ' [' → logprob: -3.3641347885131836
    6. ' [(' → logprob: -3.3641347885131836
    7. 'positions' → logprob: -3.4891347885131836
    8. '[' → logprob: -3.4891347885131836
    9. 'possible' → logprob: -4.364134788513184
    10. ')' → logprob: -4.739134788513184

Token 695: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1375293880701065
    2. ' (' → logprob: -2.6375293731689453
    3. ',' → logprob: -4.012529373168945
    4. '[(' → logprob: -4.262529373168945
    5. '[' → logprob: -5.012529373168945
    6. '(' → logprob: -5.262529373168945
    7. ' [(' → logprob: -5.512529373168945
    8. ' or' → logprob: -6.137529373168945
    9. '([(' → logprob: -6.762529373168945
    10. '[:]' → logprob: -7.012529373168945

Token 696: ' stay' (ID: 5092)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.6215888857841492
    2. ' [(' → logprob: -1.121588945388794
    3. ' [' → logprob: -2.621588945388794
    4. '[' → logprob: -3.371588945388794
    5. ' (' → logprob: -4.121588706970215
    6. '[-' → logprob: -5.121588706970215
    7. '[
' → logprob: -6.246588706970215
    8. '(' → logprob: -6.746588706970215
    9. ' [-' → logprob: -6.996588706970215
    10. ' [
' → logprob: -7.121588706970215

Token 697: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08374670147895813
    2. 'in' → logprob: -2.8337466716766357
    3. ')' → logprob: -4.458746910095215
    4. 'put' → logprob: -5.958746910095215
    5. ' ,' → logprob: -6.083746910095215
    6. ' in' → logprob: -6.458746910095215
    7. '(' → logprob: -7.458746910095215
    8. 'or' → logprob: -7.583746910095215
    9. ' (' → logprob: -7.833746910095215
    10. '.' → logprob: -7.958746910095215

Token 698: ' or' (ID: 503)
  Prédit: ' (-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (-' → logprob: -0.5798441767692566
    2. '(-' → logprob: -0.8298441767692566
    3. ' (' → logprob: -5.954843997955322
    4. ' up' → logprob: -7.454843997955322
    5. '(up' → logprob: -8.07984447479248
    6. 'up' → logprob: -9.07984447479248
    7. ' move' → logprob: -9.07984447479248
    8. '(' → logprob: -9.20484447479248
    9. 'move' → logprob: -10.70484447479248
    10. ' ' → logprob: -11.32984447479248

Token 699: ' move' (ID: 5275)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.16630735993385315
    2. ' move' → logprob: -2.2913074493408203
    3. ' (-' → logprob: -3.7913074493408203
    4. 'move' → logprob: -4.04130744934082
    5. ' up' → logprob: -4.66630744934082
    6. 'up' → logprob: -6.16630744934082
    7. ' go' → logprob: -9.16630744934082
    8. ' (' → logprob: -9.29130744934082
    9. '(up' → logprob: -9.41630744934082
    10. '-' → logprob: -10.41630744934082

Token 700: ' to' (ID: 316)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.18420156836509705
    2. ' (-' → logprob: -2.80920147895813
    3. ' up' → logprob: -3.18420147895813
    4. ',' → logprob: -3.80920147895813
    5. '(' → logprob: -4.184201717376709
    6. 'up' → logprob: -4.809201717376709
    7. ' (' → logprob: -5.434201717376709
    8. '_up' → logprob: -5.559201717376709
    9. '(up' → logprob: -5.559201717376709
    10. ')' → logprob: -5.809201717376709

Token 701: ' one' (ID: 1001)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.6886819005012512
    2. '(i' → logprob: -1.0636818408966064
    3. 'dire' → logprob: -2.6886818408966064
    4. '(up' → logprob: -2.8136818408966064
    5. 'up' → logprob: -4.1886820793151855
    6. ' directions' → logprob: -5.4386820793151855
    7. ' (' → logprob: -6.1886820793151855
    8. ' up' → logprob: -7.0636820793151855
    9. ' (-' → logprob: -7.5636820793151855
    10. '(d' → logprob: -7.9386820793151855

Token 702: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.38790467381477356
    2. ' of' → logprob: -1.1379046440124512
    3. '+' → logprob: -8.13790512084961
    4. '   ' → logprob: -8.26290512084961
    5. '
' → logprob: -8.76290512084961
    6. ' step' → logprob: -10.01290512084961
    7. ')' → logprob: -10.13790512084961
    8. ' ' → logprob: -10.51290512084961
    9. 'from' → logprob: -10.51290512084961
    10. 'up' → logprob: -10.76290512084961

Token 703: ' adjacent' (ID: 39069)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.5830285549163818
    2. ' directions' → logprob: -1.7080285549163818
    3. ' the' → logprob: -2.208028554916382
    4. 'the' → logprob: -2.708028554916382
    5. '(-' → logprob: -2.833028554916382
    6. ' (-' → logprob: -4.458028793334961
    7. '   ' → logprob: -5.333028793334961
    8. '(' → logprob: -6.083028793334961
    9. ' ' → logprob: -6.083028793334961
    10. ' (' → logprob: -7.083028793334961

Token 704: ' corridor' (ID: 92467)
  Prédit: ' cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cells' → logprob: -0.852415144443512
    2. 'cells' → logprob: -1.4774150848388672
    3. ',' → logprob: -1.7274150848388672
    4. ' positions' → logprob: -2.727415084838867
    5. 'positions' → logprob: -3.727415084838867
    6. ' (' → logprob: -3.977415084838867
    7. ')' → logprob: -4.477415084838867
    8. ' ,' → logprob: -4.477415084838867
    9. '_cells' → logprob: -4.477415084838867
    10. '(' → logprob: -5.227415084838867

Token 705: ' cells' (ID: 11242)
  Prédit: ' cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cells' → logprob: -0.7121175527572632
    2. 'cells' → logprob: -1.4621175527572632
    3. ',' → logprob: -2.0871176719665527
    4. '_cells' → logprob: -3.0871176719665527
    5. ' cell' → logprob: -3.9621176719665527
    6. '[' → logprob: -4.212117671966553
    7. ')' → logprob: -4.337117671966553
    8. 'cell' → logprob: -4.337117671966553
    9. ',
' → logprob: -4.962117671966553
    10. ' (' → logprob: -5.212117671966553

Token 706: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5929694771766663
    2. ',' → logprob: -1.8429694175720215
    3. ',
' → logprob: -2.2179694175720215
    4. '
' → logprob: -2.5929694175720215
    5. '        
' → logprob: -3.8429694175720215
    6. '   ' → logprob: -4.2179694175720215
    7. 'for' → logprob: -4.5929694175720215
    8. '[' → logprob: -4.8429694175720215
    9. '    
' → logprob: -5.4679694175720215
    10. '(' → logprob: -5.7179694175720215

Token 707: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0955499410629272
    2. '[' → logprob: -1.9705499410629272
    3. ',' → logprob: -2.095550060272217
    4. '
' → logprob: -2.345550060272217
    5. '   ' → logprob: -2.345550060272217
    6. 'for' → logprob: -3.345550060272217
    7. ':' → logprob: -3.845550060272217
    8. ',
' → logprob: -4.095550060272217
    9. '  
' → logprob: -4.345550060272217
    10. '[
' → logprob: -4.345550060272217

Token 708: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13419033586978912
    2. 'moves' → logprob: -2.509190320968628
    3. '        
' → logprob: -4.884190559387207
    4. ' moves' → logprob: -5.134190559387207
    5. 'from' → logprob: -5.509190559387207
    6. '   ' → logprob: -5.759190559387207
    7. 'possible' → logprob: -5.759190559387207
    8. ' from' → logprob: -6.009190559387207
    9. 'for' → logprob: -6.134190559387207
    10. '
' → logprob: -6.259190559387207

Token 709: ' Generate' (ID: 33886)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.12359143048524857
    2. '       ' → logprob: -3.373591423034668
    3. ' moves' → logprob: -3.998591423034668
    4. '   ' → logprob: -3.998591423034668
    5. 'for' → logprob: -4.123591423034668
    6. 'from' → logprob: -5.123591423034668
    7. 'move' → logprob: -5.373591423034668
    8. 'possible' → logprob: -5.748591423034668
    9. 'all' → logprob: -5.873591423034668
    10. 'next' → logprob: -6.623591423034668

Token 710: ' moves' (ID: 19523)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.4838382601737976
    2. ' all' → logprob: -1.3588383197784424
    3. 'from' → logprob: -3.1088383197784424
    4. 'moves' → logprob: -3.1088383197784424
    5. ' moves' → logprob: -4.233838081359863
    6. ' from' → logprob: -4.733838081359863
    7. 'possible' → logprob: -5.733838081359863
    8. 'def' → logprob: -6.358838081359863
    9. 'positions' → logprob: -6.608838081359863
    10. '_moves' → logprob: -6.733838081359863

Token 711: ' for' (ID: 395)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5125693678855896
    2. ' =' → logprob: -1.7625694274902344
    3. 'for' → logprob: -2.3875694274902344
    4. '[' → logprob: -3.6375694274902344
    5. ' for' → logprob: -3.7625694274902344
    6. '=' → logprob: -3.8875694274902344
    7. '   ' → logprob: -4.262569427490234
    8. ':' → logprob: -4.512569427490234
    9. '_list' → logprob: -5.012569427490234
    10. '_s' → logprob: -5.512569427490234

Token 712: ' each' (ID: 2454)
  Prédit: ' ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ghost' → logprob: -0.5946172475814819
    2. 'ghost' → logprob: -0.9696172475814819
    3. ' each' → logprob: -3.5946173667907715
    4. 'each' → logprob: -4.0946173667907715
    5. ' range' → logprob: -5.3446173667907715
    6. ' i' → logprob: -5.4696173667907715
    7. '_' → logprob: -5.7196173667907715
    8. 'i' → logprob: -6.0946173667907715
    9. ' ' → logprob: -6.2196173667907715
    10. ' ghosts' → logprob: -6.3446173667907715

Token 713: ' ghost' (ID: 33168)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.38960719108581543
    2. ' ghost' → logprob: -1.1396071910858154
    3. '_' → logprob: -6.1396074295043945
    4. ' _' → logprob: -8.764607429504395
    5. ' i' → logprob: -9.264607429504395
    6. 'i' → logprob: -9.514607429504395
    7. 'idx' → logprob: -10.264607429504395
    8. ' idx' → logprob: -10.639607429504395
    9. '   ' → logprob: -10.764607429504395
    10. '
' → logprob: -10.764607429504395

Token 714: ',' (ID: 11)
  Prédit: '_moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.7745285630226135
    2. 'moves' → logprob: -1.0245285034179688
    3. '   ' → logprob: -3.5245285034179688
    4. '       ' → logprob: -4.024528503417969
    5. ' =' → logprob: -4.149528503417969
    6. '_move' → logprob: -4.399528503417969
    7. 's' → logprob: -4.524528503417969
    8. 'for' → logprob: -4.774528503417969
    9. '
' → logprob: -4.899528503417969
    10. ':' → logprob: -5.149528503417969

Token 715: ' then' (ID: 1815)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.2138599157333374
    2. ' then' → logprob: -1.7138599157333374
    3. 'moves' → logprob: -1.8388599157333374
    4. ' moves' → logprob: -3.088860034942627
    5. '
' → logprob: -3.213860034942627
    6. '[
' → logprob: -3.213860034942627
    7. 'for' → logprob: -3.463860034942627
    8. ' 
' → logprob: -3.463860034942627
    9. '[' → logprob: -3.588860034942627
    10. ' for' → logprob: -3.838860034942627

Token 716: ' consider' (ID: 3331)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.29834413528442383
    2. 'import' → logprob: -1.7983441352844238
    3. 'for' → logprob: -3.798344135284424
    4. '#' → logprob: -3.923344135284424
    5. 'combine' → logprob: -4.048344135284424
    6. ' from' → logprob: -4.298344135284424
    7. '
' → logprob: -4.673344135284424
    8. 'def' → logprob: -5.423344135284424
    9. ' for' → logprob: -6.548344135284424
    10. '   ' → logprob: -6.923344135284424

Token 717: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.024426978081464767
    2. ' all' → logprob: -4.1494269371032715
    3. 'product' → logprob: -5.6494269371032715
    4. 'com' → logprob: -5.8994269371032715
    5. 'the' → logprob: -7.3994269371032715
    6. 'their' → logprob: -7.8994269371032715
    7. 'ghost' → logprob: -8.27442741394043
    8. ' combinations' → logprob: -8.27442741394043
    9. '   ' → logprob: -9.27442741394043
    10. ' itertools' → logprob: -9.52442741394043

Token 718: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.21326032280921936
    2. ' combinations' → logprob: -1.838260293006897
    3. '_com' → logprob: -4.088260173797607
    4. ' possible' → logprob: -4.713260173797607
    5. 'possible' → logprob: -5.338260173797607
    6. 'moves' → logprob: -6.963260173797607
    7. ' moves' → logprob: -7.963260173797607
    8. '_possible' → logprob: -8.588260650634766
    9. '   ' → logprob: -8.713260650634766
    10. '_moves' → logprob: -8.838260650634766

Token 719: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36934733390808105
    2. ',' → logprob: -2.619347333908081
    3. '\n' → logprob: -3.744347333908081
    4. '   ' → logprob: -3.869347333908081
    5. ':' → logprob: -3.994347333908081
    6. ',
' → logprob: -4.11934757232666
    7. 'import' → logprob: -4.24434757232666
    8. ' 
' → logprob: -4.24434757232666
    9. '(
' → logprob: -4.36934757232666
    10. '    
' → logprob: -4.36934757232666

Token 720: 'up' (ID: 817)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05205164849758148
    2. ' )' → logprob: -3.677051544189453
    3. '[' → logprob: -4.802051544189453
    4. ')
' → logprob: -4.927051544189453
    5. '5' → logprob: -6.552051544189453
    6. ']' → logprob: -6.677051544189453
    7. 'product' → logprob: -6.802051544189453
    8. ')]' → logprob: -6.802051544189453
    9. '])' → logprob: -6.927051544189453
    10. 'for' → logprob: -7.802051544189453

Token 721: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.3169042468070984
    2. ' to' → logprob: -1.4419043064117432
    3. '_to' → logprob: -4.191904067993164
    4. '       ' → logprob: -4.941904067993164
    5. '   ' → logprob: -5.441904067993164
    6. 'To' → logprob: -5.566904067993164
    7. ')' → logprob: -5.941904067993164
    8. ',' → logprob: -6.816904067993164
    9. '               ' → logprob: -9.316904067993164
    10. '  ' → logprob: -9.566904067993164

Token 722: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.12704621255397797
    2. ' ' → logprob: -2.1270461082458496
    3. '   ' → logprob: -9.877046585083008
    4. '6' → logprob: -10.127046585083008
    5. '```' → logprob: -11.252046585083008
    6. '    ' → logprob: -13.002046585083008
    7. '  ' → logprob: -13.127046585083008
    8. '25' → logprob: -13.502046585083008
    9. '``' → logprob: -13.627046585083008
    10. ' five' → logprob: -13.752046585083008

Token 723: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.008051715791225433
    2. '6' → logprob: -5.008051872253418
    3. '125' → logprob: -7.258051872253418
    4. '(' → logprob: -7.633051872253418
    5. '625' → logprob: -10.258051872253418
    6. '25' → logprob: -10.633051872253418
    7. '4' → logprob: -10.883051872253418
    8. '81' → logprob: -11.008051872253418
    9. '```' → logprob: -11.508051872253418
    10. '243' → logprob: -12.008051872253418

Token 724: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.1791456639766693
    2. ')' → logprob: -2.054145574569702
    3. ' **' → logprob: -3.429145574569702
    4. '**)' → logprob: -5.929145812988281
    5. ')**' → logprob: -7.804145812988281
    6. ' **)' → logprob: -8.929145812988281
    7. '^' → logprob: -9.554145812988281
    8. ' )' → logprob: -10.554145812988281
    9. ']' → logprob: -10.929145812988281
    10. '```' → logprob: -11.054145812988281

Token 725: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0011965400772169232
    2. ' n' → logprob: -6.751196384429932
    3. '
' → logprob: -12.25119686126709
    4. '   ' → logprob: -12.50119686126709
    5. ')n' → logprob: -12.50119686126709
    6. '(n' → logprob: -12.62619686126709
    7. '[n' → logprob: -12.87619686126709
    8. ' ' → logprob: -13.37619686126709
    9. '<n' → logprob: -13.37619686126709
    10. '	n' → logprob: -13.37619686126709

Token 726: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.85104202805087e-05
    2. ' )' → logprob: -10.500078201293945
    3. '),' → logprob: -11.250078201293945
    4. ').' → logprob: -11.375078201293945
    5. ')`' → logprob: -11.875078201293945
    6. ')
' → logprob: -12.375078201293945
    7. '`)' → logprob: -12.500078201293945
    8. '))' → logprob: -13.000078201293945
    9. 'possible' → logprob: -13.375078201293945
    10. '')' → logprob: -13.375078201293945

Token 727: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010194452479481697
    2. 'moves' → logprob: -5.635194301605225
    3. '
' → logprob: -6.510194301605225
    4. 'from' → logprob: -6.760194301605225
    5. 'for' → logprob: -7.135194301605225
    6. '   ' → logprob: -7.260194301605225
    7. 'import' → logprob: -7.385194301605225
    8. '        
' → logprob: -7.385194301605225
    9. ' for' → logprob: -8.260194778442383
    10. ' from' → logprob: -8.760194778442383

Token 728: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3317926228046417
    2. 'while' → logprob: -1.7067925930023193
    3. '   ' → logprob: -3.4567925930023193
    4. ' while' → logprob: -3.5817925930023193
    5. 'for' → logprob: -4.456792831420898
    6. '
' → logprob: -4.956792831420898
    7. '        
' → logprob: -5.206792831420898
    8. '    
' → logprob: -5.581792831420898
    9. ' for' → logprob: -5.831792831420898
    10. 'moves' → logprob: -5.956792831420898

Token 729: ' n' (ID: 297)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.9096238613128662
    2. '   ' → logprob: -1.4096238613128662
    3. 'moves' → logprob: -2.409623861312866
    4. '       ' → logprob: -2.534623861312866
    5. 'for' → logprob: -2.909623861312866
    6. 'from' → logprob: -3.034623861312866
    7. ' while' → logprob: -4.159624099731445
    8. 'def' → logprob: -4.159624099731445
    9. 'ghost' → logprob: -4.534624099731445
    10. ' from' → logprob: -4.659624099731445

Token 730: ' ≤' (ID: 72554)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17210225760936737
    2. ' <=' → logprob: -2.672102212905884
    3. '=' → logprob: -2.797102212905884
    4. '<=' → logprob: -4.547102451324463
    5. ')' → logprob: -5.172102451324463
    6. '   ' → logprob: -6.047102451324463
    7. '>' → logprob: -6.922102451324463
    8. '```' → logprob: -6.922102451324463
    9. '
' → logprob: -7.172102451324463
    10. ' >' → logprob: -7.547102451324463

Token 731: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.355249285697937
    2. '10' → logprob: -1.730249285697937
    3. ' ' → logprob: -2.8552494049072266
    4. '3' → logprob: -3.7302494049072266
    5. '8' → logprob: -4.105249404907227
    6. '4' → logprob: -4.230249404907227
    7. '7' → logprob: -5.730249404907227
    8. '9' → logprob: -5.980249404907227
    9. '6' → logprob: -6.355249404907227
    10. '20' → logprob: -7.605249404907227

Token 732: '3' (ID: 18)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.5181828141212463
    2. '4' → logprob: -1.7681827545166016
    3. '3' → logprob: -2.1431827545166016
    4. '10' → logprob: -2.8931827545166016
    5. '8' → logprob: -3.3931827545166016
    6. '6' → logprob: -4.393182754516602
    7. '7' → logprob: -4.893182754516602
    8. '9' → logprob: -5.018182754516602
    9. '2' → logprob: -7.518182754516602
    10. '12' → logprob: -8.893182754516602

Token 733: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7450272440910339
    2. '   ' → logprob: -1.2450273036956787
    3. '       ' → logprob: -1.6200273036956787
    4. '    
' → logprob: -3.8700273036956787
    5. '        
' → logprob: -5.2450270652771
    6. 'while' → logprob: -5.6200270652771
    7. ' while' → logprob: -6.1200270652771
    8. ':' → logprob: -6.7450270652771
    9. '  
' → logprob: -6.9950270652771
    10. ')' → logprob: -6.9950270652771

Token 734: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0853939056396484
    2. ' so' → logprob: -1.4603939056396484
    3. ' for' → logprob: -1.8353939056396484
    4. '    ' → logprob: -2.9603939056396484
    5. '        ' → logprob: -3.3353939056396484
    6. ')' → logprob: -3.3353939056396484
    7. 'for' → logprob: -3.4603939056396484
    8. '        
' → logprob: -3.9603939056396484
    9. '   ' → logprob: -4.085393905639648
    10. ' and' → logprob: -4.335393905639648

Token 735: ' at' (ID: 540)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.6876090168952942
    2. ' for' → logprob: -1.9376089572906494
    3. 'True' → logprob: -2.1876089572906494
    4. ' n' → logprob: -2.4376089572906494
    5. '5' → logprob: -3.5626089572906494
    6. 'for' → logprob: -3.5626089572906494
    7. 'n' → logprob: -3.9376089572906494
    8. ' pass' → logprob: -4.5626091957092285
    9. 'pass' → logprob: -4.6876091957092285
    10. 'import' → logprob: -4.9376091957092285

Token 736: ' most' (ID: 1645)
  Prédit: ' most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' most' → logprob: -0.4742867052555084
    2. 'most' → logprob: -0.974286675453186
    3. 'max' → logprob: -8.849287033081055
    4. ' max' → logprob: -10.224287033081055
    5. 'Most' → logprob: -11.474287033081055
    6. 'least' → logprob: -12.599287033081055
    7. 'maximum' → logprob: -12.724287033081055
    8. ' worst' → logprob: -12.849287033081055
    9. ' maximum' → logprob: -13.099287033081055
    10. '   ' → logprob: -13.224287033081055

Token 737: ' ' (ID: 220)
  Prédit: '125'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '125' → logprob: -0.39126792550086975
    2. ' ' → logprob: -1.1412678956985474
    3. '5' → logprob: -5.641267776489258
    4. '   ' → logprob: -8.141267776489258
    5. '121' → logprob: -8.891267776489258
    6. '  ' → logprob: -9.766267776489258
    7. '(' → logprob: -9.891267776489258
    8. '25' → logprob: -10.141267776489258
    9. '122' → logprob: -10.266267776489258
    10. '120' → logprob: -10.516267776489258

Token 738: '125' (ID: 10676)
  Prédit: '125'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '125' → logprob: -0.0002467966405674815
    2. '5' → logprob: -9.12524700164795
    3. ' ' → logprob: -9.12524700164795
    4. '(' → logprob: -11.00024700164795
    5. '   ' → logprob: -11.87524700164795
    6. '  ' → logprob: -13.75024700164795
    7. '```' → logprob: -14.25024700164795
    8. '15' → logprob: -14.81274700164795
    9. '375' → logprob: -14.81274700164795
    10. ' ' → logprob: -15.18774700164795

Token 739: ' states' (ID: 9407)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8208742737770081
    2. '       ' → logprob: -0.8208742737770081
    3. '   ' → logprob: -3.1958742141723633
    4. 'while' → logprob: -3.4458742141723633
    5. ')' → logprob: -4.070874214172363
    6. '        
' → logprob: -4.820874214172363
    7. ')
' → logprob: -5.570874214172363
    8. '    
' → logprob: -5.695874214172363
    9. 'for' → logprob: -6.320874214172363
    10. '```' → logprob: -6.320874214172363

Token 740: ' per' (ID: 777)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31557467579841614
    2. '       ' → logprob: -1.5655746459960938
    3. 'while' → logprob: -3.6905746459960938
    4. '
' → logprob: -3.9405746459960938
    5. ' while' → logprob: -4.315574645996094
    6. '    
' → logprob: -5.940574645996094
    7. '        
' → logprob: -6.940574645996094
    8. '	while' → logprob: -9.565574645996094
    9. 'While' → logprob: -10.190574645996094
    10. 'def' → logprob: -10.190574645996094

Token 741: ' iteration' (ID: 43155)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.005255337804555893
    2. 'step' → logprob: -5.630255222320557
    3. 'state' → logprob: -7.380255222320557
    4. ' ghost' → logprob: -7.755255222320557
    5. 'move' → logprob: -8.255255699157715
    6. 'token' → logprob: -9.505255699157715
    7. 'level' → logprob: -10.130255699157715
    8. 'iteration' → logprob: -10.255255699157715
    9. 'round' → logprob: -10.630255699157715
    10. 'turn' → logprob: -10.630255699157715

Token 742: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45965030789375305
    2. 'while' → logprob: -1.2096502780914307
    3. ' while' → logprob: -3.2096502780914307
    4. '       ' → logprob: -4.08465051651001
    5. '
' → logprob: -5.08465051651001
    6. '    
' → logprob: -5.33465051651001
    7. '        
' → logprob: -7.45965051651001
    8. 'def' → logprob: -7.70965051651001
    9. '	while' → logprob: -7.83465051651001
    10. 'for' → logprob: -8.834650039672852

Token 743: 'manageable' (ID: 196465)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007219645194709301
    2. ' )' → logprob: -7.5007219314575195
    3. ').' → logprob: -9.00072193145752
    4. ')
' → logprob: -11.62572193145752
    5. 'for' → logprob: -11.62572193145752
    6. ' for' → logprob: -12.25072193145752
    7. '   ' → logprob: -12.37572193145752
    8. '       ' → logprob: -13.00072193145752
    9. ',' → logprob: -13.37572193145752
    10. '#' → logprob: -13.50072193145752

Token 744: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001215475145727396
    2. '       ' → logprob: -7.12621545791626
    3. ')
' → logprob: -8.251215934753418
    4. '   ' → logprob: -9.251215934753418
    5. ' )' → logprob: -10.751215934753418
    6. ').' → logprob: -11.751215934753418
    7. ')

' → logprob: -12.126215934753418
    8. ')
' → logprob: -12.876215934753418
    9. '           ' → logprob: -13.126215934753418
    10. ')`' → logprob: -13.126215934753418

Token 745: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027056394144892693
    2. '   ' → logprob: -4.0270562171936035
    3. '
' → logprob: -5.4020562171936035
    4. 'while' → logprob: -6.6520562171936035
    5. ' while' → logprob: -6.7770562171936035
    6. '        
' → logprob: -6.9020562171936035
    7. '    
' → logprob: -7.4020562171936035
    8. '```' → logprob: -8.277056694030762
    9. ' 
' → logprob: -11.152056694030762
    10. '           ' → logprob: -11.777056694030762

Token 746: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.1631331443786621
    2. '       ' → logprob: -2.038133144378662
    3. 'for' → logprob: -4.413133144378662
    4. '   ' → logprob: -5.288133144378662
    5. ' while' → logprob: -5.913133144378662
    6. 'def' → logprob: -9.03813362121582
    7. '
' → logprob: -9.41313362121582
    8. ' for' → logprob: -9.91313362121582
    9. '        
' → logprob: -10.53813362121582
    10. '    
' → logprob: -10.66313362121582

Token 747: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.038273051381111145
    2. ' queue' → logprob: -3.2882730960845947
    3. 'len' → logprob: -8.663272857666016
    4. 'True' → logprob: -10.038272857666016
    5. ' len' → logprob: -11.663272857666016
    6. ' True' → logprob: -12.913272857666016
    7. '(queue' → logprob: -12.913272857666016
    8. '	queue' → logprob: -13.913272857666016
    9. 'que' → logprob: -15.038272857666016
    10. '.queue' → logprob: -16.163272857666016

Token 748: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6252713799476624
    2. ':
' → logprob: -1.0002713203430176
    3. '.p' → logprob: -2.5002713203430176
    4. '.append' → logprob: -4.375271320343018
    5. '.' → logprob: -6.875271320343018
    6. '.pop' → logprob: -7.750271320343018
    7. '```' → logprob: -7.875271320343018
    8. '   ' → logprob: -8.625271797180176
    9. '):
' → logprob: -9.500271797180176
    10. '[' → logprob: -9.500271797180176

Token 749: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0553332157433033
    2. '       ' → logprob: -3.680333137512207
    3. '   ' → logprob: -4.055333137512207
    4. 'state' → logprob: -5.055333137512207
    5. '```' → logprob: -6.805333137512207
    6. ',' → logprob: -6.930333137512207
    7. '(state' → logprob: -7.180333137512207
    8. '(' → logprob: -8.305333137512207
    9. ' state' → logprob: -8.305333137512207
    10. ' (' → logprob: -8.430333137512207

Token 750: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' (adapté à ' state') → logprob: -0.002450088504701853
    2. ' state' → logprob: -6.377449989318848
    3. 'current' → logprob: -7.502449989318848
    4. '(state' → logprob: -8.877449989318848
    5. '           ' → logprob: -10.127449989318848
    6. 'curr' → logprob: -12.252449989318848
    7. ' current' → logprob: -12.252449989318848
    8. 'cur' → logprob: -12.502449989318848
    9. '_state' → logprob: -14.002449989318848
    10. 'states' → logprob: -14.502449989318848

Token 751: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002771474653854966
    2. '=' → logprob: -6.877771377563477
    3. '_,' → logprob: -7.252771377563477
    4. ' ,' → logprob: -7.752771377563477
    5. ' =' → logprob: -7.877771377563477
    6. ',
' → logprob: -9.877771377563477
    7. ')' → logprob: -10.002771377563477
    8. '_next' → logprob: -10.252771377563477
    9. '_' → logprob: -10.752771377563477
    10. '[' → logprob: -10.877771377563477

Token 752: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.001208211062476039
    2. ' steps' → logprob: -6.751208305358887
    3. 'step' → logprob: -10.251208305358887
    4. 'dist' → logprob: -13.376208305358887
    5. 'depth' → logprob: -14.001208305358887
    6. 'cost' → logprob: -16.25120735168457
    7. ' step' → logprob: -16.87620735168457
    8. ' dist' → logprob: -18.25120735168457
    9. '0' → logprob: -18.37620735168457
    10. '_steps' → logprob: -18.62620735168457

Token 753: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5263403058052063
    2. '=' → logprob: -0.9013403058052063
    3. ',' → logprob: -6.026340484619141
    4. '           ' → logprob: -7.526340484619141
    5. ')' → logprob: -9.02634048461914
    6. '   ' → logprob: -10.40134048461914
    7. '            ' → logprob: -10.52634048461914
    8. '               ' → logprob: -10.65134048461914
    9. '    ' → logprob: -11.65134048461914
    10. '       ' → logprob: -11.90134048461914

Token 754: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.25193196535110474
    2. 'queue' → logprob: -1.50193190574646
    3. '(queue' → logprob: -13.251932144165039
    4. 'deque' → logprob: -14.376932144165039
    5. ' deque' → logprob: -15.751932144165039
    6. '	queue' → logprob: -16.00193214416504
    7. '.queue' → logprob: -16.12693214416504
    8. '   ' → logprob: -17.37693214416504
    9. '           ' → logprob: -17.37693214416504
    10. 'que' → logprob: -17.50193214416504

Token 755: '.p' (ID: 1201)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36365705728530884
    2. ' =' → logprob: -1.238656997680664
    3. '           ' → logprob: -5.238656997680664
    4. ',' → logprob: -5.488656997680664
    5. ':' → logprob: -6.238656997680664
    6. '       ' → logprob: -6.238656997680664
    7. '   ' → logprob: -7.488656997680664
    8. '               ' → logprob: -8.613656997680664
    9. ':
' → logprob: -8.863656997680664
    10. '[' → logprob: -8.988656997680664

Token 756: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.048620183020830154
    2. 'op' → logprob: -3.0486202239990234
    3. 'ople' → logprob: -11.298620223999023
    4. 'opl' → logprob: -12.048620223999023
    5. 'o' → logprob: -12.298620223999023
    6. '```' → logprob: -12.673620223999023
    7. 'append' → logprob: -13.048620223999023
    8. 'opup' → logprob: -13.423620223999023
    9. 'opt' → logprob: -14.298620223999023
    10. 'ope' → logprob: -14.673620223999023

Token 757: '()

' (ID: 5874)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40377095341682434
    2. '<|end|>' → logprob: -2.403770923614502
    3. ':' → logprob: -2.528770923614502
    4. ',' → logprob: -2.778770923614502
    5. ')' → logprob: -2.778770923614502
    6. '       ' → logprob: -5.153770923614502
    7. '               ' → logprob: -5.278770923614502
    8. ':
' → logprob: -5.278770923614502
    9. '            
' → logprob: -5.528770923614502
    10. '<|end|>' → logprob: -6.153770923614502

Token 758: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002669384120963514
    2. '       ' → logprob: -8.375267028808594
    3. '            
' → logprob: -11.125267028808594
    4. '   ' → logprob: -12.375267028808594
    5. 'if' → logprob: -12.625267028808594
    6. '        
' → logprob: -12.875267028808594
    7. '```' → logprob: -13.000267028808594
    8. '
' → logprob: -13.250267028808594
    9. ' if' → logprob: -13.375267028808594
    10. '    
' → logprob: -13.375267028808594

Token 759: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005253918468952179
    2. '           ' → logprob: -5.255253791809082
    3. ' if' → logprob: -11.880253791809082
    4. '#' (adapté à ' #') → logprob: -12.380253791809082
    5. 'for' → logprob: -12.755253791809082
    6. '```' → logprob: -12.880253791809082
    7. 'moves' → logprob: -13.630253791809082
    8. '            
' → logprob: -13.880253791809082
    9. 'positions' → logprob: -14.005253791809082
    10. '
' → logprob: -15.505253791809082

Token 760: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.9385402993066236e-05
    2. '#' → logprob: -11.250019073486328
    3. ' if' → logprob: -12.500019073486328
    4. 'If' → logprob: -13.875019073486328
    5. 'for' → logprob: -14.000019073486328
    6. '           ' → logprob: -14.750019073486328
    7. 'positions' → logprob: -16.250019073486328
    8. '   ' → logprob: -16.625019073486328
    9. '
' → logprob: -17.000019073486328
    10. '       ' → logprob: -17.250019073486328

Token 761: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20374271273612976
    2. ' if' → logprob: -1.7037427425384521
    3. 'state' → logprob: -6.328742504119873
    4. '           ' → logprob: -8.453742980957031
    5. ' state' → logprob: -8.578742980957031
    6. 'for' → logprob: -8.953742980957031
    7. ' for' → logprob: -11.953742980957031
    8. '   ' → logprob: -13.328742980957031
    9. '               ' → logprob: -14.078742980957031
    10. '
' → logprob: -14.203742980957031

Token 762: ' goal' (ID: 8583)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.0067156096920371056
    2. ' state' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.506715774536133
    4. ' ' → logprob: -18.631715774536133
    5. '(state' → logprob: -19.881715774536133
    6. '	state' → logprob: -21.006715774536133
    7. '  ' → logprob: -21.506715774536133
    8. '    ' → logprob: -21.756715774536133
    9. 'all' → logprob: -22.006715774536133
    10. '
' → logprob: -22.006715774536133

Token 763: ' reached' (ID: 15237)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0032742065377533436
    2. '_' → logprob: -7.003274440765381
    3. ' ==' → logprob: -7.378274440765381
    4. 'state' → logprob: -7.503274440765381
    5. '_states' → logprob: -7.503274440765381
    6. '_positions' → logprob: -9.378273963928223
    7. ' state' → logprob: -9.503273963928223
    8. '==' → logprob: -9.503273963928223
    9. ':' → logprob: -9.628273963928223
    10. ' if' → logprob: -10.253273963928223

Token 764: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.011373155459296e-05
    2. ' if' → logprob: -11.125030517578125
    3. 'if' → logprob: -11.375030517578125
    4. ',' → logprob: -13.875030517578125
    5. '<|end|>' → logprob: -14.750030517578125
    6. '               ' → logprob: -14.875030517578125
    7. '```' → logprob: -14.875030517578125
    8. ':' → logprob: -15.000030517578125
    9. '          ' → logprob: -15.125030517578125
    10. '   ' → logprob: -15.500030517578125

Token 765: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.534558552724775e-05
    2. 'if' → logprob: -11.750025749206543
    3. ' if' → logprob: -11.875025749206543
    4. '       ' → logprob: -12.250025749206543
    5. '<|end|>' → logprob: -13.500025749206543
    6. '```' → logprob: -13.625025749206543
    7. '               ' → logprob: -14.125025749206543
    8. ',' → logprob: -14.375025749206543
    9. '		' → logprob: -14.875025749206543
    10. '            
' → logprob: -15.125025749206543

Token 766: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03811493143439293
    2. '           ' → logprob: -3.5381150245666504
    3. ' if' → logprob: -4.78811502456665
    4. '       ' → logprob: -14.288114547729492
    5. '   ' → logprob: -14.538114547729492
    6. '```' → logprob: -15.163114547729492
    7. 'If' → logprob: -17.038114547729492
    8. '               ' → logprob: -17.288114547729492
    9. '          ' → logprob: -17.413114547729492
    10. '`' → logprob: -18.288114547729492

Token 767: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.31326258182525635
    2. ' state' → logprob: -1.3132625818252563
    3. '(state' → logprob: -14.813262939453125
    4. '   ' → logprob: -15.438262939453125
    5. ' all' → logprob: -15.813262939453125
    6. 'all' → logprob: -16.688262939453125
    7. '	state' → logprob: -16.938262939453125
    8. '_state' → logprob: -18.188262939453125
    9. ' ' → logprob: -18.313262939453125
    10. 'states' → logprob: -18.563262939453125

Token 768: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.012683049775660038
    2. '==' → logprob: -4.387682914733887
    3. '[' → logprob: -9.262682914733887
    4. ')' → logprob: -10.137682914733887
    5. ')==' → logprob: -10.637682914733887
    6. '=' → logprob: -12.012682914733887
    7. '[:]' → logprob: -13.137682914733887
    8. ' ' → logprob: -13.262682914733887
    9. ']==' → logprob: -13.387682914733887
    10. ' ==
' → logprob: -13.762682914733887

Token 769: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.011048170737922192
    2. ' goal' → logprob: -4.511048316955566
    3. '(goal' → logprob: -15.261048316955566
    4. '   ' → logprob: -16.76104736328125
    5. '.goal' → logprob: -18.01104736328125
    6. 'go' → logprob: -18.38604736328125
    7. '_goal' → logprob: -18.63604736328125
    8. ' ' → logprob: -19.26104736328125
    9. 'Goal' → logprob: -19.51104736328125
    10. '
' → logprob: -20.38604736328125

Token 770: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -2.117345684382599e-05
    2. '_' → logprob: -11.000020980834961
    3. '_states' → logprob: -13.000020980834961
    4. '_pos' → logprob: -14.375020980834961
    5. '_stat' → logprob: -14.875020980834961
    6. ' _' → logprob: -15.125020980834961
    7. ')_' → logprob: -15.625020980834961
    8. '_STATE' → logprob: -15.750020980834961
    9. ')' → logprob: -16.25002098083496
    10. '_s' → logprob: -16.25002098083496

Token 771: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028429439291357994
    2. ':
' → logprob: -3.7784295082092285
    3. '               ' → logprob: -5.2784295082092285
    4. '           ' → logprob: -10.27842903137207
    5. ':return' → logprob: -10.77842903137207
    6. '):
' → logprob: -12.40342903137207
    7. '):' → logprob: -12.77842903137207
    8. ')' → logprob: -13.02842903137207
    9. ':
' → logprob: -13.65342903137207
    10. ',' → logprob: -14.02842903137207

Token 772: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002222516923211515
    2. ':' → logprob: -8.750222206115723
    3. ':
' → logprob: -10.000222206115723
    4. ' return' → logprob: -12.375222206115723
    5. '           ' → logprob: -12.875222206115723
    6. '                   ' → logprob: -13.250222206115723
    7. ':return' → logprob: -13.250222206115723
    8. 'return' → logprob: -13.750222206115723
    9. '              ' → logprob: -14.000222206115723
    10. '                
' → logprob: -14.000222206115723

Token 773: ' print' (ID: 2123)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1831081062555313
    2. 'return' → logprob: -2.18310809135437
    3. 'print' (adapté à ' print') → logprob: -2.93310809135437
    4. ' return' → logprob: -6.683108329772949
    5. ' print' → logprob: -9.18310832977295
    6. '                   ' → logprob: -10.18310832977295
    7. '   ' → logprob: -12.68310832977295
    8. '
' → logprob: -13.18310832977295
    9. '           ' → logprob: -13.93310832977295
    10. '```' → logprob: -14.55810832977295

Token 774: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.093505099765025e-05
    2. 'steps' → logprob: -10.875020980834961
    3. ' (' → logprob: -13.375020980834961
    4. ' steps' → logprob: -15.250020980834961
    5. '(step' → logprob: -16.50002098083496
    6. '((' → logprob: -17.00002098083496
    7. '(
' → logprob: -17.37502098083496
    8. '(f' → logprob: -18.75002098083496
    9. '('' → logprob: -19.25002098083496
    10. '(`' → logprob: -19.62502098083496

Token 775: 'steps' (ID: 27176)
  Prédit: 'steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -3.7697225252486533e-06
    2. ' steps' → logprob: -12.500003814697266
    3. 'step' → logprob: -19.250003814697266
    4. '(' → logprob: -21.000003814697266
    5. '   ' → logprob: -22.625003814697266
    6. '_steps' → logprob: -23.500003814697266
    7. 'Steps' → logprob: -23.875003814697266
    8. '.steps' → logprob: -24.000003814697266
    9. 'str' → logprob: -25.625003814697266
    10. '0' → logprob: -25.625003814697266

Token 776: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2587917745113373
    2. ')' → logprob: -1.5087918043136597
    3. '               ' → logprob: -5.008791923522949
    4. ')
' → logprob: -9.25879192352295
    5. '                   ' → logprob: -10.50879192352295
    6. '           ' → logprob: -10.88379192352295
    7. ')return' → logprob: -11.25879192352295
    8. ')`
' → logprob: -13.63379192352295
    9. 'return' → logprob: -13.88379192352295
    10. '),' → logprob: -14.63379192352295

Token 777: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00015157493180595338
    2. '           ' → logprob: -9.000151634216309
    3. '                   ' → logprob: -10.875151634216309
    4. '<|end|>' → logprob: -12.750151634216309
    5. '                
' → logprob: -13.500151634216309
    6. '       ' → logprob: -13.875151634216309
    7. '```' → logprob: -14.000151634216309
    8. '                       ' → logprob: -14.250151634216309
    9. '              ' → logprob: -14.500151634216309
    10. '    
' → logprob: -15.125151634216309

Token 778: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25205445289611816
    2. 'return' → logprob: -1.5020544528961182
    3. ' return' → logprob: -9.002054214477539
    4. '                   ' → logprob: -14.502054214477539
    5. 'break' (adapté à ' break') → logprob: -14.627054214477539
    6. '```' → logprob: -15.002054214477539
    7. '			' → logprob: -15.377054214477539
    8. '	return' → logprob: -15.752054214477539
    9. '                       ' → logprob: -15.877054214477539
    10. '                
' → logprob: -15.877054214477539

Token 779: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010585900396108627
    2. '       ' → logprob: -4.635585784912109
    3. 'else' → logprob: -8.38558578491211
    4. '            
' → logprob: -9.01058578491211
    5. '    
' → logprob: -9.01058578491211
    6. '        
' → logprob: -9.38558578491211
    7. '```' → logprob: -9.38558578491211
    8. '​' → logprob: -10.38558578491211
    9. '  
' → logprob: -10.51058578491211
    10. '   ' → logprob: -10.51058578491211

Token 780: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012225652113556862
    2. '       ' → logprob: -4.51222562789917
    3. '            
' → logprob: -8.012226104736328
    4. 'for' → logprob: -8.512226104736328
    5. '    
' → logprob: -8.637226104736328
    6. '
' → logprob: -8.637226104736328
    7. '        
' → logprob: -9.012226104736328
    8. 'else' → logprob: -9.887226104736328
    9. '   ' → logprob: -10.012226104736328
    10. '  
' → logprob: -10.512226104736328

Token 781: ' #' (ID: 1069)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.8276003003120422
    2. 'for' → logprob: -1.2026002407073975
    3. '           ' → logprob: -1.7026002407073975
    4. '#' (adapté à ' #') → logprob: -3.3276002407073975
    5. 'all' → logprob: -4.202600479125977
    6. 'possible' → logprob: -4.702600479125977
    7. 'from' → logprob: -4.827600479125977
    8. 'move' → logprob: -5.202600479125977
    9. 'next' → logprob: -5.577600479125977
    10. 'mov' → logprob: -6.827600479125977

Token 782: ' Generate' (ID: 33886)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.050630196928977966
    2. 'for' → logprob: -4.17563009262085
    3. 'next' → logprob: -4.55063009262085
    4. 'possible' → logprob: -4.67563009262085
    5. 'all' → logprob: -5.05063009262085
    6. '#' → logprob: -5.42563009262085
    7. 'move' → logprob: -6.17563009262085
    8. 'from' → logprob: -7.55063009262085
    9. 'ghost' → logprob: -8.300630569458008
    10. 'mov' → logprob: -8.800630569458008

Token 783: ' possible' (ID: 4149)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -1.1513620615005493
    2. 'all' → logprob: -1.2763620615005493
    3. 'possible' → logprob: -1.2763620615005493
    4. 'next' → logprob: -2.1513619422912598
    5. 'from' → logprob: -5.02636194229126
    6. 'new' → logprob: -7.65136194229126
    7. '   ' → logprob: -7.90136194229126
    8. 'for' → logprob: -8.026362419128418
    9. 'neighbors' → logprob: -8.151362419128418
    10. ' moves' → logprob: -8.276362419128418

Token 784: ' next' (ID: 2613)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.2206612527370453
    2. '_moves' → logprob: -1.7206612825393677
    3. ' moves' → logprob: -3.970661163330078
    4. '   ' → logprob: -9.345661163330078
    5. 'positions' → logprob: -10.220661163330078
    6. ' next' → logprob: -10.595661163330078
    7. 'actions' → logprob: -11.345661163330078
    8. '_next' → logprob: -11.470661163330078
    9. 'next' → logprob: -11.720661163330078
    10. '_positions' → logprob: -12.095661163330078

Token 785: ' positions' (ID: 15897)
  Prédit: '_moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.39811408519744873
    2. '_positions' → logprob: -1.6481140851974487
    3. '_states' → logprob: -2.0231142044067383
    4. 'moves' → logprob: -6.648114204406738
    5. '_' → logprob: -7.273114204406738
    6. '_pos' → logprob: -7.273114204406738
    7. '_state' → logprob: -7.398114204406738
    8. 'positions' → logprob: -9.023114204406738
    9. '_move' → logprob: -9.148114204406738
    10. ' moves' → logprob: -9.648114204406738

Token 786: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10058210045099258
    2. 'moves' → logprob: -3.7255821228027344
    3. ' for' → logprob: -3.8505821228027344
    4. 'for' → logprob: -3.9755821228027344
    5. ':' → logprob: -4.600582122802734
    6. 'positions' → logprob: -5.475582122802734
    7. 'from' → logprob: -5.725582122802734
    8. '[next' → logprob: -5.850582122802734
    9. '            
' → logprob: -6.475582122802734
    10. ' next' → logprob: -6.600582122802734

Token 787: ' each' (ID: 2454)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.06582382321357727
    2. 'i' → logprob: -3.190823793411255
    3. 'each' → logprob: -4.065824031829834
    4. 'idx' → logprob: -5.940824031829834
    5. 'all' → logprob: -6.315824031829834
    6. ' ghost' → logprob: -7.940824031829834
    7. 'g' → logprob: -8.315823554992676
    8. '_' → logprob: -9.315823554992676
    9. ' i' → logprob: -9.815823554992676
    10. 'index' → logprob: -10.065823554992676

Token 788: ' ghost' (ID: 33168)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.07021539658308029
    2. ' ghost' → logprob: -2.6952154636383057
    3. '_' → logprob: -8.320215225219727
    4. '
' → logprob: -11.195215225219727
    5. '   ' → logprob: -12.070215225219727
    6. '_g' → logprob: -12.320215225219727
    7. ' _' → logprob: -12.320215225219727
    8. 'Ghost' → logprob: -13.570215225219727
    9. ' ' → logprob: -14.070215225219727
    10. '_i' → logprob: -14.320215225219727

Token 789: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009682666510343552
    2. ':' → logprob: -4.759682655334473
    3. ',' → logprob: -8.259682655334473
    4. '
' → logprob: -8.509682655334473
    5. '            
' → logprob: -8.509682655334473
    6. ':
' → logprob: -9.759682655334473
    7. 'positions' → logprob: -9.884682655334473
    8. ' =' → logprob: -10.759682655334473
    9. '=' → logprob: -10.759682655334473
    10. '          ' → logprob: -10.884682655334473

Token 790: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004529566504061222
    2. 'positions' → logprob: -8.750452995300293
    3. 'next' → logprob: -9.875452995300293
    4. 'for' → logprob: -10.000452995300293
    5. ' next' → logprob: -10.000452995300293
    6. '       ' → logprob: -10.250452995300293
    7. '   ' → logprob: -10.750452995300293
    8. ' for' → logprob: -10.875452995300293
    9. ' positions' → logprob: -11.125452995300293
    10. ':' → logprob: -11.625452995300293

Token 791: ' possible' (ID: 4149)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.04819813370704651
    2. 'all' → logprob: -3.5481982231140137
    3. 'moves' → logprob: -4.548198223114014
    4. 'possible' (adapté à ' possible') → logprob: -4.923198223114014
    5. 'poss' → logprob: -8.798197746276855
    6. '   ' → logprob: -9.548197746276855
    7. 'move' → logprob: -9.923197746276855
    8. 'ghost' → logprob: -9.923197746276855
    9. 'for' → logprob: -10.048197746276855
    10. 'options' → logprob: -10.798197746276855

Token 792: '_moves' (ID: 110706)
  Prédit: '_moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.024305051192641258
    2. '_positions' → logprob: -3.7743051052093506
    3. '_next' → logprob: -7.0243048667907715
    4. 'moves' → logprob: -9.02430534362793
    5. '_pos' → logprob: -10.27430534362793
    6. 's' → logprob: -12.77430534362793
    7. '_' → logprob: -12.89930534362793
    8. '_mov' → logprob: -13.64930534362793
    9. 'next' → logprob: -13.77430534362793
    10. 'Moves' → logprob: -13.89930534362793

Token 793: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869715929031372
    2. ' =' → logprob: -1.1369715929031372
    3. '[' → logprob: -10.511971473693848
    4. 's' → logprob: -10.636971473693848
    5. '=[' → logprob: -11.136971473693848
    6. '=[]' → logprob: -11.136971473693848
    7. '   ' → logprob: -11.511971473693848
    8. '.append' → logprob: -12.886971473693848
    9. '=[]
' → logprob: -13.761971473693848
    10. '[i' → logprob: -13.886971473693848

Token 794: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0173280518501997
    2. '[]
' → logprob: -4.267328262329102
    3. '[' → logprob: -5.767328262329102
    4. '[[' → logprob: -11.267328262329102
    5. '[][]' → logprob: -11.517328262329102
    6. ' []' → logprob: -12.267328262329102
    7. '[]

' → logprob: -13.642328262329102
    8. ' [[]' → logprob: -13.892328262329102
    9. '[
' → logprob: -14.392328262329102
    10. '[]"' → logprob: -15.142328262329102

Token 795: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6384839415550232
    2. '           ' → logprob: -1.388484001159668
    3. 'for' → logprob: -1.638484001159668
    4. '[' → logprob: -3.888484001159668
    5. '       ' → logprob: -5.888484001159668
    6. '```' → logprob: -6.388484001159668
    7. '[
' → logprob: -7.388484001159668
    8. '   ' → logprob: -7.888484001159668
    9. '            
' → logprob: -8.013484001159668
    10. '(' → logprob: -8.138484001159668

Token 796: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004937597084790468
    2. ' for' → logprob: -5.629937648773193
    3. '           ' → logprob: -6.629937648773193
    4. '   ' → logprob: -11.629937171936035
    5. '       ' → logprob: -12.504937171936035
    6. '	for' → logprob: -12.629937171936035
    7. ' ' → logprob: -15.379937171936035
    8. '```' → logprob: -15.629937171936035
    9. '               ' → logprob: -17.00493812561035
    10. '            
' → logprob: -17.87993812561035

Token 797: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3727141320705414
    2. 'idx' → logprob: -1.9977141618728638
    3. 'ghost' → logprob: -2.622714042663574
    4. 'i' → logprob: -2.872714042663574
    5. 'g' → logprob: -3.872714042663574
    6. ' idx' → logprob: -5.122714042663574
    7. ' pos' → logprob: -5.247714042663574
    8. 'gi' → logprob: -6.122714042663574
    9. '(pos' → logprob: -6.247714042663574
    10. ' ghost' → logprob: -6.247714042663574

Token 798: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011864418163895607
    2. 'in' → logprob: -4.636864185333252
    3. '=' → logprob: -7.011864185333252
    4. 's' → logprob: -7.261864185333252
    5. ' =' → logprob: -9.01186466217041
    6. ')' → logprob: -9.26186466217041
    7. 'x' → logprob: -9.88686466217041
    8. '_idx' → logprob: -10.26186466217041
    9. '[' → logprob: -10.38686466217041
    10. '_' → logprob: -10.76186466217041

Token 799: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.0010525768157094717
    2. '[state' → logprob: -8.001052856445312
    3. '[(' → logprob: -8.376052856445312
    4. '[' → logprob: -8.376052856445312
    5. 'range' → logprob: -8.501052856445312
    6. ' state' → logprob: -10.126052856445312
    7. '(state' → logprob: -11.751052856445312
    8. 'possible' → logprob: -14.126052856445312
    9. '   ' → logprob: -14.376052856445312
    10. '[
' → logprob: -14.626052856445312

Token 800: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.46656933426856995
    2. ':' → logprob: -1.0915693044662476
    3. '               ' → logprob: -4.216569423675537
    4. '_moves' → logprob: -4.591569423675537
    5. '           ' → logprob: -5.466569423675537
    6. '):
' → logprob: -6.091569423675537
    7. ',' → logprob: -6.591569423675537
    8. '[' → logprob: -7.091569423675537
    9. 'moves' → logprob: -7.216569423675537
    10. '=' → logprob: -7.341569423675537

Token 801: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009090794483199716
    2. '[' → logprob: -7.500908851623535
    3. '           ' → logprob: -8.750908851623535
    4. '   ' → logprob: -10.375908851623535
    5. '```' → logprob: -10.500908851623535
    6. ',' → logprob: -10.875908851623535
    7. '[]' → logprob: -10.875908851623535
    8. '	           ' → logprob: -11.000908851623535
    9. '       ' → logprob: -11.250908851623535
    10. '[
' → logprob: -11.375908851623535

Token 802: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' (adapté à ' moves') → logprob: -0.009647362865507603
    2. 'x' → logprob: -5.259647369384766
    3. 'm' → logprob: -6.384647369384766
    4. ' moves' → logprob: -7.134647369384766
    5. '               ' → logprob: -7.384647369384766
    6. 'possible' → logprob: -7.509647369384766
    7. '           ' → logprob: -8.759647369384766
    8. 'options' → logprob: -9.009647369384766
    9. '                   ' → logprob: -9.134647369384766
    10. '   ' → logprob: -9.384647369384766

Token 803: '_for' (ID: 11903)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890035957098007
    2. ' =' → logprob: -2.5789003372192383
    3. '.append' → logprob: -11.828900337219238
    4. '=[' → logprob: -13.453900337219238
    5. 's' → logprob: -14.828900337219238
    6. '[' → logprob: -15.078900337219238
    7. 'moves' → logprob: -15.203900337219238
    8. '=[]' → logprob: -15.453900337219238
    9. '_moves' → logprob: -15.953900337219238
    10. '   ' → logprob: -16.203901290893555

Token 804: '_' (ID: 62)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.008386092260479927
    2. '[pos' → logprob: -5.508386135101318
    3. '(pos' → logprob: -6.383386135101318
    4. 'ghost' → logprob: -7.008386135101318
    5. 'possible' → logprob: -7.758386135101318
    6. '_moves' → logprob: -7.883386135101318
    7. 'moves' → logprob: -8.13338565826416
    8. 'the' → logprob: -9.00838565826416
    9. ' pos' → logprob: -9.00838565826416
    10. '_pos' → logprob: -9.75838565826416

Token 805: 'ghost' (ID: 78754)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0005301565979607403
    2. 'ghost' → logprob: -7.750530242919922
    3. '(pos' → logprob: -9.875530242919922
    4. '[pos' → logprob: -11.625530242919922
    5. 'token' → logprob: -12.000530242919922
    6. 'possible' → logprob: -12.125530242919922
    7. 'move' → logprob: -12.500530242919922
    8. ' pos' → logprob: -12.500530242919922
    9. 'poss' → logprob: -12.500530242919922
    10. 'next' → logprob: -13.500530242919922

Token 806: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759414434432983
    2. ' =' → logprob: -0.8259414434432983
    3. '.append' → logprob: -14.07594108581543
    4. '[' → logprob: -14.82594108581543
    5. '=[' → logprob: -15.07594108581543
    6. '=[]' → logprob: -15.07594108581543
    7. ' ' → logprob: -16.70094108581543
    8. 's' → logprob: -16.82594108581543
    9. '=[]
' → logprob: -17.07594108581543
    10. '=[
' → logprob: -17.70094108581543

Token 807: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.006532403640449047
    2. '[pos' → logprob: -5.256532192230225
    3. '[' → logprob: -6.756532192230225
    4. ' [(' → logprob: -9.006532669067383
    5. ' [' → logprob: -12.381532669067383
    6. '[]' → logprob: -12.631532669067383
    7. '[((' → logprob: -13.006532669067383
    8. '[position' → logprob: -14.256532669067383
    9. '[p' → logprob: -15.006532669067383
    10. '[
' → logprob: -15.506532669067383

Token 808: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14245611429214478
    2. '                   ' → logprob: -2.1424560546875
    3. '[' → logprob: -4.8924560546875
    4. 'moves' → logprob: -5.2674560546875
    5. '                
' → logprob: -7.2674560546875
    6. 'for' → logprob: -7.7674560546875
    7. '                    
' → logprob: -8.3924560546875
    8. '
' → logprob: -8.5174560546875
    9. '```' → logprob: -8.6424560546875
    10. ' for' → logprob: -8.7674560546875

Token 809: ' i' (ID: 575)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.07642897963523865
    2. 'x' → logprob: -3.0764288902282715
    3. 'i' (adapté à ' i') → logprob: -3.7014288902282715
    4. '#' → logprob: -6.2014288902282715
    5. '               ' → logprob: -8.45142936706543
    6. 'ci' → logprob: -8.70142936706543
    7. 'y' → logprob: -8.82642936706543
    8. 'for' → logprob: -10.32642936706543
    9. 'r' → logprob: -10.32642936706543
    10. 'di' → logprob: -10.82642936706543

Token 810: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007660465780645609
    2. ' ,' → logprob: -5.382660388946533
    3. '=' → logprob: -6.007660388946533
    4. ' =' → logprob: -8.382660865783691
    5. ',
' → logprob: -8.757660865783691
    6. ',j' → logprob: -9.757660865783691
    7. ',m' → logprob: -10.382660865783691
    8. ')' → logprob: -11.132660865783691
    9. ',i' → logprob: -11.132660865783691
    10. '               ' → logprob: -11.632660865783691

Token 811: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06196824833750725
    2. ' j' → logprob: -2.8119683265686035
    3. ',j' → logprob: -15.436967849731445
    4. ' =' → logprob: -16.061967849731445
    5. '	j' → logprob: -16.186967849731445
    6. '_j' → logprob: -16.561967849731445
    7. '=' → logprob: -17.311967849731445
    8. '    ' → logprob: -17.936967849731445
    9. 'i' → logprob: -18.061967849731445
    10. '$j' → logprob: -18.061967849731445

Token 812: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21768419444561005
    2. ' =' → logprob: -1.7176841497421265
    3. ')' → logprob: -4.467684268951416
    4. ',' → logprob: -6.717684268951416
    5. 'for' → logprob: -6.842684268951416
    6. '+' → logprob: -7.717684268951416
    7. ' for' → logprob: -7.967684268951416
    8. '<|end|>' → logprob: -7.967684268951416
    9. '.' → logprob: -8.092683792114258
    10. '                   ' → logprob: -8.467683792114258

Token 813: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0024756586644798517
    2. ' pos' → logprob: -6.002475738525391
    3. '	pos' → logprob: -17.12747573852539
    4. '   ' → logprob: -18.62747573852539
    5. 'p' → logprob: -18.62747573852539
    6. 'position' → logprob: -19.00247573852539
    7. '_pos' → logprob: -19.12747573852539
    8. '(pos' → logprob: -19.50247573852539
    9. 'Pos' → logprob: -20.00247573852539
    10. 'po' → logprob: -20.00247573852539

Token 814: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05303003638982773
    2. ',' → logprob: -3.928030014038086
    3. '           ' → logprob: -4.053030014038086
    4. ')' → logprob: -5.678030014038086
    5. '                
' → logprob: -5.678030014038086
    6. ' for' → logprob: -6.928030014038086
    7. '<|end|>' → logprob: -6.928030014038086
    8. '            
' → logprob: -7.053030014038086
    9. '                   ' → logprob: -7.053030014038086
    10. '
' → logprob: -7.178030014038086

Token 815: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010615038685500622
    2. 'for' → logprob: -5.38561487197876
    3. 'moves' → logprob: -5.63561487197876
    4. ' for' → logprob: -6.88561487197876
    5. '                   ' → logprob: -7.26061487197876
    6. '           ' → logprob: -8.385615348815918
    7. '```' → logprob: -8.385615348815918
    8. '                
' → logprob: -9.135615348815918
    9. ' moves' → logprob: -9.760615348815918
    10. '	           ' → logprob: -11.760615348815918

Token 816: ' #' (ID: 1069)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.001807268476113677
    2. '               ' → logprob: -6.37680721282959
    3. '           ' → logprob: -9.62680721282959
    4. '                   ' → logprob: -11.62680721282959
    5. '```' → logprob: -11.62680721282959
    6. 'for' → logprob: -11.75180721282959
    7. ' moves' → logprob: -12.50180721282959
    8. '                
' → logprob: -13.12680721282959
    9. '   ' → logprob: -13.25180721282959
    10. '.moves' → logprob: -13.50180721282959

Token 817: ' ghost' (ID: 33168)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.00017743845819495618
    2. '               ' → logprob: -9.500177383422852
    3. '           ' → logprob: -9.875177383422852
    4. '#' → logprob: -10.750177383422852
    5. ' moves' → logprob: -12.000177383422852
    6. '                   ' → logprob: -12.125177383422852
    7. '```' → logprob: -12.250177383422852
    8. '       ' → logprob: -12.750177383422852
    9. '   ' → logprob: -12.750177383422852
    10. '
' → logprob: -13.250177383422852

Token 818: ' can' (ID: 665)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0881869792938232
    2. '_moves' → logprob: -1.3381869792938232
    3. 'moves' → logprob: -1.8381869792938232
    4. 'for' → logprob: -2.3381869792938232
    5. '               ' → logprob: -3.3381869792938232
    6. '                   ' → logprob: -3.5881869792938232
    7. '_for' → logprob: -3.5881869792938232
    8. ' moves' → logprob: -4.338187217712402
    9. ' for' → logprob: -4.963187217712402
    10. ''s' → logprob: -5.463187217712402

Token 819: ' stay' (ID: 5092)
  Prédit: ' stay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stay' → logprob: -0.6760719418525696
    2. 'stay' → logprob: -1.6760718822479248
    3. 'moves' → logprob: -2.051071882247925
    4. '.append' → logprob: -3.051071882247925
    5. '_moves' → logprob: -3.051071882247925
    6. ' moves' → logprob: -4.176072120666504
    7. 'append' → logprob: -4.301072120666504
    8. 'st' → logprob: -4.676072120666504
    9. '               ' → logprob: -4.801072120666504
    10. ' stays' → logprob: -5.176072120666504

Token 820: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5221559405326843
    2. ' in' → logprob: -1.147156000137329
    3. '                   ' → logprob: -3.397156000137329
    4. 'in' → logprob: -4.14715576171875
    5. ',' → logprob: -4.39715576171875
    6. '                ' → logprob: -5.14715576171875
    7. '           ' → logprob: -5.14715576171875
    8. '            ' → logprob: -6.14715576171875
    9. 'moves' → logprob: -6.27215576171875
    10. ' as' → logprob: -6.64715576171875

Token 821: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0852322205901146
    2. ' in' → logprob: -2.8352322578430176
    3. 'in' → logprob: -4.710232257843018
    4. ',' → logprob: -5.460232257843018
    5. '                   ' → logprob: -5.960232257843018
    6. '                ' → logprob: -6.085232257843018
    7. ' (' → logprob: -6.835232257843018
    8. '              ' → logprob: -7.710232257843018
    9. '                
' → logprob: -7.835232257843018
    10. '           ' → logprob: -7.960232257843018

Token 822: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' (adapté à ' moves') → logprob: -0.01574176363646984
    2. '               ' → logprob: -4.26574182510376
    3. ' moves' → logprob: -7.14074182510376
    4. '                   ' → logprob: -7.39074182510376
    5. '           ' → logprob: -9.390741348266602
    6. '   ' → logprob: -10.765741348266602
    7. 'm' → logprob: -10.890741348266602
    8. 'mov' → logprob: -11.265741348266602
    9. '.moves' → logprob: -11.765741348266602
    10. '                       ' → logprob: -12.015741348266602

Token 823: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -2.2723104848410003e-05
    2. '.append' → logprob: -11.000022888183594
    3. '=' → logprob: -13.000022888183594
    4. 'for' → logprob: -13.250022888183594
    5. '               ' → logprob: -14.625022888183594
    6. 'For' → logprob: -15.000022888183594
    7. '           ' → logprob: -15.000022888183594
    8. '                   ' → logprob: -15.375022888183594
    9. '=_' → logprob: -16.125022888183594
    10. ' =' → logprob: -16.250022888183594

Token 824: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.017274750396609306
    2. 'ghost' → logprob: -4.142274856567383
    3. 'moves' → logprob: -7.517274856567383
    4. 'for' → logprob: -7.767274856567383
    5. '_for' → logprob: -8.642274856567383
    6. '_moves' → logprob: -10.142274856567383
    7. 'append' → logprob: -10.642274856567383
    8. 'Ghost' → logprob: -11.892274856567383
    9. '.append' → logprob: -12.142274856567383
    10. '```' → logprob: -13.017274856567383

Token 825: 'ghost' (ID: 78754)
  Prédit: 'ghost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.006107013206928968
    2. 'moves' → logprob: -5.131106853485107
    3. 'append' → logprob: -8.756107330322266
    4. '.append' → logprob: -11.881107330322266
    5. '_moves' → logprob: -12.006107330322266
    6. '[' → logprob: -13.506107330322266
    7. '_' → logprob: -13.881107330322266
    8. 'Ghost' → logprob: -14.506107330322266
    9. 'm' → logprob: -14.756107330322266
    10. '[]' → logprob: -14.756107330322266

Token 826: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005539863486774266
    2. '.' → logprob: -7.500554084777832
    3. 'append' → logprob: -14.750554084777832
    4. '.app' → logprob: -15.000554084777832
    5. ' .' → logprob: -15.375554084777832
    6. '.ap' → logprob: -16.500553131103516
    7. '.
' → logprob: -17.375553131103516
    8. '=' → logprob: -18.375553131103516
    9. '   ' → logprob: -18.750553131103516
    10. '.=' → logprob: -19.375553131103516

Token 827: '((' (ID: 2054)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.024329479783773422
    2. '(pos' → logprob: -3.774329423904419
    3. '(' → logprob: -7.649329662322998
    4. ' (' → logprob: -7.774329662322998
    5. 'pos' → logprob: -8.77432918548584
    6. '((' → logprob: -10.52432918548584
    7. '(j' → logprob: -13.39932918548584
    8. '   ' → logprob: -13.77432918548584
    9. '(I' → logprob: -14.14932918548584
    10. ' pos' → logprob: -14.14932918548584

Token 828: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.981667537620524e-06
    2. ' i' → logprob: -13.250001907348633
    3. ')i' → logprob: -15.625001907348633
    4. '(i' → logprob: -17.000001907348633
    5. ')' → logprob: -17.250001907348633
    6. '	i' → logprob: -18.500001907348633
    7. '   ' → logprob: -18.625001907348633
    8. '
' → logprob: -20.375001907348633
    9. '{i' → logprob: -20.375001907348633
    10. '_i' → logprob: -20.500001907348633

Token 829: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08934290707111359
    2. ',j' → logprob: -2.4643428325653076
    3. ' ,' → logprob: -7.839343070983887
    4. ',
' → logprob: -12.214343070983887
    5. 'j' → logprob: -14.464343070983887
    6. ',i' → logprob: -14.464343070983887
    7. ',k' → logprob: -14.589343070983887
    8. ' ' → logprob: -14.839343070983887
    9. '<|end|>' → logprob: -14.964343070983887
    10. ')' → logprob: -15.339343070983887

Token 830: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00033558503491804004
    2. ' j' → logprob: -8.000335693359375
    3. '	j' → logprob: -16.375335693359375
    4. ',j' → logprob: -17.500335693359375
    5. '   ' → logprob: -17.625335693359375
    6. '    ' → logprob: -17.875335693359375
    7. ' ' → logprob: -18.625335693359375
    8. '
' → logprob: -18.875335693359375
    9. ')' → logprob: -19.125335693359375
    10. '_j' → logprob: -19.625335693359375

Token 831: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006813408341258764
    2. '))' → logprob: -5.0068135261535645
    3. ')
' → logprob: -9.506813049316406
    4. '               ' → logprob: -11.006813049316406
    5. ' )' → logprob: -13.006813049316406
    6. '))
' → logprob: -13.256813049316406
    7. '),' → logprob: -14.006813049316406
    8. ')))' → logprob: -14.256813049316406
    9. '           ' → logprob: -14.756813049316406
    10. '                   ' → logprob: -15.256813049316406

Token 832: '               ' (ID: 506)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5860024094581604
    2. '               ' → logprob: -0.8360024094581604
    3. '           ' → logprob: -4.961002349853516
    4. ' for' → logprob: -6.086002349853516
    5. '                   ' → logprob: -7.586002349853516
    6. '
' → logprob: -9.711002349853516
    7. '```' → logprob: -9.836002349853516
    8. '       ' → logprob: -9.961002349853516
    9. '   ' → logprob: -10.586002349853516
    10. '	for' → logprob: -10.961002349853516

Token 833: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.061054359131958e-06
    2. ' for' → logprob: -11.875007629394531
    3. '	for' → logprob: -14.625007629394531
    4. '               ' → logprob: -14.875007629394531
    5. '           ' → logprob: -15.375007629394531
    6. '                   ' → logprob: -17.75000762939453
    7. '```' → logprob: -17.87500762939453
    8. '                
' → logprob: -18.75000762939453
    9. '            
' → logprob: -19.37500762939453
    10. '   ' → logprob: -19.50000762939453

Token 834: ' ghost' (ID: 33168)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1875571544806007e-05
    2. ' for' → logprob: -11.750011444091797
    3. '           ' → logprob: -13.000011444091797
    4. '               ' → logprob: -13.500011444091797
    5. '	for' → logprob: -16.375011444091797
    6. '                   ' → logprob: -17.125011444091797
    7. '
' → logprob: -17.500011444091797
    8. '   ' → logprob: -17.625011444091797
    9. '       ' → logprob: -19.375011444091797
    10. '```' → logprob: -19.875011444091797

Token 835: ' can' (ID: 665)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35045719146728516
    2. ' for' → logprob: -1.8504571914672852
    3. ',' → logprob: -3.225457191467285
    4. 'moves' → logprob: -3.475457191467285
    5. '+' → logprob: -4.350457191467285
    6. '_moves' → logprob: -4.600457191467285
    7. ' moves' → logprob: -4.600457191467285
    8. ')' → logprob: -4.975457191467285
    9. '<|end|>' → logprob: -5.350457191467285
    10. ':' → logprob: -6.475457191467285

Token 836: ' move' (ID: 5275)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12837739288806915
    2. 'move' → logprob: -3.0033774375915527
    3. ' for' → logprob: -3.3783774375915527
    4. ' move' → logprob: -4.003377437591553
    5. 'moves' → logprob: -4.878377437591553
    6. 'go' → logprob: -6.378377437591553
    7. 'dire' → logprob: -6.378377437591553
    8. ',' → logprob: -6.878377437591553
    9. 'i' → logprob: -7.003377437591553
    10. '
' → logprob: -7.003377437591553

Token 837: ' to' (ID: 316)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6375626921653748
    2. '(-' → logprob: -0.7625626921653748
    3. 'to' → logprob: -6.2625627517700195
    4. '(' → logprob: -6.5125627517700195
    5. '               ' → logprob: -8.76256275177002
    6. '
' → logprob: -8.76256275177002
    7. '(d' → logprob: -8.88756275177002
    8. ' (' → logprob: -8.88756275177002
    9. 'up' → logprob: -9.26256275177002
    10. ',' → logprob: -9.38756275177002

Token 838: ' adjacent' (ID: 39069)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.007569480687379837
    2. 'dire' → logprob: -5.757569313049316
    3. 'i' → logprob: -6.382569313049316
    4. ' (' → logprob: -7.007569313049316
    5. 'di' → logprob: -7.757569313049316
    6. 'ni' → logprob: -8.132569313049316
    7. 'direction' → logprob: -8.507569313049316
    8. 'for' → logprob: -9.007569313049316
    9. 'neighbor' → logprob: -9.007569313049316
    10. 'd' → logprob: -9.507569313049316

Token 839: ' corridor' (ID: 92467)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.12714281678199768
    2. 'cells' → logprob: -3.127142906188965
    3. 'positions' → logprob: -3.127142906188965
    4. '(' → logprob: -4.752142906188965
    5. '(-' → logprob: -5.252142906188965
    6. 'cell' → logprob: -5.877142906188965
    7. ' positions' → logprob: -6.252142906188965
    8. 'dire' → logprob: -6.502142906188965
    9. '(d' → logprob: -6.627142906188965
    10. '(di' → logprob: -6.627142906188965

Token 840: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.03443795070052147
    2. ' cells' → logprob: -4.409438133239746
    3. '_cells' → logprob: -4.784438133239746
    4. 'cell' → logprob: -5.159438133239746
    5. ',' → logprob: -6.034438133239746
    6. '(i' → logprob: -6.284438133239746
    7. '[(' → logprob: -6.659438133239746
    8. '[i' → logprob: -7.784438133239746
    9. '               ' → logprob: -7.784438133239746
    10. '                   ' → logprob: -8.534438133239746

Token 841: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5886135101318359
    2. ' for' → logprob: -1.463613510131836
    3. '           ' → logprob: -1.713613510131836
    4. '               ' → logprob: -3.588613510131836
    5. '                   ' → logprob: -5.588613510131836
    6. '
' → logprob: -7.463613510131836
    7. '	for' → logprob: -8.213613510131836
    8. '       ' → logprob: -8.588613510131836
    9. '            
' → logprob: -8.838613510131836
    10. ',' → logprob: -8.963613510131836

Token 842: '               ' (ID: 506)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6699227094650269
    2. '               ' → logprob: -0.9199227094650269
    3. ' for' → logprob: -2.4199228286743164
    4. '                   ' → logprob: -7.294922828674316
    5. '           ' → logprob: -10.294922828674316
    6. ',' → logprob: -10.919922828674316
    7. '```' → logprob: -11.419922828674316
    8. '	for' → logprob: -11.919922828674316
    9. '                       ' → logprob: -12.294922828674316
    10. '
' → logprob: -12.544922828674316

Token 843: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4899640679359436
    2. 'for' (adapté à ' for') → logprob: -1.1149640083312988
    3. '               ' → logprob: -2.864964008331299
    4. '           ' → logprob: -6.489964008331299
    5. '	for' → logprob: -7.239964008331299
    6. '	           ' → logprob: -9.239964485168457
    7. '                   ' → logprob: -9.614964485168457
    8. '            ' → logprob: -11.864964485168457
    9. '			' → logprob: -12.364964485168457
    10. '             ' → logprob: -12.489964485168457

Token 844: ' di' (ID: 1320)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.005235887598246336
    2. 'dx' → logprob: -5.25523567199707
    3. 'd' → logprob: -13.63023567199707
    4. ' di' → logprob: -14.38023567199707
    5. 'dir' → logprob: -15.75523567199707
    6. '(di' → logprob: -16.00523567199707
    7. 'delta' → logprob: -17.50523567199707
    8. '   ' → logprob: -17.75523567199707
    9. 'direction' → logprob: -18.25523567199707
    10. 'dy' → logprob: -18.25523567199707

Token 845: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16028138995170593
    2. ',d' → logprob: -1.9102814197540283
    3. ' ,' → logprob: -10.78528118133545
    4. 'd' → logprob: -11.41028118133545
    5. ',j' → logprob: -11.41028118133545
    6. 'dj' → logprob: -11.78528118133545
    7. ',
' → logprob: -12.66028118133545
    8. '_,' → logprob: -14.03528118133545
    9. ',D' → logprob: -14.53528118133545
    10. ',de' → logprob: -14.66028118133545

Token 846: ' dj' (ID: 43267)
  Prédit: 'dj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dj' → logprob: -0.0019335162360221148
    2. ' dj' → logprob: -6.251933574676514
    3. 'Dj' → logprob: -12.501933097839355
    4. '.dj' → logprob: -14.251933097839355
    5. ' Dj' → logprob: -16.126934051513672
    6. 'DJ' → logprob: -16.251934051513672
    7. 'dl' → logprob: -16.376934051513672
    8. 'dje' → logprob: -17.126934051513672
    9. 'd' → logprob: -17.626934051513672
    10. '

' → logprob: -18.126934051513672

Token 847: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11340879648923874
    2. 'in' → logprob: -2.2384088039398193
    3. '<|end|>' → logprob: -8.238409042358398
    4. '	in' → logprob: -8.988409042358398
    5. ' ' → logprob: -9.863409042358398
    6. ',' → logprob: -10.113409042358398
    7. ')' → logprob: -10.113409042358398
    8. '<|end|>' → logprob: -10.863409042358398
    9. '_in' → logprob: -11.488409042358398
    10. ' ,' → logprob: -12.238409042358398

Token 848: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.08080793917179108
    2. ' directions' → logprob: -2.58080792427063
    3. '(-' → logprob: -6.455808162689209
    4. '[' → logprob: -8.95580768585205
    5. '[-' → logprob: -9.08080768585205
    6. 'direction' → logprob: -9.58080768585205
    7. '-' → logprob: -11.45580768585205
    8. '-dire' → logprob: -11.58080768585205
    9. ' (-' → logprob: -12.20580768585205
    10. '(' → logprob: -12.58080768585205

Token 849: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4339087903499603
    2. ':
' → logprob: -1.0589088201522827
    3. '               ' → logprob: -6.308908939361572
    4. '<|end|>' → logprob: -6.808908939361572
    5. '):
' → logprob: -7.808908939361572
    6. '                   ' → logprob: -7.808908939361572
    7. ',' → logprob: -7.933908939361572
    8. ')' → logprob: -8.683908462524414
    9. '           ' → logprob: -9.183908462524414
    10. ' in' → logprob: -9.183908462524414

Token 850: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0501103550195694
    2. '                       ' → logprob: -4.050110340118408
    3. '               ' → logprob: -4.550110340118408
    4. '	               ' → logprob: -5.050110340118408
    5. '                ' → logprob: -5.175110340118408
    6. ' new' → logprob: -5.925110340118408
    7. '                               ' → logprob: -6.675110340118408
    8. '                    ' → logprob: -6.800110340118408
    9. '	                   ' → logprob: -7.675110340118408
    10. '```' → logprob: -7.675110340118408

Token 851: ' ni' (ID: 2565)
  Prédit: ' ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ni' → logprob: -0.09030505269765854
    2. 'ni' (adapté à ' ni') → logprob: -2.8403050899505615
    3. ' new' → logprob: -3.8403050899505615
    4. 'new' → logprob: -5.840304851531982
    5. '                   ' → logprob: -6.590304851531982
    6. ' next' → logprob: -6.965304851531982
    7. 'next' → logprob: -7.840304851531982
    8. ' ' → logprob: -8.71530532836914
    9. '                    ' → logprob: -8.96530532836914
    10. ' nxt' → logprob: -9.59030532836914

Token 852: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.017690006643533707
    2. ',' → logprob: -4.392690181732178
    3. ' =' → logprob: -5.267690181732178
    4. '=n' → logprob: -12.51768970489502
    5. '=i' → logprob: -13.01768970489502
    6. '=
' → logprob: -13.01768970489502
    7. '=int' → logprob: -14.14268970489502
    8. ',n' → logprob: -14.26768970489502
    9. ' ,' → logprob: -14.51768970489502
    10. 'n' → logprob: -14.89268970489502

Token 853: ' nj' (ID: 8979)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.014223679900169373
    2. ' j' → logprob: -4.264223575592041
    3. 'i' → logprob: -10.1392240524292
    4. 'dj' → logprob: -11.7642240524292
    5. '=' → logprob: -12.3892240524292
    6. ' ' → logprob: -12.7642240524292
    7. ' i' → logprob: -13.2642240524292
    8. ' =' → logprob: -13.6392240524292
    9. 'nj' → logprob: -14.2642240524292
    10. ' dj' → logprob: -15.0142240524292

Token 854: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026356730610132217
    2. ' =' → logprob: -3.6513566970825195
    3. '=i' → logprob: -10.02635669708252
    4. '=
' → logprob: -12.40135669708252
    5. '=n' → logprob: -12.77635669708252
    6. '=int' → logprob: -12.90135669708252
    7. ')' → logprob: -14.15135669708252
    8. '=j' → logprob: -15.27635669708252
    9. '<|end|>' → logprob: -15.40135669708252
    10. '=num' → logprob: -15.52635669708252

Token 855: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03805147483944893
    2. ' i' → logprob: -3.2880513668060303
    3. '(i' → logprob: -11.53805160522461
    4. ' (' → logprob: -15.91305160522461
    5. '	i' → logprob: -16.16305160522461
    6. '_i' → logprob: -17.41305160522461
    7. '(' → logprob: -18.16305160522461
    8. ' ' → logprob: -18.28805160522461
    9. '[i' → logprob: -18.28805160522461
    10. '=i' → logprob: -18.41305160522461

Token 856: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06205238401889801
    2. ' +' → logprob: -2.8120524883270264
    3. '<|end|>' → logprob: -9.937052726745605
    4. ',' → logprob: -10.812052726745605
    5. '+
' → logprob: -12.187052726745605
    6. '+,' → logprob: -12.812052726745605
    7. '[' → logprob: -13.562052726745605
    8. '+n' → logprob: -13.562052726745605
    9. '+d' → logprob: -13.937052726745605
    10. ' +
' → logprob: -14.312052726745605

Token 857: 'di' (ID: 4091)
  Prédit: 'di'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -5.512236498361744e-07
    2. 'd' → logprob: -15.000000953674316
    3. ' di' → logprob: -15.625000953674316
    4. '(di' → logprob: -16.875
    5. 'dj' → logprob: -19.375
    6. '   ' → logprob: -19.5
    7. '```' → logprob: -20.125
    8. '0' → logprob: -20.25
    9. ' ' → logprob: -20.875
    10. '[' → logprob: -21.25

Token 858: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011334281880408525
    2. ',j' → logprob: -7.001133441925049
    3. ',n' → logprob: -9.00113296508789
    4. ' ,' → logprob: -9.62613296508789
    5. ',
' → logprob: -10.50113296508789
    6. '<|end|>' → logprob: -12.87613296508789
    7. ',k' → logprob: -14.62613296508789
    8. ',next' → logprob: -15.25113296508789
    9. ',i' → logprob: -15.37613296508789
    10. ',new' → logprob: -15.37613296508789

Token 859: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0019287518225610256
    2. ' j' → logprob: -6.251928806304932
    3. '	j' → logprob: -16.376928329467773
    4. '   ' → logprob: -18.126928329467773
    5. '$j' → logprob: -18.751928329467773
    6. '0' → logprob: -20.376928329467773
    7. ' ' → logprob: -20.626928329467773
    8. ':j' → logprob: -21.376928329467773
    9. '  ' → logprob: -21.751928329467773
    10. '    ' → logprob: -22.251928329467773

Token 860: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02803436852991581
    2. '+j' → logprob: -3.6530344486236572
    3. ',j' → logprob: -7.153034210205078
    4. '+d' → logprob: -7.403034210205078
    5. ',' → logprob: -8.778034210205078
    6. 'dj' → logprob: -9.653034210205078
    7. 'j' → logprob: -9.778034210205078
    8. '<|end|>' → logprob: -11.028034210205078
    9. ' +' → logprob: -11.528034210205078
    10. ',d' → logprob: -11.903034210205078

Token 861: 'dj' (ID: 115658)
  Prédit: 'dj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dj' → logprob: -7.941850526549388e-06
    2. ' dj' → logprob: -11.750007629394531
    3. '.dj' → logprob: -17.87500762939453
    4. '1' → logprob: -19.00000762939453
    5. '0' → logprob: -19.25000762939453
    6. ' ' → logprob: -19.50000762939453
    7. 'Dj' → logprob: -20.00000762939453
    8. '
' → logprob: -20.37500762939453
    9. 'mj' → logprob: -20.87500762939453
    10. 'j' → logprob: -21.12500762939453

Token 862: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 863: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0006551315891556442
    2. '<|end|>' → logprob: -8.625655174255371
    3. '```' → logprob: -9.250655174255371
    4. '               ' → logprob: -9.375655174255371
    5. '		           ' → logprob: -9.500655174255371
    6. '	               ' → logprob: -9.875655174255371
    7. '				' → logprob: -10.000655174255371
    8. ',' → logprob: -10.750655174255371
    9. '                    
' → logprob: -11.125655174255371
    10. '           ' → logprob: -11.250655174255371

Token 864: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.44904059171676636
    2. ' if' → logprob: -1.1990406513214111
    3. '                   ' → logprob: -2.824040651321411
    4. '0' → logprob: -7.699040412902832
    5. '               ' → logprob: -8.699040412902832
    6. '                    ' → logprob: -9.324040412902832
    7. '           ' → logprob: -9.574040412902832
    8. '                       ' → logprob: -10.199040412902832
    9. '                    
' → logprob: -10.949040412902832
    10. ' ' → logprob: -11.074040412902832

Token 865: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.794061770662665e-05
    2. ' ' → logprob: -9.25009822845459
    3. 'is' → logprob: -13.37509822845459
    4. '(' → logprob: -16.125097274780273
    5. '   ' → logprob: -17.125097274780273
    6. ' is' → logprob: -17.250097274780273
    7. 'ni' → logprob: -17.500097274780273
    8. '
' → logprob: -18.125097274780273
    9. '                   ' → logprob: -18.250097274780273
    10. ' ' → logprob: -19.000097274780273

Token 866: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.625006675720215
    3. 'is' → logprob: -12.750006675720215
    4. '(' → logprob: -16.5000057220459
    5. '
' → logprob: -16.5000057220459
    6. 'ni' → logprob: -17.5000057220459
    7. '   ' → logprob: -17.6250057220459
    8. '                   ' → logprob: -19.5000057220459
    9. '               ' → logprob: -19.6250057220459
    10. '           ' → logprob: -19.8750057220459

Token 867: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3206292986869812
    2. '<' → logprob: -1.445629358291626
    3. ' <=' → logprob: -4.070629119873047
    4. '<=' → logprob: -4.445629119873047
    5. '<w' → logprob: -4.820629119873047
    6. '<n' → logprob: -6.945629119873047
    7. '<len' → logprob: -7.820629119873047
    8. ',' → logprob: -8.695629119873047
    9. '<size' → logprob: -9.320629119873047
    10. 'w' → logprob: -9.945629119873047

Token 868: ' ni' (ID: 2565)
  Prédit: 'ni'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -7.896309739408025e-07
    2. ' ni' → logprob: -14.125000953674316
    3. 'n' → logprob: -19.5
    4. 'di' → logprob: -19.625
    5. '
' → logprob: -20.375
    6. 'ny' → logprob: -20.75
    7. '```' → logprob: -20.75
    8. '-ni' → logprob: -21.125
    9. 'Ni' → logprob: -21.25
    10. 'nii' → logprob: -21.375

Token 869: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.015008421614766121
    2. ' <' → logprob: -4.765008449554443
    3. '<n' → logprob: -5.140008449554443
    4. '<w' → logprob: -8.390007972717285
    5. '<len' → logprob: -9.265007972717285
    6. '<h' → logprob: -9.765007972717285
    7. '<size' → logprob: -10.765007972717285
    8. ',' → logprob: -11.015007972717285
    9. '<N' → logprob: -11.015007972717285
    10. '<th' → logprob: -11.015007972717285

Token 870: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.9361264946837764e-07
    2. ' h' → logprob: -16.125
    3. '	h' → logprob: -21.125
    4. '<h' → logprob: -23.875
    5. '   ' → logprob: -24.5
    6. '(h' → logprob: -25.0
    7. '[h' → logprob: -25.125
    8. '=h' → logprob: -25.375
    9. '"h' → logprob: -25.625
    10. ':h' → logprob: -26.0

Token 871: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04858794063329697
    2. 'and' → logprob: -3.0485880374908447
    3. ' ' → logprob: -14.798587799072266
    4. '	and' → logprob: -16.798587799072266
    5. '                   ' → logprob: -17.298587799072266
    6. ' ' → logprob: -17.548587799072266
    7. '<|end|>' → logprob: -17.673587799072266
    8. ' и' → logprob: -18.673587799072266
    9. '               ' → logprob: -18.923587799072266
    10. ',' → logprob: -18.923587799072266

Token 872: ' ' (ID: 220)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.49517565965652466
    2. '0' → logprob: -1.2451756000518799
    3. 'w' → logprob: -2.49517560005188
    4. ' is' → logprob: -4.120175838470459
    5. ' ' → logprob: -6.370175838470459
    6. ' w' → logprob: -6.620175838470459
    7. '                   ' → logprob: -7.245175838470459
    8. 'nj' → logprob: -10.3701753616333
    9. '                       ' → logprob: -10.6201753616333
    10. '1' → logprob: -10.7451753616333

Token 873: '0' (ID: 15)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00044556602369993925
    2. '0' → logprob: -8.125445365905762
    3. ' w' → logprob: -8.875445365905762
    4. 'nj' → logprob: -12.000445365905762
    5. 'wj' → logprob: -12.875445365905762
    6. '   ' → logprob: -15.250445365905762
    7. ' ' → logprob: -15.500445365905762
    8. '               ' → logprob: -16.125446319580078
    9. '                   ' → logprob: -16.250446319580078
    10. 'wn' → logprob: -16.375446319580078

Token 874: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.8145894408226013
    2. '<' → logprob: -0.9395894408226013
    3. 'w' → logprob: -2.564589500427246
    4. ' and' → logprob: -3.314589500427246
    5. 'and' → logprob: -3.314589500427246
    6. '<w' → logprob: -4.564589500427246
    7. '                   ' → logprob: -6.439589500427246
    8. ' w' → logprob: -6.814589500427246
    9. 'j' → logprob: -7.064589500427246
    10. ' ' → logprob: -7.814589500427246

Token 875: ' nj' (ID: 8979)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0002613358374219388
    2. ' w' → logprob: -8.250261306762695
    3. '   ' → logprob: -17.500261306762695
    4. 'j' → logprob: -18.125261306762695
    5. '	w' → logprob: -18.500261306762695
    6. 'wj' → logprob: -18.750261306762695
    7. ' ' → logprob: -19.125261306762695
    8. 'W' → logprob: -19.375261306762695
    9. '=w' → logprob: -19.875261306762695
    10. '(w' → logprob: -21.000261306762695

Token 876: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.23273716866970062
    2. '<' → logprob: -1.7327371835708618
    3. '<w' → logprob: -3.4827370643615723
    4. '<n' → logprob: -9.73273754119873
    5. '<W' → logprob: -11.48273754119873
    6. 'w' → logprob: -11.73273754119873
    7. '<size' → logprob: -11.85773754119873
    8. '<h' → logprob: -12.23273754119873
    9. '<len' → logprob: -12.35773754119873
    10. '<v' → logprob: -12.48273754119873

Token 877: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -3.15441757265944e-05
    2. ' w' → logprob: -10.375031471252441
    3. '   ' → logprob: -15.750031471252441
    4. '	w' → logprob: -17.000032424926758
    5. '
' → logprob: -17.375032424926758
    6. '=w' → logprob: -17.625032424926758
    7. '(w' → logprob: -17.750032424926758
    8. '0' → logprob: -18.000032424926758
    9. '_w' → logprob: -18.750032424926758
    10. ' ' → logprob: -19.000032424926758

Token 878: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.016081061214208603
    2. 'and' → logprob: -4.141080856323242
    3. '                   ' → logprob: -10.516080856323242
    4. '               ' → logprob: -11.391080856323242
    5. '                       ' → logprob: -12.266080856323242
    6. '<|end|>' → logprob: -14.141080856323242
    7. '	and' → logprob: -14.391080856323242
    8. ' ' → logprob: -14.391080856323242
    9. ':
' → logprob: -14.766080856323242
    10. ':' → logprob: -15.016080856323242

Token 879: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0024762547109276056
    2. ' is' → logprob: -6.002476215362549
    3. '                   ' → logprob: -14.377476692199707
    4. '(is' → logprob: -17.75247573852539
    5. '               ' → logprob: -18.25247573852539
    6. '	is' → logprob: -18.37747573852539
    7. '   ' → logprob: -18.75247573852539
    8. '                       ' → logprob: -18.87747573852539
    9. ' ' → logprob: -19.50247573852539
    10. '           ' → logprob: -20.12747573852539

Token 880: '_corr' (ID: 121608)
  Prédit: '_corr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_corr' → logprob: -1.3782830137643032e-05
    2. 'corr' → logprob: -11.25001335144043
    3. 'is' → logprob: -14.50001335144043
    4. '```' → logprob: -16.25001335144043
    5. '_cor' → logprob: -17.37501335144043
    6. '_' → logprob: -17.62501335144043
    7. 'Corr' → logprob: -17.75001335144043
    8. '_COR' → logprob: -18.12501335144043
    9. '[_' → logprob: -18.75001335144043
    10. '_curr' → logprob: -18.87501335144043

Token 881: 'idor' (ID: 19769)
  Prédit: 'idor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idor' → logprob: -0.0014420190127566457
    2. 'id' → logprob: -7.376441955566406
    3. '_corr' → logprob: -8.501441955566406
    4. 'or' → logprob: -8.626441955566406
    5. ' corridor' → logprob: -8.876441955566406
    6. 'idir' → logprob: -9.751441955566406
    7. 'idors' → logprob: -10.251441955566406
    8. '```' → logprob: -10.626441955566406
    9. '[' → logprob: -10.876441955566406
    10. '                   ' → logprob: -11.251441955566406

Token 882: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '[
' → logprob: -16.0
    3. '[[' → logprob: -17.0
    4. ' [' → logprob: -17.0
    5. '   ' → logprob: -17.25
    6. '```' → logprob: -17.25
    7. '][' → logprob: -17.375
    8. '           ' → logprob: -18.625
    9. '[i' → logprob: -18.75
    10. '[next' → logprob: -18.8125

Token 883: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.0006739511154592037
    2. '[' → logprob: -7.375673770904541
    3. '][' → logprob: -10.3756742477417
    4. ' ni' → logprob: -11.7506742477417
    5. ']' → logprob: -12.6256742477417
    6. '```' → logprob: -13.6256742477417
    7. '   ' → logprob: -13.8756742477417
    8. 'n' → logprob: -14.3756742477417
    9. 'i' → logprob: -14.8756742477417
    10. '
' → logprob: -15.1256742477417

Token 884: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.69329434633255
    2. '][' → logprob: -0.69329434633255
    3. ']' → logprob: -9.568294525146484
    4. 'ni' → logprob: -9.943294525146484
    5. ' ni' → logprob: -12.068294525146484
    6. ''][' → logprob: -12.318294525146484
    7. ')[' → logprob: -12.318294525146484
    8. '"][' → logprob: -12.568294525146484
    9. '```' → logprob: -12.943294525146484
    10. '[n' → logprob: -13.943294525146484

Token 885: 'nj' (ID: 30318)
  Prédit: 'nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -1.0802738870552275e-05
    2. ' nj' → logprob: -11.50001049041748
    3. 'n' → logprob: -15.37501049041748
    4. 'j' → logprob: -15.62501049041748
    5. 'Nj' → logprob: -16.875011444091797
    6. '
' → logprob: -17.750011444091797
    7. '   ' → logprob: -17.875011444091797
    8. 'npj' → logprob: -18.000011444091797
    9. '```' → logprob: -18.125011444091797
    10. 'nju' → logprob: -18.375011444091797

Token 886: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.5343640446662903
    2. ']==' → logprob: -1.6593639850616455
    3. ']:
' → logprob: -2.1593639850616455
    4. ']' → logprob: -2.4093639850616455
    5. ':' → logprob: -4.534364223480225
    6. '                   ' → logprob: -6.409364223480225
    7. ':
' → logprob: -6.409364223480225
    8. '==' → logprob: -6.784364223480225
    9. ']=' → logprob: -7.034364223480225
    10. '                       ' → logprob: -7.659364223480225

Token 887: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.002912692492827773
    2. '                   ' → logprob: -6.752912521362305
    3. '                           ' → logprob: -7.502912521362305
    4. '	                   ' → logprob: -7.627912521362305
    5. '                               ' → logprob: -8.502912521362305
    6. '					' → logprob: -8.627912521362305
    7. '                        ' → logprob: -9.627912521362305
    8. '                        
' → logprob: -9.627912521362305
    9. '<|end|>' → logprob: -10.377912521362305
    10. '                    ' → logprob: -10.502912521362305

Token 888: ' moves' (ID: 19523)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.26691389083862305
    2. 'moves' (adapté à ' moves') → logprob: -1.516913890838623
    3. ' moves' → logprob: -5.266913890838623
    4. '                           ' → logprob: -5.391913890838623
    5. '                               ' → logprob: -5.641913890838623
    6. '                   ' → logprob: -7.391913890838623
    7. '               ' → logprob: -7.891913890838623
    8. '   ' → logprob: -8.266914367675781
    9. '       ' → logprob: -9.141914367675781
    10. '           ' → logprob: -9.391914367675781

Token 889: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -8.061054359131958e-06
    2. 'for' → logprob: -12.625007629394531
    3. '                   ' → logprob: -13.375007629394531
    4. '.append' → logprob: -14.125007629394531
    5. '               ' → logprob: -14.250007629394531
    6. 'For' → logprob: -14.500007629394531
    7. '           ' → logprob: -14.750007629394531
    8. '.for' → logprob: -16.12500762939453
    9. '   ' → logprob: -16.37500762939453
    10. '_to' → logprob: -16.62500762939453

Token 890: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0010167333530262113
    2. 'ghost' → logprob: -7.376016616821289
    3. '_for' → logprob: -8.001016616821289
    4. 'for' → logprob: -10.251016616821289
    5. 'moves' → logprob: -11.001016616821289
    6. '_moves' → logprob: -13.376016616821289
    7. '[' → logprob: -14.626016616821289
    8. 'Ghost' → logprob: -15.001016616821289
    9. '```' → logprob: -15.751016616821289
    10. '`' → logprob: -16.25101661682129

Token 891: 'ghost' (ID: 78754)
  Prédit: 'ghost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.00015598179015796632
    2. 'gh' → logprob: -8.87515640258789
    3. 'Ghost' → logprob: -11.62515640258789
    4. 'ght' → logprob: -13.37515640258789
    5. 'gi' → logprob: -13.50015640258789
    6. '
' → logprob: -14.00015640258789
    7. '_' → logprob: -14.12515640258789
    8. ' ghost' → logprob: -14.87515640258789
    9. 'moves' → logprob: -14.87515640258789
    10. '```' → logprob: -15.25015640258789

Token 892: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00020473242329899222
    2. '.' → logprob: -8.500205039978027
    3. ' .' → logprob: -14.125205039978027
    4. '.add' → logprob: -15.125205039978027
    5. '.app' → logprob: -15.875205039978027
    6. '.ap' → logprob: -17.25020408630371
    7. 'append' → logprob: -17.75020408630371
    8. '.setdefault' → logprob: -17.87520408630371
    9. '.extend' → logprob: -19.00020408630371
    10. '.Append' → logprob: -19.50020408630371

Token 893: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.07889441400766373
    2. '(' → logprob: -2.5788943767547607
    3. ' (' → logprob: -12.95389461517334
    4. '(n' → logprob: -13.32889461517334
    5. '(
' → logprob: -14.82889461517334
    6. ' ((' → logprob: -15.82889461517334
    7. '[(' → logprob: -17.828893661499023
    8. '(ne' → logprob: -18.703893661499023
    9. '```' → logprob: -18.703893661499023
    10. '(None' → logprob: -18.953893661499023

Token 894: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -1.9361264946837764e-07
    2. ' ni' → logprob: -15.625
    3. '   ' → logprob: -18.0
    4. '
' → logprob: -19.5
    5. '(' → logprob: -19.75
    6. '-ni' → logprob: -20.25
    7. '```' → logprob: -20.875
    8. 'n' → logprob: -20.875
    9. ')' → logprob: -21.25
    10. 'nii' → logprob: -21.25

Token 895: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03423464670777321
    2. ',n' → logprob: -3.4092347621917725
    3. ',j' → logprob: -7.534234523773193
    4. '<|end|>' → logprob: -11.034235000610352
    5. ' ,' → logprob: -11.284235000610352
    6. ',
' → logprob: -11.284235000610352
    7. ',d' → logprob: -12.284235000610352
    8. ',new' → logprob: -13.534235000610352
    9. ',next' → logprob: -13.659235000610352
    10. '[' → logprob: -14.034235000610352

Token 896: ' nj' (ID: 8979)
  Prédit: 'nj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -7.703443770878948e-06
    2. ' nj' → logprob: -11.875007629394531
    3. '   ' → logprob: -14.875007629394531
    4. 'n' → logprob: -15.750007629394531
    5. '
' → logprob: -16.50000762939453
    6. '    ' → logprob: -18.00000762939453
    7. ' ' → logprob: -18.62500762939453
    8. 'Nj' → logprob: -19.25000762939453
    9. '  ' → logprob: -19.37500762939453
    10. 'mj' → logprob: -19.62500762939453

Token 897: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')
' → logprob: -14.125000953674316
    3. ' )' → logprob: -16.250001907348633
    4. '))' → logprob: -16.750001907348633
    5. '                       ' → logprob: -17.000001907348633
    6. ')#' → logprob: -17.250001907348633
    7. ')}' → logprob: -17.375001907348633
    8. '           ' → logprob: -17.875001907348633
    9. ')return' → logprob: -18.000001907348633
    10. '                   ' → logprob: -18.000001907348633

Token 898: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9761914610862732
    2. '<|end|>' → logprob: -0.9761914610862732
    3. '		' → logprob: -2.351191520690918
    4. '<|end|>' → logprob: -3.476191520690918
    5. '	       ' → logprob: -3.726191520690918
    6. '[' → logprob: -3.851191520690918
    7. '       ' → logprob: -4.351191520690918
    8. '```' → logprob: -4.601191520690918
    9. '	' → logprob: -5.351191520690918
    10. ',' → logprob: -5.851191520690918

Token 899: ' possible' (ID: 4149)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6592292189598083
    2. '<|end|>' → logprob: -1.6592292785644531
    3. 'possible' (adapté à ' possible') → logprob: -2.534229278564453
    4. '		' → logprob: -3.409229278564453
    5. '<|end|>' → logprob: -3.409229278564453
    6. 'Possible' → logprob: -3.659229278564453
    7. '	       ' → logprob: -3.659229278564453
    8. ' possible' → logprob: -3.784229278564453
    9. '       ' → logprob: -3.909229278564453
    10. '
' → logprob: -4.534229278564453

Token 900: '_moves' (ID: 110706)
  Prédit: '_moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -3.523948907968588e-05
    2. 'moves' → logprob: -10.375035285949707
    3. '_mov' → logprob: -13.375035285949707
    4. '_positions' → logprob: -14.000035285949707
    5. 'Moves' → logprob: -15.125035285949707
    6. '_' → logprob: -15.125035285949707
    7. '_move' → logprob: -15.375035285949707
    8. '_choices' → logprob: -16.00003433227539
    9. '_matches' → logprob: -16.12503433227539
    10. ' _' → logprob: -16.50003433227539

Token 901: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.023839546367526054
    2. '.' → logprob: -4.648839473724365
    3. ',' → logprob: -5.148839473724365
    4. '=' → logprob: -5.648839473724365
    5. ')' → logprob: -6.773839473724365
    6. ' =' → logprob: -7.148839473724365
    7. '[' → logprob: -7.398839473724365
    8. '<|end|>' → logprob: -7.773839473724365
    9. '_' → logprob: -8.273839950561523
    10. '_append' → logprob: -8.773839950561523

Token 902: '(m' (ID: 2145)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.32570981979370117
    2. '(m' → logprob: -1.3257098197937012
    3. '(' → logprob: -4.950709819793701
    4. 'm' → logprob: -6.950709819793701
    5. '(pos' → logprob: -7.075709819793701
    6. '[' → logprob: -7.700709819793701
    7. '_moves' → logprob: -7.825709819793701
    8. '[m' → logprob: -7.825709819793701
    9. '([]' → logprob: -7.950709819793701
    10. '([' → logprob: -8.32571029663086

Token 903: 'oves' (ID: 14526)
  Prédit: 'oves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oves' → logprob: -0.00017815368482843041
    2. '[' → logprob: -9.000178337097168
    3. 'ove' → logprob: -10.750178337097168
    4. '[[' → logprob: -10.875178337097168
    5. 'ov' → logprob: -12.625178337097168
    6. 'possible' → logprob: -12.750178337097168
    7. '[(' → logprob: -13.125178337097168
    8. 'ovable' → logprob: -13.125178337097168
    9. '[i' → logprob: -14.125178337097168
    10. 'ax' → logprob: -14.375178337097168

Token 904: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.00923074595630169
    2. '[-' → logprob: -5.634230613708496
    3. 'for' → logprob: -6.259230613708496
    4. '_moves' → logprob: -6.259230613708496
    5. '_possible' → logprob: -7.634230613708496
    6. '[' → logprob: -8.134230613708496
    7. ')' → logprob: -8.134230613708496
    8. '[_' → logprob: -8.759230613708496
    9. '[i' → logprob: -9.384230613708496
    10. 'For' → logprob: -9.384230613708496

Token 905: '_' (ID: 62)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.01830281689763069
    2. '_' → logprob: -4.018302917480469
    3. 'ost' → logprob: -10.518302917480469
    4. 'gh' → logprob: -10.643302917480469
    5. 'possible' → logprob: -10.643302917480469
    6. 'Ghost' → logprob: -11.018302917480469
    7. 'host' → logprob: -11.018302917480469
    8. 'oss' → logprob: -11.268302917480469
    9. '[' → logprob: -11.768302917480469
    10. ' ghost' → logprob: -12.518302917480469

Token 906: 'ghost' (ID: 78754)
  Prédit: 'ghost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -3.2378600735682994e-05
    2. '_' → logprob: -11.125032424926758
    3. 'for' → logprob: -12.500032424926758
    4. ' ghost' → logprob: -12.750032424926758
    5. 'Ghost' → logprob: -12.750032424926758
    6. '   ' → logprob: -13.125032424926758
    7. 'gh' → logprob: -13.250032424926758
    8. 'possible' → logprob: -13.750032424926758
    9. '
' → logprob: -14.875032424926758
    10. ' ' → logprob: -14.875032424926758

Token 907: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08168599009513855
    2. '           ' → logprob: -3.081686019897461
    3. '<|end|>' → logprob: -4.081686019897461
    4. '
' → logprob: -4.831686019897461
    5. '       ' → logprob: -6.331686019897461
    6. '<|end|>' → logprob: -6.956686019897461
    7. '```' → logprob: -7.206686019897461
    8. '    
' → logprob: -7.331686019897461
    9. '[' → logprob: -7.456686019897461
    10. '            
' → logprob: -7.581686019897461

Token 908: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03780333325266838
    2. '       ' → logprob: -4.4128031730651855
    3. '            
' → logprob: -4.6628031730651855
    4. '```' → logprob: -4.6628031730651855
    5. '        
' → logprob: -6.0378031730651855
    6. 'for' → logprob: -7.2878031730651855
    7. '    
' → logprob: -7.5378031730651855
    8. 'from' → logprob: -7.6628031730651855
    9. '
' → logprob: -8.162803649902344
    10. '		' → logprob: -8.412803649902344

Token 909: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22050587832927704
    2. 'from' → logprob: -1.9705058336257935
    3. '           ' → logprob: -2.970505952835083
    4. 'import' → logprob: -5.345505714416504
    5. '       ' → logprob: -6.845505714416504
    6. ' for' → logprob: -6.845505714416504
    7. ' from' → logprob: -8.345505714416504
    8. '```' → logprob: -10.095505714416504
    9. '   ' → logprob: -10.970505714416504
    10. '            
' → logprob: -11.095505714416504

Token 910: ' Iterate' (ID: 129410)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2027820497751236
    2. 'from' → logprob: -1.7027820348739624
    3. 'import' → logprob: -6.702782154083252
    4. '           ' → logprob: -9.077781677246094
    5. '#' → logprob: -11.452781677246094
    6. 'def' → logprob: -11.702781677246094
    7. ' for' → logprob: -12.577781677246094
    8. '            
' → logprob: -13.827781677246094
    9. ' from' → logprob: -13.952781677246094
    10. '```' → logprob: -14.077781677246094

Token 911: ' over' (ID: 1072)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40076327323913574
    2. ' over' → logprob: -1.2757632732391357
    3. 'over' → logprob: -3.9007632732391357
    4. '               ' → logprob: -4.525763511657715
    5. 'from' → logprob: -5.150763511657715
    6. ' through' → logprob: -5.275763511657715
    7. '   ' → logprob: -6.150763511657715
    8. '_over' → logprob: -6.650763511657715
    9. 'for' → logprob: -6.775763511657715
    10. '       ' → logprob: -6.900763511657715

Token 912: ' Cartesian' (ID: 175740)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.25530102849006653
    2. 'possible' → logprob: -2.505300998687744
    3. 'product' → logprob: -2.505300998687744
    4. 'it' → logprob: -4.005300998687744
    5. 'from' → logprob: -4.005300998687744
    6. '
' → logprob: -4.505300998687744
    7. 'import' → logprob: -5.755300998687744
    8. 'range' → logprob: -6.005300998687744
    9. '   ' → logprob: -6.880300998687744
    10. 'each' → logprob: -7.255300998687744

Token 913: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.07983820140361786
    2. '_product' → logprob: -2.579838275909424
    3. ' product' → logprob: -7.704838275909424
    4. 'products' → logprob: -8.204837799072266
    5. '(product' → logprob: -8.954837799072266
    6. '-product' → logprob: -10.204837799072266
    7. '   ' → logprob: -10.829837799072266
    8. '	product' → logprob: -11.454837799072266
    9. '_' → logprob: -11.954837799072266
    10. '.product' → logprob: -12.579837799072266

Token 914: ' of' (ID: 328)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7548037171363831
    2. 'import' → logprob: -0.8798037171363831
    3. '(*' → logprob: -3.1298036575317383
    4. '           ' → logprob: -3.2548036575317383
    5. ' from' → logprob: -4.379803657531738
    6. '(
' → logprob: -4.754803657531738
    7. '(' → logprob: -4.879803657531738
    8. '```' → logprob: -6.879803657531738
    9. 'for' → logprob: -7.254803657531738
    10. ' of' → logprob: -7.629803657531738

Token 915: ' all' (ID: 722)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.0019274478545412421
    2. '*' → logprob: -6.501927375793457
    3. 'from' → logprob: -8.626927375793457
    4. 'import' → logprob: -9.001927375793457
    5. ' possible' → logprob: -9.751927375793457
    6. '(*' → logprob: -10.501927375793457
    7. '`' → logprob: -11.376927375793457
    8. '```' → logprob: -11.751927375793457
    9. '
' → logprob: -12.001927375793457
    10. 'poss' → logprob: -12.876927375793457

Token 916: ' ghosts' (ID: 100279)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.0005624461336992681
    2. ' possible' → logprob: -7.62556266784668
    3. 'poss' → logprob: -10.87556266784668
    4. 'range' → logprob: -11.37556266784668
    5. 'import' → logprob: -11.62556266784668
    6. 'ranges' → logprob: -11.75056266784668
    7. '
' → logprob: -12.12556266784668
    8. '(pos' → logprob: -12.25056266784668
    9. 'product' → logprob: -12.75056266784668
    10. '(*' → logprob: -13.50056266784668

Token 917: ''' (ID: 6)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.26277485489845276
    2. 'import' → logprob: -1.8877748250961304
    3. '           ' → logprob: -3.01277494430542
    4. ' from' → logprob: -4.01277494430542
    5. 'for' → logprob: -5.01277494430542
    6. ',' → logprob: -6.51277494430542
    7. '(*' → logprob: -6.51277494430542
    8. ' for' → logprob: -6.88777494430542
    9. '```' → logprob: -7.13777494430542
    10. '(' → logprob: -8.137774467468262

Token 918: ' moves' (ID: 19523)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.013933834619820118
    2. 'moves' → logprob: -4.5139336585998535
    3. ' possible' → logprob: -5.8889336585998535
    4. ' moves' → logprob: -9.638934135437012
    5. 'positions' → logprob: -10.513934135437012
    6. 'poss' → logprob: -12.263934135437012
    7. '_moves' → logprob: -12.638934135437012
    8. 'ranges' → logprob: -12.888934135437012
    9. '   ' → logprob: -13.138934135437012
    10. 'move' → logprob: -13.388934135437012

Token 919: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010853268206119537
    2. 'from' → logprob: -5.010853290557861
    3. ' from' → logprob: -6.010853290557861
    4. 'import' → logprob: -6.510853290557861
    5. ' for' → logprob: -9.260852813720703
    6. 'for' → logprob: -9.885852813720703
    7. '            
' → logprob: -11.260852813720703
    8. '       ' → logprob: -11.885852813720703
    9. ',' → logprob: -12.010852813720703
    10. '```' → logprob: -12.135852813720703

Token 920: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026861100923269987
    2. 'from' → logprob: -6.252686023712158
    3. ' from' → logprob: -7.752686023712158
    4. 'import' → logprob: -8.752686500549316
    5. '```' → logprob: -9.252686500549316
    6. '       ' → logprob: -10.627686500549316
    7. '            
' → logprob: -11.002686500549316
    8. 'for' → logprob: -11.877686500549316
    9. ',' → logprob: -11.877686500549316
    10. ' for' → logprob: -11.877686500549316

Token 921: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.160421222448349
    2. 'from' → logprob: -2.160421133041382
    3. 'for' → logprob: -3.785421133041382
    4. 'import' → logprob: -4.785421371459961
    5. ' from' → logprob: -6.660421371459961
    6. ' for' → logprob: -7.660421371459961
    7. '       ' → logprob: -9.160421371459961
    8. '               ' → logprob: -11.535421371459961
    9. '```' → logprob: -11.910421371459961
    10. '		' → logprob: -12.410421371459961

Token 922: ' To' (ID: 2514)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8509920239448547
    2. 'from' → logprob: -0.9759920239448547
    3. 'import' → logprob: -2.22599196434021
    4. 'for' → logprob: -2.72599196434021
    5. ' from' → logprob: -4.225992202758789
    6. ' for' → logprob: -4.850992202758789
    7. '```' → logprob: -9.350992202758789
    8. '       ' → logprob: -9.725992202758789
    9. ' import' → logprob: -9.725992202758789
    10. '
' → logprob: -10.350992202758789

Token 923: ' avoid' (ID: 8397)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.13263370096683502
    2. 'import' → logprob: -2.132633686065674
    3. ' from' → logprob: -5.507633686065674
    4. '
' → logprob: -7.757633686065674
    5. ' itertools' → logprob: -7.757633686065674
    6. 'generate' → logprob: -8.757634162902832
    7. 'for' → logprob: -9.007634162902832
    8. ' avoid' → logprob: -9.132634162902832
    9. 'continue' → logprob: -9.257634162902832
    10. 'avoid' → logprob: -9.882634162902832

Token 924: ' importing' (ID: 100922)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5723764300346375
    2. ' from' → logprob: -1.6973764896392822
    3. 'pos' → logprob: -2.5723764896392822
    4. 'import' → logprob: -2.5723764896392822
    5. ' for' → logprob: -3.9473764896392822
    6. 'for' → logprob: -4.072376251220703
    7. ' possible' → logprob: -4.447376251220703
    8. ' move' → logprob: -4.447376251220703
    9. 'product' → logprob: -4.822376251220703
    10. ' itertools' → logprob: -5.072376251220703

Token 925: ' product' (ID: 1888)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.08941986411809921
    2. 'product' → logprob: -2.5894198417663574
    3. ' itertools' → logprob: -5.089419841766357
    4. 'from' → logprob: -5.589419841766357
    5. 'import' → logprob: -7.589419841766357
    6. '`' → logprob: -10.589420318603516
    7. '```' → logprob: -10.964420318603516
    8. 'sys' → logprob: -11.339420318603516
    9. '
' → logprob: -12.339420318603516
    10. 'iter' → logprob: -12.964420318603516

Token 926: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3205905258655548
    2. ' for' → logprob: -2.1955904960632324
    3. '               ' → logprob: -2.9455904960632324
    4. 'import' → logprob: -3.8205904960632324
    5. 'for' → logprob: -3.9455904960632324
    6. ' from' → logprob: -4.070590496063232
    7. 'from' → logprob: -4.070590496063232
    8. '                   ' → logprob: -4.820590496063232
    9. '   ' → logprob: -5.195590496063232
    10. '       ' → logprob: -5.445590496063232

Token 927: ' itertools' (ID: 103178)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -9.984787902794778e-05
    2. ' itertools' → logprob: -9.250100135803223
    3. 'import' → logprob: -12.625100135803223
    4. '
' → logprob: -16.250099182128906
    5. 'iter' → logprob: -16.250099182128906
    6. '_it' → logprob: -16.375099182128906
    7. '`' → logprob: -16.500099182128906
    8. 'sys' → logprob: -17.500099182128906
    9. '```' → logprob: -17.625099182128906
    10. 'math' → logprob: -17.750099182128906

Token 928: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10509628802537918
    2. ' for' → logprob: -2.9800963401794434
    3. 'for' → logprob: -3.7300963401794434
    4. '               ' → logprob: -4.855096340179443
    5. 'import' → logprob: -5.230096340179443
    6. '   ' → logprob: -5.605096340179443
    7. '       ' → logprob: -6.230096340179443
    8. 'from' → logprob: -6.480096340179443
    9. ' from' → logprob: -6.855096340179443
    10. 'pos' → logprob: -7.355096340179443

Token 929: ' minimal' (ID: 19957)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.10914294421672821
    2. ' ghost' → logprob: -3.484143018722534
    3. 'the' → logprob: -4.609142780303955
    4. 'each' → logprob: -4.734142780303955
    5. 'range' → logprob: -4.734142780303955
    6. 'pos' → logprob: -4.984142780303955
    7. 'g' → logprob: -5.109142780303955
    8. '_' → logprob: -5.359142780303955
    9. 'i' → logprob: -5.359142780303955
    10. ' ghosts' → logprob: -6.109142780303955

Token 930: ' code' (ID: 3490)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -1.4203951358795166
    2. ' range' → logprob: -1.9203951358795166
    3. 'range' → logprob: -1.9203951358795166
    4. 'pos' → logprob: -2.5453951358795166
    5. 'for' → logprob: -2.7953951358795166
    6. '   ' → logprob: -2.7953951358795166
    7. ' ghost' → logprob: -3.1703951358795166
    8. ' for' → logprob: -3.2953951358795166
    9. 'n' → logprob: -3.6703951358795166
    10. '1' → logprob: -4.2953948974609375

Token 931: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05196892097592354
    2. '               ' → logprob: -3.801968812942505
    3. ' for' → logprob: -4.301969051361084
    4. 'for' → logprob: -5.301969051361084
    5. 'import' → logprob: -6.426969051361084
    6. '                   ' → logprob: -6.551969051361084
    7. '       ' → logprob: -6.551969051361084
    8. '   ' → logprob: -7.051969051361084
    9. 'pos' → logprob: -7.426969051361084
    10. '```' → logprob: -7.926969051361084

Token 932: ' implement' (ID: 6365)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18578468263149261
    2. ' for' → logprob: -2.1857845783233643
    3. 'def' → logprob: -4.060784816741943
    4. '           ' → logprob: -4.810784816741943
    5. 'indices' → logprob: -5.060784816741943
    6. 'if' → logprob: -5.185784816741943
    7. 'idx' → logprob: -5.310784816741943
    8. '   ' → logprob: -5.435784816741943
    9. ' def' → logprob: -5.810784816741943
    10. 'from' → logprob: -6.560784816741943

Token 933: ' simple' (ID: 4705)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1953723132610321
    2. ' def' → logprob: -2.4453723430633545
    3. 'for' → logprob: -2.6953723430633545
    4. ' for' → logprob: -4.945372104644775
    5. 'if' → logprob: -5.320372104644775
    6. '   ' → logprob: -5.320372104644775
    7. '           ' → logprob: -6.320372104644775
    8. '
' → logprob: -7.195372104644775
    9. '```' → logprob: -7.320372104644775
    10. '       ' → logprob: -7.570372104644775

Token 934: ' recursive' (ID: 66711)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04707026109099388
    2. 'for' → logprob: -3.922070264816284
    3. 'if' → logprob: -4.172070026397705
    4. ' def' → logprob: -4.797070026397705
    5. ' if' → logprob: -7.047070026397705
    6. ' for' → logprob: -7.422070026397705
    7. ' loops' → logprob: -8.547070503234863
    8. '```' → logprob: -8.547070503234863
    9. 'from' → logprob: -9.422070503234863
    10. '           ' → logprob: -9.672070503234863

Token 935: ' combination' (ID: 14083)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006697862991131842
    2. ' def' → logprob: -7.375669956207275
    3. 'dfs' → logprob: -10.750669479370117
    4. 'search' → logprob: -11.625669479370117
    5. 'function' → logprob: -11.625669479370117
    6. ' search' → logprob: -13.750669479370117
    7. ' function' → logprob: -14.500669479370117
    8. 'generator' → logprob: -14.625669479370117
    9. '```' → logprob: -14.625669479370117
    10. 'for' → logprob: -15.375669479370117

Token 936: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08141031861305237
    2. '           ' → logprob: -2.7064104080200195
    3. '
' → logprob: -4.8314104080200195
    4. ' def' → logprob: -6.5814104080200195
    5. '       ' → logprob: -7.2064104080200195
    6. '```' → logprob: -7.3314104080200195
    7. '            
' → logprob: -8.33141040802002
    8. '   ' → logprob: -8.58141040802002
    9. '``' → logprob: -10.33141040802002
    10. '_def' → logprob: -10.33141040802002

Token 937: '           ' (ID: 352)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4857475757598877
    2. '           ' → logprob: -0.9857475757598877
    3. '```' → logprob: -5.235747337341309
    4. '
' → logprob: -5.485747337341309
    5. '       ' → logprob: -7.235747337341309
    6. ' def' → logprob: -7.485747337341309
    7. '            
' → logprob: -7.735747337341309
    8. '   ' → logprob: -8.110747337341309
    9. '``' → logprob: -9.735747337341309
    10. '    
' → logprob: -11.735747337341309

Token 938: ' next' (ID: 2613)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005150251090526581
    2. '           ' → logprob: -7.750514984130859
    3. 'from' → logprob: -10.62551498413086
    4. ' def' → logprob: -11.00051498413086
    5. '       ' → logprob: -11.00051498413086
    6. '   ' → logprob: -11.25051498413086
    7. '
' → logprob: -11.62551498413086
    8. '```' → logprob: -13.00051498413086
    9. 'stack' → logprob: -14.12551498413086
    10. '            
' → logprob: -14.37551498413086

Token 939: '_states' (ID: 53795)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.4594413936138153
    2. '_moves' → logprob: -1.4594414234161377
    3. '_states' → logprob: -2.3344414234161377
    4. '_pos' → logprob: -3.3344414234161377
    5. '_' → logprob: -7.209441184997559
    6. '_move' → logprob: -7.584441184997559
    7. 'def' → logprob: -7.959441184997559
    8. '_steps' → logprob: -8.084441184997559
    9. '_possible' → logprob: -8.709441184997559
    10. '_state' → logprob: -8.834441184997559

Token 940: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01576240547001362
    2. '=' → logprob: -4.2657623291015625
    3. '=[]' → logprob: -6.6407623291015625
    4. '   ' → logprob: -9.390762329101562
    5. ',' → logprob: -9.890762329101562
    6. '(' → logprob: -10.140762329101562
    7. 'def' → logprob: -10.890762329101562
    8. ')' → logprob: -11.140762329101562
    9. 's' → logprob: -11.390762329101562
    10. ':' → logprob: -11.515762329101562

Token 941: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0008928788010962307
    2. '[]
' → logprob: -7.8758931159973145
    3. '[]

' → logprob: -8.375892639160156
    4. '[' → logprob: -8.625892639160156
    5. 'set' → logprob: -9.250892639160156
    6. 'deque' → logprob: -12.750892639160156
    7. '[]}' → logprob: -13.375892639160156
    8. ' []' → logprob: -13.500892639160156
    9. '[][]' → logprob: -15.250892639160156
    10. '[],' → logprob: -16.375892639160156

Token 942: '           ' (ID: 352)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08602643758058548
    2. '           ' → logprob: -2.586026430130005
    3. '       ' → logprob: -5.586026668548584
    4. '   ' → logprob: -6.461026668548584
    5. ' def' → logprob: -6.961026668548584
    6. '```' → logprob: -7.711026668548584
    7. '
' → logprob: -8.461026191711426
    8. '	def' → logprob: -8.711026191711426
    9. '            
' → logprob: -11.836026191711426
    10. '	       ' → logprob: -12.461026191711426

Token 943: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -8.792751032160595e-05
    2. '           ' → logprob: -10.00008773803711
    3. ' def' → logprob: -11.00008773803711
    4. '   ' → logprob: -11.25008773803711
    5. '       ' → logprob: -11.37508773803711
    6. '```' → logprob: -14.62508773803711
    7. '	def' → logprob: -14.87508773803711
    8. '
' → logprob: -15.25008773803711
    9. 'index' → logprob: -17.12508773803711
    10. 'stack' → logprob: -17.25008773803711

Token 944: ' back' (ID: 1602)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.4699666500091553
    2. 'generate' → logprob: -1.2199666500091553
    3. 'back' → logprob: -3.2199666500091553
    4. 'gen' → logprob: -3.9699666500091553
    5. ' dfs' → logprob: -4.344966888427734
    6. ' back' → logprob: -5.969966888427734
    7. 'search' → logprob: -6.094966888427734
    8. ' generate' → logprob: -6.344966888427734
    9. 'combine' → logprob: -6.719966888427734
    10. 're' → logprob: -9.219966888427734

Token 945: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -0.007579416502267122
    2. 'tract' → logprob: -5.757579326629639
    3. 'tracking' → logprob: -6.132579326629639
    4. 'trace' → logprob: -6.632579326629639
    5. 'tr' → logprob: -7.757579326629639
    6. '_track' → logprob: -8.632579803466797
    7. '```' → logprob: -9.132579803466797
    8. 't' → logprob: -9.632579803466797
    9. '
' → logprob: -10.257579803466797
    10. 'trak' → logprob: -10.757579803466797

Token 946: '(idx' (ID: 42793)
  Prédit: '(depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(depth' → logprob: -1.088331937789917
    2. '(i' → logprob: -1.463331937789917
    3. '(idx' → logprob: -1.463331937789917
    4. '(index' → logprob: -1.838331937789917
    5. '(pos' → logprob: -3.463331937789917
    6. '(' → logprob: -4.963332176208496
    7. '(level' → logprob: -6.213332176208496
    8. '(ind' → logprob: -7.838332176208496
    9. '(ix' → logprob: -9.213332176208496
    10. '(cur' → logprob: -9.713332176208496

Token 947: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003772531636059284
    2. '(idx' → logprob: -5.878772735595703
    3. '(' → logprob: -7.503772735595703
    4. '(i' → logprob: -8.878772735595703
    5. ' ,' → logprob: -9.878772735595703
    6. '(pos' → logprob: -10.253772735595703
    7. '(next' → logprob: -10.253772735595703
    8. '(depth' → logprob: -10.628772735595703
    9. ',(' → logprob: -10.878772735595703
    10. ' (' → logprob: -11.128772735595703

Token 948: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5736356377601624
    2. 'path' → logprob: -1.0736355781555176
    3. ' current' → logprob: -3.3236355781555176
    4. ' path' → logprob: -3.6986355781555176
    5. 'positions' → logprob: -3.6986355781555176
    6. 'curr' → logprob: -4.948635578155518
    7. ' positions' → logprob: -7.073635578155518
    8. 'chosen' → logprob: -7.573635578155518
    9. ' curr' → logprob: -8.323636054992676
    10. 'comb' → logprob: -9.198636054992676

Token 949: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.2303003966808319
    2. '_pos' → logprob: -2.3553004264831543
    3. '_state' → logprob: -2.8553004264831543
    4. '_moves' → logprob: -3.1053004264831543
    5. ',' → logprob: -5.480300426483154
    6. '_states' → logprob: -6.105300426483154
    7. '_' → logprob: -6.855300426483154
    8. '):' → logprob: -7.980300426483154
    9. '_move' → logprob: -8.605299949645996
    10. '):
' → logprob: -9.230299949645996

Token 950: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1500607281923294
    2. '):' → logprob: -2.4000606536865234
    3. '):
' → logprob: -3.0250606536865234
    4. '):
' → logprob: -10.900060653686523
    5. ' ,' → logprob: -11.525060653686523
    6. ')' → logprob: -11.525060653686523
    7. '<|end|>' → logprob: -11.900060653686523
    8. '):

' → logprob: -11.900060653686523
    9. '   ' → logprob: -12.275060653686523
    10. ',
' → logprob: -12.400060653686523

Token 951: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009082136675715446
    2. ',' → logprob: -5.759082317352295
    3. '   ' → logprob: -5.759082317352295
    4. '       ' → logprob: -7.634082317352295
    5. ':' → logprob: -7.884082317352295
    6. ' if' → logprob: -8.134081840515137
    7. '                
' → logprob: -8.134081840515137
    8. '    
' → logprob: -8.884081840515137
    9. ' 
' → logprob: -9.009081840515137
    10. '           ' → logprob: -9.134081840515137

Token 952: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10890210419893265
    2. ' 
' → logprob: -3.3589022159576416
    3. 'if' (adapté à ' if') → logprob: -3.9839022159576416
    4. '
' → logprob: -4.2339019775390625
    5. '   ' → logprob: -4.3589019775390625
    6. '               ' → logprob: -5.2339019775390625
    7. '                   ' → logprob: -5.6089019775390625
    8. '    
' → logprob: -5.6089019775390625
    9. '	if' → logprob: -6.4839019775390625
    10. '                ' → logprob: -6.6089019775390625

Token 953: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.07889826595783234
    2. 'idx' → logprob: -2.5788981914520264
    3. '	idx' → logprob: -12.328898429870605
    4. '(idx' → logprob: -12.703898429870605
    5. '_idx' → logprob: -14.203898429870605
    6. '[idx' → logprob: -14.953898429870605
    7. '.idx' → logprob: -17.20389747619629
    8. ' ' → logprob: -17.57889747619629
    9. 'Idx' → logprob: -18.20389747619629
    10. '   ' → logprob: -18.20389747619629

Token 954: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2255062311887741
    2. ' ==' → logprob: -1.6005061864852905
    3. '=' → logprob: -10.100505828857422
    4. '===' → logprob: -11.100505828857422
    5. '==
' → logprob: -11.600505828857422
    6. '<|end|>' → logprob: -11.850505828857422
    7. '>=' → logprob: -12.225505828857422
    8. '>' → logprob: -12.475505828857422
    9. ')==' → logprob: -12.850505828857422
    10. ')' → logprob: -13.225505828857422

Token 955: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0004377022560220212
    2. 'len' → logprob: -7.7504377365112305
    3. ' n' → logprob: -12.00043773651123
    4. '           ' → logprob: -15.12543773651123
    5. '               ' → logprob: -15.87543773651123
    6. '3' → logprob: -16.125436782836914
    7. ' len' → logprob: -16.500436782836914
    8. '   ' → logprob: -16.625436782836914
    9. '[n' → logprob: -16.625436782836914
    10. '```' → logprob: -16.625436782836914

Token 956: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009914860129356384
    2. ':
' → logprob: -4.634914875030518
    3. '):' → logprob: -9.13491439819336
    4. ':return' → logprob: -10.50991439819336
    5. '):
' → logprob: -12.13491439819336
    6. '               ' → logprob: -12.25991439819336
    7. '                   ' → logprob: -12.63491439819336
    8. ')' → logprob: -12.75991439819336
    9. '<|end|>' → logprob: -13.38491439819336
    10. '   ' → logprob: -13.88491439819336

Token 957: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004713495261967182
    2. '
' → logprob: -6.379713535308838
    3. '               ' → logprob: -6.504713535308838
    4. '   ' → logprob: -7.879713535308838
    5. '    
' → logprob: -8.00471305847168
    6. '                       ' → logprob: -8.50471305847168
    7. '                    
' → logprob: -8.62971305847168
    8. ',' → logprob: -9.37971305847168
    9. '           ' → logprob: -10.00471305847168
    10. '       ' → logprob: -10.37971305847168

Token 958: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.13315367698669434
    2. 'if' → logprob: -2.7581536769866943
    3. '                   ' → logprob: -3.0081536769866943
    4. '               ' → logprob: -5.758153915405273
    5. ' if' → logprob: -6.133153915405273
    6. ' #' → logprob: -6.258153915405273
    7. '                       ' → logprob: -6.258153915405273
    8. 'for' → logprob: -6.633153915405273
    9. 'positions' → logprob: -7.633153915405273
    10. '                    
' → logprob: -8.258153915405273

Token 959: ' Check' (ID: 6208)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.03198521211743355
    2. 'if' → logprob: -4.031985282897949
    3. 'positions' → logprob: -5.281985282897949
    4. '                   ' → logprob: -5.531985282897949
    5. '               ' → logprob: -6.406985282897949
    6. 'for' → logprob: -6.781985282897949
    7. 'pos' → logprob: -7.656985282897949
    8. '           ' → logprob: -7.656985282897949
    9. ' #' → logprob: -7.906985282897949
    10. 'visited' → logprob: -8.78198528289795

Token 960: ' conditions' (ID: 6409)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1681405305862427
    2. 'len' → logprob: -1.2931405305862427
    3. 'positions' → logprob: -2.293140411376953
    4. ' for' → logprob: -2.293140411376953
    5. 'for' → logprob: -2.418140411376953
    6. 'if' → logprob: -3.168140411376953
    7. ' len' → logprob: -3.918140411376953
    8. 'current' → logprob: -4.418140411376953
    9. ' positions' → logprob: -4.418140411376953
    10. ' current' → logprob: -4.793140411376953

Token 961: ' on' (ID: 402)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5716832876205444
    2. ':
' → logprob: -1.6966832876205444
    3. 'if' → logprob: -2.821683406829834
    4. ':' → logprob: -2.946683406829834
    5. '
' → logprob: -3.446683406829834
    6. ' if' → logprob: -3.571683406829834
    7. '               ' → logprob: -3.571683406829834
    8. '                       ' → logprob: -4.196683406829834
    9. 'for' → logprob: -4.821683406829834
    10. '                    
' → logprob: -4.821683406829834

Token 962: ' the' (ID: 290)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.42896726727485657
    2. ' current' → logprob: -1.1789672374725342
    3. 'positions' → logprob: -3.553967237472534
    4. ' positions' → logprob: -5.178967475891113
    5. 'the' → logprob: -6.053967475891113
    6. 'len' → logprob: -6.178967475891113
    7. '           ' → logprob: -7.428967475891113
    8. ' the' → logprob: -7.803967475891113
    9. 'next' → logprob: -7.803967475891113
    10. ' next' → logprob: -8.553967475891113

Token 963: ' move' (ID: 5275)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.7662020921707153
    2. ' current' → logprob: -0.8912020921707153
    3. 'positions' → logprob: -3.016201972961426
    4. ' next' → logprob: -3.516201972961426
    5. ' positions' → logprob: -4.016201972961426
    6. 'next' → logprob: -4.391201972961426
    7. 'new' → logprob: -5.516201972961426
    8. ' new' → logprob: -5.516201972961426
    9. 'len' → logprob: -7.016201972961426
    10. '   ' → logprob: -7.016201972961426

Token 964: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9878432154655457
    2. ':
' → logprob: -1.2378432750701904
    3. '                   ' → logprob: -1.4878432750701904
    4. '                    
' → logprob: -3.4878432750701904
    5. '
' → logprob: -3.7378432750701904
    6. '                        
' → logprob: -4.237843036651611
    7. '                       ' → logprob: -4.362843036651611
    8. '  
' → logprob: -5.362843036651611
    9. '```' → logprob: -5.612843036651611
    10. '\n' → logprob: -5.987843036651611

Token 965: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11938566714525223
    2. '                       ' → logprob: -2.6193857192993164
    3. '                    
' → logprob: -4.369385719299316
    4. '                        
' → logprob: -4.994385719299316
    5. '
' → logprob: -5.244385719299316
    6. '               ' → logprob: -5.244385719299316
    7. '    
' → logprob: -5.994385719299316
    8. '       ' → logprob: -6.369385719299316
    9. '  
' → logprob: -6.744385719299316
    10. ' 
' → logprob: -6.994385719299316

Token 966: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.0482571125030518
    2. '#' (adapté à ' #') → logprob: -1.2982571125030518
    3. 'if' → logprob: -1.9232571125030518
    4. 'positions' → logprob: -2.5482571125030518
    5. 'prev' → logprob: -2.7982571125030518
    6. ' if' → logprob: -3.5482571125030518
    7. ' #' → logprob: -4.173256874084473
    8. 'pos' → logprob: -4.673256874084473
    9. '                       ' → logprob: -4.923256874084473
    10. ' positions' → logprob: -5.173256874084473

Token 967: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.889839231967926
    2. 'positions' → logprob: -1.2648391723632812
    3. 'prev' → logprob: -1.7648391723632812
    4. '                   ' → logprob: -2.5148391723632812
    5. 'pos' → logprob: -3.7648391723632812
    6. 'old' → logprob: -4.889839172363281
    7. ' #' → logprob: -5.389839172363281
    8. ' positions' → logprob: -5.514839172363281
    9. 'current' → logprob: -6.014839172363281
    10. ' prev' → logprob: -6.014839172363281

Token 968: '1' (ID: 16)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0158785581588745
    2. 'positions' → logprob: -1.0158785581588745
    3. 'prev' → logprob: -2.015878677368164
    4. 'pos' → logprob: -2.890878677368164
    5. 'new' → logprob: -3.515878677368164
    6. 'curr' → logprob: -3.890878677368164
    7. 'if' → logprob: -4.515878677368164
    8. 'current' → logprob: -5.015878677368164
    9. 'old' → logprob: -5.265878677368164
    10. 'len' → logprob: -5.390878677368164

Token 969: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7331300973892212
    2. '#' → logprob: -1.4831300973892212
    3. 'if' → logprob: -2.3581299781799316
    4. ' if' → logprob: -2.9831299781799316
    5. '.' → logprob: -3.3581299781799316
    6. ' #' → logprob: -3.7331299781799316
    7. ':' → logprob: -3.7331299781799316
    8. '                   ' → logprob: -4.233129978179932
    9. ' ==' → logprob: -4.983129978179932
    10. '           ' → logprob: -5.108129978179932

Token 970: ' No' (ID: 3004)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.03665076568722725
    2. 'positions' → logprob: -3.5366506576538086
    3. ' len' → logprob: -5.911650657653809
    4. '#' → logprob: -6.411650657653809
    5. 'all' → logprob: -7.286650657653809
    6. ' positions' → logprob: -7.786650657653809
    7. 'new' → logprob: -8.036650657653809
    8. 'length' → logprob: -8.286650657653809
    9. 'pos' → logprob: -8.286650657653809
    10. ' all' → logprob: -9.286650657653809

Token 971: ' duplicate' (ID: 41010)
  Prédit: ' two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.09325622022151947
    2. 'two' → logprob: -2.5932562351226807
    3. ' duplicates' → logprob: -5.218255996704102
    4. 'duplicates' → logprob: -5.843255996704102
    5. ' duplicate' → logprob: -5.968255996704102
    6. 'duplicate' → logprob: -6.343255996704102
    7. ' positions' → logprob: -7.843255996704102
    8. 'positions' → logprob: -7.843255996704102
    9. 't' → logprob: -8.593255996704102
    10. ' current' → logprob: -8.843255996704102

Token 972: ' final' (ID: 1721)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.6020085215568542
    2. ' positions' → logprob: -1.352008581161499
    3. '_positions' → logprob: -2.352008581161499
    4. ' current' → logprob: -2.852008581161499
    5. 'current' → logprob: -3.727008581161499
    6. 's' → logprob: -4.35200834274292
    7. 'cells' → logprob: -6.97700834274292
    8. ' cells' → logprob: -7.10200834274292
    9. '_current' → logprob: -7.60200834274292
    10. '_' → logprob: -7.97700834274292

Token 973: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.788951575756073
    2. '_positions' → logprob: -0.788951575756073
    3. ' positions' → logprob: -2.4139516353607178
    4. '_' → logprob: -7.163951396942139
    5. '_cells' → logprob: -8.163951873779297
    6. 'cells' → logprob: -8.413951873779297
    7. 's' → logprob: -8.538951873779297
    8. '_position' → logprob: -9.788951873779297
    9. ' cells' → logprob: -9.913951873779297
    10. 'position' → logprob: -10.038951873779297

Token 974: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01890835538506508
    2. 'if' → logprob: -4.768908500671387
    3. '               ' → logprob: -5.393908500671387
    4. '                       ' → logprob: -6.018908500671387
    5. ' if' → logprob: -6.268908500671387
    6. ',' → logprob: -7.768908500671387
    7. '           ' → logprob: -8.143908500671387
    8. ':' → logprob: -8.643908500671387
    9. '       ' → logprob: -8.893908500671387
    10. '```' → logprob: -9.268908500671387

Token 975: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0030134767293930054
    2. '               ' → logprob: -6.628013610839844
    3. '                       ' → logprob: -7.378013610839844
    4. 'if' → logprob: -8.128013610839844
    5. '       ' → logprob: -9.003013610839844
    6. ' if' → logprob: -9.128013610839844
    7. '```' → logprob: -9.128013610839844
    8. '           ' → logprob: -9.253013610839844
    9. '   ' → logprob: -9.378013610839844
    10. '                    
' → logprob: -9.753013610839844

Token 976: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3595968782901764
    2. '                   ' → logprob: -1.359596848487854
    3. 'positions' → logprob: -3.6095969676971436
    4. ' if' → logprob: -4.1095967292785645
    5. 'return' → logprob: -7.6095967292785645
    6. '               ' → logprob: -7.9845967292785645
    7. ' positions' → logprob: -8.359597206115723
    8. '                       ' → logprob: -8.609597206115723
    9. 'pos' → logprob: -9.109597206115723
    10. 'final' → logprob: -9.234597206115723

Token 977: ' ' (ID: 220)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7278996706008911
    2. 'if' → logprob: -0.8528996706008911
    3. '                   ' → logprob: -2.6028995513916016
    4. 'positions' → logprob: -4.727899551391602
    5. ' positions' → logprob: -5.727899551391602
    6. '   ' → logprob: -6.852899551391602
    7. 'pos' → logprob: -7.102899551391602
    8. ' ' → logprob: -7.602899551391602
    9. 'return' → logprob: -7.602899551391602
    10. ' return' → logprob: -7.852899551391602

Token 978: '2' (ID: 17)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0004952482995577157
    2. 'return' → logprob: -8.375494956970215
    3. ' if' → logprob: -9.375494956970215
    4. 'len' → logprob: -9.875494956970215
    5. 'positions' → logprob: -9.875494956970215
    6. '   ' → logprob: -10.250494956970215
    7. '
' → logprob: -11.625494956970215
    8. 'final' → logprob: -12.125494956970215
    9. '           ' → logprob: -12.250494956970215
    10. 'seen' → logprob: -12.625494956970215

Token 979: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007424455252476037
    2. '                   ' → logprob: -8.25074291229248
    3. ' )' → logprob: -8.75074291229248
    4. '           ' → logprob: -9.62574291229248
    5. '               ' → logprob: -9.62574291229248
    6. ' ==' → logprob: -9.75074291229248
    7. ' !=' → logprob: -10.37574291229248
    8. '   ' → logprob: -10.87574291229248
    9. '==' → logprob: -11.12574291229248
    10. ':' → logprob: -11.25074291229248

Token 980: ' No' (ID: 3004)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.14564931392669678
    2. 'previous' → logprob: -3.3956494331359863
    3. ' prev' → logprob: -3.5206494331359863
    4. '#' → logprob: -3.7706494331359863
    5. 'for' → logprob: -4.145649433135986
    6. 'len' → logprob: -4.645649433135986
    7. 'old' → logprob: -4.895649433135986
    8. 'positions' → logprob: -5.770649433135986
    9. ' previous' → logprob: -5.895649433135986
    10. '   ' → logprob: -6.145649433135986

Token 981: ' pair' (ID: 10610)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.8291399478912354
    2. 'pair' → logprob: -1.3291399478912354
    3. ' pair' → logprob: -1.9541399478912354
    4. 'any' → logprob: -3.2041399478912354
    5. 'pos' → logprob: -3.3291399478912354
    6. '(pair' → logprob: -4.079139709472656
    7. '(idx' → logprob: -4.579139709472656
    8. ' swap' → logprob: -4.579139709472656
    9. 'two' → logprob: -4.954139709472656
    10. ' any' → logprob: -5.204139709472656

Token 982: ' of' (ID: 328)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.870976448059082
    2. 'wise' → logprob: -0.995976448059082
    3. ' swap' → logprob: -1.745976448059082
    4. '_swap' → logprob: -3.995976448059082
    5. ' swaps' → logprob: -4.495976448059082
    6. 'sw' → logprob: -5.620976448059082
    7. 's' → logprob: -6.870976448059082
    8. '_sw' → logprob: -7.120976448059082
    9. ' swapping' → logprob: -7.370976448059082
    10. '
' → logprob: -7.620976448059082

Token 983: ' ghosts' (ID: 100279)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.26525646448135376
    2. 'current' → logprob: -2.390256404876709
    3. 'positions' → logprob: -2.515256404876709
    4. ' ghosts' → logprob: -3.140256404876709
    5. ' current' → logprob: -5.140256404876709
    6. ' ghost' → logprob: -5.890256404876709
    7. 'idx' → logprob: -6.015256404876709
    8. ' positions' → logprob: -6.515256404876709
    9. 'distinct' → logprob: -6.890256404876709
    10. 'sw' → logprob: -6.890256404876709

Token 984: ' swapped' (ID: 125210)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.42877739667892456
    2. ' swap' → logprob: -2.3037774562835693
    3. 'swap' → logprob: -2.4287774562835693
    4. ' that' → logprob: -2.9287774562835693
    5. ' swapping' → logprob: -3.5537774562835693
    6. '                       ' → logprob: -3.5537774562835693
    7. '               ' → logprob: -4.92877721786499
    8. '
' → logprob: -5.05377721786499
    9. ' swaps' → logprob: -5.17877721786499
    10. ' have' → logprob: -5.42877721786499

Token 985: ' positions' (ID: 15897)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.06658931821584702
    2. 'positions' → logprob: -2.94158935546875
    3. '_' → logprob: -4.94158935546875
    4. ' positions' → logprob: -6.69158935546875
    5. '   ' → logprob: -7.44158935546875
    6. '
' → logprob: -7.44158935546875
    7. 's' → logprob: -8.19158935546875
    8. 'Positions' → logprob: -8.31658935546875
    9. '                   ' → logprob: -8.69158935546875
    10. ' _' → logprob: -8.69158935546875

Token 986: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14842696487903595
    2. '
' → logprob: -2.0234270095825195
    3. '                    
' → logprob: -6.1484270095825195
    4. 'if' → logprob: -6.7734270095825195
    5. '               ' → logprob: -6.7734270095825195
    6. '    
' → logprob: -8.64842700958252
    7. ' if' → logprob: -8.77342700958252
    8. '```' → logprob: -8.89842700958252
    9. '   ' → logprob: -9.02342700958252
    10. '
' → logprob: -9.14842700958252

Token 987: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2594298124313354
    2. ')
' → logprob: -1.5094298124313354
    3. '                   ' → logprob: -1.5094298124313354
    4. ')' → logprob: -1.6344298124313354
    5. ' for' → logprob: -3.634429931640625
    6. '#' → logprob: -4.259429931640625
    7. 'current' → logprob: -5.134429931640625
    8. '                       ' → logprob: -5.134429931640625
    9. 'if' → logprob: -5.259429931640625
    10. '
' → logprob: -5.509429931640625

Token 988: '.e' (ID: 2560)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4444904625415802
    2. 's' → logprob: -1.5694904327392578
    3. 'f' → logprob: -3.194490432739258
    4. ')' → logprob: -3.319490432739258
    5. 'm' → logprob: -4.194490432739258
    6. '<' → logprob: -4.569490432739258
    7. ',' → logprob: -4.819490432739258
    8. 'nt' → logprob: -4.819490432739258
    9. 'nd' → logprob: -5.194490432739258
    10. '=' → logprob: -5.569490432739258

Token 989: '.' (ID: 13)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7861217260360718
    2. 'dx' → logprob: -0.9111217260360718
    3. 'nd' → logprob: -2.2861218452453613
    4. 'n' → logprob: -3.7861218452453613
    5. 'm' → logprob: -5.536121845245361
    6. '=' → logprob: -5.911121845245361
    7. 'f' → logprob: -6.411121845245361
    8. 'x' → logprob: -6.786121845245361
    9. '==' → logprob: -7.036121845245361
    10. '...' → logprob: -7.286121845245361

Token 990: ' ghosts' (ID: 100279)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.40984803438186646
    2. 'for' → logprob: -2.0348479747772217
    3. 'any' → logprob: -2.4098479747772217
    4. 'previous' → logprob: -3.2848479747772217
    5. '(current' → logprob: -3.7848479747772217
    6. 'pos' → logprob: -3.9098479747772217
    7. 'prev' → logprob: -4.659848213195801
    8. ' current' → logprob: -5.659848213195801
    9. 'old' → logprob: -5.659848213195801
    10. ' any' → logprob: -5.909848213195801

Token 991: ' A' (ID: 355)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -2.050482749938965
    2. 'don't' → logprob: -2.175482749938965
    3. '```' → logprob: -2.300482749938965
    4. 'pos' → logprob: -2.300482749938965
    5. ')' → logprob: -2.425482749938965
    6. 'm' → logprob: -2.925482749938965
    7. 'have' → logprob: -2.925482749938965
    8. '_positions' → logprob: -3.175482749938965
    9. 'do' → logprob: -3.300482749938965
    10. '_pos' → logprob: -3.675482749938965

Token 992: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.4125356674194336
    2. 'and' → logprob: -1.4125356674194336
    3. '```' → logprob: -2.4125356674194336
    4. ')' → logprob: -2.9125356674194336
    5. 'def' → logprob: -2.9125356674194336
    6. ',' → logprob: -2.9125356674194336
    7. '                   ' → logprob: -3.0375356674194336
    8. 'pos' → logprob: -3.4125356674194336
    9. '_positions' → logprob: -3.4125356674194336
    10. 'positions' → logprob: -3.7875356674194336

Token 993: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00045367187703959644
    2. ' B' → logprob: -8.00045394897461
    3. 'ghost' → logprob: -9.37545394897461
    4. '
' → logprob: -11.37545394897461
    5. 'current' → logprob: -11.75045394897461
    6. ' ghosts' → logprob: -12.37545394897461
    7. '```' → logprob: -12.62545394897461
    8. 'A' → logprob: -13.75045394897461
    9. ' ' → logprob: -14.00045394897461
    10. 'state' → logprob: -14.25045394897461

Token 994: ' do' (ID: 621)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4558792114257812
    2. '```' → logprob: -1.5808792114257812
    3. '                   ' → logprob: -2.4558792114257812
    4. 'positions' → logprob: -2.8308792114257812
    5. ''s' → logprob: -3.3308792114257812
    6. '``' → logprob: -3.4558792114257812
    7. ' have' → logprob: -3.4558792114257812
    8. ' move' → logprob: -3.8308792114257812
    9. 'move' → logprob: -3.9558792114257812
    10. ' at' → logprob: -3.9558792114257812

Token 995: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0010823521297425032
    2. ' not' → logprob: -7.001082420349121
    3. '```' → logprob: -10.251082420349121
    4. '           ' → logprob: -10.501082420349121
    5. 't' → logprob: -10.876082420349121
    6. 'n't' → logprob: -11.001082420349121
    7. '                   ' → logprob: -11.626082420349121
    8. '``' → logprob: -11.751082420349121
    9. '               ' → logprob: -11.876082420349121
    10. 'idx' → logprob: -11.876082420349121

Token 996: ' end' (ID: 1268)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.5510107278823853
    2. 'swap' → logprob: -1.0510107278823853
    3. 'current' → logprob: -3.1760106086730957
    4. 'have' → logprob: -4.301010608673096
    5. ' move' → logprob: -5.801010608673096
    6. 'for' → logprob: -6.301010608673096
    7. '#' → logprob: -6.801010608673096
    8. 'both' → logprob: -6.926010608673096
    9. 'curr' → logprob: -7.176010608673096
    10. 'continue' → logprob: -7.176010608673096

Token 997: ' in' (ID: 306)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.39107194542884827
    2. '```' → logprob: -2.6410720348358154
    3. '_positions' → logprob: -2.7660720348358154
    4. '=' → logprob: -3.1410720348358154
    5. '_up' → logprob: -3.1410720348358154
    6. ' up' → logprob: -3.6410720348358154
    7. '_' → logprob: -4.266071796417236
    8. '           ' → logprob: -4.516071796417236
    9. '_pos' → logprob: -4.641071796417236
    10. 'at' → logprob: -4.891071796417236

Token 998: ' each' (ID: 2454)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.04817144200205803
    2. 'the' → logprob: -3.6731715202331543
    3. '(current' → logprob: -4.798171520233154
    4. 'each' → logprob: -4.923171520233154
    5. ' current' → logprob: -5.923171520233154
    6. 'positions' → logprob: -6.548171520233154
    7. '
' → logprob: -7.423171520233154
    8. ' the' → logprob: -8.423171043395996
    9. '[current' → logprob: -8.548171043395996
    10. ')' → logprob: -8.798171043395996

Token 999: ' other's' (ID: 133247)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.4655292332172394
    2. ' other's' → logprob: -1.340529203414917
    3. 'others' → logprob: -3.715529203414917
    4. '_other' → logprob: -4.090529441833496
    5. 'position' → logprob: -4.590529441833496
    6. ''_' → logprob: -4.715529441833496
    7. ''s' → logprob: -4.965529441833496
    8. '_' → logprob: -5.215529441833496
    9. '`' → logprob: -5.215529441833496
    10. ''' → logprob: -5.465529441833496

Token 1000: ' previous' (ID: 5880)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.08671703934669495
    2. 'previous' → logprob: -3.211717128753662
    3. 'pos' → logprob: -3.461717128753662
    4. 'position' → logprob: -5.211717128753662
    5. 'current' → logprob: -5.961717128753662
    6. 'prev' → logprob: -6.836717128753662
    7. ' positions' → logprob: -6.961717128753662
    8. 'start' → logprob: -8.211716651916504
    9. 'initial' → logprob: -8.586716651916504
    10. ' previous' → logprob: -8.711716651916504

Token 1001: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.6005234122276306
    2. 'pos' → logprob: -0.8505234122276306
    3. 'position' → logprob: -4.350523471832275
    4. '_positions' → logprob: -4.975523471832275
    5. '_pos' → logprob: -6.225523471832275
    6. ' positions' → logprob: -6.350523471832275
    7. '```' → logprob: -7.725523471832275
    8. ')' → logprob: -9.475522994995117
    9. 's' → logprob: -9.600522994995117
    10. '_' → logprob: -9.725522994995117

Token 1002: ' simultaneously' (ID: 38328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6958413124084473
    2. ')
' → logprob: -0.9458413124084473
    3. '                   ' → logprob: -2.1958413124084473
    4. '):
' → logprob: -7.195841312408447
    5. '')' → logprob: -8.320840835571289
    6. '')
' → logprob: -8.820840835571289
    7. '               ' → logprob: -9.070840835571289
    8. '```' → logprob: -9.320840835571289
    9. '`)
' → logprob: -9.820840835571289
    10. '")' → logprob: -10.445840835571289

Token 1003: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2560414671897888
    2. ')' → logprob: -1.8810415267944336
    3. '                   ' → logprob: -2.6310415267944336
    4. '):
' → logprob: -7.256041526794434
    5. '')
' → logprob: -8.881041526794434
    6. '               ' → logprob: -9.381041526794434
    7. '`)
' → logprob: -9.381041526794434
    8. ')
' → logprob: -9.381041526794434
    9. ')

' → logprob: -9.756041526794434
    10. '```' → logprob: -9.756041526794434

Token 1004: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00405370257794857
    2. '               ' → logprob: -6.004053592681885
    3. '
' → logprob: -7.504053592681885
    4. '                    
' → logprob: -7.504053592681885
    5. '    
' → logprob: -9.254054069519043
    6. '   ' → logprob: -9.504054069519043
    7. '       ' → logprob: -9.754054069519043
    8. '           ' → logprob: -9.879054069519043
    9. '```' → logprob: -10.254054069519043
    10. '                       ' → logprob: -10.379054069519043

Token 1005: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00822234433144331
    2. 'if' → logprob: -5.758222579956055
    3. '               ' → logprob: -6.508222579956055
    4. ' if' → logprob: -6.883222579956055
    5. '
' → logprob: -7.508222579956055
    6. '   ' → logprob: -7.508222579956055
    7. '                       ' → logprob: -7.883222579956055
    8. '       ' → logprob: -8.258222579956055
    9. 'for' → logprob: -8.258222579956055
    10. '                    
' → logprob: -8.758222579956055

Token 1006: ' current' (ID: 2208)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13466691970825195
    2. 'if' → logprob: -2.509666919708252
    3. 'positions' → logprob: -4.009666919708252
    4. 'prev' → logprob: -5.009666919708252
    5. ' if' → logprob: -5.134666919708252
    6. 'pos' → logprob: -5.634666919708252
    7. '   ' → logprob: -5.759666919708252
    8. 'for' → logprob: -6.134666919708252
    9. 'visited' → logprob: -6.634666919708252
    10. 'seen' → logprob: -7.134666919708252

Token 1007: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.0012164250947535038
    2. 'positions' → logprob: -6.751216411590576
    3. '_pos' → logprob: -11.626216888427734
    4. '_' → logprob: -11.876216888427734
    5. '```' → logprob: -11.876216888427734
    6. '_set' → logprob: -12.126216888427734
    7. 'Positions' → logprob: -12.126216888427734
    8. '_states' → logprob: -12.626216888427734
    9. ')' → logprob: -12.751216888427734
    10. 'def' → logprob: -13.251216888427734

Token 1008: ' is' (ID: 382)
  Prédit: '_set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.1565326303243637
    2. '=set' → logprob: -2.5315325260162354
    3. ' =' → logprob: -3.1565325260162354
    4. '=' → logprob: -4.6565327644348145
    5. ')' → logprob: -5.0315327644348145
    6. 'set' → logprob: -5.4065327644348145
    7. '_positions' → logprob: -8.031532287597656
    8. ')set' → logprob: -8.531532287597656
    9. '           ' → logprob: -8.656532287597656
    10. '_sets' → logprob: -8.656532287597656

Token 1009: ' tuple' (ID: 31311)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.7721405625343323
    2. 'a' → logprob: -1.2721405029296875
    3. 'list' → logprob: -2.1471405029296875
    4. 'tuple' → logprob: -2.5221405029296875
    5. ' current' → logprob: -4.2721405029296875
    6. 'the' → logprob: -4.5221405029296875
    7. ' a' → logprob: -4.5221405029296875
    8. '[]' → logprob: -4.8971405029296875
    9. '[current' → logprob: -5.2721405029296875
    10. 'set' → logprob: -5.7721405029296875

Token 1010: ' of' (ID: 328)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.2988948822021484
    2. ' =' → logprob: -2.0488948822021484
    3. ':
' → logprob: -2.1738948822021484
    4. '                   ' → logprob: -2.2988948822021484
    5. ',' → logprob: -2.5488948822021484
    6. '               ' → logprob: -2.6738948822021484
    7. ':' → logprob: -2.7988948822021484
    8. '           ' → logprob: -2.9238948822021484
    9. ')' → logprob: -3.0488948822021484
    10. '):' → logprob: -3.1738948822021484

Token 1011: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.2743978500366211
    2. 'current' → logprob: -1.649397850036621
    3. '(current' → logprob: -4.149397850036621
    4. 'new' → logprob: -4.524397850036621
    5. 'next' → logprob: -5.774397850036621
    6. 'coordinates' → logprob: -5.774397850036621
    7. 'tuple' → logprob: -6.149397850036621
    8. 'len' → logprob: -6.274397850036621
    9. '(len' → logprob: -6.399397850036621
    10. '(next' → logprob: -6.524397850036621

Token 1012: ' after' (ID: 1934)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.026849966496229172
    2. '):
' → logprob: -4.901849746704102
    3. ')' → logprob: -5.276849746704102
    4. '):' → logprob: -5.526849746704102
    5. '               ' → logprob: -5.776849746704102
    6. ':' → logprob: -6.026849746704102
    7. ',' → logprob: -6.776849746704102
    8. ' =' → logprob: -7.151849746704102
    9. ':
' → logprob: -7.526849746704102
    10. '           ' → logprob: -7.651849746704102

Token 1013: ' the' (ID: 290)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.5792220234870911
    2. 'move' → logprob: -1.3292219638824463
    3. 'all' → logprob: -2.4542219638824463
    4. 'the' → logprob: -3.9542219638824463
    5. ')' → logprob: -4.204222202301025
    6. 'back' → logprob: -4.454222202301025
    7. 'positions' → logprob: -4.579222202301025
    8. 'current' → logprob: -4.829222202301025
    9. 'idx' → logprob: -5.079222202301025
    10. 'moving' → logprob: -5.954222202301025

Token 1014: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.04101624712347984
    2. ' move' → logprob: -3.9160163402557373
    3. 'moves' → logprob: -4.791016101837158
    4. 'current' → logprob: -5.416016101837158
    5. 'idx' → logprob: -5.791016101837158
    6. 'def' → logprob: -6.791016101837158
    7. ',' → logprob: -7.041016101837158
    8. '_move' → logprob: -7.916016101837158
    9. ')' → logprob: -8.166016578674316
    10. 'back' → logprob: -8.291016578674316

Token 1015: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.019134556874632835
    2. '
' → logprob: -4.769134521484375
    3. '               ' → logprob: -5.269134521484375
    4. ':' → logprob: -7.144134521484375
    5. '   ' → logprob: -7.144134521484375
    6. ':
' → logprob: -7.144134521484375
    7. '                    
' → logprob: -7.144134521484375
    8. '):
' → logprob: -7.519134521484375
    9. ',' → logprob: -7.769134521484375
    10. ')' → logprob: -7.769134521484375

Token 1016: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04346657916903496
    2. '               ' → logprob: -3.543466567993164
    3. '                       ' → logprob: -5.168466567993164
    4. '                    
' → logprob: -6.293466567993164
    5. '   ' → logprob: -6.668466567993164
    6. '
' → logprob: -6.918466567993164
    7. '       ' → logprob: -7.293466567993164
    8. '    
' → logprob: -7.293466567993164
    9. ')' → logprob: -7.668466567993164
    10. '           ' → logprob: -7.918466567993164

Token 1017: ' positions' (ID: 15897)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13569556176662445
    2. 'if' → logprob: -2.260695457458496
    3. ' if' → logprob: -5.135695457458496
    4. '
' → logprob: -5.135695457458496
    5. '               ' → logprob: -5.385695457458496
    6. 'prev' → logprob: -6.260695457458496
    7. 'for' → logprob: -6.760695457458496
    8. 'positions' (adapté à ' positions') → logprob: -7.135695457458496
    9. '                    
' → logprob: -7.385695457458496
    10. '   ' → logprob: -7.885695457458496

Token 1018: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.5123217105865479
    2. ' =' → logprob: -1.1373217105865479
    3. '=' → logprob: -3.512321710586548
    4. '=set' → logprob: -3.637321710586548
    5. '_seen' → logprob: -4.387321472167969
    6. ')' → logprob: -4.887321472167969
    7. 'set' → logprob: -7.137321472167969
    8. ',' → logprob: -7.262321472167969
    9. '           ' → logprob: -7.262321472167969
    10. '                   ' → logprob: -8.137321472167969

Token 1019: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.225832998752594
    2. '=' → logprob: -1.6008329391479492
    3. '=set' → logprob: -8.10083293914795
    4. ')' → logprob: -9.60083293914795
    5. '.add' → logprob: -11.35083293914795
    6. '=len' → logprob: -11.72583293914795
    7. '={' → logprob: -11.85083293914795
    8. '<|end|>' → logprob: -12.35083293914795
    9. ' ={' → logprob: -13.22583293914795
    10. '```' → logprob: -13.47583293914795

Token 1020: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -3.130576806142926e-05
    2. '{' → logprob: -10.500031471252441
    3. ' set' → logprob: -12.625031471252441
    4. '=set' → logprob: -15.000031471252441
    5. '(set' → logprob: -17.250030517578125
    6. ')set' → logprob: -18.000030517578125
    7. 'len' → logprob: -18.250030517578125
    8. '	set' → logprob: -18.500030517578125
    9. '```' → logprob: -19.125030517578125
    10. '{
' → logprob: -19.875030517578125

Token 1021: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.10427037626504898
    2. 'current' → logprob: -2.9792704582214355
    3. '()' → logprob: -3.1042704582214355
    4. '()
' → logprob: -5.8542704582214355
    5. '(' → logprob: -8.229269981384277
    6. '(
' → logprob: -9.729269981384277
    7. '())' → logprob: -10.354269981384277
    8. '[current' → logprob: -10.479269981384277
    9. '```' → logprob: -10.604269981384277
    10. '()`' → logprob: -11.854269981384277

Token 1022: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.09782082587480545
    2. 'current' → logprob: -3.09782075881958
    3. '(current' → logprob: -3.22282075881958
    4. '[current' → logprob: -5.59782075881958
    5. 'positions' → logprob: -5.84782075881958
    6. ')' → logprob: -7.22282075881958
    7. '(
' → logprob: -8.597821235656738
    8. '_states' → logprob: -9.347821235656738
    9. '())' → logprob: -9.472821235656738
    10. '_current' → logprob: -9.472821235656738

Token 1023: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06699120253324509
    2. '                   ' → logprob: -3.191991090774536
    3. ')
' → logprob: -3.816991090774536
    4. '               ' → logprob: -7.191991329193115
    5. ')==' → logprob: -7.816991329193115
    6. '):
' → logprob: -8.691990852355957
    7. '           ' → logprob: -8.941990852355957
    8. '                       ' → logprob: -9.691990852355957
    9. '```' → logprob: -10.441990852355957
    10. '                           ' → logprob: -11.316990852355957

Token 1024: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.17312972247600555
    2. '               ' → logprob: -1.923129677772522
    3. '           ' → logprob: -5.173129558563232
    4. '                       ' → logprob: -6.673129558563232
    5. '       ' → logprob: -7.298129558563232
    6. '                ' → logprob: -7.548129558563232
    7. '		           ' → logprob: -7.548129558563232
    8. '```' → logprob: -7.548129558563232
    9. '<|end|>' → logprob: -7.673129558563232
    10. '                    ' → logprob: -7.923129558563232

Token 1025: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.18713894486427307
    2. 'if' (adapté à ' if') → logprob: -2.1871390342712402
    3. '               ' → logprob: -3.5621390342712402
    4. '           ' → logprob: -4.06213903427124
    5. ' if' → logprob: -5.93713903427124
    6. '                       ' → logprob: -6.06213903427124
    7. '                           ' → logprob: -6.68713903427124
    8. '       ' → logprob: -6.93713903427124
    9. '	if' → logprob: -7.18713903427124
    10. '```' → logprob: -7.31213903427124

Token 1026: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.001978714717552066
    2. ' len' → logprob: -6.251978874206543
    3. 'positions' → logprob: -10.001978874206543
    4. '(len' → logprob: -12.501978874206543
    5. '                   ' → logprob: -14.876978874206543
    6. '   ' → logprob: -15.001978874206543
    7. '                           ' → logprob: -15.876978874206543
    8. ' positions' → logprob: -16.251977920532227
    9. '	len' → logprob: -16.376977920532227
    10. '
' → logprob: -16.501977920532227

Token 1027: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10105113685131073
    2. '(current' → logprob: -2.351051092147827
    3. 'positions' → logprob: -7.726051330566406
    4. '(
' → logprob: -7.976051330566406
    5. 'current' → logprob: -9.976051330566406
    6. '(pos' → logprob: -12.101051330566406
    7. ' (' → logprob: -12.851051330566406
    8. '(position' → logprob: -13.226051330566406
    9. '(

' → logprob: -13.976051330566406
    10. '(previous' → logprob: -14.476051330566406

Token 1028: 'positions' (ID: 32297)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.13472828269004822
    2. 'positions' → logprob: -2.134728193283081
    3. '(current' → logprob: -4.88472843170166
    4. '(' → logprob: -8.50972843170166
    5. ' current' → logprob: -12.50972843170166
    6. '[current' → logprob: -14.38472843170166
    7. '(
' → logprob: -14.38472843170166
    8. 'position' → logprob: -14.50972843170166
    9. ' positions' → logprob: -14.63472843170166
    10. '	current' → logprob: -15.13472843170166

Token 1029: '_set' (ID: 5451)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.8023149967193604
    2. 'positions' → logprob: -1.0523149967193604
    3. ')' → logprob: -2.5523149967193604
    4. '_set' → logprob: -2.9273149967193604
    5. 'current' → logprob: -3.3023149967193604
    6. '_current' → logprob: -4.177314758300781
    7. '<' → logprob: -4.927314758300781
    8. '[current' → logprob: -6.177314758300781
    9. '```' → logprob: -6.177314758300781
    10. '(current' → logprob: -6.177314758300781

Token 1030: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01461225189268589
    2. '==' → logprob: -5.389612197875977
    3. ')==' → logprob: -5.514612197875977
    4. ')!=' → logprob: -6.389612197875977
    5. '!=' → logprob: -7.014612197875977
    6. ')<' → logprob: -7.139612197875977
    7. '<' → logprob: -7.264612197875977
    8. ' ==' → logprob: -7.264612197875977
    9. ' !=' → logprob: -7.389612197875977
    10. '<|end|>' → logprob: -8.514612197875977

Token 1031: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4911373257637024
    2. '==' → logprob: -1.8661372661590576
    3. '!=' → logprob: -2.4911372661590576
    4. ' !=' → logprob: -2.7411372661590576
    5. ' ==' → logprob: -3.4911372661590576
    6. ' <' → logprob: -3.6161372661590576
    7. ')' → logprob: -3.7411372661590576
    8. '<|end|>' → logprob: -6.991137504577637
    9. '```' → logprob: -7.491137504577637
    10. '<len' → logprob: -7.616137504577637

Token 1032: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006908960174769163
    2. 'len' → logprob: -5.006908893585205
    3. ' n' → logprob: -8.631909370422363
    4. ' len' → logprob: -12.506909370422363
    5. '   ' → logprob: -12.631909370422363
    6. '1' → logprob: -13.006909370422363
    7. '
' → logprob: -13.506909370422363
    8. '(n' → logprob: -14.131909370422363
    9. 'next' → logprob: -14.131909370422363
    10. '           ' → logprob: -14.256909370422363

Token 1033: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35954520106315613
    2. ':
' → logprob: -1.3595452308654785
    3. '                       ' → logprob: -3.2345452308654785
    4. '                   ' → logprob: -6.1095452308654785
    5. ' or' → logprob: -6.7345452308654785
    6. ':return' → logprob: -7.1095452308654785
    7. '):' → logprob: -7.6095452308654785
    8. '               ' → logprob: -8.10954475402832
    9. '):
' → logprob: -8.23454475402832
    10. '                           ' → logprob: -8.35954475402832

Token 1034: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.000986008089967072
    2. '                   ' → logprob: -7.500986099243164
    3. 'return' → logprob: -8.125986099243164
    4. '                           ' → logprob: -10.125986099243164
    5. '               ' → logprob: -10.625986099243164
    6. '                               ' → logprob: -10.875986099243164
    7. '       ' → logprob: -11.250986099243164
    8. '           ' → logprob: -11.625986099243164
    9. ' return' → logprob: -11.875986099243164
    10. '```' → logprob: -11.875986099243164

Token 1035: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7384824156761169
    2. 'return' → logprob: -0.7384824156761169
    3. '                   ' → logprob: -3.2384824752807617
    4. '                           ' → logprob: -5.613482475280762
    5. '           ' → logprob: -7.363482475280762
    6. '       ' → logprob: -7.863482475280762
    7. '               ' → logprob: -8.488482475280762
    8. ' return' → logprob: -8.613482475280762
    9. '   ' → logprob: -10.863482475280762
    10. '                               ' → logprob: -11.363482475280762

Token 1036: ' some' (ID: 1236)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.031104842200875282
    2. '                   ' → logprob: -3.531104803085327
    3. '                       ' → logprob: -6.781105041503906
    4. '               ' → logprob: -9.406105041503906
    5. ' return' → logprob: -9.656105041503906
    6. '                           ' → logprob: -10.281105041503906
    7. '           ' → logprob: -11.031105041503906
    8. '                               ' → logprob: -11.281105041503906
    9. '
' → logprob: -12.531105041503906
    10. '       ' → logprob: -13.281105041503906

Token 1037: ' ghosts' (ID: 100279)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.30548426508903503
    2. ' ghost' → logprob: -1.6804842948913574
    3. 'positions' → logprob: -3.5554842948913574
    4. ' ghosts' → logprob: -4.055484294891357
    5. 'current' → logprob: -4.180484294891357
    6. ' positions' → logprob: -5.555484294891357
    7. ' current' → logprob: -5.805484294891357
    8. ' of' → logprob: -6.430484294891357
    9. 'duplicate' → logprob: -6.805484294891357
    10. '                   ' → logprob: -6.930484294891357

Token 1038: ' occupy' (ID: 89046)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.4668632745742798
    2. '                       ' → logprob: -1.5918632745742798
    3. 'm' → logprob: -1.9668632745742798
    4. 'are' → logprob: -1.9668632745742798
    5. ' are' → logprob: -2.7168631553649902
    6. 'have' → logprob: -2.7168631553649902
    7. 'positions' → logprob: -3.7168631553649902
    8. ' have' → logprob: -3.7168631553649902
    9. ' moved' → logprob: -3.9668631553649902
    10. 'return' → logprob: -4.46686315536499

Token 1039: ' same' (ID: 2684)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.0026037218049168587
    2. 'same' → logprob: -6.502603530883789
    3. ' the' → logprob: -7.002603530883789
    4. '                   ' → logprob: -9.252603530883789
    5. '```' → logprob: -10.377603530883789
    6. 'current' → logprob: -11.002603530883789
    7. '                       ' → logprob: -11.127603530883789
    8. '           ' → logprob: -11.752603530883789
    9. '                           ' → logprob: -12.002603530883789
    10. '               ' → logprob: -12.502603530883789

Token 1040: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.9142849445343018
    2. ' cell' → logprob: -1.2892849445343018
    3. 'position' → logprob: -1.5392849445343018
    4. ' position' → logprob: -2.6642849445343018
    5. '                   ' → logprob: -3.7892849445343018
    6. 'current' → logprob: -6.039284706115723
    7. ')' → logprob: -6.164284706115723
    8. 'positions' → logprob: -6.289284706115723
    9. 'space' → logprob: -6.414284706115723
    10. ' current' → logprob: -6.789284706115723

Token 1041: ' ->' (ID: 2747)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.007309269160032272
    2. '                   ' → logprob: -5.132309436798096
    3. ',' → logprob: -7.257309436798096
    4. '
' → logprob: -8.257308959960938
    5. 'return' → logprob: -8.632308959960938
    6. '                           ' → logprob: -9.257308959960938
    7. ' return' → logprob: -10.382308959960938
    8. '               ' → logprob: -11.007308959960938
    9. '```' → logprob: -11.382308959960938
    10. ':
' → logprob: -11.507308959960938

Token 1042: ' invalid' (ID: 15796)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5722339749336243
    2. 'return' → logprob: -0.9472339749336243
    3. ' return' → logprob: -3.4472339153289795
    4. ' continue' → logprob: -4.947234153747559
    5. '                           ' → logprob: -5.072234153747559
    6. '                       ' → logprob: -6.197234153747559
    7. '                               ' → logprob: -7.822234153747559
    8. '                   ' → logprob: -8.947234153747559
    9. '```' → logprob: -9.447234153747559
    10. '   ' → logprob: -10.822234153747559

Token 1043: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.024337628856301308
    2. '                   ' → logprob: -3.7743375301361084
    3. 'return' → logprob: -7.0243377685546875
    4. '               ' → logprob: -9.649337768554688
    5. ' return' → logprob: -9.899337768554688
    6. '                           ' → logprob: -10.274337768554688
    7. '
' → logprob: -11.149337768554688
    8. '           ' → logprob: -11.149337768554688
    9. '```' → logprob: -11.774337768554688
    10. '       ' → logprob: -12.524337768554688

Token 1044: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.043255969882011414
    2. '                   ' → logprob: -3.1682560443878174
    3. '                           ' → logprob: -9.168255805969238
    4. '               ' → logprob: -9.793255805969238
    5. 'return' → logprob: -10.793255805969238
    6. '
' → logprob: -11.293255805969238
    7. '```' → logprob: -11.293255805969238
    8. '           ' → logprob: -11.418255805969238
    9. '                               ' → logprob: -12.043255805969238
    10. '					' → logprob: -12.418255805969238

Token 1045: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4245432913303375
    2. '                       ' → logprob: -1.1745432615280151
    3. '                   ' → logprob: -3.4245433807373047
    4. '                           ' → logprob: -6.299543380737305
    5. ' return' → logprob: -6.674543380737305
    6. '               ' → logprob: -7.674543380737305
    7. '           ' → logprob: -8.049543380737305
    8. '                               ' → logprob: -8.174543380737305
    9. '       ' → logprob: -9.674543380737305
    10. '```' → logprob: -9.674543380737305

Token 1046: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4967619478702545
    2. '
' → logprob: -1.3717619180679321
    3. '               ' → logprob: -2.1217620372772217
    4. '                    
' → logprob: -5.496761798858643
    5. '           ' → logprob: -5.621761798858643
    6. '                        
' → logprob: -6.121761798858643
    7. '                
' → logprob: -6.621761798858643
    8. '				' → logprob: -6.746761798858643
    9. '```' → logprob: -7.121761798858643
    10. '       ' → logprob: -7.246761798858643

Token 1047: '                   ' (ID: 699)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6906698346138
    2. '               ' → logprob: -0.8156698346138
    3. '                   ' → logprob: -3.0656697750091553
    4. '                
' → logprob: -5.190670013427734
    5. '                    
' → logprob: -6.065670013427734
    6. '    
' → logprob: -7.190670013427734
    7. '                        
' → logprob: -8.440670013427734
    8. '```' → logprob: -8.690670013427734
    9. '           ' → logprob: -8.815670013427734
    10. '  
' → logprob: -8.815670013427734

Token 1048: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3384990692138672
    2. '                   ' → logprob: -1.5884990692138672
    3. '
' → logprob: -2.588499069213867
    4. '                    
' → logprob: -5.963499069213867
    5. '                
' → logprob: -6.338499069213867
    6. '                ' → logprob: -7.338499069213867
    7. '           ' → logprob: -7.588499069213867
    8. '  
' → logprob: -8.463499069213867
    9. '    
' → logprob: -8.463499069213867
    10. '			' → logprob: -8.463499069213867

Token 1049: ' Check' (ID: 6208)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.040978193283081
    2. 'for' → logprob: -1.040978193283081
    3. 'prev' → logprob: -1.415978193283081
    4. '#' → logprob: -3.540978193283081
    5. 'previous' → logprob: -4.41597843170166
    6. '   ' → logprob: -5.79097843170166
    7. 'old' → logprob: -6.04097843170166
    8. '           ' → logprob: -6.66597843170166
    9. '               ' → logprob: -7.04097843170166
    10. '                    
' → logprob: -7.54097843170166

Token 1050: ' no' (ID: 860)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3169785737991333
    2. ' for' → logprob: -1.5669785737991333
    3. '                   ' → logprob: -3.4419784545898438
    4. '           ' → logprob: -4.441978454589844
    5. '               ' → logprob: -4.691978454589844
    6. '       ' → logprob: -6.316978454589844
    7. 'idx' → logprob: -6.316978454589844
    8. '   ' → logprob: -6.941978454589844
    9. 'prev' → logprob: -7.066978454589844
    10. 'pairs' → logprob: -7.191978454589844

Token 1051: ' swaps' (ID: 150699)
  Prédit: ' pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.30541014671325684
    2. 'pair' → logprob: -2.305410146713257
    3. 't' → logprob: -2.555410146713257
    4. 'swap' → logprob: -4.180410385131836
    5. 'two' → logprob: -4.555410385131836
    6. 'idx' → logprob: -4.555410385131836
    7. ' two' → logprob: -4.680410385131836
    8. '           ' → logprob: -4.930410385131836
    9. 'w' → logprob: -5.055410385131836
    10. ' swap' → logprob: -5.555410385131836

Token 1052: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0016642312984913588
    2. 'for' → logprob: -7.001664161682129
    3. ' for' → logprob: -7.876664161682129
    4. '
' → logprob: -8.376664161682129
    5. '               ' → logprob: -9.751664161682129
    6. '                    
' → logprob: -10.001664161682129
    7. '           ' → logprob: -11.126664161682129
    8. ',' → logprob: -11.876664161682129
    9. '```' → logprob: -12.126664161682129
    10. '                       ' → logprob: -12.251664161682129

Token 1053: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010029466822743416
    2. '               ' → logprob: -4.635029315948486
    3. '           ' → logprob: -8.635029792785645
    4. '       ' → logprob: -10.760029792785645
    5. '                       ' → logprob: -11.010029792785645
    6. 'for' → logprob: -11.135029792785645
    7. '   ' → logprob: -11.385029792785645
    8. '```' → logprob: -11.635029792785645
    9. ' for' → logprob: -12.135029792785645
    10. '                    ' → logprob: -12.510029792785645

Token 1054: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2899574637413025
    2. 'for' → logprob: -1.4149575233459473
    3. ' for' → logprob: -4.789957523345947
    4. '   ' → logprob: -8.539957046508789
    5. '               ' → logprob: -9.039957046508789
    6. 'prev' → logprob: -10.289957046508789
    7. '       ' → logprob: -10.539957046508789
    8. '           ' → logprob: -10.539957046508789
    9. '```' → logprob: -10.789957046508789
    10. '                       ' → logprob: -11.164957046508789

Token 1055: ' For' (ID: 2214)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3190942406654358
    2. 'for' → logprob: -1.319094181060791
    3. ' for' → logprob: -5.194094181060791
    4. 'prev' → logprob: -9.06909465789795
    5. '               ' → logprob: -9.69409465789795
    6. '   ' → logprob: -9.94409465789795
    7. '           ' → logprob: -11.19409465789795
    8. '       ' → logprob: -11.94409465789795
    9. 'previous' → logprob: -12.06909465789795
    10. '                       ' → logprob: -12.19409465789795

Token 1056: ' every' (ID: 1753)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1654263138771057
    2. 'a' → logprob: -2.790426254272461
    3. ' i' → logprob: -3.290426254272461
    4. 'x' → logprob: -3.540426254272461
    5. 'p' → logprob: -5.290426254272461
    6. 'k' → logprob: -5.540426254272461
    7. 'prev' → logprob: -5.915426254272461
    8. ' x' → logprob: -6.040426254272461
    9. 'all' → logprob: -6.040426254272461
    10. 'g' → logprob: -6.415426254272461

Token 1057: ' pair' (ID: 10610)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01752474159002304
    2. 'a' → logprob: -5.267524719238281
    3. ' i' → logprob: -5.267524719238281
    4. 'pair' → logprob: -5.642524719238281
    5. ' pair' → logprob: -6.517524719238281
    6. 'p' → logprob: -7.017524719238281
    7. 'k' → logprob: -7.767524719238281
    8. '```' → logprob: -8.892524719238281
    9. ' (' → logprob: -9.017524719238281
    10. '(i' → logprob: -9.642524719238281

Token 1058: ' of' (ID: 328)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8168554902076721
    2. ' of' → logprob: -1.4418554306030273
    3. '(i' → logprob: -2.1918554306030273
    4. ' i' → logprob: -2.5668554306030273
    5. ' (' → logprob: -2.9418554306030273
    6. '                   ' → logprob: -3.4418554306030273
    7. 'of' → logprob: -4.066855430603027
    8. ',' → logprob: -4.941855430603027
    9. '(' → logprob: -5.441855430603027
    10. 'idx' → logprob: -5.441855430603027

Token 1059: ' ghosts' (ID: 100279)
  Prédit: 'ghost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ghost' → logprob: -0.31627964973449707
    2. 'i' → logprob: -1.816279649734497
    3. 'idx' → logprob: -3.066279649734497
    4. 'indices' → logprob: -3.691279649734497
    5. ' ghosts' → logprob: -3.941279649734497
    6. 'range' → logprob: -4.441279411315918
    7. 'distinct' → logprob: -6.441279411315918
    8. '(i' → logprob: -7.316279411315918
    9. '0' → logprob: -7.566279411315918
    10. ' range' → logprob: -7.566279411315918

Token 1060: ' i' (ID: 575)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.26435843110084534
    2. ',' → logprob: -2.7643585205078125
    3. 'i' → logprob: -2.7643585205078125
    4. '(i' → logprob: -2.7643585205078125
    5. 'for' → logprob: -4.3893585205078125
    6. ' (' → logprob: -4.7643585205078125
    7. '   ' → logprob: -5.7643585205078125
    8. ' for' → logprob: -5.8893585205078125
    9. '               ' → logprob: -6.1393585205078125
    10. '(' → logprob: -6.1393585205078125

Token 1061: ' <' (ID: 464)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03854367136955261
    2. '                   ' → logprob: -3.788543701171875
    3. ' ,' → logprob: -5.413543701171875
    4. 'and' → logprob: -6.163543701171875
    5. 'for' → logprob: -6.163543701171875
    6. ' and' → logprob: -6.413543701171875
    7. ' <' → logprob: -6.788543701171875
    8. '<' → logprob: -7.288543701171875
    9. ',
' → logprob: -7.288543701171875
    10. '           ' → logprob: -7.913543701171875

Token 1062: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00020175233657937497
    2. 'idx' → logprob: -9.500202178955078
    3. ' j' → logprob: -9.500202178955078
    4. 'n' → logprob: -10.125202178955078
    5. 'i' → logprob: -11.625202178955078
    6. '_j' → logprob: -14.250202178955078
    7. 'len' → logprob: -15.125202178955078
    8. '```' → logprob: -15.125202178955078
    9. '=' → logprob: -15.375202178955078
    10. '>' → logprob: -15.500202178955078

Token 1063: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09911470860242844
    2. '                       ' → logprob: -2.4741146564483643
    3. ',' → logprob: -4.849114894866943
    4. ':' → logprob: -6.724114894866943
    5. '               ' → logprob: -7.974114894866943
    6. '```' → logprob: -8.849114418029785
    7. '       ' → logprob: -9.224114418029785
    8. '           ' → logprob: -9.349114418029785
    9. 'for' → logprob: -9.599114418029785
    10. '                           ' → logprob: -9.724114418029785

Token 1064: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0023466343991458416
    2. '                       ' → logprob: -6.502346515655518
    3. '               ' → logprob: -7.377346515655518
    4. '           ' → logprob: -9.752346992492676
    5. '                    
' → logprob: -10.127346992492676
    6. '                    ' → logprob: -10.252346992492676
    7. '       ' → logprob: -11.127346992492676
    8. '<|end|>' → logprob: -11.627346992492676
    9. '                        
' → logprob: -12.127346992492676
    10. '	               ' → logprob: -12.127346992492676

Token 1065: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01244277972728014
    2. '                       ' → logprob: -4.762442588806152
    3. 'for' → logprob: -6.012442588806152
    4. ' for' → logprob: -7.137442588806152
    5. '               ' → logprob: -8.012442588806152
    6. '           ' → logprob: -9.387442588806152
    7. '       ' → logprob: -9.762442588806152
    8. '                           ' → logprob: -10.512442588806152
    9. '   ' → logprob: -10.637442588806152
    10. '                    ' → logprob: -10.637442588806152

Token 1066: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06222233176231384
    2. '                       ' → logprob: -3.1872222423553467
    3. ' for' → logprob: -4.437222480773926
    4. 'for' → logprob: -5.062222480773926
    5. '               ' → logprob: -8.187222480773926
    6. '                           ' → logprob: -9.187222480773926
    7. '           ' → logprob: -9.187222480773926
    8. '                    ' → logprob: -9.562222480773926
    9. '```' → logprob: -9.687222480773926
    10. '       ' → logprob: -10.062222480773926

Token 1067: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.07167518883943558
    2. ' current' → logprob: -2.9466753005981445
    3. 'state' → logprob: -4.5716753005981445
    4. '(current' → logprob: -5.1966753005981445
    5. ' state' → logprob: -7.6966753005981445
    6. '(state' → logprob: -8.821675300598145
    7. '                   ' → logprob: -9.571675300598145
    8. ' (' → logprob: -9.696675300598145
    9. '   ' → logprob: -11.696675300598145
    10. '                       ' → logprob: -11.821675300598145

Token 1068: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.0011813003802672029
    2. 'positions' → logprob: -6.876181125640869
    3. '```' → logprob: -9.001181602478027
    4. '                   ' → logprob: -12.251181602478027
    5. '`' → logprob: -12.751181602478027
    6. '[i' → logprob: -12.751181602478027
    7. '_' → logprob: -13.126181602478027
    8. '``' → logprob: -13.251181602478027
    9. '
' → logprob: -13.751181602478027
    10. '[_' → logprob: -13.876181602478027

Token 1069: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002986392646562308
    2. '[idx' → logprob: -8.500298500061035
    3. '[' → logprob: -10.000298500061035
    4. 'i' → logprob: -10.375298500061035
    5. '```' → logprob: -11.375298500061035
    6. '[j' → logprob: -12.875298500061035
    7. ' [' → logprob: -13.875298500061035
    8. '[ii' → logprob: -14.250298500061035
    9. '\[' → logprob: -14.250298500061035
    10. '[
' → logprob: -14.375298500061035

Token 1070: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.026134006679058075
    2. ']==' → logprob: -3.7761340141296387
    3. '[j' → logprob: -6.776134014129639
    4. '```' → logprob: -6.901134014129639
    5. '[' → logprob: -8.90113353729248
    6. ']
' → logprob: -9.27613353729248
    7. '``' → logprob: -9.27613353729248
    8. '==' → logprob: -9.40113353729248
    9. '[i' → logprob: -9.52613353729248
    10. '],' → logprob: -9.65113353729248

Token 1071: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20948192477226257
    2. ' ==' → logprob: -1.709481954574585
    3. ']==' → logprob: -5.334481716156006
    4. '```' → logprob: -5.959481716156006
    5. ']' → logprob: -8.209482192993164
    6. ')==' → logprob: -8.709482192993164
    7. '==
' → logprob: -9.459482192993164
    8. '[' → logprob: -9.834482192993164
    9. ')' → logprob: -10.959482192993164
    10. ',' → logprob: -11.084482192993164

Token 1072: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.00032628714689053595
    2. ' state' → logprob: -8.125326156616211
    3. 'start' → logprob: -10.875326156616211
    4. '   ' → logprob: -11.750326156616211
    5. '
' → logprob: -13.875326156616211
    6. 'current' → logprob: -14.500326156616211
    7. '```' → logprob: -14.625326156616211
    8. 'previous' → logprob: -15.375326156616211
    9. '       ' → logprob: -15.500326156616211
    10. '           ' → logprob: -15.750326156616211

Token 1073: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.6405310816480778e-05
    2. '[' → logprob: -11.250016212463379
    3. '[
' → logprob: -13.625016212463379
    4. '```' → logprob: -13.625016212463379
    5. ' [' → logprob: -15.375016212463379
    6. 'j' → logprob: -15.750016212463379
    7. '
' → logprob: -16.000017166137695
    8. 'and' → logprob: -16.750017166137695
    9. '``' → logprob: -16.875017166137695
    10. '[js' → logprob: -16.875017166137695

Token 1074: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.032415080815553665
    2. 'and' → logprob: -4.03241491317749
    3. ' and' → logprob: -4.28241491317749
    4. ')' → logprob: -9.157415390014648
    5. '                   ' → logprob: -9.282415390014648
    6. '']' → logprob: -10.032415390014648
    7. '               ' → logprob: -10.282415390014648
    8. ']
' → logprob: -11.032415390014648
    9. ' ]' → logprob: -11.407415390014648
    10. '           ' → logprob: -11.782415390014648

Token 1075: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.47415849566459656
    2. ' and' → logprob: -0.974158525466919
    3. '                   ' → logprob: -10.09915828704834
    4. '                       ' → logprob: -10.47415828704834
    5. ' or' → logprob: -12.47415828704834
    6. '```' → logprob: -12.84915828704834
    7. '               ' → logprob: -13.72415828704834
    8. 'or' → logprob: -13.84915828704834
    9. '<|end|>' → logprob: -14.72415828704834
    10. '                    ' → logprob: -14.97415828704834

Token 1076: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.47472071647644043
    2. ' current' → logprob: -0.9747207164764404
    3. '                   ' → logprob: -7.4747209548950195
    4. 'state' → logprob: -10.22472095489502
    5. '               ' → logprob: -11.34972095489502
    6. '                       ' → logprob: -11.47472095489502
    7. ' state' → logprob: -11.97472095489502
    8. '   ' → logprob: -12.97472095489502
    9. '           ' → logprob: -12.97472095489502
    10. '	current' → logprob: -13.47472095489502

Token 1077: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.0006000961875542998
    2. 'positions' → logprob: -7.5005998611450195
    3. '```' → logprob: -10.62559986114502
    4. 'Positions' → logprob: -12.25059986114502
    5. 'i' → logprob: -12.50059986114502
    6. '_indices' → logprob: -12.87559986114502
    7. '
' → logprob: -13.50059986114502
    8. '`' → logprob: -13.50059986114502
    9. '_' → logprob: -13.87559986114502
    10. '[i' → logprob: -13.87559986114502

Token 1078: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.004885046277195215
    2. '[' → logprob: -5.379885196685791
    3. '[i' → logprob: -8.629884719848633
    4. '```' → logprob: -10.254884719848633
    5. '[idx' → logprob: -11.129884719848633
    6. '[
' → logprob: -11.379884719848633
    7. '][' → logprob: -12.129884719848633
    8. ')[' → logprob: -12.629884719848633
    9. ']' → logprob: -12.754884719848633
    10. ' [' → logprob: -13.379884719848633

Token 1079: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05804083123803139
    2. ']==' → logprob: -2.9330408573150635
    3. '==' → logprob: -6.058040618896484
    4. ' ==' → logprob: -7.933040618896484
    5. '[' → logprob: -8.308040618896484
    6. '```' → logprob: -9.933040618896484
    7. '<|end|>' → logprob: -10.183040618896484
    8. ')' → logprob: -10.183040618896484
    9. '']' → logprob: -10.933040618896484
    10. ')==' → logprob: -11.558040618896484

Token 1080: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25229373574256897
    2. ' ==' → logprob: -1.5022937059402466
    3. ']==' → logprob: -8.877293586730957
    4. '```' → logprob: -9.002293586730957
    5. ')==' → logprob: -10.002293586730957
    6. '[' → logprob: -10.752293586730957
    7. ')' → logprob: -11.127293586730957
    8. '==
' → logprob: -11.877293586730957
    9. '=' → logprob: -12.252293586730957
    10. ']' → logprob: -12.752293586730957

Token 1081: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.0007100477814674377
    2. ' state' → logprob: -7.2507100105285645
    3. '(state' → logprob: -16.875709533691406
    4. '[state' → logprob: -17.375709533691406
    5. '	state' → logprob: -19.250709533691406
    6. '   ' → logprob: -20.000709533691406
    7. '```' → logprob: -20.000709533691406
    8. '_state' → logprob: -20.625709533691406
    9. 'State' → logprob: -21.125709533691406
    10. ',state' → logprob: -21.375709533691406

Token 1082: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.008129963040119e-06
    2. 'i' → logprob: -13.125003814697266
    3. '[idx' → logprob: -13.500003814697266
    4. '```' → logprob: -15.125003814697266
    5. '[
' → logprob: -15.750003814697266
    6. '[j' → logprob: -17.000003814697266
    7. '[' → logprob: -17.750003814697266
    8. '[I' → logprob: -17.875003814697266
    9. '[index' → logprob: -18.125003814697266
    10. '[ii' → logprob: -18.375003814697266

Token 1083: ']:' (ID: 12433)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8702642917633057
    2. ':
' → logprob: -1.8702642917633057
    3. ']:
' → logprob: -1.9952642917633057
    4. ':' → logprob: -2.6202642917633057
    5. '):' → logprob: -2.6202642917633057
    6. '                       ' → logprob: -2.6202642917633057
    7. ')' → logprob: -3.8702642917633057
    8. ']:' → logprob: -3.9952642917633057
    9. '                   ' → logprob: -4.495264053344727
    10. ',' → logprob: -5.120264053344727

Token 1084: ' invalid' (ID: 15796)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0018435632809996605
    2. '                   ' → logprob: -6.751843452453613
    3. '                           ' → logprob: -7.751843452453613
    4. '                               ' → logprob: -9.376843452453613
    5. ' return' → logprob: -10.251843452453613
    6. 'return' → logprob: -10.376843452453613
    7. 'for' → logprob: -10.501843452453613
    8. ' for' → logprob: -10.876843452453613
    9. '               ' → logprob: -12.126843452453613
    10. ' if' → logprob: -12.126843452453613

Token 1085: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0939130112528801
    2. '
' → logprob: -2.4689130783081055
    3. '                       ' → logprob: -6.0939130783081055
    4. '                    
' → logprob: -7.4689130783081055
    5. '    
' → logprob: -7.8439130783081055
    6. '               ' → logprob: -7.9689130783081055
    7. '				' → logprob: -8.218913078308105
    8. '                        
' → logprob: -8.843913078308105
    9. '<|end|>' → logprob: -8.843913078308105
    10. '           ' → logprob: -9.343913078308105

Token 1086: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0004896456957794726
    2. '                       ' → logprob: -8.375489234924316
    3. '               ' → logprob: -8.500489234924316
    4. '   ' → logprob: -10.500489234924316
    5. '           ' → logprob: -11.375489234924316
    6. '       ' → logprob: -12.000489234924316
    7. '                    
' → logprob: -12.250489234924316
    8. '
' → logprob: -13.500489234924316
    9. '				' → logprob: -14.000489234924316
    10. '    
' → logprob: -14.125489234924316

Token 1087: ' for' (ID: 395)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01111467182636261
    2. '                       ' → logprob: -4.511114597320557
    3. '               ' → logprob: -10.636115074157715
    4. '				' → logprob: -11.511115074157715
    5. 'for' (adapté à ' for') → logprob: -11.761115074157715
    6. '                           ' → logprob: -12.011115074157715
    7. '           ' → logprob: -12.011115074157715
    8. '       ' → logprob: -12.886115074157715
    9. '                    ' → logprob: -13.386115074157715
    10. '
' → logprob: -13.511115074157715

Token 1088: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023251185193657875
    2. ' i' → logprob: -3.7732512950897217
    3. '   ' → logprob: -13.5232515335083
    4. ' ' → logprob: -13.8982515335083
    5. '	i' → logprob: -13.8982515335083
    6. '0' → logprob: -14.1482515335083
    7. '_i' → logprob: -14.8982515335083
    8. '```' → logprob: -15.1482515335083
    9. 'j' → logprob: -15.7732515335083
    10. '    ' → logprob: -15.7732515335083

Token 1089: '1' (ID: 16)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1480136662721634
    2. 'in' → logprob: -2.0230135917663574
    3. '+' → logprob: -5.398013591766357
    4. '<|end|>' → logprob: -8.023014068603516
    5. ',' → logprob: -8.648014068603516
    6. '1' → logprob: -9.148014068603516
    7. ' +' → logprob: -10.148014068603516
    8. ' ' → logprob: -10.273014068603516
    9. '0' → logprob: -10.773014068603516
    10. ')' → logprob: -11.148014068603516

Token 1090: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5774229764938354
    2. ' in' → logprob: -0.8274229764938354
    3. ',' → logprob: -6.577423095703125
    4. '	in' → logprob: -10.452423095703125
    5. ' ' → logprob: -11.327423095703125
    6. 'i' → logprob: -11.952423095703125
    7. ' ,' → logprob: -12.327423095703125
    8. '   ' → logprob: -12.452423095703125
    9. '+' → logprob: -12.452423095703125
    10. '1' → logprob: -12.577423095703125

Token 1091: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.836499985889532e-05
    2. ' range' → logprob: -9.7500581741333
    3. '	range' → logprob: -18.250059127807617
    4. '   ' → logprob: -18.750059127807617
    5. '(range' → logprob: -18.875059127807617
    6. '
' → logprob: -19.875059127807617
    7. 'rang' → logprob: -20.625059127807617
    8. ' ' → logprob: -20.750059127807617
    9. '0' → logprob: -20.750059127807617
    10. 'idx' → logprob: -20.875059127807617

Token 1092: '(n' (ID: 2406)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.19425231218338013
    2. 'n' → logprob: -1.8192522525787354
    3. '0' → logprob: -5.0692524909973145
    4. '(idx' → logprob: -5.4442524909973145
    5. 'i' → logprob: -5.8192524909973145
    6. '(n' → logprob: -8.194252014160156
    7. '                   ' → logprob: -8.694252014160156
    8. '1' → logprob: -9.069252014160156
    9. ' idx' → logprob: -9.319252014160156
    10. '           ' → logprob: -9.819252014160156

Token 1093: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11275413632392883
    2. '):
' → logprob: -2.6127541065216064
    3. ' +' → logprob: -4.1127543449401855
    4. '):' → logprob: -4.2377543449401855
    5. '       ' → logprob: -7.1127543449401855
    6. '           ' → logprob: -7.6127543449401855
    7. '1' → logprob: -7.9877543449401855
    8. '-' → logprob: -8.362753868103027
    9. '   ' → logprob: -8.862753868103027
    10. ')' → logprob: -9.237753868103027

Token 1094: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3544759154319763
    2. '                   ' → logprob: -1.729475975036621
    3. ' i' → logprob: -3.229475975036621
    4. '```' → logprob: -3.604475975036621
    5. '               ' → logprob: -3.979475975036621
    6. ' for' → logprob: -4.354475975036621
    7. 'i' → logprob: -5.229475975036621
    8. '                               ' → logprob: -5.604475975036621
    9. 'for' → logprob: -5.854475975036621
    10. '           ' → logprob: -6.104475975036621

Token 1095: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.39258092641830444
    2. 'i' → logprob: -1.1425809860229492
    3. ' for' → logprob: -5.392580986022949
    4. ' i' → logprob: -7.142580986022949
    5. '                   ' → logprob: -8.51758098602295
    6. '                       ' → logprob: -9.26758098602295
    7. '                           ' → logprob: -10.26758098602295
    8. '           ' → logprob: -11.76758098602295
    9. '               ' → logprob: -12.26758098602295
    10. '   ' → logprob: -12.51758098602295

Token 1096: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.710618905955926e-05
    2. ' i' → logprob: -9.250097274780273
    3. '(i' → logprob: -14.125097274780273
    4. '   ' → logprob: -16.875097274780273
    5. '                   ' → logprob: -18.000097274780273
    6. '     ' → logprob: -18.750097274780273
    7. ' (' → logprob: -18.875097274780273
    8. '           ' → logprob: -19.375097274780273
    9. '	i' → logprob: -19.375097274780273
    10. '       ' → logprob: -19.625097274780273

Token 1097: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.059477686882019
    2. 'i' → logprob: -1.184477686882019
    3. ' i' → logprob: -1.934477686882019
    4. ' in' → logprob: -2.0594778060913086
    5. '(i' → logprob: -3.1844778060913086
    6. 'in' → logprob: -4.184477806091309
    7. ' (' → logprob: -4.934477806091309
    8. '(' → logprob: -5.559477806091309
    9. '+' → logprob: -6.059477806091309
    10. 'j' → logprob: -6.559477806091309

Token 1098: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0160808265209198
    2. 'in' → logprob: -4.141080856323242
    3. ' i' → logprob: -10.266080856323242
    4. 'i' → logprob: -12.266080856323242
    5. ' ' → logprob: -13.141080856323242
    6. '1' → logprob: -13.766080856323242
    7. '<|end|>' → logprob: -13.766080856323242
    8. 'range' → logprob: -14.391080856323242
    9. '	in' → logprob: -14.391080856323242
    10. '=i' → logprob: -14.641080856323242

Token 1099: ' range' (ID: 3352)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.050109218806028366
    2. 'range' → logprob: -3.0501091480255127
    3. '(i' → logprob: -6.925109386444092
    4. ' i' → logprob: -8.175108909606934
    5. ' range' → logprob: -8.300108909606934
    6. '{i' → logprob: -12.925108909606934
    7. '(range' → logprob: -13.425108909606934
    8. '[i' → logprob: -14.300108909606934
    9. '0' → logprob: -14.675108909606934
    10. '   ' → logprob: -14.800108909606934

Token 1100: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006748289801180363
    2. '(i' → logprob: -5.006748199462891
    3. ' i' → logprob: -11.13174819946289
    4. 'n' → logprob: -12.13174819946289
    5. '(' → logprob: -12.38174819946289
    6. 'idx' → logprob: -12.38174819946289
    7. '(n' → logprob: -13.50674819946289
    8. ' (' → logprob: -13.50674819946289
    9. '0' → logprob: -14.88174819946289
    10. '1' → logprob: -15.13174819946289

Token 1101: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1303161084651947
    2. '1' → logprob: -2.1303160190582275
    3. ' +' → logprob: -5.755316257476807
    4. '```' → logprob: -9.005315780639648
    5. '+j' → logprob: -11.005315780639648
    6. '2' → logprob: -11.255315780639648
    7. '+
' → logprob: -11.630315780639648
    8. 'i' → logprob: -11.755315780639648
    9. '0' → logprob: -12.380315780639648
    10. ' ' → logprob: -12.630315780639648

Token 1102: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006773634348064661
    2. ' +' → logprob: -5.631773471832275
    3. '1' → logprob: -5.756773471832275
    4. '+
' → logprob: -12.256773948669434
    5. '```' → logprob: -14.006773948669434
    6. '()+' → logprob: -15.256773948669434
    7. '+j' → logprob: -15.506773948669434
    8. ' +
' → logprob: -15.631773948669434
    9. ')+' → logprob: -15.631773948669434
    10. '0' → logprob: -16.006772994995117

Token 1103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '2' → logprob: -14.625000953674316
    3. 'n' → logprob: -15.125000953674316
    4. ' ' → logprob: -15.875000953674316
    5. '
' → logprob: -18.25
    6. '   ' → logprob: -19.0
    7. '0' → logprob: -19.0
    8. ',' → logprob: -19.125
    9. 'range' → logprob: -19.5
    10. '```' → logprob: -19.625

Token 1104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002633684314787388
    2. '1' → logprob: -6.002633571624756
    3. ',n' → logprob: -9.002634048461914
    4. ',
' → logprob: -11.877634048461914
    5. '```' → logprob: -11.877634048461914
    6. 'n' → logprob: -12.002634048461914
    7. '<|end|>' → logprob: -12.627634048461914
    8. ',j' → logprob: -13.127634048461914
    9. '+' → logprob: -13.127634048461914
    10. '2' → logprob: -13.252634048461914

Token 1105: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.372294698550832e-06
    2. ' n' → logprob: -11.625009536743164
    3. 'idx' → logprob: -16.375009536743164
    4. '
' → logprob: -16.500009536743164
    5. '(n' → logprob: -16.625009536743164
    6. '   ' → logprob: -17.000009536743164
    7. '	n' → logprob: -17.500009536743164
    8. ')' → logprob: -18.000009536743164
    9. '_n' → logprob: -18.125009536743164
    10. '```' → logprob: -18.250009536743164

Token 1106: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3486177921295166
    2. '):' → logprob: -1.2236177921295166
    3. '):
' → logprob: -9.973617553710938
    4. '+' → logprob: -10.098617553710938
    5. '):

' → logprob: -10.348617553710938
    6. ')' → logprob: -10.723617553710938
    7. '1' → logprob: -11.098617553710938
    8. '```' → logprob: -12.223617553710938
    9. ':' → logprob: -12.598617553710938
    10. '():
' → logprob: -13.473617553710938

Token 1107: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.003631550120189786
    2. '                               ' → logprob: -5.878631591796875
    3. '                       ' → logprob: -8.003631591796875
    4. '           ' → logprob: -9.503631591796875
    5. '<|end|>' → logprob: -9.628631591796875
    6. '                            ' → logprob: -9.753631591796875
    7. ' ' → logprob: -9.878631591796875
    8. '                            
' → logprob: -10.253631591796875
    9. '	                       ' → logprob: -10.503631591796875
    10. '   ' → logprob: -10.503631591796875

Token 1108: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.32104504108428955
    2. '                               ' → logprob: -1.5710450410842896
    3. ' if' → logprob: -2.821044921875
    4. '                           ' → logprob: -4.946044921875
    5. '   ' → logprob: -10.446044921875
    6. '                                   ' → logprob: -10.821044921875
    7. '                       ' → logprob: -10.946044921875
    8. '               ' → logprob: -11.071044921875
    9. '           ' → logprob: -11.196044921875
    10. '                   ' → logprob: -12.071044921875

Token 1109: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.3132985532283783
    2. ' current' → logprob: -1.3132985830307007
    3. '(current' → logprob: -10.438298225402832
    4. '                           ' → logprob: -12.188298225402832
    5. '                               ' → logprob: -13.938298225402832
    6. '	current' → logprob: -14.813298225402832
    7. '                   ' → logprob: -14.938298225402832
    8. '[current' → logprob: -15.188298225402832
    9. '                                   ' → logprob: -15.563298225402832
    10. '   ' → logprob: -15.813298225402832

Token 1110: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.00011963568249484524
    2. 'positions' → logprob: -9.25011920928955
    3. 'Positions' → logprob: -11.87511920928955
    4. '```' → logprob: -12.00011920928955
    5. '1' → logprob: -13.25011920928955
    6. '_states' → logprob: -13.25011920928955
    7. '
' → logprob: -13.62511920928955
    8. '_pos' → logprob: -14.50011920928955
    9. '           ' → logprob: -14.75011920928955
    10. '   ' → logprob: -15.00011920928955

Token 1111: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.08946544677019119
    2. '[j' → logprob: -2.839465379714966
    3. '[' → logprob: -3.714465379714966
    4. '==' → logprob: -6.839465618133545
    5. '[
' → logprob: -7.214465618133545
    6. '```' → logprob: -8.089465141296387
    7. ']==' → logprob: -8.214465141296387
    8. '][' → logprob: -9.214465141296387
    9. ']' → logprob: -9.339465141296387
    10. ' [' → logprob: -10.589465141296387

Token 1112: '1' (ID: 16)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3532680869102478
    2. ']==' → logprob: -1.6032681465148926
    3. '1' → logprob: -2.4782681465148926
    4. '[' → logprob: -5.353268146514893
    5. '==' → logprob: -5.728268146514893
    6. '[j' → logprob: -6.353268146514893
    7. '][' → logprob: -6.603268146514893
    8. '```' → logprob: -7.978268146514893
    9. ' ==' → logprob: -8.478267669677734
    10. '[i' → logprob: -8.603267669677734

Token 1113: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23411662876605988
    2. ']==' → logprob: -1.6091166734695435
    3. '==' → logprob: -4.859116554260254
    4. ' ==' → logprob: -7.484116554260254
    5. '[' → logprob: -8.484116554260254
    6. '][' → logprob: -10.109116554260254
    7. ' ]' → logprob: -10.609116554260254
    8. ')==' → logprob: -10.734116554260254
    9. ')' → logprob: -11.109116554260254
    10. '```' → logprob: -11.109116554260254

Token 1114: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12698480486869812
    2. ' ==' → logprob: -2.1269848346710205
    3. ']==' → logprob: -10.376984596252441
    4. '==
' → logprob: -11.501984596252441
    5. ')==' → logprob: -11.876984596252441
    6. '[' → logprob: -13.251984596252441
    7. '===' → logprob: -13.501984596252441
    8. ')' → logprob: -13.501984596252441
    9. '```' → logprob: -13.751984596252441
    10. ']' → logprob: -13.876984596252441

Token 1115: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.0002613358374219388
    2. ' state' → logprob: -8.250261306762695
    3. '(state' → logprob: -18.000261306762695
    4. '	state' → logprob: -19.250261306762695
    5. '[state' → logprob: -19.750261306762695
    6. 'State' → logprob: -20.500261306762695
    7. '   ' → logprob: -20.625261306762695
    8. '.state' → logprob: -20.750261306762695
    9. '_state' → logprob: -21.000261306762695
    10. '
' → logprob: -21.000261306762695

Token 1116: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.60414821645827e-06
    2. '[' → logprob: -12.750004768371582
    3. 'j' → logprob: -13.875004768371582
    4. '[
' → logprob: -14.125004768371582
    5. '   ' → logprob: -17.875003814697266
    6. '(j' → logprob: -18.000003814697266
    7. ' [' → logprob: -18.125003814697266
    8. '
' → logprob: -18.625003814697266
    9. '[i' → logprob: -18.625003814697266
    10. ' j' → logprob: -19.750003814697266

Token 1117: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0017663358012214303
    2. '[j' → logprob: -6.376766204833984
    3. '1' → logprob: -10.751766204833984
    4. ']' → logprob: -11.376766204833984
    5. '```' → logprob: -12.001766204833984
    6. '][' → logprob: -12.126766204833984
    7. '                           ' → logprob: -12.376766204833984
    8. ' j' → logprob: -12.501766204833984
    9. '
' → logprob: -12.876766204833984
    10. '_j' → logprob: -13.251766204833984

Token 1118: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16069909930229187
    2. 'and' → logprob: -1.9106991291046143
    3. ')' → logprob: -7.910698890686035
    4. '                               ' → logprob: -9.285698890686035
    5. '                           ' → logprob: -11.535698890686035
    6. ']' → logprob: -13.535698890686035
    7. '                             ' → logprob: -13.785698890686035
    8. '                            ' → logprob: -13.785698890686035
    9. '	and' → logprob: -14.660698890686035
    10. ' or' → logprob: -14.660698890686035

Token 1119: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3869243860244751
    2. 'and' → logprob: -1.136924386024475
    3. '                               ' → logprob: -10.261924743652344
    4. '                           ' → logprob: -11.636924743652344
    5. '<|end|>' → logprob: -12.636924743652344
    6. '	and' → logprob: -13.261924743652344
    7. '                            ' → logprob: -13.636924743652344
    8. ' or' → logprob: -14.011924743652344
    9. '                             ' → logprob: -14.136924743652344
    10. '							' → logprob: -14.636924743652344

Token 1120: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.029756972566246986
    2. 'current' → logprob: -3.529757022857666
    3. '(current' → logprob: -12.029756546020508
    4. '	current' → logprob: -15.529756546020508
    5. '$current' → logprob: -16.529756546020508
    6. '[current' → logprob: -16.654756546020508
    7. '                           ' → logprob: -16.779756546020508
    8. 'urrent' → logprob: -17.029756546020508
    9. ',current' → logprob: -17.029756546020508
    10. '.current' → logprob: -17.279756546020508

Token 1121: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.0006426189211197197
    2. 'positions' → logprob: -7.375642776489258
    3. 'Positions' → logprob: -11.750642776489258
    4. '_states' → logprob: -12.250642776489258
    5. '```' → logprob: -13.250642776489258
    6. 'j' → logprob: -14.625642776489258
    7. '[j' → logprob: -15.375642776489258
    8. '_j' → logprob: -15.750642776489258
    9. '
' → logprob: -16.000642776489258
    10. '_' → logprob: -16.125642776489258

Token 1122: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0011546281166374683
    2. 'j' → logprob: -6.87615442276001
    3. '[i' → logprob: -9.876154899597168
    4. '```' → logprob: -10.876154899597168
    5. '[' → logprob: -11.001154899597168
    6. '[
' → logprob: -11.126154899597168
    7. '[current' → logprob: -12.126154899597168
    8. '[state' → logprob: -12.626154899597168
    9. 'current' → logprob: -13.126154899597168
    10. ' [' → logprob: -13.376154899597168

Token 1123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.3358446166384965e-05
    2. '```' → logprob: -10.750053405761719
    3. 'j' → logprob: -11.250053405761719
    4. ']' → logprob: -11.625053405761719
    5. 'i' → logprob: -12.500053405761719
    6. '[' → logprob: -13.875053405761719
    7. '_' → logprob: -14.375053405761719
    8. '][' → logprob: -14.375053405761719
    9. '=' → logprob: -14.625053405761719
    10. '[j' → logprob: -15.125053405761719

Token 1124: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3002130389213562
    2. '==' → logprob: -1.550213098526001
    3. ']' → logprob: -3.675213098526001
    4. ']==' → logprob: -3.925213098526001
    5. '[' → logprob: -6.675212860107422
    6. '[i' → logprob: -7.800212860107422
    7. ')' → logprob: -8.800212860107422
    8. ')==' → logprob: -9.925212860107422
    9. '<|end|>' → logprob: -9.925212860107422
    10. '```' → logprob: -10.175212860107422

Token 1125: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03810689598321915
    2. ' ==' → logprob: -3.288106918334961
    3. '==
' → logprob: -10.538106918334961
    4. ']==' → logprob: -10.913106918334961
    5. '[' → logprob: -11.413106918334961
    6. '=' → logprob: -12.538106918334961
    7. '```' → logprob: -13.288106918334961
    8. '===' → logprob: -14.038106918334961
    9. '[state' → logprob: -14.163106918334961
    10. ')==' → logprob: -14.163106918334961

Token 1126: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.0008071291376836598
    2. ' state' → logprob: -7.125807285308838
    3. 'current' → logprob: -13.37580680847168
    4. '[state' → logprob: -14.37580680847168
    5. '(state' → logprob: -15.62580680847168
    6. '   ' → logprob: -16.12580680847168
    7. '	state' → logprob: -16.75080680847168
    8. 'st' → logprob: -17.37580680847168
    9. 's' → logprob: -17.62580680847168
    10. '```' → logprob: -17.87580680847168

Token 1127: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000940046738833189
    2. 'i' → logprob: -7.000939846038818
    3. '[
' → logprob: -10.625940322875977
    4. '```' → logprob: -13.375940322875977
    5. '
' → logprob: -14.000940322875977
    6. '[' → logprob: -14.750940322875977
    7. '[idx' → logprob: -15.125940322875977
    8. '   ' → logprob: -15.375940322875977
    9. '`' → logprob: -15.625940322875977
    10. ' i' → logprob: -15.750940322875977

Token 1128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004086275293957442
    2. ']' → logprob: -8.125408172607422
    3. '```' → logprob: -10.125408172607422
    4. '[' → logprob: -10.500408172607422
    5. '[
' → logprob: -10.750408172607422
    6. '])' → logprob: -12.000408172607422
    7. ')' → logprob: -12.500408172607422
    8. ']>' → logprob: -13.375408172607422
    9. '{
' → logprob: -13.500408172607422
    10. ']==' → logprob: -13.875408172607422

Token 1129: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.569490373134613
    2. '):' → logprob: -2.069490432739258
    3. ']:
' → logprob: -2.194490432739258
    4. ':
' → logprob: -2.694490432739258
    5. ':' → logprob: -2.944490432739258
    6. ']:' → logprob: -3.444490432739258
    7. '                           ' → logprob: -3.569490432739258
    8. '                               ' → logprob: -4.944490432739258
    9. '                       ' → logprob: -5.569490432739258
    10. ')' → logprob: -6.819490432739258

Token 1130: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0005811501177959144
    2. '                                   ' → logprob: -8.000580787658691
    3. '                           ' → logprob: -9.375580787658691
    4. '                                       ' → logprob: -9.375580787658691
    5. '                       ' → logprob: -10.750580787658691
    6. 'return' → logprob: -11.375580787658691
    7. '                                           ' → logprob: -11.500580787658691
    8. '```' → logprob: -11.750580787658691
    9. '                             ' → logprob: -12.500580787658691
    10. '               ' → logprob: -12.500580787658691

Token 1131: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0024950411170721054
    2. '                                   ' → logprob: -6.752494812011719
    3. '                               ' → logprob: -7.252494812011719
    4. ' return' → logprob: -7.502494812011719
    5. '                                       ' → logprob: -10.127494812011719
    6. '
' → logprob: -11.627494812011719
    7. '                   ' → logprob: -12.377494812011719
    8. '                       ' → logprob: -13.002494812011719
    9. '                           ' → logprob: -13.002494812011719
    10. '           ' → logprob: -13.252494812011719

Token 1132: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7508546113967896
    2. '                           ' → logprob: -1.1258546113967896
    3. '                               ' → logprob: -2.1258544921875
    4. '               ' → logprob: -3.2508544921875
    5. '
' → logprob: -3.7508544921875
    6. '                       ' → logprob: -4.5008544921875
    7. '           ' → logprob: -5.7508544921875
    8. '\n' → logprob: -6.5008544921875
    9. '				' → logprob: -6.7508544921875
    10. '			' → logprob: -7.5008544921875

Token 1133: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.19785551726818085
    2. '               ' → logprob: -2.4478554725646973
    3. '                           ' → logprob: -2.6978554725646973
    4. '                               ' → logprob: -4.072855472564697
    5. '                       ' → logprob: -5.572855472564697
    6. '
' → logprob: -5.822855472564697
    7. '           ' → logprob: -6.947855472564697
    8. '                            
' → logprob: -9.072855949401855
    9. '```' → logprob: -9.322855949401855
    10. '                            ' → logprob: -9.322855949401855

Token 1134: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23023279011249542
    2. '                   ' → logprob: -1.605232834815979
    3. '
' → logprob: -5.7302327156066895
    4. 'if' → logprob: -7.3552327156066895
    5. '           ' → logprob: -8.105233192443848
    6. 'next' → logprob: -8.105233192443848
    7. 'visited' → logprob: -9.480233192443848
    8. 'new' → logprob: -10.105233192443848
    9. '                       ' → logprob: -10.105233192443848
    10. '                           ' → logprob: -10.105233192443848

Token 1135: ' Valid' (ID: 13888)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07469087094068527
    2. 'if' → logprob: -2.699690818786621
    3. '               ' → logprob: -5.824690818786621
    4. ' if' → logprob: -6.699690818786621
    5. '           ' → logprob: -8.449690818786621
    6. '                       ' → logprob: -8.699690818786621
    7. '                           ' → logprob: -9.949690818786621
    8. '
' → logprob: -10.449690818786621
    9. '   ' → logprob: -10.824690818786621
    10. '       ' → logprob: -10.949690818786621

Token 1136: ' next' (ID: 2613)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05252399668097496
    2. '               ' → logprob: -3.5525240898132324
    3. 'next' → logprob: -4.427524089813232
    4. '
' → logprob: -5.677524089813232
    5. '           ' → logprob: -5.927524089813232
    6. '                       ' → logprob: -6.052524089813232
    7. ' next' → logprob: -7.302524089813232
    8. 'state' → logprob: -7.927524089813232
    9. 'if' → logprob: -8.052523612976074
    10. '                           ' → logprob: -8.677523612976074

Token 1137: ' state' (ID: 2608)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.302475243806839
    2. '_states' → logprob: -1.8024752140045166
    3. '                   ' → logprob: -2.8024752140045166
    4. '_state' → logprob: -3.8024752140045166
    5. 'positions' → logprob: -5.052475452423096
    6. 'state' → logprob: -5.927475452423096
    7. '               ' → logprob: -6.177475452423096
    8. '   ' → logprob: -7.552475452423096
    9. 'states' → logprob: -8.177474975585938
    10. '           ' → logprob: -8.927474975585938

Token 1138: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0014055903302505612
    2. '               ' → logprob: -7.251405715942383
    3. '
' → logprob: -7.751405715942383
    4. '                       ' → logprob: -9.251405715942383
    5. '                    
' → logprob: -9.626405715942383
    6. '           ' → logprob: -10.376405715942383
    7. '                           ' → logprob: -11.126405715942383
    8. '   ' → logprob: -11.376405715942383
    9. 'next' → logprob: -11.626405715942383
    10. '                               ' → logprob: -12.001405715942383

Token 1139: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004052398260682821
    2. '               ' → logprob: -5.75405216217041
    3. '
' → logprob: -7.87905216217041
    4. '                       ' → logprob: -8.62905216217041
    5. '```' → logprob: -9.12905216217041
    6. '           ' → logprob: -9.75405216217041
    7. '                           ' → logprob: -10.00405216217041
    8. '                               ' → logprob: -10.12905216217041
    9. '                    
' → logprob: -11.00405216217041
    10. '   ' → logprob: -11.37905216217041

Token 1140: ' next' (ID: 2613)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08426468819379807
    2. ' if' → logprob: -2.8342647552490234
    3. 'if' → logprob: -4.209264755249023
    4. '               ' → logprob: -5.084264755249023
    5. '           ' → logprob: -8.334264755249023
    6. '                       ' → logprob: -8.709264755249023
    7. 'state' → logprob: -8.959264755249023
    8. ' next' → logprob: -9.209264755249023
    9. 'next' (adapté à ' next') → logprob: -9.334264755249023
    10. '   ' → logprob: -9.459264755249023

Token 1141: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.0017153972294181585
    2. '_positions' → logprob: -6.501715183258057
    3. '_state' → logprob: -8.876715660095215
    4. 'states' → logprob: -10.751715660095215
    5. '_' → logprob: -11.251715660095215
    6. '```' → logprob: -11.251715660095215
    7. '_tokens' → logprob: -12.001715660095215
    8. 'States' → logprob: -12.251715660095215
    9. 'state' → logprob: -12.501715660095215
    10. '                   ' → logprob: -13.376715660095215

Token 1142: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001318573602475226
    2. '.' → logprob: -6.751318454742432
    3. '.add' → logprob: -8.87631893157959
    4. '.app' → logprob: -12.62631893157959
    5. ' .' → logprob: -13.62631893157959
    6. '.enqueue' → logprob: -13.75131893157959
    7. '.extend' → logprob: -14.12631893157959
    8. 'append' → logprob: -14.62631893157959
    9. '.setdefault' → logprob: -15.12631893157959
    10. '.insert' → logprob: -15.12631893157959

Token 1143: '(tuple' (ID: 133029)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.08629164099693298
    2. 'current' → logprob: -2.961291551589966
    3. '(tuple' → logprob: -3.836291551589966
    4. '(' → logprob: -4.836291790008545
    5. 'tuple' → logprob: -6.961291790008545
    6. '(
' → logprob: -8.586291313171387
    7. ' current' → logprob: -8.836291313171387
    8. '((' → logprob: -9.586291313171387
    9. ' (' → logprob: -10.836291313171387
    10. '(cur' → logprob: -11.336291313171387

Token 1144: '(current' (ID: 15023)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.004111880902200937
    2. '(current' → logprob: -5.5041117668151855
    3. '[current' → logprob: -10.754112243652344
    4. ' current' → logprob: -11.629112243652344
    5. '$current' → logprob: -14.379112243652344
    6. '```' → logprob: -14.504112243652344
    7. 'positions' → logprob: -14.629112243652344
    8. 'next' → logprob: -14.629112243652344
    9. '_current' → logprob: -15.004112243652344
    10. '
' → logprob: -15.879112243652344

Token 1145: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.00018446780450176448
    2. 'positions' → logprob: -8.625184059143066
    3. '_states' → logprob: -12.625184059143066
    4. '```' → logprob: -14.375184059143066
    5. 'Positions' → logprob: -14.625184059143066
    6. ' positions' → logprob: -15.875184059143066
    7. '[' → logprob: -16.750185012817383
    8. ')' → logprob: -16.750185012817383
    9. '
' → logprob: -16.875185012817383
    10. '_moves' → logprob: -17.500185012817383

Token 1146: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06347858905792236
    2. ')' → logprob: -3.813478469848633
    3. '))
' → logprob: -3.813478469848633
    4. '                   ' → logprob: -4.063478469848633
    5. '               ' → logprob: -9.313478469848633
    6. '                       ' → logprob: -10.563478469848633
    7. ')
' → logprob: -10.563478469848633
    8. '           ' → logprob: -11.813478469848633
    9. '))
' → logprob: -12.188478469848633
    10. ')))' → logprob: -12.313478469848633

Token 1147: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16794386506080627
    2. '                   ' → logprob: -1.9179438352584839
    3. '	return' → logprob: -6.542943954467773
    4. '   ' → logprob: -6.667943954467773
    5. '           ' → logprob: -6.792943954467773
    6. '```' → logprob: -6.792943954467773
    7. '			' → logprob: -7.042943954467773
    8. '                       ' → logprob: -8.042943954467773
    9. '				' → logprob: -8.167943954467773
    10. '                           ' → logprob: -8.792943954467773

Token 1148: ' return' (ID: 622)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.014089101925492287
    2. '               ' → logprob: -4.514089107513428
    3. '   ' → logprob: -6.514089107513428
    4. 'return' (adapté à ' return') → logprob: -6.889089107513428
    5. '           ' → logprob: -8.01408863067627
    6. '       ' → logprob: -8.63908863067627
    7. '                       ' → logprob: -11.26408863067627
    8. ' return' → logprob: -12.13908863067627
    9. 'else' → logprob: -13.01408863067627
    10. 'for' → logprob: -13.01408863067627

Token 1149: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006611519027501345
    2. '                
' → logprob: -6.006611347198486
    3. '           ' → logprob: -6.881611347198486
    4. '                   ' → logprob: -7.006611347198486
    5. '   ' → logprob: -7.506611347198486
    6. '                ' → logprob: -8.256611824035645
    7. '
' → logprob: -8.381611824035645
    8. '       ' → logprob: -8.506611824035645
    9. '			' → logprob: -8.506611824035645
    10. '    
' → logprob: -8.631611824035645

Token 1150: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0044440049678087234
    2. '           ' → logprob: -6.129444122314453
    3. '       ' → logprob: -6.629444122314453
    4. '   ' → logprob: -7.629444122314453
    5. '                
' → logprob: -8.504444122314453
    6. '```' → logprob: -9.254444122314453
    7. 'back' → logprob: -10.129444122314453
    8. '			' → logprob: -10.754444122314453
    9. '    
' → logprob: -10.879444122314453
    10. '
' → logprob: -11.004444122314453

Token 1151: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2788417339324951
    2. ' for' → logprob: -2.153841733932495
    3. '   ' → logprob: -2.403841733932495
    4. 'for' (adapté à ' for') → logprob: -4.153841972351074
    5. ' moves' → logprob: -4.403841972351074
    6. 'moves' → logprob: -5.778841972351074
    7. '                   ' → logprob: -5.903841972351074
    8. '           ' → logprob: -6.903841972351074
    9. '       ' → logprob: -7.278841972351074
    10. ' back' → logprob: -8.403841972351074

Token 1152: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5763797760009766
    2. 'move' → logprob: -0.8263797760009766
    3. ' move' → logprob: -8.826379776000977
    4. 'next' → logprob: -8.951379776000977
    5. 'possible' → logprob: -9.576379776000977
    6. ' pos' → logprob: -9.826379776000977
    7. 'mv' → logprob: -11.451379776000977
    8. 'p' → logprob: -11.576379776000977
    9. 'm' → logprob: -12.076379776000977
    10. 'poss' → logprob: -12.451379776000977

Token 1153: '_to' (ID: 5089)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.05493340268731117
    2. ' in' → logprob: -2.9299333095550537
    3. 'idx' → logprob: -11.804933547973633
    4. '[idx' → logprob: -11.929933547973633
    5. '
' → logprob: -12.179933547973633
    6. '[in' → logprob: -12.179933547973633
    7. ' ' → logprob: -12.304933547973633
    8. '   ' → logprob: -12.429933547973633
    9. 's' → logprob: -12.929933547973633
    10. '_in' → logprob: -13.054933547973633

Token 1154: ' in' (ID: 306)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.26090654730796814
    2. 'append' → logprob: -1.5109065771102905
    3. 'choose' → logprob: -5.26090669631958
    4. '_move' → logprob: -6.01090669631958
    5. 'back' → logprob: -7.51090669631958
    6. 'consider' → logprob: -9.135906219482422
    7. 'pos' → logprob: -9.135906219482422
    8. '.append' → logprob: -9.260906219482422
    9. ' move' → logprob: -9.385906219482422
    10. '_append' → logprob: -9.760906219482422

Token 1155: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.0015034328680485487
    2. ' possible' → logprob: -6.5015034675598145
    3. 'pos' → logprob: -13.876502990722656
    4. '[pos' → logprob: -16.251502990722656
    5. '   ' → logprob: -17.376502990722656
    6. '_possible' → logprob: -17.376502990722656
    7. '(pos' → logprob: -18.126502990722656
    8. ' posible' → logprob: -18.251502990722656
    9. 'poss' → logprob: -19.376502990722656
    10. '
' → logprob: -19.376502990722656

Token 1156: '_moves' (ID: 110706)
  Prédit: '_moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.0002075933152809739
    2. 'moves' → logprob: -8.500207901000977
    3. '_positions' → logprob: -13.500207901000977
    4. 'Moves' → logprob: -13.875207901000977
    5. '_possible' → logprob: -15.000207901000977
    6. 'possible' → logprob: -15.250207901000977
    7. '_mov' → logprob: -15.625207901000977
    8. '[' → logprob: -15.750207901000977
    9. '.moves' → logprob: -16.375207901000977
    10. '_choices' → logprob: -16.625207901000977

Token 1157: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00015252856246661395
    2. '(idx' → logprob: -8.875152587890625
    3. 'idx' → logprob: -11.500152587890625
    4. '[
' → logprob: -13.750152587890625
    5. '[' → logprob: -14.125152587890625
    6. '```' → logprob: -15.125152587890625
    7. ' idx' → logprob: -16.250152587890625
    8. ')' → logprob: -16.625152587890625
    9. '	idx' → logprob: -16.750152587890625
    10. '_idx' → logprob: -16.750152587890625

Token 1158: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5959620475769043
    2. '):
' → logprob: -0.8459620475769043
    3. ',' → logprob: -5.470962047576904
    4. ']):' → logprob: -5.470962047576904
    5. ':' → logprob: -5.970962047576904
    6. '       ' → logprob: -6.345962047576904
    7. ']:' → logprob: -6.470962047576904
    8. '               ' → logprob: -7.095962047576904
    9. ']):
' → logprob: -7.220962047576904
    10. '                   ' → logprob: -7.220962047576904

Token 1159: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008551930077373981
    2. '	               ' → logprob: -6.008552074432373
    3. '		           ' → logprob: -6.383552074432373
    4. '                       ' → logprob: -6.883552074432373
    5. ' back' → logprob: -7.508552074432373
    6. '			       ' → logprob: -7.508552074432373
    7. '               ' → logprob: -8.258551597595215
    8. '	                   ' → logprob: -8.383551597595215
    9. '[' → logprob: -8.508551597595215
    10. '				' → logprob: -8.508551597595215

Token 1160: ' back' (ID: 1602)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'back' (adapté à ' back') → logprob: -0.6331616044044495
    2. 'current' → logprob: -1.8831615447998047
    3. '                       ' → logprob: -2.1331615447998047
    4. 'if' → logprob: -2.3831615447998047
    5. '                   ' → logprob: -3.0081615447998047
    6. ' back' → logprob: -3.3831615447998047
    7. ' if' → logprob: -4.133161544799805
    8. ' current' → logprob: -5.258161544799805
    9. '       ' → logprob: -7.133161544799805
    10. '               ' → logprob: -8.008161544799805

Token 1161: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -6.749814019713085e-06
    2. '               ' → logprob: -12.375006675720215
    3. 't' → logprob: -14.125006675720215
    4. 'tracking' → logprob: -14.500006675720215
    5. '   ' → logprob: -15.625006675720215
    6. '_track' → logprob: -15.750006675720215
    7. 'tracker' → logprob: -15.875006675720215
    8. 'tick' → logprob: -16.00000762939453
    9. 'tract' → logprob: -16.00000762939453
    10. '                   ' → logprob: -16.00000762939453

Token 1162: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -7.465036105713807e-06
    2. '(' → logprob: -12.250007629394531
    3. 'idx' → logprob: -14.125007629394531
    4. '(
' → logprob: -14.375007629394531
    5. '(len' → logprob: -14.500007629394531
    6. '(index' → logprob: -14.750007629394531
    7. ' (' → logprob: -15.375007629394531
    8. '[idx' → logprob: -16.75000762939453
    9. '(id' → logprob: -17.12500762939453
    10. '	idx' → logprob: -17.75000762939453

Token 1163: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09114933013916016
    2. '+' → logprob: -2.96614933013916
    3. ' +' → logprob: -3.34114933013916
    4. '(idx' → logprob: -8.96614933013916
    5. ' ,' → logprob: -10.34114933013916
    6. 'idx' → logprob: -10.46614933013916
    7. ',
' → logprob: -11.21614933013916
    8. '+,' → logprob: -12.46614933013916
    9. ',index' → logprob: -13.09114933013916
    10. '   ' → logprob: -13.46614933013916

Token 1164: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1875571544806007e-05
    2. 'pos' → logprob: -11.375011444091797
    3. ' ' → logprob: -15.375011444091797
    4. '   ' → logprob: -17.000011444091797
    5. '```' → logprob: -17.375011444091797
    6. '(pos' → logprob: -18.000011444091797
    7. 'position' → logprob: -19.375011444091797
    8. ')' → logprob: -19.375011444091797
    9. '
' → logprob: -19.625011444091797
    10. ' pos' → logprob: -20.000011444091797

Token 1165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014282210730016232
    2. ',current' → logprob: -4.3892822265625
    3. ',pos' → logprob: -7.2642822265625
    4. '(current' → logprob: -7.2642822265625
    5. ',[' → logprob: -9.6392822265625
    6. ',(' → logprob: -9.6392822265625
    7. 'current' → logprob: -9.7642822265625
    8. '(' → logprob: -10.0142822265625
    9. '(pos' → logprob: -10.2642822265625
    10. ',
' → logprob: -10.7642822265625

Token 1166: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.018174296244978905
    2. ' current' → logprob: -4.018174171447754
    3. '   ' → logprob: -10.643174171447754
    4. '	current' → logprob: -15.518174171447754
    5. '[current' → logprob: -16.01817512512207
    6. '(current' → logprob: -16.26817512512207
    7. '       ' → logprob: -16.89317512512207
    8. ' ' → logprob: -17.39317512512207
    9. '    ' → logprob: -17.64317512512207
    10. '  ' → logprob: -18.01817512512207

Token 1167: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.004079470410943031
    2. 'positions' → logprob: -5.504079341888428
    3. 'Positions' → logprob: -14.129079818725586
    4. '
' → logprob: -16.129079818725586
    5. ' positions' → logprob: -16.629079818725586
    6. '```' → logprob: -16.754079818725586
    7. '`' → logprob: -17.504079818725586
    8. '[' → logprob: -18.004079818725586
    9. '_tokens' → logprob: -18.004079818725586
    10. '\' → logprob: -18.379079818725586

Token 1168: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6958147287368774
    2. ' +' → logprob: -0.6958147287368774
    3. '+[' → logprob: -5.945814609527588
    4. '+(' → logprob: -10.070815086364746
    5. '+
' → logprob: -12.445815086364746
    6. '   ' → logprob: -15.195815086364746
    7. '＋' → logprob: -15.820815086364746
    8. '	' → logprob: -16.07081413269043
    9. ' +
' → logprob: -16.44581413269043
    10. ' +(' → logprob: -16.69581413269043

Token 1169: ' [' (ID: 723)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.001091162208467722
    2. '(' → logprob: -7.251091003417969
    3. '[pos' → logprob: -8.001091003417969
    4. ' (' → logprob: -10.501091003417969
    5. '(position' → logprob: -11.751091003417969
    6. '(Pos' → logprob: -11.876091003417969
    7. '((' → logprob: -13.001091003417969
    8. '(tuple' → logprob: -14.126091003417969
    9. '[' → logprob: -14.626091003417969
    10. '   ' → logprob: -16.75109100341797

Token 1170: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: 0.0
    2. ' pos' → logprob: -19.75
    3. '(pos' → logprob: -23.0
    4. '[pos' → logprob: -24.75
    5. '   ' → logprob: -25.125
    6. 'position' → logprob: -25.5
    7. '	pos' → logprob: -25.75
    8. '_pos' → logprob: -25.875
    9. 'po' → logprob: -26.875
    10. '.pos' → logprob: -27.25

Token 1171: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -4.60414821645827e-06
    2. 'to' → logprob: -12.750004768371582
    3. 'To' → logprob: -14.375004768371582
    4. 'os' → logprob: -15.375004768371582
    5. 'o' → logprob: -15.500004768371582
    6. '```' → logprob: -16.000003814697266
    7. '_TO' → logprob: -16.000003814697266
    8. ']' → logprob: -16.250003814697266
    9. '_tokens' → logprob: -16.625003814697266
    10. ')' → logprob: -16.750003814697266

Token 1172: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. '())' → logprob: -14.375001907348633
    3. ')
' → logprob: -14.625001907348633
    4. ' )' → logprob: -15.000001907348633
    5. ')`' → logprob: -15.500001907348633
    6. '])' → logprob: -15.625001907348633
    7. '))' → logprob: -16.000001907348633
    8. '`)' → logprob: -16.625001907348633
    9. '   ' → logprob: -17.000001907348633
    10. '')' → logprob: -17.625001907348633

Token 1173: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0405249185860157
    2. '       ' → logprob: -3.290524959564209
    3. '   ' → logprob: -7.540524959564209
    4. '               ' → logprob: -7.540524959564209
    5. '
' → logprob: -7.915524959564209
    6. 'back' → logprob: -7.915524959564209
    7. '            
' → logprob: -8.79052448272705
    8. ')' → logprob: -9.04052448272705
    9. '	       ' → logprob: -9.04052448272705
    10. '		' → logprob: -9.41552448272705

Token 1174: ' back' (ID: 1602)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'back' (adapté à ' back') → logprob: -0.007277206983417273
    2. '           ' → logprob: -5.007277011871338
    3. ' back' → logprob: -7.507277011871338
    4. '       ' → logprob: -11.632277488708496
    5. '(back' → logprob: -13.382277488708496
    6. '```' → logprob: -14.132277488708496
    7. '   ' → logprob: -14.382277488708496
    8. '
' → logprob: -14.757277488708496
    9. '	back' → logprob: -15.382277488708496
    10. '_back' → logprob: -16.50727653503418

Token 1175: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -1.0280383548888494e-06
    2. 'tracking' → logprob: -15.000000953674316
    3. 't' → logprob: -15.125000953674316
    4. '(track' → logprob: -16.125001907348633
    5. 'tract' → logprob: -16.375001907348633
    6. 'back' → logprob: -16.750001907348633
    7. 'ack' → logprob: -16.875001907348633
    8. 'tracker' → logprob: -17.250001907348633
    9. 'tr' → logprob: -17.625001907348633
    10. 'rack' → logprob: -17.750001907348633

Token 1176: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06197787821292877
    2. '0' → logprob: -2.8119778633117676
    3. '(n' → logprob: -12.186978340148926
    4. '           ' → logprob: -13.061978340148926
    5. ' (' → logprob: -13.561978340148926
    6. ' ' → logprob: -14.561978340148926
    7. '   ' → logprob: -14.936978340148926
    8. 'n' → logprob: -15.061978340148926
    9. '       ' → logprob: -15.811978340148926
    10. '```' → logprob: -16.31197738647461

Token 1177: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. 'n' → logprob: -18.5
    4. '           ' → logprob: -20.5
    5. ')' → logprob: -20.875
    6. '   ' → logprob: -21.25
    7. '1' → logprob: -21.5
    8. '
' → logprob: -23.125
    9. '       ' → logprob: -23.25
    10. '(' → logprob: -23.25

Token 1178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2200749754119897e-06
    2. ',[' → logprob: -13.375001907348633
    3. ' ,' → logprob: -14.750001907348633
    4. ',['' → logprob: -16.250001907348633
    5. '[],' → logprob: -16.750001907348633
    6. ',
' → logprob: -17.500001907348633
    7. ')' → logprob: -17.750001907348633
    8. '   ' → logprob: -18.125001907348633
    9. ',)' → logprob: -18.125001907348633
    10. '([]' → logprob: -18.125001907348633

Token 1179: ' [])

' (ID: 124233)
  Prédit: '[])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[])' → logprob: -0.023256074637174606
    2. '[]' → logprob: -3.7732560634613037
    3. ' [])' → logprob: -12.523256301879883
    4. '[' → logprob: -12.523256301879883
    5. ')' → logprob: -13.273256301879883
    6. '[])
' → logprob: -13.898256301879883
    7. '[]}' → logprob: -14.773256301879883
    8. '[]
' → logprob: -15.898256301879883
    9. '[]):' → logprob: -16.648256301879883
    10. '[],' → logprob: -16.898256301879883

Token 1180: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00037716879160143435
    2. '       ' → logprob: -8.37537670135498
    3. 'for' → logprob: -9.37537670135498
    4. ' for' → logprob: -10.12537670135498
    5. '   ' → logprob: -11.25037670135498
    6. '               ' → logprob: -13.25037670135498
    7. '```' → logprob: -13.25037670135498
    8. '<|end|>' → logprob: -13.50037670135498
    9. '
' → logprob: -13.75037670135498
    10. '            
' → logprob: -13.87537670135498

Token 1181: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02420894242823124
    2. '           ' → logprob: -3.7742090225219727
    3. ' for' → logprob: -7.024209022521973
    4. '       ' → logprob: -10.274209022521973
    5. '```' → logprob: -10.274209022521973
    6. '``' → logprob: -13.149209022521973
    7. 'next' → logprob: -14.774209022521973
    8. '            
' → logprob: -15.024209022521973
    9. '
' → logprob: -15.024209022521973
    10. '   ' → logprob: -15.399209022521973

Token 1182: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012483276659622788
    2. '           ' → logprob: -7.001248359680176
    3. ' for' → logprob: -8.001248359680176
    4. '       ' → logprob: -13.626248359680176
    5. '   ' → logprob: -15.251248359680176
    6. '
' → logprob: -15.501248359680176
    7. '```' → logprob: -16.50124740600586
    8. '	for' → logprob: -16.75124740600586
    9. '            
' → logprob: -17.50124740600586
    10. '#' → logprob: -17.62624740600586

Token 1183: ' each' (ID: 2454)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.017270177602767944
    2. 'ns' → logprob: -4.517270088195801
    3. ' next' → logprob: -5.517270088195801
    4. 'state' → logprob: -6.267270088195801
    5. 'new' → logprob: -8.5172700881958
    6. ' ns' → logprob: -10.5172700881958
    7. 'nst' → logprob: -11.0172700881958
    8. ' state' → logprob: -11.5172700881958
    9. ' nxt' → logprob: -11.6422700881958
    10. 'n' → logprob: -12.0172700881958

Token 1184: ' valid' (ID: 4529)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0622134804725647
    2. ' next' → logprob: -2.81221342086792
    3. 'new' → logprob: -8.937213897705078
    4. 'ns' → logprob: -9.687213897705078
    5. '   ' → logprob: -10.312213897705078
    6. ' new' → logprob: -12.187213897705078
    7. ' nxt' → logprob: -12.562213897705078
    8. 'n' → logprob: -12.812213897705078
    9. 'state' → logprob: -12.937213897705078
    10. '(next' → logprob: -13.437213897705078

Token 1185: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.011241630651056767
    2. ' next' → logprob: -4.511241436004639
    3. 'new' → logprob: -8.886241912841797
    4. '   ' → logprob: -11.136241912841797
    5. 'state' → logprob: -11.136241912841797
    6. 'ns' → logprob: -11.511241912841797
    7. '(next' → logprob: -12.511241912841797
    8. '           ' → logprob: -13.011241912841797
    9. ' nxt' → logprob: -13.011241912841797
    10. '```' → logprob: -13.511241912841797

Token 1186: ' state' (ID: 2608)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.014449656009674072
    2. 'state' → logprob: -4.264449596405029
    3. '_states' → logprob: -8.264450073242188
    4. ' state' → logprob: -11.389450073242188
    5. '_positions' → logprob: -12.014450073242188
    6. '_pos' → logprob: -12.014450073242188
    7. '_position' → logprob: -13.514450073242188
    8. 'pos' → logprob: -13.764450073242188
    9. '           ' → logprob: -14.389450073242188
    10. '   ' → logprob: -14.639450073242188

Token 1187: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6604039072990417
    2. ',' → logprob: -1.0354039669036865
    3. ' in' → logprob: -2.1604039669036865
    4. ':' → logprob: -5.285403728485107
    5. ':
' → logprob: -6.035403728485107
    6. ' ,' → logprob: -6.410403728485107
    7. 'in' → logprob: -7.160403728485107
    8. ' for' → logprob: -7.660403728485107
    9. '```' → logprob: -7.660403728485107
    10. '               ' → logprob: -8.160404205322266

Token 1188: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11536123603582382
    2. '           ' → logprob: -2.740361213684082
    3. ' for' → logprob: -3.115361213684082
    4. '       ' → logprob: -11.115361213684082
    5. '               ' → logprob: -11.490361213684082
    6. '	       ' → logprob: -11.990361213684082
    7. '   ' → logprob: -12.740361213684082
    8. '	for' → logprob: -12.740361213684082
    9. '          ' → logprob: -13.115361213684082
    10. '```' → logprob: -13.365361213684082

Token 1189: ' not' (ID: 625)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.011080834083259106
    2. ' next' → logprob: -4.511080741882324
    3. '(next' → logprob: -10.761080741882324
    4. 'not' → logprob: -12.011080741882324
    5. 'state' → logprob: -12.761080741882324
    6. '	next' → logprob: -13.886080741882324
    7. '[next' → logprob: -14.386080741882324
    8. '_next' → logprob: -14.511080741882324
    9. 'new' → logprob: -15.511080741882324
    10. '.next' → logprob: -16.01108169555664

Token 1190: ' visited' (ID: 18416)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.023539412766695023
    2. ' in' → logprob: -3.7735393047332764
    3. 'visited' → logprob: -8.148539543151855
    4. ' visited' → logprob: -13.398539543151855
    5. '           ' → logprob: -14.148539543151855
    6. ' next' → logprob: -14.398539543151855
    7. 'next' → logprob: -14.648539543151855
    8. '_' → logprob: -15.023539543151855
    9. '
' → logprob: -15.523539543151855
    10. '   ' → logprob: -15.648539543151855

Token 1191: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31799769401550293
    2. 'in' → logprob: -1.317997694015503
    3. ':
' → logprob: -6.067997932434082
    4. '           ' → logprob: -6.817997932434082
    5. ':' → logprob: -7.317997932434082
    6. '               ' → logprob: -8.192997932434082
    7. ',' → logprob: -8.442997932434082
    8. '```' → logprob: -9.692997932434082
    9. '(next' → logprob: -10.567997932434082
    10. ' next' → logprob: -11.692997932434082

Token 1192: ' add' (ID: 1147)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.191985085606575
    2. 'if' → logprob: -2.6919851303100586
    3. 'for' → logprob: -3.0669851303100586
    4. ' if' → logprob: -4.066985130310059
    5. ' for' → logprob: -4.191985130310059
    6. '           ' → logprob: -4.316985130310059
    7. '```' → logprob: -5.441985130310059
    8. ':
' → logprob: -5.691985130310059
    9. '   ' → logprob: -6.316985130310059
    10. 'add' → logprob: -6.941985130310059

Token 1193: ' to' (ID: 316)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.21149267256259918
    2. 'to' → logprob: -1.961492657661438
    3. ' to' → logprob: -3.7114927768707275
    4. 'next' → logprob: -4.586492538452148
    5. ' next' → logprob: -4.961492538452148
    6. '(' → logprob: -6.211492538452148
    7. '           ' → logprob: -6.211492538452148
    8. '((' → logprob: -6.961492538452148
    9. ' (' → logprob: -7.211492538452148
    10. '```' → logprob: -8.086492538452148

Token 1194: ' queue' (ID: 13661)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.3133835196495056
    2. 'queue' → logprob: -1.3133835792541504
    3. ' queue' → logprob: -9.563383102416992
    4. ' visited' → logprob: -10.188383102416992
    5. '```' → logprob: -11.813383102416992
    6. 'the' → logprob: -12.563383102416992
    7. 'next' → logprob: -13.563383102416992
    8. '
' → logprob: -13.938383102416992
    9. '	queue' → logprob: -15.688383102416992
    10. 'deque' → logprob: -15.813383102416992

Token 1195: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006814239080995321
    2. 'for' → logprob: -5.381814002990723
    3. ' for' → logprob: -6.131814002990723
    4. '       ' → logprob: -11.756814002990723
    5. '```' → logprob: -12.506814002990723
    6. ',' → logprob: -13.506814002990723
    7. '          ' → logprob: -13.631814002990723
    8. '		' → logprob: -13.756814002990723
    9. '<|end|>' → logprob: -13.756814002990723
    10. '   ' → logprob: -13.881814002990723

Token 1196: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003961185284424573
    2. '```' → logprob: -7.875396251678467
    3. 'for' → logprob: -12.375395774841309
    4. '               ' → logprob: -12.750395774841309
    5. ' for' → logprob: -12.875395774841309
    6. '       ' → logprob: -13.000395774841309
    7. '   ' → logprob: -13.625395774841309
    8. '``' → logprob: -13.875395774841309
    9. '          ' → logprob: -14.500395774841309
    10. '`' → logprob: -15.125395774841309

Token 1197: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1819724291563034
    2. 'for' (adapté à ' for') → logprob: -2.1819725036621094
    3. ' for' → logprob: -2.9319725036621094
    4. '       ' → logprob: -9.05697250366211
    5. '   ' → logprob: -9.30697250366211
    6. '```' → logprob: -9.93197250366211
    7. '               ' → logprob: -11.93197250366211
    8. '``' → logprob: -14.55697250366211
    9. '		' → logprob: -14.68197250366211
    10. '	for' → logprob: -14.68197250366211

Token 1198: ' nxt' (ID: 160200)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.004182040691375732
    2. ' next' → logprob: -5.504181861877441
    3. 'state' → logprob: -10.004181861877441
    4. '   ' → logprob: -10.254181861877441
    5. 'ns' → logprob: -11.254181861877441
    6. '(next' → logprob: -12.379181861877441
    7. 'new' → logprob: -12.379181861877441
    8. ' nxt' → logprob: -14.504181861877441
    9. '[next' → logprob: -15.004181861877441
    10. ' state' → logprob: -15.254181861877441

Token 1199: ' in' (ID: 306)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0011233105324208736
    2. '_states' → logprob: -7.001123428344727
    3. '_' → logprob: -9.876123428344727
    4. 'state' → logprob: -10.001123428344727
    5. '_pos' → logprob: -10.251123428344727
    6. ' _' → logprob: -10.751123428344727
    7. ')_' → logprob: -11.376123428344727
    8. '_st' → logprob: -11.376123428344727
    9. '_s' → logprob: -12.001123428344727
    10. '_t' → logprob: -12.251123428344727

Token 1200: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.4752243459224701
    2. 'next' → logprob: -0.9752243757247925
    3. 'visited' → logprob: -8.350224494934082
    4. ' nxt' → logprob: -8.350224494934082
    5. 'n' → logprob: -8.850224494934082
    6. 'possible' → logprob: -8.975224494934082
    7. '[next' → logprob: -8.975224494934082
    8. ' visited' → logprob: -9.225224494934082
    9. ' possible' → logprob: -9.350224494934082
    10. '(next' → logprob: -9.850224494934082

Token 1201: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.00020246754866093397
    2. '_' → logprob: -9.750202178955078
    3. 'States' → logprob: -10.125202178955078
    4. '   ' → logprob: -10.250202178955078
    5. '```' → logprob: -11.125202178955078
    6. 'in' → logprob: -11.875202178955078
    7. '._' → logprob: -12.000202178955078
    8. ' _' → logprob: -12.125202178955078
    9. ' in' → logprob: -12.375202178955078
    10. '`' → logprob: -12.750202178955078

Token 1202: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6445758938789368
    2. ':
' → logprob: -1.269575834274292
    3. ':' → logprob: -1.769575834274292
    4. ' if' → logprob: -4.019576072692871
    5. ',' → logprob: -6.269576072692871
    6. '<|end|>' → logprob: -6.519576072692871
    7. '           ' → logprob: -7.894576072692871
    8. '):
' → logprob: -8.144576072692871
    9. '<|end|>' → logprob: -8.269576072692871
    10. '	           ' → logprob: -8.519576072692871

Token 1203: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009644615347497165
    2. ' if' → logprob: -7.375964641571045
    3. 'if' → logprob: -9.000964164733887
    4. '```' → logprob: -9.125964164733887
    5. '<|end|>' → logprob: -10.125964164733887
    6. '	           ' → logprob: -10.625964164733887
    7. '		       ' → logprob: -11.625964164733887
    8. '<|end|>' → logprob: -11.750964164733887
    9. ',' → logprob: -12.500964164733887
    10. '           ' → logprob: -13.125964164733887

Token 1204: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4647160768508911
    2. ' if' → logprob: -1.4647160768508911
    3. '               ' → logprob: -1.9647160768508911
    4. '           ' → logprob: -8.714715957641602
    5. '   ' → logprob: -9.214715957641602
    6. '                   ' → logprob: -9.589715957641602
    7. '	if' → logprob: -12.214715957641602
    8. '```' → logprob: -12.589715957641602
    9. '       ' → logprob: -12.714715957641602
    10. '	           ' → logprob: -13.464715957641602

Token 1205: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009760694578289986
    2. ' nxt' → logprob: -4.634760856628418
    3. '(n' → logprob: -13.009760856628418
    4. 'n't' → logprob: -14.509760856628418
    5. ' n' → logprob: -14.884760856628418
    6. 'x' → logprob: -15.134760856628418
    7. '	n' → logprob: -15.384760856628418
    8. 'not' → logprob: -15.509760856628418
    9. 'nx' → logprob: -15.884760856628418
    10. '   ' → logprob: -15.884760856628418

Token 1206: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2520345151424408
    2. 'not' → logprob: -1.5020345449447632
    3. '_not' → logprob: -9.377034187316895
    4. ')' → logprob: -12.002034187316895
    5. '	not' → logprob: -12.127034187316895
    6. '               ' → logprob: -12.627034187316895
    7. '<|end|>' → logprob: -13.002034187316895
    8. ':not' → logprob: -14.377034187316895
    9. '(not' → logprob: -14.377034187316895
    10. 'Not' → logprob: -14.877034187316895

Token 1207: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7026508450508118
    2. ' in' → logprob: -0.7026508450508118
    3. '<|end|>' → logprob: -5.327651023864746
    4. 'visited' → logprob: -5.827651023864746
    5. '                   ' → logprob: -8.077651023864746
    6. '               ' → logprob: -8.077651023864746
    7. '<|end|>' → logprob: -8.202651023864746
    8. ')' → logprob: -8.702651023864746
    9. '_' → logprob: -9.327651023864746
    10. ' visited' → logprob: -9.952651023864746

Token 1208: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -3.7697225252486533e-06
    2. ' visited' → logprob: -12.500003814697266
    3. '```' → logprob: -22.375003814697266
    4. '
' → logprob: -22.875003814697266
    5. '   ' → logprob: -23.125003814697266
    6. 'seen' → logprob: -23.625003814697266
    7. 'visible' → logprob: -24.750003814697266
    8. '`' → logprob: -25.125003814697266
    9. 'Visited' → logprob: -25.125003814697266
    10. 'visit' → logprob: -25.625003814697266

Token 1209: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.48318591713905334
    2. ':' → logprob: -1.358185887336731
    3. '                   ' → logprob: -2.2331860065460205
    4. '):
' → logprob: -4.983185768127441
    5. '               ' → logprob: -5.233185768127441
    6. '                       ' → logprob: -6.358185768127441
    7. '<|end|>' → logprob: -7.358185768127441
    8. ',' → logprob: -7.483185768127441
    9. '{' → logprob: -7.608185768127441
    10. '```' → logprob: -7.983185768127441

Token 1210: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0011915372451767325
    2. '               ' → logprob: -7.87619161605835
    3. '                       ' → logprob: -8.001191139221191
    4. '```' → logprob: -8.751191139221191
    5. '<|end|>' → logprob: -9.126191139221191
    6. '                           ' → logprob: -9.751191139221191
    7. '           ' → logprob: -10.126191139221191
    8. '                    
' → logprob: -10.376191139221191
    9. 'visited' → logprob: -11.251191139221191
    10. '                  ' → logprob: -11.501191139221191

Token 1211: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.04289447143673897
    2. '                   ' → logprob: -3.7928943634033203
    3. ' visited' → logprob: -4.04289436340332
    4. '                       ' → logprob: -6.29289436340332
    5. '   ' → logprob: -11.16789436340332
    6. '       ' → logprob: -11.29289436340332
    7. 'queue' → logprob: -11.54289436340332
    8. '```' → logprob: -11.66789436340332
    9. '               ' → logprob: -12.29289436340332
    10. '           ' → logprob: -12.66789436340332

Token 1212: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0021980751771479845
    2. '.' → logprob: -6.127198219299316
    3. '.update' → logprob: -11.877198219299316
    4. '.append' → logprob: -13.127198219299316
    5. '.setdefault' → logprob: -14.127198219299316
    6. '                   ' → logprob: -14.252198219299316
    7. '_add' → logprob: -14.627198219299316
    8. '.remove' → logprob: -14.877198219299316
    9. 'add' → logprob: -14.877198219299316
    10. '.enqueue' → logprob: -15.252198219299316

Token 1213: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.003181040519848466
    2. '(' → logprob: -5.753180980682373
    3. '(
' → logprob: -13.003181457519531
    4. '(x' → logprob: -14.253181457519531
    5. '((' → logprob: -15.753181457519531
    6. '(nx' → logprob: -15.753181457519531
    7. '(next' → logprob: -16.12818145751953
    8. 'n' → logprob: -17.75318145751953
    9. ' (' → logprob: -17.87818145751953
    10. '(noun' → logprob: -18.87818145751953

Token 1214: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -1.9361264946837764e-07
    2. 'x' → logprob: -17.0
    3. '   ' → logprob: -17.75
    4. 't' → logprob: -17.75
    5. '```' → logprob: -18.5
    6. '(' → logprob: -18.75
    7. '_xt' → logprob: -18.75
    8. '(n' → logprob: -18.75
    9. '
' → logprob: -19.0
    10. '_' → logprob: -19.125

Token 1215: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17876538634300232
    2. '                   ' → logprob: -2.053765296936035
    3. ')
' → logprob: -3.928765296936035
    4. ',' → logprob: -4.428765296936035
    5. '               ' → logprob: -5.928765296936035
    6. ',
' → logprob: -8.303765296936035
    7. '),' → logprob: -8.303765296936035
    8. '                       ' → logprob: -8.928765296936035
    9. '):
' → logprob: -9.053765296936035
    10. '```' → logprob: -9.053765296936035

Token 1216: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003942567389458418
    2. '```' → logprob: -5.753942489624023
    3. ',' → logprob: -8.253942489624023
    4. '                       ' → logprob: -8.503942489624023
    5. '``' → logprob: -8.628942489624023
    6. '               ' → logprob: -10.628942489624023
    7. 'queue' → logprob: -10.628942489624023
    8. '                    
' → logprob: -11.753942489624023
    9. '           ' → logprob: -11.753942489624023
    10. '   ' → logprob: -11.878942489624023

Token 1217: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -7.994086627149954e-05
    2. '                   ' → logprob: -9.750080108642578
    3. ' queue' → logprob: -10.750080108642578
    4. '   ' → logprob: -16.375080108642578
    5. '                       ' → logprob: -17.625080108642578
    6. '           ' → logprob: -17.625080108642578
    7. '               ' → logprob: -17.875080108642578
    8. '	queue' → logprob: -17.875080108642578
    9. '```' → logprob: -18.000080108642578
    10. '       ' → logprob: -19.250080108642578

Token 1218: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.5491004129871726e-05
    2. '.' → logprob: -10.375045776367188
    3. '.app' → logprob: -11.625045776367188
    4. '.enqueue' → logprob: -13.125045776367188
    5. '.extend' → logprob: -13.500045776367188
    6. '.p' → logprob: -14.500045776367188
    7. 'append' → logprob: -14.625045776367188
    8. '.put' → logprob: -15.625045776367188
    9. '.Append' → logprob: -15.750045776367188
    10. 'app' → logprob: -16.250045776367188

Token 1219: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.23031535744667053
    2. '(n' → logprob: -2.1053154468536377
    3. '(' → logprob: -2.4803154468536377
    4. ' (' → logprob: -8.855315208435059
    5. '(
' → logprob: -11.105315208435059
    6. '(('' → logprob: -11.480315208435059
    7. '((*' → logprob: -12.105315208435059
    8. ' ((' → logprob: -12.355315208435059
    9. '(next' → logprob: -13.105315208435059
    10. '(tuple' → logprob: -13.230315208435059

Token 1220: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002622894535306841
    2. '(n' → logprob: -8.250262260437012
    3. '   ' → logprob: -14.375262260437012
    4. ')n' → logprob: -15.000262260437012
    5. '       ' → logprob: -17.000263214111328
    6. '(' → logprob: -17.500263214111328
    7. ',n' → logprob: -17.625263214111328
    8. '```' → logprob: -17.750263214111328
    9. '
' → logprob: -17.875263214111328
    10. ' nxt' → logprob: -17.875263214111328

Token 1221: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -4.320199877838604e-07
    2. 'x' → logprob: -15.375
    3. 't' → logprob: -17.125
    4. '   ' → logprob: -17.625
    5. '(n' → logprob: -17.625
    6. '_xt' → logprob: -18.25
    7. '```' → logprob: -18.625
    8. 'n' → logprob: -19.125
    9. 'ext' → logprob: -19.5
    10. ')' → logprob: -19.875

Token 1222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.133198283147067e-05
    2. ' ,' → logprob: -10.000051498413086
    3. '                   ' → logprob: -13.250051498413086
    4. '```' → logprob: -13.875051498413086
    5. '<|end|>' → logprob: -14.750051498413086
    6. '[' → logprob: -14.875051498413086
    7. '               ' → logprob: -15.000051498413086
    8. '   ' → logprob: -15.125051498413086
    9. '`,' → logprob: -15.500051498413086
    10. '),' → logprob: -15.500051498413086

Token 1223: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.01814994215965271
    2. ' steps' → logprob: -4.0181498527526855
    3. '   ' → logprob: -18.268150329589844
    4. '                   ' → logprob: -19.268150329589844
    5. '               ' → logprob: -20.018150329589844
    6. 'step' → logprob: -20.018150329589844
    7. '_steps' → logprob: -20.643150329589844
    8. '.steps' → logprob: -21.018150329589844
    9. '       ' → logprob: -21.143150329589844
    10. '
' → logprob: -21.143150329589844

Token 1224: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02975129522383213
    2. ' +' → logprob: -3.5297513008117676
    3. '+
' → logprob: -14.65475082397461
    4. '＋' → logprob: -15.77975082397461
    5. '1' → logprob: -16.65475082397461
    6. '   ' → logprob: -17.02975082397461
    7. ')+' → logprob: -17.40475082397461
    8. ' +
' → logprob: -17.65475082397461
    9. ' plus' → logprob: -18.40475082397461
    10. '                   ' → logprob: -18.65475082397461

Token 1225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '   ' → logprob: -18.875
    4. '```' → logprob: -20.5
    5. '
' → logprob: -21.125
    6. ')' → logprob: -21.5
    7. '                   ' → logprob: -22.625
    8. '`' → logprob: -22.875
    9. '           ' → logprob: -23.0
    10. '       ' → logprob: -23.25

Token 1226: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005998577689751983
    2. '))
' → logprob: -7.5005998611450195
    3. ')' → logprob: -10.37559986114502
    4. '                   ' → logprob: -11.62559986114502
    5. '               ' → logprob: -12.25059986114502
    6. '           ' → logprob: -14.25059986114502
    7. ')))' → logprob: -14.62559986114502
    8. '       ' → logprob: -15.00059986114502
    9. '))
' → logprob: -15.62559986114502
    10. '   ' → logprob: -15.75059986114502

Token 1227: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1228: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.020684247836470604
    2. '__' → logprob: -3.895684242248535
    3. '_' → logprob: -9.770684242248535
    4. '___' → logprob: -10.145684242248535
    5. ' _' → logprob: -11.145684242248535
    6. '_name' → logprob: -11.645684242248535
    7. ' ___' → logprob: -11.895684242248535
    8. '____' → logprob: -12.395684242248535
    9. ''' → logprob: -12.645684242248535
    10. ' ' → logprob: -13.395684242248535

Token 1229: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03084203414618969
    2. ' ==' → logprob: -3.9058420658111572
    3. '==' → logprob: -5.405841827392578
    4. '_' → logprob: -6.905841827392578
    5. '__.__' → logprob: -7.030841827392578
    6. ' __' → logprob: -7.405841827392578
    7. '__":
' → logprob: -7.405841827392578
    8. '```' → logprob: -7.905841827392578
    9. 'name' → logprob: -8.405841827392578
    10. '=="' → logprob: -8.530841827392578

Token 1230: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.012901833280920982
    2. '==' → logprob: -4.637901782989502
    3. '=="' → logprob: -6.762901782989502
    4. '=='' → logprob: -6.887901782989502
    5. '__.__' → logprob: -7.887901782989502
    6. '```' → logprob: -8.38790225982666
    7. ' ==' → logprob: -9.26290225982666
    8. '___' → logprob: -9.88790225982666
    9. '____' → logprob: -10.13790225982666
    10. ''' → logprob: -10.38790225982666

Token 1231: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4224512279033661
    2. '==' → logprob: -1.4224512577056885
    3. '=="' → logprob: -2.6724512577056885
    4. ' ==' → logprob: -3.7974512577056885
    5. '=='' → logprob: -4.672451019287109
    6. '__.__' → logprob: -6.297451019287109
    7. '```' → logprob: -8.92245101928711
    8. '==
' → logprob: -9.29745101928711
    9. '()==' → logprob: -10.04745101928711
    10. '==='' → logprob: -10.17245101928711

Token 1232: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023258758708834648
    2. ''' → logprob: -3.773258686065674
    3. '__' → logprob: -11.523259162902832
    4. ' "__' → logprob: -13.148259162902832
    5. '"user' → logprob: -14.648259162902832
    6. '"name' → logprob: -15.523259162902832
    7. ''s' → logprob: -16.023258209228516
    8. ' '__' → logprob: -16.648258209228516
    9. '"value' → logprob: -16.648258209228516
    10. '("__' → logprob: -16.898258209228516

Token 1233: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.38132983446121216
    2. '__' → logprob: -1.3813297748565674
    3. ''' → logprob: -2.7563297748565674
    4. '"' → logprob: -6.2563300132751465
    5. 'name' → logprob: -8.256329536437988
    6. '```' → logprob: -10.381329536437988
    7. ''m' → logprob: -11.506329536437988
    8. ''name' → logprob: -11.631329536437988
    9. '__':
' → logprob: -11.756329536437988
    10. 'm' → logprob: -11.881329536437988

Token 1234: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.134795680642128
    2. '__' → logprob: -2.884795665740967
    3. '():
' → logprob: -3.134795665740967
    4. ':' → logprob: -4.509795665740967
    5. '__":
' → logprob: -4.509795665740967
    6. ':
' → logprob: -6.634795665740967
    7. '<|end|>' → logprob: -7.509795665740967
    8. '```' → logprob: -7.759795665740967
    9. '()' → logprob: -8.384796142578125
    10. '__:' → logprob: -8.509796142578125

Token 1235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.164206400513649
    2. 'solve' → logprob: -1.9142063856124878
    3. '```' → logprob: -5.664206504821777
    4. ' solve' → logprob: -8.039206504821777
    5. '    
' → logprob: -9.789206504821777
    6. '
' → logprob: -10.289206504821777
    7. '.solve' → logprob: -10.664206504821777
    8. '``' → logprob: -10.789206504821777
    9. '	s' → logprob: -11.039206504821777
    10. '`s' → logprob: -11.414206504821777

Token 1236: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -2.2842308680992573e-05
    2. '   ' → logprob: -10.750022888183594
    3. ' solve' → logprob: -13.750022888183594
    4. '.solve' → logprob: -15.375022888183594
    5. '```' → logprob: -17.125022888183594
    6. 'resolve' → logprob: -20.250022888183594
    7. 'import' → logprob: -21.500022888183594
    8. 's' → logprob: -21.500022888183594
    9. '    
' → logprob: -21.750022888183594
    10. '`' → logprob: -21.750022888183594

Token 1237: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04048794135451317
    2. '<|end|>' → logprob: -3.7904880046844482
    3. '():' → logprob: -4.665487766265869
    4. '```' → logprob: -5.415487766265869
    5. '()
' → logprob: -6.790487766265869
    6. ':' → logprob: -7.165487766265869
    7. '();' → logprob: -7.915487766265869
    8. '():
' → logprob: -8.790488243103027
    9. '(' → logprob: -8.915488243103027
    10. '
' → logprob: -9.040488243103027


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1235
Tokens correctement prédits (1ère position, stricte): 434
Tokens correctement prédits (1ère position, avec adaptation): 469
Tokens correctement prédits (top 10): 919
Précision stricte (1ère position): 35.14%
Précision adaptée (1ère position): 37.98%
Précision (top 10): 74.41%
================================================================================
