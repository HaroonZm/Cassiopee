================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
from sys import stdin

def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def lcm(a, b):
    return a // gcd(a, b) * b

input = stdin.readline
N, M = map(int, input().split())
A = list(map(int, [input().strip() for _ in range(N)]))
B = list(map(int, input().split()))

l = A[0]
for a in A[1:]:
    l = math.gcd(l, a)

r = B[0]
for b in B[1:]:
    r = lcm(r, b)

if l % r != 0:
    print(0)
    exit()

target = l // r
count = 0
i = 1
while i * i <= target:
    if target % i == 0:
        count += 1
        if target // i != i:
            count += 1
    i += 1

print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0010257817339152098
    2. '\' → logprob: -8.001026153564453
    3. '\n' → logprob: -8.376026153564453
    4. '<|end|>' → logprob: -9.001026153564453
    5. '```' → logprob: -9.251026153564453
    6. 'import' → logprob: -9.626026153564453
    7. '.pi' → logprob: -10.751026153564453
    8. '.e' → logprob: -10.876026153564453
    9. '<|end|>' → logprob: -11.126026153564453
    10. '.

' → logprob: -11.501026153564453

Token 4: ' sys' (ID: 12228)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.31677189469337463
    2. ' os' → logprob: -1.5667718648910522
    3. ' collections' → logprob: -4.191771984100342
    4. ' random' → logprob: -4.816771984100342
    5. ' statistics' → logprob: -4.816771984100342
    6. ' sys' → logprob: -5.191771984100342
    7. ' numpy' → logprob: -5.191771984100342
    8. 'math' → logprob: -5.191771984100342
    9. ' ' → logprob: -5.691771984100342
    10. '_' → logprob: -5.816771984100342

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.1824689656496048
    2. '.' → logprob: -2.182468891143799
    3. 'import' → logprob: -2.932468891143799
    4. '.import' → logprob: -8.182469367980957
    5. ' ' → logprob: -9.182469367980957
    6. ' .' → logprob: -9.307469367980957
    7. '```' → logprob: -9.432469367980957
    8. '<|end|>' → logprob: -10.307469367980957
    9. '	import' → logprob: -10.557469367980957
    10. ' im' → logprob: -11.182469367980957

Token 6: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.24348130822181702
    2. 'exit' → logprob: -1.8684812784194946
    3. ' argv' → logprob: -3.743481397628784
    4. ' exit' → logprob: -4.118481159210205
    5. 'import' → logprob: -4.993481159210205
    6. 'stdin' → logprob: -5.118481159210205
    7. 'stdout' → logprob: -5.118481159210205
    8. 'path' → logprob: -6.993481159210205
    9. ' stdin' → logprob: -7.493481159210205
    10. 'stderr' → logprob: -7.618481159210205

Token 7: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8107843399047852
    2. '\n' → logprob: -1.5607843399047852
    3. '.' → logprob: -2.185784339904785
    4. 'import' → logprob: -2.810784339904785
    5. '```' → logprob: -3.060784339904785
    6. '
' → logprob: -3.185784339904785
    7. 'print' → logprob: -3.685784339904785
    8. '\' → logprob: -3.810784339904785
    9. '

' → logprob: -4.685784339904785
    10. ',' → logprob: -4.685784339904785

Token 8: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6429493427276611
    2. '.' → logprob: -2.142949342727661
    3. 'def' → logprob: -2.142949342727661
    4. '\' → logprob: -3.017949342727661
    5. '\n' → logprob: -3.392949342727661
    6. '=' → logprob: -3.517949342727661
    7. 'import' → logprob: -3.892949342727661
    8. '`' → logprob: -4.267949104309082
    9. '
' → logprob: -4.392949104309082
    10. '```' → logprob: -4.392949104309082

Token 9: ' gcd' (ID: 106918)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0024783893022686243
    2. ' calculate' → logprob: -6.62747859954834
    3. '_' → logprob: -8.00247859954834
    4. ' factorial' → logprob: -8.37747859954834
    5. ' space' → logprob: -9.25247859954834
    6. ' math' → logprob: -9.75247859954834
    7. ' sqrt' → logprob: -9.75247859954834
    8. ' ' → logprob: -10.00247859954834
    9. ' factor' → logprob: -10.12747859954834
    10. ' main' → logprob: -10.25247859954834

Token 10: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004589973017573357
    2. '(a' → logprob: -5.504590034484863
    3. '(x' → logprob: -8.629590034484863
    4. ' (' → logprob: -9.254590034484863
    5. '_' → logprob: -9.629590034484863
    6. '<|end|>' → logprob: -9.879590034484863
    7. '<|end|>' → logprob: -10.504590034484863
    8. '(n' → logprob: -11.254590034484863
    9. '(
' → logprob: -11.379590034484863
    10. ')' → logprob: -11.629590034484863

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006744279526174068
    2. ' ,' → logprob: -8.0006742477417
    3. ',a' → logprob: -8.8756742477417
    4. ',)' → logprob: -9.0006742477417
    5. ',b' → logprob: -10.0006742477417
    6. ')' → logprob: -10.7506742477417
    7. ',int' → logprob: -13.3756742477417
    8. ',g' → logprob: -13.7506742477417
    9. ',n' → logprob: -14.0006742477417
    10. 'a' → logprob: -14.3756742477417

Token 12: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6931489109992981
    2. ' b' → logprob: -0.6931489109992981
    3. ' ' → logprob: -14.193148612976074
    4. ',b' → logprob: -14.693148612976074
    5. ',' → logprob: -15.443148612976074
    6. ')b' → logprob: -16.44314956665039
    7. ' ,' → logprob: -16.69314956665039
    8. ' ' → logprob: -16.94314956665039
    9. '>b' → logprob: -17.31814956665039
    10. '	b' → logprob: -17.31814956665039

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0068756877444684505
    2. ')' → logprob: -5.006875514984131
    3. '):
' → logprob: -8.881875991821289
    4. ',' → logprob: -11.256875991821289
    5. ':' → logprob: -12.506875991821289
    6. '),' → logprob: -13.881875991821289
    7. ' ):' → logprob: -14.006875991821289
    8. '):
' → logprob: -14.006875991821289
    9. '):

' → logprob: -14.631875991821289
    10. ')=' → logprob: -15.381875991821289

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04801374673843384
    2. ':' → logprob: -3.423013687133789
    3. ' ' → logprob: -5.423013687133789
    4. ' return' → logprob: -5.548013687133789
    5. ' :' → logprob: -5.923013687133789
    6. ':
' → logprob: -7.048013687133789
    7. '	return' → logprob: -7.548013687133789
    8. '    ' → logprob: -8.048013687133789
    9. ' :
' → logprob: -8.298013687133789
    10. ':return' → logprob: -8.423013687133789

Token 15: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1919804811477661
    2. ' if' → logprob: -2.0669803619384766
    3. ' while' → logprob: -3.6919803619384766
    4. ' return' → logprob: -4.191980361938477
    5. '    ' → logprob: -5.441980361938477
    6. 'if' → logprob: -6.191980361938477
    7. 'return' → logprob: -6.941980361938477
    8. '```' → logprob: -8.566980361938477
    9. 'while' (adapté à ' while') → logprob: -8.566980361938477
    10. '    
' → logprob: -9.316980361938477

Token 16: ' b' (ID: 287)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.13836756348609924
    2. 'a' → logprob: -2.1383676528930664
    3. ' b' → logprob: -4.638367652893066
    4. 'b' → logprob: -6.388367652893066
    5. '(a' → logprob: -11.763367652893066
    6. ' ' → logprob: -12.138367652893066
    7. '	a' → logprob: -12.263367652893066
    8. '   ' → logprob: -14.763367652893066
    9. ' (' → logprob: -14.763367652893066
    10. '_a' → logprob: -15.013367652893066

Token 17: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2127377986907959
    2. ' !=' → logprob: -1.712737798690796
    3. '!=' → logprob: -5.212738037109375
    4. ' and' → logprob: -6.212738037109375
    5. '>' → logprob: -6.462738037109375
    6. ' >' → logprob: -6.837738037109375
    7. ' :' → logprob: -7.212738037109375
    8. ' ' → logprob: -8.962738037109375
    9. ':
' → logprob: -9.337738037109375
    10. 'and' → logprob: -9.462738037109375

Token 18: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21026284992694855
    2. 'a' → logprob: -1.9602628946304321
    3. ' a' → logprob: -3.0852627754211426
    4. '   ' → logprob: -6.585262775421143
    5. '```' → logprob: -7.710262775421143
    6. '    ' → logprob: -8.3352632522583
    7. '0' → logprob: -8.9602632522583
    8. ' 
' → logprob: -8.9602632522583
    9. ',' → logprob: -9.8352632522583
    10. 'n' → logprob: -9.9602632522583

Token 19: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.5234032273292542
    2. ' a' → logprob: -0.8984032273292542
    3. '    ' → logprob: -9.39840316772461
    4. '   ' → logprob: -9.77340316772461
    5. '       ' → logprob: -9.89840316772461
    6. '	a' → logprob: -10.39840316772461
    7. 'temp' → logprob: -10.89840316772461
    8. ' temp' → logprob: -11.52340316772461
    9. 't' → logprob: -11.77340316772461
    10. '```' → logprob: -11.89840316772461

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000829759519547224
    2. ' ,' → logprob: -7.750829696655273
    3. '%' → logprob: -8.875829696655273
    4. ' %=' → logprob: -9.125829696655273
    5. '%,' → logprob: -9.500829696655273
    6. '%=' → logprob: -10.000829696655273
    7. '=' → logprob: -11.125829696655273
    8. ',b' → logprob: -11.750829696655273
    9. ' %' → logprob: -12.750829696655273
    10. ',%' → logprob: -13.750829696655273

Token 21: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.38688287138938904
    2. 'b' → logprob: -1.1368829011917114
    3. '<|end|>' → logprob: -11.511882781982422
    4. ' ' → logprob: -13.761882781982422
    5. '<|end|>' → logprob: -14.636882781982422
    6. '>b' → logprob: -16.386882781982422
    7. '	b' → logprob: -16.761882781982422
    8. 'space' → logprob: -16.886882781982422
    9. ' ' → logprob: -16.886882781982422
    10. '    ' → logprob: -17.261882781982422

Token 22: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931489109992981
    2. ' =' → logprob: -0.6931489109992981
    3. ',' → logprob: -13.818148612976074
    4. '   ' → logprob: -15.068148612976074
    5. ' ' → logprob: -16.56814956665039
    6. '<|end|>' → logprob: -17.06814956665039
    7. '.=' → logprob: -17.56814956665039
    8. '＝' → logprob: -17.69314956665039
    9. '```' → logprob: -17.69314956665039
    10. '    ' → logprob: -17.81814956665039

Token 23: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.026300642639398575
    2. 'b' → logprob: -3.6513006687164307
    3. ' ' → logprob: -15.526300430297852
    4. ' ' → logprob: -16.27630043029785
    5. '>b' → logprob: -17.27630043029785
    6. '	b' → logprob: -17.27630043029785
    7. ' б' → logprob: -17.83880043029785
    8. '```' → logprob: -17.83880043029785
    9. '<|end|>' → logprob: -17.90130043029785
    10. '    ' → logprob: -17.96380043029785

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036221661139279604
    2. ' ,' → logprob: -5.628622055053711
    3. 'a' → logprob: -11.253622055053711
    4. ',a' → logprob: -12.253622055053711
    5. ' ' → logprob: -13.378622055053711
    6. ' a' → logprob: -14.503622055053711
    7. '<|end|>' → logprob: -14.628622055053711
    8. '```' → logprob: -15.003622055053711
    9. ',
' → logprob: -15.128622055053711
    10. 'b' → logprob: -15.378622055053711

Token 25: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3868723213672638
    2. ' a' → logprob: -1.1368722915649414
    3. ' ' → logprob: -14.011872291564941
    4. '	a' → logprob: -14.761872291564941
    5. '<|end|>' → logprob: -17.386873245239258
    6. ' ' → logprob: -17.511873245239258
    7. '>a' → logprob: -17.761873245239258
    8. 'import' → logprob: -17.886873245239258
    9. '0' → logprob: -18.261873245239258
    10. 'math' → logprob: -18.386873245239258

Token 26: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6932047009468079
    2. ' %' → logprob: -0.6932047009468079
    3. ' ' → logprob: -10.443204879760742
    4. '%b' → logprob: -12.068204879760742
    5. '<|end|>' → logprob: -12.068204879760742
    6. ' %=' → logprob: -12.443204879760742
    7. 'a' → logprob: -12.568204879760742
    8. ' %
' → logprob: -12.943204879760742
    9. '%i' → logprob: -13.693204879760742
    10. '%
' → logprob: -13.943204879760742

Token 27: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0024756586644798517
    2. ' b' → logprob: -6.002475738525391
    3. ' ' → logprob: -17.62747573852539
    4. '	b' → logprob: -18.87747573852539
    5. '<|end|>' → logprob: -20.37747573852539
    6. ')b' → logprob: -20.75247573852539
    7. '>b' → logprob: -20.87747573852539
    8. '  ' → logprob: -20.87747573852539
    9. '```' → logprob: -21.37747573852539
    10. '%b' → logprob: -21.37747573852539

Token 28: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29861781001091003
    2. '<|end|>' → logprob: -1.9236178398132324
    3. '2' → logprob: -3.6736178398132324
    4. '1' → logprob: -4.173617839813232
    5. '```' → logprob: -4.298617839813232
    6. '\n' → logprob: -4.298617839813232
    7. ')' → logprob: -4.798617839813232
    8. ' 
' → logprob: -4.923617839813232
    9. '0' → logprob: -5.173617839813232
    10. '  
' → logprob: -5.423617839813232

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20013029873371124
    2. ' ' → logprob: -2.3251302242279053
    3. ' return' → logprob: -3.2001302242279053
    4. '<|end|>' → logprob: -4.325130462646484
    5. 'return' → logprob: -5.075130462646484
    6. '    ' → logprob: -5.325130462646484
    7. ' 
' → logprob: -5.325130462646484
    8. '       ' → logprob: -5.825130462646484
    9. '  ' → logprob: -5.950130462646484
    10. '    
' → logprob: -6.575130462646484

Token 30: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.27612370252609253
    2. 'return' (adapté à ' return') → logprob: -1.6511237621307373
    3. '   ' → logprob: -3.0261237621307373
    4. ' ' → logprob: -8.651124000549316
    5. ':return' → logprob: -8.776124000549316
    6. '```' → logprob: -9.026124000549316
    7. '	return' → logprob: -9.151124000549316
    8. ' 
' → logprob: -9.651124000549316
    9. '    ' → logprob: -9.776124000549316
    10. 'a' → logprob: -9.776124000549316

Token 31: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00861468818038702
    2. ' a' → logprob: -4.758614540100098
    3. '	a' → logprob: -16.758615493774414
    4. ' ' → logprob: -17.008615493774414
    5. '   ' → logprob: -18.758615493774414
    6. '_a' → logprob: -19.008615493774414
    7. ''a' → logprob: -19.133615493774414
    8. ' ' → logprob: -19.633615493774414
    9. '>a' → logprob: -20.133615493774414
    10. '  ' → logprob: -20.258615493774414

Token 32: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6830782890319824
    2. '
' → logprob: -1.0580782890319824
    3. 'def' → logprob: -2.0580782890319824
    4. '```' → logprob: -4.808078289031982
    5. '\n' → logprob: -5.308078289031982
    6. '
' → logprob: -6.433078289031982
    7. '<|end|>' → logprob: -6.808078289031982
    8. '    
' → logprob: -7.183078289031982
    9. 'newline' → logprob: -7.433078289031982
    10. ' 

' → logprob: -7.683078289031982

Token 33: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.062297262251377106
    2. '
' → logprob: -3.5622973442077637
    3. '

' → logprob: -3.5622973442077637
    4. '```' → logprob: -5.937297344207764
    5. '\n' → logprob: -8.937296867370605
    6. '  
' → logprob: -9.062296867370605
    7. '\' → logprob: -9.312296867370605
    8. ' 

' → logprob: -9.312296867370605
    9. '    
' → logprob: -9.437296867370605
    10. '
' → logprob: -9.687296867370605

Token 34: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.0041178190149366856
    2. ' main' → logprob: -5.754117965698242
    3. ' ' → logprob: -7.879117965698242
    4. 'l' → logprob: -8.504117965698242
    5. ' pow' → logprob: -10.004117965698242
    6. '  ' → logprob: -10.129117965698242
    7. ' calculate' → logprob: -10.504117965698242
    8. ' is' → logprob: -10.629117965698242
    9. ' solve' → logprob: -10.629117965698242
    10. ' cop' → logprob: -10.629117965698242

Token 35: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.00037955286097712815
    2. 'c' → logprob: -8.12537956237793
    3. 'cms' → logprob: -9.62537956237793
    4. '   ' → logprob: -11.25037956237793
    5. ' cm' → logprob: -14.25037956237793
    6. 'cmp' → logprob: -14.25037956237793
    7. 'cd' → logprob: -14.37537956237793
    8. '  ' → logprob: -14.75037956237793
    9. '
' → logprob: -15.12537956237793
    10. 'cmd' → logprob: -15.25037956237793

Token 36: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5760124921798706
    2. '(a' → logprob: -0.8260124921798706
    3. ' (' → logprob: -9.57601261138916
    4. '(
' → logprob: -14.07601261138916
    5. '(x' → logprob: -14.07601261138916
    6. '(A' → logprob: -14.82601261138916
    7. '(

' → logprob: -15.45101261138916
    8. '```' → logprob: -15.57601261138916
    9. '(n' → logprob: -15.82601261138916
    10. '(i' → logprob: -15.82601261138916

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.946405094116926e-05
    2. ' ,' → logprob: -9.500079154968262
    3. ',b' → logprob: -12.375079154968262
    4. ',a' → logprob: -15.000079154968262
    5. '_,' → logprob: -18.250080108642578
    6. ',
' → logprob: -18.375080108642578
    7. '‌,' → logprob: -18.375080108642578
    8. '`,' → logprob: -18.625080108642578
    9. ' ' → logprob: -18.750080108642578
    10. '，' → logprob: -18.750080108642578

Token 38: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3132631182670593
    2. ' b' → logprob: -1.313263177871704
    3. ' ' → logprob: -13.938262939453125
    4. ')b' → logprob: -15.438262939453125
    5. '   ' → logprob: -16.063262939453125
    6. ',b' → logprob: -16.813262939453125
    7. '    ' → logprob: -16.938262939453125
    8. '  ' → logprob: -17.188262939453125
    9. ')' → logprob: -17.688262939453125
    10. '	b' → logprob: -17.813262939453125

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00024834630312398076
    2. ')' → logprob: -8.375247955322266
    3. '):
' → logprob: -11.125247955322266
    4. ':' → logprob: -13.750247955322266
    5. ' ):' → logprob: -13.750247955322266
    6. '):
' → logprob: -15.125247955322266
    7. '   ' → logprob: -15.500247955322266
    8. ',' → logprob: -16.500247955322266
    9. ')：' → logprob: -16.750247955322266
    10. '),' → logprob: -17.000247955322266

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013077369658276439
    2. ' return' → logprob: -6.876307964324951
    3. ' a' → logprob: -8.626307487487793
    4. '    ' → logprob: -9.751307487487793
    5. ' ' → logprob: -11.751307487487793
    6. '    
' → logprob: -12.001307487487793
    7. ' (' → logprob: -12.501307487487793
    8. ' =' → logprob: -12.501307487487793
    9. 'return' → logprob: -12.626307487487793
    10. '=' → logprob: -12.751307487487793

Token 41: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5995369553565979
    2. '   ' → logprob: -0.8495369553565979
    3. 'return' (adapté à ' return') → logprob: -4.224536895751953
    4. ' a' → logprob: -4.849536895751953
    5. ' (' → logprob: -7.599536895751953
    6. 'a' → logprob: -8.849536895751953
    7. '    ' → logprob: -9.224536895751953
    8. ' math' → logprob: -9.974536895751953
    9. ' abs' → logprob: -10.349536895751953
    10. ' ' → logprob: -11.349536895751953

Token 42: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.37995004653930664
    2. ' a' → logprob: -1.2549500465393066
    3. ' (' → logprob: -3.8799500465393066
    4. '(a' → logprob: -5.004950046539307
    5. ' abs' → logprob: -5.754950046539307
    6. 'abs' → logprob: -8.004949569702148
    7. '(abs' → logprob: -9.379949569702148
    8. ' ' → logprob: -10.754949569702148
    9. '(' → logprob: -10.879949569702148
    10. '   ' → logprob: -11.254949569702148

Token 43: ' //' (ID: 602)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.043147630989551544
    2. '*' → logprob: -3.168147563934326
    3. ' ' → logprob: -9.543148040771484
    4. ' //' → logprob: -9.668148040771484
    5. ' ' → logprob: -12.418148040771484
    6. '*b' → logprob: -12.543148040771484
    7. '**' → logprob: -13.543148040771484
    8. '//' → logprob: -13.793148040771484
    9. '```' → logprob: -13.918148040771484
    10. ' **' → logprob: -14.168148040771484

Token 44: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -9.126521035796031e-05
    2. ' gcd' → logprob: -9.375091552734375
    3. 'math' → logprob: -12.000091552734375
    4. 'b' → logprob: -16.625091552734375
    5. ' math' → logprob: -17.250091552734375
    6. '   ' → logprob: -17.250091552734375
    7. ' ' → logprob: -17.875091552734375
    8. 'gc' → logprob: -18.125091552734375
    9. '  ' → logprob: -18.250091552734375
    10. '_g' → logprob: -18.375091552734375

Token 45: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.004079589620232582
    2. '(' → logprob: -5.504079818725586
    3. 'a' → logprob: -14.629079818725586
    4. ' (' → logprob: -14.629079818725586
    5. '(
' → logprob: -15.879079818725586
    6. '(s' → logprob: -17.004079818725586
    7. '```' → logprob: -17.129079818725586
    8. '(math' → logprob: -17.379079818725586
    9. '(b' → logprob: -17.504079818725586
    10. '(abs' → logprob: -17.629079818725586

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015991295222193003
    2. ',b' → logprob: -6.876599311828613
    3. ' ,' → logprob: -8.001599311828613
    4. 'b' → logprob: -8.376599311828613
    5. ')' → logprob: -14.501599311828613
    6. ' b' → logprob: -15.751599311828613
    7. 'a' → logprob: -16.376598358154297
    8. '   ' → logprob: -16.501598358154297
    9. ',
' → logprob: -16.626598358154297
    10. ' ' → logprob: -16.876598358154297

Token 47: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011048762127757072
    2. ' b' → logprob: -4.511048793792725
    3. ')b' → logprob: -13.886048316955566
    4. '	b' → logprob: -17.386049270629883
    5. ')' → logprob: -17.511049270629883
    6. ' ' → logprob: -17.511049270629883
    7. ' б' → logprob: -19.636049270629883
    8. '>b' → logprob: -19.886049270629883
    9. ' )' → logprob: -20.136049270629883
    10. '<|end|>' → logprob: -20.261049270629883

Token 48: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00316489115357399
    2. ' )' → logprob: -5.878164768218994
    3. ',' → logprob: -8.378165245056152
    4. ')*' → logprob: -9.378165245056152
    5. '*' → logprob: -11.253165245056152
    6. ')b' → logprob: -11.753165245056152
    7. 'b' → logprob: -12.628165245056152
    8. '),' → logprob: -12.753165245056152
    9. '*b' → logprob: -12.878165245056152
    10. ' ' → logprob: -12.878165245056152

Token 49: ' *' (ID: 425)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10039051622152328
    2. ' b' → logprob: -2.3503904342651367
    3. '```' → logprob: -8.850390434265137
    4. '*b' → logprob: -10.975390434265137
    5. '(b' → logprob: -12.475390434265137
    6. ' ' → logprob: -12.600390434265137
    7. '   ' → logprob: -12.725390434265137
    8. '    ' → logprob: -12.725390434265137
    9. '(' → logprob: -12.725390434265137
    10. ' *' → logprob: -13.225390434265137

Token 50: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.7610454708337784e-05
    2. ' b' → logprob: -10.500027656555176
    3. '	b' → logprob: -19.50002670288086
    4. ')b' → logprob: -21.62502670288086
    5. ' ' → logprob: -21.87502670288086
    6. '   ' → logprob: -22.00002670288086
    7. '```' → logprob: -22.50002670288086
    8. '  ' → logprob: -22.62502670288086
    9. '<|end|>' → logprob: -23.12502670288086
    10. '*b' → logprob: -23.37502670288086

Token 51: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20159247517585754
    2. '<|end|>' → logprob: -2.201592445373535
    3. 'def' → logprob: -3.576592445373535
    4. '```' → logprob: -3.951592445373535
    5. '

' → logprob: -4.076592445373535
    6. '\n' → logprob: -5.326592445373535
    7. '<|end|>' → logprob: -7.076592445373535
    8. 'newline' → logprob: -7.826592445373535
    9. '  
' → logprob: -8.076592445373535
    10. '#' → logprob: -8.201592445373535

Token 52: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10354670137166977
    2. 'n' → logprob: -2.478546619415283
    3. 'for' → logprob: -4.728546619415283
    4. '
' → logprob: -5.853546619415283
    5. 'd' → logprob: -6.728546619415283
    6. '\' → logprob: -7.603546619415283
    7. '#' → logprob: -7.853546619415283
    8. '\n' → logprob: -8.353547096252441
    9. 'a' → logprob: -9.478547096252441
    10. 'x' → logprob: -9.978547096252441

Token 53: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.49711257219314575
    2. '(' → logprob: -1.497112512588501
    3. '_data' → logprob: -2.872112512588501
    4. 's' → logprob: -3.247112512588501
    5. '_' → logprob: -3.497112512588501
    6. ' =' → logprob: -4.37211275100708
    7. '=' → logprob: -4.37211275100708
    8. '_line' → logprob: -4.74711275100708
    9. '_lines' → logprob: -5.99711275100708
    10. 'data' → logprob: -6.49711275100708

Token 54: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.03828498721122742
    2. ' stdin' → logprob: -3.28828501701355
    3. '(stdin' → logprob: -8.788285255432129
    4. 'input' → logprob: -9.538285255432129
    5. '.stdin' → logprob: -12.038285255432129
    6. 'int' → logprob: -12.288285255432129
    7. ' input' → logprob: -12.663285255432129
    8. 'lambda' → logprob: -12.913285255432129
    9. 'stdout' → logprob: -13.663285255432129
    10. 'std' → logprob: -14.538285255432129

Token 55: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.002049028407782316
    2. '.read' → logprob: -6.627048969268799
    3. '.' → logprob: -7.377048969268799
    4. '.readlines' → logprob: -9.252049446105957
    5. 'read' → logprob: -14.877049446105957
    6. '().' → logprob: -15.002049446105957
    7. '```' → logprob: -15.252049446105957
    8. ' readline' → logprob: -15.627049446105957
    9. '.get' → logprob: -16.62704849243164
    10. '.strip' → logprob: -16.75204849243164

Token 56: '
' (ID: 198)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -1.0376816987991333
    2. '()' → logprob: -1.1626816987991333
    3. '()

' → logprob: -1.1626816987991333
    4. '
' → logprob: -4.537681579589844
    5. '(' → logprob: -5.537681579589844
    6. '()\' → logprob: -6.412681579589844
    7. '(
' → logprob: -6.537681579589844
    8. '

' → logprob: -7.162681579589844
    9. 'def' → logprob: -7.662681579589844
    10. '()
' → logprob: -7.787681579589844

Token 57: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7088733911514282
    2. 'def' → logprob: -0.9588733911514282
    3. '
' → logprob: -2.2088732719421387
    4. '

' → logprob: -4.958873271942139
    5. 'number' → logprob: -6.208873271942139
    6. '\' → logprob: -6.458873271942139
    7. 't' → logprob: -6.708873271942139
    8. '\n' → logprob: -7.333873271942139
    9. 'num' → logprob: -7.458873271942139
    10. 'a' → logprob: -7.958873271942139

Token 58: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04832354187965393
    2. '=' → logprob: -3.423323631286621
    3. ' ' → logprob: -4.298323631286621
    4. ',' → logprob: -7.798323631286621
    5. ')' → logprob: -8.923323631286621
    6. ' ,' → logprob: -9.423323631286621
    7. '.' → logprob: -10.048323631286621
    8. '  ' → logprob: -10.173323631286621
    9. ' )' → logprob: -10.298323631286621
    10. '=int' → logprob: -10.298323631286621

Token 59: ' M' (ID: 391)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15519127249717712
    2. ' M' → logprob: -2.28019118309021
    3. ' K' → logprob: -4.155191421508789
    4. 'input' → logprob: -4.780191421508789
    5. 'M' → logprob: -5.530191421508789
    6. ' input' → logprob: -5.655191421508789
    7. '<|end|>' → logprob: -6.405191421508789
    8. 'space' → logprob: -6.530191421508789
    9. '  ' → logprob: -6.780191421508789
    10. 'K' → logprob: -7.030191421508789

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0336541123688221
    2. '=' → logprob: -3.40865421295166
    3. ' ' → logprob: -12.15865421295166
    4. ',' → logprob: -13.53365421295166
    5. '=input' → logprob: -13.78365421295166
    6. '=int' → logprob: -15.65865421295166
    7. ')' → logprob: -16.033653259277344
    8. ' =
' → logprob: -16.408653259277344
    9. '=line' → logprob: -16.658653259277344
    10. ' =)' → logprob: -16.658653259277344

Token 61: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0007585270795971155
    2. 'map' → logprob: -7.250758647918701
    3. ' input' → logprob: -10.375758171081543
    4. ' list' → logprob: -11.125758171081543
    5. ' ' → logprob: -13.250758171081543
    6. 'input' → logprob: -14.750758171081543
    7. ' [' → logprob: -15.625758171081543
    8. '	map' → logprob: -16.12575912475586
    9. ' tuple' → logprob: -16.62575912475586
    10. 'list' → logprob: -17.00075912475586

Token 62: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.044192779809236526
    2. '(input' → logprob: -3.7941927909851074
    3. '(int' → logprob: -3.9191927909851074
    4. '(str' → logprob: -7.419192790985107
    5. '(lambda' → logprob: -9.16919231414795
    6. '(list' → logprob: -10.29419231414795
    7. '()' → logprob: -11.04419231414795
    8. '(tuple' → logprob: -11.16919231414795
    9. '<|end|>' → logprob: -11.41919231414795
    10. ' (' → logprob: -11.41919231414795

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8016889095306396
    2. '(input' → logprob: -1.0516889095306396
    3. ',input' → logprob: -1.6766889095306396
    4. '(' → logprob: -4.301689147949219
    5. ' ,' → logprob: -7.051689147949219
    6. 'input' → logprob: -8.551689147949219
    7. '(stdin' → logprob: -8.926689147949219
    8. '(),' → logprob: -9.051689147949219
    9. '=input' → logprob: -10.176689147949219
    10. '(int' → logprob: -10.176689147949219

Token 64: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.387175589799881
    2. ' input' → logprob: -1.1371755599975586
    3. ')' → logprob: -8.512175559997559
    4. ' ' → logprob: -10.387175559997559
    5. ' )' → logprob: -10.762175559997559
    6. 'str' → logprob: -11.012175559997559
    7. 'int' → logprob: -11.387175559997559
    8. ' str' → logprob: -12.262175559997559
    9. '(input' → logprob: -12.762175559997559
    10. '<input' → logprob: -13.387175559997559

Token 65: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0004534334584604949
    2. '()' → logprob: -7.750453472137451
    3. '())' → logprob: -11.000452995300293
    4. ' ().' → logprob: -12.250452995300293
    5. '()
' → logprob: -14.125452995300293
    6. ')' → logprob: -15.625452995300293
    7. '()))' → logprob: -16.87545394897461
    8. ' ()' → logprob: -16.87545394897461
    9. '()`' → logprob: -17.00045394897461
    10. '(' → logprob: -17.12545394897461

Token 66: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.2588357627391815
    2. 'strip' → logprob: -1.508835792541504
    3. 'rstrip' → logprob: -5.008835792541504
    4. '().' → logprob: -8.758835792541504
    5. ')' → logprob: -10.758835792541504
    6. 'read' → logprob: -12.133835792541504
    7. '())' → logprob: -12.258835792541504
    8. '()' → logprob: -12.258835792541504
    9. '(split' → logprob: -12.508835792541504
    10. ' split' → logprob: -12.633835792541504

Token 67: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1728823482990265
    2. ')' → logprob: -1.922882318496704
    3. '()' → logprob: -4.422882556915283
    4. '))' → logprob: -7.922882556915283
    5. '()))' → logprob: -9.297882080078125
    6. '(' → logprob: -9.422882080078125
    7. '('' → logprob: -11.422882080078125
    8. '(),' → logprob: -11.422882080078125
    9. '())
' → logprob: -12.797882080078125
    10. ')")' → logprob: -12.922882080078125

Token 68: 'A' (ID: 32)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.8305487632751465
    2. 'a' → logprob: -1.4555487632751465
    3. ' numbers' → logprob: -2.4555487632751465
    4. '
' → logprob: -2.4555487632751465
    5. ' 
' → logprob: -2.9555487632751465
    6. 'arr' → logprob: -4.0805487632751465
    7. 'A' → logprob: -4.3305487632751465
    8. 'values' → logprob: -4.3305487632751465
    9. 'nums' → logprob: -4.3305487632751465
    10. 'lst' → logprob: -4.5805487632751465

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.024618562310934067
    2. '=' → logprob: -3.774618625640869
    3. '[' → logprob: -6.899618625640869
    4. ',' → logprob: -9.399618148803711
    5. ' ' → logprob: -9.524618148803711
    6. 's' → logprob: -9.774618148803711
    7. '.' → logprob: -9.899618148803711
    8. '_' → logprob: -10.024618148803711
    9. ' =[' → logprob: -10.774618148803711
    10. '[]' → logprob: -11.024618148803711

Token 70: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.16023662686347961
    2. ' list' → logprob: -1.9102365970611572
    3. '[' → logprob: -12.660236358642578
    4. '[]' → logprob: -12.785236358642578
    5. 'map' → logprob: -12.785236358642578
    6. '(list' → logprob: -13.410236358642578
    7. '[list' → logprob: -13.535236358642578
    8. ' [' → logprob: -15.410236358642578
    9. ' []' → logprob: -16.035236358642578
    10. '	list' → logprob: -16.160236358642578

Token 71: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.029804181307554245
    2. '(' → logprob: -3.529804229736328
    3. '(int' → logprob: -9.904804229736328
    4. '(range' → logprob: -13.904804229736328
    5. '(s' → logprob: -14.779804229736328
    6. '(m' → logprob: -14.779804229736328
    7. '()' → logprob: -14.904804229736328
    8. '(list' → logprob: -14.904804229736328
    9. ' (' → logprob: -15.529804229736328
    10. '(eval' → logprob: -15.904804229736328

Token 72: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0010481736389920115
    2. '(' → logprob: -6.8760480880737305
    3. 'int' → logprob: -11.50104808807373
    4. '<int' → logprob: -13.12604808807373
    5. '[int' → logprob: -13.62604808807373
    6. '=int' → logprob: -14.12604808807373
    7. ',int' → logprob: -14.75104808807373
    8. ' (' → logprob: -14.87604808807373
    9. '(lambda' → logprob: -16.126049041748047
    10. '(str' → logprob: -16.251049041748047

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5853162407875061
    2. '(input' → logprob: -1.2103161811828613
    3. ',input' → logprob: -2.3353161811828613
    4. '(' → logprob: -3.0853161811828613
    5. '(int' → logprob: -6.460316181182861
    6. ',int' → logprob: -7.835316181182861
    7. ' ,' → logprob: -7.960316181182861
    8. ')' → logprob: -10.08531665802002
    9. ' (' → logprob: -10.21031665802002
    10. '(),' → logprob: -10.21031665802002

Token 74: ' [' (ID: 723)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.38687586784362793
    2. ' input' → logprob: -1.136875867843628
    3. '(input' → logprob: -13.761876106262207
    4. 'lambda' → logprob: -13.761876106262207
    5. ' ' → logprob: -14.386876106262207
    6. ',input' → logprob: -14.886876106262207
    7. 'stdin' → logprob: -15.011876106262207
    8. ' lambda' → logprob: -15.261876106262207
    9. '<input' → logprob: -15.386876106262207
    10. '   ' → logprob: -15.761876106262207

Token 75: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0015170073602348566
    2. ' input' → logprob: -6.501516819000244
    3. '(input' → logprob: -11.626517295837402
    4. ' ' → logprob: -14.001517295837402
    5. '=input' → logprob: -14.501517295837402
    6. ',input' → logprob: -14.501517295837402
    7. '  ' → logprob: -14.626517295837402
    8. '	input' → logprob: -14.751517295837402
    9. 'in' → logprob: -14.751517295837402
    10. 'x' → logprob: -14.751517295837402

Token 76: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0011749862460419536
    2. '()' → logprob: -6.7511749267578125
    3. '.strip' → logprob: -13.251174926757812
    4. '()]' → logprob: -13.876174926757812
    5. ' ().' → logprob: -14.126174926757812
    6. '()].' → logprob: -14.251174926757812
    7. '.' → logprob: -15.626174926757812
    8. '.rstrip' → logprob: -16.376174926757812
    9. 'rstrip' → logprob: -16.501174926757812
    10. '()

' → logprob: -16.626174926757812

Token 77: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.16022950410842896
    2. 'rstrip' → logprob: -1.9102294445037842
    3. ' strip' → logprob: -13.410229682922363
    4. ' ' → logprob: -14.035229682922363
    5. '().' → logprob: -14.660229682922363
    6. ')' → logprob: -14.785229682922363
    7. '(strip' → logprob: -14.910229682922363
    8. 'r' → logprob: -14.910229682922363
    9. '()' → logprob: -15.035229682922363
    10. '.strip' → logprob: -15.160229682922363

Token 78: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011492675403133035
    2. '()]' → logprob: -6.8761491775512695
    3. 'for' → logprob: -10.25114917755127
    4. '())' → logprob: -10.50114917755127
    5. '()
' → logprob: -11.62614917755127
    6. '())))' → logprob: -11.62614917755127
    7. ' ()' → logprob: -11.75114917755127
    8. '(),' → logprob: -12.37614917755127
    9. '()))' → logprob: -12.50114917755127
    10. ')' → logprob: -12.50114917755127

Token 79: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39095446467399597
    2. ' for' → logprob: -1.7659544944763184
    3. '()' → logprob: -1.8909544944763184
    4. ']))' → logprob: -6.765954494476318
    5. ')' → logprob: -8.89095401763916
    6. ']' → logprob: -9.14095401763916
    7. '	for' → logprob: -9.64095401763916
    8. '()]' → logprob: -9.76595401763916
    9. ')))' → logprob: -9.89095401763916
    10. '()))' → logprob: -11.39095401763916

Token 80: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5247675776481628
    2. ' _' → logprob: -0.8997675776481628
    3. ' range' → logprob: -6.6497673988342285
    4. ' in' → logprob: -9.024767875671387
    5. 'range' → logprob: -9.274767875671387
    6. '_range' → logprob: -9.399767875671387
    7. ' ' → logprob: -10.524767875671387
    8. ' i' → logprob: -11.649767875671387
    9. '_in' → logprob: -12.774767875671387
    10. '_i' → logprob: -13.024767875671387

Token 81: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.736869215965271
    2. 'in' → logprob: -0.986869215965271
    3. ' in' → logprob: -1.986869215965271
    4. ' range' → logprob: -4.4868693351745605
    5. ' ' → logprob: -8.486868858337402
    6. '  ' → logprob: -10.236868858337402
    7. 'i' → logprob: -11.736868858337402
    8. '   ' → logprob: -12.736868858337402
    9. 'N' → logprob: -12.986868858337402
    10. 'ran' → logprob: -13.236868858337402

Token 82: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.020561041310429573
    2. ' range' → logprob: -3.8955609798431396
    3. ' ' → logprob: -11.770561218261719
    4. '   ' → logprob: -12.895561218261719
    5. '	range' → logprob: -13.145561218261719
    6. 'rang' → logprob: -13.270561218261719
    7. '(range' → logprob: -13.520561218261719
    8. '  ' → logprob: -13.645561218261719
    9. 'r' → logprob: -14.520561218261719
    10. 'ran' → logprob: -14.770561218261719

Token 83: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0002198676229454577
    2. '(' → logprob: -8.50022029876709
    3. 'N' → logprob: -11.12522029876709
    4. ' (' → logprob: -14.25022029876709
    5. '(
' → logprob: -15.25022029876709
    6. '(n' → logprob: -15.25022029876709
    7. '(M' → logprob: -15.50022029876709
    8. ' N' → logprob: -16.125219345092773
    9. '(int' → logprob: -16.625219345092773
    10. '	N' → logprob: -17.125219345092773

Token 84: ')]' (ID: 15710)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.004367459565401077
    2. ']' → logprob: -5.504367351531982
    3. '])))' → logprob: -8.25436782836914
    4. '])' → logprob: -11.50436782836914
    5. ']))
' → logprob: -12.50436782836914
    6. ')]' → logprob: -12.50436782836914
    7. '))' → logprob: -12.50436782836914
    8. ' ]' → logprob: -12.75436782836914
    9. ')))' → logprob: -13.87936782836914
    10. ']))

' → logprob: -13.87936782836914

Token 85: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0017472924664616585
    2. ')' → logprob: -6.376747131347656
    3. ')))' → logprob: -10.751747131347656
    4. '))
' → logprob: -11.501747131347656
    5. ']))' → logprob: -12.251747131347656
    6. '])' → logprob: -12.626747131347656
    7. ' ))' → logprob: -12.626747131347656
    8. '()))' → logprob: -14.001747131347656
    9. '),' → logprob: -14.751747131347656
    10. ''))' → logprob: -15.876747131347656

Token 86: 'B' (ID: 33)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3481360375881195
    2. 'result' → logprob: -1.973136067390442
    3. 'g' → logprob: -2.2231359481811523
    4. 'current' → logprob: -4.473135948181152
    5. '
' → logprob: -4.848135948181152
    6. 'answer' → logprob: -5.098135948181152
    7. 'x' → logprob: -5.848135948181152
    8. 'ans' → logprob: -5.973135948181152
    9. 'a' → logprob: -6.098135948181152
    10. 't' → logprob: -6.473135948181152

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193095207214355
    2. '=' → logprob: -1.5019309520721436
    3. '=[]' → logprob: -14.626931190490723
    4. ',' → logprob: -15.251931190490723
    5. ' ' → logprob: -15.251931190490723
    6. ')' → logprob: -15.376931190490723
    7. '=list' → logprob: -15.376931190490723
    8. '.' → logprob: -15.626931190490723
    9. '[' → logprob: -15.751931190490723
    10. '＝' → logprob: -17.126930236816406

Token 88: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5759448409080505
    2. 'list' → logprob: -0.8259448409080505
    3. 'set' → logprob: -12.700944900512695
    4. ' set' → logprob: -13.575944900512695
    5. 'List' → logprob: -14.950944900512695
    6. '[' → logprob: -16.200944900512695
    7. '=list' → logprob: -16.450944900512695
    8. 'map' → logprob: -16.825944900512695
    9. '_list' → logprob: -16.950944900512695
    10. ' [' → logprob: -16.950944900512695

Token 89: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023777034133672714
    2. '(map' → logprob: -3.7737770080566406
    3. ' (' → logprob: -8.02377700805664
    4. '(list' → logprob: -9.02377700805664
    5. '(int' → logprob: -10.27377700805664
    6. '(m' → logprob: -11.39877700805664
    7. '(range' → logprob: -11.64877700805664
    8. '(
' → logprob: -12.27377700805664
    9. '(math' → logprob: -12.39877700805664
    10. '(s' → logprob: -12.64877700805664

Token 90: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.1994775377388578e-05
    2. '(' → logprob: -12.000012397766113
    3. 'int' → logprob: -12.750012397766113
    4. ' (' → logprob: -13.625012397766113
    5. '<int' → logprob: -14.625012397766113
    6. '=int' → logprob: -14.875012397766113
    7. ',int' → logprob: -15.000012397766113
    8. ')(' → logprob: -16.250011444091797
    9. '(lambda' → logprob: -16.250011444091797
    10. '```' → logprob: -16.250011444091797

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021437009796500206
    2. '(int' → logprob: -4.021437168121338
    3. ',int' → logprob: -6.396437168121338
    4. '(' → logprob: -6.771437168121338
    5. ' ,' → logprob: -8.02143669128418
    6. ',(' → logprob: -10.02143669128418
    7. ' (' → logprob: -10.27143669128418
    8. 'int' → logprob: -10.64643669128418
    9. '(),' → logprob: -11.64643669128418
    10. '```' → logprob: -11.89643669128418

Token 92: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.513004720211029
    2. '(int' → logprob: -1.2630047798156738
    3. ' int' → logprob: -2.263004779815674
    4. '[int' → logprob: -4.388004779815674
    5. ' (' → logprob: -7.013004779815674
    6. 'input' → logprob: -7.888004779815674
    7. ' input' → logprob: -8.763004302978516
    8. ' ' → logprob: -9.138004302978516
    9. 'map' → logprob: -9.388004302978516
    10. '[' → logprob: -9.513004302978516

Token 93: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.451116051815916e-05
    2. '()' → logprob: -11.375024795532227
    3. '.' → logprob: -12.125024795532227
    4. '(' → logprob: -12.500024795532227
    5. ' ().' → logprob: -12.500024795532227
    6. '(.' → logprob: -16.250024795532227
    7. '.split' → logprob: -17.500024795532227
    8. '()).' → logprob: -19.000024795532227
    9. ' .' → logprob: -19.125024795532227
    10. ')' → logprob: -19.125024795532227

Token 94: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.31330806016921997
    2. 'strip' → logprob: -1.3133080005645752
    3. 'rstrip' → logprob: -10.813307762145996
    4. '().' → logprob: -11.563307762145996
    5. 's' → logprob: -11.688307762145996
    6. 'spl' → logprob: -13.563307762145996
    7. 'plit' → logprob: -13.688307762145996
    8. '()' → logprob: -13.813307762145996
    9. '(split' → logprob: -13.938307762145996
    10. ' strip' → logprob: -14.188307762145996

Token 95: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.49487102031707764
    2. '())' → logprob: -0.9948710203170776
    3. '()' → logprob: -3.994871139526367
    4. '))' → logprob: -6.744871139526367
    5. ')' → logprob: -6.994871139526367
    6. '()))
' → logprob: -10.744871139526367
    7. '(' → logprob: -10.994871139526367
    8. '()));' → logprob: -11.869871139526367
    9. '())))' → logprob: -12.369871139526367
    10. '()),' → logprob: -12.494871139526367

Token 96: 'l' (ID: 75)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.1046698093414307
    2. 'l' → logprob: -1.2296698093414307
    3. 'result' → logprob: -2.2296698093414307
    4. '
' → logprob: -2.3546698093414307
    5. 'for' → logprob: -3.4796698093414307
    6. 'answer' → logprob: -3.4796698093414307
    7. '#' → logprob: -3.7296698093414307
    8. 'a' → logprob: -4.229669570922852
    9. 'answers' → logprob: -4.854669570922852
    10. 'count' → logprob: -4.979669570922852

Token 97: ' =' (ID: 314)
  Prédit: 'cm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.323564738035202
    2. '_' → logprob: -2.0735647678375244
    3. '_c' → logprob: -2.9485647678375244
    4. 'c' → logprob: -3.5735647678375244
    5. ' =' → logprob: -4.073564529418945
    6. '_cm' → logprob: -4.073564529418945
    7. 'C' → logprob: -4.448564529418945
    8. '=' → logprob: -4.948564529418945
    9. 'CM' → logprob: -5.448564529418945
    10. 'ist' → logprob: -6.073564529418945

Token 98: ' A' (ID: 355)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4247359335422516
    2. 'l' → logprob: -1.5497359037399292
    3. 'A' → logprob: -2.0497360229492188
    4. 'B' → logprob: -6.549736022949219
    5. ' ' → logprob: -6.549736022949219
    6. '0' → logprob: -7.299736022949219
    7. ' l' → logprob: -7.424736022949219
    8. ' A' → logprob: -7.924736022949219
    9. 'lc' → logprob: -8.549736022949219
    10. 'a' → logprob: -10.049736022949219

Token 99: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003662020608317107
    2. '[-' → logprob: -8.0003662109375
    3. '0' → logprob: -11.1253662109375
    4. 'cm' → logprob: -11.3753662109375
    5. '[len' → logprob: -13.7503662109375
    6. 'ength' → logprob: -13.8753662109375
    7. ' [' → logprob: -14.6253662109375
    8. '-' → logprob: -14.8753662109375
    9. '[l' → logprob: -15.5003662109375
    10. 'og' → logprob: -15.7503662109375

Token 100: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00044092073221690953
    2. '-' → logprob: -7.750441074371338
    3. ' ' → logprob: -11.75044059753418
    4. ' -' → logprob: -13.12544059753418
    5. '1' → logprob: -15.75044059753418
    6. '   ' → logprob: -17.18794059753418
    7. 'len' → logprob: -17.31294059753418
    8. '[' → logprob: -17.43794059753418
    9. '۰' → logprob: -17.50044059753418
    10. ']' → logprob: -17.93794059753418

Token 101: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06473329663276672
    2. '<|end|>' → logprob: -2.9397332668304443
    3. ' )' → logprob: -5.564733505249023
    4. ']' → logprob: -5.814733505249023
    5. ')
' → logprob: -7.064733505249023
    6. '
' → logprob: -7.064733505249023
    7. '<|end|>' → logprob: -7.314733505249023
    8. '])' → logprob: -8.064733505249023
    9. ' ' → logprob: -10.314733505249023
    10. 'for' → logprob: -10.439733505249023

Token 102: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: ' a' (ID: 261)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16856376826763153
    2. ' a' → logprob: -2.4185638427734375
    3. 'i' → logprob: -3.4185638427734375
    4. 'a' → logprob: -3.5435638427734375
    5. ' x' → logprob: -6.0435638427734375
    6. ' ' → logprob: -6.9185638427734375
    7. 'x' → logprob: -7.7935638427734375
    8. ' ai' → logprob: -7.7935638427734375
    9. 'ai' → logprob: -9.918563842773438
    10. '	i' → logprob: -10.543563842773438

Token 104: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021148184314370155
    2. 'in' → logprob: -3.896148204803467
    3. ' ' → logprob: -7.521148204803467
    4. 'a' → logprob: -10.771147727966309
    5. '_' → logprob: -11.021147727966309
    6. ' a' → logprob: -12.021147727966309
    7. '_in' → logprob: -12.521147727966309
    8. ' _' → logprob: -12.521147727966309
    9. '  ' → logprob: -12.646147727966309
    10. ' i' → logprob: -12.771147727966309

Token 105: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06196914613246918
    2. ' A' → logprob: -2.811969041824341
    3. '	A' → logprob: -13.936968803405762
    4. ' ' → logprob: -14.686968803405762
    5. '(A' → logprob: -16.811969757080078
    6. '[A' → logprob: -17.686969757080078
    7. '  ' → logprob: -17.811969757080078
    8. 's' → logprob: -17.811969757080078
    9. '   ' → logprob: -17.936969757080078
    10. '>A' → logprob: -17.936969757080078

Token 106: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.016043871641159058
    2. ':' → logprob: -4.141043663024902
    3. ':
' → logprob: -11.891043663024902
    4. '1' → logprob: -13.266043663024902
    5. ' :' → logprob: -14.641043663024902
    6. '[:' → logprob: -16.14104461669922
    7. '```' → logprob: -16.26604461669922
    8. '：' → logprob: -16.51604461669922
    9. 'skip' → logprob: -16.89104461669922
    10. '[l' → logprob: -17.26604461669922

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0087516784551553e-05
    2. ':' → logprob: -12.00001049041748
    3. ' ' → logprob: -13.12501049041748
    4. '):' → logprob: -14.12501049041748
    5. '   ' → logprob: -15.12501049041748
    6. ']):' → logprob: -15.12501049041748
    7. '[' → logprob: -15.75001049041748
    8. '):
' → logprob: -16.625009536743164
    9. '(' → logprob: -16.750009536743164
    10. '])' → logprob: -17.000009536743164

Token 108: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0906163901090622
    2. ']:' → logprob: -2.465616464614868
    3. ':]' → logprob: -6.590616226196289
    4. ' :' → logprob: -9.465616226196289
    5. 'a' → logprob: -9.965616226196289
    6. '():' → logprob: -10.215616226196289
    7. '}:' → logprob: -10.465616226196289
    8. ':l' → logprob: -10.590616226196289
    9. ']:
' → logprob: -10.840616226196289
    10. ':],' → logprob: -10.965616226196289

Token 109: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.014416282996535301
    2. ']:
' → logprob: -4.389416217803955
    3. ']' → logprob: -6.764416217803955
    4. ' ]' → logprob: -7.889416217803955
    5. ':' → logprob: -8.639416694641113
    6. ']:
' → logprob: -8.889416694641113
    7. 'a' → logprob: -10.639416694641113
    8. ' ' → logprob: -11.639416694641113
    9. 's' → logprob: -12.264416694641113
    10. '   ' → logprob: -12.514416694641113

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019165784120559692
    2. ' l' → logprob: -4.144165992736816
    3. 'l' → logprob: -6.519165992736816
    4. '    
' → logprob: -7.269165992736816
    5. '<|end|>' → logprob: -7.894165992736816
    6. '	l' → logprob: -8.394165992736816
    7. ' 
' → logprob: -9.519165992736816
    8. '  ' → logprob: -9.644165992736816
    9. '       ' → logprob: -9.644165992736816
    10. ' ' → logprob: -10.144165992736816

Token 111: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.010615038685500622
    2. '   ' → logprob: -4.76061487197876
    3. 'l' (adapté à ' l') → logprob: -6.76061487197876
    4. ' 
' → logprob: -8.135615348815918
    5. '
' → logprob: -8.510615348815918
    6. '	l' → logprob: -8.885615348815918
    7. '```' → logprob: -9.510615348815918
    8. '    
' → logprob: -9.760615348815918
    9. '<|end|>' → logprob: -10.385615348815918
    10. ' ' → logprob: -11.135615348815918

Token 112: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931615471839905
    2. ' =' → logprob: -0.6931615471839905
    3. ' *=' → logprob: -11.943161964416504
    4. ' ' → logprob: -12.318161964416504
    5. '*=' → logprob: -13.318161964416504
    6. '=l' → logprob: -15.818161964416504
    7. '=int' → logprob: -15.943161964416504
    8. ' ^=' → logprob: -15.943161964416504
    9. ' |=' → logprob: -15.943161964416504
    10. '   ' → logprob: -16.068161010742188

Token 113: ' math' (ID: 13324)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.42871198058128357
    2. ' l' → logprob: -1.053712010383606
    3. '	l' → logprob: -12.428711891174316
    4. ' ' → logprob: -13.178711891174316
    5. '```' → logprob: -13.678711891174316
    6. 'math' → logprob: -14.053711891174316
    7. '*l' → logprob: -14.553711891174316
    8. ' math' → logprob: -14.803711891174316
    9. '(l' → logprob: -14.803711891174316
    10. '   ' → logprob: -15.053711891174316

Token 114: '.g' (ID: 1940)
  Prédit: '.l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.011125989258289337
    2. '.g' → logprob: -4.8861260414123535
    3. '.' → logprob: -5.8861260414123535
    4. 'l' → logprob: -8.136125564575195
    5. '.ceil' → logprob: -8.636125564575195
    6. '.prod' → logprob: -9.511125564575195
    7. '.factor' → logprob: -10.511125564575195
    8. ' l' → logprob: -10.636125564575195
    9. 'g' → logprob: -10.761125564575195
    10. '.floor' → logprob: -11.136125564575195

Token 115: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0027707628905773163
    2. 'c' → logprob: -6.752770900726318
    3. 'l' → logprob: -7.002770900726318
    4. 'cdf' → logprob: -7.752770900726318
    5. 'CD' → logprob: -9.25277042388916
    6. 'a' → logprob: -9.37777042388916
    7. 'd' → logprob: -11.12777042388916
    8. '(a' → logprob: -12.00277042388916
    9. '```' → logprob: -12.25277042388916
    10. 'dc' → logprob: -12.75277042388916

Token 116: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0008572661899961531
    2. '(' → logprob: -7.125857353210449
    3. 'l' → logprob: -9.87585735321045
    4. '(a' → logprob: -14.37585735321045
    5. ' l' → logprob: -15.00085735321045
    6. ',l' → logprob: -15.50085735321045
    7. '(
' → logprob: -16.250856399536133
    8. '/l' → logprob: -16.500856399536133
    9. '	l' → logprob: -16.625856399536133
    10. ' (' → logprob: -17.125856399536133

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007118130102753639
    2. ',a' → logprob: -5.132118225097656
    3. 'a' → logprob: -6.757118225097656
    4. ' ,' → logprob: -10.882118225097656
    5. ' a' → logprob: -13.507118225097656
    6. '(a' → logprob: -13.507118225097656
    7. ',
' → logprob: -13.632118225097656
    8. ',l' → logprob: -13.757118225097656
    9. 'l' → logprob: -14.632118225097656
    10. ',

' → logprob: -15.507118225097656

Token 118: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02054235339164734
    2. ' a' → logprob: -3.8955423831939697
    3. '	a' → logprob: -15.39554214477539
    4. ' ' → logprob: -15.89554214477539
    5. '   ' → logprob: -16.64554214477539
    6. '  ' → logprob: -17.64554214477539
    7. ')a' → logprob: -18.52054214477539
    8. '(a' → logprob: -18.89554214477539
    9. '    ' → logprob: -18.89554214477539
    10. ' ' → logprob: -19.02054214477539

Token 119: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00047487911069765687
    2. ' )' → logprob: -8.00047492980957
    3. ',' → logprob: -9.25047492980957
    4. ')
' → logprob: -11.12547492980957
    5. ')a' → logprob: -11.75047492980957
    6. '   ' → logprob: -12.25047492980957
    7. ',a' → logprob: -12.50047492980957
    8. 'a' → logprob: -12.62547492980957
    9. ' ' → logprob: -13.25047492980957
    10. '<|end|>' → logprob: -13.25047492980957

Token 120: 'r' (ID: 81)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.879403293132782
    2. 'l' → logprob: -1.1294033527374268
    3. '<|end|>' → logprob: -2.5044033527374268
    4. 'for' → logprob: -3.2544033527374268
    5. '_' → logprob: -4.004403114318848
    6. 'c' → logprob: -4.004403114318848
    7. ')' → logprob: -4.004403114318848
    8. '.' → logprob: -4.629403114318848
    9. '*l' → logprob: -5.004403114318848
    10. '/' → logprob: -5.004403114318848

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014457757584750652
    2. '=' → logprob: -4.264457702636719
    3. ',' → logprob: -8.889457702636719
    4. ' ' → logprob: -9.014457702636719
    5. '_' → logprob: -11.389457702636719
    6. 'm' → logprob: -12.014457702636719
    7. '  ' → logprob: -12.014457702636719
    8. ' ,' → logprob: -13.139457702636719
    9. 'c' → logprob: -13.264457702636719
    10. ' =
' → logprob: -13.514457702636719

Token 122: ' B' (ID: 418)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.8972491025924683
    2. 'B' → logprob: -1.0222491025924683
    3. 'l' → logprob: -2.397249221801758
    4. 'max' → logprob: -2.772249221801758
    5. ' M' → logprob: -3.897249221801758
    6. '1' → logprob: -3.897249221801758
    7. ' B' → logprob: -4.522249221801758
    8. 'math' → logprob: -4.647249221801758
    9. '0' → logprob: -5.272249221801758
    10. ' max' → logprob: -5.522249221801758

Token 123: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001312617096118629
    2. '0' → logprob: -6.751312732696533
    3. '[-' → logprob: -9.876312255859375
    4. '.copy' → logprob: -10.501312255859375
    5. '[:]' → logprob: -11.001312255859375
    6. '.' → logprob: -11.251312255859375
    7. '[::-' → logprob: -12.376312255859375
    8. '[min' → logprob: -12.376312255859375
    9. '<|end|>' → logprob: -12.376312255859375
    10. 'min' → logprob: -12.751312255859375

Token 124: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.875004768371582
    3. ':' → logprob: -13.375004768371582
    4. '[' → logprob: -15.250004768371582
    5. '۰' → logprob: -16.0625057220459
    6. ')' → logprob: -16.1250057220459
    7. '-' → logprob: -16.1250057220459
    8. '<|end|>' → logprob: -16.2500057220459
    9. ']' → logprob: -16.3125057220459
    10. '...' → logprob: -17.2500057220459

Token 125: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01225956529378891
    2. ')
' → logprob: -4.637259483337402
    3. '<|end|>' → logprob: -6.387259483337402
    4. '
' → logprob: -7.512259483337402
    5. 'for' → logprob: -9.262259483337402
    6. '  
' → logprob: -10.262259483337402
    7. ' )' → logprob: -10.512259483337402
    8. 'r' → logprob: -10.887259483337402
    9. '```' → logprob: -11.512259483337402
    10. ')

' → logprob: -11.762259483337402

Token 126: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.166338137816638e-05
    2. ' for' → logprob: -10.375031471252441
    3. '<|end|>' → logprob: -15.250031471252441
    4. 'from' → logprob: -16.625032424926758
    5. '```' → logprob: -17.875032424926758
    6. '
' → logprob: -18.500032424926758
    7. 'r' → logprob: -19.250032424926758
    8. '	for' → logprob: -20.125032424926758
    9. ')' → logprob: -20.875032424926758
    10. 'import' → logprob: -21.000032424926758

Token 127: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2654610574245453
    2. 'b' → logprob: -1.5154610872268677
    3. ' B' → logprob: -4.640460968017578
    4. 'B' → logprob: -5.640460968017578
    5. ' ' → logprob: -8.515460968017578
    6. ' r' → logprob: -11.265460968017578
    7. 'r' → logprob: -12.390460968017578
    8. '  ' → logprob: -12.640460968017578
    9. '   ' → logprob: -12.765460968017578
    10. '	b' → logprob: -13.390460968017578

Token 128: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008650618605315685
    2. 'in' → logprob: -5.008650779724121
    3. ' ' → logprob: -6.258650779724121
    4. ',' → logprob: -11.758650779724121
    5. 's' → logprob: -13.133650779724121
    6. ' i' → logprob: -13.258650779724121
    7. 'n' → logprob: -13.258650779724121
    8. 'B' → logprob: -13.383650779724121
    9. '  ' → logprob: -13.758650779724121
    10. ' ,' → logprob: -13.883650779724121

Token 129: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.043000224977731705
    2. ' B' → logprob: -3.1680002212524414
    3. ' ' → logprob: -14.543000221252441
    4. '<|end|>' → logprob: -14.793000221252441
    5. 'b' → logprob: -16.293001174926758
    6. '	B' → logprob: -16.543001174926758
    7. '>B' → logprob: -17.418001174926758
    8. '(B' → logprob: -17.543001174926758
    9. '_B' → logprob: -17.668001174926758
    10. '[' → logprob: -18.168001174926758

Token 130: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.28117114305496216
    2. 'in' → logprob: -1.9061710834503174
    3. ':' → logprob: -2.6561710834503174
    4. '1' → logprob: -3.9061710834503174
    5. ' in' → logprob: -5.1561713218688965
    6. 's' → logprob: -8.906170845031738
    7. 'r' → logprob: -10.156170845031738
    8. '[in' → logprob: -10.531170845031738
    9. 'from' → logprob: -10.781170845031738
    10. '):' → logprob: -10.781170845031738

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2246291337069124e-05
    2. ':' → logprob: -11.625021934509277
    3. ' ' → logprob: -12.250021934509277
    4. '[' → logprob: -12.750021934509277
    5. ']:' → logprob: -13.000021934509277
    6. '):' → logprob: -13.750021934509277
    7. ']):' → logprob: -14.375021934509277
    8. ']' → logprob: -15.000021934509277
    9. '   ' → logprob: -15.250021934509277
    10. ':]' → logprob: -15.625021934509277

Token 132: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0038371365517377853
    2. ']:' → logprob: -6.0038371086120605
    3. 'r' → logprob: -8.253837585449219
    4. ':r' → logprob: -8.378837585449219
    5. '):' → logprob: -8.503837585449219
    6. ':]' → logprob: -8.878837585449219
    7. ':b' → logprob: -8.878837585449219
    8. ':B' → logprob: -9.253837585449219
    9. 'b' → logprob: -9.503837585449219
    10. 's' → logprob: -10.128837585449219

Token 133: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04838567227125168
    2. ':
' → logprob: -3.4233856201171875
    3. '   ' → logprob: -5.4233856201171875
    4. 'r' → logprob: -6.0483856201171875
    5. ',' → logprob: -6.2983856201171875
    6. '):
' → logprob: -6.5483856201171875
    7. ']:
' → logprob: -7.0483856201171875
    8. ' :' → logprob: -7.1733856201171875
    9. '<|end|>' → logprob: -7.5483856201171875
    10. ' r' → logprob: -7.6733856201171875

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06502354890108109
    2. 'r' → logprob: -3.06502366065979
    3. ' r' → logprob: -4.190023422241211
    4. '
' → logprob: -8.565023422241211
    5. ' if' → logprob: -8.565023422241211
    6. '	r' → logprob: -8.690023422241211
    7. '```' → logprob: -8.940023422241211
    8. 'b' → logprob: -8.940023422241211
    9. ' ' → logprob: -9.315023422241211
    10. '    
' → logprob: -9.815023422241211

Token 135: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.003630600171163678
    2. ' r' → logprob: -5.753630638122559
    3. 'if' → logprob: -8.253630638122559
    4. ' if' → logprob: -8.753630638122559
    5. '   ' → logprob: -10.628630638122559
    6. '
' → logprob: -12.503630638122559
    7. ' ' → logprob: -13.503630638122559
    8. 'b' → logprob: -13.503630638122559
    9. '    
' → logprob: -13.503630638122559
    10. '```' → logprob: -13.753630638122559

Token 136: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575951099395752
    2. ' =' → logprob: -0.825951099395752
    3. ' ' → logprob: -12.075950622558594
    4. '   ' → logprob: -13.825950622558594
    5. ',' → logprob: -14.200950622558594
    6. '=int' → logprob: -14.200950622558594
    7. ' &=' → logprob: -14.575950622558594
    8. '  ' → logprob: -14.575950622558594
    9. ' =
' → logprob: -15.450950622558594
    10. 'math' → logprob: -15.575950622558594

Token 137: ' l' (ID: 305)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.41214680671691895
    2. 'math' → logprob: -1.162146806716919
    3. 'min' → logprob: -4.78714656829834
    4. ' min' → logprob: -4.91214656829834
    5. 'b' → logprob: -5.41214656829834
    6. ' b' → logprob: -6.16214656829834
    7. 'r' → logprob: -6.78714656829834
    8. ' l' → logprob: -7.41214656829834
    9. ' r' → logprob: -7.78714656829834
    10. 'l' → logprob: -7.91214656829834

Token 138: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -8.006006828509271e-05
    2. 'cms' → logprob: -9.625080108642578
    3. 'c' → logprob: -12.125080108642578
    4. 'min' → logprob: -12.625080108642578
    5. 'cmath' → logprob: -13.000080108642578
    6. 'math' → logprob: -13.375080108642578
    7. 'cmb' → logprob: -14.750080108642578
    8. 'm' → logprob: -15.250080108642578
    9. 'sm' → logprob: -15.875080108642578
    10. 'cmp' → logprob: -16.250080108642578

Token 139: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0015079588629305363
    2. '(' → logprob: -6.501507759094238
    3. 'r' → logprob: -12.251507759094238
    4. ' (' → logprob: -15.251507759094238
    5. '(b' → logprob: -15.501507759094238
    6. '(
' → logprob: -15.751507759094238
    7. '(l' → logprob: -16.376508712768555
    8. '(rb' → logprob: -16.751508712768555
    9. '((' → logprob: -17.751508712768555
    10. '(math' → logprob: -18.001508712768555

Token 140: ',' (ID: 11)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.035227276384830475
    2. ',' → logprob: -3.7852272987365723
    3. ',b' → logprob: -5.160227298736572
    4. '(' → logprob: -5.160227298736572
    5. 'b' → logprob: -8.160226821899414
    6. ' b' → logprob: -9.410226821899414
    7. ' ,' → logprob: -10.660226821899414
    8. ' (' → logprob: -11.535226821899414
    9. '(
' → logprob: -12.035226821899414
    10. ')b' → logprob: -12.160226821899414

Token 141: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02054363675415516
    2. ' b' → logprob: -3.8955435752868652
    3. ')b' → logprob: -14.145544052124023
    4. ' ' → logprob: -14.520544052124023
    5. '	b' → logprob: -15.645544052124023
    6. ')' → logprob: -16.145544052124023
    7. '(b' → logprob: -16.145544052124023
    8. '<|end|>' → logprob: -16.770544052124023
    9. '   ' → logprob: -17.145544052124023
    10. ',b' → logprob: -17.270544052124023

Token 142: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.869017852295656e-06
    2. ')
' → logprob: -12.000006675720215
    3. ' )' → logprob: -14.625006675720215
    4. ')

' → logprob: -16.62500762939453
    5. '))' → logprob: -17.12500762939453
    6. '())' → logprob: -18.75000762939453
    7. '()' → logprob: -19.25000762939453
    8. ')#' → logprob: -19.37500762939453
    9. ')`' → logprob: -19.50000762939453
    10. '   ' → logprob: -19.50000762939453

Token 143: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03283841162919998
    2. ' 
' → logprob: -4.282838344573975
    3. '<|end|>' → logprob: -4.532838344573975
    4. 'if' → logprob: -6.157838344573975
    5. ' if' → logprob: -6.407838344573975
    6. '

' → logprob: -6.532838344573975
    7. ' ' → logprob: -6.657838344573975
    8. '\n' → logprob: -8.157838821411133
    9. ' 

' → logprob: -8.657838821411133
    10. '  
' → logprob: -8.907838821411133

Token 144: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.017776206135749817
    2. ' r' → logprob: -4.517776012420654
    3. 'l' → logprob: -5.142776012420654
    4. ' ' → logprob: -7.642776012420654
    5. 'r' → logprob: -8.142776489257812
    6. ' ' → logprob: -9.892776489257812
    7. '  ' → logprob: -10.892776489257812
    8. '	l' → logprob: -11.392776489257812
    9. ' (' → logprob: -12.142776489257812
    10. '   ' → logprob: -13.267776489257812

Token 145: ' %' (ID: 1851)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.05828849971294403
    2. '==' → logprob: -3.68328857421875
    3. ' <=' → logprob: -3.80828857421875
    4. ' %' → logprob: -5.05828857421875
    5. ' >=' → logprob: -6.68328857421875
    6. '%' → logprob: -7.55828857421875
    7. ' >' → logprob: -7.93328857421875
    8. '<=' → logprob: -8.05828857421875
    9. ' ' → logprob: -8.55828857421875
    10. ' !=' → logprob: -8.80828857421875

Token 146: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0036292888689786196
    2. ' r' → logprob: -5.628629207611084
    3. '=' → logprob: -11.253629684448242
    4. 'l' → logprob: -11.753629684448242
    5. '0' → logprob: -13.253629684448242
    6. ' ' → logprob: -13.628629684448242
    7. '2' → logprob: -13.628629684448242
    8. '=r' → logprob: -13.753629684448242
    9. '==' → logprob: -14.503629684448242
    10. '	r' → logprob: -14.628629684448242

Token 147: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4703638255596161
    2. ' ==' → logprob: -1.0953638553619385
    3. '!=' → logprob: -4.095363616943359
    4. ' !=' → logprob: -4.220363616943359
    5. ':' → logprob: -4.720363616943359
    6. '=' → logprob: -7.970363616943359
    7. ' :' → logprob: -9.47036361694336
    8. ' =' → logprob: -9.84536361694336
    9. ' ' → logprob: -10.84536361694336
    10. ')' → logprob: -11.72036361694336

Token 148: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12693072855472565
    2. ' ' → logprob: -2.1269307136535645
    3. '=' → logprob: -13.751931190490723
    4. '1' → logprob: -14.626931190490723
    5. ' ' → logprob: -15.251931190490723
    6. '  ' → logprob: -15.251931190490723
    7. '<|end|>' → logprob: -15.626931190490723
    8. 's' → logprob: -16.751930236816406
    9. '۰' → logprob: -16.876930236816406
    10. ')' → logprob: -16.939430236816406

Token 149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.084206375409849e-05
    2. ' ' → logprob: -10.125041007995605
    3. '1' → logprob: -15.375041007995605
    4. '=' → logprob: -15.375041007995605
    5. '<|end|>' → logprob: -16.50004005432129
    6. '۰' → logprob: -16.87504005432129
    7. '  ' → logprob: -18.31254005432129
    8. ' ' → logprob: -18.56254005432129
    9. '```' → logprob: -18.81254005432129
    10. ')' → logprob: -18.87504005432129

Token 150: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016909420082811266
    2. ':
' → logprob: -8.875168800354004
    3. ' :' → logprob: -10.500168800354004
    4. '):' → logprob: -14.125168800354004
    5. ':return' → logprob: -15.125168800354004
    6. ' or' → logprob: -15.750168800354004
    7. '.' → logprob: -16.37516975402832
    8. ' and' → logprob: -16.62516975402832
    9. ':**' → logprob: -16.62516975402832
    10. ':

' → logprob: -16.62516975402832

Token 151: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.013361032120883465
    2. '   ' → logprob: -4.388360977172852
    3. ' print' → logprob: -7.513360977172852
    4. '0' → logprob: -8.138360977172852
    5. '```' → logprob: -12.263360977172852
    6. '	print' → logprob: -13.013360977172852
    7. '  ' → logprob: -13.138360977172852
    8. ' ' → logprob: -13.888360977172852
    9. '    
' → logprob: -14.513360977172852
    10. '
' → logprob: -14.888360977172852

Token 152: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0018486743792891502
    2. '0' → logprob: -7.0018486976623535
    3. '   ' → logprob: -7.0018486976623535
    4. ' print' → logprob: -11.126848220825195
    5. 'pr' → logprob: -12.626848220825195
    6. '
' → logprob: -12.751848220825195
    7. '```' → logprob: -13.376848220825195
    8. '1' → logprob: -14.376848220825195
    9. '    
' → logprob: -14.376848220825195
    10. '	print' → logprob: -14.501848220825195

Token 153: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.612634362885728e-05
    2. ' ' → logprob: -9.625076293945312
    3. '`' → logprob: -13.250076293945312
    4. '"' → logprob: -13.250076293945312
    5. '(' → logprob: -13.250076293945312
    6. '```' → logprob: -14.000076293945312
    7. 'print' → logprob: -14.375076293945312
    8. '-' → logprob: -14.375076293945312
    9. '
' → logprob: -14.375076293945312
    10. '   ' → logprob: -15.125076293945312

Token 154: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.62501335144043
    3. ')' → logprob: -13.25001335144043
    4. '"' → logprob: -14.00001335144043
    5. '```' → logprob: -15.12501335144043
    6. 'print' → logprob: -15.18751335144043
    7. '`' → logprob: -15.62501335144043
    8. '-' → logprob: -15.93751335144043
    9. '   ' → logprob: -15.93751335144043
    10. '")' → logprob: -16.50001335144043

Token 155: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008397616329602897
    2. ')
' → logprob: -7.250839710235596
    3. 'else' → logprob: -9.000840187072754
    4. ' )' → logprob: -12.625840187072754
    5. '0' → logprob: -14.125840187072754
    6. 'elif' → logprob: -14.875840187072754
    7. '())' → logprob: -15.000840187072754
    8. ')

' → logprob: -15.125840187072754
    9. ' else' → logprob: -15.125840187072754
    10. '   ' → logprob: -15.625840187072754

Token 156: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00027015688829123974
    2. '
' → logprob: -9.500269889831543
    3. 'elif' → logprob: -9.500269889831543
    4. '   ' → logprob: -9.750269889831543
    5. ' else' → logprob: -10.125269889831543
    6. '_else' → logprob: -12.375269889831543
    7. '0' → logprob: -12.500269889831543
    8. 'exit' → logprob: -12.500269889831543
    9. '    
' → logprob: -12.500269889831543
    10. '_' → logprob: -13.875269889831543

Token 157: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.06262528151273727
    2. 'exit' (adapté à ' exit') → logprob: -2.8126251697540283
    3. ' exit' → logprob: -8.93762493133545
    4. '```' → logprob: -9.06262493133545
    5. '   ' → logprob: -9.43762493133545
    6. ' else' → logprob: -9.56262493133545
    7. 'elif' → logprob: -9.68762493133545
    8. '
' → logprob: -10.18762493133545
    9. ')' → logprob: -10.31262493133545
    10. '0' → logprob: -10.68762493133545

Token 158: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00358699937351048
    2. '(' → logprob: -5.753586769104004
    3. '()
' → logprob: -7.878586769104004
    4. '0' → logprob: -10.878586769104004
    5. '(
' → logprob: -12.253586769104004
    6. '()\' → logprob: -12.753586769104004
    7. '()

' → logprob: -13.503586769104004
    8. ' ()' → logprob: -14.003586769104004
    9. '()`' → logprob: -14.253586769104004
    10. '())' → logprob: -14.878586769104004

Token 159: 'target' (ID: 10857)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.015595773234963417
    2. 'cnt' → logprob: -5.39059591293335
    3. 'answer' → logprob: -5.51559591293335
    4. 'result' → logprob: -6.26559591293335
    5. 'c' → logprob: -6.39059591293335
    6. 'ans' → logprob: -7.14059591293335
    7. 'counter' → logprob: -7.14059591293335
    8. 'total' → logprob: -7.64059591293335
    9. 'range' → logprob: -8.515595436096191
    10. 'x' → logprob: -8.765595436096191

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.042784035205841064
    2. '_' → logprob: -3.6677839756011963
    3. '=' → logprob: -4.667784214019775
    4. '_count' → logprob: -5.417784214019775
    5. 's' → logprob: -6.417784214019775
    6. ' ' → logprob: -8.417783737182617
    7. 'count' → logprob: -8.792783737182617
    8. '_value' → logprob: -9.417783737182617
    9. '_val' → logprob: -9.792783737182617
    10. '_l' → logprob: -9.792783737182617

Token 161: ' l' (ID: 305)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.31864818930625916
    2. 'l' → logprob: -1.3186482191085815
    3. '1' → logprob: -5.943648338317871
    4. '0' → logprob: -6.943648338317871
    5. ' r' → logprob: -7.568648338317871
    6. ' l' → logprob: -7.693648338317871
    7. '(r' → logprob: -8.568648338317871
    8. '[r' → logprob: -8.693648338317871
    9. '[]' → logprob: -8.818648338317871
    10. '[l' → logprob: -9.818648338317871

Token 162: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.11507460474967957
    2. '//' → logprob: -2.240074634552002
    3. ' ' → logprob: -6.865074634552002
    4. '=' → logprob: -8.365074157714844
    5. '#' → logprob: -8.740074157714844
    6. '<|end|>' → logprob: -8.865074157714844
    7. '+' → logprob: -9.365074157714844
    8. 'import' → logprob: -9.365074157714844
    9. ' =' → logprob: -9.490074157714844
    10. ' //
' → logprob: -9.615074157714844

Token 163: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.128163257315464e-07
    2. ' r' → logprob: -15.125
    3. '<|end|>' → logprob: -18.75
    4. '	r' → logprob: -21.125
    5. '_r' → logprob: -21.875
    6. ' ' → logprob: -22.125
    7. '<|end|>' → logprob: -22.25
    8. '...' → logprob: -22.375
    9. 'rstrip' → logprob: -22.875
    10. 'm' → logprob: -23.0

Token 164: '
' (ID: 198)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.07880506664514542
    2. 'dp' → logprob: -2.9538049697875977
    3. 'result' → logprob: -4.328804969787598
    4. 'answer' → logprob: -5.328804969787598
    5. 'ans' → logprob: -5.953804969787598
    6. 'cnt' → logprob: -6.203804969787598
    7. 'res' → logprob: -7.703804969787598
    8. 'from' → logprob: -9.578804969787598
    9. 'counter' → logprob: -9.578804969787598
    10. ' count' → logprob: -9.578804969787598

Token 165: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.12450260668992996
    2. 'ans' → logprob: -3.374502658843994
    3. 'result' → logprob: -3.624502658843994
    4. 'answer' → logprob: -3.749502658843994
    5. 'import' → logprob: -4.124502658843994
    6. 'dp' → logprob: -4.749502658843994
    7. 'def' → logprob: -5.124502658843994
    8. 'cnt' → logprob: -6.874502658843994
    9. 'res' → logprob: -7.874502658843994
    10. 'from' → logprob: -8.624502182006836

Token 166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005942071322351694
    2. '=' → logprob: -5.130941867828369
    3. ' ' → logprob: -11.630942344665527
    4. 's' → logprob: -13.255942344665527
    5. '(' → logprob: -13.755942344665527
    6. '_' → logprob: -13.880942344665527
    7. ',' → logprob: -15.380942344665527
    8. ' +=' → logprob: -16.25594139099121
    9. '  ' → logprob: -16.50594139099121
    10. ' ' → logprob: -16.50594139099121

Token 167: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0023486497811973095
    2. ' ' → logprob: -6.12734842300415
    3. '1' → logprob: -9.002348899841309
    4. '2' → logprob: -10.252348899841309
    5. 'sum' → logprob: -12.377348899841309
    6. ' sum' → logprob: -14.877348899841309
    7. '=' → logprob: -16.377347946166992
    8. '۰' → logprob: -16.564847946166992
    9. 'int' → logprob: -16.814847946166992
    10. 'len' → logprob: -16.877347946166992

Token 168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.3557529857498594e-05
    2. ' ' → logprob: -11.00002384185791
    3. 'sum' → logprob: -12.75002384185791
    4. '2' → logprob: -12.87502384185791
    5. '1' → logprob: -13.87502384185791
    6. '4' → logprob: -16.250022888183594
    7. 'len' → logprob: -17.125022888183594
    8. '۰' → logprob: -17.312522888183594
    9. '=' → logprob: -17.437522888183594
    10. '０' → logprob: -17.500022888183594

Token 169: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01751970686018467
    2. 'i' → logprob: -4.142519474029541
    3. 'import' → logprob: -6.642519474029541
    4. ' for' → logprob: -9.3925199508667
    5. 'div' → logprob: -10.2675199508667
    6. '1' → logprob: -10.7675199508667
    7. 'from' → logprob: -10.7675199508667
    8. 'def' → logprob: -11.8925199508667
    9. ' i' → logprob: -12.1425199508667
    10. 'd' → logprob: -12.2675199508667

Token 170: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005308704450726509
    2. 'i' → logprob: -5.255308628082275
    3. 'import' → logprob: -9.880309104919434
    4. '1' → logprob: -11.255309104919434
    5. ' for' → logprob: -11.880309104919434
    6. 'from' → logprob: -13.880309104919434
    7. 'factor' → logprob: -14.380309104919434
    8. 'd' → logprob: -14.630309104919434
    9. ' i' → logprob: -14.755309104919434
    10. '2' → logprob: -15.380309104919434

Token 171: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3876115679740906
    2. ' =' → logprob: -1.1376116275787354
    3. 'n' → logprob: -7.762611389160156
    4. ' ' → logprob: -8.387611389160156
    5. ',' → logprob: -10.387611389160156
    6. 'nt' → logprob: -11.012611389160156
    7. '.' → logprob: -12.137611389160156
    8. 'f' → logprob: -12.262611389160156
    9. '1' → logprob: -12.387611389160156
    10. ' +=' → logprob: -12.512611389160156

Token 172: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003932237159460783
    2. ' ' → logprob: -5.753931999206543
    3. '2' → logprob: -7.253931999206543
    4. '0' → logprob: -10.003931999206543
    5. 'r' → logprob: -14.128931999206543
    6. '```' → logprob: -15.378931999206543
    7. 'target' → logprob: -16.31643295288086
    8. 'i' → logprob: -16.31643295288086
    9. 'int' → logprob: -16.37893295288086
    10. '   ' → logprob: -17.00393295288086

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000122608442325145
    2. '2' → logprob: -9.125123023986816
    3. '0' → logprob: -11.500123023986816
    4. ' ' → logprob: -12.875123023986816
    5. 'int' → logprob: -15.000123023986816
    6. 'r' → logprob: -15.125123023986816
    7. '```' → logprob: -15.750123023986816
    8. 'target' → logprob: -16.2501220703125
    9. 'i' → logprob: -17.1251220703125
    10. '3' → logprob: -18.1251220703125

Token 174: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47379398345947266
    2. '<|end|>' → logprob: -1.5987939834594727
    3. 'while' → logprob: -2.2237939834594727
    4. ' while' → logprob: -2.9737939834594727
    5. ',' → logprob: -5.348793983459473
    6. ':' → logprob: -5.723793983459473
    7. '<|end|>' → logprob: -6.098793983459473
    8. '*' → logprob: -7.223793983459473
    9. '+' → logprob: -7.348793983459473
    10. '```' → logprob: -7.348793983459473

Token 175: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.08064157515764236
    2. '*i' → logprob: -3.080641508102417
    3. ' while' → logprob: -3.580641508102417
    4. '**' → logprob: -6.080641746520996
    5. 'i' → logprob: -7.080641746520996
    6. '*' → logprob: -7.830641746520996
    7. '	while' → logprob: -10.580641746520996
    8. ':' → logprob: -10.705641746520996
    9. '(i' → logprob: -11.080641746520996
    10. ' i' → logprob: -11.205641746520996

Token 176: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07001923769712448
    2. ' i' → logprob: -2.695019245147705
    3. 'target' → logprob: -9.570018768310547
    4. ' target' → logprob: -12.070018768310547
    5. '(i' → logprob: -12.445018768310547
    6. ' ' → logprob: -13.945018768310547
    7. 'True' → logprob: -14.445018768310547
    8. ' True' → logprob: -14.695018768310547
    9. '	i' → logprob: -14.820018768310547
    10. '   ' → logprob: -15.070018768310547

Token 177: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.2119911909103394
    2. '*i' → logprob: -1.4619911909103394
    3. '<=' → logprob: -1.7119911909103394
    4. '*' → logprob: -1.7119911909103394
    5. ' <=' → logprob: -2.211991310119629
    6. '**' → logprob: -9.211991310119629
    7. 'i' → logprob: -11.836991310119629
    8. '*(' → logprob: -12.086991310119629
    9. ' ' → logprob: -12.461991310119629
    10. ' i' → logprob: -13.461991310119629

Token 178: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.016318924725055695
    2. 'target' → logprob: -4.2663187980651855
    3. ' i' → logprob: -6.7663187980651855
    4. '<=' → logprob: -7.2663187980651855
    5. '2' → logprob: -9.141319274902344
    6. ' <=' → logprob: -9.641319274902344
    7. ' target' → logprob: -10.641319274902344
    8. '*i' → logprob: -10.891319274902344
    9. ' ' → logprob: -11.266319274902344
    10. '<' → logprob: -11.391319274902344

Token 179: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.47408658266067505
    2. '<=' → logprob: -0.974086582660675
    3. '<' → logprob: -11.97408676147461
    4. ' <' → logprob: -13.22408676147461
    5. ' ' → logprob: -14.84908676147461
    6. ')<=' → logprob: -15.22408676147461
    7. '=' → logprob: -15.47408676147461
    8. ' ≤' → logprob: -15.47408676147461
    9. ' ' → logprob: -16.59908676147461
    10. '≤' → logprob: -16.59908676147461

Token 180: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.01815006136894226
    2. ' target' → logprob: -4.0181498527526855
    3. '(target' → logprob: -16.143150329589844
    4. '	target' → logprob: -16.643150329589844
    5. '[target' → logprob: -17.643150329589844
    6. '_target' → logprob: -19.393150329589844
    7. ' ' → logprob: -19.643150329589844
    8. 'targets' → logprob: -19.768150329589844
    9. 'Target' → logprob: -20.018150329589844
    10. ',target' → logprob: -20.268150329589844

Token 181: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009785839356482029
    2. ':
' → logprob: -4.6347856521606445
    3. ' :' → logprob: -11.259785652160645
    4. ' and' → logprob: -11.759785652160645
    5. ':

' → logprob: -12.009785652160645
    6. ' :
' → logprob: -14.134785652160645
    7. 'and' → logprob: -14.259785652160645
    8. '<|end|>' → logprob: -14.759785652160645
    9. '):' → logprob: -14.884785652160645
    10. ':**' → logprob: -15.259785652160645

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4500674307346344
    2. ' if' → logprob: -1.075067400932312
    3. ' ' → logprob: -4.700067520141602
    4. '<|end|>' → logprob: -5.075067520141602
    5. 'if' → logprob: -6.325067520141602
    6. ' 
' → logprob: -6.825067520141602
    7. '    ' → logprob: -7.200067520141602
    8. '  ' → logprob: -7.575067520141602
    9. ':' → logprob: -7.950067520141602
    10. ' i' → logprob: -8.200067520141602

Token 183: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10240624099969864
    2. ' if' → logprob: -2.3524062633514404
    3. '   ' → logprob: -6.227406024932861
    4. ' i' → logprob: -9.10240650177002
    5. 'i' → logprob: -9.35240650177002
    6. '       ' → logprob: -11.47740650177002
    7. '    ' → logprob: -12.35240650177002
    8. ' ' → logprob: -12.35240650177002
    9. '	if' → logprob: -13.47740650177002
    10. '  ' → logprob: -14.10240650177002

Token 184: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.5759417414665222
    2. ' target' → logprob: -0.8259417414665222
    3. ' ' → logprob: -13.700942039489746
    4. '(target' → logprob: -14.575942039489746
    5. '	target' → logprob: -14.575942039489746
    6. '   ' → logprob: -15.825942039489746
    7. '[target' → logprob: -16.95094108581543
    8. ' i' → logprob: -17.32594108581543
    9. '  ' → logprob: -18.70094108581543
    10. 'i' → logprob: -19.45094108581543

Token 185: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.06223532184958458
    2. '%' → logprob: -2.8122353553771973
    3. '%i' → logprob: -8.312234878540039
    4. ' ' → logprob: -10.937234878540039
    5. ' ' → logprob: -12.812234878540039
    6. '%s' → logprob: -14.437234878540039
    7. '%e' → logprob: -14.812234878540039
    8. '%d' → logprob: -15.312234878540039
    9. '%c' → logprob: -16.18723487854004
    10. ' %
' → logprob: -16.31223487854004

Token 186: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00023071514442563057
    2. ' i' → logprob: -8.37523078918457
    3. '   ' → logprob: -17.25023078918457
    4. '	i' → logprob: -17.37523078918457
    5. ' ' → logprob: -17.50023078918457
    6. '<|end|>' → logprob: -18.12523078918457
    7. '{i' → logprob: -18.50023078918457
    8. '(i' → logprob: -18.62523078918457
    9. '*i' → logprob: -18.75023078918457
    10. '[i' → logprob: -18.87523078918457

Token 187: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759623050689697
    2. '==' → logprob: -0.8259623050689697
    3. '=' → logprob: -11.07596206665039
    4. '0' → logprob: -12.95096206665039
    5. '==
' → logprob: -13.07596206665039
    6. '===' → logprob: -13.82596206665039
    7. ' ' → logprob: -14.20096206665039
    8. ')==' → logprob: -14.32596206665039
    9. ' =' → logprob: -15.45096206665039
    10. '```' → logprob: -15.95096206665039

Token 188: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00317783304490149
    2. ' ' → logprob: -5.753177642822266
    3. '   ' → logprob: -16.378177642822266
    4. '  ' → logprob: -18.003177642822266
    5. '۰' → logprob: -19.128177642822266
    6. ' ' → logprob: -20.128177642822266
    7. '    ' → logprob: -20.315677642822266
    8. '<|end|>' → logprob: -20.440677642822266
    9. '```' → logprob: -20.440677642822266
    10. 'i' → logprob: -21.065677642822266

Token 189: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -18.500051498413086
    4. 'i' → logprob: -18.875051498413086
    5. '۰' → logprob: -19.000051498413086
    6. '  ' → logprob: -19.812551498413086
    7. '０' → logprob: -20.687551498413086
    8. '00' → logprob: -20.687551498413086
    9. '<|end|>' → logprob: -20.687551498413086
    10. '=' → logprob: -20.812551498413086

Token 190: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25212839245796204
    2. ':
' → logprob: -1.5021283626556396
    3. '       ' → logprob: -9.002128601074219
    4. '   ' → logprob: -10.377128601074219
    5. ' and' → logprob: -10.627128601074219
    6. 'and' → logprob: -11.502128601074219
    7. '):
' → logprob: -12.377128601074219
    8. ':

' → logprob: -12.627128601074219
    9. '):' → logprob: -14.502128601074219
    10. ':
' → logprob: -14.877128601074219

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029114672914147377
    2. '   ' → logprob: -4.029114723205566
    3. 'count' → logprob: -4.529114723205566
    4. 'if' → logprob: -9.279114723205566
    5. ' count' → logprob: -11.154114723205566
    6. ' if' → logprob: -12.904114723205566
    7. '
' → logprob: -13.529114723205566
    8. '	count' → logprob: -13.779114723205566
    9. '    
' → logprob: -13.904114723205566
    10. '```' → logprob: -14.779114723205566

Token 192: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.006095996126532555
    2. 'if' → logprob: -5.256095886230469
    3. '   ' → logprob: -7.131095886230469
    4. ' count' → logprob: -10.506095886230469
    5. '       ' → logprob: -10.631095886230469
    6. ' if' → logprob: -12.131095886230469
    7. '
' → logprob: -12.506095886230469
    8. '	count' → logprob: -14.006095886230469
    9. '    
' → logprob: -15.256095886230469
    10. ' ' → logprob: -16.88109588623047

Token 193: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.25197726488113403
    2. '+=' → logprob: -1.5019772052764893
    3. ' ' → logprob: -11.50197696685791
    4. ' *=' → logprob: -11.50197696685791
    5. '   ' → logprob: -11.62697696685791
    6. '=' → logprob: -11.75197696685791
    7. ']+=' → logprob: -12.87697696685791
    8. ' =' → logprob: -13.00197696685791
    9. '*=' → logprob: -13.25197696685791
    10. '+' → logprob: -13.37697696685791

Token 194: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005676229950040579
    2. '2' → logprob: -5.38067626953125
    3. ' ' → logprob: -6.88067626953125
    4. '(' → logprob: -11.38067626953125
    5. ' (' → logprob: -11.38067626953125
    6. '(i' → logprob: -12.88067626953125
    7. '
' → logprob: -14.25567626953125
    8. '   ' → logprob: -14.50567626953125
    9. 'int' → logprob: -14.75567626953125
    10. '  ' → logprob: -15.44317626953125

Token 195: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3872176706790924
    2. '1' → logprob: -1.13721764087677
    3. ' ' → logprob: -8.01221752166748
    4. '(' → logprob: -11.63721752166748
    5. ' (' → logprob: -12.63721752166748
    6. '(i' → logprob: -13.26221752166748
    7. '+' → logprob: -15.38721752166748
    8. '   ' → logprob: -15.38721752166748
    9. '  ' → logprob: -16.074718475341797
    10. 'i' → logprob: -16.137218475341797

Token 196: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009129027836024761
    2. '
' → logprob: -5.009129047393799
    3. ' if' → logprob: -6.759129047393799
    4. 'if' → logprob: -7.134129047393799
    5. '        
' → logprob: -8.13412857055664
    6. '<|end|>' → logprob: -9.88412857055664
    7. '   ' → logprob: -10.13412857055664
    8. '*' → logprob: -11.13412857055664
    9. ',' → logprob: -11.75912857055664
    10. ' 
' → logprob: -12.13412857055664

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012961745262145996
    2. 'if' → logprob: -4.7629618644714355
    3. ' if' → logprob: -5.7629618644714355
    4. '        
' → logprob: -7.3879618644714355
    5. '   ' → logprob: -7.7629618644714355
    6. '
' → logprob: -10.137961387634277
    7. ' ' → logprob: -10.387961387634277
    8. ' 
' → logprob: -11.012961387634277
    9. 'count' → logprob: -11.262961387634277
    10. ',' → logprob: -11.512961387634277

Token 198: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00021688752167392522
    2. ' if' → logprob: -8.750216484069824
    3. '       ' → logprob: -9.750216484069824
    4. '
' → logprob: -16.00021743774414
    5. '        
' → logprob: -17.12521743774414
    6. '   ' → logprob: -18.50021743774414
    7. '```' → logprob: -19.12521743774414
    8. '           ' → logprob: -19.25021743774414
    9. '	if' → logprob: -19.50021743774414
    10. 'If' → logprob: -20.50021743774414

Token 199: ' target' (ID: 3783)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10023406147956848
    2. ' i' → logprob: -2.350234031677246
    3. '(i' → logprob: -11.475234031677246
    4. 'target' → logprob: -11.600234031677246
    5. ' (' → logprob: -12.600234031677246
    6. ' target' → logprob: -12.725234031677246
    7. '   ' → logprob: -14.100234031677246
    8. ' ' → logprob: -15.350234031677246
    9. '	i' → logprob: -15.475234031677246
    10. ' ' → logprob: -15.725234031677246

Token 200: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0011364045785740018
    2. ' //' → logprob: -6.876136302947998
    3. '//=' → logprob: -10.251136779785156
    4. '```' → logprob: -10.376136779785156
    5. ' ' → logprob: -11.376136779785156
    6. '/' → logprob: -11.751136779785156
    7. '#' → logprob: -11.876136779785156
    8. '!=' → logprob: -12.251136779785156
    9. '`' → logprob: -13.876136779785156
    10. ' !=' → logprob: -14.126136779785156

Token 201: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00033546582562848926
    2. ' i' → logprob: -8.000335693359375
    3. ' ' → logprob: -18.250335693359375
    4. '   ' → logprob: -18.500335693359375
    5. '	i' → logprob: -19.250335693359375
    6. '```' → logprob: -20.875335693359375
    7. ' ' → logprob: -21.125335693359375
    8. '
' → logprob: -21.375335693359375
    9. '  ' → logprob: -21.500335693359375
    10. '_i' → logprob: -22.000335693359375

Token 202: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.4741078019142151
    2. ' !=' → logprob: -0.9741078019142151
    3. ' i' → logprob: -11.22410774230957
    4. '!==' → logprob: -11.97410774230957
    5. 'i' → logprob: -12.47410774230957
    6. ' ' → logprob: -13.22410774230957
    7. '()!=' → logprob: -13.22410774230957
    8. '```' → logprob: -13.72410774230957
    9. ')!=' → logprob: -14.34910774230957
    10. ']!=' → logprob: -14.47410774230957

Token 203: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023246292024850845
    2. ' i' → logprob: -3.7732462882995605
    3. '   ' → logprob: -14.398246765136719
    4. ' ' → logprob: -15.773246765136719
    5. '	i' → logprob: -16.02324676513672
    6. '  ' → logprob: -17.39824676513672
    7. ' ' → logprob: -17.89824676513672
    8. '    ' → logprob: -19.52324676513672
    9. '```' → logprob: -20.02324676513672
    10. '1' → logprob: -20.27324676513672

Token 204: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20156078040599823
    2. ':' → logprob: -1.7015607357025146
    3. '       ' → logprob: -9.451560974121094
    4. '   ' → logprob: -10.201560974121094
    5. '           ' → logprob: -11.076560974121094
    6. '):
' → logprob: -11.576560974121094
    7. ':
' → logprob: -13.451560974121094
    8. ' :
' → logprob: -13.576560974121094
    9. ',' → logprob: -14.201560974121094
    10. '):' → logprob: -14.451560974121094

Token 205: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014768906403332949
    2. 'count' → logprob: -6.626476764678955
    3. '       ' → logprob: -9.251477241516113
    4. ' count' → logprob: -10.376477241516113
    5. '   ' → logprob: -11.626477241516113
    6. '
' → logprob: -11.751477241516113
    7. '```' → logprob: -12.376477241516113
    8. '               ' → logprob: -14.001477241516113
    9. '	       ' → logprob: -14.251477241516113
    10. '          ' → logprob: -15.126477241516113

Token 206: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0024794621858745813
    2. ' count' → logprob: -6.002479553222656
    3. '           ' → logprob: -12.752479553222656
    4. '       ' → logprob: -14.877479553222656
    5. '   ' → logprob: -15.002479553222656
    6. '               ' → logprob: -16.377479553222656
    7. '
' → logprob: -16.752479553222656
    8. '	count' → logprob: -17.502479553222656
    9. '            
' → logprob: -19.627479553222656
    10. '```' → logprob: -19.752479553222656

Token 207: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03804677724838257
    2. ' +=' → logprob: -3.2880468368530273
    3. '+' → logprob: -12.288046836853027
    4. '=' → logprob: -15.038046836853027
    5. ']+=' → logprob: -15.538046836853027
    6. '   ' → logprob: -15.663046836853027
    7. '+='' → logprob: -17.66304588317871
    8. '+="' → logprob: -17.78804588317871
    9. '    ' → logprob: -18.41304588317871
    10. '+=(' → logprob: -18.66304588317871

Token 208: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -17.625431060791016
    4. '```' → logprob: -18.750431060791016
    5. '  ' → logprob: -20.250431060791016
    6. '2' → logprob: -20.625431060791016
    7. '１' → logprob: -20.625431060791016
    8. '0' → logprob: -21.000431060791016
    9. ' ' → logprob: -21.500431060791016
    10. '۱' → logprob: -21.812931060791016

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '2' → logprob: -18.8750057220459
    4. '0' → logprob: -19.3750057220459
    5. 'count' → logprob: -19.3750057220459
    6. '   ' → logprob: -19.6250057220459
    7. '```' → logprob: -20.3750057220459
    8. '
' → logprob: -21.8750057220459
    9. '-' → logprob: -22.1875057220459
    10. '  ' → logprob: -22.3125057220459

Token 210: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2113979209971149e-05
    2. '
' → logprob: -11.500012397766113
    3. 'i' → logprob: -13.875012397766113
    4. '       ' → logprob: -14.750012397766113
    5. ' i' → logprob: -14.875012397766113
    6. '    
' → logprob: -15.125012397766113
    7. '```' → logprob: -17.250011444091797
    8. ',' → logprob: -17.500011444091797
    9. '   ' → logprob: -18.000011444091797
    10. '  ' → logprob: -18.125011444091797

Token 211: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015514736878685653
    2. 'i' → logprob: -9.000155448913574
    3. '
' → logprob: -10.750155448913574
    4. ' i' → logprob: -11.625155448913574
    5. '       ' → logprob: -14.000155448913574
    6. '    
' → logprob: -16.000154495239258
    7. '[i' → logprob: -16.625154495239258
    8. '```' → logprob: -16.625154495239258
    9. '	i' → logprob: -17.000154495239258
    10. '
' → logprob: -17.000154495239258

Token 212: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0015775939682498574
    2. '   ' → logprob: -6.501577377319336
    3. ' i' → logprob: -9.501577377319336
    4. '
' → logprob: -14.876577377319336
    5. '	i' → logprob: -16.501577377319336
    6. '  ' → logprob: -17.376577377319336
    7. '    
' → logprob: -18.001577377319336
    8. '       ' → logprob: -18.126577377319336
    9. ' ' → logprob: -18.626577377319336
    10. '```' → logprob: -19.126577377319336

Token 213: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.003529398003593087
    2. '+' → logprob: -6.3785295486450195
    3. ' +=' → logprob: -6.3785295486450195
    4. '=' → logprob: -9.00352954864502
    5. '+="' → logprob: -12.87852954864502
    6. '+='' → logprob: -13.87852954864502
    7. '++' → logprob: -14.37852954864502
    8. ']+=' → logprob: -14.62852954864502
    9. '+=(' → logprob: -16.128528594970703
    10. '1' → logprob: -16.753528594970703

Token 214: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -18.500036239624023
    4. '```' → logprob: -19.250036239624023
    5. '  ' → logprob: -19.375036239624023
    6. '
' → logprob: -20.625036239624023
    7. '<|end|>' → logprob: -21.000036239624023
    8. '۱' → logprob: -21.125036239624023
    9. '１' → logprob: -21.187536239624023
    10. '    ' → logprob: -21.562536239624023

Token 215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '```' → logprob: -20.5
    4. '   ' → logprob: -22.5
    5. '۱' → logprob: -23.125
    6. '１' → logprob: -23.25
    7. '<|end|>' → logprob: -23.875
    8. '2' → logprob: -24.375
    9. '  ' → logprob: -24.375
    10. '१' → logprob: -24.5

Token 216: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.771655115589965e-05
    2. '
' → logprob: -11.000018119812012
    3. ' print' → logprob: -14.000018119812012
    4. '```' → logprob: -16.625017166137695
    5. ')
' → logprob: -17.125017166137695
    6. '.print' → logprob: -18.000017166137695
    7. ')' → logprob: -18.000017166137695
    8. '(print' → logprob: -18.500017166137695
    9. '  
' → logprob: -18.875017166137695
    10. '#print' → logprob: -19.500017166137695

Token 217: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -19.75
    3. '```' → logprob: -20.875
    4. '
' → logprob: -21.625
    5. '  
' → logprob: -24.75
    6. 'printf' → logprob: -25.375
    7. '	print' → logprob: -25.5
    8. '    
' → logprob: -25.625
    9. '#print' → logprob: -25.75
    10. '.print' → logprob: -26.125

Token 218: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.0019477950409054756
    2. '(' → logprob: -6.25194787979126
    3. 'count' → logprob: -10.876947402954102
    4. '(c' → logprob: -16.3769474029541
    5. '(cnt' → logprob: -17.1269474029541
    6. ' (' → logprob: -17.2519474029541
    7. '(
' → logprob: -17.6269474029541
    8. ',count' → logprob: -17.6269474029541
    9. ' count' → logprob: -18.0019474029541
    10. '(co' → logprob: -18.1269474029541

Token 219: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.537868779967539e-06
    2. ' )' → logprob: -11.875008583068848
    3. ')
' → logprob: -13.500008583068848
    4. '```' → logprob: -16.87500762939453
    5. ')`' → logprob: -17.00000762939453
    6. '()' → logprob: -18.00000762939453
    7. '#' → logprob: -18.12500762939453
    8. '))' → logprob: -18.25000762939453
    9. '*' → logprob: -18.25000762939453
    10. ')#' → logprob: -18.37500762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 217
Tokens correctement prédits (1ère position, stricte): 92
Tokens correctement prédits (1ère position, avec adaptation): 100
Tokens correctement prédits (top 10): 200
Précision stricte (1ère position): 42.40%
Précision adaptée (1ère position): 46.08%
Précision (top 10): 92.17%
================================================================================
