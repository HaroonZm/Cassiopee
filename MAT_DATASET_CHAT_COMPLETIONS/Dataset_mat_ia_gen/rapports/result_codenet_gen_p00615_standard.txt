================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:25:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n,m=map(int,input().split())
    if n==0 and m==0:
        break
    tl=[]
    if n>0:
        tl=list(map(int,input().split()))
    tr=[]
    if m>0:
        tr=list(map(int,input().split()))
    times=sorted(tl+tr)
    if not times:
        print(0)
        continue
    max_gap=times[0]-0
    for i in range(1,len(times)):
        gap=times[i]-times[i-1]
        if gap>max_gap:
            max_gap=gap
    end=times[-1]
    if end>max_gap:
        max_gap=max(max_gap,end)
    print(max_gap)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.612176239490509
    2. '    ' → logprob: -2.2371761798858643
    3. '    
' → logprob: -2.6121761798858643
    4. '\' → logprob: -2.8621761798858643
    5. '\n' → logprob: -2.8621761798858643
    6. '```' → logprob: -3.2371761798858643
    7. ' ' → logprob: -3.3621761798858643
    8. ' 
' → logprob: -3.6121761798858643
    9. '  
' → logprob: -4.112176418304443
    10. '     
' → logprob: -4.237176418304443

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30723127722740173
    2. '    ' → logprob: -1.6822313070297241
    3. '```' → logprob: -3.5572311878204346
    4. ' ' → logprob: -3.8072311878204346
    5. '       ' → logprob: -4.807231426239014
    6. '    
' → logprob: -5.932231426239014
    7. '  ' → logprob: -6.182231426239014
    8. '\' → logprob: -6.182231426239014
    9. '\n' → logprob: -6.682231426239014
    10. '\t' → logprob: -6.807231426239014

Token 5: ',m' (ID: 26648)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9284094572067261
    2. 'u' → logprob: -1.553409457206726
    3. '=' → logprob: -2.1784095764160156
    4. '+' → logprob: -2.3034095764160156
    5. 'o' → logprob: -2.8034095764160156
    6. '   ' → logprob: -3.5534095764160156
    7. '_' → logprob: -4.178409576416016
    8. '.' → logprob: -4.428409576416016
    9. '%' → logprob: -4.553409576416016
    10. ' =' → logprob: -4.928409576416016

Token 6: '=' (ID: 28)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4007822871208191
    2. '=' → logprob: -2.275782346725464
    3. ' =' → logprob: -2.525782346725464
    4. ')' → logprob: -2.775782346725464
    5. '  ' → logprob: -3.900782346725464
    6. ' ==' → logprob: -4.275782108306885
    7. '[' → logprob: -4.400782108306885
    8. ',' → logprob: -4.525782108306885
    9. ' ,' → logprob: -5.025782108306885
    10. ' )' → logprob: -5.650782108306885

Token 7: 'map' (ID: 3726)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.8273316621780396
    2. 'map' → logprob: -1.0773316621780396
    3. 'input' → logprob: -2.20233154296875
    4. ' input' → logprob: -2.20233154296875
    5. 'int' → logprob: -7.20233154296875
    6. ' int' → logprob: -8.07733154296875
    7. 'list' → logprob: -10.07733154296875
    8. ' ' → logprob: -10.20233154296875
    9. ' list' → logprob: -10.32733154296875
    10. '0' → logprob: -11.95233154296875

Token 8: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.029253028333187103
    2. '(' → logprob: -3.9042530059814453
    3. 'int' → logprob: -5.654253005981445
    4. '[int' → logprob: -5.904253005981445
    5. '<int' → logprob: -7.029253005981445
    6. '(lambda' → logprob: -7.279253005981445
    7. '(str' → logprob: -7.654253005981445
    8. ' int' → logprob: -9.029253005981445
    9. '```' → logprob: -9.279253005981445
    10. '<|end|>' → logprob: -10.529253005981445

Token 9: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5906948447227478
    2. 'input' → logprob: -0.8406948447227478
    3. ')' → logprob: -4.840694904327393
    4. ' input' → logprob: -5.340694904327393
    5. ',input' → logprob: -6.715694904327393
    6. '(' → logprob: -7.465694904327393
    7. '=input' → logprob: -9.090694427490234
    8. '<input' → logprob: -11.090694427490234
    9. ',' → logprob: -11.090694427490234
    10. '[input' → logprob: -12.090694427490234

Token 10: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0844622403383255
    2. '()' → logprob: -2.5844621658325195
    3. '().' → logprob: -5.3344621658325195
    4. ')' → logprob: -7.8344621658325195
    5. '());' → logprob: -8.45946216583252
    6. ' ())' → logprob: -10.33446216583252
    7. '()))' → logprob: -10.70946216583252
    8. '(' → logprob: -10.95946216583252
    9. '();)' → logprob: -11.33446216583252
    10. '(),' → logprob: -12.08446216583252

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00011427151912357658
    2. 'strip' → logprob: -9.125114440917969
    3. 'rstrip' → logprob: -12.875114440917969
    4. ' split' → logprob: -13.250114440917969
    5. '(split' → logprob: -14.375114440917969
    6. ')' → logprob: -15.000114440917969
    7. 'replace' → logprob: -17.87511444091797
    8. 'spl' → logprob: -19.25011444091797
    9. '_split' → logprob: -19.37511444091797
    10. '())' → logprob: -19.37511444091797

Token 12: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6710962653160095
    2. ')' → logprob: -0.7960962653160095
    3. '))' → logprob: -3.7960963249206543
    4. '()' → logprob: -4.921096324920654
    5. '('' → logprob: -5.421096324920654
    6. '()))' → logprob: -5.921096324920654
    7. '(' → logprob: -7.296096324920654
    8. '')' → logprob: -9.171095848083496
    9. '(','' → logprob: -10.171095848083496
    10. ' ())' → logprob: -11.296095848083496

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5538672804832458
    2. '<|end|>' → logprob: -1.4288673400878906
    3. ':' → logprob: -2.0538673400878906
    4. ' ' → logprob: -3.8038673400878906
    5. ')' → logprob: -4.678867340087891
    6. ':
' → logprob: -5.553867340087891
    7. '  ' → logprob: -5.678867340087891
    8. '    ' → logprob: -5.803867340087891
    9. ' if' → logprob: -5.803867340087891
    10. '<|end|>' → logprob: -5.928867340087891

Token 14: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.737481415271759
    2. '   ' → logprob: -1.1124813556671143
    3. 'if' (adapté à ' if') → logprob: -2.7374813556671143
    4. '    ' → logprob: -3.3624813556671143
    5. ' ' → logprob: -3.4874813556671143
    6. '```' → logprob: -3.8624813556671143
    7. '<|end|>' → logprob: -4.487481594085693
    8. '       ' → logprob: -4.612481594085693
    9. '\n' → logprob: -5.737481594085693
    10. ')' → logprob: -5.987481594085693

Token 15: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.32290956377983093
    2. ' not' → logprob: -1.3229095935821533
    3. 'n' → logprob: -5.697909355163574
    4. ' m' → logprob: -5.822909355163574
    5. ' ' → logprob: -6.197909355163574
    6. 'not' → logprob: -6.822909355163574
    7. 'm' → logprob: -9.197909355163574
    8. ' ' → logprob: -10.072909355163574
    9. '(n' → logprob: -12.447909355163574
    10. ' (' → logprob: -12.572909355163574

Token 16: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1511419713497162
    2. '==' → logprob: -2.151141881942749
    3. ' <=' → logprob: -4.526142120361328
    4. ' <' → logprob: -5.151142120361328
    5. '<' → logprob: -5.776142120361328
    6. '<=' → logprob: -7.026142120361328
    7. ' >' → logprob: -7.401142120361328
    8. ' ' → logprob: -7.526142120361328
    9. '>' → logprob: -7.526142120361328
    10. ')' → logprob: -7.776142120361328

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1275201290845871
    2. ' ' → logprob: -2.1275200843811035
    3. 'm' → logprob: -7.7525200843811035
    4. ' m' → logprob: -9.002520561218262
    5. '-' → logprob: -10.627520561218262
    6. ' -' → logprob: -12.502520561218262
    7. '  ' → logprob: -12.752520561218262
    8. '   ' → logprob: -13.002520561218262
    9. '1' → logprob: -13.377520561218262
    10. '    ' → logprob: -13.815020561218262

Token 18: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04652763903141022
    2. 'and' → logprob: -3.171527624130249
    3. ':' → logprob: -6.421527862548828
    4. ' ' → logprob: -6.546527862548828
    5. '   ' → logprob: -7.921527862548828
    6. ' or' → logprob: -10.421527862548828
    7. '  ' → logprob: -11.046527862548828
    8. '    ' → logprob: -11.296527862548828
    9. ' &' → logprob: -11.296527862548828
    10. '	and' → logprob: -11.671527862548828

Token 19: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.008618239313364029
    2. 'm' → logprob: -4.758618354797363
    3. ' ' → logprob: -12.633618354797363
    4. '	m' → logprob: -14.883618354797363
    5. ' ' → logprob: -17.133617401123047
    6. '    ' → logprob: -17.383617401123047
    7. '   ' → logprob: -17.508617401123047
    8. '  ' → logprob: -17.508617401123047
    9. '_m' → logprob: -18.321117401123047
    10. '&m' → logprob: -18.321117401123047

Token 20: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1455540806055069
    2. ' ==' → logprob: -2.1455540657043457
    3. '=' → logprob: -4.520554065704346
    4. '<|end|>' → logprob: -5.645554065704346
    5. ' ' → logprob: -6.520554065704346
    6. '<|end|>' → logprob: -7.520554065704346
    7. ')' → logprob: -8.020554542541504
    8. ')==' → logprob: -8.020554542541504
    9. '0' → logprob: -8.395554542541504
    10. '```' → logprob: -8.395554542541504

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004620710853487253
    2. ' ' → logprob: -5.379620552062988
    3. '   ' → logprob: -15.129620552062988
    4. '  ' → logprob: -15.754620552062988
    5. '1' → logprob: -17.879621505737305
    6. ' ' → logprob: -18.254621505737305
    7. '```' → logprob: -18.254621505737305
    8. '۰' → logprob: -18.504621505737305
    9. '    ' → logprob: -19.129621505737305
    10. ')' → logprob: -19.317121505737305

Token 22: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015860427811276168
    2. ':
' → logprob: -9.125158309936523
    3. '       ' → logprob: -10.625158309936523
    4. '   ' → logprob: -10.875158309936523
    5. ' :' → logprob: -12.875158309936523
    6. ':return' → logprob: -13.250158309936523
    7. '):' → logprob: -14.000158309936523
    8. ':\' → logprob: -15.250158309936523
    9. '    ' → logprob: -16.000158309936523
    10. ',' → logprob: -16.375158309936523

Token 23: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012165444204583764
    2. '   ' → logprob: -7.001216411590576
    3. ' break' → logprob: -9.251216888427734
    4. ':' → logprob: -9.376216888427734
    5. '	break' → logprob: -9.876216888427734
    6. '\n' → logprob: -10.251216888427734
    7. '	' → logprob: -12.126216888427734
    8. '<|end|>' → logprob: -12.501216888427734
    9. '\t' → logprob: -12.876216888427734
    10. '\' → logprob: -12.876216888427734

Token 24: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6219961047172546
    2. ' break' → logprob: -0.8719961047172546
    3. 'break' (adapté à ' break') → logprob: -3.2469961643218994
    4. '   ' → logprob: -5.24699592590332
    5. '	break' → logprob: -7.12199592590332
    6. '           ' → logprob: -11.24699592590332
    7. '```' → logprob: -11.37199592590332
    8. '_break' → logprob: -11.62199592590332
    9. ' ' → logprob: -12.74699592590332
    10. ' ' → logprob: -12.99699592590332

Token 25: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.074397012591362
    2. '\n' → logprob: -3.824397087097168
    3. '<|end|>' → logprob: -3.949397087097168
    4. ':' → logprob: -4.449397087097168
    5. '    
' → logprob: -5.324397087097168
    6. 'n' → logprob: -5.824397087097168
    7. 'print' → logprob: -6.574397087097168
    8. '#' → logprob: -6.699397087097168
    9. '
' → logprob: -6.949397087097168
    10. '  ' → logprob: -6.949397087097168

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034715939313173294
    2. '    
' → logprob: -4.2847161293029785
    3. '<|end|>' → logprob: -5.0347161293029785
    4. '\n' → logprob: -5.4097161293029785
    5. '#' → logprob: -6.5347161293029785
    6. 'n' → logprob: -6.6597161293029785
    7. ')' → logprob: -7.1597161293029785
    8. '
' → logprob: -7.1597161293029785
    9. '    ' → logprob: -7.1597161293029785
    10. 'print' → logprob: -7.2847161293029785

Token 27: ' tl' (ID: 14348)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06148219481110573
    2. '    ' → logprob: -3.9364821910858154
    3. '       ' → logprob: -4.5614824295043945
    4. ' ' → logprob: -4.6864824295043945
    5. '    
' → logprob: -5.4364824295043945
    6. 'print' → logprob: -5.9364824295043945
    7. '[' → logprob: -5.9364824295043945
    8. '\n' → logprob: -6.0614824295043945
    9. '```' → logprob: -6.6864824295043945
    10. '\' → logprob: -7.0614824295043945

Token 28: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14246748387813568
    2. ' =' → logprob: -3.142467498779297
    3. '=[]' → logprob: -3.767467498779297
    4. 'i' → logprob: -4.267467498779297
    5. 'en' → logprob: -4.267467498779297
    6. 'ine' → logprob: -4.892467498779297
    7. ',' → logprob: -5.017467498779297
    8. 'e' → logprob: -5.892467498779297
    9. 's' → logprob: -5.892467498779297
    10. 'ines' → logprob: -6.142467498779297

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12215794622898102
    2. 'for' → logprob: -2.6221580505371094
    3. ' for' → logprob: -3.6221580505371094
    4. '	for' → logprob: -4.997158050537109
    5. '<|end|>' → logprob: -6.122158050537109
    6. '[' → logprob: -6.372158050537109
    7. 't' → logprob: -6.622158050537109
    8. ' ' → logprob: -6.872158050537109
    9. '\t' → logprob: -7.622158050537109
    10. '    ' → logprob: -8.12215805053711

Token 30: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11560572683811188
    2. '   ' → logprob: -2.7406058311462402
    3. ' for' → logprob: -3.2406058311462402
    4. 't' → logprob: -5.49060583114624
    5. '	for' → logprob: -7.61560583114624
    6. '[' → logprob: -8.240605354309082
    7. ' ' → logprob: -8.240605354309082
    8. '\t' → logprob: -9.865605354309082
    9. '    ' → logprob: -10.115605354309082
    10. 'f' → logprob: -10.115605354309082

Token 31: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.037946123629808426
    2. 'n' → logprob: -3.9129462242126465
    3. ' m' → logprob: -4.1629462242126465
    4. 'm' → logprob: -7.1629462242126465
    5. ' ' → logprob: -7.2879462242126465
    6. ' len' → logprob: -9.037945747375488
    7. '  ' → logprob: -11.412945747375488
    8. 'len' → logprob: -11.475445747375488
    9. ' abs' → logprob: -11.475445747375488
    10. '(n' → logprob: -11.725445747375488

Token 32: '>' (ID: 29)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2957519590854645
    2. '>' → logprob: -2.1707520484924316
    3. ' <=' → logprob: -3.2957520484924316
    4. ' <' → logprob: -3.5457520484924316
    5. ' >=' → logprob: -3.9207520484924316
    6. ' ==' → logprob: -4.045752048492432
    7. '<' → logprob: -4.670752048492432
    8. ' ' → logprob: -5.170752048492432
    9. '==' → logprob: -5.170752048492432
    10. '%' → logprob: -5.170752048492432

Token 33: '0' (ID: 15)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.170028954744339
    2. ' m' → logprob: -2.6700289249420166
    3. '0' → logprob: -2.9200289249420166
    4. ' ' → logprob: -3.7950289249420166
    5. '=' → logprob: -5.170029163360596
    6. '1' → logprob: -6.545029163360596
    7. '100' → logprob: -6.920029163360596
    8. '10' → logprob: -7.545029163360596
    9. '=m' → logprob: -7.795029163360596
    10. '20' → logprob: -8.295028686523438

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006250134669244289
    2. ' and' → logprob: -5.381249904632568
    3. ' :' → logprob: -6.756249904632568
    4. 'and' → logprob: -8.506250381469727
    5. ',' → logprob: -9.506250381469727
    6. '   ' → logprob: -10.256250381469727
    7. ' ' → logprob: -10.881250381469727
    8. ':
' → logprob: -11.006250381469727
    9. '    ' → logprob: -11.131250381469727
    10. '       ' → logprob: -11.381250381469727

Token 35: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4996528625488281
    2. '    ' → logprob: -1.4996528625488281
    3. '       ' → logprob: -2.124652862548828
    4. '   ' → logprob: -3.999652862548828
    5. '<|end|>' → logprob: -3.999652862548828
    6. '        ' → logprob: -5.249652862548828
    7. ' ' → logprob: -6.249652862548828
    8. '[' → logprob: -6.499652862548828
    9. '     ' → logprob: -6.874652862548828
    10. '<|end|>' → logprob: -7.249652862548828

Token 36: ' tl' (ID: 14348)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9633498787879944
    2. ' tl' → logprob: -1.2133498191833496
    3. 't' → logprob: -2.2133498191833496
    4. ' t' → logprob: -2.5883498191833496
    5. 'tl' (adapté à ' tl') → logprob: -2.9633498191833496
    6. 'for' → logprob: -3.3383498191833496
    7. '    ' → logprob: -3.8383498191833496
    8. ' ' → logprob: -4.46334981918335
    9. '   ' → logprob: -5.33834981918335
    10. '	t' → logprob: -5.83834981918335

Token 37: '=list' (ID: 93413)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.4474530816078186
    2. '.' → logprob: -1.0724530220031738
    3. '=' → logprob: -4.447453022003174
    4. '.extend' → logprob: -5.697453022003174
    5. ' =' → logprob: -6.322453022003174
    6. ' .' → logprob: -6.697453022003174
    7. '+=' → logprob: -8.822453498840332
    8. ' +=' → logprob: -9.447453498840332
    9. '.=' → logprob: -9.572453498840332
    10. '.ap' → logprob: -9.947453498840332

Token 38: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.43669548630714417
    2. '(' → logprob: -1.1866954565048218
    3. '(range' → logprob: -3.0616955757141113
    4. '(input' → logprob: -6.436695575714111
    5. '(int' → logprob: -8.936695098876953
    6. '()' → logprob: -10.061695098876953
    7. '(filter' → logprob: -12.686695098876953
    8. '(
' → logprob: -12.811695098876953
    9. '(eval' → logprob: -13.186695098876953
    10. '(

' → logprob: -13.311695098876953

Token 39: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0024945642799139023
    2. '(' → logprob: -6.0024943351745605
    3. '[int' → logprob: -12.127494812011719
    4. '<int' → logprob: -12.252494812011719
    5. '(lambda' → logprob: -13.127494812011719
    6. '=int' → logprob: -13.252494812011719
    7. ',int' → logprob: -13.252494812011719
    8. '(
' → logprob: -14.002494812011719
    9. ']int' → logprob: -14.002494812011719
    10. '(str' → logprob: -14.502494812011719

Token 40: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.011963837780058384
    2. ',' → logprob: -5.011963844299316
    3. '(input' → logprob: -5.261963844299316
    4. '(' → logprob: -10.011963844299316
    5. ',int' → logprob: -13.386963844299316
    6. 'input' → logprob: -14.011963844299316
    7. ' ,' → logprob: -14.261963844299316
    8. '   ' → logprob: -14.386963844299316
    9. ',(' → logprob: -14.761963844299316
    10. ' input' → logprob: -16.011962890625

Token 41: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.170270353322849e-05
    2. '()' → logprob: -9.875061988830566
    3. ' ().' → logprob: -12.125061988830566
    4. '(' → logprob: -12.750061988830566
    5. '()))' → logprob: -14.750061988830566
    6. '())' → logprob: -14.750061988830566
    7. '(.' → logprob: -15.125061988830566
    8. '()).' → logprob: -15.500061988830566
    9. '.' → logprob: -16.25006103515625
    10. '(input' → logprob: -16.50006103515625

Token 42: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.60414821645827e-06
    2. 'strip' → logprob: -12.750004768371582
    3. ' split' → logprob: -13.875004768371582
    4. 'rstrip' → logprob: -15.000004768371582
    5. '(split' → logprob: -15.250004768371582
    6. 's' → logprob: -16.750003814697266
    7. 'spl' → logprob: -16.750003814697266
    8. '.split' → logprob: -18.500003814697266
    9. '_split' → logprob: -18.875003814697266
    10. ')' → logprob: -19.125003814697266

Token 43: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.09760557860136032
    2. '))' → logprob: -3.3476054668426514
    3. '())' → logprob: -3.3476054668426514
    4. '()' → logprob: -4.0976057052612305
    5. '(' → logprob: -5.5976057052612305
    6. ')' → logprob: -6.4726057052612305
    7. '())))' → logprob: -7.8476057052612305
    8. ')))' → logprob: -8.59760570526123
    9. '()))
' → logprob: -9.09760570526123
    10. '()));' → logprob: -10.84760570526123

Token 44: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6246734261512756
    2. '<|end|>' → logprob: -1.2496733665466309
    3. '   ' → logprob: -2.624673366546631
    4. ' ' → logprob: -3.124673366546631
    5. ':' → logprob: -3.249673366546631
    6. '  
' → logprob: -5.749673366546631
    7. '    
' → logprob: -5.874673366546631
    8. ' 
' → logprob: -5.874673366546631
    9. '    ' → logprob: -6.124673366546631
    10. '<|end|>' → logprob: -6.249673366546631

Token 45: ' tr' (ID: 498)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4964451789855957
    2. 's' → logprob: -1.6214451789855957
    3. 't' → logprob: -2.1214451789855957
    4. '   ' → logprob: -2.3714451789855957
    5. '[' → logprob: -2.4964451789855957
    6. '    ' → logprob: -3.3714451789855957
    7. ' 
' → logprob: -3.4964451789855957
    8. '    
' → logprob: -3.4964451789855957
    9. 'r' → logprob: -4.121445178985596
    10. '<|end|>' → logprob: -4.371445178985596

Token 46: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5336719751358032
    2. '=[]' → logprob: -0.9086719751358032
    3. '=list' → logprob: -5.158671855926514
    4. ' =' → logprob: -5.783671855926514
    5. 'l' → logprob: -7.533671855926514
    6. '=[]
' → logprob: -7.908671855926514
    7. '=[' → logprob: -8.283672332763672
    8. '=[]
' → logprob: -9.283672332763672
    9. 'ight' → logprob: -9.783672332763672
    10. '.' → logprob: -9.783672332763672

Token 47: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002068302594125271
    2. '   ' → logprob: -7.252068519592285
    3. ' if' → logprob: -7.377068519592285
    4. '<|end|>' → logprob: -7.377068519592285
    5. '<|end|>' → logprob: -10.252068519592285
    6. '```' → logprob: -11.002068519592285
    7. ';if' → logprob: -11.627068519592285
    8. '[' → logprob: -11.752068519592285
    9. '	if' → logprob: -12.002068519592285
    10. 'tokens' → logprob: -12.002068519592285

Token 49: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.12699152529239655
    2. 'm' → logprob: -2.1269915103912354
    3. ' n' → logprob: -10.001991271972656
    4. 'n' → logprob: -11.626991271972656
    5. ' ' → logprob: -12.501991271972656
    6. '   ' → logprob: -12.751991271972656
    7. '>' → logprob: -14.376991271972656
    8. '  ' → logprob: -15.376991271972656
    9. '	m' → logprob: -15.376991271972656
    10. ' ' → logprob: -15.376991271972656

Token 50: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -8.554343366995454e-05
    2. ' >' → logprob: -9.375085830688477
    3. '&gt' → logprob: -15.375085830688477
    4. '＞' → logprob: -15.875085830688477
    5. '()>' → logprob: -16.000085830688477
    6. ')>' → logprob: -16.500085830688477
    7. '">' → logprob: -16.750085830688477
    8. '   ' → logprob: -17.125085830688477
    9. '```' → logprob: -17.625085830688477
    10. ' ' → logprob: -17.750085830688477

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029923528200015426
    2. ' ' → logprob: -8.375299453735352
    3. '>' → logprob: -9.750299453735352
    4. '   ' → logprob: -11.750299453735352
    5. '1' → logprob: -13.750299453735352
    6. '  ' → logprob: -14.875299453735352
    7. ' >' → logprob: -15.812799453735352
    8. '=' → logprob: -16.00029945373535
    9. '```' → logprob: -16.00029945373535
    10. '    ' → logprob: -16.25029945373535

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007106058765202761
    2. '=' → logprob: -5.632105827331543
    3. ':
' → logprob: -5.757105827331543
    4. '       ' → logprob: -8.382105827331543
    5. '   ' → logprob: -10.007105827331543
    6. ' =' → logprob: -10.632105827331543
    7. ':list' → logprob: -11.132105827331543
    8. ':=' → logprob: -11.257105827331543
    9. '=list' → logprob: -12.882105827331543
    10. '==' → logprob: -13.257105827331543

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7712870240211487
    2. 'tr' → logprob: -1.021286964416504
    3. '   ' → logprob: -1.771286964416504
    4. 'list' → logprob: -5.521286964416504
    5. ' tr' → logprob: -6.771286964416504
    6. '	tr' → logprob: -7.146286964416504
    7. ' list' → logprob: -7.896286964416504
    8. 'trl' → logprob: -8.146286964416504
    9. 'tl' → logprob: -8.271286964416504
    10. '    ' → logprob: -8.646286964416504

Token 54: ' tr' (ID: 498)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' (adapté à ' tr') → logprob: -0.003308777464553714
    2. 'list' → logprob: -6.2533087730407715
    3. 'tl' → logprob: -7.2533087730407715
    4. ' tr' → logprob: -7.5033087730407715
    5. 'trl' → logprob: -9.12830924987793
    6. ' list' → logprob: -12.00330924987793
    7. ' tl' → logprob: -13.62830924987793
    8. 'tre' → logprob: -14.00330924987793
    9. '<tr' → logprob: -14.12830924987793
    10. '   ' → logprob: -14.75330924987793

Token 55: '=list' (ID: 93413)
  Prédit: '=list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=list' → logprob: -0.04859134554862976
    2. '=' → logprob: -3.048591375350952
    3. '=input' → logprob: -13.923591613769531
    4. '=int' → logprob: -13.923591613769531
    5. ' =' → logprob: -14.423591613769531
    6. '=line' → logprob: -14.798591613769531
    7. '=[]' → logprob: -15.173591613769531
    8. ':list' → logprob: -15.923591613769531
    9. '=

' → logprob: -16.17359161376953
    10. '=l' → logprob: -16.29859161376953

Token 56: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.5129412412643433
    2. '(int' → logprob: -1.2629412412643433
    3. '(' → logprob: -2.137941360473633
    4. ' (' → logprob: -7.762941360473633
    5. '(input' → logprob: -10.637941360473633
    6. '(in' → logprob: -10.762941360473633
    7. '(list' → logprob: -10.762941360473633
    8. '(m' → logprob: -11.262941360473633
    9. '<int' → logprob: -11.262941360473633
    10. '(
' → logprob: -11.887941360473633

Token 57: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006509594968520105
    2. 'int' → logprob: -7.875650882720947
    3. '<int' → logprob: -8.500651359558105
    4. '=int' → logprob: -10.375651359558105
    5. '[int' → logprob: -10.750651359558105
    6. ',int' → logprob: -12.500651359558105
    7. ']int' → logprob: -12.500651359558105
    8. '(' → logprob: -12.750651359558105
    9. ' (' → logprob: -13.000651359558105
    10. '```' → logprob: -13.875651359558105

Token 58: ',input' (ID: 123014)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.036108653992414474
    2. ',int' → logprob: -3.5361087322235107
    3. '=int' → logprob: -5.536108493804932
    4. 'int' → logprob: -7.286108493804932
    5. '<int' → logprob: -7.286108493804932
    6. '[int' → logprob: -8.03610897064209
    7. ',' → logprob: -8.78610897064209
    8. ':int' → logprob: -9.03610897064209
    9. '(input' → logprob: -9.28610897064209
    10. ' (' → logprob: -9.41110897064209

Token 59: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.65707261255011e-06
    2. ' ().' → logprob: -12.375008583068848
    3. '()' → logprob: -13.000008583068848
    4. '.' → logprob: -13.125008583068848
    5. '(' → logprob: -16.625009536743164
    6. '().'' → logprob: -17.125009536743164
    7. '().__' → logprob: -17.500009536743164
    8. '(.' → logprob: -17.750009536743164
    9. '```' → logprob: -18.375009536743164
    10. ' .' → logprob: -18.500009536743164

Token 60: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.8624639324116288e-06
    2. '(split' → logprob: -14.750001907348633
    3. 'spl' → logprob: -14.875001907348633
    4. 's' → logprob: -14.875001907348633
    5. '```' → logprob: -14.875001907348633
    6. ')' → logprob: -15.375001907348633
    7. ' split' → logprob: -16.500001907348633
    8. 'strip' → logprob: -17.625001907348633
    9. 'plit' → logprob: -17.875001907348633
    10. '.split' → logprob: -18.000001907348633

Token 61: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.7061120867729187
    2. '))' → logprob: -1.4561121463775635
    3. ')' → logprob: -1.8311121463775635
    4. '())' → logprob: -2.7061121463775635
    5. '()' → logprob: -3.0811121463775635
    6. '(' → logprob: -8.081111907958984
    7. ' ))' → logprob: -11.706111907958984
    8. '()));' → logprob: -11.706111907958984
    9. '()))
' → logprob: -11.831111907958984
    10. ')))' → logprob: -11.831111907958984

Token 62: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2868320941925049
    2. '   ' → logprob: -1.2868320941925049
    3. 't' → logprob: -2.161832094192505
    4. '<|end|>' → logprob: -2.786832094192505
    5. ' 
' → logprob: -3.161832094192505
    6. 'n' → logprob: -3.161832094192505
    7. '    
' → logprob: -3.286832094192505
    8. '\n' → logprob: -3.411832094192505
    9. ' ' → logprob: -4.036831855773926
    10. '[' → logprob: -4.161831855773926

Token 63: ' times' (ID: 4238)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0889164209365845
    2. 'c' → logprob: -1.5889164209365845
    3. 't' → logprob: -2.213916301727295
    4. 'r' → logprob: -2.338916301727295
    5. 'i' → logprob: -2.838916301727295
    6. 'l' → logprob: -3.463916301727295
    7. 'a' → logprob: -3.463916301727295
    8. 'p' → logprob: -4.088916301727295
    9. '   ' → logprob: -4.088916301727295
    10. 'n' → logprob: -4.463916301727295

Token 64: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42189595103263855
    2. ' =' → logprob: -1.671895980834961
    3. '_' → logprob: -2.421895980834961
    4. '=[]' → logprob: -3.421895980834961
    5. 's' → logprob: -4.171895980834961
    6. '=set' → logprob: -5.421895980834961
    7. '_set' → logprob: -6.296895980834961
    8. '_seen' → logprob: -6.421895980834961
    9. '.' → logprob: -6.671895980834961
    10. '[' → logprob: -7.046895980834961

Token 65: 'sorted' (ID: 64288)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.36054062843322754
    2. '0' → logprob: -1.7355406284332275
    3. '{}' → logprob: -2.9855406284332275
    4. 'set' → logprob: -3.4855406284332275
    5. '[' → logprob: -3.6105406284332275
    6. 'sorted' → logprob: -5.235540390014648
    7. 'len' → logprob: -5.860540390014648
    8. 'tl' → logprob: -6.110540390014648
    9. '{' → logprob: -6.485540390014648
    10. '[len' → logprob: -6.735540390014648

Token 66: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.04873758926987648
    2. '(' → logprob: -3.0487375259399414
    3. '((' → logprob: -9.423737525939941
    4. '(tr' → logprob: -9.923737525939941
    5. '(list' → logprob: -12.548737525939941
    6. ' (' → logprob: -12.798737525939941
    7. '(tm' → logprob: -13.048737525939941
    8. '(tf' → logprob: -13.173737525939941
    9. '(ts' → logprob: -13.548737525939941
    10. '([' → logprob: -13.673737525939941

Token 67: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.000611763505730778
    2. '(l' → logprob: -7.500611782073975
    3. 'imes' → logprob: -11.250611305236816
    4. '(' → logprob: -11.375611305236816
    5. '(t' → logprob: -11.375611305236816
    6. 'L' → logprob: -11.500611305236816
    7. '(n' → logprob: -13.125611305236816
    8. '(len' → logprob: -13.625611305236816
    9. 'list' → logprob: -14.000611305236816
    10. '(times' → logprob: -14.250611305236816

Token 68: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.022277824580669403
    2. ' +' → logprob: -3.89727783203125
    3. '+m' → logprob: -6.52227783203125
    4. ')' → logprob: -9.02227783203125
    5. '+t' → logprob: -9.52227783203125
    6. '+)' → logprob: -10.77227783203125
    7. ')+' → logprob: -11.39727783203125
    8. ' ' → logprob: -11.64727783203125
    9. '+r' → logprob: -12.02227783203125
    10. ' )' → logprob: -12.39727783203125

Token 69: 'tr' (ID: 371)
  Prédit: 'tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.005250125657767057
    2. ' tr' → logprob: -5.255249977111816
    3. '	tr' → logprob: -12.380249977111816
    4. '[' → logprob: -12.880249977111816
    5. '   ' → logprob: -13.255249977111816
    6. 'trl' → logprob: -13.380249977111816
    7. '<tr' → logprob: -13.380249977111816
    8. ' ' → logprob: -13.505249977111816
    9. '(tr' → logprob: -14.005249977111816
    10. '  ' → logprob: -15.255249977111816

Token 70: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.0948158382670954e-05
    2. ' )' → logprob: -11.375030517578125
    3. ')
' → logprob: -11.625030517578125
    4. '))' → logprob: -12.000030517578125
    5. '[' → logprob: -13.625030517578125
    6. '()' → logprob: -14.375030517578125
    7. ',' → logprob: -14.375030517578125
    8. ']' → logprob: -14.750030517578125
    9. '   ' → logprob: -15.375030517578125
    10. ')

' → logprob: -15.500030517578125

Token 71: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3168904483318329
    2. ')' → logprob: -2.1918904781341553
    3. '[' → logprob: -2.9418904781341553
    4. '
' → logprob: -3.0668904781341553
    5. '<|end|>' → logprob: -3.8168904781341553
    6. '   ' → logprob: -4.191890239715576
    7. 'for' → logprob: -5.441890239715576
    8. 'if' → logprob: -5.691890239715576
    9. '.' → logprob: -6.066890239715576
    10. '```' → logprob: -6.191890239715576

Token 72: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.36027491092681885
    2. ')' → logprob: -1.6102749109268188
    3. '[' → logprob: -3.3602747917175293
    4. 'for' → logprob: -3.9852747917175293
    5. '\n' → logprob: -4.110274791717529
    6. '   ' → logprob: -4.610274791717529
    7. 'if' (adapté à ' if') → logprob: -5.235274791717529
    8. '0' → logprob: -6.110274791717529
    9. '
' → logprob: -6.360274791717529
    10. ' 
' → logprob: -6.610274791717529

Token 73: ' not' (ID: 625)
  Prédit: ' times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.9805177450180054
    2. ' len' → logprob: -0.9805177450180054
    3. 'len' → logprob: -1.7305177450180054
    4. 'times' → logprob: -2.855517864227295
    5. ' n' → logprob: -4.730517864227295
    6. ' not' → logprob: -5.980517864227295
    7. 'n' → logprob: -6.730517864227295
    8. ' sum' → logprob: -7.605517864227295
    9. ' m' → logprob: -8.230517387390137
    10. ' ' → logprob: -8.230517387390137

Token 74: ' times' (ID: 4238)
  Prédit: ' times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.015189834870398045
    2. 'times' → logprob: -4.7651896476745605
    3. ' len' → logprob: -5.6401896476745605
    4. ' ' → logprob: -6.3901896476745605
    5. ' tl' → logprob: -7.1401896476745605
    6. ' all' → logprob: -8.765190124511719
    7. 'len' → logprob: -9.015190124511719
    8. ' time' → logprob: -9.640190124511719
    9. ' any' → logprob: -10.015190124511719
    10. '  ' → logprob: -11.015190124511719

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03920287638902664
    2. ' or' → logprob: -3.289202928543091
    3. '.' → logprob: -7.789202690124512
    4. '[' → logprob: -7.914202690124512
    5. 'or' → logprob: -8.539202690124512
    6. ' :' → logprob: -10.289202690124512
    7. ' and' → logprob: -10.789202690124512
    8. ':return' → logprob: -10.914202690124512
    9. '==' → logprob: -11.039202690124512
    10. '[:]' → logprob: -11.164202690124512

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6727649569511414
    2. '   ' → logprob: -0.9227649569511414
    3. ':' → logprob: -2.422765016555786
    4. '    ' → logprob: -5.922764778137207
    5. '     ' → logprob: -8.797764778137207
    6. '    
' → logprob: -9.047764778137207
    7. '        
' → logprob: -9.547764778137207
    8. ' ' → logprob: -9.547764778137207
    9. '      ' → logprob: -9.547764778137207
    10. '	   ' → logprob: -9.922764778137207

Token 77: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8409588932991028
    2. 'print' (adapté à ' print') → logprob: -0.8409588932991028
    3. 'continue' → logprob: -2.465958833694458
    4. ' continue' → logprob: -3.590958833694458
    5. ' print' → logprob: -3.715958833694458
    6. '    
' → logprob: -8.965958595275879
    7. '```' → logprob: -9.215958595275879
    8. '	continue' → logprob: -9.465958595275879
    9. '       ' → logprob: -9.715958595275879
    10. 'break' → logprob: -10.465958595275879

Token 78: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4450797140598297
    2. '()' → logprob: -1.0700796842575073
    3. '("' → logprob: -4.695079803466797
    4. '('' → logprob: -5.445079803466797
    5. '("")' → logprob: -6.195079803466797
    6. '0' → logprob: -8.445079803466797
    7. '(-' → logprob: -8.570079803466797
    8. '(None' → logprob: -8.945079803466797
    9. '("("' → logprob: -9.070079803466797
    10. '("(' → logprob: -11.070079803466797

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.046025488525629044
    2. '"' → logprob: -3.546025514602661
    3. '-' → logprob: -4.546025276184082
    4. ')' → logprob: -6.296025276184082
    5. ''' → logprob: -6.671025276184082
    6. ' ' → logprob: -6.921025276184082
    7. '""' → logprob: -8.421025276184082
    8. 'None' → logprob: -8.483525276184082
    9. '"-' → logprob: -8.733525276184082
    10. '")' → logprob: -9.108525276184082

Token 80: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012118533049942926
    2. ')
' → logprob: -9.750121116638184
    3. ' )' → logprob: -10.000121116638184
    4. '   ' → logprob: -11.250121116638184
    5. '))' → logprob: -13.250121116638184
    6. ' ' → logprob: -14.375121116638184
    7. '')' → logprob: -15.250121116638184
    8. '()' → logprob: -15.375121116638184
    9. '0' → logprob: -15.625121116638184
    10. '())' → logprob: -15.750121116638184

Token 81: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02282341755926609
    2. 'else' → logprob: -4.147823333740234
    3. ' else' → logprob: -5.397823333740234
    4. '    
' → logprob: -7.272823333740234
    5. ')' → logprob: -7.772823333740234
    6. ' ' → logprob: -8.397823333740234
    7. '  ' → logprob: -9.022823333740234
    8. '\n' → logprob: -9.022823333740234
    9. '    ' → logprob: -9.522823333740234
    10. '       ' → logprob: -9.647823333740234

Token 82: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.8410142064094543
    2. '   ' → logprob: -1.3410141468048096
    3. 'else' → logprob: -1.5910141468048096
    4. ' continue' → logprob: -2.7160141468048096
    5. ' else' → logprob: -3.5910141468048096
    6. ' ' → logprob: -5.841014385223389
    7. '	continue' → logprob: -6.091014385223389
    8. 'contin' → logprob: -6.091014385223389
    9. '       ' → logprob: -6.841014385223389
    10. '    ' → logprob: -8.59101390838623

Token 83: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24822191894054413
    2. '<|end|>' → logprob: -2.2482218742370605
    3. '    
' → logprob: -3.3732218742370605
    4. '  
' → logprob: -3.7482218742370605
    5. '
' → logprob: -4.2482218742370605
    6. '   
' → logprob: -4.3732218742370605
    7. ' 
' → logprob: -4.3732218742370605
    8. '  ' → logprob: -5.2482218742370605
    9. '\n' → logprob: -5.7482218742370605
    10. ' ' → logprob: -5.9982218742370605

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0437295064330101
    2. '    
' → logprob: -4.293729305267334
    3. '<|end|>' → logprob: -5.293729305267334
    4. '
' → logprob: -5.543729305267334
    5. '  
' → logprob: -5.668729305267334
    6. '  ' → logprob: -5.668729305267334
    7. '   
' → logprob: -5.793729305267334
    8. ' 
' → logprob: -6.043729305267334
    9. ' ' → logprob: -6.043729305267334
    10. '0' → logprob: -6.168729305267334

Token 85: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.9225389957427979
    2. 'count' → logprob: -1.5475389957427979
    3. 'cnt' → logprob: -3.672538995742798
    4. 'res' → logprob: -3.797538995742798
    5. 'current' → logprob: -3.797538995742798
    6. 'start' → logprob: -3.922538995742798
    7. 'ans' → logprob: -3.922538995742798
    8. 'c' → logprob: -4.047538757324219
    9. 'time' → logprob: -4.047538757324219
    10. 'result' → logprob: -4.172538757324219

Token 86: '_gap' (ID: 131234)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5428512692451477
    2. '_gap' → logprob: -1.667851209640503
    3. '_time' → logprob: -1.792851209640503
    4. '_diff' → logprob: -3.167851209640503
    5. '_wait' → logprob: -5.417851448059082
    6. '=' → logprob: -5.792851448059082
    7. '_len' → logprob: -6.542851448059082
    8. '_interval' → logprob: -6.792851448059082
    9. '_length' → logprob: -6.917851448059082
    10. 'diff' → logprob: -7.042851448059082

Token 87: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38690420985221863
    2. ' =' → logprob: -1.136904239654541
    3. '=max' → logprob: -11.011903762817383
    4. '_' → logprob: -11.636903762817383
    5. ' ' → logprob: -13.011903762817383
    6. ',' → logprob: -13.511903762817383
    7. '=int' → logprob: -13.636903762817383
    8. '=_' → logprob: -14.136903762817383
    9. '_=' → logprob: -14.511903762817383
    10. '=

' → logprob: -14.511903762817383

Token 88: 'times' (ID: 32499)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25702643394470215
    2. 'times' → logprob: -1.8820264339447021
    3. 'max' → logprob: -2.632026433944702
    4. ' times' → logprob: -6.507026672363281
    5. ' max' → logprob: -7.507026672363281
    6. ' ' → logprob: -8.757026672363281
    7. '-' → logprob: -9.382026672363281
    8. 'float' → logprob: -10.819526672363281
    9. '(max' → logprob: -10.944526672363281
    10. '(times' → logprob: -11.069526672363281

Token 89: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012928384239785373
    2. '[-' → logprob: -9.250129699707031
    3. '0' → logprob: -10.875129699707031
    4. '1' → logprob: -12.750129699707031
    5. '.' → logprob: -13.375129699707031
    6. '=' → logprob: -13.625129699707031
    7. ' ' → logprob: -13.750129699707031
    8. '-' → logprob: -13.750129699707031
    9. '```' → logprob: -13.750129699707031
    10. 'import' → logprob: -14.687629699707031

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03408315032720566
    2. '-' → logprob: -3.784083127975464
    3. '1' → logprob: -4.534083366394043
    4. ' ' → logprob: -10.659083366394043
    5. ' -' → logprob: -11.909083366394043
    6. 'i' → logprob: -12.534083366394043
    7. ']' → logprob: -12.909083366394043
    8. 'len' → logprob: -13.846583366394043
    9. '```' → logprob: -14.096583366394043
    10. '   ' → logprob: -14.159083366394043

Token 91: ']-' (ID: 27107)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04456338286399841
    2. '<|end|>' → logprob: -3.4195632934570312
    3. ' )' → logprob: -5.169563293457031
    4. '-' → logprob: -5.669563293457031
    5. ' -' → logprob: -7.544563293457031
    6. '<|end|>' → logprob: -7.919563293457031
    7. ')-' → logprob: -8.294563293457031
    8. ']' → logprob: -8.794563293457031
    9. '+' → logprob: -9.294563293457031
    10. '-)' → logprob: -9.419563293457031

Token 92: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006749047315679491
    2. '-' → logprob: -8.250675201416016
    3. ' ' → logprob: -8.625675201416016
    4. '1' → logprob: -8.875675201416016
    5. '9' → logprob: -11.250675201416016
    6. '   ' → logprob: -11.813175201416016
    7. '-s' → logprob: -11.875675201416016
    8. '2' → logprob: -12.063175201416016
    9. '900' → logprob: -12.063175201416016
    10. '10' → logprob: -12.125675201416016

Token 93: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6395241022109985
    2. '<|end|>' → logprob: -1.0145241022109985
    3. ' for' → logprob: -3.014523983001709
    4. ')' → logprob: -3.264523983001709
    5. ' ' → logprob: -4.764523983001709
    6. '<|end|>' → logprob: -5.639523983001709
    7. '-' → logprob: -6.514523983001709
    8. '   ' → logprob: -7.014523983001709
    9. '  ' → logprob: -7.139523983001709
    10. 'i' → logprob: -7.139523983001709

Token 96: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04859054833650589
    2. ' i' → logprob: -3.048590660095215
    3. ' ' → logprob: -13.548590660095215
    4. 'x' → logprob: -13.923590660095215
    5. '	i' → logprob: -14.548590660095215
    6. 'idx' → logprob: -15.798590660095215
    7. 't' → logprob: -15.923590660095215
    8. 'a' → logprob: -16.5485897064209
    9. 'index' → logprob: -16.7985897064209
    10. '   ' → logprob: -17.2985897064209

Token 97: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009859737940132618
    2. 'in' → logprob: -4.634859561920166
    3. '	in' → logprob: -9.884860038757324
    4. ' ' → logprob: -10.009860038757324
    5. '  ' → logprob: -13.134860038757324
    6. '+' → logprob: -13.384860038757324
    7. '1' → logprob: -13.884860038757324
    8. ',' → logprob: -14.384860038757324
    9. '   ' → logprob: -15.009860038757324
    10. 'In' → logprob: -15.134860038757324

Token 98: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03804539144039154
    2. 'range' → logprob: -3.2880454063415527
    3. '	range' → logprob: -13.788044929504395
    4. '(range' → logprob: -13.913044929504395
    5. ' xrange' → logprob: -13.913044929504395
    6. ' ' → logprob: -13.913044929504395
    7. '   ' → logprob: -16.66304588317871
    8. '  ' → logprob: -16.66304588317871
    9. '_range' → logprob: -19.16304588317871
    10. ' rango' → logprob: -19.16304588317871

Token 99: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00020568605395965278
    2. '(len' → logprob: -8.500205993652344
    3. '1' → logprob: -13.125205993652344
    4. 'len' → logprob: -15.875205993652344
    5. ' (' → logprob: -19.000205993652344
    6. '   ' → logprob: -19.250205993652344
    7. '(
' → logprob: -20.250205993652344
    8. ' ' → logprob: -21.375205993652344
    9. '	len' → logprob: -21.875205993652344
    10. ' len' → logprob: -22.625205993652344

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00977474357932806
    2. 'len' → logprob: -4.634774684906006
    3. ' ' → logprob: -11.134775161743164
    4. ' len' → logprob: -12.884775161743164
    5. '   ' → logprob: -14.259775161743164
    6. '(len' → logprob: -14.884775161743164
    7. '-' → logprob: -15.134775161743164
    8. '0' → logprob: -15.259775161743164
    9. '  ' → logprob: -17.134775161743164
    10. '2' → logprob: -17.759775161743164

Token 101: ',len' (ID: 73338)
  Prédit: ',len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',len' → logprob: -0.049892857670784
    2. ',' → logprob: -3.0498929023742676
    3. ' ,' → logprob: -7.549892902374268
    4. '(len' → logprob: -7.674892902374268
    5. ' len' → logprob: -8.67489242553711
    6. 'len' → logprob: -10.29989242553711
    7. '<len' → logprob: -10.29989242553711
    8. ',n' → logprob: -10.54989242553711
    9. ' ' → logprob: -10.79989242553711
    10. '   ' → logprob: -11.29989242553711

Token 102: '(times' (ID: 135653)
  Prédit: '(times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(times' → logprob: -2.0219828002154827e-05
    2. '(' → logprob: -10.875020027160645
    3. 'times' → logprob: -14.000020027160645
    4. ' times' → logprob: -15.500020027160645
    5. '(time' → logprob: -15.875020027160645
    6. '(tokens' → logprob: -16.25002098083496
    7. '(t' → logprob: -16.87502098083496
    8. ' (' → logprob: -17.62502098083496
    9. '(types' → logprob: -17.87502098083496
    10. ')' → logprob: -17.87502098083496

Token 103: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0068235937505960464
    2. '):
' → logprob: -5.006823539733887
    3. ' ):' → logprob: -9.381823539733887
    4. ')):' → logprob: -11.506823539733887
    5. ':' → logprob: -12.131823539733887
    6. ')' → logprob: -12.506823539733887
    7. '):

' → logprob: -14.006823539733887
    8. '):
' → logprob: -14.131823539733887
    9. ']):' → logprob: -14.506823539733887
    10. '   ' → logprob: -14.506823539733887

Token 104: '       ' (ID: 309)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5339800119400024
    2. '   ' → logprob: -0.9089800119400024
    3. '       ' → logprob: -5.408979892730713
    4. 'max' → logprob: -5.908979892730713
    5. '	max' → logprob: -6.658979892730713
    6. '<|end|>' → logprob: -6.658979892730713
    7. ' ' → logprob: -7.783979892730713
    8. '(max' → logprob: -8.783980369567871
    9. ',max' → logprob: -9.283980369567871
    10. '    ' → logprob: -9.283980369567871

Token 105: ' gap' (ID: 19953)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.25961369276046753
    2. ' max' → logprob: -1.6346137523651123
    3. '
' → logprob: -3.8846137523651123
    4. '   ' → logprob: -4.884613513946533
    5. ' if' → logprob: -5.759613513946533
    6. 'if' → logprob: -7.134613513946533
    7. 'gap' (adapté à ' gap') → logprob: -7.259613513946533
    8. ' gap' → logprob: -7.884613513946533
    9. '	max' → logprob: -8.009613990783691
    10. '    
' → logprob: -10.134613990783691

Token 106: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012686936184763908
    2. ' =' → logprob: -4.762686729431152
    3. '=max' → logprob: -5.512686729431152
    4. '=t' → logprob: -11.137686729431152
    5. '=int' → logprob: -12.012686729431152
    6. '=

' → logprob: -12.262686729431152
    7. '=time' → logprob: -14.262686729431152
    8. '=min' → logprob: -14.512686729431152
    9. '=i' → logprob: -14.887686729431152
    10. '=len' → logprob: -15.137686729431152

Token 107: 'times' (ID: 32499)
  Prédit: 'times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.0007111206650733948
    2. ' times' → logprob: -7.250710964202881
    3. '(times' → logprob: -13.875711441040039
    4. '   ' → logprob: -16.25071144104004
    5. 't' → logprob: -16.87571144104004
    6. 'time' → logprob: -17.12571144104004
    7. '.times' → logprob: -18.00071144104004
    8. '_times' → logprob: -18.50071144104004
    9. '-times' → logprob: -18.75071144104004
    10. 'timestamps' → logprob: -19.12571144104004

Token 108: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.610702363715973e-06
    2. '[' → logprob: -12.000009536743164
    3. '```' → logprob: -12.875009536743164
    4. '[user' → logprob: -15.375009536743164
    5. '[s' → logprob: -16.250009536743164
    6. '[idx' → logprob: -16.625009536743164
    7. '[
' → logprob: -16.750009536743164
    8. '[I' → logprob: -17.000009536743164
    9. '[index' → logprob: -17.125009536743164
    10. '\[' → logprob: -17.500009536743164

Token 109: ']-' (ID: 27107)
  Prédit: '-times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-times' → logprob: -0.5701216459274292
    2. ' -' → logprob: -1.1951216459274292
    3. '-' → logprob: -2.0701217651367188
    4. '-t' → logprob: -5.195121765136719
    5. '-ti' → logprob: -10.195121765136719
    6. '-time' → logprob: -10.445121765136719
    7. ']-' → logprob: -10.945121765136719
    8. ')-' → logprob: -11.070121765136719
    9. '   ' → logprob: -11.570121765136719
    10. ')' → logprob: -11.820121765136719

Token 110: 'times' (ID: 32499)
  Prédit: 'times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -6.64708495605737e-05
    2. ' times' → logprob: -9.625066757202148
    3. '   ' → logprob: -15.625066757202148
    4. '(times' → logprob: -15.625066757202148
    5. 'imes' → logprob: -17.37506675720215
    6. ' ' → logprob: -19.12506675720215
    7. 'time' → logprob: -19.25006675720215
    8. 't' → logprob: -19.50006675720215
    9. '       ' → logprob: -19.75006675720215
    10. '  ' → logprob: -19.75006675720215

Token 111: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.961759259458631e-06
    2. 'i' → logprob: -12.500004768371582
    3. '[user' → logprob: -14.750004768371582
    4. '-' → logprob: -14.875004768371582
    5. '[' → logprob: -15.750004768371582
    6. '[I' → logprob: -16.7500057220459
    7. '(i' → logprob: -17.2500057220459
    8. '```' → logprob: -17.2500057220459
    9. '{i' → logprob: -17.3750057220459
    10. '   ' → logprob: -17.6250057220459

Token 112: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9266199160483666e-05
    2. '[i' → logprob: -11.750019073486328
    3. 'i' → logprob: -12.250019073486328
    4. ' -' → logprob: -12.375019073486328
    5. '1' → logprob: -13.750019073486328
    6. '[' → logprob: -14.750019073486328
    7. '[-' → logprob: -16.000019073486328
    8. ']-' → logprob: -16.125019073486328
    9. '(i' → logprob: -16.125019073486328
    10. 's' → logprob: -16.500019073486328

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.750000953674316
    3. '   ' → logprob: -15.250000953674316
    4. ']' → logprob: -16.125
    5. '```' → logprob: -16.5
    6. '])' → logprob: -17.25
    7. ')' → logprob: -17.875
    8. '-' → logprob: -18.125
    9. '  ' → logprob: -18.125
    10. '       ' → logprob: -19.5625

Token 114: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030098719522356987
    2. ')
' → logprob: -3.6550986766815186
    3. '   ' → logprob: -5.780098915100098
    4. '       ' → logprob: -8.280098915100098
    5. '-' → logprob: -8.655098915100098
    6. '<|end|>' → logprob: -8.905098915100098
    7. ')
' → logprob: -10.405098915100098
    8. '
' → logprob: -10.780098915100098
    9. ']' → logprob: -11.155098915100098
    10. 'max' → logprob: -11.280098915100098

Token 115: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018763992935419083
    2. '   ' → logprob: -4.768764019012451
    3. ' if' → logprob: -5.393764019012451
    4. '       ' → logprob: -5.893764019012451
    5. '<|end|>' → logprob: -6.143764019012451
    6. 'if' → logprob: -8.518763542175293
    7. '
' → logprob: -8.768763542175293
    8. 'max' → logprob: -9.268763542175293
    9. '    
' → logprob: -10.143763542175293
    10. '<|end|>' → logprob: -10.268763542175293

Token 116: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1354648917913437
    2. ' if' → logprob: -2.135464906692505
    3. 'max' → logprob: -5.260464668273926
    4. '   ' → logprob: -5.760464668273926
    5. ' max' → logprob: -9.010464668273926
    6. '       ' → logprob: -10.885464668273926
    7. '
' → logprob: -11.385464668273926
    8. ' ' → logprob: -13.385464668273926
    9. '	if' → logprob: -13.385464668273926
    10. '```' → logprob: -13.760464668273926

Token 117: ' gap' (ID: 19953)
  Prédit: ' gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gap' → logprob: -0.1602281779050827
    2. 'gap' → logprob: -1.9102281332015991
    3. 'max' → logprob: -13.28522777557373
    4. ' max' → logprob: -13.41022777557373
    5. '_gap' → logprob: -14.91022777557373
    6. '   ' → logprob: -15.66022777557373
    7. ' ' → logprob: -15.66022777557373
    8. 'g' → logprob: -16.785228729248047
    9. '```' → logprob: -17.410228729248047
    10. ' ' → logprob: -17.910228729248047

Token 118: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5760397911071777
    2. ' >' → logprob: -0.8260397911071777
    3. ' ' → logprob: -9.326040267944336
    4. '   ' → logprob: -12.451040267944336
    5. ')>' → logprob: -14.201040267944336
    6. '  ' → logprob: -14.326040267944336
    7. ')' → logprob: -14.451040267944336
    8. '<|end|>' → logprob: -14.451040267944336
    9. ' ' → logprob: -14.576040267944336
    10. ' >

' → logprob: -14.701040267944336

Token 119: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0006267757853493094
    2. ' max' → logprob: -7.375626564025879
    3. '	max' → logprob: -16.875627517700195
    4. ' ' → logprob: -17.875627517700195
    5. '=max' → logprob: -18.250627517700195
    6. 'gap' → logprob: -18.625627517700195
    7. '(max' → logprob: -18.750627517700195
    8. 'maxlength' → logprob: -19.250627517700195
    9. '_max' → logprob: -19.500627517700195
    10. '   ' → logprob: -19.750627517700195

Token 120: '_gap' (ID: 131234)
  Prédit: '_gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gap' → logprob: -6.988221684878226e-06
    2. '_' → logprob: -12.000006675720215
    3. '_g' → logprob: -15.000006675720215
    4. '_max' → logprob: -15.500006675720215
    5. 'gap' → logprob: -16.00000762939453
    6. ' gap' → logprob: -16.00000762939453
    7. ' _' → logprob: -17.75000762939453
    8. '_ga' → logprob: -18.87500762939453
    9. '_gate' → logprob: -19.00000762939453
    10. ' ' → logprob: -19.50000762939453

Token 121: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008947569876909256
    2. ':
' → logprob: -4.758947372436523
    3. '<|end|>' → logprob: -8.883947372436523
    4. '           ' → logprob: -9.883947372436523
    5. '<|end|>' → logprob: -10.258947372436523
    6. '       ' → logprob: -10.258947372436523
    7. '):' → logprob: -10.508947372436523
    8. '):
' → logprob: -11.258947372436523
    9. ':max' → logprob: -11.508947372436523
    10. 'max' → logprob: -11.883947372436523

Token 122: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5107950568199158
    2. ' max' → logprob: -1.3857951164245605
    3. 'max' → logprob: -2.1357951164245605
    4. '       ' → logprob: -3.5107951164245605
    5. '
' → logprob: -7.3857951164245605
    6. '   ' → logprob: -7.5107951164245605
    7. '	max' → logprob: -8.510794639587402
    8. 'gap' → logprob: -9.385794639587402
    9. ' gap' → logprob: -9.385794639587402
    10. '```' → logprob: -9.510794639587402

Token 123: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.5764319896697998
    2. ' max' → logprob: -0.8264319896697998
    3. '           ' → logprob: -7.951432228088379
    4. '               ' → logprob: -9.826432228088379
    5. 'gap' → logprob: -10.201432228088379
    6. ' gap' → logprob: -10.451432228088379
    7. '       ' → logprob: -12.326432228088379
    8. '_max' → logprob: -12.451432228088379
    9. '	max' → logprob: -12.701432228088379
    10. '```' → logprob: -12.951432228088379

Token 124: '_gap' (ID: 131234)
  Prédit: '_gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gap' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -13.625001907348633
    3. 'gap' → logprob: -14.875001907348633
    4. ' gap' → logprob: -17.125001907348633
    5. '_g' → logprob: -17.875001907348633
    6. ' _' → logprob: -18.000001907348633
    7. '```' → logprob: -18.250001907348633
    8. '_max' → logprob: -18.375001907348633
    9. '_gate' → logprob: -19.375001907348633
    10. 'Gap' → logprob: -19.625001907348633

Token 125: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804642707109451
    2. ' =' → logprob: -3.288046360015869
    3. '=g' → logprob: -12.288046836853027
    4. '=max' → logprob: -16.16304588317871
    5. '=
' → logprob: -16.91304588317871
    6. '=cut' → logprob: -16.91304588317871
    7. '<|end|>' → logprob: -17.66304588317871
    8. '=f' → logprob: -17.78804588317871
    9. '=edge' → logprob: -17.91304588317871
    10. '＝' → logprob: -17.91304588317871

Token 126: 'gap' (ID: 61115)
  Prédit: 'gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.0040785204619169235
    2. ' gap' → logprob: -5.504078388214111
    3. '_gap' → logprob: -17.004077911376953
    4. '-gap' → logprob: -17.754077911376953
    5. 'g' → logprob: -18.129077911376953
    6. '   ' → logprob: -20.879077911376953
    7. ' ' → logprob: -21.254077911376953
    8. 'Gap' → logprob: -21.379077911376953
    9. '
' → logprob: -21.379077911376953
    10. '```' → logprob: -22.129077911376953

Token 127: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057078730314970016
    2. '
' → logprob: -3.3070788383483887
    3. ' max' → logprob: -4.807078838348389
    4. '<|end|>' → logprob: -5.932078838348389
    5. '    
' → logprob: -6.432078838348389
    6. ')' → logprob: -6.557078838348389
    7. ' print' → logprob: -6.557078838348389
    8. 'print' → logprob: -6.932078838348389
    9. '```' → logprob: -7.057078838348389
    10. ' 
' → logprob: -7.807078838348389

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015158714726567268
    2. '
' → logprob: -5.515158653259277
    3. ' max' → logprob: -6.015158653259277
    4. '    
' → logprob: -6.140158653259277
    5. ' 
' → logprob: -6.515158653259277
    6. ')' → logprob: -6.640158653259277
    7. '<|end|>' → logprob: -7.140158653259277
    8. 'max' → logprob: -7.390158653259277
    9. '```' → logprob: -7.515158653259277
    10. 'print' → logprob: -8.390158653259277

Token 129: ' end' (ID: 1268)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.17751292884349823
    2. 'print' → logprob: -1.9275128841400146
    3. 'if' → logprob: -4.427513122558594
    4. 'gap' → logprob: -5.677513122558594
    5. ' max' → logprob: -7.177513122558594
    6. ' print' → logprob: -8.552513122558594
    7. ' if' → logprob: -8.677513122558594
    8. '+' → logprob: -8.802513122558594
    9. 'end' (adapté à ' end') → logprob: -9.052513122558594
    10. '```' → logprob: -9.552513122558594

Token 130: '=' (ID: 28)
  Prédit: '_gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gap' → logprob: -0.5318725109100342
    2. '=' → logprob: -1.4068725109100342
    3. '_' → logprob: -2.031872510910034
    4. '_time' → logprob: -3.781872510910034
    5. '=max' → logprob: -6.281872749328613
    6. '_max' → logprob: -6.281872749328613
    7. ' =' → logprob: -6.406872749328613
    8. '_=' → logprob: -6.406872749328613
    9. '_to' → logprob: -6.531872749328613
    10. '_times' → logprob: -7.031872749328613

Token 131: 'times' (ID: 32499)
  Prédit: '90'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.004428458865731955
    2. '100' → logprob: -7.379428386688232
    3. 'max' → logprob: -7.504428386688232
    4. 'times' → logprob: -7.629428386688232
    5. '720' → logprob: -8.00442886352539
    6. '600' → logprob: -8.00442886352539
    7. 'm' → logprob: -8.25442886352539
    8. '10' → logprob: -8.25442886352539
    9. 'int' → logprob: -8.37942886352539
    10. '120' → logprob: -8.50442886352539

Token 132: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.0280383548888494e-06
    2. '[len' → logprob: -14.000000953674316
    3. '-' → logprob: -16.125001907348633
    4. '[' → logprob: -16.625001907348633
    5. '][-' → logprob: -17.750001907348633
    6. ' [-' → logprob: -18.250001907348633
    7. '   ' → logprob: -18.375001907348633
    8. '```' → logprob: -18.375001907348633
    9. '
' → logprob: -20.000001907348633
    10. '[
' → logprob: -20.500001907348633

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0802738870552275e-05
    2. ' ' → logprob: -11.75001049041748
    3. '0' → logprob: -14.25001049041748
    4. ']' → logprob: -15.12501049041748
    5. '  ' → logprob: -15.12501049041748
    6. ']+' → logprob: -15.25001049041748
    7. '+' → logprob: -15.62501049041748
    8. '   ' → logprob: -15.68751049041748
    9. ' -' → logprob: -16.250011444091797
    10. 'max' → logprob: -16.562511444091797

Token 134: ']
' (ID: 1592)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9010099768638611
    2. '<|end|>' → logprob: -1.1510100364685059
    3. '+' → logprob: -2.151010036468506
    4. ')' → logprob: -2.151010036468506
    5. ' -' → logprob: -4.276010036468506
    6. '
' → logprob: -4.901010036468506
    7. '100' → logprob: -5.276010036468506
    8. '0' → logprob: -5.276010036468506
    9. '   ' → logprob: -5.276010036468506
    10. '<|end|>' → logprob: -6.151010036468506

Token 135: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9830595254898071
    2. '
' → logprob: -1.4830595254898071
    3. '+' → logprob: -1.9830595254898071
    4. '   ' → logprob: -2.3580594062805176
    5. 'max' → logprob: -2.3580594062805176
    6. ' if' → logprob: -3.6080594062805176
    7. '<|end|>' → logprob: -3.9830594062805176
    8. 'print' → logprob: -4.233059406280518
    9. '-' → logprob: -5.983059406280518
    10. 'm' → logprob: -6.483059406280518

Token 136: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06101686879992485
    2. 'max' → logprob: -3.811016798019409
    3. 'print' → logprob: -4.061017036437988
    4. ' if' → logprob: -4.936017036437988
    5. '+' → logprob: -5.186017036437988
    6. '   ' → logprob: -5.811017036437988
    7. '<|end|>' → logprob: -6.311017036437988
    8. 'm' → logprob: -7.936017036437988
    9. '    
' → logprob: -8.436017036437988
    10. 'gap' → logprob: -8.686017036437988

Token 137: ' end' (ID: 1268)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '50' → logprob: -0.6784761548042297
    2. ' ' → logprob: -1.303476095199585
    3. '100' → logprob: -2.553476095199585
    4. '0' → logprob: -3.053476095199585
    5. '(' → logprob: -3.678476095199585
    6. '40' → logprob: -3.928476095199585
    7. '60' → logprob: -4.803476333618164
    8. 'n' → logprob: -5.428476333618164
    9. '10' → logprob: -5.428476333618164
    10. ' (' → logprob: -5.553476333618164

Token 138: '>' (ID: 29)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0020348725374788046
    2. ' <' → logprob: -6.377034664154053
    3. '+' → logprob: -8.877035140991211
    4. '<int' → logprob: -10.502035140991211
    5. '<|end|>' → logprob: -10.502035140991211
    6. '<len' → logprob: -10.627035140991211
    7. '<m' → logprob: -10.627035140991211
    8. '!=' → logprob: -11.002035140991211
    9. '<n' → logprob: -11.127035140991211
    10. '>' → logprob: -11.877035140991211

Token 139: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.05064073204994202
    2. '24' → logprob: -4.05064058303833
    3. '0' → logprob: -4.42564058303833
    4. ' max' → logprob: -5.17564058303833
    5. '100' → logprob: -5.42564058303833
    6. '48' → logprob: -5.92564058303833
    7. '50' → logprob: -6.05064058303833
    8. ' ' → logprob: -6.05064058303833
    9. '90' → logprob: -8.175641059875488
    10. '60' → logprob: -8.300641059875488

Token 140: '_gap' (ID: 131234)
  Prédit: '_gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gap' → logprob: -5.943783253314905e-05
    2. 'gap' → logprob: -10.500059127807617
    3. '_' → logprob: -11.250059127807617
    4. 'Gap' → logprob: -12.125059127807617
    5. '-gap' → logprob: -13.000059127807617
    6. 'end' → logprob: -13.125059127807617
    7. '(end' → logprob: -13.875059127807617
    8. '_times' → logprob: -13.875059127807617
    9. '_g' → logprob: -14.000059127807617
    10. ' gap' → logprob: -14.000059127807617

Token 141: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12707698345184326
    2. ':
' → logprob: -2.127077102661133
    3. '   ' → logprob: -9.877077102661133
    4. ':max' → logprob: -10.377077102661133
    5. 'max' → logprob: -10.627077102661133
    6. '       ' → logprob: -11.127077102661133
    7. '):
' → logprob: -11.377077102661133
    8. ':
' → logprob: -12.377077102661133
    9. '+' → logprob: -13.252077102661133
    10. '>' → logprob: -13.627077102661133

Token 142: '       ' (ID: 309)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07712845504283905
    2. '       ' → logprob: -2.7021284103393555
    3. ' max' → logprob: -5.5771284103393555
    4. 'print' → logprob: -6.0771284103393555
    5. '   ' → logprob: -7.2021284103393555
    6. 'end' → logprob: -8.577128410339355
    7. '	max' → logprob: -9.327128410339355
    8. '```' → logprob: -10.952128410339355
    9. 'maximum' → logprob: -11.952128410339355
    10. '           ' → logprob: -11.952128410339355

Token 143: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.00027337539358995855
    2. 'print' → logprob: -8.875273704528809
    3. ' max' → logprob: -9.625273704528809
    4. 'end' → logprob: -9.750273704528809
    5. '   ' → logprob: -12.000273704528809
    6. '       ' → logprob: -13.250273704528809
    7. '	max' → logprob: -14.375273704528809
    8. 'maximum' → logprob: -15.750273704528809
    9. 'maxlength' → logprob: -16.125272750854492
    10. '
' → logprob: -16.500272750854492

Token 144: '_gap' (ID: 131234)
  Prédit: '_gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gap' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.000000953674316
    3. '_g' → logprob: -17.25
    4. '_max' → logprob: -17.375
    5. 'gap' → logprob: -18.375
    6. '_gate' → logprob: -19.5
    7. '_ga' → logprob: -19.875
    8. '_gain' → logprob: -20.25
    9. '_peak' → logprob: -20.25
    10. '_spacing' → logprob: -20.375

Token 145: '=max' (ID: 102952)
  Prédit: '=end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=end' → logprob: -0.16022787988185883
    2. '=' → logprob: -1.91022789478302
    3. ' =' → logprob: -13.28522777557373
    4. '=en' → logprob: -13.53522777557373
    5. '=max' → logprob: -15.28522777557373
    6. '=e' → logprob: -15.41022777557373
    7. '>end' → logprob: -15.53522777557373
    8. '=cut' → logprob: -17.660228729248047
    9. '=int' → logprob: -17.785228729248047
    10. '=edge' → logprob: -18.410228729248047

Token 146: '(max' (ID: 17178)
  Prédit: '_gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gap' → logprob: -0.12971246242523193
    2. '(end' → logprob: -2.3797125816345215
    3. 'end' → logprob: -3.7547125816345215
    4. 'gap' → logprob: -6.1297125816345215
    5. '(max' → logprob: -6.5047125816345215
    6. '(' → logprob: -6.6297125816345215
    7. 'max' → logprob: -8.504712104797363
    8. ' end' → logprob: -9.379712104797363
    9. 'Gap' → logprob: -9.629712104797363
    10. '_end' → logprob: -9.879712104797363

Token 147: '_gap' (ID: 131234)
  Prédit: '_gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gap' → logprob: -0.0001249925117008388
    2. '(end' → logprob: -9.37512493133545
    3. 'end' → logprob: -11.25012493133545
    4. 'gap' → logprob: -11.87512493133545
    5. '_g' → logprob: -12.00012493133545
    6. '(max' → logprob: -12.25012493133545
    7. '(' → logprob: -12.75012493133545
    8. '_end' → logprob: -13.00012493133545
    9. ')' → logprob: -13.50012493133545
    10. '_' → logprob: -15.00012493133545

Token 148: ',end' (ID: 93014)
  Prédit: ',end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',end' → logprob: -0.04949994385242462
    2. ',' → logprob: -3.424499988555908
    3. ' end' → logprob: -4.674499988555908
    4. 'end' → logprob: -5.674499988555908
    5. ' ,' → logprob: -6.299499988555908
    6. '(end' → logprob: -6.924499988555908
    7. ',max' → logprob: -9.54949951171875
    8. '=end' → logprob: -10.92449951171875
    9. '[end' → logprob: -11.29949951171875
    10. '	end' → logprob: -11.29949951171875

Token 149: ')
' (ID: 446)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.29040291905403137
    2. ')' → logprob: -1.415402889251709
    3. '-end' → logprob: -5.040402889251709
    4. ' -' → logprob: -6.415402889251709
    5. '*' → logprob: -7.665402889251709
    6. '-)' → logprob: -8.415403366088867
    7. '-times' → logprob: -9.415403366088867
    8. '-key' → logprob: -9.665403366088867
    9. '-max' → logprob: -10.165403366088867
    10. '-input' → logprob: -10.540403366088867

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05969073995947838
    2. 'print' → logprob: -3.0596907138824463
    3. '
' → logprob: -4.934690952301025
    4. ')' → logprob: -6.809690952301025
    5. '<|end|>' → logprob: -6.809690952301025
    6. ' print' → logprob: -7.434690952301025
    7. '```' → logprob: -8.184690475463867
    8. '    
' → logprob: -8.309690475463867
    9. 'else' → logprob: -8.809690475463867
    10. '0' → logprob: -9.434690475463867

Token 151: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.1823672503232956
    2. '   ' → logprob: -2.4323673248291016
    3. ')' → logprob: -2.8073673248291016
    4. ' print' → logprob: -4.682367324829102
    5. '
' → logprob: -5.182367324829102
    6. '    
' → logprob: -6.557367324829102
    7. ' 
' → logprob: -7.682367324829102
    8. ')
' → logprob: -7.807367324829102
    9. '  
' → logprob: -8.307367324829102
    10. '```' → logprob: -8.807367324829102

Token 152: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.005319616291671991
    2. '(' → logprob: -5.255319595336914
    3. 'max' → logprob: -10.005319595336914
    4. ' (' → logprob: -11.005319595336914
    5. '("' → logprob: -11.505319595336914
    6. '('' → logprob: -12.380319595336914
    7. '((' → logprob: -13.255319595336914
    8. ' max' → logprob: -13.255319595336914
    9. '()' → logprob: -13.505319595336914
    10. '(min' → logprob: -13.505319595336914

Token 153: '_gap' (ID: 131234)
  Prédit: '_gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gap' → logprob: 0.0
    2. 'gap' → logprob: -16.875
    3. '_' → logprob: -18.5
    4. ' gap' → logprob: -18.75
    5. '_g' → logprob: -18.875
    6. ' _' → logprob: -19.625
    7. '-gap' → logprob: -20.125
    8. 'Gap' → logprob: -21.25
    9. '```' → logprob: -21.25
    10. '_gate' → logprob: -21.25

Token 154: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.537868779967539e-06
    2. ' )' → logprob: -11.875008583068848
    3. '+' → logprob: -14.750008583068848
    4. ')
' → logprob: -14.875008583068848
    5. '))' → logprob: -15.125008583068848
    6. ')`' → logprob: -15.750008583068848
    7. ')#' → logprob: -17.00000762939453
    8. '   ' → logprob: -17.00000762939453
    9. '`)' → logprob: -17.12500762939453
    10. ')}' → logprob: -17.25000762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 152
Tokens correctement prédits (1ère position, stricte): 76
Tokens correctement prédits (1ère position, avec adaptation): 86
Tokens correctement prédits (top 10): 132
Précision stricte (1ère position): 50.00%
Précision adaptée (1ère position): 56.58%
Précision (top 10): 86.84%
================================================================================
