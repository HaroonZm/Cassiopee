================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n, U = map(int, input().split())
    if n == 0 and U == 0:
        break
    credits = [0]*n
    prereqs = [[] for _ in range(n)]
    for i in range(n):
        parts = list(map(int, input().split()))
        c = parts[0]
        k = parts[1]
        r = parts[2:] if k > 0 else []
        credits[i] = c
        prereqs[i] = r

    ans = n+1
    # bruteforce all combinations
    # for each subset, check if all prereqs for included courses are in the subset
    # if sum credits >= U, update ans with minimal size
    from itertools import combinations

    for size in range(1, n+1):
        combs = combinations(range(n), size)
        for comb in combs:
            selected = set(comb)
            # check prereqs condition
            ok = True
            for course in comb:
                for pre in prereqs[course]:
                    if pre not in selected:
                        ok = False
                        break
                if not ok:
                    break
            if not ok:
                continue
            total_credits = sum(credits[c] for c in selected)
            if total_credits >= U:
                ans = size
                break
        if ans != n+1:
            break

    print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6314842700958252
    2. '    ' → logprob: -2.131484270095825
    3. '    
' → logprob: -2.631484270095825
    4. '\' → logprob: -2.881484270095825
    5. '\n' → logprob: -2.881484270095825
    6. ' ' → logprob: -3.256484270095825
    7. '```' → logprob: -3.256484270095825
    8. ' 
' → logprob: -3.631484270095825
    9. '  
' → logprob: -4.131484031677246
    10. '     
' → logprob: -4.256484031677246

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6251473426818848
    2. '```' → logprob: -1.6251473426818848
    3. '    ' → logprob: -2.0001473426818848
    4. ' ' → logprob: -2.3751473426818848
    5. '    
' → logprob: -4.625147342681885
    6. '`' → logprob: -5.625147342681885
    7. ' ```' → logprob: -5.625147342681885
    8. '  ' → logprob: -5.875147342681885
    9. '\' → logprob: -6.125147342681885
    10. '       ' → logprob: -6.375147342681885

Token 5: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2360780239105225
    2. '=' → logprob: -1.4860780239105225
    3. 'o' → logprob: -1.8610780239105225
    4. '   ' → logprob: -2.2360780239105225
    5. 'u' → logprob: -2.8610780239105225
    6. ' =' → logprob: -3.2360780239105225
    7. '%' → logprob: -3.3610780239105225
    8. '+' → logprob: -3.8610780239105225
    9. '>' → logprob: -4.361078262329102
    10. '  ' → logprob: -4.611078262329102

Token 6: ' U' (ID: 601)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6657907366752625
    2. ' input' → logprob: -0.9157907366752625
    3. 'm' → logprob: -3.2907907962799072
    4. ' m' → logprob: -4.040790557861328
    5. ' s' → logprob: -4.790790557861328
    6. 's' → logprob: -4.915790557861328
    7. ' ' → logprob: -5.790790557861328
    8. '"' → logprob: -6.165790557861328
    9. 'data' → logprob: -6.290790557861328
    10. ''' → logprob: -6.915790557861328

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09028512239456177
    2. ' =' → logprob: -2.840285062789917
    3. 'p' → logprob: -3.715285062789917
    4. ',' → logprob: -6.090285301208496
    5. 's' → logprob: -7.340285301208496
    6. 'ser' → logprob: -8.465285301208496
    7. 'n' → logprob: -9.340285301208496
    8. 'sers' → logprob: -9.340285301208496
    9. ')' → logprob: -9.965285301208496
    10. '_' → logprob: -10.465285301208496

Token 8: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.010052246041595936
    2. 'map' → logprob: -4.76005220413208
    3. ' input' → logprob: -6.63505220413208
    4. 'input' → logprob: -9.635052680969238
    5. ' list' → logprob: -10.635052680969238
    6. ' int' → logprob: -10.885052680969238
    7. ' [' → logprob: -12.010052680969238
    8. 'int' → logprob: -13.260052680969238
    9. '(map' → logprob: -13.510052680969238
    10. ' ' → logprob: -13.635052680969238

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.034013792872428894
    2. '(' → logprob: -3.4090137481689453
    3. '(str' → logprob: -8.659013748168945
    4. '(lambda' → logprob: -9.034013748168945
    5. '(input' → logprob: -9.784013748168945
    6. '(
' → logprob: -12.284013748168945
    7. '[int' → logprob: -12.409013748168945
    8. 'int' → logprob: -12.534013748168945
    9. '<int' → logprob: -13.034013748168945
    10. '(eval' → logprob: -13.159013748168945

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.09443161636590958
    2. ')' → logprob: -2.8444316387176514
    3. '(' → logprob: -3.8444316387176514
    4. 'input' → logprob: -5.094431400299072
    5. ',input' → logprob: -5.969431400299072
    6. ',' → logprob: -6.844431400299072
    7. ' input' → logprob: -7.719431400299072
    8. '=input' → logprob: -9.34443187713623
    9. '(user' → logprob: -10.59443187713623
    10. '[input' → logprob: -10.71943187713623

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023477815091609955
    2. ' input' → logprob: -3.773477792739868
    3. ')' → logprob: -8.398477554321289
    4. '(input' → logprob: -12.523477554321289
    5. ' )' → logprob: -13.773477554321289
    6. ' ' → logprob: -14.648477554321289
    7. ',input' → logprob: -15.273477554321289
    8. '	input' → logprob: -15.398477554321289
    9. '=input' → logprob: -15.398477554321289
    10. 'raw' → logprob: -15.648477554321289

Token 12: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6376239061355591
    2. '()' → logprob: -0.8876239061355591
    3. '().' → logprob: -2.8876237869262695
    4. ')' → logprob: -7.0126237869262695
    5. '());' → logprob: -7.0126237869262695
    6. '('' → logprob: -7.1376237869262695
    7. '(' → logprob: -7.5126237869262695
    8. '()))' → logprob: -8.51262378692627
    9. '()`' → logprob: -8.88762378692627
    10. '()),' → logprob: -9.26262378692627

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004456852038856596
    2. 'strip' → logprob: -7.75044584274292
    3. 'rstrip' → logprob: -11.375445365905762
    4. ')' → logprob: -13.000445365905762
    5. ' split' → logprob: -13.750445365905762
    6. 'read' → logprob: -16.375446319580078
    7. '(split' → logprob: -16.625446319580078
    8. '().' → logprob: -17.125446319580078
    9. 'replace' → logprob: -17.625446319580078
    10. '.split' → logprob: -18.000446319580078

Token 14: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3447628915309906
    2. '))' → logprob: -1.594762921333313
    3. '())' → logprob: -2.4697628021240234
    4. '()' → logprob: -6.219762802124023
    5. '()))' → logprob: -6.219762802124023
    6. '),' → logprob: -11.094762802124023
    7. '(' → logprob: -11.344762802124023
    8. ')))' → logprob: -11.344762802124023
    9. ')`' → logprob: -12.469762802124023
    10. '')' → logprob: -12.719762802124023

Token 15: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7387990355491638
    2. '   ' → logprob: -0.9887990355491638
    3. ' if' → logprob: -3.1137990951538086
    4. ')' → logprob: -3.3637990951538086
    5. '```' → logprob: -3.6137990951538086
    6. '<|end|>' → logprob: -4.363799095153809
    7. '       ' → logprob: -5.113799095153809
    8. '\n' → logprob: -5.363799095153809
    9. '):' → logprob: -5.613799095153809
    10. ' ' → logprob: -5.613799095153809

Token 16: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1118443012237549
    2. ':' → logprob: -1.4868443012237549
    3. '<|end|>' → logprob: -1.4868443012237549
    4. ' if' → logprob: -2.236844301223755
    5. ')' → logprob: -3.236844301223755
    6. '   ' → logprob: -4.111844062805176
    7. ',' → logprob: -4.236844062805176
    8. 'if' (adapté à ' if') → logprob: -4.736844062805176
    9. '    ' → logprob: -5.236844062805176
    10. '  ' → logprob: -5.236844062805176

Token 17: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04345071315765381
    2. ' not' → logprob: -3.2934508323669434
    3. 'n' → logprob: -5.293450832366943
    4. 'not' → logprob: -8.168450355529785
    5. ' U' → logprob: -10.293450355529785
    6. ' ' → logprob: -10.418450355529785
    7. ' ' → logprob: -11.668450355529785
    8. '(n' → logprob: -12.168450355529785
    9. 'U' → logprob: -13.293450355529785
    10. 'n't' → logprob: -13.418450355529785

Token 18: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.30772635340690613
    2. ' <' → logprob: -2.1827263832092285
    3. ' <=' → logprob: -2.6827263832092285
    4. '==' → logprob: -2.9327263832092285
    5. ' ' → logprob: -4.5577263832092285
    6. '<' → logprob: -5.3077263832092285
    7. '>' → logprob: -5.9327263832092285
    8. ' >' → logprob: -5.9327263832092285
    9. '<=' → logprob: -6.0577263832092285
    10. ')' → logprob: -6.1827263832092285

Token 19: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4741590917110443
    2. ' ' → logprob: -0.9741591215133667
    3. '-' → logprob: -10.911659240722656
    4. ' U' → logprob: -11.036659240722656
    5. ' -' → logprob: -11.161659240722656
    6. 'U' → logprob: -11.849159240722656
    7. '1' → logprob: -11.911659240722656
    8. '  ' → logprob: -12.474159240722656
    9. '   ' → logprob: -13.099159240722656
    10. '    ' → logprob: -13.724159240722656

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04861529543995857
    2. ' ' → logprob: -3.0486152172088623
    3. '-' → logprob: -11.173615455627441
    4. '1' → logprob: -13.236115455627441
    5. ' -' → logprob: -13.298615455627441
    6. '  ' → logprob: -13.861115455627441
    7. ' U' → logprob: -13.861115455627441
    8. 'U' → logprob: -13.986115455627441
    9. '```' → logprob: -14.048615455627441
    10. '   ' → logprob: -14.173615455627441

Token 21: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002138124778866768
    2. ' :' → logprob: -6.877138137817383
    3. ' and' → logprob: -6.877138137817383
    4. '   ' → logprob: -10.877138137817383
    5. 'and' → logprob: -10.877138137817383
    6. ':return' → logprob: -11.252138137817383
    7. ':
' → logprob: -11.502138137817383
    8. ' or' → logprob: -12.502138137817383
    9. ',' → logprob: -13.127138137817383
    10. '):' → logprob: -13.752138137817383

Token 22: ' U' (ID: 601)
  Prédit: ' U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' U' → logprob: -0.22552506625652313
    2. 'U' → logprob: -1.6005250215530396
    3. ' ' → logprob: -9.22552490234375
    4. '  ' → logprob: -12.22552490234375
    5. '	U' → logprob: -12.22552490234375
    6. '   ' → logprob: -13.22552490234375
    7. ' ' → logprob: -13.47552490234375
    8. '    ' → logprob: -14.72552490234375
    9. 'u' → logprob: -15.22552490234375
    10. ' u' → logprob: -16.60052490234375

Token 23: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06224405765533447
    2. '==' → logprob: -2.812243938446045
    3. '=' → logprob: -8.312244415283203
    4. ' =' → logprob: -10.937244415283203
    5. ' ' → logprob: -12.187244415283203
    6. '0' → logprob: -12.687244415283203
    7. ' ' → logprob: -13.312244415283203
    8. ')' → logprob: -14.687244415283203
    9. '  ' → logprob: -14.687244415283203
    10. '<|end|>' → logprob: -15.312244415283203

Token 24: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17974522709846497
    2. ' ' → logprob: -1.8047451972961426
    3. '  ' → logprob: -15.4297456741333
    4. '   ' → logprob: -15.6797456741333
    5. ' ' → logprob: -16.804744720458984
    6. '۰' → logprob: -17.804744720458984
    7. '1' → logprob: -18.617244720458984
    8. '```' → logprob: -18.617244720458984
    9. '<|end|>' → logprob: -18.929744720458984
    10. '=' → logprob: -19.179744720458984

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003601974807679653
    2. ' ' → logprob: -5.628602027893066
    3. '  ' → logprob: -14.566102027893066
    4. '1' → logprob: -14.941102027893066
    5. '   ' → logprob: -15.066102027893066
    6. '-' → logprob: -15.378602027893066
    7. ' -' → logprob: -15.941102027893066
    8. '```' → logprob: -15.941102027893066
    9. ' ' → logprob: -16.44110107421875
    10. 'o' → logprob: -16.94110107421875

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005083533469587564
    2. ':
' → logprob: -7.7505083084106445
    3. '   ' → logprob: -9.875508308410645
    4. '       ' → logprob: -10.750508308410645
    5. ':return' → logprob: -13.250508308410645
    6. ' :' → logprob: -13.875508308410645
    7. ':\' → logprob: -14.625508308410645
    8. '.' → logprob: -14.625508308410645
    9. ',' → logprob: -15.250508308410645
    10. '):' → logprob: -15.750508308410645

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031149722635746002
    2. '   ' → logprob: -6.003115177154541
    3. ':' → logprob: -8.128114700317383
    4. '\n' → logprob: -8.753114700317383
    5. ' break' → logprob: -9.378114700317383
    6. '	break' → logprob: -10.503114700317383
    7. '\' → logprob: -11.378114700317383
    8. ':
' → logprob: -11.628114700317383
    9. '<|end|>' → logprob: -11.878114700317383
    10. '	' → logprob: -12.003114700317383

Token 28: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.01556443516165018
    2. 'break' (adapté à ' break') → logprob: -4.265564441680908
    3. '       ' → logprob: -6.765564441680908
    4. '   ' → logprob: -8.39056396484375
    5. '	break' → logprob: -11.01556396484375
    6. '```' → logprob: -13.89056396484375
    7. '_break' → logprob: -14.01556396484375
    8. '           ' → logprob: -14.76556396484375
    9. 'Break' → logprob: -15.14056396484375
    10. ' ' → logprob: -15.14056396484375

Token 29: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29866138100624084
    2. '    
' → logprob: -2.548661470413208
    3. '
' → logprob: -2.798661470413208
    4. '\n' → logprob: -2.798661470413208
    5. '<|end|>' → logprob: -4.298661231994629
    6. 'n' → logprob: -4.548661231994629
    7. '#' → logprob: -5.423661231994629
    8. ':' → logprob: -5.548661231994629
    9. ')' → logprob: -5.548661231994629
    10. '  
' → logprob: -5.673661231994629

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06810566037893295
    2. '    
' → logprob: -3.818105697631836
    3. '```' → logprob: -3.943105697631836
    4. '
' → logprob: -4.568105697631836
    5. '<|end|>' → logprob: -5.818105697631836
    6. '\n' → logprob: -5.818105697631836
    7. 'n' → logprob: -6.443105697631836
    8. ')' → logprob: -7.068105697631836
    9. '       ' → logprob: -7.193105697631836
    10. '    ' → logprob: -7.568105697631836

Token 31: ' credits' (ID: 30198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02880837209522724
    2. '    
' → logprob: -4.77880859375
    3. '    ' → logprob: -5.02880859375
    4. '```' → logprob: -5.77880859375
    5. '\n' → logprob: -6.52880859375
    6. ' ' → logprob: -6.65380859375
    7. '[' → logprob: -7.15380859375
    8. '
' → logprob: -7.27880859375
    9. '  ' → logprob: -7.40380859375
    10. 'n' → logprob: -7.52880859375

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8778499960899353
    2. '_' → logprob: -1.00285005569458
    3. '[' → logprob: -3.37785005569458
    4. '=' → logprob: -3.37785005569458
    5. '_used' → logprob: -3.37785005569458
    6. '_needed' → logprob: -3.75285005569458
    7. ',' → logprob: -4.25285005569458
    8. ' +=' → logprob: -4.37785005569458
    9. ' ' → logprob: -4.50285005569458
    10. '_per' → logprob: -4.87785005569458

Token 33: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.2950408160686493
    2. '[]' → logprob: -1.9200408458709717
    3. ' [' → logprob: -3.0450408458709717
    4. '0' → logprob: -3.1700408458709717
    5. ' ' → logprob: -4.795040607452393
    6. '[' → logprob: -4.920040607452393
    7. ' list' → logprob: -6.170040607452393
    8. 'list' → logprob: -7.545040607452393
    9. ' []
' → logprob: -8.17004108428955
    10. ' {}' → logprob: -8.79504108428955

Token 34: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20274223387241364
    2. '0' → logprob: -2.077742338180542
    3. ' int' → logprob: -2.952742338180542
    4. 'map' → logprob: -5.952742099761963
    5. ' map' → logprob: -6.827742099761963
    6. 'float' → logprob: -6.827742099761963
    7. '   ' → logprob: -8.327742576599121
    8. 'list' → logprob: -8.327742576599121
    9. ']' → logprob: -8.327742576599121
    10. ']int' → logprob: -8.827742576599121

Token 35: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04591437429189682
    2. ' ]' → logprob: -3.5459144115448
    3. ',' → logprob: -4.545914173126221
    4. ' for' → logprob: -5.545914173126221
    5. ']*' → logprob: -7.295914173126221
    6. 'for' → logprob: -7.420914173126221
    7. ')]' → logprob: -9.670914649963379
    8. '()]' → logprob: -10.170914649963379
    9. ' ,' → logprob: -10.170914649963379
    10. '   ' → logprob: -10.670914649963379

Token 36: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13622727990150452
    2. '(n' → logprob: -2.2612273693084717
    3. '(' → logprob: -4.261227130889893
    4. ' n' → logprob: -6.386227130889893
    5. '100' → logprob: -6.386227130889893
    6. '101' → logprob: -6.386227130889893
    7. ' (' → logprob: -6.761227130889893
    8. '10' → logprob: -7.261227130889893
    9. '11' → logprob: -8.76122760772705
    10. '(U' → logprob: -8.88622760772705

Token 37: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5266798734664917
    2. '
' → logprob: -1.5266798734664917
    3. '<|end|>' → logprob: -2.6516799926757812
    4. '    
' → logprob: -3.2766799926757812
    5. ' 
' → logprob: -3.5266799926757812
    6. ' ' → logprob: -4.151679992675781
    7. '[' → logprob: -5.276679992675781
    8. '  
' → logprob: -5.651679992675781
    9. '\n' → logprob: -5.651679992675781
    10. '    ' → logprob: -5.776679992675781

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30597537755966187
    2. '<|end|>' → logprob: -1.8059754371643066
    3. '    
' → logprob: -3.9309754371643066
    4. '
' → logprob: -3.9309754371643066
    5. ' for' → logprob: -4.055975437164307
    6. ' ' → logprob: -4.555975437164307
    7. ' 
' → logprob: -4.805975437164307
    8. 'for' → logprob: -4.930975437164307
    9. '    ' → logprob: -5.430975437164307
    10. '  ' → logprob: -5.805975437164307

Token 39: ' prere' (ID: 55794)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5632708072662354
    2. ' for' → logprob: -1.1882708072662354
    3. '   ' → logprob: -3.3132708072662354
    4. ' ' → logprob: -4.188270568847656
    5. '[' → logprob: -4.688270568847656
    6. ' while' → logprob: -4.938270568847656
    7. ' 
' → logprob: -5.188270568847656
    8. 'credits' → logprob: -5.188270568847656
    9. 'while' → logprob: -5.438270568847656
    10. ' credits' → logprob: -5.563270568847656

Token 40: 'qs' (ID: 31847)
  Prédit: 'qs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -0.08193951100111008
    2. 'q' → logprob: -2.581939458847046
    3. 'quisites' → logprob: -5.831939697265625
    4. 'quis' → logprob: -9.956939697265625
    5. 'quests' → logprob: -10.956939697265625
    6. 'cs' → logprob: -11.331939697265625
    7. 'gs' → logprob: -11.456939697265625
    8. 'quisite' → logprob: -12.206939697265625
    9. 'qus' → logprob: -12.206939697265625
    10. 'ques' → logprob: -12.331939697265625

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.316895455121994
    2. '=' → logprob: -1.3168954849243164
    3. '[' → logprob: -6.191895484924316
    4. ']' → logprob: -7.941895484924316
    5. '_' → logprob: -8.441895484924316
    6. '[:]' → logprob: -8.441895484924316
    7. '[]' → logprob: -8.566895484924316
    8. '=[]' → logprob: -8.566895484924316
    9. ')' → logprob: -9.191895484924316
    10. ',' → logprob: -9.191895484924316

Token 42: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.39404258131980896
    2. ' [[]' → logprob: -1.5190426111221313
    3. ' [' → logprob: -2.269042491912842
    4. '[]' → logprob: -6.519042491912842
    5. '[[' → logprob: -7.144042491912842
    6. ' []' → logprob: -7.144042491912842
    7. ' [[' → logprob: -8.76904296875
    8. '{}' → logprob: -10.89404296875
    9. '[n' → logprob: -11.01904296875
    10. ' [{}' → logprob: -11.51904296875

Token 43: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12902460992336273
    2. ' for' → logprob: -2.1290245056152344
    3. ')' → logprob: -6.629024505615234
    4. ']' → logprob: -7.379024505615234
    5. '	for' → logprob: -10.129024505615234
    6. 'n' → logprob: -10.379024505615234
    7. ',n' → logprob: -10.754024505615234
    8. ',' → logprob: -11.004024505615234
    9. '   ' → logprob: -11.129024505615234
    10. ')n' → logprob: -11.754024505615234

Token 44: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03964604437351227
    2. ' range' → logprob: -3.9146461486816406
    3. ' _' → logprob: -4.039646148681641
    4. 'range' → logprob: -7.039646148681641
    5. '_range' → logprob: -7.789646148681641
    6. '_i' → logprob: -12.16464614868164
    7. ' i' → logprob: -12.16464614868164
    8. '_s' → logprob: -12.16464614868164
    9. '(range' → logprob: -12.41464614868164
    10. 'i' → logprob: -12.78964614868164

Token 45: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.21863344311714172
    2. ' in' → logprob: -2.2186334133148193
    3. 'range' → logprob: -2.4686334133148193
    4. ' range' → logprob: -5.843633651733398
    5. '_' → logprob: -11.593633651733398
    6. 'n' → logprob: -11.968633651733398
    7. '(range' → logprob: -12.093633651733398
    8. ' ' → logprob: -12.968633651733398
    9. '_range' → logprob: -14.218633651733398
    10. 'i' → logprob: -14.843633651733398

Token 46: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00280558317899704
    2. ' range' → logprob: -5.877805709838867
    3. '(range' → logprob: -15.752805709838867
    4. '	range' → logprob: -16.002805709838867
    5. 'ran' → logprob: -16.127805709838867
    6. ')' → logprob: -16.502805709838867
    7. 'rang' → logprob: -16.502805709838867
    8. 'credits' → logprob: -16.752805709838867
    9. '   ' → logprob: -17.127805709838867
    10. 'r' → logprob: -17.127805709838867

Token 47: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.955703818472102e-05
    2. '(' → logprob: -10.000059127807617
    3. 'n' → logprob: -11.500059127807617
    4. ')n' → logprob: -12.875059127807617
    5. ')' → logprob: -14.750059127807617
    6. ' (' → logprob: -15.125059127807617
    7. ' n' → logprob: -15.875059127807617
    8. ')(' → logprob: -16.250059127807617
    9. ',n' → logprob: -16.375059127807617
    10. ']' → logprob: -16.375059127807617

Token 48: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00020532844064291567
    2. ']' → logprob: -8.875205039978027
    3. ')' → logprob: -9.875205039978027
    4. ')]
' → logprob: -12.125205039978027
    5. ' )' → logprob: -13.125205039978027
    6. '])' → logprob: -13.250205039978027
    7. '   ' → logprob: -13.875205039978027
    8. '])]' → logprob: -14.375205039978027
    9. ')])' → logprob: -14.750205039978027
    10. '')]' → logprob: -14.750205039978027

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15861018002033234
    2. 'for' → logprob: -2.7836101055145264
    3. '<|end|>' → logprob: -2.9086101055145264
    4. ' for' → logprob: -3.6586101055145264
    5. '    
' → logprob: -6.7836103439331055
    6. 'while' → logprob: -7.2836103439331055
    7. '<|end|>' → logprob: -7.7836103439331055
    8. ' while' → logprob: -7.7836103439331055
    9. '  ' → logprob: -8.033610343933105
    10. '    ' → logprob: -8.158610343933105

Token 50: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.019101938232779503
    2. '   ' → logprob: -4.519102096557617
    3. ' for' → logprob: -5.019102096557617
    4. 'i' → logprob: -7.769102096557617
    5. 'n' → logprob: -8.394102096557617
    6. 'while' → logprob: -8.644102096557617
    7. '  ' → logprob: -9.644102096557617
    8. 's' → logprob: -9.769102096557617
    9. 't' → logprob: -9.894102096557617
    10. '<|end|>' → logprob: -10.019102096557617

Token 51: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12212081253528595
    2. ' _' → logprob: -2.4971208572387695
    3. '_' → logprob: -3.4971208572387695
    4. ' ' → logprob: -6.2471208572387695
    5. 'i' → logprob: -7.8721208572387695
    6. ' range' → logprob: -10.87212085723877
    7. '_i' → logprob: -12.74712085723877
    8. ' ‌' → logprob: -12.87212085723877
    9. ' ' → logprob: -12.99712085723877
    10. ' I' → logprob: -12.99712085723877

Token 52: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038319967687129974
    2. 'in' → logprob: -3.2883200645446777
    3. ' ' → logprob: -8.41331958770752
    4. '_' → logprob: -11.16331958770752
    5. '  ' → logprob: -11.16331958770752
    6. '	in' → logprob: -11.53831958770752
    7. '0' → logprob: -12.66331958770752
    8. 'n' → logprob: -13.03831958770752
    9. 'range' → logprob: -13.41331958770752
    10. '   ' → logprob: -13.41331958770752

Token 53: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.011048289015889168
    2. 'range' → logprob: -4.511048316955566
    3. ' ' → logprob: -15.136048316955566
    4. '	range' → logprob: -16.01104736328125
    5. ' xrange' → logprob: -17.13604736328125
    6. '(range' → logprob: -17.63604736328125
    7. '  ' → logprob: -18.38604736328125
    8. 'ange' → logprob: -18.63604736328125
    9. '_range' → logprob: -19.26104736328125
    10. ' ' → logprob: -20.13604736328125

Token 54: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.003701139474287629
    2. '(' → logprob: -5.753701210021973
    3. ' (' → logprob: -7.628701210021973
    4. ' n' → logprob: -10.253701210021973
    5. ' ' → logprob: -14.003701210021973
    6. 'n' → logprob: -14.128701210021973
    7. '	n' → logprob: -16.628700256347656
    8. '(i' → logprob: -16.878700256347656
    9. '(
' → logprob: -17.378700256347656
    10. '   ' → logprob: -17.628700256347656

Token 55: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004237627435941249
    2. '):
' → logprob: -8.000423431396484
    3. ' ):' → logprob: -9.750423431396484
    4. ':' → logprob: -11.250423431396484
    5. ')' → logprob: -12.125423431396484
    6. '   ' → logprob: -12.500423431396484
    7. '-' → logprob: -13.125423431396484
    8. '():' → logprob: -13.750423431396484
    9. ' ' → logprob: -13.875423431396484
    10. '):
' → logprob: -14.000423431396484

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017902681604027748
    2. '   ' → logprob: -4.392902851104736
    3. ' line' → logprob: -6.767902851104736
    4. '<|end|>' → logprob: -6.767902851104736
    5. ' tokens' → logprob: -7.017902851104736
    6. '    ' → logprob: -7.392902851104736
    7. 'tokens' → logprob: -7.642902851104736
    8. ' ' → logprob: -8.767902374267578
    9. '	   ' → logprob: -8.892902374267578
    10. ' while' → logprob: -9.642902374267578

Token 57: ' parts' (ID: 7881)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.1617087423801422
    2. ' credits' → logprob: -2.9117088317871094
    3. ' c' → logprob: -3.9117088317871094
    4. ' tokens' → logprob: -4.286708831787109
    5. ' course' → logprob: -4.536708831787109
    6. ' parts' → logprob: -4.786708831787109
    7. ' code' → logprob: -5.161708831787109
    8. ' name' → logprob: -5.161708831787109
    9. '   ' → logprob: -5.536708831787109
    10. ' credit' → logprob: -5.911708831787109

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269325166940689
    2. '=' → logprob: -2.1269326210021973
    3. '   ' → logprob: -13.126932144165039
    4. '=input' → logprob: -14.376932144165039
    5. '=line' → logprob: -14.626932144165039
    6. '[' → logprob: -14.876932144165039
    7. ' ' → logprob: -15.501932144165039
    8. '```' → logprob: -15.876932144165039
    9. '    ' → logprob: -16.12693214416504
    10. '  ' → logprob: -16.37693214416504

Token 59: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5822396278381348
    2. ' input' → logprob: -0.8322396278381348
    3. 'list' → logprob: -5.707239627838135
    4. ' list' → logprob: -5.832239627838135
    5. ' ' → logprob: -12.332239151000977
    6. '[input' → logprob: -12.332239151000977
    7. '[' → logprob: -12.707239151000977
    8. '   ' → logprob: -12.707239151000977
    9. '[]' → logprob: -13.207239151000977
    10. '	input' → logprob: -13.332239151000977

Token 60: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.005250006448477507
    2. '(' → logprob: -5.255249977111816
    3. '(input' → logprob: -11.130249977111816
    4. '(int' → logprob: -14.505249977111816
    5. '(
' → logprob: -14.880249977111816
    6. 'map' → logprob: -15.005249977111816
    7. '(filter' → logprob: -15.880249977111816
    8. '()' → logprob: -16.755250930786133
    9. ' (' → logprob: -16.880250930786133
    10. '(range' → logprob: -17.130250930786133

Token 61: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00018280261429026723
    2. '(' → logprob: -9.12518310546875
    3. 'int' → logprob: -10.12518310546875
    4. '<int' → logprob: -11.12518310546875
    5. ',int' → logprob: -11.87518310546875
    6. '[int' → logprob: -12.00018310546875
    7. '=int' → logprob: -12.87518310546875
    8. ']int' → logprob: -13.87518310546875
    9. ')' → logprob: -14.25018310546875
    10. ' (' → logprob: -14.75018310546875

Token 62: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3189938962459564
    2. ',input' → logprob: -1.5689939260482788
    3. ',' → logprob: -2.8189938068389893
    4. '(' → logprob: -5.318994045257568
    5. 'input' → logprob: -8.69399356842041
    6. '(),' → logprob: -9.44399356842041
    7. ')' → logprob: -10.94399356842041
    8. ' ,' → logprob: -11.31899356842041
    9. ' input' → logprob: -12.31899356842041
    10. '=input' → logprob: -12.56899356842041

Token 63: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03804952651262283
    2. ' input' → logprob: -3.2880494594573975
    3. '   ' → logprob: -13.163049697875977
    4. '(input' → logprob: -13.538049697875977
    5. ')' → logprob: -13.663049697875977
    6. ',input' → logprob: -13.788049697875977
    7. ' ' → logprob: -14.288049697875977
    8. '<input' → logprob: -14.538049697875977
    9. '	input' → logprob: -14.788049697875977
    10. '[input' → logprob: -14.913049697875977

Token 64: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.4021237802808173e-05
    2. '()' → logprob: -11.250014305114746
    3. ' ().' → logprob: -14.125014305114746
    4. '.' → logprob: -16.37501335144043
    5. '(' → logprob: -16.50001335144043
    6. ' .' → logprob: -17.00001335144043
    7. ')' → logprob: -17.37501335144043
    8. '()))' → logprob: -17.87501335144043
    9. '   ' → logprob: -18.12501335144043
    10. '().__' → logprob: -18.50001335144043

Token 65: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.4285862057004124e-05
    2. 'strip' → logprob: -10.50003433227539
    3. ' split' → logprob: -12.12503433227539
    4. '(split' → logprob: -14.12503433227539
    5. 'rstrip' → logprob: -14.75003433227539
    6. 'spl' → logprob: -16.50003433227539
    7. 'plit' → logprob: -17.37503433227539
    8. ')' → logprob: -18.25003433227539
    9. '   ' → logprob: -18.37503433227539
    10. 's' → logprob: -18.50003433227539

Token 66: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00713114719837904
    2. '()' → logprob: -5.382131099700928
    3. '))' → logprob: -6.882131099700928
    4. '())' → logprob: -7.007131099700928
    5. '()))
' → logprob: -7.757131099700928
    6. '(' → logprob: -9.257131576538086
    7. '()));' → logprob: -11.132131576538086
    8. '()))

' → logprob: -11.757131576538086
    9. '().' → logprob: -12.007131576538086
    10. '())))' → logprob: -12.257131576538086

Token 67: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14217589795589447
    2. ' ' → logprob: -3.5171759128570557
    3. '    ' → logprob: -3.7671759128570557
    4. ')' → logprob: -3.7671759128570557
    5. ' credits' → logprob: -3.7671759128570557
    6. '<|end|>' → logprob: -4.517175674438477
    7. '       ' → logprob: -4.892175674438477
    8. ' )' → logprob: -5.017175674438477
    9. '  ' → logprob: -5.767175674438477
    10. ' for' → logprob: -6.767175674438477

Token 68: ' c' (ID: 274)
  Prédit: 'credits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'credits' → logprob: -0.6070886254310608
    2. ' credits' → logprob: -0.8570886254310608
    3. '   ' → logprob: -4.607088565826416
    4. 'k' → logprob: -5.482088565826416
    5. ' k' → logprob: -5.607088565826416
    6. ' c' → logprob: -5.857088565826416
    7. 'c' (adapté à ' c') → logprob: -5.857088565826416
    8. ' m' → logprob: -7.107088565826416
    9. ' u' → logprob: -7.107088565826416
    10. ' for' → logprob: -7.232088565826416

Token 69: ' =' (ID: 314)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.045887384563684464
    2. '=' → logprob: -4.045887470245361
    3. 'reds' → logprob: -4.670887470245361
    4. ' =' → logprob: -4.920887470245361
    5. 'redit' → logprob: -5.170887470245361
    6. 'redi' → logprob: -6.545887470245361
    7. 'r' → logprob: -7.420887470245361
    8. 'redd' → logprob: -7.670887470245361
    9. '   ' → logprob: -7.795887470245361
    10. 'parts' → logprob: -7.920887470245361

Token 70: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.10024431347846985
    2. 'parts' → logprob: -2.3502442836761475
    3. '(parts' → logprob: -10.225244522094727
    4. ' ' → logprob: -14.225244522094727
    5. '_parts' → logprob: -15.100244522094727
    6. '   ' → logprob: -15.850244522094727
    7. ' partes' → logprob: -15.850244522094727
    8. ' ' → logprob: -17.225244522094727
    9. '  ' → logprob: -17.350244522094727
    10. '.parts' → logprob: -17.725244522094727

Token 71: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00024965754710137844
    2. '0' → logprob: -8.875249862670898
    3. '(' → logprob: -9.250249862670898
    4. '   ' → logprob: -12.625249862670898
    5. ' [' → logprob: -13.000249862670898
    6. '1' → logprob: -13.250249862670898
    7. '()[' → logprob: -13.250249862670898
    8. ' ' → logprob: -13.750249862670898
    9. '[
' → logprob: -14.375249862670898
    10. '       ' → logprob: -14.375249862670898

Token 72: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015586259542033076
    2. '1' → logprob: -9.000155448913574
    3. ' ' → logprob: -10.500155448913574
    4. '[' → logprob: -12.500155448913574
    5. '   ' → logprob: -14.875155448913574
    6. '2' → logprob: -15.500155448913574
    7. '-' → logprob: -15.750155448913574
    8. '  ' → logprob: -17.00015640258789
    9. '```' → logprob: -17.18765640258789
    10. '
' → logprob: -17.50015640258789

Token 73: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025962304789572954
    2. ' )' → logprob: -6.752596378326416
    3. ')
' → logprob: -6.752596378326416
    4. ',' → logprob: -9.127595901489258
    5. '<|end|>' → logprob: -10.127595901489258
    6. ' ' → logprob: -10.377595901489258
    7. ']' → logprob: -11.377595901489258
    8. ' )
' → logprob: -11.752595901489258
    9. ',)' → logprob: -11.877595901489258
    10. '   ' → logprob: -11.877595901489258

Token 74: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: ' k' (ID: 372)
  Prédit: ' credits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' credits' → logprob: -0.5239496827125549
    2. 'credits' → logprob: -0.8989496827125549
    3. ' prerequisites' → logprob: -8.27394962310791
    4. ' prere' → logprob: -9.27394962310791
    5. 'pr' → logprob: -9.64894962310791
    6. '   ' → logprob: -9.64894962310791
    7. 'credit' → logprob: -10.33644962310791
    8. ' for' → logprob: -10.33644962310791
    9. ' u' → logprob: -10.58644962310791
    10. ' credit' → logprob: -10.71144962310791

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023254329338669777
    2. '=' → logprob: -3.77325439453125
    3. ' ' → logprob: -12.89825439453125
    4. '  ' → logprob: -13.14825439453125
    5. '=int' → logprob: -13.27325439453125
    6. '=len' → logprob: -14.02325439453125
    7. '=k' → logprob: -14.39825439453125
    8. '   ' → logprob: -14.77325439453125
    9. '	' → logprob: -15.52325439453125
    10. '    ' → logprob: -16.02325439453125

Token 77: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.00977651309221983
    2. 'parts' → logprob: -4.634776592254639
    3. '(parts' → logprob: -11.25977611541748
    4. ' ' → logprob: -12.00977611541748
    5. ' len' → logprob: -14.50977611541748
    6. ' partes' → logprob: -15.25977611541748
    7. 'len' → logprob: -15.50977611541748
    8. '1' → logprob: -15.75977611541748
    9. '_parts' → logprob: -15.88477611541748
    10. '.parts' → logprob: -16.009777069091797

Token 78: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14368467032909393
    2. '[' → logprob: -2.0186846256256104
    3. ' ' → logprob: -7.5186848640441895
    4. '```' → logprob: -8.893684387207031
    5. '][' → logprob: -9.268684387207031
    6. ' [' → logprob: -9.768684387207031
    7. '   ' → logprob: -10.143684387207031
    8. 'k' → logprob: -11.393684387207031
    9. ']' → logprob: -11.393684387207031
    10. '       ' → logprob: -11.518684387207031

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.145118848304264e-05
    2. ' ' → logprob: -10.125051498413086
    3. '0' → logprob: -12.000051498413086
    4. '2' → logprob: -13.500051498413086
    5. ']' → logprob: -14.125051498413086
    6. '  ' → logprob: -15.000051498413086
    7. '   ' → logprob: -15.062551498413086
    8. 'k' → logprob: -15.125051498413086
    9. ' -' → logprob: -15.562551498413086
    10. '-' → logprob: -15.750051498413086

Token 80: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.017492059618234634
    2. ')' → logprob: -5.017492294311523
    3. ']
' → logprob: -5.142492294311523
    4. ' ]' → logprob: -5.767492294311523
    5. ')]' → logprob: -7.017492294311523
    6. '<|end|>' → logprob: -7.892492294311523
    7. '])' → logprob: -8.892492294311523
    8. '
' → logprob: -10.142492294311523
    9. '       ' → logprob: -10.142492294311523
    10. ')
' → logprob: -10.267492294311523

Token 81: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' r' (ID: 428)
  Prédit: ' credits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' credits' → logprob: -0.45848923921585083
    2. 'credits' → logprob: -1.583489179611206
    3. ' for' → logprob: -2.458489179611206
    4. '<|end|>' → logprob: -4.208489418029785
    5. '   ' → logprob: -4.333489418029785
    6. 'pr' → logprob: -4.458489418029785
    7. '    ' → logprob: -5.208489418029785
    8. 'for' → logprob: -5.208489418029785
    9. '       ' → logprob: -5.208489418029785
    10. ' ' → logprob: -5.583489418029785

Token 83: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3296482563018799
    2. ' =' → logprob: -1.4546482563018799
    3. 'eq' → logprob: -3.70464825630188
    4. 'ights' → logprob: -4.579648017883301
    5. 'e' → logprob: -5.454648017883301
    6. '=[' → logprob: -6.829648017883301
    7. '=[]' → logprob: -7.079648017883301
    8. 'pr' → logprob: -7.329648017883301
    9. '   ' → logprob: -7.454648017883301
    10. 'em' → logprob: -8.0796480178833

Token 84: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.005391703452914953
    2. 'parts' → logprob: -5.255391597747803
    3. '(parts' → logprob: -10.130392074584961
    4. ' ' → logprob: -10.255392074584961
    5. '[' → logprob: -10.630392074584961
    6. '_parts' → logprob: -11.005392074584961
    7. ' partes' → logprob: -11.505392074584961
    8. ' []' → logprob: -11.630392074584961
    9. ' [' → logprob: -11.880392074584961
    10. '[]' → logprob: -12.380392074584961

Token 85: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013865873217582703
    2. '2' → logprob: -4.388865947723389
    3. ':' → logprob: -7.263865947723389
    4. '][' → logprob: -8.63886547088623
    5. 's' → logprob: -9.38886547088623
    6. '=' → logprob: -9.38886547088623
    7. '```' → logprob: -9.51386547088623
    8. '(' → logprob: -10.01386547088623
    9. 'k' → logprob: -10.76386547088623
    10. ':[' → logprob: -10.88886547088623

Token 86: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -11.1250581741333
    3. '3' → logprob: -11.4375581741333
    4. ']' → logprob: -12.1250581741333
    5. '```' → logprob: -12.1875581741333
    6. '1' → logprob: -12.6875581741333
    7. '0' → logprob: -12.8750581741333
    8. ':' → logprob: -13.1875581741333
    9. '-' → logprob: -13.3125581741333
    10. 'k' → logprob: -13.7500581741333

Token 87: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.4282021224498749
    2. ']' → logprob: -1.1782021522521973
    3. ':' → logprob: -3.4282021522521973
    4. ')' → logprob: -5.428202152252197
    5. ':]
' → logprob: -6.428202152252197
    6. ' :]' → logprob: -7.803202152252197
    7. ' ]' → logprob: -7.928202152252197
    8. ']
' → logprob: -8.053201675415039
    9. '])' → logprob: -8.428201675415039
    10. ')]' → logprob: -8.928201675415039

Token 88: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2987649440765381
    2. '   ' → logprob: -1.673764944076538
    3. '<|end|>' → logprob: -2.923764944076538
    4. '       ' → logprob: -4.923765182495117
    5. '    
' → logprob: -6.048765182495117
    6. ' 
' → logprob: -6.798765182495117
    7. '        
' → logprob: -7.048765182495117
    8. 'newline' → logprob: -7.173765182495117
    9. '```' → logprob: -7.298765182495117
    10. 'credits' → logprob: -7.423765182495117

Token 89: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.008641989901661873
    2. ' k' → logprob: -4.758642196655273
    3. 'len' → logprob: -10.758642196655273
    4. ' len' → logprob: -12.008642196655273
    5. ' ' → logprob: -16.758642196655273
    6. '	k' → logprob: -17.383642196655273
    7. '  ' → logprob: -18.133642196655273
    8. '   ' → logprob: -18.258642196655273
    9. '(k' → logprob: -19.508642196655273
    10. ' к' → logprob: -20.383642196655273

Token 90: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0467396154999733
    2. ' >' → logprob: -3.1717395782470703
    3. '<|end|>' → logprob: -5.67173957824707
    4. 'else' → logprob: -9.42173957824707
    5. '<|end|>' → logprob: -9.79673957824707
    6. '!=' → logprob: -9.92173957824707
    7. ' else' → logprob: -10.42173957824707
    8. '0' → logprob: -11.17173957824707
    9. '&gt' → logprob: -11.67173957824707
    10. 'k' → logprob: -11.92173957824707

Token 91: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020377879263833165
    2. ' ' → logprob: -8.500204086303711
    3. '<|end|>' → logprob: -15.500204086303711
    4. '  ' → logprob: -16.75020408630371
    5. '>' → logprob: -17.75020408630371
    6. '   ' → logprob: -18.37520408630371
    7. '```' → logprob: -19.12520408630371
    8. '1' → logprob: -19.12520408630371
    9. '۰' → logprob: -19.25020408630371
    10. '=' → logprob: -19.50020408630371

Token 92: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014036978245712817
    2. ' ' → logprob: -8.875140190124512
    3. '>' → logprob: -15.750140190124512
    4. '   ' → logprob: -16.375141143798828
    5. '  ' → logprob: -16.375141143798828
    6. '```' → logprob: -16.875141143798828
    7. '<|end|>' → logprob: -17.062641143798828
    8. '=' → logprob: -17.500141143798828
    9. '1' → logprob: -17.562641143798828
    10. '۰' → logprob: -18.500141143798828

Token 93: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.20159323513507843
    2. 'else' → logprob: -1.701593279838562
    3. '<|end|>' → logprob: -9.326593399047852
    4. '	else' → logprob: -10.451593399047852
    5. '       ' → logprob: -11.326593399047852
    6. '   ' → logprob: -11.826593399047852
    7. '<|end|>' → logprob: -12.076593399047852
    8. ' ' → logprob: -12.201593399047852
    9. '[:]' → logprob: -12.201593399047852
    10. '        ' → logprob: -12.326593399047852

Token 94: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.04858918860554695
    2. ' []' → logprob: -3.0485892295837402
    3. '[' → logprob: -14.423588752746582
    4. '[]}' → logprob: -14.798588752746582
    5. '[]

' → logprob: -15.173588752746582
    6. '[]
' → logprob: -15.173588752746582
    7. '[]>' → logprob: -15.673588752746582
    8. '[])' → logprob: -16.0485897064209
    9. ' ' → logprob: -16.5485897064209
    10. '[],' → logprob: -16.7985897064209

Token 95: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1306551843881607
    2. '
' → logprob: -2.380655288696289
    3. '       ' → logprob: -3.880655288696289
    4. '<|end|>' → logprob: -5.505655288696289
    5. '    
' → logprob: -6.380655288696289
    6. 'credits' → logprob: -6.880655288696289
    7. '        
' → logprob: -7.380655288696289
    8. '  
' → logprob: -7.880655288696289
    9. ' credits' → logprob: -8.630655288696289
    10. '  ' → logprob: -8.755655288696289

Token 96: ' credits' (ID: 30198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22620005905628204
    2. 'credits' (adapté à ' credits') → logprob: -1.7262001037597656
    3. ' credits' → logprob: -4.351200103759766
    4. '
' → logprob: -5.226200103759766
    5. '       ' → logprob: -5.351200103759766
    6. ' ' → logprob: -8.226200103759766
    7. '    ' → logprob: -8.476200103759766
    8. '    
' → logprob: -8.476200103759766
    9. '  ' → logprob: -8.726200103759766
    10. '<|end|>' → logprob: -9.226200103759766

Token 97: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0564331205387134e-05
    2. '[' → logprob: -11.50001049041748
    3. '[n' → logprob: -15.87501049041748
    4. '[I' → logprob: -16.000011444091797
    5. '\[' → logprob: -16.875011444091797
    6. '```' → logprob: -18.000011444091797
    7. ' [' → logprob: -18.125011444091797
    8. '[u' → logprob: -19.375011444091797
    9. '[
' → logprob: -19.500011444091797
    10. '[user' → logprob: -19.750011444091797

Token 98: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7245965003967285
    2. ' =' → logprob: -0.8495965003967285
    3. ']' → logprob: -2.4745965003967285
    4. ')' → logprob: -6.3495965003967285
    5. ']=' → logprob: -6.3495965003967285
    6. ' ]' → logprob: -9.22459602355957
    7. ')=' → logprob: -9.72459602355957
    8. ',' → logprob: -11.47459602355957
    9. '[' → logprob: -12.09959602355957
    10. ' ' → logprob: -12.22459602355957

Token 99: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023053228855133
    2. ' =' → logprob: -1.9102305173873901
    3. '=c' → logprob: -12.28523063659668
    4. '+=' → logprob: -14.78523063659668
    5. ' +=' → logprob: -15.28523063659668
    6. ',' → logprob: -15.28523063659668
    7. '=int' → logprob: -15.66023063659668
    8. '<|end|>' → logprob: -15.91023063659668
    9. '.=' → logprob: -16.28523063659668
    10. ' ' → logprob: -16.41023063659668

Token 100: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07888978719711304
    2. ' c' → logprob: -2.578889846801758
    3. '	c' → logprob: -16.953889846801758
    4. ' ' → logprob: -17.703889846801758
    5. ' ' → logprob: -18.328889846801758
    6. ')c' → logprob: -19.828889846801758
    7. '   ' → logprob: -20.203889846801758
    8. '  ' → logprob: -21.078889846801758
    9. '`' → logprob: -21.078889846801758
    10. '    ' → logprob: -21.328889846801758

Token 101: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27410751581192017
    2. '   ' → logprob: -1.5241074562072754
    3. 'pr' → logprob: -4.274107456207275
    4. '	pr' → logprob: -6.024107456207275
    5. ' for' → logprob: -6.774107456207275
    6. '
' → logprob: -6.774107456207275
    7. '<|end|>' → logprob: -6.774107456207275
    8. '        
' → logprob: -7.649107456207275
    9. '    
' → logprob: -7.774107456207275
    10. '           ' → logprob: -8.149107933044434

Token 102: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49982014298439026
    2. '       ' → logprob: -1.3748201131820679
    3. 'pr' → logprob: -2.2498202323913574
    4. ' for' → logprob: -3.7498202323913574
    5. 'for' → logprob: -4.624820232391357
    6. '	pr' → logprob: -7.124820232391357
    7. '           ' → logprob: -8.3748197555542
    8. ' prere' → logprob: -8.9998197555542
    9. '```' → logprob: -9.2498197555542
    10. '    
' → logprob: -9.4998197555542

Token 103: ' prere' (ID: 55794)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.0036540029104799032
    2. 'for' → logprob: -6.5036540031433105
    3. ' prere' → logprob: -6.6286540031433105
    4. '       ' → logprob: -7.8786540031433105
    5. '   ' → logprob: -8.003653526306152
    6. ' for' → logprob: -9.378653526306152
    7. 'pre' → logprob: -11.628653526306152
    8. '           ' → logprob: -11.753653526306152
    9. ' pr' → logprob: -12.253653526306152
    10. '	pr' → logprob: -12.253653526306152

Token 104: 'qs' (ID: 31847)
  Prédit: 'qs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -1.664371848164592e-05
    2. 'q' → logprob: -11.125016212463379
    3. 's' → logprob: -14.500016212463379
    4. 'qus' → logprob: -15.000016212463379
    5. 'quisites' → logprob: -15.250016212463379
    6. '[' → logprob: -16.125017166137695
    7. 'gs' → logprob: -16.500017166137695
    8. ' qs' → logprob: -16.625017166137695
    9. 'js' → logprob: -16.750017166137695
    10. '   ' → logprob: -16.875017166137695

Token 105: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.625
    3. '[I' → logprob: -16.25
    4. ' [' → logprob: -18.0
    5. '[s' → logprob: -19.625
    6. '```' → logprob: -20.0
    7. '[ii' → logprob: -20.5
    8. ')[' → logprob: -20.625
    9. '[
' → logprob: -20.875
    10. '<|end|>' → logprob: -21.25

Token 106: ']' (ID: 60)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.06280587613582611
    2. ').' → logprob: -3.3128058910369873
    3. '.append' → logprob: -4.062805652618408
    4. ']' → logprob: -5.812805652618408
    5. '.extend' → logprob: -5.937805652618408
    6. '.' → logprob: -7.062805652618408
    7. ')' → logprob: -7.562805652618408
    8. '}.' → logprob: -8.937806129455566
    9. ' ].' → logprob: -9.937806129455566
    10. '=' → logprob: -10.812806129455566

Token 107: ' =' (ID: 314)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.046761445701122284
    2. '.' → logprob: -3.6717615127563477
    3. '=' → logprob: -4.171761512756348
    4. '.append' → logprob: -5.921761512756348
    5. '.=' → logprob: -6.296761512756348
    6. ' =' → logprob: -8.421761512756348
    7. '=.' → logprob: -10.546761512756348
    8. '.ext' → logprob: -10.921761512756348
    9. ' .' → logprob: -11.296761512756348
    10. '+=' → logprob: -11.421761512756348

Token 108: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.018195947632193565
    2. ' r' → logprob: -4.018196105957031
    3. '[r' → logprob: -10.018196105957031
    4. '	r' → logprob: -14.643196105957031
    5. ' [' → logprob: -14.893196105957031
    6. ' ' → logprob: -15.143196105957031
    7. '[' → logprob: -15.268196105957031
    8. '   ' → logprob: -16.51819610595703
    9. 'list' → logprob: -16.51819610595703
    10. ' ' → logprob: -16.89319610595703

Token 109: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7226091027259827
    2. '<|end|>' → logprob: -0.7226091027259827
    3. '
' → logprob: -4.097609043121338
    4. '    
' → logprob: -5.597609043121338
    5. ')' → logprob: -6.097609043121338
    6. '  
' → logprob: -6.722609043121338
    7. ' ' → logprob: -6.847609043121338
    8. '<|end|>' → logprob: -7.097609043121338
    9. '  ' → logprob: -7.597609043121338
    10. '```' → logprob: -7.597609043121338

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04010012745857239
    2. '<|end|>' → logprob: -4.16510009765625
    3. ' while' → logprob: -5.16510009765625
    4. 'while' → logprob: -5.29010009765625
    5. '    ' → logprob: -5.54010009765625
    6. ')' → logprob: -5.91510009765625
    7. '    
' → logprob: -5.91510009765625
    8. 'for' → logprob: -7.04010009765625
    9. '       ' → logprob: -7.16510009765625
    10. ' for' → logprob: -7.29010009765625

Token 111: ' ans' (ID: 3345)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2258179187774658
    2. 'completed' → logprob: -2.225817918777466
    3. 'taken' → logprob: -2.350817918777466
    4. 'used' → logprob: -3.100817918777466
    5. 'available' → logprob: -3.100817918777466
    6. 'possible' → logprob: -3.225817918777466
    7. 'passed' → logprob: -3.350817918777466
    8. 'selected' → logprob: -3.600817918777466
    9. '#' → logprob: -3.600817918777466
    10. '   ' → logprob: -4.100817680358887

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0699995756149292
    2. '=' → logprob: -2.6949996948242188
    3. ' +=' → logprob: -11.194999694824219
    4. ' ' → logprob: -11.319999694824219
    5. '_' → logprob: -11.319999694824219
    6. ',' → logprob: -11.944999694824219
    7. ':' → logprob: -12.194999694824219
    8. '[' → logprob: -12.569999694824219
    9. '=[]' → logprob: -13.444999694824219
    10. 's' → logprob: -13.819999694824219

Token 113: ' n' (ID: 297)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23707623779773712
    2. ' ' → logprob: -1.7370762825012207
    3. '[]' → logprob: -4.362076282501221
    4. ' []' → logprob: -5.487076282501221
    5. 'sum' → logprob: -5.737076282501221
    6. '[' → logprob: -5.987076282501221
    7. ' [' → logprob: -5.987076282501221
    8. ' sum' → logprob: -6.112076282501221
    9. 'float' → logprob: -6.362076282501221
    10. ' n' → logprob: -7.237076282501221

Token 114: '+' (ID: 10)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5757318139076233
    2. '<|end|>' → logprob: -1.3257317543029785
    3. '
' → logprob: -2.9507317543029785
    4. '   ' → logprob: -3.8257317543029785
    5. 'while' → logprob: -3.8257317543029785
    6. 'for' → logprob: -3.8257317543029785
    7. ' ' → logprob: -4.4507317543029785
    8. ' while' → logprob: -4.5757317543029785
    9. ' for' → logprob: -4.8257317543029785
    10. '+' → logprob: -5.3257317543029785

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00698969978839159
    2. '100' → logprob: -5.506989479064941
    3. '10' → logprob: -6.381989479064941
    4. ' ' → logprob: -7.131989479064941
    5. 'U' → logprob: -8.506989479064941
    6. '0' → logprob: -9.131989479064941
    7. '2' → logprob: -10.131989479064941
    8. ' U' → logprob: -11.506989479064941
    9. '5' → logprob: -11.631989479064941
    10. '   ' → logprob: -12.006989479064941

Token 116: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4246596693992615
    2. 'for' → logprob: -1.2996597290039062
    3. ' for' → logprob: -3.4246597290039062
    4. 'available' → logprob: -5.049659729003906
    5. 'while' → logprob: -5.174659729003906
    6. '<|end|>' → logprob: -5.174659729003906
    7. 'stack' → logprob: -5.924659729003906
    8. 'possible' → logprob: -6.174659729003906
    9. '    
' → logprob: -6.549659729003906
    10. 'import' → logprob: -6.674659729003906

Token 118: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2945314645767212
    2. 'stack' → logprob: -1.7945314645767212
    3. ' for' → logprob: -3.2945313453674316
    4. '   ' → logprob: -3.6695313453674316
    5. 'def' → logprob: -5.044531345367432
    6. 'import' → logprob: -5.669531345367432
    7. 'visited' → logprob: -5.919531345367432
    8. 'completed' → logprob: -5.919531345367432
    9. 'queue' → logprob: -6.419531345367432
    10. ' stack' → logprob: -6.544531345367432

Token 119: ' brut' (ID: 30236)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7182446122169495
    2. 'for' → logprob: -1.4682445526123047
    3. 'def' → logprob: -2.2182445526123047
    4. ' for' → logprob: -2.9682445526123047
    5. 'import' → logprob: -3.0932445526123047
    6. ' from' → logprob: -3.4682445526123047
    7. 'stack' → logprob: -4.093244552612305
    8. ' stack' → logprob: -4.968244552612305
    9. 'visited' → logprob: -4.968244552612305
    10. 'dp' → logprob: -6.468244552612305

Token 120: 'ef' (ID: 1079)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.01272695604711771
    2. 'ef' → logprob: -4.387726783752441
    3. 'for' → logprob: -8.762726783752441
    4. ' e' → logprob: -10.387726783752441
    5. ' for' → logprob: -11.762726783752441
    6. 'efore' → logprob: -11.887726783752441
    7. '   ' → logprob: -12.637726783752441
    8. 'a' → logprob: -13.262726783752441
    9. 'es' → logprob: -13.512726783752441
    10. ' ' → logprob: -13.887726783752441

Token 121: 'orce' (ID: 22941)
  Prédit: 'orce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orce' → logprob: -0.03812514618039131
    2. 'or' → logprob: -3.2881250381469727
    3. 'force' → logprob: -10.913125038146973
    4. ' or' → logprob: -11.038125038146973
    5. 'o' → logprob: -11.288125038146973
    6. 'orc' → logprob: -11.538125038146973
    7. '```' → logprob: -11.788125038146973
    8. '_force' → logprob: -11.913125038146973
    9. 'oce' → logprob: -12.163125038146973
    10. ' force' → logprob: -12.788125038146973

Token 122: ' all' (ID: 722)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ' combinations' (ID: 43835)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.384461760520935
    2. '(range' → logprob: -1.634461760520935
    3. 'com' → logprob: -2.1344618797302246
    4. 'sub' → logprob: -2.3844618797302246
    5. ' range' → logprob: -2.7594618797302246
    6. '(' → logprob: -2.7594618797302246
    7. ' subsets' → logprob: -3.0094618797302246
    8. 'subset' → logprob: -3.3844618797302246
    9. 'courses' → logprob: -4.009461879730225
    10. 'ranges' → logprob: -4.009461879730225

Token 124: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7119834423065186
    2. ' ' → logprob: -1.9619834423065186
    3. 'for' → logprob: -1.9619834423065186
    4. 'from' → logprob: -2.0869834423065186
    5. ' from' → logprob: -2.8369834423065186
    6. '<|end|>' → logprob: -3.7119834423065186
    7. 'import' → logprob: -4.461983680725098
    8. ' 
' → logprob: -5.336983680725098
    9. '   ' → logprob: -6.836983680725098
    10. '
' → logprob: -6.836983680725098

Token 125: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1172149181365967
    2. ' for' → logprob: -1.4922149181365967
    3. 'from' → logprob: -1.6172149181365967
    4. ' ' → logprob: -2.1172149181365967
    5. '<|end|>' → logprob: -2.4922149181365967
    6. 'import' → logprob: -4.117215156555176
    7. ' from' → logprob: -4.242215156555176
    8. ' 
' → logprob: -5.367215156555176
    9. '   ' → logprob: -6.117215156555176
    10. '(' → logprob: -6.867215156555176

Token 126: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8241164684295654
    2. 'for' → logprob: -1.4491164684295654
    3. 'from' → logprob: -1.8241164684295654
    4. ' from' → logprob: -1.8241164684295654
    5. 'import' → logprob: -6.5741167068481445
    6. ' 
' → logprob: -7.3241167068481445
    7. '   ' → logprob: -7.4491167068481445
    8. '1' → logprob: -7.9491167068481445
    9. ' ' → logprob: -8.074116706848145
    10. '0' → logprob: -8.824116706848145

Token 127: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6800763607025146
    2. 'from' → logprob: -1.0550763607025146
    3. ' for' → logprob: -2.1800763607025146
    4. ' from' → logprob: -3.5550763607025146
    5. 'import' → logprob: -6.055076599121094
    6. '(' → logprob: -7.680076599121094
    7. '1' → logprob: -8.305076599121094
    8. '   ' → logprob: -8.555076599121094
    9. 'f' → logprob: -8.930076599121094
    10. ' (' → logprob: -10.055076599121094

Token 128: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0184167623519897
    2. 'mask' → logprob: -1.2684167623519897
    3. ' i' → logprob: -2.2684168815612793
    4. 'subset' → logprob: -2.7684168815612793
    5. ' mask' → logprob: -2.8934168815612793
    6. ' subset' → logprob: -3.2684168815612793
    7. 'combo' → logprob: -3.8934168815612793
    8. 'c' → logprob: -4.268416881561279
    9. 's' → logprob: -4.893416881561279
    10. ' comb' → logprob: -5.018416881561279

Token 129: ' subset' (ID: 58845)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.2994978725910187
    2. 'subset' → logprob: -1.9244978427886963
    3. 'i' → logprob: -3.4244978427886963
    4. 'comb' → logprob: -3.6744978427886963
    5. ' mask' → logprob: -4.174498081207275
    6. 'combo' → logprob: -4.299498081207275
    7. 's' → logprob: -5.174498081207275
    8. ' subset' → logprob: -5.674498081207275
    9. 'semester' → logprob: -6.049498081207275
    10. 'course' → logprob: -6.299498081207275

Token 130: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.458238124847412
    2. ' in' → logprob: -1.458238124847412
    3. ':' → logprob: -1.708238124847412
    4. ' ,' → logprob: -2.958238124847412
    5. ' :' → logprob: -3.083238124847412
    6. '<|end|>' → logprob: -3.458238124847412
    7. ',' → logprob: -3.833238124847412
    8. ' for' → logprob: -3.833238124847412
    9. 's' → logprob: -3.958238124847412
    10. '_mask' → logprob: -4.083238124847412

Token 131: ' check' (ID: 2371)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6826767921447754
    2. ' ' → logprob: -1.5576767921447754
    3. 'for' → logprob: -1.8076767921447754
    4. ' range' → logprob: -3.5576767921447754
    5. ' mask' → logprob: -3.5576767921447754
    6. 'mask' → logprob: -4.307676792144775
    7. ' if' → logprob: -4.557676792144775
    8. 'range' → logprob: -4.682676792144775
    9. '1' → logprob: -5.557676792144775
    10. '    ' → logprob: -5.682676792144775

Token 132: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.027492443099617958
    2. '    ' → logprob: -5.152492523193359
    3. ' ' → logprob: -5.652492523193359
    4. ' all' → logprob: -5.902492523193359
    5. ' subset' → logprob: -5.902492523193359
    6. ' subsets' → logprob: -6.527492523193359
    7. 'if' → logprob: -6.777492523193359
    8. 'subset' → logprob: -6.777492523193359
    9. '<|end|>' → logprob: -6.777492523193359
    10. 's' → logprob: -7.027492523193359

Token 133: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.5588967800140381
    2. 'all' → logprob: -2.058896780014038
    3. ' it' → logprob: -2.683896780014038
    4. 'len' → logprob: -2.933896780014038
    5. 'sum' → logprob: -3.183896780014038
    6. 'valid' → logprob: -3.808896780014038
    7. '(' → logprob: -4.058897018432617
    8. ' (' → logprob: -4.183897018432617
    9. '(len' → logprob: -4.433897018432617
    10. ' the' → logprob: -4.558897018432617

Token 134: ' prere' (ID: 55794)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.18285943567752838
    2. 'courses' → logprob: -2.807859420776367
    3. ' prerequisites' → logprob: -3.432859420776367
    4. ' courses' → logprob: -4.432859420776367
    5. ' prere' → logprob: -4.557859420776367
    6. 'selected' → logprob: -4.682859420776367
    7. 'required' → logprob: -4.682859420776367
    8. 'completed' → logprob: -4.807859420776367
    9. 'credits' → logprob: -5.057859420776367
    10. 'needed' → logprob: -6.307859420776367

Token 135: 'qs' (ID: 31847)
  Prédit: 'qs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -0.06384693831205368
    2. 'q' → logprob: -2.8138468265533447
    3. 'quisites' → logprob: -6.688847064971924
    4. 's' → logprob: -8.188846588134766
    5. 'cs' → logprob: -9.688846588134766
    6. 'req' → logprob: -9.813846588134766
    7. 'quests' → logprob: -9.813846588134766
    8. 'quis' → logprob: -9.938846588134766
    9. 'quisite' → logprob: -10.813846588134766
    10. 'gs' → logprob: -10.938846588134766

Token 136: ' for' (ID: 395)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6547744870185852
    2. ' are' → logprob: -1.0297744274139404
    3. 'in' → logprob: -2.9047744274139404
    4. ' met' → logprob: -3.2797744274139404
    5. 'met' → logprob: -4.2797746658325195
    6. 'are' → logprob: -4.5297746658325195
    7. '<|end|>' → logprob: -5.7797746658325195
    8. 's' → logprob: -6.9047746658325195
    9. 'subset' → logprob: -7.5297746658325195
    10. '_met' → logprob: -7.7797746658325195

Token 137: ' included' (ID: 7360)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.7900928258895874
    2. 'all' → logprob: -1.5400928258895874
    3. 'the' → logprob: -2.290092945098877
    4. 'every' → logprob: -2.665092945098877
    5. ' each' → logprob: -3.665092945098877
    6. ' all' → logprob: -4.040092945098877
    7. 'subset' → logprob: -4.040092945098877
    8. ' every' → logprob: -4.290092945098877
    9. ' the' → logprob: -4.290092945098877
    10. 'i' → logprob: -4.415092945098877

Token 138: ' courses' (ID: 13350)
  Prédit: 'courses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'courses' → logprob: -0.101206935942173
    2. 'modules' → logprob: -3.3512070178985596
    3. ' courses' → logprob: -4.1012067794799805
    4. 'i' → logprob: -4.7262067794799805
    5. 'subset' → logprob: -4.7262067794799805
    6. 'course' → logprob: -4.8512067794799805
    7. 'subjects' → logprob: -4.8512067794799805
    8. ' modules' → logprob: -6.3512067794799805
    9. ' i' → logprob: -6.4762067794799805
    10. 'tokens' → logprob: -6.8512067794799805

Token 139: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.014106967486441135
    2. 'are' → logprob: -4.764106750488281
    3. ' in' → logprob: -5.514106750488281
    4. 'in' → logprob: -7.014106750488281
    5. '<|end|>' → logprob: -8.514106750488281
    6. 'subset' → logprob: -9.014106750488281
    7. ')' → logprob: -10.139106750488281
    8. 'included' → logprob: -10.389106750488281
    9. 'import' → logprob: -10.889106750488281
    10. ' ' → logprob: -11.264106750488281

Token 140: ' in' (ID: 306)
  Prédit: 'met'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'met' → logprob: -0.054567739367485046
    2. ' met' → logprob: -3.554567813873291
    3. 's' → logprob: -4.054567813873291
    4. 'fulfilled' → logprob: -5.679567813873291
    5. 'included' → logprob: -5.804567813873291
    6. 'also' → logprob: -8.054567337036133
    7. ' satisfied' → logprob: -8.304567337036133
    8. 'completed' → logprob: -10.179567337036133
    9. 'covered' → logprob: -10.304567337036133
    10. ' included' → logprob: -10.304567337036133

Token 141: ' the' (ID: 290)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.2612779140472412
    2. ' subset' → logprob: -2.386277914047241
    3. 'the' → logprob: -2.511277914047241
    4. ' the' → logprob: -3.011277914047241
    5. 'comb' → logprob: -6.38627815246582
    6. ' that' → logprob: -7.01127815246582
    7. 'included' → logprob: -7.26127815246582
    8. 'that' → logprob: -7.26127815246582
    9. 's' → logprob: -7.63627815246582
    10. 'it' → logprob: -8.01127815246582

Token 142: ' subset' (ID: 58845)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.0020741254556924105
    2. ' subset' → logprob: -6.252074241638184
    3. 'set' → logprob: -9.377074241638184
    4. 'comb' → logprob: -11.002074241638184
    5. 'current' → logprob: -11.502074241638184
    6. '_subset' → logprob: -12.002074241638184
    7. 'while' → logprob: -12.127074241638184
    8. '_' → logprob: -12.252074241638184
    9. ')' → logprob: -12.377074241638184
    10. 'included' → logprob: -12.877074241638184

Token 143: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5226647853851318
    2. ' for' → logprob: -1.1476647853851318
    3. ' ' → logprob: -3.147664785385132
    4. '<|end|>' → logprob: -3.897664785385132
    5. '   ' → logprob: -4.647665023803711
    6. '
' → logprob: -5.522665023803711
    7. 'from' → logprob: -5.772665023803711
    8. ' 
' → logprob: -6.022665023803711
    9. 'import' → logprob: -6.272665023803711
    10. ',' → logprob: -6.897665023803711

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1577349752187729
    2. ' ' → logprob: -3.0327348709106445
    3. 'for' → logprob: -3.1577348709106445
    4. ' for' → logprob: -3.4077348709106445
    5. '    ' → logprob: -5.4077348709106445
    6. '<|end|>' → logprob: -5.6577348709106445
    7. '  ' → logprob: -6.1577348709106445
    8. ' 
' → logprob: -6.2827348709106445
    9. ' and' → logprob: -6.6577348709106445
    10. ',' → logprob: -6.7827348709106445

Token 145: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8525696396827698
    2. ' for' → logprob: -1.227569580078125
    3. 'from' → logprob: -1.602569580078125
    4. ' from' → logprob: -3.352569580078125
    5. '   ' → logprob: -3.477569580078125
    6. ' ' → logprob: -5.602569580078125
    7. 'import' → logprob: -5.727569580078125
    8. '
' → logprob: -5.852569580078125
    9. '<|end|>' → logprob: -6.852569580078125
    10. ' 
' → logprob: -7.227569580078125

Token 146: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9183325171470642
    2. 'for' → logprob: -0.9183325171470642
    3. 'from' → logprob: -1.918332576751709
    4. ' from' → logprob: -3.043332576751709
    5. '   ' → logprob: -5.793332576751709
    6. ' ' → logprob: -6.043332576751709
    7. 'import' → logprob: -6.668332576751709
    8. '<|end|>' → logprob: -9.41833209991455
    9. '
' → logprob: -9.66833209991455
    10. ' import' → logprob: -9.79333209991455

Token 147: ' sum' (ID: 4215)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.8704230785369873
    2. ' len' → logprob: -1.6204230785369873
    3. ' all' → logprob: -2.4954230785369873
    4. 'all' → logprob: -2.7454230785369873
    5. 'sum' → logprob: -2.9954230785369873
    6. 'subset' → logprob: -2.9954230785369873
    7. ' subset' → logprob: -3.9954230785369873
    8. ' sum' → logprob: -4.495423316955566
    9. ' any' → logprob: -4.620423316955566
    10. 'not' → logprob: -4.620423316955566

Token 148: ' credits' (ID: 30198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030086809769272804
    2. '_' → logprob: -5.280086994171143
    3. ' (' → logprob: -5.655086994171143
    4. '(s' → logprob: -5.780086994171143
    5. '<|end|>' → logprob: -5.905086994171143
    6. '<|end|>' → logprob: -5.905086994171143
    7. '(sum' → logprob: -6.280086994171143
    8. '(selected' → logprob: -6.280086994171143
    9. '(sub' → logprob: -6.405086994171143
    10. '(scores' → logprob: -6.780086994171143

Token 149: ' >=' (ID: 5064)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22774119675159454
    2. ' <=' → logprob: -2.602741241455078
    3. ' >=' → logprob: -3.727741241455078
    4. ' ' → logprob: -4.227741241455078
    5. '<=' → logprob: -4.352741241455078
    6. '>=' → logprob: -4.477741241455078
    7. '_' → logprob: -4.477741241455078
    8. '<|end|>' → logprob: -4.727741241455078
    9. '<|end|>' → logprob: -4.852741241455078
    10. ' (' → logprob: -5.102741241455078

Token 150: ' U' (ID: 601)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.012518009170889854
    2. ' U' → logprob: -4.387517929077148
    3. '	U' → logprob: -12.637517929077148
    4. '   ' → logprob: -13.137517929077148
    5. ' ' → logprob: -13.137517929077148
    6. ' ' → logprob: -14.887517929077148
    7. '  ' → logprob: -16.13751792907715
    8. '    ' → logprob: -16.51251792907715
    9. '100' → logprob: -16.63751792907715
    10. '<|end|>' → logprob: -16.63751792907715

Token 151: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018732057884335518
    2. ',' → logprob: -4.518732070922852
    3. ' :' → logprob: -5.768732070922852
    4. '   ' → logprob: -6.143732070922852
    5. 'for' → logprob: -7.143732070922852
    6. ' and' → logprob: -7.518732070922852
    7. ':
' → logprob: -7.893732070922852
    8. ' for' → logprob: -8.018732070922852
    9. 'and' → logprob: -8.893732070922852
    10. ' ,' → logprob: -10.393732070922852

Token 152: ' update' (ID: 4027)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1724294424057007
    2. 'for' → logprob: -1.4224294424057007
    3. 'from' → logprob: -1.5474294424057007
    4. 'import' → logprob: -2.0474295616149902
    5. ' from' → logprob: -2.7974295616149902
    6. 'continue' → logprob: -4.67242956161499
    7. ' continue' → logprob: -4.92242956161499
    8. ' import' → logprob: -4.92242956161499
    9. '   ' → logprob: -5.17242956161499
    10. ' subsets' → logprob: -5.67242956161499

Token 153: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.17119939625263214
    2. ' ans' → logprob: -1.9211994409561157
    3. 'for' → logprob: -5.046199321746826
    4. ' for' → logprob: -5.671199321746826
    5. '(ans' → logprob: -8.171199798583984
    6. ' ' → logprob: -9.046199798583984
    7. 'import' → logprob: -9.171199798583984
    8. 'answer' → logprob: -9.421199798583984
    9. 'subset' → logprob: -9.421199798583984
    10. '<|end|>' → logprob: -9.546199798583984

Token 154: ' with' (ID: 483)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.433991014957428
    2. ' for' → logprob: -1.6839909553527832
    3. 'from' → logprob: -2.058990955352783
    4. ' from' → logprob: -3.808990955352783
    5. '
' → logprob: -4.433990955352783
    6. ' 
' → logprob: -6.433990955352783
    7. '   ' → logprob: -6.433990955352783
    8. 'import' → logprob: -6.933990955352783
    9. ' ' → logprob: -8.683991432189941
    10. '    
' → logprob: -9.558991432189941

Token 155: ' minimal' (ID: 19957)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.015330719761550426
    2. ' min' → logprob: -4.515330791473389
    3. 'bin' → logprob: -6.015330791473389
    4. 'len' → logprob: -7.390330791473389
    5. 'sum' → logprob: -7.765330791473389
    6. 'subset' → logprob: -7.765330791473389
    7. ' bin' → logprob: -9.14033031463623
    8. 'the' → logprob: -9.26533031463623
    9. '   ' → logprob: -9.64033031463623
    10. 'minimum' → logprob: -10.64033031463623

Token 156: ' size' (ID: 2349)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.10909387469291687
    2. ' ans' → logprob: -2.9840939044952393
    3. '(ans' → logprob: -4.23409366607666
    4. 'size' → logprob: -4.48409366607666
    5. 'subset' → logprob: -4.85909366607666
    6. ' subset' → logprob: -6.10909366607666
    7. ' size' → logprob: -6.10909366607666
    8. 'while' → logprob: -6.23409366607666
    9. 'sum' → logprob: -6.35909366607666
    10. 'for' → logprob: -6.35909366607666

Token 157: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0560989379882812
    2. 'for' → logprob: -1.3060989379882812
    3. '
' → logprob: -1.5560989379882812
    4. '   ' → logprob: -1.9310989379882812
    5. 'from' → logprob: -4.306098937988281
    6. '<|end|>' → logprob: -5.056098937988281
    7. ' from' → logprob: -5.931098937988281
    8. ' 
' → logprob: -7.056098937988281
    9. 'import' → logprob: -7.806098937988281
    10. ' ' → logprob: -7.806098937988281

Token 158: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28383198380470276
    2. ' for' → logprob: -1.6588319540023804
    3. '
' → logprob: -3.28383207321167
    4. 'from' → logprob: -5.03383207321167
    5. ' 
' → logprob: -5.78383207321167
    6. '<|end|>' → logprob: -5.78383207321167
    7. '   ' → logprob: -5.90883207321167
    8. ' ' → logprob: -6.15883207321167
    9. ' from' → logprob: -7.65883207321167
    10. 'import' → logprob: -8.033831596374512

Token 159: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08765859156847
    2. ' for' → logprob: -3.087658643722534
    3. 'from' (adapté à ' from') → logprob: -3.712658643722534
    4. ' 
' → logprob: -5.587658405303955
    5. '
' → logprob: -5.587658405303955
    6. ' ' → logprob: -6.337658405303955
    7. 'f' → logprob: -6.587658405303955
    8. ':' → logprob: -6.962658405303955
    9. '   ' → logprob: -7.462658405303955
    10. ' from' → logprob: -7.712658405303955

Token 160: ' itertools' (ID: 103178)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.2663533687591553
    2. ' itertools' → logprob: -1.7663533687591553
    3. 'sys' → logprob: -3.0163533687591553
    4. 'collections' → logprob: -4.391353607177734
    5. 'math' → logprob: -6.891353607177734
    6. 'heap' → logprob: -8.016353607177734
    7. 'operator' → logprob: -9.266353607177734
    8. 'copy' → logprob: -10.641353607177734
    9. 'iter' → logprob: -11.391353607177734
    10. ' sys' → logprob: -11.516353607177734

Token 161: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.28150880336761475
    2. ' import' → logprob: -1.4065088033676147
    3. '<|end|>' → logprob: -8.656508445739746
    4. '	import' → logprob: -9.281508445739746
    5. '.com' → logprob: -10.781508445739746
    6. 'ertools' → logprob: -11.281508445739746
    7. '.import' → logprob: -11.281508445739746
    8. 'from' → logprob: -11.656508445739746
    9. '.' → logprob: -11.656508445739746
    10. ' itertools' → logprob: -11.906508445739746

Token 162: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -4.6087021473795176e-05
    2. ' combinations' → logprob: -10.000045776367188
    3. 'comb' → logprob: -15.250045776367188
    4. 'compress' → logprob: -16.000045776367188
    5. 'chain' → logprob: -16.250045776367188
    6. 'product' → logprob: -16.750045776367188
    7. '	com' → logprob: -16.750045776367188
    8. '(com' → logprob: -17.875045776367188
    9. '_com' → logprob: -18.125045776367188
    10. 'combine' → logprob: -18.375045776367188

Token 163: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6831474304199219
    2. ':' → logprob: -1.9331474304199219
    3. ' for' → logprob: -2.058147430419922
    4. '<|end|>' → logprob: -2.183147430419922
    5. '
' → logprob: -2.933147430419922
    6. '   ' → logprob: -4.433147430419922
    7. ' ' → logprob: -4.433147430419922
    8. '(' → logprob: -4.933147430419922
    9. ')' → logprob: -5.433147430419922
    10. '<|end|>' → logprob: -5.558147430419922

Token 164: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4520983099937439
    2. '(' → logprob: -1.8270983695983887
    3. ' for' → logprob: -2.7020983695983887
    4. '   ' → logprob: -3.3270983695983887
    5. ' ' → logprob: -3.9520983695983887
    6. '(
' → logprob: -4.077098369598389
    7. '(range' → logprob: -4.077098369598389
    8. ':' → logprob: -4.202098369598389
    9. '
' → logprob: -4.827098369598389
    10. ')' → logprob: -4.827098369598389

Token 165: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.012671511620283127
    2. ' for' → logprob: -4.38767147064209
    3. '   ' → logprob: -8.88767147064209
    4. 'n' → logprob: -11.38767147064209
    5. 'i' → logprob: -11.88767147064209
    6. 'range' → logprob: -13.38767147064209
    7. 'def' → logprob: -13.88767147064209
    8. '    
' → logprob: -14.38767147064209
    9. ' ' → logprob: -14.88767147064209
    10. '
' → logprob: -15.26267147064209

Token 166: ' size' (ID: 2349)
  Prédit: ' size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.5592617392539978
    2. ' r' → logprob: -1.0592617988586426
    3. 'r' → logprob: -2.9342617988586426
    4. 'size' → logprob: -4.684261798858643
    5. ' length' → logprob: -4.809261798858643
    6. ' sz' → logprob: -4.934261798858643
    7. ' subset' → logprob: -6.559261798858643
    8. 'sz' → logprob: -6.934261798858643
    9. 'length' → logprob: -8.059261322021484
    10. ' k' → logprob: -8.434261322021484

Token 167: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007699491921812296
    2. 'in' → logprob: -4.882699489593506
    3. '(' → logprob: -9.507699966430664
    4. ' ' → logprob: -11.632699966430664
    5. 's' → logprob: -12.882699966430664
    6. '<|end|>' → logprob: -13.632699966430664
    7. 'In' → logprob: -13.757699966430664
    8. '_in' → logprob: -13.882699966430664
    9. '	in' → logprob: -14.382699966430664
    10. ' (' → logprob: -14.507699966430664

Token 168: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008617172949016094
    2. ' range' → logprob: -4.758617401123047
    3. '(range' → logprob: -13.008617401123047
    4. '   ' → logprob: -16.008617401123047
    5. ' ' → logprob: -16.133617401123047
    6. '1' → logprob: -16.508617401123047
    7. '	range' → logprob: -17.008617401123047
    8. '  ' → logprob: -18.383617401123047
    9. '(' → logprob: -18.883617401123047
    10. 'ranges' → logprob: -19.633617401123047

Token 169: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007702684495598078
    2. '(n' → logprob: -4.882702827453613
    3. '1' → logprob: -9.257702827453613
    4. 'n' → logprob: -13.757702827453613
    5. ' (' → logprob: -16.007701873779297
    6. ' ' → logprob: -17.757701873779297
    7. '(min' → logprob: -17.757701873779297
    8. '   ' → logprob: -18.257701873779297
    9. ' n' → logprob: -18.257701873779297
    10. '(len' → logprob: -18.507701873779297

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012511652894318104
    2. 'n' → logprob: -4.387511730194092
    3. '0' → logprob: -13.387511253356934
    4. ' n' → logprob: -15.012511253356934
    5. ' ' → logprob: -16.01251220703125
    6. '(n' → logprob: -16.88751220703125
    7. '   ' → logprob: -17.26251220703125
    8. 'len' → logprob: -17.76251220703125
    9. '(' → logprob: -17.88751220703125
    10. '	n' → logprob: -18.38751220703125

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007248217007145286
    2. ',n' → logprob: -7.250724792480469
    3. ' ,' → logprob: -11.125724792480469
    4. ',
' → logprob: -16.87572479248047
    5. 'n' → logprob: -16.87572479248047
    6. ',len' → logprob: -17.00072479248047
    7. ',size' → logprob: -19.25072479248047
    8. '   ' → logprob: -19.37572479248047
    9. ',num' → logprob: -19.62572479248047
    10. ' n' → logprob: -19.62572479248047

Token 172: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.941850526549388e-06
    2. ' n' → logprob: -11.750007629394531
    3. 'len' → logprob: -18.00000762939453
    4. '   ' → logprob: -18.75000762939453
    5. '	n' → logprob: -19.00000762939453
    6. '(n' → logprob: -21.12500762939453
    7. '[n' → logprob: -22.25000762939453
    8. '
' → logprob: -22.62500762939453
    9. ' ' → logprob: -22.62500762939453
    10. '_n' → logprob: -22.75000762939453

Token 173: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00861456897109747
    2. ' +' → logprob: -4.758614540100098
    3. '＋' → logprob: -18.383615493774414
    4. '+
' → logprob: -19.258615493774414
    5. '+n' → logprob: -20.133615493774414
    6. '   ' → logprob: -20.133615493774414
    7. ' ' → logprob: -20.383615493774414
    8. ')+' → logprob: -20.508615493774414
    9. ' ' → logprob: -21.008615493774414
    10. '()+' → logprob: -21.258615493774414

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.000017166137695
    4. '
' → logprob: -16.875017166137695
    5. '):
' → logprob: -17.500017166137695
    6. '+' → logprob: -18.500017166137695
    7. '2' → logprob: -18.750017166137695
    8. ')' → logprob: -18.750017166137695
    9. '```' → logprob: -19.062517166137695
    10. '  ' → logprob: -19.375017166137695

Token 175: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013124977704137564
    2. ':' → logprob: -6.751312732696533
    3. '):
' → logprob: -9.001312255859375
    4. ')' → logprob: -11.251312255859375
    5. ' ):' → logprob: -12.501312255859375
    6. '   ' → logprob: -14.001312255859375
    7. '():' → logprob: -14.376312255859375
    8. ',' → logprob: -15.626312255859375
    9. '>:' → logprob: -15.626312255859375
    10. '}:' → logprob: -15.626312255859375

Token 176: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018092949176207185
    2. '   ' → logprob: -7.001809120178223
    3. ':
' → logprob: -7.251809120178223
    4. '       ' → logprob: -9.751809120178223
    5. '):' → logprob: -10.251809120178223
    6. ' for' → logprob: -10.376809120178223
    7. ' :' → logprob: -10.626809120178223
    8. ',' → logprob: -11.251809120178223
    9. 'for' → logprob: -12.126809120178223
    10. '<|end|>' → logprob: -12.126809120178223

Token 177: ' comb' (ID: 4134)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.011442827060818672
    2. 'for' → logprob: -4.8864426612854
    3. '       ' → logprob: -6.1364426612854
    4. '   ' → logprob: -6.5114426612854
    5. '    ' → logprob: -9.261443138122559
    6. '	for' → logprob: -10.636443138122559
    7. ' ' → logprob: -10.636443138122559
    8. '    
' → logprob: -12.011443138122559
    9. ' combinations' → logprob: -12.261443138122559
    10. ' comb' → logprob: -12.636443138122559

Token 178: 's' (ID: 82)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7592310309410095
    2. 'inations' → logprob: -1.1342310905456543
    3. 'in' → logprob: -2.1342310905456543
    4. 's' → logprob: -2.5092310905456543
    5. 'ination' → logprob: -4.634231090545654
    6. '   ' → logprob: -8.384230613708496
    7. 'ins' → logprob: -9.009230613708496
    8. '=' → logprob: -9.009230613708496
    9. 'ations' → logprob: -9.259230613708496
    10. 'initions' → logprob: -9.509230613708496

Token 179: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11849525570869446
    2. '=' → logprob: -2.368495225906372
    3. ' in' → logprob: -4.243495464324951
    4. 'in' → logprob: -5.618495464324951
    5. '(' → logprob: -10.243494987487793
    6. 's' → logprob: -10.618494987487793
    7. '   ' → logprob: -10.743494987487793
    8. 'import' → logprob: -10.993494987487793
    9. '=in' → logprob: -11.493494987487793
    10. ')' → logprob: -12.243494987487793

Token 180: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.0024854077491909266
    2. ' combinations' → logprob: -6.002485275268555
    3. 'list' → logprob: -12.377485275268555
    4. ' list' → logprob: -13.502485275268555
    5. '(com' → logprob: -13.502485275268555
    6. 'comb' → logprob: -13.502485275268555
    7. '	com' → logprob: -14.377485275268555
    8. '   ' → logprob: -14.877485275268555
    9. ' com' → logprob: -15.377485275268555
    10. '_com' → logprob: -15.877485275268555

Token 181: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -6.704273118884885e-07
    2. 'range' → logprob: -15.250000953674316
    3. '(list' → logprob: -15.375000953674316
    4. '(' → logprob: -15.625000953674316
    5. ' (' → logprob: -17.625
    6. ' range' → logprob: -18.875
    7. '   ' → logprob: -19.375
    8. '(r' → logprob: -20.0
    9. '(n' → logprob: -20.0
    10. '(
' → logprob: -20.125

Token 182: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.3438327843905427e-05
    2. '(' → logprob: -11.00002384185791
    3. 'n' → logprob: -12.00002384185791
    4. ' (' → logprob: -15.50002384185791
    5. ' n' → logprob: -16.000022888183594
    6. '   ' → logprob: -16.375022888183594
    7. ',n' → logprob: -16.375022888183594
    8. ',' → logprob: -17.625022888183594
    9. ')n' → logprob: -17.750022888183594
    10. '	n' → logprob: -18.500022888183594

Token 183: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.000726252153981477
    2. ',' → logprob: -7.250726222991943
    3. ' ),' → logprob: -11.375726699829102
    4. '   ' → logprob: -12.875726699829102
    5. '       ' → logprob: -14.375726699829102
    6. ',),' → logprob: -14.375726699829102
    7. '},' → logprob: -15.000726699829102
    8. ' ,' → logprob: -15.250726699829102
    9. ',size' → logprob: -16.1257266998291
    10. ')' → logprob: -16.1257266998291

Token 184: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.4740777015686035
    2. ' size' → logprob: -0.9740777015686035
    3. ' ' → logprob: -15.349077224731445
    4. '	size' → logprob: -15.599077224731445
    5. ')' → logprob: -15.724077224731445
    6. '   ' → logprob: -16.099077224731445
    7. '    ' → logprob: -17.599077224731445
    8. ',size' → logprob: -18.349077224731445
    9. '(size' → logprob: -18.474077224731445
    10. '  ' → logprob: -18.599077224731445

Token 185: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03807282820343971
    2. ')
' → logprob: -3.2880728244781494
    3. '):
' → logprob: -11.41307258605957
    4. '):' → logprob: -11.41307258605957
    5. '       ' → logprob: -12.16307258605957
    6. ')

' → logprob: -13.53807258605957
    7. ')
' → logprob: -13.66307258605957
    8. ' )' → logprob: -14.03807258605957
    9. '   ' → logprob: -14.28807258605957
    10. ' )
' → logprob: -16.03807258605957

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7057180404663086
    2. ' for' → logprob: -1.2057180404663086
    3. '
' → logprob: -2.4557180404663086
    4. '<|end|>' → logprob: -3.2057180404663086
    5. '        
' → logprob: -3.9557180404663086
    6. ':' → logprob: -4.330718040466309
    7. '  
' → logprob: -4.455718040466309
    8. '   ' → logprob: -4.705718040466309
    9. '    
' → logprob: -4.830718040466309
    10. ' 
' → logprob: -5.330718040466309

Token 187: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.30604419112205505
    2. '       ' → logprob: -1.5560442209243774
    3. 'for' (adapté à ' for') → logprob: -3.181044101715088
    4. '        
' → logprob: -5.806044101715088
    5. '
' → logprob: -6.056044101715088
    6. ' 
' → logprob: -6.181044101715088
    7. ' ' → logprob: -6.306044101715088
    8. '   ' → logprob: -7.806044101715088
    9. '  
' → logprob: -7.806044101715088
    10. '<|end|>' → logprob: -7.931044101715088

Token 188: ' comb' (ID: 4134)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.24333831667900085
    2. 'comb' → logprob: -1.7433383464813232
    3. 'courses' → logprob: -3.9933383464813232
    4. 'combo' → logprob: -4.618338108062744
    5. 'c' → logprob: -4.743338108062744
    6. ' subset' → logprob: -5.993338108062744
    7. ' courses' → logprob: -7.618338108062744
    8. 's' → logprob: -7.868338108062744
    9. ' comb' → logprob: -7.868338108062744
    10. 'course' → logprob: -8.618338584899902

Token 189: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007755453232675791
    2. 'in' → logprob: -4.882755279541016
    3. ')' → logprob: -9.507755279541016
    4. 's' → logprob: -10.632755279541016
    5. ' ' → logprob: -11.632755279541016
    6. 'ination' → logprob: -11.882755279541016
    7. 'ined' → logprob: -12.007755279541016
    8. ',' → logprob: -12.257755279541016
    9. '  ' → logprob: -12.382755279541016
    10. 'inue' → logprob: -13.007755279541016

Token 190: ' comb' (ID: 4134)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.42015737295150757
    2. ' comb' → logprob: -1.1701574325561523
    3. 'comb' → logprob: -3.4201574325561523
    4. '(com' → logprob: -10.420157432556152
    5. '   ' → logprob: -14.795157432556152
    6. '_com' → logprob: -15.170157432556152
    7. '	com' → logprob: -15.420157432556152
    8. ' ' → logprob: -16.170156478881836
    9. 's' → logprob: -16.295156478881836
    10. ' com' → logprob: -17.045156478881836

Token 191: 's' (ID: 82)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3136076331138611
    2. ':' → logprob: -1.5636076927185059
    3. '):
' → logprob: -3.063607692718506
    4. ':
' → logprob: -5.188607692718506
    5. 's' → logprob: -5.688607692718506
    6. '():' → logprob: -6.813607692718506
    7. '():
' → logprob: -7.313607692718506
    8. 'in' → logprob: -7.563607692718506
    9. ')' → logprob: -8.063607215881348
    10. '**' → logprob: -8.313607215881348

Token 192: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001624952768906951
    2. ':
' → logprob: -6.501625061035156
    3. '):' → logprob: -9.126625061035156
    4. ',' → logprob: -12.501625061035156
    5. '):
' → logprob: -12.501625061035156
    6. '<|end|>' → logprob: -13.126625061035156
    7. ')' → logprob: -13.626625061035156
    8. ':

' → logprob: -14.001625061035156
    9. ':**' → logprob: -14.376625061035156
    10. '       ' → logprob: -14.751625061035156

Token 193: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02758290059864521
    2. '           ' → logprob: -4.152583122253418
    3. ':
' → logprob: -4.652583122253418
    4. '       ' → logprob: -7.652583122253418
    5. ',' → logprob: -7.777583122253418
    6. '):' → logprob: -7.777583122253418
    7. ' :' → logprob: -8.652583122253418
    8. '        ' → logprob: -9.902583122253418
    9. '):
' → logprob: -9.902583122253418
    10. ' if' → logprob: -10.027583122253418

Token 194: ' selected' (ID: 6386)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3615394830703735
    2. '               ' → logprob: -1.4865394830703735
    3. ' 
' → logprob: -1.8615394830703735
    4. ' if' → logprob: -2.361539363861084
    5. ' sum' → logprob: -2.486539363861084
    6. '
' → logprob: -2.986539363861084
    7. '            
' → logprob: -3.986539363861084
    8. '                
' → logprob: -3.986539363861084
    9. 'sum' → logprob: -4.111539363861084
    10. ' total' → logprob: -4.236539363861084

Token 195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11550663411617279
    2. '=' → logprob: -2.365506649017334
    3. '_' → logprob: -4.490506649017334
    4. '_set' → logprob: -5.740506649017334
    5. '=set' → logprob: -7.365506649017334
    6. 'set' → logprob: -9.615506172180176
    7. '_=' → logprob: -10.740506172180176
    8. 's' → logprob: -11.490506172180176
    9. ')' → logprob: -11.990506172180176
    10. ' ' → logprob: -12.365506172180176

Token 196: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.001170460251159966
    2. ' set' → logprob: -6.751170635223389
    3. '(set' → logprob: -16.751171112060547
    4. '	set' → logprob: -17.126171112060547
    5. '{' → logprob: -17.251171112060547
    6. '   ' → logprob: -17.376171112060547
    7. '=set' → logprob: -17.501171112060547
    8. '[' → logprob: -18.751171112060547
    9. ')set' → logprob: -19.501171112060547
    10. ' ' → logprob: -19.626171112060547

Token 197: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.000000953674316
    3. 'comb' → logprob: -15.125000953674316
    4. '(combo' → logprob: -17.500001907348633
    5. '()' → logprob: -17.625001907348633
    6. '(comm' → logprob: -17.750001907348633
    7. ' (' → logprob: -19.250001907348633
    8. ' comb' → logprob: -19.250001907348633
    9. '(cont' → logprob: -19.750001907348633
    10. 'com' → logprob: -20.250001907348633

Token 198: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.650518920039758e-06
    2. 'mb' → logprob: -13.375003814697266
    3. 'comb' → logprob: -14.750003814697266
    4. '[' → logprob: -15.125003814697266
    5. ')' → logprob: -15.125003814697266
    6. '[b' → logprob: -15.625003814697266
    7. 'bb' → logprob: -16.125003814697266
    8. 'б' → logprob: -16.125003814697266
    9. '{' → logprob: -16.750003814697266
    10. '   ' → logprob: -16.750003814697266

Token 199: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31379446387290955
    2. ')' → logprob: -1.313794493675232
    3. '           ' → logprob: -7.8137946128845215
    4. ')
' → logprob: -9.313794136047363
    5. ')

' → logprob: -10.563794136047363
    6. ' )
' → logprob: -11.938794136047363
    7. '       ' → logprob: -13.188794136047363
    8. '               ' → logprob: -13.438794136047363
    9. ' )' → logprob: -14.188794136047363
    10. '          ' → logprob: -14.563794136047363

Token 200: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.256774365901947
    2. '
' → logprob: -1.5067744255065918
    3. '            
' → logprob: -5.631774425506592
    4. '<|end|>' → logprob: -8.131773948669434
    5. ' 
' → logprob: -8.631773948669434
    6. '    
' → logprob: -8.881773948669434
    7. ',' → logprob: -9.256773948669434
    8. '  
' → logprob: -9.381773948669434
    9. ')' → logprob: -9.631773948669434
    10. '
' → logprob: -10.131773948669434

Token 201: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6533761024475098
    2. ' valid' → logprob: -1.1533761024475098
    3. 'valid' → logprob: -2.1533761024475098
    4. ' if' → logprob: -3.7783761024475098
    5. 'if' → logprob: -4.65337610244751
    6. 'all' → logprob: -5.65337610244751
    7. ' all' → logprob: -6.02837610244751
    8. '            
' → logprob: -6.52837610244751
    9. ' ok' → logprob: -6.52837610244751
    10. ' is' → logprob: -7.15337610244751

Token 202: ' check' (ID: 2371)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.03590293601155281
    2. ' valid' → logprob: -3.910902976989746
    3. '           ' → logprob: -4.910902976989746
    4. 'if' → logprob: -5.285902976989746
    5. 'ok' → logprob: -6.660902976989746
    6. 'for' → logprob: -7.660902976989746
    7. 'flag' → logprob: -8.410902976989746
    8. 'possible' → logprob: -8.535902976989746
    9. 'all' → logprob: -8.910902976989746
    10. ' ok' → logprob: -8.910902976989746

Token 203: ' prere' (ID: 55794)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.4566381871700287
    2. '           ' → logprob: -1.581638216972351
    3. 'all' → logprob: -2.9566380977630615
    4. ' valid' → logprob: -3.0816380977630615
    5. ' all' → logprob: -3.9566380977630615
    6. 'pr' → logprob: -4.706638336181641
    7. ' prerequisites' → logprob: -4.956638336181641
    8. 'if' → logprob: -5.206638336181641
    9. ' prere' → logprob: -5.331638336181641
    10. '_valid' → logprob: -5.456638336181641

Token 204: 'qs' (ID: 31847)
  Prédit: 'qs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -0.012319625355303288
    2. 'q' → logprob: -4.512319564819336
    3. 's' → logprob: -8.012319564819336
    4. 'req' → logprob: -8.137319564819336
    5. 'cs' → logprob: -8.137319564819336
    6. 'quisites' → logprob: -8.762319564819336
    7. 'rs' → logprob: -9.637319564819336
    8. '_re' → logprob: -10.137319564819336
    9. 're' → logprob: -11.262319564819336
    10. 'gs' → logprob: -11.512319564819336

Token 205: ' condition' (ID: 7060)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00027015688829123974
    2. '<|end|>' → logprob: -9.000269889831543
    3. ' for' → logprob: -10.125269889831543
    4. ':' → logprob: -11.250269889831543
    5. '       ' → logprob: -11.375269889831543
    6. '   ' → logprob: -11.500269889831543
    7. ')' → logprob: -11.500269889831543
    8. '               ' → logprob: -12.000269889831543
    9. '            
' → logprob: -12.000269889831543
    10. ' if' → logprob: -12.000269889831543

Token 206: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00019746100588236004
    2. '<|end|>' → logprob: -9.250197410583496
    3. '            
' → logprob: -10.875197410583496
    4. ',' → logprob: -11.000197410583496
    5. '
' → logprob: -11.250197410583496
    6. ' for' → logprob: -11.375197410583496
    7. '               ' → logprob: -11.875197410583496
    8. '       ' → logprob: -12.000197410583496
    9. '   ' → logprob: -12.375197410583496
    10. ' is' → logprob: -12.625197410583496

Token 207: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007013569120317698
    2. '<|end|>' → logprob: -7.875701427459717
    3. '            
' → logprob: -9.000700950622559
    4. '       ' → logprob: -9.625700950622559
    5. '               ' → logprob: -10.500700950622559
    6. '          ' → logprob: -10.625700950622559
    7. '            ' → logprob: -11.000700950622559
    8. '		' → logprob: -11.125700950622559
    9. '
' → logprob: -11.750700950622559
    10. '   ' → logprob: -11.875700950622559

Token 208: ' ok' (ID: 4763)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.5904513001441956
    2. '           ' → logprob: -1.2154512405395508
    3. ' valid' → logprob: -2.090451240539551
    4. 'if' → logprob: -3.965451240539551
    5. ' if' → logprob: -5.465451240539551
    6. ' ok' → logprob: -7.340451240539551
    7. 'ok' (adapté à ' ok') → logprob: -7.340451240539551
    8. 'flag' → logprob: -7.840451240539551
    9. 'passed' → logprob: -8.21545124053955
    10. 'pass' → logprob: -9.09045124053955

Token 209: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018151700496673584
    2. '=' → logprob: -4.018151760101318
    3. '=True' → logprob: -13.26815128326416
    4. '=False' → logprob: -16.893152236938477
    5. ' ' → logprob: -18.143152236938477
    6. ':' → logprob: -18.768152236938477
    7. ' ' → logprob: -18.893152236938477
    8. ',' → logprob: -19.393152236938477
    9. '=true' → logprob: -20.143152236938477
    10. 'ay' → logprob: -20.518152236938477

Token 210: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0003003081073984504
    2. ' True' → logprob: -8.500300407409668
    3. 'all' → logprob: -9.250300407409668
    4. '   ' → logprob: -14.625300407409668
    5. ' all' → logprob: -15.250300407409668
    6. '(True' → logprob: -17.75029945373535
    7. 'All' → logprob: -19.25029945373535
    8. 'true' → logprob: -19.25029945373535
    9. '=True' → logprob: -19.37529945373535
    10. '       ' → logprob: -19.62529945373535

Token 211: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027806468307971954
    2. '<|end|>' → logprob: -3.777806520462036
    3. '
' → logprob: -5.777806282043457
    4. ' for' → logprob: -7.902806282043457
    5. '            
' → logprob: -8.277806282043457
    6. '<|end|>' → logprob: -8.777806282043457
    7. '       ' → logprob: -8.902806282043457
    8. '               ' → logprob: -9.152806282043457
    9. ')' → logprob: -9.527806282043457
    10. 'for' → logprob: -9.527806282043457

Token 212: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00047714399988763034
    2. ' for' → logprob: -8.000476837158203
    3. '<|end|>' → logprob: -9.125476837158203
    4. 'for' → logprob: -11.375476837158203
    5. '            
' → logprob: -12.500476837158203
    6. '
' → logprob: -12.500476837158203
    7. '   ' → logprob: -12.750476837158203
    8. '<|end|>' → logprob: -12.875476837158203
    9. '		' → logprob: -13.125476837158203
    10. '       ' → logprob: -13.250476837158203

Token 213: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.371547669172287
    2. '           ' → logprob: -1.3715476989746094
    3. ' for' → logprob: -2.8715476989746094
    4. '   ' → logprob: -12.24654769897461
    5. '       ' → logprob: -13.12154769897461
    6. '	for' → logprob: -14.37154769897461
    7. ' ' → logprob: -14.99654769897461
    8. '               ' → logprob: -15.24654769897461
    9. '            
' → logprob: -15.49654769897461
    10. '		' → logprob: -16.24654769897461

Token 214: ' course' (ID: 4165)
  Prédit: 'course'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'course' → logprob: -0.07997114956378937
    2. 'c' → logprob: -3.7049710750579834
    3. ' course' → logprob: -3.9549710750579834
    4. 'x' → logprob: -3.9549710750579834
    5. 'idx' → logprob: -4.7049713134765625
    6. 'u' → logprob: -6.8299713134765625
    7. 'v' → logprob: -7.0799713134765625
    8. ' c' → logprob: -7.0799713134765625
    9. ' idx' → logprob: -7.2049713134765625
    10. 'i' → logprob: -7.2049713134765625

Token 215: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10021648555994034
    2. 'in' → logprob: -2.3502163887023926
    3. ' ' → logprob: -12.22521686553955
    4. '	in' → logprob: -12.85021686553955
    5. '_in' → logprob: -14.47521686553955
    6. 'i' → logprob: -15.10021686553955
    7. ' ' → logprob: -15.60021686553955
    8. 's' → logprob: -15.72521686553955
    9. 'idx' → logprob: -15.72521686553955
    10. 'id' → logprob: -15.97521686553955

Token 216: ' comb' (ID: 4134)
  Prédit: 'selected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'selected' → logprob: -0.024035662412643433
    2. 'comb' → logprob: -4.024035453796387
    3. ' selected' → logprob: -5.149035453796387
    4. ' comb' → logprob: -9.774035453796387
    5. '   ' → logprob: -13.024035453796387
    6. 'com' → logprob: -13.274035453796387
    7. 'select' → logprob: -14.274035453796387
    8. '	selected' → logprob: -14.399035453796387
    9. ' ' → logprob: -15.024035453796387
    10. '(selected' → logprob: -15.524035453796387

Token 217: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03395375981926918
    2. ':
' → logprob: -3.4089536666870117
    3. '):
' → logprob: -9.533953666687012
    4. '           ' → logprob: -9.783953666687012
    5. '               ' → logprob: -9.783953666687012
    6. '<|end|>' → logprob: -9.908953666687012
    7. '):' → logprob: -10.283953666687012
    8. ')' → logprob: -11.658953666687012
    9. ':

' → logprob: -11.783953666687012
    10. ',' → logprob: -12.283953666687012

Token 218: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008381476625800133
    2. '<|end|>' → logprob: -5.883381366729736
    3. '       ' → logprob: -6.383381366729736
    4. ' for' → logprob: -6.758381366729736
    5. ':' → logprob: -6.758381366729736
    6. '           ' → logprob: -7.883381366729736
    7. '                
' → logprob: -8.383381843566895
    8. '   ' → logprob: -8.633381843566895
    9. '<|end|>' → logprob: -8.758381843566895
    10. ',' → logprob: -9.383381843566895

Token 219: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.39368101954460144
    2. ' for' → logprob: -1.1436810493469238
    3. '           ' → logprob: -5.143681049346924
    4. '               ' → logprob: -7.518681049346924
    5. '   ' → logprob: -7.893681049346924
    6. 'if' → logprob: -11.393680572509766
    7. ' ' → logprob: -11.768680572509766
    8. '	for' → logprob: -12.018680572509766
    9. ' if' → logprob: -12.518680572509766
    10. '       ' → logprob: -12.768680572509766

Token 220: ' pre' (ID: 876)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.13677391409873962
    2. 'pr' → logprob: -2.3867738246917725
    3. 'pre' → logprob: -3.3867738246917725
    4. 'req' → logprob: -6.511774063110352
    5. ' prere' → logprob: -7.511774063110352
    6. ' p' → logprob: -10.511774063110352
    7. 'r' → logprob: -11.136774063110352
    8. ' pre' → logprob: -12.011774063110352
    9. 'pref' → logprob: -13.136774063110352
    10. 'q' → logprob: -13.636774063110352

Token 221: ' in' (ID: 306)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00896080769598484
    2. 'req' → logprob: -5.258960723876953
    3. ' in' → logprob: -5.758960723876953
    4. 're' → logprob: -8.258960723876953
    5. 's' → logprob: -8.883960723876953
    6. 'd' → logprob: -9.758960723876953
    7. 'c' → logprob: -9.883960723876953
    8. 'r' → logprob: -10.508960723876953
    9. 'qs' → logprob: -11.133960723876953
    10. 'course' → logprob: -12.383960723876953

Token 222: ' prere' (ID: 55794)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.007737346924841404
    2. ' prere' → logprob: -4.882737159729004
    3. 'pre' → logprob: -10.132737159729004
    4. 'credits' → logprob: -10.382737159729004
    5. '[' → logprob: -11.132737159729004
    6. '(pr' → logprob: -11.632737159729004
    7. 'pref' → logprob: -12.132737159729004
    8. '   ' → logprob: -12.132737159729004
    9. ' pr' → logprob: -12.507737159729004
    10. 'selected' → logprob: -12.632737159729004

Token 223: 'qs' (ID: 31847)
  Prédit: 'qs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -6.778209353797138e-05
    2. 'q' → logprob: -9.625067710876465
    3. '[' → logprob: -14.250067710876465
    4. 's' → logprob: -15.375067710876465
    5. 'cs' → logprob: -15.375067710876465
    6. 'qus' → logprob: -15.375067710876465
    7. 'req' → logprob: -16.75006866455078
    8. 'js' → logprob: -17.37506866455078
    9. 'quisites' → logprob: -17.75006866455078
    10. '   ' → logprob: -18.12506866455078

Token 224: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.849109119386412e-06
    2. 'course' → logprob: -11.625009536743164
    3. '(course' → logprob: -14.625009536743164
    4. '[c' → logprob: -15.250009536743164
    5. ' [' → logprob: -17.125009536743164
    6. 'courses' → logprob: -17.875009536743164
    7. '[
' → logprob: -17.875009536743164
    8. '```' → logprob: -18.125009536743164
    9. '[class' → logprob: -18.125009536743164
    10. ' course' → logprob: -18.375009536743164

Token 225: 'course' (ID: 21960)
  Prédit: 'course'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'course' → logprob: -0.023299867287278175
    2. '[' → logprob: -3.7732999324798584
    3. ' course' → logprob: -10.148300170898438
    4. '(course' → logprob: -11.273300170898438
    5. '.course' → logprob: -14.648300170898438
    6. ' ' → logprob: -15.148300170898438
    7. '```' → logprob: -15.148300170898438
    8. '/course' → logprob: -15.148300170898438
    9. ' [' → logprob: -15.398300170898438
    10. '[
' → logprob: -15.523300170898438

Token 226: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.2331690490245819
    2. ']:
' → logprob: -2.3581690788269043
    3. '):' → logprob: -3.1081690788269043
    4. '):
' → logprob: -3.4831690788269043
    5. ':' → logprob: -4.108169078826904
    6. '               ' → logprob: -4.608169078826904
    7. ':
' → logprob: -5.983169078826904
    8. ']' → logprob: -6.358169078826904
    9. '                   ' → logprob: -6.358169078826904
    10. '[' → logprob: -6.483169078826904

Token 227: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3862793445587158
    2. ' if' → logprob: -1.7612793445587158
    3. '                   ' → logprob: -2.011279344558716
    4. '   ' → logprob: -5.886279106140137
    5. '	           ' → logprob: -6.011279106140137
    6. 'if' → logprob: -6.261279106140137
    7. '           ' → logprob: -6.761279106140137
    8. '                    
' → logprob: -7.136279106140137
    9. '		           ' → logprob: -7.261279106140137
    10. '                       ' → logprob: -7.761279106140137

Token 228: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.31510087847709656
    2. 'if' (adapté à ' if') → logprob: -1.315100908279419
    3. '                   ' → logprob: -6.69010066986084
    4. '                       ' → logprob: -8.06510066986084
    5. '	if' → logprob: -8.69010066986084
    6. '               ' → logprob: -10.31510066986084
    7. ' ' → logprob: -10.44010066986084
    8. '<|end|>' → logprob: -11.31510066986084
    9. '   ' → logprob: -11.81510066986084
    10. '                    ' → logprob: -12.56510066986084

Token 229: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.17975278198719025
    2. ' pre' → logprob: -1.8047528266906738
    3. '	pre' → logprob: -12.429752349853516
    4. '(pre' → logprob: -13.429752349853516
    5. '   ' → logprob: -14.304752349853516
    6. ' ' → logprob: -14.304752349853516
    7. '  ' → logprob: -15.429752349853516
    8. 'preh' → logprob: -15.429752349853516
    9. ' prere' → logprob: -15.679752349853516
    10. 'pread' → logprob: -16.179752349853516

Token 230: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.07915691286325455
    2. 'not' → logprob: -2.5791568756103516
    3. '-' → logprob: -8.329156875610352
    4. ')' → logprob: -10.829156875610352
    5. ' -' → logprob: -13.079156875610352
    6. '-not' → logprob: -13.954156875610352
    7. '>' → logprob: -14.829156875610352
    8. ' ' → logprob: -14.829156875610352
    9. '	not' → logprob: -14.829156875610352
    10. '(not' → logprob: -15.204156875610352

Token 231: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.25194355845451355
    2. ' in' → logprob: -1.501943588256836
    3. 'selected' → logprob: -11.501943588256836
    4. ' ' → logprob: -14.001943588256836
    5. ')' → logprob: -14.251943588256836
    6. ' selected' → logprob: -14.501943588256836
    7. 'not' → logprob: -14.751943588256836
    8. '
' → logprob: -14.876943588256836
    9. 's' → logprob: -15.126943588256836
    10. '.' → logprob: -15.251943588256836

Token 232: ' selected' (ID: 6386)
  Prédit: 'selected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'selected' → logprob: -0.007609466556459665
    2. ' selected' → logprob: -4.8826093673706055
    3. '	selected' → logprob: -13.007609367370605
    4. '[selected' → logprob: -14.757609367370605
    5. '(selected' → logprob: -14.882609367370605
    6. '.selected' → logprob: -16.132610321044922
    7. '   ' → logprob: -16.382610321044922
    8. ':selected' → logprob: -16.882610321044922
    9. ' ' → logprob: -17.132610321044922
    10. '           ' → logprob: -17.507610321044922

Token 233: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6938073039054871
    2. ':
' → logprob: -0.6938073039054871
    3. '                       ' → logprob: -8.318807601928711
    4. '):
' → logprob: -8.693807601928711
    5. '                   ' → logprob: -9.443807601928711
    6. '                           ' → logprob: -10.068807601928711
    7. '               ' → logprob: -10.568807601928711
    8. '):' → logprob: -10.818807601928711
    9. '           ' → logprob: -10.943807601928711
    10. ':
' → logprob: -11.318807601928711

Token 234: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.31300851702690125
    2. ':
' → logprob: -2.1880085468292236
    3. ':' → logprob: -2.8130085468292236
    4. '                   ' → logprob: -3.0630085468292236
    5. '                           ' → logprob: -4.0630083084106445
    6. '               ' → logprob: -4.3130083084106445
    7. 'ok' → logprob: -5.1880083084106445
    8. '                               ' → logprob: -5.3130083084106445
    9. ' ok' → logprob: -6.0630083084106445
    10. '           ' → logprob: -6.8130083084106445

Token 235: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' (adapté à ' ok') → logprob: -0.024078261107206345
    2. ' ok' → logprob: -3.774078369140625
    3. '
' → logprob: -7.399078369140625
    4. '                           ' → logprob: -8.774078369140625
    5. '                       ' → logprob: -11.024078369140625
    6. '               ' → logprob: -11.149078369140625
    7. '                               ' → logprob: -11.649078369140625
    8. '	ok' → logprob: -11.774078369140625
    9. '           ' → logprob: -12.149078369140625
    10. '                   ' → logprob: -12.899078369140625

Token 236: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031973200384527445
    2. ' =' → logprob: -5.753197193145752
    3. '=False' → logprob: -10.87819766998291
    4. '=True' → logprob: -15.00319766998291
    5. '=
' → logprob: -15.50319766998291
    6. '==' → logprob: -16.003196716308594
    7. '=

' → logprob: -17.003196716308594
    8. ' ' → logprob: -17.128196716308594
    9. '                           ' → logprob: -17.503196716308594
    10. '                               ' → logprob: -17.753196716308594

Token 237: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0002613358374219388
    2. ' False' → logprob: -8.250261306762695
    3. '=False' → logprob: -18.875261306762695
    4. '(False' → logprob: -19.250261306762695
    5. 'True' → logprob: -20.750261306762695
    6. '   ' → logprob: -21.375261306762695
    7. '_false' → logprob: -21.625261306762695
    8. 'false' → logprob: -22.000261306762695
    9. '.False' → logprob: -22.750261306762695
    10. 'F' → logprob: -23.000261306762695

Token 238: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0004711874935310334
    2. '                        ' → logprob: -8.750471115112305
    3. '<|end|>' → logprob: -9.250471115112305
    4. '                           ' → logprob: -9.625471115112305
    5. '                        
' → logprob: -9.625471115112305
    6. '                   ' → logprob: -10.000471115112305
    7. '               ' → logprob: -11.250471115112305
    8. '           ' → logprob: -12.000471115112305
    9. ',' → logprob: -12.500471115112305
    10. '       ' → logprob: -12.750471115112305

Token 239: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -6.301394023466855e-05
    2. '                        ' → logprob: -10.750062942504883
    3. '                           ' → logprob: -11.125062942504883
    4. '                   ' → logprob: -11.375062942504883
    5. '               ' → logprob: -12.250062942504883
    6. '                        
' → logprob: -12.750062942504883
    7. '           ' → logprob: -13.125062942504883
    8. '<|end|>' → logprob: -13.750062942504883
    9. '       ' → logprob: -13.875062942504883
    10. '                      ' → logprob: -14.125062942504883

Token 240: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.007008874788880348
    2. ' break' → logprob: -5.007009029388428
    3. '                       ' → logprob: -8.25700855255127
    4. '                   ' → logprob: -11.25700855255127
    5. '	break' → logprob: -11.50700855255127
    6. '                           ' → logprob: -12.13200855255127
    7. '               ' → logprob: -13.13200855255127
    8. '                               ' → logprob: -13.13200855255127
    9. '   ' → logprob: -14.63200855255127
    10. '           ' → logprob: -14.75700855255127

Token 241: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020222077146172523
    2. '           ' → logprob: -4.520222187042236
    3. '                   ' → logprob: -5.520222187042236
    4. '
' → logprob: -6.145222187042236
    5. '       ' → logprob: -6.770222187042236
    6. '<|end|>' → logprob: -7.520222187042236
    7. '  
' → logprob: -8.395221710205078
    8. '                
' → logprob: -8.520221710205078
    9. '                ' → logprob: -8.770221710205078
    10. '    
' → logprob: -9.145221710205078

Token 242: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004460266325622797
    2. '           ' → logprob: -5.629460334777832
    3. '                   ' → logprob: -7.879460334777832
    4. '       ' → logprob: -8.129460334777832
    5. '                       ' → logprob: -10.129460334777832
    6. '                ' → logprob: -10.254460334777832
    7. '             ' → logprob: -10.254460334777832
    8. '              ' → logprob: -11.254460334777832
    9. '   ' → logprob: -11.629460334777832
    10. ' ' → logprob: -11.754460334777832

Token 243: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.34954845905303955
    2. '           ' → logprob: -1.2245484590530396
    3. '       ' → logprob: -7.22454833984375
    4. 'if' (adapté à ' if') → logprob: -8.84954833984375
    5. '                   ' → logprob: -9.09954833984375
    6. '   ' → logprob: -10.09954833984375
    7. '             ' → logprob: -10.22454833984375
    8. '         ' → logprob: -11.72454833984375
    9. ' ' → logprob: -11.84954833984375
    10. ' if' → logprob: -11.97454833984375

Token 244: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5759544372558594
    2. 'not' → logprob: -0.8259544372558594
    3. '   ' → logprob: -11.70095443725586
    4. '               ' → logprob: -13.07595443725586
    5. '
' → logprob: -13.45095443725586
    6. '           ' → logprob: -13.95095443725586
    7. '       ' → logprob: -14.45095443725586
    8. '!' → logprob: -14.70095443725586
    9. '                   ' → logprob: -15.07595443725586
    10. ' ' → logprob: -15.45095443725586

Token 245: ' ok' (ID: 4763)
  Prédit: ' ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.04858918860554695
    2. 'ok' → logprob: -3.0485892295837402
    3. ' okay' → logprob: -13.423588752746582
    4. 'Ok' → logprob: -15.798588752746582
    5. '	ok' → logprob: -16.2985897064209
    6. '_ok' → logprob: -16.9235897064209
    7. 'okay' → logprob: -17.0485897064209
    8. '
' → logprob: -17.5485897064209
    9. '(ok' → logprob: -17.7985897064209
    10. ' ' → logprob: -17.7985897064209

Token 246: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07623117417097092
    2. ':' → logprob: -3.7012312412261963
    3. '                       ' → logprob: -3.7012312412261963
    4. ':
' → logprob: -3.8262312412261963
    5. '                           ' → logprob: -6.451231002807617
    6. '               ' → logprob: -7.826231002807617
    7. '           ' → logprob: -8.451231002807617
    8. 'break' → logprob: -11.576231002807617
    9. '                  ' → logprob: -12.576231002807617
    10. '                               ' → logprob: -13.326231002807617

Token 247: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0021455008536577225
    2. '                       ' → logprob: -6.252145290374756
    3. '               ' → logprob: -9.002145767211914
    4. 'break' → logprob: -9.877145767211914
    5. '           ' → logprob: -10.377145767211914
    6. ' break' → logprob: -12.127145767211914
    7. '                           ' → logprob: -12.627145767211914
    8. '   ' → logprob: -13.877145767211914
    9. '                  ' → logprob: -14.752145767211914
    10. '       ' → logprob: -14.877145767211914

Token 248: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.022890299558639526
    2. ' break' → logprob: -4.272890090942383
    3. '                   ' → logprob: -4.772890090942383
    4. '                       ' → logprob: -8.772890090942383
    5. '   ' → logprob: -10.022890090942383
    6. '               ' → logprob: -11.022890090942383
    7. '	break' → logprob: -11.897890090942383
    8. '           ' → logprob: -12.022890090942383
    9. '       ' → logprob: -12.522890090942383
    10. ' ' → logprob: -14.522890090942383

Token 249: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009145628428086638
    2. '
' → logprob: -8.125914573669434
    3. '            
' → logprob: -8.625914573669434
    4. '       ' → logprob: -9.125914573669434
    5. ' 
' → logprob: -9.250914573669434
    6. '            ' → logprob: -9.875914573669434
    7. '          ' → logprob: -10.125914573669434
    8. '    
' → logprob: -10.625914573669434
    9. '  
' → logprob: -10.875914573669434
    10. '   ' → logprob: -10.875914573669434

Token 250: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0042097014375030994
    2. '
' → logprob: -5.629209518432617
    3. '       ' → logprob: -8.629209518432617
    4. '            
' → logprob: -8.879209518432617
    5. ' 
' → logprob: -9.504209518432617
    6. '          ' → logprob: -9.879209518432617
    7. '    
' → logprob: -10.129209518432617
    8. '  
' → logprob: -10.754209518432617
    9. '   ' → logprob: -11.129209518432617
    10. ',' → logprob: -11.254209518432617

Token 251: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.040978021919727325
    2. ' if' → logprob: -3.540977954864502
    3. 'if' (adapté à ' if') → logprob: -4.665977954864502
    4. '   ' → logprob: -7.290977954864502
    5. '       ' → logprob: -7.415977954864502
    6. '          ' → logprob: -9.54097843170166
    7. '    ' → logprob: -9.91597843170166
    8. ' ' → logprob: -9.91597843170166
    9. '            
' → logprob: -9.91597843170166
    10. 'sum' → logprob: -10.29097843170166

Token 252: ' not' (ID: 625)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.06614510715007782
    2. 'sum' → logprob: -2.941145181655884
    3. ' ok' → logprob: -4.566144943237305
    4. 'ok' → logprob: -7.316144943237305
    5. ' len' → logprob: -10.066144943237305
    6. ' ' → logprob: -10.316144943237305
    7. '(sum' → logprob: -10.316144943237305
    8. 'len' → logprob: -12.191144943237305
    9. ' (' → logprob: -12.441144943237305
    10. '   ' → logprob: -13.066144943237305

Token 253: ' ok' (ID: 4763)
  Prédit: ' ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.016040703281760216
    2. 'ok' → logprob: -4.141040802001953
    3. 'Ok' → logprob: -13.141040802001953
    4. ' okay' → logprob: -13.141040802001953
    5. '	ok' → logprob: -14.266040802001953
    6. '(ok' → logprob: -14.391040802001953
    7. '_ok' → logprob: -14.891040802001953
    8. ' ' → logprob: -15.141040802001953
    9. ' ' → logprob: -15.891040802001953
    10. '.ok' → logprob: -16.016040802001953

Token 254: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05801057443022728
    2. ':' → logprob: -2.9330105781555176
    3. ':
' → logprob: -6.058010578155518
    4. '           ' → logprob: -7.683010578155518
    5. '                   ' → logprob: -9.05801010131836
    6. ' continue' → logprob: -9.68301010131836
    7. '       ' → logprob: -10.30801010131836
    8. '                       ' → logprob: -10.30801010131836
    9. 'continue' → logprob: -10.68301010131836
    10. ' or' → logprob: -10.93301010131836

Token 255: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014612370170652866
    2. ' continue' → logprob: -4.389612197875977
    3. 'continue' → logprob: -6.264612197875977
    4. '           ' → logprob: -8.889612197875977
    5. '   ' → logprob: -10.514612197875977
    6. '	continue' → logprob: -11.264612197875977
    7. ' ' → logprob: -12.514612197875977
    8. '                   ' → logprob: -12.639612197875977
    9. ' continues' → logprob: -12.639612197875977
    10. '_continue' → logprob: -12.889612197875977

Token 256: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.1521470695734024
    2. '               ' → logprob: -2.652147054672241
    3. ' continue' → logprob: -2.652147054672241
    4. '                   ' → logprob: -9.90214729309082
    5. '   ' → logprob: -10.02714729309082
    6. '	continue' → logprob: -10.40214729309082
    7. '           ' → logprob: -11.40214729309082
    8. '_continue' → logprob: -13.65214729309082
    9. ' ' → logprob: -14.52714729309082
    10. 'contin' → logprob: -14.77714729309082

Token 257: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011947346851229668
    2. ' total' → logprob: -5.761947154998779
    3. '            
' → logprob: -5.761947154998779
    4. ' if' → logprob: -6.011947154998779
    5. 'total' → logprob: -7.386947154998779
    6. ' sum' → logprob: -7.886947154998779
    7. ' 
' → logprob: -8.011947631835938
    8. '    
' → logprob: -8.261947631835938
    9. '   ' → logprob: -8.386947631835938
    10. '
' → logprob: -8.636947631835938

Token 258: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00942548643797636
    2. ' total' → logprob: -5.384425640106201
    3. 'total' → logprob: -6.634425640106201
    4. '            
' → logprob: -7.259425640106201
    5. ' sum' → logprob: -7.384425640106201
    6. '       ' → logprob: -7.509425640106201
    7. ' if' → logprob: -7.509425640106201
    8. '   ' → logprob: -7.884425640106201
    9. 'sum' → logprob: -8.509425163269043
    10. '    
' → logprob: -9.634425163269043

Token 259: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.3594301640987396
    2. '           ' → logprob: -2.3594300746917725
    3. 'sum' → logprob: -2.3594300746917725
    4. 'if' → logprob: -2.6094300746917725
    5. ' if' → logprob: -3.9844300746917725
    6. ' total' → logprob: -3.9844300746917725
    7. 's' → logprob: -7.359430313110352
    8. ' sum' → logprob: -7.734430313110352
    9. '   ' → logprob: -8.234430313110352
    10. 'tot' → logprob: -8.359430313110352

Token 260: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004140852950513363
    2. '_credit' → logprob: -5.629140853881836
    3. ' =' → logprob: -7.879140853881836
    4. ' _' → logprob: -9.254140853881836
    5. '=' → logprob: -10.254140853881836
    6. 'credits' → logprob: -10.754140853881836
    7. '=_' → logprob: -12.754140853881836
    8. '_=' → logprob: -12.879140853881836
    9. '_space' → logprob: -14.004140853881836
    10. 'Credits' → logprob: -14.379140853881836

Token 261: 'credits' (ID: 92810)
  Prédit: 'credits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'credits' → logprob: -0.008029835298657417
    2. 'credit' → logprob: -4.883029937744141
    3. '=' → logprob: -8.25802993774414
    4. 'cred' → logprob: -8.88302993774414
    5. ' =' → logprob: -11.13302993774414
    6. ' credits' → logprob: -12.38302993774414
    7. 'cre' → logprob: -13.00802993774414
    8. 'cr' → logprob: -13.88302993774414
    9. 'Credits' → logprob: -13.88302993774414
    10. 'sum' → logprob: -14.00802993774414

Token 262: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029806263744831085
    2. '=' → logprob: -3.52980637550354
    3. ' +=' → logprob: -9.904806137084961
    4. '=sum' → logprob: -12.279806137084961
    5. '+=' → logprob: -13.904806137084961
    6. ' ' → logprob: -15.529806137084961
    7. ')' → logprob: -17.15480613708496
    8. ' ' → logprob: -17.65480613708496
    9. 'sum' → logprob: -17.77980613708496
    10. '<|end|>' → logprob: -18.40480613708496

Token 263: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.12885978817939758
    2. ' sum' → logprob: -2.128859758377075
    3. '0' → logprob: -6.253859996795654
    4. ' ' → logprob: -12.253859519958496
    5. '   ' → logprob: -13.753859519958496
    6. '	sum' → logprob: -14.628859519958496
    7. '=sum' → logprob: -15.753859519958496
    8. '(sum' → logprob: -16.128860473632812
    9. '.sum' → logprob: -16.753860473632812
    10. '           ' → logprob: -17.253860473632812

Token 264: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004790512612089515
    2. 'credits' → logprob: -7.750479221343994
    3. '([' → logprob: -10.375478744506836
    4. '[' → logprob: -11.625478744506836
    5. ' credits' → logprob: -12.250478744506836
    6. ' (' → logprob: -13.500478744506836
    7. '(
' → logprob: -13.750478744506836
    8. '(credentials' → logprob: -14.500478744506836
    9. 'Credits' → logprob: -15.875478744506836
    10. '((' → logprob: -16.750478744506836

Token 265: 'credits' (ID: 92810)
  Prédit: 'credits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'credits' → logprob: -0.0010741343721747398
    2. ' credits' → logprob: -6.876074314117432
    3. '[' → logprob: -10.126073837280273
    4. '   ' → logprob: -14.251073837280273
    5. '(' → logprob: -15.251073837280273
    6. 'credit' → logprob: -16.126073837280273
    7. 'Credits' → logprob: -16.251073837280273
    8. ' [' → logprob: -17.376073837280273
    9. 'credentials' → logprob: -17.376073837280273
    10. ')' → logprob: -17.626073837280273

Token 266: '[c' (ID: 22840)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3717081546783447
    2. '[' → logprob: -1.3717081546783447
    3. '[c' → logprob: -2.8717081546783447
    4. '[idx' → logprob: -8.996707916259766
    5. '(course' → logprob: -11.121707916259766
    6. '[j' → logprob: -11.246707916259766
    7. '[x' → logprob: -11.996707916259766
    8. '[pos' → logprob: -12.996707916259766
    9. '[cur' → logprob: -13.246707916259766
    10. 'course' → logprob: -13.246707916259766

Token 267: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02129686437547207
    2. 'for' → logprob: -3.896296977996826
    3. ' for' → logprob: -7.271296977996826
    4. 'ourse' → logprob: -10.271296501159668
    5. 'or' → logprob: -11.646296501159668
    6. '   ' → logprob: -12.771296501159668
    7. 'ourses' → logprob: -12.896296501159668
    8. '```' → logprob: -13.021296501159668
    9. '])' → logprob: -13.396296501159668
    10. 'our' → logprob: -13.521296501159668

Token 268: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.061973292380571365
    2. 'for' → logprob: -2.8119733333587646
    3. ' ' → logprob: -13.311973571777344
    4. 'c' → logprob: -13.686973571777344
    5. '[c' → logprob: -13.811973571777344
    6. ' c' → logprob: -14.311973571777344
    7. '	for' → logprob: -14.436973571777344
    8. ']' → logprob: -15.061973571777344
    9. ')' → logprob: -16.311973571777344
    10. '
' → logprob: -16.436973571777344

Token 269: ' c' (ID: 274)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.05713074281811714
    2. ' comb' → logprob: -2.932130813598633
    3. 'selected' → logprob: -6.682130813598633
    4. ' selected' → logprob: -6.932130813598633
    5. 'com' → logprob: -11.432130813598633
    6. '   ' → logprob: -12.932130813598633
    7. ' ' → logprob: -14.307130813598633
    8. 'combo' → logprob: -14.682130813598633
    9. 'comm' → logprob: -14.807130813598633
    10. 'compl' → logprob: -14.932130813598633

Token 270: ' in' (ID: 306)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.5998815894126892
    2. ' comb' → logprob: -1.224881649017334
    3. ' selected' → logprob: -2.474881649017334
    4. ' in' → logprob: -3.224881649017334
    5. 'selected' → logprob: -3.474881649017334
    6. 'in' → logprob: -6.599881649017334
    7. 'com' → logprob: -7.099881649017334
    8. 'c' → logprob: -8.849881172180176
    9. ')' → logprob: -10.724881172180176
    10. '_comb' → logprob: -10.849881172180176

Token 271: ' selected' (ID: 6386)
  Prédit: 'selected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'selected' → logprob: -0.6205589175224304
    2. 'comb' → logprob: -0.8705589175224304
    3. ' selected' → logprob: -3.245558977127075
    4. ' comb' → logprob: -5.370558738708496
    5. '   ' → logprob: -12.120558738708496
    6. 'com' → logprob: -12.245558738708496
    7. 'select' → logprob: -12.370558738708496
    8. 'combo' → logprob: -12.620558738708496
    9. 'Selected' → logprob: -12.995558738708496
    10. '	selected' → logprob: -13.120558738708496

Token 272: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04265245422720909
    2. ')
' → logprob: -3.5426523685455322
    3. '           ' → logprob: -4.417652606964111
    4. ' )' → logprob: -7.417652606964111
    5. ' )
' → logprob: -10.167652130126953
    6. '>=' → logprob: -10.167652130126953
    7. ' >=' → logprob: -10.292652130126953
    8. ')>=' → logprob: -10.667652130126953
    9. ')

' → logprob: -12.417652130126953
    10. '            ' → logprob: -12.667652130126953

Token 273: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026187049224972725
    2. '<|end|>' → logprob: -6.127618789672852
    3. ' if' → logprob: -8.252618789672852
    4. '            
' → logprob: -10.002618789672852
    5. '<|end|>' → logprob: -10.627618789672852
    6. '          ' → logprob: -10.627618789672852
    7. '   ' → logprob: -11.377618789672852
    8. '       ' → logprob: -11.502618789672852
    9. ' ' → logprob: -11.627618789672852
    10. '
' → logprob: -11.752618789672852

Token 274: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4028323292732239
    2. ' if' → logprob: -1.152832269668579
    3. 'if' (adapté à ' if') → logprob: -4.152832508087158
    4. '   ' → logprob: -10.15283203125
    5. ' ' → logprob: -10.77783203125
    6. '       ' → logprob: -10.90283203125
    7. '            
' → logprob: -11.77783203125
    8. '<|end|>' → logprob: -12.15283203125
    9. '          ' → logprob: -12.52783203125
    10. 'If' → logprob: -12.77783203125

Token 275: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.1602245420217514
    2. 'total' → logprob: -1.9102245569229126
    3. '	total' → logprob: -15.785224914550781
    4. '(total' → logprob: -15.785224914550781
    5. '$total' → logprob: -17.91022491455078
    6. 'Total' → logprob: -18.03522491455078
    7. ' ' → logprob: -18.41022491455078
    8. '_total' → logprob: -18.78522491455078
    9. '           ' → logprob: -19.53522491455078
    10. ' ' → logprob: -19.91022491455078

Token 276: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.635164754698053e-05
    2. ' _' → logprob: -10.375066757202148
    3. ' >=' → logprob: -10.500066757202148
    4. '>=' → logprob: -12.000066757202148
    5. ' ' → logprob: -14.875066757202148
    6. 'credits' → logprob: -14.875066757202148
    7. '           ' → logprob: -15.625066757202148
    8. '_total' → logprob: -16.12506675720215
    9. '_credit' → logprob: -16.12506675720215
    10. 'Credits' → logprob: -16.37506675720215

Token 277: 'credits' (ID: 92810)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.011081418953835964
    2. 'credits' → logprob: -4.511081218719482
    3. ' credits' → logprob: -11.01108169555664
    4. '>=' → logprob: -11.88608169555664
    5. 'Credits' → logprob: -11.88608169555664
    6. 'credit' → logprob: -13.38608169555664
    7. 'total' → logprob: -14.51108169555664
    8. ' ' → logprob: -15.13608169555664
    9. ' >=' → logprob: -15.63608169555664
    10. 'cred' → logprob: -15.88608169555664

Token 278: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.16024230420589447
    2. '>=' → logprob: -1.9102423191070557
    3. ' ' → logprob: -11.535242080688477
    4. ']>=' → logprob: -12.285242080688477
    5. ')>=' → logprob: -13.160242080688477
    6. ' ' → logprob: -13.785242080688477
    7. '>' → logprob: -15.160242080688477
    8. '≥' → logprob: -15.660242080688477
    9. '   ' → logprob: -16.160242080688477
    10. '  ' → logprob: -16.910242080688477

Token 279: ' U' (ID: 601)
  Prédit: ' U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' U' → logprob: -0.07889121770858765
    2. 'U' → logprob: -2.5788912773132324
    3. ' ' → logprob: -13.703890800476074
    4. ' ' → logprob: -15.828890800476074
    5. '	U' → logprob: -16.45389175415039
    6. '1' → logprob: -17.20389175415039
    7. '   ' → logprob: -17.57889175415039
    8. '    ' → logprob: -18.70389175415039
    9. '(U' → logprob: -18.82889175415039
    10. '  ' → logprob: -18.95389175415039

Token 280: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42908042669296265
    2. ':
' → logprob: -1.0540804862976074
    3. ' and' → logprob: -8.80408000946045
    4. '           ' → logprob: -9.05408000946045
    5. '               ' → logprob: -9.80408000946045
    6. ':

' → logprob: -11.30408000946045
    7. 'and' → logprob: -11.55408000946045
    8. '):
' → logprob: -11.67908000946045
    9. ':
' → logprob: -11.67908000946045
    10. '       ' → logprob: -11.92908000946045

Token 281: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008021802641451359
    2. '           ' → logprob: -5.383021831512451
    3. '   ' → logprob: -6.008021831512451
    4. '       ' → logprob: -7.508021831512451
    5. '
' → logprob: -8.508021354675293
    6. ' ans' → logprob: -9.258021354675293
    7. 'ans' → logprob: -10.383021354675293
    8. '                   ' → logprob: -11.008021354675293
    9. '    
' → logprob: -11.133021354675293
    10. ' if' → logprob: -12.258021354675293

Token 282: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.8057264089584351
    2. '               ' → logprob: -1.555726408958435
    3. '           ' → logprob: -2.0557265281677246
    4. '   ' → logprob: -2.3057265281677246
    5. ' ans' → logprob: -2.3057265281677246
    6. '       ' → logprob: -4.305726528167725
    7. '	ans' → logprob: -7.305726528167725
    8. 'print' → logprob: -8.055726051330566
    9. '                   ' → logprob: -8.930726051330566
    10. 'answer' → logprob: -10.305726051330566

Token 283: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014163628220558167
    2. '=' → logprob: -4.264163494110107
    3. '=min' → logprob: -16.639163970947266
    4. '＝' → logprob: -19.139163970947266
    5. '=size' → logprob: -19.889163970947266
    6. ' ' → logprob: -20.139163970947266
    7. '   ' → logprob: -20.514163970947266
    8. ' =
' → logprob: -20.639163970947266
    9. ' =)' → logprob: -20.764163970947266
    10. '	' → logprob: -21.264163970947266

Token 284: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.001971577061340213
    2. ' size' → logprob: -6.37697172164917
    3. 'min' → logprob: -8.251971244812012
    4. 'len' → logprob: -11.876971244812012
    5. ' min' → logprob: -14.001971244812012
    6. '   ' → logprob: -15.001971244812012
    7. '	size' → logprob: -16.376972198486328
    8. 'length' → logprob: -17.001972198486328
    9. '(size' → logprob: -17.001972198486328
    10. '<size' → logprob: -17.376972198486328

Token 285: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0037041159812361
    2. '
' → logprob: -5.753704071044922
    3. 'break' → logprob: -8.378704071044922
    4. ' break' → logprob: -8.503704071044922
    5. '                
' → logprob: -10.378704071044922
    6. '                   ' → logprob: -10.378704071044922
    7. '           ' → logprob: -10.878704071044922
    8. '    
' → logprob: -12.503704071044922
    9. '   ' → logprob: -13.628704071044922
    10. '
' → logprob: -13.628704071044922

Token 286: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015333088813349605
    2. '           ' → logprob: -6.876533508300781
    3. '       ' → logprob: -8.376533508300781
    4. '
' → logprob: -8.626533508300781
    5. '   ' → logprob: -10.251533508300781
    6. 'print' → logprob: -11.126533508300781
    7. '                
' → logprob: -11.626533508300781
    8. 'break' → logprob: -11.626533508300781
    9. '    
' → logprob: -12.001533508300781
    10. ' break' → logprob: -12.001533508300781

Token 287: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0006390500930137932
    2. ' break' → logprob: -7.750638961791992
    3. 'print' → logprob: -8.500638961791992
    4. '               ' → logprob: -12.500638961791992
    5. '           ' → logprob: -14.375638961791992
    6. '
' → logprob: -15.125638961791992
    7. '                   ' → logprob: -16.125638961791992
    8. 'return' → logprob: -16.125638961791992
    9. '	break' → logprob: -16.625638961791992
    10. '       ' → logprob: -17.375638961791992

Token 288: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02980557456612587
    2. '
' → logprob: -3.7798056602478027
    3. '        
' → logprob: -6.029805660247803
    4. '   ' → logprob: -6.279805660247803
    5. '    
' → logprob: -6.529805660247803
    6. ' 
' → logprob: -8.279805183410645
    7. '<|end|>' → logprob: -8.529805183410645
    8. '  
' → logprob: -9.154805183410645
    9. '            
' → logprob: -9.779805183410645
    10. '    ' → logprob: -10.404805183410645

Token 289: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013012097217142582
    2. '   ' → logprob: -4.388011932373047
    3. '
' → logprob: -8.388011932373047
    4. '    
' → logprob: -8.388011932373047
    5. '        
' → logprob: -10.388011932373047
    6. '           ' → logprob: -12.013011932373047
    7. '  
' → logprob: -13.013011932373047
    8. '\n' → logprob: -13.638011932373047
    9. '            
' → logprob: -13.638011932373047
    10. ' 
' → logprob: -14.013011932373047

Token 290: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035152568016201258
    2. 'if' (adapté à ' if') → logprob: -5.878515243530273
    3. ' if' → logprob: -7.503515243530273
    4. '       ' → logprob: -9.003515243530273
    5. 'else' → logprob: -10.753515243530273
    6. ' ' → logprob: -12.003515243530273
    7. 'break' → logprob: -13.253515243530273
    8. '    
' → logprob: -13.378515243530273
    9. ' else' → logprob: -13.503515243530273
    10. 'print' → logprob: -13.628515243530273

Token 291: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.018151231110095978
    2. ' ans' → logprob: -4.01815128326416
    3. '(ans' → logprob: -13.64315128326416
    4. '	ans' → logprob: -15.76815128326416
    5. ' ' → logprob: -17.768150329589844
    6. '   ' → logprob: -18.268150329589844
    7. '
' → logprob: -19.768150329589844
    8. '1' → logprob: -20.143150329589844
    9. '  ' → logprob: -20.143150329589844
    10. '_ans' → logprob: -20.393150329589844

Token 292: ' !=' (ID: 1666)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.7434439063072205
    2. ' <=' → logprob: -1.4934439659118652
    3. '==' → logprob: -1.8684439659118652
    4. ' ==' → logprob: -1.9934439659118652
    5. '!=' → logprob: -5.368443965911865
    6. ' !=' → logprob: -5.368443965911865
    7. '≤' → logprob: -11.993443489074707
    8. '=' → logprob: -12.243443489074707
    9. '```' → logprob: -13.368443489074707
    10. ' ≤' → logprob: -13.993443489074707

Token 293: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2113979209971149e-05
    2. ' n' → logprob: -11.375012397766113
    3. '   ' → logprob: -15.000012397766113
    4. 'size' → logprob: -15.625012397766113
    5. ' ' → logprob: -16.875011444091797
    6. '(n' → logprob: -17.250011444091797
    7. '	n' → logprob: -18.500011444091797
    8. '  ' → logprob: -18.750011444091797
    9. '    ' → logprob: -20.000011444091797
    10. 'float' → logprob: -20.250011444091797

Token 294: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.8624639324116288e-06
    2. ' +' → logprob: -14.250001907348633
    3. '```' → logprob: -14.250001907348633
    4. '1' → logprob: -15.500001907348633
    5. '0' → logprob: -16.625001907348633
    6. '   ' → logprob: -16.750001907348633
    7. '+
' → logprob: -17.375001907348633
    8. ':' → logprob: -18.250001907348633
    9. 'and' → logprob: -18.625001907348633
    10. '       ' → logprob: -19.375001907348633

Token 295: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1160349458805285e-05
    2. '0' → logprob: -11.750011444091797
    3. ' ' → logprob: -12.750011444091797
    4. '   ' → logprob: -16.000011444091797
    5. '```' → logprob: -16.125011444091797
    6. '+' → logprob: -17.000011444091797
    7. '  ' → logprob: -18.125011444091797
    8. '>' → logprob: -18.687511444091797
    9. '
' → logprob: -18.875011444091797
    10. '１' → logprob: -19.062511444091797

Token 296: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1460224837064743
    2. ':
' → logprob: -2.0210225582122803
    3. '           ' → logprob: -5.771022319793701
    4. '       ' → logprob: -8.52102279663086
    5. ':return' → logprob: -11.89602279663086
    6. '   ' → logprob: -12.27102279663086
    7. ':
' → logprob: -12.39602279663086
    8. '               ' → logprob: -12.64602279663086
    9. '):
' → logprob: -13.52102279663086
    10. '          ' → logprob: -14.52102279663086

Token 297: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014870197512209415
    2. '       ' → logprob: -4.2648701667785645
    3. 'break' → logprob: -7.5148701667785645
    4. ' break' → logprob: -8.889870643615723
    5. '   ' → logprob: -11.514870643615723
    6. '               ' → logprob: -11.889870643615723
    7. '	break' → logprob: -12.639870643615723
    8. '		' → logprob: -13.139870643615723
    9. 'print' → logprob: -14.264870643615723
    10. '	       ' → logprob: -14.639870643615723

Token 298: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.619781494140625
    2. 'break' (adapté à ' break') → logprob: -0.869781494140625
    3. '           ' → logprob: -3.494781494140625
    4. '       ' → logprob: -4.494781494140625
    5. '               ' → logprob: -7.369781494140625
    6. '   ' → logprob: -7.994781494140625
    7. '	break' → logprob: -8.369781494140625
    8. 'print' → logprob: -8.994781494140625
    9. '
' → logprob: -10.369781494140625
    10. ' print' → logprob: -11.494781494140625

Token 299: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006791513413190842
    2. '   ' → logprob: -5.006791591644287
    3. ' print' → logprob: -9.506791114807129
    4. '
' → logprob: -14.506791114807129
    5. '    
' → logprob: -14.506791114807129
    6. '```' → logprob: -14.506791114807129
    7. '	print' → logprob: -17.131792068481445
    8. '(print' → logprob: -17.506792068481445
    9. '.print' → logprob: -17.631792068481445
    10. '`' → logprob: -17.881792068481445

Token 300: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16060194373130798
    2. '   ' → logprob: -1.9106019735336304
    3. ' print' → logprob: -7.91060209274292
    4. '```' → logprob: -11.535601615905762
    5. '    
' → logprob: -14.285601615905762
    6. '``' → logprob: -16.160602569580078
    7. '       ' → logprob: -16.285602569580078
    8. '	print' → logprob: -16.285602569580078
    9. '
' → logprob: -16.410602569580078
    10. '(print' → logprob: -17.410602569580078

Token 301: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.438573680294212e-06
    2. '   ' → logprob: -12.250005722045898
    3. ' print' → logprob: -14.250005722045898
    4. '```' → logprob: -17.3750057220459
    5. '``' → logprob: -21.5000057220459
    6. '	print' → logprob: -22.0000057220459
    7. 'if' → logprob: -22.5000057220459
    8. 'printf' → logprob: -22.7500057220459
    9. '    
' → logprob: -23.8750057220459
    10. '
' → logprob: -24.6250057220459

Token 302: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.6240566083070007e-06
    2. 'ans' → logprob: -13.500001907348633
    3. '(' → logprob: -15.375001907348633
    4. '()' → logprob: -17.875001907348633
    5. '(answer' → logprob: -18.250001907348633
    6. ' (' → logprob: -18.500001907348633
    7. '(abs' → logprob: -19.500001907348633
    8. '	ans' → logprob: -20.125001907348633
    9. '((' → logprob: -20.250001907348633
    10. '(len' → logprob: -21.375001907348633

Token 303: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')`' → logprob: -15.75
    3. ' )' → logprob: -15.875
    4. ')}' → logprob: -17.625
    5. ')
' → logprob: -17.75
    6. '())' → logprob: -17.75
    7. '))' → logprob: -17.75
    8. '`)' → logprob: -18.125
    9. '()' → logprob: -18.25
    10. ')}}' → logprob: -19.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 301
Tokens correctement prédits (1ère position, stricte): 117
Tokens correctement prédits (1ère position, avec adaptation): 129
Tokens correctement prédits (top 10): 260
Précision stricte (1ère position): 38.87%
Précision adaptée (1ère position): 42.86%
Précision (top 10): 86.38%
================================================================================
