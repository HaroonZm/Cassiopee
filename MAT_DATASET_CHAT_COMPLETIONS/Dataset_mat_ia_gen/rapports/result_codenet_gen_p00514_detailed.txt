================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:14:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

# On lit les entrées n, m, r
n, m, r = map(int, sys.stdin.readline().split())

# Le problème demande de compter combien de combinaisons de perles de
# taille r, avec n couleurs, contiennent au moins m perles de chaque couleur.
# Chaque perle est identifiée seulement par sa couleur, et l'ordre ne compte pas.
# On compte donc les combinaisons avec répétition sous contrainte.

# La condition 0 <= m < n <= r <= 10000 est donnée.

# On cherche le nombre de solutions entières (x_1, x_2, ..., x_n) telles que :
# x_i >= m pour tout i dans [1..n]
# sum x_i = r

# En posant y_i = x_i - m >= 0, alors :
# sum y_i = r - n*m
# Le nombre de solutions est alors le nombre de combinaisons avec répétition de
# n variables non négatives s'additionnant à (r - n*m).

# S'il arrive que (r - n*m) <0, alors il n'y a pas de solution -> 0.

# Formule standard du nombre de combinaisons avec répétition :
# nombre = C((r - n*m) + n -1, n-1)

# Pour calculer cette combinaison rapidement, on utilise une fonction
# factorielle et fonction de combinaison.

# Implémentation efficace avec calcul direct combinaison sans factorielle pour éviter 
# problems de performances sur grands nombres.

def comb(a, b):
    # calcule C(a,b)
    if b > a or b < 0:
        return 0
    if b > a - b:
        b = a - b
    result = 1
    for i in range(1, b+1):
        result = result * (a - b + i) // i
    return result

# Calcul final
reste = r - n*m
if reste < 0:
    # Pas possible d'avoir au moins m perles de n couleurs dans r perles
    print(0)
else:
    # nombre de combinaisons avec répétition
    # C(reste + n -1, n -1)
    print(comb(reste + n -1, n -1))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2504518926143646
    2. '\n' → logprob: -2.1254518032073975
    3. 'import' → logprob: -3.1254518032073975
    4. '<|end|>' → logprob: -3.2504518032073975
    5. 'newline' → logprob: -5.625452041625977
    6. '\' → logprob: -5.625452041625977
    7. '' → logprob: -6.125452041625977
    8. '<|end|>' → logprob: -6.125452041625977
    9. 'print' → logprob: -6.875452041625977
    10. '\r' → logprob: -6.875452041625977

Token 4: ' On' (ID: 2160)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02773398905992508
    2. '  ' → logprob: -5.52773380279541
    3. ' #' → logprob: -5.77773380279541
    4. ' def' → logprob: -6.40273380279541
    5. ' -*-' → logprob: -6.40273380279541
    6. ' import' → logprob: -6.52773380279541
    7. 'import' → logprob: -6.52773380279541
    8. ' ```' → logprob: -6.52773380279541
    9. ' argparse' → logprob: -6.52773380279541
    10. 'def' → logprob: -6.77773380279541

Token 5: ' lit' (ID: 11980)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.006994543131440878
    2. 'ly' → logprob: -6.256994724273682
    3. 'eline' → logprob: -6.756994724273682
    4. ' e' → logprob: -6.756994724273682
    5. 'line' → logprob: -6.881994724273682
    6. 'el' → logprob: -7.506994724273682
    7. '_' → logprob: -8.131994247436523
    8. ' the' → logprob: -8.881994247436523
    9. ' line' → logprob: -9.131994247436523
    10. '-' → logprob: -9.381994247436523

Token 6: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008235592395067215
    2. '_' → logprob: -5.633235454559326
    3. '(' → logprob: -5.883235454559326
    4. '()' → logprob: -7.883235454559326
    5. ' la' → logprob: -8.133235931396484
    6. ' =' → logprob: -8.508235931396484
    7. ' (' → logprob: -9.008235931396484
    8. 'l' → logprob: -9.008235931396484
    9. ' )' → logprob: -9.133235931396484
    10. '=' → logprob: -9.508235931396484

Token 7: ' entr' (ID: 7072)
  Prédit: ' arguments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arguments' → logprob: -0.7312144041061401
    2. 'arguments' → logprob: -1.9812144041061401
    3. 'f' → logprob: -2.1062145233154297
    4. 'import' → logprob: -2.7312145233154297
    5. '_' → logprob: -3.3562145233154297
    6. 'd' → logprob: -3.6062145233154297
    7. ' lignes' → logprob: -3.7312145233154297
    8. ' données' → logprob: -4.10621452331543
    9. 'l' → logprob: -4.35621452331543
    10. ' fichiers' → logprob: -4.48121452331543

Token 8: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0017668125219643116
    2. 'ée' → logprob: -6.376766681671143
    3. 'ees' → logprob: -9.8767671585083
    4. 'é' → logprob: -11.5017671585083
    5. 'és' → logprob: -13.3767671585083
    6. 'es' → logprob: -15.2517671585083
    7. 'ee' → logprob: -15.3767671585083
    8. 'e' → logprob: -15.3767671585083
    9. 'êtes' → logprob: -15.6267671585083
    10. 'er' → logprob: -15.6267671585083

Token 9: ' n' (ID: 297)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7365045547485352
    2. 'input' → logprob: -2.111504554748535
    3. '\' → logprob: -2.361504554748535
    4. '\n' → logprob: -2.986504554748535
    5. '```' → logprob: -3.361504554748535
    6. '_' → logprob: -3.611504554748535
    7. 'data' → logprob: -3.611504554748535
    8. 's' → logprob: -3.736504554748535
    9. 'n' → logprob: -3.986504554748535
    10. ',' → logprob: -4.236504554748535

Token 10: ',' (ID: 11)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5631831884384155
    2. ',' → logprob: -1.6881831884384155
    3. ' =' → logprob: -2.438183307647705
    4. 'ombre' → logprob: -3.063183307647705
    5. '=' → logprob: -3.563183307647705
    6. 'umber' → logprob: -3.938183307647705
    7. 'um' → logprob: -4.438183307647705
    8. '```' → logprob: -4.563183307647705
    9. '_' → logprob: -5.063183307647705
    10. 'ombres' → logprob: -5.313183307647705

Token 11: ' m' (ID: 284)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.133548766374588
    2. ' =' → logprob: -3.2585487365722656
    3. ' ,' → logprob: -3.2585487365722656
    4. ',' → logprob: -3.5085487365722656
    5. ' puis' → logprob: -5.508548736572266
    6. '=' → logprob: -5.883548736572266
    7. 'm' → logprob: -6.133548736572266
    8. ' et' → logprob: -6.633548736572266
    9. 'et' → logprob: -6.758548736572266
    10. ' m' → logprob: -6.883548736572266

Token 12: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005433200858533382
    2. ',' → logprob: -6.005433082580566
    3. '\n' → logprob: -6.630433082580566
    4. ' n' → logprob: -7.255433082580566
    5. ',n' → logprob: -7.630433082580566
    6. '```' → logprob: -8.505433082580566
    7. '\' → logprob: -9.505433082580566
    8. 'x' → logprob: -9.755433082580566
    9. 'a' → logprob: -11.255433082580566
    10. ' =' → logprob: -11.505433082580566

Token 13: ' r' (ID: 428)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5850021839141846
    2. ' ' → logprob: -1.3350021839141846
    3. ' ,' → logprob: -2.2100021839141846
    4. ' =' → logprob: -2.7100021839141846
    5. '=' → logprob: -7.2100019454956055
    6. ' and' → logprob: -7.3350019454956055
    7. ' et' → logprob: -8.085001945495605
    8. 's' → logprob: -8.460001945495605
    9. 'et' → logprob: -8.710001945495605
    10. '  ' → logprob: -8.835001945495605

Token 14: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013315288349986076
    2. ',' → logprob: -5.013315200805664
    3. '\n' → logprob: -6.388315200805664
    4. ' n' → logprob: -6.513315200805664
    5. ',n' → logprob: -6.888315200805664
    6. 'r' → logprob: -7.513315200805664
    7. '```' → logprob: -7.763315200805664
    8. 'x' → logprob: -8.513315200805664
    9. '[n' → logprob: -9.013315200805664
    10. 'm' → logprob: -9.013315200805664

Token 15: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001395592000335455
    2. '\n' → logprob: -7.1263957023620605
    3. ',' → logprob: -8.376395225524902
    4. ' n' → logprob: -9.001395225524902
    5. ',n' → logprob: -9.251395225524902
    6. '```' → logprob: -9.251395225524902
    7. '
' → logprob: -11.001395225524902
    8. 'a' → logprob: -12.626395225524902
    9. '\' → logprob: -12.626395225524902
    10. 'r' → logprob: -12.751395225524902

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006105714710429311
    2. ' ,' → logprob: -7.5006103515625
    3. ' =' → logprob: -10.6256103515625
    4. ',m' → logprob: -10.7506103515625
    5. '=' → logprob: -11.7506103515625
    6. ',r' → logprob: -13.6256103515625
    7. ',n' → logprob: -14.1256103515625
    8. ' ' → logprob: -14.5006103515625
    9. ',s' → logprob: -14.6256103515625
    10. ',v' → logprob: -15.8756103515625

Token 17: ' m' (ID: 284)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6501011252403259
    2. ' m' → logprob: -0.9001011252403259
    3. 'm' → logprob: -2.6501011848449707
    4. '  ' → logprob: -7.525101184844971
    5. '    ' → logprob: -8.525100708007812
    6. '   ' → logprob: -10.900100708007812
    7. ',' → logprob: -11.275100708007812
    8. ' ' → logprob: -11.275100708007812
    9. ' ,' → logprob: -11.650100708007812
    10. '	m' → logprob: -11.650100708007812

Token 18: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6948094367980957
    2. ',' → logprob: -0.8198094367980957
    3. '=' → logprob: -2.8198094367980957
    4. ' ,' → logprob: -7.319809436798096
    5. ' ' → logprob: -11.819808959960938
    6. '<|end|>' → logprob: -11.944808959960938
    7. ')' → logprob: -12.569808959960938
    8. '```' → logprob: -13.069808959960938
    9. ',user' → logprob: -13.194808959960938
    10. '=input' → logprob: -13.382308959960938

Token 19: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.20219720900058746
    2. 'r' → logprob: -1.7021971940994263
    3. ' ' → logprob: -7.827197074890137
    4. ' =' → logprob: -8.327197074890137
    5. '=' → logprob: -9.202197074890137
    6. '_r' → logprob: -10.952197074890137
    7. '=r' → logprob: -12.327197074890137
    8. ',' → logprob: -12.577197074890137
    9. ',r' → logprob: -13.139697074890137
    10. '	r' → logprob: -13.264697074890137

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28116509318351746
    2. '=' → logprob: -1.4061651229858398
    3. ',' → logprob: -11.90616512298584
    4. '=input' → logprob: -12.15616512298584
    5. '=sys' → logprob: -13.40616512298584
    6. ')' → logprob: -14.65616512298584
    7. '=int' → logprob: -15.78116512298584
    8. ' ' → logprob: -15.90616512298584
    9. '=user' → logprob: -16.281164169311523
    10. '```' → logprob: -16.656164169311523

Token 21: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.016445929184556007
    2. 'map' → logprob: -4.141446113586426
    3. ' input' → logprob: -8.516446113586426
    4. ' sys' → logprob: -8.891446113586426
    5. ' [' → logprob: -10.891446113586426
    6. 'input' → logprob: -10.891446113586426
    7. '[' → logprob: -11.891446113586426
    8. ' ' → logprob: -11.891446113586426
    9. ' ' → logprob: -11.891446113586426
    10. ' list' → logprob: -12.016446113586426

Token 22: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06669604778289795
    2. '(' → logprob: -3.4416961669921875
    3. '(str' → logprob: -3.4416961669921875
    4. '(lambda' → logprob: -7.9416961669921875
    5. 'int' → logprob: -10.066696166992188
    6. '(input' → logprob: -10.441696166992188
    7. '(
' → logprob: -10.566696166992188
    8. '(list' → logprob: -11.816696166992188
    9. 'str' → logprob: -12.066696166992188
    10. '(tuple' → logprob: -12.191696166992188

Token 23: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.7531930804252625
    2. '(input' → logprob: -1.0031931400299072
    3. '(' → logprob: -1.8781931400299072
    4. ')' → logprob: -4.878192901611328
    5. 'input' → logprob: -6.503192901611328
    6. 'sys' → logprob: -9.378192901611328
    7. ' (' → logprob: -9.378192901611328
    8. '(
' → logprob: -9.628192901611328
    9. '=sys' → logprob: -9.628192901611328
    10. ' sys' → logprob: -10.503192901611328

Token 24: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5868357419967651
    2. 'input' → logprob: -1.5868357419967651
    3. ' sys' → logprob: -1.7118357419967651
    4. ' input' → logprob: -2.8368358612060547
    5. '(sys' → logprob: -9.336835861206055
    6. ')' → logprob: -9.711835861206055
    7. '=sys' → logprob: -10.461835861206055
    8. 'stdin' → logprob: -12.586835861206055
    9. '(input' → logprob: -12.961835861206055
    10. ' ' → logprob: -12.961835861206055

Token 25: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0034951844718307257
    2. '.' → logprob: -6.253495216369629
    3. '.argv' → logprob: -7.253495216369629
    4. '.readline' → logprob: -7.253495216369629
    5. ' .' → logprob: -9.253495216369629
    6. '.std' → logprob: -10.753495216369629
    7. '.stdout' → logprob: -10.878495216369629
    8. '.input' → logprob: -12.253495216369629
    9. '.import' → logprob: -13.003495216369629
    10. '.standard' → logprob: -13.253495216369629

Token 26: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0011945136357098818
    2. '.read' → logprob: -6.751194477081299
    3. '.readlines' → logprob: -11.126194953918457
    4. '.' → logprob: -11.876194953918457
    5. '.stdin' → logprob: -13.376194953918457
    6. ' .' → logprob: -14.126194953918457
    7. ').' → logprob: -16.25119400024414
    8. '.buffer' → logprob: -16.62619400024414
    9. '.imread' → logprob: -17.00119400024414
    10. '.reader' → logprob: -17.25119400024414

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.6596905589103699
    2. '())' → logprob: -0.9096905589103699
    3. '()' → logprob: -2.5346906185150146
    4. '()))' → logprob: -7.6596903800964355
    5. '()[' → logprob: -8.659690856933594
    6. ')' → logprob: -8.784690856933594
    7. '(' → logprob: -9.284690856933594
    8. ' ())' → logprob: -9.909690856933594
    9. '();)' → logprob: -11.159690856933594
    10. '());' → logprob: -11.284690856933594

Token 28: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.026357661932706833
    2. 'split' → logprob: -3.776357650756836
    3. 'rstrip' → logprob: -5.776357650756836
    4. 'read' → logprob: -12.026357650756836
    5. ' strip' → logprob: -13.776357650756836
    6. ' split' → logprob: -15.776357650756836
    7. 'decode' → logprob: -17.026357650756836
    8. 'replace' → logprob: -17.151357650756836
    9. '_strip' → logprob: -18.901357650756836
    10. '-strip' → logprob: -18.901357650756836

Token 29: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33568915724754333
    2. '())' → logprob: -1.3356891870498657
    3. '))' → logprob: -3.960689067840576
    4. '()' → logprob: -6.085689067840576
    5. '()))' → logprob: -7.335689067840576
    6. '(' → logprob: -9.835689544677734
    7. '`)' → logprob: -10.210689544677734
    8. ' ())' → logprob: -10.835689544677734
    9. ')))' → logprob: -11.335689544677734
    10. '),' → logprob: -11.710689544677734

Token 30: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4679630994796753
    2. 'graph' → logprob: -1.5929630994796753
    3. 'a' → logprob: -1.8429630994796753
    4. 'd' → logprob: -2.092963218688965
    5. 't' → logprob: -3.592963218688965
    6. 'data' → logprob: -3.592963218688965
    7. ')' → logprob: -4.092963218688965
    8. 'dist' → logprob: -4.092963218688965
    9. 'grid' → logprob: -4.217963218688965
    10. ',' → logprob: -4.342963218688965

Token 31: ' Le' (ID: 2018)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4664810597896576
    2. 'graph' → logprob: -2.5914809703826904
    3. 'edges' → logprob: -3.0914809703826904
    4. 'dist' → logprob: -3.4664809703826904
    5. ' distances' → logprob: -3.9664809703826904
    6. ' edges' → logprob: -4.2164812088012695
    7. ' dp' → logprob: -4.2164812088012695
    8. 'data' → logprob: -4.2164812088012695
    9. 'result' → logprob: -4.4664812088012695
    10. 'matrix' → logprob: -4.5914812088012695

Token 32: ' problème' (ID: 35630)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1562231183052063
    2. 'dp' → logprob: -4.406223297119141
    3. 'graph' → logprob: -4.406223297119141
    4. ' tableau' → logprob: -4.656223297119141
    5. 'r' → logprob: -4.781223297119141
    6. 'gr' → logprob: -4.781223297119141
    7. 'a' → logprob: -4.781223297119141
    8. 't' → logprob: -4.906223297119141
    9. ' graph' → logprob: -5.031223297119141
    10. 'd' → logprob: -5.156223297119141

Token 33: ' demande' (ID: 26737)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9349467754364014
    2. '<|end|>' → logprob: -1.3099467754364014
    3. '#' → logprob: -2.1849467754364014
    4. ',' → logprob: -3.0599467754364014
    5. ' is' → logprob: -3.0599467754364014
    6. ' ' → logprob: -3.4349467754364014
    7. '.' → logprob: -3.9349467754364014
    8. 'n' → logprob: -4.3099470138549805
    9. '...' → logprob: -4.3099470138549805
    10. '=' → logprob: -4.3099470138549805

Token 34: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.34749484062194824
    2. ' d' → logprob: -1.4724948406219482
    3. ' ' → logprob: -2.9724948406219482
    4. 'de' → logprob: -5.722495079040527
    5. 'd' → logprob: -6.222495079040527
    6. '<|end|>' → logprob: -6.347495079040527
    7. 's' → logprob: -7.097495079040527
    8. ' la' → logprob: -7.097495079040527
    9. ' to' → logprob: -7.097495079040527
    10. ',' → logprob: -7.472495079040527

Token 35: ' compter' (ID: 81694)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.0785647630691528
    2. 'tr' → logprob: -1.7035647630691528
    3. 'calcul' → logprob: -1.7035647630691528
    4. 'chercher' → logprob: -2.9535646438598633
    5. ' trouver' → logprob: -3.0785646438598633
    6. 'max' → logprob: -3.3285646438598633
    7. 'faire' → logprob: -3.8285646438598633
    8. 'contin' → logprob: -4.328564643859863
    9. 'l' → logprob: -4.703564643859863
    10. ' calcul' → logprob: -4.953564643859863

Token 36: ' combien' (ID: 106648)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.8597062230110168
    2. ' les' → logprob: -1.484706163406372
    3. 'le' → logprob: -2.359706163406372
    4. ',' → logprob: -2.609706163406372
    5. ' le' → logprob: -2.859706163406372
    6. '<|end|>' → logprob: -3.359706163406372
    7. ' ' → logprob: -4.109706401824951
    8. '_' → logprob: -4.734706401824951
    9. ' combien' → logprob: -5.234706401824951
    10. 'l' → logprob: -5.234706401824951

Token 37: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.16404421627521515
    2. 'de' → logprob: -2.289044141769409
    3. ' d' → logprob: -3.414044141769409
    4. 'd' → logprob: -5.289044380187988
    5. ' ' → logprob: -5.539044380187988
    6. '#' → logprob: -6.539044380187988
    7. '<|end|>' → logprob: -7.164044380187988
    8. ' of' → logprob: -7.414044380187988
    9. '_' → logprob: -7.539044380187988
    10. 'des' → logprob: -7.664044380187988

Token 38: ' comb' (ID: 4134)
  Prédit: ' chemins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chemins' → logprob: -2.161917209625244
    2. 'r' → logprob: -2.411917209625244
    3. ' fois' → logprob: -2.536917209625244
    4. '```' → logprob: -2.661917209625244
    5. 'routes' → logprob: -3.161917209625244
    6. 'man' → logprob: -3.224417209625244
    7. 'fois' → logprob: -3.411917209625244
    8. 'jours' → logprob: -3.849417209625244
    9. 'p' → logprob: -3.911917209625244
    10. 'c' → logprob: -4.036917209625244

Token 39: 'inais' (ID: 42744)
  Prédit: 'inais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.019350070506334305
    2. 'ina' → logprob: -4.519350051879883
    3. 'in' → logprob: -6.269350051879883
    4. 'inas' → logprob: -6.769350051879883
    5. 'i' → logprob: -7.019350051879883
    6. 'is' → logprob: -7.144350051879883
    7. 'inations' → logprob: -7.519350051879883
    8. '``' → logprob: -7.769350051879883
    9. '```' → logprob: -7.769350051879883
    10. 'ais' → logprob: -8.019350051879883

Token 40: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.2031378298997879
    2. 'o' → logprob: -1.7031378746032715
    3. 'on' → logprob: -6.7031378746032715
    4. 's' → logprob: -7.8281378746032715
    5. 'sons' → logprob: -10.453137397766113
    6. 'son' → logprob: -11.203137397766113
    7. '#' → logprob: -11.578137397766113
    8. '```' → logprob: -11.703137397766113
    9. 'onso' → logprob: -12.203137397766113
    10. '0' → logprob: -12.203137397766113

Token 41: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7016934156417847
    2. ' ' → logprob: -0.8266934156417847
    3. '_' → logprob: -3.451693534851074
    4. ' (' → logprob: -4.076693534851074
    5. ' de' → logprob: -4.701693534851074
    6. '(space' → logprob: -6.201693534851074
    7. 's' → logprob: -6.701693534851074
    8. 'de' → logprob: -6.951693534851074
    9. ',' → logprob: -7.451693534851074
    10. '\' → logprob: -7.576693534851074

Token 42: ' per' (ID: 777)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -1.2807250022888184
    2. 'r' → logprob: -1.4057250022888184
    3. ' k' → logprob: -1.7807250022888184
    4. 'm' → logprob: -2.0307250022888184
    5. ' m' → logprob: -2.2807250022888184
    6. ' ' → logprob: -3.6557250022888184
    7. 'k' → logprob: -4.030725002288818
    8. ' n' → logprob: -4.905725002288818
    9. '```' → logprob: -5.280725002288818
    10. 'n' → logprob: -5.405725002288818

Token 43: 'les' (ID: 1032)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.791267991065979
    2. 'm' → logprob: -1.166267991065979
    3. 's' → logprob: -2.1662678718566895
    4. 'mut' → logprob: -2.7912678718566895
    5. '```' → logprob: -3.2912678718566895
    6. 'son' → logprob: -4.9162678718566895
    7. 'mutation' → logprob: -5.7912678718566895
    8. 'u' → logprob: -6.1662678718566895
    9. '``' → logprob: -7.0412678718566895
    10. 'mu' → logprob: -7.2287678718566895

Token 44: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014471740461885929
    2. ' de' → logprob: -5.514471530914307
    3. 's' → logprob: -5.764471530914307
    4. '_' → logprob: -6.639471530914307
    5. ' s' → logprob: -6.889471530914307
    6. '<|end|>' → logprob: -6.889471530914307
    7. ',' → logprob: -7.389471530914307
    8. ' d' → logprob: -7.389471530914307
    9. ' (' → logprob: -7.889471530914307
    10. ' ,' → logprob: -7.889471530914307

Token 45: '
' (ID: 198)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7574156522750854
    2. ' r' → logprob: -2.007415771484375
    3. ' ' → logprob: -2.132415771484375
    4. 'm' → logprob: -2.507415771484375
    5. 'tail' → logprob: -2.882415771484375
    6. ' taille' → logprob: -3.632415771484375
    7. ' m' → logprob: -3.757415771484375
    8. ' couleurs' → logprob: -4.007415771484375
    9. '```' → logprob: -4.132415771484375
    10. '2' → logprob: -5.132415771484375

Token 46: '#' (ID: 2)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -1.3712586164474487
    2. ' ' → logprob: -1.6212586164474487
    3. ' m' → logprob: -1.6212586164474487
    4. 'm' → logprob: -1.9962586164474487
    5. ' taille' → logprob: -2.3712587356567383
    6. 'r' → logprob: -2.8712587356567383
    7. 'tail' → logprob: -3.8712587356567383
    8. ' tailles' → logprob: -4.996258735656738
    9. ' couleurs' → logprob: -4.996258735656738
    10. ' longueur' → logprob: -5.121258735656738

Token 47: ' taille' (ID: 41644)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -1.307882308959961
    2. ' taille' → logprob: -1.557882308959961
    3. 'r' → logprob: -2.057882308959961
    4. ' ' → logprob: -2.307882308959961
    5. 'tail' → logprob: -2.807882308959961
    6. ' couleurs' → logprob: -3.057882308959961
    7. ' longueur' → logprob: -3.307882308959961
    8. ' m' → logprob: -3.432882308959961
    9. 'm' → logprob: -3.557882308959961
    10. ' tailles' → logprob: -4.057882308959961

Token 48: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.060516007244586945
    2. ' ' → logprob: -3.435516119003296
    3. ' m' → logprob: -4.310515880584717
    4. 'r' → logprob: -4.560515880584717
    5. ' k' → logprob: -6.935515880584717
    6. 'm' → logprob: -7.560515880584717
    7. ' exactement' → logprob: -7.810515880584717
    8. ' exactly' → logprob: -8.060516357421875
    9. ' n' → logprob: -9.685516357421875
    10. ' `' → logprob: -10.060516357421875

Token 49: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3436385989189148
    2. ' n' → logprob: -2.0936386585235596
    3. ' r' → logprob: -3.2186386585235596
    4. ' k' → logprob: -4.2186384201049805
    5. ' m' → logprob: -4.3436384201049805
    6. ' '' → logprob: -4.4686384201049805
    7. ' parmi' → logprob: -4.4686384201049805
    8. 'r' → logprob: -4.7186384201049805
    9. ' sont' → logprob: -4.8436384201049805
    10. 'n' → logprob: -5.2186384201049805

Token 50: ' avec' (ID: 3937)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.8036921620368958
    2. 'm' → logprob: -1.303692102432251
    3. ' n' → logprob: -1.678692102432251
    4. 'n' → logprob: -3.553692102432251
    5. ' ' → logprob: -3.553692102432251
    6. ' parmi' → logprob: -4.55369234085083
    7. 'p' → logprob: -5.42869234085083
    8. ' k' → logprob: -5.55369234085083
    9. '```' → logprob: -5.80369234085083
    10. ' p' → logprob: -6.30369234085083

Token 51: ' n' (ID: 297)
  Prédit: ' répét'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' répét' → logprob: -0.1731075644493103
    2. ' rép' → logprob: -2.673107624053955
    3. ' remplacement' → logprob: -3.423107624053955
    4. ' des' → logprob: -4.298107624053955
    5. ' repetition' → logprob: -4.798107624053955
    6. ' remise' → logprob: -4.923107624053955
    7. 'rem' → logprob: -5.173107624053955
    8. ' replacement' → logprob: -5.798107624053955
    9. 'r' → logprob: -5.923107624053955
    10. 'replacement' → logprob: -6.048107624053955

Token 52: ' couleurs' (ID: 54001)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6592867970466614
    2. ' distinct' → logprob: -2.1592867374420166
    3. '=' → logprob: -2.9092867374420166
    4. ' espaces' → logprob: -2.9092867374420166
    5. ' =' → logprob: -3.1592867374420166
    6. 'per' → logprob: -3.2842867374420166
    7. ',' → logprob: -3.7842867374420166
    8. '<|end|>' → logprob: -3.9092867374420166
    9. ' éléments' → logprob: -4.534286975860596
    10. ' différentes' → logprob: -4.659286975860596

Token 53: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2753468155860901
    2. ''' → logprob: -2.2753467559814453
    3. ',' → logprob: -2.7753467559814453
    4. ' ,' → logprob: -4.150346755981445
    5. '"' → logprob: -4.400346755981445
    6. ' '' → logprob: -4.525346755981445
    7. ')' → logprob: -5.150346755981445
    8. '.' → logprob: -5.400346755981445
    9. ' "' → logprob: -5.400346755981445
    10. ' (' → logprob: -5.650346755981445

Token 54: ' cont' (ID: 836)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8035691380500793
    2. ' m' → logprob: -2.0535690784454346
    3. ' avec' → logprob: -2.4285690784454346
    4. 'm' → logprob: -2.8035690784454346
    5. ' sans' → logprob: -3.0535690784454346
    6. 's' → logprob: -3.1785690784454346
    7. ' sont' → logprob: -3.5535690784454346
    8. ' des' → logprob: -3.6785690784454346
    9. ' '' → logprob: -3.8035690784454346
    10. ' espaces' → logprob: -4.053569316864014

Token 55: 'iennent' (ID: 53290)
  Prédit: 'ient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.2987140119075775
    2. 'iennent' → logprob: -2.0487139225006104
    3. 'r' → logprob: -3.1737139225006104
    4. 'i' → logprob: -3.6737139225006104
    5. 'enant' → logprob: -4.1737141609191895
    6. 'iend' → logprob: -5.0487141609191895
    7. 'inu' → logprob: -5.1737141609191895
    8. 'e' → logprob: -5.4237141609191895
    9. 'in' → logprob: -5.4237141609191895
    10. 'enu' → logprob: -5.5487141609191895

Token 56: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.009803309105336666
    2. ' ' → logprob: -5.259803295135498
    3. 'au' → logprob: -5.634803295135498
    4. ' exactement' → logprob: -7.884803295135498
    5. ''au' → logprob: -9.259803771972656
    6. ' exactly' → logprob: -9.509803771972656
    7. '<|end|>' → logprob: -9.509803771972656
    8. ' at' → logprob: -9.509803771972656
    9. ' a' → logprob: -9.884803771972656
    10. 'a' → logprob: -10.634803771972656

Token 57: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.010219578631222248
    2. ' moins' → logprob: -5.385219573974609
    3. 'm' → logprob: -6.010219573974609
    4. 'plus' → logprob: -7.260219573974609
    5. '```' → logprob: -7.760219573974609
    6. '   ' → logprob: -7.760219573974609
    7. '  ' → logprob: -7.885219573974609
    8. '	' → logprob: -8.38521957397461
    9. 'mo' → logprob: -8.76021957397461
    10. '-' → logprob: -9.01021957397461

Token 58: ' m' (ID: 284)
  Prédit: ' one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.5876514911651611
    2. ' une' → logprob: -1.0876514911651611
    3. ' un' → logprob: -2.837651491165161
    4. ' ' → logprob: -3.712651491165161
    5. 'une' → logprob: -4.462651252746582
    6. ' deux' → logprob: -5.087651252746582
    7. 'one' → logprob: -5.962651252746582
    8. 'un' → logprob: -6.337651252746582
    9. ''une' → logprob: -7.837651252746582
    10. ' r' → logprob: -8.212651252746582

Token 59: ' per' (ID: 777)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06578642874956131
    2. '_' → logprob: -3.565786361694336
    3. ' espaces' → logprob: -4.690786361694336
    4. '<|end|>' → logprob: -5.065786361694336
    5. ''' → logprob: -5.815786361694336
    6. 'space' → logprob: -5.940786361694336
    7. ' '' → logprob: -6.065786361694336
    8. 'm' → logprob: -6.440786361694336
    9. ' _' → logprob: -6.690786361694336
    10. ' ' → logprob: -6.940786361694336

Token 60: 'les' (ID: 1032)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9195848107337952
    2. 'les' → logprob: -2.0445847511291504
    3. 'er' → logprob: -2.2945847511291504
    4. 'erce' → logprob: -2.2945847511291504
    5. 'le' → logprob: -3.4195847511291504
    6. 'bles' → logprob: -3.4195847511291504
    7. 'u' → logprob: -3.6695847511291504
    8. '```' → logprob: -3.7945847511291504
    9. 'erl' → logprob: -4.16958475112915
    10. 'l' → logprob: -4.29458475112915

Token 61: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2979249358177185
    2. '_' → logprob: -2.0479249954223633
    3. ' _' → logprob: -2.6729249954223633
    4. '[' → logprob: -4.172924995422363
    5. 'r' → logprob: -4.297924995422363
    6. ''' → logprob: -5.172924995422363
    7. ' ,' → logprob: -5.797924995422363
    8. 'm' → logprob: -6.047924995422363
    9. ' '' → logprob: -6.172924995422363
    10. 's' → logprob: -6.297924995422363

Token 62: ' chaque' (ID: 21194)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1346108466386795
    2. 'la' → logprob: -3.384610891342163
    3. 'c' → logprob: -4.134610652923584
    4. ' ' → logprob: -4.634610652923584
    5. ' chaque' → logprob: -4.759610652923584
    6. ' chacune' → logprob: -4.759610652923584
    7. ' au' → logprob: -4.884610652923584
    8. 'l' → logprob: -5.009610652923584
    9. 'au' → logprob: -5.009610652923584
    10. 'm' → logprob: -5.009610652923584

Token 63: ' couleur' (ID: 48005)
  Prédit: ' couleur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couleur' → logprob: -0.17125101387500763
    2. ' ' → logprob: -2.296251058578491
    3. '<|end|>' → logprob: -3.671251058578491
    4. ' color' → logprob: -4.421250820159912
    5. 'cou' → logprob: -5.671250820159912
    6. ' couleurs' → logprob: -5.921250820159912
    7. ' 
' → logprob: -6.046250820159912
    8. 'c' → logprob: -6.171250820159912
    9. 'color' → logprob: -6.546250820159912
    10. ' espace' → logprob: -6.921250820159912

Token 64: '.
' (ID: 558)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06505739688873291
    2. '_' → logprob: -3.9400572776794434
    3. '[' → logprob: -4.940057277679443
    4. '#' → logprob: -5.065057277679443
    5. ',' → logprob: -5.315057277679443
    6. ')' → logprob: -5.440057277679443
    7. ''' → logprob: -5.690057277679443
    8. ':' → logprob: -5.940057277679443
    9. 'r' → logprob: -6.690057277679443
    10. 'import' → logprob: -6.690057277679443

Token 65: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.015995418652892113
    2. ')' → logprob: -5.390995502471924
    3. '<|end|>' → logprob: -5.765995502471924
    4. '#' → logprob: -6.515995502471924
    5. 'def' → logprob: -6.640995502471924
    6. ' 
' → logprob: -6.765995502471924
    7. 'n' → logprob: -7.015995502471924
    8. '[' → logprob: -7.390995502471924
    9. 'import' → logprob: -7.890995502471924
    10. 'r' → logprob: -8.015995025634766

Token 66: ' Chaque' (ID: 94758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02797536924481392
    2. 'n' → logprob: -5.277975559234619
    3. 'def' → logprob: -5.527975559234619
    4. ')' → logprob: -5.777975559234619
    5. 'r' → logprob: -5.777975559234619
    6. 'import' → logprob: -6.027975559234619
    7. '#' → logprob: -6.777975559234619
    8. ':' → logprob: -6.902975559234619
    9. ',' → logprob: -7.027975559234619
    10. 'm' → logprob: -7.277975559234619

Token 67: ' per' (ID: 777)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11646275967359543
    2. '_' → logprob: -2.6164627075195312
    3. ' _' → logprob: -3.4914627075195312
    4. ' ,' → logprob: -7.116462707519531
    5. ')' → logprob: -7.616462707519531
    6. ' espace' → logprob: -7.616462707519531
    7. '  ' → logprob: -7.741462707519531
    8. ' )' → logprob: -7.991462707519531
    9. ' space' → logprob: -8.241462707519531
    10. ',' → logprob: -8.241462707519531

Token 68: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.25851380825042725
    2. 'u' → logprob: -2.008513927459717
    3. 's' → logprob: -3.633513927459717
    4. '```' → logprob: -4.383513927459717
    5. 'l' → logprob: -4.508513927459717
    6. 'm' → logprob: -4.758513927459717
    7. 'r' → logprob: -5.383513927459717
    8. 'les' → logprob: -5.508513927459717
    9. 'lé' → logprob: -6.008513927459717
    10. 'ur' → logprob: -6.008513927459717

Token 69: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6805866956710815
    2. 's' → logprob: -2.180586814880371
    3. ' s' → logprob: -2.430586814880371
    4. ' ,' → logprob: -2.805586814880371
    5. ' de' → logprob: -3.180586814880371
    6. ',' → logprob: -3.305586814880371
    7. ' n' → logprob: -3.555586814880371
    8. ' est' → logprob: -4.180586814880371
    9. '<|end|>' → logprob: -4.180586814880371
    10. ' '' → logprob: -4.305586814880371

Token 70: ' ident' (ID: 3951)
  Prédit: ' chois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chois' → logprob: -0.40672650933265686
    2. ' de' → logprob: -1.7817264795303345
    3. ' une' → logprob: -3.281726598739624
    4. ' d' → logprob: -3.656726598739624
    5. 'r' → logprob: -4.156726360321045
    6. ' ' → logprob: -4.406726360321045
    7. ' un' → logprob: -4.406726360321045
    8. ' distinct' → logprob: -5.156726360321045
    9. ' color' → logprob: -5.281726360321045
    10. ' soit' → logprob: -5.531726360321045

Token 71: 'ifiée' (ID: 88506)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.10995985567569733
    2. 'f' → logprob: -2.359959840774536
    3. 'ifiée' → logprob: -4.984960079193115
    4. '```' → logprob: -7.359960079193115
    5. 'ifié' → logprob: -8.484959602355957
    6. 'que' → logprob: -8.484959602355957
    7. 'ée' → logprob: -8.609959602355957
    8. 'ifi' → logprob: -8.609959602355957
    9. '#' → logprob: -8.734959602355957
    10. 'fé' → logprob: -8.734959602355957

Token 72: ' seulement' (ID: 32072)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.6552512645721436
    2. ' ' → logprob: -1.5302512645721436
    3. '<|end|>' → logprob: -1.5302512645721436
    4. 'par' → logprob: -3.5302512645721436
    5. ' by' → logprob: -5.530251502990723
    6. '  ' → logprob: -5.530251502990723
    7. 's' → logprob: -6.030251502990723
    8. ')' → logprob: -6.530251502990723
    9. '<|end|>' → logprob: -7.155251502990723
    10. ',' → logprob: -7.155251502990723

Token 73: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.01548378448933363
    2. 'par' → logprob: -4.265483856201172
    3. ' by' → logprob: -7.390483856201172
    4. ' ' → logprob: -7.890483856201172
    5. '<|end|>' → logprob: -9.015483856201172
    6. 'by' → logprob: -10.390483856201172
    7. ' pas' → logprob: -10.390483856201172
    8. '	par' → logprob: -11.015483856201172
    9. '_par' → logprob: -11.265483856201172
    10. '  ' → logprob: -11.515483856201172

Token 74: ' sa' (ID: 880)
  Prédit: ' sa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sa' → logprob: -0.06225862354040146
    2. ' son' → logprob: -3.812258720397949
    3. 'son' → logprob: -4.062258720397949
    4. 'sa' → logprob: -4.687258720397949
    5. ' ' → logprob: -5.562258720397949
    6. 'leur' → logprob: -6.562258720397949
    7. ' la' → logprob: -6.812258720397949
    8. 'l' → logprob: -7.062258720397949
    9. 'une' → logprob: -7.437258720397949
    10. 's' → logprob: -7.562258720397949

Token 75: ' couleur' (ID: 48005)
  Prédit: ' couleur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couleur' → logprob: -0.14228272438049316
    2. 'c' → logprob: -2.517282724380493
    3. ' c' → logprob: -3.267282724380493
    4. 'cou' → logprob: -4.642282485961914
    5. ' ' → logprob: -6.642282485961914
    6. ' color' → logprob: -7.267282485961914
    7. ' couleurs' → logprob: -7.642282485961914
    8. ' cô' → logprob: -8.267282485961914
    9. '_c' → logprob: -8.392282485961914
    10. '<|end|>' → logprob: -8.392282485961914

Token 76: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01422803197056055
    2. ':' → logprob: -5.389227867126465
    3. ',' → logprob: -6.139227867126465
    4. 'import' → logprob: -6.764227867126465
    5. '
' → logprob: -7.014227867126465
    6. '<|end|>' → logprob: -7.139227867126465
    7. 's' → logprob: -7.764227867126465
    8. 'def' → logprob: -7.764227867126465
    9. ' ,' → logprob: -7.764227867126465
    10. ' 
' → logprob: -8.014227867126465

Token 77: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06339310854673386
    2. ')' → logprob: -3.4383931159973145
    3. ' )' → logprob: -3.8133931159973145
    4. ' ,' → logprob: -5.8133931159973145
    5. ',' → logprob: -6.4383931159973145
    6. '_' → logprob: -8.313392639160156
    7. '<|end|>' → logprob: -8.438392639160156
    8. ' and' → logprob: -8.563392639160156
    9. 'n' → logprob: -8.688392639160156
    10. 'space' → logprob: -8.938392639160156

Token 78: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.648313045501709
    2. ' on' → logprob: -2.148313045501709
    3. ' les' → logprob: -2.273313045501709
    4. 'l' → logprob: -2.273313045501709
    5. ' la' → logprob: -2.273313045501709
    6. 'les' → logprob: -2.398313045501709
    7. 'on' → logprob: -2.898313045501709
    8. 'r' → logprob: -3.023313045501709
    9. ' n' → logprob: -3.523313045501709
    10. ' il' → logprob: -3.648313045501709

Token 79: ''ordre' (ID: 124753)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21119458973407745
    2. 'e' → logprob: -2.3361945152282715
    3. ''' → logprob: -3.2111945152282715
    4. 'es' → logprob: -4.3361945152282715
    5. ''espace' → logprob: -4.3361945152282715
    6. ''on' → logprob: -4.7111945152282715
    7. ''ensemble' → logprob: -5.3361945152282715
    8. ' '' → logprob: -6.0861945152282715
    9. 'u' → logprob: -6.3361945152282715
    10. ' a' → logprob: -6.4611945152282715

Token 80: ' ne' (ID: 453)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.031007081270217896
    2. ' de' → logprob: -4.406007289886475
    3. ' ' → logprob: -5.156007289886475
    4. '<|end|>' → logprob: -5.281007289886475
    5. ' d' → logprob: -6.406007289886475
    6. ' est' → logprob: -6.781007289886475
    7. ' n' → logprob: -7.031007289886475
    8. ',' → logprob: -7.531007289886475
    9. ' is' → logprob: -7.781007289886475
    10. '  ' → logprob: -7.906007289886475

Token 81: ' compte' (ID: 19657)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.8901402950286865
    2. 's' → logprob: -1.8901402950286865
    3. 'import' → logprob: -1.8901402950286865
    4. ' ' → logprob: -2.0151402950286865
    5. 'importe' → logprob: -2.3901402950286865
    6. '<|end|>' → logprob: -2.5151402950286865
    7. ' compte' → logprob: -3.1401402950286865
    8. 'st' → logprob: -3.3901402950286865
    9. ''importe' → logprob: -3.7651402950286865
    10. 'comp' → logprob: -3.8901402950286865

Token 82: ' pas' (ID: 2173)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.026497483253479
    2. '_' → logprob: -1.151497483253479
    3. 'u' → logprob: -2.4014973640441895
    4. ',' → logprob: -2.9014973640441895
    5. 'r' → logprob: -4.1514973640441895
    6. ' ,' → logprob: -4.1514973640441895
    7. ' ' → logprob: -4.2764973640441895
    8. ')' → logprob: -4.6514973640441895
    9. 'def' → logprob: -4.7764973640441895
    10. ''' → logprob: -4.9014973640441895

Token 83: '.
' (ID: 558)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006776000373065472
    2. ',' → logprob: -6.756775856018066
    3. 'def' → logprob: -6.881775856018066
    4. ':' → logprob: -7.256775856018066
    5. ' ,' → logprob: -7.756775856018066
    6. ')' → logprob: -8.131775856018066
    7. 'import' → logprob: -8.131775856018066
    8. '_' → logprob: -8.131775856018066
    9. ' def' → logprob: -8.381775856018066
    10. 'n' → logprob: -8.381775856018066

Token 84: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013495481573045254
    2. 'import' → logprob: -5.888495445251465
    3. ':' → logprob: -6.388495445251465
    4. 'def' → logprob: -6.513495445251465
    5. '<|end|>' → logprob: -6.513495445251465
    6. ',' → logprob: -7.013495445251465
    7. '
' → logprob: -7.138495445251465
    8. '#' → logprob: -7.388495445251465
    9. '_' → logprob: -7.638495445251465
    10. '[' → logprob: -8.138495445251465

Token 85: ' On' (ID: 2160)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007571961265057325
    2. 'def' → logprob: -6.382572174072266
    3. 'import' → logprob: -6.757572174072266
    4. '#' → logprob: -7.257572174072266
    5. ',' → logprob: -7.757572174072266
    6. '[' → logprob: -7.882572174072266
    7. ')' → logprob: -8.007572174072266
    8. 'n' → logprob: -8.132572174072266
    9. 'from' → logprob: -8.257572174072266
    10. 's' → logprob: -8.507572174072266

Token 86: ' compte' (ID: 19657)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0394514799118042
    2. ' ' → logprob: -2.0394515991210938
    3. ' from' → logprob: -2.6644515991210938
    4. '_' → logprob: -2.6644515991210938
    5. ''' → logprob: -2.9144515991210938
    6. '#' → logprob: -2.9144515991210938
    7. '=' → logprob: -3.9144515991210938
    8. 'import' → logprob: -3.9144515991210938
    9. ')' → logprob: -4.039451599121094
    10. 's' → logprob: -4.414451599121094

Token 87: ' donc' (ID: 14206)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6782124042510986
    2. ' les' → logprob: -0.9282124042510986
    3. ' le' → logprob: -3.6782124042510986
    4. 'les' → logprob: -3.6782124042510986
    5. ' l' → logprob: -4.9282121658325195
    6. 'l' → logprob: -5.3032121658325195
    7. '  ' → logprob: -5.8032121658325195
    8. ',' → logprob: -5.8032121658325195
    9. '_' → logprob: -6.0532121658325195
    10. '```' → logprob: -6.0532121658325195

Token 88: ' les' (ID: 1341)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.7244269251823425
    2. ' les' → logprob: -0.7244269251823425
    3. 'les' → logprob: -4.099426746368408
    4. 'le' → logprob: -5.474426746368408
    5. ' ' → logprob: -5.599426746368408
    6. ' des' → logprob: -5.974426746368408
    7. ' la' → logprob: -6.724426746368408
    8. 'l' → logprob: -6.849426746368408
    9. ' l' → logprob: -7.599426746368408
    10. ' combien' → logprob: -8.474427223205566

Token 89: ' comb' (ID: 4134)
  Prédit: ' comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.027220673859119415
    2. 'com' → logprob: -5.277220726013184
    3. 'comb' → logprob: -5.402220726013184
    4. ' combinations' → logprob: -5.902220726013184
    5. ' ' → logprob: -6.027220726013184
    6. ' façons' → logprob: -6.027220726013184
    7. ' arrangements' → logprob: -6.777220726013184
    8. ' multis' → logprob: -6.902220726013184
    9. ' nombres' → logprob: -6.902220726013184
    10. ' c' → logprob: -7.152220726013184

Token 90: 'inais' (ID: 42744)
  Prédit: 'inais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.05040273442864418
    2. 'ina' → logprob: -3.4254026412963867
    3. 'in' → logprob: -4.425402641296387
    4. 'inas' → logprob: -6.050402641296387
    5. 'i' → logprob: -6.925402641296387
    6. 'is' → logprob: -7.925402641296387
    7. 'inations' → logprob: -8.925402641296387
    8. 'b' → logprob: -9.050402641296387
    9. '_' → logprob: -9.675402641296387
    10. 'n' → logprob: -9.675402641296387

Token 91: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.006872490979731083
    2. 'asons' → logprob: -5.631872653961182
    3. 'ais' → logprob: -6.631872653961182
    4. '#' → logprob: -7.131872653961182
    5. 'a' → logprob: -7.381872653961182
    6. 'sons' → logprob: -8.381872177124023
    7. '##' → logprob: -10.381872177124023
    8. '{}' → logprob: -10.381872177124023
    9. '\' → logprob: -10.631872177124023
    10. '@' → logprob: -11.256872177124023

Token 92: ' avec' (ID: 3937)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18756987154483795
    2. 'def' → logprob: -2.8125698566436768
    3. '_' → logprob: -3.5625698566436768
    4. ',' → logprob: -3.8125698566436768
    5. 's' → logprob: -4.187570095062256
    6. ')' → logprob: -4.562570095062256
    7. ':' → logprob: -4.937570095062256
    8. '#' → logprob: -5.687570095062256
    9. 'import' → logprob: -5.937570095062256
    10. '(' → logprob: -5.937570095062256

Token 93: ' répét' (ID: 156936)
  Prédit: ' remplacement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remplacement' → logprob: -0.9646677374839783
    2. ' répét' → logprob: -1.214667797088623
    3. ' replacement' → logprob: -2.214667797088623
    4. ' rép' → logprob: -2.589667797088623
    5. 'rem' → logprob: -3.089667797088623
    6. 'replacement' → logprob: -3.464667797088623
    7. ' repetition' → logprob: -3.964667797088623
    8. ' remise' → logprob: -4.464667797088623
    9. ' rem' → logprob: -5.089667797088623
    10. 'r' → logprob: -5.089667797088623

Token 94: 'ition' (ID: 868)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7310469150543213
    2. 'é' → logprob: -1.7310469150543213
    3. 'ation' → logprob: -2.2310469150543213
    4. 'ition' → logprob: -2.2310469150543213
    5. 'es' → logprob: -3.7310469150543213
    6. 't' → logprob: -3.8560469150543213
    7. 'a' → logprob: -4.106046676635742
    8. 'tion' → logprob: -4.481046676635742
    9. 'et' → logprob: -4.606046676635742
    10. 'r' → logprob: -5.106046676635742

Token 95: ' sous' (ID: 14487)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02018328756093979
    2. 'import' → logprob: -5.145183086395264
    3. '<|end|>' → logprob: -5.520183086395264
    4. '#' → logprob: -6.395183086395264
    5. '[' → logprob: -6.395183086395264
    6. 'def' → logprob: -6.645183086395264
    7. 'from' → logprob: -7.020183086395264
    8. 'n' → logprob: -7.520183086395264
    9. ')' → logprob: -7.770183086395264
    10. ' import' → logprob: -8.145183563232422

Token 96: ' contr' (ID: 6030)
  Prédit: ' contraintes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' contraintes' → logprob: -0.13632787764072418
    2. ' la' → logprob: -3.1363279819488525
    3. '<|end|>' → logprob: -4.636327743530273
    4. 'constraints' → logprob: -4.761327743530273
    5. ' forme' → logprob: -5.011327743530273
    6. 'n' → logprob: -5.136327743530273
    7. ' n' → logprob: -5.261327743530273
    8. ' les' → logprob: -5.511327743530273
    9. 's' → logprob: -5.511327743530273
    10. ' constraint' → logprob: -5.761327743530273

Token 97: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.0032664805185049772
    2. 'a' → logprob: -6.003266334533691
    3. 'aint' → logprob: -7.378266334533691
    4. '#' → logprob: -10.503266334533691
    5. '\' → logprob: -10.753266334533691
    6. 'aine' → logprob: -11.003266334533691
    7. '*' → logprob: -11.378266334533691
    8. 'ain' → logprob: -11.378266334533691
    9. 'aints' → logprob: -11.503266334533691
    10. 'ôle' → logprob: -12.253266334533691

Token 98: '.

' (ID: 364)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0058645629324018955
    2. '<|end|>' → logprob: -6.38086462020874
    3. 'import' → logprob: -6.75586462020874
    4. '[' → logprob: -7.13086462020874
    5. '#' → logprob: -8.005864143371582
    6. ':' → logprob: -8.130864143371582
    7. 'def' → logprob: -8.380864143371582
    8. '_' → logprob: -8.880864143371582
    9. 'n' → logprob: -9.130864143371582
    10. ' 
' → logprob: -9.255864143371582

Token 99: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17959101498126984
    2. 'def' → logprob: -2.429590940475464
    3. '#' → logprob: -3.304590940475464
    4. 'from' → logprob: -4.429591178894043
    5. 'd' → logprob: -4.679591178894043
    6. 'import' → logprob: -5.179591178894043
    7. ',' → logprob: -6.429591178894043
    8. ')' → logprob: -6.679591178894043
    9. ':' → logprob: -6.804591178894043
    10. 'f' → logprob: -6.929591178894043

Token 100: ' La' (ID: 3038)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15044519305229187
    2. 'def' → logprob: -2.7754452228546143
    3. 'from' → logprob: -3.6504452228546143
    4. '#' → logprob: -4.275444984436035
    5. 'd' → logprob: -4.400444984436035
    6. 'import' → logprob: -4.775444984436035
    7. 'f' → logprob: -5.275444984436035
    8. ' from' → logprob: -5.900444984436035
    9. '(' → logprob: -6.025444984436035
    10. ' def' → logprob: -6.650444984436035

Token 101: ' condition' (ID: 7060)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.245209813117981
    2. 'from' → logprob: -1.495209813117981
    3. ' suite' → logprob: -1.745209813117981
    4. 'import' → logprob: -2.6202096939086914
    5. ' from' → logprob: -3.1202096939086914
    6. 's' → logprob: -3.4952096939086914
    7. 'def' → logprob: -3.6202096939086914
    8. ' import' → logprob: -3.7452096939086914
    9. ' prochaine' → logprob: -3.7452096939086914
    10. ' ' → logprob: -4.245209693908691

Token 102: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25160250067710876
    2. 's' → logprob: -2.2516024112701416
    3. ' =' → logprob: -3.6266024112701416
    4. '  ' → logprob: -4.126602649688721
    5. ' s' → logprob: -4.126602649688721
    6. ' m' → logprob: -4.126602649688721
    7. ' :' → logprob: -4.501602649688721
    8. '<|end|>' → logprob: -4.876602649688721
    9. ' ,' → logprob: -5.626602649688721
    10. ':' → logprob: -5.751602649688721

Token 103: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7143979668617249
    2. ' de' → logprob: -2.21439790725708
    3. ' =' → logprob: -2.58939790725708
    4. ' d' → logprob: -2.71439790725708
    5. 'est' → logprob: -2.83939790725708
    6. 'd' → logprob: -3.21439790725708
    7. 'de' → logprob: -3.21439790725708
    8. ':' → logprob: -3.33939790725708
    9. ' ' → logprob: -3.58939790725708
    10. 'm' → logprob: -4.33939790725708

Token 104: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.033837947994470596
    2. '<=' → logprob: -3.7838380336761475
    3. ' ' → logprob: -4.908837795257568
    4. ' <' → logprob: -6.783837795257568
    5. ' ≤' → logprob: -7.658837795257568
    6. ' =' → logprob: -7.783837795257568
    7. '=' → logprob: -7.908837795257568
    8. '<' → logprob: -9.283838272094727
    9. ' ' → logprob: -9.783838272094727
    10. ' #' → logprob: -9.783838272094727

Token 105: ' m' (ID: 284)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -1.360943078994751
    2. ' m' → logprob: -1.485943078994751
    3. 'r' → logprob: -1.610943078994751
    4. 'm' → logprob: -2.110943078994751
    5. ' x' → logprob: -2.985943078994751
    6. 'x' → logprob: -3.235943078994751
    7. ' i' → logprob: -3.360943078994751
    8. ' k' → logprob: -3.735943078994751
    9. 'k' → logprob: -3.860943078994751
    10. 'i' → logprob: -4.110942840576172

Token 106: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.10074453800916672
    2. '<=' → logprob: -2.6007444858551025
    3. '*' → logprob: -4.975744724273682
    4. ' *' → logprob: -5.225744724273682
    5. '<|end|>' → logprob: -5.600744724273682
    6. ' <' → logprob: -6.225744724273682
    7. ' ' → logprob: -6.475744724273682
    8. ' ≤' → logprob: -7.225744724273682
    9. '<' → logprob: -8.225744247436523
    10. ' ' → logprob: -8.475744247436523

Token 107: ' n' (ID: 297)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7809687852859497
    2. 'r' → logprob: -1.0309687852859497
    3. ' r' → logprob: -2.15596866607666
    4. 'n' → logprob: -3.40596866607666
    5. '=r' → logprob: -3.78096866607666
    6. ' n' → logprob: -4.90596866607666
    7. '=n' → logprob: -5.15596866607666
    8. ' =' → logprob: -9.40596866607666
    9. '=m' → logprob: -9.53096866607666
    10. 'm' → logprob: -9.53096866607666

Token 108: ' <=' (ID: 5017)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.885737419128418
    2. ' ' → logprob: -1.260737419128418
    3. ',' → logprob: -2.260737419128418
    4. ' and' → logprob: -2.510737419128418
    5. '.' → logprob: -3.760737419128418
    6. '
' → logprob: -3.885737419128418
    7. ' :' → logprob: -4.510737419128418
    8. '

' → logprob: -5.010737419128418
    9. ' ,' → logprob: -5.135737419128418
    10. 'n' → logprob: -5.135737419128418

Token 109: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.35586830973625183
    2. ' ' → logprob: -1.7308683395385742
    3. ' r' → logprob: -3.355868339538574
    4. '10' → logprob: -3.480868339538574
    5. '=' → logprob: -3.855868339538574
    6. '100' → logprob: -3.855868339538574
    7. '20' → logprob: -4.980868339538574
    8. '=r' → logprob: -6.730868339538574
    9. '=sys' → logprob: -6.980868339538574
    10. 'n' → logprob: -6.980868339538574

Token 110: ' <=' (ID: 5017)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45039406418800354
    2. ' ' → logprob: -1.5753940343856812
    3. ' :' → logprob: -2.0753941535949707
    4. '
' → logprob: -4.950394153594971
    5. ' :
' → logprob: -5.950394153594971
    6. '<|end|>' → logprob: -5.950394153594971
    7. ',' → logprob: -6.200394153594971
    8. '  ' → logprob: -6.325394153594971
    9. 'n' → logprob: -6.325394153594971
    10. ' ,' → logprob: -6.700394153594971

Token 111: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.25281333923339844
    2. ' ' → logprob: -2.2528133392333984
    3. '100' → logprob: -2.2528133392333984
    4. '0' → logprob: -4.752813339233398
    5. 'r' → logprob: -6.502813339233398
    6. '<|end|>' → logprob: -7.002813339233398
    7. 'n' → logprob: -7.377813339233398
    8. '1' → logprob: -7.752813339233398
    9. '20' → logprob: -7.877813339233398
    10. '50' → logprob: -8.127813339233398

Token 112: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.23269221186637878
    2. '100' → logprob: -1.6076922416687012
    3. ' ' → logprob: -5.482692241668701
    4. '50' → logprob: -6.732692241668701
    5. '20' → logprob: -7.732692241668701
    6. '0' → logprob: -7.857692241668701
    7. 'int' → logprob: -7.982692241668701
    8. '200' → logprob: -8.482691764831543
    9. '1' → logprob: -8.732691764831543
    10. '500' → logprob: -9.232691764831543

Token 113: '00' (ID: 504)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13998356461524963
    2. ':' → logprob: -2.514983654022217
    3. '
' → logprob: -4.139983654022217
    4. ' :' → logprob: -5.139983654022217
    5. 'import' → logprob: -5.264983654022217
    6. ' 
' → logprob: -5.639983654022217
    7. 'def' → logprob: -5.639983654022217
    8. 'n' → logprob: -5.764983654022217
    9. ',' → logprob: -6.014983654022217
    10. '#' → logprob: -6.389983654022217

Token 114: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006259493064135313
    2. '<|end|>' → logprob: -6.506259441375732
    3. ' 
' → logprob: -7.131259441375732
    4. '0' → logprob: -7.631259441375732
    5. '
' → logprob: -7.631259441375732
    6. 'n' → logprob: -7.631259441375732
    7. 'def' → logprob: -8.00625991821289
    8. ')' → logprob: -8.38125991821289
    9. '#' → logprob: -8.38125991821289
    10. '  ' → logprob: -8.50625991821289

Token 115: ' donnée' (ID: 130126)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.43559035658836365
    2. ' not' → logprob: -1.810590386390686
    3. ' respect' → logprob: -2.8105902671813965
    4. ' ' → logprob: -3.6855902671813965
    5. ' a' → logprob: -3.6855902671813965
    6. ' False' → logprob: -3.9355902671813965
    7. 'True' → logprob: -4.9355902671813965
    8. 'not' → logprob: -5.3105902671813965
    9. ' rarement' → logprob: -5.3105902671813965
    10. ' "' → logprob: -5.6855902671813965

Token 116: '.

' (ID: 364)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07919523119926453
    2. 'import' → logprob: -3.079195261001587
    3. '#' → logprob: -4.454195022583008
    4. 'from' → logprob: -4.829195022583008
    5. 'def' → logprob: -5.204195022583008
    6. '1' → logprob: -7.329195022583008
    7. 'n' → logprob: -7.579195022583008
    8. '0' → logprob: -7.704195022583008
    9. '
' → logprob: -7.829195022583008
    10. ' from' → logprob: -7.954195022583008

Token 117: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0059310514479875565
    2. '#' → logprob: -6.2559309005737305
    3. ' 
' → logprob: -6.7559309005737305
    4. 'def' → logprob: -7.1309309005737305
    5. 'import' → logprob: -7.6309309005737305
    6. 'from' → logprob: -8.00593090057373
    7. 'd' → logprob: -8.50593090057373
    8. 'n' → logprob: -9.00593090057373
    9. ' 

' → logprob: -9.00593090057373
    10. '(' → logprob: -9.13093090057373

Token 118: ' On' (ID: 2160)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.020415173843503
    2. 'from' → logprob: -5.020415306091309
    3. 'def' → logprob: -5.520415306091309
    4. '(' → logprob: -6.145415306091309
    5. '#' → logprob: -6.395415306091309
    6. 'import' → logprob: -6.520415306091309
    7. '[' → logprob: -6.520415306091309
    8. ' from' → logprob: -7.270415306091309
    9. ' (' → logprob: -7.770415306091309
    10. 'n' → logprob: -8.145415306091309

Token 119: ' cherche' (ID: 52345)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -1.480178952217102
    2. 'from' → logprob: -1.480178952217102
    3. ' def' → logprob: -1.605178952217102
    4. 'def' → logprob: -1.730178952217102
    5. ' import' → logprob: -2.6051788330078125
    6. ' vais' → logprob: -3.8551788330078125
    7. ' peux' → logprob: -4.4801788330078125
    8. 'import' → logprob: -4.6051788330078125
    9. ' continue' → logprob: -5.2301788330078125
    10. ' math' → logprob: -5.2301788330078125

Token 120: ' le' (ID: 505)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.43595123291015625
    2. ' ' → logprob: -1.3109512329101562
    3. 'à' → logprob: -3.0609512329101562
    4. 'def' → logprob: -4.435951232910156
    5. ' a' → logprob: -5.185951232910156
    6. ' to' → logprob: -5.685951232910156
    7. 'a' → logprob: -6.685951232910156
    8. ' la' → logprob: -6.685951232910156
    9. '<|end|>' → logprob: -6.810951232910156
    10. ' =' → logprob: -6.935951232910156

Token 121: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.011101936921477318
    2. 'nombre' → logprob: -5.011101722717285
    3. ' nombres' → logprob: -7.011101722717285
    4. ' ' → logprob: -7.136101722717285
    5. 's' → logprob: -7.386101722717285
    6. ' #' → logprob: -7.761101722717285
    7. ' number' → logprob: -8.886101722717285
    8. ' code' → logprob: -9.011101722717285
    9. ' maximum' → logprob: -9.136101722717285
    10. ' total' → logprob: -9.136101722717285

Token 122: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ' solutions' (ID: 9368)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.25466829538345337
    2. ' façons' → logprob: -1.8796682357788086
    3. ' ways' → logprob: -3.6296682357788086
    4. '<|end|>' → logprob: -4.254668235778809
    5. 's' → logprob: -5.004668235778809
    6. 'com' → logprob: -5.129668235778809
    7. ' combinations' → logprob: -5.254668235778809
    8. ' man' → logprob: -6.004668235778809
    9. ' ' → logprob: -6.129668235778809
    10. ' moyens' → logprob: -6.504668235778809

Token 124: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1051485538482666
    2. '_' → logprob: -3.7301485538482666
    3. ' =' → logprob: -3.7301485538482666
    4. ' _' → logprob: -3.7301485538482666
    5. '<|end|>' → logprob: -4.3551483154296875
    6. '  ' → logprob: -5.1051483154296875
    7. ' ,' → logprob: -5.8551483154296875
    8. '=' → logprob: -6.4801483154296875
    9. ' ▁' → logprob: -7.4801483154296875
    10. 's' → logprob: -7.6051483154296875

Token 125: 'ières' (ID: 44864)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.272684246301651
    2. ' =' → logprob: -1.6476842164993286
    3. 'ières' → logprob: -3.397684335708618
    4. 's' → logprob: -6.647684097290039
    5. 'e' → logprob: -6.772684097290039
    6. ' à' → logprob: -6.772684097290039
    7. 'r' → logprob: -7.022684097290039
    8. 'à' → logprob: -7.397684097290039
    9. 'riques' → logprob: -7.522684097290039
    10. ',' → logprob: -7.647684097290039

Token 126: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: 'x' (ID: 87)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4524971842765808
    2. 'x' → logprob: -1.0774972438812256
    3. ')' → logprob: -4.5774970054626465
    4. 'a' → logprob: -5.3274970054626465
    5. ' a' → logprob: -5.9524970054626465
    6. ' )' → logprob: -6.2024970054626465
    7. ' ' → logprob: -6.4524970054626465
    8. 's' → logprob: -7.8274970054626465
    9. ' (' → logprob: -8.077497482299805
    10. ' s' → logprob: -8.452497482299805

Token 128: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6125491261482239
    2. '_i' → logprob: -1.237549066543579
    3. ' _' → logprob: -2.987549066543579
    4. ' ' → logprob: -3.362549066543579
    5. '1' → logprob: -3.487549066543579
    6. 'i' → logprob: -3.737549066543579
    7. ' i' → logprob: -5.237549304962158
    8. ' ,' → logprob: -5.862549304962158
    9. '0' → logprob: -5.862549304962158
    10. ' =' → logprob: -5.987549304962158

Token 129: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.784758985042572
    2. '_i' → logprob: -1.4097590446472168
    3. '_' → logprob: -2.034759044647217
    4. '1' → logprob: -2.159759044647217
    5. '0' → logprob: -3.909759044647217
    6. ' i' → logprob: -4.784759044647217
    7. ' ' → logprob: -5.284759044647217
    8. ')' → logprob: -5.409759044647217
    9. '[' → logprob: -5.534759044647217
    10. '```' → logprob: -5.784759044647217

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09366640448570251
    2. ' ,' → logprob: -2.4686663150787354
    3. ',...' → logprob: -5.4686665534973145
    4. ',x' → logprob: -7.7186665534973145
    5. ',
' → logprob: -11.468666076660156
    6. ',…' → logprob: -11.718666076660156
    7. '=' → logprob: -11.843666076660156
    8. '...' → logprob: -11.968666076660156
    9. '>=' → logprob: -11.968666076660156
    10. '≥' → logprob: -12.593666076660156

Token 131: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09898503869771957
    2. ' x' → logprob: -2.848984956741333
    3. '...' → logprob: -3.848984956741333
    4. ',' → logprob: -5.223985195159912
    5. '<|end|>' → logprob: -5.348985195159912
    6. '...,' → logprob: -6.223985195159912
    7. ' ' → logprob: -7.098985195159912
    8. ' ,' → logprob: -7.098985195159912
    9. ',...' → logprob: -7.223985195159912
    10. ' ...' → logprob: -8.473984718322754

Token 132: '_' (ID: 62)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15276426076889038
    2. '1' → logprob: -2.777764320373535
    3. ',...' → logprob: -3.027764320373535
    4. '_' → logprob: -4.027764320373535
    5. ' ,' → logprob: -4.652764320373535
    6. ',x' → logprob: -6.402764320373535
    7. ' ' → logprob: -7.527764320373535
    8. '_,' → logprob: -7.652764320373535
    9. '<|end|>' → logprob: -7.652764320373535
    10. 'x' → logprob: -8.652764320373535

Token 133: '2' (ID: 17)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6559882164001465
    2. ',...' → logprob: -0.9059882164001465
    3. '1' → logprob: -2.7809882164001465
    4. ' ,' → logprob: -5.0309882164001465
    5. '_' → logprob: -5.6559882164001465
    6. '...' → logprob: -5.6559882164001465
    7. ')' → logprob: -7.5309882164001465
    8. ',
' → logprob: -8.405988693237305
    9. '...,' → logprob: -8.780988693237305
    10. ' ' → logprob: -8.905988693237305

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025341875851154327
    2. ',...' → logprob: -3.9003419876098633
    3. ' ,' → logprob: -5.525341987609863
    4. ')' → logprob: -7.275341987609863
    5. ',x' → logprob: -9.650341987609863
    6. '...' → logprob: -11.150341987609863
    7. ',…' → logprob: -11.400341987609863
    8. '...,' → logprob: -12.025341987609863
    9. '),' → logprob: -12.400341987609863
    10. ' ' → logprob: -12.650341987609863

Token 135: ' ...,' (ID: 126708)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5248458385467529
    2. 'x' → logprob: -1.524845838546753
    3. '...,' → logprob: -2.024845838546753
    4. '...' → logprob: -3.149845838546753
    5. ' ...,' → logprob: -4.399846076965332
    6. ' ...' → logprob: -6.149846076965332
    7. ' ' → logprob: -7.524846076965332
    8. '<|end|>' → logprob: -8.149846076965332
    9. '…' → logprob: -8.524846076965332
    10. ' ,' → logprob: -9.149846076965332

Token 136: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6334301829338074
    2. ' x' → logprob: -0.7584301829338074
    3. '<|end|>' → logprob: -8.383430480957031
    4. 'xn' → logprob: -9.133430480957031
    5. 'n' → logprob: -9.258430480957031
    6. ' n' → logprob: -9.383430480957031
    7. ',' → logprob: -9.383430480957031
    8. ' ' → logprob: -9.758430480957031
    9. '_n' → logprob: -10.008430480957031
    10. ' ,' → logprob: -10.258430480957031

Token 137: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.13730329275131226
    2. ')' → logprob: -2.512303352355957
    3. 'n' → logprob: -3.137303352355957
    4. '_' → logprob: -6.762303352355957
    5. '_r' → logprob: -7.137303352355957
    6. ' n' → logprob: -7.387303352355957
    7. ')n' → logprob: -7.887303352355957
    8. ')_' → logprob: -8.137303352355957
    9. ' )' → logprob: -8.387303352355957
    10. 'r' → logprob: -9.137303352355957

Token 138: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005282493657432497
    2. ' )' → logprob: -7.625528335571289
    3. ')>=' → logprob: -10.625528335571289
    4. '>=' → logprob: -12.750528335571289
    5. ' ' → logprob: -13.000528335571289
    6. '):' → logprob: -13.000528335571289
    7. '
' → logprob: -13.500528335571289
    8. '≥' → logprob: -13.625528335571289
    9. ')
' → logprob: -13.750528335571289
    10. '```' → logprob: -14.125528335571289

Token 139: ' telles' (ID: 83154)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 140: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.08660118281841278
    2. 'que' → logprob: -2.5866012573242188
    3. 'that' → logprob: -5.711601257324219
    4. ' that' → logprob: -5.961601257324219
    5. ' ' → logprob: -7.086601257324219
    6. '_that' → logprob: -8.086601257324219
    7. '=' → logprob: -9.211601257324219
    8. '(' → logprob: -9.586601257324219
    9. ' ce' → logprob: -9.836601257324219
    10. '<|end|>' → logprob: -10.211601257324219

Token 141: ' :
' (ID: 10039)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.053547460585832596
    2. ' x' → logprob: -3.8035473823547363
    3. '<|end|>' → logprob: -3.9285473823547363
    4. ' ' → logprob: -4.678547382354736
    5. ' all' → logprob: -8.178547859191895
    6. 'all' → logprob: -8.428547859191895
    7. ' 
' → logprob: -8.928547859191895
    8. '0' → logprob: -10.553547859191895
    9. '(x' → logprob: -10.553547859191895
    10. '  
' → logprob: -10.553547859191895

Token 142: '#' (ID: 2)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8544855713844299
    2. ' ' → logprob: -0.9794855713844299
    3. ' x' → logprob: -1.9794855117797852
    4. '<|end|>' → logprob: -2.854485511779785
    5. '(x' → logprob: -6.854485511779785
    6. ' (' → logprob: -6.979485511779785
    7. 'n' → logprob: -8.104485511779785
    8. ')' → logprob: -8.854485511779785
    9. ' 
' → logprob: -9.104485511779785
    10. ' n' → logprob: -9.229485511779785

Token 143: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.026840100064873695
    2. ' x' → logprob: -3.6518402099609375
    3. 'all' → logprob: -8.651840209960938
    4. '<|end|>' → logprob: -8.776840209960938
    5. ' ' → logprob: -9.526840209960938
    6. ' all' → logprob: -9.776840209960938
    7. '(x' → logprob: -10.651840209960938
    8. '```' → logprob: -10.901840209960938
    9. ' 
' → logprob: -11.651840209960938
    10. '0' → logprob: -12.026840209960938

Token 144: '_i' (ID: 10853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0029855482280254364
    2. '1' → logprob: -6.25298547744751
    3. ' _' → logprob: -7.00298547744751
    4. '_i' → logprob: -9.002985954284668
    5. ' ' → logprob: -11.377985954284668
    6. '_
' → logprob: -12.627985954284668
    7. '\xe2\x82' → logprob: -13.127985954284668
    8. 'i' → logprob: -13.377985954284668
    9. '[' → logprob: -13.502985954284668
    10. '
' → logprob: -14.252985954284668

Token 145: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.005594564601778984
    2. '>=' → logprob: -5.255594730377197
    3. ' ' → logprob: -8.630594253540039
    4. ' ≥' → logprob: -9.380594253540039
    5. ' ' → logprob: -10.505594253540039
    6. '[' → logprob: -10.505594253540039
    7. ')>=' → logprob: -11.755594253540039
    8. ']>=' → logprob: -12.005594253540039
    9. '≥' → logprob: -12.380594253540039
    10. ' >=",' → logprob: -12.755594253540039

Token 146: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.006715728435665369
    2. ' m' → logprob: -5.006715774536133
    3. '0' → logprob: -16.131715774536133
    4. '```' → logprob: -16.381715774536133
    5. '	m' → logprob: -16.631715774536133
    6. '`' → logprob: -16.631715774536133
    7. '_m' → logprob: -17.631715774536133
    8. ' ' → logprob: -17.631715774536133
    9. 'r' → logprob: -18.006715774536133
    10. '<|end|>' → logprob: -18.131715774536133

Token 147: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02631295472383499
    2. '<|end|>' → logprob: -4.401312828063965
    3. ' ,' → logprob: -4.901312828063965
    4. ',' → logprob: -5.776312828063965
    5. '  ' → logprob: -6.651312828063965
    6. ' and' → logprob: -7.401312828063965
    7. ' ' → logprob: -8.401312828063965
    8. '```' → logprob: -8.901312828063965
    9. 's' → logprob: -9.276312828063965
    10. ' (' → logprob: -9.276312828063965

Token 148: ' tout' (ID: 5501)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26859548687934875
    2. ' i' → logprob: -2.3935954570770264
    3. ' all' → logprob: -2.8935954570770264
    4. '0' → logprob: -2.8935954570770264
    5. 'i' → logprob: -4.0185956954956055
    6. ' chaque' → logprob: -5.1435956954956055
    7. 'all' → logprob: -5.2685956954956055
    8. '1' → logprob: -6.0185956954956055
    9. 't' → logprob: -7.6435956954956055
    10. ' each' → logprob: -7.7685956954956055

Token 149: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07899785041809082
    2. 'i' → logprob: -2.578997850418091
    3. ' ' → logprob: -9.828997611999512
    4. '_i' → logprob: -9.953997611999512
    5. '	i' → logprob: -13.203997611999512
    6. '_' → logprob: -13.453997611999512
    7. ' _' → logprob: -13.578997611999512
    8. '<|end|>' → logprob: -14.078997611999512
    9. ' ' → logprob: -14.578997611999512
    10. '1' → logprob: -14.953997611999512

Token 150: ' dans' (ID: 2671)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.08042466640472412
    2. 'range' → logprob: -2.5804247856140137
    3. '[' → logprob: -6.580424785614014
    4. ' [' → logprob: -9.080424308776855
    5. '{' → logprob: -11.330424308776855
    6. ' {' → logprob: -11.705424308776855
    7. '(range' → logprob: -12.580424308776855
    8. '	range' → logprob: -12.830424308776855
    9. ' ' → logprob: -13.080424308776855
    10. ' ' → logprob: -13.705424308776855

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009304316714406013
    2. ' ' → logprob: -4.759304523468018
    3. '0' → logprob: -8.13430404663086
    4. ' n' → logprob: -8.50930404663086
    5. 'n' → logprob: -8.63430404663086
    6. ',' → logprob: -11.63430404663086
    7. ' ,' → logprob: -12.38430404663086
    8. ',n' → logprob: -13.38430404663086
    9. ' range' → logprob: -14.00930404663086
    10. 'range' → logprob: -14.63430404663086

Token 153: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10305894166231155
    2. ' ,' → logprob: -2.8530590534210205
    3. ',n' → logprob: -3.2280590534210205
    4. ' ' → logprob: -7.728058815002441
    5. 'n' → logprob: -9.728058815002441
    6. ' n' → logprob: -9.853058815002441
    7. '...' → logprob: -10.603058815002441
    8. ',
' → logprob: -12.103058815002441
    9. ';n' → logprob: -12.103058815002441
    10. '<|end|>' → logprob: -12.103058815002441

Token 154: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.029757777228951454
    2. ' n' → logprob: -3.5297577381134033
    3. ' ' → logprob: -12.279757499694824
    4. '<|end|>' → logprob: -13.654757499694824
    5. '	n' → logprob: -14.279757499694824
    6. '_n' → logprob: -15.279757499694824
    7. ',' → logprob: -15.529757499694824
    8. ',n' → logprob: -15.779757499694824
    9. '
' → logprob: -16.02975845336914
    10. ']' → logprob: -16.77975845336914

Token 155: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016547000035643578
    2. '],' → logprob: -4.266547203063965
    3. ' ]' → logprob: -6.141547203063965
    4. ',' → logprob: -9.516547203063965
    5. ' ],' → logprob: -9.641547203063965
    6. ']
' → logprob: -9.766547203063965
    7. '])' → logprob: -12.141547203063965
    8. ']:' → logprob: -12.516547203063965
    9. '],
' → logprob: -12.641547203063965
    10. ']

' → logprob: -12.766547203063965

Token 156: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2075291872024536
    2. ' x' → logprob: -1.3325291872024536
    3. 'x' → logprob: -1.4575291872024536
    4. ' and' → logprob: -3.082529067993164
    5. ' n' → logprob: -3.332529067993164
    6. ',' → logprob: -3.332529067993164
    7. 'n' → logprob: -3.957529067993164
    8. ' 
' → logprob: -4.207529067993164
    9. ' ,' → logprob: -4.457529067993164
    10. '  ' → logprob: -5.457529067993164

Token 157: ' sum' (ID: 4215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5150454640388489
    2. ' x' → logprob: -1.765045404434204
    3. '<|end|>' → logprob: -1.890045404434204
    4. 'x' → logprob: -3.140045404434204
    5. ' n' → logprob: -4.015045642852783
    6. '0' → logprob: -5.265045642852783
    7. 'r' → logprob: -5.640045642852783
    8. 'n' → logprob: -5.890045642852783
    9. ' r' → logprob: -6.015045642852783
    10. '  ' → logprob: -7.140045642852783

Token 158: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.13687288761138916
    2. '(' → logprob: -2.2618727684020996
    3. '_' → logprob: -4.5118727684021
    4. '(i' → logprob: -5.1368727684021
    5. 'x' → logprob: -5.2618727684021
    6. ' (' → logprob: -7.2618727684021
    7. '=' → logprob: -7.7618727684021
    8. '_i' → logprob: -8.386873245239258
    9. '(
' → logprob: -9.886873245239258
    10. ' x' → logprob: -10.011873245239258

Token 159: '_i' (ID: 10853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3023023009300232
    2. '=' → logprob: -2.177302360534668
    3. '_i' → logprob: -2.177302360534668
    4. ' =' → logprob: -3.677302360534668
    5. '_=' → logprob: -5.052302360534668
    6. 'i' → logprob: -7.052302360534668
    7. ' _' → logprob: -7.677302360534668
    8. '(' → logprob: -8.177302360534668
    9. ' i' → logprob: -8.802302360534668
    10. '_{' → logprob: -8.802302360534668

Token 160: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.256266713142395
    2. ' =' → logprob: -1.881266713142395
    3. '=' → logprob: -2.7562665939331055
    4. '==' → logprob: -4.7562665939331055
    5. ' ' → logprob: -6.7562665939331055
    6. ' <=' → logprob: -8.881266593933105
    7. ')' → logprob: -10.006266593933105
    8. 's' → logprob: -10.131266593933105
    9. ' ===' → logprob: -10.506266593933105
    10. '  ' → logprob: -10.631266593933105

Token 161: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.4740784466266632
    2. 'r' → logprob: -0.9740784168243408
    3. ' ' → logprob: -14.099078178405762
    4. '	r' → logprob: -15.224078178405762
    5. '```' → logprob: -15.724078178405762
    6. '_r' → logprob: -16.224079132080078
    7. '<|end|>' → logprob: -16.974079132080078
    8. ' ' → logprob: -16.974079132080078
    9. '[r' → logprob: -17.224079132080078
    10. '   ' → logprob: -17.474079132080078

Token 162: '

' (ID: 279)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7395955920219421
    2. 'x' → logprob: -1.864595651626587
    3. '[' → logprob: -2.489595651626587
    4. ':' → logprob: -2.614595651626587
    5. ')' → logprob: -3.489595651626587
    6. '#' → logprob: -3.614595651626587
    7. '
' → logprob: -3.864595651626587
    8. 'n' → logprob: -3.864595651626587
    9. ',' → logprob: -4.364595413208008
    10. 'def' → logprob: -4.364595413208008

Token 163: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23146620392799377
    2. 'x' → logprob: -1.9814661741256714
    3. '0' → logprob: -4.356466293334961
    4. 'n' → logprob: -4.481466293334961
    5. '#' → logprob: -4.731466293334961
    6. '[' → logprob: -4.856466293334961
    7. '-' → logprob: -5.731466293334961
    8. '(' → logprob: -5.856466293334961
    9. ' (' → logprob: -5.856466293334961
    10. '<|end|>' → logprob: -6.231466293334961

Token 164: ' En' (ID: 2130)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7312306761741638
    2. 'from' → logprob: -1.2312307357788086
    3. 'x' → logprob: -1.6062307357788086
    4. 'import' → logprob: -4.481230735778809
    5. 'def' → logprob: -4.731230735778809
    6. 'for' → logprob: -6.356230735778809
    7. ' from' → logprob: -7.731230735778809
    8. 'if' → logprob: -7.731230735778809
    9. ' #' → logprob: -7.856230735778809
    10. '
' → logprob: -8.231230735778809

Token 165: ' pos' (ID: 1253)
  Prédit: ' utilisant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -1.3325856924057007
    2. 'util' → logprob: -1.7075856924057007
    3. 'suite' → logprob: -1.8325856924057007
    4. ' rem' → logprob: -1.9575856924057007
    5. 's' → logprob: -3.4575858116149902
    6. 'lever' → logprob: -3.7075858116149902
    7. 'rem' → logprob: -3.9575858116149902
    8. 'sou' → logprob: -4.20758581161499
    9. ' remplac' → logprob: -4.33258581161499
    10. 'fait' → logprob: -4.58258581161499

Token 166: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.5164415240287781
    2. 'pos' → logprob: -1.0164415836334229
    3. 's' → logprob: -4.766441345214844
    4. 'u' → logprob: -5.891441345214844
    5. 'ub' → logprob: -6.016441345214844
    6. 'tant' → logprob: -6.016441345214844
    7. 'os' → logprob: -6.266441345214844
    8. ' pos' → logprob: -6.391441345214844
    9. 'e' → logprob: -6.391441345214844
    10. '#' → logprob: -6.641441345214844

Token 167: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.09440927952528
    2. ' y' → logprob: -2.844409227371216
    3. 'x' → logprob: -3.469409227371216
    4. ' x' → logprob: -7.344409465789795
    5. ' ' → logprob: -10.469408988952637
    6. '"' → logprob: -10.719408988952637
    7. 'a' → logprob: -11.219408988952637
    8. 't' → logprob: -11.469408988952637
    9. ''y' → logprob: -11.469408988952637
    10. '"x' → logprob: -11.469408988952637

Token 168: '_i' (ID: 10853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012120848521590233
    2. '=' → logprob: -5.012120723724365
    3. '_i' → logprob: -5.512120723724365
    4. '_' → logprob: -6.762120723724365
    5. ' _' → logprob: -9.512121200561523
    6. 'i' → logprob: -9.512121200561523
    7. '_=' → logprob: -11.512121200561523
    8. ' ' → logprob: -11.637121200561523
    9. '[i' → logprob: -12.137121200561523
    10. 'x' → logprob: -12.387121200561523

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05488837882876396
    2. '=' → logprob: -2.9298884868621826
    3. '=x' → logprob: -12.804888725280762
    4. '=y' → logprob: -13.554888725280762
    5. 's' → logprob: -14.679888725280762
    6. '=i' → logprob: -14.804888725280762
    7. '=s' → logprob: -15.804888725280762
    8. 'x' → logprob: -16.054887771606445
    9. '_' → logprob: -16.054887771606445
    10. '_i' → logprob: -16.304887771606445

Token 170: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.038047801703214645
    2. ' x' → logprob: -3.2880477905273438
    3. '"x' → logprob: -12.788047790527344
    4. '	x' → logprob: -14.038047790527344
    5. ''x' → logprob: -14.038047790527344
    6. 'xi' → logprob: -14.163047790527344
    7. ' ' → logprob: -14.538047790527344
    8. '`' → logprob: -15.288047790527344
    9. '(x' → logprob: -15.413047790527344
    10. ')x' → logprob: -15.913047790527344

Token 171: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0022210339084267616
    2. '_' → logprob: -6.12722110748291
    3. 'i' → logprob: -10.87722110748291
    4. ' _' → logprob: -11.12722110748291
    5. ' -' → logprob: -13.87722110748291
    6. '-' → logprob: -14.62722110748291
    7. '_{' → logprob: -14.87722110748291
    8. '[i' → logprob: -15.37722110748291
    9. ' i' → logprob: -16.002220153808594
    10. '-i' → logprob: -16.627220153808594

Token 172: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05509238690137863
    2. '-' → logprob: -2.9300923347473145
    3. '-i' → logprob: -9.180092811584473
    4. '-m' → logprob: -9.555092811584473
    5. '_i' → logprob: -10.430092811584473
    6. '_' → logprob: -12.680092811584473
    7. 'i' → logprob: -13.180092811584473
    8. ' ' → logprob: -15.305092811584473
    9. ' ' → logprob: -15.305092811584473
    10. 'm' → logprob: -16.055091857910156

Token 173: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.575943112373352
    2. ' m' → logprob: -0.825943112373352
    3. '<|end|>' → logprob: -12.825942993164062
    4. '	m' → logprob: -14.325942993164062
    5. ' ' → logprob: -15.325942993164062
    6. ' m'm' → logprob: -17.075942993164062
    7. ' м' → logprob: -17.450942993164062
    8. '[m' → logprob: -17.575942993164062
    9. '<|end|>' → logprob: -18.075942993164062
    10. '_m' → logprob: -18.450942993164062

Token 174: ' >=' (ID: 5064)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23680561780929565
    2. ' ,' → logprob: -1.8618056774139404
    3. ' n' → logprob: -3.4868056774139404
    4. ' ' → logprob: -4.611805438995361
    5. 'n' → logprob: -4.986805438995361
    6. ' (' → logprob: -6.736805438995361
    7. 's' → logprob: -6.986805438995361
    8. ')' → logprob: -6.986805438995361
    9. ' y' → logprob: -7.111805438995361
    10. '<|end|>' → logprob: -7.111805438995361

Token 175: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004620241466909647
    2. ' ' → logprob: -5.37962007522583
    3. '1' → logprob: -16.879619598388672
    4. ' ' → logprob: -17.004619598388672
    5. '۰' → logprob: -18.442119598388672
    6. '```' → logprob: -18.942119598388672
    7. ',' → logprob: -19.254619598388672
    8. '  ' → logprob: -19.504619598388672
    9. '

' → logprob: -20.004619598388672
    10. '_' → logprob: -20.192119598388672

Token 176: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008045066497288644
    2. ' ' → logprob: -7.125804424285889
    3. '۰' → logprob: -18.688304901123047
    4. ' ' → logprob: -19.375804901123047
    5. '1' → logprob: -19.563304901123047
    6. '```' → logprob: -19.750804901123047
    7. '  ' → logprob: -19.875804901123047
    8. '   ' → logprob: -20.625804901123047
    9. '<|end|>' → logprob: -20.688304901123047
    10. '

' → logprob: -20.750804901123047

Token 177: ',' (ID: 11)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -1.4281001091003418
    2. 'y' → logprob: -1.5531001091003418
    3. 'n' → logprob: -1.6781001091003418
    4. ',' → logprob: -1.6781001091003418
    5. ' ' → logprob: -3.428100109100342
    6. '
' → logprob: -3.428100109100342
    7. ' n' → logprob: -3.678100109100342
    8. ' ,' → logprob: -3.803100109100342
    9. '0' → logprob: -4.303100109100342
    10. '\n' → logprob: -5.178100109100342

Token 178: ' alors' (ID: 17971)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.09229741245508194
    2. 'y' → logprob: -2.717297315597534
    3. ' on' → logprob: -4.717297554016113
    4. 'n' → logprob: -5.217297554016113
    5. '<|end|>' → logprob: -5.842297554016113
    6. ' n' → logprob: -6.467297554016113
    7. ' ' → logprob: -6.967297554016113
    8. '
' → logprob: -7.842297554016113
    9. ' 
' → logprob: -7.967297554016113
    10. 'r' → logprob: -8.717297554016113

Token 179: ' :
' (ID: 10039)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.6460809707641602
    2. 'sum' → logprob: -1.3960809707641602
    3. ' y' → logprob: -1.8960809707641602
    4. ' on' → logprob: -2.64608097076416
    5. 'y' → logprob: -5.14608097076416
    6. 'on' → logprob: -7.77108097076416
    7. ' ' → logprob: -8.64608097076416
    8. ' la' → logprob: -8.89608097076416
    9. ' we' → logprob: -8.89608097076416
    10. ' ' → logprob: -9.02108097076416

Token 180: '#' (ID: 2)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.806073784828186
    2. 'n' → logprob: -1.431073784828186
    3. 'y' → logprob: -1.931073784828186
    4. 'sum' → logprob: -2.4310736656188965
    5. ' n' → logprob: -2.9310736656188965
    6. ' sum' → logprob: -3.6810736656188965
    7. 'import' → logprob: -7.3060736656188965
    8. 'from' → logprob: -7.3060736656188965
    9. '\n' → logprob: -7.4310736656188965
    10. ''y' → logprob: -8.556074142456055

Token 181: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.510721743106842
    2. ' sum' → logprob: -1.2607216835021973
    3. ' y' → logprob: -2.2607216835021973
    4. 'y' → logprob: -4.510721683502197
    5. 'from' → logprob: -7.260721683502197
    6. 'import' → logprob: -8.385722160339355
    7. 'n' → logprob: -9.135722160339355
    8. ' n' → logprob: -9.635722160339355
    9. ' sys' → logprob: -10.760722160339355
    10. 'sys' → logprob: -11.010722160339355

Token 182: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.28317514061927795
    2. 'y' → logprob: -1.4081751108169556
    3. '(y' → logprob: -6.408174991607666
    4. 'yi' → logprob: -8.658175468444824
    5. ' (' → logprob: -9.908175468444824
    6. '(' → logprob: -9.908175468444824
    7. ' yi' → logprob: -10.158175468444824
    8. '_y' → logprob: -11.033175468444824
    9. '	y' → logprob: -11.158175468444824
    10. ' ' → logprob: -11.408175468444824

Token 183: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.000662280130200088
    2. '_' → logprob: -7.375662326812744
    3. 'i' → logprob: -10.875661849975586
    4. ' _' → logprob: -12.000661849975586
    5. '[i' → logprob: -12.375661849975586
    6. '_n' → logprob: -13.500661849975586
    7. ' =' → logprob: -13.750661849975586
    8. '[' → logprob: -14.500661849975586
    9. '_y' → logprob: -14.625661849975586
    10. ' i' → logprob: -14.750661849975586

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687604665756226
    2. '=' → logprob: -1.136876106262207
    3. 's' → logprob: -13.761876106262207
    4. '<|end|>' → logprob: -14.261876106262207
    5. ' ' → logprob: -14.386876106262207
    6. ' ==' → logprob: -14.761876106262207
    7. '=r' → logprob: -15.136876106262207
    8. '=n' → logprob: -15.136876106262207
    9. ')' → logprob: -15.386876106262207
    10. ' equals' → logprob: -15.636876106262207

Token 185: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.06994188576936722
    2. 'r' → logprob: -2.694941997528076
    3. '(r' → logprob: -12.944941520690918
    4. ' ' → logprob: -13.194941520690918
    5. '<|end|>' → logprob: -14.694941520690918
    6. '`' → logprob: -15.819941520690918
    7. '_r' → logprob: -15.944941520690918
    8. ' (' → logprob: -16.194942474365234
    9. ' ' → logprob: -16.194942474365234
    10. '```' → logprob: -16.319942474365234

Token 186: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38758885860443115
    2. '-' → logprob: -1.1375888586044312
    3. '-n' → logprob: -7.262588977813721
    4. '-m' → logprob: -11.887588500976562
    5. ' ' → logprob: -13.137588500976562
    6. '-s' → logprob: -13.512588500976562
    7. '-num' → logprob: -13.637588500976562
    8. '-ng' → logprob: -14.137588500976562
    9. '-k' → logprob: -14.637588500976562
    10. '-t' → logprob: -14.637588500976562

Token 187: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1058109700679779
    2. 'n' → logprob: -2.4808108806610107
    3. ' m' → logprob: -4.48081111907959
    4. 'm' → logprob: -5.98081111907959
    5. '(n' → logprob: -6.23081111907959
    6. ' (' → logprob: -7.35581111907959
    7. ' nm' → logprob: -8.60581111907959
    8. 'nm' → logprob: -10.23081111907959
    9. '(m' → logprob: -10.35581111907959
    10. ' ' → logprob: -11.85581111907959

Token 188: '*m' (ID: 85049)
  Prédit: '*m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*m' → logprob: -0.3992854058742523
    2. '*' → logprob: -1.1492854356765747
    3. ' *' → logprob: -4.524285316467285
    4. 'm' → logprob: -6.524285316467285
    5. '*r' → logprob: -12.149285316467285
    6. '**' → logprob: -12.524285316467285
    7. '*(' → logprob: -12.649285316467285
    8. ' m' → logprob: -13.274285316467285
    9. ' ' → logprob: -13.774285316467285
    10. ' ' → logprob: -13.774285316467285

Token 189: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 190: '#' (ID: 2)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.487499713897705
    2. '0' → logprob: -1.737499713897705
    3. ' if' → logprob: -1.737499713897705
    4. ' y' → logprob: -1.862499713897705
    5. 'if' → logprob: -2.112499713897705
    6. ' ' → logprob: -2.987499713897705
    7. 'k' → logprob: -4.487499713897705
    8. '#' → logprob: -4.612499713897705
    9. ')' → logprob: -4.612499713897705
    10. 'n' → logprob: -4.862499713897705

Token 191: ' Le' (ID: 2018)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.608497679233551
    2. ' y' → logprob: -1.6084976196289062
    3. '0' → logprob: -1.9834976196289062
    4. 'if' → logprob: -2.8584976196289062
    5. ' if' → logprob: -3.6084976196289062
    6. 'from' → logprob: -4.733497619628906
    7. ' ' → logprob: -5.233497619628906
    8. 'import' → logprob: -5.483497619628906
    9. 'r' → logprob: -5.858497619628906
    10. 'def' → logprob: -6.358497619628906

Token 192: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -1.0061269998550415
    2. ' nombre' → logprob: -1.1311269998550415
    3. ' problème' → logprob: -1.6311269998550415
    4. ' code' → logprob: -3.256126880645752
    5. 'pro' → logprob: -3.381126880645752
    6. ' probl' → logprob: -4.256126880645752
    7. '#' → logprob: -5.006126880645752
    8. 'n' → logprob: -5.881126880645752
    9. ' reste' → logprob: -6.006126880645752
    10. 'code' → logprob: -6.006126880645752

Token 193: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1663896143436432
    2. 'de' → logprob: -1.9163895845413208
    3. ' d' → logprob: -6.416389465332031
    4. '_de' → logprob: -6.416389465332031
    5. 'd' → logprob: -6.541389465332031
    6. ' ' → logprob: -8.291389465332031
    7. '_' → logprob: -8.541389465332031
    8. '#' → logprob: -8.666389465332031
    9. ' total' → logprob: -8.791389465332031
    10. '	de' → logprob: -8.916389465332031

Token 194: ' solutions' (ID: 9368)
  Prédit: 'solutions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solutions' → logprob: -0.14936292171478271
    2. 'comb' → logprob: -2.6493630409240723
    3. ' solutions' → logprob: -3.1493630409240723
    4. 'com' → logprob: -4.774363040924072
    5. ' façons' → logprob: -5.274363040924072
    6. 'man' → logprob: -5.399363040924072
    7. ' comb' → logprob: -6.149363040924072
    8. 'coeff' → logprob: -6.149363040924072
    9. 'fa' → logprob: -6.399363040924072
    10. '\' → logprob: -9.024362564086914

Token 195: ' est' (ID: 893)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8003829717636108
    2. ' est' → logprob: -1.5503829717636108
    3. 'de' → logprob: -2.1753830909729004
    4. ' d' → logprob: -3.0503830909729004
    5. ' =' → logprob: -3.0503830909729004
    6. 'ent' → logprob: -3.0503830909729004
    7. ' ent' → logprob: -3.6753830909729004
    8. ' ' → logprob: -4.6753830909729
    9. 'est' → logprob: -4.6753830909729
    10. '=' → logprob: -5.0503830909729

Token 196: ' alors' (ID: 17971)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.041409529745578766
    2. 'comb' → logprob: -3.416409492492676
    3. ' math' → logprob: -6.541409492492676
    4. 'com' → logprob: -6.666409492492676
    5. ' ' → logprob: -7.041409492492676
    6. '0' → logprob: -7.041409492492676
    7. ' combin' → logprob: -7.291409492492676
    8. ' (' → logprob: -7.791409492492676
    9. ' C' → logprob: -7.791409492492676
    10. 'import' → logprob: -7.916409492492676

Token 197: ' le' (ID: 505)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.07675238698720932
    2. 'comb' → logprob: -2.7017524242401123
    3. ' math' → logprob: -5.951752185821533
    4. 'math' → logprob: -6.701752185821533
    5. 'com' → logprob: -6.826752185821533
    6. ' ' → logprob: -7.451752185821533
    7. ' combin' → logprob: -7.951752185821533
    8. '0' → logprob: -8.201752662658691
    9. ' C' → logprob: -8.576752662658691
    10. 'import' → logprob: -9.201752662658691

Token 198: ' nombre' (ID: 9733)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.1908506453037262
    2. 'nombre' → logprob: -2.5658507347106934
    3. ' comb' → logprob: -2.8158507347106934
    4. 'com' → logprob: -4.440850734710693
    5. 'coeff' → logprob: -5.065850734710693
    6. 'math' → logprob: -5.065850734710693
    7. 'coef' → logprob: -5.440850734710693
    8. ' nombre' → logprob: -6.065850734710693
    9. 'bin' → logprob: -6.815850734710693
    10. '```' → logprob: -7.315850734710693

Token 199: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.10291324555873871
    2. 'de' → logprob: -2.4779131412506104
    3. 'from' → logprob: -4.4779133796691895
    4. 'import' → logprob: -7.1029133796691895
    5. 'com' → logprob: -7.2279133796691895
    6. 'comb' → logprob: -7.9779133796691895
    7. '_de' → logprob: -8.602912902832031
    8. 'def' → logprob: -9.227912902832031
    9. '#' → logprob: -9.227912902832031
    10. 'd' → logprob: -9.852912902832031

Token 200: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.2630664110183716
    2. 'com' → logprob: -1.6380664110183716
    3. ' comb' → logprob: -3.388066291809082
    4. 'solutions' → logprob: -6.638066291809082
    5. 'coeff' → logprob: -7.263066291809082
    6. '   ' → logprob: -8.138066291809082
    7. 'man' → logprob: -8.763066291809082
    8. ' façons' → logprob: -8.888066291809082
    9. '(com' → logprob: -9.138066291809082
    10. '\' → logprob: -9.638066291809082

Token 201: 'inais' (ID: 42744)
  Prédit: 'inais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.0008071291376836598
    2. 'ina' → logprob: -7.125807285308838
    3. 'inas' → logprob: -13.62580680847168
    4. '\' → logprob: -15.00080680847168
    5. 'in' → logprob: -15.37580680847168
    6. 'i' → logprob: -15.37580680847168
    7. 'inations' → logprob: -15.75080680847168
    8. 'is' → logprob: -16.00080680847168
    9. 'ais' → logprob: -16.12580680847168
    10. '_' → logprob: -16.50080680847168

Token 202: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.0010438859462738037
    2. 'ais' → logprob: -8.376044273376465
    3. 'sons' → logprob: -8.376044273376465
    4. 'asons' → logprob: -8.501044273376465
    5. 'n' → logprob: -8.626044273376465
    6. 'on' → logprob: -9.501044273376465
    7. 'ations' → logprob: -9.626044273376465
    8. 'a' → logprob: -10.501044273376465
    9. '#' → logprob: -11.001044273376465
    10. '[' → logprob: -13.001044273376465

Token 203: ' avec' (ID: 3937)
  Prédit: ' avec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avec' → logprob: -1.1400707960128784
    2. 'with' → logprob: -1.1400707960128784
    3. 'avec' → logprob: -1.1400707960128784
    4. ' with' → logprob: -4.015070915222168
    5. ' de' → logprob: -6.015070915222168
    6. 'r' → logprob: -6.140070915222168
    7. 'n' → logprob: -6.140070915222168
    8. 'mult' → logprob: -6.265070915222168
    9. '_with' → logprob: -6.390070915222168
    10. 'de' → logprob: -6.640070915222168

Token 204: ' répét' (ID: 156936)
  Prédit: 'ré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ré' → logprob: -0.36318832635879517
    2. 'r' → logprob: -1.2381882667541504
    3. ' répét' → logprob: -4.48818826675415
    4. 're' → logprob: -6.73818826675415
    5. 'rem' → logprob: -7.11318826675415
    6. 'rep' → logprob: -7.73818826675415
    7. ' rép' → logprob: -8.238188743591309
    8. 'repr' → logprob: -8.863188743591309
    9. ' ' → logprob: -8.988188743591309
    10. '```' → logprob: -9.113188743591309

Token 205: 'ition' (ID: 868)
  Prédit: 'ition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -6.706686690449715e-05
    2. 'it' → logprob: -10.250066757202148
    3. 'tion' → logprob: -11.750066757202148
    4. 'ation' → logprob: -12.125066757202148
    5. 'itation' → logprob: -12.125066757202148
    6. 'itions' → logprob: -12.250066757202148
    7. 'ission' → logprob: -12.875066757202148
    8. 'It' → logprob: -14.500066757202148
    9. 'rition' → logprob: -14.750066757202148
    10. 't' → logprob: -14.750066757202148

Token 206: ' de' (ID: 334)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6673357486724854
    2. 'n' → logprob: -1.6673357486724854
    3. ' (' → logprob: -1.6673357486724854
    4. ' n' → logprob: -2.9173357486724854
    5. '(' → logprob: -4.292335510253906
    6. 'r' → logprob: -4.667335510253906
    7. '(r' → logprob: -4.667335510253906
    8. ' "' → logprob: -5.417335510253906
    9. '"' → logprob: -5.667335510253906
    10. '((' → logprob: -6.042335510253906

Token 207: '
' (ID: 198)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.25407874584198
    2. 'n' → logprob: -1.50407874584198
    3. ' y' → logprob: -6.8790788650512695
    4. '(n' → logprob: -7.8790788650512695
    5. ' (' → logprob: -8.62907886505127
    6. 'y' → logprob: -8.62907886505127
    7. 'm' → logprob: -9.25407886505127
    8. ' m' → logprob: -9.50407886505127
    9. 'r' → logprob: -9.50407886505127
    10. ' r' → logprob: -9.75407886505127

Token 208: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2650809586048126
    2. ' n' → logprob: -1.5150809288024902
    3. '(n' → logprob: -5.01508092880249
    4. 'y' → logprob: -5.89008092880249
    5. ' (' → logprob: -6.64008092880249
    6. ' y' → logprob: -6.64008092880249
    7. 'r' → logprob: -7.26508092880249
    8. 'm' → logprob: -9.140081405639648
    9. ' r' → logprob: -9.140081405639648
    10. '(' → logprob: -10.515081405639648

Token 209: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2822151780128479
    2. ' n' → logprob: -1.4072151184082031
    3. '(n' → logprob: -7.407215118408203
    4. ' (' → logprob: -8.407215118408203
    5. 'y' → logprob: -9.782215118408203
    6. 'r' → logprob: -9.907215118408203
    7. 'm' → logprob: -10.032215118408203
    8. ' y' → logprob: -10.657215118408203
    9. '[n' → logprob: -11.282215118408203
    10. '"' → logprob: -12.032215118408203

Token 210: ' variables' (ID: 13955)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.6074211597442627
    2. 'r' → logprob: -1.7324211597442627
    3. ',' → logprob: -2.6074211597442627
    4. ' ,' → logprob: -3.4824211597442627
    5. ' (' → logprob: -3.6074211597442627
    6. ' k' → logprob: -3.7324211597442627
    7. ' n' → logprob: -3.7324211597442627
    8. ' y' → logprob: -3.8574211597442627
    9. ' tokens' → logprob: -4.232420921325684
    10. ' "' → logprob: -4.482420921325684

Token 211: ' non' (ID: 2893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2831857204437256
    2. ' (' → logprob: -1.6581857204437256
    3. ' +' → logprob: -2.4081857204437256
    4. 'n' → logprob: -2.5331857204437256
    5. '(n' → logprob: -2.6581857204437256
    6. ' )' → logprob: -2.9081857204437256
    7. '+' → logprob: -3.0331857204437256
    8. 'r' → logprob: -3.6581857204437256
    9. ' '' → logprob: -4.283185958862305
    10. ',' → logprob: -4.408185958862305

Token 212: ' nég' (ID: 55805)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15921738743782043
    2. 'neg' → logprob: -2.284217357635498
    3. ' nég' → logprob: -3.409217357635498
    4. 'né' → logprob: -4.784217357635498
    5. 'negative' → logprob: -6.284217357635498
    6. 'null' → logprob: -6.909217357635498
    7. 'ég' → logprob: -8.034217834472656
    8. 'nées' → logprob: -8.909217834472656
    9. 'strict' → logprob: -9.284217834472656
    10. '-' → logprob: -9.784217834472656

Token 213: 'atives' (ID: 8015)
  Prédit: 'atives'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atives' → logprob: -0.0002814775798469782
    2. 'ative' → logprob: -9.25028133392334
    3. 'atifs' → logprob: -9.25028133392334
    4. '#' → logprob: -10.62528133392334
    5. 'atif' → logprob: -11.37528133392334
    6. '=' → logprob: -11.50028133392334
    7. '```' → logprob: -12.00028133392334
    8. 'ales' → logprob: -12.25028133392334
    9. '[' → logprob: -12.62528133392334
    10. 's' → logprob: -12.75028133392334

Token 214: ' s' (ID: 265)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.5984838008880615
    2. 'from' → logprob: -1.5984838008880615
    3. '1' → logprob: -1.7234838008880615
    4. 'r' → logprob: -2.7234838008880615
    5. 'import' → logprob: -2.7234838008880615
    6. ' (' → logprob: -2.7234838008880615
    7. ')' → logprob: -3.5984838008880615
    8. ' n' → logprob: -3.7234838008880615
    9. '(n' → logprob: -3.8484838008880615
    10. 'y' → logprob: -3.9734838008880615

Token 215: ''' (ID: 6)
  Prédit: 'ommes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ommes' → logprob: -0.4665796756744385
    2. 'omme' → logprob: -1.5915796756744385
    3. 'omm' → logprob: -2.4665796756744385
    4. 'um' → logprob: -3.9665796756744385
    5. 'uj' → logprob: -4.591579437255859
    6. 'umm' → logprob: -5.091579437255859
    7. 'ommer' → logprob: -5.341579437255859
    8. 'u' → logprob: -5.341579437255859
    9. 'ans' → logprob: -5.466579437255859
    10. 'ou' → logprob: -5.716579437255859

Token 216: 'addition' (ID: 198155)
  Prédit: 'omm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'omm' → logprob: -0.5899414420127869
    2. 'ommes' → logprob: -1.3399415016174316
    3. 'omme' → logprob: -2.0899415016174316
    4. 'om' → logprob: -3.4649415016174316
    5. 'ommer' → logprob: -4.214941501617432
    6. 'umm' → logprob: -4.839941501617432
    7. 'um' → logprob: -5.589941501617432
    8. 'umma' → logprob: -7.714941501617432
    9. 'oum' → logprob: -7.964941501617432
    10. 'ommen' → logprob: -8.339941024780273

Token 217: 'nant' (ID: 48648)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36460721492767334
    2. ' =' → logprob: -1.6146072149276733
    3. ' à' → logprob: -2.739607334136963
    4. 'a' → logprob: -4.239607334136963
    5. 'e' → logprob: -5.614607334136963
    6. 'à' → logprob: -5.739607334136963
    7. 'ient' → logprob: -5.989607334136963
    8. '   ' → logprob: -6.114607334136963
    9. 'ant' → logprob: -6.364607334136963
    10. 'ent' → logprob: -6.364607334136963

Token 218: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.8615509271621704
    2. ' à' → logprob: -0.8615509271621704
    3. '=' → logprob: -2.486550807952881
    4. ' =' → logprob: -2.861550807952881
    5. ' a' → logprob: -4.986550807952881
    6. 'a' → logprob: -5.861550807952881
    7. ' ' → logprob: -5.986550807952881
    8. 'au' → logprob: -6.986550807952881
    9. ''à' → logprob: -7.486550807952881
    10. '=a' → logprob: -8.361551284790039

Token 219: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6330259442329407
    2. ' r' → logprob: -0.7580259442329407
    3. '(r' → logprob: -8.008026123046875
    4. ' (' → logprob: -9.633026123046875
    5. ' ' → logprob: -11.133026123046875
    6. '_r' → logprob: -11.883026123046875
    7. '[r' → logprob: -12.633026123046875
    8. ' ' → logprob: -13.633026123046875
    9. '	r' → logprob: -14.008026123046875
    10. '   ' → logprob: -14.883026123046875

Token 220: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6933163404464722
    2. ' r' → logprob: -0.6933163404464722
    3. '(r' → logprob: -9.318316459655762
    4. ' (' → logprob: -9.818316459655762
    5. ' ' → logprob: -10.943316459655762
    6. '   ' → logprob: -12.818316459655762
    7. ' ' → logprob: -13.193316459655762
    8. ')' → logprob: -14.193316459655762
    9. '	r' → logprob: -14.818316459655762
    10. '_r' → logprob: -14.943316459655762

Token 221: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01837269775569439
    2. '-' → logprob: -4.018372535705566
    3. '-n' → logprob: -8.518372535705566
    4. ' ' → logprob: -11.018372535705566
    5. ' ' → logprob: -12.518372535705566
    6. '	' → logprob: -14.268372535705566
    7. '  ' → logprob: -14.518372535705566
    8. ')' → logprob: -14.768372535705566
    9. '   ' → logprob: -15.143372535705566
    10. ' n' → logprob: -15.268372535705566

Token 222: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5762264728546143
    2. ' n' → logprob: -0.8262264728546143
    3. '(n' → logprob: -8.576226234436035
    4. 'nm' → logprob: -10.451226234436035
    5. ')n' → logprob: -10.701226234436035
    6. '	n' → logprob: -11.201226234436035
    7. ' (' → logprob: -11.201226234436035
    8. ' nm' → logprob: -12.201226234436035
    9. '_n' → logprob: -12.451226234436035
    10. '
' → logprob: -12.701226234436035

Token 223: '*m' (ID: 85049)
  Prédit: '*m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*m' → logprob: -0.0040865931659936905
    2. '*' → logprob: -5.504086494445801
    3. ' *' → logprob: -12.1290864944458
    4. 'm' → logprob: -12.8790864944458
    5. '**' → logprob: -16.254087448120117
    6. '*n' → logprob: -17.004087448120117
    7. '*p' → logprob: -17.629087448120117
    8. '*r' → logprob: -17.629087448120117
    9. '＊' → logprob: -18.004087448120117
    10. '*M' → logprob: -18.254087448120117

Token 224: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010395030491054058
    2. ' )' → logprob: -4.885395050048828
    3. '),' → logprob: -6.510395050048828
    4. '))' → logprob: -8.010395050048828
    5. ').' → logprob: -8.135395050048828
    6. '")' → logprob: -9.385395050048828
    7. ')
' → logprob: -9.385395050048828
    8. '#' → logprob: -9.760395050048828
    9. ',' → logprob: -9.760395050048828
    10. ')`' → logprob: -10.135395050048828

Token 225: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6960802674293518
    2. 'if' → logprob: -1.571080207824707
    3. 'from' → logprob: -1.696080207824707
    4. '1' → logprob: -3.696080207824707
    5. 'n' → logprob: -3.696080207824707
    6. '0' → logprob: -3.946080207824707
    7. 'r' → logprob: -4.071080207824707
    8. ' if' → logprob: -5.571080207824707
    9. 'def' → logprob: -5.696080207824707
    10. 'print' → logprob: -5.821080207824707

Token 226: ' S' (ID: 336)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8067282438278198
    2. 'from' → logprob: -1.6817282438278198
    3. 'import' → logprob: -1.8067282438278198
    4. 'r' → logprob: -2.4317283630371094
    5. 'y' → logprob: -3.1817283630371094
    6. 'def' → logprob: -3.8067283630371094
    7. 'k' → logprob: -4.181728363037109
    8. '0' → logprob: -4.556728363037109
    9. ' if' → logprob: -5.056728363037109
    10. 'comb' → logprob: -5.431728363037109

Token 227: ''il' (ID: 14683)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8823731541633606
    2. '#' → logprob: -1.8823730945587158
    3. '=' → logprob: -1.8823730945587158
    4. 'i' → logprob: -2.757373094558716
    5. ' =' → logprob: -3.382373094558716
    6. 'if' → logprob: -3.382373094558716
    7. 'ys' → logprob: -3.757373094558716
    8. 'u' → logprob: -3.757373094558716
    9. 't' → logprob: -4.007373332977295
    10. 'ur' → logprob: -4.757373332977295

Token 228: ' arrive' (ID: 18338)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5395887494087219
    2. 'r' → logprob: -1.1645886898040771
    3. '(r' → logprob: -2.539588689804077
    4. ' (' → logprob: -3.664588689804077
    5. ' ' → logprob: -8.914588928222656
    6. 'ur' → logprob: -10.289588928222656
    7. '[r' → logprob: -10.414588928222656
    8. ' ' → logprob: -10.414588928222656
    9. ' n' → logprob: -10.539588928222656
    10. '	r' → logprob: -10.664588928222656

Token 229: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.13965226709842682
    2. ' ' → logprob: -2.7646522521972656
    3. ' r' → logprob: -3.0146522521972656
    4. '_' → logprob: -5.389652252197266
    5. 'r' → logprob: -5.514652252197266
    6. '(r' → logprob: -5.764652252197266
    7. ' that' → logprob: -5.889652252197266
    8. 'que' → logprob: -7.139652252197266
    9. ' qu' → logprob: -7.514652252197266
    10. '   ' → logprob: -7.514652252197266

Token 230: ' (' (ID: 350)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.47800588607788086
    2. 'r' → logprob: -0.9780058860778809
    3. ' n' → logprob: -5.853005886077881
    4. 'n' → logprob: -6.978005886077881
    5. '(r' → logprob: -9.728006362915039
    6. ' (' → logprob: -10.603006362915039
    7. ' ' → logprob: -11.103006362915039
    8. '   ' → logprob: -12.478006362915039
    9. ' m' → logprob: -12.603006362915039
    10. '(n' → logprob: -12.853006362915039

Token 231: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.043563466519117355
    2. ' r' → logprob: -3.1685633659362793
    3. 'n' → logprob: -8.043563842773438
    4. ' n' → logprob: -8.418563842773438
    5. '(r' → logprob: -11.918563842773438
    6. ')' → logprob: -12.543563842773438
    7. ' (' → logprob: -12.668563842773438
    8. '   ' → logprob: -12.918563842773438
    9. ' ' → logprob: -13.043563842773438
    10. '(n' → logprob: -13.418563842773438

Token 232: ' -' (ID: 533)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.23997282981872559
    2. '<' → logprob: -1.8649728298187256
    3. '-' → logprob: -3.7399728298187256
    4. ' -' → logprob: -3.8649728298187256
    5. '<n' → logprob: -4.364973068237305
    6. ' ' → logprob: -7.614973068237305
    7. '_' → logprob: -8.989973068237305
    8. '-n' → logprob: -9.114973068237305
    9. '<m' → logprob: -9.364973068237305
    10. ')' → logprob: -10.239973068237305

Token 233: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14269736409187317
    2. ' n' → logprob: -2.017697334289551
    3. '(n' → logprob: -11.76769733428955
    4. ' ' → logprob: -12.76769733428955
    5. '	n' → logprob: -12.76769733428955
    6. '   ' → logprob: -13.01769733428955
    7. ' (' → logprob: -13.51769733428955
    8. 'nm' → logprob: -13.64269733428955
    9. ')n' → logprob: -14.26769733428955
    10. '_n' → logprob: -14.26769733428955

Token 234: '*m' (ID: 85049)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.005815975368022919
    2. '*n' → logprob: -5.5058159828186035
    3. '*m' → logprob: -6.7558159828186035
    4. ' *' → logprob: -7.5058159828186035
    5. ''*' → logprob: -11.755815505981445
    6. ' ' → logprob: -13.130815505981445
    7. 'm' → logprob: -13.130815505981445
    8. 'n' → logprob: -13.255815505981445
    9. ')' → logprob: -13.630815505981445
    10. '"*' → logprob: -14.005815505981445

Token 235: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024690674617886543
    2. ' <' → logprob: -4.274690628051758
    3. ' )' → logprob: -4.774690628051758
    4. '<' → logprob: -6.399690628051758
    5. ')<' → logprob: -8.024690628051758
    6. ' ' → logprob: -10.274690628051758
    7. ')>=' → logprob: -13.399690628051758
    8. ' >=' → logprob: -13.899690628051758
    9. '<n' → logprob: -14.024690628051758
    10. '>=' → logprob: -14.149690628051758

Token 236: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.47419291734695435
    2. '<' → logprob: -0.9741929173469543
    3. ' >=' → logprob: -9.97419261932373
    4. '>=' → logprob: -10.47419261932373
    5. ' ' → logprob: -10.84919261932373
    6. '<n' → logprob: -11.97419261932373
    7. '<m' → logprob: -13.47419261932373
    8. '<int' → logprob: -13.72419261932373
    9. ' ==' → logprob: -13.84919261932373
    10. '<s' → logprob: -14.09919261932373

Token 237: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016034485772252083
    2. ' ' → logprob: -4.1410346031188965
    3. '=' → logprob: -15.891034126281738
    4. ' ' → logprob: -17.141035079956055
    5. '1' → logprob: -17.391035079956055
    6. '۰' → logprob: -18.141035079956055
    7. '<' → logprob: -18.266035079956055
    8. '  ' → logprob: -18.578535079956055
    9. '   ' → logprob: -18.703535079956055
    10. ':' → logprob: -18.953535079956055

Token 238: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029963957145810127
    2. ' :' → logprob: -3.529963970184326
    3. ':
' → logprob: -9.154963493347168
    4. ',' → logprob: -9.529963493347168
    5. ' :
' → logprob: -11.404963493347168
    6. ' or' → logprob: -12.029963493347168
    7. '):' → logprob: -12.654963493347168
    8. '>' → logprob: -12.779963493347168
    9. ':return' → logprob: -13.029963493347168
    10. ' ,' → logprob: -13.154963493347168

Token 239: ' alors' (ID: 17971)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14314986765384674
    2. ' print' → logprob: -2.0181498527526855
    3. ' on' → logprob: -8.518150329589844
    4. '0' → logprob: -8.768150329589844
    5. '   ' → logprob: -9.643150329589844
    6. ' ' → logprob: -10.518150329589844
    7. ' alors' → logprob: -12.018150329589844
    8. ' il' → logprob: -12.518150329589844
    9. 'on' → logprob: -12.893150329589844
    10. '#' → logprob: -12.893150329589844

Token 240: ' il' (ID: 1793)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12763388454914093
    2. ' print' → logprob: -2.127633810043335
    3. '0' → logprob: -7.377634048461914
    4. ' ' → logprob: -10.377634048461914
    5. '   ' → logprob: -10.627634048461914
    6. '1' → logprob: -11.877634048461914
    7. '	print' → logprob: -12.002634048461914
    8. 'pr' → logprob: -12.752634048461914
    9. ' on' → logprob: -13.002634048461914
    10. 'prin' → logprob: -13.752634048461914

Token 241: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4291277825832367
    2. 'n' → logprob: -1.054127812385559
    3. ' faut' → logprob: -9.05412769317627
    4. 'n't' → logprob: -9.17912769317627
    5. '#' → logprob: -9.92912769317627
    6. 'f' → logprob: -10.17912769317627
    7. ' y' → logprob: -10.67912769317627
    8. 'y' → logprob: -10.92912769317627
    9. '```' → logprob: -10.92912769317627
    10. 'est' → logprob: -11.17912769317627

Token 242: ''y' (ID: 27913)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.26534587144851685
    2. ''y' → logprob: -1.515345811843872
    3. 'est' → logprob: -5.140346050262451
    4. 'ex' → logprob: -6.390346050262451
    5. ''ex' → logprob: -6.390346050262451
    6. ' y' → logprob: -6.765346050262451
    7. ''est' → logprob: -7.515346050262451
    8. '#' → logprob: -7.640346050262451
    9. '’y' → logprob: -7.890346050262451
    10. '_y' → logprob: -8.015345573425293

Token 243: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07153059542179108
    2. ' a' → logprob: -2.69653058052063
    3. ''a' → logprob: -7.321530818939209
    4. 'pas' → logprob: -7.321530818939209
    5. ' aura' → logprob: -9.57153034210205
    6. 'avait' → logprob: -10.07153034210205
    7. 'n' → logprob: -10.32153034210205
    8. '	a' → logprob: -10.69653034210205
    9. ' pas' → logprob: -10.82153034210205
    10. '#a' → logprob: -11.19653034210205

Token 244: ' pas' (ID: 2173)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010025215335190296
    2. ' ' → logprob: -4.6350250244140625
    3. 'print' → logprob: -8.260025024414062
    4. ' print' → logprob: -12.135025024414062
    5. 'pas' → logprob: -12.635025024414062
    6. 'auc' → logprob: -13.760025024414062
    7. '```' → logprob: -14.885025024414062
    8. ' pas' → logprob: -15.885025024414062
    9. ' aucun' → logprob: -16.135025024414062
    10. '1' → logprob: -17.135025024414062

Token 245: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.25307077169418335
    2. 'de' → logprob: -1.5030708312988281
    3. ' ' → logprob: -6.878070831298828
    4. '_de' → logprob: -9.753070831298828
    5. 'possible' → logprob: -11.378070831298828
    6. ' ' → logprob: -11.503070831298828
    7. 'd' → logprob: -12.128070831298828
    8. 'def' → logprob: -12.378070831298828
    9. 'solution' → logprob: -12.503070831298828
    10. 'solutions' → logprob: -13.128070831298828

Token 246: ' solution' (ID: 7578)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solution' → logprob: -0.044266920536756516
    2. 'solutions' → logprob: -3.794266939163208
    3. ' solution' → logprob: -3.919266939163208
    4. ' solutions' → logprob: -7.794266700744629
    5. 'comb' → logprob: -7.919266700744629
    6. 's' → logprob: -9.294266700744629
    7. 'sol' → logprob: -10.669266700744629
    8. 'poss' → logprob: -11.044266700744629
    9. '0' → logprob: -11.419266700744629
    10. '```' → logprob: -11.794266700744629

Token 247: ' ->' (ID: 2747)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003169749164953828
    2. ' if' → logprob: -6.253169536590576
    3. 'y' → logprob: -7.628169536590576
    4. 'res' → logprob: -8.253170013427734
    5. 'result' → logprob: -8.378170013427734
    6. '
' → logprob: -9.503170013427734
    7. 'x' → logprob: -10.003170013427734
    8. 'r' → logprob: -10.128170013427734
    9. 'diff' → logprob: -10.378170013427734
    10. '```' → logprob: -11.378170013427734

Token 248: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.024399638175964355
    2. ' print' → logprob: -3.774399757385254
    3. '0' → logprob: -6.774399757385254
    4. ' ' → logprob: -12.149399757385254
    5. '```' → logprob: -13.399399757385254
    6. '1' → logprob: -13.774399757385254
    7. 'return' → logprob: -13.774399757385254
    8. '   ' → logprob: -14.149399757385254
    9. 'pr' → logprob: -14.899399757385254
    10. '
' → logprob: -15.524399757385254

Token 249: '0' (ID: 15)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011135423555970192
    2. '0' → logprob: -4.511135578155518
    3. ' print' → logprob: -9.38613510131836
    4. '1' → logprob: -13.26113510131836
    5. 'return' → logprob: -14.38613510131836
    6. '```' → logprob: -14.63613510131836
    7. ' ' → logprob: -14.76113510131836
    8. 'pr' → logprob: -15.51113510131836
    9. 'prin' → logprob: -16.38613510131836
    10. '   ' → logprob: -16.76113510131836

Token 250: '.

' (ID: 364)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.047148168087005615
    2. 'result' → logprob: -3.1721482276916504
    3. 'res' → logprob: -6.17214822769165
    4. ' if' → logprob: -6.79714822769165
    5. 'answer' → logprob: -8.172147750854492
    6. '
' → logprob: -8.797147750854492
    7. 'y' → logprob: -8.797147750854492
    8. '\n' → logprob: -9.797147750854492
    9. '0' → logprob: -9.922147750854492
    10. 'count' → logprob: -10.297147750854492

Token 251: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.021406199783086777
    2. 'result' → logprob: -4.271406173706055
    3. ' if' → logprob: -5.521406173706055
    4. 'res' → logprob: -6.021406173706055
    5. 'y' → logprob: -8.396406173706055
    6. 'answer' → logprob: -9.021406173706055
    7. '```' → logprob: -9.146406173706055
    8. 'x' → logprob: -10.021406173706055
    9. 'r' → logprob: -10.271406173706055
    10. 'ans' → logprob: -10.396406173706055

Token 252: ' Form' (ID: 5287)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1470988690853119
    2. 'def' → logprob: -2.6470987796783447
    3. 'import' → logprob: -3.3970987796783447
    4. 'result' → logprob: -3.5220987796783447
    5. '```' → logprob: -6.647099018096924
    6. 'res' → logprob: -7.147099018096924
    7. 'from' → logprob: -7.772099018096924
    8. '
' → logprob: -9.522098541259766
    9. ' if' → logprob: -9.772098541259766
    10. 'max' → logprob: -9.897098541259766

Token 253: 'ule' (ID: 1601)
  Prédit: 'ula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ula' → logprob: -0.8293718099594116
    2. 'la' → logprob: -1.2043718099594116
    3. 'ule' → logprob: -1.5793718099594116
    4. 'l' → logprob: -4.204371929168701
    5. '```' → logprob: -4.579371929168701
    6. 'le' → logprob: -4.954371929168701
    7. 'u' → logprob: -5.329371929168701
    8. 'ul' → logprob: -5.454371929168701
    9. 't' → logprob: -5.704371929168701
    10. '#' → logprob: -6.329371929168701

Token 254: ' standard' (ID: 7024)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.34694725275039673
    2. 'def' → logprob: -1.846947193145752
    3. 'import' → logprob: -2.971947193145752
    4. 'comb' → logprob: -3.596947193145752
    5. ' from' → logprob: -4.096947193145752
    6. 'result' → logprob: -4.471947193145752
    7. ' comb' → logprob: -4.846947193145752
    8. 'res' → logprob: -5.221947193145752
    9. ' def' → logprob: -6.221947193145752
    10. ' =' → logprob: -6.221947193145752

Token 255: ' du' (ID: 1462)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8419040441513062
    2. 'from' → logprob: -0.9669040441513062
    3. 'import' → logprob: -1.9669040441513062
    4. ' from' → logprob: -4.091904163360596
    5. 'if' → logprob: -4.216904163360596
    6. ' def' → logprob: -5.216904163360596
    7. ' if' → logprob: -5.216904163360596
    8. ' comb' → logprob: -6.466904163360596
    9. 'comb' → logprob: -6.716904163360596
    10. ' import' → logprob: -6.841904163360596

Token 256: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.41837799549102783
    2. 'comb' → logprob: -1.6683779954910278
    3. 'coeff' → logprob: -3.0433778762817383
    4. ' nombre' → logprob: -3.2933778762817383
    5. 'com' → logprob: -3.5433778762817383
    6. 'co' → logprob: -4.418377876281738
    7. 'from' → logprob: -5.168377876281738
    8. 'import' → logprob: -5.543377876281738
    9. ' coefficient' → logprob: -5.543377876281738
    10. 'coef' → logprob: -5.668377876281738

Token 257: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.20608407258987427
    2. '_' → logprob: -2.5810840129852295
    3. 'de' → logprob: -3.2060840129852295
    4. '_de' → logprob: -3.3310840129852295
    5. 'from' → logprob: -4.581084251403809
    6. 'import' → logprob: -5.206084251403809
    7. '\' → logprob: -5.956084251403809
    8. '(' → logprob: -6.081084251403809
    9. ' _' → logprob: -6.581084251403809
    10. '=' → logprob: -6.706084251403809

Token 258: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.04994843155145645
    2. 'com' → logprob: -3.0499484539031982
    3. ' comb' → logprob: -6.674948215484619
    4. '\' → logprob: -10.674948692321777
    5. 'coeff' → logprob: -11.049948692321777
    6. 'Comb' → logprob: -11.299948692321777
    7. ' combinations' → logprob: -11.424948692321777
    8. '   ' → logprob: -11.674948692321777
    9. '#' → logprob: -12.424948692321777
    10. 'komb' → logprob: -12.549948692321777

Token 259: 'inais' (ID: 42744)
  Prédit: 'inais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.0015134313143789768
    2. 'ina' → logprob: -6.501513481140137
    3. 'ais' → logprob: -12.376513481140137
    4. 'i' → logprob: -13.876513481140137
    5. 'in' → logprob: -13.876513481140137
    6. '_' → logprob: -14.126513481140137
    7. 'inations' → logprob: -14.126513481140137
    8. 'n' → logprob: -14.251513481140137
    9. '\' → logprob: -14.251513481140137
    10. 'inas' → logprob: -14.751513481140137

Token 260: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.004091935232281685
    2. 'on' → logprob: -5.504091739654541
    3. 'sons' → logprob: -11.8790922164917
    4. '#' → logprob: -12.2540922164917
    5. 'son' → logprob: -14.0040922164917
    6. '0' → logprob: -16.254091262817383
    7. 'ont' → logprob: -16.379091262817383
    8. 'n' → logprob: -16.629091262817383
    9. '\' → logprob: -16.754091262817383
    10. 's' → logprob: -16.879091262817383

Token 261: ' avec' (ID: 3937)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06702520698308945
    2. 'with' → logprob: -4.067025184631348
    3. 'import' → logprob: -4.192025184631348
    4. 'from' → logprob: -4.317025184631348
    5. 'n' → logprob: -5.192025184631348
    6. ' (' → logprob: -5.317025184631348
    7. '(' → logprob: -5.442025184631348
    8. 'C' → logprob: -7.567025184631348
    9. 'comb' → logprob: -7.817025184631348
    10. '((' → logprob: -7.817025184631348

Token 262: ' répét' (ID: 156936)
  Prédit: 'ré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ré' → logprob: -0.34128180146217346
    2. 'rep' → logprob: -1.716281771659851
    3. 'r' → logprob: -2.5912818908691406
    4. 're' → logprob: -4.466281890869141
    5. ' répét' → logprob: -4.466281890869141
    6. 'repr' → logprob: -5.716281890869141
    7. 'replacement' → logprob: -5.716281890869141
    8. 'n' → logprob: -6.216281890869141
    9. ' repetition' → logprob: -7.091281890869141
    10. '```' → logprob: -7.716281890869141

Token 263: 'ition' (ID: 868)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.05112825334072113
    2. 'p' → logprob: -4.176128387451172
    3. 'it' → logprob: -4.301128387451172
    4. 'ition' → logprob: -4.551128387451172
    5. 'ét' → logprob: -6.176128387451172
    6. 'petition' → logprob: -6.926128387451172
    7. 'ép' → logprob: -7.301128387451172
    8. '{' → logprob: -7.426128387451172
    9. 't' → logprob: -7.676128387451172
    10. 'h' → logprob: -7.676128387451172

Token 264: ' :
' (ID: 10039)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3121645748615265
    2. 'import' → logprob: -2.562164545059204
    3. 'from' → logprob: -2.937164545059204
    4. ' (' → logprob: -3.062164545059204
    5. 'def' → logprob: -3.062164545059204
    6. 'n' → logprob: -3.812164545059204
    7. '(r' → logprob: -4.687164783477783
    8. '(' → logprob: -5.562164783477783
    9. ' n' → logprob: -6.062164783477783
    10. ' def' → logprob: -6.312164783477783

Token 265: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.38789132237434387
    2. 'def' → logprob: -1.8878912925720215
    3. 'import' → logprob: -2.0128912925720215
    4. ' from' → logprob: -4.7628912925720215
    5. ' comb' → logprob: -4.8878912925720215
    6. ' def' → logprob: -5.2628912925720215
    7. 'comb' → logprob: -5.5128912925720215
    8. 'pow' → logprob: -6.3878912925720215
    9. 'sys' → logprob: -6.5128912925720215
    10. 'C' → logprob: -6.5128912925720215

Token 266: ' nombre' (ID: 9733)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5246598720550537
    2. 'import' → logprob: -2.0246598720550537
    3. 'def' → logprob: -2.5246598720550537
    4. '(n' → logprob: -2.7746598720550537
    5. ' comb' → logprob: -3.0246598720550537
    6. 'comb' → logprob: -4.274660110473633
    7. ' from' → logprob: -4.524660110473633
    8. ' n' → logprob: -4.774660110473633
    9. ' C' → logprob: -4.899660110473633
    10. 'C' → logprob: -4.899660110473633

Token 267: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.39004409313201904
    2. '_de' → logprob: -2.1400442123413086
    3. '_with' → logprob: -3.0150442123413086
    4. '(' → logprob: -3.0150442123413086
    5. ' =' → logprob: -3.1400442123413086
    6. '=' → logprob: -3.7650442123413086
    7. '(n' → logprob: -4.390044212341309
    8. '_com' → logprob: -4.515044212341309
    9. ' de' → logprob: -5.140044212341309
    10. ' avec' → logprob: -6.515044212341309

Token 268: ' C' (ID: 363)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.1354922652244568
    2. ' comb' → logprob: -2.3854923248291016
    3. 'math' → logprob: -3.5104923248291016
    4. 'C' → logprob: -5.885492324829102
    5. 'import' → logprob: -8.010492324829102
    6. 'pow' → logprob: -8.010492324829102
    7. 'com' → logprob: -8.010492324829102
    8. 'bin' → logprob: -8.135492324829102
    9. ' C' → logprob: -8.635492324829102
    10. 'from' → logprob: -9.260492324829102

Token 269: '((' (ID: 2054)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0029169765766710043
    2. '(n' → logprob: -6.3779168128967285
    3. '(' → logprob: -7.1279168128967285
    4. 'r' → logprob: -8.002917289733887
    5. ' (' → logprob: -9.627917289733887
    6. 'n' → logprob: -12.502917289733887
    7. '((' → logprob: -12.752917289733887
    8. ' r' → logprob: -12.752917289733887
    9. '(
' → logprob: -13.877917289733887
    10. '{' → logprob: -15.002917289733887

Token 270: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10473918169736862
    2. '(r' → logprob: -2.354739189147949
    3. 'n' → logprob: -5.479739189147949
    4. '(n' → logprob: -7.979739189147949
    5. ' (' → logprob: -12.22973918914795
    6. ' r' → logprob: -13.22973918914795
    7. '((' → logprob: -13.97973918914795
    8. ')' → logprob: -14.47973918914795
    9. '_r' → logprob: -14.97973918914795
    10. '(' → logprob: -15.22973918914795

Token 271: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2666318118572235
    2. '-n' → logprob: -1.516631841659546
    3. '-' → logprob: -4.391631603240967
    4. 'n' → logprob: -6.141631603240967
    5. ' n' → logprob: -10.016632080078125
    6. '_n' → logprob: -12.516632080078125
    7. ' ' → logprob: -12.641632080078125
    8. '−' → logprob: -13.391632080078125
    9. '
' → logprob: -13.516632080078125
    10. '+n' → logprob: -13.516632080078125

Token 272: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07201889157295227
    2. ' n' → logprob: -3.07201886177063
    3. '(n' → logprob: -3.82201886177063
    4. ' (' → logprob: -7.197019100189209
    5. 'r' → logprob: -8.07201862335205
    6. '(r' → logprob: -9.07201862335205
    7. '(m' → logprob: -9.94701862335205
    8. 'm' → logprob: -10.94701862335205
    9. ' ' → logprob: -11.82201862335205
    10. ' r' → logprob: -12.07201862335205

Token 273: '*m' (ID: 85049)
  Prédit: '*m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*m' → logprob: -0.01221952959895134
    2. 'm' → logprob: -4.512219429016113
    3. '*' → logprob: -6.762219429016113
    4. ' *' → logprob: -11.512219429016113
    5. ' m' → logprob: -12.762219429016113
    6. '+m' → logprob: -14.012219429016113
    7. '**' → logprob: -15.762219429016113
    8. '*
' → logprob: -15.762219429016113
    9. '+' → logprob: -16.26222038269043
    10. '
' → logprob: -16.76222038269043

Token 274: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6872417330741882
    2. '+n' → logprob: -1.187241792678833
    3. ')+' → logprob: -2.062241792678833
    4. '+' → logprob: -2.812241792678833
    5. ' +' → logprob: -5.562241554260254
    6. ')+(' → logprob: -7.437241554260254
    7. 'n' → logprob: -8.687241554260254
    8. ' ' → logprob: -10.937241554260254
    9. '}+' → logprob: -11.062241554260254
    10. '   ' → logprob: -11.562241554260254

Token 275: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8141586184501648
    2. '+n' → logprob: -0.9391586184501648
    3. ' +' → logprob: -1.8141586780548096
    4. '+r' → logprob: -6.9391584396362305
    5. '+k' → logprob: -7.6891584396362305
    6. ',' → logprob: -7.9391584396362305
    7. '+
' → logprob: -8.06415843963623
    8. ')' → logprob: -8.31415843963623
    9. ')+' → logprob: -8.68915843963623
    10. ',n' → logprob: -8.93915843963623

Token 276: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.491498531133402e-06
    2. ' n' → logprob: -11.750009536743164
    3. '(n' → logprob: -13.375009536743164
    4. '
' → logprob: -18.000009536743164
    5. '[n' → logprob: -19.375009536743164
    6. '_n' → logprob: -19.750009536743164
    7. '	n' → logprob: -20.250009536743164
    8. ')n' → logprob: -21.125009536743164
    9. '```' → logprob: -21.500009536743164
    10. '(' → logprob: -21.625009536743164

Token 277: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5760220885276794
    2. '-' → logprob: -0.8260220885276794
    3. ')' → logprob: -10.201022148132324
    4. ' ' → logprob: -11.451022148132324
    5. 'n' → logprob: -11.951022148132324
    6. '−' → logprob: -12.201022148132324
    7. ' n' → logprob: -12.326022148132324
    8. '1' → logprob: -12.451022148132324
    9. ',' → logprob: -12.576022148132324
    10. ' ' → logprob: -12.701022148132324

Token 278: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. '-' → logprob: -12.75000286102295
    3. ' ' → logprob: -17.000003814697266
    4. ' -' → logprob: -17.625003814697266
    5. '```' → logprob: -19.875003814697266
    6. ')' → logprob: -21.250003814697266
    7. 'n' → logprob: -21.500003814697266
    8. '۱' → logprob: -22.125003814697266
    9. '１' → logprob: -22.250003814697266
    10. '[' → logprob: -22.375003814697266

Token 279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017821287736296654
    2. ',r' → logprob: -4.642821311950684
    3. ',n' → logprob: -5.392821311950684
    4. ')' → logprob: -6.392821311950684
    5. ' ,' → logprob: -6.517821311950684
    6. '),' → logprob: -9.267821311950684
    7. 'import' → logprob: -10.267821311950684
    8. ',k' → logprob: -10.267821311950684
    9. ',(' → logprob: -11.142821311950684
    10. '(n' → logprob: -11.267821311950684

Token 280: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2543083131313324
    2. 'n' → logprob: -1.5043083429336548
    3. ' (' → logprob: -6.504308223724365
    4. '(n' → logprob: -7.254308223724365
    5. '(r' → logprob: -8.879308700561523
    6. ')n' → logprob: -11.629308700561523
    7. 'r' → logprob: -11.879308700561523
    8. ' r' → logprob: -12.004308700561523
    9. ')' → logprob: -12.754308700561523
    10. '((' → logprob: -12.879308700561523

Token 281: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.48694857954978943
    2. ' -' → logprob: -1.2369486093521118
    3. ')' → logprob: -2.3619484901428223
    4. '<|end|>' → logprob: -7.736948490142822
    5. ' )' → logprob: -8.36194896697998
    6. ',' → logprob: -9.11194896697998
    7. '-)' → logprob: -9.48694896697998
    8. ')-' → logprob: -9.86194896697998
    9. '<|end|>' → logprob: -10.86194896697998
    10. '),' → logprob: -11.11194896697998

Token 282: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. ')' → logprob: -16.125001907348633
    4. '```' → logprob: -17.375001907348633
    5. '<|end|>' → logprob: -18.250001907348633
    6. '１' → logprob: -18.750001907348633
    7. '2' → logprob: -18.875001907348633
    8. '
' → logprob: -19.125001907348633
    9. '۱' → logprob: -19.750001907348633
    10. 'import' → logprob: -20.062501907348633

Token 283: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. ' )' → logprob: -12.625005722045898
    3. ')
' → logprob: -14.000005722045898
    4. '))' → logprob: -14.500005722045898
    5. ')`' → logprob: -15.250005722045898
    6. '),' → logprob: -16.0000057220459
    7. '#' → logprob: -16.3750057220459
    8. ')#' → logprob: -16.3750057220459
    9. '+' → logprob: -16.6250057220459
    10. ').' → logprob: -16.8750057220459

Token 284: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0032330751419067
    2. 'import' → logprob: -1.1282330751419067
    3. 'def' → logprob: -1.5032330751419067
    4. 'if' → logprob: -2.503232955932617
    5. 'r' → logprob: -6.378232955932617
    6. 'k' → logprob: -7.128232955932617
    7. 'result' → logprob: -7.378232955932617
    8. '```' → logprob: -7.628232955932617
    9. '0' → logprob: -8.003232955932617
    10. ' from' → logprob: -8.378232955932617

Token 285: ' Pour' (ID: 13931)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4997543692588806
    2. 'from' → logprob: -1.2497544288635254
    3. 'def' → logprob: -2.2497544288635254
    4. 'if' → logprob: -7.249754428863525
    5. 'MOD' → logprob: -7.499754428863525
    6. 'mod' → logprob: -10.499753952026367
    7. '```' → logprob: -12.124753952026367
    8. '#' → logprob: -12.124753952026367
    9. ' from' → logprob: -12.249753952026367
    10. ' import' → logprob: -12.749753952026367

Token 286: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.1472550630569458
    2. ' calcul' → logprob: -2.1472549438476562
    3. 'import' → logprob: -4.897254943847656
    4. 'cal' → logprob: -5.772254943847656
    5. 'fac' → logprob: -6.022254943847656
    6. 'com' → logprob: -6.897254943847656
    7. 'impl' → logprob: -7.272254943847656
    8. ' éviter' → logprob: -7.397254943847656
    9. 'factor' → logprob: -7.647254943847656
    10. 'comput' → logprob: -7.897254943847656

Token 287: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.3453676700592041
    2. 'l' → logprob: -1.970367670059204
    3. '#' → logprob: -2.845367670059204
    4. 'cul' → logprob: -3.345367670059204
    5. 'lator' → logprob: -4.470367431640625
    6. 'c' → logprob: -4.720367431640625
    7. 'ul' → logprob: -4.720367431640625
    8. 'import' → logprob: -4.845367431640625
    9. 'r' → logprob: -5.970367431640625
    10. '```' → logprob: -6.220367431640625

Token 288: ' cette' (ID: 7696)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.438103049993515
    2. ' comb' → logprob: -1.5631030797958374
    3. 'def' → logprob: -3.188102960586548
    4. ' def' → logprob: -3.688102960586548
    5. ' le' → logprob: -4.063103199005127
    6. 'la' → logprob: -4.188103199005127
    7. 'import' → logprob: -4.313103199005127
    8. 'C' → logprob: -4.438103199005127
    9. 'comb' → logprob: -4.688103199005127
    10. ' C' → logprob: -5.938103199005127

Token 289: ' combinaison' (ID: 165933)
  Prédit: ' combinaison'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combinaison' → logprob: -0.3775794208049774
    2. 'comb' → logprob: -1.6275794506072998
    3. 'import' → logprob: -2.8775794506073
    4. 'nombre' → logprob: -3.8775794506073
    5. 'com' → logprob: -4.752579212188721
    6. ' comb' → logprob: -4.752579212188721
    7. 'def' → logprob: -4.752579212188721
    8. ' combin' → logprob: -6.002579212188721
    9. ' combination' → logprob: -6.127579212188721
    10. 'from' → logprob: -6.127579212188721

Token 290: ' rapidement' (ID: 43157)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.41480016708374023
    2. ',' → logprob: -1.1648001670837402
    3. '(' → logprob: -4.41480016708374
    4. ':' → logprob: -5.03980016708374
    5. ' def' → logprob: -5.91480016708374
    6. '(n' → logprob: -6.28980016708374
    7. 'import' → logprob: -6.41480016708374
    8. ' (' → logprob: -7.03980016708374
    9. ' ,' → logprob: -8.039800643920898
    10. ')' → logprob: -8.164800643920898

Token 291: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24825669825077057
    2. 'import' → logprob: -1.9982566833496094
    3. 'from' → logprob: -2.7482566833496094
    4. ',' → logprob: -4.998256683349609
    5. ' def' → logprob: -5.248256683349609
    6. ' from' → logprob: -5.998256683349609
    7. 'fact' → logprob: -6.623256683349609
    8. 'result' → logprob: -6.748256683349609
    9. 'res' → logprob: -7.373256683349609
    10. ':' → logprob: -7.498256683349609

Token 292: ' on' (ID: 402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32792577147483826
    2. 'from' → logprob: -1.9529258012771606
    3. 'import' → logprob: -2.077925682067871
    4. '#' → logprob: -5.202925682067871
    5. 'fact' → logprob: -6.077925682067871
    6. ' from' → logprob: -6.452925682067871
    7. 'mod' → logprob: -6.577925682067871
    8. 'factor' → logprob: -7.452925682067871
    9. ' def' → logprob: -7.702925682067871
    10. ' import' → logprob: -8.577925682067871

Token 293: ' utilise' (ID: 70283)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.12584003806114197
    2. 'from' → logprob: -2.625839948654175
    3. 'def' → logprob: -3.250839948654175
    4. 'util' → logprob: -6.125840187072754
    5. ' import' → logprob: -6.750840187072754
    6. 'importe' → logprob: -6.875840187072754
    7. ''ll' → logprob: -7.875840187072754
    8. '#' → logprob: -8.250840187072754
    9. '...' → logprob: -8.375840187072754
    10. ' va' → logprob: -8.875840187072754

Token 294: ' une' (ID: 2463)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.32007893919944763
    2. 'la' → logprob: -2.5700788497924805
    3. 'def' → logprob: -2.6950788497924805
    4. 'import' → logprob: -2.6950788497924805
    5. 'math' → logprob: -3.8200788497924805
    6. ' la' → logprob: -4.3200788497924805
    7. 'une' → logprob: -4.6950788497924805
    8. '```' → logprob: -5.1950788497924805
    9. 'pas' → logprob: -5.3200788497924805
    10. ' une' → logprob: -5.9450788497924805

Token 295: ' fonction' (ID: 17610)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3776049315929413
    2. 'from' → logprob: -1.5026049613952637
    3. 'def' → logprob: -3.8776049613952637
    4. 'factor' → logprob: -4.002604961395264
    5. 'dynamic' → logprob: -4.002604961395264
    6. 'fact' → logprob: -5.002604961395264
    7. 'memo' → logprob: -5.377604961395264
    8. 'pas' → logprob: -5.752604961395264
    9. 'dp' → logprob: -6.002604961395264
    10. 'dé' → logprob: -6.127604961395264

Token 296: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007568581495434046
    2. ' def' → logprob: -7.500756740570068
    3. 'from' → logprob: -9.250757217407227
    4. 'import' → logprob: -9.500757217407227
    5. 'factor' → logprob: -11.375757217407227
    6. 'de' → logprob: -12.000757217407227
    7. ' déf' → logprob: -12.625757217407227
    8. '_factor' → logprob: -13.500757217407227
    9. 'comb' → logprob: -13.750757217407227
    10. '#' → logprob: -13.750757217407227

Token 297: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0038975838106125593
    2. ' def' → logprob: -6.128897666931152
    3. 'from' → logprob: -6.503897666931152
    4. 'import' → logprob: -8.503897666931152
    5. ' from' → logprob: -12.003897666931152
    6. 'pow' → logprob: -12.753897666931152
    7. 'factor' → logprob: -14.378897666931152
    8. '```' → logprob: -15.253897666931152
    9. ' factorial' → logprob: -15.378897666931152
    10. ' import' → logprob: -16.128896713256836

Token 298: ' factor' (ID: 12332)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00857024546712637
    2. 'from' → logprob: -4.883570194244385
    3. 'import' → logprob: -7.508570194244385
    4. ' def' → logprob: -7.883570194244385
    5. ' from' → logprob: -10.633570671081543
    6. 'pow' → logprob: -12.008570671081543
    7. 'factor' → logprob: -12.258570671081543
    8. ' factorial' → logprob: -13.883570671081543
    9. 'comb' → logprob: -14.133570671081543
    10. '```' → logprob: -14.258570671081543

Token 299: 'ielle' (ID: 22380)
  Prédit: 'ial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.27699360251426697
    2. 'def' → logprob: -1.9019936323165894
    3. 'ials' → logprob: -3.1519935131073
    4. 'iel' → logprob: -3.6519935131073
    5. 'ialize' → logprob: -4.651993751525879
    6. 'ielle' → logprob: -4.901993751525879
    7. 'al' → logprob: -5.901993751525879
    8. 'import' → logprob: -7.026993751525879
    9. 'e' → logprob: -7.151993751525879
    10. '_' → logprob: -7.651993751525879

Token 300: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.554343366995454e-05
    2. 'import' → logprob: -10.125085830688477
    3. '(' → logprob: -10.875085830688477
    4. 'de' → logprob: -11.375085830688477
    5. ')' → logprob: -12.125085830688477
    6. '(
' → logprob: -13.250085830688477
    7. '_' → logprob: -13.625085830688477
    8. 'from' → logprob: -13.750085830688477
    9. '_def' → logprob: -13.875085830688477
    10. ':' → logprob: -14.000085830688477

Token 301: ' fonction' (ID: 17610)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3918246030807495
    2. 'comb' → logprob: -1.5168246030807495
    3. 'une' → logprob: -3.516824722290039
    4. 'import' → logprob: -3.891824722290039
    5. ' une' → logprob: -4.141824722290039
    6. ' comb' → logprob: -5.141824722290039
    7. 'mod' → logprob: -5.641824722290039
    8. ' combinaison' → logprob: -5.641824722290039
    9. 'inverse' → logprob: -5.641824722290039
    10. 'c' → logprob: -5.766824722290039

Token 302: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09620805829763412
    2. 's' → logprob: -2.971208095550537
    3. 'import' → logprob: -4.221208095550537
    4. '_comb' → logprob: -5.096208095550537
    5. '=' → logprob: -5.471208095550537
    6. '_' → logprob: -5.971208095550537
    7. 'de' → logprob: -6.096208095550537
    8. 'comb' → logprob: -6.346208095550537
    9. ' def' → logprob: -6.471208095550537
    10. 'from' → logprob: -6.721208095550537

Token 303: ' combinaison' (ID: 165933)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.05345672369003296
    2. ' combinaison' → logprob: -3.1784567832946777
    3. ' comb' → logprob: -5.428456783294678
    4. 'com' → logprob: -5.553456783294678
    5. ' combination' → logprob: -6.803456783294678
    6. ' combin' → logprob: -8.80345630645752
    7. '```' → logprob: -8.80345630645752
    8. 'factor' → logprob: -9.05345630645752
    9. 'bin' → logprob: -9.42845630645752
    10. 'coeff' → logprob: -9.55345630645752

Token 304: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0813208520412445
    2. 'import' → logprob: -2.5813207626342773
    3. 'from' → logprob: -6.081320762634277
    4. '#' → logprob: -10.331320762634277
    5. '```' → logprob: -11.081320762634277
    6. 'factor' → logprob: -11.206320762634277
    7. ':' → logprob: -11.456320762634277
    8. ' def' → logprob: -11.706320762634277
    9. '1' → logprob: -11.831320762634277
    10. 'sys' → logprob: -11.956320762634277

Token 305: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.45464450120925903
    2. 'from' → logprob: -1.7046444416046143
    3. 'def' → logprob: -1.7046444416046143
    4. 'MOD' → logprob: -7.079644680023193
    5. 'fact' → logprob: -7.704644680023193
    6. 'factor' → logprob: -8.704644203186035
    7. '```' → logprob: -8.954644203186035
    8. 'mod' → logprob: -9.954644203186035
    9. ' from' → logprob: -12.079644203186035
    10. ' import' → logprob: -12.829644203186035

Token 306: ' Impl' (ID: 144563)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9608855247497559
    2. 'def' → logprob: -0.9608855247497559
    3. 'from' → logprob: -1.7108855247497559
    4. 'MOD' → logprob: -2.960885524749756
    5. 'fact' → logprob: -6.835885524749756
    6. 'MAX' → logprob: -7.710885524749756
    7. 'mod' → logprob: -7.710885524749756
    8. 'factor' → logprob: -7.835885524749756
    9. 'max' → logprob: -10.210886001586914
    10. '```' → logprob: -12.210886001586914

Token 307: 'ément' (ID: 17645)
  Prédit: 'ort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ort' → logprob: -0.6264326572418213
    2. 'def' → logprob: -1.1264326572418213
    3. 'import' → logprob: -2.0014326572418213
    4. 'ement' → logprob: -5.376432418823242
    5. 'port' → logprob: -6.876432418823242
    6. 'ément' → logprob: -8.626432418823242
    7. 'orts' → logprob: -9.251432418823242
    8. '```' → logprob: -9.501432418823242
    9. 'em' → logprob: -9.751432418823242
    10. '#' → logprob: -10.376432418823242

Token 308: 'ation' (ID: 387)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6840940117835999
    2. 'import' → logprob: -0.8090940117835999
    3. 'from' → logprob: -3.059093952178955
    4. ' def' → logprob: -7.184093952178955
    5. 'port' → logprob: -7.559093952178955
    6. ' from' → logprob: -7.684093952178955
    7. '
' → logprob: -8.559094429016113
    8. ' import' → logprob: -8.559094429016113
    9. 'fact' → logprob: -8.559094429016113
    10. 'ef' → logprob: -8.684094429016113

Token 309: ' efficace' (ID: 54338)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4663775563240051
    2. 'import' → logprob: -1.2163774967193604
    3. 'from' → logprob: -2.8413774967193604
    4. 'fact' → logprob: -4.8413777351379395
    5. 'MOD' → logprob: -5.2163777351379395
    6. 'factor' → logprob: -5.8413777351379395
    7. 'mod' → logprob: -6.5913777351379395
    8. 'MAX' → logprob: -8.091377258300781
    9. 'max' → logprob: -9.591377258300781
    10. '```' → logprob: -10.216377258300781

Token 310: ' avec' (ID: 3937)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5512092113494873
    2. 'import' → logprob: -1.4262092113494873
    3. 'from' → logprob: -1.9262092113494873
    4. 'MOD' → logprob: -3.4262092113494873
    5. 'mod' → logprob: -5.801209449768066
    6. 'fact' → logprob: -7.051209449768066
    7. 'factor' → logprob: -7.426209449768066
    8. 'MAX' → logprob: -7.551209449768066
    9. '```' → logprob: -9.176209449768066
    10. 'max' → logprob: -9.176209449768066

Token 311: ' calcul' (ID: 7559)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.06452254205942154
    2. 'une' → logprob: -3.8145225048065186
    3. 'l' → logprob: -4.814522743225098
    4. ' memo' → logprob: -5.439522743225098
    5. 'import' → logprob: -5.564522743225098
    6. 'la' → logprob: -5.814522743225098
    7. 'un' → logprob: -6.064522743225098
    8. 'pas' → logprob: -6.314522743225098
    9. 'sys' → logprob: -6.314522743225098
    10. 'mé' → logprob: -6.439522743225098

Token 312: ' direct' (ID: 2823)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.48700276017189026
    2. 'import' → logprob: -1.4870027303695679
    3. '_factor' → logprob: -2.7370028495788574
    4. '_mod' → logprob: -3.1120028495788574
    5. '_de' → logprob: -4.737002849578857
    6. '_fact' → logprob: -4.987002849578857
    7. '_fac' → logprob: -5.112002849578857
    8. 'from' → logprob: -5.237002849578857
    9. '_' → logprob: -5.237002849578857
    10. 'de' → logprob: -5.362002849578857

Token 313: ' combinaison' (ID: 165933)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0050285751931369305
    2. ' def' → logprob: -6.50502872467041
    3. 'import' → logprob: -7.13002872467041
    4. 'if' → logprob: -7.25502872467041
    5. 'result' → logprob: -7.50502872467041
    6. 'res' → logprob: -8.13002872467041
    7. 'k' → logprob: -8.50502872467041
    8. 't' → logprob: -8.88002872467041
    9. 'from' → logprob: -9.25502872467041
    10. '```' → logprob: -9.50502872467041

Token 314: ' sans' (ID: 9828)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005788242910057306
    2. 'import' → logprob: -6.005788326263428
    3. 'if' → logprob: -7.130788326263428
    4. 'from' → logprob: -7.130788326263428
    5. '(
' → logprob: -7.880788326263428
    6. ')' → logprob: -8.00578784942627
    7. ' def' → logprob: -8.25578784942627
    8. '```' → logprob: -9.25578784942627
    9. '#' → logprob: -9.50578784942627
    10. 'k' → logprob: -9.63078784942627

Token 315: ' factor' (ID: 12332)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2190394550561905
    2. 'util' → logprob: -3.0940394401550293
    3. 'factor' → logprob: -3.4690394401550293
    4. 'division' → logprob: -3.7190394401550293
    5. ' utiliser' → logprob: -3.8440394401550293
    6. 'div' → logprob: -4.094039440155029
    7. ' import' → logprob: -4.719039440155029
    8. 'calcul' → logprob: -5.094039440155029
    9. ' division' → logprob: -5.219039440155029
    10. 'pas' → logprob: -5.594039440155029

Token 316: 'ielle' (ID: 22380)
  Prédit: 'actor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.8460673689842224
    2. 'or' → logprob: -1.5960674285888672
    3. 'ac' → logprob: -2.471067428588867
    4. 'ial' → logprob: -2.596067428588867
    5. 'orial' → logprob: -3.096067428588867
    6. 'def' → logprob: -3.221067428588867
    7. '```' → logprob: -3.471067428588867
    8. '=' → logprob: -3.846067428588867
    9. 'orm' → logprob: -4.346067428588867
    10. 'import' → logprob: -4.846067428588867

Token 317: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006840797723270953
    2. 'import' → logprob: -8.250683784484863
    3. 'if' → logprob: -8.375683784484863
    4. 'from' → logprob: -9.875683784484863
    5. 'k' → logprob: -10.375683784484863
    6. ')' → logprob: -11.000683784484863
    7. ' def' → logprob: -11.250683784484863
    8. '```' → logprob: -11.375683784484863
    9. '
' → logprob: -11.500683784484863
    10. 'result' → logprob: -11.625683784484863

Token 318: ' éviter' (ID: 64013)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.7816585898399353
    2. 'k' → logprob: -1.28165864944458
    3. 'i' → logprob: -1.65665864944458
    4. ' i' → logprob: -3.03165864944458
    5. ' comb' → logprob: -4.65665864944458
    6. 'comb' → logprob: -4.78165864944458
    7. '_' → logprob: -6.03165864944458
    8. ' _' → logprob: -6.15665864944458
    9. ' éviter' → logprob: -7.15665864944458
    10. ' j' → logprob: -8.281658172607422

Token 319: ' 
' (ID: 793)
  Prédit: ' overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' overflow' → logprob: -0.8108505606651306
    2. ' les' → logprob: -0.9358505606651306
    3. ' la' → logprob: -3.0608506202697754
    4. 'les' → logprob: -3.1858506202697754
    5. 'overflow' → logprob: -3.3108506202697754
    6. ' l' → logprob: -3.6858506202697754
    7. 'l' → logprob: -5.560850620269775
    8. 'la' → logprob: -6.060850620269775
    9. ' une' → logprob: -6.560850620269775
    10. 'large' → logprob: -6.935850620269775

Token 320: '#' (ID: 2)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6256198287010193
    2. ' les' → logprob: -1.125619888305664
    3. 'les' → logprob: -2.750619888305664
    4. 'la' → logprob: -4.000619888305664
    5. ' overflow' → logprob: -4.375619888305664
    6. 'l' → logprob: -4.500619888305664
    7. ' l' → logprob: -4.625619888305664
    8. ' de' → logprob: -5.500619888305664
    9. 'overflow' → logprob: -5.500619888305664
    10. 'mod' → logprob: -6.000619888305664

Token 321: ' problems' (ID: 6840)
  Prédit: 'overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'overflow' → logprob: -0.6778608560562134
    2. ' overflow' → logprob: -0.8028608560562134
    3. 'large' → logprob: -4.177860736846924
    4. ' grandes' → logprob: -5.052860736846924
    5. 'import' → logprob: -5.552860736846924
    6. ' large' → logprob: -5.927860736846924
    7. 'gr' → logprob: -6.302860736846924
    8. ' la' → logprob: -6.302860736846924
    9. 'g' → logprob: -6.427860736846924
    10. 'l' → logprob: -6.552860736846924

Token 322: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011824887478724122
    2. ' def' → logprob: -7.126182556152344
    3. ')' → logprob: -8.126182556152344
    4. 'k' → logprob: -11.501182556152344
    5. 'import' → logprob: -11.501182556152344
    6. 'n' → logprob: -11.626182556152344
    7. '1' → logprob: -12.126182556152344
    8. 'from' → logprob: -12.126182556152344
    9. 'result' → logprob: -12.126182556152344
    10. '#' → logprob: -12.626182556152344

Token 323: ' performances' (ID: 27880)
  Prédit: 'overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'overflow' → logprob: -0.21826809644699097
    2. ' overflow' → logprob: -2.9682681560516357
    3. 'l' → logprob: -3.2182681560516357
    4. 'd' → logprob: -3.4682681560516357
    5. 'dé' → logprob: -4.593267917633057
    6. 'la' → logprob: -4.843267917633057
    7. 'performance' → logprob: -4.843267917633057
    8. 'large' → logprob: -5.093267917633057
    9. 'division' → logprob: -5.093267917633057
    10. ' mémoire' → logprob: -5.718267917633057

Token 324: ' sur' (ID: 1512)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011580813443288207
    2. ' def' → logprob: -8.001157760620117
    3. 'result' → logprob: -8.251157760620117
    4. 'res' → logprob: -8.626157760620117
    5. 'k' → logprob: -9.501157760620117
    6. '```' → logprob: -10.251157760620117
    7. 'comb' → logprob: -10.251157760620117
    8. 't' → logprob: -10.501157760620117
    9. 'import' → logprob: -10.626157760620117
    10. ')' → logprob: -10.626157760620117

Token 325: ' grands' (ID: 43085)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.4826391935348511
    2. 'de' → logprob: -2.1076393127441406
    3. 'gr' → logprob: -2.7326393127441406
    4. 'la' → logprob: -2.8576393127441406
    5. ' les' → logprob: -3.2326393127441406
    6. 'large' → logprob: -3.4826393127441406
    7. ' de' → logprob: -4.232639312744141
    8. 'r' → logprob: -4.482639312744141
    9. 'long' → logprob: -4.982639312744141
    10. ' grandes' → logprob: -4.982639312744141

Token 326: ' nombres' (ID: 76205)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14933562278747559
    2. ' def' → logprob: -2.0243356227874756
    3. ' n' → logprob: -6.274335861206055
    4. ')' → logprob: -6.899335861206055
    5. ' comb' → logprob: -6.899335861206055
    6. 'n' → logprob: -7.649335861206055
    7. 'import' → logprob: -7.774335861206055
    8. 'r' → logprob: -7.899335861206055
    9. ' ' → logprob: -8.524335861206055
    10. 'comb' → logprob: -8.649335861206055

Token 327: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007846142980270088
    2. ')' → logprob: -7.625784397125244
    3. ' def' → logprob: -9.250784873962402
    4. 'd' → logprob: -10.125784873962402
    5. '
' → logprob: -10.125784873962402
    6. '(
' → logprob: -10.500784873962402
    7. '\' → logprob: -10.750784873962402
    8. 'result' → logprob: -11.875784873962402
    9. 'comb' → logprob: -11.875784873962402
    10. 'n' → logprob: -12.375784873962402

Token 328: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.618001053633634e-05
    2. '
' → logprob: -12.000025749206543
    3. ' def' → logprob: -12.500025749206543
    4. 'result' → logprob: -12.750025749206543
    5. '

' → logprob: -12.875025749206543
    6. '```' → logprob: -12.875025749206543
    7. 'import' → logprob: -13.000025749206543
    8. 'res' → logprob: -13.625025749206543
    9. '#' → logprob: -13.750025749206543
    10. 'from' → logprob: -13.875025749206543

Token 329: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.040132880210876465
    2. ' comb' → logprob: -3.665132999420166
    3. 'n' → logprob: -5.165132999420166
    4. ' n' → logprob: -5.290132999420166
    5. ' combination' → logprob: -6.665132999420166
    6. ' combinaison' → logprob: -6.665132999420166
    7. 'com' → logprob: -8.040132522583008
    8. ' combinations' → logprob: -10.165132522583008
    9. 'combine' → logprob: -10.415132522583008
    10. 'combo' → logprob: -11.665132522583008

Token 330: '(a' (ID: 6271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0008397616329602897
    2. 'ination' → logprob: -7.375839710235596
    3. '(a' → logprob: -9.500840187072754
    4. '(num' → logprob: -9.750840187072754
    5. '(k' → logprob: -10.750840187072754
    6. '(x' → logprob: -10.875840187072754
    7. 'n' → logprob: -11.750840187072754
    8. '(l' → logprob: -12.250840187072754
    9. '(i' → logprob: -12.500840187072754
    10. '(com' → logprob: -12.750840187072754

Token 331: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004359740763902664
    2. ',b' → logprob: -5.504359722137451
    3. ' ,' → logprob: -8.25436019897461
    4. 'b' → logprob: -11.50436019897461
    5. ',n' → logprob: -12.25436019897461
    6. ',k' → logprob: -13.37936019897461
    7. ',a' → logprob: -13.50436019897461
    8. ' b' → logprob: -14.00436019897461
    9. ',r' → logprob: -14.00436019897461
    10. ',int' → logprob: -14.12936019897461

Token 332: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.2729995988775045e-06
    2. ' b' → logprob: -12.000006675720215
    3. 'k' → logprob: -18.0000057220459
    4. '```' → logprob: -20.5000057220459
    5. '   ' → logprob: -21.3750057220459
    6. '	b' → logprob: -21.7500057220459
    7. '
' → logprob: -22.7500057220459
    8. ' ' → logprob: -23.3750057220459
    9. '  ' → logprob: -23.6250057220459
    10. '
' → logprob: -23.6250057220459

Token 333: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004823718685656786
    2. '):
' → logprob: -5.379823684692383
    3. ')' → logprob: -8.879823684692383
    4. '):
' → logprob: -9.754823684692383
    5. ':' → logprob: -12.129823684692383
    6. ' ):' → logprob: -14.629823684692383
    7. '   ' → logprob: -16.129823684692383
    8. '}:' → logprob: -16.504823684692383
    9. '):

' → logprob: -16.879823684692383
    10. ')：' → logprob: -17.129823684692383

Token 334: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4169263243675232
    2. ':' → logprob: -1.416926383972168
    3. ' if' → logprob: -3.166926383972168
    4. ' (' → logprob: -3.916926383972168
    5. ' 
' → logprob: -5.166926383972168
    6. '(' → logprob: -5.291926383972168
    7. '(a' → logprob: -5.416926383972168
    8. ' ' → logprob: -6.041926383972168
    9. '    
' → logprob: -6.166926383972168
    10. '  ' → logprob: -6.166926383972168

Token 335: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.028386346995830536
    2. ' if' → logprob: -4.028386116027832
    3. 'result' → logprob: -4.778386116027832
    4. 'res' → logprob: -6.653386116027832
    5. '   ' → logprob: -7.778386116027832
    6. ' res' → logprob: -10.153386116027832
    7. ' result' → logprob: -11.153386116027832
    8. '	if' → logprob: -12.153386116027832
    9. '    
' → logprob: -12.403386116027832
    10. 'b' → logprob: -13.903386116027832

Token 336: ' calc' (ID: 25691)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3013171851634979
    2. ' if' → logprob: -1.5513172149658203
    3. 'result' → logprob: -3.5513172149658203
    4. 'b' → logprob: -4.30131721496582
    5. ' result' → logprob: -6.05131721496582
    6. '   ' → logprob: -6.55131721496582
    7. ' b' → logprob: -6.67631721496582
    8. 'res' → logprob: -7.67631721496582
    9. ' res' → logprob: -7.80131721496582
    10. 'r' → logprob: -11.55131721496582

Token 337: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.3166009783744812
    2. 'ulate' → logprob: -1.316601037979126
    3. 'ul' → logprob: -6.316600799560547
    4. 'ulte' → logprob: -6.816600799560547
    5. 'uler' → logprob: -7.941600799560547
    6. 'cule' → logprob: -11.191600799560547
    7. 'ulator' → logprob: -11.316600799560547
    8. 'ulé' → logprob: -11.441600799560547
    9. 'culate' → logprob: -11.566600799560547
    10. '#' → logprob: -12.316600799560547

Token 338: ' C' (ID: 363)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.3989323675632477
    2. ' a' → logprob: -2.023932456970215
    3. '   ' → logprob: -2.648932456970215
    4. ' la' → logprob: -3.023932456970215
    5. ' the' → logprob: -4.023932456970215
    6. 'a' → logprob: -4.773932456970215
    7. ' ' → logprob: -5.023932456970215
    8. ' combination' → logprob: -5.273932456970215
    9. ' (' → logprob: -5.398932456970215
    10. ' l' → logprob: -5.398932456970215

Token 339: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6331914067268372
    2. '(a' → logprob: -0.7581914067268372
    3. ' a' → logprob: -8.133191108703613
    4. '   ' → logprob: -8.758191108703613
    5. '[a' → logprob: -10.133191108703613
    6. '(' → logprob: -10.258191108703613
    7. 'def' → logprob: -10.508191108703613
    8. 'int' → logprob: -11.758191108703613
    9. '	a' → logprob: -11.883191108703613
    10. '
' → logprob: -12.508191108703613

Token 340: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002522149821743369
    2. ',b' → logprob: -6.127521991729736
    3. ' ,' → logprob: -8.002522468566895
    4. ' b' → logprob: -14.127522468566895
    5. 'b' → logprob: -14.377522468566895
    6. ',k' → logprob: -14.502522468566895
    7. ',a' → logprob: -14.877522468566895
    8. '   ' → logprob: -16.252521514892578
    9. ' ' → logprob: -17.252521514892578
    10. 'a' → logprob: -17.377521514892578

Token 341: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014843061566352844
    2. '):' → logprob: -4.514842987060547
    3. '):
' → logprob: -5.889842987060547
    4. ')
' → logprob: -7.139842987060547
    5. ' )' → logprob: -8.764842987060547
    6. '):
' → logprob: -10.139842987060547
    7. ')
' → logprob: -11.014842987060547
    8. ' ):' → logprob: -12.389842987060547
    9. '   ' → logprob: -12.514842987060547
    10. ' ):
' → logprob: -13.389842987060547

Token 342: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2434842884540558
    2. '   ' → logprob: -1.6184842586517334
    3. ' :' → logprob: -4.7434844970703125
    4. '):' → logprob: -5.2434844970703125
    5. ':
' → logprob: -6.3684844970703125
    6. ',' → logprob: -7.1184844970703125
    7. '():' → logprob: -7.6184844970703125
    8. ')' → logprob: -8.243484497070312
    9. '):
' → logprob: -8.993484497070312
    10. ' if' → logprob: -9.243484497070312

Token 343: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.24353429675102234
    2. ' res' → logprob: -1.7435343265533447
    3. ' result' → logprob: -3.9935343265533447
    4. 'if' (adapté à ' if') → logprob: -4.118534088134766
    5. 'result' → logprob: -5.868534088134766
    6. 'res' → logprob: -5.993534088134766
    7. '   ' → logprob: -6.743534088134766
    8. 'r' → logprob: -11.493534088134766
    9. ' r' → logprob: -11.493534088134766
    10. ' ' → logprob: -11.993534088134766

Token 344: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12693072855472565
    2. ' b' → logprob: -2.1269307136535645
    3. 'a' → logprob: -13.501931190490723
    4. '	b' → logprob: -13.876931190490723
    5. ' a' → logprob: -16.376930236816406
    6. '   ' → logprob: -16.751930236816406
    7. '```' → logprob: -16.876930236816406
    8. ' ' → logprob: -17.501930236816406
    9. '(b' → logprob: -17.501930236816406
    10. '_b' → logprob: -17.751930236816406

Token 345: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3520140051841736
    2. '>' → logprob: -1.2270140647888184
    3. ' ==' → logprob: -6.227014064788818
    4. '==' → logprob: -6.477014064788818
    5. '=' → logprob: -10.72701358795166
    6. '>a' → logprob: -12.10201358795166
    7. ' ' → logprob: -12.22701358795166
    8. '0' → logprob: -12.22701358795166
    9. '<' → logprob: -12.72701358795166
    10. '>b' → logprob: -13.35201358795166

Token 346: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0002613358374219388
    2. ' a' → logprob: -8.250261306762695
    3. '	a' → logprob: -17.375261306762695
    4. '   ' → logprob: -20.250261306762695
    5. '(a' → logprob: -21.000261306762695
    6. ' ' → logprob: -22.000261306762695
    7. '[a' → logprob: -22.250261306762695
    8. ' ' → logprob: -22.375261306762695
    9. 'а' → logprob: -22.625261306762695
    10. '>a' → logprob: -22.875261306762695

Token 347: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2193692922592163
    2. ' or' → logprob: -1.7193692922592163
    3. ' :' → logprob: -4.594369411468506
    4. ':
' → logprob: -5.344369411468506
    5. '   ' → logprob: -6.969369411468506
    6. ' b' → logprob: -7.594369411468506
    7. ' ' → logprob: -7.719369411468506
    8. ' a' → logprob: -7.844369411468506
    9. ' :
' → logprob: -8.719368934631348
    10. 'a' → logprob: -9.219368934631348

Token 348: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1269710510969162
    2. ' b' → logprob: -2.1269710063934326
    3. 'a' → logprob: -10.126971244812012
    4. ' a' → logprob: -12.876971244812012
    5. '   ' → logprob: -15.376971244812012
    6. '	b' → logprob: -15.626971244812012
    7. ' ' → logprob: -17.501970291137695
    8. ' б' → logprob: -17.876970291137695
    9. '(b' → logprob: -19.126970291137695
    10. '_b' → logprob: -19.501970291137695

Token 349: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3903471827507019
    2. '<' → logprob: -1.1403472423553467
    3. ' ==' → logprob: -6.015347003936768
    4. '==' → logprob: -7.015347003936768
    5. 'a' → logprob: -9.265347480773926
    6. ' ' → logprob: -11.640347480773926
    7. '[' → logprob: -11.765347480773926
    8. '=' → logprob: -12.265347480773926
    9. ' <=' → logprob: -12.265347480773926
    10. ' a' → logprob: -12.265347480773926

Token 350: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000553151941858232
    2. ' ' → logprob: -7.500553131103516
    3. '=' → logprob: -16.125553131103516
    4. '۰' → logprob: -17.750553131103516
    5. '   ' → logprob: -17.875553131103516
    6. '1' → logprob: -18.875553131103516
    7. ' =' → logprob: -19.750553131103516
    8. '  ' → logprob: -19.750553131103516
    9. ' ' → logprob: -19.813053131103516
    10. '
' → logprob: -19.875553131103516

Token 351: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '۰' → logprob: -19.25
    4. '1' → logprob: -21.125
    5. '=' → logprob: -21.5
    6. '０' → logprob: -22.375
    7. '٠' → logprob: -22.5
    8. '00' → logprob: -23.25
    9. '০' → logprob: -23.25
    10. '```' → logprob: -23.375

Token 352: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.099574513733387
    2. ':
' → logprob: -2.474574565887451
    3. ':return' → logprob: -4.974574565887451
    4. ' or' → logprob: -6.099574565887451
    5. '   ' → logprob: -6.599574565887451
    6. ' :' → logprob: -10.974574089050293
    7. '       ' → logprob: -11.349574089050293
    8. ':
' → logprob: -11.349574089050293
    9. '):
' → logprob: -12.349574089050293
    10. 'or' → logprob: -12.349574089050293

Token 353: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5902971029281616
    2. '       ' → logprob: -0.8402971029281616
    3. '0' → logprob: -4.465297222137451
    4. '1' → logprob: -7.090297222137451
    5. ' return' → logprob: -7.215297222137451
    6. 'return' → logprob: -7.340297222137451
    7. '
' → logprob: -8.715296745300293
    8. ' ' → logprob: -9.465296745300293
    9. ':return' → logprob: -9.840296745300293
    10. ':' → logprob: -10.215296745300293

Token 354: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9035484790802002
    2. '   ' → logprob: -1.2785484790802002
    3. 'return' (adapté à ' return') → logprob: -1.4035484790802002
    4. ' return' → logprob: -2.7785484790802
    5. '       ' → logprob: -4.903548240661621
    6. ' ' → logprob: -7.153548240661621
    7. '1' → logprob: -9.278548240661621
    8. '    ' → logprob: -9.403548240661621
    9. '  ' → logprob: -9.903548240661621
    10. '	return' → logprob: -10.403548240661621

Token 355: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -18.87500762939453
    4. '  ' → logprob: -21.75000762939453
    5. '۰' → logprob: -22.25000762939453
    6. ' ' → logprob: -22.87500762939453
    7. '```' → logprob: -23.00000762939453
    8. '000' → logprob: -23.12500762939453
    9. '    
' → logprob: -23.62500762939453
    10. '00' → logprob: -23.75000762939453

Token 356: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -22.5
    4. '000' → logprob: -22.5
    5. '۰' → logprob: -23.0
    6. '```' → logprob: -23.125
    7. '00' → logprob: -23.5
    8. '  ' → logprob: -24.375
    9. 'int' → logprob: -25.25
    10. '０' → logprob: -25.25

Token 357: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05863300710916519
    2. '
' → logprob: -3.4336330890655518
    3. '<|end|>' → logprob: -4.308632850646973
    4. '    
' → logprob: -4.933632850646973
    5. '  
' → logprob: -6.433632850646973
    6. '\n' → logprob: -7.558632850646973
    7. '  ' → logprob: -8.058632850646973
    8. '   
' → logprob: -8.308632850646973
    9. '<|end|>' → logprob: -8.558632850646973
    10. ' return' → logprob: -8.683632850646973

Token 358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12730257213115692
    2. '
' → logprob: -3.002302646636963
    3. '    
' → logprob: -3.377302646636963
    4. ' 
' → logprob: -4.127302646636963
    5. '  
' → logprob: -5.127302646636963
    6. '   
' → logprob: -5.627302646636963
    7. ' return' → logprob: -5.877302646636963
    8. '<|end|>' → logprob: -6.127302646636963
    9. 'return' → logprob: -7.377302646636963
    10. '0' → logprob: -7.502302646636963

Token 359: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5690776109695435
    2. ' res' → logprob: -1.4440776109695435
    3. ' result' → logprob: -2.819077491760254
    4. '   ' → logprob: -3.069077491760254
    5. 'result' → logprob: -3.444077491760254
    6. 'res' → logprob: -3.569077491760254
    7. 'if' (adapté à ' if') → logprob: -3.694077491760254
    8. ' b' → logprob: -5.569077491760254
    9. 'b' → logprob: -6.069077491760254
    10. '    
' → logprob: -7.694077491760254

Token 360: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.054883524775505066
    2. ' b' → logprob: -2.9298834800720215
    3. '	b' → logprob: -14.17988395690918
    4. 'a' → logprob: -14.92988395690918
    5. '   ' → logprob: -16.05488395690918
    6. ' ' → logprob: -16.92988395690918
    7. '_b' → logprob: -17.05488395690918
    8. '0' → logprob: -17.67988395690918
    9. ' a' → logprob: -17.80488395690918
    10. '(b' → logprob: -18.92988395690918

Token 361: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.10333064943552017
    2. '>' → logprob: -2.353330612182617
    3. '==' → logprob: -6.228330612182617
    4. ' ==' → logprob: -6.853330612182617
    5. '=' → logprob: -9.728330612182617
    6. ' ' → logprob: -11.353330612182617
    7. ' >
' → logprob: -12.103330612182617
    8. '0' → logprob: -12.728330612182617
    9. ' >
' → logprob: -13.228330612182617
    10. '>a' → logprob: -13.603330612182617

Token 362: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1002068892121315
    2. ' a' → logprob: -2.3502068519592285
    3. '	a' → logprob: -15.225207328796387
    4. ' ' → logprob: -19.47520637512207
    5. '>a' → logprob: -19.60020637512207
    6. '(a' → logprob: -19.85020637512207
    7. '/a' → logprob: -21.10020637512207
    8. '   ' → logprob: -21.35020637512207
    9. '=a' → logprob: -22.22520637512207
    10. '[a' → logprob: -22.60020637512207

Token 363: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0036310735158622265
    2. '-' → logprob: -5.753631114959717
    3. ' //' → logprob: -8.128630638122559
    4. ' ' → logprob: -9.503630638122559
    5. 'b' → logprob: -10.253630638122559
    6. '//' → logprob: -10.503630638122559
    7. '   ' → logprob: -11.378630638122559
    8. '-b' → logprob: -11.878630638122559
    9. ' b' → logprob: -13.378630638122559
    10. 'a' → logprob: -15.378630638122559

Token 364: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.339278580620885e-06
    2. ' b' → logprob: -13.000001907348633
    3. '	b' → logprob: -20.375001907348633
    4. ')b' → logprob: -24.375001907348633
    5. ' ' → logprob: -24.625001907348633
    6. '$b' → logprob: -24.875001907348633
    7. '>b' → logprob: -25.250001907348633
    8. '   ' → logprob: -25.375001907348633
    9. ' б' → logprob: -25.500001907348633
    10. '_b' → logprob: -25.750001907348633

Token 365: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06222323328256607
    2. ':
' → logprob: -2.812223196029663
    3. '   ' → logprob: -9.062223434448242
    4. ' :' → logprob: -9.687223434448242
    5. ':b' → logprob: -10.562223434448242
    6. 'b' → logprob: -10.812223434448242
    7. ' :
' → logprob: -11.187223434448242
    8. ' b' → logprob: -12.437223434448242
    9. '       ' → logprob: -12.437223434448242
    10. '):
' → logprob: -12.812223434448242

Token 366: '       ' (ID: 309)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.0626421868801117
    2. 'b' → logprob: -2.8126420974731445
    3. '   ' → logprob: -7.3126420974731445
    4. '	b' → logprob: -12.562642097473145
    5. '       ' → logprob: -13.187642097473145
    6. '    ' → logprob: -13.687642097473145
    7. '    
' → logprob: -14.687642097473145
    8. ' 
' → logprob: -15.187642097473145
    9. ' ' → logprob: -16.81264305114746
    10. 'a' → logprob: -17.43764305114746

Token 367: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.4745897054672241
    2. ' b' → logprob: -0.9745897054672241
    3. '   ' → logprob: -7.599589824676514
    4. '	b' → logprob: -11.349589347839355
    5. '    ' → logprob: -16.974590301513672
    6. '       ' → logprob: -17.349590301513672
    7. '    
' → logprob: -18.099590301513672
    8. '  ' → logprob: -18.474590301513672
    9. ' б' → logprob: -18.849590301513672
    10. ' ' → logprob: -19.349590301513672

Token 368: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519298195838928
    2. '=' → logprob: -1.501929759979248
    3. '=b' → logprob: -15.251930236816406
    4. '＝' → logprob: -15.751930236816406
    5. '=a' → logprob: -16.251930236816406
    6. '.=' → logprob: -16.751930236816406
    7. '=int' → logprob: -17.251930236816406
    8. '   ' → logprob: -17.626930236816406
    9. ',' → logprob: -17.876930236816406
    10. ' =)' → logprob: -18.126930236816406

Token 369: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001170225441455841
    2. ' a' → logprob: -6.7511701583862305
    3. '	a' → logprob: -18.376171112060547
    4. '   ' → logprob: -19.876171112060547
    5. ' ' → logprob: -20.626171112060547
    6. '(a' → logprob: -22.001171112060547
    7. '_a' → logprob: -23.751171112060547
    8. '>a' → logprob: -23.876171112060547
    9. '  ' → logprob: -24.001171112060547
    10. ''a' → logprob: -24.251171112060547

Token 370: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0803748369216919
    2. ' -' → logprob: -2.5803747177124023
    3. '-b' → logprob: -6.830374717712402
    4. 'b' → logprob: -7.830374717712402
    5. ' b' → logprob: -12.580374717712402
    6. ' ' → logprob: -13.205374717712402
    7. '   ' → logprob: -14.455374717712402
    8. '	b' → logprob: -16.20537567138672
    9. '−' → logprob: -16.70537567138672
    10. ' ' → logprob: -17.08037567138672

Token 371: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0280383548888494e-06
    2. ' b' → logprob: -13.875000953674316
    3. '	b' → logprob: -19.375001907348633
    4. ')b' → logprob: -22.500001907348633
    5. '_b' → logprob: -23.125001907348633
    6. '$b' → logprob: -24.125001907348633
    7. ' б' → logprob: -24.750001907348633
    8. '\b' → logprob: -25.250001907348633
    9. '>b' → logprob: -25.250001907348633
    10. ''b' → logprob: -25.250001907348633

Token 372: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03218528628349304
    2. '
' → logprob: -3.5321853160858154
    3. '    
' → logprob: -6.157185077667236
    4. '  
' → logprob: -8.532185554504395
    5. '   
' → logprob: -10.282185554504395
    6. '<|end|>' → logprob: -10.407185554504395
    7. ' 
' → logprob: -11.782185554504395
    8. 'return' → logprob: -11.907185554504395
    9. 'def' → logprob: -12.157185554504395
    10. '
' → logprob: -12.407185554504395

Token 373: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059384457767009735
    2. 'res' → logprob: -3.684384346008301
    3. 'result' → logprob: -3.809384346008301
    4. ' result' → logprob: -4.934384346008301
    5. ' res' → logprob: -5.809384346008301
    6. '    
' → logprob: -8.8093843460083
    7. '	result' → logprob: -11.1843843460083
    8. '	res' → logprob: -11.9343843460083
    9. 'ans' → logprob: -12.3093843460083
    10. '
' → logprob: -12.4343843460083

Token 374: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.1047542095184326
    2. 'res' → logprob: -1.3547542095184326
    3. 'result' (adapté à ' result') → logprob: -1.3547542095184326
    4. ' res' → logprob: -2.2297542095184326
    5. '   ' → logprob: -3.1047542095184326
    6. '    
' → logprob: -9.479754447937012
    7. 'r' → logprob: -9.604754447937012
    8. ' resultat' → logprob: -9.854754447937012
    9. ' r' → logprob: -10.479754447937012
    10. '	result' → logprob: -10.979754447937012

Token 375: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023246178403496742
    2. '=' → logprob: -3.7732462882995605
    3. ' ' → logprob: -14.773245811462402
    4. ',' → logprob: -15.648245811462402
    5. ' =
' → logprob: -17.27324676513672
    6. '  ' → logprob: -17.39824676513672
    7. ' ' → logprob: -17.39824676513672
    8. 's' → logprob: -17.52324676513672
    9. '1' → logprob: -18.02324676513672
    10. '```' → logprob: -18.02324676513672

Token 376: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -21.500001907348633
    4. '```' → logprob: -21.750001907348633
    5. ' ' → logprob: -22.875001907348633
    6. '１' → logprob: -24.125001907348633
    7. '  ' → logprob: -24.375001907348633
    8. '۱' → logprob: -24.500001907348633
    9. '`' → logprob: -24.750001907348633
    10. '	' → logprob: -25.000001907348633

Token 377: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '```' → logprob: -22.0
    4. '   ' → logprob: -22.5
    5. '=' → logprob: -24.625
    6. 'int' → logprob: -25.0
    7. '"' → logprob: -25.125
    8. '2' → logprob: -25.125
    9. '１' → logprob: -25.125
    10. '۱' → logprob: -25.25

Token 378: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6128116250038147
    2. '   ' → logprob: -1.48781156539917
    3. ' for' → logprob: -2.61281156539917
    4. '    
' → logprob: -2.86281156539917
    5. 'for' → logprob: -2.86281156539917
    6. ' 
' → logprob: -3.98781156539917
    7. '   
' → logprob: -4.11281156539917
    8. '	
' → logprob: -5.73781156539917
    9. '  
' → logprob: -6.11281156539917
    10. '<|end|>' → logprob: -6.23781156539917

Token 379: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20330215990543365
    2. 'for' → logprob: -1.9533021450042725
    3. '   ' → logprob: -4.078302383422852
    4. '<|end|>' → logprob: -4.453302383422852
    5. ' 
' → logprob: -5.203302383422852
    6. '
' → logprob: -6.078302383422852
    7. '    
' → logprob: -6.203302383422852
    8. '  
' → logprob: -6.828302383422852
    9. '   
' → logprob: -7.578302383422852
    10. '	for' → logprob: -7.578302383422852

Token 380: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4886316955089569
    2. 'for' (adapté à ' for') → logprob: -0.9886317253112793
    3. '   ' → logprob: -4.238631725311279
    4. '	for' → logprob: -11.113631248474121
    5. ' ' → logprob: -12.863631248474121
    6. '  ' → logprob: -13.113631248474121
    7. '    ' → logprob: -14.113631248474121
    8. ' 
' → logprob: -14.738631248474121
    9. '    
' → logprob: -15.113631248474121
    10. ' ' → logprob: -15.488631248474121

Token 381: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.003178782993927598
    2. 'i' → logprob: -5.753178596496582
    3. '	i' → logprob: -14.128178596496582
    4. ' k' → logprob: -15.378178596496582
    5. 'k' → logprob: -16.3781795501709
    6. '_i' → logprob: -17.2531795501709
    7. ' _' → logprob: -17.3781795501709
    8. ' ' → logprob: -17.6281795501709
    9. ' x' → logprob: -17.8781795501709
    10. '_' → logprob: -18.1281795501709

Token 382: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01417702715843916
    2. 'in' → logprob: -4.264176845550537
    3. ',' → logprob: -12.389177322387695
    4. ' ' → logprob: -12.389177322387695
    5. '   ' → logprob: -13.264177322387695
    6. '  ' → logprob: -14.264177322387695
    7. 'range' → logprob: -14.639177322387695
    8. 'n' → logprob: -14.889177322387695
    9. '```' → logprob: -15.014177322387695
    10. 'd' → logprob: -15.014177322387695

Token 383: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.003178071230649948
    2. 'range' → logprob: -5.753178119659424
    3. '(range' → logprob: -15.378177642822266
    4. '	range' → logprob: -16.003177642822266
    5. 'Range' → logprob: -18.253177642822266
    6. '_range' → logprob: -19.503177642822266
    7. ' xrange' → logprob: -19.503177642822266
    8. ' ' → logprob: -19.628177642822266
    9. '   ' → logprob: -19.878177642822266
    10. '.range' → logprob: -19.878177642822266

Token 384: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012439649435691535
    2. '(b' → logprob: -9.000123977661133
    3. '1' → logprob: -14.250123977661133
    4. 'b' → logprob: -15.125123977661133
    5. ' (' → logprob: -18.000123977661133
    6. '	b' → logprob: -21.500123977661133
    7. ' ' → logprob: -21.625123977661133
    8. '(
' → logprob: -21.750123977661133
    9. ' b' → logprob: -21.875123977661133
    10. '   ' → logprob: -22.000123977661133

Token 385: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06196846812963486
    2. 'b' → logprob: -2.8119685649871826
    3. ' b' → logprob: -14.186968803405762
    4. ' ' → logprob: -15.686968803405762
    5. '   ' → logprob: -18.436967849731445
    6. '	b' → logprob: -19.436967849731445
    7. '0' → logprob: -21.061967849731445
    8. '```' → logprob: -21.436967849731445
    9. ')b' → logprob: -22.436967849731445
    10. ',b' → logprob: -22.936967849731445

Token 386: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00261703971773386
    2. ' ,' → logprob: -6.127616882324219
    3. ',b' → logprob: -7.752616882324219
    4. '   ' → logprob: -14.127616882324219
    5. 'to' → logprob: -14.752616882324219
    6. 'b' → logprob: -14.877616882324219
    7. ' ' → logprob: -15.377616882324219
    8. ' b' → logprob: -15.502616882324219
    9. ',
' → logprob: -15.752616882324219
    10. '    ' → logprob: -16.87761688232422

Token 387: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.493430894101039e-05
    2. ' b' → logprob: -9.500075340270996
    3. '	b' → logprob: -21.00007438659668
    4. '   ' → logprob: -21.50007438659668
    5. ')b' → logprob: -21.50007438659668
    6. '\b' → logprob: -23.00007438659668
    7. '$b' → logprob: -23.87507438659668
    8. '(b' → logprob: -24.75007438659668
    9. '```' → logprob: -24.75007438659668
    10. '+b' → logprob: -25.12507438659668

Token 388: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.19691064953804016
    2. ' +' → logprob: -2.5719106197357178
    3. '):
' → logprob: -2.5719106197357178
    4. '):' → logprob: -3.8219106197357178
    5. ' ):' → logprob: -6.696910858154297
    6. ' ):
' → logprob: -6.696910858154297
    7. ',' → logprob: -7.571910858154297
    8. ')' → logprob: -7.696910858154297
    9. '   ' → logprob: -8.446910858154297
    10. ' ' → logprob: -8.696910858154297

Token 389: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -19.875036239624023
    4. ')' → logprob: -21.000036239624023
    5. '```' → logprob: -21.625036239624023
    6. '+' → logprob: -21.875036239624023
    7. '  ' → logprob: -22.375036239624023
    8. '
' → logprob: -22.750036239624023
    9. '2' → logprob: -23.125036239624023
    10. 'i' → logprob: -23.250036239624023

Token 390: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20252671837806702
    2. '):' → logprob: -1.7025266885757446
    3. ')' → logprob: -7.827526569366455
    4. ' ):
' → logprob: -7.952526569366455
    5. '   ' → logprob: -8.827527046203613
    6. '):
' → logprob: -9.452527046203613
    7. ' ):' → logprob: -9.577527046203613
    8. ':' → logprob: -9.952527046203613
    9. ':
' → logprob: -11.827527046203613
    10. ',' → logprob: -11.827527046203613

Token 391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012946429196745157
    2. ' result' → logprob: -7.1262946128845215
    3. 'result' → logprob: -8.12629508972168
    4. '   ' → logprob: -9.25129508972168
    5. '        
' → logprob: -10.37629508972168
    6. '
' → logprob: -10.62629508972168
    7. '```' → logprob: -10.87629508972168
    8. '    
' → logprob: -12.37629508972168
    9. '    ' → logprob: -12.62629508972168
    10. '           ' → logprob: -12.87629508972168

Token 392: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.14372378587722778
    2. '       ' → logprob: -2.643723726272583
    3. ' result' → logprob: -2.768723726272583
    4. '   ' → logprob: -11.143723487854004
    5. '	result' → logprob: -12.518723487854004
    6. '           ' → logprob: -12.518723487854004
    7. '```' → logprob: -12.518723487854004
    8. ',result' → logprob: -12.893723487854004
    9. '        ' → logprob: -13.518723487854004
    10. '_result' → logprob: -13.643723487854004

Token 393: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4081331193447113
    2. ' *=' → logprob: -1.6581331491470337
    3. '=' → logprob: -2.408133029937744
    4. '*=' → logprob: -2.908133029937744
    5. '   ' → logprob: -11.033133506774902
    6. ' ' → logprob: -11.033133506774902
    7. '	' → logprob: -11.783133506774902
    8. ' ' → logprob: -12.158133506774902
    9. '    ' → logprob: -12.658133506774902
    10. '*' → logprob: -12.658133506774902

Token 394: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.3134138584136963
    2. 'result' → logprob: -1.3134138584136963
    3. '(result' → logprob: -8.813413619995117
    4. ' (' → logprob: -12.688413619995117
    5. '   ' → logprob: -16.188413619995117
    6. '	result' → logprob: -16.563413619995117
    7. ' ' → logprob: -17.563413619995117
    8. '$result' → logprob: -17.688413619995117
    9. '=result' → logprob: -17.688413619995117
    10. ',result' → logprob: -18.063413619995117

Token 395: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6931484341621399
    2. ' *' → logprob: -0.6931484341621399
    3. ' ' → logprob: -14.193148612976074
    4. '   ' → logprob: -15.943148612976074
    5. '  ' → logprob: -16.068147659301758
    6. '**' → logprob: -17.193147659301758
    7. '*object' → logprob: -17.193147659301758
    8. '*(' → logprob: -17.443147659301758
    9. '    ' → logprob: -17.818147659301758
    10. ' ' → logprob: -17.943147659301758

Token 396: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.006857812404632568
    2. ' (' → logprob: -5.006857872009277
    3. 'a' → logprob: -8.881857872009277
    4. '   ' → logprob: -13.381857872009277
    5. '(result' → logprob: -14.256857872009277
    6. ' a' → logprob: -14.756857872009277
    7. '(' → logprob: -14.881857872009277
    8. 'result' → logprob: -15.381857872009277
    9. '((' → logprob: -15.506857872009277
    10. ' ' → logprob: -16.63185691833496

Token 397: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.15310683415737e-05
    2. ' a' → logprob: -11.000021934509277
    3. '(a' → logprob: -12.250021934509277
    4. '   ' → logprob: -17.25002098083496
    5. ' (' → logprob: -19.12502098083496
    6. '	a' → logprob: -19.62502098083496
    7. '[a' → logprob: -20.25002098083496
    8. ' ' → logprob: -21.37502098083496
    9. '(' → logprob: -22.00002098083496
    10. ''a' → logprob: -22.62502098083496

Token 398: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005934604909271002
    2. '-' → logprob: -5.130934715270996
    3. '-i' → logprob: -12.130934715270996
    4. '   ' → logprob: -15.130934715270996
    5. ' ' → logprob: -16.00593376159668
    6. '-(' → logprob: -16.75593376159668
    7. ' ' → logprob: -16.88093376159668
    8. '-k' → logprob: -17.13093376159668
    9. '+' → logprob: -17.25593376159668
    10. '
' → logprob: -18.00593376159668

Token 399: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00018697108316700906
    2. 'i' → logprob: -9.125186920166016
    3. ' b' → logprob: -9.500186920166016
    4. '(b' → logprob: -13.125186920166016
    5. ' i' → logprob: -14.375186920166016
    6. '(i' → logprob: -15.125186920166016
    7. '   ' → logprob: -15.875186920166016
    8. ' (' → logprob: -16.375186920166016
    9. '	b' → logprob: -17.000186920166016
    10. ' ' → logprob: -17.250186920166016

Token 400: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3133663833141327
    2. '+' → logprob: -1.313366413116455
    3. '+i' → logprob: -9.188365936279297
    4. '   ' → logprob: -13.313365936279297
    5. ' ' → logprob: -14.688365936279297
    6. '    ' → logprob: -15.563365936279297
    7. '       ' → logprob: -17.313365936279297
    8. '
' → logprob: -17.813365936279297
    9. '＋' → logprob: -17.938365936279297
    10. ' plus' → logprob: -18.313365936279297

Token 401: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.5577775128767826e-06
    2. ' i' → logprob: -12.125005722045898
    3. '
' → logprob: -17.7500057220459
    4. '+i' → logprob: -19.8750057220459
    5. '```' → logprob: -19.8750057220459
    6. '	i' → logprob: -20.0000057220459
    7. '
' → logprob: -20.1250057220459
    8. '_i' → logprob: -20.5000057220459
    9. ' ' → logprob: -21.5000057220459
    10. '   ' → logprob: -21.5000057220459

Token 402: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012511172099038959
    2. ')//' → logprob: -9.37512493133545
    3. ' )' → logprob: -10.12512493133545
    4. ')
' → logprob: -15.75012493133545
    5. ')#' → logprob: -18.500125885009766
    6. '   ' → logprob: -19.375125885009766
    7. '//' → logprob: -19.375125885009766
    8. '）' → logprob: -20.125125885009766
    9. ' //' → logprob: -20.250125885009766
    10. ']' → logprob: -20.375125885009766

Token 403: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.03381892666220665
    2. '//' → logprob: -3.4088189601898193
    3. '       ' → logprob: -9.283819198608398
    4. '   ' → logprob: -10.658819198608398
    5. ' ' → logprob: -10.783819198608398
    6. '
' → logprob: -11.408819198608398
    7. '```' → logprob: -12.033819198608398
    8. ')' → logprob: -12.283819198608398
    9. ' ' → logprob: -12.283819198608398
    10. '    ' → logprob: -12.783819198608398

Token 404: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019297054968774319
    2. ' i' → logprob: -6.251929759979248
    3. '   ' → logprob: -13.75192928314209
    4. '	i' → logprob: -17.001930236816406
    5. '(i' → logprob: -18.876930236816406
    6. '       ' → logprob: -19.376930236816406
    7. ' ' → logprob: -19.501930236816406
    8. '1' → logprob: -20.126930236816406
    9. '  ' → logprob: -20.626930236816406
    10. '    ' → logprob: -21.626930236816406

Token 405: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009344357065856457
    2. '
' → logprob: -5.759344577789307
    3. ' return' → logprob: -6.009344577789307
    4. '    
' → logprob: -6.009344577789307
    5. 'return' → logprob: -7.884344577789307
    6. ' 
' → logprob: -8.009344100952148
    7. '   
' → logprob: -9.134344100952148
    8. '	return' → logprob: -9.259344100952148
    9. '  
' → logprob: -9.384344100952148
    10. '<|end|>' → logprob: -9.634344100952148

Token 406: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000639765290543437
    2. ' return' → logprob: -8.250639915466309
    3. 'return' → logprob: -8.375639915466309
    4. '    
' → logprob: -9.125639915466309
    5. '	return' → logprob: -11.000639915466309
    6. '
' → logprob: -12.000639915466309
    7. '  
' → logprob: -12.125639915466309
    8. ':return' → logprob: -12.625639915466309
    9. ' 
' → logprob: -13.125639915466309
    10. ',' → logprob: -13.750639915466309

Token 407: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3569197654724121
    2. ' return' → logprob: -1.606919765472412
    3. '   ' → logprob: -2.356919765472412
    4. '	return' → logprob: -5.356919765472412
    5. ':return' → logprob: -9.23192024230957
    6. '
' → logprob: -9.85692024230957
    7. ' ' → logprob: -10.23192024230957
    8. '    
' → logprob: -10.35692024230957
    9. '  ' → logprob: -12.35692024230957
    10. '  
' → logprob: -12.98192024230957

Token 408: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.001170225441455841
    2. ' result' → logprob: -6.7511701583862305
    3. 'int' → logprob: -18.501171112060547
    4. '(result' → logprob: -18.751171112060547
    5. '   ' → logprob: -20.501171112060547
    6. '	result' → logprob: -21.376171112060547
    7. 'results' → logprob: -22.251171112060547
    8. '[result' → logprob: -22.751171112060547
    9. '=result' → logprob: -22.876171112060547
    10. '$result' → logprob: -22.876171112060547

Token 409: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.364959955215454
    2. 'res' → logprob: -1.739959955215454
    3. 'val' → logprob: -2.239959955215454
    4. 'diff' → logprob: -2.364959955215454
    5. 'total' → logprob: -2.364959955215454
    6. '

' → logprob: -2.989959955215454
    7. 'r' → logprob: -3.864959955215454
    8. 'k' → logprob: -3.864959955215454
    9. 'result' → logprob: -3.864959955215454
    10. '
' → logprob: -3.989959955215454

Token 410: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9147199988365173
    2. 'total' → logprob: -1.289720058441162
    3. 'diff' → logprob: -2.289720058441162
    4. 'val' → logprob: -2.414720058441162
    5. 's' → logprob: -3.539720058441162
    6. 'k' → logprob: -4.039720058441162
    7. 'rest' → logprob: -4.289720058441162
    8. 'res' → logprob: -4.289720058441162
    9. 'value' → logprob: -4.414720058441162
    10. 'remaining' → logprob: -5.414720058441162

Token 411: ' Calcul' (ID: 57243)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9841040968894958
    2. 'diff' → logprob: -1.2341041564941406
    3. 'val' → logprob: -1.8591041564941406
    4. 'res' → logprob: -2.9841041564941406
    5. 'total' → logprob: -3.9841041564941406
    6. 'k' → logprob: -4.359104156494141
    7. 'r' → logprob: -4.484104156494141
    8. 'x' → logprob: -4.734104156494141
    9. 'value' → logprob: -4.859104156494141
    10. 'rest' → logprob: -4.859104156494141

Token 412: ' final' (ID: 1721)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5178123116493225
    2. 'if' → logprob: -2.3928122520446777
    3. 'val' → logprob: -2.3928122520446777
    4. 's' → logprob: -3.3928122520446777
    5. 'k' → logprob: -3.6428122520446777
    6. 'res' → logprob: -3.7678122520446777
    7. 'diff' → logprob: -4.142812252044678
    8. 'answer' → logprob: -4.267812252044678
    9. 't' → logprob: -4.517812252044678
    10. 'value' → logprob: -4.517812252044678

Token 413: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9891037940979004
    2. 'val' → logprob: -1.6141037940979004
    3. 'total' → logprob: -1.7391037940979004
    4. 'res' → logprob: -2.6141037940979004
    5. 'diff' → logprob: -2.8641037940979004
    6. 'r' → logprob: -3.8641037940979004
    7. 's' → logprob: -4.3641037940979
    8. 'result' → logprob: -4.3641037940979
    9. 'ans' → logprob: -4.4891037940979
    10. 'x' → logprob: -4.6141037940979

Token 414: 'reste' (ID: 84661)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.3615914583206177
    2. 'res' → logprob: -1.4865914583206177
    3. 'if' → logprob: -2.361591339111328
    4. 'diff' → logprob: -2.486591339111328
    5. 'total' → logprob: -2.486591339111328
    6. 'r' → logprob: -2.861591339111328
    7. 'offset' → logprob: -3.486591339111328
    8. 'result' → logprob: -3.611591339111328
    9. 'k' → logprob: -3.611591339111328
    10. 'ans' → logprob: -3.986591339111328

Token 415: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016233304515480995
    2. '=' → logprob: -4.141233444213867
    3. '_' → logprob: -8.641233444213867
    4. 's' → logprob: -11.391233444213867
    5. 'r' → logprob: -12.266233444213867
    6. '_r' → logprob: -13.391233444213867
    7. ' ' → logprob: -13.766233444213867
    8. '=r' → logprob: -13.766233444213867
    9. '_=' → logprob: -13.891233444213867
    10. ' ' → logprob: -15.141233444213867

Token 416: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005234121344983578
    2. ' r' → logprob: -5.255234241485596
    3. '(r' → logprob: -15.255233764648438
    4. '   ' → logprob: -18.130233764648438
    5. '	r' → logprob: -18.255233764648438
    6. ' ' → logprob: -18.880233764648438
    7. '_r' → logprob: -20.755233764648438
    8. 'max' → logprob: -21.380233764648438
    9. '  ' → logprob: -21.505233764648438
    10. ' (' → logprob: -21.630233764648438

Token 417: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16024890542030334
    2. '-' → logprob: -1.910248875617981
    3. '-n' → logprob: -10.785248756408691
    4. ' ' → logprob: -13.410248756408691
    5. '-r' → logprob: -13.785248756408691
    6. '   ' → logprob: -14.785248756408691
    7. ' ' → logprob: -15.785248756408691
    8. '
' → logprob: -16.035249710083008
    9. '-num' → logprob: -16.035249710083008
    10. '-m' → logprob: -16.660249710083008

Token 418: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014216157607734203
    2. ' n' → logprob: -4.26421594619751
    3. '(n' → logprob: -9.889216423034668
    4. ' (' → logprob: -13.264216423034668
    5. '(' → logprob: -16.13921546936035
    6. '_n' → logprob: -16.76421546936035
    7. '	n' → logprob: -16.76421546936035
    8. '   ' → logprob: -18.38921546936035
    9. ' ' → logprob: -19.13921546936035
    10. ',n' → logprob: -19.13921546936035

Token 419: '*m' (ID: 85049)
  Prédit: '*m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*m' → logprob: -0.38699838519096375
    2. '*' → logprob: -1.1369984149932861
    3. ' *' → logprob: -9.011998176574707
    4. '*r' → logprob: -12.511998176574707
    5. '**' → logprob: -14.261998176574707
    6. '*n' → logprob: -15.386998176574707
    7. '*u' → logprob: -15.761998176574707
    8. '*object' → logprob: -16.011999130249023
    9. '*a' → logprob: -16.761999130249023
    10. 'm' → logprob: -16.761999130249023

Token 420: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00011605957115534693
    2. '
' → logprob: -9.250116348266602
    3. ' if' → logprob: -10.875116348266602
    4. 'print' → logprob: -14.250116348266602
    5. 'result' → logprob: -15.750116348266602
    6. '  
' → logprob: -15.875116348266602
    7. '

' → logprob: -16.7501163482666
    8. '```' → logprob: -16.8751163482666
    9. '
' → logprob: -17.2501163482666
    10. 'If' → logprob: -17.7501163482666

Token 421: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00016086915275081992
    2. 'print' → logprob: -8.750161170959473
    3. ' if' → logprob: -13.125161170959473
    4. 'result' → logprob: -15.000161170959473
    5. '
' → logprob: -17.375160217285156
    6. '```' → logprob: -17.875160217285156
    7. 'If' → logprob: -20.250160217285156
    8. 'answer' → logprob: -20.375160217285156
    9. 'output' → logprob: -21.250160217285156
    10. 'res' → logprob: -21.750160217285156

Token 422: ' reste' (ID: 26769)
  Prédit: ' reste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reste' → logprob: -0.38688984513282776
    2. 'reste' → logprob: -1.1368898153305054
    3. 'rest' → logprob: -11.761889457702637
    4. ' resto' → logprob: -12.636889457702637
    5. ' ' → logprob: -12.886889457702637
    6. ' rester' → logprob: -13.386889457702637
    7. '0' → logprob: -14.386889457702637
    8. ' restant' → logprob: -14.511889457702637
    9. ' ' → logprob: -14.636889457702637
    10. ' resta' → logprob: -14.636889457702637

Token 423: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3132663369178772
    2. '<' → logprob: -1.3132662773132324
    3. ' ' → logprob: -13.56326675415039
    4. ' >=' → logprob: -14.18826675415039
    5. '<n' → logprob: -14.43826675415039
    6. '<int' → logprob: -14.81326675415039
    7. '<m' → logprob: -15.18826675415039
    8. '>=' → logprob: -15.31326675415039
    9. ' <
' → logprob: -15.56326675415039
    10. ' <=' → logprob: -15.93826675415039

Token 424: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '=' → logprob: -21.125003814697266
    4. '   ' → logprob: -21.375003814697266
    5. '۰' → logprob: -21.750003814697266
    6. '```' → logprob: -23.250003814697266
    7. '０' → logprob: -23.750003814697266
    8. ' ' → logprob: -24.500003814697266
    9. ':' → logprob: -24.625003814697266
    10. '
' → logprob: -24.875003814697266

Token 425: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '۰' → logprob: -21.5
    4. '=' → logprob: -22.0
    5. '０' → logprob: -22.875
    6. '```' → logprob: -23.25
    7. '   ' → logprob: -23.375
    8. '00' → logprob: -24.625
    9. '1' → logprob: -25.0
    10. '  ' → logprob: -25.125

Token 426: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4741203784942627
    2. ':' → logprob: -0.9741203784942627
    3. '   ' → logprob: -10.974120140075684
    4. ':
' → logprob: -11.599120140075684
    5. 'print' → logprob: -12.099120140075684
    6. '):
' → logprob: -12.599120140075684
    7. ' :
' → logprob: -12.724120140075684
    8. '=' → logprob: -13.474120140075684
    9. ' :' → logprob: -13.849120140075684
    10. ':return' → logprob: -13.849120140075684

Token 427: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2416263222694397
    2. '   ' → logprob: -1.741626262664795
    3. ' print' → logprob: -3.241626262664795
    4. '0' → logprob: -8.116626739501953
    5. '	print' → logprob: -11.491626739501953
    6. ' ' → logprob: -12.741626739501953
    7. '```' → logprob: -12.866626739501953
    8. '1' → logprob: -14.866626739501953
    9. '
' → logprob: -16.241626739501953
    10. '_print' → logprob: -16.491626739501953

Token 428: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.584861744660884e-05
    2. ' print' → logprob: -10.250045776367188
    3. '0' → logprob: -11.500045776367188
    4. '   ' → logprob: -15.250045776367188
    5. '```' → logprob: -17.000045776367188
    6. 'prin' → logprob: -17.500045776367188
    7. 'pr' → logprob: -17.750045776367188
    8. '1' → logprob: -18.250045776367188
    9. 'result' → logprob: -19.250045776367188
    10. '
' → logprob: -19.375045776367188

Token 429: ' Pas' (ID: 18323)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.3120038501219824e-05
    2. ' print' → logprob: -9.875053405761719
    3. 'prin' → logprob: -14.500053405761719
    4. 'pr' → logprob: -14.625053405761719
    5. '   ' → logprob: -14.750053405761719
    6. '0' → logprob: -16.12505340576172
    7. '```' → logprob: -17.12505340576172
    8. 'return' → logprob: -18.25005340576172
    9. 'result' → logprob: -18.25005340576172
    10. '	print' → logprob: -18.37505340576172

Token 430: ' possible' (ID: 4149)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.12956292927265167
    2. 'de' → logprob: -2.1295628547668457
    3. 'print' → logprob: -6.004562854766846
    4. ' print' → logprob: -9.254563331604004
    5. ' ' → logprob: -10.379563331604004
    6. 's' → logprob: -11.129563331604004
    7. '   ' → logprob: -11.254563331604004
    8. '_de' → logprob: -12.129563331604004
    9. '1' → logprob: -13.504563331604004
    10. 'd' → logprob: -14.004563331604004

Token 431: ' d' (ID: 272)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008038705214858055
    2. '   ' → logprob: -4.883038520812988
    3. ' print' → logprob: -7.758038520812988
    4. '
' → logprob: -13.008038520812988
    5. '	print' → logprob: -14.133038520812988
    6. ':' → logprob: -14.383038520812988
    7. '```' → logprob: -14.383038520812988
    8. 'result' → logprob: -15.633038520812988
    9. ' ' → logprob: -15.883038520812988
    10. '0' → logprob: -15.883038520812988

Token 432: ''avoir' (ID: 55863)
  Prédit: ''avoir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''avoir' → logprob: -0.23183053731918335
    2. 'avoir' → logprob: -2.231830596923828
    3. ''obtenir' → logprob: -2.356830596923828
    4. 'e' → logprob: -5.606830596923828
    5. 'ob' → logprob: -8.481830596923828
    6. '#' → logprob: -9.106830596923828
    7. '’avoir' → logprob: -9.106830596923828
    8. '’obtenir' → logprob: -9.231830596923828
    9. 'es' → logprob: -9.356830596923828
    10. ' avoir' → logprob: -9.731830596923828

Token 433: ' au' (ID: 2791)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.594879150390625
    2. 'une' → logprob: -0.844879150390625
    3. 'de' → logprob: -4.719879150390625
    4. '#' → logprob: -5.844879150390625
    5. ' une' → logprob: -6.344879150390625
    6. ' des' → logprob: -6.469879150390625
    7. '0' → logprob: -6.594879150390625
    8. 'auc' → logprob: -6.969879150390625
    9. 'comb' → logprob: -7.594879150390625
    10. 'la' → logprob: -8.594879150390625

Token 434: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.019704874604940414
    2. ' moins' → logprob: -4.269704818725586
    3. 'une' → logprob: -6.269704818725586
    4. 'mo' → logprob: -6.394704818725586
    5. 'm' → logprob: -7.769704818725586
    6. 'c' → logprob: -8.019704818725586
    7. 'r' → logprob: -8.519704818725586
    8. 'tant' → logprob: -8.894704818725586
    9. 'dess' → logprob: -8.894704818725586
    10. '#' → logprob: -9.269704818725586

Token 435: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3868933916091919
    2. ' m' → logprob: -1.136893391609192
    3. ' ' → logprob: -11.886893272399902
    4. '   ' → logprob: -12.011893272399902
    5. ' une' → logprob: -12.386893272399902
    6. 'une' → logprob: -13.136893272399902
    7. 'un' → logprob: -14.011893272399902
    8. ' ' → logprob: -14.511893272399902
    9. ' un' → logprob: -14.761893272399902
    10. '```' → logprob: -14.761893272399902

Token 436: ' per' (ID: 777)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.5226117968559265
    2. ' per' → logprob: -1.2726118564605713
    3. ' de' → logprob: -2.3976118564605713
    4. 'de' → logprob: -4.022611618041992
    5. ' par' → logprob: -4.397611618041992
    6. 'par' → logprob: -5.897611618041992
    7. ' of' → logprob: -6.397611618041992
    8. ' ' → logprob: -8.272611618041992
    9. '	per' → logprob: -8.397611618041992
    10. ' for' → logprob: -8.647611618041992

Token 437: 'les' (ID: 1032)
  Prédit: 'les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.9888921976089478
    2. 're' → logprob: -1.2388921976089478
    3. 'r' → logprob: -1.8638921976089478
    4. 'le' → logprob: -2.488892078399658
    5. 'er' → logprob: -2.988892078399658
    6. 'res' → logprob: -4.613892078399658
    7. 'rel' → logprob: -4.738892078399658
    8. 'leur' → logprob: -5.613892078399658
    9. 'per' → logprob: -6.113892078399658
    10. 'ples' → logprob: -6.613892078399658

Token 438: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.44740381836891174
    2. ' de' → logprob: -1.0724037885665894
    3. ' of' → logprob: -4.572403907775879
    4. 'of' → logprob: -5.447403907775879
    5. 'for' → logprob: -6.322403907775879
    6. 'pour' → logprob: -7.197403907775879
    7. 'dans' → logprob: -7.697403907775879
    8. ' for' → logprob: -8.447403907775879
    9. '   ' → logprob: -8.697403907775879
    10. ' pour' → logprob: -8.947403907775879

Token 439: ' n' (ID: 297)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.06495160609483719
    2. ' chaque' → logprob: -2.8149516582489014
    3. 'ch' → logprob: -6.439951419830322
    4. 't' → logprob: -7.314951419830322
    5. 'each' → logprob: -7.564951419830322
    6. 'cada' → logprob: -9.56495189666748
    7. ' chacune' → logprob: -9.56495189666748
    8. '```' → logprob: -10.93995189666748
    9. ' each' → logprob: -11.43995189666748
    10. 'Chaque' → logprob: -11.56495189666748

Token 440: ' couleurs' (ID: 54001)
  Prédit: ' couleurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couleurs' → logprob: -0.716835081577301
    2. 'cou' → logprob: -0.716835081577301
    3. ' couleur' → logprob: -4.091835021972656
    4. ' chaque' → logprob: -5.716835021972656
    5. 'colors' → logprob: -6.966835021972656
    6. 'cha' → logprob: -7.341835021972656
    7. ' ' → logprob: -7.716835021972656
    8. ' cou' → logprob: -8.591835021972656
    9. ' différentes' → logprob: -8.966835021972656
    10. ' ' → logprob: -8.966835021972656

Token 441: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6935902237892151
    2. 'print' → logprob: -0.6935902237892151
    3. ' print' → logprob: -7.94359016418457
    4. ':
' → logprob: -10.06859016418457
    5. ':' → logprob: -11.19359016418457
    6. '	print' → logprob: -11.31859016418457
    7. '
' → logprob: -11.44359016418457
    8. '    
' → logprob: -12.94359016418457
    9. '```' → logprob: -13.69359016418457
    10. ',' → logprob: -13.81859016418457

Token 442: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.027270324528217316
    2. 'la' → logprob: -4.277270317077637
    3. ' r' → logprob: -5.152270317077637
    4. ' la' → logprob: -5.777270317077637
    5. 'les' → logprob: -6.152270317077637
    6. 'une' → logprob: -7.152270317077637
    7. 'l' → logprob: -7.402270317077637
    8. ' cette' → logprob: -9.402270317077637
    9. ' ' → logprob: -9.652270317077637
    10. 'le' → logprob: -9.652270317077637

Token 443: ' per' (ID: 777)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.10557630658149719
    2. 'print' → logprob: -3.355576276779175
    3. 'r' → logprob: -3.855576276779175
    4. ':' → logprob: -4.230576515197754
    5. '#' → logprob: -4.730576515197754
    6. ' per' → logprob: -4.855576515197754
    7. ' ' → logprob: -5.480576515197754
    8. ',' → logprob: -6.230576515197754
    9. '=' → logprob: -6.855576515197754
    10. ' =' → logprob: -6.855576515197754

Token 444: 'les' (ID: 1032)
  Prédit: 'les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.0002043748099822551
    2. 'r' → logprob: -9.875204086303711
    3. '```' → logprob: -10.000204086303711
    4. 'le' → logprob: -10.250204086303711
    5. '#' → logprob: -10.500204086303711
    6. '``' → logprob: -11.750204086303711
    7. '   ' → logprob: -12.375204086303711
    8. 'res' → logprob: -12.625204086303711
    9. '\' → logprob: -12.875204086303711
    10. 'len' → logprob: -12.875204086303711

Token 445: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005499003455042839
    2. '   ' → logprob: -5.255498886108398
    3. ' print' → logprob: -8.630498886108398
    4. ':
' → logprob: -10.255498886108398
    5. '
' → logprob: -10.755498886108398
    6. '0' → logprob: -10.880498886108398
    7. '```' → logprob: -12.255498886108398
    8. ':' → logprob: -12.880498886108398
    9. '	print' → logprob: -13.630498886108398
    10. '    
' → logprob: -14.380498886108398

Token 446: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31425297260284424
    2. '   ' → logprob: -1.3142529726028442
    3. ' print' → logprob: -6.939252853393555
    4. '```' → logprob: -11.189252853393555
    5. '	print' → logprob: -12.189252853393555
    6. '
' → logprob: -13.814252853393555
    7. ' ' → logprob: -14.564252853393555
    8. '    
' → logprob: -14.689252853393555
    9. '  ' → logprob: -15.564252853393555
    10. '    ' → logprob: -15.814252853393555

Token 447: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.704273118884885e-07
    2. '```' → logprob: -15.375000953674316
    3. ' print' → logprob: -15.625000953674316
    4. '
' → logprob: -15.875000953674316
    5. '0' → logprob: -18.25
    6. '   ' → logprob: -18.5
    7. 'prin' → logprob: -19.625
    8. 'pr' → logprob: -20.375
    9. 'result' → logprob: -20.625
    10. '``' → logprob: -21.375

Token 448: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.264322317088954e-05
    2. '0' → logprob: -9.875052452087402
    3. ' (' → logprob: -13.875052452087402
    4. '("' → logprob: -17.25005340576172
    5. '('' → logprob: -17.37505340576172
    6. '(
' → logprob: -18.00005340576172
    7. ' ' → logprob: -18.75005340576172
    8. '()' → logprob: -19.12505340576172
    9. '((' → logprob: -21.87505340576172
    10. '   ' → logprob: -21.87505340576172

Token 449: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -20.375
    3. ')' → logprob: -25.25
    4. '０' → logprob: -26.5
    5. '۰' → logprob: -26.625
    6. '"' → logprob: -26.75
    7. '(' → logprob: -27.0
    8. '   ' → logprob: -28.0
    9. '`' → logprob: -28.25
    10. '```' → logprob: -29.25

Token 450: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3132716417312622
    2. ')
' → logprob: -1.3132716417312622
    3. ')
' → logprob: -11.813271522521973
    4. 'else' → logprob: -13.313271522521973
    5. '   ' → logprob: -15.188271522521973
    6. ' )' → logprob: -16.06327247619629
    7. ')`
' → logprob: -16.06327247619629
    8. ')

' → logprob: -16.56327247619629
    9. '')' → logprob: -16.68827247619629
    10. ' )
' → logprob: -16.93827247619629

Token 451: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.7432603272027336e-06
    2. ' else' → logprob: -13.875001907348633
    3. 'elif' → logprob: -14.125001907348633
    4. '_else' → logprob: -18.750001907348633
    5. 'elser' → logprob: -20.000001907348633
    6. 'elses' → logprob: -20.125001907348633
    7. '}else' → logprob: -20.250001907348633
    8. '```' → logprob: -20.625001907348633
    9. '
' → logprob: -20.875001907348633
    10. 'els' → logprob: -21.625001907348633

Token 452: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2543606162071228
    2. ':
' → logprob: -1.5043606758117676
    3. '   ' → logprob: -6.129360675811768
    4. 'print' → logprob: -8.37936019897461
    5. ' print' → logprob: -11.62936019897461
    6. ' :
' → logprob: -12.50436019897461
    7. ' :' → logprob: -13.12936019897461
    8. '(print' → logprob: -13.25436019897461
    9. '{' → logprob: -14.00436019897461
    10. '):
' → logprob: -14.25436019897461

Token 453: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3250219225883484
    2. '   ' → logprob: -1.3250219821929932
    3. ' print' → logprob: -4.450021743774414
    4. '```' → logprob: -11.575021743774414
    5. '	print' → logprob: -12.825021743774414
    6. '
' → logprob: -15.200021743774414
    7. ' ' → logprob: -15.450021743774414
    8. '    
' → logprob: -16.200021743774414
    9. '   ' → logprob: -16.450021743774414
    10. '       ' → logprob: -16.450021743774414

Token 454: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008773046545684338
    2. ' print' → logprob: -4.758772850036621
    3. '   ' → logprob: -8.758772850036621
    4. 'result' → logprob: -13.633772850036621
    5. '	print' → logprob: -15.883772850036621
    6. '
' → logprob: -17.383773803710938
    7. ' result' → logprob: -17.758773803710938
    8. '```' → logprob: -17.883773803710938
    9. 'answer' → logprob: -18.633773803710938
    10. '    
' → logprob: -19.008773803710938

Token 455: ' nombre' (ID: 9733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004643365275114775
    2. ' print' → logprob: -5.504643440246582
    3. '   ' → logprob: -7.754643440246582
    4. 'result' → logprob: -9.004643440246582
    5. 'res' → logprob: -12.379643440246582
    6. 'answer' → logprob: -12.629643440246582
    7. 'nombre' → logprob: -12.754643440246582
    8. ' result' → logprob: -14.004643440246582
    9. 'comb' → logprob: -14.629643440246582
    10. 'count' → logprob: -14.879643440246582

Token 456: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4750199615955353
    2. '=' → logprob: -0.9750199317932129
    3. 'de' → logprob: -7.975019931793213
    4. '_comb' → logprob: -8.725020408630371
    5. '_de' → logprob: -8.975020408630371
    6. '   ' → logprob: -9.225020408630371
    7. '_' → logprob: -9.725020408630371
    8. ' de' → logprob: -9.975020408630371
    9. '_com' → logprob: -10.100020408630371
    10. 'comb' → logprob: -11.725020408630371

Token 457: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.07063215225934982
    2. 'com' → logprob: -3.320632219314575
    3. ' comb' → logprob: -3.445632219314575
    4. 'print' → logprob: -9.195631980895996
    5. '(com' → logprob: -10.445631980895996
    6. ' combinations' → logprob: -11.195631980895996
    7. '   ' → logprob: -11.945631980895996
    8. 'solutions' → logprob: -12.070631980895996
    9. 'result' → logprob: -12.695631980895996
    10. 'comm' → logprob: -13.070631980895996

Token 458: 'inais' (ID: 42744)
  Prédit: 'inais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.2502517104148865
    2. 'ina' → logprob: -2.2502517700195312
    3. '(' → logprob: -3.0002517700195312
    4. '=' → logprob: -3.6252517700195312
    5. 'inations' → logprob: -4.375251770019531
    6. ' =' → logprob: -4.875251770019531
    7. '   ' → logprob: -5.000251770019531
    8. '(nombre' → logprob: -6.000251770019531
    9. '+' → logprob: -6.250251770019531
    10. '(rest' → logprob: -6.625251770019531

Token 459: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.1497730016708374
    2. 'sons' → logprob: -2.024773120880127
    3. 'ais' → logprob: -5.774773120880127
    4. 'a' → logprob: -7.024773120880127
    5. 't' → logprob: -7.024773120880127
    6. 'asons' → logprob: -7.274773120880127
    7. 'n' → logprob: -7.774773120880127
    8. 's' → logprob: -7.774773120880127
    9. '#' → logprob: -8.774772644042969
    10. 'ations' → logprob: -8.899772644042969

Token 460: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4881655275821686
    2. ' =' → logprob: -1.4881654977798462
    3. 'print' → logprob: -2.3631656169891357
    4. '=' → logprob: -3.3631656169891357
    5. ' print' → logprob: -3.4881656169891357
    6. '(' → logprob: -8.238165855407715
    7. 'result' → logprob: -8.238165855407715
    8. '(print' → logprob: -8.613165855407715
    9. ' comb' → logprob: -9.363165855407715
    10. '    ' → logprob: -9.488165855407715

Token 461: ' répét' (ID: 156936)
  Prédit: ' repetition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' repetition' → logprob: -0.13703608512878418
    2. 're' → logprob: -2.762036085128784
    3. 'rep' → logprob: -3.262036085128784
    4. ' répét' → logprob: -4.012036323547363
    5. ' repetitions' → logprob: -5.637036323547363
    6. 'comb' → logprob: -6.512036323547363
    7. ' rép' → logprob: -6.887036323547363
    8. ' repet' → logprob: -6.887036323547363
    9. ' rep' → logprob: -7.137036323547363
    10. 'repr' → logprob: -8.637036323547363

Token 462: 'ition' (ID: 868)
  Prédit: 'ition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.009553017094731331
    2. 'et' → logprob: -5.134552955627441
    3. 'tion' → logprob: -6.384552955627441
    4. 'it' → logprob: -7.509552955627441
    5. 'ation' → logprob: -7.509552955627441
    6. ' repetition' → logprob: -8.259552955627441
    7. 'itions' → logprob: -9.384552955627441
    8. 'er' → logprob: -9.634552955627441
    9. 're' → logprob: -9.884552955627441
    10. 'itation' → logprob: -10.134552955627441

Token 463: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1655406802892685
    2. '   ' → logprob: -1.9155406951904297
    3. ' print' → logprob: -5.79054069519043
    4. ' =' → logprob: -7.54054069519043
    5. '(' → logprob: -7.66554069519043
    6. 'comb' → logprob: -7.66554069519043
    7. '(print' → logprob: -8.29054069519043
    8. '=' → logprob: -8.41554069519043
    9. ' comb' → logprob: -8.41554069519043
    10. '(com' → logprob: -10.29054069519043

Token 464: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1615312546491623
    2. 'comb' → logprob: -2.4115312099456787
    3. ' comb' → logprob: -3.6615312099456787
    4. '   ' → logprob: -3.7865312099456787
    5. ' print' → logprob: -4.536531448364258
    6. ' =' → logprob: -8.286531448364258
    7. '=' → logprob: -9.286531448364258
    8. 'com' → logprob: -10.786531448364258
    9. '(print' → logprob: -11.411531448364258
    10. '(com' → logprob: -11.411531448364258

Token 465: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00018387178715784103
    2. ' print' → logprob: -8.625184059143066
    3. 'comb' → logprob: -12.500184059143066
    4. '   ' → logprob: -14.500184059143066
    5. ' comb' → logprob: -16.25018310546875
    6. 'result' → logprob: -18.75018310546875
    7. 'com' → logprob: -19.37518310546875
    8. '	print' → logprob: -19.37518310546875
    9. '```' → logprob: -19.62518310546875
    10. 'combo' → logprob: -20.87518310546875

Token 466: ' C' (ID: 363)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007344625773839653
    2. ' print' → logprob: -7.250734329223633
    3. '   ' → logprob: -10.875734329223633
    4. 'result' → logprob: -12.750734329223633
    5. 'comb' → logprob: -13.000734329223633
    6. 'nombre' → logprob: -15.250734329223633
    7. ' comb' → logprob: -17.375734329223633
    8. '	print' → logprob: -17.500734329223633
    9. 'answer' → logprob: -18.250734329223633
    10. '```' → logprob: -18.500734329223633

Token 467: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.01183143351227045
    2. '((' → logprob: -4.761831283569336
    3. '(rest' → logprob: -5.886831283569336
    4. 'reste' → logprob: -8.011831283569336
    5. '(' → logprob: -9.511831283569336
    6. 're' → logprob: -11.761831283569336
    7. '(r' → logprob: -12.261831283569336
    8. ' (' → logprob: -12.261831283569336
    9. '(rem' → logprob: -12.386831283569336
    10. ' reste' → logprob: -13.511831283569336

Token 468: 'ste' (ID: 2277)
  Prédit: 'ste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ste' → logprob: -0.029500743374228477
    2. '(' → logprob: -3.654500722885132
    3. 'este' → logprob: -6.154500961303711
    4. '(r' → logprob: -7.654500961303711
    5. '(re' → logprob: -9.154500961303711
    6. '(n' → logprob: -9.279500961303711
    7. '(st' → logprob: -9.279500961303711
    8. '{' → logprob: -9.779500961303711
    9. '[' → logprob: -9.779500961303711
    10. '(s' → logprob: -10.279500961303711

Token 469: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16576452553272247
    2. '+' → logprob: -1.915764570236206
    3. '+n' → logprob: -5.665764331817627
    4. '+r' → logprob: -6.290764331817627
    5. '   ' → logprob: -8.790764808654785
    6. ',' → logprob: -11.290764808654785
    7. '+(' → logprob: -11.290764808654785
    8. ' ' → logprob: -12.040764808654785
    9. '(re' → logprob: -12.290764808654785
    10. '(rest' → logprob: -12.665764808654785

Token 470: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.848420551046729e-05
    2. ' n' → logprob: -9.7500581741333
    3. '(n' → logprob: -16.625059127807617
    4. '	n' → logprob: -19.625059127807617
    5. '   ' → logprob: -20.500059127807617
    6. '
' → logprob: -21.000059127807617
    7. '[n' → logprob: -21.125059127807617
    8. ')n' → logprob: -22.125059127807617
    9. '_n' → logprob: -22.875059127807617
    10. '﻿' → logprob: -23.875059127807617

Token 471: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931476593017578
    2. ' -' → logprob: -0.6931476593017578
    3. '−' → logprob: -16.068147659301758
    4. ' ' → logprob: -16.068147659301758
    5. '   ' → logprob: -16.943147659301758
    6. ' ' → logprob: -17.318147659301758
    7. 'n' → logprob: -17.943147659301758
    8. '
' → logprob: -17.943147659301758
    9. 's' → logprob: -18.318147659301758
    10. 'minus' → logprob: -19.193147659301758

Token 472: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -18.12504005432129
    4. ')' → logprob: -18.87504005432129
    5. 'n' → logprob: -19.62504005432129
    6. '```' → logprob: -19.75004005432129
    7. '-' → logprob: -20.25004005432129
    8. '  ' → logprob: -20.75004005432129
    9. ' ' → logprob: -20.87504005432129
    10. '﻿' → logprob: -21.12504005432129

Token 473: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014573395310435444
    2. ' ,' → logprob: -9.12514591217041
    3. ',n' → logprob: -10.25014591217041
    4. '   ' → logprob: -14.37514591217041
    5. ',
' → logprob: -14.50014591217041
    6. 'n' → logprob: -16.375144958496094
    7. ',re' → logprob: -16.375144958496094
    8. ')' → logprob: -16.625144958496094
    9. ',r' → logprob: -16.750144958496094
    10. '),' → logprob: -18.625144958496094

Token 474: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0788901224732399
    2. ' n' → logprob: -2.578890085220337
    3. '	n' → logprob: -15.328889846801758
    4. '   ' → logprob: -16.078889846801758
    5. ')n' → logprob: -19.328889846801758
    6. '(n' → logprob: -20.203889846801758
    7. '  ' → logprob: -20.578889846801758
    8. ' ' → logprob: -20.828889846801758
    9. '_n' → logprob: -20.953889846801758
    10. '    ' → logprob: -20.953889846801758

Token 475: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009114635176956654
    2. ' -' → logprob: -7.000911235809326
    3. '   ' → logprob: -16.750911712646484
    4. '−' → logprob: -17.750911712646484
    5. ')' → logprob: -18.125911712646484
    6. '1' → logprob: -18.500911712646484
    7. '[' → logprob: -20.125911712646484
    8. ' ' → logprob: -20.375911712646484
    9. '–' → logprob: -20.750911712646484
    10. '```' → logprob: -21.000911712646484

Token 476: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. ')' → logprob: -17.875
    4. '   ' → logprob: -18.5
    5. '<|end|>' → logprob: -19.125
    6. '۱' → logprob: -19.25
    7. '```' → logprob: -19.25
    8. '１' → logprob: -19.5
    9. '১' → logprob: -20.0
    10. '१' → logprob: -20.375

Token 477: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006887173280119896
    2. '   ' → logprob: -5.506886959075928
    3. ')
' → logprob: -5.881886959075928
    4. ' )' → logprob: -11.631887435913086
    5. ')
' → logprob: -12.756887435913086
    6. 'print' → logprob: -13.756887435913086
    7. '))' → logprob: -13.881887435913086
    8. ' )
' → logprob: -15.381887435913086
    9. '),' → logprob: -15.506887435913086
    10. ')

' → logprob: -15.506887435913086

Token 478: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00023965541913639754
    2. '   ' → logprob: -8.500239372253418
    3. ' print' → logprob: -10.250239372253418
    4. '```' → logprob: -14.125239372253418
    5. '	print' → logprob: -18.250240325927734
    6. '
' → logprob: -19.250240325927734
    7. '(print' → logprob: -19.375240325927734
    8. '    
' → logprob: -19.375240325927734
    9. '.print' → logprob: -19.750240325927734
    10. '``' → logprob: -20.000240325927734

Token 479: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.981667537620524e-06
    2. ' print' → logprob: -13.625001907348633
    3. '   ' → logprob: -14.125001907348633
    4. 'result' → logprob: -18.500001907348633
    5. '```' → logprob: -19.000001907348633
    6. '
' → logprob: -20.125001907348633
    7. '    
' → logprob: -20.375001907348633
    8. 'prin' → logprob: -20.500001907348633
    9. 'pr' → logprob: -20.750001907348633
    10. '	print' → logprob: -21.000001907348633

Token 480: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -7.040457421680912e-05
    2. 'comb' → logprob: -10.000070571899414
    3. '(' → logprob: -10.750070571899414
    4. '(comp' → logprob: -13.625070571899414
    5. ' comb' → logprob: -13.750070571899414
    6. '(comm' → logprob: -14.125070571899414
    7. '((' → logprob: -15.250070571899414
    8. '(combo' → logprob: -16.500070571899414
    9. '(cont' → logprob: -16.625070571899414
    10. 'Comb' → logprob: -18.000070571899414

Token 481: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00016909420082811266
    2. '(rest' → logprob: -9.250168800354004
    3. 'bst' → logprob: -9.625168800354004
    4. '(re' → logprob: -12.625168800354004
    5. '(b' → logprob: -14.000168800354004
    6. 'st' → logprob: -14.250168800354004
    7. 'p' → logprob: -14.875168800354004
    8. 'б' → logprob: -15.125168800354004
    9. 'bb' → logprob: -15.375168800354004
    10. 'bs' → logprob: -15.375168800354004

Token 482: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.004219789989292622
    2. '(rest' → logprob: -6.004220008850098
    3. 'reste' → logprob: -6.504220008850098
    4. ')' → logprob: -9.004220008850098
    5. '(' → logprob: -9.879220008850098
    6. 're' → logprob: -10.129220008850098
    7. ' (' → logprob: -12.129220008850098
    8. 'rest' → logprob: -12.254220008850098
    9. '((' → logprob: -12.504220008850098
    10. ' reste' → logprob: -12.504220008850098

Token 483: 'ste' (ID: 2277)
  Prédit: 'ste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ste' → logprob: -3.128163257315464e-07
    2. '-ste' → logprob: -16.25
    3. 'stre' → logprob: -17.25
    4. '#' → logprob: -17.75
    5. 'sta' → logprob: -17.875
    6. '+' → logprob: -18.375
    7. ' ste' → logprob: -18.5
    8. '[' → logprob: -18.625
    9. '=' → logprob: -18.625
    10. '(' → logprob: -18.625

Token 484: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10037704557180405
    2. '+' → logprob: -2.350377082824707
    3. '+n' → logprob: -9.225377082824707
    4. ',' → logprob: -9.975377082824707
    5. '   ' → logprob: -11.225377082824707
    6. ' ,' → logprob: -11.725377082824707
    7. '+r' → logprob: -13.975377082824707
    8. ' ' → logprob: -14.100377082824707
    9. ' ' → logprob: -14.225377082824707
    10. '+,' → logprob: -14.350377082824707

Token 485: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5759420394897461
    2. 'n' → logprob: -0.8259420394897461
    3. '(n' → logprob: -13.075942039489746
    4. '	n' → logprob: -15.075942039489746
    5. ' (' → logprob: -16.450942993164062
    6. ' ' → logprob: -16.700942993164062
    7. ')n' → logprob: -16.950942993164062
    8. '   ' → logprob: -18.075942993164062
    9. '_n' → logprob: -18.450942993164062
    10. '[n' → logprob: -19.950942993164062

Token 486: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5759397745132446
    2. ' -' → logprob: -0.8259397745132446
    3. ' ' → logprob: -15.575940132141113
    4. '−' → logprob: -16.200939178466797
    5. '   ' → logprob: -16.825939178466797
    6. 'n' → logprob: -18.075939178466797
    7. '–' → logprob: -18.450939178466797
    8. ',' → logprob: -18.575939178466797
    9. '-n' → logprob: -19.325939178466797
    10. ' ' → logprob: -19.450939178466797

Token 487: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '-' → logprob: -16.875
    4. '   ' → logprob: -19.25
    5. 'n' → logprob: -21.375
    6. ' -' → logprob: -21.75
    7. '```' → logprob: -22.125
    8. '  ' → logprob: -22.875
    9. '
' → logprob: -23.625
    10. 'int' → logprob: -23.875

Token 488: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020413640595506877
    2. ',n' → logprob: -8.750204086303711
    3. ' ,' → logprob: -10.000204086303711
    4. ',
' → logprob: -16.37520408630371
    5. 'n' → logprob: -16.62520408630371
    6. '   ' → logprob: -17.87520408630371
    7. ' n' → logprob: -20.25020408630371
    8. ',m' → logprob: -20.25020408630371
    9. '(n' → logprob: -21.00020408630371
    10. 'm' → logprob: -21.37520408630371

Token 489: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16022422909736633
    2. ' n' → logprob: -1.910224199295044
    3. '	n' → logprob: -17.41022491455078
    4. ' ' → logprob: -20.28522491455078
    5. '(n' → logprob: -20.41022491455078
    6. ' ' → logprob: -20.91022491455078
    7. '   ' → logprob: -20.91022491455078
    8. '_n' → logprob: -21.28522491455078
    9. ')n' → logprob: -21.28522491455078
    10. '[n' → logprob: -22.91022491455078

Token 490: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.048587825149297714
    2. ' -' → logprob: -3.0485877990722656
    3. '1' → logprob: -14.673587799072266
    4. '−' → logprob: -18.173587799072266
    5. ' ' → logprob: -18.673587799072266
    6. '   ' → logprob: -19.548587799072266
    7. ')' → logprob: -19.798587799072266
    8. '```' → logprob: -20.048587799072266
    9. '[' → logprob: -20.298587799072266
    10. '–' → logprob: -20.548587799072266

Token 491: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '   ' → logprob: -21.875
    4. '１' → logprob: -22.625
    5. '```' → logprob: -22.75
    6. '۱' → logprob: -23.625
    7. '१' → logprob: -24.375
    8. '১' → logprob: -24.5
    9. '' → logprob: -24.875
    10. ')' → logprob: -25.0

Token 492: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00033713103039190173
    2. ')' → logprob: -8.000337600708008
    3. '))
' → logprob: -13.500337600708008
    4. ')))' → logprob: -15.625337600708008
    5. ' ))' → logprob: -16.250337600708008
    6. ''))' → logprob: -17.875337600708008
    7. '"))' → logprob: -18.000337600708008
    8. ')
' → logprob: -18.000337600708008
    9. '()))' → logprob: -18.875337600708008
    10. '   ' → logprob: -19.250337600708008


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 490
Tokens correctement prédits (1ère position, stricte): 157
Tokens correctement prédits (1ère position, avec adaptation): 162
Tokens correctement prédits (top 10): 327
Précision stricte (1ère position): 32.04%
Précision adaptée (1ère position): 33.06%
Précision (top 10): 66.73%
================================================================================
