================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:00:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

for line in sys.stdin:
    line=line.strip()
    if not line:
        continue
    N=int(line)
    if N==0:
        print(0)
        continue
    times=list(map(int, sys.stdin.readline().split()))
    times.sort()
    penalty=0
    cumulative=0
    for t in times:
        cumulative+=t
        penalty+=cumulative
    print(penalty)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'for' (ID: 1938)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10019242763519287
    2. '\n' → logprob: -3.1001925468444824
    3. 'import' → logprob: -3.3501925468444824
    4. '<|end|>' → logprob: -5.600192546844482
    5. '\' → logprob: -5.725192546844482
    6. 'newline' → logprob: -6.475192546844482
    7. ',' → logprob: -7.100192546844482
    8. 'print' → logprob: -7.225192546844482
    9. '<|end|>' → logprob: -7.350192546844482
    10. '[' → logprob: -7.475192546844482

Token 4: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0047089881263673306
    2. ' i' → logprob: -6.004708766937256
    3. '  ' → logprob: -6.129708766937256
    4. ' space' → logprob: -11.754709243774414
    5. '```' → logprob: -12.004709243774414
    6. 'i' → logprob: -12.504709243774414
    7. ' )' → logprob: -12.629709243774414
    8. '_' → logprob: -12.879709243774414
    9. ' n' → logprob: -13.004709243774414
    10. ' a' → logprob: -13.004709243774414

Token 5: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.238096684217453
    2. 'in' → logprob: -1.6130967140197754
    3. ':' → logprob: -4.988096714019775
    4. '[' → logprob: -5.988096714019775
    5. 'import' → logprob: -7.863096714019775
    6. '```' → logprob: -7.863096714019775
    7. '[]' → logprob: -7.988096714019775
    8. '[:]' → logprob: -8.363096237182617
    9. ' ' → logprob: -8.488096237182617
    10. '[:' → logprob: -8.613096237182617

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.009110254235565662
    2. 'sys' → logprob: -4.884110450744629
    3. ' ' → logprob: -6.634110450744629
    4. '=sys' → logprob: -9.509110450744629
    5. '(sys' → logprob: -10.634110450744629
    6. ' iter' → logprob: -10.634110450744629
    7. '	sys' → logprob: -10.634110450744629
    8. ' in' → logprob: -11.384110450744629
    9. ' ' → logprob: -11.634110450744629
    10. '```' → logprob: -12.384110450744629

Token 7: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.009031333960592747
    2. '.stdin' → logprob: -5.509031295776367
    3. '.readline' → logprob: -5.509031295776367
    4. ' .' → logprob: -8.134031295776367
    5. '.stdout' → logprob: -8.259031295776367
    6. '.argv' → logprob: -8.884031295776367
    7. '.readlines' → logprob: -10.384031295776367
    8. '```' → logprob: -10.384031295776367
    9. '.stderr' → logprob: -10.509031295776367
    10. 'import' → logprob: -11.134031295776367

Token 8: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.2166411478538066e-05
    2. ':
' → logprob: -11.125052452087402
    3. ' :' → logprob: -11.500052452087402
    4. ':**' → logprob: -11.500052452087402
    5. '[:]' → logprob: -12.375052452087402
    6. '):' → logprob: -12.625052452087402
    7. '>:' → logprob: -13.125052452087402
    8. '':' → logprob: -13.250052452087402
    9. '':'' → logprob: -14.125052452087402
    10. '`:' → logprob: -14.375052452087402

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009096432477235794
    2. '    
' → logprob: -5.509096622467041
    3. ' print' → logprob: -5.884096622467041
    4. '    ' → logprob: -7.134096622467041
    5. 'print' → logprob: -7.634096622467041
    6. ' if' → logprob: -7.759096622467041
    7. ' ' → logprob: -8.759096145629883
    8. '.strip' → logprob: -10.134096145629883
    9. '  ' → logprob: -10.384096145629883
    10. '     
' → logprob: -10.634096145629883

Token 10: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32560083270072937
    2. 'print' → logprob: -1.3256008625030518
    3. ' print' → logprob: -4.450600624084473
    4. '    ' → logprob: -8.700600624084473
    5. 'pass' → logprob: -8.825600624084473
    6. '       ' → logprob: -9.075600624084473
    7. ' pass' → logprob: -9.575600624084473
    8. ' if' → logprob: -10.075600624084473
    9. 'if' → logprob: -11.325600624084473
    10. '```' → logprob: -11.825600624084473

Token 11: '=line' (ID: 192488)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.16144269704818726
    2. '.' → logprob: -2.036442756652832
    3. '.rstrip' → logprob: -4.286442756652832
    4. '.split' → logprob: -5.661442756652832
    5. '.readline' → logprob: -7.661442756652832
    6. '<|end|>' → logprob: -8.161442756652832
    7. '.startswith' → logprob: -8.536442756652832
    8. ')' → logprob: -9.661442756652832
    9. '=' → logprob: -9.911442756652832
    10. '.write' → logprob: -10.036442756652832

Token 12: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.006962585728615522
    2. '.' → logprob: -5.631962776184082
    3. '.rstrip' → logprob: -5.881962776184082
    4. '.split' → logprob: -7.756962776184082
    5. '.replace' → logprob: -9.381962776184082
    6. '.lower' → logprob: -10.381962776184082
    7. 'strip' → logprob: -11.756962776184082
    8. ' .' → logprob: -12.506962776184082
    9. '.upper' → logprob: -12.506962776184082
    10. '.readline' → logprob: -12.631962776184082

Token 13: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0028477907180786133
    2. '(' → logprob: -5.877847671508789
    3. '()`' → logprob: -11.502847671508789
    4. ' ()' → logprob: -12.002847671508789
    5. '`()' → logprob: -12.252847671508789
    6. '()
' → logprob: -12.627847671508789
    7. '().' → logprob: -13.002847671508789
    8. '())' → logprob: -13.377847671508789
    9. '()+' → logprob: -13.377847671508789
    10. ' parentheses' → logprob: -13.502847671508789

Token 14: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.731052041053772
    2. 'if' → logprob: -1.106052041053772
    3. '   ' → logprob: -1.856052041053772
    4. ':' → logprob: -4.356051921844482
    5. ')' → logprob: -5.231051921844482
    6. '<|end|>' → logprob: -5.356051921844482
    7. ' ' → logprob: -6.231051921844482
    8. '    ' → logprob: -6.606051921844482
    9. '```' → logprob: -6.606051921844482
    10. ',' → logprob: -7.106051921844482

Token 15: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.009470486082136631
    2. 'print' → logprob: -5.384470462799072
    3. ' if' → logprob: -5.509470462799072
    4. '   ' → logprob: -7.384470462799072
    5. '```' → logprob: -9.50947093963623
    6. 'i' → logprob: -10.00947093963623
    7. '#' → logprob: -10.63447093963623
    8. ':' → logprob: -12.38447093963623
    9. 'If' → logprob: -12.88447093963623
    10. 'for' → logprob: -13.00947093963623

Token 16: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3942074477672577
    2. ' line' → logprob: -1.14420747756958
    3. ' ' → logprob: -5.26920747756958
    4. ' len' → logprob: -6.51920747756958
    5. 'not' → logprob: -7.89420747756958
    6. 'line' → logprob: -8.769207000732422
    7. ' '' → logprob: -10.019207000732422
    8. '  ' → logprob: -10.644207000732422
    9. ' "' → logprob: -11.394207000732422
    10. ' lines' → logprob: -11.519207000732422

Token 17: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.04859702289104462
    2. 'line' → logprob: -3.0485970973968506
    3. ' ' → logprob: -12.42359733581543
    4. '	line' → logprob: -13.04859733581543
    5. '(line' → logprob: -13.79859733581543
    6. ' lines' → logprob: -14.79859733581543
    7. '#line' → logprob: -15.17359733581543
    8. ' lin' → logprob: -15.17359733581543
    9. ' len' → logprob: -15.29859733581543
    10. '[line' → logprob: -15.29859733581543

Token 18: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006527195684611797
    2. ' :' → logprob: -5.131527423858643
    3. ' or' → logprob: -8.256526947021484
    4. ':
' → logprob: -9.631526947021484
    5. ':return' → logprob: -9.756526947021484
    6. '.startswith' → logprob: -9.881526947021484
    7. '   ' → logprob: -10.131526947021484
    8. '):' → logprob: -10.256526947021484
    9. '<|end|>' → logprob: -11.506526947021484
    10. '.strip' → logprob: -11.756526947021484

Token 19: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34194138646125793
    2. '   ' → logprob: -1.3419413566589355
    3. ' continue' → logprob: -3.7169413566589355
    4. 'continue' → logprob: -5.5919413566589355
    5. ' break' → logprob: -8.841941833496094
    6. '	continue' → logprob: -10.966941833496094
    7. '```' → logprob: -10.966941833496094
    8. 'break' → logprob: -11.216941833496094
    9. '   ' → logprob: -11.841941833496094
    10. ' ' → logprob: -11.966941833496094

Token 20: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5788465738296509
    2. 'break' → logprob: -0.8288465738296509
    3. '   ' → logprob: -6.078846454620361
    4. 'continue' (adapté à ' continue') → logprob: -8.07884693145752
    5. ' continue' → logprob: -8.57884693145752
    6. '       ' → logprob: -9.57884693145752
    7. '```' → logprob: -10.82884693145752
    8. '    ' → logprob: -11.45384693145752
    9. '	break' → logprob: -12.07884693145752
    10. ' ' → logprob: -13.07884693145752

Token 21: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004103096667677164
    2. '    
' → logprob: -6.254103183746338
    3. 'print' → logprob: -6.504103183746338
    4. '```' → logprob: -8.87910270690918
    5. 'if' → logprob: -9.12910270690918
    6. ' if' → logprob: -9.37910270690918
    7. 'for' → logprob: -10.37910270690918
    8. '\n' → logprob: -10.37910270690918
    9. ':' → logprob: -10.50410270690918
    10. ' print' → logprob: -10.62910270690918

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026847058907151222
    2. 'print' → logprob: -3.6518471240997314
    3. 'if' → logprob: -8.651846885681152
    4. ' print' → logprob: -9.151846885681152
    5. '    
' → logprob: -9.401846885681152
    6. '```' → logprob: -9.651846885681152
    7. 'try' → logprob: -10.526846885681152
    8. 'for' → logprob: -11.026846885681152
    9. '#' → logprob: -11.276846885681152
    10. ':' → logprob: -11.401846885681152

Token 23: ' N' (ID: 478)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9062486886978149
    2. 'try' → logprob: -1.031248688697815
    3. '   ' → logprob: -2.0312485694885254
    4. 'words' → logprob: -3.5312485694885254
    5. 'parts' → logprob: -3.6562485694885254
    6. 'if' → logprob: -4.031248569488525
    7. 'tokens' → logprob: -4.031248569488525
    8. '#' → logprob: -5.406248569488525
    9. 'data' → logprob: -5.406248569488525
    10. 'word' → logprob: -5.906248569488525

Token 24: '=int' (ID: 37431)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14639149606227875
    2. '=' → logprob: -2.0213913917541504
    3. ',' → logprob: -6.14639139175415
    4. '=int' → logprob: -7.27139139175415
    5. ' ' → logprob: -8.021391868591309
    6. ' ==' → logprob: -8.271391868591309
    7. ' ,' → logprob: -8.896391868591309
    8. '   ' → logprob: -10.146391868591309
    9. '.' → logprob: -11.021391868591309
    10. ')' → logprob: -11.271391868591309

Token 25: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.06196802109479904
    2. '(' → logprob: -2.8119680881500244
    3. '(
' → logprob: -16.436967849731445
    4. ' (' → logprob: -17.061967849731445
    5. '(Line' → logprob: -17.061967849731445
    6. '(lines' → logprob: -17.311967849731445
    7. '(l' → logprob: -17.436967849731445
    8. '(

' → logprob: -17.436967849731445
    9. '(li' → logprob: -17.561967849731445
    10. 'line' → logprob: -18.061967849731445

Token 26: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. ')
' → logprob: -11.50001335144043
    3. '+' → logprob: -13.37501335144043
    4. ' )' → logprob: -14.75001335144043
    5. '-' → logprob: -15.00001335144043
    6. '))' → logprob: -15.25001335144043
    7. '[' → logprob: -15.50001335144043
    8. '#' → logprob: -16.50001335144043
    9. '   ' → logprob: -16.50001335144043
    10. '*' → logprob: -16.75001335144043

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04869285598397255
    2. ')' → logprob: -4.54869270324707
    3. ' ' → logprob: -4.54869270324707
    4. '#' → logprob: -5.04869270324707
    5. '<|end|>' → logprob: -5.42369270324707
    6. '    ' → logprob: -5.79869270324707
    7. '    
' → logprob: -6.54869270324707
    8. 'for' → logprob: -6.79869270324707
    9. '[' → logprob: -6.79869270324707
    10. ':' → logprob: -6.92369270324707

Token 28: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27719366550445557
    2. 'if' (adapté à ' if') → logprob: -2.527193546295166
    3. ' ' → logprob: -2.527193546295166
    4. 'for' → logprob: -3.777193546295166
    5. ' if' → logprob: -3.902193546295166
    6. '    ' → logprob: -4.402193546295166
    7. 's' → logprob: -5.152193546295166
    8. '#' → logprob: -5.777193546295166
    9. ')' → logprob: -5.777193546295166
    10. 'n' → logprob: -5.902193546295166

Token 29: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.0014202340971678495
    2. 'N' → logprob: -6.876420021057129
    3. ' ' → logprob: -7.876420021057129
    4. ' not' → logprob: -12.376420021057129
    5. ' ' → logprob: -13.251420021057129
    6. ' n' → logprob: -14.501420021057129
    7. '  ' → logprob: -15.876420021057129
    8. ' isinstance' → logprob: -16.126420974731445
    9. ' (' → logprob: -16.188920974731445
    10. '   ' → logprob: -16.376420974731445

Token 30: '==' (ID: 560)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7207372188568115
    2. '>' → logprob: -0.8457372188568115
    3. ' ==' → logprob: -3.5957372188568115
    4. '%' → logprob: -3.8457372188568115
    5. '==' → logprob: -4.220737457275391
    6. ' <=' → logprob: -5.220737457275391
    7. ' <' → logprob: -5.220737457275391
    8. ' %' → logprob: -5.345737457275391
    9. '<' → logprob: -6.220737457275391
    10. '<=' → logprob: -6.720737457275391

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009205120149999857
    2. ' ' → logprob: -7.000920295715332
    3. '1' → logprob: -12.125920295715332
    4. '-' → logprob: -13.375920295715332
    5. '42' → logprob: -14.250920295715332
    6. '```' → logprob: -15.500920295715332
    7. '   ' → logprob: -15.625920295715332
    8. '=' → logprob: -15.813420295715332
    9. '  ' → logprob: -16.00092124938965
    10. '4' → logprob: -16.31342124938965

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001078183762729168
    2. ':
' → logprob: -6.876078128814697
    3. '   ' → logprob: -10.751078605651855
    4. ' :' → logprob: -11.376078605651855
    5. '       ' → logprob: -11.626078605651855
    6. ' break' → logprob: -14.126078605651855
    7. '    ' → logprob: -14.126078605651855
    8. '	break' → logprob: -14.501078605651855
    9. '.' → logprob: -15.001078605651855
    10. ':return' → logprob: -15.001078605651855

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007879049517214298
    2. '   ' → logprob: -4.882879257202148
    3. ':' → logprob: -9.132879257202148
    4. ' break' → logprob: -9.757879257202148
    5. '	break' → logprob: -10.632879257202148
    6. '     ' → logprob: -10.882879257202148
    7. '      ' → logprob: -11.007879257202148
    8. '    ' → logprob: -11.132879257202148
    9. 'break' → logprob: -11.882879257202148
    10. '.' → logprob: -12.257879257202148

Token 34: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.764809250831604
    2. ' break' → logprob: -0.764809250831604
    3. 'break' → logprob: -2.7648091316223145
    4. '   ' → logprob: -5.3898091316223145
    5. '	break' → logprob: -6.5148091316223145
    6. '```' → logprob: -9.764809608459473
    7. '           ' → logprob: -10.764809608459473
    8. '_break' → logprob: -11.639809608459473
    9. '-break' → logprob: -11.889809608459473
    10. '    ' → logprob: -12.514809608459473

Token 35: '(' (ID: 7)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01582084409892559
    2. '(' → logprob: -4.3908209800720215
    3. '("")' → logprob: -5.7658209800720215
    4. '0' → logprob: -10.140820503234863
    5. '('' → logprob: -10.140820503234863
    6. '(N' → logprob: -10.265820503234863
    7. '("' → logprob: -10.390820503234863
    8. '(None' → logprob: -12.265820503234863
    9. '("("' → logprob: -12.765820503234863
    10. '()
' → logprob: -12.890820503234863

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.758887767791748
    2. '"' → logprob: -1.258887767791748
    3. ')' → logprob: -1.508887767791748
    4. '")' → logprob: -4.133887767791748
    5. 'break' → logprob: -5.383887767791748
    6. ''' → logprob: -5.758887767791748
    7. 'end' → logprob: -7.008887767791748
    8. ' ' → logprob: -7.758887767791748
    9. 'Break' → logprob: -7.758887767791748
    10. '""' → logprob: -8.508888244628906

Token 37: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.028536492725834e-05
    2. ')
' → logprob: -9.625070571899414
    3. ' )' → logprob: -12.625070571899414
    4. '')' → logprob: -15.125070571899414
    5. '`)' → logprob: -15.750070571899414
    6. '   ' → logprob: -15.875070571899414
    7. '")' → logprob: -16.375070571899414
    8. ')return' → logprob: -16.750070571899414
    9. '))' → logprob: -17.250070571899414
    10. '
' → logprob: -17.625070571899414

Token 38: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06321654468774796
    2. '       ' → logprob: -2.8132164478302
    3. '<|end|>' → logprob: -7.438216686248779
    4. '```' → logprob: -8.188216209411621
    5. '    
' → logprob: -9.313216209411621
    6. '    ' → logprob: -9.938216209411621
    7. ' else' → logprob: -10.188216209411621
    8. ')' → logprob: -10.688216209411621
    9. 'else' → logprob: -10.688216209411621
    10. '
' → logprob: -10.938216209411621

Token 39: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12713252007961273
    2. 'break' → logprob: -2.3771324157714844
    3. '   ' → logprob: -3.8771324157714844
    4. ' break' → logprob: -5.502132415771484
    5. '	break' → logprob: -6.627132415771484
    6. '```' → logprob: -7.877132415771484
    7. '\t' → logprob: -10.752132415771484
    8. 'else' → logprob: -11.502132415771484
    9. '           ' → logprob: -11.752132415771484
    10. 'b' → logprob: -12.252132415771484

Token 40: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060774147510528564
    2. '    
' → logprob: -3.060774087905884
    3. '<|end|>' → logprob: -5.060774326324463
    4. '```' → logprob: -6.310774326324463
    5. '\n' → logprob: -6.560774326324463
    6. '\' → logprob: -7.435774326324463
    7. '
' → logprob: -8.310773849487305
    8. '    ' → logprob: -8.435773849487305
    9. '<|end|>' → logprob: -8.560773849487305
    10. '   
' → logprob: -8.935773849487305

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007465593051165342
    2. '    
' → logprob: -5.132465362548828
    3. '<|end|>' → logprob: -7.382465362548828
    4. '```' → logprob: -7.507465362548828
    5. 'n' → logprob: -10.007465362548828
    6. '    ' → logprob: -10.132465362548828
    7. '\n' → logprob: -10.507465362548828
    8. '#' → logprob: -10.757465362548828
    9. ')' → logprob: -10.757465362548828
    10. '\' → logprob: -10.882465362548828

Token 42: ' times' (ID: 4238)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026816537603735924
    2. '    ' → logprob: -5.276816368103027
    3. '```' → logprob: -5.276816368103027
    4. 'n' → logprob: -5.526816368103027
    5. ' ' → logprob: -6.276816368103027
    6. '    
' → logprob: -6.401816368103027
    7. 'dp' → logprob: -6.901816368103027
    8. 'a' → logprob: -6.901816368103027
    9. 'result' → logprob: -7.401816368103027
    10. '[' → logprob: -7.526816368103027

Token 43: '=list' (ID: 93413)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38494405150413513
    2. '=' → logprob: -1.3849440813064575
    3. '_' → logprob: -3.384943962097168
    4. 's' → logprob: -4.509943962097168
    5. '_count' → logprob: -5.134943962097168
    6. '[' → logprob: -5.634943962097168
    7. '_counts' → logprob: -5.884943962097168
    8. '_s' → logprob: -6.509943962097168
    9. '_needed' → logprob: -6.509943962097168
    10. ' ' → logprob: -6.634943962097168

Token 44: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.317132830619812
    2. '(map' → logprob: -1.317132830619812
    3. '()' → logprob: -6.192132949829102
    4. '(range' → logprob: -7.192132949829102
    5. '(int' → logprob: -7.317132949829102
    6. '(input' → logprob: -8.317132949829102
    7. '(eval' → logprob: -10.067132949829102
    8. '(
' → logprob: -10.567132949829102
    9. '[int' → logprob: -11.067132949829102
    10. '(split' → logprob: -11.192132949829102

Token 45: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008956553414463997
    2. '(' → logprob: -4.758956432342529
    3. '(str' → logprob: -8.258956909179688
    4. '(lambda' → logprob: -9.758956909179688
    5. '[int' → logprob: -11.758956909179688
    6. '<int' → logprob: -12.008956909179688
    7. 'int' → logprob: -12.508956909179688
    8. '(
' → logprob: -13.008956909179688
    9. '(input' → logprob: -13.258956909179688
    10. '<|end|>' → logprob: -13.383956909179688

Token 46: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.6602820158004761
    2. '(input' → logprob: -1.410282015800476
    3. ',input' → logprob: -2.2852821350097656
    4. '(' → logprob: -2.4102821350097656
    5. ',' → logprob: -3.1602821350097656
    6. '(line' → logprob: -5.785282135009766
    7. 'input' → logprob: -7.535282135009766
    8. 'sys' → logprob: -7.535282135009766
    9. ',line' → logprob: -8.035282135009766
    10. ')' → logprob: -8.660282135009766

Token 47: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02473149076104164
    2. 'sys' → logprob: -3.899731397628784
    3. ' input' → logprob: -5.524731636047363
    4. ' sys' → logprob: -8.899731636047363
    5. ')' → logprob: -10.649731636047363
    6. '(sys' → logprob: -11.774731636047363
    7. '   ' → logprob: -12.024731636047363
    8. 'stdin' → logprob: -12.274731636047363
    9. '(input' → logprob: -12.524731636047363
    10. '	input' → logprob: -13.149731636047363

Token 48: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.7610454708337784e-05
    2. '.' → logprob: -10.750027656555176
    3. '.argv' → logprob: -12.875027656555176
    4. '.stdout' → logprob: -13.125027656555176
    5. '.std' → logprob: -13.875027656555176
    6. '.readline' → logprob: -14.750027656555176
    7. 'stdin' → logprob: -16.50002670288086
    8. '.st' → logprob: -17.00002670288086
    9. '.stderr' → logprob: -17.00002670288086
    10. '(stdin' → logprob: -17.25002670288086

Token 49: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0010353106772527099
    2. '.' → logprob: -6.876035213470459
    3. '.readlines' → logprob: -14.001035690307617
    4. '.next' → logprob: -14.001035690307617
    5. ')' → logprob: -15.001035690307617
    6. '.)' → logprob: -15.126035690307617
    7. '.__' → logprob: -16.376035690307617
    8. '.")' → logprob: -16.876035690307617
    9. '))' → logprob: -17.001035690307617
    10. '.read' → logprob: -17.126035690307617

Token 50: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0006355931982398033
    2. '()' → logprob: -7.375635623931885
    3. '())' → logprob: -12.750635147094727
    4. ' ().' → logprob: -12.875635147094727
    5. '(' → logprob: -13.500635147094727
    6. '.readline' → logprob: -14.375635147094727
    7. '()
' → logprob: -14.875635147094727
    8. '()))' → logprob: -15.000635147094727
    9. '.' → logprob: -15.500635147094727
    10. '()

' → logprob: -15.625635147094727

Token 51: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.07897945493459702
    2. 'split' → logprob: -2.5789794921875
    3. 'rstrip' → logprob: -9.3289794921875
    4. ' strip' → logprob: -14.2039794921875
    5. ' split' → logprob: -16.2039794921875
    6. '.strip' → logprob: -17.9539794921875
    7. '(strip' → logprob: -18.8289794921875
    8. '(split' → logprob: -19.0789794921875
    9. 'rs' → logprob: -19.2039794921875
    10. 'spl' → logprob: -19.5789794921875

Token 52: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5032747387886047
    2. '())' → logprob: -1.25327467918396
    3. '(' → logprob: -2.50327467918396
    4. '()' → logprob: -3.87827467918396
    5. '))' → logprob: -5.253274917602539
    6. ')' → logprob: -6.628274917602539
    7. '('' → logprob: -8.128274917602539
    8. '())))' → logprob: -8.878274917602539
    9. '()))
' → logprob: -9.253274917602539
    10. '(','' → logprob: -9.753274917602539

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5679419040679932
    2. 'times' → logprob: -1.4429419040679932
    3. ' times' → logprob: -3.192941904067993
    4. '<|end|>' → logprob: -3.567941904067993
    5. '[' → logprob: -3.817941904067993
    6. 'if' → logprob: -3.942941904067993
    7. '    
' → logprob: -4.442941665649414
    8. ')' → logprob: -4.567941665649414
    9. ' ' → logprob: -4.692941665649414
    10. 'total' → logprob: -4.817941665649414

Token 54: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' (adapté à ' times') → logprob: -0.20664937794208527
    2. ' times' → logprob: -2.7066493034362793
    3. '   ' → logprob: -2.8316493034362793
    4. 'dp' → logprob: -3.3316493034362793
    5. 'total' → logprob: -5.331649303436279
    6. 'if' → logprob: -5.706649303436279
    7. '    
' → logprob: -6.331649303436279
    8. ')' → logprob: -6.456649303436279
    9. 'result' → logprob: -6.706649303436279
    10. 'sum' → logprob: -6.831649303436279

Token 55: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.28429609537124634
    2. '.' → logprob: -1.4092960357666016
    3. '.append' → logprob: -6.534296035766602
    4. '=' → logprob: -7.659296035766602
    5. '[' → logprob: -7.784296035766602
    6. '<|end|>' → logprob: -8.034296035766602
    7. '.reverse' → logprob: -9.034296035766602
    8. ')' → logprob: -9.534296035766602
    9. '.pop' → logprob: -9.534296035766602
    10. '[:]' → logprob: -9.909296035766602

Token 56: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20148047804832458
    2. '(' → logprob: -1.701480507850647
    3. '()
' → logprob: -11.451480865478516
    4. '(
' → logprob: -11.576480865478516
    5. '(()' → logprob: -11.826480865478516
    6. '(reverse' → logprob: -12.451480865478516
    7. '((' → logprob: -12.701480865478516
    8. '().' → logprob: -13.076480865478516
    9. '(

' → logprob: -13.076480865478516
    10. '(open' → logprob: -13.076480865478516

Token 57: '   ' (ID: 271)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.37189221382141113
    2. 'result' → logprob: -2.246892213821411
    3. 'sum' → logprob: -3.371892213821411
    4. 'prefix' → logprob: -3.371892213821411
    5. 'max' → logprob: -3.871892213821411
    6. 's' → logprob: -4.121891975402832
    7. 'time' → logprob: -4.121891975402832
    8. 'c' → logprob: -4.246891975402832
    9. 'dp' → logprob: -4.371891975402832
    10. 'res' → logprob: -4.746891975402832

Token 58: ' penalty' (ID: 34689)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6208487153053284
    2. 'dp' → logprob: -1.9958486557006836
    3. 'result' → logprob: -2.2458486557006836
    4. 'prefix' → logprob: -3.1208486557006836
    5. 'max' → logprob: -3.6208486557006836
    6. 'wait' → logprob: -3.8708486557006836
    7. 'c' → logprob: -3.8708486557006836
    8. 'res' → logprob: -3.9958486557006836
    9. 'time' → logprob: -3.9958486557006836
    10. 'sum' → logprob: -4.120848655700684

Token 59: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10237083584070206
    2. ' =' → logprob: -2.3523707389831543
    3. 's' → logprob: -7.102370738983154
    4. '+=' → logprob: -7.727370738983154
    5. '=sum' → logprob: -7.977370738983154
    6. ' +=' → logprob: -8.227371215820312
    7. '_sum' → logprob: -9.227371215820312
    8. '_total' → logprob: -9.852371215820312
    9. '_time' → logprob: -10.227371215820312
    10. '_=' → logprob: -10.977371215820312

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00047082986566238105
    2. 'sum' → logprob: -8.500471115112305
    3. ' ' → logprob: -8.750471115112305
    4. 'times' → logprob: -9.250471115112305
    5. ' times' → logprob: -12.625471115112305
    6. 'total' → logprob: -12.875471115112305
    7. 'time' → logprob: -13.125471115112305
    8. ' sum' → logprob: -14.250471115112305
    9. 's' → logprob: -14.375471115112305
    10. '   ' → logprob: -14.437971115112305

Token 61: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45163482427597046
    2. '<|end|>' → logprob: -1.3266348838806152
    3. ' cumulative' → logprob: -3.9516348838806152
    4. 'total' → logprob: -4.326634883880615
    5. 't' → logprob: -4.826634883880615
    6. ' total' → logprob: -4.951634883880615
    7. ',' → logprob: -5.076634883880615
    8. '    
' → logprob: -5.326634883880615
    9. '    ' → logprob: -5.326634883880615
    10. 'c' → logprob: -5.576634883880615

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4616723358631134
    2. 'c' → logprob: -1.961672306060791
    3. 'total' → logprob: -1.961672306060791
    4. 'for' → logprob: -4.211672306060791
    5. 'acc' → logprob: -4.336672306060791
    6. ' cumulative' → logprob: -4.336672306060791
    7. 'cum' → logprob: -4.461672306060791
    8. 'time' → logprob: -4.461672306060791
    9. 'pen' → logprob: -5.086672306060791
    10. 'current' → logprob: -5.336672306060791

Token 63: ' cumulative' (ID: 75628)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.686044454574585
    2. 'c' → logprob: -1.561044454574585
    3. 'current' → logprob: -2.311044454574585
    4. 'for' → logprob: -2.561044454574585
    5. 'cum' → logprob: -3.186044454574585
    6. 'acc' → logprob: -3.311044454574585
    7. 'sum' → logprob: -4.811044692993164
    8. 'curr' → logprob: -5.186044692993164
    9. 'time' → logprob: -5.186044692993164
    10. 'running' → logprob: -5.686044692993164

Token 64: '=' (ID: 28)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.16612251102924347
    2. '=' → logprob: -1.916122555732727
    3. '_' → logprob: -5.7911224365234375
    4. '_sum' → logprob: -6.1661224365234375
    5. '=_' → logprob: -8.541122436523438
    6. ' =' → logprob: -8.541122436523438
    7. '=time' → logprob: -9.541122436523438
    8. '_=' → logprob: -9.666122436523438
    9. '=sum' → logprob: -9.791122436523438
    10. 'Time' → logprob: -10.041122436523438

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. 'times' → logprob: -19.25002670288086
    4. '   ' → logprob: -19.37502670288086
    5. '<|end|>' → logprob: -19.62502670288086
    6. ' ' → logprob: -20.50002670288086
    7. '  ' → logprob: -20.50002670288086
    8. ' times' → logprob: -20.75002670288086
    9. '00' → logprob: -20.75002670288086
    10. '۰' → logprob: -20.75002670288086

Token 66: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9195713996887207
    2. '   ' → logprob: -1.2945713996887207
    3. ' for' → logprob: -1.2945713996887207
    4. '
' → logprob: -3.5445713996887207
    5. '<|end|>' → logprob: -4.294571399688721
    6. '\n' → logprob: -5.919571399688721
    7. '    
' → logprob: -6.169571399688721
    8. '' → logprob: -6.419571399688721
    9. ' ' → logprob: -6.794571399688721
    10. '```' → logprob: -7.419571399688721

Token 67: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23008771240711212
    2. ' for' → logprob: -2.2300877571105957
    3. '   ' → logprob: -2.8550877571105957
    4. '
' → logprob: -3.4800877571105957
    5. '<|end|>' → logprob: -5.105087757110596
    6. '\n' → logprob: -6.730087757110596
    7. '    
' → logprob: -7.105087757110596
    8. '	for' → logprob: -8.230087280273438
    9. ' 
' → logprob: -8.480087280273438
    10. ' ' → logprob: -8.480087280273438

Token 68: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00027468299958854914
    2. ' for' → logprob: -8.250274658203125
    3. '   ' → logprob: -11.500274658203125
    4. '	for' → logprob: -13.250274658203125
    5. '
' → logprob: -14.125274658203125
    6. '<|end|>' → logprob: -15.125274658203125
    7. '```' → logprob: -15.500274658203125
    8. '\n' → logprob: -16.375274658203125
    9. ' ' → logprob: -16.875274658203125
    10. '    
' → logprob: -17.000274658203125

Token 69: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.7856179475784302
    2. ' time' → logprob: -0.7856179475784302
    3. 't' → logprob: -3.2856178283691406
    4. 'time' → logprob: -3.4106178283691406
    5. ' i' → logprob: -4.160617828369141
    6. ' ' → logprob: -6.910617828369141
    7. 'i' → logprob: -7.160617828369141
    8. ' ti' → logprob: -9.53561782836914
    9. '	time' → logprob: -9.91061782836914
    10. '   ' → logprob: -10.09811782836914

Token 70: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03117729164659977
    2. 'in' → logprob: -3.531177282333374
    3. ' ' → logprob: -6.781177520751953
    4. 'i' → logprob: -9.406177520751953
    5. 'n' → logprob: -9.406177520751953
    6. ' i' → logprob: -10.281177520751953
    7. '	in' → logprob: -10.406177520751953
    8. '  ' → logprob: -11.781177520751953
    9. '   ' → logprob: -11.781177520751953
    10. 't' → logprob: -12.031177520751953

Token 71: ' times' (ID: 4238)
  Prédit: ' times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.018259048461914062
    2. 'times' → logprob: -4.018259048461914
    3. 'imes' → logprob: -9.143259048461914
    4. '_times' → logprob: -14.018259048461914
    5. ' ' → logprob: -14.268259048461914
    6. '(times' → logprob: -14.643259048461914
    7. 'Times' → logprob: -16.893259048461914
    8. '   ' → logprob: -17.143259048461914
    9. '.times' → logprob: -17.143259048461914
    10. '  ' → logprob: -17.143259048461914

Token 72: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006260605878196657
    2. ':
' → logprob: -7.500626087188721
    3. '   ' → logprob: -9.875625610351562
    4. '       ' → logprob: -11.875625610351562
    5. '):' → logprob: -12.500625610351562
    6. '+' → logprob: -13.000625610351562
    7. ' :' → logprob: -13.125625610351562
    8. '<|end|>' → logprob: -13.250625610351562
    9. ',' → logprob: -13.875625610351562
    10. ':**' → logprob: -14.125625610351562

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026730417739599943
    2. '   ' → logprob: -6.377673149108887
    3. '    
' → logprob: -8.002673149108887
    4. '        
' → logprob: -8.627673149108887
    5. '+' → logprob: -9.127673149108887
    6. '
' → logprob: -9.877673149108887
    7. ' ' → logprob: -10.002673149108887
    8. ' 
' → logprob: -10.127673149108887
    9. '<|end|>' → logprob: -10.252673149108887
    10. '    ' → logprob: -10.627673149108887

Token 74: ' cumulative' (ID: 75628)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.18784447014331818
    2. ' cumulative' → logprob: -2.6878445148468018
    3. '       ' → logprob: -2.8128445148468018
    4. '   ' → logprob: -3.1878445148468018
    5. '
' → logprob: -7.812844276428223
    6. '    
' → logprob: -8.312844276428223
    7. '+' → logprob: -8.312844276428223
    8. '        
' → logprob: -8.562844276428223
    9. '	c' → logprob: -8.812844276428223
    10. ' ' → logprob: -8.937844276428223

Token 75: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.14348505437374115
    2. ' +=' → logprob: -2.0184850692749023
    3. '+' → logprob: -7.268485069274902
    4. '   ' → logprob: -9.893485069274902
    5. ']+=' → logprob: -11.018485069274902
    6. '+=(' → logprob: -11.268485069274902
    7. '+='' → logprob: -11.643485069274902
    8. '    ' → logprob: -11.768485069274902
    9. '=' → logprob: -12.018485069274902
    10. '+="' → logprob: -12.518485069274902

Token 76: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.676292231422849e-05
    2. ' t' → logprob: -11.000017166137695
    3. '`t' → logprob: -20.125017166137695
    4. '	t' → logprob: -20.625017166137695
    5. '   ' → logprob: -22.625017166137695
    6. '_t' → logprob: -22.750017166137695
    7. '<t' → logprob: -23.500017166137695
    8. ')t' → logprob: -24.625017166137695
    9. ' ' → logprob: -25.125017166137695
    10. '+t' → logprob: -25.250017166137695

Token 77: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.028195243328809738
    2. '       ' → logprob: -4.028195381164551
    3. '        
' → logprob: -6.153195381164551
    4. '   ' → logprob: -6.278195381164551
    5. '    
' → logprob: -6.778195381164551
    6. ' 
' → logprob: -6.903195381164551
    7. ' penalty' → logprob: -7.028195381164551
    8. 'pen' → logprob: -7.153195381164551
    9. '
' → logprob: -7.278195381164551
    10. '  
' → logprob: -8.15319538116455

Token 78: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8208063244819641
    2. '   ' → logprob: -1.3208062648773193
    3. 'pen' → logprob: -1.9458062648773193
    4. ' penalty' → logprob: -2.0708062648773193
    5. '       ' → logprob: -4.070806503295898
    6. '    
' → logprob: -6.070806503295898
    7. '_pen' → logprob: -6.070806503295898
    8. '        
' → logprob: -7.320806503295898
    9. '  
' → logprob: -8.320806503295898
    10. '.pen' → logprob: -8.320806503295898

Token 79: ' penalty' (ID: 34689)
  Prédit: 'pen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pen' → logprob: -6.551721889991313e-05
    2. ' penalty' → logprob: -9.875065803527832
    3. '   ' → logprob: -11.375065803527832
    4. 'penetr' → logprob: -13.625065803527832
    5. '       ' → logprob: -14.625065803527832
    6. '
' → logprob: -14.875065803527832
    7. '_pen' → logprob: -15.625065803527832
    8. '.pen' → logprob: -16.750064849853516
    9. '    
' → logprob: -17.125064849853516
    10. '  ' → logprob: -17.375064849853516

Token 80: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04887598380446434
    2. ' +=' → logprob: -3.0488760471343994
    3. '+' → logprob: -8.42387580871582
    4. '+='' → logprob: -10.79887580871582
    5. '+=(' → logprob: -10.92387580871582
    6. ']+=' → logprob: -11.04887580871582
    7. '+="' → logprob: -11.29887580871582
    8. '=' → logprob: -13.92387580871582
    9. '   ' → logprob: -14.92387580871582
    10. '<|end|>' → logprob: -15.29887580871582

Token 81: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0019570598378777504
    2. ' cumulative' → logprob: -6.251956939697266
    3. ' c' → logprob: -11.001956939697266
    4. 't' → logprob: -11.626956939697266
    5. ' t' → logprob: -13.876956939697266
    6. 'cum' → logprob: -14.501956939697266
    7. ' ' → logprob: -14.501956939697266
    8. '	c' → logprob: -15.001956939697266
    9. '   ' → logprob: -15.501956939697266
    10. '+c' → logprob: -15.876956939697266

Token 82: 'umulative' (ID: 97729)
  Prédit: 'umulative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulative' → logprob: -1.5213274309644476e-05
    2. 'umul' → logprob: -11.125015258789062
    3. 'um' → logprob: -15.625015258789062
    4. 'uml' → logprob: -16.625015258789062
    5. 'umulate' → logprob: -16.625015258789062
    6. 'umal' → logprob: -17.750015258789062
    7. ' cumulative' → logprob: -18.000015258789062
    8. 'umsum' → logprob: -18.375015258789062
    9. 'umulator' → logprob: -18.750015258789062
    10. 'umu' → logprob: -19.375015258789062

Token 83: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0104377381503582
    2. '   ' → logprob: -4.885437965393066
    3. 'print' → logprob: -6.260437965393066
    4. '    
' → logprob: -7.135437965393066
    5. '
' → logprob: -10.385437965393066
    6. '\n' → logprob: -10.760437965393066
    7. '  
' → logprob: -10.760437965393066
    8. ' print' → logprob: -10.760437965393066
    9. '   
' → logprob: -11.385437965393066
    10. ' 
' → logprob: -12.135437965393066

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2292066365480423
    2. '
' → logprob: -1.7292066812515259
    3. 'print' → logprob: -3.7292065620422363
    4. '    
' → logprob: -5.729206562042236
    5. '  
' → logprob: -10.229207038879395
    6. ' print' → logprob: -10.729207038879395
    7. '\n' → logprob: -10.854207038879395
    8. '
' → logprob: -10.979207038879395
    9. '```' → logprob: -10.979207038879395
    10. '<|end|>' → logprob: -11.604207038879395

Token 85: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00021569548698607832
    2. '   ' → logprob: -8.500215530395508
    3. ' print' → logprob: -11.375215530395508
    4. '
' → logprob: -14.500215530395508
    5. '```' → logprob: -15.875215530395508
    6. '	print' → logprob: -17.375215530395508
    7. '    
' → logprob: -17.500215530395508
    8. '``' → logprob: -19.625215530395508
    9. 'Print' → logprob: -20.500215530395508
    10. '#print' → logprob: -20.625215530395508

Token 86: '(p' (ID: 2407)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10021346807479858
    2. '(p' → logprob: -2.3502135276794434
    3. '('' → logprob: -12.600213050842285
    4. ' (' → logprob: -13.475213050842285
    5. '()' → logprob: -14.850213050842285
    6. '(
' → logprob: -14.850213050842285
    7. '((' → logprob: -14.850213050842285
    8. '(

' → logprob: -15.225213050842285
    9. '(P' → logprob: -15.225213050842285
    10. '("' → logprob: -15.850213050842285

Token 87: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.018814772367477417
    2. 'enal' → logprob: -4.143814563751221
    3. 'e' → logprob: -6.018814563751221
    4. ')' → logprob: -9.018815040588379
    5. 'ena' → logprob: -9.018815040588379
    6. 'enan' → logprob: -10.268815040588379
    7. '   ' → logprob: -11.393815040588379
    8. ' en' → logprob: -11.393815040588379
    9. '```' → logprob: -11.768815040588379
    10. 'a' → logprob: -12.643815040588379

Token 88: 'alty' (ID: 59531)
  Prédit: 'alty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alty' → logprob: -8.339776832144707e-05
    2. 'alt' → logprob: -9.875082969665527
    3. ' alty' → logprob: -10.500082969665527
    4. 'alties' → logprob: -13.125082969665527
    5. 'aly' → logprob: -14.375082969665527
    6. '(' → logprob: -14.875082969665527
    7. 'ality' → logprob: -15.000082969665527
    8. '[' → logprob: -15.000082969665527
    9. 'al' → logprob: -15.125082969665527
    10. ')' → logprob: -15.500082969665527

Token 89: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.000000953674316
    3. ')
' → logprob: -16.625
    4. '))' → logprob: -18.375
    5. ')`' → logprob: -18.5
    6. '')' → logprob: -19.875
    7. '`)' → logprob: -19.875
    8. '),' → logprob: -20.875
    9. ')}' → logprob: -21.0
    10. '()' → logprob: -21.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 87
Tokens correctement prédits (1ère position, stricte): 40
Tokens correctement prédits (1ère position, avec adaptation): 44
Tokens correctement prédits (top 10): 73
Précision stricte (1ère position): 45.98%
Précision adaptée (1ère position): 50.57%
Précision (top 10): 83.91%
================================================================================
