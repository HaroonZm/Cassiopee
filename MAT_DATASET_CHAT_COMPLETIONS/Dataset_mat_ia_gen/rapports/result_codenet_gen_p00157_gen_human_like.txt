================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:26:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = int(input())
    if n == 0:
        break
    ichiro = [tuple(map(int, input().split())) for _ in range(n)]
    m = int(input())
    jiro = [tuple(map(int, input().split())) for _ in range(m)]
    dolls = ichiro + jiro

    # On veut une chaîne maximale où chaque poupée peut contenir la suivante:
    # h et r strictement croissants (x < h et y < r)
    # On trie par hauteur et rayon pour faciliter la recherche de séquence croissante
    dolls.sort(key=lambda x: (x[0], x[1]))

    dp = [1] * (n + m)
    for i in range(n + m):
        for j in range(i):
            if dolls[j][0] < dolls[i][0] and dolls[j][1] < dolls[i][1]:
                dp[i] = max(dp[i], dp[j] + 1)

    k = max(dp)
    # On veut que k soit strictement plus grand que max(n,m)
    # Si ce n'est pas possible, k vaut au moins max(n,m)
    if k <= max(n, m):
        k = max(n, m)
    print(k)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11692515015602112
    2. '\n' → logprob: -3.6169252395629883
    3. '    ' → logprob: -4.241925239562988
    4. ' ' → logprob: -4.241925239562988
    5. '    
' → logprob: -4.366925239562988
    6. ' 
' → logprob: -4.491925239562988
    7. '\' → logprob: -4.616925239562988
    8. ':' → logprob: -5.366925239562988
    9. '```' → logprob: -5.616925239562988
    10. '<|end|>' → logprob: -5.741925239562988

Token 4: ' n' (ID: 297)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.8856312036514282
    2. '   ' → logprob: -1.1356312036514282
    3. ' ' → logprob: -1.7606312036514282
    4. '```' → logprob: -2.7606310844421387
    5. '       ' → logprob: -5.135631084442139
    6. '  ' → logprob: -5.760631084442139
    7. ' ```' → logprob: -5.885631084442139
    8. ' (' → logprob: -6.135631084442139
    9. '    
' → logprob: -6.385631084442139
    10. '[' → logprob: -6.760631084442139

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6069875359535217
    2. 'u' → logprob: -1.731987476348877
    3. '=' → logprob: -2.481987476348877
    4. 'o' → logprob: -2.481987476348877
    5. '   ' → logprob: -3.356987476348877
    6. 'e' → logprob: -4.606987476348877
    7. '_' → logprob: -4.731987476348877
    8. ' =' → logprob: -4.731987476348877
    9. '+' → logprob: -4.856987476348877
    10. '%' → logprob: -5.106987476348877

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.09271397441625595
    2. ' input' → logprob: -2.5927140712738037
    3. 'int' → logprob: -4.592713832855225
    4. 'input' → logprob: -5.717713832855225
    5. ' n' → logprob: -8.592714309692383
    6. ' ' → logprob: -9.717714309692383
    7. ' randint' → logprob: -10.967714309692383
    8. 'n' → logprob: -11.717714309692383
    9. ' eval' → logprob: -12.217714309692383
    10. ' i' → logprob: -12.217714309692383

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006758829578757286
    2. '(input' → logprob: -5.006758689880371
    3. '()' → logprob: -11.131758689880371
    4. 'input' → logprob: -11.756758689880371
    5. '(n' → logprob: -12.256758689880371
    6. '(
' → logprob: -12.381758689880371
    7. ' (' → logprob: -12.506758689880371
    8. '('' → logprob: -12.631758689880371
    9. '(int' → logprob: -14.756758689880371
    10. ''' → logprob: -14.756758689880371

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7426531910896301
    2. ')' → logprob: -0.9926531910896301
    3. '()' → logprob: -2.3676531314849854
    4. '())' → logprob: -2.9926531314849854
    5. '))' → logprob: -5.4926533699035645
    6. '('' → logprob: -6.8676533699035645
    7. ' ' → logprob: -6.8676533699035645
    8. '()))' → logprob: -6.9926533699035645
    9. '```' → logprob: -7.2426533699035645
    10. '(""))' → logprob: -8.367652893066406

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.954599916934967
    2. ' ' → logprob: -1.8295998573303223
    3. ' if' → logprob: -2.0795998573303223
    4. ':' → logprob: -2.5795998573303223
    5. '<|end|>' → logprob: -2.7045998573303223
    6. '  ' → logprob: -3.2045998573303223
    7. '    ' → logprob: -3.4545998573303223
    8. ')' → logprob: -3.7045998573303223
    9. '  
' → logprob: -3.9545998573303223
    10. '    
' → logprob: -4.079599857330322

Token 10: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7105682492256165
    2. '   ' → logprob: -1.0855681896209717
    3. ' ' → logprob: -2.7105681896209717
    4. '    ' → logprob: -3.4605681896209717
    5. 'if' (adapté à ' if') → logprob: -3.4605681896209717
    6. ')' → logprob: -4.460568428039551
    7. '  ' → logprob: -4.835568428039551
    8. ':' → logprob: -5.835568428039551
    9. '\n' → logprob: -6.210568428039551
    10. ' )' → logprob: -6.335568428039551

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.020662404596805573
    2. ' ' → logprob: -4.020662307739258
    3. ' not' → logprob: -6.520662307739258
    4. 'n' → logprob: -6.895662307739258
    5. ' ' → logprob: -11.270662307739258
    6. 'not' → logprob: -12.145662307739258
    7. '  ' → logprob: -12.395662307739258
    8. '	n' → logprob: -14.770662307739258
    9. '(n' → logprob: -15.145662307739258
    10. '<|end|>' → logprob: -15.395662307739258

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31525734066963196
    2. ' >' → logprob: -1.8152573108673096
    3. ' <=' → logprob: -2.8152573108673096
    4. ' <' → logprob: -4.065257549285889
    5. '==' → logprob: -4.440257549285889
    6. ' ' → logprob: -4.440257549285889
    7. '>' → logprob: -5.690257549285889
    8. ')' → logprob: -7.065257549285889
    9. '<|end|>' → logprob: -7.190257549285889
    10. '  ' → logprob: -7.815257549285889

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.018151111900806427
    2. '0' → logprob: -4.01815128326416
    3. '  ' → logprob: -15.39315128326416
    4. '1' → logprob: -15.39315128326416
    5. ')' → logprob: -15.64315128326416
    6. ' ' → logprob: -15.83065128326416
    7. ' )' → logprob: -16.143150329589844
    8. ' -' → logprob: -17.018150329589844
    9. ' EOF' → logprob: -17.080650329589844
    10. '=' → logprob: -17.580650329589844

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022028323728591204
    2. ' ' → logprob: -6.127202987670898
    3. '-' → logprob: -11.252202987670898
    4. '1' → logprob: -13.502202987670898
    5. ' -' → logprob: -13.627202987670898
    6. '42' → logprob: -14.252202987670898
    7. '   ' → logprob: -14.377202987670898
    8. '  ' → logprob: -15.502202987670898
    9. '```' → logprob: -15.877202987670898
    10. '    ' → logprob: -16.0022029876709

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.755678961984813e-05
    2. ':
' → logprob: -9.875077247619629
    3. ' :' → logprob: -11.625077247619629
    4. '   ' → logprob: -12.125077247619629
    5. ':return' → logprob: -12.500077247619629
    6. '       ' → logprob: -13.000077247619629
    7. ':\' → logprob: -13.125077247619629
    8. '):' → logprob: -13.375077247619629
    9. '    ' → logprob: -14.375077247619629
    10. ':**' → logprob: -15.250077247619629

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006626377580687404
    2. ' break' → logprob: -8.125662803649902
    3. '   ' → logprob: -8.750662803649902
    4. '\n' → logprob: -9.500662803649902
    5. ':' → logprob: -10.250662803649902
    6. '    ' → logprob: -10.875662803649902
    7. '\' → logprob: -11.125662803649902
    8. '	break' → logprob: -11.125662803649902
    9. '      ' → logprob: -11.750662803649902
    10. '        ' → logprob: -12.125662803649902

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.006346326321363449
    2. '       ' → logprob: -5.631346225738525
    3. 'break' (adapté à ' break') → logprob: -6.506346225738525
    4. '\n' → logprob: -7.631346225738525
    5. '   ' → logprob: -7.756346225738525
    6. '    ' → logprob: -9.006346702575684
    7. '	break' → logprob: -9.131346702575684
    8. '_break' → logprob: -10.881346702575684
    9. '```' → logprob: -11.131346702575684
    10. ' \' → logprob: -11.381346702575684

Token 18: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.778116762638092
    2. '   ' → logprob: -1.2781167030334473
    3. ':' → logprob: -1.5281167030334473
    4. '    
' → logprob: -4.153116703033447
    5. '\' → logprob: -4.653116703033447
    6. '```' → logprob: -5.528116703033447
    7. '\r' → logprob: -5.528116703033447
    8. '
' → logprob: -6.403116703033447
    9. '<|end|>' → logprob: -6.403116703033447
    10. 'n' → logprob: -6.528116703033447

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7498542666435242
    2. '\n' → logprob: -1.624854326248169
    3. '<|end|>' → logprob: -1.624854326248169
    4. '    
' → logprob: -3.249854326248169
    5. '\' → logprob: -3.874854326248169
    6. '```' → logprob: -3.999854326248169
    7. '
' → logprob: -4.12485408782959
    8. '#' → logprob: -4.24985408782959
    9. ':' → logprob: -5.12485408782959
    10. ')' → logprob: -5.87485408782959

Token 20: ' ich' (ID: 4629)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3405855596065521
    2. ' ' → logprob: -2.590585470199585
    3. '<|end|>' → logprob: -2.590585470199585
    4. '\n' → logprob: -3.590585470199585
    5. ')' → logprob: -3.840585470199585
    6. 'n' → logprob: -4.215585708618164
    7. '    ' → logprob: -4.340585708618164
    8. '\' → logprob: -4.590585708618164
    9. 'print' → logprob: -4.715585708618164
    10. ':' → logprob: -5.090585708618164

Token 21: 'iro' (ID: 4509)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09627248346805573
    2. 'o' → logprob: -3.3462724685668945
    3. 'a' → logprob: -4.0962724685668945
    4. 'im' → logprob: -4.4712724685668945
    5. '```' → logprob: -5.2212724685668945
    6. '#' → logprob: -5.8462724685668945
    7. '=' → logprob: -5.8462724685668945
    8. 'igo' → logprob: -5.8462724685668945
    9. 'in' → logprob: -5.9712724685668945
    10. 'e' → logprob: -7.0962724685668945

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3332364857196808
    2. '_' → logprob: -1.7082364559173584
    3. '=' → logprob: -3.9582364559173584
    4. '_score' → logprob: -4.2082366943359375
    5. '_count' → logprob: -4.4582366943359375
    6. '_sum' → logprob: -4.7082366943359375
    7. 's' → logprob: -4.8332366943359375
    8. ',' → logprob: -4.9582366943359375
    9. ' ' → logprob: -5.3332366943359375
    10. '_points' → logprob: -5.3332366943359375

Token 23: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39634352922439575
    2. ' ' → logprob: -1.396343469619751
    3. ' []' → logprob: -3.396343469619751
    4. ' [' → logprob: -4.14634370803833
    5. '[]' → logprob: -4.39634370803833
    6. ' n' → logprob: -5.14634370803833
    7. '[' → logprob: -6.39634370803833
    8. 'n' → logprob: -6.52134370803833
    9. '"' → logprob: -6.52134370803833
    10. '1' → logprob: -6.77134370803833

Token 24: 'tuple' (ID: 52834)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004877808038145304
    2. 'int' → logprob: -5.629878044128418
    3. 'i' → logprob: -7.629878044128418
    4. 'n' → logprob: -8.129878044128418
    5. ']' → logprob: -8.754878044128418
    6. ' ' → logprob: -9.504878044128418
    7. '   ' → logprob: -9.629878044128418
    8. ' int' → logprob: -10.129878044128418
    9. ' ]' → logprob: -10.504878044128418
    10. '[int' → logprob: -10.629878044128418

Token 25: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.09415651112794876
    2. '(input' → logprob: -2.719156503677368
    3. '(' → logprob: -3.969156503677368
    4. '(int' → logprob: -5.344156742095947
    5. 'map' → logprob: -8.969156265258789
    6. 'input' → logprob: -10.469156265258789
    7. '(i' → logprob: -10.469156265258789
    8. '(
' → logprob: -11.094156265258789
    9. ' map' → logprob: -11.344156265258789
    10. ' (' → logprob: -11.594156265258789

Token 26: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00019853383128065616
    2. '(' → logprob: -8.750198364257812
    3. '(str' → logprob: -10.625198364257812
    4. 'int' → logprob: -11.625198364257812
    5. '<int' → logprob: -13.125198364257812
    6. ',int' → logprob: -13.250198364257812
    7. '(input' → logprob: -13.500198364257812
    8. '[int' → logprob: -14.875198364257812
    9. '=int' → logprob: -15.125198364257812
    10. ')' → logprob: -15.500198364257812

Token 27: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.013391503132879734
    2. '(' → logprob: -4.513391494750977
    3. ',input' → logprob: -6.388391494750977
    4. 'input' → logprob: -7.638391494750977
    5. ')' → logprob: -9.763391494750977
    6. ',' → logprob: -10.138391494750977
    7. ' input' → logprob: -10.138391494750977
    8. ' (' → logprob: -10.638391494750977
    9. '=input' → logprob: -11.638391494750977
    10. '(
' → logprob: -13.263391494750977

Token 28: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6327402591705322
    2. 'input' → logprob: -0.7577402591705322
    3. '(input' → logprob: -9.507740020751953
    4. ')' → logprob: -10.132740020751953
    5. ',input' → logprob: -12.007740020751953
    6. ' )' → logprob: -12.257740020751953
    7. '))' → logprob: -12.757740020751953
    8. 'list' → logprob: -12.882740020751953
    9. '=input' → logprob: -13.257740020751953
    10. '[input' → logprob: -13.257740020751953

Token 29: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.7385154428193346e-05
    2. '()' → logprob: -10.25003719329834
    3. ' ().' → logprob: -14.00003719329834
    4. '()))' → logprob: -14.50003719329834
    5. '())' → logprob: -14.75003719329834
    6. '()
' → logprob: -15.75003719329834
    7. '(' → logprob: -16.250038146972656
    8. '())))' → logprob: -18.375038146972656
    9. '()));' → logprob: -18.625038146972656
    10. ')' → logprob: -18.750038146972656

Token 30: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004844154173042625
    2. 'strip' → logprob: -7.750484466552734
    3. 'rstrip' → logprob: -9.875484466552734
    4. ' split' → logprob: -13.250484466552734
    5. '(split' → logprob: -15.000484466552734
    6. 'spl' → logprob: -15.750484466552734
    7. 'read' → logprob: -17.875484466552734
    8. 's' → logprob: -18.500484466552734
    9. ')' → logprob: -18.500484466552734
    10. 'plit' → logprob: -18.875484466552734

Token 31: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.008840048685669899
    2. '())' → logprob: -4.883840084075928
    3. '()' → logprob: -6.883840084075928
    4. '()))
' → logprob: -9.38383960723877
    5. '())))' → logprob: -10.00883960723877
    6. '(' → logprob: -10.13383960723877
    7. '('' → logprob: -11.00883960723877
    8. '))' → logprob: -11.75883960723877
    9. '()));' → logprob: -12.63383960723877
    10. '())).' → logprob: -13.00883960723877

Token 32: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1032308340072632
    2. ')' → logprob: -1.6032308340072632
    3. ' for' → logprob: -1.6032308340072632
    4. '()]' → logprob: -1.9782308340072632
    5. ')]' → logprob: -2.9782309532165527
    6. ']' → logprob: -3.2282309532165527
    7. 'for' → logprob: -3.8532309532165527
    8. '   ' → logprob: -4.728230953216553
    9. '(' → logprob: -5.728230953216553
    10. '())' → logprob: -6.853230953216553

Token 33: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.002568164374679327
    2. 'range' → logprob: -6.502568244934082
    3. '_' → logprob: -7.377568244934082
    4. ' _' → logprob: -8.377568244934082
    5. ' ' → logprob: -9.127568244934082
    6. '_range' → logprob: -9.877568244934082
    7. ' i' → logprob: -10.752568244934082
    8. '	range' → logprob: -11.252568244934082
    9. ' xrange' → logprob: -11.877568244934082
    10. ' in' → logprob: -12.002568244934082

Token 34: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.26936498284339905
    2. 'in' → logprob: -1.8943649530410767
    3. ' in' → logprob: -2.519365072250366
    4. ' range' → logprob: -5.394364833831787
    5. ' ' → logprob: -7.769364833831787
    6. 'n' → logprob: -9.894365310668945
    7. '(range' → logprob: -9.894365310668945
    8. '  ' → logprob: -10.019365310668945
    9. 'ange' → logprob: -10.644365310668945
    10. '	range' → logprob: -10.644365310668945

Token 35: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003180921310558915
    2. ' range' → logprob: -5.753180980682373
    3. '[' → logprob: -14.003180503845215
    4. '(range' → logprob: -14.378180503845215
    5. ' ' → logprob: -14.503180503845215
    6. '	range' → logprob: -14.753180503845215
    7. 'rang' → logprob: -15.003180503845215
    8. '   ' → logprob: -15.878180503845215
    9. '  ' → logprob: -16.25318145751953
    10. 'r' → logprob: -16.37818145751953

Token 36: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002477200934663415
    2. '(' → logprob: -6.002477169036865
    3. ' (' → logprob: -13.502477645874023
    4. '(
' → logprob: -16.877477645874023
    5. '((' → logprob: -17.002477645874023
    6. '(s' → logprob: -18.002477645874023
    7. 'n' → logprob: -18.502477645874023
    8. '(nn' → logprob: -18.877477645874023
    9. ')' → logprob: -19.127477645874023
    10. ' ' → logprob: -19.252477645874023

Token 37: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0035025496035814285
    2. ')' → logprob: -5.753502368927002
    3. ']' → logprob: -8.12850284576416
    4. ' )' → logprob: -11.37850284576416
    5. ')]
' → logprob: -12.25350284576416
    6. ')])' → logprob: -12.50350284576416
    7. ')
' → logprob: -13.25350284576416
    8. '   ' → logprob: -13.50350284576416
    9. '))' → logprob: -13.50350284576416
    10. '])]' → logprob: -13.75350284576416

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4954933822154999
    2. '
' → logprob: -0.9954934120178223
    3. '    
' → logprob: -4.870493412017822
    4. '[' → logprob: -5.120493412017822
    5. '[i' → logprob: -6.370493412017822
    6. '\n' → logprob: -6.620493412017822
    7. '<|end|>' → logprob: -6.745493412017822
    8. '```' → logprob: -7.120493412017822
    9. '  
' → logprob: -8.370492935180664
    10. '[
' → logprob: -8.745492935180664

Token 39: ' m' (ID: 284)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6092471480369568
    2. 's' → logprob: -2.3592472076416016
    3. 'result' → logprob: -2.8592472076416016
    4. 'score' → logprob: -3.1092472076416016
    5. 'r' → logprob: -3.6092472076416016
    6. 'i' → logprob: -3.7342472076416016
    7. '    
' → logprob: -3.7342472076416016
    8. '    ' → logprob: -4.234247207641602
    9. 'dp' → logprob: -4.734247207641602
    10. 'd' → logprob: -4.734247207641602

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02074134163558483
    2. '=' → logprob: -3.8957412242889404
    3. '  ' → logprob: -10.02074146270752
    4. ' ' → logprob: -10.14574146270752
    5. '=int' → logprob: -10.52074146270752
    6. 'a' → logprob: -10.77074146270752
    7. 'e' → logprob: -11.52074146270752
    8. '   ' → logprob: -11.52074146270752
    9. '_' → logprob: -11.64574146270752
    10. '    ' → logprob: -11.89574146270752

Token 41: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1428585797548294
    2. 'int' → logprob: -2.0178585052490234
    3. '[int' → logprob: -9.267858505249023
    4. 'n' → logprob: -10.892858505249023
    5. ' n' → logprob: -11.142858505249023
    6. ' in' → logprob: -11.642858505249023
    7. ' ' → logprob: -11.642858505249023
    8. '=int' → logprob: -11.892858505249023
    9. '   ' → logprob: -12.142858505249023
    10. ' [' → logprob: -12.267858505249023

Token 42: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0010578181827440858
    2. '(' → logprob: -6.8760576248168945
    3. ' (' → logprob: -11.001057624816895
    4. 'input' → logprob: -12.126057624816895
    5. '=input' → logprob: -13.501057624816895
    6. '()' → logprob: -14.251057624816895
    7. ' input' → logprob: -14.876057624816895
    8. '(in' → logprob: -15.751057624816895
    9. '(
' → logprob: -16.12605857849121
    10. ',input' → logprob: -16.37605857849121

Token 43: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.28415101766586304
    2. '()' → logprob: -1.7841510772705078
    3. ')' → logprob: -2.534151077270508
    4. '()
' → logprob: -10.409151077270508
    5. ' ())' → logprob: -10.909151077270508
    6. ' )' → logprob: -11.659151077270508
    7. '())
' → logprob: -11.909151077270508
    8. '();)' → logprob: -12.284151077270508
    9. '(' → logprob: -12.909151077270508
    10. '`)' → logprob: -13.659151077270508

Token 44: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' jiro' (ID: 182701)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5510615110397339
    2. ' ' → logprob: -1.8010615110397339
    3. 'j' → logprob: -3.3010616302490234
    4. 'p' → logprob: -3.3010616302490234
    5. ' ich' → logprob: -3.3010616302490234
    6. 'r' → logprob: -3.7385616302490234
    7. '   ' → logprob: -3.9885616302490234
    8. '<|end|>' → logprob: -4.238561630249023
    9. '    ' → logprob: -4.301061630249023
    10. 'h' → logprob: -4.301061630249023

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04355126619338989
    2. '=' → logprob: -3.168551206588745
    3. ' ' → logprob: -8.043551445007324
    4. '_' → logprob: -8.793551445007324
    5. '[' → logprob: -10.293551445007324
    6. '   ' → logprob: -11.543551445007324
    7. 's' → logprob: -11.543551445007324
    8. '=[]' → logprob: -12.293551445007324
    9. ' =[' → logprob: -12.418551445007324
    10. '  ' → logprob: -12.856051445007324

Token 47: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.026355918496847153
    2. '[' → logprob: -3.6513559818267822
    3. ' ' → logprob: -11.151355743408203
    4. '[int' → logprob: -11.276355743408203
    5. ' [(' → logprob: -12.026355743408203
    6. '[input' → logprob: -13.026355743408203
    7. '[t' → logprob: -13.151355743408203
    8. '[i' → logprob: -13.526355743408203
    9. '[f' → logprob: -13.651355743408203
    10. ' []' → logprob: -13.838855743408203

Token 48: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0005707867676392198
    2. ' tuple' → logprob: -7.500570774078369
    3. '(tuple' → logprob: -11.000571250915527
    4. 'tu' → logprob: -14.375571250915527
    5. 'list' → logprob: -15.250571250915527
    6. 'int' → logprob: -16.00057029724121
    7. 't' → logprob: -17.50057029724121
    8. ' ' → logprob: -18.00057029724121
    9. '_tuple' → logprob: -18.00057029724121
    10. ']' → logprob: -18.25057029724121

Token 49: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -15.500000953674316
    3. ' (' → logprob: -15.625000953674316
    4. ',map' → logprob: -16.125
    5. '(int' → logprob: -17.625
    6. 'map' → logprob: -18.375
    7. '	map' → logprob: -18.625
    8. ' map' → logprob: -18.875
    9. '.map' → logprob: -19.25
    10. '(m' → logprob: -19.75

Token 50: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -6.217951886355877e-05
    2. '<int' → logprob: -10.500061988830566
    3. '(' → logprob: -11.000061988830566
    4. 'int' → logprob: -12.125061988830566
    5. ' int' → logprob: -12.500061988830566
    6. '=int' → logprob: -12.625061988830566
    7. '[int' → logprob: -13.500061988830566
    8. ',int' → logprob: -13.500061988830566
    9. ']int' → logprob: -13.625061988830566
    10. ' (' → logprob: -13.750061988830566

Token 51: ',' (ID: 11)
  Prédit: ',int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.2130574733018875
    2. ',' → logprob: -2.088057518005371
    3. '(int' → logprob: -2.713057518005371
    4. 'int' → logprob: -6.713057518005371
    5. '<int' → logprob: -8.838057518005371
    6. '[int' → logprob: -8.838057518005371
    7. '=int' → logprob: -9.463057518005371
    8. ' ,' → logprob: -10.713057518005371
    9. ':int' → logprob: -11.463057518005371
    10. '	int' → logprob: -12.588057518005371

Token 52: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.016179943457245827
    2. ' int' → logprob: -4.141180038452148
    3. 'input' → logprob: -9.516180038452148
    4. '(int' → logprob: -10.016180038452148
    5. '<int' → logprob: -11.641180038452148
    6. '[int' → logprob: -11.641180038452148
    7. ' input' → logprob: -12.141180038452148
    8. '=int' → logprob: -13.641180038452148
    9. ',int' → logprob: -14.266180038452148
    10. ':int' → logprob: -14.391180038452148

Token 53: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.3856492842023727e-06
    2. '()' → logprob: -14.500000953674316
    3. ' ().' → logprob: -14.875000953674316
    4. '.split' → logprob: -15.250000953674316
    5. '.' → logprob: -15.875000953674316
    6. ' .' → logprob: -16.250001907348633
    7. '(' → logprob: -17.875001907348633
    8. '   ' → logprob: -19.000001907348633
    9. '()).' → logprob: -19.375001907348633
    10. ').' → logprob: -19.500001907348633

Token 54: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.2200749754119897e-06
    2. ' split' → logprob: -13.375001907348633
    3. '(split' → logprob: -14.875001907348633
    4. '.split' → logprob: -15.250001907348633
    5. '_split' → logprob: -17.250001907348633
    6. ')' → logprob: -18.375001907348633
    7. 'spl' → logprob: -18.500001907348633
    8. 'plit' → logprob: -18.875001907348633
    9. 'rstrip' → logprob: -19.375001907348633
    10. '   ' → logprob: -19.625001907348633

Token 55: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00023607931507285684
    2. '))' → logprob: -8.750236511230469
    3. '()' → logprob: -9.750236511230469
    4. '().' → logprob: -11.500236511230469
    5. '())' → logprob: -12.500236511230469
    6. '()))
' → logprob: -12.875236511230469
    7. '()[' → logprob: -14.250236511230469
    8. '()
' → logprob: -14.375236511230469
    9. '())).' → logprob: -14.375236511230469
    10. '(' → logprob: -15.000236511230469

Token 56: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8180649280548096
    2. '()' → logprob: -1.3180649280548096
    3. '())' → logprob: -1.3180649280548096
    4. 'for' → logprob: -3.8180649280548096
    5. ' for' → logprob: -7.0680646896362305
    6. '))' → logprob: -8.31806468963623
    7. '(' → logprob: -8.81806468963623
    8. '()))' → logprob: -9.31806468963623
    9. '()]' → logprob: -10.69306468963623
    10. ' ' → logprob: -11.31806468963623

Token 57: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0013267839094623923
    2. '_' → logprob: -6.626326560974121
    3. ' range' → logprob: -15.126326560974121
    4. ' ' → logprob: -15.376326560974121
    5. ' ' → logprob: -15.626326560974121
    6. ' in' → logprob: -15.876326560974121
    7. ' m' → logprob: -17.876327514648438
    8. '_range' → logprob: -18.876327514648438
    9. ' for' → logprob: -19.626327514648438
    10. ' i' → logprob: -20.376327514648438

Token 58: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20148789882659912
    2. 'range' → logprob: -1.7014878988265991
    3. ' in' → logprob: -9.82648754119873
    4. '_' → logprob: -11.45148754119873
    5. '_range' → logprob: -11.82648754119873
    6. ' _' → logprob: -13.95148754119873
    7. 'in' → logprob: -13.95148754119873
    8. '(range' → logprob: -14.70148754119873
    9. '	range' → logprob: -14.95148754119873
    10. ' xrange' → logprob: -16.451488494873047

Token 59: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759695768356323
    2. ' range' → logprob: -0.8259695768356323
    3. 'm' → logprob: -11.075969696044922
    4. '(range' → logprob: -11.200969696044922
    5. '_range' → logprob: -14.950969696044922
    6. ' m' → logprob: -15.325969696044922
    7. '	range' → logprob: -15.325969696044922
    8. '_' → logprob: -16.200969696044922
    9. ' ' → logprob: -16.700969696044922
    10. ' in' → logprob: -17.325969696044922

Token 60: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00022392053506337106
    2. '(' → logprob: -8.625224113464355
    3. ' (' → logprob: -10.125224113464355
    4. 'm' → logprob: -12.750224113464355
    5. ' m' → logprob: -13.875224113464355
    6. '(n' → logprob: -15.125224113464355
    7. '	m' → logprob: -17.50022315979004
    8. ')' → logprob: -17.75022315979004
    9. '(M' → logprob: -17.75022315979004
    10. ')m' → logprob: -17.75022315979004

Token 61: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00023679454170633107
    2. ']' → logprob: -9.000236511230469
    3. ')' → logprob: -9.250236511230469
    4. ' )' → logprob: -12.125236511230469
    5. ')])' → logprob: -12.875236511230469
    6. '])]' → logprob: -13.000236511230469
    7. '   ' → logprob: -13.125236511230469
    8. ')]
' → logprob: -13.500236511230469
    9. '')]' → logprob: -13.625236511230469
    10. '))' → logprob: -13.875236511230469

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022167645394802094
    2. ' for' → logprob: -5.772167682647705
    3. '    
' → logprob: -5.772167682647705
    4. '<|end|>' → logprob: -5.772167682647705
    5. 'result' → logprob: -6.022167682647705
    6. 'for' → logprob: -6.022167682647705
    7. 'score' → logprob: -6.397167682647705
    8. '
' → logprob: -6.647167682647705
    9. 's' → logprob: -7.397167682647705
    10. '    ' → logprob: -7.397167682647705

Token 63: ' dolls' (ID: 93862)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5832229256629944
    2. '   ' → logprob: -2.4582228660583496
    3. 's' → logprob: -2.8332228660583496
    4. 'for' → logprob: -3.2082228660583496
    5. 'i' → logprob: -3.5832228660583496
    6. 'results' → logprob: -3.5832228660583496
    7. 'answer' → logprob: -3.8332228660583496
    8. 'j' → logprob: -3.8332228660583496
    9. 'res' → logprob: -4.08322286605835
    10. 'score' → logprob: -4.33322286605835

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021671870723366737
    2. '=' → logprob: -3.896671772003174
    3. '=[]' → logprob: -7.521671772003174
    4. '_' → logprob: -8.896672248840332
    5. '.' → logprob: -9.771672248840332
    6. ',' → logprob: -10.396672248840332
    7. ' ' → logprob: -10.396672248840332
    8. '[:]' → logprob: -10.396672248840332
    9. '_positions' → logprob: -11.021672248840332
    10. '.sort' → logprob: -11.021672248840332

Token 65: ' ich' (ID: 4629)
  Prédit: ' ich'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ich' → logprob: -0.4915046691894531
    2. '[]' → logprob: -1.2415046691894531
    3. ' []' → logprob: -3.241504669189453
    4. 'ich' → logprob: -3.366504669189453
    5. '[' → logprob: -4.616504669189453
    6. '[(' → logprob: -5.616504669189453
    7. ' [' → logprob: -5.866504669189453
    8. ' set' → logprob: -6.241504669189453
    9. ' sorted' → logprob: -6.866504669189453
    10. 'sorted' → logprob: -6.991504669189453

Token 66: 'iro' (ID: 4509)
  Prédit: 'iro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iro' → logprob: -0.5762598514556885
    2. 'ro' → logprob: -0.8262598514556885
    3. '```' → logprob: -9.70125961303711
    4. 'ero' → logprob: -10.07625961303711
    5. 'oro' → logprob: -10.20125961303711
    6. '[' → logprob: -10.82625961303711
    7. '   ' → logprob: -10.95125961303711
    8. 'o' → logprob: -11.07625961303711
    9. 'roi' → logprob: -11.20125961303711
    10. 'uro' → logprob: -11.20125961303711

Token 67: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20168045163154602
    2. ' +' → logprob: -1.7016804218292236
    3. '[' → logprob: -9.076680183410645
    4. '<|end|>' → logprob: -9.951680183410645
    5. '[:]' → logprob: -10.076680183410645
    6. '[::-' → logprob: -10.326680183410645
    7. '+[' → logprob: -11.201680183410645
    8. '[:' → logprob: -12.451680183410645
    9. '<|end|>' → logprob: -13.701680183410645
    10. '_' → logprob: -13.951680183410645

Token 68: ' jiro' (ID: 182701)
  Prédit: ' jiro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jiro' → logprob: -0.034386008977890015
    2. 'ji' → logprob: -3.409385919570923
    3. '[' → logprob: -9.034385681152344
    4. ' ' → logprob: -9.159385681152344
    5. 'jir' → logprob: -9.409385681152344
    6. 'jero' → logprob: -9.409385681152344
    7. '```' → logprob: -9.909385681152344
    8. ' ji' → logprob: -9.909385681152344
    9. ' jire' → logprob: -10.659385681152344
    10. '['' → logprob: -10.659385681152344

Token 69: '

' (ID: 279)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.9347409009933472
    2. '<|end|>' → logprob: -1.3097409009933472
    3. '
' → logprob: -1.6847409009933472
    4. '   ' → logprob: -3.0597410202026367
    5. '.' → logprob: -3.5597410202026367
    6. '    
' → logprob: -4.059741020202637
    7. '<|end|>' → logprob: -4.184741020202637
    8. '\n' → logprob: -4.559741020202637
    9. '[' → logprob: -4.684741020202637
    10. ')' → logprob: -5.809741020202637

Token 70: '   ' (ID: 271)
  Prédit: ' dolls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dolls' → logprob: -0.9965843558311462
    2. 'd' → logprob: -1.371584415435791
    3. '   ' → logprob: -1.621584415435791
    4. '    
' → logprob: -2.871584415435791
    5. '
' → logprob: -3.246584415435791
    6. '<|end|>' → logprob: -3.371584415435791
    7. 'sorted' → logprob: -4.121584415435791
    8. '.sort' → logprob: -4.996584415435791
    9. 's' → logprob: -5.871584415435791
    10. '\n' → logprob: -5.871584415435791

Token 71: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.20046234130859375
    2. ' dolls' → logprob: -2.0754623413085938
    3. 'sorted' → logprob: -4.700462341308594
    4. 'counts' → logprob: -4.950462341308594
    5. 'count' → logprob: -5.200462341308594
    6. '   ' → logprob: -5.325462341308594
    7. 'dp' → logprob: -6.450462341308594
    8. 'for' → logprob: -6.450462341308594
    9. 'positions' → logprob: -6.450462341308594
    10. 'visited' → logprob: -6.575462341308594

Token 72: ' On' (ID: 2160)
  Prédit: ' dolls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dolls' → logprob: -0.03650354593992233
    2. 'd' → logprob: -3.536503553390503
    3. 'sorted' → logprob: -6.036503314971924
    4. ' sorted' → logprob: -6.536503314971924
    5. '#' → logprob: -7.536503314971924
    6. ' d' → logprob: -7.661503314971924
    7. ' for' → logprob: -7.786503314971924
    8. ' sum' → logprob: -8.536503791809082
    9. 'sum' → logprob: -8.786503791809082
    10. ' from' → logprob: -8.786503791809082

Token 73: ' veut' (ID: 41653)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.01587352529168129
    2. 'ly' → logprob: -4.515873432159424
    3. 'es' → logprob: -7.015873432159424
    4. 'el' → logprob: -7.140873432159424
    5. 'eline' → logprob: -7.390873432159424
    6. '_d' → logprob: -8.015873908996582
    7. 'd' → logprob: -8.265873908996582
    8. 'line' → logprob: -8.515873908996582
    9. 'sort' → logprob: -8.640873908996582
    10. ' dolls' → logprob: -8.640873908996582

Token 74: ' une' (ID: 2463)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.6397499442100525
    2. ' tr' → logprob: -0.8897499442100525
    3. '   ' → logprob: -4.014750003814697
    4. ' vérifier' → logprob: -4.514750003814697
    5. ' calcul' → logprob: -5.889750003814697
    6. 'sort' → logprob: -6.014750003814697
    7. 'calcul' → logprob: -6.139750003814697
    8. ' Trier' → logprob: -6.139750003814697
    9. 's' → logprob: -6.264750003814697
    10. 'tri' → logprob: -6.389750003814697

Token 75: ' chaîne' (ID: 89288)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' liste' → logprob: -1.3433730602264404
    2. 'liste' → logprob: -2.0933730602264404
    3. ' solution' → logprob: -2.4683730602264404
    4. '   ' → logprob: -2.8433730602264404
    5. 'sort' → logprob: -3.2183730602264404
    6. 'distance' → logprob: -3.5933730602264404
    7. ' distance' → logprob: -3.5933730602264404
    8. 's' → logprob: -3.7183730602264404
    9. ' ' → logprob: -3.9058730602264404
    10. ' sorted' → logprob: -4.0308732986450195

Token 76: ' maximale' (ID: 76380)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.21827919781208038
    2. 'de' → logprob: -1.718279242515564
    3. 'vide' → logprob: -5.2182793617248535
    4. '[]' → logprob: -6.7182793617248535
    5. ' vide' → logprob: -6.8432793617248535
    6. ' ' → logprob: -6.8432793617248535
    7. 's' → logprob: -6.8432793617248535
    8. '   ' → logprob: -6.9682793617248535
    9. '"' → logprob: -7.8432793617248535
    10. ' =' → logprob: -7.9682793617248535

Token 77: ' où' (ID: 15113)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.16656504571437836
    2. '<|end|>' → logprob: -2.54156494140625
    3. ' d' → logprob: -4.29156494140625
    4. '_' → logprob: -4.41656494140625
    5. ',' → logprob: -4.54156494140625
    6. 'de' → logprob: -4.91656494140625
    7. 's' → logprob: -5.04156494140625
    8. ' s' → logprob: -5.91656494140625
    9. ' of' → logprob: -6.04156494140625
    10. ' ' → logprob: -6.04156494140625

Token 78: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.5270865559577942
    2. 'les' → logprob: -2.1520864963531494
    3. ' les' → logprob: -2.2770864963531494
    4. ' for' → logprob: -3.1520864963531494
    5. 'd' → logprob: -4.1520867347717285
    6. 'for' → logprob: -4.1520867347717285
    7. 'each' → logprob: -4.2770867347717285
    8. ' each' → logprob: -4.5270867347717285
    9. ' pour' → logprob: -4.7770867347717285
    10. 'pour' → logprob: -4.7770867347717285

Token 79: ' poup' (ID: 193777)
  Prédit: ' doll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' doll' → logprob: -0.5744907855987549
    2. ' tuple' → logprob: -2.449490785598755
    3. '[' → logprob: -2.574490785598755
    4. 'd' → logprob: -2.574490785598755
    5. '[i' → logprob: -2.949490785598755
    6. ' i' → logprob: -3.449490785598755
    7. ' élément' → logprob: -4.074490547180176
    8. '(' → logprob: -4.199490547180176
    9. ' d' → logprob: -4.324490547180176
    10. 'tuple' → logprob: -4.699490547180176

Token 80: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.41608569025993347
    2. 'ée' → logprob: -2.666085720062256
    3. 'et' → logprob: -3.166085720062256
    4. 'ette' → logprob: -3.291085720062256
    5. 'olle' → logprob: -3.291085720062256
    6. 'es' → logprob: -3.416085720062256
    7. 'ou' → logprob: -3.666085720062256
    8. 'pe' → logprob: -4.166085720062256
    9. '```' → logprob: -4.541085720062256
    10. 'le' → logprob: -4.791085720062256

Token 81: ' peut' (ID: 9216)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2792609930038452
    2. '[' → logprob: -1.6542609930038452
    3. ' i' → logprob: -4.904261112213135
    4. ' suivante' → logprob: -5.029261112213135
    5. '[n' → logprob: -5.529261112213135
    6. '_i' → logprob: -5.529261112213135
    7. ' est' → logprob: -5.654261112213135
    8. ',' → logprob: -5.654261112213135
    9. ' n' → logprob: -5.904261112213135
    10. ''s' → logprob: -6.029261112213135

Token 82: ' conten' (ID: 23523)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.5744765400886536
    2. ' être' → logprob: -1.8244764804840088
    3. ' s' → logprob: -2.824476480484009
    4. ' rentrer' → logprob: -3.074476480484009
    5. ' em' → logprob: -3.324476480484009
    6. 's' → logprob: -3.574476480484009
    7. ' se' → logprob: -4.074476718902588
    8. ' conten' → logprob: -4.199476718902588
    9. 'conten' → logprob: -4.324476718902588
    10. 'se' → logprob: -4.949476718902588

Token 83: 'ir' (ID: 380)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6065286993980408
    2. 'r' → logprob: -1.1065287590026855
    3. 'ir' → logprob: -2.1065287590026855
    4. 'er' → logprob: -7.2315287590026855
    5. '```' → logprob: -7.8565287590026855
    6. 're' → logprob: -7.9815287590026855
    7. 'tre' → logprob: -8.231528282165527
    8. 'd' → logprob: -8.606528282165527
    9. 'e' → logprob: -10.231528282165527
    10. 'ur' → logprob: -10.356528282165527

Token 84: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9749181866645813
    2. ' une' → logprob: -1.0999181270599365
    3. ' l' → logprob: -2.2249181270599365
    4. 'une' → logprob: -2.5999181270599365
    5. 'l' → logprob: -2.8499181270599365
    6. 'la' → logprob: -4.099918365478516
    7. '   ' → logprob: -5.349918365478516
    8. ' the' → logprob: -5.599918365478516
    9. ' ' → logprob: -5.724918365478516
    10. 'd' → logprob: -5.724918365478516

Token 85: ' suivante' (ID: 107439)
  Prédit: ' suivante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -0.6826024651527405
    2. 'pr' → logprob: -1.0576024055480957
    3. ' précédente' → logprob: -2.6826024055480957
    4. 'su' → logprob: -4.057602405548096
    5. 's' → logprob: -4.182602405548096
    6. ' ' → logprob: -4.307602405548096
    7. 'preced' → logprob: -5.307602405548096
    8. 'aut' → logprob: -5.307602405548096
    9. 'previous' → logprob: -5.682602405548096
    10. 'next' → logprob: -5.807602405548096

Token 86: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.618140459060669
    2. ' dolls' → logprob: -1.618140459060669
    3. '   ' → logprob: -1.743140459060669
    4. '    ' → logprob: -1.993140459060669
    5. ' ' → logprob: -2.618140459060669
    6. '<|end|>' → logprob: -2.618140459060669
    7. '    
' → logprob: -2.868140459060669
    8. ' 
' → logprob: -3.118140459060669
    9. '     
' → logprob: -4.86814022064209
    10. 'def' → logprob: -5.49314022064209

Token 88: ' #' (ID: 1069)
  Prédit: ' dolls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dolls' → logprob: -0.3392346501350403
    2. '<|end|>' → logprob: -1.9642345905303955
    3. 'd' → logprob: -2.4642345905303955
    4. '   ' → logprob: -4.464234828948975
    5. '    
' → logprob: -4.839234828948975
    6. ' d' → logprob: -4.964234828948975
    7. '<|end|>' → logprob: -4.964234828948975
    8. '    ' → logprob: -4.964234828948975
    9. ' ' → logprob: -5.214234828948975
    10. ' 
' → logprob: -5.214234828948975

Token 89: ' h' (ID: 312)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.38510286808013916
    2. ' dolls' → logprob: -1.5101028680801392
    3. 'dp' → logprob: -3.7601027488708496
    4. '#' → logprob: -3.8851027488708496
    5. 'max' → logprob: -4.13510274887085
    6. ' #' → logprob: -5.26010274887085
    7. 'sorted' → logprob: -5.38510274887085
    8. 'possible' → logprob: -5.51010274887085
    9. ' max' → logprob: -6.13510274887085
    10. 'n' → logprob: -6.13510274887085

Token 90: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45064911246299744
    2. '_prev' → logprob: -2.4506490230560303
    3. ' =' → logprob: -2.7006490230560303
    4. '_i' → logprob: -3.3256490230560303
    5. '=' → logprob: -3.3256490230560303
    6. '1' → logprob: -3.5756490230560303
    7. 'i' → logprob: -4.200649261474609
    8. 'e' → logprob: -4.450649261474609
    9. '_max' → logprob: -4.450649261474609
    10. '   ' → logprob: -4.450649261474609

Token 91: ' r' (ID: 428)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.42949047684669495
    2. 'w' → logprob: -1.0544904470443726
    3. ' l' → logprob: -8.554490089416504
    4. 'l' → logprob: -8.679490089416504
    5. 'a' → logprob: -9.429490089416504
    6. ' ' → logprob: -9.804490089416504
    7. 'b' → logprob: -10.179490089416504
    8. ' b' → logprob: -10.554490089416504
    9. ' ' → logprob: -10.554490089416504
    10. '   ' → logprob: -10.679490089416504

Token 92: ' strict' (ID: 12035)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: 'ement' (ID: 962)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.621681571006775
    2. '
' → logprob: -1.871681571006775
    3. '   ' → logprob: -1.996681571006775
    4. '.' → logprob: -2.3716816902160645
    5. '    ' → logprob: -2.7466816902160645
    6. ')' → logprob: -2.9966816902160645
    7. ':' → logprob: -3.1216816902160645
    8. 'd' → logprob: -3.4966816902160645
    9. 'n' → logprob: -3.6216816902160645
    10. ' ' → logprob: -3.7466816902160645

Token 94: ' cro' (ID: 11270)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: 'issants' (ID: 133997)
  Prédit: 'issants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issants' → logprob: -0.7679547071456909
    2. 'issante' → logprob: -1.392954707145691
    3. 'iss' → logprob: -1.767954707145691
    4. 'issant' → logprob: -2.8929548263549805
    5. 'is' → logprob: -3.7679548263549805
    6. 'issent' → logprob: -4.5179548263549805
    7. 'i' → logprob: -5.2679548263549805
    8. 'issa' → logprob: -6.0179548263549805
    9. 'isse' → logprob: -6.0179548263549805
    10. 'issance' → logprob: -6.0804548263549805

Token 96: ' (' (ID: 350)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.19093908369541168
    2. '
' → logprob: -2.69093918800354
    3. '   ' → logprob: -3.06593918800354
    4. ' dolls' → logprob: -3.31593918800354
    5. 'n' → logprob: -4.565938949584961
    6. 'dp' → logprob: -5.190938949584961
    7. '    
' → logprob: -6.315938949584961
    8. '<|end|>' → logprob: -6.690938949584961
    9. 'ich' → logprob: -7.065938949584961
    10. 'sorted' → logprob: -7.315938949584961

Token 97: 'x' (ID: 87)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18355974555015564
    2. '   ' → logprob: -1.808559775352478
    3. ' )' → logprob: -6.433559894561768
    4. '<|end|>' → logprob: -7.433559894561768
    5. '
' → logprob: -7.683559894561768
    6. ')
' → logprob: -7.933559894561768
    7. ',' → logprob: -8.30855941772461
    8. '    ' → logprob: -9.05855941772461
    9. '  ' → logprob: -9.05855941772461
    10. ' ' → logprob: -9.43355941772461

Token 98: ' <' (ID: 464)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.275104284286499
    2. '=' → logprob: -2.025104284286499
    3. ' =' → logprob: -3.525104284286499
    4. '+' → logprob: -3.775104284286499
    5. ',' → logprob: -4.775104522705078
    6. ' )' → logprob: -5.275104522705078
    7. ' >' → logprob: -5.525104522705078
    8. '>' → logprob: -5.525104522705078
    9. ':' → logprob: -5.650104522705078
    10. 'for' → logprob: -5.650104522705078

Token 99: ' h' (ID: 312)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.31423068046569824
    2. ' y' → logprob: -1.3142306804656982
    3. ')' → logprob: -7.439230918884277
    4. ' next' → logprob: -8.939230918884277
    5. 'next' → logprob: -9.689230918884277
    6. 'x' → logprob: -10.314230918884277
    7. '<|end|>' → logprob: -10.314230918884277
    8. ' ' → logprob: -10.439230918884277
    9. ',' → logprob: -11.814230918884277
    10. '  ' → logprob: -11.814230918884277

Token 100: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2512347996234894
    2. ')' → logprob: -1.626234769821167
    3. 'and' → logprob: -3.876234769821167
    4. '>' → logprob: -6.876235008239746
    5. ' )' → logprob: -7.001235008239746
    6. '   ' → logprob: -7.251235008239746
    7. ',' → logprob: -7.501235008239746
    8. '):' → logprob: -7.876235008239746
    9. ' or' → logprob: -8.251235008239746
    10. ' ' → logprob: -9.376235008239746

Token 101: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15406261384487152
    2. ' x' → logprob: -2.154062509536743
    3. ' y' → logprob: -4.154062747955322
    4. 'y' → logprob: -4.529062747955322
    5. 'r' → logprob: -8.779062271118164
    6. ' r' → logprob: -9.654062271118164
    7. ' ' → logprob: -10.779062271118164
    8. '   ' → logprob: -11.529062271118164
    9. '    ' → logprob: -11.779062271118164
    10. ' ' → logprob: -12.529062271118164

Token 102: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1991771012544632
    2. '<' → logprob: -2.8241770267486572
    3. ' and' → logprob: -2.8241770267486572
    4. ')' → logprob: -2.9491770267486572
    5. ')<' → logprob: -5.824177265167236
    6. 'and' → logprob: -5.949177265167236
    7. ',' → logprob: -6.824177265167236
    8. ' )' → logprob: -7.699177265167236
    9. ' ' → logprob: -8.074176788330078
    10. 'x' → logprob: -8.074176788330078

Token 103: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.035803791135549545
    2. ' r' → logprob: -3.53580379486084
    3. 'y' → logprob: -5.53580379486084
    4. ' y' → logprob: -6.28580379486084
    5. 'x' → logprob: -9.16080379486084
    6. ')' → logprob: -10.28580379486084
    7. '   ' → logprob: -10.41080379486084
    8. ' ' → logprob: -10.78580379486084
    9. 'h' → logprob: -11.41080379486084
    10. '  ' → logprob: -11.66080379486084

Token 104: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15438629686832428
    2. '   ' → logprob: -2.029386281967163
    3. '):' → logprob: -4.654386520385742
    4. ':' → logprob: -6.904386520385742
    5. ')
' → logprob: -8.154386520385742
    6. ' ' → logprob: -8.779386520385742
    7. '
' → logprob: -9.029386520385742
    8. ' )' → logprob: -9.029386520385742
    9. '  ' → logprob: -9.029386520385742
    10. '       ' → logprob: -9.529386520385742

Token 105: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7956660389900208
    2. '   ' → logprob: -0.7956660389900208
    3. 'n' → logprob: -3.795665979385376
    4. '
' → logprob: -4.170666217803955
    5. '<|end|>' → logprob: -4.170666217803955
    6. 'chain' → logprob: -4.795666217803955
    7. 'sorted' → logprob: -5.045666217803955
    8. 'length' → logprob: -5.045666217803955
    9. 'dp' → logprob: -5.045666217803955
    10. 'max' → logprob: -6.295666217803955

Token 106: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07094689458608627
    2. ' dolls' → logprob: -3.0709469318389893
    3. '   ' → logprob: -4.69594669342041
    4. 'sorted' → logprob: -5.32094669342041
    5. '
' → logprob: -6.19594669342041
    6. 'n' → logprob: -6.57094669342041
    7. '    
' → logprob: -6.57094669342041
    8. ')' → logprob: -7.32094669342041
    9. '.sort' → logprob: -7.82094669342041
    10. '#' (adapté à ' #') → logprob: -8.19594669342041

Token 107: ' On' (ID: 2160)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04260401800274849
    2. ' dolls' → logprob: -3.2926039695739746
    3. '   ' → logprob: -5.917603969573975
    4. 'sorted' → logprob: -7.042603969573975
    5. 'n' → logprob: -7.417603969573975
    6. ' d' → logprob: -9.417604446411133
    7. '    
' → logprob: -9.542604446411133
    8. '
' → logprob: -9.917604446411133
    9. ')' → logprob: -11.042604446411133
    10. 'dots' → logprob: -11.167604446411133

Token 108: ' trie' (ID: 139428)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7369909882545471
    2. 'd' → logprob: -1.8619909286499023
    3. 'n' → logprob: -2.4869909286499023
    4. '=' → logprob: -2.8619909286499023
    5. ' #' → logprob: -4.236990928649902
    6. ' n' → logprob: -4.486990928649902
    7. 'sort' → logprob: -4.486990928649902
    8. 's' → logprob: -4.486990928649902
    9. 'def' → logprob: -4.486990928649902
    10. ' souhaite' → logprob: -4.486990928649902

Token 109: ' par' (ID: 686)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3148670792579651
    2. ' dolls' → logprob: -1.3148670196533203
    3. '   ' → logprob: -7.43986701965332
    4. ' d' → logprob: -8.18986701965332
    5. '(d' → logprob: -8.56486701965332
    6. ' key' → logprob: -9.18986701965332
    7. ')' → logprob: -9.56486701965332
    8. ' by' → logprob: -9.56486701965332
    9. ')d' → logprob: -10.18986701965332
    10. 's' → logprob: -10.43986701965332

Token 110: ' hauteur' (ID: 72987)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5822126865386963
    2. ' lambda' → logprob: -0.8322126865386963
    3. 'h' → logprob: -6.082212448120117
    4. '=lambda' → logprob: -6.332212448120117
    5. 'r' → logprob: -7.207212448120117
    6. 'height' → logprob: -7.582212448120117
    7. '(lambda' → logprob: -8.332212448120117
    8. ' h' → logprob: -8.457212448120117
    9. ' height' → logprob: -8.707212448120117
    10. ' r' → logprob: -9.457212448120117

Token 111: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12369540333747864
    2. 'd' → logprob: -2.6236953735351562
    3. 's' → logprob: -3.8736953735351562
    4. '   ' → logprob: -4.998695373535156
    5. ' dolls' → logprob: -5.248695373535156
    6. ',
' → logprob: -5.498695373535156
    7. ' =' → logprob: -6.248695373535156
    8. ',d' → logprob: -6.623695373535156
    9. '(d' → logprob: -6.998695373535156
    10. '(
' → logprob: -7.748695373535156

Token 112: ' rayon' (ID: 80967)
  Prédit: 'ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ray' → logprob: -0.6332810521125793
    2. ' then' → logprob: -2.0082809925079346
    3. ' ensuite' → logprob: -2.0082809925079346
    4. ' rayon' → logprob: -2.2582809925079346
    5. 'radius' → logprob: -3.7582809925079346
    6. ' radius' → logprob: -4.008281230926514
    7. 'then' → logprob: -4.133281230926514
    8. '   ' → logprob: -5.008281230926514
    9. 'r' → logprob: -5.133281230926514
    10. ' ray' → logprob: -5.383281230926514

Token 113: ' pour' (ID: 1930)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13170497119426727
    2. '   ' → logprob: -2.5067050457000732
    3. ',' → logprob: -4.006704807281494
    4. ' dolls' → logprob: -5.006704807281494
    5. ')' → logprob: -5.381704807281494
    6. 's' → logprob: -5.506704807281494
    7. '.sort' → logprob: -6.381704807281494
    8. 'sorted' → logprob: -6.631704807281494
    9. ',
' → logprob: -6.631704807281494
    10. '    
' → logprob: -6.881704807281494

Token 114: ' faciliter' (ID: 106284)
  Prédit: ' garantir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' garantir' → logprob: -0.4957951307296753
    2. ' assurer' → logprob: -1.9957951307296753
    3. ' faciliter' → logprob: -2.120795249938965
    4. ' continuer' → logprob: -3.245795249938965
    5. ' pouvoir' → logprob: -3.620795249938965
    6. ' éviter' → logprob: -4.120795249938965
    7. 's' → logprob: -4.745795249938965
    8. 'ens' → logprob: -5.995795249938965
    9. ' permettre' → logprob: -6.245795249938965
    10. ' trouver' → logprob: -6.370795249938965

Token 115: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07945533096790314
    2. ' dolls' → logprob: -2.5794553756713867
    3. ' Dolls' → logprob: -8.579455375671387
    4. '    
' → logprob: -9.579455375671387
    5. ' d' → logprob: -9.579455375671387
    6. '   ' → logprob: -9.954455375671387
    7. ')d' → logprob: -10.454455375671387
    8. 'sorted' → logprob: -10.454455375671387
    9. '\d' → logprob: -10.704455375671387
    10. 'n' → logprob: -11.079455375671387

Token 116: ' recherche' (ID: 24975)
  Prédit: ' recherche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recherche' → logprob: -0.33170998096466064
    2. 're' → logprob: -2.581709861755371
    3. 'programm' → logprob: -2.831709861755371
    4. ' programmation' → logprob: -2.831709861755371
    5. 'construction' → logprob: -3.456709861755371
    6. 'suite' → logprob: -4.206709861755371
    7. 'mise' → logprob: -4.831709861755371
    8. 's' → logprob: -5.456709861755371
    9. 'dp' → logprob: -5.956709861755371
    10. ' suite' → logprob: -6.331709861755371

Token 117: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.23350577056407928
    2. '   ' → logprob: -1.7335057258605957
    3. '    
' → logprob: -4.608505725860596
    4. ' dolls' → logprob: -4.983505725860596
    5. ',' → logprob: -5.608505725860596
    6. 'sorted' → logprob: -6.108505725860596
    7. ')' → logprob: -6.358505725860596
    8. ')
' → logprob: -6.608505725860596
    9. '.sort' → logprob: -6.983505725860596
    10. '
' → logprob: -6.983505725860596

Token 118: ' sé' (ID: 7462)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.3065471351146698
    2. ' la' → logprob: -1.9315471649169922
    3. 'l' → logprob: -3.056547164916992
    4. 'cha' → logprob: -3.181547164916992
    5. 'chaine' → logprob: -4.056547164916992
    6. 's' → logprob: -5.181547164916992
    7. 'chain' → logprob: -6.556547164916992
    8. ' chaînes' → logprob: -6.806547164916992
    9. ' l' → logprob: -6.931547164916992
    10. 'solutions' → logprob: -7.306547164916992

Token 119: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.07870061695575714
    2. 'quences' → logprob: -3.203700542449951
    3. 'rie' → logprob: -4.078700542449951
    4. 'paration' → logprob: -4.703700542449951
    5. 'lection' → logprob: -5.328700542449951
    6. 'ries' → logprob: -6.578700542449951
    7. 'q' → logprob: -7.328700542449951
    8. 'quential' → logprob: -7.703700542449951
    9. 'qu' → logprob: -7.828700542449951
    10. 'ance' → logprob: -8.07870101928711

Token 120: ' cro' (ID: 11270)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4756719470024109
    2. '   ' → logprob: -1.1006720066070557
    3. '    
' → logprob: -3.9756720066070557
    4. '
' → logprob: -4.475671768188477
    5. ' dolls' → logprob: -5.100671768188477
    6. 'n' → logprob: -6.225671768188477
    7. 'sorted' → logprob: -6.475671768188477
    8. '```' → logprob: -6.850671768188477
    9. ')' → logprob: -7.350671768188477
    10. ',' → logprob: -7.600671768188477

Token 121: 'issante' (ID: 80061)
  Prédit: 'issante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issante' → logprob: -0.0014157117111608386
    2. 'iss' → logprob: -6.751415729522705
    3. 'is' → logprob: -8.501415252685547
    4. 'ss' → logprob: -11.376415252685547
    5. 'issance' → logprob: -11.751415252685547
    6. 'issant' → logprob: -12.126415252685547
    7. '#' → logprob: -12.626415252685547
    8. 'issants' → logprob: -12.876415252685547
    9. '
' → logprob: -13.626415252685547
    10. '[' → logprob: -14.126415252685547

Token 122: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8686907291412354
    2. '   ' → logprob: -1.1186907291412354
    3. 'd' → logprob: -1.9936907291412354
    4. '\n' → logprob: -3.3686907291412354
    5. '    
' → logprob: -3.4936907291412354
    6. 'n' → logprob: -4.368690490722656
    7. '\' → logprob: -4.493690490722656
    8. 'sorted' → logprob: -5.368690490722656
    9. '.sort' → logprob: -5.743690490722656
    10. '<|end|>' → logprob: -5.743690490722656

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4705769121646881
    2. 'd' → logprob: -2.2205770015716553
    3. '\n' → logprob: -2.9705770015716553
    4. '    
' → logprob: -3.0955770015716553
    5. '
' → logprob: -3.2205770015716553
    6. 'n' → logprob: -3.4705770015716553
    7. 'sorted' → logprob: -3.7205770015716553
    8. '.sort' → logprob: -4.470576763153076
    9. ')' → logprob: -4.470576763153076
    10. 'sort' → logprob: -4.720576763153076

Token 124: ' dolls' (ID: 93862)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.050655920058488846
    2. '   ' → logprob: -3.3006558418273926
    3. '    
' → logprob: -4.800655841827393
    4. ' dolls' → logprob: -6.300655841827393
    5. '
' → logprob: -6.925655841827393
    6. 'n' → logprob: -8.05065631866455
    7. '```' → logprob: -8.67565631866455
    8. '\d' → logprob: -9.05065631866455
    9. 'sorted' → logprob: -9.42565631866455
    10. '\' → logprob: -9.67565631866455

Token 125: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0005246769287623465
    2. '=' → logprob: -7.875524520874023
    3. '.' → logprob: -8.875524520874023
    4. ' =' → logprob: -12.875524520874023
    5. '_sorted' → logprob: -14.250524520874023
    6. 'sorted' → logprob: -14.625524520874023
    7. '.sorted' → logprob: -14.750524520874023
    8. 'sort' → logprob: -14.875524520874023
    9. ' .' → logprob: -15.875524520874023
    10. '.=' → logprob: -16.125524520874023

Token 126: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.38693830370903015
    2. '()' → logprob: -1.1369383335113525
    3. '(' → logprob: -10.261938095092773
    4. '()
' → logprob: -11.261938095092773
    5. '(reverse' → logprob: -11.386938095092773
    6. '(lambda' → logprob: -12.136938095092773
    7. 'key' → logprob: -14.136938095092773
    8. '())' → logprob: -14.636938095092773
    9. '();' → logprob: -14.886938095092773
    10. ',key' → logprob: -15.386938095092773

Token 127: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -9.615255839889869e-05
    2. '=' → logprob: -9.250096321105957
    3. 'lambda' → logprob: -18.62509536743164
    4. ' =' → logprob: -19.12509536743164
    5. '=l' → logprob: -19.12509536743164
    6. '=len' → logprob: -19.62509536743164
    7. '=
' → logprob: -20.12509536743164
    8. '=item' → logprob: -20.50009536743164
    9. '(lambda' → logprob: -21.37509536743164
    10. '＝' → logprob: -21.62509536743164

Token 128: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06860455125570297
    2. ' x' → logprob: -2.8186044692993164
    3. 'lambda' → logprob: -5.568604469299316
    4. ' lambda' → logprob: -6.068604469299316
    5. 'd' → logprob: -7.693604469299316
    6. '=lambda' → logprob: -11.193604469299316
    7. ' d' → logprob: -11.943604469299316
    8. 'ambda' → logprob: -13.318604469299316
    9. ' doll' → logprob: -13.443604469299316
    10. '   ' → logprob: -13.568604469299316

Token 129: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1517960956552997e-05
    2. ':x' → logprob: -11.500011444091797
    3. ':(' → logprob: -13.875011444091797
    4. 'x' → logprob: -15.125011444091797
    5. ' :' → logprob: -16.000011444091797
    6. '(x' → logprob: -17.000011444091797
    7. ':
' → logprob: -17.875011444091797
    8. '(' → logprob: -18.375011444091797
    9. ' x' → logprob: -19.125011444091797
    10. '```' → logprob: -19.750011444091797

Token 130: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.01712535135447979
    2. '(' → logprob: -4.142125129699707
    3. '(lambda' → logprob: -7.767125129699707
    4. ' (' → logprob: -7.892125129699707
    5. 'x' → logprob: -8.142125129699707
    6. ' x' → logprob: -14.517125129699707
    7. 'lambda' → logprob: -14.517125129699707
    8. '(a' → logprob: -15.767125129699707
    9. '(
' → logprob: -16.017126083374023
    10. '(r' → logprob: -16.017126083374023

Token 131: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00030829108436591923
    2. ' x' → logprob: -8.1253080368042
    3. '(x' → logprob: -11.3753080368042
    4. '   ' → logprob: -14.7503080368042
    5. '	x' → logprob: -16.250308990478516
    6. ' (' → logprob: -16.500308990478516
    7. '_x' → logprob: -17.000308990478516
    8. ')x' → logprob: -17.125308990478516
    9. ' ' → logprob: -17.500308990478516
    10. '    ' → logprob: -17.625308990478516

Token 132: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001037815964082256
    2. 'x' → logprob: -9.625103950500488
    3. ')' → logprob: -11.000103950500488
    4. ':' → logprob: -11.250103950500488
    5. '))' → logprob: -12.000103950500488
    6. ' x' → logprob: -14.500103950500488
    7. '(' → logprob: -15.250103950500488
    8. '0' → logprob: -15.500103950500488
    9. ' ' → logprob: -15.500103950500488
    10. ':x' → logprob: -15.500103950500488

Token 133: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4498052223643754e-05
    2. ' ' → logprob: -11.875014305114746
    3. '1' → logprob: -12.125014305114746
    4. '   ' → logprob: -14.000014305114746
    5. '[' → logprob: -14.625014305114746
    6. '
' → logprob: -15.500014305114746
    7. '  ' → logprob: -16.000015258789062
    8. '    ' → logprob: -16.000015258789062
    9. ')' → logprob: -16.125015258789062
    10. '])' → logprob: -17.437515258789062

Token 134: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -5.157039049663581e-05
    2. ',x' → logprob: -10.000051498413086
    3. ' ,' → logprob: -12.125051498413086
    4. '[' → logprob: -14.875051498413086
    5. '))' → logprob: -16.125051498413086
    6. ',n' → logprob: -16.375051498413086
    7. ',
' → logprob: -16.625051498413086
    8. ',d' → logprob: -17.875051498413086
    9. 'x' → logprob: -18.250051498413086
    10. ' ' → logprob: -18.625051498413086

Token 135: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3868761360645294
    2. ' x' → logprob: -1.136876106262207
    3. ' ' → logprob: -13.136876106262207
    4. '	x' → logprob: -13.636876106262207
    5. '   ' → logprob: -14.261876106262207
    6. '    ' → logprob: -14.761876106262207
    7. '(x' → logprob: -15.011876106262207
    8. '  ' → logprob: -15.636876106262207
    9. ')x' → logprob: -16.261877059936523
    10. '1' → logprob: -16.511877059936523

Token 136: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.4849443838757e-06
    2. '))' → logprob: -13.375004768371582
    3. ',' → logprob: -13.625004768371582
    4. ')' → logprob: -14.875004768371582
    5. '0' → logprob: -14.875004768371582
    6. ' [' → logprob: -14.875004768371582
    7. 'x' → logprob: -15.625004768371582
    8. '1' → logprob: -16.250003814697266
    9. '.' → logprob: -16.375003814697266
    10. ')[' → logprob: -16.625003814697266

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5954712075181305e-05
    2. ' ' → logprob: -10.750036239624023
    3. '[' → logprob: -11.375036239624023
    4. '0' → logprob: -13.750036239624023
    5. ')' → logprob: -14.625036239624023
    6. '
' → logprob: -15.062536239624023
    7. '   ' → logprob: -15.437536239624023
    8. '-' → logprob: -16.000036239624023
    9. '])' → logprob: -16.187536239624023
    10. '```' → logprob: -16.250036239624023

Token 138: ']))

' (ID: 92947)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -2.129266067640856e-05
    2. '))
' → logprob: -11.375020980834961
    3. ' ))' → logprob: -11.875020980834961
    4. ')))' → logprob: -13.625020980834961
    5. ')' → logprob: -14.000020980834961
    6. '),' → logprob: -14.750020980834961
    7. '))

' → logprob: -15.375020980834961
    8. '));' → logprob: -16.25002098083496
    9. '()))' → logprob: -17.12502098083496
    10. ' ' → logprob: -18.12502098083496

Token 139: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02843395806849003
    2. '   ' → logprob: -3.6534340381622314
    3. '\n' → logprob: -6.903433799743652
    4. '    
' → logprob: -7.278433799743652
    5. '<|end|>' → logprob: -8.903433799743652
    6. '  
' → logprob: -9.403433799743652
    7. '
' → logprob: -9.778433799743652
    8. ')' → logprob: -10.403433799743652
    9. 'n' → logprob: -10.528433799743652
    10. ',' → logprob: -10.778433799743652

Token 140: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.00317783304490149
    2. '   ' → logprob: -6.878177642822266
    3. 'length' → logprob: -6.878177642822266
    4. 'from' → logprob: -7.628177642822266
    5. 'lis' → logprob: -8.128177642822266
    6. '#' → logprob: -9.003177642822266
    7. 'max' → logprob: -9.378177642822266
    8. 'long' → logprob: -10.003177642822266
    9. 'import' → logprob: -10.378177642822266
    10. ' dp' → logprob: -11.253177642822266

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002187852980569005
    2. '=' → logprob: -6.127187728881836
    3. '[' → logprob: -14.252187728881836
    4. ' =[' → logprob: -14.627187728881836
    5. '=[' → logprob: -14.877187728881836
    6. '=[]' → logprob: -15.127187728881836
    7. ' ' → logprob: -15.252187728881836
    8. '   ' → logprob: -15.502187728881836
    9. ')' → logprob: -16.002187728881836
    10. ',' → logprob: -16.002187728881836

Token 142: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.4272752852994017e-05
    2. ' [' → logprob: -10.87502384185791
    3. '[]' → logprob: -12.50002384185791
    4. '[len' → logprob: -13.87502384185791
    5. '[n' → logprob: -14.75002384185791
    6. '[d' → logprob: -16.250024795532227
    7. '[length' → logprob: -16.875024795532227
    8. '[m' → logprob: -18.375024795532227
    9. '   ' → logprob: -18.625024795532227
    10. '[num' → logprob: -18.750024795532227

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '0' → logprob: -17.125
    4. 'float' → logprob: -17.5
    5. '   ' → logprob: -18.125
    6. '[' → logprob: -21.25
    7. '-' → logprob: -21.25
    8. ']' → logprob: -21.375
    9. '  ' → logprob: -21.5
    10. '(' → logprob: -21.75

Token 144: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005106037482619286
    2. ']*' → logprob: -5.630105972290039
    3. ' for' → logprob: -6.630105972290039
    4. ' ]' → logprob: -9.255105972290039
    5. 'for' → logprob: -9.380105972290039
    6. ']*(' → logprob: -13.130105972290039
    7. '   ' → logprob: -13.255105972290039
    8. ' ' → logprob: -14.755105972290039
    9. ')' → logprob: -15.755105972290039
    10. '	for' → logprob: -16.13010597229004

Token 145: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4158138632774353
    2. 'for' → logprob: -1.41581392288208
    3. ' for' → logprob: -2.54081392288208
    4. '<|end|>' → logprob: -4.41581392288208
    5. ' *' → logprob: -6.16581392288208
    6. '*' → logprob: -6.29081392288208
    7. '   ' → logprob: -6.41581392288208
    8. '    
' → logprob: -8.290813446044922
    9. '	for' → logprob: -8.790813446044922
    10. '  
' → logprob: -9.040813446044922

Token 146: ' (' (ID: 350)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.17417514324188232
    2. '(n' → logprob: -2.424175262451172
    3. '(len' → logprob: -2.674175262451172
    4. 'n' → logprob: -6.924175262451172
    5. ' len' → logprob: -7.299175262451172
    6. ' (' → logprob: -7.549175262451172
    7. '   ' → logprob: -9.174175262451172
    8. ' ' → logprob: -11.299175262451172
    9. '(' → logprob: -11.424175262451172
    10. ' n' → logprob: -11.924175262451172

Token 147: 'n' (ID: 77)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.01819407381117344
    2. 'n' → logprob: -4.018194198608398
    3. ' len' → logprob: -10.768194198608398
    4. '(len' → logprob: -11.393194198608398
    5. '   ' → logprob: -11.643194198608398
    6. ' n' → logprob: -13.393194198608398
    7. '(n' → logprob: -14.518194198608398
    8. '	len' → logprob: -15.018194198608398
    9. '[len' → logprob: -15.643194198608398
    10. '=len' → logprob: -16.0181941986084

Token 148: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2695576548576355
    2. ' +' → logprob: -2.0195577144622803
    3. '+m' → logprob: -2.2695577144622803
    4. '+n' → logprob: -8.51955795288086
    5. '   ' → logprob: -12.14455795288086
    6. '+
' → logprob: -13.01955795288086
    7. 'm' → logprob: -14.26955795288086
    8. '+l' → logprob: -14.26955795288086
    9. '
' → logprob: -15.14455795288086
    10. '+d' → logprob: -15.26955795288086

Token 149: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0004891689168289304
    2. ' m' → logprob: -7.625489234924316
    3. '   ' → logprob: -14.375489234924316
    4. ' ' → logprob: -15.000489234924316
    5. 'len' → logprob: -16.25048828125
    6. '	m' → logprob: -18.00048828125
    7. '  ' → logprob: -18.00048828125
    8. '    ' → logprob: -18.12548828125
    9. '
' → logprob: -18.87548828125
    10. '+m' → logprob: -18.87548828125

Token 150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.259079363080673e-05
    2. ' )' → logprob: -11.625012397766113
    3. ')
' → logprob: -12.875012397766113
    4. ')]' → logprob: -14.875012397766113
    5. '))' → logprob: -15.125012397766113
    6. '   ' → logprob: -15.500012397766113
    7. ')

' → logprob: -16.75001335144043
    8. ')}' → logprob: -17.12501335144043
    9. '）' → logprob: -17.50001335144043
    10. ')`' → logprob: -17.75001335144043

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3985743224620819
    2. '
' → logprob: -1.3985743522644043
    3. 'for' → logprob: -2.8985743522644043
    4. ' for' → logprob: -3.6485743522644043
    5. '    
' → logprob: -7.398574352264404
    6. '	for' → logprob: -11.023573875427246
    7. ' 
' → logprob: -12.023573875427246
    8. '
' → logprob: -12.148573875427246
    9. '  
' → logprob: -12.898573875427246
    10. '   
' → logprob: -14.023573875427246

Token 152: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004083385691046715
    2. ' for' → logprob: -5.504083156585693
    3. '   ' → logprob: -12.254083633422852
    4. '
' → logprob: -15.379083633422852
    5. '	for' → logprob: -17.25408363342285
    6. 'n' → logprob: -18.37908363342285
    7. 'i' → logprob: -18.50408363342285
    8. '    
' → logprob: -18.62908363342285
    9. 'd' → logprob: -20.37908363342285
    10. ')' → logprob: -20.37908363342285

Token 153: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2519666254520416
    2. 'i' → logprob: -1.5019665956497192
    3. ' j' → logprob: -11.37696647644043
    4. ' ' → logprob: -11.37696647644043
    5. 'j' → logprob: -11.50196647644043
    6. '	i' → logprob: -13.00196647644043
    7. ' ' → logprob: -13.75196647644043
    8. 'k' → logprob: -15.37696647644043
    9. '   ' → logprob: -15.87696647644043
    10. '_i' → logprob: -16.25196647644043

Token 154: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02643243409693241
    2. 'in' → logprob: -3.651432514190674
    3. ' ' → logprob: -9.151432037353516
    4. 'n' → logprob: -11.651432037353516
    5. '  ' → logprob: -11.651432037353516
    6. ',' → logprob: -13.026432037353516
    7. '	in' → logprob: -13.151432037353516
    8. '   ' → logprob: -13.776432037353516
    9. 'range' → logprob: -14.026432037353516
    10. ' i' → logprob: -15.151432037353516

Token 155: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141421258449554
    2. ' range' → logprob: -1.7014142274856567
    3. ' ' → logprob: -14.451414108276367
    4. '   ' → logprob: -16.201414108276367
    5. '  ' → logprob: -16.576414108276367
    6. '(range' → logprob: -16.701414108276367
    7. '	range' → logprob: -16.951414108276367
    8. '    ' → logprob: -19.326414108276367
    9. ' ' → logprob: -19.326414108276367
    10. '0' → logprob: -19.576414108276367

Token 156: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3108498752117157
    2. '1' → logprob: -2.060849905014038
    3. ' (' → logprob: -2.685849905014038
    4. '(n' → logprob: -2.810849905014038
    5. '(len' → logprob: -5.060849666595459
    6. ' ' → logprob: -5.310849666595459
    7. ' len' → logprob: -8.935850143432617
    8. ' n' → logprob: -10.310850143432617
    9. 'len' → logprob: -10.310850143432617
    10. '   ' → logprob: -10.685850143432617

Token 157: ' +' (ID: 659)
  Prédit: '+m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+m' → logprob: -0.645684003829956
    2. ' +' → logprob: -0.895684003829956
    3. '+' → logprob: -3.520684003829956
    4. ')' → logprob: -3.770684003829956
    5. '   ' → logprob: -5.395684242248535
    6. '):' → logprob: -5.520684242248535
    7. '+n' → logprob: -5.895684242248535
    8. '):
' → logprob: -6.145684242248535
    9. '  ' → logprob: -7.895684242248535
    10. ' ' → logprob: -8.520684242248535

Token 158: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.004785395693033934
    2. ' m' → logprob: -5.379785537719727
    3. '   ' → logprob: -9.379785537719727
    4. '1' → logprob: -9.754785537719727
    5. ' ' → logprob: -11.004785537719727
    6. 'n' → logprob: -13.754785537719727
    7. '    ' → logprob: -14.004785537719727
    8. '  ' → logprob: -14.129785537719727
    9. '       ' → logprob: -14.254785537719727
    10. '	m' → logprob: -14.504785537719727

Token 159: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38696688413619995
    2. '):
' → logprob: -1.1369669437408447
    3. ' ):' → logprob: -10.011966705322266
    4. '):
' → logprob: -10.386966705322266
    5. ' ):
' → logprob: -11.511966705322266
    6. ':' → logprob: -12.261966705322266
    7. '   ' → logprob: -12.761966705322266
    8. ')' → logprob: -13.386966705322266
    9. '):

' → logprob: -14.761966705322266
    10. '():
' → logprob: -16.136966705322266

Token 160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009040428325533867
    2. ' for' → logprob: -4.759040355682373
    3. 'for' → logprob: -7.884040355682373
    4. '   ' → logprob: -10.009040832519531
    5. '    ' → logprob: -13.759040832519531
    6. '	   ' → logprob: -13.884040832519531
    7. '	for' → logprob: -13.884040832519531
    8. '     ' → logprob: -15.384040832519531
    9. ' ' → logprob: -15.759040832519531
    10. ',' → logprob: -15.884040832519531

Token 161: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.403938889503479
    2. ' for' → logprob: -1.153938889503479
    3. '   ' → logprob: -4.1539387702941895
    4. '       ' → logprob: -6.7789387702941895
    5. ' ' → logprob: -9.528939247131348
    6. '	for' → logprob: -11.778939247131348
    7. '  ' → logprob: -13.403939247131348
    8. '    ' → logprob: -14.528939247131348
    9. ' j' → logprob: -15.528939247131348
    10. ' ' → logprob: -15.903939247131348

Token 162: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6931686401367188
    2. ' j' → logprob: -0.6931686401367188
    3. '0' → logprob: -11.443168640136719
    4. '   ' → logprob: -12.318168640136719
    5. '    ' → logprob: -12.943168640136719
    6. ' ' → logprob: -13.193168640136719
    7. ' range' → logprob: -14.068168640136719
    8. '	j' → logprob: -14.443168640136719
    9. 'range' → logprob: -14.943168640136719
    10. '  ' → logprob: -16.31816864013672

Token 163: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007617506198585033
    2. 'in' → logprob: -4.882617473602295
    3. ' ' → logprob: -12.757617950439453
    4. 'range' → logprob: -12.757617950439453
    5. '   ' → logprob: -13.257617950439453
    6. ' i' → logprob: -13.757617950439453
    7. '0' → logprob: -14.132617950439453
    8. '    ' → logprob: -15.007617950439453
    9. '	in' → logprob: -15.007617950439453
    10. '  ' → logprob: -15.382617950439453

Token 164: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.41976186633110046
    2. 'range' → logprob: -1.1697618961334229
    3. 'i' → logprob: -3.669761896133423
    4. ' i' → logprob: -5.044761657714844
    5. '0' → logprob: -7.794761657714844
    6. ' ' → logprob: -11.794761657714844
    7. '   ' → logprob: -12.169761657714844
    8. ' in' → logprob: -13.669761657714844
    9. '	range' → logprob: -13.919761657714844
    10. '[i' → logprob: -14.044761657714844

Token 165: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04744503274559975
    2. ' i' → logprob: -3.547445058822632
    3. '(i' → logprob: -4.047444820404053
    4. '0' → logprob: -9.922445297241211
    5. '   ' → logprob: -11.672445297241211
    6. '	i' → logprob: -12.172445297241211
    7. '(' → logprob: -12.297445297241211
    8. ' (' → logprob: -13.297445297241211
    9. ')i' → logprob: -13.797445297241211
    10. '{i' → logprob: -14.297445297241211

Token 166: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018716728314757347
    2. '):
' → logprob: -4.018716812133789
    3. ' ):' → logprob: -7.518716812133789
    4. ' ):
' → logprob: -11.768716812133789
    5. ')' → logprob: -12.268716812133789
    6. '):

' → logprob: -12.518716812133789
    7. '<|end|>' → logprob: -13.393716812133789
    8. '       ' → logprob: -13.768716812133789
    9. '):
' → logprob: -13.768716812133789
    10. '0' → logprob: -13.768716812133789

Token 167: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.096126576769166e-05
    2. ' if' → logprob: -10.500041007995605
    3. '       ' → logprob: -12.500041007995605
    4. '               ' → logprob: -13.250041007995605
    5. '            
' → logprob: -13.375041007995605
    6. '          ' → logprob: -13.625041007995605
    7. '<|end|>' → logprob: -14.125041007995605
    8. '         ' → logprob: -14.375041007995605
    9. ',' → logprob: -14.500041007995605
    10. '	       ' → logprob: -14.500041007995605

Token 168: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5325428247451782
    2. ' if' → logprob: -1.0325428247451782
    3. 'if' (adapté à ' if') → logprob: -3.0325427055358887
    4. '           ' → logprob: -4.782542705535889
    5. '            ' → logprob: -10.157543182373047
    6. '       ' → logprob: -10.657543182373047
    7. '                
' → logprob: -10.907543182373047
    8. ',' → logprob: -11.032543182373047
    9. '   ' → logprob: -11.157543182373047
    10. ' ' → logprob: -11.157543182373047

Token 169: ' dolls' (ID: 93862)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3137950897216797
    2. ' dolls' → logprob: -1.3137950897216797
    3. '(d' → logprob: -8.56379508972168
    4. '   ' → logprob: -8.81379508972168
    5. ' d' → logprob: -9.31379508972168
    6. ' doll' → logprob: -9.81379508972168
    7. '	d' → logprob: -11.06379508972168
    8. '(' → logprob: -12.43879508972168
    9. ' (' → logprob: -12.56379508972168
    10. ' ' → logprob: -12.68879508972168

Token 170: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0002613358374219388
    2. '[i' → logprob: -8.250261306762695
    3. '[' → logprob: -17.500261306762695
    4. 'j' → logprob: -17.625261306762695
    5. ')[' → logprob: -18.500261306762695
    6. '```' → logprob: -19.250261306762695
    7. '   ' → logprob: -19.750261306762695
    8. '][' → logprob: -20.250261306762695
    9. ' [' → logprob: -20.375261306762695
    10. '	j' → logprob: -21.125261306762695

Token 171: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00014168102643452585
    2. '][' → logprob: -8.875142097473145
    3. ')[' → logprob: -14.125142097473145
    4. '0' → logprob: -14.875142097473145
    5. ' [' → logprob: -15.250142097473145
    6. '1' → logprob: -16.375141143798828
    7. '```' → logprob: -16.500141143798828
    8. '   ' → logprob: -17.375141143798828
    9. '[i' → logprob: -17.375141143798828
    10. '(' → logprob: -17.625141143798828

Token 172: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.817902173381299e-05
    2. '1' → logprob: -9.25009822845459
    3. ' ' → logprob: -13.87509822845459
    4. '
' → logprob: -15.18759822845459
    5. '   ' → logprob: -15.18759822845459
    6. '

' → logprob: -16.250097274780273
    7. '[' → logprob: -16.500097274780273
    8. '۰' → logprob: -16.812597274780273
    9. '０' → logprob: -17.187597274780273
    10. '```' → logprob: -17.562597274780273

Token 173: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4287150800228119
    2. ' <' → logprob: -1.0537151098251343
    3. '[' → logprob: -12.178714752197266
    4. '<n' → logprob: -12.803714752197266
    5. ' ' → logprob: -13.428714752197266
    6. '<int' → logprob: -13.553714752197266
    7. ')' → logprob: -13.803714752197266
    8. 'd' → logprob: -14.928714752197266
    9. ')<' → logprob: -14.928714752197266
    10. ']' → logprob: -15.303714752197266

Token 174: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1797914355993271
    2. ' <' → logprob: -1.8047914505004883
    3. 'd' → logprob: -10.929791450500488
    4. '<n' → logprob: -11.054791450500488
    5. '[' → logprob: -12.554791450500488
    6. '<int' → logprob: -13.179791450500488
    7. ' ' → logprob: -13.304791450500488
    8. '<D' → logprob: -14.179791450500488
    9. '<
' → logprob: -14.804791450500488
    10. ')<' → logprob: -14.804791450500488

Token 175: ' dolls' (ID: 93862)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0010344763286411762
    2. ' dolls' → logprob: -6.876034259796143
    3. ' d' → logprob: -14.3760347366333
    4. ' Dolls' → logprob: -14.6260347366333
    5. '   ' → logprob: -15.3760347366333
    6. '	d' → logprob: -15.6260347366333
    7. ' doll' → logprob: -16.626033782958984
    8. '       ' → logprob: -16.751033782958984
    9. ' ' → logprob: -17.126033782958984
    10. ')d' → logprob: -17.251033782958984

Token 176: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[j' → logprob: -16.0
    3. 'i' → logprob: -16.25
    4. '```' → logprob: -17.25
    5. '[' → logprob: -19.125
    6. '   ' → logprob: -19.375
    7. ' [' → logprob: -19.625
    8. '{i' → logprob: -20.75
    9. '
' → logprob: -20.875
    10. '`' → logprob: -21.5

Token 177: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01653175614774227
    2. '[' → logprob: -4.141531944274902
    3. '0' → logprob: -7.766531944274902
    4. ' ][' → logprob: -10.766531944274902
    5. '   ' → logprob: -11.266531944274902
    6. ']' → logprob: -11.516531944274902
    7. '"][' → logprob: -11.766531944274902
    8. ''][' → logprob: -12.141531944274902
    9. '1' → logprob: -12.141531944274902
    10. '.' → logprob: -13.766531944274902

Token 178: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.250000953674316
    3. '1' → logprob: -15.750000953674316
    4. '[' → logprob: -16.000001907348633
    5. '
' → logprob: -16.250001907348633
    6. '   ' → logprob: -16.375001907348633
    7. '```' → logprob: -18.187501907348633
    8. '۰' → logprob: -18.500001907348633
    9. '０' → logprob: -19.062501907348633
    10. '  ' → logprob: -19.062501907348633

Token 179: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.062323253601789474
    2. 'and' → logprob: -2.8123233318328857
    3. '           ' → logprob: -8.187323570251465
    4. '               ' → logprob: -10.062323570251465
    5. ')' → logprob: -10.687323570251465
    6. ']' → logprob: -12.187323570251465
    7. '            ' → logprob: -12.562323570251465
    8. '          ' → logprob: -14.187323570251465
    9. '       ' → logprob: -14.437323570251465
    10. '        ' → logprob: -14.687323570251465

Token 180: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02979700267314911
    2. 'and' → logprob: -3.529797077178955
    3. '           ' → logprob: -10.029796600341797
    4. '            ' → logprob: -13.779796600341797
    5. '               ' → logprob: -14.529796600341797
    6. '        ' → logprob: -15.029796600341797
    7. ' ' → logprob: -15.404796600341797
    8. '          ' → logprob: -15.654796600341797
    9. '       ' → logprob: -16.154796600341797
    10. '	and' → logprob: -16.654796600341797

Token 181: ' dolls' (ID: 93862)
  Prédit: ' dolls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dolls' → logprob: -0.38689273595809937
    2. 'd' → logprob: -1.1368927955627441
    3. '   ' → logprob: -11.761892318725586
    4. ' doll' → logprob: -12.261892318725586
    5. ' ' → logprob: -13.136892318725586
    6. '       ' → logprob: -13.386892318725586
    7. '	d' → logprob: -13.511892318725586
    8. '(d' → logprob: -14.261892318725586
    9. ' Dolls' → logprob: -14.261892318725586
    10. ' d' → logprob: -14.511892318725586

Token 182: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.5332478142227046e-05
    2. '][' → logprob: -11.250015258789062
    3. '[' → logprob: -13.750015258789062
    4. 'j' → logprob: -14.375015258789062
    5. ' [' → logprob: -15.125015258789062
    6. ']' → logprob: -15.750015258789062
    7. ')[' → logprob: -16.500015258789062
    8. '```' → logprob: -16.750015258789062
    9. '[i' → logprob: -17.125015258789062
    10. '	j' → logprob: -17.500015258789062

Token 183: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004652980249375105
    2. '[' → logprob: -5.379652976989746
    3. ' ][' → logprob: -11.129652976989746
    4. ')[' → logprob: -11.379652976989746
    5. '   ' → logprob: -12.879652976989746
    6. ']' → logprob: -13.754652976989746
    7. ')][' → logprob: -14.379652976989746
    8. '"][' → logprob: -14.379652976989746
    9. ''][' → logprob: -14.754652976989746
    10. '1' → logprob: -14.754652976989746

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.857719275401905e-05
    2. 'i' → logprob: -10.500038146972656
    3. '[i' → logprob: -12.000038146972656
    4. '[' → logprob: -13.000038146972656
    5. '
' → logprob: -13.750038146972656
    6. '   ' → logprob: -14.750038146972656
    7. '```' → logprob: -15.375038146972656
    8. ' ' → logprob: -15.625038146972656
    9. '``' → logprob: -15.625038146972656
    10. '(i' → logprob: -16.312538146972656

Token 185: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07915172725915909
    2. '<' → logprob: -2.7041516304016113
    3. ']' → logprob: -4.829151630401611
    4. '[' → logprob: -6.954151630401611
    5. ']<' → logprob: -8.95415210723877
    6. ')' → logprob: -10.32915210723877
    7. ' ' → logprob: -10.82915210723877
    8. '<|end|>' → logprob: -11.07915210723877
    9. '}' → logprob: -12.45415210723877
    10. '[i' → logprob: -12.57915210723877

Token 186: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3868864178657532
    2. '<' → logprob: -1.1368863582611084
    3. '[' → logprob: -11.761886596679688
    4. ' ' → logprob: -13.261886596679688
    5. '<int' → logprob: -13.886886596679688
    6. '<|end|>' → logprob: -13.886886596679688
    7. '<size' → logprob: -14.636886596679688
    8. ')' → logprob: -14.636886596679688
    9. '<n' → logprob: -14.886886596679688
    10. ')<' → logprob: -15.261886596679688

Token 187: ' dolls' (ID: 93862)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.018158137798309326
    2. ' dolls' → logprob: -4.018157958984375
    3. ' d' → logprob: -12.768157958984375
    4. ' doll' → logprob: -13.268157958984375
    5. ' Dolls' → logprob: -14.393157958984375
    6. '   ' → logprob: -14.643157958984375
    7. '	d' → logprob: -14.643157958984375
    8. 'dots' → logprob: -14.768157958984375
    9. ' ' → logprob: -15.143157958984375
    10. '```' → logprob: -15.268157958984375

Token 188: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[j' → logprob: -18.25
    3. '[' → logprob: -18.625
    4. '```' → logprob: -19.5
    5. ' [' → logprob: -20.75
    6. 'i' → logprob: -21.0
    7. '
' → logprob: -21.375
    8. ')[' → logprob: -21.75
    9. '][' → logprob: -21.75
    10. '(i' → logprob: -22.0

Token 189: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006591808632947505
    2. '[' → logprob: -7.375658988952637
    3. ' ][' → logprob: -11.000658988952637
    4. ']' → logprob: -12.250658988952637
    5. ')[' → logprob: -12.375658988952637
    6. '   ' → logprob: -13.000658988952637
    7. '"][' → logprob: -13.375658988952637
    8. '1' → logprob: -14.375658988952637
    9. ''][' → logprob: -14.750658988952637
    10. '}[' → logprob: -14.875658988952637

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. '[' → logprob: -12.375007629394531
    3. 'i' → logprob: -12.750007629394531
    4. '[i' → logprob: -14.125007629394531
    5. '0' → logprob: -17.00000762939453
    6. '```' → logprob: -17.75000762939453
    7. '   ' → logprob: -18.25000762939453
    8. ' ' → logprob: -18.62500762939453
    9. '
' → logprob: -19.00000762939453
    10. ']' → logprob: -19.00000762939453

Token 191: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1245250329375267
    2. ':' → logprob: -2.4995250701904297
    3. '):
' → logprob: -3.8745250701904297
    4. '           ' → logprob: -4.62452507019043
    5. ']:
' → logprob: -6.24952507019043
    6. '               ' → logprob: -6.37452507019043
    7. ' :
' → logprob: -7.74952507019043
    8. '       ' → logprob: -9.12452507019043
    9. ' and' → logprob: -9.62452507019043
    10. '):' → logprob: -9.87452507019043

Token 192: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010327661409974098
    2. ' and' → logprob: -4.6353278160095215
    3. ' dp' → logprob: -8.385327339172363
    4. '           ' → logprob: -9.010327339172363
    5. 'dp' → logprob: -9.260327339172363
    6. ':
' → logprob: -9.885327339172363
    7. 'and' → logprob: -10.135327339172363
    8. ':' → logprob: -11.010327339172363
    9. '                
' → logprob: -12.260327339172363
    10. ' :
' → logprob: -13.135327339172363

Token 193: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.3871685564517975
    2. ' dp' → logprob: -1.137168526649475
    3. '                   ' → logprob: -8.387168884277344
    4. '               ' → logprob: -9.637168884277344
    5. '	dp' → logprob: -13.387168884277344
    6. ' if' → logprob: -13.887168884277344
    7. '                       ' → logprob: -14.512168884277344
    8. 'if' → logprob: -14.887168884277344
    9. '           ' → logprob: -15.012168884277344
    10. '   ' → logprob: -15.137168884277344

Token 194: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[j' → logprob: -15.75
    3. '[' → logprob: -19.875
    4. ' [' → logprob: -20.125
    5. '[I' → logprob: -21.5
    6. '[max' → logprob: -21.75
    7. '```' → logprob: -22.25
    8. '[k' → logprob: -22.75
    9. '[idx' → logprob: -22.75
    10. '[a' → logprob: -23.125

Token 195: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.047614872455596924
    2. ' =' → logprob: -3.297614812850952
    3. ']' → logprob: -4.672615051269531
    4. ']=' → logprob: -8.797615051269531
    5. '=max' → logprob: -10.672615051269531
    6. 'max' → logprob: -13.047615051269531
    7. ')' → logprob: -13.422615051269531
    8. '>' → logprob: -14.047615051269531
    9. '[' → logprob: -14.297615051269531
    10. ')=' → logprob: -15.797615051269531

Token 196: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029753033071756363
    2. ' =' → logprob: -3.5297529697418213
    3. '=max' → logprob: -12.904752731323242
    4. 'max' → logprob: -16.404752731323242
    5. '>' → logprob: -18.904752731323242
    6. '＝' → logprob: -19.654752731323242
    7. '=

' → logprob: -19.904752731323242
    8. '+=' → logprob: -20.529752731323242
    9. '   ' → logprob: -20.529752731323242
    10. ' ' → logprob: -20.654752731323242

Token 197: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12692810595035553
    2. ' max' → logprob: -2.1269280910491943
    3. '	max' → logprob: -16.876928329467773
    4. '[max' → logprob: -19.501928329467773
    5. '   ' → logprob: -20.126928329467773
    6. '(max' → logprob: -20.376928329467773
    7. '_max' → logprob: -21.001928329467773
    8. '                   ' → logprob: -21.126928329467773
    9. '               ' → logprob: -21.251928329467773
    10. ',max' → logprob: -21.626928329467773

Token 198: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.0445127372804563e-05
    2. '(' → logprob: -11.50001049041748
    3. 'dp' → logprob: -15.50001049041748
    4. '(
' → logprob: -18.375009536743164
    5. '	dp' → logprob: -19.000009536743164
    6. ' (' → logprob: -19.625009536743164
    7. ' dp' → logprob: -20.000009536743164
    8. '(dt' → logprob: -20.875009536743164
    9. '(df' → logprob: -21.000009536743164
    10. '(d' → logprob: -21.125009536743164

Token 199: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[j' → logprob: -16.375
    3. '[' → logprob: -16.625
    4. 'dp' → logprob: -17.5
    5. ')' → logprob: -18.125
    6. '   ' → logprob: -19.25
    7. ')[' → logprob: -19.375
    8. ' [' → logprob: -19.75
    9. '(i' → logprob: -20.125
    10. 'i' → logprob: -20.5

Token 200: '],' (ID: 2155)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10080079734325409
    2. '],' → logprob: -2.3508007526397705
    3. ']' → logprob: -8.350800514221191
    4. '[j' → logprob: -8.725800514221191
    5. ']+' → logprob: -9.600800514221191
    6. 'i' → logprob: -9.975800514221191
    7. '[' → logprob: -10.350800514221191
    8. ',' → logprob: -10.975800514221191
    9. 'dp' → logprob: -11.225800514221191
    10. '),' → logprob: -12.475800514221191

Token 201: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0067154900170862675
    2. ' dp' → logprob: -5.006715297698975
    3. '	dp' → logprob: -16.381715774536133
    4. '(dp' → logprob: -19.131715774536133
    5. '   ' → logprob: -20.006715774536133
    6. '_dp' → logprob: -20.506715774536133
    7. '               ' → logprob: -20.881715774536133
    8. ' ' → logprob: -21.381715774536133
    9. '           ' → logprob: -21.756715774536133
    10. '.dp' → logprob: -21.881715774536133

Token 202: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.704273118884885e-07
    2. 'j' → logprob: -14.500000953674316
    3. '[i' → logprob: -16.625
    4. '```' → logprob: -19.5
    5. ' [' → logprob: -19.75
    6. '[' → logprob: -19.75
    7. '	j' → logprob: -20.0
    8. '[
' → logprob: -20.75
    9. '   ' → logprob: -21.125
    10. '
' → logprob: -21.625

Token 203: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20573118329048157
    2. '[i' → logprob: -1.7057311534881592
    3. ']+' → logprob: -5.455731391906738
    4. 'i' → logprob: -10.705731391906738
    5. '[' → logprob: -12.205731391906738
    6. '[j' → logprob: -12.455731391906738
    7. ' ]' → logprob: -12.580731391906738
    8. '   ' → logprob: -14.080731391906738
    9. ')' → logprob: -14.830731391906738
    10. '[]' → logprob: -15.080731391906738

Token 204: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2981220781803131
    2. ' +' → logprob: -1.7981220483779907
    3. ']' → logprob: -2.5481221675872803
    4. ']+' → logprob: -4.548121929168701
    5. '[i' → logprob: -6.048121929168701
    6. ')' → logprob: -7.048121929168701
    7. '[' → logprob: -9.67312240600586
    8. ')+' → logprob: -10.04812240600586
    9. '   ' → logprob: -11.79812240600586
    10. ' ]' → logprob: -12.17312240600586

Token 205: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.500036239624023
    4. '```' → logprob: -20.375036239624023
    5. '  ' → logprob: -21.750036239624023
    6. '１' → logprob: -22.250036239624023
    7. '       ' → logprob: -22.750036239624023
    8. ')' → logprob: -22.875036239624023
    9. ' ' → logprob: -22.875036239624023
    10. '[' → logprob: -23.125036239624023

Token 206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -20.25
    4. '```' → logprob: -21.125
    5. '１' → logprob: -22.875
    6. '  ' → logprob: -23.375
    7. '
' → logprob: -23.875
    8. '۱' → logprob: -24.25
    9. '       ' → logprob: -24.375
    10. '[' → logprob: -24.375

Token 207: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.659005157416686e-05
    2. ')
' → logprob: -9.750066757202148
    3. ' )' → logprob: -12.250066757202148
    4. '   ' → logprob: -12.875066757202148
    5. '<|end|>' → logprob: -15.250066757202148
    6. '())' → logprob: -15.750066757202148
    7. ')return' → logprob: -15.875066757202148
    8. '       ' → logprob: -16.00006675720215
    9. '```' → logprob: -17.00006675720215
    10. '）' → logprob: -17.37506675720215

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39654940366744995
    2. 'print' → logprob: -1.1465494632720947
    3. '
' → logprob: -4.646549224853516
    4. '    
' → logprob: -10.896549224853516
    5. ' print' → logprob: -11.146549224853516
    6. '
' → logprob: -13.521549224853516
    7. '```' → logprob: -13.521549224853516
    8. '

' → logprob: -14.396549224853516
    9. '       ' → logprob: -15.146549224853516
    10. '  
' → logprob: -15.271549224853516

Token 209: ' k' (ID: 372)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00015622020873706788
    2. 'max' → logprob: -9.75015640258789
    3. ' print' → logprob: -10.00015640258789
    4. '   ' → logprob: -10.25015640258789
    5. 'answer' → logprob: -11.37515640258789
    6. 'result' → logprob: -12.50015640258789
    7. 'ans' → logprob: -13.50015640258789
    8. '```' → logprob: -15.87515640258789
    9. '
' → logprob: -16.37515640258789
    10. '    
' → logprob: -16.37515640258789

Token 210: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2803491950035095
    2. '=max' → logprob: -1.5303492546081543
    3. 'max' → logprob: -4.405349254608154
    4. '=' → logprob: -4.780349254608154
    5. '_max' → logprob: -5.905349254608154
    6. 'ax' → logprob: -6.405349254608154
    7. '=int' → logprob: -6.905349254608154
    8. '[max' → logprob: -7.655349254608154
    9. 'ey' → logprob: -7.780349254608154
    10. '=k' → logprob: -7.905349254608154

Token 211: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07889188081026077
    2. ' max' → logprob: -2.5788919925689697
    3. 'dp' → logprob: -13.32889175415039
    4. '0' → logprob: -15.45389175415039
    5. ' dp' → logprob: -16.45389175415039
    6. '(max' → logprob: -16.45389175415039
    7. ' ' → logprob: -17.32889175415039
    8. 'len' → logprob: -18.20389175415039
    9. '	max' → logprob: -18.45389175415039
    10. '   ' → logprob: -18.57889175415039

Token 212: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.0280383548888494e-06
    2. 'dp' → logprob: -14.000000953674316
    3. '(' → logprob: -16.250001907348633
    4. '	dp' → logprob: -20.375001907348633
    5. '(
' → logprob: -20.500001907348633
    6. ' dp' → logprob: -21.000001907348633
    7. ' (' → logprob: -21.125001907348633
    8. '(df' → logprob: -21.375001907348633
    9. '(d' → logprob: -22.375001907348633
    10. '(max' → logprob: -22.375001907348633

Token 213: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014942926645744592
    2. ')
' → logprob: -8.875149726867676
    3. ' )' → logprob: -11.625149726867676
    4. '   ' → logprob: -15.625149726867676
    5. '()' → logprob: -16.25014877319336
    6. '))' → logprob: -16.37514877319336
    7. '())' → logprob: -17.12514877319336
    8. ')+' → logprob: -17.12514877319336
    9. ')
' → logprob: -17.25014877319336
    10. ')

' → logprob: -17.25014877319336

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02228820137679577
    2. 'print' → logprob: -4.0222883224487305
    3. '
' → logprob: -5.5222883224487305
    4. '    
' → logprob: -9.14728832244873
    5. '```' → logprob: -11.14728832244873
    6. ' print' → logprob: -11.89728832244873
    7. '
' → logprob: -13.02228832244873
    8. '  
' → logprob: -13.89728832244873
    9. ' 
' → logprob: -15.27228832244873
    10. '        
' → logprob: -15.64728832244873

Token 215: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01418642420321703
    2. '   ' → logprob: -4.264186382293701
    3. ' print' → logprob: -10.76418685913086
    4. '
' → logprob: -14.26418685913086
    5. '    
' → logprob: -14.38918685913086
    6. '```' → logprob: -14.76418685913086
    7. '  ' → logprob: -16.76418685913086
    8. ' ' → logprob: -17.63918685913086
    9. '	print' → logprob: -17.76418685913086
    10. '``' → logprob: -18.01418685913086

Token 216: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.023293538717553e-05
    2. '   ' → logprob: -10.625030517578125
    3. ' print' → logprob: -12.125030517578125
    4. 'for' → logprob: -15.500030517578125
    5. '```' → logprob: -15.875030517578125
    6. 'if' → logprob: -16.875030517578125
    7. '    
' → logprob: -18.000030517578125
    8. 'pr' → logprob: -18.250030517578125
    9. '#print' → logprob: -18.250030517578125
    10. '  ' → logprob: -18.500030517578125

Token 217: ' veut' (ID: 41653)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005105679854750633
    2. ' print' → logprob: -5.630105495452881
    3. '   ' → logprob: -6.505105495452881
    4. ' =' → logprob: -13.380105972290039
    5. '=' → logprob: -13.755105972290039
    6. '.print' → logprob: -14.130105972290039
    7. '#' → logprob: -14.380105972290039
    8. 'printf' → logprob: -14.380105972290039
    9. '#print' → logprob: -14.505105972290039
    10. 'pr' → logprob: -14.880105972290039

Token 218: ' que' (ID: 661)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04324033856391907
    2. ' print' → logprob: -3.4182403087615967
    3. '   ' → logprob: -4.793240547180176
    4. 'aff' → logprob: -7.668240547180176
    5. 'im' → logprob: -9.043240547180176
    6. 'pr' → logprob: -9.293240547180176
    7. ' impr' → logprob: -9.293240547180176
    8. ' afficher' → logprob: -9.293240547180176
    9. '_print' → logprob: -9.793240547180176
    10. 'len' → logprob: -10.168240547180176

Token 219: ' k' (ID: 372)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0018104832852259278
    2. ' print' → logprob: -7.001810550689697
    3. 'le' → logprob: -7.626810550689697
    4. '   ' → logprob: -8.751810073852539
    5. 'k' → logprob: -9.626810073852539
    6. 'pr' → logprob: -10.001810073852539
    7. 'l' → logprob: -10.126810073852539
    8. ' le' → logprob: -10.626810073852539
    9. 'la' → logprob: -10.751810073852539
    10. 'im' → logprob: -11.251810073852539

Token 220: ' soit' (ID: 17293)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2885613441467285
    2. '+=' → logprob: -1.4135613441467285
    3. 'print' → logprob: -1.7885613441467285
    4. ' =' → logprob: -2.6635613441467285
    5. ' +=' → logprob: -3.0385613441467285
    6. 's' → logprob: -3.4135613441467285
    7. '+' → logprob: -3.5385613441467285
    8. '-' → logprob: -3.7885613441467285
    9. '-=' → logprob: -4.1635613441467285
    10. 'so' → logprob: -4.2885613441467285

Token 221: ' strict' (ID: 12035)
  Prédit: ' affich'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' affich' → logprob: -1.5061933994293213
    2. 'print' → logprob: -2.1311933994293213
    3. 'aff' → logprob: -2.2561933994293213
    4. 'strict' → logprob: -2.5061933994293213
    5. 'k' → logprob: -2.6311933994293213
    6. ' imprim' → logprob: -2.7561933994293213
    7. 'le' → logprob: -2.7561933994293213
    8. ' la' → logprob: -2.8811933994293213
    9. ' le' → logprob: -3.0061933994293213
    10. 'au' → logprob: -3.3811933994293213

Token 222: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.0913475900888443
    2. 'ly' → logprob: -2.4663476943969727
    3. 'ment' → logprob: -7.341347694396973
    4. 'e' → logprob: -7.841347694396973
    5. 'lement' → logprob: -7.966347694396973
    6. '<' → logprob: -8.341347694396973
    7. '>' → logprob: -8.591347694396973
    8. '   ' → logprob: -9.091347694396973
    9. 'ément' → logprob: -9.091347694396973
    10. 'k' → logprob: -10.216347694396973

Token 223: ' plus' (ID: 2932)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.8556753396987915
    2. ' inférieur' → logprob: -1.7306753396987915
    3. ' supérieur' → logprob: -2.105675220489502
    4. 'infer' → logprob: -2.480675220489502
    5. 'sup' → logprob: -2.730675220489502
    6. 'greater' → logprob: -3.105675220489502
    7. 'super' → logprob: -3.480675220489502
    8. 'k' → logprob: -4.355675220489502
    9. 'moins' → logprob: -4.355675220489502
    10. '<' → logprob: -4.480675220489502

Token 224: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.003544001607224345
    2. ' grand' → logprob: -5.878543853759766
    3. 'gr' → logprob: -7.378543853759766
    4. 'long' → logprob: -9.878543853759766
    5. 'pet' → logprob: -10.628543853759766
    6. 'large' → logprob: -11.753543853759766
    7. 'que' → logprob: -11.878543853759766
    8. '>' → logprob: -12.503543853759766
    9. 'k' → logprob: -12.628543853759766
    10. '   ' → logprob: -12.878543853759766

Token 225: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6385580897331238
    2. ' que' → logprob: -1.8885581493377686
    3. ' than' → logprob: -2.1385581493377686
    4. 'if' → logprob: -2.2635581493377686
    5. ' if' → logprob: -3.0135581493377686
    6. '1' → logprob: -4.5135579109191895
    7. 'than' → logprob: -4.8885579109191895
    8. ' k' → logprob: -5.0135579109191895
    9. '  ' → logprob: -5.1385579109191895
    10. 'k' → logprob: -5.7635579109191895

Token 226: ' max' (ID: 2999)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21413534879684448
    2. 'max' → logprob: -1.7141354084014893
    3. '1' → logprob: -5.21413516998291
    4. '0' → logprob: -5.71413516998291
    5. 'min' → logprob: -6.71413516998291
    6. 'm' → logprob: -6.96413516998291
    7. ' max' → logprob: -6.96413516998291
    8. ' n' → logprob: -7.83913516998291
    9. 'len' → logprob: -8.46413516998291
    10. ' ' → logprob: -9.21413516998291

Token 227: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6420976519584656
    2. '(max' → logprob: -1.0170977115631104
    3. '(len' → logprob: -2.8920977115631104
    4. '(m' → logprob: -3.7670977115631104
    5. '(' → logprob: -4.267097473144531
    6. '(k' → logprob: -4.392097473144531
    7. '(dp' → logprob: -5.392097473144531
    8. 'max' → logprob: -7.017097473144531
    9. '([' → logprob: -7.767097473144531
    10. 'len' → logprob: -7.767097473144531

Token 228: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00767536461353302
    2. ',m' → logprob: -5.5076751708984375
    3. ' ,' → logprob: -5.7576751708984375
    4. '+m' → logprob: -9.007675170898438
    5. ')' → logprob: -9.132675170898438
    6. ' +' → logprob: -9.257675170898438
    7. '+' → logprob: -10.507675170898438
    8. 'm' → logprob: -10.882675170898438
    9. ',n' → logprob: -11.007675170898438
    10. '   ' → logprob: -11.507675170898438

Token 229: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03414017707109451
    2. ' and' → logprob: -3.784140110015869
    3. ' )' → logprob: -5.659140110015869
    4. '   ' → logprob: -6.034140110015869
    5. ')
' → logprob: -6.034140110015869
    6. 'and' → logprob: -6.784140110015869
    7. ',' → logprob: -7.284140110015869
    8. ' if' → logprob: -8.284140586853027
    9. '):' → logprob: -8.659140586853027
    10. 'if' → logprob: -8.909140586853027

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020863002166152
    2. '
' → logprob: -3.8958630561828613
    3. '    
' → logprob: -8.645862579345703
    4. ' if' → logprob: -9.270862579345703
    5. 'if' → logprob: -10.145862579345703
    6. '  
' → logprob: -12.895862579345703
    7. '<|end|>' → logprob: -12.895862579345703
    8. '```' → logprob: -13.520862579345703
    9. '\n' → logprob: -13.645862579345703
    10. ',' → logprob: -14.020862579345703

Token 231: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17073087394237518
    2. 'if' → logprob: -1.9207308292388916
    3. ' if' → logprob: -4.795731067657471
    4. '
' → logprob: -6.545731067657471
    5. 'print' → logprob: -7.295731067657471
    6. '    
' → logprob: -9.795730590820312
    7. ' print' → logprob: -11.920730590820312
    8. '```' → logprob: -12.920730590820312
    9. '\n' → logprob: -13.545730590820312
    10. '	if' → logprob: -13.795730590820312

Token 232: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.24603140354156494
    2. '   ' → logprob: -1.746031403541565
    3. ' if' → logprob: -3.2460312843322754
    4. 'print' → logprob: -5.371031284332275
    5. ' print' → logprob: -9.871031761169434
    6. '
' → logprob: -12.121031761169434
    7. '```' → logprob: -13.746031761169434
    8. '    
' → logprob: -13.871031761169434
    9. '	if' → logprob: -16.496030807495117
    10. 'If' → logprob: -16.871030807495117

Token 233: ' ce' (ID: 2357)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.38687971234321594
    2. ' k' → logprob: -1.1368796825408936
    3. '   ' → logprob: -12.261879920959473
    4. ' not' → logprob: -13.511879920959473
    5. ' ' → logprob: -13.761879920959473
    6. '(k' → logprob: -14.511879920959473
    7. ' ' → logprob: -14.761879920959473
    8. '  ' → logprob: -15.136879920959473
    9. 'not' → logprob: -15.511879920959473
    10. '	k' → logprob: -16.261878967285156

Token 234: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2791298031806946
    2. ' k' → logprob: -1.7791297435760498
    3. 'max' → logprob: -4.029129981994629
    4. 'n' → logprob: -4.029129981994629
    5. ' n' → logprob: -4.029129981994629
    6. '>' → logprob: -4.279129981994629
    7. ' max' → logprob: -6.279129981994629
    8. '[k' → logprob: -6.279129981994629
    9. ' >' → logprob: -6.529129981994629
    10. 'est' → logprob: -7.904129981994629

Token 235: ''est' (ID: 6616)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.05441872403025627
    2. ''est' → logprob: -4.429418563842773
    3. ' >' → logprob: -4.554418563842773
    4. '   ' → logprob: -5.429418563842773
    5. 'ot' → logprob: -5.429418563842773
    6. '<' → logprob: -5.804418563842773
    7. ' k' → logprob: -5.929418563842773
    8. '<=' → logprob: -5.929418563842773
    9. 'e' → logprob: -6.054418563842773
    10. 'k' → logprob: -6.179418563842773

Token 236: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.31393617391586304
    2. 'pas' → logprob: -2.063936233520508
    3. 'k' → logprob: -2.188936233520508
    4. '   ' → logprob: -4.563936233520508
    5. ' not' → logprob: -4.563936233520508
    6. ' k' → logprob: -5.188936233520508
    7. 'not' → logprob: -5.688936233520508
    8. '       ' → logprob: -8.938936233520508
    9. 'possible' → logprob: -9.438936233520508
    10. '_pas' → logprob: -9.688936233520508

Token 237: ' possible' (ID: 4149)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.029188895598053932
    2. ' k' → logprob: -4.154189109802246
    3. 'le' → logprob: -4.779189109802246
    4. '   ' → logprob: -6.279189109802246
    5. 'True' → logprob: -7.029189109802246
    6. ' True' → logprob: -7.029189109802246
    7. '(k' → logprob: -8.029189109802246
    8. 'max' → logprob: -8.404189109802246
    9. 'pas' → logprob: -9.279189109802246
    10. 'possible' → logprob: -9.529189109802246

Token 238: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45440465211868286
    2. ':' → logprob: -1.329404592514038
    3. ' and' → logprob: -3.079404592514038
    4. ' or' → logprob: -3.579404592514038
    5. 'and' → logprob: -3.954404592514038
    6. ':
' → logprob: -5.329404830932617
    7. ',' → logprob: -6.454404830932617
    8. 'or' → logprob: -7.454404830932617
    9. 'if' → logprob: -8.454404830932617
    10. ' if' → logprob: -8.704404830932617

Token 239: ' k' (ID: 372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7512669563293457
    2. 'print' → logprob: -0.7512669563293457
    3. ' print' → logprob: -2.8762669563293457
    4. '       ' → logprob: -9.376266479492188
    5. '```' → logprob: -11.376266479492188
    6. '	print' → logprob: -11.876266479492188
    7. '    
' → logprob: -12.001266479492188
    8. 'if' → logprob: -12.876266479492188
    9. '  ' → logprob: -13.126266479492188
    10. '    ' → logprob: -13.751266479492188

Token 240: ' vaut' (ID: 83004)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.5071106553077698
    2. '=' → logprob: -1.632110595703125
    3. ' -=' → logprob: -1.757110595703125
    4. ' =' → logprob: -4.257110595703125
    5. '+=' → logprob: -5.007110595703125
    6. '<=' → logprob: -5.257110595703125
    7. ' +=' → logprob: -6.757110595703125
    8. '-' → logprob: -6.882110595703125
    9. ' <=' → logprob: -6.882110595703125
    10. '>' → logprob: -9.007110595703125

Token 241: ' au' (ID: 2791)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.19822779297828674
    2. '0' → logprob: -1.8232277631759644
    3. '-' → logprob: -4.948227882385254
    4. ' max' → logprob: -5.448227882385254
    5. '1' → logprob: -6.073227882385254
    6. 'min' → logprob: -6.698227882385254
    7. ' ' → logprob: -6.698227882385254
    8. '   ' → logprob: -6.948227882385254
    9. 'n' → logprob: -8.198227882385254
    10. '=' → logprob: -8.448227882385254

Token 242: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.038096800446510315
    2. 'plus' → logprob: -4.163096904754639
    3. 'm' → logprob: -5.038096904754639
    4. '-' → logprob: -5.163096904754639
    5. '   ' → logprob: -5.163096904754639
    6. 'max' → logprob: -7.163096904754639
    7. 'minimum' → logprob: -7.288096904754639
    8. 'min' → logprob: -7.663096904754639
    9. 'minus' → logprob: -7.913096904754639
    10. 'mo' → logprob: -8.41309642791748

Token 243: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.21972237527370453
    2. '1' → logprob: -1.7197223901748657
    3. 'min' → logprob: -4.594722270965576
    4. ' max' → logprob: -5.094722270965576
    5. ' ' → logprob: -7.094722270965576
    6. '   ' → logprob: -7.344722270965576
    7. '0' → logprob: -9.094722747802734
    8. 'k' → logprob: -9.469722747802734
    9. '2' → logprob: -9.594722747802734
    10. 'n' → logprob: -9.969722747802734

Token 244: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00012594614236149937
    2. '(' → logprob: -9.125125885009766
    3. '(max' → logprob: -11.625125885009766
    4. 'print' → logprob: -12.375125885009766
    5. '```' → logprob: -14.000125885009766
    6. 'max' → logprob: -14.375125885009766
    7. 'n' → logprob: -14.500125885009766
    8. '(m' → logprob: -14.875125885009766
    9. '(len' → logprob: -15.125125885009766
    10. '   ' → logprob: -15.250125885009766

Token 245: ',m' (ID: 26648)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6277303099632263
    2. '(m' → logprob: -1.002730369567871
    3. ',m' → logprob: -2.877730369567871
    4. ',' → logprob: -3.752730369567871
    5. ',n' → logprob: -4.127730369567871
    6. '(' → logprob: -6.127730369567871
    7. 'm' → logprob: -7.877730369567871
    8. '   ' → logprob: -8.252730369567871
    9. ')' → logprob: -8.502730369567871
    10. ' ,' → logprob: -8.752730369567871

Token 246: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05546867474913597
    2. ')+' → logprob: -3.5554685592651367
    3. '+' → logprob: -3.9304685592651367
    4. ' +' → logprob: -6.055468559265137
    5. ',' → logprob: -6.305468559265137
    6. ')
' → logprob: -7.430468559265137
    7. '   ' → logprob: -7.555468559265137
    8. ' )' → logprob: -8.680468559265137
    9. 'if' → logprob: -8.930468559265137
    10. ' if' → logprob: -9.555468559265137

Token 247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23155926167964935
    2. '
' → logprob: -1.8565592765808105
    3. 'print' → logprob: -3.1065592765808105
    4. 'if' → logprob: -5.4815592765808105
    5. ' print' → logprob: -7.4815592765808105
    6. '    
' → logprob: -7.6065592765808105
    7. ' if' → logprob: -7.8565592765808105
    8. '```' → logprob: -10.481558799743652
    9. '
' → logprob: -10.606558799743652
    10. ',' → logprob: -11.356558799743652

Token 248: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1852511465549469
    2. '   ' → logprob: -2.435251235961914
    3. 'if' (adapté à ' if') → logprob: -3.060251235961914
    4. ' print' → logprob: -3.810251235961914
    5. ' if' → logprob: -4.935251235961914
    6. '
' → logprob: -5.310251235961914
    7. 'k' → logprob: -8.935251235961914
    8. 'result' → logprob: -9.060251235961914
    9. ' k' → logprob: -10.310251235961914
    10. '```' → logprob: -10.310251235961914

Token 249: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.4740881323814392
    2. 'k' → logprob: -0.9740881323814392
    3. '   ' → logprob: -11.849087715148926
    4. ' ' → logprob: -13.474087715148926
    5. '(k' → logprob: -13.474087715148926
    6. '  ' → logprob: -14.599087715148926
    7. '    ' → logprob: -14.849087715148926
    8. '	k' → logprob: -15.974087715148926
    9. ' ' → logprob: -16.849088668823242
    10. '
' → logprob: -17.099088668823242

Token 250: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.3351536691188812
    2. ' <=' → logprob: -1.3351536989212036
    3. '>' → logprob: -4.085153579711914
    4. ' >' → logprob: -5.335153579711914
    5. '>=' → logprob: -12.460153579711914
    6. '<' → logprob: -12.460153579711914
    7. ' ' → logprob: -13.460153579711914
    8. ' <' → logprob: -13.460153579711914
    9. '==' → logprob: -14.085153579711914
    10. '```' → logprob: -14.335153579711914

Token 251: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12693126499652863
    2. ' max' → logprob: -2.1269311904907227
    3. '   ' → logprob: -13.001931190490723
    4. ' ' → logprob: -14.876931190490723
    5. 'm' → logprob: -15.876931190490723
    6. '(max' → logprob: -16.00193214416504
    7. '	max' → logprob: -16.25193214416504
    8. '=max' → logprob: -16.62693214416504
    9. '  ' → logprob: -17.12693214416504
    10. '0' → logprob: -17.75193214416504

Token 252: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.375001907348633
    3. ' (' → logprob: -16.125001907348633
    4. 'n' → logprob: -16.125001907348633
    5. '(m' → logprob: -17.250001907348633
    6. '((' → logprob: -19.500001907348633
    7. '(len' → logprob: -20.125001907348633
    8. '(
' → logprob: -20.500001907348633
    9. '(max' → logprob: -20.750001907348633
    10. '(k' → logprob: -21.250001907348633

Token 253: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5487403273582458
    2. ',m' → logprob: -1.9237403869628906
    3. ',' → logprob: -2.0487403869628906
    4. ',n' → logprob: -2.1737403869628906
    5. '(m' → logprob: -3.5487403869628906
    6. ' ,' → logprob: -6.298740386962891
    7. 'm' → logprob: -6.548740386962891
    8. '   ' → logprob: -7.298740386962891
    9. '(' → logprob: -7.298740386962891
    10. 'n' → logprob: -9.17374038696289

Token 254: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.001944461022503674
    2. ' m' → logprob: -6.251944541931152
    3. '   ' → logprob: -11.876944541931152
    4. 'n' → logprob: -12.001944541931152
    5. ' ' → logprob: -13.626944541931152
    6. 'k' → logprob: -14.001944541931152
    7. '  ' → logprob: -15.376944541931152
    8. ' n' → logprob: -15.501944541931152
    9. '0' → logprob: -15.876944541931152
    10. '    ' → logprob: -16.751943588256836

Token 255: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10029454529285431
    2. '):
' → logprob: -2.350294589996338
    3. ' ):' → logprob: -10.10029411315918
    4. ':' → logprob: -10.35029411315918
    5. '):
' → logprob: -12.22529411315918
    6. ' ):
' → logprob: -12.35029411315918
    7. '   ' → logprob: -12.72529411315918
    8. ')' → logprob: -13.60029411315918
    9. ':
' → logprob: -13.97529411315918
    10. '=' → logprob: -15.85029411315918

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019022206543013453
    2. '   ' → logprob: -7.001902103424072
    3. 'print' → logprob: -7.751902103424072
    4. '
' → logprob: -8.62690258026123
    5. ' k' → logprob: -9.00190258026123
    6. 'k' → logprob: -9.25190258026123
    7. ':
' → logprob: -9.75190258026123
    8. '        
' → logprob: -10.62690258026123
    9. ' print' → logprob: -10.75190258026123
    10. '    
' → logprob: -11.00190258026123

Token 257: ' k' (ID: 372)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7774329781532288
    2. 'k' (adapté à ' k') → logprob: -0.9024329781532288
    3. '       ' → logprob: -2.902432918548584
    4. '   ' → logprob: -3.152432918548584
    5. ' k' → logprob: -3.527432918548584
    6. ' print' → logprob: -4.902432918548584
    7. '
' → logprob: -8.652433395385742
    8. '           ' → logprob: -9.902433395385742
    9. '```' → logprob: -10.027433395385742
    10. 'result' → logprob: -10.652433395385742

Token 258: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932074427604675
    2. ' =' → logprob: -0.6932074427604675
    3. '+=' → logprob: -10.568207740783691
    4. ' +=' → logprob: -10.943207740783691
    5. '=k' → logprob: -11.193207740783691
    6. '=max' → logprob: -13.193207740783691
    7. ' ' → logprob: -15.318207740783691
    8. '   ' → logprob: -15.443207740783691
    9. '=
' → logprob: -15.818207740783691
    10. '＝' → logprob: -16.193206787109375

Token 259: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00014060820103622973
    2. ' max' → logprob: -8.875140190124512
    3. '   ' → logprob: -14.750140190124512
    4. '=max' → logprob: -16.750141143798828
    5. '0' → logprob: -16.875141143798828
    6. '[max' → logprob: -17.625141143798828
    7. '(max' → logprob: -17.875141143798828
    8. '	max' → logprob: -18.125141143798828
    9. 'min' → logprob: -18.625141143798828
    10. ' ' → logprob: -19.125141143798828

Token 260: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.619311974034645e-05
    2. '(' → logprob: -10.250036239624023
    3. '(max' → logprob: -14.750036239624023
    4. ' (' → logprob: -15.750036239624023
    5. 'n' → logprob: -15.875036239624023
    6. '(k' → logprob: -16.375036239624023
    7. '```' → logprob: -18.000036239624023
    8. 'max' → logprob: -18.250036239624023
    9. '(
' → logprob: -18.750036239624023
    10. '(nx' → logprob: -19.500036239624023

Token 261: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028560249134898186
    2. ',m' → logprob: -3.903560161590576
    3. '(m' → logprob: -5.028560161590576
    4. '(' → logprob: -7.028560161590576
    5. ')' → logprob: -8.403560638427734
    6. '(n' → logprob: -8.528560638427734
    7. ',n' → logprob: -9.653560638427734
    8. ' ,' → logprob: -10.403560638427734
    9. 'm' → logprob: -11.028560638427734
    10. ',k' → logprob: -12.278560638427734

Token 262: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.02324792370200157
    2. ' m' → logprob: -3.7732479572296143
    3. '   ' → logprob: -13.148247718811035
    4. ' ' → logprob: -15.773247718811035
    5. 'n' → logprob: -16.14824867248535
    6. ')' → logprob: -16.64824867248535
    7. '    ' → logprob: -17.02324867248535
    8. 'k' → logprob: -17.27324867248535
    9. '  ' → logprob: -17.52324867248535
    10. '       ' → logprob: -18.02324867248535

Token 263: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013618485070765018
    2. ')
' → logprob: -4.388618469238281
    3. '   ' → logprob: -6.888618469238281
    4. ')+' → logprob: -9.638618469238281
    5. '+' → logprob: -11.763618469238281
    6. ')

' → logprob: -12.138618469238281
    7. ' )' → logprob: -12.638618469238281
    8. ')
' → logprob: -13.138618469238281
    9. '
' → logprob: -13.638618469238281
    10. ')return' → logprob: -14.638618469238281

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015362409874796867
    2. 'print' → logprob: -4.51536226272583
    3. '
' → logprob: -5.76536226272583
    4. '    
' → logprob: -6.76536226272583
    5. '  
' → logprob: -11.890362739562988
    6. '```' → logprob: -12.265362739562988
    7. '        
' → logprob: -12.640362739562988
    8. ' print' → logprob: -13.515362739562988
    9. '   
' → logprob: -14.515362739562988
    10. '
' → logprob: -14.640362739562988

Token 265: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3140995502471924
    2. 'print' (adapté à ' print') → logprob: -1.3140995502471924
    3. '    
' → logprob: -7.814099311828613
    4. '
' → logprob: -7.814099311828613
    5. ' print' → logprob: -10.689099311828613
    6. '  
' → logprob: -13.064099311828613
    7. '```' → logprob: -13.689099311828613
    8. '
' → logprob: -14.064099311828613
    9. '        
' → logprob: -14.314099311828613
    10. '	print' → logprob: -14.564099311828613

Token 266: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -2.1888679839321412e-05
    2. '(' → logprob: -10.750021934509277
    3. 'k' → logprob: -15.500021934509277
    4. ' (' → logprob: -16.62502098083496
    5. '(
' → logprob: -18.25002098083496
    6. '()' → logprob: -19.25002098083496
    7. '((' → logprob: -20.25002098083496
    8. '(q' → logprob: -21.00002098083496
    9. ' k' → logprob: -21.25002098083496
    10. '('' → logprob: -21.75002098083496

Token 267: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. ' )' → logprob: -12.500003814697266
    3. ')
' → logprob: -14.750003814697266
    4. '))' → logprob: -16.500003814697266
    5. ')`' → logprob: -17.250003814697266
    6. ')}' → logprob: -18.375003814697266
    7. '')' → logprob: -19.125003814697266
    8. ')#' → logprob: -19.125003814697266
    9. '())' → logprob: -19.250003814697266
    10. '`)' → logprob: -19.500003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 265
Tokens correctement prédits (1ère position, stricte): 106
Tokens correctement prédits (1ère position, avec adaptation): 110
Tokens correctement prédits (top 10): 203
Précision stricte (1ère position): 40.00%
Précision adaptée (1ère position): 41.51%
Précision (top 10): 76.60%
================================================================================
