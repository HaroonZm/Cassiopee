================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:12:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
for _ in range(N):
    s, d = map(int, input().split())
    time = 10**9  # grand nombre arbitraire pour minimiser
    diff = d - s
    for n in range(31):  # essayer les niveaux 0 à 30
        step = 2**n
        # trouver le plus petit arrêt >= s sur cette ligne
        if s % step == 0:
            start = s
        else:
            start = s + (step - s % step)
        # vérifier que cet arrêt est <= d
        if start <= d:
            # temps = nombre d'intervalles entre start et d
            t = (d - start) // step + 1
            if t < time:
                time = t
    print(time)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003567959647625685
    2. '(N' → logprob: -9.000356674194336
    3. '('' → logprob: -9.500356674194336
    4. ''' → logprob: -9.875356674194336
    5. '`' → logprob: -10.500356674194336
    6. '```' → logprob: -10.500356674194336
    7. '("("' → logprob: -11.375356674194336
    8. '()' → logprob: -11.500356674194336
    9. '(input' → logprob: -11.625356674194336
    10. '(
' → logprob: -12.250356674194336

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5405747294425964
    2. ')' → logprob: -0.9155747294425964
    3. '()' → logprob: -4.290574550628662
    4. '())' → logprob: -5.915574550628662
    5. '(
' → logprob: -8.41557502746582
    6. '```' → logprob: -9.16557502746582
    7. '))' → logprob: -9.29057502746582
    8. '")' → logprob: -9.54057502746582
    9. '(

' → logprob: -9.79057502746582
    10. '`)' → logprob: -9.79057502746582

Token 5: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31470787525177
    2. 'if' → logprob: -2.1897077560424805
    3. 'i' → logprob: -3.3147077560424805
    4. 'a' → logprob: -3.6897077560424805
    5. 's' → logprob: -3.9397077560424805
    6. 'x' → logprob: -4.3147077560424805
    7. '*' → logprob: -4.8147077560424805
    8. 'f' → logprob: -4.9397077560424805
    9. '`' → logprob: -4.9397077560424805
    10. ')' → logprob: -4.9397077560424805

Token 6: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.020300572738051414
    2. ' i' → logprob: -4.145300388336182
    3. '  ' → logprob: -5.520300388336182
    4. ' N' → logprob: -8.52030086517334
    5. ' n' → logprob: -10.52030086517334
    6. 'i' → logprob: -11.89530086517334
    7. ' ' → logprob: -12.64530086517334
    8. ' range' → logprob: -13.02030086517334
    9. ' for' → logprob: -13.27030086517334
    10. '_' → logprob: -13.52030086517334

Token 7: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008003469556570053
    2. 'in' → logprob: -4.883003234863281
    3. ' ' → logprob: -7.883003234863281
    4. '  ' → logprob: -12.383003234863281
    5. ' N' → logprob: -12.383003234863281
    6. ' i' → logprob: -12.383003234863281
    7. ',' → logprob: -13.258003234863281
    8. ' ,' → logprob: -13.883003234863281
    9. 'range' → logprob: -14.133003234863281
    10. '_' → logprob: -14.508003234863281

Token 8: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868768811225891
    2. ' range' → logprob: -1.1368768215179443
    3. '	range' → logprob: -12.761877059936523
    4. '(range' → logprob: -13.761877059936523
    5. ' ' → logprob: -14.386877059936523
    6. '_range' → logprob: -14.511877059936523
    7. 'rang' → logprob: -15.511877059936523
    8. '_' → logprob: -16.011877059936523
    9. '<|end|>' → logprob: -16.261877059936523
    10. ' xrange' → logprob: -16.511877059936523

Token 9: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002972472459077835
    2. ' (' → logprob: -5.877972602844238
    3. '(N' → logprob: -9.252972602844238
    4. '(n' → logprob: -10.377972602844238
    5. '(
' → logprob: -11.502972602844238
    6. '(range' → logprob: -11.502972602844238
    7. '```' → logprob: -11.752972602844238
    8. ' ' → logprob: -12.127972602844238
    9. '(len' → logprob: -13.127972602844238
    10. '`' → logprob: -13.752972602844238

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09369517862796783
    2. ')' → logprob: -2.8436951637268066
    3. ':' → logprob: -3.4686951637268066
    4. ':)' → logprob: -10.593695640563965
    5. '):
' → logprob: -10.718695640563965
    6. ' ):' → logprob: -12.218695640563965
    7. '+' → logprob: -12.843695640563965
    8. '```' → logprob: -13.093695640563965
    9. '():' → logprob: -13.593695640563965
    10. ' )' → logprob: -13.593695640563965

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004193913657218218
    2. '    
' → logprob: -5.7541937828063965
    3. ' input' → logprob: -7.8791937828063965
    4. '```' → logprob: -8.629194259643555
    5. ' print' → logprob: -8.754194259643555
    6. '    ' → logprob: -9.254194259643555
    7. ' 
' → logprob: -10.129194259643555
    8. 'input' → logprob: -10.504194259643555
    9. 'print' → logprob: -10.754194259643555
    10. ' a' → logprob: -11.129194259643555

Token 12: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20279859006404877
    2. 'print' → logprob: -2.70279860496521
    3. 'x' → logprob: -3.32779860496521
    4. 'a' → logprob: -3.82779860496521
    5. 'text' → logprob: -4.952798366546631
    6. 'name' → logprob: -5.077798366546631
    7. 'line' → logprob: -5.202798366546631
    8. 'n' → logprob: -5.452798366546631
    9. 'data' → logprob: -5.452798366546631
    10. '```' → logprob: -5.452798366546631

Token 13: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5847097635269165
    2. 'tr' → logprob: -1.2097097635269165
    3. 'trip' → logprob: -2.334709644317627
    4. ' =' → logprob: -4.709709644317627
    5. 't' → logprob: -4.959709644317627
    6. '.strip' → logprob: -5.084709644317627
    7. '=' → logprob: -5.709709644317627
    8. '[' → logprob: -5.709709644317627
    9. 'tring' → logprob: -5.959709644317627
    10. ' .' → logprob: -6.084709644317627

Token 14: ' d' (ID: 272)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.444796085357666
    2. '_' → logprob: -3.069796085357666
    3. ' t' → logprob: -3.194796085357666
    4. ' ' → logprob: -3.194796085357666
    5. ' =' → logprob: -3.569796085357666
    6. 'n' → logprob: -3.694796085357666
    7. 'c' → logprob: -3.819796085357666
    8. 'k' → logprob: -3.944796085357666
    9. 'input' → logprob: -3.944796085357666
    10. 'd' → logprob: -3.944796085357666

Token 15: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3154328465461731
    2. ' =' → logprob: -1.3154327869415283
    3. ',' → logprob: -6.190433025360107
    4. ')' → logprob: -9.56543254852295
    5. ' ' → logprob: -10.69043254852295
    6. '_' → logprob: -11.44043254852295
    7. '=input' → logprob: -12.81543254852295
    8. ' ,' → logprob: -13.31543254852295
    9. '   ' → logprob: -13.81543254852295
    10. '.' → logprob: -13.81543254852295

Token 16: ' map' (ID: 4014)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3316705524921417
    2. 'input' → logprob: -1.3316705226898193
    3. ' map' → logprob: -4.206670761108398
    4. 'map' → logprob: -5.706670761108398
    5. ' ' → logprob: -10.956670761108398
    6. '[input' → logprob: -13.956670761108398
    7. ' ' → logprob: -14.206670761108398
    8. '=input' → logprob: -14.706670761108398
    9. '(input' → logprob: -15.081670761108398
    10. ' [' → logprob: -15.706670761108398

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3953281044960022
    2. '(' → logprob: -1.6453280448913574
    3. '(str' → logprob: -2.0203280448913574
    4. '(input' → logprob: -7.645328044891357
    5. '(lambda' → logprob: -8.020328521728516
    6. 'str' → logprob: -10.020328521728516
    7. 'int' → logprob: -10.395328521728516
    8. '[int' → logprob: -10.520328521728516
    9. '<int' → logprob: -11.270328521728516
    10. '(
' → logprob: -11.395328521728516

Token 18: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.48469677567481995
    2. ',' → logprob: -0.9846967458724976
    3. '(input' → logprob: -4.609696865081787
    4. '(' → logprob: -8.234696388244629
    5. ')' → logprob: -8.609696388244629
    6. 'input' → logprob: -9.234696388244629
    7. ',int' → logprob: -10.359696388244629
    8. ' ,' → logprob: -11.359696388244629
    9. '(),' → logprob: -12.609696388244629
    10. ' input' → logprob: -12.734696388244629

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10020849853754044
    2. ' input' → logprob: -2.3502085208892822
    3. ')' → logprob: -13.975208282470703
    4. ',input' → logprob: -14.850208282470703
    5. '(input' → logprob: -15.225208282470703
    6. '=input' → logprob: -16.100208282470703
    7. ' ' → logprob: -16.350208282470703
    8. '	input' → logprob: -16.475208282470703
    9. 'str' → logprob: -17.850208282470703
    10. '[input' → logprob: -17.975208282470703

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0014909347519278526
    2. '())' → logprob: -6.626491069793701
    3. '()' → logprob: -8.751490592956543
    4. ')' → logprob: -12.001490592956543
    5. '()
' → logprob: -15.126490592956543
    6. '());' → logprob: -16.12649154663086
    7. '();)' → logprob: -17.37649154663086
    8. '(' → logprob: -17.50149154663086
    9. ' ().' → logprob: -17.75149154663086
    10. '())
' → logprob: -17.75149154663086

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005594660760834813
    2. 'strip' → logprob: -7.500559329986572
    3. 'rstrip' → logprob: -12.87555980682373
    4. ')' → logprob: -13.00055980682373
    5. ' split' → logprob: -13.87555980682373
    6. 's' → logprob: -15.12555980682373
    7. '(split' → logprob: -15.25055980682373
    8. 'spl' → logprob: -16.500558853149414
    9. ')s' → logprob: -16.875558853149414
    10. '```' → logprob: -18.125558853149414

Token 22: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.041109029203653336
    2. '))' → logprob: -3.416109085083008
    3. '())' → logprob: -5.166109085083008
    4. '()' → logprob: -6.416109085083008
    5. '()))' → logprob: -10.166109085083008
    6. ')
' → logprob: -11.041109085083008
    7. '`)' → logprob: -11.041109085083008
    8. '')' → logprob: -12.541109085083008
    9. ')`' → logprob: -12.791109085083008
    10. '(' → logprob: -12.791109085083008

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9722899198532104
    2. ' ' → logprob: -1.9722899198532104
    3. ':' → logprob: -2.0972900390625
    4. ' if' → logprob: -2.7222900390625
    5. ' 
' → logprob: -3.2222900390625
    6. ')' → logprob: -3.3472900390625
    7. '```' → logprob: -3.3472900390625
    8. ''' → logprob: -3.4722900390625
    9. '`' → logprob: -3.9722900390625
    10. 'if' → logprob: -4.0972900390625

Token 24: ' time' (ID: 1058)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9236051440238953
    2. '   ' → logprob: -2.17360520362854
    3. 'if' → logprob: -2.17360520362854
    4. ' if' → logprob: -2.29860520362854
    5. ' i' → logprob: -2.54860520362854
    6. ' ' → logprob: -3.42360520362854
    7. 'r' → logprob: -3.54860520362854
    8. 'p' → logprob: -3.67360520362854
    9. 't' → logprob: -3.67360520362854
    10. 'x' → logprob: -4.423604965209961

Token 25: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07433713972568512
    2. ' =' → logprob: -3.5743372440338135
    3. 's' → logprob: -4.324337005615234
    4. '[' → logprob: -4.699337005615234
    5. '=' → logprob: -4.699337005615234
    6. ' ' → logprob: -6.449337005615234
    7. ')' → logprob: -6.449337005615234
    8. '_to' → logprob: -6.574337005615234
    9. ' +=' → logprob: -6.574337005615234
    10. '+' → logprob: -7.324337005615234

Token 26: ' ' (ID: 220)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.174457848072052
    2. 's' → logprob: -2.1744577884674072
    3. ' max' → logprob: -3.7994577884674072
    4. ' min' → logprob: -4.924458026885986
    5. ' ' → logprob: -5.174458026885986
    6. ' d' → logprob: -5.549458026885986
    7. 'd' → logprob: -6.799458026885986
    8. '"' → logprob: -7.299458026885986
    9. ' (' → logprob: -7.299458026885986
    10. ''' → logprob: -7.424458026885986

Token 27: '10' (ID: 702)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9318360090255737
    2. 's' → logprob: -0.9318360090255737
    3. '(' → logprob: -2.1818361282348633
    4. '(s' → logprob: -3.8068361282348633
    5. ' (' → logprob: -3.9318361282348633
    6. '(d' → logprob: -4.556836128234863
    7. ' d' → logprob: -4.806836128234863
    8. 'max' → logprob: -5.056836128234863
    9. 'abs' → logprob: -5.181836128234863
    10. ' s' → logprob: -5.806836128234863

Token 28: '**' (ID: 410)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.5259758234024048
    2. '-' → logprob: -1.5259758234024048
    3. '**' → logprob: -1.5259758234024048
    4. ' ' → logprob: -2.2759757041931152
    5. '+' → logprob: -2.7759757041931152
    6. '0' → logprob: -3.4009757041931152
    7. ' -' → logprob: -3.4009757041931152
    8. ' +' → logprob: -3.5259757041931152
    9. ' *' → logprob: -3.6509757041931152
    10. ' **' → logprob: -3.6509757041931152

Token 29: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.05926132947206497
    2. '6' → logprob: -3.4342613220214844
    3. 's' → logprob: -4.684261322021484
    4. 'd' → logprob: -5.059261322021484
    5. '-' → logprob: -5.809261322021484
    6. '5' → logprob: -6.184261322021484
    7. '7' → logprob: -6.434261322021484
    8. '18' → logprob: -7.184261322021484
    9. '8' → logprob: -7.309261322021484
    10. '(' → logprob: -7.934261322021484

Token 30: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3090593218803406
    2. '+' → logprob: -1.6840593814849854
    3. '-' → logprob: -3.6840593814849854
    4. ' **' → logprob: -4.809059143066406
    5. ' 
' → logprob: -4.934059143066406
    6. '**' → logprob: -5.309059143066406
    7. ',' → logprob: -5.434059143066406
    8. ' -' → logprob: -5.559059143066406
    9. ' +' → logprob: -5.684059143066406
    10. ')' → logprob: -5.684059143066406

Token 31: ' #' (ID: 1069)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02233250066637993
    2. ' ' → logprob: -4.522332668304443
    3. ' +' → logprob: -6.022332668304443
    4. ')' → logprob: -6.272332668304443
    5. '-' → logprob: -6.522332668304443
    6. '<|end|>' → logprob: -6.772332668304443
    7. '*' → logprob: -7.147332668304443
    8. '**' → logprob: -7.397332668304443
    9. '>' → logprob: -7.897332668304443
    10. ',' → logprob: -8.022332191467285

Token 32: ' grand' (ID: 6363)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2559502124786377
    2. ' ' → logprob: -1.2559502124786377
    3. ')' → logprob: -2.2559502124786377
    4. '<|end|>' → logprob: -2.5059502124786377
    5. '\' → logprob: -2.7559502124786377
    6. '-' → logprob: -3.1309502124786377
    7. '.' → logprob: -3.1309502124786377
    8. '_' → logprob: -4.130949974060059
    9. ' )' → logprob: -4.380949974060059
    10. '*' → logprob: -4.630949974060059

Token 33: ' nombre' (ID: 9733)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.23760539293289185
    2. '_' → logprob: -2.237605333328247
    3. ' ' → logprob: -2.362605333328247
    4. ' +' → logprob: -5.112605571746826
    5. '<|end|>' → logprob: -6.737605571746826
    6. '-' → logprob: -6.862605571746826
    7. ')' → logprob: -7.237605571746826
    8. ' _' → logprob: -7.987605571746826
    9. ' )' → logprob: -9.112605094909668
    10. '*' → logprob: -9.112605094909668

Token 34: ' arbit' (ID: 96555)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.2639352083206177
    2. ' ' → logprob: -1.5139352083206177
    3. ' 
' → logprob: -1.8889352083206177
    4. '+' → logprob: -2.888935089111328
    5. '.' → logprob: -3.013935089111328
    6. '\' → logprob: -3.013935089111328
    7. ',' → logprob: -3.263935089111328
    8. '<|end|>' → logprob: -3.263935089111328
    9. '#' → logprob: -3.888935089111328
    10. '
' → logprob: -4.138935089111328

Token 35: 'ra' (ID: 614)
  Prédit: 'itra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itra' → logprob: -0.524738609790802
    2. 'ra' → logprob: -1.5247385501861572
    3. 'r' → logprob: -3.2747385501861572
    4. 'itr' → logprob: -3.3997385501861572
    5. 'itaire' → logprob: -3.6497385501861572
    6. 'tra' → logprob: -3.7747385501861572
    7. '#' → logprob: -4.149738788604736
    8. '```' → logprob: -4.399738788604736
    9. 't' → logprob: -5.024738788604736
    10. 'tr' → logprob: -5.524738788604736

Token 36: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.39931705594062805
    2. 'irement' → logprob: -1.1493170261383057
    3. 'rement' → logprob: -6.274317264556885
    4. '#' → logprob: -6.399317264556885
    5. 're' → logprob: -6.399317264556885
    6. '```' → logprob: -6.399317264556885
    7. 'ment' → logprob: -6.524317264556885
    8. '``' → logprob: -7.649317264556885
    9. 'i' → logprob: -7.774317264556885
    10. '1' → logprob: -8.149316787719727

Token 37: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0325429439544678
    2. ' 
' → logprob: -1.0325429439544678
    3. '<|end|>' → logprob: -2.0325429439544678
    4. ' ' → logprob: -3.4075429439544678
    5. '-' → logprob: -3.4075429439544678
    6. '  
' → logprob: -4.032543182373047
    7. '\' → logprob: -4.657543182373047
    8. '\n' → logprob: -4.657543182373047
    9. '<|end|>' → logprob: -4.657543182373047
    10. '+' → logprob: -4.782543182373047

Token 38: ' minim' (ID: 23874)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.3856029510498047
    2. ' initial' → logprob: -1.8856029510498047
    3. ' chaque' → logprob: -2.0106029510498047
    4. 'min' → logprob: -2.3856029510498047
    5. 'l' → logprob: -2.7606029510498047
    6. ' la' → logprob: -2.8856029510498047
    7. '_' → logprob: -3.1356029510498047
    8. ' comparer' → logprob: -3.2606029510498047
    9. ' ' → logprob: -3.3856029510498047
    10. ' le' → logprob: -4.010602951049805

Token 39: 'iser' (ID: 7466)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23140208423137665
    2. ' ' → logprob: -1.731402039527893
    3. 'e' → logprob: -4.7314019203186035
    4. 's' → logprob: -4.8564019203186035
    5. 'er' → logprob: -6.8564019203186035
    6. '<|end|>' → logprob: -6.8564019203186035
    7. 'es' → logprob: -6.9814019203186035
    8. 'a' → logprob: -7.3564019203186035
    9. '```' → logprob: -7.3564019203186035
    10. '=' → logprob: -7.4814019203186035

Token 40: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3928041458129883
    2. '<|end|>' → logprob: -2.0178041458129883
    3. '_' → logprob: -2.3928041458129883
    4. ')' → logprob: -4.142804145812988
    5. ',' → logprob: -4.267804145812988
    6. 'if' → logprob: -4.392804145812988
    7. '  ' → logprob: -4.517804145812988
    8. ' if' → logprob: -5.017804145812988
    9. '<|end|>' → logprob: -5.267804145812988
    10. '   ' → logprob: -5.392804145812988

Token 41: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3723127841949463
    2. '
' → logprob: -1.4973127841949463
    3. ' 
' → logprob: -1.4973127841949463
    4. '<|end|>' → logprob: -1.7473127841949463
    5. 'if' → logprob: -3.8723127841949463
    6. ')' → logprob: -3.9973127841949463
    7. ',' → logprob: -4.122312545776367
    8. '   ' → logprob: -4.497312545776367
    9. ' if' → logprob: -4.872312545776367
    10. '  
' → logprob: -4.997312545776367

Token 42: ' diff' (ID: 8868)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.614780604839325
    2. ' 
' → logprob: -0.864780604839325
    3. '<|end|>' → logprob: -4.489780426025391
    4. '
' → logprob: -5.239780426025391
    5. '  
' → logprob: -5.489780426025391
    6. 'i' → logprob: -5.739780426025391
    7. 't' → logprob: -6.114780426025391
    8. '   ' → logprob: -6.489780426025391
    9. '    ' → logprob: -6.614780426025391
    10. '    
' → logprob: -6.739780426025391

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030638430267572403
    2. '=' → logprob: -3.5306384563446045
    3. '_' → logprob: -7.905638217926025
    4. 'er' → logprob: -8.030638694763184
    5. 's' → logprob: -9.030638694763184
    6. ' ' → logprob: -10.530638694763184
    7. 'e' → logprob: -12.155638694763184
    8. '_=' → logprob: -12.155638694763184
    9. ',' → logprob: -12.280638694763184
    10. 'érence' → logprob: -13.030638694763184

Token 44: ' d' (ID: 272)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.2215684950351715
    2. 'abs' → logprob: -1.9715684652328491
    3. ' ' → logprob: -4.096568584442139
    4. ' s' → logprob: -4.221568584442139
    5. ' d' → logprob: -4.346568584442139
    6. ' float' → logprob: -5.346568584442139
    7. 'd' → logprob: -5.721568584442139
    8. 's' → logprob: -5.846568584442139
    9. '0' → logprob: -7.096568584442139
    10. '10' → logprob: -7.096568584442139

Token 45: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6732333898544312
    2. ' -' → logprob: -1.6732333898544312
    3. '-' → logprob: -2.1732335090637207
    4. '+' → logprob: -2.6732335090637207
    5. ' +' → logprob: -2.7982335090637207
    6. ' **' → logprob: -4.048233509063721
    7. '/' → logprob: -4.798233509063721
    8. ' /' → logprob: -4.923233509063721
    9. '**' → logprob: -4.923233509063721
    10. '<|end|>' → logprob: -5.548233509063721

Token 46: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.054328177124261856
    2. '1' → logprob: -3.429328203201294
    3. ' s' → logprob: -4.054327964782715
    4. ' ' → logprob: -7.054327964782715
    5. '2' → logprob: -7.679327964782715
    6. '0' → logprob: -7.804327964782715
    7. '10' → logprob: -7.804327964782715
    8. '100' → logprob: -8.304327964782715
    9. 't' → logprob: -9.554327964782715
    10. '5' → logprob: -9.804327964782715

Token 47: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0112255811691284
    2. ' 
' → logprob: -1.3862255811691284
    3. '
' → logprob: -2.261225700378418
    4. '<|end|>' → logprob: -2.511225700378418
    5. ')' → logprob: -2.886225700378418
    6. ' if' → logprob: -3.136225700378418
    7. '+' → logprob: -3.261225700378418
    8. '  
' → logprob: -4.386225700378418
    9. 'if' → logprob: -4.761225700378418
    10. '*' → logprob: -5.136225700378418

Token 48: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6342362761497498
    2. '   ' → logprob: -1.2592363357543945
    3. ' 
' → logprob: -2.7592363357543945
    4. '<|end|>' → logprob: -3.8842363357543945
    5. '
' → logprob: -4.3842363357543945
    6. '    
' → logprob: -4.6342363357543945
    7. '\n' → logprob: -4.7592363357543945
    8. 'n' → logprob: -4.8842363357543945
    9. 'if' → logprob: -5.0092363357543945
    10. ' if' → logprob: -5.0092363357543945

Token 49: ' for' (ID: 395)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.820342481136322
    2. ' ' → logprob: -1.0703425407409668
    3. '<|end|>' → logprob: -2.695342540740967
    4. '
' → logprob: -2.945342540740967
    5. '   ' → logprob: -3.695342540740967
    6. ' if' → logprob: -3.820342540740967
    7. 'if' → logprob: -4.070342540740967
    8. ')' → logprob: -5.070342540740967
    9. ':' → logprob: -5.195342540740967
    10. 'i' → logprob: -5.445342540740967

Token 50: ' n' (ID: 297)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.40068909525871277
    2. ' ' → logprob: -1.6506891250610352
    3. ' _' → logprob: -2.650689125061035
    4. ' t' → logprob: -3.400689125061035
    5. ' s' → logprob: -4.400689125061035
    6. '_' → logprob: -4.900689125061035
    7. ' range' → logprob: -5.400689125061035
    8. ' d' → logprob: -5.525689125061035
    9. ' j' → logprob: -6.400689125061035
    10. 'i' → logprob: -6.650689125061035

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021563954651355743
    2. 'in' → logprob: -3.89656400680542
    3. ' ' → logprob: -7.02156400680542
    4. ' i' → logprob: -10.396563529968262
    5. 'n' → logprob: -10.896563529968262
    6. '+' → logprob: -11.021563529968262
    7. '_' → logprob: -11.521563529968262
    8. 's' → logprob: -11.521563529968262
    9. '<|end|>' → logprob: -11.896563529968262
    10. '	in' → logprob: -12.271563529968262

Token 52: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.000973517308011651
    2. 'range' → logprob: -7.000973701477051
    3. ' ' → logprob: -10.00097370147705
    4. '	range' → logprob: -11.75097370147705
    5. '(range' → logprob: -13.00097370147705
    6. ' xrange' → logprob: -13.12597370147705
    7. ' ra' → logprob: -14.25097370147705
    8. '  ' → logprob: -14.37597370147705
    9. '[' → logprob: -14.37597370147705
    10. ' ' → logprob: -14.75097370147705

Token 53: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005320800933986902
    2. '(s' → logprob: -5.505321025848389
    3. '(diff' → logprob: -7.005321025848389
    4. '(d' → logprob: -9.25532054901123
    5. '(int' → logprob: -9.25532054901123
    6. ' (' → logprob: -10.00532054901123
    7. '(n' → logprob: -10.38032054901123
    8. '((' → logprob: -10.88032054901123
    9. '(-' → logprob: -11.00532054901123
    10. '1' → logprob: -12.25532054901123

Token 54: '31' (ID: 2911)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.44334742426872253
    2. '100' → logprob: -1.943347454071045
    3. '101' → logprob: -2.818347454071045
    4. 'int' → logprob: -3.443347454071045
    5. '10' → logprob: -3.818347454071045
    6. 'diff' → logprob: -4.068347454071045
    7. 's' → logprob: -4.443347454071045
    8. '11' → logprob: -4.568347454071045
    9. '0' → logprob: -4.693347454071045
    10. '51' → logprob: -5.068347454071045

Token 55: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00510413758456707
    2. ')' → logprob: -6.130104064941406
    3. '):
' → logprob: -6.255104064941406
    4. ' ):' → logprob: -7.380104064941406
    5. '+' → logprob: -8.880104064941406
    6. ':' → logprob: -9.630104064941406
    7. '   ' → logprob: -9.630104064941406
    8. '):
' → logprob: -9.755104064941406
    9. ',' → logprob: -10.755104064941406
    10. ' )' → logprob: -13.005104064941406

Token 56: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0009324550628662
    2. ':' → logprob: -1.5009324550628662
    3. '   ' → logprob: -1.5009324550628662
    4. '<|end|>' → logprob: -2.250932455062866
    5. '    ' → logprob: -3.500932455062866
    6. '       ' → logprob: -3.875932455062866
    7. ' 
' → logprob: -4.750932693481445
    8. ' :' → logprob: -5.250932693481445
    9. '
' → logprob: -5.875932693481445
    10. ':
' → logprob: -6.000932693481445

Token 57: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.057228684425354
    2. ':' → logprob: -1.682228684425354
    3. '   ' → logprob: -1.682228684425354
    4. '       ' → logprob: -1.932228684425354
    5. '<|end|>' → logprob: -2.5572285652160645
    6. '
' → logprob: -4.0572285652160645
    7. ' 
' → logprob: -4.6822285652160645
    8. '    ' → logprob: -4.8072285652160645
    9. ',' → logprob: -5.5572285652160645
    10. ' :' → logprob: -5.6822285652160645

Token 58: ' essayer' (ID: 92713)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0008501286501996219
    2. '    ' → logprob: -7.750850200653076
    3. '<|end|>' → logprob: -9.000849723815918
    4. ' 
' → logprob: -9.125849723815918
    5. '  ' → logprob: -10.250849723815918
    6. ' if' → logprob: -10.500849723815918
    7. ' ' → logprob: -11.000849723815918
    8. '1' → logprob: -11.500849723815918
    9. 'n' → logprob: -11.500849723815918
    10. '     
' → logprob: -11.750849723815918

Token 59: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04306210204958916
    2. '<|end|>' → logprob: -3.418062210083008
    3. '    ' → logprob: -5.043062210083008
    4. ' 
' → logprob: -7.418062210083008
    5. '  ' → logprob: -7.543062210083008
    6. ':' → logprob: -8.043062210083008
    7. ' to' → logprob: -8.293062210083008
    8. ' de' → logprob: -8.418062210083008
    9. '<|end|>' → logprob: -8.418062210083008
    10. '   ' → logprob: -8.543062210083008

Token 60: ' niveaux' (ID: 88262)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1110922247171402
    2. ' n' → logprob: -2.6110923290252686
    3. 'n' → logprob: -4.3610920906066895
    4. 's' → logprob: -5.7360920906066895
    5. ' t' → logprob: -5.9860920906066895
    6. '0' → logprob: -5.9860920906066895
    7. '2' → logprob: -6.4860920906066895
    8. '1' → logprob: -6.8610920906066895
    9. '32' → logprob: -7.6110920906066895
    10. 'possible' → logprob: -7.6110920906066895

Token 61: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9903555512428284
    2. '   ' → logprob: -1.2403554916381836
    3. '<|end|>' → logprob: -2.1153554916381836
    4. ':' → logprob: -2.3653554916381836
    5. '    ' → logprob: -2.6153554916381836
    6. ' :' → logprob: -3.4903554916381836
    7. '  ' → logprob: -5.365355491638184
    8. ' :
' → logprob: -5.490355491638184
    9. '<|end|>' → logprob: -5.740355491638184
    10. ' 
' → logprob: -6.365355491638184

Token 62: '0' (ID: 15)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5808185338973999
    2. '<|end|>' → logprob: -1.3308185338974
    3. ' de' → logprob: -2.8308186531066895
    4. '   ' → logprob: -2.8308186531066895
    5. ':' → logprob: -4.8308186531066895
    6. '  ' → logprob: -5.3308186531066895
    7. ' ,' → logprob: -5.7058186531066895
    8. '    ' → logprob: -5.7058186531066895
    9. ' d' → logprob: -5.8308186531066895
    10. ' :' → logprob: -5.9558186531066895

Token 63: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7500789761543274
    2. ' à' → logprob: -0.8750789761543274
    3. ' to' → logprob: -2.3750789165496826
    4. '<|end|>' → logprob: -5.625079154968262
    5. '   ' → logprob: -6.000079154968262
    6. ',' → logprob: -6.000079154968262
    7. ' ,' → logprob: -6.500079154968262
    8. ' through' → logprob: -6.500079154968262
    9. 'à' → logprob: -7.000079154968262
    10. '0' → logprob: -7.250079154968262

Token 64: ' ' (ID: 220)
  Prédit: '30'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -0.18037666380405426
    2. ' ' → logprob: -1.805376648902893
    3. '31' → logprob: -7.4303765296936035
    4. '3' → logprob: -10.805377006530762
    5. '29' → logprob: -11.805377006530762
    6. '10' → logprob: -12.930377006530762
    7. '20' → logprob: -13.180377006530762
    8. ' n' → logprob: -14.055377006530762
    9. ' ' → logprob: -14.117877006530762
    10. '```' → logprob: -14.367877006530762

Token 65: '30' (ID: 1130)
  Prédit: '30'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -0.04947781562805176
    2. ' ' → logprob: -3.0494778156280518
    3. '31' → logprob: -7.299477577209473
    4. '3' → logprob: -8.549477577209473
    5. '10' → logprob: -12.424477577209473
    6. '1' → logprob: -12.799477577209473
    7. '29' → logprob: -12.799477577209473
    8. '20' → logprob: -12.924477577209473
    9. '```' → logprob: -13.361977577209473
    10. '0' → logprob: -13.486977577209473

Token 66: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08871205151081085
    2. ' :' → logprob: -2.963711977005005
    3. '   ' → logprob: -3.963711977005005
    4. '<|end|>' → logprob: -5.088712215423584
    5. ',' → logprob: -5.588712215423584
    6. ' ' → logprob: -6.588712215423584
    7. ':
' → logprob: -7.213712215423584
    8. ' :
' → logprob: -7.338712215423584
    9. '    ' → logprob: -7.838712215423584
    10. '
' → logprob: -8.088711738586426

Token 67: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08869513869285583
    2. '       ' → logprob: -3.2136950492858887
    3. ' :' → logprob: -3.9636950492858887
    4. '   ' → logprob: -4.088695049285889
    5. '    ' → logprob: -5.963695049285889
    6. '<|end|>' → logprob: -5.963695049285889
    7. ',' → logprob: -6.713695049285889
    8. ' ' → logprob: -7.088695049285889
    9. '):' → logprob: -7.213695049285889
    10. ':
' → logprob: -8.338695526123047

Token 68: ' step' (ID: 5983)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01348089799284935
    2. ' 
' → logprob: -6.0134806632995605
    3. '    ' → logprob: -6.0134806632995605
    4. ' if' → logprob: -6.2634806632995605
    5. ':' → logprob: -6.5134806632995605
    6. ' :' → logprob: -7.3884806632995605
    7. '   ' → logprob: -7.6384806632995605
    8. ',' → logprob: -8.013481140136719
    9. '<|end|>' → logprob: -8.013481140136719
    10. 'n' → logprob: -8.138481140136719

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1599465310573578
    2. 's' → logprob: -2.4099464416503906
    3. '=' → logprob: -2.9099464416503906
    4. '_' → logprob: -6.534946441650391
    5. '_size' → logprob: -6.909946441650391
    6. ' ' → logprob: -7.659946441650391
    7. '_s' → logprob: -8.90994644165039
    8. 'size' → logprob: -9.90994644165039
    9. ' s' → logprob: -10.09744644165039
    10. '_time' → logprob: -10.28494644165039

Token 70: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3779619634151459
    2. '2' → logprob: -2.0029618740081787
    3. '1' → logprob: -2.7529618740081787
    4. ' (' → logprob: -2.8779618740081787
    5. ' diff' → logprob: -3.6279618740081787
    6. 'diff' → logprob: -4.752962112426758
    7. '(' → logprob: -4.877962112426758
    8. ' abs' → logprob: -5.627962112426758
    9. ' d' → logprob: -6.002962112426758
    10. ' n' → logprob: -6.252962112426758

Token 71: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2158595621585846
    2. '1' → logprob: -1.8408595323562622
    3. '(' → logprob: -3.7158596515655518
    4. 'diff' → logprob: -5.840859413146973
    5. ' ' → logprob: -6.465859413146973
    6. 'd' → logprob: -6.715859413146973
    7. 's' → logprob: -6.840859413146973
    8. '10' → logprob: -7.215859413146973
    9. 'max' → logprob: -7.215859413146973
    10. 'n' → logprob: -7.590859413146973

Token 72: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.003924164455384016
    2. ' **' → logprob: -5.628924369812012
    3. '*n' → logprob: -8.378924369812012
    4. '*' → logprob: -9.503924369812012
    5. '***' → logprob: -12.378924369812012
    6. '**
' → logprob: -12.628924369812012
    7. ' *' → logprob: -13.378924369812012
    8. ' ' → logprob: -13.378924369812012
    9. '
' → logprob: -13.753924369812012
    10. ' **
' → logprob: -13.753924369812012

Token 73: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00016873658751137555
    2. '(n' → logprob: -9.750168800354004
    3. '(' → logprob: -9.875168800354004
    4. ' n' → logprob: -10.500168800354004
    5. '	n' → logprob: -11.375168800354004
    6. '-n' → logprob: -12.875168800354004
    7. '6' → logprob: -13.000168800354004
    8. '_n' → logprob: -13.000168800354004
    9. '<n' → logprob: -13.500168800354004
    10. '{' → logprob: -13.750168800354004

Token 74: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16394810378551483
    2. 'if' → logprob: -2.5389480590820312
    3. ' ' → logprob: -3.1639480590820312
    4. '<|end|>' → logprob: -4.538948059082031
    5. '       ' → logprob: -5.163948059082031
    6. ',' → logprob: -6.163948059082031
    7. ')' → logprob: -6.413948059082031
    8. ' for' → logprob: -6.413948059082031
    9. ' 
' → logprob: -6.663948059082031
    10. ':' → logprob: -6.913948059082031

Token 77: ' trouver' (ID: 23195)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0844002217054367
    2. 'if' → logprob: -2.584400177001953
    3. '    ' → logprob: -6.084400177001953
    4. ' ' → logprob: -6.334400177001953
    5. ' for' → logprob: -7.459400177001953
    6. '   ' → logprob: -8.459400177001953
    7. ' i' → logprob: -8.834400177001953
    8. '        ' → logprob: -9.584400177001953
    9. '<|end|>' → logprob: -9.709400177001953
    10. 'for' → logprob: -9.959400177001953

Token 78: ' le' (ID: 505)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.435218334197998
    2. ' le' → logprob: -1.560218334197998
    3. ' la' → logprob: -2.060218334197998
    4. ' ' → logprob: -2.185218334197998
    5. ' if' → logprob: -2.310218334197998
    6. '<|end|>' → logprob: -2.810218334197998
    7. ' un' → logprob: -2.935218334197998
    8. ' une' → logprob: -4.185218334197998
    9. ' the' → logprob: -4.310218334197998
    10. 'le' → logprob: -4.435218334197998

Token 79: ' plus' (ID: 2932)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -1.118394374847412
    2. ' multiple' → logprob: -1.493394374847412
    3. ' plus' → logprob: -2.618394374847412
    4. ' meilleur' → logprob: -3.118394374847412
    5. ' k' → logprob: -3.368394374847412
    6. ' ' → logprob: -3.618394374847412
    7. 'nombre' → logprob: -3.618394374847412
    8. ' premier' → logprob: -3.743394374847412
    9. ' minimum' → logprob: -3.993394374847412
    10. 'plus' → logprob: -3.993394374847412

Token 80: ' petit' (ID: 20577)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.9361557364463806
    2. 'pro' → logprob: -1.5611557960510254
    3. ' grand' → logprob: -1.9361557960510254
    4. ' petit' → logprob: -2.0611557960510254
    5. 'pet' → logprob: -2.5611557960510254
    6. ' proche' → logprob: -3.1861557960510254
    7. '```' → logprob: -5.561155796051025
    8. 'près' → logprob: -6.686155796051025
    9. ' ' → logprob: -8.436155319213867
    10. ' bas' → logprob: -8.561155319213867

Token 81: ' arrêt' (ID: 77403)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.0311254262924194
    2. 'k' → logprob: -1.5311254262924194
    3. ' x' → logprob: -2.406125545501709
    4. ' t' → logprob: -2.406125545501709
    5. ' multiple' → logprob: -2.656125545501709
    6. ' i' → logprob: -2.906125545501709
    7. ' m' → logprob: -3.156125545501709
    8. 'x' → logprob: -3.656125545501709
    9. 'm' → logprob: -4.281125545501709
    10. 'i' → logprob: -4.406125545501709

Token 82: ' >=' (ID: 5064)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.36744949221611023
    2. ' possible' → logprob: -2.8674495220184326
    3. ' j' → logprob: -3.4924495220184326
    4. ' x' → logprob: -3.4924495220184326
    5. ' >=' → logprob: -3.6174495220184326
    6. ' t' → logprob: -3.8674495220184326
    7. ' at' → logprob: -3.9924495220184326
    8. ' qui' → logprob: -4.1174492835998535
    9. 'possible' → logprob: -4.1174492835998535
    10. 'i' → logprob: -4.8674492835998535

Token 83: ' s' (ID: 265)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.793509304523468
    2. ' diff' → logprob: -1.5435092449188232
    3. ' d' → logprob: -1.9185092449188232
    4. 'd' → logprob: -2.0435092449188232
    5. ' s' → logprob: -3.5435092449188232
    6. 's' → logprob: -4.043509483337402
    7. '(diff' → logprob: -5.418509483337402
    8. ' (' → logprob: -6.043509483337402
    9. ' step' → logprob: -6.293509483337402
    10. 'step' → logprob: -7.543509483337402

Token 84: ' sur' (ID: 1512)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6280099749565125
    2. ' ,' → logprob: -1.8780100345611572
    3. ',' → logprob: -2.5030100345611572
    4. ' :' → logprob: -2.6280100345611572
    5. '<|end|>' → logprob: -3.0030100345611572
    6. ':' → logprob: -3.1280100345611572
    7. ' if' → logprob: -4.378009796142578
    8. ' ' → logprob: -4.878009796142578
    9. '<|end|>' → logprob: -5.378009796142578
    10. ' :
' → logprob: -5.503009796142578

Token 85: ' cette' (ID: 7696)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.9917545318603516
    2. ' la' → logprob: -1.1167545318603516
    3. ' une' → logprob: -2.1167545318603516
    4. 'step' → logprob: -2.7417545318603516
    5. ' ' → logprob: -3.4917545318603516
    6. ' le' → logprob: -3.8667545318603516
    7. ' l' → logprob: -3.9917545318603516
    8. 'le' → logprob: -4.741754531860352
    9. 'une' → logprob: -4.991754531860352
    10. ' un' → logprob: -5.116754531860352

Token 86: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.10052680224180222
    2. ' ligne' → logprob: -3.350526809692383
    3. 'l' → logprob: -3.850526809692383
    4. 'step' → logprob: -4.600526809692383
    5. ' étape' → logprob: -5.725526809692383
    6. ' ' → logprob: -5.725526809692383
    7. 'route' → logprob: -5.913026809692383
    8. ' step' → logprob: -6.225526809692383
    9. 'voie' → logprob: -6.225526809692383
    10. 'line' → logprob: -6.600526809692383

Token 87: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5410457849502563
    2. ' :' → logprob: -1.1660457849502563
    3. ' ' → logprob: -3.166045665740967
    4. ',' → logprob: -3.666045665740967
    5. ' 
' → logprob: -5.291045665740967
    6. '<|end|>' → logprob: -5.291045665740967
    7. ' :
' → logprob: -5.541045665740967
    8. ' ,' → logprob: -5.541045665740967
    9. ''s' → logprob: -5.666045665740967
    10. '  
' → logprob: -5.791045665740967

Token 88: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7555948495864868
    2. ' 
' → logprob: -0.7555948495864868
    3. '
' → logprob: -4.130594730377197
    4. '       ' → logprob: -4.880594730377197
    5. '<|end|>' → logprob: -5.005594730377197
    6. '\' → logprob: -5.755594730377197
    7. ' if' → logprob: -6.005594730377197
    8. ',' → logprob: -6.255594730377197
    9. '        
' → logprob: -6.255594730377197
    10. '        ' → logprob: -6.255594730377197

Token 90: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.13906945288181305
    2. ' step' → logprob: -2.7640695571899414
    3. ' (' → logprob: -3.7640695571899414
    4. ' diff' → logprob: -3.8890695571899414
    5. ' d' → logprob: -4.139069557189941
    6. 's' → logprob: -5.264069557189941
    7. '(step' → logprob: -7.889069557189941
    8. '(diff' → logprob: -7.889069557189941
    9. 'diff' → logprob: -8.139069557189941
    10. 'd' → logprob: -8.389069557189941

Token 91: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.04470554739236832
    2. '%' → logprob: -3.419705629348755
    3. ' <=' → logprob: -4.544705390930176
    4. ' ' → logprob: -8.544705390930176
    5. '<=' → logprob: -8.794705390930176
    6. ' <' → logprob: -11.794705390930176
    7. ' ==' → logprob: -12.544705390930176
    8. ' 

' → logprob: -12.669705390930176
    9. '%s' → logprob: -13.544705390930176
    10. ' ≤' → logprob: -13.919705390930176

Token 92: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.25197774171829224
    2. ' step' → logprob: -1.5019776821136475
    3. '(step' → logprob: -10.626977920532227
    4. ' ' → logprob: -11.126977920532227
    5. '	step' → logprob: -12.126977920532227
    6. '2' → logprob: -13.876977920532227
    7. '<|end|>' → logprob: -14.626977920532227
    8. 'steps' → logprob: -14.751977920532227
    9. 'Step' → logprob: -14.876977920532227
    10. '   ' → logprob: -15.376977920532227

Token 93: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6127454042434692
    2. ' ==' → logprob: -1.6127454042434692
    3. '!=' → logprob: -1.9877454042434692
    4. ' !=' → logprob: -2.2377452850341797
    5. ':' → logprob: -4.23774528503418
    6. '=' → logprob: -7.61274528503418
    7. ' :' → logprob: -10.23774528503418
    8. '>' → logprob: -10.36274528503418
    9. ')' → logprob: -10.73774528503418
    10. ')==' → logprob: -11.36274528503418

Token 94: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016035424545407295
    2. ' ' → logprob: -4.141035556793213
    3. 's' → logprob: -14.016035079956055
    4. '   ' → logprob: -17.078535079956055
    5. '1' → logprob: -17.266035079956055
    6. '<|end|>' → logprob: -17.328535079956055
    7. '```' → logprob: -17.328535079956055
    8. ' ' → logprob: -17.641035079956055
    9. ' s' → logprob: -17.641035079956055
    10. '  ' → logprob: -17.703535079956055

Token 95: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002966127940453589
    2. ' ' → logprob: -8.125296592712402
    3. 's' → logprob: -14.875296592712402
    4. '   ' → logprob: -16.25029754638672
    5. '<|end|>' → logprob: -18.00029754638672
    6. '  ' → logprob: -18.18779754638672
    7. '۰' → logprob: -18.25029754638672
    8. '```' → logprob: -18.50029754638672
    9. '০' → logprob: -19.06279754638672
    10. '00' → logprob: -19.12529754638672

Token 96: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008433958515524864
    2. ':
' → logprob: -5.258433818817139
    3. ' :' → logprob: -5.883433818817139
    4. '<|end|>' → logprob: -9.133434295654297
    5. ' :
' → logprob: -9.383434295654297
    6. '):' → logprob: -10.258434295654297
    7. ' and' → logprob: -10.508434295654297
    8. ',' → logprob: -10.633434295654297
    9. '       ' → logprob: -10.883434295654297
    10. ' or' → logprob: -11.133434295654297

Token 97: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013245174661278725
    2. '
' → logprob: -5.513245105743408
    3. '            
' → logprob: -6.013245105743408
    4. '<|end|>' → logprob: -6.763245105743408
    5. ':' → logprob: -7.138245105743408
    6. ' continue' → logprob: -7.513245105743408
    7. ' ' → logprob: -7.763245105743408
    8. '            ' → logprob: -7.763245105743408
    9. '               ' → logprob: -8.013245582580566
    10. 'continue' → logprob: -8.263245582580566

Token 98: ' start' (ID: 1604)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.42065346240997314
    2. ' stop' → logprob: -2.0456533432006836
    3. 'stop' → logprob: -3.6706533432006836
    4. ' x' → logprob: -4.295653343200684
    5. ' next' → logprob: -4.420653343200684
    6. 'x' → logprob: -4.420653343200684
    7. 'a' → logprob: -4.545653343200684
    8. ' a' → logprob: -4.545653343200684
    9. ' p' → logprob: -5.108153343200684
    10. ' i' → logprob: -5.170653343200684

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2591311037540436
    2. '_' → logprob: -2.3841311931610107
    3. '_point' → logprob: -2.5091311931610107
    4. '=' → logprob: -3.7591311931610107
    5. '_stop' → logprob: -3.8841311931610107
    6. '_step' → logprob: -5.259130954742432
    7. '_index' → logprob: -6.759130954742432
    8. '_pos' → logprob: -7.509130954742432
    9. '_idx' → logprob: -7.759130954742432
    10. '_line' → logprob: -7.759130954742432

Token 100: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5759422183036804
    2. 's' → logprob: -0.8259422183036804
    3. '0' → logprob: -14.075942039489746
    4. '_s' → logprob: -14.575942039489746
    5. ' ' → logprob: -14.950942039489746
    6. '           ' → logprob: -15.075942039489746
    7. '	s' → logprob: -15.700942039489746
    8. '   ' → logprob: -15.825942039489746
    9. ' ' → logprob: -15.950942039489746
    10. '{s' → logprob: -16.325942993164062

Token 101: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5563847422599792
    2. '<|end|>' → logprob: -1.056384801864624
    3. '       ' → logprob: -3.306384801864624
    4. 'else' → logprob: -3.806384801864624
    5. ' else' → logprob: -4.806384563446045
    6. ' 
' → logprob: -5.056384563446045
    7. '<|end|>' → logprob: -5.806384563446045
    8. '
' → logprob: -7.306384563446045
    9. '  
' → logprob: -7.681384563446045
    10. '+' → logprob: -7.681384563446045

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05569668114185333
    2. 'else' → logprob: -3.555696725845337
    3. ' else' → logprob: -3.680696725845337
    4. '<|end|>' → logprob: -8.555696487426758
    5. '
' → logprob: -8.930696487426758
    6. 'elif' → logprob: -10.680696487426758
    7. '```' → logprob: -11.180696487426758
    8. '	else' → logprob: -11.180696487426758
    9. '<|end|>' → logprob: -11.680696487426758
    10. ' elif' → logprob: -12.805696487426758

Token 103: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.912193775177002
    2. ' else' → logprob: -1.037193775177002
    3. 'else' (adapté à ' else') → logprob: -1.412193775177002
    4. '	else' → logprob: -8.287193298339844
    5. '   ' → logprob: -10.787193298339844
    6. '<|end|>' → logprob: -11.912193298339844
    7. 'elif' → logprob: -12.537193298339844
    8. '	' → logprob: -13.037193298339844
    9. '```' → logprob: -13.037193298339844
    10. '           ' → logprob: -13.162193298339844

Token 104: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.059351544827222824
    2. ':
' → logprob: -2.9343514442443848
    3. '           ' → logprob: -5.684351444244385
    4. ' :
' → logprob: -7.809351444244385
    5. ' :' → logprob: -7.934351444244385
    6. '       ' → logprob: -9.434351921081543
    7. ' s' → logprob: -10.309351921081543
    8. '        ' → logprob: -10.684351921081543
    9. ' =' → logprob: -10.809351921081543
    10. '               ' → logprob: -10.934351921081543

Token 105: '           ' (ID: 352)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.039592768996953964
    2. 'start' → logprob: -3.539592742919922
    3. '           ' → logprob: -4.789592742919922
    4. ' s' → logprob: -7.539592742919922
    5. '               ' → logprob: -7.914592742919922
    6. ' step' → logprob: -8.914592742919922
    7. '            ' → logprob: -9.164592742919922
    8. '   ' → logprob: -9.789592742919922
    9. ' (' → logprob: -9.789592742919922
    10. '       ' → logprob: -9.914592742919922

Token 106: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.5231430530548096
    2. 'start' (adapté à ' start') → logprob: -0.8981430530548096
    3. 's' → logprob: -12.02314281463623
    4. ' s' → logprob: -12.39814281463623
    5. ' ' → logprob: -12.64814281463623
    6. ' step' → logprob: -13.52314281463623
    7. '   ' → logprob: -13.52314281463623
    8. '(start' → logprob: -14.02314281463623
    9. 'step' → logprob: -14.52314281463623
    10. ' ' → logprob: -15.02314281463623

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05489661172032356
    2. '=' → logprob: -2.929896593093872
    3. ' +=' → logprob: -11.554896354675293
    4. '+=' → logprob: -12.429896354675293
    5. ' ' → logprob: -15.429896354675293
    6. ' =(' → logprob: -15.679896354675293
    7. '＝' → logprob: -16.17989730834961
    8. 's' → logprob: -16.42989730834961
    9. ' -=' → logprob: -16.92989730834961
    10. '    ' → logprob: -17.30489730834961

Token 108: ' s' (ID: 265)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.9202793836593628
    2. 's' → logprob: -1.6702793836593628
    3. ' ((' → logprob: -1.6702793836593628
    4. ' (' → logprob: -2.2952795028686523
    5. '(s' → logprob: -2.6702795028686523
    6. ' s' → logprob: -2.9202795028686523
    7. ' ' → logprob: -7.795279502868652
    8. '(((' → logprob: -7.920279502868652
    9. '(' → logprob: -8.045279502868652
    10. '   ' → logprob: -9.295279502868652

Token 109: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.22965991497039795
    2. '+' → logprob: -1.729659914970398
    3. ' -' → logprob: -3.8546600341796875
    4. '-' → logprob: -5.1046600341796875
    5. ' ' → logprob: -8.604660034179688
    6. '+s' → logprob: -9.104660034179688
    7. 's' → logprob: -9.354660034179688
    8. '//' → logprob: -9.604660034179688
    9. ' //' → logprob: -10.229660034179688
    10. '+(' → logprob: -10.229660034179688

Token 110: ' (' (ID: 350)
  Prédit: '(step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(step' → logprob: -0.6468518376350403
    2. 'step' → logprob: -0.8968518376350403
    3. ' step' → logprob: -2.7718517780303955
    4. ' (' → logprob: -5.146852016448975
    5. '(' → logprob: -9.646851539611816
    6. '   ' → logprob: -11.771851539611816
    7. '	step' → logprob: -11.896851539611816
    8. ' ' → logprob: -12.271851539611816
    9. '-step' → logprob: -12.896851539611816
    10. '  ' → logprob: -13.771851539611816

Token 111: 'step' (ID: 17509)
  Prédit: 'step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.003178306156769395
    2. ' step' → logprob: -5.753178119659424
    3. '(step' → logprob: -15.378178596496582
    4. '-step' → logprob: -15.628178596496582
    5. 'tep' → logprob: -16.878177642822266
    6. ' ' → logprob: -17.128177642822266
    7. '	step' → logprob: -17.378177642822266
    8. '   ' → logprob: -18.378177642822266
    9. 'steps' → logprob: -18.628177642822266
    10. '  ' → logprob: -18.753177642822266

Token 112: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.003182348096743226
    2. '-' → logprob: -5.753182411193848
    3. ' ' → logprob: -13.003182411193848
    4. ')' → logprob: -13.253182411193848
    5. '-step' → logprob: -14.753182411193848
    6. ' -(' → logprob: -16.75318145751953
    7. '   ' → logprob: -16.87818145751953
    8. '-s' → logprob: -17.12818145751953
    9. ' )' → logprob: -17.25318145751953
    10. ' step' → logprob: -17.37818145751953

Token 113: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2467653453350067
    2. '(s' → logprob: -1.746765375137329
    3. ' s' → logprob: -3.246765375137329
    4. ' (' → logprob: -5.37176513671875
    5. '(' → logprob: -7.37176513671875
    6. ')' → logprob: -9.62176513671875
    7. '   ' → logprob: -10.37176513671875
    8. ' ' → logprob: -10.49676513671875
    9. ')s' → logprob: -11.62176513671875
    10. '  ' → logprob: -12.18426513671875

Token 114: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.16022828221321106
    2. ' %' → logprob: -1.9102282524108887
    3. '%s' → logprob: -12.535228729248047
    4. ' ' → logprob: -15.410228729248047
    5. ' ' → logprob: -15.785228729248047
    6. '%i' → logprob: -16.910228729248047
    7. '%b' → logprob: -17.035228729248047
    8. '%n' → logprob: -17.660228729248047
    9. '   ' → logprob: -17.660228729248047
    10. '%x' → logprob: -17.910228729248047

Token 115: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.47410789132118225
    2. 'step' → logprob: -0.9741078615188599
    3. ')' → logprob: -10.59910774230957
    4. '(step' → logprob: -12.84910774230957
    5. '	step' → logprob: -14.09910774230957
    6. ' ' → logprob: -14.34910774230957
    7. '_step' → logprob: -14.84910774230957
    8. '%' → logprob: -15.09910774230957
    9. ' )' → logprob: -15.09910774230957
    10. '.step' → logprob: -15.34910774230957

Token 116: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00043639098294079304
    2. ')
' → logprob: -8.000436782836914
    3. '       ' → logprob: -9.500436782836914
    4. ' )' → logprob: -10.625436782836914
    5. '   ' → logprob: -14.250436782836914
    6. ')
' → logprob: -14.625436782836914
    7. '))' → logprob: -15.125436782836914
    8. ')

' → logprob: -15.875436782836914
    9. ')#' → logprob: -16.250436782836914
    10. ')`' → logprob: -16.375436782836914

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29657694697380066
    2. '
' → logprob: -1.671576976776123
    3. '<|end|>' → logprob: -2.921576976776123
    4. '        
' → logprob: -4.921576976776123
    5. '  
' → logprob: -6.171576976776123
    6. '<|end|>' → logprob: -6.296576976776123
    7. ' 
' → logprob: -6.921576976776123
    8. ',' → logprob: -7.671576976776123
    9. ')' → logprob: -7.671576976776123
    10. '
' → logprob: -8.296576499938965

Token 118: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5483797192573547
    2. '
' → logprob: -1.17337965965271
    3. '        
' → logprob: -2.79837965965271
    4. ' if' → logprob: -3.42337965965271
    5. 'if' → logprob: -5.173379898071289
    6. ' 
' → logprob: -5.548379898071289
    7. '        ' → logprob: -6.298379898071289
    8. '<|end|>' → logprob: -6.798379898071289
    9. '  
' → logprob: -6.923379898071289
    10. ' for' → logprob: -7.048379898071289

Token 119: ' vérifier' (ID: 93671)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7104591727256775
    2. 'for' → logprob: -0.8354591727256775
    3. '       ' → logprob: -3.9604592323303223
    4. ' if' → logprob: -4.085459232330322
    5. 'if' → logprob: -4.335459232330322
    6. 'while' → logprob: -4.335459232330322
    7. ' while' → logprob: -4.835459232330322
    8. ' current' → logprob: -6.960459232330322
    9. '#' → logprob: -7.460459232330322
    10. ' i' → logprob: -7.835459232330322

Token 120: ' que' (ID: 661)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02278088591992855
    2. 'if' → logprob: -3.8977808952331543
    3. ' si' → logprob: -6.772780895233154
    4. '       ' → logprob: -7.647780895233154
    5. ' for' → logprob: -8.147780418395996
    6. '<|end|>' → logprob: -9.272780418395996
    7. ' s' → logprob: -10.272780418395996
    8. '   ' → logprob: -10.272780418395996
    9. 'for' → logprob: -10.397780418395996
    10. ',' → logprob: -10.397780418395996

Token 121: ' cet' (ID: 19505)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.4785115420818329
    2. 'start' → logprob: -0.9785115718841553
    3. 'd' → logprob: -6.603511333465576
    4. 'diff' → logprob: -6.603511333465576
    5. ' diff' → logprob: -7.353511333465576
    6. ' d' → logprob: -7.728511333465576
    7. ' ' → logprob: -9.103511810302734
    8. '(start' → logprob: -9.353511810302734
    9. ' ' → logprob: -9.478511810302734
    10. 'stop' → logprob: -9.978511810302734

Token 122: ' arrêt' (ID: 77403)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.9931981563568115
    2. 'arr' → logprob: -1.4931981563568115
    3. ' start' → logprob: -1.7431981563568115
    4. ' stop' → logprob: -2.2431981563568115
    5. ' arrêt' → logprob: -2.9931981563568115
    6. 'stop' → logprob: -3.7431981563568115
    7. '[start' → logprob: -4.868198394775391
    8. 'e' → logprob: -5.368198394775391
    9. ' ' → logprob: -5.368198394775391
    10. 'ar' → logprob: -5.493198394775391

Token 123: ' est' (ID: 893)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.16455309092998505
    2. ' >=' → logprob: -2.664553165435791
    3. ' is' → logprob: -3.164553165435791
    4. '<=' → logprob: -3.664553165435791
    5. ' est' → logprob: -4.664553165435791
    6. '>=' → logprob: -5.914553165435791
    7. ' ' → logprob: -7.039553165435791
    8. ' <' → logprob: -8.414552688598633
    9. '```' → logprob: -8.914552688598633
    10. '<|end|>' → logprob: -8.914552688598633

Token 124: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.664117693901062
    2. '<=' → logprob: -0.789117693901062
    3. ' >=' → logprob: -4.414117813110352
    4. '>=' → logprob: -5.039117813110352
    5. ' inférieur' → logprob: -5.664117813110352
    6. ' between' → logprob: -6.039117813110352
    7. ' compris' → logprob: -6.539117813110352
    8. ' dans' → logprob: -7.039117813110352
    9. ' entre' → logprob: -7.289117813110352
    10. '<' → logprob: -7.289117813110352

Token 125: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.20159314572811127
    2. 'd' → logprob: -1.7015931606292725
    3. ' ' → logprob: -9.201593399047852
    4. ' ' → logprob: -10.201593399047852
    5. '   ' → logprob: -11.326593399047852
    6. 'diff' → logprob: -11.951593399047852
    7. '	d' → logprob: -12.326593399047852
    8. ' diff' → logprob: -12.576593399047852
    9. '  ' → logprob: -12.951593399047852
    10. ' s' → logprob: -13.514093399047852

Token 126: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5776606798171997
    2. '<|end|>' → logprob: -0.9526606798171997
    3. '
' → logprob: -3.57766056060791
    4. '\n' → logprob: -4.57766056060791
    5. '<|end|>' → logprob: -5.57766056060791
    6. ',' → logprob: -5.82766056060791
    7. '        
' → logprob: -6.07766056060791
    8. ' if' → logprob: -6.32766056060791
    9. ':' → logprob: -7.45266056060791
    10. ' and' → logprob: -7.70266056060791

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12013779580593109
    2. '<|end|>' → logprob: -3.1201376914978027
    3. ' and' → logprob: -3.7451376914978027
    4. ' if' → logprob: -3.8701376914978027
    5. '
' → logprob: -4.370137691497803
    6. '\n' → logprob: -5.620137691497803
    7. ',' → logprob: -5.995137691497803
    8. '<|end|>' → logprob: -6.995137691497803
    9. '        
' → logprob: -7.495137691497803
    10. ' or' → logprob: -7.620137691497803

Token 128: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7104799151420593
    2. ' if' → logprob: -0.7104799151420593
    3. 'if' (adapté à ' if') → logprob: -4.585479736328125
    4. '
' → logprob: -5.710479736328125
    5. '<|end|>' → logprob: -6.085479736328125
    6. ' and' → logprob: -8.085479736328125
    7. '        
' → logprob: -8.460479736328125
    8. ' ' → logprob: -8.460479736328125
    9. '<|end|>' → logprob: -9.335479736328125
    10. ',' → logprob: -9.585479736328125

Token 129: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.05506034195423126
    2. 'start' → logprob: -2.930060386657715
    3. ' stop' → logprob: -8.805060386657715
    4. 'stop' → logprob: -11.305060386657715
    5. ' ' → logprob: -12.430060386657715
    6. ' ' → logprob: -12.555060386657715
    7. '(start' → logprob: -12.680060386657715
    8. '[start' → logprob: -14.055060386657715
    9. '	start' → logprob: -14.180060386657715
    10. 'd' → logprob: -14.742560386657715

Token 130: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.013358923606574535
    2. '<=' → logprob: -4.513359069824219
    3. ' >' → logprob: -6.138359069824219
    4. '>' → logprob: -9.263359069824219
    5. ' ' → logprob: -10.013359069824219
    6. ')' → logprob: -13.013359069824219
    7. '<|end|>' → logprob: -13.638359069824219
    8. ' >=' → logprob: -13.763359069824219
    9. ' <' → logprob: -13.763359069824219
    10. ' and' → logprob: -14.513359069824219

Token 131: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.10083777457475662
    2. 'd' → logprob: -2.3508377075195312
    3. ' diff' → logprob: -7.725837707519531
    4. 'diff' → logprob: -8.600837707519531
    5. '	d' → logprob: -12.850837707519531
    6. ' ' → logprob: -13.475837707519531
    7. ' ' → logprob: -13.975837707519531
    8. '	diff' → logprob: -15.600837707519531
    9. '   ' → logprob: -15.725837707519531
    10. ' dif' → logprob: -15.850837707519531

Token 132: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2828385829925537
    2. ':
' → logprob: -1.4078385829925537
    3. '           ' → logprob: -6.532838821411133
    4. ' and' → logprob: -9.532838821411133
    5. '       ' → logprob: -9.782838821411133
    6. ':
' → logprob: -10.782838821411133
    7. '):
' → logprob: -10.782838821411133
    8. ',' → logprob: -11.282838821411133
    9. ':

' → logprob: -11.282838821411133
    10. '):' → logprob: -11.657838821411133

Token 133: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11970331519842148
    2. ':' → logprob: -2.4947032928466797
    3. ':
' → logprob: -3.7447032928466797
    4. '
' → logprob: -5.36970329284668
    5. '            
' → logprob: -7.86970329284668
    6. ',' → logprob: -8.49470329284668
    7. '               ' → logprob: -8.49470329284668
    8. ' :' → logprob: -8.86970329284668
    9. '<|end|>' → logprob: -8.86970329284668
    10. ' :
' → logprob: -9.24470329284668

Token 134: ' #' (ID: 1069)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.1340828686952591
    2. 'time' → logprob: -2.759082794189453
    3. '               ' → logprob: -3.384082794189453
    4. '           ' → logprob: -3.884082794189453
    5. '
' → logprob: -5.259082794189453
    6. ' if' → logprob: -6.384082794189453
    7. '   ' → logprob: -8.634082794189453
    8. 'if' → logprob: -9.259082794189453
    9. '                   ' → logprob: -9.884082794189453
    10. '
' → logprob: -9.884082794189453

Token 135: ' temps' (ID: 11160)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.1093902587890625
    2. 'time' → logprob: -2.3593902587890625
    3. '           ' → logprob: -5.3593902587890625
    4. ' if' → logprob: -6.3593902587890625
    5. '               ' → logprob: -6.9843902587890625
    6. ' diff' → logprob: -8.609390258789062
    7. 'if' → logprob: -8.609390258789062
    8. '   ' → logprob: -8.734390258789062
    9. ' temp' → logprob: -8.734390258789062
    10. ' #' → logprob: -8.984390258789062

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06998367607593536
    2. '=' → logprob: -2.694983720779419
    3. ' ' → logprob: -11.19498348236084
    4. '=min' → logprob: -11.81998348236084
    5. 'min' → logprob: -12.19498348236084
    6. '   ' → logprob: -12.31998348236084
    7. '    ' → logprob: -12.69498348236084
    8. ' +=' → logprob: -13.19498348236084
    9. ' ' → logprob: -13.69498348236084
    10. '=time' → logprob: -14.50748348236084

Token 137: ' nombre' (ID: 9733)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.1606874465942383
    2. 'min' → logprob: -1.6606874465942383
    3. 'start' → logprob: -1.9106874465942383
    4. 'n' → logprob: -2.7856874465942383
    5. '(diff' → logprob: -3.1606874465942383
    6. ' diff' → logprob: -3.1606874465942383
    7. 'd' → logprob: -3.6606874465942383
    8. '(start' → logprob: -3.6606874465942383
    9. 'step' → logprob: -3.7856874465942383
    10. ' min' → logprob: -3.7856874465942383

Token 138: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.1622079610824585
    2. '_de' → logprob: -1.5372079610824585
    3. ' =' → logprob: -1.5372079610824585
    4. ' d' → logprob: -2.537208080291748
    5. ' de' → logprob: -2.662208080291748
    6. '_steps' → logprob: -3.162208080291748
    7. 'd' → logprob: -4.162208080291748
    8. '=' → logprob: -4.162208080291748
    9. '_stop' → logprob: -5.162208080291748
    10. '_st' → logprob: -5.162208080291748

Token 139: ''inter' (ID: 55731)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.35712674260139465
    2. 'arr' → logprob: -2.1071267127990723
    3. 'de' → logprob: -3.4821267127990723
    4. ' ' → logprob: -3.8571267127990723
    5. ' de' → logprob: -3.9821267127990723
    6. '_' → logprob: -4.357126712799072
    7. '<|end|>' → logprob: -4.482126712799072
    8. '_steps' → logprob: -4.607126712799072
    9. ' ar' → logprob: -4.732126712799072
    10. '_arr' → logprob: -5.607126712799072

Token 140: 'v' (ID: 85)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6236069202423096
    2. 'v' → logprob: -1.4986069202423096
    3. 'actions' → logprob: -2.6236069202423096
    4. 'rupt' → logprob: -2.9986069202423096
    5. 'vals' → logprob: -2.9986069202423096
    6. 'ations' → logprob: -3.9986069202423096
    7. 'arr' → logprob: -4.8736066818237305
    8. 's' → logprob: -5.3736066818237305
    9. 'ventions' → logprob: -5.4986066818237305
    10. 'r' → logprob: -5.8736066818237305

Token 141: 'alles' (ID: 28825)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.7097171545028687
    2. 'alles' → logprob: -0.8347171545028687
    3. 'als' → logprob: -3.584717273712158
    4. 'ales' → logprob: -3.709717273712158
    5. 'val' → logprob: -4.459717273712158
    6. 'les' → logprob: -6.084717273712158
    7. 'aux' → logprob: -6.584717273712158
    8. 'v' → logprob: -7.334717273712158
    9. 'res' → logprob: -7.459717273712158
    10. 'vals' → logprob: -7.709717273712158

Token 142: ' entre' (ID: 3853)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.03736474737524986
    2. '*' → logprob: -3.6623647212982178
    3. ' =' → logprob: -5.287364959716797
    4. ' +' → logprob: -6.662364959716797
    5. '=' → logprob: -6.787364959716797
    6. '           ' → logprob: -7.287364959716797
    7. ' (' → logprob: -7.287364959716797
    8. '+' → logprob: -7.412364959716797
    9. '*(' → logprob: -8.162364959716797
    10. '((' → logprob: -8.412364959716797

Token 143: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.2909606099128723
    2. ' start' → logprob: -1.4159605503082275
    3. 'arr' → logprob: -5.915960788726807
    4. 's' → logprob: -6.290960788726807
    5. 'st' → logprob: -6.665960788726807
    6. ' s' → logprob: -6.665960788726807
    7. ' stops' → logprob: -6.915960788726807
    8. 'stop' → logprob: -7.915960788726807
    9. ' arr' → logprob: -8.290960311889648
    10. ' les' → logprob: -9.040960311889648

Token 144: ' et' (ID: 859)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.02698189578950405
    2. '*' → logprob: -3.651981830596924
    3. '           ' → logprob: -8.776982307434082
    4. ' +' → logprob: -8.901982307434082
    5. '<|end|>' → logprob: -9.401982307434082
    6. ' ' → logprob: -9.651982307434082
    7. ')' → logprob: -9.651982307434082
    8. '*(' → logprob: -10.276982307434082
    9. ',' → logprob: -10.776982307434082
    10. 'times' → logprob: -10.901982307434082

Token 145: ' d' (ID: 272)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.30987516045570374
    2. ' start' → logprob: -1.6848751306533813
    3. 'd' → logprob: -2.809875249862671
    4. ' d' → logprob: -4.559875011444092
    5. '(start' → logprob: -5.309875011444092
    6. ' (' → logprob: -6.059875011444092
    7. 'diff' → logprob: -6.184875011444092
    8. ' diff' → logprob: -8.05987548828125
    9. ' ' → logprob: -9.18487548828125
    10. 'stop' → logprob: -9.30987548828125

Token 146: '
' (ID: 198)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.11513666063547134
    2. '           ' → logprob: -2.3651366233825684
    3. '*' → logprob: -4.365136623382568
    4. ' +' → logprob: -6.740136623382568
    5. '*(' → logprob: -7.740136623382568
    6. ' =' → logprob: -8.240137100219727
    7. '=' → logprob: -10.240137100219727
    8. 'times' → logprob: -10.740137100219727
    9. '               ' → logprob: -10.865137100219727
    10. '+' → logprob: -10.865137100219727

Token 147: '           ' (ID: 352)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.03105572797358036
    2. '*' → logprob: -4.031055927276611
    3. '           ' → logprob: -4.531055927276611
    4. ' +' → logprob: -6.656055927276611
    5. '+' → logprob: -8.781055450439453
    6. ' ' → logprob: -9.031055450439453
    7. ' =' → logprob: -9.531055450439453
    8. ' ' → logprob: -9.656055450439453
    9. '*(' → logprob: -9.906055450439453
    10. ' #' → logprob: -9.906055450439453

Token 148: ' t' (ID: 260)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.08165138214826584
    2. 'time' → logprob: -2.581651449203491
    3. '           ' → logprob: -6.081651210784912
    4. ' times' → logprob: -9.08165168762207
    5. 'times' → logprob: -9.83165168762207
    6. ' step' → logprob: -10.20665168762207
    7. '               ' → logprob: -10.45665168762207
    8. '            ' → logprob: -10.83165168762207
    9. ' (' → logprob: -10.83165168762207
    10. ' temp' → logprob: -10.95665168762207

Token 149: ' =' (ID: 314)
  Prédit: 'ime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.3720303177833557
    2. ' =' → logprob: -1.372030258178711
    3. '=' → logprob: -2.997030258178711
    4. ' +=' → logprob: -5.747030258178711
    5. 'imes' → logprob: -6.372030258178711
    6. 'emp' → logprob: -6.747030258178711
    7. '+=' → logprob: -7.497030258178711
    8. 'im' → logprob: -8.622030258178711
    9. 'me' → logprob: -10.372030258178711
    10. '+' → logprob: -10.372030258178711

Token 150: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.18524639308452606
    2. '(d' → logprob: -1.8102463483810425
    3. '(diff' → logprob: -5.310246467590332
    4. '(start' → logprob: -7.810246467590332
    5. '(abs' → logprob: -10.185246467590332
    6. '   ' → logprob: -10.560246467590332
    7. ' ' → logprob: -11.810246467590332
    8. 'diff' → logprob: -11.810246467590332
    9. '(f' → logprob: -11.935246467590332
    10. '(end' → logprob: -12.185246467590332

Token 151: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.014292670413851738
    2. '(d' → logprob: -4.2642927169799805
    3. ' d' → logprob: -9.76429271697998
    4. '   ' → logprob: -10.26429271697998
    5. ' (' → logprob: -10.63929271697998
    6. 'diff' → logprob: -12.76429271697998
    7. '       ' → logprob: -13.63929271697998
    8. ' ' → logprob: -13.76429271697998
    9. '	d' → logprob: -13.76429271697998
    10. '(' → logprob: -13.88929271697998

Token 152: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0028500445187091827
    2. '-' → logprob: -5.87785005569458
    3. ' ' → logprob: -10.627849578857422
    4. '-start' → logprob: -11.002849578857422
    5. '   ' → logprob: -13.252849578857422
    6. '-step' → logprob: -14.502849578857422
    7. '[start' → logprob: -14.627849578857422
    8. '
' → logprob: -15.002849578857422
    9. 'start' → logprob: -15.502849578857422
    10. '```' → logprob: -16.002849578857422

Token 153: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.002185472520068288
    2. ' start' → logprob: -6.127185344696045
    3. ')' → logprob: -16.127185821533203
    4. '[start' → logprob: -17.127185821533203
    5. ' ' → logprob: -17.252185821533203
    6. '   ' → logprob: -17.502185821533203
    7. '(start' → logprob: -17.502185821533203
    8. '
' → logprob: -17.877185821533203
    9. '	start' → logprob: -18.127185821533203
    10. 'Start' → logprob: -19.002185821533203

Token 154: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005173277575522661
    2. ')//' → logprob: -5.380173206329346
    3. ' )' → logprob: -7.505173206329346
    4. '//' → logprob: -13.755173683166504
    5. ')
' → logprob: -14.630173683166504
    6. '+' → logprob: -14.630173683166504
    7. ')#' → logprob: -14.880173683166504
    8. ' //' → logprob: -15.755173683166504
    9. ')>>' → logprob: -16.755172729492188
    10. '#' → logprob: -16.880172729492188

Token 155: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.693159818649292
    2. ' //' → logprob: -0.693159818649292
    3. '```' → logprob: -12.568160057067871
    4. ')' → logprob: -13.193160057067871
    5. ' ' → logprob: -13.443160057067871
    6. ' step' → logprob: -13.568160057067871
    7. '
' → logprob: -13.693160057067871
    8. '//
' → logprob: -14.193160057067871
    9. ' //
' → logprob: -14.568160057067871
    10. '`' → logprob: -14.943160057067871

Token 156: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.0005547016044147313
    2. ' step' → logprob: -7.50055456161499
    3. '(step' → logprob: -14.375555038452148
    4. ' ' → logprob: -15.000555038452148
    5. '   ' → logprob: -15.750555038452148
    6. '2' → logprob: -16.12555503845215
    7. 'start' → logprob: -16.37555503845215
    8. '           ' → logprob: -16.37555503845215
    9. '       ' → logprob: -16.75055503845215
    10. '	step' → logprob: -16.75055503845215

Token 157: ' +' (ID: 659)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2595013380050659
    2. '
' → logprob: -1.509501338005066
    3. '+' → logprob: -6.1345014572143555
    4. '
' → logprob: -6.2595014572143555
    5. ' +' → logprob: -6.8845014572143555
    6. '            
' → logprob: -7.2595014572143555
    7. '<|end|>' → logprob: -7.7595014572143555
    8. ' 
' → logprob: -7.8845014572143555
    9. '  
' → logprob: -8.759501457214355
    10. '       ' → logprob: -9.009501457214355

Token 158: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008877566433511674
    2. ' ' → logprob: -7.125887870788574
    3. '0' → logprob: -10.000887870788574
    4. '2' → logprob: -10.500887870788574
    5. '   ' → logprob: -12.375887870788574
    6. '(' → logprob: -13.125887870788574
    7. ' (' → logprob: -14.125887870788574
    8. 's' → logprob: -14.250887870788574
    9. '10' → logprob: -14.375887870788574
    10. 'abs' → logprob: -15.375887870788574

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010076811304315925
    2. ' ' → logprob: -7.501007556915283
    3. '0' → logprob: -8.251008033752441
    4. '2' → logprob: -9.501008033752441
    5. '(' → logprob: -10.501008033752441
    6. '(n' → logprob: -10.876008033752441
    7. 'n' → logprob: -11.001008033752441
    8. 's' → logprob: -11.376008033752441
    9. '(s' → logprob: -11.626008033752441
    10. ' (' → logprob: -12.001008033752441

Token 160: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18111324310302734
    2. '
' → logprob: -1.8061132431030273
    3. '
' → logprob: -7.681113243103027
    4. '       ' → logprob: -7.931113243103027
    5. '            
' → logprob: -8.181113243103027
    6. ' if' → logprob: -9.306113243103027
    7. '<|end|>' → logprob: -10.181113243103027
    8. '    
' → logprob: -10.806113243103027
    9. '        
' → logprob: -11.056113243103027
    10. '               ' → logprob: -11.056113243103027

Token 161: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03217316418886185
    2. '       ' → logprob: -3.5321731567382812
    3. '
' → logprob: -6.407173156738281
    4. ' if' → logprob: -8.157173156738281
    5. 'if' → logprob: -8.407173156738281
    6. '   ' → logprob: -8.782173156738281
    7. '<|end|>' → logprob: -10.657173156738281
    8. '            
' → logprob: -10.782173156738281
    9. '        
' → logprob: -11.282173156738281
    10. '
' → logprob: -11.282173156738281

Token 162: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6746132373809814
    2. '           ' → logprob: -1.0496132373809814
    3. 'if' (adapté à ' if') → logprob: -2.0496132373809814
    4. '
' → logprob: -4.799612998962402
    5. ' time' → logprob: -6.549612998962402
    6. 'time' → logprob: -6.674612998962402
    7. '       ' → logprob: -7.674612998962402
    8. '   ' → logprob: -8.299612998962402
    9. '               ' → logprob: -10.424612998962402
    10. '            
' → logprob: -10.799612998962402

Token 163: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.3133125901222229
    2. 't' → logprob: -1.3133125305175781
    3. ' ' → logprob: -11.063312530517578
    4. ' ' → logprob: -11.188312530517578
    5. 'time' → logprob: -11.813312530517578
    6. ' time' → logprob: -12.313312530517578
    7. '   ' → logprob: -12.688312530517578
    8. '	t' → logprob: -12.813312530517578
    9. '<t' → logprob: -13.938312530517578
    10. '  ' → logprob: -14.875812530517578

Token 164: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0017275377176702023
    2. '<' → logprob: -6.37672758102417
    3. ' ' → logprob: -10.876727104187012
    4. ' >' → logprob: -13.126727104187012
    5. ' *' → logprob: -13.501727104187012
    6. '*' → logprob: -14.376727104187012
    7. 'time' → logprob: -14.626727104187012
    8. ')' → logprob: -14.626727104187012
    9. ' time' → logprob: -15.626727104187012
    10. ' <
' → logprob: -15.626727104187012

Token 165: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.06196914613246918
    2. ' time' → logprob: -2.811969041824341
    3. '   ' → logprob: -14.311968803405762
    4. ' ' → logprob: -15.061968803405762
    5. '	time' → logprob: -15.061968803405762
    6. ' ' → logprob: -17.186969757080078
    7. '"time' → logprob: -17.186969757080078
    8. 't' → logprob: -17.436969757080078
    9. '=time' → logprob: -17.811969757080078
    10. 'times' → logprob: -17.811969757080078

Token 166: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6932716369628906
    2. ':
' → logprob: -0.6932716369628906
    3. ':
' → logprob: -9.19327163696289
    4. '):
' → logprob: -11.56827163696289
    5. '           ' → logprob: -12.06827163696289
    6. '       ' → logprob: -13.19327163696289
    7. '               ' → logprob: -13.56827163696289
    8. '):' → logprob: -13.69327163696289
    9. '   ' → logprob: -14.31827163696289
    10. ' :
' → logprob: -14.44327163696289

Token 167: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15227197110652924
    2. '           ' → logprob: -2.0272719860076904
    3. ' time' → logprob: -4.902271747589111
    4. 'time' → logprob: -6.527271747589111
    5. '       ' → logprob: -8.77727222442627
    6. '                   ' → logprob: -9.02727222442627
    7. '   ' → logprob: -9.52727222442627
    8. '	       ' → logprob: -10.40227222442627
    9. '	time' → logprob: -10.52727222442627
    10. '"time' → logprob: -10.65227222442627

Token 168: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.0642792135477066
    2. 'time' (adapté à ' time') → logprob: -2.939279317855835
    3. '               ' → logprob: -4.689279079437256
    4. '   ' → logprob: -9.814279556274414
    5. '           ' → logprob: -9.814279556274414
    6. '                   ' → logprob: -10.439279556274414
    7. '       ' → logprob: -11.439279556274414
    8. '	time' → logprob: -11.939279556274414
    9. ' ' → logprob: -13.814279556274414
    10. '
' → logprob: -14.689279556274414

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804171830415726
    2. '=' → logprob: -3.288041830062866
    3. ' ' → logprob: -15.788042068481445
    4. ' =
' → logprob: -16.413042068481445
    5. ',' → logprob: -17.413042068481445
    6. '=time' → logprob: -17.413042068481445
    7. '＝' → logprob: -17.788042068481445
    8. ' =
' → logprob: -18.038042068481445
    9. ' =)' → logprob: -18.788042068481445
    10. '=int' → logprob: -18.913042068481445

Token 170: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07888989895582199
    2. ' t' → logprob: -2.578889846801758
    3. '	t' → logprob: -16.078889846801758
    4. ' ' → logprob: -17.328889846801758
    5. ' ' → logprob: -18.203889846801758
    6. '`t' → logprob: -18.703889846801758
    7. 'time' → logprob: -18.953889846801758
    8. '_t' → logprob: -19.203889846801758
    9. '
' → logprob: -19.578889846801758
    10. '   ' → logprob: -19.953889846801758

Token 171: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7193182110786438
    2. 'print' → logprob: -1.469318151473999
    3. '<|end|>' → logprob: -1.469318151473999
    4. '   ' → logprob: -3.344318151473999
    5. ')' → logprob: -4.969318389892578
    6. '\n' → logprob: -5.094318389892578
    7. ' print' → logprob: -6.844318389892578
    8. '    
' → logprob: -7.094318389892578
    9. '  
' → logprob: -7.594318389892578
    10. '```' → logprob: -7.719318389892578

Token 173: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00449325842782855
    2. ' print' → logprob: -5.629493236541748
    3. '   ' → logprob: -7.379493236541748
    4. '
' → logprob: -8.379493713378906
    5. ')' → logprob: -10.754493713378906
    6. '    
' → logprob: -12.254493713378906
    7. ' 
' → logprob: -12.504493713378906
    8. '```' → logprob: -13.004493713378906
    9. '  
' → logprob: -13.504493713378906
    10. '\n' → logprob: -13.754493713378906

Token 174: '(time' (ID: 19192)
  Prédit: '(time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(time' → logprob: -0.00026526954025030136
    2. '(' → logprob: -8.250265121459961
    3. 'time' → logprob: -12.625265121459961
    4. ' (' → logprob: -15.125265121459961
    5. '()' → logprob: -15.625265121459961
    6. '(f' → logprob: -15.875265121459961
    7. '('' → logprob: -17.37526512145996
    8. '(
' → logprob: -17.87526512145996
    9. '(t' → logprob: -18.00026512145996
    10. '(times' → logprob: -18.25026512145996

Token 175: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.500000953674316
    3. ')
' → logprob: -15.250000953674316
    4. ')`' → logprob: -17.125
    5. '')' → logprob: -17.625
    6. '`)' → logprob: -17.75
    7. '))' → logprob: -17.875
    8. '()' → logprob: -18.125
    9. '())' → logprob: -19.0
    10. '}' → logprob: -19.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 173
Tokens correctement prédits (1ère position, stricte): 60
Tokens correctement prédits (1ère position, avec adaptation): 61
Tokens correctement prédits (top 10): 124
Précision stricte (1ère position): 34.68%
Précision adaptée (1ère position): 35.26%
Précision (top 10): 71.68%
================================================================================
