================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from abc import ABC, abstractmethod
from typing import List, Tuple

class EquationSystem(ABC):
    @abstractmethod
    def solve(self) -> Tuple[float, float]:
        pass

class TwoVariableLinearSystem(EquationSystem):
    def __init__(self, coefficients: List[float]):
        if len(coefficients) != 6:
            raise ValueError("Exactly six coefficients must be provided.")
        self.a, self.b, self.c, self.d, self.e, self.f = coefficients
    
    def _determinant(self) -> float:
        return self.a * self.e - self.b * self.d
    
    def solve(self) -> Tuple[float, float]:
        det = self._determinant()
        if det == 0:
            raise ValueError("The system does not have a unique solution.")
        x = (self.c * self.e - self.b * self.f) / det
        y = (self.a * self.f - self.c * self.d) / det
        return (x, y)

class Formatter(ABC):
    @abstractmethod
    def format(self, values: Tuple[float, ...]) -> str:
        pass

class FixedDecimalFormatter(Formatter):
    def __init__(self, precision: int):
        self.precision = precision
        self.format_string = "{0:." + str(precision) + "f}"
    
    def format(self, values: Tuple[float, ...]) -> str:
        return " ".join(self.format_string.format(v) for v in values)

class EquationSolverEngine:
    def __init__(self, system_factory, formatter: Formatter):
        self.system_factory = system_factory
        self.formatter = formatter
    
    def process_input_line(self, line: str) -> str:
        tokens = line.strip().split()
        if len(tokens) != 6:
            raise ValueError("Each input line must have exactly six numbers.")
        coefficients = list(map(float, tokens))
        system = self.system_factory(coefficients)
        solution = system.solve()
        return self.formatter.format(solution)
    
    def run(self):
        for line in sys.stdin:
            line = line.strip()
            if not line:
                continue
            try:
                output = self.process_input_line(line)
                print(output)
            except Exception as e:
                # For this problem, we assume unique solutions, so no error handling needed
                # But in real case, we might want to log or handle error differently
                print(f"Error: {e}", file=sys.stderr)

if __name__ == "__main__":
    solver_engine = EquationSolverEngine(TwoVariableLinearSystem, FixedDecimalFormatter(3))
    solver_engine.run()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6405025720596313
    2. '.' → logprob: -0.8905025720596313
    3. 'import' → logprob: -4.015502452850342
    4. 'newline' → logprob: -4.265502452850342
    5. '\' → logprob: -4.765502452850342
    6. '<|end|>' → logprob: -5.015502452850342
    7. '```' → logprob: -5.390502452850342
    8. '
' → logprob: -5.765502452850342
    9. '<|end|>' → logprob: -6.515502452850342
    10. '' → logprob: -6.515502452850342

Token 4: ' abc' (ID: 75094)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.01866091787815094
    2. 'os' → logprob: -4.143661022186279
    3. ' collections' → logprob: -7.518661022186279
    4. ' pathlib' → logprob: -7.768661022186279
    5. ' Py' → logprob: -7.893661022186279
    6. ' ' → logprob: -8.393660545349121
    7. ' math' → logprob: -8.393660545349121
    8. 'collections' → logprob: -8.893660545349121
    9. ' datetime' → logprob: -9.143660545349121
    10. ' typing' → logprob: -9.518660545349121

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5076232552528381
    2. '.' → logprob: -2.0076231956481934
    3. ' .' → logprob: -2.0076231956481934
    4. 'import' → logprob: -2.1326231956481934
    5. ' ' → logprob: -5.382623195648193
    6. '.import' → logprob: -5.382623195648193
    7. '	import' → logprob: -6.882623195648193
    8. '.abstract' → logprob: -8.257623672485352
    9. '_import' → logprob: -9.007623672485352
    10. '.A' → logprob: -10.007623672485352

Token 6: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.000931825372390449
    2. 'ABC' → logprob: -7.000931739807129
    3. ' A' → logprob: -11.875931739807129
    4. ' ' → logprob: -12.125931739807129
    5. ' ' → logprob: -12.500931739807129
    6. ' abstract' → logprob: -13.000931739807129
    7. 'abstract' → logprob: -13.750931739807129
    8. ' AB' → logprob: -14.875931739807129
    9. 'abc' → logprob: -15.375931739807129
    10. ' abc' → logprob: -16.125932693481445

Token 7: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03329315409064293
    2. 'import' → logprob: -4.0332932472229
    3. ',' → logprob: -5.1582932472229
    4. '<|end|>' → logprob: -5.6582932472229
    5. ' import' → logprob: -6.0332932472229
    6. '.import' → logprob: -6.6582932472229
    7. '```' → logprob: -7.4082932472229
    8. ' ' → logprob: -7.9082932472229
    9. ' .' → logprob: -8.283292770385742
    10. '.A' → logprob: -8.908292770385742

Token 8: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.2519293427467346
    2. ' abstract' → logprob: -1.5019292831420898
    3. 'Abstract' → logprob: -15.87692928314209
    4. ' ABC' → logprob: -16.876930236816406
    5. '.abstract' → logprob: -17.126930236816406
    6. 'ABC' → logprob: -18.751930236816406
    7. ' abstr' → logprob: -19.001930236816406
    8. 'abc' → logprob: -19.251930236816406
    9. ' ' → logprob: -19.626930236816406
    10. '```' → logprob: -19.751930236816406

Token 9: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.002942517166957259
    2. 'classmethod' → logprob: -6.6279425621032715
    3. 'm' → logprob: -7.1279425621032715
    4. 'class' → logprob: -8.377942085266113
    5. 'meth' → logprob: -8.752942085266113
    6. '_' → logprob: -9.002942085266113
    7. 'staticmethod' → logprob: -10.002942085266113
    8. 'base' → logprob: -10.377942085266113
    9. 'import' → logprob: -10.377942085266113
    10. ' ' → logprob: -10.502942085266113

Token 10: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6750994324684143
    2. '

' → logprob: -0.9250994324684143
    3. '```' → logprob: -2.8000993728637695
    4. '\n' → logprob: -4.0500993728637695
    5. 'class' → logprob: -4.8000993728637695
    6. '' → logprob: -5.5500993728637695
    7. '<|end|>' → logprob: -6.8000993728637695
    8. '
' → logprob: -7.5500993728637695
    9. '``' → logprob: -7.6750993728637695
    10. ' class' → logprob: -7.9250993728637695

Token 11: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.34247422218322754
    2. '
' → logprob: -1.3424742221832275
    3. 'class' → logprob: -4.342473983764648
    4. '```' → logprob: -4.467473983764648
    5. '\n' → logprob: -6.592473983764648
    6. '' → logprob: -6.967473983764648
    7. '


' → logprob: -7.592473983764648
    8. '
' → logprob: -7.842473983764648
    9. ' class' → logprob: -8.092473983764648
    10. '``' → logprob: -8.342473983764648

Token 12: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.4004145860671997
    2. ' os' → logprob: -1.9004145860671997
    3. ' collections' → logprob: -2.27541446685791
    4. ' abc' → logprob: -3.77541446685791
    5. ' io' → logprob: -3.90041446685791
    6. ' pathlib' → logprob: -4.27541446685791
    7. 'typing' → logprob: -5.15041446685791
    8. ' dat' → logprob: -5.27541446685791
    9. 'collections' → logprob: -5.52541446685791
    10. ' datetime' → logprob: -6.65041446685791

Token 13: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.026049915701150894
    2. 'import' → logprob: -3.901049852371216
    3. '.' → logprob: -5.901050090789795
    4. ' ' → logprob: -6.401050090789795
    5. '<|end|>' → logprob: -7.276050090789795
    6. '[' → logprob: -9.276049613952637
    7. '.import' → logprob: -10.026049613952637
    8. ',' → logprob: -10.026049613952637
    9. ' as' → logprob: -10.151049613952637
    10. '<|end|>' → logprob: -10.526049613952637

Token 14: ' List' (ID: 2655)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.3335501253604889
    2. ' ' → logprob: -1.5835500955581665
    3. ' Union' → logprob: -3.333550214767456
    4. ' List' → logprob: -3.583550214767456
    5. 'Any' → logprob: -5.583549976348877
    6. ' Iterable' → logprob: -5.833549976348877
    7. ' space' → logprob: -6.083549976348877
    8. ' Optional' → logprob: -6.333549976348877
    9. ' Protocol' → logprob: -7.208549976348877
    10. ' A' → logprob: -7.208549976348877

Token 15: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.12811431288719177
    2. '
' → logprob: -2.2531142234802246
    3. '\n' → logprob: -5.128114223480225
    4. 'class' → logprob: -5.253114223480225
    5. '```' → logprob: -6.128114223480225
    6. '


' → logprob: -6.753114223480225
    7. 'import' → logprob: -9.003114700317383
    8. '' → logprob: -9.128114700317383
    9. '
' → logprob: -9.378114700317383
    10. '\' → logprob: -9.753114700317383

Token 16: ' Tuple' (ID: 50841)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -1.0746121406555176
    2. ' Union' → logprob: -1.4496121406555176
    3. ' Any' → logprob: -2.0746121406555176
    4. 'Optional' → logprob: -2.0746121406555176
    5. 'Any' → logprob: -2.3246121406555176
    6. 'Union' → logprob: -3.1996121406555176
    7. ' Dict' → logprob: -4.824612140655518
    8. 'Tuple' → logprob: -4.949612140655518
    9. 'Dict' → logprob: -5.324612140655518
    10. ' Tuple' → logprob: -5.324612140655518

Token 17: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.2890843152999878
    2. '
' → logprob: -2.0390844345092773
    3. 'class' → logprob: -2.2890844345092773
    4. '```' → logprob: -4.414084434509277
    5. '\n' → logprob: -5.164084434509277
    6. '


' → logprob: -7.664084434509277
    7. ' class' → logprob: -7.789084434509277
    8. '' → logprob: -8.789084434509277
    9. '``' → logprob: -8.789084434509277
    10. '
' → logprob: -9.039084434509277

Token 18: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.04005912318825722
    2. '
' → logprob: -3.2900590896606445
    3. '\n' → logprob: -6.9150590896606445
    4. '```' → logprob: -7.2900590896606445
    5. '

' → logprob: -8.415059089660645
    6. ' class' → logprob: -9.915059089660645
    7. '
' → logprob: -10.915059089660645
    8. '<class' → logprob: -11.165059089660645
    9. '``' → logprob: -11.290059089660645
    10. '  
' → logprob: -12.290059089660645

Token 19: ' Equation' (ID: 180687)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0001431114797014743
    2. ' Basic' → logprob: -10.375143051147461
    3. ' Abstract' → logprob: -10.375143051147461
    4. ' ' → logprob: -10.625143051147461
    5. ' Processor' → logprob: -11.625143051147461
    6. ' Serializer' → logprob: -11.875143051147461
    7. ' My' → logprob: -12.000143051147461
    8. ' Space' → logprob: -12.125143051147461
    9. ' Parser' → logprob: -12.750143051147461
    10. ' )' → logprob: -13.000143051147461

Token 20: 'System' (ID: 3320)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04957549273967743
    2. ':' → logprob: -3.0495755672454834
    3. '(Abstract' → logprob: -7.049575328826904
    4. 'Abstract' → logprob: -11.049575805664062
    5. ' (' → logprob: -11.424575805664062
    6. 'Solver' → logprob: -11.424575805664062
    7. '(Base' → logprob: -12.049575805664062
    8. 'Base' → logprob: -12.049575805664062
    9. ' :' → logprob: -12.299575805664062
    10. 'Form' → logprob: -12.424575805664062

Token 21: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5767858028411865
    2. '(' → logprob: -0.8267858028411865
    3. '(Abstract' → logprob: -7.326786041259766
    4. ' :' → logprob: -9.451786041259766
    5. '():' → logprob: -9.951786041259766
    6. '(:' → logprob: -11.201786041259766
    7. ':**' → logprob: -11.326786041259766
    8. ':
' → logprob: -11.951786041259766
    9. '):' → logprob: -12.326786041259766
    10. '(object' → logprob: -12.576786041259766

Token 22: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.10025616735219955
    2. ' ABC' → logprob: -2.3502562046051025
    3. ')' → logprob: -11.100255966186523
    4. 'AB' → logprob: -11.350255966186523
    5. 'abc' → logprob: -11.600255966186523
    6. 'Abstract' → logprob: -12.225255966186523
    7. 'ABCDE' → logprob: -13.100255966186523
    8. '):' → logprob: -13.350255966186523
    9. '   ' → logprob: -13.725255966186523
    10. 'A' → logprob: -14.350255966186523

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002278127009049058
    2. ')' → logprob: -6.1272783279418945
    3. ':' → logprob: -9.502278327941895
    4. ' ):' → logprob: -11.752278327941895
    5. ')>' → logprob: -12.877278327941895
    6. ',' → logprob: -13.002278327941895
    7. '):
' → logprob: -13.127278327941895
    8. '>):' → logprob: -14.502278327941895
    9. '):

' → logprob: -14.752278327941895
    10. '():' → logprob: -14.877278327941895

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2234516739845276
    2. ':' → logprob: -1.7234516143798828
    3. '
' → logprob: -4.723451614379883
    4. '    
' → logprob: -5.598451614379883
    5. '    ' → logprob: -6.098451614379883
    6. ' :' → logprob: -6.473451614379883
    7. '```' → logprob: -6.973451614379883
    8. ' 
' → logprob: -7.223451614379883
    9. '<|end|>' → logprob: -7.473451614379883
    10. ' ' → logprob: -7.473451614379883

Token 25: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4117496907711029
    2. 'def' → logprob: -2.6617496013641357
    3. '    ' → logprob: -2.9117496013641357
    4. ' def' → logprob: -2.9117496013641357
    5. '    
' → logprob: -3.0367496013641357
    6. '
' → logprob: -3.0367496013641357
    7. '\n' → logprob: -3.7867496013641357
    8. ':' → logprob: -4.036749839782715
    9. ' 
' → logprob: -4.911749839782715
    10. ' ' → logprob: -6.036749839782715

Token 26: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -3.297462171758525e-05
    2. 'ab' → logprob: -10.875033378601074
    3. 'abs' → logprob: -11.250033378601074
    4. 'abc' → logprob: -14.500033378601074
    5. 'staticmethod' → logprob: -15.500033378601074
    6. ' abstract' → logprob: -16.750032424926758
    7. 'a' → logprob: -17.000032424926758
    8. 'classmethod' → logprob: -17.500032424926758
    9. '.abstract' → logprob: -17.625032424926758
    10. 'absolute' → logprob: -18.250032424926758

Token 27: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.0002124806633219123
    2. '_method' → logprob: -8.625212669372559
    3. 'meth' → logprob: -10.500212669372559
    4. '.method' → logprob: -12.875212669372559
    5. 'classmethod' → logprob: -14.125212669372559
    6. 'Method' → logprob: -14.375212669372559
    7. ' method' → logprob: -14.750212669372559
    8. '	method' → logprob: -15.375212669372559
    9. 'staticmethod' → logprob: -15.750212669372559
    10. 'ethod' → logprob: -15.750212669372559

Token 28: '
' (ID: 198)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.9316199421882629
    2. 'def' → logprob: -1.1816198825836182
    3. '(' → logprob: -1.4316198825836182
    4. ' ' → logprob: -3.181619882583618
    5. '\' → logprob: -5.556620121002197
    6. '   ' → logprob: -5.556620121002197
    7. ' (' → logprob: -5.681620121002197
    8. '<|end|>' → logprob: -6.306620121002197
    9. '    ' → logprob: -6.431620121002197
    10. ')' → logprob: -6.806620121002197

Token 29: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09169285744428635
    2. ' def' → logprob: -2.7166929244995117
    3. '
' → logprob: -4.466692924499512
    4. '(' → logprob: -5.591692924499512
    5. 'method' → logprob: -5.716692924499512
    6. '\' → logprob: -6.966692924499512
    7. '    
' → logprob: -7.466692924499512
    8. '   ' → logprob: -7.716692924499512
    9. '	def' → logprob: -9.091692924499512
    10. 'classmethod' → logprob: -9.216692924499512

Token 30: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.007121918722987175
    2. ' def' → logprob: -5.632122039794922
    3. 'classmethod' → logprob: -5.882122039794922
    4. 'abstract' → logprob: -8.257122039794922
    5. 'property' → logprob: -8.757122039794922
    6. 'staticmethod' → logprob: -8.757122039794922
    7. 'method' → logprob: -9.382122039794922
    8. 'de' → logprob: -11.257122039794922
    9. 'abc' → logprob: -11.257122039794922
    10. '   ' → logprob: -11.507122039794922

Token 31: ' solve' (ID: 17722)
  Prédit: ' solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.021884385496377945
    2. ' calculate' → logprob: -4.271884441375732
    3. ' evaluate' → logprob: -6.146884441375732
    4. ' space' → logprob: -6.896884441375732
    5. 'solve' → logprob: -6.896884441375732
    6. ' compute' → logprob: -7.146884441375732
    7. ' ' → logprob: -7.521884441375732
    8. ' process' → logprob: -7.771884441375732
    9. ' get' → logprob: -8.146883964538574
    10. ' ' → logprob: -9.021883964538574

Token 32: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14318735897541046
    2. '(self' → logprob: -2.0181872844696045
    3. '(
' → logprob: -8.768187522888184
    4. '_' → logprob: -9.018187522888184
    5. ' (' → logprob: -9.393187522888184
    6. '(s' → logprob: -9.768187522888184
    7. '_self' → logprob: -10.268187522888184
    8. 'self' → logprob: -10.893187522888184
    9. '(

' → logprob: -11.393187522888184
    10. '_(' → logprob: -11.643187522888184

Token 33: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036045825108885765
    2. '):' → logprob: -5.878604412078857
    3. ' ,' → logprob: -7.628604412078857
    4. ')' → logprob: -8.253604888916016
    5. 'self' → logprob: -10.253604888916016
    6. ' ):' → logprob: -11.753604888916016
    7. ':' → logprob: -12.878604888916016
    8. ' )' → logprob: -13.378604888916016
    9. ',self' → logprob: -13.753604888916016
    10. ' ' → logprob: -15.003604888916016

Token 34: ' ->' (ID: 2747)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21702732145786285
    2. '(self' → logprob: -2.342027425765991
    3. ':' → logprob: -2.717027425765991
    4. '():' → logprob: -3.467027425765991
    5. '(s' → logprob: -7.592027187347412
    6. '(:' → logprob: -8.71702766418457
    7. '(
' → logprob: -8.71702766418457
    8. ' :' → logprob: -8.71702766418457
    9. '):' → logprob: -8.84202766418457
    10. '   ' → logprob: -9.34202766418457

Token 35: ' Tuple' (ID: 50841)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.3276074230670929
    2. ' None' → logprob: -1.3276073932647705
    3. 'None' → logprob: -5.20260763168335
    4. 'List' → logprob: -5.32760763168335
    5. ' Tuple' → logprob: -6.07760763168335
    6. ' ' → logprob: -6.82760763168335
    7. ' int' → logprob: -9.202607154846191
    8. ' bool' → logprob: -9.452607154846191
    9. '    ' → logprob: -10.202607154846191
    10. ' list' → logprob: -10.327607154846191

Token 36: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12036790698766708
    2. '[int' → logprob: -2.745368003845215
    3. '[List' → logprob: -3.245368003845215
    4. '[]' → logprob: -4.745368003845215
    5. ':' → logprob: -7.870368003845215
    6. '[list' → logprob: -7.870368003845215
    7. '[str' → logprob: -8.120368003845215
    8. '[...,' → logprob: -8.995368003845215
    9. '[Any' → logprob: -9.620368003845215
    10. '[...]' → logprob: -9.995368003845215

Token 37: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.07573862373828888
    2. 'List' → logprob: -2.8257386684417725
    3. 'int' → logprob: -4.575738430023193
    4. ' float' → logprob: -6.325738430023193
    5. 'bool' → logprob: -7.825738430023193
    6. '   ' → logprob: -8.325738906860352
    7. ' List' → logprob: -8.700738906860352
    8. 'flo' → logprob: -8.700738906860352
    9. ']' → logprob: -8.825738906860352
    10. 'str' → logprob: -8.950738906860352

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012403888104017824
    2. ',float' → logprob: -9.625123977661133
    3. ']' → logprob: -10.500123977661133
    4. ']:' → logprob: -10.750123977661133
    5. ' ,' → logprob: -12.250123977661133
    6. '[' → logprob: -13.625123977661133
    7. ']>' → logprob: -13.875123977661133
    8. '],' → logprob: -15.000123977661133
    9. ',int' → logprob: -15.375123977661133
    10. ']]' → logprob: -15.500123977661133

Token 39: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.04933791235089302
    2. 'float' → logprob: -3.049337863922119
    3. ' ' → logprob: -8.299338340759277
    4. ' ' → logprob: -8.799338340759277
    5. '...' → logprob: -8.799338340759277
    6. '	float' → logprob: -9.299338340759277
    7. ' ...' → logprob: -10.174338340759277
    8. ',float' → logprob: -10.424338340759277
    9. '<float' → logprob: -11.174338340759277
    10. '=float' → logprob: -11.674338340759277

Token 40: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00035512709291651845
    2. ']:' → logprob: -8.750354766845703
    3. ')' → logprob: -8.875354766845703
    4. ':' → logprob: -10.000354766845703
    5. '>:' → logprob: -12.250354766845703
    6. '):
' → logprob: -12.875354766845703
    7. '}:' → logprob: -13.625354766845703
    8. ',' → logprob: -14.250354766845703
    9. '）：' → logprob: -14.750354766845703
    10. '>' → logprob: -14.875354766845703

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1925857663154602
    2. '\n' → logprob: -1.9425857067108154
    3. '
' → logprob: -4.5675859451293945
    4. '<|end|>' → logprob: -5.3175859451293945
    5. ' 
' → logprob: -5.5675859451293945
    6. '   ' → logprob: -5.5675859451293945
    7. ' ' → logprob: -6.0675859451293945
    8. '        
' → logprob: -6.4425859451293945
    9. '    ' → logprob: -6.6925859451293945
    10. ' pass' → logprob: -7.1925859451293945

Token 42: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.2064734846353531
    2. '       ' → logprob: -1.706473469734192
    3. ' pass' → logprob: -5.456473350524902
    4. '...' → logprob: -7.706473350524902
    5. '\n' → logprob: -8.956473350524902
    6. 'raise' → logprob: -9.206473350524902
    7. '   ' → logprob: -9.831473350524902
    8. 'pas' → logprob: -11.456473350524902
    9. '\' → logprob: -11.706473350524902
    10. '	pass' → logprob: -12.206473350524902

Token 43: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07836559414863586
    2. '

' → logprob: -2.7033655643463135
    3. 'class' → logprob: -5.578365802764893
    4. '\n' → logprob: -6.328365802764893
    5. '```' → logprob: -7.078365802764893
    6. '<|end|>' → logprob: -7.203365802764893
    7. '


' → logprob: -7.828365802764893
    8. '' → logprob: -8.578365325927734
    9. ' 
' → logprob: -8.953365325927734
    10. '



' → logprob: -9.453365325927734

Token 44: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4078614115715027
    2. '

' → logprob: -1.4078614711761475
    3. 'class' → logprob: -2.4078614711761475
    4. '
' → logprob: -9.032861709594727
    5. '```' → logprob: -9.407861709594727
    6. ' class' → logprob: -10.907861709594727
    7. '


' → logprob: -10.907861709594727
    8. '' → logprob: -12.032861709594727
    9. '\n' → logprob: -12.657861709594727
    10. '<class' → logprob: -13.282861709594727

Token 45: ' Two' (ID: 13311)
  Prédit: ' Linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Linear' → logprob: -0.034294430166482925
    2. ' Quadr' → logprob: -3.909294366836548
    3. ' ' → logprob: -4.784294605255127
    4. 'Linear' → logprob: -5.659294605255127
    5. ' Simple' → logprob: -7.534294605255127
    6. ' Two' → logprob: -7.784294605255127
    7. 'Quadr' → logprob: -8.909294128417969
    8. ' linear' → logprob: -8.909294128417969
    9. ' Quad' → logprob: -9.034294128417969
    10. ' My' → logprob: -9.284294128417969

Token 46: 'Variable' (ID: 12695)
  Prédit: 'Variable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Variable' → logprob: -0.007768343668431044
    2. 'Equation' → logprob: -5.382768154144287
    3. 'Dim' → logprob: -6.757768154144287
    4. 'Var' → logprob: -7.257768154144287
    5. 'Variables' → logprob: -7.757768154144287
    6. 'Linear' → logprob: -8.257768630981445
    7. 'D' → logprob: -8.757768630981445
    8. '

' → logprob: -9.382768630981445
    9. 'V' → logprob: -9.632768630981445
    10. 'Point' → logprob: -10.132768630981445

Token 47: 'Linear' (ID: 32491)
  Prédit: 'Equation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Equation' → logprob: -0.07138475775718689
    2. 'Linear' → logprob: -2.9463846683502197
    3. 'System' → logprob: -4.196384906768799
    4. 'Equ' → logprob: -6.696384906768799
    5. 'Polynomial' → logprob: -10.82138442993164
    6. ' Equation' → logprob: -10.94638442993164
    7. 'Solver' → logprob: -11.69638442993164
    8. 'Line' → logprob: -12.07138442993164
    9. 'Eq' → logprob: -12.19638442993164
    10. ' equation' → logprob: -12.19638442993164

Token 48: 'System' (ID: 3320)
  Prédit: 'Equation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Equation' → logprob: -0.314166784286499
    2. 'System' → logprob: -1.314166784286499
    3. 'Equ' → logprob: -7.064167022705078
    4. ' System' → logprob: -11.189167022705078
    5. ' equation' → logprob: -11.439167022705078
    6. ' Equation' → logprob: -11.939167022705078
    7. 'Regression' → logprob: -12.439167022705078
    8. '```' → logprob: -12.689167022705078
    9. 'Solution' → logprob: -13.189167022705078
    10. 'Systems' → logprob: -13.314167022705078

Token 49: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25435128808021545
    2. ':' → logprob: -1.504351258277893
    3. '<|end|>' → logprob: -6.6293511390686035
    4. ' :' → logprob: -8.004351615905762
    5. '(E' → logprob: -9.129351615905762
    6. '(Abstract' → logprob: -9.254351615905762
    7. '():' → logprob: -9.254351615905762
    8. '(QWidget' → logprob: -9.379351615905762
    9. '(System' → logprob: -9.379351615905762
    10. '):' → logprob: -10.004351615905762

Token 50: 'Equation' (ID: 129214)
  Prédit: 'Equation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Equation' → logprob: -0.10938619077205658
    2. 'ABC' → logprob: -2.6093862056732178
    3. '):' → logprob: -4.109385967254639
    4. ' Equation' → logprob: -4.984385967254639
    5. ')' → logprob: -5.609385967254639
    6. 'Equ' → logprob: -6.734385967254639
    7. ' ABC' → logprob: -6.734385967254639
    8. ' ):' → logprob: -8.484386444091797
    9. ' )' → logprob: -8.859386444091797
    10. 'Eq' → logprob: -9.484386444091797

Token 51: 'System' (ID: 3320)
  Prédit: 'System'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: -2.2127087504486553e-05
    2. 'Systems' → logprob: -11.500021934509277
    3. ' System' → logprob: -11.875021934509277
    4. '<System' → logprob: -13.250021934509277
    5. ')' → logprob: -14.000021934509277
    6. 'S' → logprob: -14.250021934509277
    7. '(System' → logprob: -15.125021934509277
    8. '_system' → logprob: -15.375021934509277
    9. ' system' → logprob: -15.625021934509277
    10. 'system' → logprob: -15.750021934509277

Token 52: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007606726721860468
    2. ')' → logprob: -7.375760555267334
    3. ':' → logprob: -9.500761032104492
    4. ',' → logprob: -10.375761032104492
    5. ' ):' → logprob: -11.125761032104492
    6. '):
' → logprob: -12.250761032104492
    7. '   ' → logprob: -13.125761032104492
    8. '<|end|>' → logprob: -13.375761032104492
    9. '>):' → logprob: -14.250761032104492
    10. '():' → logprob: -14.250761032104492

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02945491299033165
    2. '    
' → logprob: -4.029454708099365
    3. 'def' → logprob: -5.654454708099365
    4. ' def' → logprob: -6.029454708099365
    5. '    ' → logprob: -6.279454708099365
    6. '
' → logprob: -6.529454708099365
    7. ' 
' → logprob: -7.404454708099365
    8. ' ' → logprob: -8.529455184936523
    9. '   
' → logprob: -8.529455184936523
    10. '```' → logprob: -8.654455184936523

Token 54: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.09837933629751205
    2. 'def' (adapté à ' def') → logprob: -2.473379373550415
    3. '    ' → logprob: -5.223379135131836
    4. '   ' → logprob: -5.598379135131836
    5. ' ' → logprob: -8.223379135131836
    6. 'de' → logprob: -11.973379135131836
    7. ' ' → logprob: -12.348379135131836
    8. ' de' → logprob: -12.473379135131836
    9. '	def' → logprob: -12.723379135131836
    10. '    
' → logprob: -13.098379135131836

Token 55: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.022843919694423676
    2. ' solve' → logprob: -4.272843837738037
    3. ' ' → logprob: -4.772843837738037
    4. ' _' → logprob: -9.897844314575195
    5. '__' → logprob: -9.897844314575195
    6. ' def' → logprob: -10.647844314575195
    7. 'solve' → logprob: -11.022844314575195
    8. ' init' → logprob: -11.272844314575195
    9. '_' → logprob: -11.522844314575195
    10. ' ' → logprob: -11.897844314575195

Token 56: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.512236498361744e-07
    2. 'ini' → logprob: -14.750000953674316
    3. 'in' → logprob: -17.625
    4. 'inite' → logprob: -18.75
    5. ' init' → logprob: -18.75
    6. 'i' → logprob: -19.25
    7. 'int' → logprob: -19.375
    8. 'innit' → logprob: -19.375
    9. 'inti' → logprob: -19.75
    10. '```' → logprob: -19.875

Token 57: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.43666180968284607
    2. '__(' → logprob: -1.1866618394851685
    3. '(' → logprob: -3.436661720275879
    4. ' (' → logprob: -4.561661720275879
    5. ')(' → logprob: -6.561661720275879
    6. '<|end|>' → logprob: -6.561661720275879
    7. '__(
' → logprob: -7.186661720275879
    8. 'self' → logprob: -7.436661720275879
    9. '__' → logprob: -7.936661720275879
    10. '__((' → logprob: -8.061661720275879

Token 58: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015047440538182855
    2. ' self' → logprob: -6.501504898071289
    3. '       ' → logprob: -14.001504898071289
    4. '   ' → logprob: -14.126504898071289
    5. ')' → logprob: -15.251504898071289
    6. ' ' → logprob: -15.376504898071289
    7. '	self' → logprob: -16.12650489807129
    8. ',' → logprob: -16.50150489807129
    9. '(self' → logprob: -16.62650489807129
    10. 's' → logprob: -16.87650489807129

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11291356384754181
    2. ' ,' → logprob: -2.2379136085510254
    3. 'self' → logprob: -9.862913131713867
    4. ',self' → logprob: -11.112913131713867
    5. ' )' → logprob: -11.987913131713867
    6. ' self' → logprob: -11.987913131713867
    7. ')' → logprob: -11.987913131713867
    8. ' ' → logprob: -12.487913131713867
    9. '   ' → logprob: -14.862913131713867
    10. '  ' → logprob: -15.237913131713867

Token 60: ' coefficients' (ID: 76338)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2843817472457886
    2. 'a' → logprob: -1.9093817472457886
    3. ' self' → logprob: -2.659381866455078
    4. 'self' → logprob: -3.534381866455078
    5. ' ' → logprob: -10.034381866455078
    6. ' A' → logprob: -10.409381866455078
    7. 'coeff' → logprob: -10.534381866455078
    8. ' coeff' → logprob: -11.034381866455078
    9. '   ' → logprob: -11.159381866455078
    10. 'A' → logprob: -11.659381866455078

Token 61: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7778753042221069
    2. ':' → logprob: -0.9028753042221069
    3. '=' → logprob: -3.4028754234313965
    4. '):' → logprob: -3.5278754234313965
    5. ')' → logprob: -3.6528754234313965
    6. ' =' → logprob: -3.7778754234313965
    7. ' )' → logprob: -5.0278754234313965
    8. ' ,' → logprob: -5.1528754234313965
    9. ' ):' → logprob: -5.9028754234313965
    10. ' (' → logprob: -6.0278754234313965

Token 62: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.05552258342504501
    2. 'List' → logprob: -2.9305226802825928
    3. ' Tuple' → logprob: -7.555522441864014
    4. 'Tuple' → logprob: -9.930522918701172
    5. ' ' → logprob: -10.805522918701172
    6. '[List' → logprob: -10.930522918701172
    7. '   ' → logprob: -11.555522918701172
    8. ' list' → logprob: -12.305522918701172
    9. '	List' → logprob: -12.555522918701172
    10. ')' → logprob: -12.930522918701172

Token 63: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011110436171293259
    2. '[List' → logprob: -6.876111030578613
    3. '[int' → logprob: -9.501111030578613
    4. '   ' → logprob: -13.876111030578613
    5. '```' → logprob: -14.751111030578613
    6. '[[' → logprob: -14.751111030578613
    7. '[Double' → logprob: -15.376111030578613
    8. ' [' → logprob: -15.501111030578613
    9. '[str' → logprob: -15.501111030578613
    10. '<|end|>' → logprob: -15.626111030578613

Token 64: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.03495989739894867
    2. 'List' → logprob: -4.28495979309082
    3. 'Tuple' → logprob: -4.53495979309082
    4. '[' → logprob: -5.15995979309082
    5. ' float' → logprob: -5.90995979309082
    6. '[List' → logprob: -6.90995979309082
    7. ' List' → logprob: -9.65995979309082
    8. ' Tuple' → logprob: -9.65995979309082
    9. 'flo' → logprob: -9.65995979309082
    10. ' ' → logprob: -9.90995979309082

Token 65: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.16067686676979065
    2. '])' → logprob: -2.660676956176758
    3. ',' → logprob: -3.035676956176758
    4. ']' → logprob: -4.285676956176758
    5. '):' → logprob: -5.160676956176758
    6. '],' → logprob: -5.660676956176758
    7. '[' → logprob: -6.035676956176758
    8. ')' → logprob: -6.285676956176758
    9. ']:' → logprob: -7.035676956176758
    10. ' ]' → logprob: -7.160676956176758

Token 66: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46755361557006836
    2. ':' → logprob: -1.0925536155700684
    3. '):' → logprob: -4.092553615570068
    4. '<|end|>' → logprob: -5.217553615570068
    5. '        ' → logprob: -5.717553615570068
    6. ',' → logprob: -5.842553615570068
    7. ')' → logprob: -6.092553615570068
    8. ' :' → logprob: -6.342553615570068
    9. ' ' → logprob: -6.842553615570068
    10. '    ' → logprob: -6.842553615570068

Token 67: ' if' (ID: 538)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.83750981092453
    2. '       ' → logprob: -0.96250981092453
    3. 'self' → logprob: -1.7125098705291748
    4. 'super' → logprob: -5.962509632110596
    5. ' super' → logprob: -6.212509632110596
    6. '   ' → logprob: -9.587510108947754
    7. '        ' → logprob: -9.712510108947754
    8. ' ' → logprob: -9.712510108947754
    9. '    ' → logprob: -10.712510108947754
    10. ' ' → logprob: -10.962510108947754

Token 68: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.00018065694894175977
    2. 'len' → logprob: -8.6251802444458
    3. ' not' → logprob: -14.2501802444458
    4. '(len' → logprob: -15.5001802444458
    5. '	len' → logprob: -16.375181198120117
    6. ' isinstance' → logprob: -16.500181198120117
    7. '=len' → logprob: -18.500181198120117
    8. ',len' → logprob: -18.500181198120117
    9. ' ' → logprob: -19.500181198120117
    10. '<len' → logprob: -19.875181198120117

Token 69: '(coeff' (ID: 167147)
  Prédit: '(coeff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(coeff' → logprob: -0.002420129720121622
    2. '(' → logprob: -6.127419948577881
    3. '(co' → logprob: -8.377420425415039
    4. '(self' → logprob: -13.127420425415039
    5. '<|end|>' → logprob: -14.127420425415039
    6. 'coeff' → logprob: -14.252420425415039
    7. ' (' → logprob: -14.627420425415039
    8. '(
' → logprob: -15.502420425415039
    9. '<|end|>' → logprob: -15.502420425415039
    10. ' coefficients' → logprob: -15.752420425415039

Token 70: 'icients' (ID: 63003)
  Prédit: 'icients'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icients' → logprob: -0.22833168506622314
    2. '(coeff' → logprob: -1.6033316850662231
    3. 'coeff' → logprob: -6.478331565856934
    4. 'fficients' → logprob: -7.728331565856934
    5. '```' → logprob: -7.853331565856934
    6. ' coefficients' → logprob: -9.103331565856934
    7. 'ients' → logprob: -9.228331565856934
    8. 'icient' → logprob: -9.228331565856934
    9. '(' → logprob: -9.728331565856934
    10. '_coeff' → logprob: -10.103331565856934

Token 71: ')' (ID: 8)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.3980705440044403
    2. ')' → logprob: -1.1480705738067627
    3. ' )' → logprob: -5.273070335388184
    4. '!=' → logprob: -5.773070335388184
    5. ')!=' → logprob: -6.023070335388184
    6. ' not' → logprob: -8.898070335388184
    7. ' ' → logprob: -8.898070335388184
    8. '<|end|>' → logprob: -9.398070335388184
    9. '()!=' → logprob: -9.898070335388184
    10. '()' → logprob: -11.273070335388184

Token 72: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.3194636106491089
    2. '!=' → logprob: -1.3194636106491089
    3. ')!=' → logprob: -5.819463729858398
    4. ')' → logprob: -5.944463729858398
    5. '()!=' → logprob: -7.694463729858398
    6. ' not' → logprob: -9.444463729858398
    7. ']!=' → logprob: -10.694463729858398
    8. ' )' → logprob: -11.444463729858398
    9. 'not' → logprob: -12.319463729858398
    10. ' ' → logprob: -12.569463729858398

Token 73: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.7011052966117859
    2. '4' → logprob: -1.0761053562164307
    3. ' ' → logprob: -2.2011053562164307
    4. '5' → logprob: -2.9511053562164307
    5. '3' → logprob: -10.951105117797852
    6. '7' → logprob: -11.076105117797852
    7. '	' → logprob: -11.138605117797852
    8. '  ' → logprob: -12.388605117797852
    9. '```' → logprob: -12.576105117797852
    10. '   ' → logprob: -12.888605117797852

Token 74: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.3585384488105774
    2. '4' → logprob: -1.2335383892059326
    3. ' ' → logprob: -4.733538627624512
    4. '5' → logprob: -6.733538627624512
    5. '[' → logprob: -10.608538627624512
    6. '```' → logprob: -12.671038627624512
    7. '  ' → logprob: -12.921038627624512
    8. '	' → logprob: -13.046038627624512
    9. '   ' → logprob: -13.296038627624512
    10. '7' → logprob: -13.296038627624512

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001684981834841892
    2. '):' → logprob: -9.375168800354004
    3. ':
' → logprob: -9.625168800354004
    4. ' or' → logprob: -11.250168800354004
    5. ' :' → logprob: -13.625168800354004
    6. ',' → logprob: -14.000168800354004
    7. ' and' → logprob: -14.375168800354004
    8. ':return' → logprob: -14.375168800354004
    9. ':**' → logprob: -14.875168800354004
    10. ')' → logprob: -15.000168800354004

Token 76: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009244434535503387
    2. ':
' → logprob: -4.884244441986084
    3. '           ' → logprob: -6.509244441986084
    4. ',' → logprob: -9.759243965148926
    5. '       ' → logprob: -10.384243965148926
    6. '):' → logprob: -11.134243965148926
    7. 'raise' → logprob: -11.259243965148926
    8. ' raise' → logprob: -11.759243965148926
    9. ' :' → logprob: -11.759243965148926
    10. ' or' → logprob: -12.009243965148926

Token 77: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.02724561281502247
    2. 'raise' (adapté à ' raise') → logprob: -3.77724552154541
    3. '           ' → logprob: -5.65224552154541
    4. '            ' → logprob: -7.90224552154541
    5. ' ' → logprob: -10.27724552154541
    6. '               ' → logprob: -10.52724552154541
    7. '	raise' → logprob: -10.77724552154541
    8. '                ' → logprob: -12.15224552154541
    9. '        ' → logprob: -12.15224552154541
    10. '_raise' → logprob: -12.52724552154541

Token 78: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -9.126521035796031e-05
    2. ' ' → logprob: -9.375091552734375
    3. ' Val' → logprob: -12.750091552734375
    4. 'Value' → logprob: -13.125091552734375
    5. '	Value' → logprob: -14.000091552734375
    6. ' Va' → logprob: -14.750091552734375
    7. ' ' → logprob: -16.375091552734375
    8. '_Value' → logprob: -17.375091552734375
    9. '<Value' → logprob: -18.375091552734375
    10. ' value' → logprob: -18.500091552734375

Token 79: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0031784253660589457
    2. 'rror' → logprob: -5.753178596496582
    3. 'ror' → logprob: -14.878178596496582
    4. 'SError' → logprob: -16.378177642822266
    5. 'Value' → logprob: -16.878177642822266
    6. 'LError' → logprob: -17.003177642822266
    7. 'error' → logprob: -17.128177642822266
    8. '   ' → logprob: -17.128177642822266
    9. '	Error' → logprob: -17.128177642822266
    10. 'alue' → logprob: -17.253177642822266

Token 80: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.1270292103290558
    2. '(' → logprob: -2.1270291805267334
    3. '('' → logprob: -9.377029418945312
    4. '(
' → logprob: -11.127029418945312
    5. '(

' → logprob: -14.502029418945312
    6. '"' → logprob: -15.002029418945312
    7. '("("' → logprob: -15.502029418945312
    8. '("'' → logprob: -15.877029418945312
    9. '(f' → logprob: -15.877029418945312
    10. '(
' → logprob: -16.252029418945312

Token 81: 'Exactly' (ID: 91021)
  Prédit: 'Coe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coe' → logprob: -1.1862655878067017
    2. '"' → logprob: -1.6862655878067017
    3. 'coeff' → logprob: -1.8112655878067017
    4. 'Exactly' → logprob: -1.9362655878067017
    5. 'Expected' → logprob: -2.186265468597412
    6. ' coefficients' → logprob: -2.811265468597412
    7. 'Coefficient' → logprob: -4.436265468597412
    8. 'The' → logprob: -5.811265468597412
    9. ' Exactly' → logprob: -6.061265468597412
    10. 'There' → logprob: -6.436265468597412

Token 82: ' six' (ID: 7429)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43181753158569336
    2. ' six' → logprob: -1.0568175315856934
    3. '6' → logprob: -6.056817531585693
    4. ' space' → logprob: -8.931818008422852
    5. ' a' → logprob: -9.181818008422852
    6. ' must' → logprob: -9.181818008422852
    7. ' the' → logprob: -9.556818008422852
    8. ' one' → logprob: -10.306818008422852
    9. ' each' → logprob: -10.431818008422852
    10. ' in' → logprob: -10.431818008422852

Token 83: ' coefficients' (ID: 76338)
  Prédit: ' coefficients'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coefficients' → logprob: -0.0006864601746201515
    2. ' values' → logprob: -7.7506866455078125
    3. ' numbers' → logprob: -9.000686645507812
    4. 'coeff' → logprob: -9.500686645507812
    5. ' elements' → logprob: -10.125686645507812
    6. ' coefficient' → logprob: -11.750686645507812
    7. ' float' → logprob: -12.375686645507812
    8. ' floats' → logprob: -13.000686645507812
    9. ' coeff' → logprob: -14.375686645507812
    10. ' coordinates' → logprob: -14.375686645507812

Token 84: ' must' (ID: 2804)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.013601898215711117
    2. ' required' → logprob: -4.513601779937744
    3. ' must' → logprob: -6.138601779937744
    4. '  ' → logprob: -9.513602256774902
    5. 'required' → logprob: -9.763602256774902
    6. ' needed' → logprob: -10.138602256774902
    7. ' were' → logprob: -10.263602256774902
    8. ' for' → logprob: -10.263602256774902
    9. ' ' → logprob: -10.513602256774902
    10. ' expected' → logprob: -10.513602256774902

Token 85: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.0026408182457089424
    2. ' ' → logprob: -6.002640724182129
    3. '<|end|>' → logprob: -9.002640724182129
    4. ' provide' → logprob: -11.377640724182129
    5. ' provided' → logprob: -11.502640724182129
    6. '  ' → logprob: -12.377640724182129
    7. 'be' → logprob: -12.877640724182129
    8. ' ' → logprob: -13.002640724182129
    9. '<|end|>' → logprob: -13.127640724182129
    10. ')' → logprob: -13.377640724182129

Token 86: ' provided' (ID: 5181)
  Prédit: ' provided'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' provided' → logprob: -0.0060655479319393635
    2. 'provided' → logprob: -5.131065368652344
    3. ' provide' → logprob: -9.131065368652344
    4. ' ' → logprob: -11.381065368652344
    5. 'provide' → logprob: -12.381065368652344
    6. ' supplied' → logprob: -12.381065368652344
    7. ' given' → logprob: -12.881065368652344
    8. ' passed' → logprob: -12.881065368652344
    9. ' ' → logprob: -13.131065368652344
    10. ' provid' → logprob: -14.881065368652344

Token 87: '.")
' (ID: 27834)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.22824440896511078
    2. '.")' → logprob: -1.728244423866272
    3. '")
' → logprob: -4.353244304656982
    4. '.")
' → logprob: -5.228244304656982
    5. ' for' → logprob: -5.853244304656982
    6. ')")' → logprob: -6.478244304656982
    7. ':' → logprob: -6.603244304656982
    8. ')' → logprob: -7.103244304656982
    9. '!")' → logprob: -7.228244304656982
    10. ',' → logprob: -8.22824478149414

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010882514528930187
    2. '
' → logprob: -4.760882377624512
    3. '        
' → logprob: -6.510882377624512
    4. 'self' → logprob: -8.010882377624512
    5. ' self' → logprob: -8.135882377624512
    6. '  
' → logprob: -10.135882377624512
    7. '    
' → logprob: -10.635882377624512
    8. '        ' → logprob: -11.135882377624512
    9. ' 
' → logprob: -11.260882377624512
    10. '   ' → logprob: -11.635882377624512

Token 89: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12080346047878265
    2. 'self' (adapté à ' self') → logprob: -2.8708033561706543
    3. ' self' → logprob: -2.8708033561706543
    4. '   ' → logprob: -7.870803356170654
    5. ' ' → logprob: -9.870803833007812
    6. '        
' → logprob: -11.370803833007812
    7. '      ' → logprob: -11.620803833007812
    8. '	self' → logprob: -11.745803833007812
    9. '     ' → logprob: -11.870803833007812
    10. '    ' → logprob: -12.370803833007812

Token 90: '.a' (ID: 8772)
  Prédit: '.coe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.coe' → logprob: -0.0018781855469569564
    2. '.' → logprob: -6.501878261566162
    3. '.co' → logprob: -8.376877784729004
    4. ' .' → logprob: -9.001877784729004
    5. 'coeff' → logprob: -11.751877784729004
    6. '.variables' → logprob: -12.751877784729004
    7. '.cod' → logprob: -13.126877784729004
    8. ' coefficients' → logprob: -13.751877784729004
    9. '._' → logprob: -13.876877784729004
    10. '.s' → logprob: -14.001877784729004

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.769230842590332
    2. ' =' → logprob: -1.019230842590332
    3. '1' → logprob: -1.769230842590332
    4. ' ,' → logprob: -5.769230842590332
    5. '=' → logprob: -6.519230842590332
    6. ',b' → logprob: -8.144230842590332
    7. '11' → logprob: -8.644230842590332
    8. ' ' → logprob: -9.269230842590332
    9. 's' → logprob: -10.269230842590332
    10. 'x' → logprob: -10.894230842590332

Token 92: ' self' (ID: 1051)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.9253396987915039
    2. 'b' → logprob: -1.050339698791504
    3. ' self' → logprob: -1.550339698791504
    4. 'self' → logprob: -3.300339698791504
    5. '<|end|>' → logprob: -5.550339698791504
    6. ' ' → logprob: -7.175339698791504
    7. '=self' → logprob: -10.550339698791504
    8. '    ' → logprob: -11.300339698791504
    9. '<|end|>' → logprob: -11.675339698791504
    10. ' =' → logprob: -11.800339698791504

Token 93: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.004972358699887991
    2. 'b' → logprob: -6.004972457885742
    3. '.' → logprob: -7.379972457885742
    4. '[' → logprob: -7.504972457885742
    5. '_b' → logprob: -7.629972457885742
    6. ',b' → logprob: -7.754972457885742
    7. ',' → logprob: -9.379972457885742
    8. '.f' → logprob: -9.504972457885742
    9. '.x' → logprob: -10.004972457885742
    10. '_' → logprob: -10.254972457885742

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006459566066041589
    2. ' ,' → logprob: -8.000645637512207
    3. '=' → logprob: -8.625645637512207
    4. ' =' → logprob: -9.000645637512207
    5. '<|end|>' → logprob: -12.375645637512207
    6. ',self' → logprob: -13.625645637512207
    7. 's' → logprob: -14.500645637512207
    8. '<|end|>' → logprob: -14.750645637512207
    9. ' ' → logprob: -15.125645637512207
    10. 'c' → logprob: -15.875645637512207

Token 95: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.48615044355392456
    2. ' self' → logprob: -1.1111505031585693
    3. '<|end|>' → logprob: -3.3611505031585693
    4. 'c' → logprob: -4.73615026473999
    5. ' ' → logprob: -4.73615026473999
    6. ' =' → logprob: -6.36115026473999
    7. 's' → logprob: -7.23615026473999
    8. ' c' → logprob: -7.98615026473999
    9. '=self' → logprob: -8.611150741577148
    10. ' s' → logprob: -8.611150741577148

Token 96: '.c' (ID: 1081)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06643027067184448
    2. 'c' → logprob: -3.1914303302764893
    3. ',c' → logprob: -4.19143009185791
    4. '_,' → logprob: -5.56643009185791
    5. '.c' → logprob: -5.81643009185791
    6. ' ,' → logprob: -8.44143009185791
    7. 'coeff' → logprob: -8.94143009185791
    8. '_c' → logprob: -9.06643009185791
    9. '.' → logprob: -9.19143009185791
    10. 'a' → logprob: -9.44143009185791

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.666993507067673e-05
    2. ' ,' → logprob: -10.750036239624023
    3. '=' → logprob: -11.375036239624023
    4. ' =' → logprob: -12.750036239624023
    5. ',self' → logprob: -15.000036239624023
    6. '<|end|>' → logprob: -15.750036239624023
    7. '<|end|>' → logprob: -16.625036239624023
    8. 's' → logprob: -17.250036239624023
    9. '‌,' → logprob: -17.250036239624023
    10. ',
' → logprob: -17.375036239624023

Token 98: ' self' (ID: 1051)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0038065910339355
    2. 'self' → logprob: -1.2538065910339355
    3. ' self' → logprob: -1.8788065910339355
    4. ' ' → logprob: -1.8788065910339355
    5. ' d' → logprob: -3.2538065910339355
    6. 's' → logprob: -6.3788065910339355
    7. '    ' → logprob: -7.0038065910339355
    8. ' ,' → logprob: -8.628807067871094
    9. ',' → logprob: -8.753807067871094
    10. ' ' → logprob: -8.753807067871094

Token 99: '.d' (ID: 1380)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05115849897265434
    2. 'd' → logprob: -3.3011584281921387
    3. '.' → logprob: -5.551158428192139
    4. '.,' → logprob: -5.551158428192139
    5. ',d' → logprob: -5.676158428192139
    6. '.d' → logprob: -7.176158428192139
    7. ' ,' → logprob: -7.176158428192139
    8. '_,' → logprob: -9.676158905029297
    9. '_d' → logprob: -10.051158905029297
    10. 'x' → logprob: -10.176158905029297

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024335073248948902
    2. ' ,' → logprob: -8.375243186950684
    3. ',self' → logprob: -11.625243186950684
    4. '=' → logprob: -12.875243186950684
    5. ' =' → logprob: -14.125243186950684
    6. '<|end|>' → logprob: -16.000244140625
    7. '‌,' → logprob: -16.250244140625
    8. '_,' → logprob: -17.000244140625
    9. 's' → logprob: -17.125244140625
    10. 'self' → logprob: -17.125244140625

Token 101: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.29936814308166504
    2. 'self' → logprob: -1.424368143081665
    3. ' e' → logprob: -4.674367904663086
    4. 'e' → logprob: -4.799367904663086
    5. ' ' → logprob: -7.799367904663086
    6. ' space' → logprob: -11.049367904663086
    7. ' ,' → logprob: -11.424367904663086
    8. ',self' → logprob: -11.799367904663086
    9. '    ' → logprob: -11.924367904663086
    10. 'space' → logprob: -12.049367904663086

Token 102: '.e' (ID: 2560)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19104860723018646
    2. 'e' → logprob: -1.8160486221313477
    3. ',e' → logprob: -4.566048622131348
    4. ' ,' → logprob: -8.441048622131348
    5. ' e' → logprob: -8.566048622131348
    6. '<|end|>' → logprob: -8.941048622131348
    7. '.' → logprob: -9.191048622131348
    8. '.e' → logprob: -9.816048622131348
    9. '_,' → logprob: -10.066048622131348
    10. ' ' → logprob: -11.191048622131348

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010485442908247933
    2. ' ,' → logprob: -9.250104904174805
    3. '=' → logprob: -12.000104904174805
    4. ' =' → logprob: -13.250104904174805
    5. '<|end|>' → logprob: -15.375104904174805
    6. '<|end|>' → logprob: -15.375104904174805
    7. ',self' → logprob: -15.500104904174805
    8. '‌,' → logprob: -16.875104904174805
    9. ',\
' → logprob: -17.750104904174805
    10. ' ' → logprob: -18.125104904174805

Token 104: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5312271118164062
    2. ' self' → logprob: -0.9062271118164062
    3. ' ' → logprob: -4.906227111816406
    4. ' ' → logprob: -8.406227111816406
    5. '<|end|>' → logprob: -8.906227111816406
    6. 's' → logprob: -9.656227111816406
    7. '_self' → logprob: -10.406227111816406
    8. '<|end|>' → logprob: -10.531227111816406
    9. '	self' → logprob: -10.656227111816406
    10. ' s' → logprob: -10.781227111816406

Token 105: '.f' (ID: 1196)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.580033540725708
    2. ' =' → logprob: -0.830033540725708
    3. 'f' → logprob: -5.955033302307129
    4. 'c' → logprob: -8.205033302307129
    5. '_' → logprob: -8.330033302307129
    6. '.' → logprob: -8.330033302307129
    7. ',' → logprob: -9.080033302307129
    8. ' ' → logprob: -9.080033302307129
    9. 's' → logprob: -9.080033302307129
    10. '_f' → logprob: -9.330033302307129

Token 106: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931474208831787
    2. ' =' → logprob: -0.6931474208831787
    3. ',' → logprob: -16.193147659301758
    4. '=

' → logprob: -16.693147659301758
    5. ' =
' → logprob: -17.818147659301758
    6. ' ' → logprob: -18.193147659301758
    7. ' =)' → logprob: -18.193147659301758
    8. '＝' → logprob: -18.818147659301758
    9. '=}' → logprob: -18.818147659301758
    10. ')' → logprob: -19.443147659301758

Token 107: ' coefficients' (ID: 76338)
  Prédit: ' coefficients'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coefficients' → logprob: -0.004082793369889259
    2. 'coeff' → logprob: -5.504082679748535
    3. '(coeff' → logprob: -13.004082679748535
    4. ' coef' → logprob: -14.504082679748535
    5. ' coeff' → logprob: -14.629082679748535
    6. 'co' → logprob: -14.629082679748535
    7. ' coefficient' → logprob: -15.129082679748535
    8. 'coef' → logprob: -15.754082679748535
    9. '.coe' → logprob: -16.25408363342285
    10. 'Coe' → logprob: -17.00408363342285

Token 108: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6405761241912842
    2. '
' → logprob: -1.1405761241912842
    3. '    
' → logprob: -2.765576124191284
    4. '<|end|>' → logprob: -2.765576124191284
    5. 'def' → logprob: -4.140576362609863
    6. '<|end|>' → logprob: -5.390576362609863
    7. '        
' → logprob: -5.515576362609863
    8. ' def' → logprob: -6.640576362609863
    9. '  
' → logprob: -7.765576362609863
    10. '       ' → logprob: -7.890576362609863

Token 109: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013418971793726087
    2. ' def' → logprob: -7.001341819763184
    3. '   ' → logprob: -7.751341819763184
    4. '    
' → logprob: -16.8763427734375
    5. '	def' → logprob: -16.8763427734375
    6. 'de' → logprob: -17.2513427734375
    7. ')' → logprob: -17.3763427734375
    8. ' ' → logprob: -18.5013427734375
    9. '        
' → logprob: -18.7513427734375
    10. '  ' → logprob: -18.8763427734375

Token 110: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.836499985889532e-05
    2. ' def' → logprob: -9.7500581741333
    3. '   ' → logprob: -18.000059127807617
    4. 'de' → logprob: -18.000059127807617
    5. 'd' → logprob: -20.250059127807617
    6. '    
' → logprob: -21.250059127807617
    7. '@' → logprob: -21.875059127807617
    8. '
' → logprob: -22.125059127807617
    9. '	def' → logprob: -22.250059127807617
    10. '        
' → logprob: -23.000059127807617

Token 111: ' _' (ID: 1175)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.00025752498186193407
    2. 'solve' → logprob: -8.50025749206543
    3. ' def' → logprob: -9.87525749206543
    4. '.solve' → logprob: -14.00025749206543
    5. ' ' → logprob: -14.50025749206543
    6. ' calculate' → logprob: -14.62525749206543
    7. ' ' → logprob: -14.62525749206543
    8. ' solution' → logprob: -16.75025749206543
    9. '_' → logprob: -16.75025749206543
    10. ' solves' → logprob: -17.12525749206543

Token 112: 'det' (ID: 10136)
  Prédit: 'det'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.16196374595165253
    2. 'calculate' → logprob: -2.536963701248169
    3. 'solve' → logprob: -2.911963701248169
    4. 'compute' → logprob: -4.286963939666748
    5. 'is' → logprob: -6.786963939666748
    6. 'd' → logprob: -8.16196346282959
    7. 'dis' → logprob: -8.41196346282959
    8. 'delta' → logprob: -8.91196346282959
    9. 'has' → logprob: -8.91196346282959
    10. 'get' → logprob: -9.28696346282959

Token 113: 'ermin' (ID: 92196)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06364896893501282
    2. 'ermin' → logprob: -2.8136489391326904
    3. '   ' → logprob: -7.4386491775512695
    4. '(' → logprob: -7.5636491775512695
    5. 'er' → logprob: -8.43864917755127
    6. '       ' → logprob: -9.43864917755127
    7. 'erm' → logprob: -9.93864917755127
    8. '_' → logprob: -10.31364917755127
    9. 'ermine' → logprob: -10.56364917755127
    10. 'self' → logprob: -11.56364917755127

Token 114: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -3.1186566047836095e-05
    2. '```' → logprob: -11.875031471252441
    3. '_' → logprob: -12.125031471252441
    4. 'a' → logprob: -12.750031471252441
    5. '_ant' → logprob: -12.750031471252441
    6. 'an' → logprob: -13.250031471252441
    7. '\' → logprob: -13.375031471252441
    8. '   ' → logprob: -13.875031471252441
    9. 'in' → logprob: -14.000031471252441
    10. '[' → logprob: -14.000031471252441

Token 115: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00038944309926591814
    2. '(' → logprob: -7.875389575958252
    3. 'self' → logprob: -12.125389099121094
    4. ' (' → logprob: -12.750389099121094
    5. '(s' → logprob: -14.375389099121094
    6. 's' → logprob: -15.875389099121094
    7. ' self' → logprob: -16.250389099121094
    8. '(
' → logprob: -17.000389099121094
    9. '   ' → logprob: -17.625389099121094
    10. '(sel' → logprob: -17.750389099121094

Token 116: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8134122490882874
    2. 'self' → logprob: -1.1884121894836426
    3. '(self' → logprob: -1.9384121894836426
    4. '):
' → logprob: -2.3134121894836426
    5. ')' → logprob: -5.188412189483643
    6. ' self' → logprob: -6.938412189483643
    7. ' ):' → logprob: -7.313412189483643
    8. '   ' → logprob: -7.438412189483643
    9. '):

' → logprob: -7.938412189483643
    10. '       ' → logprob: -8.4384126663208

Token 117: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002100965939462185
    2. '(' → logprob: -8.87520980834961
    3. 'self' → logprob: -10.12520980834961
    4. ' (' → logprob: -11.00020980834961
    5. ':' → logprob: -11.87520980834961
    6. '   ' → logprob: -12.87520980834961
    7. ' self' → logprob: -13.25020980834961
    8. ':self' → logprob: -14.62520980834961
    9. '(s' → logprob: -15.00020980834961
    10. 's' → logprob: -15.12520980834961

Token 118: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.41248199343681335
    2. ' float' → logprob: -1.2874820232391357
    3. 'self' → logprob: -3.0374820232391357
    4. ' self' → logprob: -4.287481784820557
    5. '   ' → logprob: -8.287482261657715
    6. ' ' → logprob: -11.037482261657715
    7. 'flo' → logprob: -11.162482261657715
    8. '(self' → logprob: -11.412482261657715
    9. 'f' → logprob: -11.662482261657715
    10. '       ' → logprob: -11.912482261657715

Token 119: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01607261411845684
    2. ':
' → logprob: -4.516072750091553
    3. '(self' → logprob: -5.891072750091553
    4. '       ' → logprob: -6.266072750091553
    5. '):' → logprob: -9.016072273254395
    6. 'self' → logprob: -9.641072273254395
    7. '   ' → logprob: -9.766072273254395
    8. ' :' → logprob: -10.641072273254395
    9. '(' → logprob: -10.891072273254395
    10. '):
' → logprob: -11.016072273254395

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003080505644902587
    2. 'return' → logprob: -5.878080368041992
    3. ' return' → logprob: -8.253080368041992
    4. '   ' → logprob: -11.503080368041992
    5. '      ' → logprob: -13.253080368041992
    6. '     ' → logprob: -15.003080368041992
    7. '```' → logprob: -15.003080368041992
    8. '    ' → logprob: -15.128080368041992
    9. 'd' → logprob: -15.253080368041992
    10. '           ' → logprob: -15.253080368041992

Token 121: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003974866587668657
    2. '       ' → logprob: -6.003974914550781
    3. ' return' → logprob: -6.503974914550781
    4. '   ' → logprob: -15.253974914550781
    5. 'self' → logprob: -15.878974914550781
    6. '	return' → logprob: -16.00397491455078
    7. 'ret' → logprob: -16.62897491455078
    8. 'det' → logprob: -17.50397491455078
    9. '```' → logprob: -17.62897491455078
    10. ' ' → logprob: -17.75397491455078

Token 122: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018323775380849838
    2. ' self' → logprob: -4.01832389831543
    3. '(self' → logprob: -8.76832389831543
    4. '       ' → logprob: -11.14332389831543
    5. '   ' → logprob: -13.39332389831543
    6. ' (' → logprob: -13.39332389831543
    7. '	self' → logprob: -14.76832389831543
    8. ' ' → logprob: -15.51832389831543
    9. '(' → logprob: -16.39332389831543
    10. '
' → logprob: -18.01832389831543

Token 123: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.0009433844243176281
    2. '.' → logprob: -7.250943183898926
    3. 'a' → logprob: -8.375943183898926
    4. ' .' → logprob: -13.000943183898926
    5. ''.' → logprob: -15.625943183898926
    6. '`.' → logprob: -16.000944137573242
    7. ' a' → logprob: -16.125944137573242
    8. '".' → logprob: -16.375944137573242
    9. '.s' → logprob: -17.000944137573242
    10. '..' → logprob: -17.000944137573242

Token 124: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.023543255403637886
    2. '*' → logprob: -4.148543357849121
    3. '*self' → logprob: -4.898543357849121
    4. '*d' → logprob: -11.148543357849121
    5. 'self' → logprob: -12.773543357849121
    6. '**' → logprob: -13.523543357849121
    7. ' ' → logprob: -13.648543357849121
    8. '*this' → logprob: -13.898543357849121
    9. ' ' → logprob: -14.273543357849121
    10. '*b' → logprob: -14.523543357849121

Token 125: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0067872474901378155
    2. ' self' → logprob: -5.006787300109863
    3. 'd' → logprob: -9.756787300109863
    4. '(self' → logprob: -11.631787300109863
    5. '	self' → logprob: -12.756787300109863
    6. '=self' → logprob: -14.256787300109863
    7. 'this' → logprob: -15.006787300109863
    8. '*self' → logprob: -15.006787300109863
    9. '_self' → logprob: -15.631787300109863
    10. 's' → logprob: -15.631787300109863

Token 126: '.e' (ID: 2560)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6551225185394287
    2. '.d' → logprob: -1.0301225185394287
    3. 'e' → logprob: -2.1551225185394287
    4. '.e' → logprob: -5.030122756958008
    5. 'f' → logprob: -7.280122756958008
    6. '.' → logprob: -8.030122756958008
    7. '.f' → logprob: -8.905122756958008
    8. '```' → logprob: -11.030122756958008
    9. ''d' → logprob: -11.280122756958008
    10. ' d' → logprob: -11.530122756958008

Token 127: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.006719163153320551
    2. '-' → logprob: -5.00671911239624
    3. ' ' → logprob: -12.631719589233398
    4. ' ' → logprob: -15.006719589233398
    5. ' -
' → logprob: -17.2567195892334
    6. ')' → logprob: -17.5067195892334
    7. ' –' → logprob: -17.7567195892334
    8. ' minus' → logprob: -17.8817195892334
    9. ' −' → logprob: -18.1317195892334
    10. '−' → logprob: -18.2567195892334

Token 128: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2519572377204895
    2. ' self' → logprob: -1.5019571781158447
    3. 'b' → logprob: -11.876956939697266
    4. ' ' → logprob: -12.001956939697266
    5. '(self' → logprob: -12.376956939697266
    6. '<|end|>' → logprob: -12.876956939697266
    7. '	self' → logprob: -13.126956939697266
    8. '       ' → logprob: -13.251956939697266
    9. 's' → logprob: -14.001956939697266
    10. '   ' → logprob: -14.126956939697266

Token 129: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.0015154577558860183
    2. '.c' → logprob: -7.6265153884887695
    3. '.' → logprob: -7.7515153884887695
    4. 'b' → logprob: -7.8765153884887695
    5. '.d' → logprob: -9.12651538848877
    6. '	b' → logprob: -10.62651538848877
    7. '_b' → logprob: -10.62651538848877
    8. '<|end|>' → logprob: -11.37651538848877
    9. 'd' → logprob: -11.50151538848877
    10. ''b' → logprob: -11.62651538848877

Token 130: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.005930693820118904
    2. '*' → logprob: -5.1309309005737305
    3. '*self' → logprob: -14.00593090057373
    4. ' ' → logprob: -14.00593090057373
    5. '**' → logprob: -16.130929946899414
    6. '<|end|>' → logprob: -16.505929946899414
    7. '*object' → logprob: -16.880929946899414
    8. ' **' → logprob: -16.880929946899414
    9. ' ' → logprob: -17.130929946899414
    10. '`' → logprob: -17.630929946899414

Token 131: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.126974418759346
    2. ' self' → logprob: -2.12697434425354
    3. '*self' → logprob: -10.251974105834961
    4. '	self' → logprob: -12.251974105834961
    5. '(self' → logprob: -12.751974105834961
    6. '[self' → logprob: -13.376974105834961
    7. ' ' → logprob: -14.751974105834961
    8. 's' → logprob: -15.251974105834961
    9. '=self' → logprob: -15.251974105834961
    10. '-self' → logprob: -15.876974105834961

Token 132: '.d' (ID: 1380)
  Prédit: '.c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -1.2099428176879883
    2. ' *' → logprob: -1.8349428176879883
    3. '.e' → logprob: -1.8349428176879883
    4. '*' → logprob: -2.2099428176879883
    5. '<|end|>' → logprob: -2.3349428176879883
    6. '.' → logprob: -2.5849428176879883
    7. '.d' → logprob: -2.8349428176879883
    8. '*c' → logprob: -4.334942817687988
    9. '*d' → logprob: -4.459942817687988
    10. ' .' → logprob: -5.584942817687988

Token 133: '
    
' (ID: 15698)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -1.0602322816848755
    2. '
' → logprob: -1.3102322816848755
    3. '   ' → logprob: -1.3102322816848755
    4. '<|end|>' → logprob: -2.310232162475586
    5. '  
' → logprob: -4.685232162475586
    6. 'def' → logprob: -6.560232162475586
    7. '<|end|>' → logprob: -6.685232162475586
    8. ' 
' → logprob: -7.185232162475586
    9. '```' → logprob: -7.185232162475586
    10. '   
' → logprob: -7.685232162475586

Token 134: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1749870628118515
    2. '   ' → logprob: -1.9249870777130127
    3. ' def' → logprob: -4.299986839294434
    4. '    
' → logprob: -6.924986839294434
    5. '
' → logprob: -10.174986839294434
    6. '  
' → logprob: -10.424986839294434
    7. ' ' → logprob: -10.924986839294434
    8. '  ' → logprob: -12.049986839294434
    9. '   
' → logprob: -12.799986839294434
    10. '	def' → logprob: -12.799986839294434

Token 135: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00012356207298580557
    2. ' def' → logprob: -9.000123977661133
    3. '
' → logprob: -16.500123977661133
    4. 'de' → logprob: -17.500123977661133
    5. '   ' → logprob: -17.625123977661133
    6. '@' → logprob: -18.250123977661133
    7. 'd' → logprob: -18.375123977661133
    8. '    
' → logprob: -18.375123977661133
    9. ' ' → logprob: -18.625123977661133
    10. '	def' → logprob: -20.250123977661133

Token 136: ' solve' (ID: 17722)
  Prédit: ' solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.01117219403386116
    2. 'solve' → logprob: -4.511172294616699
    3. ' def' → logprob: -9.1361722946167
    4. 'def' → logprob: -11.2611722946167
    5. '.solve' → logprob: -13.3861722946167
    6. ' solution' → logprob: -13.6361722946167
    7. ' _' → logprob: -15.7611722946167
    8. ' solves' → logprob: -16.011171340942383
    9. '_' → logprob: -16.386171340942383
    10. ' resolve' → logprob: -16.511171340942383

Token 137: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008571469807066023
    2. '(' → logprob: -7.125857353210449
    3. ' (' → logprob: -9.87585735321045
    4. 'self' → logprob: -14.25085735321045
    5. '   ' → logprob: -15.50085735321045
    6. ' ' → logprob: -15.87585735321045
    7. '(
' → logprob: -16.375856399536133
    8. ' self' → logprob: -16.875856399536133
    9. '(s' → logprob: -17.000856399536133
    10. '       ' → logprob: -17.000856399536133

Token 138: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019412499386817217
    2. 'self' → logprob: -6.376941204071045
    3. '):' → logprob: -9.126941680908203
    4. ' )' → logprob: -10.126941680908203
    5. '):
' → logprob: -10.126941680908203
    6. '(self' → logprob: -10.626941680908203
    7. '   ' → logprob: -11.251941680908203
    8. ' self' → logprob: -12.626941680908203
    9. '       ' → logprob: -12.751941680908203
    10. ')->' → logprob: -12.751941680908203

Token 139: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06838034838438034
    2. ' ->' → logprob: -3.193380355834961
    3. '(' → logprob: -4.318380355834961
    4. '->' → logprob: -4.693380355834961
    5. ')' → logprob: -6.818380355834961
    6. ' (' → logprob: -7.693380355834961
    7. '   ' → logprob: -8.318380355834961
    8. 'self' → logprob: -8.318380355834961
    9. '       ' → logprob: -8.443380355834961
    10. ':' → logprob: -8.568380355834961

Token 140: ' Tuple' (ID: 50841)
  Prédit: ' Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Tuple' → logprob: -0.001368453842587769
    2. 'Tuple' → logprob: -6.626368522644043
    3. ' ' → logprob: -10.376368522644043
    4. ' tuple' → logprob: -12.126368522644043
    5. ' Optional' → logprob: -12.376368522644043
    6. ' Tu' → logprob: -13.876368522644043
    7. ' float' → logprob: -15.376368522644043
    8. ' ' → logprob: -15.751368522644043
    9. 'Optional' → logprob: -16.251367568969727
    10. ' Union' → logprob: -16.376367568969727

Token 141: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011009222362190485
    2. ' [' → logprob: -7.376101016998291
    3. '   ' → logprob: -8.126100540161133
    4. '(float' → logprob: -9.376100540161133
    5. ' ' → logprob: -10.751100540161133
    6. '       ' → logprob: -11.501100540161133
    7. ':' → logprob: -11.876100540161133
    8. '[
' → logprob: -11.876100540161133
    9. ' (' → logprob: -12.251100540161133
    10. '           ' → logprob: -12.251100540161133

Token 142: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00011105302110081539
    2. ' float' → logprob: -9.125110626220703
    3. 'flo' → logprob: -14.125110626220703
    4. '(float' → logprob: -15.000110626220703
    5. 'f' → logprob: -15.250110626220703
    6. '```' → logprob: -15.875110626220703
    7. '   ' → logprob: -16.000110626220703
    8. '<float' → logprob: -16.250110626220703
    9. ',float' → logprob: -16.250110626220703
    10. '	float' → logprob: -16.500110626220703

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005400468362495303
    2. ',float' → logprob: -7.875540256500244
    3. ' ,' → logprob: -8.750539779663086
    4. ' ' → logprob: -14.250539779663086
    5. 'float' → logprob: -15.000539779663086
    6. ',int' → logprob: -16.375539779663086
    7. ',double' → logprob: -16.500539779663086
    8. ',
' → logprob: -16.500539779663086
    9. '```' → logprob: -16.500539779663086
    10. '`,' → logprob: -17.125539779663086

Token 144: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0067170290276408195
    2. ' float' → logprob: -5.006717205047607
    3. ',float' → logprob: -14.38171672821045
    4. '	float' → logprob: -14.75671672821045
    5. '=float' → logprob: -15.38171672821045
    6. '<float' → logprob: -15.50671672821045
    7. '(float' → logprob: -16.006717681884766
    8. '.float' → logprob: -16.381717681884766
    9. '        ' → logprob: -16.756717681884766
    10. '```' → logprob: -17.756717681884766

Token 145: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3599887490272522
    2. ']:' → logprob: -1.6099886894226074
    3. '):
' → logprob: -2.3599886894226074
    4. ']:
' → logprob: -4.859988689422607
    5. ':' → logprob: -9.609989166259766
    6. '):
' → logprob: -9.859989166259766
    7. ')' → logprob: -10.609989166259766
    8. '   ' → logprob: -10.734989166259766
    9. '}:' → logprob: -10.734989166259766
    10. '>:' → logprob: -11.359989166259766

Token 146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002269085729494691
    2. '
' → logprob: -6.127269268035889
    3. 'det' → logprob: -10.50226879119873
    4. 'd' → logprob: -11.00226879119873
    5. '```' → logprob: -11.37726879119873
    6. '        
' → logprob: -11.50226879119873
    7. ' determinant' → logprob: -12.50226879119873
    8. '
' → logprob: -12.75226879119873
    9. 'n' → logprob: -13.37726879119873
    10. '    
' → logprob: -13.62726879119873

Token 147: ' det' (ID: 1476)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' (adapté à ' det') → logprob: -0.017889447510242462
    2. '       ' → logprob: -4.142889499664307
    3. ' det' → logprob: -6.642889499664307
    4. 'D' → logprob: -8.767889022827148
    5. 'delta' → logprob: -8.892889022827148
    6. 'den' → logprob: -9.017889022827148
    7. ' determinant' → logprob: -9.517889022827148
    8. 'd' → logprob: -9.892889022827148
    9. ' delta' → logprob: -12.392889022827148
    10. ' D' → logprob: -12.892889022827148

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0052990964613854885
    2. '=' → logprob: -5.255299091339111
    3. 'ermin' → logprob: -9.75529956817627
    4. '_' → logprob: -12.63029956817627
    5. ' :=' → logprob: -13.38029956817627
    6. ' ' → logprob: -13.38029956817627
    7. '   ' → logprob: -15.13029956817627
    8. 'erm' → logprob: -15.75529956817627
    9. ' =
' → logprob: -15.88029956817627
    10. '()' → logprob: -16.005298614501953

Token 149: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5759422183036804
    2. 'self' → logprob: -0.8259422183036804
    3. '(self' → logprob: -12.950942039489746
    4. '	self' → logprob: -15.200942039489746
    5. '       ' → logprob: -15.950942039489746
    6. 'sel' → logprob: -17.450942993164062
    7. '   ' → logprob: -17.825942993164062
    8. ' ' → logprob: -18.075942993164062
    9. ' ' → logprob: -18.200942993164062
    10. ' sel' → logprob: -18.325942993164062

Token 150: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -2.47495681833243e-05
    2. '.' → logprob: -10.750024795532227
    3. '_' → logprob: -13.875024795532227
    4. ' .' → logprob: -14.625024795532227
    5. '._
' → logprob: -15.000024795532227
    6. '.a' → logprob: -15.125024795532227
    7. '_a' → logprob: -15.125024795532227
    8. '.\' → logprob: -15.500024795532227
    9. '.d' → logprob: -16.000024795532227
    10. 'a' → logprob: -16.375024795532227

Token 151: 'det' (ID: 10136)
  Prédit: 'det'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.00031019834568724036
    2. 'determ' → logprob: -8.125309944152832
    3. ' determinant' → logprob: -12.250309944152832
    4. 'etermin' → logprob: -12.375309944152832
    5. 'def' → logprob: -12.625309944152832
    6. 'd' → logprob: -14.000309944152832
    7. 'et' → logprob: -14.750309944152832
    8. '_det' → logprob: -15.000309944152832
    9. '.det' → logprob: -16.75031089782715
    10. 'de' → logprob: -17.12531089782715

Token 152: 'ermin' (ID: 92196)
  Prédit: 'ermin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ermin' → logprob: -0.016269197687506676
    2. 'in' → logprob: -4.391269207000732
    3. 'er' → logprob: -6.141269207000732
    4. 'erm' → logprob: -7.641269207000732
    5. 'inator' → logprob: -7.641269207000732
    6. 'min' → logprob: -9.141268730163574
    7. '```' → logprob: -9.641268730163574
    8. 'erman' → logprob: -10.141268730163574
    9. 'etermin' → logprob: -10.266268730163574
    10. '   ' → logprob: -10.391268730163574

Token 153: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -9.968312951968983e-06
    2. 'at' → logprob: -12.875009536743164
    3. 'a' → logprob: -13.125009536743164
    4. 'an' → logprob: -14.250009536743164
    5. '.ant' → logprob: -14.375009536743164
    6. '_ant' → logprob: -14.375009536743164
    7. 'antt' → logprob: -14.750009536743164
    8. 'ант' → logprob: -14.875009536743164
    9. '\' → logprob: -15.000009536743164
    10. 'ent' → logprob: -15.125009536743164

Token 154: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0031986311078071594
    2. '()
' → logprob: -5.753198623657227
    3. ' ()' → logprob: -11.253198623657227
    4. '()

' → logprob: -12.253198623657227
    5. '()
' → logprob: -13.128198623657227
    6. '()\' → logprob: -14.878198623657227
    7. '())' → logprob: -15.378198623657227
    8. '()`' → logprob: -15.503198623657227
    9. '()>' → logprob: -15.628198623657227
    10. '()"' → logprob: -15.878198623657227

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024930182844400406
    2. '
' → logprob: -6.127492904663086
    3. '<|end|>' → logprob: -8.627492904663086
    4. '        
' → logprob: -9.502492904663086
    5. ' if' → logprob: -11.252492904663086
    6. '  
' → logprob: -12.002492904663086
    7. 'if' → logprob: -12.127492904663086
    8. '\n' → logprob: -12.502492904663086
    9. ')' → logprob: -12.752492904663086
    10. '<|end|>' → logprob: -12.877492904663086

Token 156: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.39143720269203186
    2. ' if' → logprob: -1.1414371728897095
    3. '       ' → logprob: -5.39143705368042
    4. 'If' → logprob: -15.641437530517578
    5. '	if' → logprob: -15.891437530517578
    6. '```' → logprob: -17.266437530517578
    7. '        
' → logprob: -17.391437530517578
    8. '
' → logprob: -18.016437530517578
    9. '   ' → logprob: -18.391437530517578
    10. ' If' → logprob: -18.891437530517578

Token 157: ' det' (ID: 1476)
  Prédit: ' det'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' det' → logprob: -0.00036691725836135447
    2. 'det' → logprob: -8.000367164611816
    3. ' abs' → logprob: -10.375367164611816
    4. 'abs' → logprob: -16.8753662109375
    5. '_det' → logprob: -17.1253662109375
    6. '(det' → logprob: -17.7503662109375
    7. 'Det' → logprob: -17.8753662109375
    8. ' de' → logprob: -18.2503662109375
    9. ' ' → logprob: -18.6253662109375
    10. ' deter' → logprob: -19.1253662109375

Token 158: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.00462841521948576
    2. '==' → logprob: -5.3796281814575195
    3. '=' → logprob: -12.37962818145752
    4. ' =' → logprob: -13.12962818145752
    5. ' !=' → logprob: -14.62962818145752
    6. ' ' → logprob: -14.75462818145752
    7. ' ' → logprob: -14.75462818145752
    8. ')==' → logprob: -15.25462818145752
    9. ')' → logprob: -15.62962818145752
    10. '0' → logprob: -16.254629135131836

Token 159: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3868711292743683
    2. ' ' → logprob: -1.136871099472046
    3. ' ' → logprob: -16.386871337890625
    4. '   ' → logprob: -18.386871337890625
    5. '  ' → logprob: -19.011871337890625
    6. '=' → logprob: -19.886871337890625
    7. '	' → logprob: -20.011871337890625
    8. '۰' → logprob: -20.449371337890625
    9. '    ' → logprob: -20.574371337890625
    10. '<|end|>' → logprob: -20.636871337890625

Token 160: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002185118617489934
    2. ' ' → logprob: -6.127185344696045
    3. ' ' → logprob: -17.002185821533203
    4. '۰' → logprob: -17.127185821533203
    5. '

' → logprob: -18.314685821533203
    6. 'zero' → logprob: -18.627185821533203
    7. '   ' → logprob: -18.689685821533203
    8. '00' → logprob: -18.689685821533203
    9. '  ' → logprob: -18.689685821533203
    10. '```' → logprob: -18.752185821533203

Token 161: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5759707093238831
    2. ':' → logprob: -0.8259707093238831
    3. '):
' → logprob: -10.950970649719238
    4. ':
' → logprob: -12.575970649719238
    5. ' :
' → logprob: -12.950970649719238
    6. '       ' → logprob: -12.950970649719238
    7. ':

' → logprob: -13.450970649719238
    8. '):' → logprob: -13.575970649719238
    9. ':return' → logprob: -14.450970649719238
    10. '           ' → logprob: -14.575970649719238

Token 162: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009417100809514523
    2. ':' → logprob: -5.6344170570373535
    3. '
' → logprob: -5.8844170570373535
    4. ':
' → logprob: -5.8844170570373535
    5. ' raise' → logprob: -9.259417533874512
    6. 'raise' → logprob: -10.134417533874512
    7. ',' → logprob: -10.259417533874512
    8. '            
' → logprob: -10.884417533874512
    9. '          ' → logprob: -12.134417533874512
    10. '       ' → logprob: -12.134417533874512

Token 163: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.029869314283132553
    2. 'raise' (adapté à ' raise') → logprob: -3.529869318008423
    3. '           ' → logprob: -9.404869079589844
    4. ' return' → logprob: -11.279869079589844
    5. '            ' → logprob: -11.529869079589844
    6. '	raise' → logprob: -11.779869079589844
    7. 'return' → logprob: -12.529869079589844
    8. '
' → logprob: -13.654869079589844
    9. '        ' → logprob: -15.029869079589844
    10. '    ' → logprob: -15.279869079589844

Token 164: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.062000297009944916
    2. 'Value' → logprob: -2.812000274658203
    3. ' Zero' → logprob: -11.562000274658203
    4. 'Zero' → logprob: -11.562000274658203
    5. '	Value' → logprob: -11.687000274658203
    6. ' ' → logprob: -12.562000274658203
    7. '   ' → logprob: -14.562000274658203
    8. '(Value' → logprob: -15.062000274658203
    9. '_Value' → logprob: -15.562000274658203
    10. ' Exception' → logprob: -15.687000274658203

Token 165: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -5.512236498361744e-07
    2. 'rror' → logprob: -15.000000953674316
    3. 'Value' → logprob: -17.0
    4. '   ' → logprob: -17.25
    5. 'SError' → logprob: -17.5
    6. '           ' → logprob: -17.875
    7. '
' → logprob: -18.625
    8. ' Error' → logprob: -19.5
    9. 'Erro' → logprob: -19.625
    10. 'error' → logprob: -20.0

Token 166: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0003802680876106024
    2. '(' → logprob: -7.875380039215088
    3. '(
' → logprob: -16.00037956237793
    4. '('' → logprob: -16.87537956237793
    5. '"' → logprob: -17.75037956237793
    6. ' ("' → logprob: -17.87537956237793
    7. '(",' → logprob: -19.25037956237793
    8. '(

' → logprob: -19.50037956237793
    9. '()' → logprob: -20.62537956237793
    10. ')("' → logprob: -20.75037956237793

Token 167: 'The' (ID: 976)
  Prédit: 'The'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'The' → logprob: -0.7122295498847961
    2. ' The' → logprob: -1.3372294902801514
    3. 'No' → logprob: -1.7122294902801514
    4. ' No' → logprob: -3.3372294902801514
    5. 'System' → logprob: -3.8372294902801514
    6. ' System' → logprob: -4.9622297286987305
    7. ' Systems' → logprob: -6.8372297286987305
    8. 'Systems' → logprob: -7.8372297286987305
    9. 'Linear' → logprob: -8.96222972869873
    10. 'Equ' → logprob: -9.08722972869873

Token 168: ' system' (ID: 2420)
  Prédit: ' system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' system' → logprob: -0.008392231538891792
    2. ' equations' → logprob: -5.508392333984375
    3. 'system' → logprob: -5.758392333984375
    4. ' equation' → logprob: -7.758392333984375
    5. 'equ' → logprob: -8.633392333984375
    6. ' linear' → logprob: -8.633392333984375
    7. ' coefficient' → logprob: -8.883392333984375
    8. 'linear' → logprob: -9.258392333984375
    9. ' given' → logprob: -9.633392333984375
    10. ' coefficients' → logprob: -10.883392333984375

Token 169: ' does' (ID: 2226)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.02874084934592247
    2. ' is' → logprob: -3.903740882873535
    3. ' does' → logprob: -5.278740882873535
    4. ' cannot' → logprob: -5.903740882873535
    5. 'has' → logprob: -8.778740882873535
    6. ' ' → logprob: -9.278740882873535
    7. 'cannot' → logprob: -10.278740882873535
    8. ' may' → logprob: -10.653740882873535
    9. 'is' → logprob: -12.028740882873535
    10. ' of' → logprob: -12.278740882873535

Token 170: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4741004407405853
    2. 'not' → logprob: -0.9741004705429077
    3. 'n't' → logprob: -10.724100112915039
    4. '	not' → logprob: -14.474100112915039
    5. '_not' → logprob: -14.849100112915039
    6. '<|end|>' → logprob: -15.599100112915039
    7. 'n' → logprob: -15.849100112915039
    8. ''t' → logprob: -16.59910011291504
    9. 't' → logprob: -16.97410011291504
    10. ' ' → logprob: -17.22410011291504

Token 171: ' have' (ID: 679)
  Prédit: ' have'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.07999294251203537
    2. 'have' → logprob: -2.5799930095672607
    3. '_have' → logprob: -7.454992771148682
    4. ' has' → logprob: -7.954992771148682
    5. 'has' → logprob: -9.32999324798584
    6. 'Have' → logprob: -10.45499324798584
    7. ' ' → logprob: -10.45499324798584
    8. '    ' → logprob: -11.70499324798584
    9. ' admit' → logprob: -12.20499324798584
    10. ' Have' → logprob: -13.20499324798584

Token 172: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0022225799039006233
    2. 'a' → logprob: -6.127222537994385
    3. ' unique' → logprob: -10.377223014831543
    4. ' exactly' → logprob: -13.002223014831543
    5. ' ' → logprob: -13.502223014831543
    6. ' one' → logprob: -13.752223014831543
    7. ' an' → logprob: -14.377223014831543
    8. ' any' → logprob: -15.002223014831543
    9. 'unique' → logprob: -15.127223014831543
    10. 'exact' → logprob: -15.877223014831543

Token 173: ' unique' (ID: 5746)
  Prédit: ' unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unique' → logprob: -0.026308655738830566
    2. 'unique' → logprob: -3.651308536529541
    3. ' solution' → logprob: -12.2763090133667
    4. ' single' → logprob: -13.2763090133667
    5. '_unique' → logprob: -13.6513090133667
    6. 'solution' → logprob: -15.4013090133667
    7. '(unique' → logprob: -15.5263090133667
    8. 'single' → logprob: -15.7763090133667
    9. '.unique' → logprob: -16.776308059692383
    10. '   ' → logprob: -16.776308059692383

Token 174: ' solution' (ID: 7578)
  Prédit: ' solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.0006970656104385853
    2. 'solution' → logprob: -7.500697135925293
    3. ' ' → logprob: -8.875697135925293
    4. '_solution' → logprob: -13.250697135925293
    5. 'Solution' → logprob: -14.250697135925293
    6. '  ' → logprob: -14.375697135925293
    7. ' ' → logprob: -14.625697135925293
    8. '   ' → logprob: -15.750697135925293
    9. ' solve' → logprob: -15.875697135925293
    10. ' Solution' → logprob: -16.000696182250977

Token 175: '.")
' (ID: 27834)
  Prédit: '.")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.")
' → logprob: -0.04262000694870949
    2. '.")' → logprob: -3.5426199436187744
    3. '")
' → logprob: -4.4176201820373535
    4. '")' → logprob: -7.2926201820373535
    5. '.")
' → logprob: -10.917619705200195
    6. '.")

' → logprob: -11.417619705200195
    7. '       ' → logprob: -11.792619705200195
    8. '.' → logprob: -12.667619705200195
    9. '."' → logprob: -13.667619705200195
    10. ',' → logprob: -14.792619705200195

Token 176: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5536346435546875
    2. '       ' → logprob: -0.9286346435546875
    3. '        
' → logprob: -3.8036346435546875
    4. 'x' → logprob: -5.0536346435546875
    5. ' x' → logprob: -7.5536346435546875
    6. '    
' → logprob: -8.053634643554688
    7. '  
' → logprob: -9.053634643554688
    8. ' 
' → logprob: -9.303634643554688
    9. '
' → logprob: -9.553634643554688
    10. '      
' → logprob: -10.178634643554688

Token 177: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0011418843641877174
    2. '       ' → logprob: -7.1261420249938965
    3. ' x' → logprob: -8.001141548156738
    4. '```' → logprob: -13.751141548156738
    5. '   ' → logprob: -13.876141548156738
    6. 'y' → logprob: -16.126142501831055
    7. '_x' → logprob: -16.251142501831055
    8. '        
' → logprob: -16.626142501831055
    9. 'return' → logprob: -17.001142501831055
    10. '	x' → logprob: -17.501142501831055

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061969365924596786
    2. '=' → logprob: -2.81196928024292
    3. ',' → logprob: -14.311969757080078
    4. '_' → logprob: -14.811969757080078
    5. ' ' → logprob: -15.311969757080078
    6. '_val' → logprob: -15.811969757080078
    7. '    ' → logprob: -16.061969757080078
    8. '_value' → logprob: -16.561969757080078
    9. ')' → logprob: -16.936969757080078
    10. ' =
' → logprob: -17.186969757080078

Token 179: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008166544139385223
    2. ' (' → logprob: -7.375816822052002
    3. '(c' → logprob: -9.375816345214844
    4. '(f' → logprob: -10.000816345214844
    5. '((' → logprob: -10.375816345214844
    6. '(e' → logprob: -11.875816345214844
    7. '   ' → logprob: -12.125816345214844
    8. '(d' → logprob: -12.500816345214844
    9. '(float' → logprob: -12.875816345214844
    10. '(b' → logprob: -12.875816345214844

Token 180: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.031071096658706665
    2. ' self' → logprob: -3.531071186065674
    3. '(self' → logprob: -6.656071186065674
    4. ' (' → logprob: -10.781070709228516
    5. '(' → logprob: -12.406070709228516
    6. '   ' → logprob: -12.531070709228516
    7. '	self' → logprob: -13.031070709228516
    8. ')' → logprob: -13.531070709228516
    9. '       ' → logprob: -15.031070709228516
    10. ' ' → logprob: -15.281070709228516

Token 181: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.0009668456041254103
    2. '.e' → logprob: -7.000967025756836
    3. '.f' → logprob: -10.375967025756836
    4. 'c' → logprob: -11.875967025756836
    5. '.' → logprob: -12.125967025756836
    6. 'e' → logprob: -12.375967025756836
    7. '	c' → logprob: -12.750967025756836
    8. ' .' → logprob: -13.500967025756836
    9. 'self' → logprob: -13.875967025756836
    10. '   ' → logprob: -14.750967025756836

Token 182: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0036796480417251587
    2. '*' → logprob: -5.6286797523498535
    3. '*self' → logprob: -9.503679275512695
    4. ' ' → logprob: -12.253679275512695
    5. 'self' → logprob: -16.378679275512695
    6. 'e' → logprob: -17.378679275512695
    7. ' self' → logprob: -17.753679275512695
    8. ' ' → logprob: -17.878679275512695
    9. '**' → logprob: -18.128679275512695
    10. ')' → logprob: -18.628679275512695

Token 183: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931767463684082
    2. 'self' → logprob: -0.6931767463684082
    3. 'e' → logprob: -10.81817626953125
    4. '	self' → logprob: -12.94317626953125
    5. ')' → logprob: -13.69317626953125
    6. ' e' → logprob: -13.81817626953125
    7. '*self' → logprob: -13.94317626953125
    8. '(self' → logprob: -14.06817626953125
    9. '=self' → logprob: -14.06817626953125
    10. ' ' → logprob: -14.31817626953125

Token 184: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.056152090430259705
    2. 'e' → logprob: -3.056152105331421
    3. 'self' → logprob: -5.306151866912842
    4. '*' → logprob: -6.931151866912842
    5. '.' → logprob: -6.931151866912842
    6. ' e' → logprob: -7.806151866912842
    7. ''e' → logprob: -9.80615234375
    8. '	e' → logprob: -10.68115234375
    9. ' .' → logprob: -10.68115234375
    10. '```' → logprob: -11.05615234375

Token 185: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.000491672137286514
    2. '-' → logprob: -7.875491619110107
    3. ' ' → logprob: -9.125492095947266
    4. ')' → logprob: -13.750492095947266
    5. ' ' → logprob: -14.875492095947266
    6. '        ' → logprob: -15.125492095947266
    7. ' -
' → logprob: -15.500492095947266
    8. '    ' → logprob: -15.875492095947266
    9. '  ' → logprob: -16.250492095947266
    10. '       ' → logprob: -16.375492095947266

Token 186: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005996813531965017
    2. ' self' → logprob: -5.1309967041015625
    3. 'b' → logprob: -9.755996704101562
    4. '       ' → logprob: -12.755996704101562
    5. '<|end|>' → logprob: -13.130996704101562
    6. '(self' → logprob: -13.630996704101562
    7. '	self' → logprob: -14.005996704101562
    8. '[self' → logprob: -14.130996704101562
    9. ' ' → logprob: -14.255996704101562
    10. '*self' → logprob: -14.380996704101562

Token 187: '.b' (ID: 1292)
  Prédit: '.f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.023875750601291656
    2. '.b' → logprob: -4.023875713348389
    3. '.' → logprob: -6.023875713348389
    4. '.c' → logprob: -7.148875713348389
    5. 'f' → logprob: -7.398875713348389
    6. ')' → logprob: -7.398875713348389
    7. ').' → logprob: -8.148876190185547
    8. ' .' → logprob: -8.398876190185547
    9. 'self' → logprob: -8.898876190185547
    10. '*' → logprob: -8.898876190185547

Token 188: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.016037534922361374
    2. '*' → logprob: -4.141037464141846
    3. '*self' → logprob: -13.391037940979004
    4. ' ' → logprob: -14.016037940979004
    5. ')' → logprob: -15.266037940979004
    6. ' ' → logprob: -15.766037940979004
    7. '*object' → logprob: -16.266036987304688
    8. '**' → logprob: -16.266036987304688
    9. '<|end|>' → logprob: -16.891036987304688
    10. '*f' → logprob: -17.016036987304688

Token 189: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47411641478538513
    2. ' self' → logprob: -0.9741164445877075
    3. '*self' → logprob: -11.349116325378418
    4. '	self' → logprob: -11.474116325378418
    5. '(self' → logprob: -11.974116325378418
    6. '[self' → logprob: -12.849116325378418
    7. ' ' → logprob: -13.099116325378418
    8. '<|end|>' → logprob: -13.724116325378418
    9. '       ' → logprob: -14.099116325378418
    10. '=self' → logprob: -14.224116325378418

Token 190: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.11271122097969055
    2. '.c' → logprob: -2.362711191177368
    3. '.' → logprob: -5.612711429595947
    4. 'f' → logprob: -5.612711429595947
    5. '*' → logprob: -6.862711429595947
    6. '[' → logprob: -7.112711429595947
    7. ')' → logprob: -7.362711429595947
    8. '*f' → logprob: -7.362711429595947
    9. ' *' → logprob: -7.862711429595947
    10. ' .' → logprob: -7.862711429595947

Token 191: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.968312951968983e-06
    2. ' )' → logprob: -11.625009536743164
    3. '       ' → logprob: -14.250009536743164
    4. ')/' → logprob: -15.625009536743164
    5. ')
' → logprob: -16.375009536743164
    6. '   ' → logprob: -16.875009536743164
    7. '```' → logprob: -19.625009536743164
    8. ')

' → logprob: -19.750009536743164
    9. ')/(' → logprob: -19.875009536743164
    10. '    ' → logprob: -19.875009536743164

Token 192: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.062039270997047424
    2. '/' → logprob: -2.812039375305176
    3. '/d' → logprob: -9.937039375305176
    4. ')' → logprob: -11.687039375305176
    5. '       ' → logprob: -11.687039375305176
    6. ' ' → logprob: -12.437039375305176
    7. ' ' → logprob: -14.187039375305176
    8. ' /
' → logprob: -14.187039375305176
    9. '/
' → logprob: -15.437039375305176
    10. ' )' → logprob: -15.687039375305176

Token 193: ' det' (ID: 1476)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.2014133334159851
    2. ' det' → logprob: -1.7014133930206299
    3. '_det' → logprob: -17.451414108276367
    4. '(det' → logprob: -19.201414108276367
    5. '.det' → logprob: -19.701414108276367
    6. 'd' → logprob: -20.451414108276367
    7. 'determ' → logprob: -21.701414108276367
    8. '
' → logprob: -21.951414108276367
    9. ' determinant' → logprob: -22.326414108276367
    10. '```' → logprob: -22.326414108276367

Token 194: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02197430655360222
    2. '
' → logprob: -4.146974086761475
    3. '<|end|>' → logprob: -6.146974086761475
    4. '        
' → logprob: -6.396974086761475
    5. ' y' → logprob: -7.271974086761475
    6. 'y' → logprob: -7.646974086761475
    7. '        ' → logprob: -8.646974563598633
    8. '' → logprob: -9.146974563598633
    9. 'x' → logprob: -9.396974563598633
    10. 'n' → logprob: -9.396974563598633

Token 195: '       ' (ID: 309)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10348102450370789
    2. ' y' → logprob: -2.8534810543060303
    3. '       ' → logprob: -3.2284810543060303
    4. '
' → logprob: -7.103480815887451
    5. '        
' → logprob: -9.35348129272461
    6. '	y' → logprob: -10.60348129272461
    7. ' 
' → logprob: -11.10348129272461
    8. '        ' → logprob: -11.22848129272461
    9. '    ' → logprob: -11.60348129272461
    10. '   ' → logprob: -11.72848129272461

Token 196: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.00861729308962822
    2. ' y' → logprob: -4.758617401123047
    3. '       ' → logprob: -12.883617401123047
    4. '	y' → logprob: -16.133617401123047
    5. '   ' → logprob: -17.008617401123047
    6. 'return' → logprob: -17.633617401123047
    7. 'yj' → logprob: -17.633617401123047
    8. '(y' → logprob: -17.758617401123047
    9. ' ' → logprob: -18.008617401123047
    10. '        
' → logprob: -18.008617401123047

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01416350994259119
    2. '=' → logprob: -4.264163494110107
    3. ' =(' → logprob: -17.764163970947266
    4. ')' → logprob: -19.014163970947266
    5. ' ' → logprob: -19.639163970947266
    6. ' ' → logprob: -19.639163970947266
    7. ',' → logprob: -20.139163970947266
    8. ' =)' → logprob: -20.264163970947266
    9. ' =
' → logprob: -20.514163970947266
    10. '>' → logprob: -20.889163970947266

Token 198: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.994086627149954e-05
    2. ' (' → logprob: -9.625080108642578
    3. '(s' → logprob: -11.875080108642578
    4. '(a' → logprob: -13.250080108642578
    5. '((' → logprob: -13.625080108642578
    6. '(c' → logprob: -14.000080108642578
    7. '(sys' → logprob: -14.000080108642578
    8. '(x' → logprob: -14.250080108642578
    9. '(d' → logprob: -15.125080108642578
    10. '(data' → logprob: -15.500080108642578

Token 199: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006284446571953595
    2. ' self' → logprob: -7.375628471374512
    3. '(self' → logprob: -14.375628471374512
    4. '	self' → logprob: -14.375628471374512
    5. ' ' → logprob: -15.750628471374512
    6. 'a' → logprob: -16.000627517700195
    7. '   ' → logprob: -16.000627517700195
    8. '=self' → logprob: -16.125627517700195
    9. '[self' → logprob: -16.250627517700195
    10. ')' → logprob: -16.750627517700195

Token 200: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.003135889768600464
    2. '.f' → logprob: -6.628135681152344
    3. '.' → logprob: -7.003135681152344
    4. '.e' → logprob: -7.878135681152344
    5. 'self' → logprob: -8.503135681152344
    6. 'a' → logprob: -9.378135681152344
    7. '.ai' → logprob: -10.378135681152344
    8. ').' → logprob: -10.503135681152344
    9. '.d' → logprob: -10.503135681152344
    10. ' .' → logprob: -11.378135681152344

Token 201: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.47409194707870483
    2. ' *' → logprob: -0.9740919470787048
    3. '*self' → logprob: -11.599091529846191
    4. '**' → logprob: -12.724091529846191
    5. ')' → logprob: -13.849091529846191
    6. ' ' → logprob: -14.349091529846191
    7. '*f' → logprob: -14.724091529846191
    8. ' ' → logprob: -15.224091529846191
    9. '*object' → logprob: -16.099092483520508
    10. '*s' → logprob: -16.224092483520508

Token 202: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029767265543341637
    2. ' self' → logprob: -3.5297672748565674
    3. 'f' → logprob: -11.654767036437988
    4. '(self' → logprob: -12.404767036437988
    5. '*self' → logprob: -12.904767036437988
    6. '	self' → logprob: -15.279767036437988
    7. 's' → logprob: -15.529767036437988
    8. '`' → logprob: -15.529767036437988
    9. ')' → logprob: -15.779767036437988
    10. ' ' → logprob: -15.904767036437988

Token 203: '.f' (ID: 1196)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3911639451980591
    2. ' *' → logprob: -1.141163945198059
    3. '*f' → logprob: -5.7661638259887695
    4. 'f' → logprob: -6.8911638259887695
    5. '*self' → logprob: -9.01616382598877
    6. '.f' → logprob: -12.26616382598877
    7. ' f' → logprob: -13.01616382598877
    8. 'self' → logprob: -13.64116382598877
    9. 's' → logprob: -13.76616382598877
    10. ' ' → logprob: -13.89116382598877

Token 204: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04866412654519081
    2. '-' → logprob: -3.048664093017578
    3. ' ' → logprob: -9.548664093017578
    4. ')' → logprob: -12.798664093017578
    5. '        ' → logprob: -14.173664093017578
    6. ' -
' → logprob: -14.423664093017578
    7. ' ' → logprob: -14.548664093017578
    8. '```' → logprob: -15.423664093017578
    9. '    ' → logprob: -16.048664093017578
    10. ' )' → logprob: -16.173664093017578

Token 205: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03804459050297737
    2. ' self' → logprob: -3.2880446910858154
    3. '	self' → logprob: -13.538044929504395
    4. '       ' → logprob: -14.288044929504395
    5. '   ' → logprob: -14.663044929504395
    6. '(self' → logprob: -14.788044929504395
    7. '    ' → logprob: -16.788043975830078
    8. '[self' → logprob: -16.788043975830078
    9. ' ' → logprob: -16.913043975830078
    10. ')' → logprob: -17.163043975830078

Token 206: '.c' (ID: 1081)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6400133371353149
    2. '.c' → logprob: -0.7650133371353149
    3. 'c' → logprob: -6.390013217926025
    4. '.' → logprob: -6.515013217926025
    5. '[' → logprob: -7.140013217926025
    6. ' self' → logprob: -7.140013217926025
    7. ')' → logprob: -7.515013217926025
    8. '*self' → logprob: -8.140013694763184
    9. ' .' → logprob: -8.390013694763184
    10. '*' → logprob: -8.515013694763184

Token 207: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.25193002820014954
    2. '*' → logprob: -1.5019299983978271
    3. ' ' → logprob: -14.751930236816406
    4. '*self' → logprob: -15.376930236816406
    5. '**' → logprob: -15.751930236816406
    6. ' ' → logprob: -16.126930236816406
    7. ')' → logprob: -16.501930236816406
    8. '*d' → logprob: -17.376930236816406
    9. '<|end|>' → logprob: -17.751930236816406
    10. '*object' → logprob: -18.251930236816406

Token 208: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029768195003271103
    2. ' self' → logprob: -3.529768228530884
    3. '*self' → logprob: -11.779767990112305
    4. 'd' → logprob: -12.404767990112305
    5. '(self' → logprob: -13.279767990112305
    6. '	self' → logprob: -13.404767990112305
    7. '[self' → logprob: -13.779767990112305
    8. '   ' → logprob: -14.529767990112305
    9. '       ' → logprob: -14.654767990112305
    10. ' ' → logprob: -15.279767990112305

Token 209: '.d' (ID: 1380)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.043658994138240814
    2. '*d' → logprob: -3.293658971786499
    3. '.d' → logprob: -5.793659210205078
    4. ' *' → logprob: -6.418659210205078
    5. 'd' → logprob: -7.043659210205078
    6. '.e' → logprob: -10.793659210205078
    7. '*self' → logprob: -11.168659210205078
    8. ')' → logprob: -12.043659210205078
    9. 'e' → logprob: -12.543659210205078
    10. ' d' → logprob: -13.168659210205078

Token 210: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003806257154792547
    2. ' )' → logprob: -7.875380516052246
    3. '       ' → logprob: -15.500380516052246
    4. ')/' → logprob: -15.625380516052246
    5. '   ' → logprob: -15.875380516052246
    6. '）' → logprob: -18.500381469726562
    7. ')
' → logprob: -18.625381469726562
    8. ' ' → logprob: -19.000381469726562
    9. '```' → logprob: -19.125381469726562
    10. '	' → logprob: -19.500381469726562

Token 211: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.38819441199302673
    2. ' /' → logprob: -1.1381944417953491
    3. ')' → logprob: -6.638194561004639
    4. '/d' → logprob: -12.38819408416748
    5. ' ' → logprob: -12.63819408416748
    6. ' )' → logprob: -13.13819408416748
    7. ' ' → logprob: -13.63819408416748
    8. ')/' → logprob: -13.88819408416748
    9. '       ' → logprob: -15.38819408416748
    10. '```' → logprob: -15.76319408416748

Token 212: ' det' (ID: 1476)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.10020667314529419
    2. ' det' → logprob: -2.3502066135406494
    3. '_det' → logprob: -19.85020637512207
    4. '(det' → logprob: -20.72520637512207
    5. '.det' → logprob: -20.85020637512207
    6. ' ' → logprob: -22.22520637512207
    7. 'Det' → logprob: -22.97520637512207
    8. 'def' → logprob: -23.85020637512207
    9. ' ' → logprob: -23.85020637512207
    10. 'd' → logprob: -24.60020637512207

Token 213: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002133728936314583
    2. ' return' → logprob: -7.127133846282959
    3. 'return' → logprob: -7.252133846282959
    4. '	' → logprob: -8.0021333694458
    5. '
' → logprob: -8.3771333694458
    6. '	return' → logprob: -10.7521333694458
    7. '        
' → logprob: -11.8771333694458
    8. ')' → logprob: -12.1271333694458
    9. '<|end|>' → logprob: -12.3771333694458
    10. '   ' → logprob: -12.8771333694458

Token 214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.1054253011243418e-05
    2. ' return' → logprob: -11.250020980834961
    3. 'return' → logprob: -12.125020980834961
    4. '	' → logprob: -13.375020980834961
    5. '   ' → logprob: -14.375020980834961
    6. '	return' → logprob: -15.125020980834961
    7. '      ' → logprob: -16.62502098083496
    8. '<|end|>' → logprob: -17.50002098083496
    9. '```' → logprob: -17.62502098083496
    10. '        
' → logprob: -17.62502098083496

Token 215: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7639917135238647
    2. 'return' (adapté à ' return') → logprob: -1.0139917135238647
    3. ' return' → logprob: -1.7639917135238647
    4. '	return' → logprob: -10.013991355895996
    5. ')return' → logprob: -11.763991355895996
    6. '   ' → logprob: -12.263991355895996
    7. ':return' → logprob: -12.763991355895996
    8. 'eturn' → logprob: -13.388991355895996
    9. ' ' → logprob: -14.013991355895996
    10. '	' → logprob: -14.013991355895996

Token 216: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2280459851026535
    2. 'x' → logprob: -1.97804594039917
    3. ' (' → logprob: -2.97804594039917
    4. ' x' → logprob: -4.22804594039917
    5. '(' → logprob: -9.228046417236328
    6. '(
' → logprob: -13.728046417236328
    7. '   ' → logprob: -15.728046417236328
    8. '	x' → logprob: -15.853046417236328
    9. ' ' → logprob: -15.978046417236328
    10. ' ' → logprob: -16.478046417236328

Token 217: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.941850526549388e-06
    2. ' x' → logprob: -11.750007629394531
    3. ')x' → logprob: -21.37500762939453
    4. '	x' → logprob: -22.62500762939453
    5. '"x' → logprob: -24.00000762939453
    6. '   ' → logprob: -24.75000762939453
    7. ')' → logprob: -25.25000762939453
    8. '{x' → logprob: -26.00000762939453
    9. '(x' → logprob: -26.62500762939453
    10. '$x' → logprob: -26.62500762939453

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5570885807392187e-05
    2. ' ,' → logprob: -11.125015258789062
    3. ',y' → logprob: -14.375015258789062
    4. ',
' → logprob: -16.000015258789062
    5. ')' → logprob: -17.875015258789062
    6. '‌,' → logprob: -18.500015258789062
    7. '),' → logprob: -19.000015258789062
    8. ',

' → logprob: -19.375015258789062
    9. ',x' → logprob: -19.500015258789062
    10. '',' → logprob: -19.750015258789062

Token 219: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.03804149478673935
    2. 'y' → logprob: -3.288041591644287
    3. ' ' → logprob: -17.288042068481445
    4. ')y' → logprob: -17.663042068481445
    5. ')' → logprob: -18.663042068481445
    6. '	y' → logprob: -19.038042068481445
    7. ' ' → logprob: -19.663042068481445
    8. ''y' → logprob: -21.038042068481445
    9. '
' → logprob: -21.913042068481445
    10. ' 
' → logprob: -22.038042068481445

Token 220: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.125
    3. ' )' → logprob: -16.875
    4. '}' → logprob: -18.75
    5. ')#' → logprob: -19.25
    6. ')}' → logprob: -20.0
    7. ')return' → logprob: -20.25
    8. ')`' → logprob: -20.75
    9. '))' → logprob: -21.125
    10. ')

' → logprob: -21.375

Token 221: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.605434238910675
    2. '#' → logprob: -1.2304341793060303
    3. '```' → logprob: -2.6054341793060303
    4. '<|end|>' → logprob: -3.1054341793060303
    5. 'x' → logprob: -4.230434417724609
    6. 'class' → logprob: -4.355434417724609
    7. 'import' → logprob: -5.480434417724609
    8. ')' → logprob: -5.730434417724609
    9. 'coeff' → logprob: -5.980434417724609
    10. 'a' → logprob: -6.480434417724609

Token 222: ' Formatter' (ID: 177673)
  Prédit: ' Quadr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Quadr' → logprob: -0.5669426918029785
    2. ' Three' → logprob: -1.6919426918029785
    3. ' Two' → logprob: -2.4419426918029785
    4. 'Three' → logprob: -2.9419426918029785
    5. 'Quadr' → logprob: -3.1919426918029785
    6. 'Two' → logprob: -3.4419426918029785
    7. ' Linear' → logprob: -4.4419426918029785
    8. ' Simple' → logprob: -5.8169426918029785
    9. ' Non' → logprob: -5.8169426918029785
    10. ' Single' → logprob: -5.9419426918029785

Token 223: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002146226615877822
    2. '(' → logprob: -8.750214576721191
    3. '):' → logprob: -10.625214576721191
    4. ':
' → logprob: -11.125214576721191
    5. '():' → logprob: -11.500214576721191
    6. ' :' → logprob: -13.500214576721191
    7. '>:' → logprob: -13.500214576721191
    8. '(Abstract' → logprob: -14.000214576721191
    9. ':

' → logprob: -14.500214576721191
    10. ':def' → logprob: -14.875214576721191

Token 224: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.0016787484055384994
    2. '):' → logprob: -6.751678943634033
    3. ')' → logprob: -8.001678466796875
    4. ' ABC' → logprob: -9.501678466796875
    5. '):
' → logprob: -9.876678466796875
    6. 'object' → logprob: -10.876678466796875
    7. 'str' → logprob: -12.001678466796875
    8. 'AB' → logprob: -12.126678466796875
    9. 'abc' → logprob: -12.376678466796875
    10. '```' → logprob: -13.001678466796875

Token 225: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013810674427077174
    2. '):
' → logprob: -6.626380920410156
    3. ')' → logprob: -10.001380920410156
    4. '):
' → logprob: -12.626380920410156
    5. ' ):' → logprob: -12.751380920410156
    6. '):

' → logprob: -12.876380920410156
    7. ':' → logprob: -14.251380920410156
    8. '```' → logprob: -16.501380920410156
    9. '   ' → logprob: -16.876380920410156
    10. '**' → logprob: -16.876380920410156

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001175343873910606
    2. '
' → logprob: -7.751175403594971
    3. '    
' → logprob: -7.876175403594971
    4. '<|end|>' → logprob: -8.376174926757812
    5. '    ' → logprob: -10.251174926757812
    6. ' def' → logprob: -10.751174926757812
    7. '<|end|>' → logprob: -10.876174926757812
    8. ' 
' → logprob: -11.376174926757812
    9. '  ' → logprob: -12.001174926757812
    10. ')' → logprob: -12.126174926757812

Token 227: ' @' (ID: 759)
  Prédit: ' @'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' @' → logprob: -0.5239421725273132
    2. '   ' → logprob: -1.023942232131958
    3. '@' (adapté à ' @') → logprob: -3.023942232131958
    4. ' def' → logprob: -11.523941993713379
    5. '  ' → logprob: -12.273941993713379
    6. '    
' → logprob: -12.273941993713379
    7. '
' → logprob: -12.648941993713379
    8. ' ' → logprob: -12.648941993713379
    9. '    ' → logprob: -12.648941993713379
    10. 'def' → logprob: -12.898941993713379

Token 228: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -4.47757811343763e-05
    2. 'staticmethod' → logprob: -10.125044822692871
    3. 'property' → logprob: -12.500044822692871
    4. ' abstract' → logprob: -14.500044822692871
    5. 'classmethod' → logprob: -14.875044822692871
    6. 'abc' → logprob: -16.000043869018555
    7. 'ab' → logprob: -18.875043869018555
    8. '.abstract' → logprob: -19.625043869018555
    9. 'abs' → logprob: -19.875043869018555
    10. 'static' → logprob: -20.750043869018555

Token 229: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.164309561252594
    2. '_method' → logprob: -1.9143095016479492
    3. 'def' → logprob: -5.539309501647949
    4. ' def' → logprob: -9.53930950164795
    5. 'classmethod' → logprob: -10.53930950164795
    6. '_token' → logprob: -10.78930950164795
    7. 'staticmethod' → logprob: -12.03930950164795
    8. '_def' → logprob: -12.16430950164795
    9. ' method' → logprob: -12.28930950164795
    10. 'meth' → logprob: -12.66430950164795

Token 230: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4776330888271332
    2. 'def' → logprob: -0.9776331186294556
    3. ' def' → logprob: -5.852632999420166
    4. '   ' → logprob: -8.227633476257324
    5. '    
' → logprob: -8.227633476257324
    6. '
' → logprob: -9.852633476257324
    7. 'method' → logprob: -11.227633476257324
    8. '	def' → logprob: -11.227633476257324
    9. '<|end|>' → logprob: -11.477633476257324
    10. '(def' → logprob: -11.602633476257324

Token 231: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015758302062749863
    2. ' def' → logprob: -4.265758514404297
    3. '   ' → logprob: -6.515758514404297
    4. '
' → logprob: -9.890758514404297
    5. 'method' → logprob: -10.890758514404297
    6. '    
' → logprob: -11.140758514404297
    7. 'classmethod' → logprob: -11.515758514404297
    8. '	def' → logprob: -11.765758514404297
    9. '_method' → logprob: -12.890758514404297
    10. '_def' → logprob: -13.140758514404297

Token 232: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00047988566802814603
    2. 'staticmethod' → logprob: -8.000479698181152
    3. 'method' → logprob: -9.500479698181152
    4. 'classmethod' → logprob: -9.750479698181152
    5. '
' → logprob: -12.000479698181152
    6. ' def' → logprob: -12.500479698181152
    7. 'property' → logprob: -13.625479698181152
    8. 'code' → logprob: -16.87548065185547
    9. 'format' → logprob: -17.25048065185547
    10. 'str' → logprob: -17.25048065185547

Token 233: ' format' (ID: 6011)
  Prédit: ' format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' format' → logprob: -0.2519353926181793
    2. 'format' → logprob: -1.501935362815857
    3. '_format' → logprob: -12.751935005187988
    4. '	format' → logprob: -13.126935005187988
    5. '.format' → logprob: -14.376935005187988
    6. '=format' → logprob: -15.751935005187988
    7. ' formats' → logprob: -15.876935005187988
    8. 'def' → logprob: -16.251935958862305
    9. ' формат' → logprob: -16.501935958862305
    10. ' def' → logprob: -16.626935958862305

Token 234: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02085518091917038
    2. '(' → logprob: -3.895855188369751
    3. '<|end|>' → logprob: -9.020854949951172
    4. '_solution' → logprob: -9.520854949951172
    5. '(solution' → logprob: -10.145854949951172
    6. '(s' → logprob: -10.645854949951172
    7. '(
' → logprob: -11.395854949951172
    8. '_results' → logprob: -11.770854949951172
    9. '_result' → logprob: -12.020854949951172
    10. '_output' → logprob: -12.270854949951172

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1714436560869217
    2. ')' → logprob: -2.9214437007904053
    3. 'self' → logprob: -3.1714437007904053
    4. 'result' → logprob: -3.5464437007904053
    5. 'solution' → logprob: -4.671443462371826
    6. '_result' → logprob: -4.921443462371826
    7. ' ,' → logprob: -5.671443462371826
    8. '(self' → logprob: -5.796443462371826
    9. '_solution' → logprob: -6.171443462371826
    10. ',result' → logprob: -6.296443462371826

Token 236: ' values' (ID: 4824)
  Prédit: ' solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.24622546136379242
    2. 'solution' → logprob: -2.121225357055664
    3. ' result' → logprob: -2.996225357055664
    4. 'result' → logprob: -3.496225357055664
    5. ' data' → logprob: -4.996225357055664
    6. ' system' → logprob: -5.746225357055664
    7. 'data' → logprob: -6.246225357055664
    8. ' value' → logprob: -6.871225357055664
    9. ' equations' → logprob: -6.996225357055664
    10. 'value' → logprob: -7.371225357055664

Token 237: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010113727301359177
    2. ')' → logprob: -4.885113716125488
    3. '):' → logprob: -6.010113716125488
    4. ' )' → logprob: -10.885113716125488
    5. ' :' → logprob: -11.135113716125488
    6. ' ):' → logprob: -11.385113716125488
    7. '):
' → logprob: -12.510113716125488
    8. '1' → logprob: -14.385113716125488
    9. '   ' → logprob: -14.760113716125488
    10. '  ' → logprob: -14.885113716125488

Token 238: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.020422643050551414
    2. ' Tuple' → logprob: -4.020422458648682
    3. 'tuple' → logprob: -6.520422458648682
    4. 'List' → logprob: -7.270422458648682
    5. ' tuple' → logprob: -9.52042293548584
    6. ')' → logprob: -10.77042293548584
    7. ' List' → logprob: -12.27042293548584
    8. 'float' → logprob: -14.27042293548584
    9. '_tuple' → logprob: -14.77042293548584
    10. '   ' → logprob: -15.14542293548584

Token 239: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.676981345459353e-06
    2. 'float' → logprob: -12.500005722045898
    3. ')' → logprob: -14.000005722045898
    4. ',float' → logprob: -14.500005722045898
    5. '[int' → logprob: -15.250005722045898
    6. '(float' → logprob: -15.750005722045898
    7. '[str' → logprob: -16.5000057220459
    8. '   ' → logprob: -16.6250057220459
    9. '):' → logprob: -17.1250057220459
    10. '<float' → logprob: -17.3750057220459

Token 240: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.7954958821064793e-05
    2. ' float' → logprob: -11.000018119812012
    3. 'flo' → logprob: -13.875018119812012
    4. ',float' → logprob: -15.625018119812012
    5. '<float' → logprob: -16.625017166137695
    6. '	float' → logprob: -17.125017166137695
    7. '(float' → logprob: -17.375017166137695
    8. ')' → logprob: -17.875017166137695
    9. '=float' → logprob: -18.500017166137695
    10. '.float' → logprob: -18.875017166137695

Token 241: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001174747827462852
    2. ',float' → logprob: -6.7511749267578125
    3. '])' → logprob: -13.001174926757812
    4. ')' → logprob: -13.751174926757812
    5. ' ,' → logprob: -14.251174926757812
    6. ',double' → logprob: -16.376174926757812
    7. '[' → logprob: -16.376174926757812
    8. ',int' → logprob: -16.376174926757812
    9. 'float' → logprob: -16.626174926757812
    10. ',)' → logprob: -16.876174926757812

Token 242: ' ...' (ID: 2550)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.06197709962725639
    2. ' float' → logprob: -2.8119771480560303
    3. '	float' → logprob: -12.68697738647461
    4. ',float' → logprob: -13.18697738647461
    5. '...' → logprob: -13.56197738647461
    6. '<float' → logprob: -14.31197738647461
    7. ')' → logprob: -14.31197738647461
    8. '(float' → logprob: -14.31197738647461
    9. '=float' → logprob: -14.93697738647461
    10. 'flo' → logprob: -15.06197738647461

Token 243: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.007995306514203548
    2. ')' → logprob: -5.007995128631592
    3. ']):' → logprob: -6.882995128631592
    4. ']):
' → logprob: -8.75799560546875
    5. '>)' → logprob: -10.63299560546875
    6. '):' → logprob: -11.13299560546875
    7. ''])' → logprob: -11.50799560546875
    8. '))' → logprob: -11.75799560546875
    9. ']' → logprob: -12.00799560546875
    10. ' ])' → logprob: -12.25799560546875

Token 244: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17799705266952515
    2. ' ->' → logprob: -2.17799711227417
    3. '->' → logprob: -3.05299711227417
    4. ')->' → logprob: -6.17799711227417
    5. ':' → logprob: -7.92799711227417
    6. ' )' → logprob: -10.302996635437012
    7. '   ' → logprob: -10.427996635437012
    8. ' )->' → logprob: -10.552996635437012
    9. '):' → logprob: -10.802996635437012
    10. ']' → logprob: -11.927996635437012

Token 245: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.07889099419116974
    2. ' str' → logprob: -2.5788910388946533
    3. '	str' → logprob: -14.703890800476074
    4. '[str' → logprob: -14.953890800476074
    5. ' ' → logprob: -15.328890800476074
    6. '   ' → logprob: -16.07889175415039
    7. 'string' → logprob: -16.32889175415039
    8. '  ' → logprob: -17.57889175415039
    9. 'stri' → logprob: -17.57889175415039
    10. ' ' → logprob: -17.82889175415039

Token 246: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04864833876490593
    2. '<|end|>' → logprob: -3.5486483573913574
    3. '):' → logprob: -4.673648357391357
    4. '   ' → logprob: -5.673648357391357
    5. ')' → logprob: -5.673648357391357
    6. ':
' → logprob: -6.298648357391357
    7. '):
' → logprob: -8.7986478805542
    8. '<|end|>' → logprob: -8.9236478805542
    9. ':return' → logprob: -9.0486478805542
    10. '
' → logprob: -9.2986478805542

Token 247: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 248: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045969702303409576
    2. 'pass' (adapté à ' pass') → logprob: -3.7959697246551514
    3. ' pass' → logprob: -3.7959697246551514
    4. '   ' → logprob: -12.67096996307373
    5. '      ' → logprob: -13.67096996307373
    6. '...' → logprob: -13.67096996307373
    7. '	pass' → logprob: -14.54596996307373
    8. '     ' → logprob: -15.42096996307373
    9. 'raise' → logprob: -15.67096996307373
    10. ' ' → logprob: -15.92096996307373

Token 249: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.06202784180641174
    2. '
' → logprob: -2.812027931213379
    3. '

' → logprob: -10.062027931213379
    4. '<|end|>' → logprob: -12.312027931213379
    5. ' class' → logprob: -12.437027931213379
    6. '  
' → logprob: -12.812027931213379
    7. '<class' → logprob: -13.437027931213379
    8. ' 
' → logprob: -13.437027931213379
    9. '
' → logprob: -13.687027931213379
    10. '    
' → logprob: -14.937027931213379

Token 250: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.006726975552737713
    2. '
' → logprob: -5.0067267417907715
    3. '

' → logprob: -11.75672721862793
    4. ' class' → logprob: -13.50672721862793
    5. '  
' → logprob: -14.00672721862793
    6. ' 
' → logprob: -14.75672721862793
    7. '<class' → logprob: -14.75672721862793
    8. '
' → logprob: -15.13172721862793
    9. '<|end|>' → logprob: -16.13172721862793
    10. '    
' → logprob: -16.38172721862793

Token 251: ' Fixed' (ID: 42962)
  Prédit: 'Simple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Simple' → logprob: -1.6085169315338135
    2. 'Solution' → logprob: -1.6085169315338135
    3. 'Two' → logprob: -2.2335169315338135
    4. 'Decimal' → logprob: -2.3585169315338135
    5. 'Tuple' → logprob: -2.4835169315338135
    6. 'Value' → logprob: -2.6085169315338135
    7. 'Result' → logprob: -2.6085169315338135
    8. 'Coordinate' → logprob: -2.7335169315338135
    9. 'Equation' → logprob: -3.1085169315338135
    10. ' Solution' → logprob: -4.483516693115234

Token 252: 'Decimal' (ID: 16147)
  Prédit: 'Width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Width' → logprob: -0.34459254145622253
    2. 'Point' → logprob: -1.594592571258545
    3. 'Decimal' → logprob: -2.594592571258545
    4. 'Formatter' → logprob: -4.469592571258545
    5. 'Precision' → logprob: -6.219592571258545
    6. 'Format' → logprob: -8.469592094421387
    7. 'Length' → logprob: -9.469592094421387
    8. 'Decimals' → logprob: -9.844592094421387
    9. 'Two' → logprob: -11.219592094421387
    10. 'width' → logprob: -12.469592094421387

Token 253: 'Formatter' (ID: 22956)
  Prédit: 'Formatter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Formatter' → logprob: -0.000916935910936445
    2. 'Format' → logprob: -7.000916957855225
    3. '(' → logprob: -12.875916481018066
    4. 'Places' → logprob: -13.625916481018066
    5. ' Formatter' → logprob: -14.375916481018066
    6. '_formatter' → logprob: -14.500916481018066
    7. 'formatter' → logprob: -15.000916481018066
    8. 'Precision' → logprob: -15.250916481018066
    9. 'Formatting' → logprob: -16.500917434692383
    10. ' places' → logprob: -17.625917434692383

Token 254: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004972712602466345
    2. ':' → logprob: -5.3799729347229
    3. '(F' → logprob: -8.004972457885742
    4. '(Abstract' → logprob: -12.379972457885742
    5. '(Form' → logprob: -12.379972457885742
    6. '():' → logprob: -13.629972457885742
    7. ' :' → logprob: -13.754972457885742
    8. '(format' → logprob: -13.754972457885742
    9. '(Default' → logprob: -14.129972457885742
    10. ':
' → logprob: -14.254972457885742

Token 255: 'Formatter' (ID: 22956)
  Prédit: 'Formatter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Formatter' → logprob: -0.0005616117268800735
    2. ' Formatter' → logprob: -7.500561714172363
    3. 'Format' → logprob: -12.125561714172363
    4. ')' → logprob: -12.875561714172363
    5. '):' → logprob: -15.125561714172363
    6. '):
' → logprob: -15.500561714172363
    7. '):

' → logprob: -16.500560760498047
    8. 'Formatting' → logprob: -17.375560760498047
    9. 'Form' → logprob: -17.500560760498047
    10. '_formatter' → logprob: -17.750560760498047

Token 256: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013332172529771924
    2. '):
' → logprob: -6.626333236694336
    3. ')' → logprob: -13.001333236694336
    4. '   ' → logprob: -13.126333236694336
    5. '):
' → logprob: -13.626333236694336
    6. ':' → logprob: -14.376333236694336
    7. ' ):' → logprob: -14.626333236694336
    8. ',' → logprob: -15.001333236694336
    9. '):

' → logprob: -15.001333236694336
    10. 'def' → logprob: -17.376333236694336

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022364973556250334
    2. ' def' → logprob: -6.627236366271973
    3. 'def' → logprob: -7.002236366271973
    4. '   ' → logprob: -16.25223731994629
    5. '	def' → logprob: -16.62723731994629
    6. '```' → logprob: -17.62723731994629
    7. ')' → logprob: -17.87723731994629
    8. '  ' → logprob: -18.00223731994629
    9. '       ' → logprob: -18.25223731994629
    10. 'class' → logprob: -18.62723731994629

Token 258: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.47451913356781006
    2. ' def' → logprob: -0.9745191335678101
    3. '   ' → logprob: -7.7245192527771
    4. '	def' → logprob: -16.224519729614258
    5. ' ' → logprob: -16.599519729614258
    6. '  ' → logprob: -17.474519729614258
    7. 'dec' → logprob: -17.599519729614258
    8. '    ' → logprob: -18.599519729614258
    9. ' decimal' → logprob: -19.224519729614258
    10. 'decimal' → logprob: -19.474519729614258

Token 259: ' __' (ID: 2516)
  Prédit: ' format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' format' → logprob: -0.018947305157780647
    2. 'format' → logprob: -4.143947124481201
    3. ' def' → logprob: -5.893947124481201
    4. ' ' → logprob: -9.89394760131836
    5. ' __' → logprob: -10.01894760131836
    6. 'def' → logprob: -11.26894760131836
    7. '_format' → logprob: -11.39394760131836
    8. ' define' → logprob: -11.64394760131836
    9. '_' → logprob: -11.89394760131836
    10. ' _' → logprob: -12.26894760131836

Token 260: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00021569548698607832
    2. ' init' → logprob: -8.500215530395508
    3. 'def' → logprob: -12.000215530395508
    4. '_init' → logprob: -12.750215530395508
    5. 'ini' → logprob: -13.750215530395508
    6. '   ' → logprob: -14.125215530395508
    7. 'name' → logprob: -15.250215530395508
    8. '  ' → logprob: -15.250215530395508
    9. '	init' → logprob: -15.625215530395508
    10. ' def' → logprob: -15.750215530395508

Token 261: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1555739790201187
    2. '__(' → logprob: -2.030574083328247
    3. ' (' → logprob: -4.530573844909668
    4. '(' → logprob: -6.280573844909668
    5. ',' → logprob: -10.280573844909668
    6. 'self' → logprob: -10.405573844909668
    7. ')(' → logprob: -10.530573844909668
    8. '_(' → logprob: -10.780573844909668
    9. '__(
' → logprob: -11.030573844909668
    10. '   ' → logprob: -11.780573844909668

Token 262: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004309076175559312
    2. ' self' → logprob: -7.750431060791016
    3. ',' → logprob: -16.000431060791016
    4. '(self' → logprob: -16.125431060791016
    5. '	self' → logprob: -17.875431060791016
    6. ',self' → logprob: -18.875431060791016
    7. '0' → logprob: -19.250431060791016
    8. '   ' → logprob: -20.000431060791016
    9. '       ' → logprob: -20.125431060791016
    10. '
' → logprob: -20.125431060791016

Token 263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011081460979767144
    2. ' ,' → logprob: -9.250110626220703
    3. 'self' → logprob: -11.500110626220703
    4. ',num' → logprob: -13.250110626220703
    5. ',value' → logprob: -14.250110626220703
    6. ',self' → logprob: -14.875110626220703
    7. '__,' → logprob: -15.000110626220703
    8. '‌,' → logprob: -15.500110626220703
    9. ',width' → logprob: -15.625110626220703
    10. '_,' → logprob: -15.750110626220703

Token 264: ' precision' (ID: 27303)
  Prédit: ' decimals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' decimals' → logprob: -0.3708517253398895
    2. 'decimal' → logprob: -2.245851755142212
    3. ' decimal' → logprob: -2.370851755142212
    4. 'dec' → logprob: -2.370851755142212
    5. 'precision' → logprob: -4.995851516723633
    6. ' precision' → logprob: -5.120851516723633
    7. 'digits' → logprob: -5.995851516723633
    8. ' places' → logprob: -7.120851516723633
    9. ' digits' → logprob: -7.370851516723633
    10. 'places' → logprob: -7.870851516723633

Token 265: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00399742741137743
    2. '):' → logprob: -6.128997325897217
    3. '=' → logprob: -6.378997325897217
    4. ':int' → logprob: -9.253997802734375
    5. ')' → logprob: -11.628997802734375
    6. ' :' → logprob: -12.378997802734375
    7. ',' → logprob: -13.378997802734375
    8. '):
' → logprob: -14.128997802734375
    9. ' ):' → logprob: -14.128997802734375
    10. '<|end|>' → logprob: -14.128997802734375

Token 266: ' int' (ID: 677)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07924534380435944
    2. ' ' → logprob: -2.5792453289031982
    3. '3' → logprob: -8.579245567321777
    4. ')' → logprob: -9.329245567321777
    5. '4' → logprob: -10.204245567321777
    6. 'int' → logprob: -10.704245567321777
    7. ' )' → logprob: -12.079245567321777
    8. '1' → logprob: -12.204245567321777
    9. '6' → logprob: -13.079245567321777
    10. ' int' → logprob: -13.204245567321777

Token 267: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017912088660523295
    2. '):
' → logprob: -6.376791000366211
    3. ')' → logprob: -10.126791000366211
    4. ',' → logprob: -10.876791000366211
    5. ':' → logprob: -11.001791000366211
    6. ' ):' → logprob: -11.626791000366211
    7. '=' → logprob: -12.876791000366211
    8. '):
' → logprob: -13.376791000366211
    9. '   ' → logprob: -15.876791000366211
    10. '):

' → logprob: -16.00179100036621

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008226146455854177
    2. 'self' → logprob: -7.5008225440979
    3. ' self' → logprob: -8.500823020935059
    4. '   ' → logprob: -9.625823020935059
    5. '	self' → logprob: -16.375822067260742
    6. '      ' → logprob: -17.000822067260742
    7. '	   ' → logprob: -17.125822067260742
    8. ',' → logprob: -17.500822067260742
    9. '	' → logprob: -17.500822067260742
    10. ' ' → logprob: -17.875822067260742

Token 269: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.41288164258003235
    2. ' self' → logprob: -1.16288161277771
    3. '       ' → logprob: -3.66288161277771
    4. '   ' → logprob: -11.162881851196289
    5. '	self' → logprob: -13.162881851196289
    6. ' ' → logprob: -14.912881851196289
    7. ' ' → logprob: -16.41288185119629
    8. '    ' → logprob: -17.16288185119629
    9. '           ' → logprob: -17.28788185119629
    10. '      ' → logprob: -17.28788185119629

Token 270: '.prec' (ID: 109392)
  Prédit: '.prec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.prec' → logprob: -0.25197237730026245
    2. '.' → logprob: -1.5019724369049072
    3. ' .' → logprob: -10.126972198486328
    4. 'precision' → logprob: -13.751972198486328
    5. '._' → logprob: -14.251972198486328
    6. '.pres' → logprob: -14.251972198486328
    7. '.p' → logprob: -15.251972198486328
    8. '_precision' → logprob: -15.751972198486328
    9. '_PREC' → logprob: -16.251972198486328
    10. ' precision' → logprob: -16.376972198486328

Token 271: 'ision' (ID: 3625)
  Prédit: 'ision'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ision' → logprob: -1.5048530030981055e-06
    2. 'ission' → logprob: -14.375001907348633
    3. 'ISION' → logprob: -14.875001907348633
    4. 'cision' → logprob: -15.375001907348633
    5. 'isio' → logprob: -15.875001907348633
    6. 'is' → logprob: -17.375001907348633
    7. 'isions' → logprob: -17.375001907348633
    8. 'isi' → logprob: -18.500001907348633
    9. '```' → logprob: -18.750001907348633
    10. '   ' → logprob: -18.750001907348633

Token 272: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520194351673126
    2. ' =' → logprob: -1.5020194053649902
    3. ' ' → logprob: -9.377019882202148
    4. '<|end|>' → logprob: -13.752019882202148
    5. ',' → logprob: -14.002019882202148
    6. '=int' → logprob: -14.252019882202148
    7. '   ' → logprob: -14.252019882202148
    8. '  ' → logprob: -14.377019882202148
    9. ':' → logprob: -14.502019882202148
    10. ')' → logprob: -15.002019882202148

Token 273: ' precision' (ID: 27303)
  Prédit: ' precision'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' precision' → logprob: -0.3868713676929474
    2. 'precision' → logprob: -1.136871337890625
    3. '_precision' → logprob: -15.761871337890625
    4. 'prec' → logprob: -16.261871337890625
    5. '10' → logprob: -16.886871337890625
    6. ' ' → logprob: -17.886871337890625
    7. '   ' → logprob: -18.136871337890625
    8. '    ' → logprob: -18.511871337890625
    9. '0' → logprob: -19.011871337890625
    10. 'Precision' → logprob: -19.136871337890625

Token 274: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24722488224506378
    2. '   ' → logprob: -1.9972249269485474
    3. '    
' → logprob: -2.497224807739258
    4. 'def' → logprob: -7.622224807739258
    5. '  
' → logprob: -8.872224807739258
    6. '        
' → logprob: -8.872224807739258
    7. ' 
' → logprob: -9.372224807739258
    8. ' def' → logprob: -9.497224807739258
    9. '

' → logprob: -10.622224807739258
    10. '<|end|>' → logprob: -10.747224807739258

Token 275: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10960213094949722
    2. '
' → logprob: -2.609602212905884
    3. '    
' → logprob: -3.609602212905884
    4. 'def' → logprob: -6.484601974487305
    5. ' 
' → logprob: -7.484601974487305
    6. ' def' → logprob: -7.484601974487305
    7. '  
' → logprob: -8.234601974487305
    8. '        
' → logprob: -8.734601974487305
    9. '   
' → logprob: -10.234601974487305
    10. '	def' → logprob: -11.109601974487305

Token 276: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09372308105230331
    2. '
' → logprob: -2.5937230587005615
    3. '    
' → logprob: -4.468723297119141
    4. ' def' → logprob: -6.593723297119141
    5. '
    
' → logprob: -7.093723297119141
    6. '   ' → logprob: -7.468723297119141
    7. '        
' → logprob: -8.21872329711914
    8. '

' → logprob: -9.21872329711914
    9. ' 
' → logprob: -9.96872329711914
    10. '  
' → logprob: -10.21872329711914

Token 277: '.format' (ID: 12277)
  Prédit: '.format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: -0.07174542546272278
    2. '._' → logprob: -2.8217453956604004
    3. '.' → logprob: -4.9467453956604
    4. '.template' → logprob: -6.6967453956604
    5. ' .' → logprob: -6.8217453956604
    6. '.separator' → logprob: -9.696745872497559
    7. '.form' → logprob: -9.696745872497559
    8. '.prec' → logprob: -9.946745872497559
    9. '.pattern' → logprob: -10.321745872497559
    10. ' ' → logprob: -10.571745872497559

Token 278: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.10384786874055862
    2. '_str' → logprob: -2.3538479804992676
    3. 'ter' → logprob: -6.103847980499268
    4. '_' → logprob: -7.228847980499268
    5. '_spec' → logprob: -7.603847980499268
    6. 'string' → logprob: -9.22884750366211
    7. '_format' → logprob: -9.97884750366211
    8. 'String' → logprob: -11.72884750366211
    9. ' =' → logprob: -12.10384750366211
    10. '_func' → logprob: -12.85384750366211

Token 279: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01105265598744154
    2. '=' → logprob: -4.51105260848999
    3. ' ' → logprob: -12.261053085327148
    4. ':' → logprob: -16.76105308532715
    5. 's' → logprob: -17.63605308532715
    6. '  ' → logprob: -17.63605308532715
    7. '<|end|>' → logprob: -18.38605308532715
    8. ' ="' → logprob: -19.26105308532715
    9. '	' → logprob: -19.38605308532715
    10. ' ='' → logprob: -19.63605308532715

Token 280: ' "{' (ID: 29585)
  Prédit: '"{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.4196482300758362
    2. 'f' → logprob: -1.1696481704711914
    3. ' f' → logprob: -3.6696481704711914
    4. ' "{' → logprob: -5.544648170471191
    5. '"' → logprob: -6.169648170471191
    6. ''{' → logprob: -7.294648170471191
    7. '	f' → logprob: -10.419648170471191
    8. ' ' → logprob: -10.544648170471191
    9. '{' → logprob: -11.544648170471191
    10. ' '{' → logprob: -12.419648170471191

Token 281: '0' (ID: 15)
  Prédit: ':.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.12942960858345032
    2. ':' → logprob: -2.129429578781128
    3. '0' → logprob: -6.004429817199707
    4. '.' → logprob: -11.129429817199707
    5. '.:' → logprob: -11.504429817199707
    6. 'value' → logprob: -13.379429817199707
    7. ':"' → logprob: -13.629429817199707
    8. ':f' → logprob: -14.129429817199707
    9. ':{}' → logprob: -14.504429817199707
    10. ':,' → logprob: -15.129429817199707

Token 282: ':' (ID: 25)
  Prédit: ':.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.0021907102782279253
    2. ':' → logprob: -6.127190589904785
    3. ' :.' → logprob: -13.377190589904785
    4. '.:' → logprob: -13.502190589904785
    5. ':{' → logprob: -13.627190589904785
    6. ':f' → logprob: -14.502190589904785
    7. '.' → logprob: -15.127190589904785
    8. ':,' → logprob: -15.752190589904785
    9. ':{}' → logprob: -15.877190589904785
    10. ':.

' → logprob: -15.877190589904785

Token 283: '."' (ID: 3692)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0031735526863485575
    2. '.{' → logprob: -6.378173351287842
    3. '."' → logprob: -7.628173351287842
    4. '0' → logprob: -7.628173351287842
    5. ' .' → logprob: -8.503173828125
    6. '.%' → logprob: -9.378173828125
    7. '.<' → logprob: -9.878173828125
    8. '."+' → logprob: -10.128173828125
    9. '.#' → logprob: -10.253173828125
    10. '}.{' → logprob: -10.628173828125

Token 284: ' +' (ID: 659)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.5776563286781311
    2. '{' → logprob: -0.8276563286781311
    3. '%d' → logprob: -6.702656269073486
    4. '{}\' → logprob: -9.077656745910645
    5. '%' → logprob: -9.452656745910645
    6. '<|end|>' → logprob: -9.952656745910645
    7. '{}{' → logprob: -10.077656745910645
    8. 'f' → logprob: -10.202656745910645
    9. '{
' → logprob: -10.452656745910645
    10. '```' → logprob: -11.077656745910645

Token 285: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.00827660784125328
    2. 'self' → logprob: -5.258276462554932
    3. ' str' → logprob: -5.883276462554932
    4. '{' → logprob: -8.75827693939209
    5. 'f' → logprob: -9.63327693939209
    6. ' self' → logprob: -11.25827693939209
    7. '{}' → logprob: -12.13327693939209
    8. '(str' → logprob: -12.13327693939209
    9. '	str' → logprob: -13.75827693939209
    10. ' ' → logprob: -13.88327693939209

Token 286: '(' (ID: 7)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.35649728775024414
    2. 'self' → logprob: -1.2314972877502441
    3. '{' → logprob: -5.606497287750244
    4. ' self' → logprob: -6.356497287750244
    5. '[self' → logprob: -6.606497287750244
    6. '(' → logprob: -7.731497287750244
    7. '<|end|>' → logprob: -7.856497287750244
    8. 'precision' → logprob: -8.481496810913086
    9. '	self' → logprob: -9.731496810913086
    10. ',self' → logprob: -10.231496810913086

Token 287: 'precision' (ID: 56937)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006186995189636946
    2. 'precision' → logprob: -5.1311869621276855
    3. '<|end|>' → logprob: -8.631187438964844
    4. ' self' → logprob: -9.506187438964844
    5. ' precision' → logprob: -12.881187438964844
    6. 'prec' → logprob: -13.881187438964844
    7. '_precision' → logprob: -14.631187438964844
    8. '[self' → logprob: -14.756187438964844
    9. '(self' → logprob: -15.131187438964844
    10. '	self' → logprob: -15.756187438964844

Token 288: ')' (ID: 8)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -7.958325295476243e-05
    2. ' f' → logprob: -9.625079154968262
    3. ')' → logprob: -11.875079154968262
    4. '}' → logprob: -12.125079154968262
    5. ''f' → logprob: -14.750079154968262
    6. '	f' → logprob: -15.250079154968262
    7. '"' → logprob: -15.875079154968262
    8. 'xf' → logprob: -16.500080108642578
    9. '```' → logprob: -16.875080108642578
    10. '<f' → logprob: -17.000080108642578

Token 289: ' +' (ID: 659)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.7120533811976202e-05
    2. '"' → logprob: -11.625017166137695
    3. ' f' → logprob: -12.125017166137695
    4. '}' → logprob: -14.125017166137695
    5. ''f' → logprob: -14.375017166137695
    6. '+' → logprob: -15.125017166137695
    7. 'xf' → logprob: -15.375017166137695
    8. '	f' → logprob: -15.500017166137695
    9. '```' → logprob: -15.625017166137695
    10. '<f' → logprob: -16.000017166137695

Token 290: ' "' (ID: 392)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6344989538192749
    2. '"' → logprob: -0.8844989538192749
    3. ' f' → logprob: -3.1344990730285645
    4. ' "' → logprob: -4.8844990730285645
    5. ''f' → logprob: -5.3844990730285645
    6. '"}' → logprob: -7.5094990730285645
    7. '"d' → logprob: -7.8844990730285645
    8. '}' → logprob: -8.759498596191406
    9. ' ' → logprob: -10.509498596191406
    10. '{}' → logprob: -11.134498596191406

Token 291: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -3.7697225252486533e-06
    2. ' f' → logprob: -13.625003814697266
    3. '}' → logprob: -14.125003814697266
    4. '"' → logprob: -15.000003814697266
    5. '
' → logprob: -15.125003814697266
    6. 'ff' → logprob: -15.250003814697266
    7. 'df' → logprob: -15.375003814697266
    8. 'xf' → logprob: -15.750003814697266
    9. '```' → logprob: -15.875003814697266
    10. '

' → logprob: -16.375003814697266

Token 292: '}"
' (ID: 26189)
  Prédit: '}"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}"' → logprob: -5.5577775128767826e-06
    2. '}' → logprob: -13.000005722045898
    3. '"}' → logprob: -13.125005722045898
    4. ' }' → logprob: -14.750005722045898
    5. '"' → logprob: -15.000005722045898
    6. '}"
' → logprob: -15.250005722045898
    7. '}".' → logprob: -16.1250057220459
    8. '}}"' → logprob: -16.8750057220459
    9. '}"

' → logprob: -16.8750057220459
    10. '}")' → logprob: -17.5000057220459

Token 293: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.387778639793396
    2. 'def' → logprob: -1.137778639793396
    3. ' def' → logprob: -7.0127787590026855
    4. '	def' → logprob: -12.512778282165527
    5. '    
' → logprob: -13.137778282165527
    6. '
' → logprob: -14.512778282165527
    7. ' ' → logprob: -14.762778282165527
    8. '  ' → logprob: -16.012779235839844
    9. '       ' → logprob: -16.262779235839844
    10. '

' → logprob: -16.637779235839844

Token 295: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.8624639324116288e-06
    2. ' def' → logprob: -13.250001907348633
    3. '   ' → logprob: -22.375001907348633
    4. '	def' → logprob: -25.375001907348633
    5. '    
' → logprob: -26.125001907348633
    6. 'de' → logprob: -26.750001907348633
    7. ' ' → logprob: -27.750001907348633
    8. '@' → logprob: -28.375001907348633
    9. '```' → logprob: -28.625001907348633
    10. '  ' → logprob: -28.750001907348633

Token 296: ' format' (ID: 6011)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.00861456897109747
    2. ' format' → logprob: -4.758614540100098
    3. '.format' → logprob: -18.008615493774414
    4. '_format' → logprob: -18.133615493774414
    5. 'form' → logprob: -18.258615493774414
    6. '	format' → logprob: -18.758615493774414
    7. ' ' → logprob: -19.383615493774414
    8. '(format' → logprob: -20.383615493774414
    9. '=format' → logprob: -20.508615493774414
    10. 'def' → logprob: -21.133615493774414

Token 297: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005536287208087742
    2. '(' → logprob: -7.500553607940674
    3. '(
' → logprob: -14.500554084777832
    4. ' (' → logprob: -16.625553131103516
    5. '(s' → logprob: -17.500553131103516
    6. 'self' → logprob: -18.625553131103516
    7. '(sel' → logprob: -19.000553131103516
    8. '(

' → logprob: -19.625553131103516
    9. '(Self' → logprob: -21.125553131103516
    10. '(se' → logprob: -21.500553131103516

Token 298: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001858982432167977
    2. 'self' → logprob: -8.6251859664917
    3. ' ,' → logprob: -12.2501859664917
    4. 'values' → logprob: -13.7501859664917
    5. ',self' → logprob: -15.5001859664917
    6. 's' → logprob: -16.250185012817383
    7. ',
' → logprob: -17.000185012817383
    8. '(self' → logprob: -17.250185012817383
    9. ',value' → logprob: -17.250185012817383
    10. 'value' → logprob: -17.500185012817383

Token 299: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.12914615869522095
    2. ' values' → logprob: -2.129146099090576
    3. 'self' → logprob: -6.129146099090576
    4. ' self' → logprob: -10.254146575927734
    5. 'value' → logprob: -13.379146575927734
    6. '	values' → logprob: -15.879146575927734
    7. ' ' → logprob: -17.004146575927734
    8. '   ' → logprob: -17.504146575927734
    9. '(values' → logprob: -18.004146575927734
    10. ')' → logprob: -18.129146575927734

Token 300: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018370352685451508
    2. '):' → logprob: -4.018370151519775
    3. ')' → logprob: -8.518370628356934
    4. ' ):' → logprob: -11.393370628356934
    5. ' :' → logprob: -12.268370628356934
    6. '):
' → logprob: -12.893370628356934
    7. ' ' → logprob: -14.768370628356934
    8. '}:' → logprob: -15.143370628356934
    9. ' )' → logprob: -15.268370628356934
    10. '   ' → logprob: -15.393370628356934

Token 301: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.02459006756544113
    2. ' Tuple' → logprob: -3.774590015411377
    3. 'tuple' → logprob: -7.524590015411377
    4. 'values' → logprob: -7.649590015411377
    5. ' tuple' → logprob: -8.649590492248535
    6. ')' → logprob: -8.899590492248535
    7. ' values' → logprob: -11.149590492248535
    8. '_tuple' → logprob: -14.274590492248535
    9. ' tuples' → logprob: -15.649590492248535
    10. ' ' → logprob: -15.649590492248535

Token 302: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. 'float' → logprob: -13.875000953674316
    3. '(float' → logprob: -17.125001907348633
    4. '<float' → logprob: -17.375001907348633
    5. ')' → logprob: -17.750001907348633
    6. '[
' → logprob: -18.000001907348633
    7. ',float' → logprob: -18.500001907348633
    8. ':' → logprob: -19.875001907348633
    9. '[int' → logprob: -19.875001907348633
    10. '):' → logprob: -19.875001907348633

Token 303: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -9.253090865968261e-06
    2. ' float' → logprob: -11.625009536743164
    3. 'flo' → logprob: -15.625009536743164
    4. '   ' → logprob: -16.875009536743164
    5. '[' → logprob: -18.500009536743164
    6. '	float' → logprob: -18.625009536743164
    7. '(float' → logprob: -19.125009536743164
    8. ',float' → logprob: -19.250009536743164
    9. ' ' → logprob: -19.375009536743164
    10. '...' → logprob: -19.375009536743164

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2113979209971149e-05
    2. '])' → logprob: -11.500012397766113
    3. ',...' → logprob: -13.375012397766113
    4. ',
' → logprob: -15.750012397766113
    5. '[' → logprob: -16.000011444091797
    6. ',float' → logprob: -16.625011444091797
    7. ' ,' → logprob: -17.625011444091797
    8. '[...,' → logprob: -18.125011444091797
    9. '],' → logprob: -18.500011444091797
    10. ']):
' → logprob: -18.875011444091797

Token 305: ' ...' (ID: 2550)
  Prédit: ' ...'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ...' → logprob: -0.5763595104217529
    2. '...' → logprob: -0.8263595104217529
    3. '])' → logprob: -7.826359748840332
    4. ' ' → logprob: -11.826359748840332
    5. '...)' → logprob: -11.951359748840332
    6. ' ])' → logprob: -12.951359748840332
    7. ' ...)' → logprob: -13.076359748840332
    8. 'float' → logprob: -14.201359748840332
    9. '...]' → logprob: -14.576359748840332
    10. ' float' → logprob: -14.701359748840332

Token 306: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023393364972434938
    2. '])' → logprob: -8.37523365020752
    3. ' )' → logprob: -13.25023365020752
    4. '`)' → logprob: -14.37523365020752
    5. '})' → logprob: -15.12523365020752
    6. '):' → logprob: -15.25023365020752
    7. '))' → logprob: -15.50023365020752
    8. '>)' → logprob: -15.62523365020752
    9. '   ' → logprob: -17.125234603881836
    10. '）' → logprob: -17.250234603881836

Token 307: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.5050565600395203
    2. ')' → logprob: -1.255056619644165
    3. '->' → logprob: -2.255056619644165
    4. ':' → logprob: -5.130056381225586
    5. ')->' → logprob: -7.380056381225586
    6. ' )' → logprob: -10.755056381225586
    7. ' )->' → logprob: -11.005056381225586
    8. '>' → logprob: -11.880056381225586
    9. '   ' → logprob: -12.505056381225586
    10. ' ' → logprob: -12.880056381225586

Token 308: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.11146606504917145
    2. ' str' → logprob: -2.4864661693573
    3. 'tuple' → logprob: -4.486465930938721
    4. 'return' → logprob: -5.111465930938721
    5. '"' → logprob: -5.986465930938721
    6. ' tuple' → logprob: -7.111465930938721
    7. ' return' → logprob: -7.611465930938721
    8. 'Tuple' → logprob: -7.736465930938721
    9. ''' → logprob: -7.861465930938721
    10. ' ' → logprob: -9.236466407775879

Token 309: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020577972754836082
    2. '       ' → logprob: -5.270577907562256
    3. ':
' → logprob: -5.270577907562256
    4. '(self' → logprob: -5.520577907562256
    5. ':return' → logprob: -5.770577907562256
    6. '):' → logprob: -7.395577907562256
    7. 'self' → logprob: -7.520577907562256
    8. '=' → logprob: -7.645577907562256
    9. '):
' → logprob: -7.895577907562256
    10. '->' → logprob: -8.520578384399414

Token 310: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14985735714435577
    2. 'return' → logprob: -2.02485728263855
    3. ' return' → logprob: -5.149857521057129
    4. 'result' → logprob: -6.649857521057129
    5. '	' → logprob: -10.649857521057129
    6. ' result' → logprob: -11.274857521057129
    7. '	return' → logprob: -11.899857521057129
    8. 'output' → logprob: -12.274857521057129
    9. '   ' → logprob: -12.524857521057129
    10. 'text' → logprob: -13.274857521057129

Token 311: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10030081123113632
    2. ' return' → logprob: -2.3503007888793945
    3. '       ' → logprob: -10.100300788879395
    4. 'result' → logprob: -10.725300788879395
    5. '"' → logprob: -11.350300788879395
    6. 'formatted' → logprob: -11.350300788879395
    7. ' formatted' → logprob: -13.225300788879395
    8. '   ' → logprob: -13.225300788879395
    9. '",' → logprob: -13.725300788879395
    10. 'results' → logprob: -14.100300788879395

Token 312: ' "' (ID: 392)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.2649112343788147
    2. '"' → logprob: -1.51491117477417
    3. '',' → logprob: -5.01491117477417
    4. ''' → logprob: -5.51491117477417
    5. ' ",' → logprob: -6.38991117477417
    6. ' "' → logprob: -7.63991117477417
    7. ' '' → logprob: -10.764911651611328
    8. ' ',' → logprob: -11.014911651611328
    9. '",".' → logprob: -11.014911651611328
    10. '","' → logprob: -11.764911651611328

Token 313: ' ".' (ID: 11730)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08643346279859543
    2. '",' → logprob: -2.5864334106445312
    3. '"' → logprob: -5.211433410644531
    4. ' ,' → logprob: -7.586433410644531
    5. ' ".' → logprob: -7.586433410644531
    6. '".' → logprob: -7.836433410644531
    7. ',"' → logprob: -8.211433410644531
    8. '(",' → logprob: -8.961433410644531
    9. ';' → logprob: -9.586433410644531
    10. '',' → logprob: -10.086433410644531

Token 314: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.01298962626606226
    2. '.join' → logprob: -4.512989521026611
    3. '.' → logprob: -6.262989521026611
    4. '".' → logprob: -10.38798999786377
    5. ' join' → logprob: -12.88798999786377
    6. '"' → logprob: -14.88798999786377
    7. ''.' → logprob: -15.88798999786377
    8. 'j' → logprob: -15.88798999786377
    9. ' .' → logprob: -16.012989044189453
    10. '.j' → logprob: -16.762989044189453

Token 315: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009140860638581216
    2. '([' → logprob: -7.500914096832275
    3. '[self' → logprob: -8.250913619995117
    4. '(' → logprob: -9.875913619995117
    5. 'self' → logprob: -10.375913619995117
    6. '(
' → logprob: -11.000913619995117
    7. '[' → logprob: -14.375913619995117
    8. '(

' → logprob: -16.875913619995117
    9. ' self' → logprob: -17.000913619995117
    10. '([
' → logprob: -17.000913619995117

Token 316: '.format' (ID: 12277)
  Prédit: '.format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: -1.2233183042553719e-05
    2. 'format' → logprob: -11.375012397766113
    3. '.' → logprob: -14.625012397766113
    4. '[' → logprob: -15.875012397766113
    5. ' .' → logprob: -16.500011444091797
    6. ' format' → logprob: -17.500011444091797
    7. '	format' → logprob: -17.625011444091797
    8. '=format' → logprob: -17.625011444091797
    9. '(format' → logprob: -18.625011444091797
    10. '   ' → logprob: -19.750011444091797

Token 317: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -1.9361264946837764e-07
    2. 'string' → logprob: -16.0
    3. 'self' → logprob: -19.375
    4. '_STRING' → logprob: -19.5
    5. '_strings' → logprob: -19.75
    6. '(self' → logprob: -19.875
    7. '_value' → logprob: -20.125
    8. 'String' → logprob: -20.5
    9. '_' → logprob: -20.75
    10. '_str' → logprob: -21.0

Token 318: '.format' (ID: 12277)
  Prédit: '.format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: -0.014178323559463024
    2. ').' → logprob: -4.389178276062012
    3. '.' → logprob: -6.514178276062012
    4. '}.' → logprob: -9.639178276062012
    5. '.value' → logprob: -10.389178276062012
    6. ')' → logprob: -10.639178276062012
    7. ' .' → logprob: -10.889178276062012
    8. '].' → logprob: -11.014178276062012
    9. '   ' → logprob: -11.389178276062012
    10. '{}.' → logprob: -11.639178276062012

Token 319: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.5773129463195801
    2. '(value' → logprob: -0.8273129463195801
    3. 'v' → logprob: -7.32731294631958
    4. 'value' → logprob: -7.70231294631958
    5. '(val' → logprob: -8.827312469482422
    6. '(x' → logprob: -9.577312469482422
    7. ')' → logprob: -10.327312469482422
    8. '(' → logprob: -11.702312469482422
    9. ')value' → logprob: -13.077312469482422
    10. ')v' → logprob: -13.202312469482422

Token 320: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.988221684878226e-06
    2. ' )' → logprob: -12.750006675720215
    3. ')v' → logprob: -13.500006675720215
    4. 'v' → logprob: -14.250006675720215
    5. '(v' → logprob: -14.500006675720215
    6. 'for' → logprob: -15.125006675720215
    7. '))' → logprob: -15.125006675720215
    8. 's' → logprob: -15.500006675720215
    9. ')value' → logprob: -15.750006675720215
    10. 'value' → logprob: -15.875006675720215

Token 321: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0771370679140091
    2. 'for' → logprob: -2.827136993408203
    3. ')' → logprob: -4.202136993408203
    4. ' v' → logprob: -10.327136993408203
    5. 'v' → logprob: -10.827136993408203
    6. ' ' → logprob: -11.202136993408203
    7. ' )' → logprob: -11.452136993408203
    8. '(v' → logprob: -11.702136993408203
    9. '	for' → logprob: -13.952136993408203
    10. '   ' → logprob: -14.077136993408203

Token 322: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.5759472250938416
    2. 'v' → logprob: -0.8259472250938416
    3. '	v' → logprob: -11.825946807861328
    4. ' ' → logprob: -15.075946807861328
    5. '_v' → logprob: -16.575946807861328
    6. ' ' → logprob: -16.700946807861328
    7. '<|end|>' → logprob: -17.450946807861328
    8. ')v' → logprob: -18.075946807861328
    9. 'value' → logprob: -18.450946807861328
    10. 'values' → logprob: -18.950946807861328

Token 323: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020799605175852776
    2. 'in' → logprob: -3.8957996368408203
    3. ')' → logprob: -8.39579963684082
    4. ' )' → logprob: -11.39579963684082
    5. ' ' → logprob: -11.64579963684082
    6. 'n' → logprob: -12.02079963684082
    7. '<|end|>' → logprob: -12.89579963684082
    8. 'v' → logprob: -13.64579963684082
    9. '	in' → logprob: -14.27079963684082
    10. ' v' → logprob: -15.39579963684082

Token 324: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.02975083328783512
    2. ' values' → logprob: -3.5297508239746094
    3. '	values' → logprob: -15.65475082397461
    4. 'value' → logprob: -16.40475082397461
    5. '(values' → logprob: -16.77975082397461
    6. '.values' → logprob: -17.40475082397461
    7. 'valu' → logprob: -17.77975082397461
    8. ' ' → logprob: -18.02975082397461
    9. '   ' → logprob: -18.90475082397461
    10. 'val' → logprob: -18.90475082397461

Token 325: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ')
' → logprob: -14.250000953674316
    3. ' )' → logprob: -14.500000953674316
    4. '))' → logprob: -15.875000953674316
    5. '       ' → logprob: -16.750001907348633
    6. ')}' → logprob: -16.875001907348633
    7. ')`' → logprob: -18.500001907348633
    8. ')return' → logprob: -18.875001907348633
    9. '())' → logprob: -19.375001907348633
    10. '}' → logprob: -19.375001907348633

Token 326: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0021846420131623745
    2. '
' → logprob: -7.002184867858887
    3. 'def' → logprob: -7.127184867858887
    4. 'if' → logprob: -8.502184867858887
    5. '#' → logprob: -9.252184867858887
    6. '<|end|>' → logprob: -9.752184867858887
    7. 'import' → logprob: -9.877184867858887
    8. ' class' → logprob: -10.752184867858887
    9. '```' → logprob: -11.502184867858887
    10. '

' → logprob: -11.752184867858887

Token 327: ' Equation' (ID: 180687)
  Prédit: 'Scientific'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Scientific' → logprob: -0.045200612396001816
    2. 'Fraction' → logprob: -4.420200824737549
    3. ' Scientific' → logprob: -4.545200824737549
    4. 'Sci' → logprob: -4.920200824737549
    5. 'Ex' → logprob: -5.420200824737549
    6. 'Comma' → logprob: -5.670200824737549
    7. 'Percentage' → logprob: -7.045200824737549
    8. 'La' → logprob: -7.295200824737549
    9. 'Result' → logprob: -7.420200824737549
    10. 'Variable' → logprob: -7.670200824737549

Token 328: 'Solver' (ID: 70484)
  Prédit: 'System'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: -0.2642205059528351
    2. 'Printer' → logprob: -1.8892204761505127
    3. 'Formatter' → logprob: -2.7642204761505127
    4. 'Solver' → logprob: -4.514220714569092
    5. 'Display' → logprob: -6.014220714569092
    6. 'Solution' → logprob: -6.639220714569092
    7. 'Renderer' → logprob: -7.764220714569092
    8. 'Format' → logprob: -7.764220714569092
    9. 'Result' → logprob: -8.014220237731934
    10. 'Output' → logprob: -8.389220237731934

Token 329: 'Engine' (ID: 7286)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009264862164855003
    2. '(' → logprob: -4.759264945983887
    3. ':
' → logprob: -7.884264945983887
    4. '(T' → logprob: -9.509264945983887
    5. ' :' → logprob: -9.759264945983887
    6. '(System' → logprob: -10.259264945983887
    7. '():' → logprob: -10.509264945983887
    8. ':System' → logprob: -11.009264945983887
    9. 'Two' → logprob: -11.384264945983887
    10. '(object' → logprob: -11.634264945983887

Token 330: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018472755327820778
    2. '(' → logprob: -4.018472671508789
    3. ':
' → logprob: -8.893472671508789
    4. ' :' → logprob: -9.393472671508789
    5. '():' → logprob: -9.393472671508789
    6. '(Abstract' → logprob: -11.893472671508789
    7. '(object' → logprob: -12.768472671508789
    8. '(E' → logprob: -13.143472671508789
    9. '(System' → logprob: -13.643472671508789
    10. ':

' → logprob: -14.268472671508789

Token 331: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014865272678434849
    2. ' def' → logprob: -4.264865398406982
    3. 'def' → logprob: -7.264865398406982
    4. '    
' → logprob: -14.389864921569824
    5. '   ' → logprob: -14.764864921569824
    6. '```' → logprob: -14.764864921569824
    7. '	def' → logprob: -15.514864921569824
    8. ',' → logprob: -16.51486587524414
    9. ':' → logprob: -16.88986587524414
    10. '
' → logprob: -17.13986587524414

Token 332: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.25193077325820923
    2. 'def' (adapté à ' def') → logprob: -1.5019307136535645
    3. '   ' → logprob: -13.376931190490723
    4. ' ' → logprob: -17.626930236816406
    5. 'class' → logprob: -17.751930236816406
    6. '	def' → logprob: -17.751930236816406
    7. '    ' → logprob: -18.751930236816406
    8. ' __' → logprob: -19.626930236816406
    9. 'de' → logprob: -19.876930236816406
    10. '  ' → logprob: -19.876930236816406

Token 333: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0011398615315556526
    2. '__' → logprob: -7.0011396408081055
    3. ' def' → logprob: -9.376139640808105
    4. '_' → logprob: -9.501139640808105
    5. '_init' → logprob: -10.126139640808105
    6. ' ' → logprob: -11.251139640808105
    7. ' init' → logprob: -11.626139640808105
    8. ' _' → logprob: -12.501139640808105
    9. ' ___' → logprob: -14.126139640808105
    10. ' ' → logprob: -14.376139640808105

Token 334: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.2664456789934775e-06
    2. 'def' → logprob: -14.125000953674316
    3. ' init' → logprob: -14.875000953674316
    4. '   ' → logprob: -17.250001907348633
    5. '(init' → logprob: -17.375001907348633
    6. '_init' → logprob: -18.125001907348633
    7. '	init' → logprob: -18.625001907348633
    8. '```' → logprob: -19.375001907348633
    9. '.init' → logprob: -19.500001907348633
    10. 'inite' → logprob: -19.500001907348633

Token 335: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.3138071894645691
    2. '(self' → logprob: -1.3138072490692139
    3. '(' → logprob: -8.188807487487793
    4. '__' → logprob: -8.938807487487793
    5. ' (' → logprob: -9.563807487487793
    6. '__(
' → logprob: -9.813807487487793
    7. '   ' → logprob: -12.938807487487793
    8. ' ' → logprob: -13.188807487487793
    9. '_(' → logprob: -13.438807487487793
    10. ')(' → logprob: -13.688807487487793

Token 336: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.1054253011243418e-05
    2. ' self' → logprob: -11.000020980834961
    3. ')' → logprob: -13.375020980834961
    4. '
' → logprob: -13.625020980834961
    5. '   ' → logprob: -14.375020980834961
    6. '(self' → logprob: -15.250020980834961
    7. '):
' → logprob: -15.500020980834961
    8. ',' → logprob: -15.750020980834961
    9. '       ' → logprob: -16.12502098083496
    10. '_self' → logprob: -17.12502098083496

Token 337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005781496409326792
    2. 'self' → logprob: -5.380781650543213
    3. '):' → logprob: -7.005781650543213
    4. '):
' → logprob: -9.005781173706055
    5. ' ,' → logprob: -9.380781173706055
    6. ',self' → logprob: -11.005781173706055
    7. '(self' → logprob: -11.130781173706055
    8. ')' → logprob: -12.505781173706055
    9. ' ):' → logprob: -12.630781173706055
    10. ' self' → logprob: -12.630781173706055

Token 338: ' system' (ID: 2420)
  Prédit: 'formatter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formatter' → logprob: -1.019403338432312
    2. 'system' → logprob: -1.269403338432312
    3. ' system' → logprob: -1.519403338432312
    4. ' formatter' → logprob: -3.0194034576416016
    5. 'equ' → logprob: -3.1444034576416016
    6. 'coeff' → logprob: -4.394403457641602
    7. 'solver' → logprob: -4.519403457641602
    8. ' equation' → logprob: -4.519403457641602
    9. ' coefficients' → logprob: -5.519403457641602
    10. ' equations' → logprob: -5.769403457641602

Token 339: '_factory' (ID: 57891)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23033809661865234
    2. ',' → logprob: -1.6053380966186523
    3. '):' → logprob: -5.605338096618652
    4. ' ,' → logprob: -7.605338096618652
    5. ' :' → logprob: -8.355338096618652
    6. '_system' → logprob: -8.355338096618652
    7. ')' → logprob: -8.980338096618652
    8. ' ):' → logprob: -9.980338096618652
    9. 'system' → logprob: -10.355338096618652
    10. '   ' → logprob: -11.105338096618652

Token 340: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14444555342197418
    2. '):' → logprob: -2.0194456577301025
    3. ' ):' → logprob: -7.394445419311523
    4. ' ,' → logprob: -7.519445419311523
    5. ':' → logprob: -8.144445419311523
    6. ')' → logprob: -8.519445419311523
    7. '=None' → logprob: -9.644445419311523
    8. '):
' → logprob: -10.894445419311523
    9. ' ' → logprob: -10.894445419311523
    10. '   ' → logprob: -12.019445419311523

Token 341: ' formatter' (ID: 50323)
  Prédit: 'formatter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formatter' → logprob: -0.1439611315727234
    2. ' formatter' → logprob: -2.018961191177368
    3. 'format' → logprob: -7.393960952758789
    4. ' format' → logprob: -9.143960952758789
    5. ' system' → logprob: -9.643960952758789
    6. 'result' → logprob: -9.643960952758789
    7. '   ' → logprob: -9.643960952758789
    8. 'output' → logprob: -9.893960952758789
    9. ' result' → logprob: -9.893960952758789
    10. ' output' → logprob: -10.018960952758789

Token 342: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016477111726999283
    2. '):
' → logprob: -4.141477108001709
    3. ')' → logprob: -8.516477584838867
    4. ',' → logprob: -8.766477584838867
    5. ':' → logprob: -10.016477584838867
    6. ' ):' → logprob: -11.016477584838867
    7. '):
' → logprob: -11.266477584838867
    8. '=None' → logprob: -11.891477584838867
    9. '   ' → logprob: -13.016477584838867
    10. ' ' → logprob: -13.766477584838867

Token 343: ' Formatter' (ID: 177673)
  Prédit: ' Formatter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Formatter' → logprob: -0.5759468674659729
    2. 'Formatter' → logprob: -0.8259468674659729
    3. 'Fixed' → logprob: -12.075946807861328
    4. ' Fixed' → logprob: -14.200946807861328
    5. ' ' → logprob: -14.825946807861328
    6. '_formatter' → logprob: -15.575946807861328
    7. 'Formatted' → logprob: -15.950946807861328
    8. ')' → logprob: -16.325946807861328
    9. '   ' → logprob: -16.575946807861328
    10. 'formatter' → logprob: -16.950946807861328

Token 344: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0070669930428266525
    2. ',' → logprob: -5.5070672035217285
    3. ')' → logprob: -6.0070672035217285
    4. '):
' → logprob: -7.6320672035217285
    5. ' ):' → logprob: -10.38206672668457
    6. '   ' → logprob: -12.50706672668457
    7. ':' → logprob: -13.75706672668457
    8. '):
' → logprob: -14.00706672668457
    9. ' ' → logprob: -14.75706672668457
    10. ' )' → logprob: -15.00706672668457

Token 345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012955150566995144
    2. ':' → logprob: -4.512955188751221
    3. ',' → logprob: -6.887955188751221
    4. ':
' → logprob: -7.387955188751221
    5. '):
' → logprob: -9.637954711914062
    6. 'self' → logprob: -10.137954711914062
    7. '   ' → logprob: -10.137954711914062
    8. '
' → logprob: -10.387954711914062
    9. '):' → logprob: -11.262954711914062
    10. '        
' → logprob: -11.262954711914062

Token 346: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7177441120147705
    2. 'self' (adapté à ' self') → logprob: -0.7177441120147705
    3. '       ' → logprob: -3.7177441120147705
    4. '   ' → logprob: -12.342743873596191
    5. '	self' → logprob: -12.967743873596191
    6. ' ' → logprob: -14.467743873596191
    7. '      ' → logprob: -15.217743873596191
    8. '     ' → logprob: -15.842743873596191
    9. '        ' → logprob: -16.092744827270508
    10. '    ' → logprob: -16.342744827270508

Token 347: '.system' (ID: 29667)
  Prédit: '.system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.system' → logprob: -0.004934158641844988
    2. '.' → logprob: -5.504934310913086
    3. ' .' → logprob: -7.254934310913086
    4. '._' → logprob: -9.004934310913086
    5. 'system' → logprob: -11.629934310913086
    6. '.sys' → logprob: -11.754934310913086
    7. ' system' → logprob: -12.379934310913086
    8. ' ' → logprob: -13.254934310913086
    9. '	system' → logprob: -14.254934310913086
    10. '_system' → logprob: -14.629934310913086

Token 348: '_factory' (ID: 57891)
  Prédit: '_factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factory' → logprob: -1.9981420336989686e-05
    2. '_' → logprob: -11.000020027160645
    3. ' =' → logprob: -14.125020027160645
    4. '_system' → logprob: -14.250020027160645
    5. '=' → logprob: -15.125020027160645
    6. '_factor' → logprob: -15.125020027160645
    7. 'Factory' → logprob: -15.250020027160645
    8. '_fact' → logprob: -15.375020027160645
    9. '_class' → logprob: -15.375020027160645
    10. 's' → logprob: -16.000019073486328

Token 349: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740825295448303
    2. '=' → logprob: -0.9740825295448303
    3. ' ' → logprob: -12.224082946777344
    4. '   ' → logprob: -15.724082946777344
    5. '    ' → logprob: -16.099082946777344
    6. ',' → logprob: -16.599082946777344
    7. '=None' → logprob: -16.724082946777344
    8. '  ' → logprob: -16.849082946777344
    9. '	' → logprob: -17.224082946777344
    10. '=sys' → logprob: -17.349082946777344

Token 350: ' system' (ID: 2420)
  Prédit: 'system'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'system' → logprob: -0.005233882926404476
    2. ' system' → logprob: -5.2552337646484375
    3. 'sys' → logprob: -16.255233764648438
    4. '(system' → logprob: -18.255233764648438
    5. '	system' → logprob: -18.380233764648438
    6. 'ystem' → logprob: -19.380233764648438
    7. 'System' → logprob: -19.505233764648438
    8. 'systems' → logprob: -19.630233764648438
    9. 'ssystem' → logprob: -20.130233764648438
    10. '_system' → logprob: -20.380233764648438

Token 351: '_factory' (ID: 57891)
  Prédit: '_factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factory' → logprob: -5.438573680294212e-06
    2. '_system' → logprob: -13.375005722045898
    3. 'factory' → logprob: -13.625005722045898
    4. '_fact' → logprob: -13.625005722045898
    5. 'Factory' → logprob: -14.250005722045898
    6. '_factor' → logprob: -14.375005722045898
    7. '_FACTORY' → logprob: -15.500005722045898
    8. '_fac' → logprob: -17.2500057220459
    9. '.Factory' → logprob: -17.3750057220459
    10. '_' → logprob: -17.7500057220459

Token 352: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14661851525306702
    2. '
' → logprob: -2.021618604660034
    3. '    
' → logprob: -6.146618366241455
    4. '        
' → logprob: -7.396618366241455
    5. '<|end|>' → logprob: -7.521618366241455
    6. ' 
' → logprob: -8.396618843078613
    7. '  
' → logprob: -8.896618843078613
    8. 'self' → logprob: -9.271618843078613
    9. '   ' → logprob: -10.146618843078613
    10. '   
' → logprob: -10.271618843078613

Token 353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016861737822182477
    2. ' self' → logprob: -9.250168800354004
    3. 'self' → logprob: -10.000168800354004
    4. '
' → logprob: -11.500168800354004
    5. '   ' → logprob: -11.750168800354004
    6. ',' → logprob: -12.875168800354004
    7. '<|end|>' → logprob: -13.125168800354004
    8. ' ' → logprob: -13.625168800354004
    9. '    
' → logprob: -14.250168800354004
    10. '      ' → logprob: -14.250168800354004

Token 354: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0017318216850981116
    2. ' self' → logprob: -6.376731872558594
    3. '       ' → logprob: -10.501731872558594
    4. 'formatter' → logprob: -13.251731872558594
    5. '   ' → logprob: -15.251731872558594
    6. 'format' → logprob: -17.501731872558594
    7. ' ' → logprob: -18.126731872558594
    8. '	self' → logprob: -18.126731872558594
    9. '        ' → logprob: -18.376731872558594
    10. '     ' → logprob: -18.501731872558594

Token 355: '.format' (ID: 12277)
  Prédit: '.format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: -0.0028164091054350138
    2. '.' → logprob: -6.127816200256348
    3. 'formatter' → logprob: -7.502816200256348
    4. '.form' → logprob: -10.252816200256348
    5. ' .' → logprob: -11.002816200256348
    6. 'format' → logprob: -11.252816200256348
    7. '._' → logprob: -11.627816200256348
    8. '_formatter' → logprob: -13.252816200256348
    9. '.parser' → logprob: -13.877816200256348
    10. '.encoder' → logprob: -14.377816200256348

Token 356: 'ter' (ID: 399)
  Prédit: 'ter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -0.00010437761375214905
    2. 'er' → logprob: -10.000103950500488
    3. 'atter' → logprob: -10.625103950500488
    4. '_' → logprob: -11.250103950500488
    5. '(' → logprob: -12.250103950500488
    6. '_formatter' → logprob: -12.625103950500488
    7. '   ' → logprob: -13.000103950500488
    8. '```' → logprob: -13.750103950500488
    9. ',' → logprob: -14.000103950500488
    10. 'tter' → logprob: -14.125103950500488

Token 357: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269284337759018
    2. ' =' → logprob: -2.1269283294677734
    3. ' ' → logprob: -16.001928329467773
    4. '_' → logprob: -16.876928329467773
    5. '.' → logprob: -17.251928329467773
    6. '<|end|>' → logprob: -17.251928329467773
    7. '=create' → logprob: -17.501928329467773
    8. '=

' → logprob: -17.751928329467773
    9. ',' → logprob: -18.251928329467773
    10. '    ' → logprob: -18.376928329467773

Token 358: ' formatter' (ID: 50323)
  Prédit: 'formatter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formatter' → logprob: -0.38687241077423096
    2. ' formatter' → logprob: -1.136872410774231
    3. '_formatter' → logprob: -14.261872291564941
    4. 'format' → logprob: -15.136872291564941
    5. 'Formatter' → logprob: -15.261872291564941
    6. ' format' → logprob: -16.011873245239258
    7. ' Formatter' → logprob: -16.261873245239258
    8. ' formatting' → logprob: -18.511873245239258
    9. 'formatted' → logprob: -19.511873245239258
    10. '(format' → logprob: -21.261873245239258

Token 359: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04355377331376076
    2. '    
' → logprob: -3.4185538291931152
    3. '<|end|>' → logprob: -5.543553829193115
    4. '  
' → logprob: -6.043553829193115
    5. '

' → logprob: -6.543553829193115
    6. '   ' → logprob: -6.668553829193115
    7. 'def' → logprob: -8.168553352355957
    8. ' 
' → logprob: -8.543553352355957
    9. '   
' → logprob: -8.543553352355957
    10. '        
' → logprob: -9.918553352355957

Token 360: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4782627820968628
    2. 'def' → logprob: -0.9782627820968628
    3. ' def' → logprob: -5.478262901306152
    4. '	def' → logprob: -14.728262901306152
    5. '
' → logprob: -17.853261947631836
    6. ' ' → logprob: -18.228261947631836
    7. '  ' → logprob: -18.353261947631836
    8. '    
' → logprob: -18.603261947631836
    9. '_def' → logprob: -20.728261947631836
    10. '       ' → logprob: -20.728261947631836

Token 361: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.941850526549388e-06
    2. ' def' → logprob: -11.750007629394531
    3. '   ' → logprob: -21.87500762939453
    4. 'de' → logprob: -24.75000762939453
    5. '	def' → logprob: -25.12500762939453
    6. ' ' → logprob: -26.75000762939453
    7. 'd' → logprob: -27.12500762939453
    8. 'from' → logprob: -27.75000762939453
    9. '    
' → logprob: -27.75000762939453
    10. '```' → logprob: -28.00000762939453

Token 362: ' process' (ID: 2273)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.07294290512800217
    2. ' solve' → logprob: -2.6979429721832275
    3. 'run' → logprob: -6.197942733764648
    4. ' run' → logprob: -7.072942733764648
    5. 'execute' → logprob: -9.572942733764648
    6. 'process' → logprob: -11.322942733764648
    7. 'resolve' → logprob: -11.697942733764648
    8. '.solve' → logprob: -11.822942733764648
    9. 'compute' → logprob: -12.072942733764648
    10. 'calculate' → logprob: -12.447942733764648

Token 363: '_input' (ID: 12507)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006358316168189049
    2. '(' → logprob: -7.375635623931885
    3. ' (' → logprob: -11.875636100769043
    4. '(s' → logprob: -14.125636100769043
    5. '_input' → logprob: -14.375636100769043
    6. '_line' → logprob: -15.125636100769043
    7. '(input' → logprob: -15.625636100769043
    8. '(
' → logprob: -15.875636100769043
    9. '(line' → logprob: -15.875636100769043
    10. '()' → logprob: -16.375635147094727

Token 364: '_line' (ID: 14418)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.1888679839321412e-05
    2. '(' → logprob: -10.750021934509277
    3. ' (' → logprob: -15.500021934509277
    4. 'self' → logprob: -15.750021934509277
    5. '(
' → logprob: -18.62502098083496
    6. '(s' → logprob: -18.62502098083496
    7. '(sel' → logprob: -19.75002098083496
    8. '(se' → logprob: -20.25002098083496
    9. '   ' → logprob: -20.37502098083496
    10. 's' → logprob: -20.37502098083496

Token 365: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00021867557370569557
    2. '(' → logprob: -8.500218391418457
    3. ' (' → logprob: -11.125218391418457
    4. '(s' → logprob: -15.000218391418457
    5. '(line' → logprob: -16.875219345092773
    6. 'self' → logprob: -17.875219345092773
    7. '(
' → logprob: -18.125219345092773
    8. '(sel' → logprob: -18.250219345092773
    9. ' self' → logprob: -19.250219345092773
    10. '(this' → logprob: -20.250219345092773

Token 366: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00042173630208708346
    2. ' ,' → logprob: -7.875421524047852
    3. ',line' → logprob: -10.125421524047852
    4. ',input' → logprob: -14.000421524047852
    5. 'self' → logprob: -14.375421524047852
    6. 's' → logprob: -16.75042152404785
    7. ' line' → logprob: -16.75042152404785
    8. ',self' → logprob: -17.87542152404785
    9. '   ' → logprob: -18.00042152404785
    10. 'line' → logprob: -18.00042152404785

Token 367: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.3576970100402832
    2. 'self' → logprob: -1.8576970100402832
    3. 'input' → logprob: -2.607697010040283
    4. ' line' → logprob: -2.982697010040283
    5. ' self' → logprob: -4.357697010040283
    6. ' input' → logprob: -4.982697010040283
    7. 'coeff' → logprob: -7.482697010040283
    8. ' coefficients' → logprob: -9.732696533203125
    9. 'inputs' → logprob: -12.107696533203125
    10. '(self' → logprob: -12.357696533203125

Token 368: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002551646437495947
    2. '):' → logprob: -6.252551555633545
    3. ':str' → logprob: -7.502551555633545
    4. '):
' → logprob: -10.252552032470703
    5. ' :' → logprob: -11.002552032470703
    6. ')' → logprob: -11.252552032470703
    7. '   ' → logprob: -12.502552032470703
    8. ' ):' → logprob: -13.127552032470703
    9. '):
' → logprob: -15.627552032470703
    10. '       ' → logprob: -16.002552032470703

Token 369: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.16236716508865356
    2. ' str' → logprob: -1.9123671054840088
    3. ')' → logprob: -6.162367343902588
    4. 'self' → logprob: -11.41236686706543
    5. '):
' → logprob: -12.03736686706543
    6. ':str' → logprob: -12.78736686706543
    7. '[str' → logprob: -12.91236686706543
    8. ' )' → logprob: -12.91236686706543
    9. '):' → logprob: -13.28736686706543
    10. '   ' → logprob: -13.28736686706543

Token 370: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.372294698550832e-06
    2. '):' → logprob: -11.750009536743164
    3. ' )' → logprob: -14.500009536743164
    4. '   ' → logprob: -14.625009536743164
    5. '):
' → logprob: -15.125009536743164
    6. ':' → logprob: -15.500009536743164
    7. ')->' → logprob: -17.250009536743164
    8. '")' → logprob: -18.375009536743164
    9. ',)' → logprob: -18.375009536743164
    10. '):
' → logprob: -18.625009536743164

Token 371: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25971049070358276
    2. ' ->' → logprob: -2.2597105503082275
    3. ')' → logprob: -2.7597105503082275
    4. '->' → logprob: -2.8847105503082275
    5. '):' → logprob: -5.884710311889648
    6. ')->' → logprob: -6.259710311889648
    7. '   ' → logprob: -7.884710311889648
    8. ' :' → logprob: -10.759710311889648
    9. ' )->' → logprob: -10.884710311889648
    10. ' )' → logprob: -11.259710311889648

Token 372: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.01989678293466568
    2. ' str' → logprob: -4.644896984100342
    3. 'None' → logprob: -4.644896984100342
    4. 'List' → logprob: -8.519896507263184
    5. ' None' → logprob: -9.019896507263184
    6. 'Tuple' → logprob: -9.144896507263184
    7. 'float' → logprob: -10.269896507263184
    8. '[str' → logprob: -11.394896507263184
    9. ' List' → logprob: -13.644896507263184
    10. ' Tuple' → logprob: -13.894896507263184

Token 373: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016758986748754978
    2. ':
' → logprob: -6.626676082611084
    3. '       ' → logprob: -8.376675605773926
    4. '):' → logprob: -9.626675605773926
    5. '():' → logprob: -10.751675605773926
    6. '(self' → logprob: -11.501675605773926
    7. '):
' → logprob: -12.001675605773926
    8. '   ' → logprob: -12.001675605773926
    9. ',' → logprob: -12.626675605773926
    10. '():
' → logprob: -13.376675605773926

Token 374: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26066556572914124
    2. 'coeff' → logprob: -1.6356655359268188
    3. ' coefficients' → logprob: -3.3856656551361084
    4. ' coeff' → logprob: -8.385665893554688
    5. 'tokens' → logprob: -8.385665893554688
    6. 'co' → logprob: -8.510665893554688
    7. 'values' → logprob: -10.635665893554688
    8. '(coeff' → logprob: -10.635665893554688
    9. 'try' → logprob: -11.385665893554688
    10. 'coef' → logprob: -11.385665893554688

Token 375: ' tokens' (ID: 20290)
  Prédit: 'coeff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coeff' → logprob: -0.0015152193373069167
    2. 'try' → logprob: -6.7515153884887695
    3. 'values' → logprob: -8.75151538848877
    4. ' coefficients' → logprob: -9.50151538848877
    5. 'co' → logprob: -9.75151538848877
    6. 'parts' → logprob: -10.25151538848877
    7. 'tokens' (adapté à ' tokens') → logprob: -11.75151538848877
    8. '       ' → logprob: -13.00151538848877
    9. ' coeff' → logprob: -13.12651538848877
    10. 'components' → logprob: -13.25151538848877

Token 376: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889033854007721
    2. '=' → logprob: -2.578890323638916
    3. '=line' → logprob: -14.453890800476074
    4. '.' → logprob: -17.578889846801758
    5. ' ' → logprob: -18.828889846801758
    6. ' =
' → logprob: -18.953889846801758
    7. '	' → logprob: -19.453889846801758
    8. '＝' → logprob: -19.703889846801758
    9. ')' → logprob: -19.703889846801758
    10. ' ' → logprob: -20.078889846801758

Token 377: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.02975395694375038
    2. ' line' → logprob: -3.5297539234161377
    3. '[line' → logprob: -12.904753684997559
    4. 'list' → logprob: -14.404753684997559
    5. '[' → logprob: -14.779753684997559
    6. ' [' → logprob: -16.654754638671875
    7. '	line' → logprob: -16.654754638671875
    8. '(line' → logprob: -17.279754638671875
    9. ' list' → logprob: -17.904754638671875
    10. '=line' → logprob: -19.029754638671875

Token 378: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.04361848533153534
    2. '.' → logprob: -3.5436184406280518
    3. '.split' → logprob: -4.293618679046631
    4. '.rstrip' → logprob: -9.668618202209473
    5. '().' → logprob: -10.418618202209473
    6. ' .' → logprob: -10.668618202209473
    7. 'strip' → logprob: -15.293618202209473
    8. '   ' → logprob: -16.16861915588379
    9. 'split' → logprob: -16.29361915588379
    10. '.trim' → logprob: -16.79361915588379

Token 379: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00033558503491804004
    2. '()' → logprob: -8.000335693359375
    3. '('' → logprob: -16.375335693359375
    4. ' ().' → logprob: -16.625335693359375
    5. '(' → logprob: -17.500335693359375
    6. '().'' → logprob: -18.500335693359375
    7. '()
' → logprob: -19.000335693359375
    8. '.split' → logprob: -19.875335693359375
    9. 'split' → logprob: -20.375335693359375
    10. '.' → logprob: -20.500335693359375

Token 380: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -18.125
    3. 'spl' → logprob: -21.0
    4. '(split' → logprob: -21.125
    5. '.split' → logprob: -21.625
    6. 'sp' → logprob: -22.25
    7. 'strip' → logprob: -24.75
    8. 'replace' → logprob: -24.875
    9. 'rstrip' → logprob: -25.0
    10. 's' → logprob: -25.5

Token 381: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009532637195661664
    2. '(' → logprob: -7.500953197479248
    3. '('' → logprob: -7.875953197479248
    4. '("' → logprob: -11.125953674316406
    5. '()]' → logprob: -13.125953674316406
    6. '())' → logprob: -13.250953674316406
    7. '()
' → logprob: -14.625953674316406
    8. '()"' → logprob: -15.500953674316406
    9. '(',' → logprob: -15.625953674316406
    10. '()[' → logprob: -15.875953674316406

Token 382: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028589628636837006
    2. ' if' → logprob: -6.502859115600586
    3. 'if' → logprob: -7.127859115600586
    4. 'tokens' → logprob: -8.377859115600586
    5. ',' → logprob: -9.127859115600586
    6. '        
' → logprob: -9.627859115600586
    7. 'coeff' → logprob: -9.752859115600586
    8. '<|end|>' → logprob: -10.877859115600586
    9. '        ' → logprob: -11.252859115600586
    10. ' coefficients' → logprob: -11.627859115600586

Token 383: ' if' (ID: 538)
  Prédit: 'coeff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coeff' → logprob: -0.027847502380609512
    2. 'if' (adapté à ' if') → logprob: -3.6528475284576416
    3. 'co' → logprob: -7.2778472900390625
    4. 'try' → logprob: -7.5278472900390625
    5. '       ' → logprob: -9.152847290039062
    6. ' coefficients' → logprob: -9.652847290039062
    7. ' if' → logprob: -9.777847290039062
    8. 'numbers' → logprob: -10.152847290039062
    9. 'coef' → logprob: -10.527847290039062
    10. 'values' → logprob: -11.402847290039062

Token 384: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.006757648196071386
    2. ' len' → logprob: -5.006757736206055
    3. 'not' → logprob: -10.256757736206055
    4. ' not' → logprob: -11.881757736206055
    5. 'tokens' → logprob: -15.506757736206055
    6. '(len' → logprob: -16.756757736206055
    7. '	len' → logprob: -17.381757736206055
    8. '   ' → logprob: -18.506757736206055
    9. ' ' → logprob: -18.631757736206055
    10. 'l' → logprob: -19.881757736206055

Token 385: '(tokens' (ID: 74272)
  Prédit: '(tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -0.003184125293046236
    2. 'tokens' → logprob: -5.7531843185424805
    3. ' tokens' → logprob: -12.00318431854248
    4. '(token' → logprob: -15.50318431854248
    5. '!=' → logprob: -17.128183364868164
    6. '(' → logprob: -17.503183364868164
    7. 'okens' → logprob: -17.503183364868164
    8. ' !=' → logprob: -18.003183364868164
    9. '.tokens' → logprob: -18.128183364868164
    10. '_tokens' → logprob: -18.253183364868164

Token 386: ')' (ID: 8)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.11810868978500366
    2. '!=' → logprob: -2.3681087493896484
    3. ')' → logprob: -4.743108749389648
    4. ' <' → logprob: -5.118108749389648
    5. '<' → logprob: -5.868108749389648
    6. '==' → logprob: -9.618108749389648
    7. ' ==' → logprob: -9.743108749389648
    8. ')!=' → logprob: -9.743108749389648
    9. ' )' → logprob: -10.743108749389648
    10. '()' → logprob: -13.868108749389648

Token 387: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.17851004004478455
    2. ' !=' → logprob: -1.928510069847107
    3. '<' → logprob: -4.0535101890563965
    4. ' <' → logprob: -7.6785101890563965
    5. '==' → logprob: -8.178509712219238
    6. ' ==' → logprob: -11.553509712219238
    7. '()!=' → logprob: -13.803509712219238
    8. '<len' → logprob: -14.303509712219238
    9. '=' → logprob: -14.678509712219238
    10. ')!=' → logprob: -14.928509712219238

Token 388: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '٦' → logprob: -17.62510871887207
    4. '۶' → logprob: -18.18760871887207
    5. '"' → logprob: -18.56260871887207
    6. '６' → logprob: -18.62510871887207
    7. '' → logprob: -18.75010871887207
    8. '```' → logprob: -18.75010871887207
    9. '   ' → logprob: -19.00010871887207
    10. '     ' → logprob: -19.18760871887207

Token 389: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -3.6550729419104755e-05
    2. ' ' → logprob: -10.250036239624023
    3. '"' → logprob: -14.375036239624023
    4. ''' → logprob: -15.687536239624023
    5. '٦' → logprob: -16.875036239624023
    6. '```' → logprob: -17.375036239624023
    7. '۶' → logprob: -17.812536239624023
    8. '６' → logprob: -17.875036239624023
    9. '7' → logprob: -17.937536239624023
    10. '६' → logprob: -18.062536239624023

Token 390: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25249093770980835
    2. ':
' → logprob: -1.5024909973144531
    3. ' or' → logprob: -7.627490997314453
    4. ':return' → logprob: -9.877490997314453
    5. ' and' → logprob: -12.377490997314453
    6. 'or' → logprob: -12.502490997314453
    7. '):
' → logprob: -12.502490997314453
    8. '       ' → logprob: -13.127490997314453
    9. '           ' → logprob: -13.252490997314453
    10. ':
' → logprob: -13.377490997314453

Token 391: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017846934497356415
    2. 'raise' → logprob: -4.767847061157227
    3. ' raise' → logprob: -5.017847061157227
    4. ':' → logprob: -6.267847061157227
    5. ':
' → logprob: -7.642847061157227
    6. ',' → logprob: -9.392847061157227
    7. '	raise' → logprob: -10.892847061157227
    8. ' raises' → logprob: -11.267847061157227
    9. 'return' → logprob: -11.517847061157227
    10. '.raise' → logprob: -11.642847061157227

Token 392: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.32056924700737
    2. 'return' → logprob: -1.3205692768096924
    3. '           ' → logprob: -5.320569038391113
    4. ' raise' → logprob: -6.070569038391113
    5. ' return' → logprob: -9.445569038391113
    6. '	raise' → logprob: -13.445569038391113
    7. '   ' → logprob: -15.445569038391113
    8. '               ' → logprob: -16.07056999206543
    9. 'raises' → logprob: -16.57056999206543
    10. '       ' → logprob: -16.82056999206543

Token 393: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.38687217235565186
    2. ' Value' → logprob: -1.1368721723556519
    3. '	Value' → logprob: -14.761872291564941
    4. '(Value' → logprob: -15.511872291564941
    5. '_value' → logprob: -15.761872291564941
    6. 'value' → logprob: -15.761872291564941
    7. '_Value' → logprob: -17.011871337890625
    8. '```' → logprob: -17.011871337890625
    9. '<Value' → logprob: -17.261871337890625
    10. 'Runtime' → logprob: -17.386871337890625

Token 394: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -7.636475493200123e-05
    2. 'rror' → logprob: -9.500076293945312
    3. 'Value' → logprob: -13.500076293945312
    4. 'SError' → logprob: -17.000076293945312
    5. 'Input' → logprob: -17.875076293945312
    6. 'alue' → logprob: -18.125076293945312
    7. 'Erro' → logprob: -19.250076293945312
    8. 'ror' → logprob: -19.375076293945312
    9. 'LError' → logprob: -19.375076293945312
    10. '	Error' → logprob: -19.875076293945312

Token 395: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0004306692280806601
    2. '(' → logprob: -7.750430583953857
    3. '(
' → logprob: -17.000431060791016
    4. '('' → logprob: -17.750431060791016
    5. '(f' → logprob: -19.375431060791016
    6. '()' → logprob: -19.500431060791016
    7. '("'' → logprob: -19.625431060791016
    8. '(

' → logprob: -20.625431060791016
    9. '("")' → logprob: -21.000431060791016
    10. '(",' → logprob: -21.625431060791016

Token 396: 'Each' (ID: 7919)
  Prédit: 'Exactly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Exactly' → logprob: -0.010129308328032494
    2. 'Expected' → logprob: -5.510129451751709
    3. 'Six' → logprob: -6.260129451751709
    4. 'Invalid' → logprob: -6.635129451751709
    5. 'Input' → logprob: -7.010129451751709
    6. '"' → logprob: -7.385129451751709
    7. 'Each' → logprob: -7.385129451751709
    8. 'Exact' → logprob: -8.51012897491455
    9. ' Exactly' → logprob: -8.51012897491455
    10. 'Incorrect' → logprob: -8.51012897491455

Token 397: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.635098934173584
    2. ' coefficient' → logprob: -1.510098934173584
    3. ' line' → logprob: -2.010098934173584
    4. 'line' → logprob: -3.760098934173584
    5. ' token' → logprob: -3.885098934173584
    6. 'input' → logprob: -3.885098934173584
    7. ' equation' → logprob: -3.885098934173584
    8. 'coeff' → logprob: -5.135098934173584
    9. ' ' → logprob: -5.385098934173584
    10. ' coefficients' → logprob: -5.635098934173584

Token 398: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.10289807617664337
    2. 'line' → logprob: -2.352898120880127
    3. ' must' → logprob: -5.977898120880127
    4. 'must' → logprob: -8.852897644042969
    5. '_line' → logprob: -12.977897644042969
    6. ' should' → logprob: -13.102897644042969
    7. '	line' → logprob: -13.227897644042969
    8. ' ' → logprob: -13.727897644042969
    9. ' requires' → logprob: -13.727897644042969
    10. '   ' → logprob: -14.477897644042969

Token 399: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.001335359294898808
    2. 'must' → logprob: -6.626335144042969
    3. ' should' → logprob: -11.876335144042969
    4. '<|end|>' → logprob: -13.501335144042969
    5. ' requires' → logprob: -15.376335144042969
    6. ')' → logprob: -15.751335144042969
    7. '   ' → logprob: -15.751335144042969
    8. 'Must' → logprob: -16.00133514404297
    9. ' ' → logprob: -16.37633514404297
    10. '.must' → logprob: -16.50133514404297

Token 400: ' have' (ID: 679)
  Prédit: ' contain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contain' → logprob: -0.04905136302113533
    2. 'contain' → logprob: -3.049051284790039
    3. ' have' → logprob: -8.049051284790039
    4. 'have' → logprob: -9.424051284790039
    5. ' consist' → logprob: -10.424051284790039
    6. ' provide' → logprob: -11.174051284790039
    7. 'provide' → logprob: -11.174051284790039
    8. 'cont' → logprob: -12.674051284790039
    9. 'cons' → logprob: -13.299051284790039
    10. ' contains' → logprob: -14.924051284790039

Token 401: ' exactly' (ID: 9707)
  Prédit: ' exactly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exactly' → logprob: -0.03969497233629227
    2. ' six' → logprob: -3.5396950244903564
    3. ' ' → logprob: -5.414694786071777
    4. 'exact' → logprob: -5.664694786071777
    5. '6' → logprob: -6.289694786071777
    6. 'six' → logprob: -9.164694786071777
    7. 'Exactly' → logprob: -11.289694786071777
    8. ' exact' → logprob: -12.289694786071777
    9. ' Exactly' → logprob: -14.289694786071777
    10. ' exactement' → logprob: -16.039695739746094

Token 402: ' six' (ID: 7429)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.05126405507326126
    2. ' six' → logprob: -3.5512640476226807
    3. ' ' → logprob: -4.05126428604126
    4. 'six' → logprob: -5.55126428604126
    5. '六' → logprob: -15.301263809204102
    6. ' exactly' → logprob: -15.926263809204102
    7. ' ' → logprob: -16.0512638092041
    8. 'Six' → logprob: -16.3012638092041
    9. ' seis' → logprob: -16.5512638092041
    10. '```' → logprob: -16.9262638092041

Token 403: ' numbers' (ID: 8663)
  Prédit: ' coefficients'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coefficients' → logprob: -0.2093280851840973
    2. ' tokens' → logprob: -2.0843281745910645
    3. 'coeff' → logprob: -3.3343281745910645
    4. ' numbers' → logprob: -4.3343281745910645
    5. 'tokens' → logprob: -4.9593281745910645
    6. ' values' → logprob: -5.5843281745910645
    7. ' float' → logprob: -6.0843281745910645
    8. ' numeric' → logprob: -6.3343281745910645
    9. 'numbers' → logprob: -7.9593281745910645
    10. ' numerical' → logprob: -8.709327697753906

Token 404: '.")
' (ID: 27834)
  Prédit: '.")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.")' → logprob: -0.1665472835302353
    2. '.")
' → logprob: -1.9165472984313965
    3. '")' → logprob: -5.1665472984313965
    4. '")
' → logprob: -7.6665472984313965
    5. ',' → logprob: -9.666546821594238
    6. '.' → logprob: -10.541546821594238
    7. '.")
' → logprob: -10.541546821594238
    8. '.")

' → logprob: -12.416546821594238
    9. ' .' → logprob: -12.666546821594238
    10. '."' → logprob: -12.791546821594238

Token 405: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039627138525247574
    2. '        
' → logprob: -3.9146270751953125
    3. '
' → logprob: -4.0396270751953125
    4. 'tokens' → logprob: -7.2896270751953125
    5. 'coeff' → logprob: -9.289627075195312
    6. '<|end|>' → logprob: -9.414627075195312
    7. '  
' → logprob: -9.664627075195312
    8. '    
' → logprob: -10.039627075195312
    9. '```' → logprob: -10.164627075195312
    10. ',' → logprob: -10.289627075195312

Token 406: ' coefficients' (ID: 76338)
  Prédit: 'coeff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coeff' → logprob: -0.0032002893276512623
    2. ' coefficients' → logprob: -5.878200054168701
    3. '       ' → logprob: -9.00320053100586
    4. 'co' → logprob: -9.12820053100586
    5. 'numbers' → logprob: -9.12820053100586
    6. ' coeff' → logprob: -10.37820053100586
    7. 'values' → logprob: -11.12820053100586
    8. 'coef' → logprob: -12.37820053100586
    9. 'nums' → logprob: -13.25320053100586
    10. 'try' → logprob: -13.62820053100586

Token 407: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011047814972698689
    2. '=' → logprob: -4.511047840118408
    3. ' =[' → logprob: -17.76104736328125
    4. '=[' → logprob: -18.88604736328125
    5. '＝' → logprob: -19.01104736328125
    6. ' =
' → logprob: -19.38604736328125
    7. '=float' → logprob: -19.51104736328125
    8. ' ' → logprob: -19.63604736328125
    9. '	' → logprob: -19.76104736328125
    10. '=
' → logprob: -20.51104736328125

Token 408: ' list' (ID: 1562)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.7929813861846924
    2. '[' → logprob: -1.0429813861846924
    3. ' [' → logprob: -1.7929813861846924
    4. ' list' → logprob: -4.042981147766113
    5. 'list' → logprob: -4.542981147766113
    6. '[List' → logprob: -7.792981147766113
    7. '[self' → logprob: -11.667981147766113
    8. '[f' → logprob: -11.792981147766113
    9. '[to' → logprob: -12.417981147766113
    10. '[class' → logprob: -12.542981147766113

Token 409: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.176947600673884e-05
    2. 'map' → logprob: -11.000021934509277
    3. '(' → logprob: -12.250021934509277
    4. '(float' → logprob: -15.500021934509277
    5. ' map' → logprob: -17.62502098083496
    6. '	map' → logprob: -17.75002098083496
    7. '.map' → logprob: -19.25002098083496
    8. '[' → logprob: -19.62502098083496
    9. '(
' → logprob: -20.25002098083496
    10. 'float' → logprob: -21.50002098083496

Token 410: '(float' (ID: 17830)
  Prédit: '(float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.008619066327810287
    2. 'float' → logprob: -4.7586188316345215
    3. ',float' → logprob: -13.13361930847168
    4. '(' → logprob: -13.88361930847168
    5. ' float' → logprob: -14.13361930847168
    6. '=float' → logprob: -14.50861930847168
    7. '	float' → logprob: -16.25861930847168
    8. '<float' → logprob: -16.50861930847168
    9. 'flo' → logprob: -17.13361930847168
    10. '   ' → logprob: -17.50861930847168

Token 411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026950111612677574
    2. '(tokens' → logprob: -4.276949882507324
    3. ',t' → logprob: -4.401949882507324
    4. 'tokens' → logprob: -8.276949882507324
    5. ' ,' → logprob: -8.651949882507324
    6. '(t' → logprob: -11.151949882507324
    7. ' tokens' → logprob: -12.151949882507324
    8. '(' → logprob: -13.901949882507324
    9. ' (' → logprob: -13.901949882507324
    10. ',(' → logprob: -15.401949882507324

Token 412: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.023245826363563538
    2. ' tokens' → logprob: -3.7732458114624023
    3. '(tokens' → logprob: -15.023245811462402
    4. 'token' → logprob: -16.52324676513672
    5. '.tokens' → logprob: -17.77324676513672
    6. '_tokens' → logprob: -19.52324676513672
    7. 'Tokens' → logprob: -19.77324676513672
    8. '   ' → logprob: -20.02324676513672
    9. 'okens' → logprob: -20.02324676513672
    10. ' ' → logprob: -20.52324676513672

Token 413: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -3.881560041918419e-05
    2. '))
' → logprob: -10.250039100646973
    3. ' ))' → logprob: -12.750039100646973
    4. '       ' → logprob: -15.750039100646973
    5. ')))' → logprob: -16.375038146972656
    6. '))

' → logprob: -16.500038146972656
    7. '));' → logprob: -16.750038146972656
    8. '()))' → logprob: -16.750038146972656
    9. '   ' → logprob: -17.375038146972656
    10. '[' → logprob: -17.375038146972656

Token 414: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002519180765375495
    2. ' system' → logprob: -6.127519130706787
    3. 'system' → logprob: -8.252519607543945
    4. '        
' → logprob: -10.502519607543945
    5. '
' → logprob: -10.752519607543945
    6. ')' → logprob: -11.502519607543945
    7. '   ' → logprob: -13.002519607543945
    8. '```' → logprob: -13.627519607543945
    9. '      ' → logprob: -13.752519607543945
    10. '_system' → logprob: -13.877519607543945

Token 415: ' system' (ID: 2420)
  Prédit: 'system'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'system' (adapté à ' system') → logprob: -0.43459567427635193
    2. ' system' → logprob: -1.0595957040786743
    3. '       ' → logprob: -5.184595584869385
    4. 'solution' → logprob: -9.184596061706543
    5. '        
' → logprob: -9.934596061706543
    6. '
' → logprob: -10.309596061706543
    7. ' solution' → logprob: -10.684596061706543
    8. 'sys' → logprob: -11.059596061706543
    9. ' equation' → logprob: -11.184596061706543
    10. 'solver' → logprob: -11.184596061706543

Token 416: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6935486197471619
    2. ' =' → logprob: -0.6935486197471619
    3. '_system' → logprob: -7.943548679351807
    4. '_factory' → logprob: -10.318548202514648
    5. '_' → logprob: -12.193548202514648
    6. '_instance' → logprob: -12.318548202514648
    7. '=_' → logprob: -13.193548202514648
    8. 'system' → logprob: -13.943548202514648
    9. '_class' → logprob: -14.943548202514648
    10. '=self' → logprob: -15.193548202514648

Token 417: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024756586644798517
    2. ' self' → logprob: -6.002475738525391
    3. '(self' → logprob: -17.87747573852539
    4. '       ' → logprob: -19.37747573852539
    5. '=self' → logprob: -20.00247573852539
    6. '	self' → logprob: -20.50247573852539
    7. '
' → logprob: -20.87747573852539
    8. 'Self' → logprob: -21.50247573852539
    9. '[self' → logprob: -21.75247573852539
    10. 's' → logprob: -22.75247573852539

Token 418: '.system' (ID: 29667)
  Prédit: '.system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.system' → logprob: -3.5597102396423e-05
    2. 'system' → logprob: -10.250035285949707
    3. '.' → logprob: -17.000036239624023
    4. '	system' → logprob: -17.500036239624023
    5. '.sys' → logprob: -18.250036239624023
    6. ' system' → logprob: -18.625036239624023
    7. '.s' → logprob: -18.750036239624023
    8. '.user' → logprob: -19.500036239624023
    9. '.server' → logprob: -19.750036239624023
    10. 'System' → logprob: -19.750036239624023

Token 419: '_factory' (ID: 57891)
  Prédit: '_factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factory' → logprob: -7.896309739408025e-07
    2. 'Factory' → logprob: -14.375000953674316
    3. 'factory' → logprob: -16.0
    4. '_fact' → logprob: -17.0
    5. '_FACTORY' → logprob: -17.75
    6. '_fac' → logprob: -18.25
    7. '_factor' → logprob: -18.375
    8. '_system' → logprob: -18.375
    9. '_solver' → logprob: -21.25
    10. ' factory' → logprob: -22.625

Token 420: '(coeff' (ID: 167147)
  Prédit: '(coeff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(coeff' → logprob: -0.08183517307043076
    2. '(co' → logprob: -2.5818352699279785
    3. '(' → logprob: -5.8318352699279785
    4. ' (' → logprob: -11.83183479309082
    5. 'coeff' → logprob: -14.70683479309082
    6. '.coe' → logprob: -15.83183479309082
    7. '((' → logprob: -16.08183479309082
    8. '(*' → logprob: -16.58183479309082
    9. '()' → logprob: -16.95683479309082
    10. '(criteria' → logprob: -17.20683479309082

Token 421: 'icients' (ID: 63003)
  Prédit: 'icients'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icients' → logprob: -0.0007163656409829855
    2. 'fficients' → logprob: -7.250716209411621
    3. 'eff' → logprob: -13.500716209411621
    4. 'fic' → logprob: -13.500716209411621
    5. 'ic' → logprob: -13.750716209411621
    6. 'icient' → logprob: -14.000716209411621
    7. 'c' → logprob: -14.125716209411621
    8. 'coeff' → logprob: -15.250716209411621
    9. 'ec' → logprob: -15.625716209411621
    10. 'ients' → logprob: -15.750716209411621

Token 422: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003179855877533555
    2. ')
' → logprob: -5.753180027008057
    3. ')
' → logprob: -13.753179550170898
    4. '       ' → logprob: -14.003179550170898
    5. ' )' → logprob: -15.378179550170898
    6. ')`
' → logprob: -17.5031795501709
    7. ')

' → logprob: -17.8781795501709
    8. ')`' → logprob: -17.8781795501709
    9. '   ' → logprob: -18.2531795501709
    10. ' ' → logprob: -19.0031795501709

Token 423: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4351614713668823
    2. '       ' → logprob: -1.1851614713668823
    3. ' result' → logprob: -3.935161590576172
    4. 'solution' → logprob: -3.935161590576172
    5. ' solution' → logprob: -5.060161590576172
    6. 'results' → logprob: -7.060161590576172
    7. 'values' → logprob: -7.935161590576172
    8. 'solutions' → logprob: -8.310161590576172
    9. ' solutions' → logprob: -9.310161590576172
    10. '_solution' → logprob: -10.185161590576172

Token 424: ' solution' (ID: 7578)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solution' (adapté à ' solution') → logprob: -1.1638723611831665
    2. 'result' → logprob: -1.2888723611831665
    3. ' solution' → logprob: -1.4138723611831665
    4. 'results' → logprob: -2.788872241973877
    5. 'values' → logprob: -2.913872241973877
    6. ' result' → logprob: -3.288872241973877
    7. ' values' → logprob: -4.913872241973877
    8. ' results' → logprob: -5.288872241973877
    9. 'solutions' → logprob: -6.288872241973877
    10. '       ' → logprob: -7.038872241973877

Token 425: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602257490158081
    2. '=' → logprob: -1.910225749015808
    3. '.' → logprob: -14.285225868225098
    4. 's' → logprob: -14.535225868225098
    5. ')' → logprob: -15.785225868225098
    6. ',' → logprob: -16.16022491455078
    7. '.=' → logprob: -16.16022491455078
    8. ' ' → logprob: -16.91022491455078
    9. ' =)' → logprob: -17.53522491455078
    10. '<|end|>' → logprob: -17.66022491455078

Token 426: ' system' (ID: 2420)
  Prédit: ' system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' system' → logprob: -0.1269282102584839
    2. 'system' → logprob: -2.1269283294677734
    3. '	system' → logprob: -17.001928329467773
    4. '(system' → logprob: -17.376928329467773
    5. 'self' → logprob: -17.501928329467773
    6. ' solution' → logprob: -17.876928329467773
    7. 'solution' → logprob: -18.001928329467773
    8. 'sys' → logprob: -18.251928329467773
    9. ' sys' → logprob: -18.626928329467773
    10. 'ssystem' → logprob: -19.126928329467773

Token 427: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -0.0019308974733576179
    2. '.' → logprob: -6.2519307136535645
    3. ' .' → logprob: -13.251931190490723
    4. 'solve' → logprob: -14.501931190490723
    5. '.sol' → logprob: -17.251930236816406
    6. '.save' → logprob: -18.626930236816406
    7. '.s' → logprob: -18.626930236816406
    8. '.resolve' → logprob: -19.126930236816406
    9. ' solve' → logprob: -19.501930236816406
    10. '.solution' → logprob: -19.501930236816406

Token 428: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1002284586429596
    2. '()
' → logprob: -2.3502285480499268
    3. '()
' → logprob: -10.850228309631348
    4. '()

' → logprob: -12.975228309631348
    5. '()`' → logprob: -17.225229263305664
    6. '()\' → logprob: -17.475229263305664
    7. '(' → logprob: -18.350229263305664
    8. '())' → logprob: -18.475229263305664
    9. '()"' → logprob: -19.350229263305664
    10. '()

' → logprob: -19.475229263305664

Token 429: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0770065039396286
    2. 'return' → logprob: -3.0770065784454346
    3. ' return' → logprob: -3.5770065784454346
    4. '
' → logprob: -9.827006340026855
    5. '	return' → logprob: -12.952006340026855
    6. '```' → logprob: -13.452006340026855
    7. '        
' → logprob: -14.452006340026855
    8. '{return' → logprob: -15.077006340026855
    9. '   ' → logprob: -15.327006340026855
    10. '	' → logprob: -15.452006340026855

Token 430: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.001189041300676763
    2. ' return' → logprob: -6.751189231872559
    3. '       ' → logprob: -11.001189231872559
    4. 'result' → logprob: -13.626189231872559
    5. '
' → logprob: -14.251189231872559
    6. 'formatted' → logprob: -15.251189231872559
    7. '	return' → logprob: -18.001188278198242
    8. '```' → logprob: -18.001188278198242
    9. 'output' → logprob: -19.001188278198242
    10. '        
' → logprob: -19.001188278198242

Token 431: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019286326132714748
    2. ' self' → logprob: -6.251928806304932
    3. '(self' → logprob: -20.251928329467773
    4. ' ' → logprob: -20.501928329467773
    5. '	self' → logprob: -20.751928329467773
    6. '"' → logprob: -22.251928329467773
    7. '[self' → logprob: -22.751928329467773
    8. 's' → logprob: -23.001928329467773
    9. '
' → logprob: -23.126928329467773
    10. '   ' → logprob: -23.501928329467773

Token 432: '.format' (ID: 12277)
  Prédit: '.format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: -2.696889623621246e-06
    2. '.form' → logprob: -13.12500286102295
    3. '.' → logprob: -14.62500286102295
    4. ' .' → logprob: -16.500001907348633
    5. 'formatter' → logprob: -17.250001907348633
    6. '.output' → logprob: -19.500001907348633
    7. '.filter' → logprob: -19.875001907348633
    8. '.return' → logprob: -20.375001907348633
    9. '.pattern' → logprob: -20.875001907348633
    10. '.for' → logprob: -20.875001907348633

Token 433: 'ter' (ID: 399)
  Prédit: 'ter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -7.896309739408025e-07
    2. 'er' → logprob: -14.375000953674316
    3. 'atter' → logprob: -16.75
    4. 'tter' → logprob: -17.5
    5. '(' → logprob: -17.875
    6. 'тер' → logprob: -18.875
    7. 'TER' → logprob: -19.0
    8. '(format' → logprob: -19.5
    9. '```' → logprob: -19.75
    10. 'ters' → logprob: -20.125

Token 434: '.format' (ID: 12277)
  Prédit: '.format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: 0.0
    2. '.' → logprob: -17.0
    3. ' .' → logprob: -18.0
    4. 'format' → logprob: -18.125
    5. '.form' → logprob: -21.0
    6. ' format' → logprob: -22.5
    7. '.print' → logprob: -22.625
    8. '	format' → logprob: -22.75
    9. '(format' → logprob: -23.25
    10. '.write' → logprob: -23.375

Token 435: '(solution' (ID: 126940)
  Prédit: '(solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(solution' → logprob: -1.0087516784551553e-05
    2. '(' → logprob: -11.75001049041748
    3. '(sol' → logprob: -13.25001049041748
    4. 'solution' → logprob: -15.25001049041748
    5. '(s' → logprob: -16.500009536743164
    6. '(system' → logprob: -17.375009536743164
    7. '((' → logprob: -17.750009536743164
    8. '(tuple' → logprob: -18.625009536743164
    9. ' (' → logprob: -18.625009536743164
    10. '(problem' → logprob: -20.125009536743164

Token 436: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -14.750000953674316
    3. ' )' → logprob: -17.0
    4. '))' → logprob: -17.875
    5. ')return' → logprob: -18.0
    6. '())' → logprob: -18.25
    7. ')}' → logprob: -18.375
    8. ')#' → logprob: -18.75
    9. '}' → logprob: -18.875
    10. ')}}' → logprob: -19.5

Token 437: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 438: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06197262182831764
    2. '#' → logprob: -3.4369726181030273
    3. 'if' → logprob: -3.6869726181030273
    4. '<|end|>' → logprob: -6.436972618103027
    5. 'import' → logprob: -7.061972618103027
    6. '```' → logprob: -7.936972618103027
    7. '
' → logprob: -11.061972618103027
    8. '<|end|>' → logprob: -11.061972618103027
    9. ' def' → logprob: -11.436972618103027
    10. ' if' → logprob: -11.561972618103027

Token 439: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0015298592625185847
    2. '#' → logprob: -6.626529693603516
    3. 'if' → logprob: -9.126529693603516
    4. 'import' → logprob: -10.251529693603516
    5. '```' → logprob: -10.501529693603516
    6. '<|end|>' → logprob: -10.626529693603516
    7. ' def' → logprob: -12.251529693603516
    8. '<|end|>' → logprob: -14.251529693603516
    9. 'from' → logprob: -14.501529693603516
    10. '   ' → logprob: -15.251529693603516

Token 440: ' run' (ID: 2461)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.07673848420381546
    2. 'run' → logprob: -3.0767385959625244
    3. ' process' → logprob: -4.076738357543945
    4. 'solve' → logprob: -4.826738357543945
    5. ' run' → logprob: -5.951738357543945
    6. ' solve' → logprob: -8.701738357543945
    7. 'batch' → logprob: -11.701738357543945
    8. 'main' → logprob: -12.701738357543945
    9. ' batch' → logprob: -13.951738357543945
    10. 'execute' → logprob: -14.201738357543945

Token 441: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004997743526473641
    2. '(' → logprob: -7.625499725341797
    3. '(
' → logprob: -12.000499725341797
    4. ' (' → logprob: -12.625499725341797
    5. 'self' → logprob: -13.125499725341797
    6. '   ' → logprob: -16.750499725341797
    7. ' self' → logprob: -16.750499725341797
    8. '()' → logprob: -16.875499725341797
    9. '(sel' → logprob: -17.000499725341797
    10. ' ' → logprob: -17.125499725341797

Token 442: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7143937349319458
    2. '):' → logprob: -1.3393937349319458
    3. '(self' → logprob: -2.0893936157226562
    4. 'self' → logprob: -2.3393936157226562
    5. '()' → logprob: -4.339393615722656
    6. '():' → logprob: -4.964393615722656
    7. '):
' → logprob: -6.214393615722656
    8. ' self' → logprob: -6.714393615722656
    9. ')(' → logprob: -7.339393615722656
    10. '())' → logprob: -7.339393615722656

Token 443: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18930941820144653
    2. 'while' → logprob: -2.4393093585968018
    3. ' while' → logprob: -2.8143093585968018
    4. 'import' → logprob: -4.064309597015381
    5. ' for' → logprob: -6.189309597015381
    6. '   ' → logprob: -6.314309597015381
    7. 'self' → logprob: -6.564309597015381
    8. 'for' → logprob: -7.064309597015381
    9. '```' → logprob: -7.189309597015381
    10. ' self' → logprob: -7.689309597015381

Token 444: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.37589138746261597
    2. 'while' → logprob: -1.8758914470672607
    3. 'import' → logprob: -2.6258914470672607
    4. ' for' → logprob: -2.6258914470672607
    5. ' while' → logprob: -4.625891208648682
    6. ' import' → logprob: -5.875891208648682
    7. '       ' → logprob: -6.375891208648682
    8. 'try' → logprob: -6.875891208648682
    9. ' try' → logprob: -11.12589168548584
    10. '   ' → logprob: -12.62589168548584

Token 445: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.00012403888104017824
    2. 'line' → logprob: -9.000123977661133
    3. '	line' → logprob: -14.375123977661133
    4. ' lin' → logprob: -18.250123977661133
    5. '(line' → logprob: -19.125123977661133
    6. ' input' → logprob: -19.250123977661133
    7. '_line' → logprob: -20.000123977661133
    8. '=line' → logprob: -20.375123977661133
    9. '#line' → logprob: -20.500123977661133
    10. ' ' → logprob: -20.625123977661133

Token 446: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028192552272230387
    2. 'in' → logprob: -5.877819061279297
    3. ' ' → logprob: -12.127819061279297
    4. '	in' → logprob: -12.627819061279297
    5. 'import' → logprob: -13.502819061279297
    6. '_' → logprob: -14.002819061279297
    7. 's' → logprob: -14.002819061279297
    8. 'line' → logprob: -14.627819061279297
    9. ' ' → logprob: -14.752819061279297
    10. '_in' → logprob: -15.252819061279297

Token 447: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.575942873954773
    2. ' sys' → logprob: -0.825942873954773
    3. '(sys' → logprob: -13.575942993164062
    4. '	sys' → logprob: -13.700942993164062
    5. '=sys' → logprob: -13.825942993164062
    6. 'iter' → logprob: -16.325942993164062
    7. '```' → logprob: -17.825942993164062
    8. 'import' → logprob: -18.200942993164062
    9. 'Sys' → logprob: -18.575942993164062
    10. ' iter' → logprob: -18.700942993164062

Token 448: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.4498052223643754e-05
    2. 'stdin' → logprob: -11.250014305114746
    3. '.' → logprob: -14.250014305114746
    4. ' stdin' → logprob: -14.750014305114746
    5. '(stdin' → logprob: -15.500014305114746
    6. '.std' → logprob: -16.500015258789062
    7. '.stdout' → logprob: -17.500015258789062
    8. '.argv' → logprob: -17.875015258789062
    9. '   ' → logprob: -18.250015258789062
    10. '.__' → logprob: -18.375015258789062

Token 449: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0474248044192791
    2. '.readline' → logprob: -3.172424793243408
    3. ':
' → logprob: -6.047424793243408
    4. '.strip' → logprob: -6.547424793243408
    5. '.rstrip' → logprob: -8.297425270080566
    6. '.readlines' → logprob: -8.922425270080566
    7. ' in' → logprob: -9.172425270080566
    8. ' readline' → logprob: -9.922425270080566
    9. ' :' → logprob: -11.422425270080566
    10. 'rstrip' → logprob: -11.672425270080566

Token 450: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011844364780699834
    2. ' if' → logprob: -10.500118255615234
    3. ':' → logprob: -11.125118255615234
    4. ' line' → logprob: -11.375118255615234
    5. ' self' → logprob: -11.500118255615234
    6. '       ' → logprob: -11.625118255615234
    7. 'self' → logprob: -12.125118255615234
    8. '	       ' → logprob: -12.750118255615234
    9. '   ' → logprob: -12.875118255615234
    10. '<|end|>' → logprob: -12.875118255615234

Token 451: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -1.1476705074310303
    2. ' line' → logprob: -1.3976705074310303
    3. 'try' → logprob: -1.3976705074310303
    4. ' try' → logprob: -1.8976705074310303
    5. '           ' → logprob: -3.7726705074310303
    6. 'result' → logprob: -4.897670745849609
    7. ' result' → logprob: -5.522670745849609
    8. 'output' → logprob: -6.897670745849609
    9. ' if' → logprob: -7.147670745849609
    10. 'if' → logprob: -7.147670745849609

Token 452: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002901758998632431
    2. ' =' → logprob: -6.002901554107666
    3. '.strip' → logprob: -8.127902030944824
    4. '_strip' → logprob: -9.627902030944824
    5. '=line' → logprob: -10.002902030944824
    6. 'strip' → logprob: -11.877902030944824
    7. '.' → logprob: -12.002902030944824
    8. '.rstrip' → logprob: -12.502902030944824
    9. '.=' → logprob: -13.627902030944824
    10. 'rstrip' → logprob: -14.377902030944824

Token 453: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0004306692280806601
    2. ' line' → logprob: -7.750430583953857
    3. '(line' → logprob: -20.125431060791016
    4. '=line' → logprob: -20.375431060791016
    5. '	line' → logprob: -20.375431060791016
    6. ' ' → logprob: -22.750431060791016
    7. '#line' → logprob: -22.875431060791016
    8. '[line' → logprob: -23.500431060791016
    9. '   ' → logprob: -23.875431060791016
    10. 'lin' → logprob: -24.250431060791016

Token 454: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.001379402237944305
    2. '.rstrip' → logprob: -6.751379489898682
    3. '.' → logprob: -8.501379013061523
    4. 'strip' → logprob: -12.126379013061523
    5. 'rstrip' → logprob: -14.876379013061523
    6. ' .' → logprob: -16.376379013061523
    7. ' strip' → logprob: -16.626379013061523
    8. '.readline' → logprob: -17.626379013061523
    9. '_strip' → logprob: -17.626379013061523
    10. '.trim' → logprob: -19.251379013061523

Token 455: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5418300628662109
    2. '()
' → logprob: -1.416830062866211
    3. '()' → logprob: -1.791830062866211
    4. '<|end|>' → logprob: -6.166830062866211
    5. '       ' → logprob: -6.291830062866211
    6. '               ' → logprob: -6.666830062866211
    7. '            
' → logprob: -7.166830062866211
    8. '
' → logprob: -7.291830062866211
    9. '<|end|>' → logprob: -7.291830062866211
    10. 'if' → logprob: -7.541830062866211

Token 456: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005713331513106823
    2. 'if' → logprob: -5.38071346282959
    3. ' if' → logprob: -7.00571346282959
    4. '       ' → logprob: -9.25571346282959
    5. '<|end|>' → logprob: -9.63071346282959
    6. '   ' → logprob: -11.50571346282959
    7. '	       ' → logprob: -12.38071346282959
    8. '<|end|>' → logprob: -12.88071346282959
    9. '		' → logprob: -13.50571346282959
    10. '            
' → logprob: -13.50571346282959

Token 457: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.000116655595775228
    2. ' if' → logprob: -9.750116348266602
    3. '           ' → logprob: -9.750116348266602
    4. 'If' → logprob: -18.5001163482666
    5. '               ' → logprob: -19.3751163482666
    6. '	if' → logprob: -19.8751163482666
    7. 'try' → logprob: -19.8751163482666
    8. ';if' → logprob: -20.7501163482666
    9. '```' → logprob: -21.0001163482666
    10. '       ' → logprob: -21.3751163482666

Token 458: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.12810570001602173
    2. 'not' → logprob: -2.128105640411377
    3. ' line' → logprob: -7.378105640411377
    4. 'line' → logprob: -7.503105640411377
    5. '	not' → logprob: -15.128106117248535
    6. ' ' → logprob: -15.378106117248535
    7. '#line' → logprob: -16.25310516357422
    8. '!' → logprob: -16.87810516357422
    9. '	line' → logprob: -17.25310516357422
    10. '(line' → logprob: -17.37810516357422

Token 459: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0485873706638813
    2. ' line' → logprob: -3.0485873222351074
    3. '	line' → logprob: -17.173587799072266
    4. '(line' → logprob: -17.798587799072266
    5. '#line' → logprob: -18.548587799072266
    6. '[line' → logprob: -18.673587799072266
    7. 'Line' → logprob: -19.173587799072266
    8. '
' → logprob: -19.423587799072266
    9. '=line' → logprob: -19.923587799072266
    10. '_line' → logprob: -20.673587799072266

Token 460: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21223096549510956
    2. ':
' → logprob: -1.712230920791626
    3. ' or' → logprob: -4.587231159210205
    4. ':return' → logprob: -8.337230682373047
    5. '<|end|>' → logprob: -8.712230682373047
    6. '.startswith' → logprob: -9.962230682373047
    7. '   ' → logprob: -10.837230682373047
    8. '<|end|>' → logprob: -11.212230682373047
    9. ':

' → logprob: -11.337230682373047
    10. '.' → logprob: -11.587230682373047

Token 461: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007985493168234825
    2. ':' → logprob: -5.382985591888428
    3. '           ' → logprob: -5.882985591888428
    4. ':
' → logprob: -7.507985591888428
    5. '              ' → logprob: -11.88298511505127
    6. '	           ' → logprob: -12.63298511505127
    7. '                   ' → logprob: -12.75798511505127
    8. ' or' → logprob: -13.50798511505127
    9. 'break' → logprob: -13.50798511505127
    10. ',' → logprob: -13.63298511505127

Token 462: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.3172294497489929
    2. ' break' → logprob: -1.3172295093536377
    3. '               ' → logprob: -5.567229270935059
    4. '           ' → logprob: -9.567229270935059
    5. 'return' → logprob: -10.067229270935059
    6. 'continue' (adapté à ' continue') → logprob: -11.067229270935059
    7. '                   ' → logprob: -12.567229270935059
    8. '	break' → logprob: -12.567229270935059
    9. ' return' → logprob: -13.317229270935059
    10. ' continue' → logprob: -13.817229270935059

Token 463: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004733294772449881
    2. '            
' → logprob: -8.000473022460938
    3. '
' → logprob: -9.000473022460938
    4. '    
' → logprob: -11.750473022460938
    5. '               ' → logprob: -12.875473022460938
    6. '  
' → logprob: -14.125473022460938
    7. '		' → logprob: -14.375473022460938
    8. '          ' → logprob: -14.625473022460938
    9. '<|end|>' → logprob: -15.000473022460938
    10. '                
' → logprob: -15.250473022460938

Token 464: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002715873415581882
    2. ' try' → logprob: -8.750271797180176
    3. 'try' → logprob: -9.250271797180176
    4. '               ' → logprob: -12.000271797180176
    5. '            
' → logprob: -12.625271797180176
    6. '          ' → logprob: -13.125271797180176
    7. '       ' → logprob: -13.375271797180176
    8. 'print' → logprob: -13.375271797180176
    9. ',' → logprob: -14.500271797180176
    10. '		' → logprob: -15.125271797180176

Token 465: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' (adapté à ' try') → logprob: -0.014086281880736351
    2. 'print' → logprob: -4.7640862464904785
    3. 'output' → logprob: -5.7640862464904785
    4. ' try' → logprob: -6.7640862464904785
    5. 'result' → logprob: -6.7640862464904785
    6. ' output' → logprob: -12.389086723327637
    7. ' print' → logprob: -13.014086723327637
    8. '           ' → logprob: -13.014086723327637
    9. ' result' → logprob: -14.639086723327637
    10. '               ' → logprob: -14.889086723327637

Token 466: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004638741724193096
    2. ':
' → logprob: -5.379638671875
    3. '               ' → logprob: -11.629638671875
    4. ' :' → logprob: -12.504638671875
    5. '           ' → logprob: -13.754638671875
    6. ':
' → logprob: -13.754638671875
    7. '<|end|>' → logprob: -13.754638671875
    8. ':

' → logprob: -13.879638671875
    9. '<|end|>' → logprob: -15.129638671875
    10. '):' → logprob: -15.379638671875

Token 467: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0027758704964071512
    2. '<|end|>' → logprob: -6.3777756690979
    3. 'output' → logprob: -8.377776145935059
    4. '<|end|>' → logprob: -8.752776145935059
    5. 'result' → logprob: -8.877776145935059
    6. '	           ' → logprob: -9.127776145935059
    7. ' output' → logprob: -10.252776145935059
    8. 'tokens' → logprob: -10.252776145935059
    9. '              ' → logprob: -10.377776145935059
    10. 'token' → logprob: -10.377776145935059

Token 468: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.5214713215827942
    2. 'result' → logprob: -1.5214712619781494
    3. ' output' → logprob: -2.1464712619781494
    4. ' result' → logprob: -3.2714712619781494
    5. 'print' → logprob: -3.6464712619781494
    6. ' print' → logprob: -5.2714715003967285
    7. '                   ' → logprob: -7.0214715003967285
    8. '               ' → logprob: -7.1464715003967285
    9. '	output' → logprob: -9.27147102355957
    10. 'answer' → logprob: -11.02147102355957

Token 469: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002476604888215661
    2. '=' → logprob: -6.002476692199707
    3. '_output' → logprob: -15.002476692199707
    4. '_line' → logprob: -15.252476692199707
    5. '_' → logprob: -16.25247573852539
    6. ' ' → logprob: -16.62747573852539
    7. '=line' → logprob: -16.62747573852539
    8. ':' → logprob: -17.62747573852539
    9. ')' → logprob: -17.62747573852539
    10. '	' → logprob: -18.00247573852539

Token 470: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.47407910227775574
    2. 'self' → logprob: -0.9740791320800781
    3. '                   ' → logprob: -14.099079132080078
    4. '               ' → logprob: -14.349079132080078
    5. '	self' → logprob: -14.724079132080078
    6. '(self' → logprob: -15.349079132080078
    7. '_self' → logprob: -17.599079132080078
    8. 'Self' → logprob: -17.849079132080078
    9. '                ' → logprob: -17.974079132080078
    10. '           ' → logprob: -18.099079132080078

Token 471: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -5.200166469876422e-06
    2. 'process' → logprob: -12.750004768371582
    3. '.' → logprob: -13.125004768371582
    4. ' process' → logprob: -15.750004768371582
    5. ' .' → logprob: -17.2500057220459
    6. '	process' → logprob: -19.2500057220459
    7. '.run' → logprob: -19.3750057220459
    8. '.Process' → logprob: -19.5000057220459
    9. '.processor' → logprob: -20.5000057220459
    10. '.print' → logprob: -20.6250057220459

Token 472: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -7.226628895296017e-06
    2. '_' → logprob: -12.125007629394531
    3. '_output' → logprob: -13.375007629394531
    4. '_line' → logprob: -15.250007629394531
    5. 'input' → logprob: -18.25000762939453
    6. '_Input' → logprob: -19.12500762939453
    7. '_in' → logprob: -19.50000762939453
    8. '_INPUT' → logprob: -20.62500762939453
    9. '_
' → logprob: -20.62500762939453
    10. 'Input' → logprob: -20.87500762939453

Token 473: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -14.500000953674316
    3. '_l' → logprob: -17.375
    4. '_LINE' → logprob: -17.875
    5. 'line' → logprob: -18.0
    6. '_lin' → logprob: -18.5
    7. ' line' → logprob: -19.625
    8. ' _' → logprob: -19.625
    9. '[line' → logprob: -19.875
    10. '_lines' → logprob: -19.875

Token 474: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -1.0206720617134124e-05
    2. '(' → logprob: -11.50001049041748
    3. ' (' → logprob: -17.750009536743164
    4. '(lines' → logprob: -17.875009536743164
    5. '(Line' → logprob: -18.125009536743164
    6. '=line' → logprob: -19.250009536743164
    7. '[line' → logprob: -19.375009536743164
    8. '(
' → logprob: -19.750009536743164
    9. '(input' → logprob: -20.250009536743164
    10. ',line' → logprob: -20.250009536743164

Token 475: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000599976978264749
    2. ')
' → logprob: -7.6255998611450195
    3. '               ' → logprob: -9.12559986114502
    4. '           ' → logprob: -12.87559986114502
    5. ')
' → logprob: -14.75059986114502
    6. '                   ' → logprob: -16.375600814819336
    7. ')

' → logprob: -16.875600814819336
    8. ')`' → logprob: -17.625600814819336
    9. ' )' → logprob: -17.750600814819336
    10. '),' → logprob: -17.750600814819336

Token 476: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.976922744186595e-05
    2. 'print' → logprob: -10.750040054321289
    3. '<|end|>' → logprob: -11.500040054321289
    4. ' print' → logprob: -13.250040054321289
    5. '	           ' → logprob: -13.625040054321289
    6. '           ' → logprob: -13.875040054321289
    7. '			' → logprob: -14.125040054321289
    8. '		       ' → logprob: -14.125040054321289
    9. '                   ' → logprob: -14.375040054321289
    10. '              ' → logprob: -14.625040054321289

Token 477: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.06429562717676163
    2. ' print' → logprob: -2.814295530319214
    3. '               ' → logprob: -6.064295768737793
    4. '           ' → logprob: -14.564295768737793
    5. '
' → logprob: -16.064294815063477
    6. '                   ' → logprob: -16.314294815063477
    7. '	print' → logprob: -16.564294815063477
    8. '```' → logprob: -17.314294815063477
    9. '.print' → logprob: -18.314294815063477
    10. '              ' → logprob: -18.314294815063477

Token 478: '(output' (ID: 22485)
  Prédit: '(output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(output' → logprob: -0.0007104054093360901
    2. '(' → logprob: -7.250710487365723
    3. ' (' → logprob: -15.125710487365723
    4. '()' → logprob: -16.125709533691406
    5. '(
' → logprob: -16.250709533691406
    6. '(input' → logprob: -17.750709533691406
    7. '(outputs' → logprob: -18.000709533691406
    8. ')' → logprob: -18.500709533691406
    9. 'output' → logprob: -18.750709533691406
    10. '(

' → logprob: -19.000709533691406

Token 479: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')
' → logprob: -13.375001907348633
    3. ' )' → logprob: -16.625001907348633
    4. ')}' → logprob: -17.625001907348633
    5. ')`' → logprob: -18.000001907348633
    6. '())' → logprob: -18.375001907348633
    7. '))' → logprob: -18.375001907348633
    8. '()' → logprob: -19.000001907348633
    9. '),' → logprob: -19.125001907348633
    10. ')}}' → logprob: -20.375001907348633

Token 480: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0030112192034721375
    2. ' except' → logprob: -6.128011226654053
    3. 'except' → logprob: -7.128011226654053
    4. '
' → logprob: -11.628010749816895
    5. '            
' → logprob: -11.628010749816895
    6. '	except' → logprob: -13.378010749816895
    7. ',' → logprob: -14.378010749816895
    8. '		' → logprob: -14.628010749816895
    9. '          ' → logprob: -14.628010749816895
    10. '```' → logprob: -14.628010749816895

Token 481: ' except' (ID: 6384)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06820876896381378
    2. ' except' → logprob: -3.068208694458008
    3. 'except' (adapté à ' except') → logprob: -3.943208694458008
    4. '	except' → logprob: -10.693208694458008
    5. '
' → logprob: -12.318208694458008
    6. '       ' → logprob: -12.443208694458008
    7. ',' → logprob: -12.568208694458008
    8. '            
' → logprob: -12.568208694458008
    9. '          ' → logprob: -13.818208694458008
    10. '		' → logprob: -14.068208694458008

Token 482: ' Exception' (ID: 6851)
  Prédit: ' Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.09079287946224213
    2. ' Exception' → logprob: -2.5907928943634033
    3. 'Value' → logprob: -4.465792655944824
    4. 'Exception' → logprob: -8.215792655944824
    5. '(Value' → logprob: -9.840792655944824
    6. '(Exception' → logprob: -11.465792655944824
    7. ' (' → logprob: -14.590792655944824
    8. '	Value' → logprob: -14.715792655944824
    9. '<Value' → logprob: -14.840792655944824
    10. '(' → logprob: -14.840792655944824

Token 483: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.0013319060672074556
    2. 'as' → logprob: -6.751331806182861
    3. ':' → logprob: -8.75133228302002
    4. '	as' → logprob: -12.75133228302002
    5. '<|end|>' → logprob: -15.75133228302002
    6. ':
' → logprob: -15.75133228302002
    7. ',' → logprob: -16.501331329345703
    8. ' ' → logprob: -16.751331329345703
    9. '<|end|>' → logprob: -17.001331329345703
    10. ')' → logprob: -17.626331329345703

Token 484: ' e' (ID: 319)
  Prédit: ' Exception'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Exception' → logprob: -0.07189597189426422
    2. ' as' → logprob: -3.4468960762023926
    3. ':' → logprob: -3.9468960762023926
    4. ' e' → logprob: -4.696896076202393
    5. '(Exception' → logprob: -5.821896076202393
    6. ' ' → logprob: -6.571896076202393
    7. ' Value' → logprob: -6.571896076202393
    8. ' not' → logprob: -6.946896076202393
    9. 'Exception' → logprob: -7.821896076202393
    10. '<|end|>' → logprob: -8.571895599365234

Token 485: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016356664709746838
    2. ':
' → logprob: -7.001635551452637
    3. ' as' → logprob: -7.251635551452637
    4. '               ' → logprob: -11.751635551452637
    5. '           ' → logprob: -13.126635551452637
    6. ':
' → logprob: -13.626635551452637
    7. ':

' → logprob: -14.376635551452637
    8. ',' → logprob: -14.751635551452637
    9. 'as' → logprob: -14.751635551452637
    10. '<|end|>' → logprob: -14.751635551452637

Token 486: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002647927321959287
    2. '           ' → logprob: -9.000265121459961
    3. ' print' → logprob: -9.750265121459961
    4. '	           ' → logprob: -10.375265121459961
    5. '		       ' → logprob: -11.375265121459961
    6. 'print' → logprob: -11.875265121459961
    7. ':' → logprob: -12.000265121459961
    8. ',' → logprob: -12.250265121459961
    9. '<|end|>' → logprob: -12.375265121459961
    10. '	       ' → logprob: -13.125265121459961

Token 487: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6112947463989258
    2. ' print' → logprob: -0.8612947463989258
    3. '               ' → logprob: -3.361294746398926
    4. ' sys' → logprob: -10.611294746398926
    5. 'sys' → logprob: -10.861294746398926
    6. '           ' → logprob: -13.861294746398926
    7. '	print' → logprob: -14.111294746398926
    8. 'import' → logprob: -14.986294746398926
    9. '```' → logprob: -15.361294746398926
    10. '(print' → logprob: -15.486294746398926

Token 488: ' For' (ID: 2214)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0015046248445287347
    2. ' print' → logprob: -6.501504421234131
    3. '               ' → logprob: -13.376504898071289
    4. '           ' → logprob: -14.751504898071289
    5. 'continue' → logprob: -15.501504898071289
    6. 'sys' → logprob: -16.00150489807129
    7. 'import' → logprob: -18.12650489807129
    8. 'Print' → logprob: -18.75150489807129
    9. '#print' → logprob: -19.00150489807129
    10. ' continue' → logprob: -19.50150489807129

Token 489: ' this' (ID: 495)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.016667528077960014
    2. 'line' → logprob: -4.641667366027832
    3. ' sys' → logprob: -5.141667366027832
    4. ' err' → logprob: -7.766667366027832
    5. ' e' → logprob: -8.266667366027832
    6. ' token' → logprob: -10.016667366027832
    7. 'sys' → logprob: -10.016667366027832
    8. ' ' → logprob: -10.141667366027832
    9. ' _' → logprob: -10.141667366027832
    10. ' now' → logprob: -10.641667366027832

Token 490: ' problem' (ID: 4792)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3780610263347626
    2. ' code' → logprob: -1.753061056137085
    3. ' problem' → logprob: -3.503061056137085
    4. ' reason' → logprob: -3.753061056137085
    5. 'line' → logprob: -4.128060817718506
    6. ' program' → logprob: -4.253060817718506
    7. ' system' → logprob: -4.503060817718506
    8. ' in' → logprob: -4.753060817718506
    9. 'e' → logprob: -5.253060817718506
    10. ' exception' → logprob: -5.253060817718506

Token 491: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004832142032682896
    2. '               ' → logprob: -5.8798322677612305
    3. '                   ' → logprob: -6.6298322677612305
    4. 'continue' → logprob: -8.75483226776123
    5. '           ' → logprob: -9.00483226776123
    6. ' ,' → logprob: -9.25483226776123
    7. ' continue' → logprob: -9.37983226776123
    8. ':' → logprob: -9.62983226776123
    9. '<|end|>' → logprob: -9.62983226776123
    10. 'print' → logprob: -10.00483226776123

Token 492: ' we' (ID: 581)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.9580109119415283
    2. 'print' → logprob: -1.2080109119415283
    3. 'pass' → logprob: -1.9580109119415283
    4. ' continue' → logprob: -2.4580109119415283
    5. '               ' → logprob: -3.2080109119415283
    6. ' pass' → logprob: -3.4580109119415283
    7. 'break' → logprob: -4.708010673522949
    8. ' print' → logprob: -5.208010673522949
    9. '#' → logprob: -5.833010673522949
    10. ' break' → logprob: -6.958010673522949

Token 493: ' assume' (ID: 19429)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5637113451957703
    2. ' continue' → logprob: -1.188711404800415
    3. 'print' → logprob: -2.563711404800415
    4. ' print' → logprob: -3.813711404800415
    5. 'ignore' → logprob: -4.063711166381836
    6. '               ' → logprob: -5.313711166381836
    7. ' pass' → logprob: -6.438711166381836
    8. ' ignore' → logprob: -6.813711166381836
    9. 'pass' → logprob: -6.938711166381836
    10. 'break' → logprob: -7.688711166381836

Token 494: ' unique' (ID: 5746)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.32392334938049316
    2. 'continue' → logprob: -1.5739233493804932
    3. '               ' → logprob: -3.073923349380493
    4. ' pass' → logprob: -4.573923110961914
    5. ' continue' → logprob: -5.198923110961914
    6. 'print' → logprob: -5.323923110961914
    7. 'break' → logprob: -6.573923110961914
    8. '           ' → logprob: -8.323923110961914
    9. '#' → logprob: -8.323923110961914
    10. '                   ' → logprob: -8.948923110961914

Token 495: ' solutions' (ID: 9368)
  Prédit: ' solutions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solutions' → logprob: -0.2883013188838959
    2. ' solution' → logprob: -1.5383013486862183
    3. 'solutions' → logprob: -3.6633012294769287
    4. 'solution' → logprob: -4.663301467895508
    5. '_solution' → logprob: -7.913301467895508
    6. '<|end|>' → logprob: -9.788301467895508
    7. ' and' → logprob: -10.163301467895508
    8. ' ' → logprob: -11.038301467895508
    9. 'e' → logprob: -11.163301467895508
    10. 'Solution' → logprob: -11.413301467895508

Token 496: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009926761267706752
    2. ' and' → logprob: -7.625992774963379
    3. ' continue' → logprob: -8.125992774963379
    4. '<|end|>' → logprob: -9.625992774963379
    5. ',' → logprob: -9.750992774963379
    6. '           ' → logprob: -10.250992774963379
    7. 'continue' → logprob: -11.125992774963379
    8. ' is' → logprob: -12.375992774963379
    9. ' pass' → logprob: -12.500992774963379
    10. '.' → logprob: -12.875992774963379

Token 497: ' so' (ID: 813)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15400293469429016
    2. '#' → logprob: -2.7790029048919678
    3. ' continue' → logprob: -2.9040029048919678
    4. 'continue' → logprob: -3.7790029048919678
    5. 'pass' → logprob: -6.904003143310547
    6. ' #' → logprob: -7.279003143310547
    7. ' pass' → logprob: -7.529003143310547
    8. 'print' → logprob: -7.529003143310547
    9. '           ' → logprob: -9.904003143310547
    10. ' and' → logprob: -10.279003143310547

Token 498: ' no' (ID: 860)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.49606743454933167
    2. 'continue' → logprob: -1.4960674047470093
    3. 'print' → logprob: -2.371067523956299
    4. ' print' → logprob: -3.621067523956299
    5. ' pass' → logprob: -3.996067523956299
    6. '               ' → logprob: -3.996067523956299
    7. 'pass' → logprob: -4.746067523956299
    8. 'break' → logprob: -7.246067523956299
    9. ' break' → logprob: -7.621067523956299
    10. '           ' → logprob: -9.49606704711914

Token 499: ' error' (ID: 2915)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7752278447151184
    2. 'output' → logprob: -0.7752278447151184
    3. ' output' → logprob: -2.6502277851104736
    4. ' print' → logprob: -5.150228023529053
    5. ' need' → logprob: -7.025228023529053
    6. 'need' → logprob: -7.900228023529053
    7. 'continue' → logprob: -7.900228023529053
    8. 'break' → logprob: -8.275227546691895
    9. 'pass' → logprob: -9.400227546691895
    10. 'input' → logprob: -9.400227546691895

Token 500: ' handling' (ID: 17491)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9681934714317322
    2. 'pass' → logprob: -1.968193531036377
    3. ' handling' → logprob: -2.093193531036377
    4. '           ' → logprob: -2.093193531036377
    5. 'handling' → logprob: -2.218193531036377
    6. ' occurs' → logprob: -4.218193531036377
    7. ' pass' → logprob: -4.343193531036377
    8. 'print' → logprob: -4.468193531036377
    9. 'message' → logprob: -4.593193531036377
    10. ' message' → logprob: -4.593193531036377

Token 501: ' needed' (ID: 6118)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17921112477779388
    2. ' pass' → logprob: -1.929211139678955
    3. ' continue' → logprob: -4.304211139678955
    4. '           ' → logprob: -5.679211139678955
    5. 'pass' → logprob: -7.554211139678955
    6. ' raise' → logprob: -8.054210662841797
    7. ' ' → logprob: -8.179210662841797
    8. '                ' → logprob: -8.304210662841797
    9. '            ' → logprob: -9.179210662841797
    10. '<|end|>' → logprob: -9.304210662841797

Token 502: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.057353425770998
    2. '<|end|>' → logprob: -3.1823534965515137
    3. ' pass' → logprob: -4.307353496551514
    4. '           ' → logprob: -8.307353019714355
    5. '<|end|>' → logprob: -9.057353019714355
    6. ' continue' → logprob: -9.057353019714355
    7. 'pass' → logprob: -9.432353019714355
    8. '.' → logprob: -10.432353019714355
    9. '       ' → logprob: -10.557353019714355
    10. ' ' → logprob: -10.807353019714355

Token 503: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022770512849092484
    2. ' pass' → logprob: -4.022770404815674
    3. 'pass' → logprob: -6.022770404815674
    4. ' continue' → logprob: -6.397770404815674
    5. 'continue' → logprob: -8.397770881652832
    6. '<|end|>' → logprob: -9.147770881652832
    7. ' raise' → logprob: -9.272770881652832
    8. '           ' → logprob: -10.397770881652832
    9. 'raise' → logprob: -10.522770881652832
    10. '   ' → logprob: -11.897770881652832

Token 504: ' #' (ID: 1069)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.7188096046447754
    2. 'pass' → logprob: -0.7188096046447754
    3. 'continue' → logprob: -4.718809604644775
    4. 'raise' → logprob: -4.843809604644775
    5. ' continue' → logprob: -5.218809604644775
    6. '               ' → logprob: -6.218809604644775
    7. ' raise' → logprob: -7.218809604644775
    8. '           ' → logprob: -9.093809127807617
    9. 'break' → logprob: -9.093809127807617
    10. '                   ' → logprob: -9.593809127807617

Token 505: ' But' (ID: 3072)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.15814509987831116
    2. 'continue' → logprob: -2.1581451892852783
    3. 'raise' → logprob: -3.6581451892852783
    4. ' pass' → logprob: -5.658144950866699
    5. 'break' → logprob: -7.283144950866699
    6. ' continue' → logprob: -7.408144950866699
    7. '               ' → logprob: -9.9081449508667
    8. '           ' → logprob: -10.2831449508667
    9. 'return' → logprob: -10.2831449508667
    10. ' raise' → logprob: -10.7831449508667

Token 506: ' in' (ID: 306)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.6906577348709106
    2. ' continue' → logprob: -1.1906577348709106
    3. 'pass' → logprob: -2.690657615661621
    4. ' break' → logprob: -2.815657615661621
    5. ' raise' → logprob: -3.190657615661621
    6. 'continue' → logprob: -4.565657615661621
    7. 'break' → logprob: -4.815657615661621
    8. 'raise' → logprob: -5.065657615661621
    9. '               ' → logprob: -7.315657615661621
    10. '   ' → logprob: -8.440657615661621

Token 507: ' real' (ID: 1374)
  Prédit: 'real'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'real' → logprob: -0.30833810567855835
    2. 'case' → logprob: -2.308338165283203
    3. 'a' → logprob: -2.433338165283203
    4. ' real' → logprob: -3.683338165283203
    5. ' a' → logprob: -4.058338165283203
    6. 'production' → logprob: -4.308338165283203
    7. 'practice' → logprob: -4.558338165283203
    8. ' case' → logprob: -5.308338165283203
    9. ' practice' → logprob: -5.808338165283203
    10. ' production' → logprob: -6.683338165283203

Token 508: ' case' (ID: 1890)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.756630003452301
    2. ' scenarios' → logprob: -1.6316299438476562
    3. ' applications' → logprob: -2.2566299438476562
    4. '-world' → logprob: -2.7566299438476562
    5. ' life' → logprob: -3.2566299438476562
    6. ' situations' → logprob: -3.6316299438476562
    7. ' use' → logprob: -4.006629943847656
    8. ' implementations' → logprob: -4.381629943847656
    9. 'code' → logprob: -4.506629943847656
    10. '   ' → logprob: -4.631629943847656

Token 509: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.46605804562568665
    2. ' pass' → logprob: -1.4660580158233643
    3. '                   ' → logprob: -3.0910580158233643
    4. 'pass' → logprob: -3.0910580158233643
    5. '           ' → logprob: -3.7160580158233643
    6. ' continue' → logprob: -4.591058254241943
    7. '                ' → logprob: -4.966058254241943
    8. ' raise' → logprob: -6.341058254241943
    9. '            ' → logprob: -6.466058254241943
    10. ',' → logprob: -6.716058254241943

Token 510: ' we' (ID: 581)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.4203627109527588
    2. 'pass' → logprob: -1.4203627109527588
    3. 'break' → logprob: -3.170362710952759
    4. ' break' → logprob: -3.670362710952759
    5. 'print' → logprob: -4.67036247253418
    6. 'raise' → logprob: -5.17036247253418
    7. ' continue' → logprob: -5.29536247253418
    8. 'continue' → logprob: -5.29536247253418
    9. '               ' → logprob: -5.42036247253418
    10. ' raise' → logprob: -6.04536247253418

Token 511: ' might' (ID: 3572)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.7951006889343262
    2. ' continue' → logprob: -1.2951006889343262
    3. 'pass' → logprob: -2.045100688934326
    4. '               ' → logprob: -2.670100688934326
    5. 'continue' → logprob: -3.420100688934326
    6. ' could' → logprob: -4.545100688934326
    7. ' should' → logprob: -4.670100688934326
    8. ' would' → logprob: -4.795100688934326
    9. ' might' → logprob: -5.420100688934326
    10. ' break' → logprob: -6.045100688934326

Token 512: ' want' (ID: 1682)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1324474811553955
    2. 'pass' → logprob: -1.8824474811553955
    3. 'continue' → logprob: -2.0074474811553955
    4. ' print' → logprob: -2.1324474811553955
    5. ' continue' → logprob: -2.3824474811553955
    6. ' pass' → logprob: -2.3824474811553955
    7. '               ' → logprob: -2.5074474811553955
    8. '           ' → logprob: -5.882447242736816
    9. 'break' → logprob: -6.757447242736816
    10. '   ' → logprob: -6.757447242736816

Token 513: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6710641980171204
    2. '               ' → logprob: -1.0460641384124756
    3. 'to' → logprob: -2.2960641384124756
    4. ' continue' → logprob: -4.171064376831055
    5. '   ' → logprob: -4.796064376831055
    6. '                   ' → logprob: -5.046064376831055
    7. 'continue' → logprob: -5.546064376831055
    8. '           ' → logprob: -6.421064376831055
    9. '                ' → logprob: -7.921064376831055
    10. 'pass' → logprob: -8.421064376831055

Token 514: ' log' (ID: 2142)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03100164793431759
    2. 'pass' → logprob: -4.531001567840576
    3. 'continue' → logprob: -5.031001567840576
    4. 'break' → logprob: -5.031001567840576
    5. 'log' → logprob: -5.781001567840576
    6. ' print' → logprob: -5.781001567840576
    7. 'handle' → logprob: -8.406002044677734
    8. ' pass' → logprob: -8.906002044677734
    9. 'raise' → logprob: -9.656002044677734
    10. ' continue' → logprob: -10.281002044677734

Token 515: ' or' (ID: 503)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.6001231670379639
    2. 'pass' → logprob: -1.4751231670379639
    3. ' or' → logprob: -1.8501231670379639
    4. ' pass' → logprob: -2.850123167037964
    5. 'e' → logprob: -5.475123405456543
    6. 'continue' → logprob: -7.100123405456543
    7. 'or' → logprob: -7.475123405456543
    8. '(' → logprob: -7.850123405456543
    9. '#' → logprob: -8.225123405456543
    10. ' continue' → logprob: -8.225123405456543

Token 516: ' handle' (ID: 5318)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.15637362003326416
    2. 'pass' → logprob: -2.4063735008239746
    3. 'raise' → logprob: -3.9063735008239746
    4. 'print' → logprob: -4.031373500823975
    5. ' continue' → logprob: -4.906373500823975
    6. 'break' → logprob: -5.406373500823975
    7. ' pass' → logprob: -5.531373500823975
    8. 'handle' → logprob: -8.031373977661133
    9. ' print' → logprob: -8.156373977661133
    10. ' raise' → logprob: -9.031373977661133

Token 517: ' error' (ID: 2915)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.16562169790267944
    2. 'e' → logprob: -2.915621757507324
    3. ' pass' → logprob: -2.915621757507324
    4. ' the' → logprob: -4.165621757507324
    5. 'the' → logprob: -4.790621757507324
    6. 'errors' → logprob: -5.165621757507324
    7. ' exceptions' → logprob: -5.165621757507324
    8. ' errors' → logprob: -5.790621757507324
    9. 'exceptions' → logprob: -5.790621757507324
    10. '(e' → logprob: -6.665621757507324

Token 518: ' differently' (ID: 36490)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.3931259512901306
    2. '               ' → logprob: -1.8931260108947754
    3. 'pass' → logprob: -1.8931260108947754
    4. ' continue' → logprob: -4.393126010894775
    5. '           ' → logprob: -4.643126010894775
    6. 'continue' → logprob: -7.143126010894775
    7. '   ' → logprob: -8.268125534057617
    8. '       ' → logprob: -8.393125534057617
    9. '                   ' → logprob: -8.393125534057617
    10. '	pass' → logprob: -9.643125534057617

Token 519: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.029790647327899933
    2. ' pass' → logprob: -4.029790878295898
    3. ' continue' → logprob: -4.779790878295898
    4. 'pass' → logprob: -6.154790878295898
    5. 'continue' → logprob: -7.279790878295898
    6. '           ' → logprob: -9.154790878295898
    7. ' raise' → logprob: -9.279790878295898
    8. '<|end|>' → logprob: -9.279790878295898
    9. 'raise' → logprob: -10.529790878295898
    10. '   ' → logprob: -11.779790878295898

Token 520: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18165208399295807
    2. ' pass' → logprob: -2.181652069091797
    3. ' continue' → logprob: -3.556652069091797
    4. 'pass' → logprob: -3.931652069091797
    5. 'continue' → logprob: -5.431652069091797
    6. '           ' → logprob: -8.306652069091797
    7. '<|end|>' → logprob: -8.306652069091797
    8. ' raise' → logprob: -9.181652069091797
    9. 'raise' → logprob: -9.806652069091797
    10. '       ' → logprob: -10.556652069091797

Token 521: ' print' (ID: 2123)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.16125421226024628
    2. 'continue' → logprob: -2.4112541675567627
    3. ' pass' → logprob: -2.9112541675567627
    4. ' continue' → logprob: -5.661254405975342
    5. '               ' → logprob: -6.786254405975342
    6. '           ' → logprob: -9.411253929138184
    7. 'raise' → logprob: -9.911253929138184
    8. '                   ' → logprob: -10.536253929138184
    9. 'break' → logprob: -10.661253929138184
    10. 'print' (adapté à ' print') → logprob: -11.286253929138184

Token 522: '(f' (ID: 1526)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.9557087421417236
    2. '(e' → logprob: -1.4557087421417236
    3. '()' → logprob: -1.8307087421417236
    4. '("")' → logprob: -1.8307087421417236
    5. '(f' → logprob: -3.0807087421417236
    6. '(str' → logprob: -4.2057085037231445
    7. '(' → logprob: -7.8307085037231445
    8. '(""' → logprob: -8.705708503723145
    9. '('' → logprob: -9.330708503723145
    10. '("");' → logprob: -10.455708503723145

Token 523: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03845086693763733
    2. 'Error' → logprob: -3.2884509563446045
    3. 'ERROR' → logprob: -9.413451194763184
    4. 'error' → logprob: -9.413451194763184
    5. 'e' → logprob: -9.663451194763184
    6. '"{' → logprob: -10.038451194763184
    7. 'Invalid' → logprob: -10.663451194763184
    8. ')' → logprob: -11.038451194763184
    9. ''' → logprob: -11.288451194763184
    10. ' Error' → logprob: -11.288451194763184

Token 524: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0014920076355338097
    2. 'Invalid' → logprob: -7.126492023468018
    3. 'error' → logprob: -8.12649154663086
    4. ' Error' → logprob: -9.25149154663086
    5. 'ERROR' → logprob: -9.37649154663086
    6. '"' → logprob: -9.62649154663086
    7. '{' → logprob: -9.75149154663086
    8. ' error' → logprob: -10.37649154663086
    9. 'An' → logprob: -11.25149154663086
    10. 'e' → logprob: -12.50149154663086

Token 525: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.6047699318733066e-05
    2. ' processing' → logprob: -11.625016212463379
    3. ' solving' → logprob: -12.750016212463379
    4. '{' → logprob: -13.250016212463379
    5. ' parsing' → logprob: -14.000016212463379
    6. 'processing' → logprob: -15.125016212463379
    7. ' calculating' → logprob: -15.375016212463379
    8. ' :' → logprob: -15.625016212463379
    9. ':",' → logprob: -15.750016212463379
    10. '<|end|>' → logprob: -15.875016212463379

Token 526: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.3869370222091675
    2. ' {' → logprob: -1.1369370222091675
    3. ' e' → logprob: -10.136937141418457
    4. 'e' → logprob: -10.886937141418457
    5. ' str' → logprob: -12.886937141418457
    6. ' line' → logprob: -13.511937141418457
    7. '{i' → logprob: -13.886937141418457
    8. ' Invalid' → logprob: -14.511937141418457
    9. '{s' → logprob: -14.511937141418457
    10. 'Invalid' → logprob: -14.886937141418457

Token 527: 'e' (ID: 68)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.577186644077301
    2. 'e' → logprob: -0.827186644077301
    3. 'str' → logprob: -6.702186584472656
    4. 'line' → logprob: -11.452186584472656
    5. ')e' → logprob: -12.452186584472656
    6. '}' → logprob: -14.202186584472656
    7. '(e' → logprob: -14.327186584472656
    8. ' e' → logprob: -14.327186584472656
    9. ' str' → logprob: -14.827186584472656
    10. ' {' → logprob: -14.827186584472656

Token 528: '}",' (ID: 20115)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.0005236041033640504
    2. '")' → logprob: -8.250523567199707
    3. ')")' → logprob: -8.250523567199707
    4. '}")
' → logprob: -14.625523567199707
    5. '}",' → logprob: -15.000523567199707
    6. ')' → logprob: -15.750523567199707
    7. '}' → logprob: -16.500524520874023
    8. '})' → logprob: -16.750524520874023
    9. ')}' → logprob: -16.750524520874023
    10. '")}' → logprob: -17.250524520874023

Token 529: ' file' (ID: 1974)
  Prédit: ' file'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' file' → logprob: -0.47450101375579834
    2. 'file' → logprob: -0.9745010137557983
    3. ')' → logprob: -7.849501132965088
    4. ' )' → logprob: -11.34950065612793
    5. 'flush' → logprob: -12.47450065612793
    6. ' ' → logprob: -12.47450065612793
    7. ' ' → logprob: -12.59950065612793
    8. ' flush' → logprob: -12.72450065612793
    9. ',file' → logprob: -12.72450065612793
    10. '	file' → logprob: -13.47450065612793

Token 530: '=sys' (ID: 149200)
  Prédit: '=sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=sys' → logprob: -6.599403423024341e-05
    2. ' sys' → logprob: -10.000065803527832
    3. '=' → logprob: -11.250065803527832
    4. 'sys' → logprob: -11.875065803527832
    5. '	sys' → logprob: -14.500065803527832
    6. '=subprocess' → logprob: -17.62506675720215
    7. '(sys' → logprob: -17.75006675720215
    8. '=file' → logprob: -18.00006675720215
    9. ' =' → logprob: -19.00006675720215
    10. '_sys' → logprob: -20.00006675720215

Token 531: '.stderr' (ID: 87058)
  Prédit: '.stderr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stderr' → logprob: -8.137130498653278e-05
    2. '.stdout' → logprob: -9.750081062316895
    3. '.' → logprob: -11.000081062316895
    4. 'stderr' → logprob: -12.500081062316895
    5. '.stdin' → logprob: -13.875081062316895
    6. '(stderr' → logprob: -14.250081062316895
    7. '=sys' → logprob: -15.125081062316895
    8. ' stderr' → logprob: -15.500081062316895
    9. '.std' → logprob: -16.00008201599121
    10. '.st' → logprob: -16.50008201599121

Token 532: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2233183042553719e-05
    2. ')
' → logprob: -11.500012397766113
    3. ' )' → logprob: -14.000012397766113
    4. ')}' → logprob: -14.500012397766113
    5. '<|end|>' → logprob: -15.500012397766113
    6. '")' → logprob: -15.750012397766113
    7. '       ' → logprob: -16.125011444091797
    8. '))' → logprob: -16.750011444091797
    9. '           ' → logprob: -16.750011444091797
    10. '}' → logprob: -17.000011444091797

Token 533: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08528059720993042
    2. 'def' → logprob: -3.335280656814575
    3. '<|end|>' → logprob: -3.335280656814575
    4. '#' → logprob: -4.710280418395996
    5. '```' → logprob: -7.585280418395996
    6. ' if' → logprob: -8.335280418395996
    7. 'import' → logprob: -8.710280418395996
    8. '
' → logprob: -8.835280418395996
    9. '<|end|>' → logprob: -8.835280418395996
    10. 'Two' → logprob: -9.085280418395996

Token 534: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0031781906727701426
    2. '__' → logprob: -5.753178119659424
    3. '_' → logprob: -15.503178596496582
    4. ' ' → logprob: -15.878178596496582
    5. '_name' → logprob: -16.253177642822266
    6. ' ' → logprob: -17.128177642822266
    7. 'name' → logprob: -17.628177642822266
    8. ' _' → logprob: -18.128177642822266
    9. '/__' → logprob: -18.378177642822266
    10. ' name' → logprob: -19.003177642822266

Token 535: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.010172142647206783
    2. ' __' → logprob: -4.635172367095947
    3. ' ==' → logprob: -8.760171890258789
    4. '.__' → logprob: -9.510171890258789
    5. '__.' → logprob: -9.885171890258789
    6. '__.__' → logprob: -9.885171890258789
    7. 'if' → logprob: -10.885171890258789
    8. '==' → logprob: -11.010171890258789
    9. '_' → logprob: -11.760171890258789
    10. '.py' → logprob: -11.885171890258789

Token 536: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.704273118884885e-07
    2. 'name' → logprob: -14.750000953674316
    3. '==' → logprob: -15.625000953674316
    4. '__.' → logprob: -16.5
    5. '__.__' → logprob: -17.125
    6. '___' → logprob: -17.75
    7. 'main' → logprob: -18.0
    8. '__
' → logprob: -18.375
    9. ' ==' → logprob: -19.5
    10. '____' → logprob: -19.625

Token 537: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.007104871328920126
    2. ' ==' → logprob: -5.382104873657227
    3. '==' → logprob: -6.257104873657227
    4. '=="' → logprob: -7.757104873657227
    5. '_' → logprob: -9.507104873657227
    6. '__.__' → logprob: -10.632104873657227
    7. '___' → logprob: -11.632104873657227
    8. '"' → logprob: -11.757104873657227
    9. '.__' → logprob: -12.132104873657227
    10. '__.' → logprob: -12.632104873657227

Token 538: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00035214703530073166
    2. ''' → logprob: -8.000351905822754
    3. ' "__' → logprob: -11.125351905822754
    4. '__' → logprob: -13.250351905822754
    5. '"name' → logprob: -16.50035285949707
    6. '"user' → logprob: -17.25035285949707
    7. '("__' → logprob: -17.75035285949707
    8. '"class' → logprob: -18.25035285949707
    9. ' '__' → logprob: -18.37535285949707
    10. '"log' → logprob: -18.87535285949707

Token 539: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00026205103495158255
    2. '__' → logprob: -8.375262260437012
    3. 'name' → logprob: -10.500262260437012
    4. '"' → logprob: -13.125262260437012
    5. ' main' → logprob: -13.750262260437012
    6. '_main' → logprob: -14.625262260437012
    7. 'python' → logprob: -16.750261306762695
    8. '-main' → logprob: -16.875261306762695
    9. 'built' → logprob: -17.000261306762695
    10. 'py' → logprob: -17.500261306762695

Token 540: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3883771300315857
    2. '__":
' → logprob: -1.3883771896362305
    3. '__:' → logprob: -2.6383771896362305
    4. '__':
' → logprob: -7.2633771896362305
    5. '_' → logprob: -9.38837718963623
    6. ':' → logprob: -9.51337718963623
    7. '__.' → logprob: -11.51337718963623
    8. '__
' → logprob: -12.13837718963623
    9. '__["' → logprob: -12.88837718963623
    10. '":' → logprob: -13.13837718963623

Token 541: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014777070842683315
    2. ' import' → logprob: -5.014777183532715
    3. 'import' → logprob: -5.139777183532715
    4. 'engine' → logprob: -7.014777183532715
    5. ' solver' → logprob: -8.139777183532715
    6. ' precision' → logprob: -8.514777183532715
    7. '```' → logprob: -8.639777183532715
    8. 'solver' → logprob: -8.889777183532715
    9. '	engine' → logprob: -9.514777183532715
    10. 'precision' → logprob: -9.514777183532715

Token 542: ' solver' (ID: 63271)
  Prédit: 'formatter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formatter' → logprob: -0.24566976726055145
    2. 'import' → logprob: -2.6206698417663574
    3. 'engine' → logprob: -2.7456698417663574
    4. '   ' → logprob: -3.1206698417663574
    5. ' formatter' → logprob: -3.9956698417663574
    6. 'solver' (adapté à ' solver') → logprob: -4.370669841766357
    7. ' import' → logprob: -5.870669841766357
    8. 'precision' → logprob: -6.495669841766357
    9. 'factory' → logprob: -7.745669841766357
    10. 'format' → logprob: -8.6206693649292

Token 543: '_engine' (ID: 57393)
  Prédit: '_engine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_engine' → logprob: -0.062459785491228104
    2. ' =' → logprob: -2.812459707260132
    3. '=' → logprob: -8.062459945678711
    4. 'Engine' → logprob: -9.812459945678711
    5. '_eng' → logprob: -10.187459945678711
    6. '_' → logprob: -10.437459945678711
    7. '	engine' → logprob: -11.437459945678711
    8. '   ' → logprob: -11.687459945678711
    9. '_ENGINE' → logprob: -11.687459945678711
    10. 'engine' → logprob: -11.687459945678711

Token 544: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00462403753772378
    2. '=' → logprob: -5.379623889923096
    3. '   ' → logprob: -12.754624366760254
    4. ' =
' → logprob: -14.004624366760254
    5. ' =
' → logprob: -17.004623413085938
    6. ' ' → logprob: -17.004623413085938
    7. ' =)' → logprob: -17.254623413085938
    8. '(' → logprob: -17.379623413085938
    9. '    ' → logprob: -17.629623413085938
    10. ')' → logprob: -17.629623413085938

Token 545: ' Equation' (ID: 180687)
  Prédit: ' Equation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Equation' → logprob: -0.20141421258449554
    2. 'Equation' → logprob: -1.7014142274856567
    3. ' equation' → logprob: -14.951414108276367
    4. '   ' → logprob: -15.576414108276367
    5. ' Eq' → logprob: -16.451414108276367
    6. 'Equ' → logprob: -16.826414108276367
    7. 'Eq' → logprob: -16.951414108276367
    8. ' Equ' → logprob: -17.076414108276367
    9. 'Engine' → logprob: -17.201414108276367
    10. ' Engine' → logprob: -17.576414108276367

Token 546: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -7.107425062713446e-06
    2. 'solver' → logprob: -12.375006675720215
    3. 'Engine' → logprob: -13.375006675720215
    4. '_solver' → logprob: -14.500006675720215
    5. 'System' → logprob: -14.500006675720215
    6. 'Solve' → logprob: -16.00000762939453
    7. ' Solver' → logprob: -16.75000762939453
    8. 'Sol' → logprob: -17.00000762939453
    9. ' solver' → logprob: -17.62500762939453
    10. 'Solution' → logprob: -17.87500762939453

Token 547: 'Engine' (ID: 7286)
  Prédit: 'Engine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Engine' → logprob: -1.9361264946837764e-07
    2. 'Eng' → logprob: -16.25
    3. ' Engine' → logprob: -17.5
    4. 'Engineer' → logprob: -18.0
    5. 'ngine' → logprob: -18.125
    6. 'Engineering' → logprob: -19.75
    7. 'engine' → logprob: -19.875
    8. '_engine' → logprob: -20.375
    9. 'System' → logprob: -21.125
    10. ' engine' → logprob: -21.375

Token 548: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.03845338895916939
    2. '(' → logprob: -3.2884533405303955
    3. '(
' → logprob: -7.913453578948975
    4. 'Two' → logprob: -10.163453102111816
    5. '(lambda' → logprob: -12.788453102111816
    6. '((' → logprob: -13.663453102111816
    7. '(

' → logprob: -14.538453102111816
    8. ' Two' → logprob: -14.538453102111816
    9. '(two' → logprob: -14.788453102111816
    10. ' (' → logprob: -14.913453102111816

Token 549: 'wo' (ID: 1338)
  Prédit: 'wo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wo' → logprob: -3.128163257315464e-07
    2. 'Two' → logprob: -15.875
    3. 'w' → logprob: -16.0
    4. 'two' → logprob: -17.25
    5. 'h' → logprob: -18.625
    6. ' wo' → logprob: -19.625
    7. 'ype' → logprob: -20.625
    8. '```' → logprob: -20.75
    9. 'wow' → logprob: -20.75
    10. 'wor' → logprob: -21.0

Token 550: 'Variable' (ID: 12695)
  Prédit: 'Variable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Variable' → logprob: 0.0
    2. ' Variable' → logprob: -17.375
    3. '_variable' → logprob: -18.875
    4. 'variable' → logprob: -19.0
    5. '-variable' → logprob: -19.0
    6. '.Variable' → logprob: -19.125
    7. 'ariable' → logprob: -20.75
    8. '-' → logprob: -21.0
    9. 'Vari' → logprob: -21.875
    10. 'Variables' → logprob: -21.875

Token 551: 'Linear' (ID: 32491)
  Prédit: 'Linear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Linear' → logprob: -1.9361264946837764e-07
    2. ' Linear' → logprob: -16.25
    3. 'linear' → logprob: -17.125
    4. '_linear' → logprob: -17.125
    5. 'Line' → logprob: -18.0
    6. '.Linear' → logprob: -18.0
    7. ' linear' → logprob: -18.5
    8. 'Lin' → logprob: -19.25
    9. '-linear' → logprob: -21.875
    10. '_LINEAR' → logprob: -21.875

Token 552: 'System' (ID: 3320)
  Prédit: 'System'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: -3.292907877039397e-06
    2. 'Systems' → logprob: -13.37500286102295
    3. 'system' → logprob: -14.50000286102295
    4. 'S' → logprob: -14.62500286102295
    5. 'ystem' → logprob: -15.50000286102295
    6. ' System' → logprob: -15.62500286102295
    7. 'Sys' → logprob: -16.375003814697266
    8. '
' → logprob: -16.375003814697266
    9. '   ' → logprob: -17.000003814697266
    10. '```' → logprob: -17.500003814697266

Token 553: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5776860184123507e-06
    2. ' ,' → logprob: -13.00000286102295
    3. ',F' → logprob: -16.125001907348633
    4. ',
' → logprob: -17.125001907348633
    5. '   ' → logprob: -17.375001907348633
    6. 'Fixed' → logprob: -18.375001907348633
    7. '(),' → logprob: -19.375001907348633
    8. ',

' → logprob: -20.250001907348633
    9. ')' → logprob: -20.500001907348633
    10. '),' → logprob: -20.875001907348633

Token 554: ' Fixed' (ID: 42962)
  Prédit: ' Fixed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Fixed' → logprob: -0.25192928314208984
    2. 'Fixed' → logprob: -1.5019292831420898
    3. ' fixed' → logprob: -15.87692928314209
    4. '   ' → logprob: -17.001930236816406
    5. ' ' → logprob: -17.751930236816406
    6. '_fixed' → logprob: -18.001930236816406
    7. '.Fixed' → logprob: -18.751930236816406
    8. ' ' → logprob: -19.751930236816406
    9. 'Fix' → logprob: -19.876930236816406
    10. '  ' → logprob: -19.876930236816406

Token 555: 'Decimal' (ID: 16147)
  Prédit: 'Decimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Decimal' → logprob: -1.1472419600977446e-06
    2. ' Decimal' → logprob: -13.875000953674316
    3. '_decimal' → logprob: -16.625001907348633
    4. 'decimal' → logprob: -16.875001907348633
    5. '.Decimal' → logprob: -16.875001907348633
    6. 'Decimals' → logprob: -18.125001907348633
    7. ' decimal' → logprob: -21.000001907348633
    8. 'Dec' → logprob: -22.500001907348633
    9. ' ' → logprob: -22.625001907348633
    10. '```' → logprob: -23.250001907348633

Token 556: 'Formatter' (ID: 22956)
  Prédit: 'Formatter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Formatter' → logprob: -1.9361264946837764e-07
    2. 'Format' → logprob: -15.75
    3. 'formatter' → logprob: -17.25
    4. '_formatter' → logprob: -18.0
    5. ' Formatter' → logprob: -18.75
    6. 'Form' → logprob: -19.875
    7. 'Forma' → logprob: -20.875
    8. ' formatter' → logprob: -21.625
    9. 'Formatted' → logprob: -22.5
    10. '   ' → logprob: -22.75

Token 557: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2664456789934775e-06
    2. ')' → logprob: -13.625000953674316
    3. ')(' → logprob: -17.625001907348633
    4. '2' → logprob: -18.750001907348633
    5. '4' → logprob: -20.000001907348633
    6. '3' → logprob: -20.000001907348633
    7. '1' → logprob: -20.000001907348633
    8. ' (' → logprob: -20.250001907348633
    9. '(
' → logprob: -20.250001907348633
    10. '6' → logprob: -20.375001907348633

Token 558: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012369317002594471
    2. '3' → logprob: -4.762369155883789
    3. '4' → logprob: -5.637369155883789
    4. ' ' → logprob: -8.887369155883789
    5. '6' → logprob: -10.137369155883789
    6. '5' → logprob: -11.762369155883789
    7. ')' → logprob: -17.01236915588379
    8. '   ' → logprob: -17.26236915588379
    9. '10' → logprob: -18.38736915588379
    10. '1' → logprob: -18.38736915588379

Token 559: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0028098674956709146
    2. ')' → logprob: -5.877810001373291
    3. '))
' → logprob: -13.377809524536133
    4. ')))' → logprob: -13.877809524536133
    5. ' ))' → logprob: -14.127809524536133
    6. '),' → logprob: -14.377809524536133
    7. '));' → logprob: -14.502809524536133
    8. '()))' → logprob: -16.127809524536133
    9. '))

' → logprob: -16.377809524536133
    10. '0' → logprob: -16.377809524536133

Token 560: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06581924110651016
    2. 'solver' → logprob: -2.815819263458252
    3. '
' → logprob: -5.690819263458252
    4. ' solver' → logprob: -8.690818786621094
    5. 'import' → logprob: -8.815818786621094
    6. '    
' → logprob: -9.690818786621094
    7. '```' → logprob: -10.565818786621094
    8. '_solver' → logprob: -11.065818786621094
    9. '<|end|>' → logprob: -11.190818786621094
    10. '
' → logprob: -11.815818786621094

Token 561: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -2.5941604690160602e-05
    2. ' solver' → logprob: -10.875025749206543
    3. '   ' → logprob: -12.250025749206543
    4. 'sol' → logprob: -14.000025749206543
    5. 'solve' → logprob: -14.250025749206543
    6. '_solver' → logprob: -15.750025749206543
    7. 'import' → logprob: -15.750025749206543
    8. 'for' → logprob: -16.00002670288086
    9. 'sys' → logprob: -16.62502670288086
    10. '    
' → logprob: -17.00002670288086

Token 562: '_engine' (ID: 57393)
  Prédit: '_engine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_engine' → logprob: -8.180258191714529e-06
    2. '_eng' → logprob: -11.750008583068848
    3. '_' → logprob: -16.25000762939453
    4. '_.' → logprob: -16.87500762939453
    5. '._' → logprob: -16.87500762939453
    6. '__' → logprob: -17.87500762939453
    7. '_ENGINE' → logprob: -18.50000762939453
    8. ' _' → logprob: -18.50000762939453
    9. '_en' → logprob: -18.75000762939453
    10. '_environment' → logprob: -19.25000762939453

Token 563: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -2.7848862373502925e-05
    2. '.' → logprob: -10.500027656555176
    3. ' .' → logprob: -15.250027656555176
    4. 'run' → logprob: -17.875028610229492
    5. '.process' → logprob: -18.125028610229492
    6. '.mainloop' → logprob: -19.375028610229492
    7. '   ' → logprob: -19.500028610229492
    8. '().' → logprob: -19.625028610229492
    9. '.start' → logprob: -20.000028610229492
    10. '.
' → logprob: -20.000028610229492

Token 564: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00026658078422769904
    2. '()
' → logprob: -8.250267028808594
    3. '(' → logprob: -13.250267028808594
    4. '()\' → logprob: -13.750267028808594
    5. ' ()' → logprob: -13.875267028808594
    6. '()

' → logprob: -14.625267028808594
    7. '()`' → logprob: -15.000267028808594
    8. '()<' → logprob: -15.125267028808594
    9. '()"' → logprob: -16.125267028808594
    10. '();' → logprob: -16.250267028808594


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 562
Tokens correctement prédits (1ère position, stricte): 282
Tokens correctement prédits (1ère position, avec adaptation): 310
Tokens correctement prédits (top 10): 500
Précision stricte (1ère position): 50.18%
Précision adaptée (1ère position): 55.16%
Précision (top 10): 88.97%
================================================================================
