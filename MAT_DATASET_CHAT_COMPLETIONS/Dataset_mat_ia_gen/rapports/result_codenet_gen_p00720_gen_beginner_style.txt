================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

def pos_at_time(robot, t):
    times = robot['times']
    xs = robot['xs']
    ys = robot['ys']
    vxs = robot['vxs']
    vys = robot['vys']
    # Find interval containing t
    for i in range(len(times)-1):
        if times[i] <= t <= times[i+1]:
            dt = t - times[i]
            x = xs[i] + vxs[i]*dt
            y = ys[i] + vys[i]*dt
            return (x, y)
    # If t == times[-1]
    if t == times[-1]:
        return (xs[-1], ys[-1])
    # Just in case
    return (xs[0], ys[0])

def dist(a,b):
    return math.sqrt((a[0]-b[0])**2 + (a[1]-b[1])**2)

def reachable(robots, R, t):
    # Returns list of sets of connected robots at time t
    n = len(robots)
    adj = [[] for _ in range(n)]
    positions = [pos_at_time(robots[i], t) for i in range(n)]
    for i in range(n):
        for j in range(i+1, n):
            d = dist(positions[i], positions[j])
            if d < R + 1e-10:
                adj[i].append(j)
                adj[j].append(i)
    # Build connected components
    visited = [False]*n
    groups = []
    for i in range(n):
        if not visited[i]:
            stack = [i]
            comp = []
            while stack:
                u = stack.pop()
                if not visited[u]:
                    visited[u] = True
                    comp.append(u)
                    for w in adj[u]:
                        if not visited[w]:
                            stack.append(w)
            groups.append(comp)
    return groups

def main():
    input = sys.stdin.readline
    while True:
        line = ''
        while line.strip() == '':
            line = sys.stdin.readline()
            if line == '':
                return
        NTR = line.strip().split()
        if len(NTR) < 3:
            continue
        N, T, R = map(int, NTR)
        if N==0 and T==0 and R==0:
            break
        robots = []
        for _ in range(N):
            # read nickname
            while True:
                nick = sys.stdin.readline().strip()
                if nick != '':
                    break
            # read times and velocities
            times = []
            xs = []
            ys = []
            vxs = []
            vys = []
            # read first line: t0 x0 y0
            while True:
                line = sys.stdin.readline()
                if line.strip() != '':
                    break
            parts = line.strip().split()
            t0 = int(parts[0])
            x0 = int(parts[1])
            y0 = int(parts[2])
            times.append(t0)
            xs.append(x0)
            ys.append(y0)
            vxs.append(0)
            vys.append(0)
            # read next lines until last t_k == T
            while True:
                line = sys.stdin.readline()
                if line.strip() == '':
                    continue
                parts = line.strip().split()
                t = int(parts[0])
                vx = int(parts[1])
                vy = int(parts[2])
                times.append(t)
                # position at t is previous position + velocity*(t-prev_t)?
                # No, t is end time, vx,vy active from times[-2] to t
                # For positions, we store at times[i]: pos = xs[i], ys[i]
                # Next positions will be computed with velocity
                # We must compute xs and ys at times because they give t and velocities
                # So to get xs and ys at t, need to compute from previous
                dt = t - times[-2]
                x_new = xs[-1] + vxs[-1]*dt
                y_new = ys[-1] + vys[-1]*dt
                xs.append(x_new)
                ys.append(y_new)
                vxs.append(vx)
                vys.append(vy)
                if t == T:
                    break
            robot = {'nick':nick, 'times':times, 'xs':xs, 'ys':ys, 'vxs':vxs, 'vys':vys}
            robots.append(robot)

        # We want to simulate from 0 to T
        # data spread initially from first robot at time 0
        # since data transfer is instantaneous, data propagate in clusters of connected robots at each time
        # but robots move, so connectivity changes
        # We'll simulate time step by step
        # To keep it simple: check every integer time from 0 to T (T <=1000)
        # For better we can check all integer times plus T
        # For each time, find connected components, for each group if any member has data, all get data

        have_data = set()
        have_data.add(0) # first robot has data initially

        # We'll do a BFS connectivity on dynamic graph for each time
        # To propagate data between times, data only accumulate

        for t in range(0, T+1):
            groups = reachable(robots, R, t)
            # For each group, if any has data, all get data
            new_data = set()
            for g in groups:
                if any(r in have_data for r in g):
                    for r in g:
                        new_data.add(r)
            have_data = have_data.union(new_data)

        # print nicknames of robots with data in dictionary order
        result = [robots[i]['nick'] for i in have_data]
        result.sort()
        for r in result:
            print(r)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183328330516815
    2. '.' → logprob: -2.3368332386016846
    3. '<|end|>' → logprob: -2.8368332386016846
    4. '\' → logprob: -4.711833477020264
    5. 'newline' → logprob: -5.086833477020264
    6. 'import' → logprob: -5.086833477020264
    7. '
' → logprob: -5.711833477020264
    8. '' → logprob: -5.836833477020264
    9. '<|end|>' → logprob: -5.836833477020264
    10. '\r' → logprob: -6.336833477020264

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10138683021068573
    2. '\' → logprob: -3.601386785507202
    3. '\n' → logprob: -3.976386785507202
    4. 'import' → logprob: -4.351387023925781
    5. '<|end|>' → logprob: -4.601387023925781
    6. '```' → logprob: -4.726387023925781
    7. '
' → logprob: -4.976387023925781
    8. '

' → logprob: -5.476387023925781
    9. '<|end|>' → logprob: -6.601387023925781
    10. '' → logprob: -6.601387023925781

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9209080338478088
    2. '\n' → logprob: -1.545907974243164
    3. 'import' → logprob: -1.795907974243164
    4. '\' → logprob: -2.420907974243164
    5. '```' → logprob: -2.920907974243164
    6. '
' → logprob: -3.170907974243164
    7. ',' → logprob: -4.795907974243164
    8. 'def' → logprob: -4.920907974243164
    9. '

' → logprob: -5.170907974243164
    10. '<|end|>' → logprob: -5.670907974243164

Token 7: ' pos' (ID: 1253)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.019873062148690224
    2. ' calculate' → logprob: -4.144873142242432
    3. ' space' → logprob: -6.644873142242432
    4. '_' → logprob: -6.894873142242432
    5. ' compute' → logprob: -8.019872665405273
    6. ' factorial' → logprob: -8.019872665405273
    7. ' my' → logprob: -9.519872665405273
    8. ' math' → logprob: -9.519872665405273
    9. ' ' → logprob: -9.644872665405273
    10. ' add' → logprob: -9.644872665405273

Token 8: '_at' (ID: 8254)
  Prédit: 'ition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.23604656755924225
    2. 'itive' → logprob: -2.486046552658081
    3. 'sible' → logprob: -2.986046552658081
    4. 'itional' → logprob: -3.361046552658081
    5. 't' → logprob: -4.36104679107666
    6. 's' → logprob: -4.86104679107666
    7. 'itivity' → logprob: -5.23604679107666
    8. '_' → logprob: -5.23604679107666
    9. 'i' → logprob: -5.36104679107666
    10. '(t' → logprob: -6.48604679107666

Token 9: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.11175766587257385
    2. '_' → logprob: -2.861757755279541
    3. 'tribute' → logprob: -4.111757755279541
    4. '(' → logprob: -5.236757755279541
    5. '_angle' → logprob: -5.236757755279541
    6. 'ime' → logprob: -5.736757755279541
    7. '_timestamp' → logprob: -5.861757755279541
    8. '(t' → logprob: -6.111757755279541
    9. '_t' → logprob: -6.611757755279541
    10. '(time' → logprob: -6.736757755279541

Token 10: '(robot' (ID: 166887)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013272607466205955
    2. '_' → logprob: -7.376327037811279
    3. ' (' → logprob: -7.751327037811279
    4. '(time' → logprob: -9.001327514648438
    5. '(t' → logprob: -10.376327514648438
    6. 's' → logprob: -10.376327514648438
    7. ')' → logprob: -10.876327514648438
    8. '(x' → logprob: -11.501327514648438
    9. '```' → logprob: -11.626327514648438
    10. '_(' → logprob: -11.751327514648438

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2468934953212738
    2. '):' → logprob: -1.9968935251235962
    3. '_' → logprob: -2.9968934059143066
    4. '_time' → logprob: -4.496893405914307
    5. '_,' → logprob: -4.746893405914307
    6. ' ,' → logprob: -5.871893405914307
    7. ')' → logprob: -5.871893405914307
    8. 's' → logprob: -6.871893405914307
    9. '_position' → logprob: -6.996893405914307
    10. '_t' → logprob: -7.246893405914307

Token 12: ' t' (ID: 260)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.9055251479148865
    2. ' t' → logprob: -1.4055252075195312
    3. 'time' → logprob: -1.4055252075195312
    4. 't' → logprob: -2.2805252075195312
    5. ' target' → logprob: -7.155525207519531
    6. 'target' → logprob: -7.405525207519531
    7. ')' → logprob: -7.780525207519531
    8. '   ' → logprob: -8.280525207519531
    9. ' ' → logprob: -8.530525207519531
    10. ')t' → logprob: -9.530525207519531

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.040674977004528046
    2. ')' → logprob: -3.290674924850464
    3. ',' → logprob: -6.040675163269043
    4. ' ):' → logprob: -9.415675163269043
    5. ':' → logprob: -10.165675163269043
    6. '):
' → logprob: -10.415675163269043
    7. 's' → logprob: -10.665675163269043
    8. '_' → logprob: -11.040675163269043
    9. ' ' → logprob: -12.040675163269043
    10. ''):' → logprob: -12.040675163269043

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2642212510108948
    2. ':' → logprob: -2.13922119140625
    3. ' :' → logprob: -3.38922119140625
    4. '    ' → logprob: -3.38922119140625
    5. '(' → logprob: -4.01422119140625
    6. '):' → logprob: -4.63922119140625
    7. ',' → logprob: -5.13922119140625
    8. ' return' → logprob: -5.88922119140625
    9. ' (' → logprob: -6.26422119140625
    10. '():' → logprob: -6.63922119140625

Token 15: ' times' (ID: 4238)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3702368140220642
    2. '   ' → logprob: -2.245236873626709
    3. 'return' → logprob: -2.620236873626709
    4. '    ' → logprob: -2.870236873626709
    5. '(' → logprob: -4.245236873626709
    6. ' ' → logprob: -4.245236873626709
    7. '```' → logprob: -4.620236873626709
    8. ' (' → logprob: -4.995236873626709
    9. ''' → logprob: -5.370236873626709
    10. '     
' → logprob: -5.745236873626709

Token 16: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6168258786201477
    2. '_' → logprob: -1.241825819015503
    3. '=' → logprob: -2.741825819015503
    4. ' =' → logprob: -2.741825819015503
    5. ')' → logprob: -3.741825819015503
    6. '_to' → logprob: -5.116826057434082
    7. '[]' → logprob: -5.866826057434082
    8. ']' → logprob: -7.116826057434082
    9. '=[]' → logprob: -7.241826057434082
    10. '.' → logprob: -7.366826057434082

Token 17: ' robot' (ID: 20808)
  Prédit: ' robot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' robot' → logprob: -0.1975976824760437
    2. 'robot' → logprob: -2.1975977420806885
    3. ' [' → logprob: -3.5725977420806885
    4. '[' → logprob: -4.072597503662109
    5. '[]' → logprob: -4.447597503662109
    6. ' []' → logprob: -4.572597503662109
    7. '(robot' → logprob: -7.697597503662109
    8. '.robot' → logprob: -9.07259750366211
    9. ' ' → logprob: -9.44759750366211
    10. ' len' → logprob: -9.82259750366211

Token 18: '['' (ID: 1181)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7155051827430725
    2. '['' → logprob: -0.8405051827430725
    3. '.' → logprob: -3.7155051231384277
    4. '["' → logprob: -4.340505123138428
    5. '_times' → logprob: -4.590505123138428
    6. '.time' → logprob: -5.340505123138428
    7. '.get' → logprob: -5.840505123138428
    8. '._' → logprob: -5.965505123138428
    9. '_positions' → logprob: -5.965505123138428
    10. '.pos' → logprob: -6.465505123138428

Token 19: 'times' (ID: 32499)
  Prédit: 'times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.6352551579475403
    2. 'path' → logprob: -1.8852550983428955
    3. 'positions' → logprob: -2.3852550983428955
    4. 'way' → logprob: -2.5102550983428955
    5. 'moves' → logprob: -3.2602550983428955
    6. 'segments' → logprob: -3.7602550983428955
    7. 'mov' → logprob: -4.635255336761475
    8. 'commands' → logprob: -4.760255336761475
    9. 'points' → logprob: -4.885255336761475
    10. 'move' → logprob: -4.885255336761475

Token 20: '']
' (ID: 9756)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31390509009361267
    2. '']' → logprob: -1.313905119895935
    3. '[' → logprob: -8.188904762268066
    4. '][' → logprob: -8.938904762268066
    5. ''][' → logprob: -9.563904762268066
    6. ' ]' → logprob: -9.688904762268066
    7. '"]' → logprob: -10.438904762268066
    8. ' ']' → logprob: -11.813904762268066
    9. '][-' → logprob: -11.938904762268066
    10. '`]' → logprob: -12.063904762268066

Token 21: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3381773829460144
    2. '   ' → logprob: -2.088177442550659
    3. ' if' → logprob: -2.588177442550659
    4. '[-' → logprob: -3.088177442550659
    5. '_index' → logprob: -5.58817720413208
    6. '```' → logprob: -5.58817720413208
    7. '
' → logprob: -5.83817720413208
    8. ' =' → logprob: -5.96317720413208
    9. '[t' → logprob: -5.96317720413208
    10. '[i' → logprob: -6.33817720413208

Token 22: ' xs' (ID: 26642)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03731318190693855
    2. ' for' → logprob: -4.787312984466553
    3. ' idx' → logprob: -4.912312984466553
    4. ' positions' → logprob: -5.412312984466553
    5. 'if' → logprob: -5.537312984466553
    6. ' n' → logprob: -5.537312984466553
    7. ' pos' → logprob: -6.162312984466553
    8. ' current' → logprob: -7.037312984466553
    9. 'for' → logprob: -7.412312984466553
    10. ' index' → logprob: -7.412312984466553

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.037162721157073975
    2. '=' → logprob: -3.4121627807617188
    3. '[' → logprob: -5.787162780761719
    4. ']' → logprob: -9.287162780761719
    5. '[]' → logprob: -9.287162780761719
    6. ',' → logprob: -9.287162780761719
    7. '   ' → logprob: -9.662162780761719
    8. ')' → logprob: -10.412162780761719
    9. '[:]' → logprob: -10.912162780761719
    10. 's' → logprob: -12.412162780761719

Token 24: ' robot' (ID: 20808)
  Prédit: ' robot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' robot' → logprob: -0.1002185270190239
    2. 'robot' → logprob: -2.3502185344696045
    3. '(robot' → logprob: -12.225218772888184
    4. '.robot' → logprob: -12.475218772888184
    5. ' ' → logprob: -13.975218772888184
    6. '_robot' → logprob: -13.975218772888184
    7. 'rob' → logprob: -15.100218772888184
    8. 'robots' → logprob: -15.350218772888184
    9. ' робот' → logprob: -15.350218772888184
    10. ' robots' → logprob: -15.725218772888184

Token 25: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.00045914790825918317
    2. '[' → logprob: -7.75045919418335
    3. '["' → logprob: -11.625458717346191
    4. ''' → logprob: -11.750458717346191
    5. '['_' → logprob: -12.875458717346191
    6. ']['' → logprob: -13.375458717346191
    7. '[
' → logprob: -13.375458717346191
    8. ''s' → logprob: -13.625458717346191
    9. ' ['' → logprob: -13.875458717346191
    10. '```' → logprob: -14.125458717346191

Token 26: 'xs' (ID: 33335)
  Prédit: 'xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.09153568744659424
    2. 'positions' → logprob: -2.7165355682373047
    3. 'x' → logprob: -4.466535568237305
    4. 'pos' → logprob: -5.216535568237305
    5. 'times' → logprob: -5.591535568237305
    6. 'poses' → logprob: -8.966535568237305
    7. 'path' → logprob: -9.091535568237305
    8. 'poss' → logprob: -9.716535568237305
    9. 'points' → logprob: -10.341535568237305
    10. 'position' → logprob: -10.466535568237305

Token 27: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.011160066351294518
    2. ']' → logprob: -4.511159896850586
    3. '   ' → logprob: -9.886159896850586
    4. '"]' → logprob: -10.636159896850586
    5. '']
' → logprob: -10.886159896850586
    6. ' ']' → logprob: -12.011159896850586
    7. '[' → logprob: -12.761159896850586
    8. '}' → logprob: -12.761159896850586
    9. ''' → logprob: -13.386159896850586
    10. ' ]' → logprob: -13.886159896850586

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03083694726228714
    2. ' if' → logprob: -4.655837059020996
    3. '
' → logprob: -4.905837059020996
    4. '    
' → logprob: -4.905837059020996
    5. 'if' → logprob: -6.030837059020996
    6. '[' → logprob: -7.030837059020996
    7. 'index' → logprob: -8.280837059020996
    8. ')' → logprob: -8.405837059020996
    9. ',' → logprob: -8.655837059020996
    10. ' 
' → logprob: -8.780837059020996

Token 29: ' ys' (ID: 67301)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0340242385864258
    2. '   ' → logprob: -1.6590242385864258
    3. ' if' → logprob: -1.6590242385864258
    4. 'ys' (adapté à ' ys') → logprob: -2.659024238586426
    5. ' ys' → logprob: -2.784024238586426
    6. 'idx' → logprob: -3.534024238586426
    7. 'i' → logprob: -3.909024238586426
    8. 'y' → logprob: -4.534024238586426
    9. ' for' → logprob: -4.784024238586426
    10. ' idx' → logprob: -4.784024238586426

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03838570788502693
    2. '=' → logprob: -3.2883856296539307
    3. '<|end|>' → logprob: -8.288385391235352
    4. ']' → logprob: -10.538385391235352
    5. '[' → logprob: -10.663385391235352
    6. '<|end|>' → logprob: -11.288385391235352
    7. '   ' → logprob: -11.913385391235352
    8. ' ' → logprob: -12.163385391235352
    9. '[]' → logprob: -12.663385391235352
    10. 's' → logprob: -12.788385391235352

Token 31: ' robot' (ID: 20808)
  Prédit: ' robot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' robot' → logprob: -0.386931449174881
    2. 'robot' → logprob: -1.1369314193725586
    3. '(robot' → logprob: -10.511931419372559
    4. '.robot' → logprob: -11.136931419372559
    5. 'robots' → logprob: -12.261931419372559
    6. ' ' → logprob: -12.636931419372559
    7. '_robot' → logprob: -12.761931419372559
    8. '   ' → logprob: -12.886931419372559
    9. ' робот' → logprob: -13.886931419372559
    10. 'rob' → logprob: -14.011931419372559

Token 32: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -7.803360495017841e-05
    2. '[' → logprob: -9.625078201293945
    3. ''' → logprob: -12.250078201293945
    4. '['_' → logprob: -12.500078201293945
    5. ']['' → logprob: -14.000078201293945
    6. '["' → logprob: -14.000078201293945
    7. '   ' → logprob: -14.500078201293945
    8. ' ['' → logprob: -14.750078201293945
    9. ''s' → logprob: -15.000078201293945
    10. '[['' → logprob: -16.000078201293945

Token 33: 'ys' (ID: 1371)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.29817497730255127
    2. ''s' → logprob: -1.6731749773025513
    3. 'ys' → logprob: -2.7981748580932617
    4. 's' → logprob: -4.923174858093262
    5. ''' → logprob: -7.173174858093262
    6. ''t' → logprob: -8.173174858093262
    7. 'ts' → logprob: -8.173174858093262
    8. '']' → logprob: -8.673174858093262
    9. ']' → logprob: -8.798174858093262
    10. 'times' → logprob: -9.673174858093262

Token 34: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.024485258385539055
    2. ']' → logprob: -3.7744853496551514
    3. '']
' → logprob: -6.774485111236572
    4. ']
' → logprob: -10.14948558807373
    5. '"]' → logprob: -10.64948558807373
    6. '']
' → logprob: -11.89948558807373
    7. '}' → logprob: -11.89948558807373
    8. ''' → logprob: -12.14948558807373
    9. '   ' → logprob: -12.52448558807373
    10. '']

' → logprob: -12.77448558807373

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16524767875671387
    2. '
' → logprob: -2.040247678756714
    3. '    
' → logprob: -5.290247917175293
    4. ':' → logprob: -5.415247917175293
    5. '```' → logprob: -5.665247917175293
    6. '\n' → logprob: -6.165247917175293
    7. ' if' → logprob: -6.165247917175293
    8. 'if' → logprob: -6.290247917175293
    9. '   
' → logprob: -7.540247917175293
    10. '[' → logprob: -7.540247917175293

Token 36: ' v' (ID: 323)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8819496631622314
    2. '   ' → logprob: -1.0069496631622314
    3. ' if' → logprob: -1.6319496631622314
    4. 'n' → logprob: -4.131949424743652
    5. '```' → logprob: -6.256949424743652
    6. 'for' → logprob: -6.506949424743652
    7. '
' → logprob: -6.756949424743652
    8. ' n' → logprob: -6.756949424743652
    9. '#' → logprob: -7.131949424743652
    10. ' for' → logprob: -7.631949424743652

Token 37: 'xs' (ID: 33335)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.9019418954849243
    2. 'els' → logprob: -1.5269418954849243
    3. ' =' → logprob: -2.2769417762756348
    4. 'al' → logprob: -2.2769417762756348
    5. '=' → logprob: -2.7769417762756348
    6. 'e' → logprob: -3.7769417762756348
    7. 'als' → logprob: -4.276941776275635
    8. '_idx' → logprob: -4.401941776275635
    9. '_' → logprob: -4.526941776275635
    10. 'a' → logprob: -4.526941776275635

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02061278000473976
    2. '=' → logprob: -3.8956127166748047
    3. '[' → logprob: -9.770612716674805
    4. ')' → logprob: -12.520612716674805
    5. '[]' → logprob: -13.145612716674805
    6. ' =[' → logprob: -13.270612716674805
    7. ' ' → logprob: -13.895612716674805
    8. ',' → logprob: -13.895612716674805
    9. ']' → logprob: -14.020612716674805
    10. '   ' → logprob: -14.270612716674805

Token 39: ' robot' (ID: 20808)
  Prédit: ' robot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' robot' → logprob: -0.31327906250953674
    2. 'robot' → logprob: -1.3132790327072144
    3. '(robot' → logprob: -11.438279151916504
    4. '.robot' → logprob: -13.063279151916504
    5. '_robot' → logprob: -13.063279151916504
    6. 'robots' → logprob: -13.813279151916504
    7. ' robots' → logprob: -14.688279151916504
    8. 'rob' → logprob: -14.938279151916504
    9. ' робот' → logprob: -15.563279151916504
    10. ' ' → logprob: -15.688279151916504

Token 40: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0008753741858527064
    2. '['_' → logprob: -7.125875473022461
    3. '[' → logprob: -10.000875473022461
    4. 's' → logprob: -11.625875473022461
    5. '["' → logprob: -12.250875473022461
    6. '_' → logprob: -12.500875473022461
    7. ''' → logprob: -13.500875473022461
    8. '   ' → logprob: -13.625875473022461
    9. ''s' → logprob: -13.875875473022461
    10. ' ['' → logprob: -14.250875473022461

Token 41: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.04396362230181694
    2. 'xs' → logprob: -3.418963670730591
    3. 'vs' → logprob: -5.293963432312012
    4. 's' → logprob: -5.793963432312012
    5. 'x' → logprob: -6.793963432312012
    6. 'vx' → logprob: -7.668963432312012
    7. ''s' → logprob: -8.043963432312012
    8. ''' → logprob: -8.793963432312012
    9. 't' → logprob: -10.043963432312012
    10. '['' → logprob: -10.668963432312012

Token 42: 'xs' (ID: 33335)
  Prédit: 'xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.021171173080801964
    2. 's' → logprob: -3.8961710929870605
    3. 'x' → logprob: -7.5211710929870605
    4. 'ecs' → logprob: -9.896171569824219
    5. 'xes' → logprob: -11.146171569824219
    6. 'els' → logprob: -12.021171569824219
    7. 'sx' → logprob: -12.021171569824219
    8. '_x' → logprob: -13.146171569824219
    9. '```' → logprob: -13.271171569824219
    10. ' xs' → logprob: -13.521171569824219

Token 43: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.030541880056262016
    2. ']' → logprob: -3.5305418968200684
    3. '[' → logprob: -7.905541896820068
    4. '   ' → logprob: -8.40554141998291
    5. '"]' → logprob: -10.28054141998291
    6. '']
' → logprob: -10.28054141998291
    7. '[t' → logprob: -10.28054141998291
    8. '[token' → logprob: -10.65554141998291
    9. ''' → logprob: -10.78054141998291
    10. ' ']' → logprob: -11.78054141998291

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21163834631443024
    2. '[t' → logprob: -2.3366384506225586
    3. '[' → logprob: -2.7116384506225586
    4. '[token' → logprob: -4.336638450622559
    5. ' if' → logprob: -5.461638450622559
    6. 'if' → logprob: -6.336638450622559
    7. '[
' → logprob: -6.961638450622559
    8. '[ind' → logprob: -7.211638450622559
    9. '    
' → logprob: -7.211638450622559
    10. ']' → logprob: -7.586638450622559

Token 45: ' vys' (ID: 66128)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.15642988681793213
    2. ' vys' → logprob: -2.0314297676086426
    3. ' v' → logprob: -5.531429767608643
    4. '   ' → logprob: -5.906429767608643
    5. ' ' → logprob: -6.406429767608643
    6. '0' → logprob: -6.531429767608643
    7. 'vs' → logprob: -6.781429767608643
    8. '```' → logprob: -7.906429767608643
    9. ' vyst' → logprob: -8.2814302444458
    10. '  ' → logprob: -8.5314302444458

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23617516458034515
    2. '=' → logprob: -1.6111751794815063
    3. '[' → logprob: -4.736175060272217
    4. ']' → logprob: -6.486175060272217
    5. '<|end|>' → logprob: -9.111175537109375
    6. ')' → logprob: -9.611175537109375
    7. 's' → logprob: -9.861175537109375
    8. '[]' → logprob: -10.486175537109375
    9. '   ' → logprob: -10.611175537109375
    10. '[token' → logprob: -11.111175537109375

Token 47: ' robot' (ID: 20808)
  Prédit: ' robot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' robot' → logprob: -0.048596348613500595
    2. 'robot' → logprob: -3.0485963821411133
    3. '(robot' → logprob: -12.798596382141113
    4. '.robot' → logprob: -13.548596382141113
    5. ' v' → logprob: -13.923596382141113
    6. ' ' → logprob: -14.048596382141113
    7. '_robot' → logprob: -14.423596382141113
    8. 'robots' → logprob: -14.548596382141113
    9. ' robots' → logprob: -14.673596382141113
    10. ' ' → logprob: -15.048596382141113

Token 48: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.000631543982308358
    2. '[' → logprob: -7.625631332397461
    3. '['_' → logprob: -9.250631332397461
    4. ''s' → logprob: -10.750631332397461
    5. ''' → logprob: -11.000631332397461
    6. '   ' → logprob: -13.125631332397461
    7. '["' → logprob: -13.375631332397461
    8. '[['' → logprob: -13.750631332397461
    9. ''[' → logprob: -14.125631332397461
    10. ' ['' → logprob: -14.125631332397461

Token 49: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0023559064138680696
    2. 'vs' → logprob: -6.502356052398682
    3. ''' → logprob: -7.877356052398682
    4. 'ys' → logprob: -8.002355575561523
    5. ' vys' → logprob: -9.627355575561523
    6. ''s' → logprob: -10.127355575561523
    7. 's' → logprob: -11.627355575561523
    8. 'rys' → logprob: -12.252355575561523
    9. '['' → logprob: -12.252355575561523
    10. 'y' → logprob: -13.127355575561523

Token 50: 'ys' (ID: 1371)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.00834151916205883
    2. 's' → logprob: -4.883341312408447
    3. 'ys' → logprob: -7.383341312408447
    4. 'x' → logprob: -9.133341789245605
    5. 'zs' → logprob: -13.633341789245605
    6. ' xs' → logprob: -13.883341789245605
    7. 'sx' → logprob: -13.883341789245605
    8. ''s' → logprob: -14.758341789245605
    9. 'sys' → logprob: -15.258341789245605
    10. '`s' → logprob: -15.508341789245605

Token 51: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.0033485821913927794
    2. '']
' → logprob: -5.753348350524902
    3. ']' → logprob: -9.753348350524902
    4. '']
' → logprob: -10.378348350524902
    5. '']

' → logprob: -10.503348350524902
    6. '   ' → logprob: -10.878348350524902
    7. ''' → logprob: -11.003348350524902
    8. '"]' → logprob: -11.628348350524902
    9. '```' → logprob: -12.503348350524902
    10. '}' → logprob: -13.253348350524902

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14369188249111176
    2. '
' → logprob: -2.8936917781829834
    3. ':' → logprob: -3.1436917781829834
    4. ':
' → logprob: -4.5186920166015625
    5. '\n' → logprob: -5.2686920166015625
    6. 'if' → logprob: -5.2686920166015625
    7. '```' → logprob: -5.2686920166015625
    8. ' if' → logprob: -5.6436920166015625
    9. '    
' → logprob: -6.1436920166015625
    10. '[' → logprob: -7.1436920166015625

Token 53: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4232133626937866
    2. 'if' → logprob: -1.4232133626937866
    3. ' if' → logprob: -2.923213481903076
    4. 'for' → logprob: -4.048213481903076
    5. 'n' → logprob: -4.173213481903076
    6. ' for' → logprob: -5.173213481903076
    7. 'i' → logprob: -5.173213481903076
    8. '#' (adapté à ' #') → logprob: -6.048213481903076
    9. ' i' → logprob: -6.673213481903076
    10. ' n' → logprob: -7.298213481903076

Token 54: ' Find' (ID: 9764)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.904462993144989
    2. ' for' → logprob: -1.1544630527496338
    3. 'for' → logprob: -2.029463052749634
    4. ' if' → logprob: -3.529463052749634
    5. 'if' → logprob: -3.654463052749634
    6. ' i' → logprob: -3.654463052749634
    7. ' n' → logprob: -3.904463052749634
    8. 'n' → logprob: -3.904463052749634
    9. 'i' → logprob: -4.279462814331055
    10. 'idx' → logprob: -6.029462814331055

Token 55: ' interval' (ID: 17116)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6334402561187744
    2. ' the' → logprob: -1.0084402561187744
    3. 'i' → logprob: -2.5084402561187744
    4. ' idx' → logprob: -4.383440017700195
    5. ' index' → logprob: -5.383440017700195
    6. 'the' → logprob: -6.258440017700195
    7. ' for' → logprob: -6.883440017700195
    8. '   ' → logprob: -7.883440017700195
    9. 'idx' → logprob: -7.883440017700195
    10. 'index' → logprob: -8.133440017700195

Token 56: ' containing' (ID: 15683)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8299801349639893
    2. ' ' → logprob: -0.8299801349639893
    3. ' for' → logprob: -3.3299801349639893
    4. ' _' → logprob: -3.3299801349639893
    5. '<|end|>' → logprob: -4.20497989654541
    6. 'for' → logprob: -4.82997989654541
    7. '_index' → logprob: -4.95497989654541
    8. 's' → logprob: -5.07997989654541
    9. ' =' → logprob: -5.57997989654541
    10. '_i' → logprob: -5.95497989654541

Token 57: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.20152756571769714
    2. 't' → logprob: -1.7015275955200195
    3. ' the' → logprob: -9.95152759552002
    4. ' `' → logprob: -11.45152759552002
    5. ' time' → logprob: -11.57652759552002
    6. 'time' → logprob: -11.82652759552002
    7. '`t' → logprob: -12.07652759552002
    8. 's' → logprob: -12.32652759552002
    9. ' ' → logprob: -12.45152759552002
    10. '`' → logprob: -12.57652759552002

Token 58: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.888563334941864
    2. '<|end|>' → logprob: -1.6385633945465088
    3. '   ' → logprob: -1.8885633945465088
    4. '\n' → logprob: -2.763563394546509
    5. ',' → logprob: -3.263563394546509
    6. ' ' → logprob: -3.513563394546509
    7. '\' → logprob: -4.01356315612793
    8. ' for' → logprob: -4.51356315612793
    9. '
' → logprob: -4.76356315612793
    10. 'n' → logprob: -4.88856315612793

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5562207102775574
    2. ':' → logprob: -1.1812207698822021
    3. ' for' → logprob: -3.431220769882202
    4. ',' → logprob: -4.431220531463623
    5. '```' → logprob: -4.556220531463623
    6. '
' → logprob: -4.681220531463623
    7. ' ' → logprob: -4.681220531463623
    8. 'for' → logprob: -4.806220531463623
    9. 'n' → logprob: -5.056220531463623
    10. '\n' → logprob: -5.306220531463623

Token 60: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0448729991912842
    2. ' i' → logprob: -1.1698729991912842
    3. 'n' → logprob: -1.7948729991912842
    4. 'i' → logprob: -2.419872999191284
    5. 'for' (adapté à ' for') → logprob: -3.044872999191284
    6. ' 
' → logprob: -4.169873237609863
    7. ' n' → logprob: -5.794873237609863
    8. ' ```' → logprob: -5.919873237609863
    9. ' ' → logprob: -6.044873237609863
    10. '   ' → logprob: -6.044873237609863

Token 61: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0002988776541315019
    2. 'i' → logprob: -9.000298500061035
    3. ' ' → logprob: -9.125298500061035
    4. ' idx' → logprob: -10.500298500061035
    5. ' _' → logprob: -10.625298500061035
    6. '_i' → logprob: -12.375298500061035
    7. ' interval' → logprob: -12.875298500061035
    8. '_' → logprob: -13.125298500061035
    9. '   ' → logprob: -13.375298500061035
    10. '	i' → logprob: -13.625298500061035

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005074722226709127
    2. 'in' → logprob: -5.630074501037598
    3. ' ' → logprob: -6.630074501037598
    4. ',' → logprob: -9.130074501037598
    5. '  ' → logprob: -11.005074501037598
    6. '	in' → logprob: -11.130074501037598
    7. ' i' → logprob: -12.130074501037598
    8. ' ,' → logprob: -13.005074501037598
    9. '<|end|>' → logprob: -13.880074501037598
    10. '   ' → logprob: -13.880074501037598

Token 63: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00012403888104017824
    2. 'range' → logprob: -9.000123977661133
    3. ' xrange' → logprob: -14.375123977661133
    4. '	range' → logprob: -17.125123977661133
    5. ' ' → logprob: -17.750123977661133
    6. '(range' → logprob: -19.875123977661133
    7. ' rang' → logprob: -20.875123977661133
    8. '_range' → logprob: -21.500123977661133
    9. ' rango' → logprob: -21.625123977661133
    10. ' len' → logprob: -21.875123977661133

Token 64: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.07751507312059402
    2. '(' → logprob: -2.702515125274658
    3. ' (' → logprob: -4.952515125274658
    4. ' len' → logprob: -7.702515125274658
    5. 'len' → logprob: -11.0775146484375
    6. ' ' → logprob: -11.8275146484375
    7. '<|end|>' → logprob: -12.5775146484375
    8. '(length' → logprob: -12.9525146484375
    9. '[len' → logprob: -14.2025146484375
    10. '<len' → logprob: -14.3275146484375

Token 65: '(times' (ID: 135653)
  Prédit: '(times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(times' → logprob: -1.747814349073451e-05
    2. 'times' → logprob: -11.625017166137695
    3. '(' → logprob: -12.125017166137695
    4. ' times' → logprob: -13.375017166137695
    5. ' (' → logprob: -13.750017166137695
    6. '(time' → logprob: -15.250017166137695
    7. '(t' → logprob: -15.750017166137695
    8. '_times' → logprob: -18.000017166137695
    9. '.times' → logprob: -18.500017166137695
    10. ')' → logprob: -18.750017166137695

Token 66: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009217039681971073
    2. ')-' → logprob: -5.634217262268066
    3. '-' → logprob: -5.759217262268066
    4. ' -' → logprob: -6.134217262268066
    5. ' )' → logprob: -8.759217262268066
    6. ')):' → logprob: -9.634217262268066
    7. ')):
' → logprob: -10.384217262268066
    8. '))' → logprob: -11.884217262268066
    9. ' ' → logprob: -12.134217262268066
    10. '):' → logprob: -12.259217262268066

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. '```' → logprob: -17.001502990722656
    4. '-' → logprob: -18.501502990722656
    5. '   ' → logprob: -18.751502990722656
    6. '１' → logprob: -19.064002990722656
    7. '  ' → logprob: -19.064002990722656
    8. ')' → logprob: -19.439002990722656
    9. '2' → logprob: -19.751502990722656
    10. '

' → logprob: -19.814002990722656

Token 68: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007333649322390556
    2. '):
' → logprob: -5.382333755493164
    3. ':' → logprob: -6.507333755493164
    4. ' ):' → logprob: -6.757333755493164
    5. ')' → logprob: -10.632333755493164
    6. ',' → logprob: -11.257333755493164
    7. ' ):
' → logprob: -11.882333755493164
    8. '):
' → logprob: -12.757333755493164
    9. '):

' → logprob: -13.382333755493164
    10. '   ' → logprob: -13.382333755493164

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009990395046770573
    2. '<|end|>' → logprob: -4.884990215301514
    3. ':' → logprob: -6.884990215301514
    4. ' if' → logprob: -7.259990215301514
    5. '   ' → logprob: -7.884990215301514
    6. '<|end|>' → logprob: -9.509990692138672
    7. ',' → logprob: -10.259990692138672
    8. '    ' → logprob: -10.384990692138672
    9. ':
' → logprob: -10.384990692138672
    10. 'if' → logprob: -10.884990692138672

Token 70: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18099020421504974
    2. ' if' → logprob: -2.055990219116211
    3. '<|end|>' → logprob: -3.930990219116211
    4. 'if' (adapté à ' if') → logprob: -4.805990219116211
    5. '   ' → logprob: -5.555990219116211
    6. ' ' → logprob: -5.555990219116211
    7. '    ' → logprob: -6.930990219116211
    8. '        ' → logprob: -8.305990219116211
    9. '<|end|>' → logprob: -8.680990219116211
    10. '  ' → logprob: -8.930990219116211

Token 71: ' times' (ID: 4238)
  Prédit: ' times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.0014492794871330261
    2. ' t' → logprob: -6.751449108123779
    3. ' ' → logprob: -8.501449584960938
    4. 'times' → logprob: -9.626449584960938
    5. ' time' → logprob: -11.876449584960938
    6. '(times' → logprob: -13.876449584960938
    7. 't' → logprob: -14.876449584960938
    8. ' timest' → logprob: -14.876449584960938
    9. ' ' → logprob: -15.001449584960938
    10. ' (' → logprob: -15.626449584960938

Token 72: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.165027217415627e-05
    2. '[' → logprob: -10.750021934509277
    3. '<=' → logprob: -16.37502098083496
    4. ' [' → logprob: -17.25002098083496
    5. ' <=' → logprob: -17.50002098083496
    6. 'i' → logprob: -17.87502098083496
    7. '[I' → logprob: -17.87502098083496
    8. '[
' → logprob: -18.50002098083496
    9. '```' → logprob: -18.62502098083496
    10. '[j' → logprob: -18.62502098083496

Token 73: ']' (ID: 60)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.016126101836562157
    2. '<=' → logprob: -4.1411261558532715
    3. ')' → logprob: -10.266125679016113
    4. ' ' → logprob: -10.641125679016113
    5. ')<=' → logprob: -11.141125679016113
    6. '[' → logprob: -11.766125679016113
    7. ']<=' → logprob: -11.891125679016113
    8. 'le' → logprob: -14.141125679016113
    9. '0' → logprob: -14.266125679016113
    10. ' ' → logprob: -14.641125679016113

Token 74: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.02066672407090664
    2. '<=' → logprob: -3.8956668376922607
    3. ' ' → logprob: -9.02066707611084
    4. '[' → logprob: -13.77066707611084
    5. ' ' → logprob: -14.64566707611084
    6. '<' → logprob: -14.64566707611084
    7. ' <' → logprob: -14.64566707611084
    8. ')<=' → logprob: -15.27066707611084
    9. '0' → logprob: -15.39566707611084
    10. 'le' → logprob: -15.52066707611084

Token 75: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.0010331686353310943
    2. 't' → logprob: -6.876033306121826
    3. ' ' → logprob: -15.251032829284668
    4. ' ' → logprob: -15.876032829284668
    5. '	t' → logprob: -19.501033782958984
    6. '`t' → logprob: -19.501033782958984
    7. ')' → logprob: -19.751033782958984
    8. ',' → logprob: -20.501033782958984
    9. '_t' → logprob: -20.751033782958984
    10. ' time' → logprob: -20.876033782958984

Token 76: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5261065363883972
    2. ' and' → logprob: -1.026106595993042
    3. ' <=' → logprob: -3.651106595993042
    4. 'and' → logprob: -4.026106357574463
    5. '<' → logprob: -5.026106357574463
    6. '<=' → logprob: -8.151106834411621
    7. ' ' → logprob: -10.276106834411621
    8. '<|end|>' → logprob: -13.151106834411621
    9. ' ' → logprob: -14.026106834411621
    10. ' <
' → logprob: -14.401106834411621

Token 77: ' times' (ID: 4238)
  Prédit: ' times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.0006010498036630452
    2. 'times' → logprob: -7.500600814819336
    3. ' ' → logprob: -10.000600814819336
    4. ' t' → logprob: -14.500600814819336
    5. '_times' → logprob: -14.500600814819336
    6. ')' → logprob: -14.875600814819336
    7. ' Times' → logprob: -15.000600814819336
    8. 'imes' → logprob: -15.625600814819336
    9. ' time' → logprob: -15.625600814819336
    10. ' ' → logprob: -15.750600814819336

Token 78: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -14.000001907348633
    3. ' [' → logprob: -14.750001907348633
    4. 'i' → logprob: -15.375001907348633
    5. '[j' → logprob: -15.875001907348633
    6. '][' → logprob: -16.000001907348633
    7. '```' → logprob: -17.000001907348633
    8. '   ' → logprob: -17.250001907348633
    9. '[
' → logprob: -17.250001907348633
    10. ']' → logprob: -17.625001907348633

Token 79: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.2987729102605954e-05
    2. ' +' → logprob: -10.125042915344238
    3. '+i' → logprob: -13.000042915344238
    4. '+]' → logprob: -15.250042915344238
    5. ']' → logprob: -15.625042915344238
    6. '[i' → logprob: -16.000043869018555
    7. '+
' → logprob: -16.250043869018555
    8. ']+' → logprob: -17.000043869018555
    9. '   ' → logprob: -18.000043869018555
    10. '1' → logprob: -18.500043869018555

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008712020353414118
    2. ' ' → logprob: -7.625871181488037
    3. ']' → logprob: -8.125871658325195
    4. 'i' → logprob: -9.750871658325195
    5. '0' → logprob: -10.875871658325195
    6. '   ' → logprob: -12.375871658325195
    7. ']:' → logprob: -13.000871658325195
    8. '  ' → logprob: -14.000871658325195
    9. '])' → logprob: -14.125871658325195
    10. '```' → logprob: -14.500871658325195

Token 81: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010466636158525944
    2. ':' → logprob: -4.760466575622559
    3. ' ):' → logprob: -6.885466575622559
    4. '):
' → logprob: -7.510466575622559
    5. ')' → logprob: -8.385466575622559
    6. ']:' → logprob: -11.010466575622559
    7. '   ' → logprob: -11.510466575622559
    8. ''):' → logprob: -11.885466575622559
    9. ' and' → logprob: -12.385466575622559
    10. '       ' → logprob: -13.135466575622559

Token 82: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8312685489654541
    2. '       ' → logprob: -0.8312685489654541
    3. '           ' → logprob: -2.331268548965454
    4. ':
' → logprob: -3.581268548965454
    5. ' :' → logprob: -6.331268310546875
    6. ':return' → logprob: -7.456268310546875
    7. ' :
' → logprob: -8.081268310546875
    8. '\n' → logprob: -8.206268310546875
    9. ',' → logprob: -8.706268310546875
    10. ':\' → logprob: -8.706268310546875

Token 83: ' dt' (ID: 14008)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40119469165802
    2. ' return' → logprob: -2.1511945724487305
    3. '               ' → logprob: -2.1511945724487305
    4. '       ' → logprob: -2.4011945724487305
    5. 'return' → logprob: -6.4011945724487305
    6. ' x' → logprob: -7.1511945724487305
    7. ' if' → logprob: -7.1511945724487305
    8. '\n' → logprob: -7.2761945724487305
    9. '            
' → logprob: -8.02619457244873
    10. '        
' → logprob: -8.15119457244873

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005242652725428343
    2. '=' → logprob: -5.255242824554443
    3. ' ' → logprob: -12.130242347717285
    4. ')' → logprob: -13.505242347717285
    5. 's' → logprob: -14.130242347717285
    6. ' =
' → logprob: -15.255242347717285
    7. ' ==' → logprob: -15.505242347717285
    8. ',' → logprob: -15.630242347717285
    9. '   ' → logprob: -16.3177433013916
    10. '_' → logprob: -16.5677433013916

Token 85: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.001186299603432417
    2. 't' → logprob: -6.751186370849609
    3. ' ' → logprob: -11.12618637084961
    4. ' (' → logprob: -14.12618637084961
    5. ' ' → logprob: -15.25118637084961
    6. '	t' → logprob: -16.25118637084961
    7. ' times' → logprob: -16.62618637084961
    8. ' s' → logprob: -16.75118637084961
    9. 's' → logprob: -17.37618637084961
    10. '    ' → logprob: -17.56368637084961

Token 86: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.001961224712431431
    2. '-' → logprob: -6.2519612312316895
    3. ' ' → logprob: -10.751960754394531
    4. ' ' → logprob: -12.376960754394531
    5. '<|end|>' → logprob: -13.126960754394531
    6. '   ' → logprob: -13.376960754394531
    7. ')' → logprob: -14.126960754394531
    8. '    ' → logprob: -14.501960754394531
    9. ' –' → logprob: -15.189460754394531
    10. 's' → logprob: -15.564460754394531

Token 87: ' times' (ID: 4238)
  Prédit: ' times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.061982810497283936
    2. 'times' → logprob: -2.8119828701019287
    3. '   ' → logprob: -12.436983108520508
    4. '(times' → logprob: -12.686983108520508
    5. ' ' → logprob: -13.311983108520508
    6. '_times' → logprob: -13.436983108520508
    7. ' time' → logprob: -14.186983108520508
    8. 'time' → logprob: -14.186983108520508
    9. ' timestamps' → logprob: -14.811983108520508
    10. 'imes' → logprob: -14.811983108520508

Token 88: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.1424973713001236e-05
    2. '[' → logprob: -10.375031471252441
    3. 'i' → logprob: -16.125030517578125
    4. '[
' → logprob: -17.000030517578125
    5. '[I' → logprob: -17.125030517578125
    6. ' [' → logprob: -18.500030517578125
    7. '[idx' → logprob: -19.125030517578125
    8. '[j' → logprob: -19.625030517578125
    9. '[index' → logprob: -19.625030517578125
    10. '```' → logprob: -19.750030517578125

Token 89: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00023178798437584192
    2. ']
' → logprob: -8.750231742858887
    3. ' ]' → logprob: -10.875231742858887
    4. '[i' → logprob: -11.125231742858887
    5. '']' → logprob: -11.250231742858887
    6. ')' → logprob: -11.625231742858887
    7. '])' → logprob: -12.125231742858887
    8. '[' → logprob: -12.250231742858887
    9. '   ' → logprob: -13.000231742858887
    10. ']
' → logprob: -13.375231742858887

Token 90: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014124952256679535
    2. '       ' → logprob: -5.014124870300293
    3. '            
' → logprob: -6.014124870300293
    4. '\n' → logprob: -6.264124870300293
    5. '
' → logprob: -7.014124870300293
    6. '   ' → logprob: -7.264124870300293
    7. '    
' → logprob: -7.764124870300293
    8. '<|end|>' → logprob: -8.389124870300293
    9. ' return' → logprob: -8.639124870300293
    10. '        
' → logprob: -8.764124870300293

Token 91: ' x' (ID: 1215)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.22220280766487122
    2. '           ' → logprob: -2.722202777862549
    3. '   ' → logprob: -3.222202777862549
    4. ' x' → logprob: -3.472202777862549
    5. 'return' → logprob: -3.722202777862549
    6. 'x' (adapté à ' x') → logprob: -4.347202777862549
    7. '       ' → logprob: -5.222202777862549
    8. '    ' → logprob: -5.597202777862549
    9. ' 
' → logprob: -5.597202777862549
    10. '\n' → logprob: -5.972202777862549

Token 92: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5055283904075623
    2. ' =' → logprob: -1.005528450012207
    3. '=' → logprob: -3.630528450012207
    4. '[i' → logprob: -5.630528450012207
    5. ' ' → logprob: -8.130528450012207
    6. '0' → logprob: -8.130528450012207
    7. ',' → logprob: -9.630528450012207
    8. '[' → logprob: -9.880528450012207
    9. 'i' → logprob: -10.255528450012207
    10. '   ' → logprob: -10.880528450012207

Token 93: ' xs' (ID: 26642)
  Prédit: ' xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xs' → logprob: -0.048591118305921555
    2. 'xs' → logprob: -3.048591136932373
    3. '(xs' → logprob: -12.673590660095215
    4. 'x' → logprob: -15.923590660095215
    5. '   ' → logprob: -15.923590660095215
    6. ' x' → logprob: -16.04859161376953
    7. 'Xs' → logprob: -16.04859161376953
    8. 's' → logprob: -16.29859161376953
    9. '-xs' → logprob: -17.67359161376953
    10. ' ' → logprob: -17.67359161376953

Token 94: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011450992315076292
    2. '[' → logprob: -9.250114440917969
    3. ' [' → logprob: -11.000114440917969
    4. 'i' → logprob: -14.375114440917969
    5. '```' → logprob: -15.125114440917969
    6. '   ' → logprob: -16.00011444091797
    7. '[I' → logprob: -16.00011444091797
    8. '[
' → logprob: -16.25011444091797
    9. ' i' → logprob: -16.50011444091797
    10. ' ' → logprob: -16.75011444091797

Token 95: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00032640635618008673
    2. ']+' → logprob: -8.250326156616211
    3. ' ]' → logprob: -9.750326156616211
    4. '']' → logprob: -13.000326156616211
    5. '[' → logprob: -13.375326156616211
    6. ')' → logprob: -13.375326156616211
    7. '+' → logprob: -15.000326156616211
    8. '][' → logprob: -15.125326156616211
    9. '[i' → logprob: -15.375326156616211
    10. '])' → logprob: -15.875326156616211

Token 96: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.061987634748220444
    2. '+' → logprob: -2.8119876384735107
    3. ' ' → logprob: -11.06198787689209
    4. ' plus' → logprob: -13.31198787689209
    5. ' +
' → logprob: -14.43698787689209
    6. ' ' → logprob: -14.68698787689209
    7. '```' → logprob: -15.31198787689209
    8. '   ' → logprob: -15.56198787689209
    9. '    ' → logprob: -15.56198787689209
    10. '[' → logprob: -16.186986923217773

Token 97: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4758317172527313
    2. ' v' → logprob: -0.9758317470550537
    3. ' dt' → logprob: -7.350831508636475
    4. 'dt' → logprob: -7.600831508636475
    5. 'vx' → logprob: -7.975831508636475
    6. ' vx' → logprob: -8.475831985473633
    7. 'dx' → logprob: -11.100831985473633
    8. ' dx' → logprob: -11.475831985473633
    9. '   ' → logprob: -11.475831985473633
    10. ' ' → logprob: -11.850831985473633

Token 98: 'xs' (ID: 33335)
  Prédit: 'xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -4.5491004129871726e-05
    2. 'x' → logprob: -10.000045776367188
    3. ' xs' → logprob: -18.000045776367188
    4. 's' → logprob: -19.000045776367188
    5. '(xs' → logprob: -20.125045776367188
    6. '   ' → logprob: -20.625045776367188
    7. 'xes' → logprob: -20.750045776367188
    8. ' ' → logprob: -21.250045776367188
    9. 'xx' → logprob: -22.500045776367188
    10. '[' → logprob: -22.500045776367188

Token 99: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. ' [' → logprob: -15.625
    3. '[' → logprob: -15.875
    4. 'i' → logprob: -17.875
    5. '[I' → logprob: -19.375
    6. '```' → logprob: -19.5
    7. ' i' → logprob: -20.5
    8. '[
' → logprob: -21.5
    9. '[idx' → logprob: -21.75
    10. '{i' → logprob: -22.25

Token 100: ']*' (ID: 18579)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6087082028388977
    2. ']' → logprob: -0.9837082028388977
    3. '[i' → logprob: -2.983708143234253
    4. ']*' → logprob: -3.983708143234253
    5. '*' → logprob: -4.483708381652832
    6. ' ]' → logprob: -7.483708381652832
    7. '*i' → logprob: -7.733708381652832
    8. '[' → logprob: -8.608708381652832
    9. '][' → logprob: -8.858708381652832
    10. '   ' → logprob: -9.483708381652832

Token 101: 'dt' (ID: 12490)
  Prédit: 'dt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dt' → logprob: -0.014163863845169544
    2. ' dt' → logprob: -4.264163970947266
    3. '(dt' → logprob: -15.389163970947266
    4. '_dt' → logprob: -16.764163970947266
    5. 'd' → logprob: -18.764163970947266
    6. '.dt' → logprob: -19.139163970947266
    7. ' ' → logprob: -19.764163970947266
    8. '

' → logprob: -20.889163970947266
    9. 'dto' → logprob: -21.014163970947266
    10. 't' → logprob: -21.764163970947266

Token 102: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07123523950576782
    2. '<|end|>' → logprob: -2.821235179901123
    3. '           ' → logprob: -5.071235179901123
    4. '<|end|>' → logprob: -7.696235179901123
    5. '   ' → logprob: -7.946235179901123
    6. 'n' → logprob: -8.196235656738281
    7. '       ' → logprob: -8.196235656738281
    8. '\n' → logprob: -8.321235656738281
    9. ' y' → logprob: -8.321235656738281
    10. 'y' → logprob: -8.571235656738281

Token 103: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15174850821495056
    2. '           ' → logprob: -2.0267484188079834
    3. '\n' → logprob: -5.6517486572265625
    4. '<|end|>' → logprob: -6.5267486572265625
    5. '            
' → logprob: -7.0267486572265625
    6. '   ' → logprob: -7.0267486572265625
    7. 'n' → logprob: -7.9017486572265625
    8. ' y' → logprob: -8.026748657226562
    9. '       ' → logprob: -8.026748657226562
    10. 'y' → logprob: -8.151748657226562

Token 104: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.47840744256973267
    2. 'y' (adapté à ' y') → logprob: -0.9784074425697327
    3. '
' → logprob: -6.103407382965088
    4. '\n' → logprob: -7.103407382965088
    5. ' 
' → logprob: -7.478407382965088
    6. '            
' → logprob: -8.603407859802246
    7. ''y' → logprob: -9.228407859802246
    8. ' ' → logprob: -9.353407859802246
    9. '    
' → logprob: -9.728407859802246
    10. '           ' → logprob: -10.353407859802246

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2518109381198883
    2. '=' → logprob: -1.626810908317566
    3. 's' → logprob: -3.7518110275268555
    4. '[i' → logprob: -6.1268110275268555
    5. '<|end|>' → logprob: -8.626811027526855
    6. '[' → logprob: -8.751811027526855
    7. ' ' → logprob: -10.376811027526855
    8. '[s' → logprob: -11.501811027526855
    9. '<|end|>' → logprob: -12.626811027526855
    10. '   ' → logprob: -13.126811027526855

Token 106: ' ys' (ID: 67301)
  Prédit: ' ys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ys' → logprob: -0.01250989455729723
    2. 'ys' → logprob: -4.387509822845459
    3. ' ' → logprob: -16.887510299682617
    4. 'ysi' → logprob: -17.262510299682617
    5. 'ysy' → logprob: -17.262510299682617
    6. ' vys' → logprob: -17.887510299682617
    7. '   ' → logprob: -18.762510299682617
    8. ' yas' → logprob: -18.762510299682617
    9. 's' → logprob: -18.762510299682617
    10. ' xs' → logprob: -18.887510299682617

Token 107: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.125
    3. '<|end|>' → logprob: -17.375
    4. '```' → logprob: -17.75
    5. ' [' → logprob: -18.125
    6. '[I' → logprob: -18.5
    7. '[index' → logprob: -19.0
    8. '[
' → logprob: -19.0
    9. '[ii' → logprob: -19.25
    10. '[user' → logprob: -19.375

Token 108: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.016490362584590912
    2. ']' → logprob: -4.141490459442139
    3. '][' → logprob: -7.891490459442139
    4. ']+' → logprob: -9.89148998260498
    5. 'i' → logprob: -11.26648998260498
    6. '[' → logprob: -12.01648998260498
    7. '```' → logprob: -12.64148998260498
    8. ')' → logprob: -12.89148998260498
    9. '   ' → logprob: -13.14148998260498
    10. '+i' → logprob: -14.26648998260498

Token 109: ' +' (ID: 659)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.000000953674316
    3. '```' → logprob: -17.125
    4. 'i' → logprob: -17.875
    5. '[v' → logprob: -18.25
    6. 's' → logprob: -18.875
    7. '<|end|>' → logprob: -19.0
    8. ' [' → logprob: -19.125
    9. '[user' → logprob: -19.25
    10. '[
' → logprob: -19.75

Token 110: ' vys' (ID: 66128)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.20259371399879456
    2. ' vys' → logprob: -1.7025936841964722
    3. ' v' → logprob: -7.202593803405762
    4. 'ys' → logprob: -8.202593803405762
    5. 'y' → logprob: -10.327593803405762
    6. ' ' → logprob: -10.577593803405762
    7. ' ys' → logprob: -10.827593803405762
    8. 'vs' → logprob: -11.077593803405762
    9. '   ' → logprob: -11.952593803405762
    10. ' vyst' → logprob: -11.952593803405762

Token 111: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -13.750000953674316
    3. '```' → logprob: -16.500001907348633
    4. ' [' → logprob: -16.750001907348633
    5. '[I' → logprob: -16.750001907348633
    6. 'i' → logprob: -17.375001907348633
    7. '<|end|>' → logprob: -17.875001907348633
    8. '[ii' → logprob: -18.375001907348633
    9. '[user' → logprob: -18.875001907348633
    10. '[index' → logprob: -19.125001907348633

Token 112: ']*' (ID: 18579)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2824728786945343
    2. ']' → logprob: -1.907472848892212
    3. ']*' → logprob: -2.657472848892212
    4. '][' → logprob: -3.657472848892212
    5. 'i' → logprob: -6.532473087310791
    6. '   ' → logprob: -9.782472610473633
    7. '*i' → logprob: -9.782472610473633
    8. '```' → logprob: -10.657472610473633
    9. '_i' → logprob: -11.032472610473633
    10. '[' → logprob: -11.157472610473633

Token 113: 'dt' (ID: 12490)
  Prédit: 'dt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dt' → logprob: -0.00792576465755701
    2. 'i' → logprob: -5.007925987243652
    3. '[i' → logprob: -7.132925987243652
    4. '[' → logprob: -8.382925987243652
    5. ' dt' → logprob: -8.632925987243652
    6. ' i' → logprob: -12.757925987243652
    7. '(dt' → logprob: -14.632925987243652
    8. '   ' → logprob: -15.257925987243652
    9. '_dt' → logprob: -15.757925987243652
    10. 'd' → logprob: -16.257925033569336

Token 114: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.3451433409936726e-05
    2. 'return' → logprob: -11.000033378601074
    3. ' return' → logprob: -12.000033378601074
    4. '
' → logprob: -12.125033378601074
    5. '            
' → logprob: -12.875033378601074
    6. '       ' → logprob: -13.875033378601074
    7. '<|end|>' → logprob: -14.250033378601074
    8. '		' → logprob: -15.125033378601074
    9. '          ' → logprob: -15.500033378601074
    10. '               ' → logprob: -15.750033378601074

Token 115: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00020926215802319348
    2. 'return' → logprob: -8.625208854675293
    3. ' return' → logprob: -10.750208854675293
    4. '       ' → logprob: -12.500208854675293
    5. '
' → logprob: -13.375208854675293
    6. '		' → logprob: -13.750208854675293
    7. '            
' → logprob: -14.125208854675293
    8. '               ' → logprob: -14.625208854675293
    9. '   ' → logprob: -15.000208854675293
    10. '```' → logprob: -16.00020980834961

Token 116: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12719812989234924
    2. 'return' (adapté à ' return') → logprob: -2.3771982192993164
    3. ' return' → logprob: -3.6271982192993164
    4. '       ' → logprob: -10.502198219299316
    5. '   ' → logprob: -12.377198219299316
    6. '
' → logprob: -12.877198219299316
    7. '               ' → logprob: -13.627198219299316
    8. '		' → logprob: -13.627198219299316
    9. '	return' → logprob: -14.127198219299316
    10. '```' → logprob: -14.252198219299316

Token 117: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.30054694414138794
    2. '(x' → logprob: -1.5505468845367432
    3. 'x' → logprob: -3.300546884536743
    4. ' x' → logprob: -4.550547122955322
    5. '(' → logprob: -11.175546646118164
    6. '   ' → logprob: -12.425546646118164
    7. ' ' → logprob: -12.800546646118164
    8. '[x' → logprob: -12.800546646118164
    9. '{x' → logprob: -12.800546646118164
    10. '(int' → logprob: -13.800546646118164

Token 118: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00033546582562848926
    2. ' x' → logprob: -8.000335693359375
    3. ')x' → logprob: -17.250335693359375
    4. ')' → logprob: -18.625335693359375
    5. 'int' → logprob: -18.750335693359375
    6. '	x' → logprob: -20.000335693359375
    7. ' ' → logprob: -20.750335693359375
    8. '(x' → logprob: -20.875335693359375
    9. '   ' → logprob: -20.875335693359375
    10. '"x' → logprob: -22.125335693359375

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.539801688631997e-05
    2. ',y' → logprob: -10.125065803527832
    3. ' ,' → logprob: -10.625065803527832
    4. ',
' → logprob: -14.500065803527832
    5. ')' → logprob: -15.250065803527832
    6. '   ' → logprob: -16.125064849853516
    7. '),' → logprob: -17.375064849853516
    8. '<|end|>' → logprob: -17.750064849853516
    9. ',

' → logprob: -18.000064849853516
    10. '‌,' → logprob: -18.250064849853516

Token 120: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.1602255403995514
    2. 'y' → logprob: -1.910225510597229
    3. ')y' → logprob: -14.535225868225098
    4. ')' → logprob: -14.910225868225098
    5. ' ' → logprob: -15.660225868225098
    6. '<|end|>' → logprob: -16.03522491455078
    7. ' ' → logprob: -16.28522491455078
    8. ' )' → logprob: -16.91022491455078
    9. '	y' → logprob: -16.91022491455078
    10. ',y' → logprob: -17.41022491455078

Token 121: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0206720617134124e-05
    2. ')
' → logprob: -11.62501049041748
    3. ' )' → logprob: -14.12501049041748
    4. ')return' → logprob: -16.000009536743164
    5. '}' → logprob: -16.375009536743164
    6. '   ' → logprob: -16.500009536743164
    7. '<|end|>' → logprob: -16.750009536743164
    8. ',' → logprob: -17.375009536743164
    9. ')}' → logprob: -17.500009536743164
    10. ')#' → logprob: -17.875009536743164

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037312027998268604
    2. ' return' → logprob: -6.8787312507629395
    3. '
' → logprob: -7.0037312507629395
    4. 'return' → logprob: -7.1287312507629395
    5. '    
' → logprob: -7.7537312507629395
    6. '       ' → logprob: -8.753730773925781
    7. ' ' → logprob: -9.753730773925781
    8. '  ' → logprob: -9.753730773925781
    9. '#' → logprob: -10.128730773925781
    10. '	return' → logprob: -10.378730773925781

Token 123: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05088843032717705
    2. '#' (adapté à ' #') → logprob: -3.1758885383605957
    3. '   ' → logprob: -5.175888538360596
    4. 'if' → logprob: -6.925888538360596
    5. ' return' → logprob: -7.300888538360596
    6. '
' → logprob: -8.175888061523438
    7. 'else' → logprob: -9.300888061523438
    8. 'raise' → logprob: -10.050888061523438
    9. '    
' → logprob: -10.175888061523438
    10. 'None' → logprob: -10.800888061523438

Token 124: ' If' (ID: 1843)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7779894471168518
    2. 'if' → logprob: -1.152989387512207
    3. '#' → logprob: -1.902989387512207
    4. ' return' → logprob: -3.152989387512207
    5. ' if' → logprob: -3.527989387512207
    6. ' #' → logprob: -6.277989387512207
    7. 'If' → logprob: -7.152989387512207
    8. 't' → logprob: -7.777989387512207
    9. 'raise' → logprob: -8.777989387512207
    10. 'else' → logprob: -8.902989387512207

Token 125: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.1602318435907364
    2. 't' → logprob: -1.9102318286895752
    3. ' times' → logprob: -12.035231590270996
    4. 'times' → logprob: -14.535231590270996
    5. ' ' → logprob: -15.035231590270996
    6. '	t' → logprob: -15.160231590270996
    7. ' ' → logprob: -16.035232543945312
    8. '

' → logprob: -16.160232543945312
    9. '   ' → logprob: -16.410232543945312
    10. ' not' → logprob: -16.785232543945312

Token 126: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.302095502614975
    2. '<' → logprob: -2.052095413208008
    3. ' >' → logprob: -2.302095413208008
    4. '>' → logprob: -3.802095413208008
    5. ' <=' → logprob: -4.802095413208008
    6. '<=' → logprob: -6.552095413208008
    7. ' >=' → logprob: -8.927095413208008
    8. '>=' → logprob: -9.927095413208008
    9. ' is' → logprob: -10.677095413208008
    10. '<t' → logprob: -10.927095413208008

Token 127: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.5759406089782715
    2. ' times' → logprob: -0.8259406089782715
    3. 't' → logprob: -14.57594108581543
    4. 'robot' → logprob: -15.45094108581543
    5. 'time' → logprob: -15.45094108581543
    6. '(times' → logprob: -16.32594108581543
    7. '_times' → logprob: -16.95094108581543
    8. ' ' → logprob: -17.07594108581543
    9. 'Times' → logprob: -17.20094108581543
    10. ' robot' → logprob: -17.45094108581543

Token 128: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.000000953674316
    3. '-' → logprob: -16.75
    4. '```' → logprob: -17.125
    5. '[i' → logprob: -18.0
    6. '   ' → logprob: -18.375
    7. ' [-' → logprob: -18.625
    8. '[len' → logprob: -19.875
    9. '][-' → logprob: -19.875
    10. '[end' → logprob: -20.25

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6959590911865234
    2. ']' → logprob: -0.6959590911865234
    3. ']:' → logprob: -6.195959091186523
    4. '-' → logprob: -7.695959091186523
    5. ']:
' → logprob: -8.945959091186523
    6. 'i' → logprob: -10.570959091186523
    7. ' ' → logprob: -11.195959091186523
    8. ']:
' → logprob: -11.195959091186523
    9. 'ex' → logprob: -11.320959091186523
    10. '_' → logprob: -11.570959091186523

Token 130: ']
' (ID: 1592)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5946210026741028
    2. ':
' → logprob: -0.8446210026741028
    3. '):
' → logprob: -4.469621181488037
    4. '):' → logprob: -5.969621181488037
    5. ',' → logprob: -6.094621181488037
    6. ' :
' → logprob: -7.094621181488037
    7. ':return' → logprob: -7.094621181488037
    8. ' :' → logprob: -8.219620704650879
    9. ' ):
' → logprob: -9.094620704650879
    10. '   ' → logprob: -9.719620704650879

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29316526651382446
    2. ':' → logprob: -1.9181652069091797
    3. ':
' → logprob: -2.7931652069091797
    4. ' return' → logprob: -3.7931652069091797
    5. ',' → logprob: -4.41816520690918
    6. ':return' → logprob: -5.04316520690918
    7. 'return' → logprob: -5.54316520690918
    8. '       ' → logprob: -7.16816520690918
    9. '	return' → logprob: -9.16816520690918
    10. ' and' → logprob: -10.29316520690918

Token 132: ' if' (ID: 538)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6211605668067932
    2. 'return' → logprob: -1.3711605072021484
    3. '   ' → logprob: -1.6211605072021484
    4. ' if' → logprob: -4.746160507202148
    5. 'if' (adapté à ' if') → logprob: -5.996160507202148
    6. '	return' → logprob: -11.746160507202148
    7. ' ' → logprob: -12.246160507202148
    8. '  ' → logprob: -13.246160507202148
    9. '       ' → logprob: -13.246160507202148
    10. '    ' → logprob: -13.246160507202148

Token 133: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.0008056987426243722
    2. 't' → logprob: -7.125805854797363
    3. ' ' → logprob: -14.375805854797363
    4. ' times' → logprob: -14.375805854797363
    5. ' ' → logprob: -16.000804901123047
    6. '	t' → logprob: -19.000804901123047
    7. ' time' → logprob: -19.500804901123047
    8. ' abs' → logprob: -20.250804901123047
    9. 'times' → logprob: -21.063304901123047
    10. ' (' → logprob: -21.313304901123047

Token 134: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.016037186607718468
    2. '==' → logprob: -4.1410369873046875
    3. ' ' → logprob: -13.891036987304688
    4. ' >=' → logprob: -14.266036987304688
    5. ' <=' → logprob: -14.891036987304688
    6. '=' → logprob: -15.016036987304688
    7. ' ' → logprob: -15.391036987304688
    8. ')==' → logprob: -15.891036987304688
    9. ')' → logprob: -16.141036987304688
    10. '>=' → logprob: -16.516036987304688

Token 135: ' times' (ID: 4238)
  Prédit: ' times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.0004882152716163546
    2. 'times' → logprob: -7.62548828125
    3. ' ' → logprob: -16.12548828125
    4. '_times' → logprob: -16.87548828125
    5. ' robot' → logprob: -16.87548828125
    6. '(times' → logprob: -17.50048828125
    7. ' time' → logprob: -17.62548828125
    8. ' ' → logprob: -18.12548828125
    9. ' Times' → logprob: -18.87548828125
    10. '.times' → logprob: -19.37548828125

Token 136: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -4.127333340875339e-06
    2. '[' → logprob: -12.875003814697266
    3. '['' → logprob: -14.125003814697266
    4. ' [-' → logprob: -14.500003814697266
    5. '][-' → logprob: -15.750003814697266
    6. '[
' → logprob: -16.750003814697266
    7. ']' → logprob: -17.625003814697266
    8. '[len' → logprob: -18.625003814697266
    9. '   ' → logprob: -18.750003814697266
    10. '```' → logprob: -19.125003814697266

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.085517113911919e-05
    2. ' ' → logprob: -10.00005054473877
    3. '-' → logprob: -12.87505054473877
    4. ']' → logprob: -14.00005054473877
    5. '   ' → logprob: -14.00005054473877
    6. ')' → logprob: -15.87505054473877
    7. '  ' → logprob: -16.000051498413086
    8. '
' → logprob: -16.250051498413086
    9. ' -' → logprob: -16.312551498413086
    10. '```' → logprob: -16.437551498413086

Token 138: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08051750063896179
    2. '):
' → logprob: -2.580517530441284
    3. ')' → logprob: -6.580517292022705
    4. ' ):' → logprob: -8.955517768859863
    5. ':' → logprob: -9.830517768859863
    6. ' ):
' → logprob: -10.330517768859863
    7. '):
' → logprob: -11.705517768859863
    8. '):

' → logprob: -12.330517768859863
    9. ']:' → logprob: -12.830517768859863
    10. '   ' → logprob: -12.955517768859863

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12718048691749573
    2. ' return' → logprob: -2.377180576324463
    3. '   ' → logprob: -4.127180576324463
    4. 'return' → logprob: -4.752180576324463
    5. ':' → logprob: -6.877180576324463
    6. ':
' → logprob: -7.752180576324463
    7. ':return' → logprob: -9.002180099487305
    8. '	return' → logprob: -9.627180099487305
    9. ' x' → logprob: -10.252180099487305
    10. '    ' → logprob: -10.502180099487305

Token 140: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1927659809589386
    2. ' return' → logprob: -1.9427659511566162
    3. '   ' → logprob: -3.442765951156616
    4. '       ' → logprob: -10.692766189575195
    5. ' ' → logprob: -11.692766189575195
    6. '	return' → logprob: -12.067766189575195
    7. '  ' → logprob: -13.067766189575195
    8. '           ' → logprob: -13.942766189575195
    9. '
' → logprob: -14.567766189575195
    10. '    ' → logprob: -14.817766189575195

Token 141: ' (' (ID: 350)
  Prédit: '(xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xs' → logprob: -0.02985832467675209
    2. ' (' → logprob: -3.779858350753784
    3. '(' → logprob: -5.654858112335205
    4. '(x' → logprob: -5.779858112335205
    5. '   ' → logprob: -14.529858589172363
    6. ' ' → logprob: -15.029858589172363
    7. '(X' → logprob: -15.904858589172363
    8. ' xs' → logprob: -16.529857635498047
    9. '((' → logprob: -16.779857635498047
    10. '(xhr' → logprob: -16.779857635498047

Token 142: 'xs' (ID: 33335)
  Prédit: 'xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.04878300428390503
    2. ' xs' → logprob: -3.04878306388855
    3. '(xs' → logprob: -8.548783302307129
    4. '   ' → logprob: -14.548783302307129
    5. ' ' → logprob: -14.798783302307129
    6. ' (' → logprob: -14.923783302307129
    7. '(' → logprob: -15.048783302307129
    8. '  ' → logprob: -15.798783302307129
    9. 'x' → logprob: -16.923782348632812
    10. ')' → logprob: -17.423782348632812

Token 143: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -3.128163257315464e-07
    2. '][-' → logprob: -16.5
    3. '-' → logprob: -17.125
    4. '[' → logprob: -17.875
    5. ' [-' → logprob: -18.5
    6. '[len' → logprob: -18.625
    7. ')' → logprob: -21.625
    8. '[
' → logprob: -22.125
    9. '```' → logprob: -22.25
    10. '{-' → logprob: -22.5

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -16.000003814697266
    4. '])' → logprob: -16.750003814697266
    5. ']' → logprob: -16.937503814697266
    6. ')' → logprob: -17.500003814697266
    7. '```' → logprob: -17.875003814697266
    8. '  ' → logprob: -18.125003814697266
    9. '0' → logprob: -18.437503814697266
    10. ',' → logprob: -18.562503814697266

Token 145: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04909074679017067
    2. '],' → logprob: -3.04909086227417
    3. '),' → logprob: -8.299090385437012
    4. ' ,' → logprob: -8.424090385437012
    5. '},' → logprob: -11.424090385437012
    6. ']' → logprob: -11.799090385437012
    7. ' ],' → logprob: -12.049090385437012
    8. ' ' → logprob: -12.674090385437012
    9. '>,' → logprob: -13.049090385437012
    10. '   ' → logprob: -13.549090385437012

Token 146: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.02324605919420719
    2. ' ys' → logprob: -3.7732460498809814
    3. ' ' → logprob: -14.898245811462402
    4. '   ' → logprob: -17.14824676513672
    5. ' ' → logprob: -17.27324676513672
    6. ')' → logprob: -17.39824676513672
    7. 'yses' → logprob: -17.64824676513672
    8. 'ysi' → logprob: -17.77324676513672
    9. '  ' → logprob: -18.27324676513672
    10. 'ysin' → logprob: -18.39824676513672

Token 147: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.006857812404632568
    2. '-' → logprob: -5.006857872009277
    3. '][-' → logprob: -8.881857872009277
    4. ']' → logprob: -13.881857872009277
    5. '])' → logprob: -14.006857872009277
    6. '```' → logprob: -14.631857872009277
    7. '[
' → logprob: -15.131857872009277
    8. '1' → logprob: -15.756857872009277
    9. '[' → logprob: -15.881857872009277
    10. '(-' → logprob: -16.00685691833496

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -16.500003814697266
    4. '])' → logprob: -17.000003814697266
    5. '```' → logprob: -17.312503814697266
    6. '-' → logprob: -18.187503814697266
    7. ']' → logprob: -18.312503814697266
    8. '  ' → logprob: -18.312503814697266
    9. ')' → logprob: -18.937503814697266
    10. '۱' → logprob: -19.312503814697266

Token 149: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.107425062713446e-06
    2. ')
' → logprob: -12.000006675720215
    3. ' )' → logprob: -14.250006675720215
    4. '')' → logprob: -16.62500762939453
    5. ')

' → logprob: -16.75000762939453
    6. '}' → logprob: -17.37500762939453
    7. '))' → logprob: -17.37500762939453
    8. '   ' → logprob: -17.37500762939453
    9. ')}' → logprob: -17.37500762939453
    10. ')return' → logprob: -18.25000762939453

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40110132098197937
    2. '
' → logprob: -1.4011013507843018
    3. 'return' → logprob: -3.6511013507843018
    4. '<|end|>' → logprob: -4.151101112365723
    5. '    
' → logprob: -4.401101112365723
    6. '\n' → logprob: -4.401101112365723
    7. '#' → logprob: -5.276101112365723
    8. '\' → logprob: -5.401101112365723
    9. ' return' → logprob: -5.776101112365723
    10. ' ' → logprob: -7.526101112365723

Token 151: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.17538397014141083
    2. 'raise' → logprob: -2.550384044647217
    3. ' return' → logprob: -2.675384044647217
    4. ' raise' → logprob: -4.925384044647217
    5. '   ' → logprob: -5.550384044647217
    6. 'None' → logprob: -6.550384044647217
    7. ' None' → logprob: -7.300384044647217
    8. '#' (adapté à ' #') → logprob: -8.550383567810059
    9. '    
' → logprob: -8.550383567810059
    10. '
' → logprob: -9.175383567810059

Token 152: ' Just' (ID: 6214)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2363165318965912
    2. '#' → logprob: -2.236316442489624
    3. 'raise' → logprob: -2.361316442489624
    4. ' return' → logprob: -4.986316680908203
    5. ' raise' → logprob: -6.111316680908203
    6. ' #' → logprob: -8.986316680908203
    7. 'else' → logprob: -10.236316680908203
    8. 'Return' → logprob: -10.361316680908203
    9. 'Raise' → logprob: -10.611316680908203
    10. 'if' → logprob: -10.611316680908203

Token 153: ' in' (ID: 306)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.09963386505842209
    2. '   ' → logprob: -2.8496339321136475
    3. 'return' → logprob: -3.9746339321136475
    4. ' raise' → logprob: -4.349633693695068
    5. 'raise' → logprob: -6.349633693695068
    6. ' before' → logprob: -6.474633693695068
    7. '  ' → logprob: -7.474633693695068
    8. ' ' → logprob: -8.349634170532227
    9. ' after' → logprob: -8.599634170532227
    10. '#' → logprob: -8.599634170532227

Token 154: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.006989342160522938
    2. ' case' → logprob: -5.006989479064941
    3. 'return' → logprob: -8.881989479064941
    4. 'pass' → logprob: -9.756989479064941
    5. 'range' → logprob: -10.506989479064941
    6. 'time' → logprob: -10.756989479064941
    7. '   ' → logprob: -11.381989479064941
    8. 'cases' → logprob: -12.756989479064941
    9. 'the' → logprob: -12.881989479064941
    10. ' return' → logprob: -12.881989479064941

Token 155: '
' (ID: 198)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.06509314477443695
    2. 'return' → logprob: -3.0650930404663086
    3. ' None' → logprob: -4.690093040466309
    4. '   ' → logprob: -5.065093040466309
    5. 'None' → logprob: -7.190093040466309
    6. ' raise' → logprob: -9.440093040466309
    7. 'raise' → logprob: -10.940093040466309
    8. '(None' → logprob: -11.690093040466309
    9. '	return' → logprob: -11.940093040466309
    10. ' ' → logprob: -13.190093040466309

Token 156: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1262357085943222
    2. '   ' → logprob: -2.3762357234954834
    3. 'return' → logprob: -3.7512357234954834
    4. ' None' → logprob: -6.501235485076904
    5. ' raise' → logprob: -7.501235485076904
    6. 'raise' → logprob: -9.626235961914062
    7. 'None' → logprob: -10.001235961914062
    8. ' ' → logprob: -11.376235961914062
    9. '	return' → logprob: -11.876235961914062
    10. '(None' → logprob: -11.876235961914062

Token 157: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08337672799825668
    2. ' return' → logprob: -2.58337664604187
    3. 'raise' → logprob: -5.708376884460449
    4. '   ' → logprob: -7.458376884460449
    5. ' raise' → logprob: -7.458376884460449
    6. '#' → logprob: -13.08337688446045
    7. 'None' → logprob: -13.95837688446045
    8. ' None' → logprob: -14.20837688446045
    9. '
' → logprob: -14.20837688446045
    10. ' ' → logprob: -14.70837688446045

Token 158: ' (' (ID: 350)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.2142215520143509
    2. ' None' → logprob: -1.7142215967178345
    3. '(None' → logprob: -4.464221477508545
    4. '(' → logprob: -7.214221477508545
    5. ' (' → logprob: -7.714221477508545
    6. '(x' → logprob: -10.964221954345703
    7. '(xs' → logprob: -12.089221954345703
    8. ' ' → logprob: -12.839221954345703
    9. ' ' → logprob: -14.089221954345703
    10. '_None' → logprob: -14.464221954345703

Token 159: 'xs' (ID: 33335)
  Prédit: 'xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.22752311825752258
    2. '0' → logprob: -1.9775230884552002
    3. 'None' → logprob: -2.9775230884552
    4. ' xs' → logprob: -4.477523326873779
    5. ' None' → logprob: -6.102523326873779
    6. ' ' → logprob: -7.977523326873779
    7. 'float' → logprob: -9.227522850036621
    8. '(xs' → logprob: -10.477522850036621
    9. 'sys' → logprob: -10.852522850036621
    10. 'x' → logprob: -10.977522850036621

Token 160: '[' (ID: 58)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.2265617698431015
    2. '[' → logprob: -1.6015617847442627
    3. '0' → logprob: -6.976561546325684
    4. '-' → logprob: -8.476561546325684
    5. '][-' → logprob: -13.101561546325684
    6. ' ' → logprob: -13.851561546325684
    7. ' [-' → logprob: -14.101561546325684
    8. ')' → logprob: -14.476561546325684
    9. ' [' → logprob: -14.476561546325684
    10. ')[' → logprob: -14.851561546325684

Token 161: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00011129142512800172
    2. '0' → logprob: -9.87511157989502
    3. ' -' → logprob: -10.62511157989502
    4. '-i' → logprob: -11.12511157989502
    5. '-I' → logprob: -11.87511157989502
    6. '[-' → logprob: -12.25011157989502
    7. '-l' → logprob: -13.00011157989502
    8. '-L' → logprob: -13.25011157989502
    9. '-last' → logprob: -13.62511157989502
    10. ']-' → logprob: -15.12511157989502

Token 162: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.22593334317207336
    2. ',' → logprob: -1.600933313369751
    3. '),' → logprob: -8.100933074951172
    4. ']' → logprob: -9.600933074951172
    5. '[' → logprob: -10.100933074951172
    6. ' ,' → logprob: -10.350933074951172
    7. '],[' → logprob: -10.475933074951172
    8. ' ],' → logprob: -10.850933074951172
    9. '},' → logprob: -11.225933074951172
    10. '][' → logprob: -12.600933074951172

Token 163: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.07888989895582199
    2. ' ys' → logprob: -2.578889846801758
    3. ' ' → logprob: -16.453889846801758
    4. '   ' → logprob: -17.203889846801758
    5. '  ' → logprob: -18.578889846801758
    6. '0' → logprob: -18.578889846801758
    7. '    ' → logprob: -19.203889846801758
    8. ' ' → logprob: -19.203889846801758
    9. 'ysi' → logprob: -19.328889846801758
    10. 'Ys' → logprob: -19.328889846801758

Token 164: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005577972042374313
    2. '0' → logprob: -7.500557899475098
    3. '][' → logprob: -12.750557899475098
    4. '[
' → logprob: -14.500557899475098
    5. '```' → logprob: -14.875557899475098
    6. ']' → logprob: -15.000557899475098
    7. ' [' → logprob: -15.000557899475098
    8. '])' → logprob: -15.250557899475098
    9. 'def' → logprob: -16.37555694580078
    10. '   ' → logprob: -17.00055694580078

Token 165: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. ']' → logprob: -17.5
    4. '[' → logprob: -17.625
    5. '])' → logprob: -17.75
    6. '۰' → logprob: -17.875
    7. ')' → logprob: -17.9375
    8. '```' → logprob: -18.375
    9. '-' → logprob: -19.375
    10. '０' → logprob: -19.8125

Token 166: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -15.750000953674316
    3. '}' → logprob: -15.875000953674316
    4. ' )' → logprob: -16.125
    5. ')}' → logprob: -17.125
    6. '))' → logprob: -17.5
    7. '})' → logprob: -18.375
    8. '）' → logprob: -18.625
    9. ')`' → logprob: -18.625
    10. '')' → logprob: -18.75

Token 167: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4187373220920563
    2. '
' → logprob: -1.1687372922897339
    3. '

' → logprob: -3.5437374114990234
    4. '<|end|>' → logprob: -6.793737411499023
    5. '```' → logprob: -7.918737411499023
    6. '\n' → logprob: -8.418737411499023
    7. '\' → logprob: -9.168737411499023
    8. '#' → logprob: -9.418737411499023
    9. '  
' → logprob: -9.543737411499023
    10. ' def' → logprob: -9.543737411499023

Token 168: ' dist' (ID: 3601)
  Prédit: ' closest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' closest' → logprob: -0.8672059178352356
    2. ' min' → logprob: -1.9922058582305908
    3. ' main' → logprob: -2.367205858230591
    4. ' distance' → logprob: -2.742205858230591
    5. ' time' → logprob: -2.867205858230591
    6. ' max' → logprob: -3.117205858230591
    7. ' minimal' → logprob: -3.242205858230591
    8. ' find' → logprob: -3.617205858230591
    9. ' shortest' → logprob: -3.867205858230591
    10. ' total' → logprob: -4.24220609664917

Token 169: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07679368555545807
    2. '(a' → logprob: -2.826793670654297
    3. ' (' → logprob: -5.076793670654297
    4. '(x' → logprob: -5.451793670654297
    5. '_between' → logprob: -6.951793670654297
    6. '_' → logprob: -7.201793670654297
    7. '(robot' → logprob: -7.451793670654297
    8. '((' → logprob: -7.951793670654297
    9. '_squared' → logprob: -7.951793670654297
    10. '<|end|>' → logprob: -8.076793670654297

Token 170: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006843241862952709
    2. ' ,' → logprob: -5.006843090057373
    3. ',b' → logprob: -9.381843566894531
    4. '_,' → logprob: -10.881843566894531
    5. '(' → logprob: -11.631843566894531
    6. '(a' → logprob: -12.256843566894531
    7. ',p' → logprob: -12.881843566894531
    8. ',a' → logprob: -13.256843566894531
    9. '1' → logprob: -14.006843566894531
    10. '(),' → logprob: -14.131843566894531

Token 171: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019921588245779276
    2. '):
' → logprob: -6.251992225646973
    3. ')' → logprob: -10.251992225646973
    4. ' ):' → logprob: -10.751992225646973
    5. ',' → logprob: -12.876992225646973
    6. '):
' → logprob: -13.251992225646973
    7. '):

' → logprob: -13.876992225646973
    8. 'a' → logprob: -14.876992225646973
    9. ' ' → logprob: -15.001992225646973
    10. ':' → logprob: -15.626992225646973

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1950395554304123
    2. ' return' → logprob: -2.4450395107269287
    3. 'return' → logprob: -3.5700395107269287
    4. '(' → logprob: -3.8200395107269287
    5. ' math' → logprob: -3.9450395107269287
    6. '(math' → logprob: -5.070039749145508
    7. 'math' → logprob: -5.320039749145508
    8. '((' → logprob: -5.695039749145508
    9. ' (' → logprob: -6.195039749145508
    10. 'import' → logprob: -6.445039749145508

Token 173: ' return' (ID: 622)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.5059651732444763
    2. 'math' → logprob: -1.255965232849121
    3. '   ' → logprob: -2.505965232849121
    4. ' return' → logprob: -4.505965232849121
    5. 'return' (adapté à ' return') → logprob: -4.505965232849121
    6. '(math' → logprob: -5.005965232849121
    7. '((' → logprob: -7.130965232849121
    8. 'import' → logprob: -7.130965232849121
    9. ' ((' → logprob: -8.505965232849121
    10. '(' → logprob: -10.255965232849121

Token 174: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.3204291760921478
    2. ' math' → logprob: -1.3204292058944702
    3. '(math' → logprob: -5.57042932510376
    4. '((' → logprob: -5.82042932510376
    5. ' ((' → logprob: -7.94542932510376
    6. '(' → logprob: -11.570428848266602
    7. ' (' → logprob: -13.195428848266602
    8. ' ' → logprob: -14.945428848266602
    9. 'abs' → logprob: -15.570428848266602
    10. '.math' → logprob: -15.945428848266602

Token 175: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.0010173292830586433
    2. '.' → logprob: -7.376017093658447
    3. '.dist' → logprob: -8.001017570495605
    4. '.h' → logprob: -10.126017570495605
    5. '.s' → logprob: -11.626017570495605
    6. '.Sqrt' → logprob: -12.751017570495605
    7. '.atan' → logprob: -13.751017570495605
    8. '.pow' → logprob: -14.001017570495605
    9. ' .' → logprob: -14.626017570495605
    10. '.f' → logprob: -14.751017570495605

Token 176: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.038049064576625824
    2. '(' → logprob: -3.2880489826202393
    3. ' ((' → logprob: -12.41304874420166
    4. ' (' → logprob: -12.78804874420166
    5. '(
' → logprob: -14.53804874420166
    6. '   ' → logprob: -15.66304874420166
    7. '(x' → logprob: -15.91304874420166
    8. '(a' → logprob: -16.913049697875977
    9. ' ' → logprob: -17.038049697875977
    10. '[(' → logprob: -18.163049697875977

Token 177: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0564331205387134e-05
    2. ' a' → logprob: -11.62501049041748
    3. '(a' → logprob: -13.37501049041748
    4. '	a' → logprob: -17.250011444091797
    5. 'x' → logprob: -17.750011444091797
    6. ')a' → logprob: -18.250011444091797
    7. 'b' → logprob: -19.000011444091797
    8. ' (' → logprob: -20.000011444091797
    9. '(x' → logprob: -21.250011444091797
    10. '   ' → logprob: -21.500011444091797

Token 178: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '0' → logprob: -18.375
    3. 'x' → logprob: -20.25
    4. ' [' → logprob: -20.75
    5. '[
' → logprob: -21.375
    6. '```' → logprob: -21.375
    7. '
' → logprob: -21.75
    8. '   ' → logprob: -22.125
    9. '1' → logprob: -22.125
    10. '

' → logprob: -22.25

Token 179: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.500000953674316
    3. ' ' → logprob: -14.625000953674316
    4. '   ' → logprob: -16.625001907348633
    5. '
' → logprob: -17.125001907348633
    6. '

' → logprob: -17.750001907348633
    7. '```' → logprob: -18.750001907348633
    8. '۰' → logprob: -19.750001907348633
    9. '  ' → logprob: -20.000001907348633
    10. '1' → logprob: -20.125001907348633

Token 180: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.41033291816711426
    2. '-' → logprob: -1.1603329181671143
    3. '-b' → logprob: -3.7853329181671143
    4. '[' → logprob: -8.410332679748535
    5. ']' → logprob: -8.910332679748535
    6. ']-' → logprob: -9.660332679748535
    7. '0' → logprob: -10.410332679748535
    8. ' ' → logprob: -11.035332679748535
    9. 'b' → logprob: -11.785332679748535
    10. '   ' → logprob: -12.785332679748535

Token 181: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.15310683415737e-05
    2. ' b' → logprob: -10.750021934509277
    3. ')b' → logprob: -20.12502098083496
    4. '	b' → logprob: -20.62502098083496
    5. '   ' → logprob: -21.75002098083496
    6. ')' → logprob: -23.50002098083496
    7. '(b' → logprob: -23.62502098083496
    8. ' б' → logprob: -23.75002098083496
    9. ' ' → logprob: -24.00002098083496
    10. '  ' → logprob: -24.37502098083496

Token 182: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. '0' → logprob: -14.250000953674316
    3. '][' → logprob: -14.500000953674316
    4. ' [' → logprob: -15.875000953674316
    5. '1' → logprob: -16.625001907348633
    6. ' ' → logprob: -18.875001907348633
    7. ')[' → logprob: -19.375001907348633
    8. '[
' → logprob: -19.375001907348633
    9. '(' → logprob: -19.500001907348633
    10. '```' → logprob: -19.750001907348633

Token 183: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '[' → logprob: -17.125
    4. '   ' → logprob: -18.25
    5. '  ' → logprob: -20.0
    6. '۰' → logprob: -20.25
    7. '```' → logprob: -20.5
    8. '1' → logprob: -20.8125
    9. '(' → logprob: -21.1875
    10. '.' → logprob: -21.3125

Token 184: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.05747509375214577
    2. ')**' → logprob: -3.5574750900268555
    3. '[' → logprob: -3.6824750900268555
    4. ')' → logprob: -6.1824750900268555
    5. '   ' → logprob: -10.182475090026855
    6. ' )' → logprob: -10.432475090026855
    7. '0' → logprob: -11.432475090026855
    8. ']' → logprob: -11.432475090026855
    9. ' ])' → logprob: -11.807475090026855
    10. ' ' → logprob: -12.432475090026855

Token 185: '**' (ID: 410)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.013149880804121494
    2. '**' → logprob: -4.388149738311768
    3. ')' → logprob: -7.388149738311768
    4. '2' → logprob: -11.513150215148926
    5. '[' → logprob: -12.388150215148926
    6. '**)' → logprob: -12.763150215148926
    7. '```' → logprob: -12.888150215148926
    8. ' )' → logprob: -14.263150215148926
    9. '*' → logprob: -14.388150215148926
    10. ']' → logprob: -15.638150215148926

Token 186: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.180879816180095e-05
    2. ' ' → logprob: -9.875051498413086
    3. '۲' → logprob: -16.625051498413086
    4. '```' → logprob: -17.000051498413086
    5. '  ' → logprob: -17.125051498413086
    6. '   ' → logprob: -17.250051498413086
    7. '(' → logprob: -17.375051498413086
    8. ')' → logprob: -17.875051498413086
    9. '²' → logprob: -18.500051498413086
    10. '２' → logprob: -18.500051498413086

Token 187: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2857779860496521
    2. '+' → logprob: -1.5357780456542969
    3. '+(' → logprob: -3.410778045654297
    4. ' +(' → logprob: -8.285778045654297
    5. ')+(' → logprob: -12.660778045654297
    6. '+a' → logprob: -12.785778045654297
    7. '+
' → logprob: -13.160778045654297
    8. ',' → logprob: -13.535778045654297
    9. '(' → logprob: -13.535778045654297
    10. ')' → logprob: -13.785778045654297

Token 188: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.049188461154699326
    2. ' (' → logprob: -3.0491883754730225
    3. '(b' → logprob: -7.424188613891602
    4. '   ' → logprob: -13.299188613891602
    5. '  ' → logprob: -13.799188613891602
    6. ' ' → logprob: -14.299188613891602
    7. '(' → logprob: -14.299188613891602
    8. '(abs' → logprob: -15.799188613891602
    9. 'a' → logprob: -16.4241886138916
    10. '    ' → logprob: -16.6741886138916

Token 189: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.07987033575773239
    2. 'a' → logprob: -2.5798702239990234
    3. ' (' → logprob: -7.079870223999023
    4. ' a' → logprob: -9.079870223999023
    5. '(' → logprob: -10.954870223999023
    6. '   ' → logprob: -12.079870223999023
    7. '  ' → logprob: -14.579870223999023
    8. ' ' → logprob: -15.204870223999023
    9. '(b' → logprob: -16.079870223999023
    10. '    ' → logprob: -16.204870223999023

Token 190: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. '1' → logprob: -14.000001907348633
    3. ' [' → logprob: -15.750001907348633
    4. 'import' → logprob: -16.375001907348633
    5. 'def' → logprob: -16.750001907348633
    6. '0' → logprob: -16.875001907348633
    7. '(' → logprob: -17.125001907348633
    8. '[
' → logprob: -17.125001907348633
    9. '   ' → logprob: -17.250001907348633
    10. '][' → logprob: -17.250001907348633

Token 191: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. '0' → logprob: -12.000006675720215
    3. ' ' → logprob: -14.375006675720215
    4. '```' → logprob: -16.12500762939453
    5. '   ' → logprob: -16.87500762939453
    6. '[' → logprob: -17.00000762939453
    7. '4' → logprob: -17.75000762939453
    8. '3' → logprob: -18.81250762939453
    9. '  ' → logprob: -19.00000762939453
    10. '``' → logprob: -19.25000762939453

Token 192: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7605901956558228
    2. ']-' → logprob: -1.0105901956558228
    3. '[' → logprob: -2.010590076446533
    4. '][' → logprob: -3.510590076446533
    5. '0' → logprob: -5.635590076446533
    6. '-' → logprob: -7.135590076446533
    7. '1' → logprob: -8.510590553283691
    8. ' ' → logprob: -9.885590553283691
    9. 'def' → logprob: -9.885590553283691
    10. '   ' → logprob: -10.510590553283691

Token 193: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0008515591034665704
    2. '(b' → logprob: -7.250851631164551
    3. ' b' → logprob: -8.87585163116455
    4. '(' → logprob: -13.62585163116455
    5. ' (' → logprob: -15.75085163116455
    6. '0' → logprob: -15.87585163116455
    7. 'a' → logprob: -16.000850677490234
    8. ')b' → logprob: -16.125850677490234
    9. '(a' → logprob: -16.500850677490234
    10. '	b' → logprob: -17.125850677490234

Token 194: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08147833496332169
    2. '1' → logprob: -2.5814783573150635
    3. '0' → logprob: -6.456478118896484
    4. '-' → logprob: -7.581478118896484
    5. '][' → logprob: -8.456478118896484
    6. ' [' → logprob: -9.831478118896484
    7. '   ' → logprob: -9.831478118896484
    8. ']' → logprob: -9.956478118896484
    9. ' ' → logprob: -9.956478118896484
    10. '])' → logprob: -10.206478118896484

Token 195: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. '0' → logprob: -13.375004768371582
    3. ' ' → logprob: -13.375004768371582
    4. '[' → logprob: -14.375004768371582
    5. '   ' → logprob: -14.625004768371582
    6. '```' → logprob: -16.375003814697266
    7. '-' → logprob: -16.625003814697266
    8. '])' → logprob: -16.750003814697266
    9. '  ' → logprob: -17.500003814697266
    10. ']' → logprob: -17.625003814697266

Token 196: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.03767947107553482
    2. ']' → logprob: -3.537679433822632
    3. ')**' → logprob: -5.537679672241211
    4. ')' → logprob: -5.787679672241211
    5. '[' → logprob: -7.162679672241211
    6. '0' → logprob: -10.287679672241211
    7. '-' → logprob: -10.662679672241211
    8. '})' → logprob: -10.912679672241211
    9. '**' → logprob: -12.037679672241211
    10. '))' → logprob: -12.162679672241211

Token 197: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0007341049495153129
    2. ')**' → logprob: -7.250734329223633
    3. '2' → logprob: -11.250734329223633
    4. '**)' → logprob: -12.000734329223633
    5. ')' → logprob: -12.500734329223633
    6. '[' → logprob: -15.000734329223633
    7. ' **' → logprob: -15.125734329223633
    8. ']' → logprob: -15.500734329223633
    9. '*' → logprob: -15.500734329223633
    10. '()' → logprob: -15.625734329223633

Token 198: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -12.000008583068848
    3. '1' → logprob: -13.875008583068848
    4. '```' → logprob: -15.625008583068848
    5. '0' → logprob: -15.750008583068848
    6. '(' → logprob: -16.00000762939453
    7. '**' → logprob: -16.25000762939453
    8. ')' → logprob: -16.62500762939453
    9. '22' → logprob: -16.62500762939453
    10. '[' → logprob: -16.62500762939453

Token 199: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ' )' → logprob: -14.250001907348633
    3. '))' → logprob: -15.000001907348633
    4. '())' → logprob: -15.500001907348633
    5. ')
' → logprob: -15.875001907348633
    6. ')}' → logprob: -16.375001907348633
    7. ')**' → logprob: -17.000001907348633
    8. ')return' → logprob: -17.625001907348633
    9. '}' → logprob: -17.875001907348633
    10. ')`' → logprob: -18.375001907348633

Token 200: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.069664333248511e-05
    2. '
' → logprob: -11.250020980834961
    3. '

' → logprob: -12.875020980834961
    4. '```' → logprob: -13.250020980834961
    5. ' def' → logprob: -13.625020980834961
    6. 'import' → logprob: -14.125020980834961
    7. '\' → logprob: -14.500020980834961
    8. 'de' → logprob: -15.500020980834961
    9. '#' → logprob: -16.12502098083496
    10. '(def' → logprob: -16.50002098083496

Token 201: ' reachable' (ID: 143580)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.861295759677887
    2. 'can' → logprob: -0.986295759677887
    3. ' main' → logprob: -3.236295700073242
    4. 'main' → logprob: -3.361295700073242
    5. 'time' → logprob: -3.861295700073242
    6. 'collision' → logprob: -4.361295700073242
    7. 'min' → logprob: -4.736295700073242
    8. ' time' → logprob: -4.861295700073242
    9. ' earliest' → logprob: -4.861295700073242
    10. ' min' → logprob: -4.861295700073242

Token 202: '(' (ID: 7)
  Prédit: '(robot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(robot' → logprob: -0.5221381783485413
    2. '(' → logprob: -1.2721381187438965
    3. '_at' → logprob: -2.2721381187438965
    4. '_time' → logprob: -5.6471381187438965
    5. '(time' → logprob: -5.7721381187438965
    6. '(at' → logprob: -5.7721381187438965
    7. ' (' → logprob: -6.0221381187438965
    8. '_' → logprob: -6.0221381187438965
    9. '(t' → logprob: -6.8971381187438965
    10. '(a' → logprob: -7.1471381187438965

Token 203: 'robots' (ID: 136360)
  Prédit: 'robot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robot' → logprob: -0.3927662968635559
    2. 'robots' → logprob: -1.6427662372589111
    3. '(robot' → logprob: -2.267766237258911
    4. 'r' → logprob: -5.51776647567749
    5. 't' → logprob: -5.51776647567749
    6. ')' → logprob: -5.64276647567749
    7. 'rob' → logprob: -5.64276647567749
    8. 'time' → logprob: -6.01776647567749
    9. 'start' → logprob: -6.14276647567749
    10. '):' → logprob: -6.39276647567749

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008382192463614047
    2. '):' → logprob: -7.250838279724121
    3. '[' → logprob: -10.625838279724121
    4. ',r' → logprob: -10.750838279724121
    5. '(robot' → logprob: -10.875838279724121
    6. ' ,' → logprob: -11.125838279724121
    7. '):
' → logprob: -11.125838279724121
    8. 'robots' → logprob: -12.375838279724121
    9. ',n' → logprob: -12.875838279724121
    10. ',s' → logprob: -13.125838279724121

Token 205: ' R' (ID: 460)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.8167133331298828
    2. 't' → logprob: -1.1917133331298828
    3. ' t' → logprob: -2.566713333129883
    4. ' T' → logprob: -2.691713333129883
    5. 'start' → logprob: -3.316713333129883
    6. 'time' → logprob: -3.566713333129883
    7. ' start' → logprob: -3.816713333129883
    8. ' time' → logprob: -5.566713333129883
    9. 'max' → logprob: -5.566713333129883
    10. ' max' → logprob: -5.941713333129883

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005752088036388159
    2. '):' → logprob: -5.255752086639404
    3. '):
' → logprob: -7.755752086639404
    4. 's' → logprob: -11.380752563476562
    5. '_,' → logprob: -11.630752563476562
    6. ' ,' → logprob: -11.630752563476562
    7. '[' → logprob: -11.630752563476562
    8. ')' → logprob: -11.755752563476562
    9. '):

' → logprob: -11.755752563476562
    10. ',t' → logprob: -11.880752563476562

Token 207: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8733572363853455
    2. 'T' → logprob: -1.3733572959899902
    3. ' t' → logprob: -1.4983572959899902
    4. ' T' → logprob: -2.7483572959899902
    5. ' start' → logprob: -4.49835729598999
    6. 'start' → logprob: -4.74835729598999
    7. 'time' → logprob: -5.37335729598999
    8. ' time' → logprob: -6.18585729598999
    9. ' Tmax' → logprob: -6.74835729598999
    10. 'max' → logprob: -7.31085729598999

Token 208: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.017134016379714012
    2. ',' → logprob: -4.517134189605713
    3. '):
' → logprob: -5.767134189605713
    4. ')' → logprob: -6.517134189605713
    5. ' ):' → logprob: -6.642134189605713
    6. 's' → logprob: -9.392133712768555
    7. '1' → logprob: -10.267133712768555
    8. '):
' → logprob: -11.642133712768555
    9. '):

' → logprob: -11.642133712768555
    10. '_' → logprob: -11.767133712768555

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05798312649130821
    2. ' for' → logprob: -2.932983160018921
    3. 'for' → logprob: -6.182982921600342
    4. ' robots' → logprob: -7.932982921600342
    5. ' return' → logprob: -9.4329833984375
    6. '
' → logprob: -9.5579833984375
    7. 'def' → logprob: -9.6829833984375
    8. '    
' → logprob: -9.8079833984375
    9. '    ' → logprob: -9.8079833984375
    10. ':' → logprob: -10.0579833984375

Token 210: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3775579631328583
    2. '   ' → logprob: -2.0025579929351807
    3. ' for' → logprob: -2.5025579929351807
    4. 'positions' → logprob: -3.2525579929351807
    5. 'pos' → logprob: -3.7525579929351807
    6. ' positions' → logprob: -4.752557754516602
    7. 'n' → logprob: -4.877557754516602
    8. ' n' → logprob: -6.377557754516602
    9. 'points' → logprob: -6.502557754516602
    10. 'return' → logprob: -6.627557754516602

Token 211: ' Returns' (ID: 9609)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.8420377373695374
    2. 'for' → logprob: -0.9670377373695374
    3. 'pos' → logprob: -2.0920376777648926
    4. 'n' → logprob: -3.2170376777648926
    5. 'points' → logprob: -6.092037677764893
    6. 'def' → logprob: -6.092037677764893
    7. 'poses' → logprob: -6.342037677764893
    8. 'robot' → logprob: -6.342037677764893
    9. 'interval' → logprob: -6.592037677764893
    10. '#' → logprob: -6.717037677764893

Token 212: ' list' (ID: 1562)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.2054513692855835
    2. ' True' → logprob: -1.7054513692855835
    3. ' any' → logprob: -6.205451488494873
    4. 'any' → logprob: -6.705451488494873
    5. ' all' → logprob: -8.205451011657715
    6. 'all' → logprob: -8.705451011657715
    7. 'False' → logprob: -9.330451011657715
    8. '[' → logprob: -9.955451011657715
    9. 'for' → logprob: -9.955451011657715
    10. ' for' → logprob: -10.705451011657715

Token 213: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.27608129382133484
    2. '[]' → logprob: -2.5260813236236572
    3. '[i' → logprob: -3.0260813236236572
    4. '(robot' → logprob: -3.2760813236236572
    5. ' [' → logprob: -3.9010813236236572
    6. '([' → logprob: -4.151081085205078
    7. '(' → logprob: -4.776081085205078
    8. '(range' → logprob: -5.401081085205078
    9. '([(' → logprob: -5.901081085205078
    10. '   ' → logprob: -5.901081085205078

Token 214: ' sets' (ID: 11982)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.4580880403518677
    2. 'robots' → logprob: -1.5830880403518677
    3. 'reachable' → logprob: -1.9580880403518677
    4. 'robot' → logprob: -2.083087921142578
    5. '[i' → logprob: -2.083087921142578
    6. '[' → logprob: -2.458087921142578
    7. 'i' → logprob: -4.208087921142578
    8. '[(' → logprob: -5.083087921142578
    9. 'possible' → logprob: -5.083087921142578
    10. '[r' → logprob: -5.083087921142578

Token 215: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5212036967277527
    2. '(' → logprob: -1.0212037563323975
    3. '<|end|>' → logprob: -3.8962037563323975
    4. '[]' → logprob: -4.646203517913818
    5. '()' → logprob: -4.771203517913818
    6. '([' → logprob: -6.146203517913818
    7. '(
' → logprob: -7.521203517913818
    8. '[
' → logprob: -7.521203517913818
    9. '([(' → logprob: -7.771203517913818
    10. '()[' → logprob: -7.771203517913818

Token 216: ' connected' (ID: 12079)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.5134479999542236
    2. 'int' → logprob: -2.1384479999542236
    3. 'robots' → logprob: -2.2634479999542236
    4. 'positions' → logprob: -2.3884479999542236
    5. ' positions' → logprob: -4.0134477615356445
    6. ' int' → logprob: -4.0134477615356445
    7. ' reachable' → logprob: -4.1384477615356445
    8. 'possible' → logprob: -4.6384477615356445
    9. 'robot' → logprob: -4.8884477615356445
    10. ' robots' → logprob: -5.5134477615356445

Token 217: ' robots' (ID: 47605)
  Prédit: ' components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' components' → logprob: -0.25615403056144714
    2. 'components' → logprob: -1.8811540603637695
    3. 'robots' → logprob: -3.2561540603637695
    4. ' robots' → logprob: -3.3811540603637695
    5. ' nodes' → logprob: -8.13115406036377
    6. '_components' → logprob: -8.75615406036377
    7. ' indices' → logprob: -9.25615406036377
    8. ' robot' → logprob: -9.63115406036377
    9. '(robot' → logprob: -9.63115406036377
    10. 'robot' → logprob: -9.75615406036377

Token 218: ' at' (ID: 540)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9487161636352539
    2. ' =' → logprob: -0.9487161636352539
    3. ':' → logprob: -2.323716163635254
    4. '   ' → logprob: -3.198716163635254
    5. ' at' → logprob: -3.448716163635254
    6. '[' → logprob: -3.823716163635254
    7. ',' → logprob: -4.823716163635254
    8. '[]' → logprob: -5.198716163635254
    9. '(
' → logprob: -5.948716163635254
    10. '=' → logprob: -5.948716163635254

Token 219: ' time' (ID: 1058)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.48135650157928467
    2. ' t' → logprob: -1.1063565015792847
    3. 'time' → logprob: -3.981356620788574
    4. ' time' → logprob: -4.106356620788574
    5. ' each' → logprob: -4.356356620788574
    6. 'each' → logprob: -6.231356620788574
    7. ')' → logprob: -8.231356620788574
    8. ' times' → logprob: -8.606356620788574
    9. 'def' → logprob: -9.356356620788574
    10. ' ' → logprob: -9.481356620788574

Token 220: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.033746782690286636
    2. 't' → logprob: -3.4087467193603516
    3. ' ' → logprob: -9.908746719360352
    4. '(t' → logprob: -11.158746719360352
    5. '_t' → logprob: -11.783746719360352
    6. '   ' → logprob: -12.283746719360352
    7. ')' → logprob: -12.408746719360352
    8. '(' → logprob: -12.533746719360352
    9. '_' → logprob: -12.783746719360352
    10. ' (' → logprob: -13.033746719360352

Token 221: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4338119626045227
    2. '(' → logprob: -1.308811902999878
    3. '   ' → logprob: -2.808811902999878
    4. ':
' → logprob: -4.808812141418457
    5. '(robot' → logprob: -5.183812141418457
    6. ',' → logprob: -6.183812141418457
    7. '):' → logprob: -6.683812141418457
    8. '[' → logprob: -6.808812141418457
    9. '(
' → logprob: -7.058812141418457
    10. ')' → logprob: -7.933812141418457

Token 222: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11263368278741837
    2. '(' → logprob: -2.48763370513916
    3. '   ' → logprob: -3.98763370513916
    4. '():' → logprob: -6.61263370513916
    5. '[' → logprob: -6.86263370513916
    6. ':
' → logprob: -7.11263370513916
    7. ' :' → logprob: -7.48763370513916
    8. '):' → logprob: -7.86263370513916
    9. '(
' → logprob: -8.73763370513916
    10. 'def' → logprob: -9.11263370513916

Token 223: ' n' (ID: 297)
  Prédit: ' connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' connected' → logprob: -1.196829080581665
    2. ' connections' → logprob: -1.571829080581665
    3. '   ' → logprob: -1.821829080581665
    4. ' sets' → logprob: -2.571829080581665
    5. ' components' → logprob: -2.821829080581665
    6. 'connections' → logprob: -3.196829080581665
    7. ' result' → logprob: -3.696829080581665
    8. ' graph' → logprob: -3.946829080581665
    9. 'connected' → logprob: -3.946829080581665
    10. 'components' → logprob: -3.946829080581665

Token 224: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007643663790076971
    2. '=' → logprob: -4.882643699645996
    3. ')' → logprob: -11.132643699645996
    4. ',' → logprob: -12.007643699645996
    5. ' =
' → logprob: -12.382643699645996
    6. ' ' → logprob: -12.757643699645996
    7. ' =)' → logprob: -13.507643699645996
    8. '_space' → logprob: -13.757643699645996
    9. 'space' → logprob: -13.757643699645996
    10. '=len' → logprob: -14.007643699645996

Token 225: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4740784466266632
    2. ' len' → logprob: -0.9740784168243408
    3. '(len' → logprob: -13.724078178405762
    4. '=len' → logprob: -15.349078178405762
    5. '[len' → logprob: -16.599079132080078
    6. '	len' → logprob: -19.474079132080078
    7. ',len' → logprob: -20.099079132080078
    8. '<len' → logprob: -21.224079132080078
    9. '```' → logprob: -22.474079132080078
    10. 'Len' → logprob: -23.224079132080078

Token 226: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.6696149840718135e-05
    2. 'robots' → logprob: -9.875056266784668
    3. ' (' → logprob: -12.625056266784668
    4. ' robots' → logprob: -13.750056266784668
    5. '(robot' → logprob: -14.875056266784668
    6. '(ro' → logprob: -15.250056266784668
    7. '(
' → logprob: -15.625056266784668
    8. '(

' → logprob: -18.375057220458984
    9. ')' → logprob: -18.500057220458984
    10. '```' → logprob: -18.625057220458984

Token 227: 'robots' (ID: 136360)
  Prédit: 'robots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' → logprob: -0.00014740281039848924
    2. ' robots' → logprob: -9.000147819519043
    3. '(' → logprob: -11.125147819519043
    4. ')' → logprob: -11.875147819519043
    5. 'rob' → logprob: -13.500147819519043
    6. 'robot' → logprob: -14.625147819519043
    7. '```' → logprob: -16.375146865844727
    8. 'routers' → logprob: -16.500146865844727
    9. 'Rob' → logprob: -16.750146865844727
    10. 'r' → logprob: -17.500146865844727

Token 228: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002479104558005929
    2. ')
' → logprob: -6.002479076385498
    3. '   ' → logprob: -13.377479553222656
    4. ' )' → logprob: -14.127479553222656
    5. ')
' → logprob: -15.002479553222656
    6. ')

' → logprob: -15.502479553222656
    7. ')n' → logprob: -15.502479553222656
    8. '))' → logprob: -16.127479553222656
    9. 'def' → logprob: -16.627479553222656
    10. '),' → logprob: -17.627479553222656

Token 229: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.0042872428894043
    2. '
' → logprob: -1.6292872428894043
    3. '   ' → logprob: -1.6292872428894043
    4. '    
' → logprob: -2.3792872428894043
    5. ' connected' → logprob: -3.6292872428894043
    6. 'connections' → logprob: -4.379287242889404
    7. '  
' → logprob: -4.504287242889404
    8. 'connected' → logprob: -4.504287242889404
    9. '   
' → logprob: -4.754287242889404
    10. ' connections' → logprob: -4.754287242889404

Token 230: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.35532692074775696
    2. 'graph' → logprob: -1.6053268909454346
    3. 'parent' → logprob: -2.7303268909454346
    4. 'parents' → logprob: -4.480327129364014
    5. 'connections' → logprob: -4.730327129364014
    6. 'visited' → logprob: -5.480327129364014
    7. 'edges' → logprob: -6.230327129364014
    8. 'connected' → logprob: -6.355327129364014
    9. 'uf' → logprob: -6.730327129364014
    10. 'components' → logprob: -6.730327129364014

Token 231: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011218526400625706
    2. '=' → logprob: -4.511218547821045
    3. 'acency' → logprob: -9.386218070983887
    4. '[' → logprob: -9.636218070983887
    5. '=[]' → logprob: -11.386218070983887
    6. '[]' → logprob: -13.261218070983887
    7. '_list' → logprob: -13.636218070983887
    8. '=[' → logprob: -13.886218070983887
    9. 'acent' → logprob: -14.011218070983887
    10. ' =
' → logprob: -14.011218070983887

Token 232: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.059074144810438156
    2. ' [' → logprob: -3.5590741634368896
    3. ' [[]' → logprob: -3.5590741634368896
    4. '[[' → logprob: -7.8090739250183105
    5. '[n' → logprob: -11.059074401855469
    6. ' [[' → logprob: -12.184074401855469
    7. '[s' → logprob: -13.684074401855469
    8. '[node' → logprob: -14.184074401855469
    9. '[{' → logprob: -14.184074401855469
    10. '{' → logprob: -14.309074401855469

Token 233: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.693178653717041
    2. 'for' → logprob: -0.693178653717041
    3. ']' → logprob: -11.193178176879883
    4. ',' → logprob: -11.818178176879883
    5. ')' → logprob: -12.193178176879883
    6. ' ' → logprob: -13.068178176879883
    7. '
' → logprob: -13.568178176879883
    8. '	for' → logprob: -14.068178176879883
    9. '   ' → logprob: -14.443178176879883
    10. '```' → logprob: -15.193178176879883

Token 234: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0005107374745421112
    2. ' _' → logprob: -7.8755106925964355
    3. '_range' → logprob: -9.500511169433594
    4. ' range' → logprob: -9.875511169433594
    5. '_i' → logprob: -12.875511169433594
    6. 'range' → logprob: -13.750511169433594
    7. '_robot' → logprob: -15.500511169433594
    8. '_=' → logprob: -16.125511169433594
    9. ' ' → logprob: -16.375511169433594
    10. 'i' → logprob: -16.500511169433594

Token 235: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011711753904819489
    2. ' range' → logprob: -6.751171112060547
    3. 'in' → logprob: -14.251171112060547
    4. '(range' → logprob: -15.251171112060547
    5. 'n' → logprob: -17.376171112060547
    6. ' in' → logprob: -17.876171112060547
    7. ' ' → logprob: -18.251171112060547
    8. '	range' → logprob: -19.751171112060547
    9. '  ' → logprob: -20.126171112060547
    10. 'ange' → logprob: -20.251171112060547

Token 236: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009114635176956654
    2. ' range' → logprob: -7.000911235809326
    3. '(range' → logprob: -18.375911712646484
    4. '   ' → logprob: -19.000911712646484
    5. 'n' → logprob: -19.500911712646484
    6. ' ' → logprob: -19.625911712646484
    7. '	range' → logprob: -20.500911712646484
    8. '  ' → logprob: -20.500911712646484
    9. '_range' → logprob: -21.000911712646484
    10. '
' → logprob: -21.625911712646484

Token 237: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.6087021473795176e-05
    2. 'n' → logprob: -10.000045776367188
    3. ' (' → logprob: -15.500045776367188
    4. '(' → logprob: -15.625045776367188
    5. ' n' → logprob: -15.875045776367188
    6. ')n' → logprob: -16.750045776367188
    7. '	n' → logprob: -20.000045776367188
    8. ',n' → logprob: -20.125045776367188
    9. ')' → logprob: -20.250045776367188
    10. '[n' → logprob: -20.875045776367188

Token 238: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.895480277715251e-06
    2. ']' → logprob: -11.750008583068848
    3. ')]
' → logprob: -14.500008583068848
    4. '])]' → logprob: -15.875008583068848
    5. '])' → logprob: -16.000009536743164
    6. ')' → logprob: -16.000009536743164
    7. ')]

' → logprob: -16.625009536743164
    8. ' )' → logprob: -17.750009536743164
    9. '')]' → logprob: -17.875009536743164
    10. ')],' → logprob: -18.000009536743164

Token 239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07532788813114166
    2. ' for' → logprob: -3.0753278732299805
    3. '
' → logprob: -4.4503278732299805
    4. '    
' → logprob: -5.2003278732299805
    5. 'for' → logprob: -5.5753278732299805
    6. '<|end|>' → logprob: -6.0753278732299805
    7. ' 
' → logprob: -6.5753278732299805
    8. '  
' → logprob: -6.7003278732299805
    9. '   
' → logprob: -8.57532787322998
    10. ' ' → logprob: -9.57532787322998

Token 240: ' positions' (ID: 15897)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25411146879196167
    2. ' for' → logprob: -1.5041115283966064
    3. '   ' → logprob: -6.129111289978027
    4. '
' → logprob: -14.004111289978027
    5. '	for' → logprob: -15.129111289978027
    6. '```' → logprob: -15.504111289978027
    7. ' ' → logprob: -16.504112243652344
    8. '    
' → logprob: -16.629112243652344
    9. ' 
' → logprob: -18.129112243652344
    10. 'distance' → logprob: -18.254112243652344

Token 241: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061971161514520645
    2. ' =' → logprob: -2.8119711875915527
    3. '=[]' → logprob: -13.061970710754395
    4. ']' → logprob: -14.936970710754395
    5. '=[' → logprob: -15.686970710754395
    6. '＝' → logprob: -15.811970710754395
    7. '[:]' → logprob: -15.811970710754395
    8. ' at' → logprob: -16.06197166442871
    9. ' =[' → logprob: -16.06197166442871
    10. ')' → logprob: -16.18697166442871

Token 242: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13175135850906372
    2. '[pos' → logprob: -2.131751298904419
    3. ' [' → logprob: -5.881751537322998
    4. '[obj' → logprob: -7.131751537322998
    5. '[r' → logprob: -7.256751537322998
    6. '[t' → logprob: -9.25675106048584
    7. '[token' → logprob: -9.63175106048584
    8. '[position' → logprob: -9.75675106048584
    9. '[node' → logprob: -9.88175106048584
    10. '[get' → logprob: -10.63175106048584

Token 243: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.688212614681106e-05
    2. ' pos' → logprob: -11.000017166137695
    3. '(pos' → logprob: -16.875017166137695
    4. '   ' → logprob: -18.625017166137695
    5. '[pos' → logprob: -18.875017166137695
    6. '	pos' → logprob: -19.500017166137695
    7. '
' → logprob: -19.875017166137695
    8. ']' → logprob: -19.875017166137695
    9. '```' → logprob: -20.250017166137695
    10. 'pose' → logprob: -21.000017166137695

Token 244: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.375001907348633
    3. '_' → logprob: -16.125001907348633
    4. 'At' → logprob: -16.375001907348633
    5. 'at' → logprob: -16.500001907348633
    6. '[' → logprob: -17.125001907348633
    7. ')' → logprob: -17.750001907348633
    8. '_to' → logprob: -18.250001907348633
    9. 'robots' → logprob: -18.250001907348633
    10. ' at' → logprob: -18.625001907348633

Token 245: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.07990632951259613
    2. 'time' → logprob: -2.5799062252044678
    3. 'robots' → logprob: -7.204906463623047
    4. 'robot' → logprob: -8.704906463623047
    5. 't' → logprob: -9.829906463623047
    6. '_' → logprob: -10.829906463623047
    7. ' time' → logprob: -11.204906463623047
    8. 'Time' → logprob: -12.454906463623047
    9. '(robot' → logprob: -12.454906463623047
    10. 'ime' → logprob: -13.579906463623047

Token 246: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00028743778239004314
    2. '(robot' → logprob: -8.250287055969238
    3. 'robots' → logprob: -11.125287055969238
    4. '(r' → logprob: -11.875287055969238
    5. ' (' → logprob: -12.875287055969238
    6. '](' → logprob: -14.375287055969238
    7. '(ro' → logprob: -14.500287055969238
    8. '(
' → logprob: -14.875287055969238
    9. ']' → logprob: -15.750287055969238
    10. ' robots' → logprob: -16.125288009643555

Token 247: 'robots' (ID: 136360)
  Prédit: 'robots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' → logprob: -0.03087093122303486
    2. 'robot' → logprob: -3.5308709144592285
    3. 'r' → logprob: -6.9058709144592285
    4. ' robots' → logprob: -9.905871391296387
    5. '(' → logprob: -10.655871391296387
    6. 'rob' → logprob: -11.155871391296387
    7. '(robot' → logprob: -11.405871391296387
    8. ')' → logprob: -11.530871391296387
    9. ' robot' → logprob: -12.905871391296387
    10. '   ' → logprob: -13.780871391296387

Token 248: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01921677775681019
    2. ',' → logprob: -4.894217014312744
    3. '][' → logprob: -5.019217014312744
    4. '[' → logprob: -6.894217014312744
    5. ',i' → logprob: -6.894217014312744
    6. '[r' → logprob: -7.019217014312744
    7. '[j' → logprob: -7.894217014312744
    8. '(i' → logprob: -8.019216537475586
    9. '
' → logprob: -8.019216537475586
    10. '[k' → logprob: -8.769216537475586

Token 249: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009351630578748882
    2. ',t' → logprob: -7.625935077667236
    3. ' ,' → logprob: -7.750935077667236
    4. ',i' → logprob: -11.750935554504395
    5. ',r' → logprob: -12.625935554504395
    6. '],' → logprob: -13.250935554504395
    7. ' ' → logprob: -13.625935554504395
    8. '),' → logprob: -14.250935554504395
    9. '   ' → logprob: -15.250935554504395
    10. ',
' → logprob: -15.250935554504395

Token 250: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0040882546454668045
    2. ' t' → logprob: -5.504088401794434
    3. ')' → logprob: -12.254088401794434
    4. ')t' → logprob: -13.004088401794434
    5. '   ' → logprob: -13.504088401794434
    6. '
' → logprob: -13.754088401794434
    7. '	t' → logprob: -15.629088401794434
    8. ' ' → logprob: -15.879088401794434
    9. '    ' → logprob: -16.879087448120117
    10. '`t' → logprob: -17.629087448120117

Token 251: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.652451464906335e-05
    2. ')]' → logprob: -11.125016212463379
    3. ' )' → logprob: -13.375016212463379
    4. ')
' → logprob: -15.875016212463379
    5. '))' → logprob: -17.375017166137695
    6. ']' → logprob: -17.375017166137695
    7. ' ' → logprob: -19.000017166137695
    8. ')])' → logprob: -19.125017166137695
    9. ')`' → logprob: -19.250017166137695
    10. ')

' → logprob: -19.750017166137695

Token 252: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09182076901197433
    2. '   ' → logprob: -2.84182071685791
    3. ')' → logprob: -3.84182071685791
    4. ']' → logprob: -5.34182071685791
    5. 'for' → logprob: -5.84182071685791
    6. ')]' → logprob: -9.46682071685791
    7. ' ' → logprob: -9.71682071685791
    8. ' )' → logprob: -10.21682071685791
    9. '	for' → logprob: -10.71682071685791
    10. ' ]' → logprob: -10.84182071685791

Token 253: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.26965323090553284
    2. 'i' → logprob: -2.2696533203125
    3. ' i' → logprob: -2.2696533203125
    4. 'range' → logprob: -3.5196533203125
    5. ' in' → logprob: -10.0196533203125
    6. 'in' → logprob: -12.7696533203125
    7. ' ' → logprob: -13.1446533203125
    8. ' xrange' → logprob: -15.3946533203125
    9. ')' → logprob: -16.0196533203125
    10. '(range' → logprob: -16.3946533203125

Token 254: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3895857036113739
    2. 'in' → logprob: -1.1395857334136963
    3. 'range' → logprob: -6.014585494995117
    4. ' range' → logprob: -8.389585494995117
    5. 'i' → logprob: -10.514585494995117
    6. ')' → logprob: -11.514585494995117
    7. 'n' → logprob: -13.639585494995117
    8. ' i' → logprob: -13.639585494995117
    9. ']' → logprob: -14.764585494995117
    10. ' ' → logprob: -15.139585494995117

Token 255: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009114635176956654
    2. ' range' → logprob: -7.000911235809326
    3. '(range' → logprob: -20.125911712646484
    4. ' ' → logprob: -20.250911712646484
    5. '	range' → logprob: -21.625911712646484
    6. '
' → logprob: -21.750911712646484
    7. 'n' → logprob: -22.000911712646484
    8. '   ' → logprob: -22.500911712646484
    9. '  ' → logprob: -22.750911712646484
    10. ')' → logprob: -22.750911712646484

Token 256: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25748756527900696
    2. ' range' → logprob: -1.5074875354766846
    3. '(range' → logprob: -5.257487773895264
    4. '(n' → logprob: -8.132487297058105
    5. 'n' → logprob: -10.882487297058105
    6. ' in' → logprob: -11.257487297058105
    7. 'in' → logprob: -11.882487297058105
    8. ' n' → logprob: -14.257487297058105
    9. '	range' → logprob: -14.382487297058105
    10. ')' → logprob: -14.632487297058105

Token 257: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00048238897579722106
    2. ')' → logprob: -7.750482559204102
    3. ']' → logprob: -10.000482559204102
    4. ' )' → logprob: -12.125482559204102
    5. ' ]' → logprob: -15.375482559204102
    6. ')]
' → logprob: -15.375482559204102
    7. '   ' → logprob: -15.875482559204102
    8. ' ' → logprob: -16.6254825592041
    9. ')],' → logprob: -16.8754825592041
    10. '))' → logprob: -17.0004825592041

Token 258: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12345941364765167
    2. ' for' → logprob: -2.2484593391418457
    3. 'for' → logprob: -5.248459339141846
    4. '
' → logprob: -5.373459339141846
    5. '```' → logprob: -8.373459815979004
    6. '    
' → logprob: -8.623459815979004
    7. '<|end|>' → logprob: -8.623459815979004
    8. '  
' → logprob: -10.373459815979004
    9. ',' → logprob: -11.123459815979004
    10. ')' → logprob: -11.248459815979004

Token 259: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.32135388255119324
    2. ' for' → logprob: -1.3213539123535156
    3. '   ' → logprob: -4.821353912353516
    4. '
' → logprob: -12.946353912353516
    5. '	for' → logprob: -14.571353912353516
    6. '```' → logprob: -14.696353912353516
    7. '    
' → logprob: -15.696353912353516
    8. ' ' → logprob: -15.946353912353516
    9. '``' → logprob: -16.946353912353516
    10. ' 
' → logprob: -17.696353912353516

Token 260: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4740855395793915
    2. 'i' → logprob: -0.9740855693817139
    3. ' u' → logprob: -12.349085807800293
    4. 'u' → logprob: -13.099085807800293
    5. '	i' → logprob: -13.974085807800293
    6. '   ' → logprob: -14.474085807800293
    7. ' ' → logprob: -14.724085807800293
    8. '_i' → logprob: -15.349085807800293
    9. ' ' → logprob: -15.724085807800293
    10. '```' → logprob: -17.974084854125977

Token 261: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05490214377641678
    2. 'in' → logprob: -2.9299020767211914
    3. ' ' → logprob: -11.179902076721191
    4. '+' → logprob: -12.429902076721191
    5. '	in' → logprob: -14.804902076721191
    6. '  ' → logprob: -15.179902076721191
    7. '```' → logprob: -15.304902076721191
    8. '   ' → logprob: -15.304902076721191
    9. ' ' → logprob: -15.429902076721191
    10. '1' → logprob: -15.679902076721191

Token 262: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868711292743683
    2. ' range' → logprob: -1.136871099472046
    3. '(range' → logprob: -17.011871337890625
    4. ' ' → logprob: -17.636871337890625
    5. 'n' → logprob: -18.511871337890625
    6. '   ' → logprob: -20.011871337890625
    7. '  ' → logprob: -20.386871337890625
    8. 'ange' → logprob: -20.511871337890625
    9. '	range' → logprob: -20.511871337890625
    10. '```' → logprob: -21.261871337890625

Token 263: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.088346359931165e-07
    2. 'n' → logprob: -14.500000953674316
    3. '(' → logprob: -15.250000953674316
    4. ' n' → logprob: -16.875
    5. ' (' → logprob: -16.875
    6. 'range' → logprob: -19.125
    7. '(range' → logprob: -20.125
    8. '	n' → logprob: -20.25
    9. '   ' → logprob: -20.625
    10. '(len' → logprob: -21.5

Token 264: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10032787173986435
    2. '):' → logprob: -2.350327968597412
    3. '-' → logprob: -9.475327491760254
    4. '   ' → logprob: -10.975327491760254
    5. '):
' → logprob: -11.725327491760254
    6. ' ):
' → logprob: -11.725327491760254
    7. ')' → logprob: -12.600327491760254
    8. ' ):' → logprob: -12.600327491760254
    9. ' -' → logprob: -13.225327491760254
    10. '):

' → logprob: -14.350327491760254

Token 265: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.42163166403770447
    2. '       ' → logprob: -1.2966316938400269
    3. '   ' → logprob: -2.6716315746307373
    4. 'for' → logprob: -6.796631813049316
    5. '	for' → logprob: -8.296631813049316
    6. '    ' → logprob: -10.171631813049316
    7. ' ' → logprob: -11.546631813049316
    8. '	   ' → logprob: -12.296631813049316
    9. ' range' → logprob: -12.796631813049316
    10. '     ' → logprob: -13.421631813049316

Token 266: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20141461491584778
    2. 'for' (adapté à ' for') → logprob: -1.7014145851135254
    3. '   ' → logprob: -13.826415061950684
    4. ' j' → logprob: -15.451415061950684
    5. ' range' → logprob: -15.826415061950684
    6. '	for' → logprob: -16.951414108276367
    7. 'range' → logprob: -17.451414108276367
    8. 'j' → logprob: -17.951414108276367
    9. '```' → logprob: -18.701414108276367
    10. ' ' → logprob: -19.451414108276367

Token 267: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.4825565218925476
    2. 'j' → logprob: -0.9825565218925476
    3. ' range' → logprob: -4.982556343078613
    4. 'range' → logprob: -6.482556343078613
    5. 'i' → logprob: -10.232556343078613
    6. ' i' → logprob: -10.982556343078613
    7. '   ' → logprob: -13.607556343078613
    8. ' in' → logprob: -14.107556343078613
    9. '(j' → logprob: -14.232556343078613
    10. ' (' → logprob: -14.607556343078613

Token 268: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028809530194848776
    2. 'in' → logprob: -5.877881050109863
    3. ' i' → logprob: -9.877881050109863
    4. ' ' → logprob: -11.377881050109863
    5. '	in' → logprob: -12.002881050109863
    6. '=i' → logprob: -12.627881050109863
    7. 'i' → logprob: -13.502881050109863
    8. '(i' → logprob: -14.502881050109863
    9. '   ' → logprob: -15.002881050109863
    10. '[i' → logprob: -15.252881050109863

Token 269: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759549736976624
    2. ' range' → logprob: -0.8259549736976624
    3. '(range' → logprob: -11.200955390930176
    4. 'i' → logprob: -13.700955390930176
    5. '(i' → logprob: -15.075955390930176
    6. ' i' → logprob: -15.200955390930176
    7. ' ' → logprob: -16.95095443725586
    8. '	range' → logprob: -17.20095443725586
    9. '   ' → logprob: -17.82595443725586
    10. '_range' → logprob: -18.07595443725586

Token 270: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.019765306264162064
    2. ' range' → logprob: -4.644765377044678
    3. ' (' → logprob: -4.894765377044678
    4. ' i' → logprob: -6.644765377044678
    5. 'range' → logprob: -7.019765377044678
    6. '(range' → logprob: -8.89476490020752
    7. 'i' → logprob: -9.14476490020752
    8. '(' → logprob: -10.64476490020752
    9. '(n' → logprob: -12.64476490020752
    10. '   ' → logprob: -12.64476490020752

Token 271: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00193280098028481
    2. ' +' → logprob: -6.251932621002197
    3. '1' → logprob: -13.251933097839355
    4. '+
' → logprob: -14.251933097839355
    5. '+i' → logprob: -14.251933097839355
    6. '+j' → logprob: -14.251933097839355
    7. '   ' → logprob: -15.626933097839355
    8. ')+' → logprob: -16.00193214416504
    9. ' ' → logprob: -16.50193214416504
    10. '()+' → logprob: -16.50193214416504

Token 272: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001847062085289508
    2. ' ' → logprob: -8.625185012817383
    3. '   ' → logprob: -13.375185012817383
    4. '+' → logprob: -13.375185012817383
    5. '       ' → logprob: -15.125185012817383
    6. '```' → logprob: -15.125185012817383
    7. '
' → logprob: -15.250185012817383
    8. ')' → logprob: -16.000185012817383
    9. '           ' → logprob: -16.312685012817383
    10. ',' → logprob: -16.312685012817383

Token 273: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004635891877114773
    2. ' +' → logprob: -5.379635810852051
    3. '1' → logprob: -12.12963581085205
    4. ',' → logprob: -12.50463581085205
    5. '+
' → logprob: -13.00463581085205
    6. '   ' → logprob: -13.75463581085205
    7. '+n' → logprob: -14.12963581085205
    8. '+i' → logprob: -14.62963581085205
    9. '
' → logprob: -14.87963581085205
    10. '

' → logprob: -15.00463581085205

Token 274: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10020699352025986
    2. ' n' → logprob: -2.3502070903778076
    3. '	n' → logprob: -15.600207328796387
    4. ' ' → logprob: -15.975207328796387
    5. ')' → logprob: -16.85020637512207
    6. '   ' → logprob: -17.22520637512207
    7. ')n' → logprob: -17.47520637512207
    8. '
' → logprob: -18.10020637512207
    9. '(n' → logprob: -18.72520637512207
    10. '_n' → logprob: -18.97520637512207

Token 275: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31329089403152466
    2. '):' → logprob: -1.3132908344268799
    3. '):
' → logprob: -10.8132905960083
    4. '   ' → logprob: -12.9382905960083
    5. '):

' → logprob: -13.0632905960083
    6. ':' → logprob: -13.3132905960083
    7. ' ):
' → logprob: -13.6882905960083
    8. ' ):' → logprob: -14.1882905960083
    9. '       ' → logprob: -14.9382905960083
    10. '():
' → logprob: -15.4382905960083

Token 276: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.053672995418310165
    2. '       ' → logprob: -3.303673028945923
    3. ':' → logprob: -4.553672790527344
    4. ' if' → logprob: -6.178672790527344
    5. '<|end|>' → logprob: -6.678672790527344
    6. ':
' → logprob: -7.303672790527344
    7. ',' → logprob: -8.053672790527344
    8. '<|end|>' → logprob: -8.678672790527344
    9. '               ' → logprob: -9.678672790527344
    10. '):
' → logprob: -9.803672790527344

Token 277: ' d' (ID: 272)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.052636656910181046
    2. 'if' → logprob: -3.6776366233825684
    3. '
' → logprob: -4.177636623382568
    4. '           ' → logprob: -4.677636623382568
    5. ' dist' → logprob: -7.427636623382568
    6. '               ' → logprob: -8.177637100219727
    7. ' 
' → logprob: -8.427637100219727
    8. '       ' → logprob: -10.052637100219727
    9. '            
' → logprob: -10.177637100219727
    10. '   ' → logprob: -10.552637100219727

Token 278: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2523004114627838
    2. '=' → logprob: -1.5023003816604614
    3. 'ist' → logprob: -8.252300262451172
    4. 'istance' → logprob: -9.127300262451172
    5. ' ' → logprob: -14.877300262451172
    6. ',' → logprob: -15.127300262451172
    7. 'IST' → logprob: -15.627300262451172
    8. ')' → logprob: -15.877300262451172
    9. '	' → logprob: -16.002300262451172
    10. '   ' → logprob: -16.252300262451172

Token 279: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.005233882926404476
    2. ' dist' → logprob: -5.2552337646484375
    3. '	dist' → logprob: -15.880233764648438
    4. '(dist' → logprob: -16.755233764648438
    5. 'math' → logprob: -19.755233764648438
    6. '.dist' → logprob: -20.005233764648438
    7. 'distance' → logprob: -20.255233764648438
    8. 'd' → logprob: -20.380233764648438
    9. '_dist' → logprob: -20.755233764648438
    10. ' ' → logprob: -21.380233764648438

Token 280: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.4849443838757e-06
    2. ' (' → logprob: -13.000004768371582
    3. 'positions' → logprob: -13.125004768371582
    4. ' positions' → logprob: -16.375003814697266
    5. '(position' → logprob: -17.375003814697266
    6. '(points' → logprob: -19.625003814697266
    7. '(
' → logprob: -19.625003814697266
    8. '(states' → logprob: -20.375003814697266
    9. '(parts' → logprob: -21.000003814697266
    10. '((' → logprob: -21.000003814697266

Token 281: 'positions' (ID: 32297)
  Prédit: 'positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.0007897364557720721
    2. '(' → logprob: -7.250789642333984
    3. ' positions' → logprob: -9.500789642333984
    4. ')' → logprob: -12.250789642333984
    5. '.positions' → logprob: -17.125789642333984
    6. 'position' → logprob: -17.375789642333984
    7. ')(' → logprob: -17.500789642333984
    8. ' (' → logprob: -17.875789642333984
    9. 'Positions' → logprob: -19.125789642333984
    10. '_positions' → logprob: -19.125789642333984

Token 282: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02205757237970829
    2. '(i' → logprob: -4.27205753326416
    3. '[' → logprob: -5.02205753326416
    4. '(' → logprob: -7.52205753326416
    5. 'positions' → logprob: -8.39705753326416
    6. ')[' → logprob: -8.77205753326416
    7. ' positions' → logprob: -9.14705753326416
    8. ')' → logprob: -9.27205753326416
    9. ' [' → logprob: -9.89705753326416
    10. '([' → logprob: -10.77205753326416

Token 283: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.025945965200662613
    2. ',' → logprob: -4.150946140289307
    3. '],[' → logprob: -4.900946140289307
    4. '[' → logprob: -6.775946140289307
    5. ' ],' → logprob: -7.525946140289307
    6. '[i' → logprob: -8.400945663452148
    7. ' ,' → logprob: -8.650945663452148
    8. '),' → logprob: -9.150945663452148
    9. '][' → logprob: -9.525945663452148
    10. ' positions' → logprob: -10.025945663452148

Token 284: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.005234475247561932
    2. ' positions' → logprob: -5.255234241485596
    3. ')' → logprob: -14.505234718322754
    4. 'position' → logprob: -16.005233764648438
    5. '.positions' → logprob: -17.255233764648438
    6. '   ' → logprob: -17.380233764648438
    7. ' ' → logprob: -18.755233764648438
    8. 'Positions' → logprob: -18.755233764648438
    9. '_positions' → logprob: -18.755233764648438
    10. 'pos' → logprob: -18.880233764648438

Token 285: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -8.537868779967539e-06
    2. '[i' → logprob: -12.250008583068848
    3. ' [' → logprob: -13.250008583068848
    4. '[' → logprob: -13.500008583068848
    5. '[
' → logprob: -16.12500762939453
    6. 'j' → logprob: -16.12500762939453
    7. ')' → logprob: -16.37500762939453
    8. ' ' → logprob: -16.62500762939453
    9. '
' → logprob: -17.12500762939453
    10. '   ' → logprob: -17.25000762939453

Token 286: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016718693950679153
    2. ')
' → logprob: -9.000166893005371
    3. ' )' → logprob: -10.375166893005371
    4. ')<' → logprob: -12.375166893005371
    5. ')>' → logprob: -12.500166893005371
    6. ')<=' → logprob: -13.625166893005371
    7. ')`' → logprob: -13.875166893005371
    8. '))' → logprob: -13.875166893005371
    9. ')
' → logprob: -15.250166893005371
    10. ')**' → logprob: -15.250166893005371

Token 287: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18444852530956268
    2. ' <=' → logprob: -1.809448480606079
    3. '<=' → logprob: -5.684448719024658
    4. '<|end|>' → logprob: -7.309448719024658
    5. ')<=' → logprob: -8.4344482421875
    6. ' if' → logprob: -8.9344482421875
    7. '          ' → logprob: -9.6844482421875
    8. '
' → logprob: -10.1844482421875
    9. ' <' → logprob: -10.8094482421875
    10. '<|end|>' → logprob: -10.8094482421875

Token 288: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08322547376155853
    2. 'if' (adapté à ' if') → logprob: -2.7082254886627197
    3. '           ' → logprob: -4.458225250244141
    4. ' ' → logprob: -6.833225250244141
    5. ' 
' → logprob: -8.70822525024414
    6. '
' → logprob: -9.20822525024414
    7. '            ' → logprob: -9.45822525024414
    8. '<|end|>' → logprob: -10.33322525024414
    9. '            
' → logprob: -10.45822525024414
    10. '```' → logprob: -10.45822525024414

Token 289: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.07889077812433243
    2. 'd' → logprob: -2.578890800476074
    3. ' ' → logprob: -15.203890800476074
    4. '	d' → logprob: -15.203890800476074
    5. ' ' → logprob: -15.703890800476074
    6. '           ' → logprob: -16.328889846801758
    7. ')d' → logprob: -16.328889846801758
    8. '   ' → logprob: -16.828889846801758
    9. '_d' → logprob: -18.453889846801758
    10. ')' → logprob: -18.453889846801758

Token 290: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.005931401159614325
    2. '<=' → logprob: -5.130931377410889
    3. ' ' → logprob: -13.630931854248047
    4. ')<=' → logprob: -13.755931854248047
    5. ' <' → logprob: -16.255931854248047
    6. ']<=' → logprob: -16.380931854248047
    7. '[' → logprob: -16.505931854248047
    8. ' <=",' → logprob: -16.630931854248047
    9. ' ' → logprob: -17.005931854248047
    10. ' ≤' → logprob: -17.005931854248047

Token 291: ' R' (ID: 460)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.318584144115448
    2. ' R' → logprob: -1.3185842037200928
    3. 'R' → logprob: -5.568583965301514
    4. ' =' → logprob: -7.068583965301514
    5. ' ' → logprob: -7.443583965301514
    6. ' ' → logprob: -10.318584442138672
    7. '='' → logprob: -12.318584442138672
    8. ')' → logprob: -12.693584442138672
    9. ' or' → logprob: -12.693584442138672
    10. '1' → logprob: -13.318584442138672

Token 292: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11529058963060379
    2. '):' → logprob: -2.240290641784668
    3. '):
' → logprob: -6.990290641784668
    4. ':
' → logprob: -7.115290641784668
    5. ' ):' → logprob: -8.115290641784668
    6. ' :' → logprob: -8.240290641784668
    7. ' and' → logprob: -9.865290641784668
    8. ')' → logprob: -10.490290641784668
    9. '+' → logprob: -10.740290641784668
    10. '   ' → logprob: -11.615290641784668

Token 293: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016050323843955994
    2. ' ' → logprob: -4.141050338745117
    3. '=' → logprob: -11.641050338745117
    4. '0' → logprob: -12.891050338745117
    5. 'sys' → logprob: -13.891050338745117
    6. '   ' → logprob: -14.141050338745117
    7. ' ' → logprob: -14.891050338745117
    8. '+' → logprob: -14.891050338745117
    9. '-' → logprob: -15.016050338745117
    10. '10' → logprob: -15.391050338745117

Token 294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001842609723098576
    2. ' ' → logprob: -6.376842498779297
    3. 'R' → logprob: -9.376842498779297
    4. '0' → logprob: -11.376842498779297
    5. 'sys' → logprob: -11.626842498779297
    6. '   ' → logprob: -11.876842498779297
    7. '=' → logprob: -12.126842498779297
    8. ' R' → logprob: -12.376842498779297
    9. 'math' → logprob: -12.626842498779297
    10. '10' → logprob: -12.876842498779297

Token 295: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.001356667373329401
    2. ':' → logprob: -6.626356601715088
    3. ':
' → logprob: -11.126357078552246
    4. 'E' → logprob: -11.501357078552246
    5. '-' → logprob: -13.251357078552246
    6. '.' → logprob: -13.376357078552246
    7. '.e' → logprob: -14.001357078552246
    8. '[' → logprob: -15.001357078552246
    9. '0' → logprob: -15.126357078552246
    10. ':e' → logprob: -15.626357078552246

Token 296: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9361264946837764e-07
    2. ' -' → logprob: -17.125
    3. '   ' → logprob: -17.375
    4. '```' → logprob: -17.625
    5. 'e' → logprob: -18.5
    6. '(-' → logprob: -18.875
    7. '{-' → logprob: -18.875
    8. '[-' → logprob: -19.625
    9. '3' → logprob: -19.625
    10. '9' → logprob: -19.75

Token 297: '10' (ID: 702)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.21936574578285217
    2. '8' → logprob: -1.7193657159805298
    3. '7' → logprob: -4.71936559677124
    4. '10' → logprob: -5.09436559677124
    5. '12' → logprob: -6.09436559677124
    6. '-' → logprob: -8.094366073608398
    7. '6' → logprob: -8.844366073608398
    8. '14' → logprob: -11.219366073608398
    9. '11' → logprob: -11.844366073608398
    10. '5' → logprob: -12.094366073608398

Token 298: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12726709246635437
    2. ':
' → logprob: -2.1272671222686768
    3. '):
' → logprob: -9.377266883850098
    4. ' :' → logprob: -9.627266883850098
    5. ' :
' → logprob: -9.627266883850098
    6. '):' → logprob: -9.877266883850098
    7. '           ' → logprob: -9.877266883850098
    8. '       ' → logprob: -12.127266883850098
    9. '               ' → logprob: -12.502266883850098
    10. ':
' → logprob: -12.502266883850098

Token 299: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00657753087580204
    2. '           ' → logprob: -5.631577491760254
    3. ' adj' → logprob: -5.881577491760254
    4. '                   ' → logprob: -9.631577491760254
    5. 'adj' → logprob: -9.631577491760254
    6. '```' → logprob: -11.756577491760254
    7. '
' → logprob: -11.881577491760254
    8. ',' → logprob: -12.006577491760254
    9. '       ' → logprob: -12.506577491760254
    10. ' adjacency' → logprob: -12.756577491760254

Token 300: ' adj' (ID: 20251)
  Prédit: ' adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.0032209681812673807
    2. 'adj' (adapté à ' adj') → logprob: -5.753221035003662
    3. '
' → logprob: -10.878220558166504
    4. '           ' → logprob: -11.003220558166504
    5. '               ' → logprob: -12.253220558166504
    6. ' 
' → logprob: -13.503220558166504
    7. '(adj' → logprob: -14.878220558166504
    8. '                   ' → logprob: -15.253220558166504
    9. ' adjacency' → logprob: -15.253220558166504
    10. '   ' → logprob: -15.628220558166504

Token 301: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. ' [' → logprob: -14.375000953674316
    3. '[' → logprob: -16.75
    4. '[j' → logprob: -17.5
    5. '[I' → logprob: -18.375
    6. '```' → logprob: -19.125
    7. '\[' → logprob: -19.125
    8. 'i' → logprob: -19.75
    9. '][' → logprob: -20.625
    10. '[u' → logprob: -20.75

Token 302: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0043478719890117645
    2. '.append' → logprob: -5.504347801208496
    3. '.' → logprob: -8.254347801208496
    4. ').' → logprob: -12.004347801208496
    5. ' ].' → logprob: -13.754347801208496
    6. ']' → logprob: -14.379347801208496
    7. '[j' → logprob: -14.879347801208496
    8. ' .' → logprob: -15.254347801208496
    9. '.app' → logprob: -15.254347801208496
    10. '[i' → logprob: -16.004348754882812

Token 303: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.7697225252486533e-06
    2. ' append' → logprob: -13.000003814697266
    3. '.append' → logprob: -13.500003814697266
    4. 'appen' → logprob: -17.875003814697266
    5. 'push' → logprob: -18.375003814697266
    6. '_append' → logprob: -18.500003814697266
    7. 'Append' → logprob: -19.000003814697266
    8. 'app' → logprob: -20.000003814697266
    9. '	append' → logprob: -20.000003814697266
    10. 'add' → logprob: -20.125003814697266

Token 304: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.00033558503491804004
    2. 'j' → logprob: -8.000335693359375
    3. '(' → logprob: -16.500335693359375
    4. ' (' → logprob: -17.875335693359375
    5. '(
' → logprob: -18.250335693359375
    6. '	j' → logprob: -19.250335693359375
    7. ' j' → logprob: -19.375335693359375
    8. '[j' → logprob: -20.250335693359375
    9. ',j' → logprob: -20.250335693359375
    10. '((' → logprob: -21.875335693359375

Token 305: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2520352602005005
    2. ')' → logprob: -1.5020352602005005
    3. '               ' → logprob: -9.502035140991211
    4. ')
' → logprob: -10.752035140991211
    5. '           ' → logprob: -11.877035140991211
    6. ' )
' → logprob: -13.127035140991211
    7. ' )' → logprob: -15.002035140991211
    8. ')

' → logprob: -15.252035140991211
    9. '                   ' → logprob: -15.377035140991211
    10. '       ' → logprob: -15.877035140991211

Token 306: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03899068385362625
    2. '           ' → logprob: -4.038990497589111
    3. 'adj' → logprob: -4.413990497589111
    4. ' adj' → logprob: -5.038990497589111
    5. '                   ' → logprob: -6.663990497589111
    6. '
' → logprob: -7.663990497589111
    7. '```' → logprob: -9.16399097442627
    8. '       ' → logprob: -9.91399097442627
    9. '<|end|>' → logprob: -9.91399097442627
    10. '                
' → logprob: -11.28899097442627

Token 307: ' adj' (ID: 20251)
  Prédit: ' adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.00861468818038702
    2. 'adj' (adapté à ' adj') → logprob: -4.758614540100098
    3. '           ' → logprob: -16.883615493774414
    4. 'Adj' → logprob: -17.133615493774414
    5. '(adj' → logprob: -17.258615493774414
    6. ' aj' → logprob: -17.758615493774414
    7. '               ' → logprob: -19.008615493774414
    8. '   ' → logprob: -19.258615493774414
    9. '```' → logprob: -19.383615493774414
    10. 'ad' → logprob: -19.883615493774414

Token 308: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002986392646562308
    2. '[j' → logprob: -8.125298500061035
    3. '[' → logprob: -12.875298500061035
    4. '```' → logprob: -17.12529945373535
    5. ' [' → logprob: -17.87529945373535
    6. '   ' → logprob: -18.62529945373535
    7. '[I' → logprob: -19.00029945373535
    8. 'i' → logprob: -19.12529945373535
    9. '[
' → logprob: -19.37529945373535
    10. '[ii' → logprob: -20.50029945373535

Token 309: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.02979307807981968
    2. '[i' → logprob: -3.5297930240631104
    3. ']' → logprob: -11.404792785644531
    4. '.append' → logprob: -11.404792785644531
    5. ').' → logprob: -12.029792785644531
    6. ' ].' → logprob: -12.029792785644531
    7. '.' → logprob: -12.529792785644531
    8. '[' → logprob: -13.779792785644531
    9. '][' → logprob: -13.904792785644531
    10. '   ' → logprob: -13.904792785644531

Token 310: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.2664456789934775e-06
    2. 'adj' → logprob: -14.000000953674316
    3. ' append' → logprob: -14.875000953674316
    4. 'add' → logprob: -16.750001907348633
    5. '.append' → logprob: -17.250001907348633
    6. 'app' → logprob: -18.875001907348633
    7. 'i' → logprob: -19.250001907348633
    8. '	append' → logprob: -19.875001907348633
    9. 'appen' → logprob: -20.500001907348633
    10. '_append' → logprob: -20.625001907348633

Token 311: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.875
    3. '(
' → logprob: -18.75
    4. 'i' → logprob: -20.0
    5. ' (' → logprob: -20.125
    6. '   ' → logprob: -22.625
    7. '(I' → logprob: -23.75
    8. '[i' → logprob: -24.125
    9. '(ii' → logprob: -24.125
    10. ',i' → logprob: -24.25

Token 312: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.019237768370658e-05
    2. ')
' → logprob: -9.375090599060059
    3. '   ' → logprob: -13.500090599060059
    4. '<|end|>' → logprob: -13.500090599060059
    5. ' )' → logprob: -13.625090599060059
    6. '           ' → logprob: -15.500090599060059
    7. '
' → logprob: -15.750090599060059
    8. ')

' → logprob: -16.000089645385742
    9. '       ' → logprob: -16.000089645385742
    10. ']' → logprob: -16.250089645385742

Token 313: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8024272322654724
    2. '   ' → logprob: -1.3024272918701172
    3. '
' → logprob: -1.6774272918701172
    4. 'visited' → logprob: -2.552427291870117
    5. ' visited' → logprob: -4.927427291870117
    6. ' def' → logprob: -5.677427291870117
    7. '    
' → logprob: -5.802427291870117
    8. 'from' → logprob: -7.927427291870117
    9. '```' → logprob: -7.927427291870117
    10. '

' → logprob: -8.552427291870117

Token 314: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.013716085813939571
    2. 'def' → logprob: -4.513716220855713
    3. '   ' → logprob: -6.138716220855713
    4. ' visited' → logprob: -8.388715744018555
    5. '
' → logprob: -9.513715744018555
    6. 'seen' → logprob: -9.763715744018555
    7. 'vis' → logprob: -10.013715744018555
    8. '    
' → logprob: -10.138715744018555
    9. 'used' → logprob: -10.638715744018555
    10. 'components' → logprob: -11.013715744018555

Token 315: ' Build' (ID: 10885)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0008064138819463551
    2. 'seen' → logprob: -8.12580680847168
    3. 'def' → logprob: -8.25080680847168
    4. ' visited' → logprob: -8.50080680847168
    5. 'components' → logprob: -11.12580680847168
    6. 'used' → logprob: -11.37580680847168
    7. 'vis' → logprob: -11.75080680847168
    8. '#' → logprob: -12.12580680847168
    9. '   ' → logprob: -12.37580680847168
    10. 'Visited' → logprob: -14.50080680847168

Token 316: ' connected' (ID: 12079)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.2604486644268036
    2. ' visited' → logprob: -1.510448694229126
    3. 'components' → logprob: -5.260448455810547
    4. 'def' → logprob: -6.010448455810547
    5. 'seen' → logprob: -8.135448455810547
    6. ' components' → logprob: -8.635448455810547
    7. ' seen' → logprob: -9.510448455810547
    8. ' def' → logprob: -9.510448455810547
    9. 'connected' → logprob: -9.760448455810547
    10. 'sets' → logprob: -9.760448455810547

Token 317: ' components' (ID: 10674)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.5768832564353943
    2. '_components' → logprob: -1.076883316040039
    3. ' components' → logprob: -2.326883316040039
    4. 'component' → logprob: -10.701883316040039
    5. 'def' → logprob: -11.076883316040039
    6. '-components' → logprob: -11.201883316040039
    7. 'ness' → logprob: -11.576883316040039
    8. 'Components' → logprob: -11.701883316040039
    9. 'sets' → logprob: -11.826883316040039
    10. 'com' → logprob: -12.076883316040039

Token 318: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33943501114845276
    2. '   ' → logprob: -1.3394349813461304
    3. 'visited' → logprob: -4.21443510055542
    4. '    
' → logprob: -5.08943510055542
    5. ' visited' → logprob: -5.58943510055542
    6. 'def' → logprob: -7.08943510055542
    7. 'components' → logprob: -9.089434623718262
    8. '  
' → logprob: -9.839434623718262
    9. ' components' → logprob: -10.214434623718262
    10. ' def' → logprob: -11.089434623718262

Token 319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2188522219657898
    2. 'visited' → logprob: -2.2188522815704346
    3. ' visited' → logprob: -2.4688522815704346
    4. '
' → logprob: -6.5938520431518555
    5. '    
' → logprob: -7.2188520431518555
    6. ' components' → logprob: -8.093852043151855
    7. 'def' → logprob: -8.093852043151855
    8. 'components' → logprob: -8.468852043151855
    9. ' seen' → logprob: -9.468852043151855
    10. ' def' → logprob: -9.468852043151855

Token 320: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.005811125040054321
    2. ' visited' → logprob: -5.5058112144470215
    3. '   ' → logprob: -7.0058112144470215
    4. 'components' → logprob: -7.5058112144470215
    5. 'seen' → logprob: -8.880810737609863
    6. 'def' → logprob: -9.005810737609863
    7. '
' → logprob: -12.005810737609863
    8. ' seen' → logprob: -13.005810737609863
    9. '    
' → logprob: -13.380810737609863
    10. 'vis' → logprob: -13.505810737609863

Token 321: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693072855472565
    2. '=' → logprob: -2.1269307136535645
    3. '=[' → logprob: -13.376931190490723
    4. '=set' → logprob: -14.251931190490723
    5. ' =[' → logprob: -14.751931190490723
    6. '=[]' → logprob: -17.501930236816406
    7. '[' → logprob: -17.876930236816406
    8. '＝' → logprob: -17.876930236816406
    9. ' ' → logprob: -18.251930236816406
    10. ')' → logprob: -19.126930236816406

Token 322: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007106886710971594
    2. ' [' → logprob: -5.007106781005859
    3. '[n' → logprob: -8.00710678100586
    4. 'set' → logprob: -10.00710678100586
    5. ' set' → logprob: -12.00710678100586
    6. '[node' → logprob: -12.75710678100586
    7. '[i' → logprob: -13.88210678100586
    8. '[s' → logprob: -14.13210678100586
    9. '[start' → logprob: -15.13210678100586
    10. '[a' → logprob: -15.25710678100586

Token 323: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0001234428636962548
    2. ' False' → logprob: -9.000123023986816
    3. '0' → logprob: -20.250123977661133
    4. '(False' → logprob: -21.000123977661133
    5. '   ' → logprob: -22.500123977661133
    6. '=False' → logprob: -22.750123977661133
    7. '.False' → logprob: -23.750123977661133
    8. '
' → logprob: -24.625123977661133
    9. 'false' → logprob: -24.750123977661133
    10. '_false' → logprob: -25.250123977661133

Token 324: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6444873213768005
    2. ']' → logprob: -0.8944873213768005
    3. ']*' → logprob: -2.7694873809814453
    4. 'for' → logprob: -5.894487380981445
    5. ' ]' → logprob: -7.144487380981445
    6. ']*(' → logprob: -12.394487380981445
    7. '	for' → logprob: -12.644487380981445
    8. '   ' → logprob: -13.019487380981445
    9. ' ' → logprob: -13.019487380981445
    10. ']+' → logprob: -14.269487380981445

Token 325: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.630610641877865e-06
    2. ' n' → logprob: -12.250006675720215
    3. '(n' → logprob: -13.250006675720215
    4. '(' → logprob: -19.1250057220459
    5. 'len' → logprob: -20.2500057220459
    6. '
' → logprob: -20.6250057220459
    7. '	n' → logprob: -21.0000057220459
    8. '```' → logprob: -21.5000057220459
    9. '   ' → logprob: -21.6250057220459
    10. ' (' → logprob: -21.7500057220459

Token 326: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0005186012131161988
    2. '   ' → logprob: -8.250518798828125
    3. 'def' → logprob: -9.750518798828125
    4. '    
' → logprob: -9.750518798828125
    5. '<|end|>' → logprob: -9.875518798828125
    6. '
' → logprob: -10.125518798828125
    7. '  
' → logprob: -10.250518798828125
    8. ' 
' → logprob: -12.250518798828125
    9. '   
' → logprob: -13.625518798828125
    10. '

' → logprob: -13.625518798828125

Token 327: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4776132106781006
    2. '   ' → logprob: -1.4776132106781006
    3. 'def' → logprob: -1.9776132106781006
    4. '    
' → logprob: -5.35261344909668
    5. 'components' → logprob: -5.35261344909668
    6. ' def' → logprob: -5.85261344909668
    7. ' components' → logprob: -7.35261344909668
    8. '  
' → logprob: -9.85261344909668
    9. ' 
' → logprob: -10.35261344909668
    10. 'connected' → logprob: -11.35261344909668

Token 328: ' groups' (ID: 8896)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.08041466772556305
    2. 'def' → logprob: -2.5804147720336914
    3. '   ' → logprob: -7.080414772033691
    4. 'cc' → logprob: -7.830414772033691
    5. ' components' → logprob: -8.830414772033691
    6. '
' → logprob: -9.580414772033691
    7. '    
' → logprob: -10.830414772033691
    8. ' def' → logprob: -11.205414772033691
    9. 'com' → logprob: -11.205414772033691
    10. 'clusters' → logprob: -12.080414772033691

Token 329: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519890367984772
    2. ' =' → logprob: -1.5019890069961548
    3. '=[]' → logprob: -9.751989364624023
    4. '=[]
' → logprob: -13.751989364624023
    5. '   ' → logprob: -14.876989364624023
    6. ',' → logprob: -15.876989364624023
    7. '=[' → logprob: -16.126989364624023
    8. '=[]
' → logprob: -16.751989364624023
    9. ' ' → logprob: -17.626989364624023
    10. ']' → logprob: -17.626989364624023

Token 330: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.004790022503584623
    2. '[]

' → logprob: -5.50478982925415
    3. '[]
' → logprob: -7.25478982925415
    4. ' []' → logprob: -12.379790306091309
    5. '[' → logprob: -16.004789352416992
    6. '[]"' → logprob: -16.379789352416992
    7. ' []

' → logprob: -16.379789352416992
    8. '[])' → logprob: -17.504789352416992
    9. '[]}' → logprob: -17.629789352416992
    10. '=[]' → logprob: -17.879789352416992

Token 331: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2033454328775406
    2. '
' → logprob: -1.8283454179763794
    3. ' for' → logprob: -4.45334529876709
    4. 'def' → logprob: -4.95334529876709
    5. '    
' → logprob: -6.45334529876709
    6. 'for' → logprob: -6.45334529876709
    7. ' def' → logprob: -6.57834529876709
    8. ' 
' → logprob: -10.20334529876709
    9. '  
' → logprob: -11.07834529876709
    10. '   
' → logprob: -12.07834529876709

Token 332: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6553897857666016
    2. 'def' → logprob: -0.9053897857666016
    3. 'for' (adapté à ' for') → logprob: -3.2803897857666016
    4. '
' → logprob: -3.7803897857666016
    5. ' for' → logprob: -4.405389785766602
    6. ' def' → logprob: -5.655389785766602
    7. '    
' → logprob: -8.655389785766602
    8. ' stack' → logprob: -10.655389785766602
    9. 'stack' → logprob: -10.780389785766602
    10. '```' → logprob: -11.530389785766602

Token 333: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2018502652645111
    2. ' i' → logprob: -1.7018502950668335
    3. 'v' → logprob: -8.701849937438965
    4. 'u' → logprob: -9.076849937438965
    5. ' v' → logprob: -9.201849937438965
    6. ' u' → logprob: -9.826849937438965
    7. ' node' → logprob: -14.326849937438965
    8. 'node' → logprob: -14.701849937438965
    9. 'start' → logprob: -15.701849937438965
    10. '   ' → logprob: -16.20185089111328

Token 334: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03805159032344818
    2. 'in' → logprob: -3.2880516052246094
    3. ' ' → logprob: -11.78805160522461
    4. '	in' → logprob: -13.78805160522461
    5. 'n' → logprob: -14.78805160522461
    6. '  ' → logprob: -14.78805160522461
    7. 'import' → logprob: -15.28805160522461
    8. '_in' → logprob: -15.91305160522461
    9. 'In' → logprob: -16.16305160522461
    10. ',' → logprob: -16.28805160522461

Token 335: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078758880496025
    2. ' range' → logprob: -5.5040788650512695
    3. 'n' → logprob: -15.87907886505127
    4. '(range' → logprob: -16.129077911376953
    5. ' ' → logprob: -17.129077911376953
    6. '   ' → logprob: -17.754077911376953
    7. '	range' → logprob: -18.504077911376953
    8. '  ' → logprob: -19.004077911376953
    9. '
' → logprob: -19.254077911376953
    10. '```' → logprob: -20.004077911376953

Token 336: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00033665422233752906
    2. 'n' → logprob: -8.000336647033691
    3. '(' → logprob: -14.250336647033691
    4. ' n' → logprob: -14.750336647033691
    5. ' (' → logprob: -16.000337600708008
    6. '(len' → logprob: -16.750337600708008
    7. '	n' → logprob: -17.750337600708008
    8. '   ' → logprob: -18.750337600708008
    9. ')n' → logprob: -18.875337600708008
    10. '(
' → logprob: -19.125337600708008

Token 337: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0032021927181631327
    2. '):' → logprob: -5.753201961517334
    3. '):
' → logprob: -11.253202438354492
    4. ' ):
' → logprob: -12.003202438354492
    5. '   ' → logprob: -13.253202438354492
    6. ':
' → logprob: -13.503202438354492
    7. ')' → logprob: -13.753202438354492
    8. ':' → logprob: -14.503202438354492
    9. '():
' → logprob: -15.503202438354492
    10. ']:
' → logprob: -15.878202438354492

Token 338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012998805614188313
    2. ' if' → logprob: -6.751299858093262
    3. '<|end|>' → logprob: -9.876299858093262
    4. '   ' → logprob: -10.251299858093262
    5. '	   ' → logprob: -11.501299858093262
    6. 'if' → logprob: -12.251299858093262
    7. '<|end|>' → logprob: -12.376299858093262
    8. '        
' → logprob: -12.626299858093262
    9. '
' → logprob: -12.751299858093262
    10. '	' → logprob: -12.751299858093262

Token 339: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3888195753097534
    2. ' if' → logprob: -1.1388195753097534
    3. '   ' → logprob: -6.263819694519043
    4. '       ' → logprob: -10.263819694519043
    5. '	if' → logprob: -12.638819694519043
    6. '
' → logprob: -12.763819694519043
    7. '           ' → logprob: -14.388819694519043
    8. '    ' → logprob: -14.888819694519043
    9. 'If' → logprob: -15.263819694519043
    10. '```' → logprob: -15.763819694519043

Token 340: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.47408199310302734
    2. 'not' → logprob: -0.9740819931030273
    3. '!' → logprob: -13.474081993103027
    4. 'visited' → logprob: -13.474081993103027
    5. '   ' → logprob: -13.599081993103027
    6. '	not' → logprob: -14.599081993103027
    7. ' visited' → logprob: -15.849081993103027
    8. ' ' → logprob: -16.474082946777344
    9. '(not' → logprob: -16.724082946777344
    10. '
' → logprob: -17.224082946777344

Token 341: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.20141352713108063
    2. ' visited' → logprob: -1.7014135122299194
    3. ' ' → logprob: -15.45141315460205
    4. 'Visited' → logprob: -17.701414108276367
    5. 'visit' → logprob: -17.951414108276367
    6. '   ' → logprob: -18.076414108276367
    7. 'vis' → logprob: -18.451414108276367
    8. ' ' → logprob: -19.576414108276367
    9. '  ' → logprob: -19.826414108276367
    10. '
' → logprob: -19.951414108276367

Token 342: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -15.000000953674316
    3. ':
' → logprob: -15.625000953674316
    4. '[
' → logprob: -16.375
    5. ' [' → logprob: -17.25
    6. '   ' → logprob: -18.25
    7. ':' → logprob: -18.375
    8. 'i' → logprob: -19.0
    9. '(i' → logprob: -19.25
    10. '```' → logprob: -20.625

Token 343: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.09018121659755707
    2. ':
' → logprob: -2.4651811122894287
    3. ']:' → logprob: -7.590181350708008
    4. ':' → logprob: -7.840181350708008
    5. '):
' → logprob: -8.340181350708008
    6. '():
' → logprob: -9.465181350708008
    7. '   ' → logprob: -12.215181350708008
    8. ']' → logprob: -12.590181350708008
    9. ']:
' → logprob: -12.590181350708008
    10. ']:

' → logprob: -12.715181350708008

Token 344: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0216312687844038
    2. ':
' → logprob: -4.646631240844727
    3. '
' → logprob: -5.021631240844727
    4. '       ' → logprob: -5.771631240844727
    5. ':' → logprob: -7.271631240844727
    6. '	       ' → logprob: -7.896631240844727
    7. '            
' → logprob: -8.771631240844727
    8. '   ' → logprob: -8.896631240844727
    9. '```' → logprob: -9.021631240844727
    10. '[' → logprob: -9.396631240844727

Token 345: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.01576264202594757
    2. 'stack' (adapté à ' stack') → logprob: -4.265762805938721
    3. ' queue' → logprob: -6.515762805938721
    4. 'queue' → logprob: -9.390762329101562
    5. '           ' → logprob: -10.515762329101562
    6. '       ' → logprob: -12.390762329101562
    7. '   ' → logprob: -13.140762329101562
    8. '	stack' → logprob: -14.015762329101562
    9. '_stack' → logprob: -15.015762329101562
    10. '
' → logprob: -17.515762329101562

Token 346: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20157687366008759
    2. '=' → logprob: -1.701576828956604
    3. '=[' → logprob: -8.951577186584473
    4. ' =[' → logprob: -11.326577186584473
    5. '=[]' → logprob: -11.326577186584473
    6. '.append' → logprob: -11.701577186584473
    7. '   ' → logprob: -14.201577186584473
    8. '=[]
' → logprob: -14.576577186584473
    9. ' ' → logprob: -15.326577186584473
    10. '＝' → logprob: -16.076576232910156

Token 347: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0010548417922109365
    2. ' [' → logprob: -7.001054763793945
    3. '[' → logprob: -9.001054763793945
    4. '[ind' → logprob: -12.376054763793945
    5. '[item' → logprob: -12.501054763793945
    6. '[j' → logprob: -12.876054763793945
    7. '[int' → logprob: -13.126054763793945
    8. '[index' → logprob: -13.251054763793945
    9. '[idx' → logprob: -14.126054763793945
    10. '[id' → logprob: -14.376054763793945

Token 348: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.896309739408025e-07
    2. ' i' → logprob: -14.125000953674316
    3. '   ' → logprob: -18.625
    4. '	i' → logprob: -19.125
    5. '
' → logprob: -20.0
    6. ')i' → logprob: -20.375
    7. '```' → logprob: -20.625
    8. '{i' → logprob: -21.125
    9. '(i' → logprob: -21.375
    10. ',i' → logprob: -21.5

Token 349: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.01816680282354355
    2. ']' → logprob: -4.018167018890381
    3. ']
' → logprob: -11.393166542053223
    4. ' ]
' → logprob: -12.768166542053223
    5. '           ' → logprob: -14.018166542053223
    6. ']

' → logprob: -14.018166542053223
    7. '
' → logprob: -14.143166542053223
    8. ' ]' → logprob: -15.643166542053223
    9. '       ' → logprob: -16.64316749572754
    10. '   ' → logprob: -16.76816749572754

Token 350: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1597624272108078
    2. '
' → logprob: -2.284762382507324
    3. 'visited' → logprob: -3.534762382507324
    4. ' visited' → logprob: -4.534762382507324
    5. ' while' → logprob: -5.659762382507324
    6. '   ' → logprob: -6.909762382507324
    7. 'while' → logprob: -7.284762382507324
    8. '       ' → logprob: -8.534762382507324
    9. '            
' → logprob: -9.159762382507324
    10. '	       ' → logprob: -9.284762382507324

Token 351: ' comp' (ID: 1050)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.13985420763492584
    2. 'component' → logprob: -2.2648541927337646
    3. 'group' → logprob: -3.7648541927337646
    4. 'comp' (adapté à ' comp') → logprob: -7.014854431152344
    5. 'while' → logprob: -7.514854431152344
    6. '   ' → logprob: -7.764854431152344
    7. ' component' → logprob: -8.014854431152344
    8. ' visited' → logprob: -8.014854431152344
    9. '           ' → logprob: -8.139854431152344
    10. 'current' → logprob: -8.389854431152344

Token 352: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2633301615715027
    2. '=[]' → logprob: -1.7633302211761475
    3. '=[]
' → logprob: -3.3883302211761475
    4. 'onent' → logprob: -4.013329982757568
    5. 'on' → logprob: -5.763329982757568
    6. '=' → logprob: -5.763329982757568
    7. '   ' → logprob: -7.013329982757568
    8. '=set' → logprob: -9.013330459594727
    9. '=[
' → logprob: -9.263330459594727
    10. '[]' → logprob: -9.388330459594727

Token 353: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.004458724055439234
    2. 'set' → logprob: -6.004458904266357
    3. '[]
' → logprob: -6.504458904266357
    4. ' []' → logprob: -7.754458904266357
    5. ' set' → logprob: -10.0044584274292
    6. '{' → logprob: -11.7544584274292
    7. '[]}' → logprob: -14.0044584274292
    8. '[' → logprob: -14.2544584274292
    9. ' []
' → logprob: -14.8794584274292
    10. '{}' → logprob: -15.3794584274292

Token 354: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09899097681045532
    2. ' while' → logprob: -3.2239909172058105
    3. 'while' → logprob: -3.3489909172058105
    4. '       ' → logprob: -4.9739909172058105
    5. '   ' → logprob: -5.3489909172058105
    6. '	while' → logprob: -5.7239909172058105
    7. '	       ' → logprob: -6.2239909172058105
    8. '		' → logprob: -6.8489909172058105
    9. '
' → logprob: -7.4739909172058105
    10. '	   ' → logprob: -7.9739909172058105

Token 355: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.12914720177650452
    2. ' while' → logprob: -2.1291472911834717
    3. '           ' → logprob: -6.129147052764893
    4. '   ' → logprob: -11.00414752960205
    5. '	while' → logprob: -11.00414752960205
    6. '       ' → logprob: -12.87914752960205
    7. 'While' → logprob: -13.87914752960205
    8. '               ' → logprob: -14.12914752960205
    9. '
' → logprob: -14.75414752960205
    10. ' While' → logprob: -16.504146575927734

Token 356: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.006715967319905758
    2. ' stack' → logprob: -5.006715774536133
    3. 'len' → logprob: -15.381715774536133
    4. '	stack' → logprob: -15.756715774536133
    5. '(stack' → logprob: -15.881715774536133
    6. '   ' → logprob: -16.506715774536133
    7. ' ' → logprob: -17.756715774536133
    8. ' len' → logprob: -19.506715774536133
    9. '  ' → logprob: -19.631715774536133
    10. '    ' → logprob: -20.256715774536133

Token 357: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5235673785209656
    2. ':
' → logprob: -0.8985673785209656
    3. '.pop' → logprob: -8.398567199707031
    4. '):
' → logprob: -8.898567199707031
    5. '):' → logprob: -9.773567199707031
    6. ' and' → logprob: -12.273567199707031
    7. '```' → logprob: -12.523567199707031
    8. ']:' → logprob: -12.773567199707031
    9. 'pop' → logprob: -12.773567199707031
    10. ']:
' → logprob: -12.898567199707031

Token 358: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5989025831222534
    2. ' u' → logprob: -1.0989025831222534
    3. ' x' → logprob: -2.723902702331543
    4. ' node' → logprob: -4.598902702331543
    5. ' pop' → logprob: -4.598902702331543
    6. ' current' → logprob: -4.598902702331543
    7. ' v' → logprob: -5.098902702331543
    8. 'u' → logprob: -5.473902702331543
    9. '           ' → logprob: -5.473902702331543
    10. ' w' → logprob: -6.598902702331543

Token 359: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.27323320508003235
    2. ' u' → logprob: -1.52323317527771
    3. ' node' → logprob: -4.273233413696289
    4. 'node' → logprob: -5.023233413696289
    5. 'v' → logprob: -7.648233413696289
    6. ' v' → logprob: -9.648233413696289
    7. 'x' → logprob: -12.148233413696289
    8. 'curr' → logprob: -12.648233413696289
    9. 'cur' → logprob: -12.898233413696289
    10. 'w' → logprob: -13.398233413696289

Token 360: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011047935113310814
    2. '=' → logprob: -4.511047840118408
    3. '=u' → logprob: -16.63604736328125
    4. ' ' → logprob: -17.13604736328125
    5. ' =
' → logprob: -17.76104736328125
    6. '.pop' → logprob: -18.26104736328125
    7. 'stack' → logprob: -18.76104736328125
    8. '(stack' → logprob: -18.88604736328125
    9. '=int' → logprob: -19.13604736328125
    10. ')' → logprob: -19.38604736328125

Token 361: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.3132624924182892
    2. ' stack' → logprob: -1.3132624626159668
    3. '	stack' → logprob: -14.438262939453125
    4. '(stack' → logprob: -16.063262939453125
    5. '   ' → logprob: -17.438262939453125
    6. ' ' → logprob: -18.188262939453125
    7. 'st' → logprob: -18.813262939453125
    8. '.stack' → logprob: -18.938262939453125
    9. 'pop' → logprob: -19.438262939453125
    10. '_stack' → logprob: -19.438262939453125

Token 362: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -5.3358446166384965e-05
    2. 'pop' → logprob: -9.875053405761719
    3. ' pop' → logprob: -13.875053405761719
    4. '.' → logprob: -15.000053405761719
    5. '	pop' → logprob: -15.750053405761719
    6. '=' → logprob: -15.875053405761719
    7. ' =' → logprob: -16.37505340576172
    8. ' .' → logprob: -16.37505340576172
    9. 'Pop' → logprob: -17.37505340576172
    10. '   ' → logprob: -17.50005340576172

Token 363: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.20142221450805664
    2. '()' → logprob: -1.7014222145080566
    3. '()
' → logprob: -12.076421737670898
    4. '()

' → logprob: -13.326421737670898
    5. '())
' → logprob: -14.451421737670898
    6. '(' → logprob: -14.701421737670898
    7. ')
' → logprob: -16.2014217376709
    8. '()]' → logprob: -16.3264217376709
    9. '())' → logprob: -16.4514217376709
    10. '()]
' → logprob: -16.4514217376709

Token 364: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014128489419817924
    2. '
' → logprob: -4.514128684997559
    3. '           ' → logprob: -6.764128684997559
    4. ' if' → logprob: -7.014128684997559
    5. '                
' → logprob: -7.514128684997559
    6. '                   ' → logprob: -8.764128684997559
    7. ' 
' → logprob: -9.264128684997559
    8. '  
' → logprob: -9.764128684997559
    9. '<|end|>' → logprob: -10.014128684997559
    10. '            
' → logprob: -10.514128684997559

Token 365: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17122259736061096
    2. 'if' (adapté à ' if') → logprob: -1.9212225675582886
    3. 'visited' → logprob: -5.171222686767578
    4. ' visited' → logprob: -5.296222686767578
    5. ' comp' → logprob: -8.921222686767578
    6. ' not' → logprob: -9.796222686767578
    7. 'comp' → logprob: -10.046222686767578
    8. '
' → logprob: -12.046222686767578
    9. '               ' → logprob: -12.671222686767578
    10. 'not' → logprob: -12.796222686767578

Token 366: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.16037705540657043
    2. 'not' → logprob: -1.910377025604248
    3. 'visited' → logprob: -8.910377502441406
    4. ' visited' → logprob: -11.035377502441406
    5. '	not' → logprob: -13.910377502441406
    6. '   ' → logprob: -14.660377502441406
    7. 'u' → logprob: -16.035377502441406
    8. '(not' → logprob: -16.535377502441406
    9. '!' → logprob: -16.660377502441406
    10. ' ' → logprob: -17.160377502441406

Token 367: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.3868711292743683
    2. 'visited' → logprob: -1.136871099472046
    3. 'Visited' → logprob: -16.261871337890625
    4. 'vis' → logprob: -18.386871337890625
    5. ' ' → logprob: -19.136871337890625
    6. '   ' → logprob: -19.261871337890625
    7. 'visit' → logprob: -19.636871337890625
    8. '
' → logprob: -20.011871337890625
    9. ' visit' → logprob: -22.011871337890625
    10. 'u' → logprob: -22.261871337890625

Token 368: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -5.512236498361744e-07
    2. ' [' → logprob: -15.375000953674316
    3. 'u' → logprob: -15.625000953674316
    4. '[' → logprob: -16.25
    5. ' u' → logprob: -18.0
    6. '   ' → logprob: -19.625
    7. '(u' → logprob: -19.875
    8. '	u' → logprob: -20.375
    9. '[i' → logprob: -20.875
    10. '[v' → logprob: -21.25

Token 369: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.003210746217519045
    2. ']:' → logprob: -5.753210544586182
    3. ':
' → logprob: -10.75321102142334
    4. ']:

' → logprob: -12.37821102142334
    5. ']' → logprob: -12.75321102142334
    6. ']:
' → logprob: -13.12821102142334
    7. ':' → logprob: -14.12821102142334
    8. ' ]' → logprob: -14.50321102142334
    9. ']]:
' → logprob: -15.12821102142334
    10. '"]:
' → logprob: -15.37821102142334

Token 370: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10722542554140091
    2. 'visited' → logprob: -2.7322254180908203
    3. ' visited' → logprob: -3.4822254180908203
    4. '               ' → logprob: -5.48222541809082
    5. '
' → logprob: -7.10722541809082
    6. '                       ' → logprob: -7.98222541809082
    7. '           ' → logprob: -8.23222541809082
    8. '   ' → logprob: -9.48222541809082
    9. ' True' → logprob: -10.10722541809082
    10. '                    
' → logprob: -10.60722541809082

Token 371: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.019052693620324135
    2. 'visited' (adapté à ' visited') → logprob: -4.019052505493164
    3. '                   ' → logprob: -7.019052505493164
    4. '
' → logprob: -12.269052505493164
    5. '                       ' → logprob: -14.019052505493164
    6. 'Visited' → logprob: -14.144052505493164
    7. '               ' → logprob: -14.644052505493164
    8. '                    
' → logprob: -15.019052505493164
    9. '   ' → logprob: -15.644052505493164
    10. '                           ' → logprob: -15.894052505493164

Token 372: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.9361264946837764e-07
    2. ' [' → logprob: -16.0
    3. 'u' → logprob: -17.125
    4. '[' → logprob: -18.0
    5. '   ' → logprob: -18.5
    6. '
' → logprob: -19.625
    7. '                   ' → logprob: -19.875
    8. '               ' → logprob: -20.25
    9. '[user' → logprob: -20.875
    10. '	u' → logprob: -21.125

Token 373: ']' (ID: 60)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -9.85366350505501e-05
    2. ']' → logprob: -9.25009822845459
    3. ']=' → logprob: -13.12509822845459
    4. 'u' → logprob: -15.25009822845459
    5. '[' → logprob: -17.000099182128906
    6. '=' → logprob: -17.750099182128906
    7. '[
' → logprob: -18.250099182128906
    8. '=u' → logprob: -18.750099182128906
    9. '][' → logprob: -18.875099182128906
    10. '(u' → logprob: -19.500099182128906

Token 374: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0495978407561779
    2. ' =' → logprob: -3.04959774017334
    3. '[u' → logprob: -6.92459774017334
    4. '=True' → logprob: -11.54959774017334
    5. ']' → logprob: -11.67459774017334
    6. '[' → logprob: -12.17459774017334
    7. ']=' → logprob: -13.17459774017334
    8. '=
' → logprob: -14.17459774017334
    9. '[
' → logprob: -15.67459774017334
    10. 'u' → logprob: -16.049598693847656

Token 375: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.004078401252627373
    2. ' True' → logprob: -5.504078388214111
    3. '(True' → logprob: -19.004077911376953
    4. '1' → logprob: -21.629077911376953
    5. '=True' → logprob: -21.879077911376953
    6. 'true' → logprob: -22.254077911376953
    7. ' ' → logprob: -24.129077911376953
    8. '   ' → logprob: -24.129077911376953
    9. '
' → logprob: -24.754077911376953
    10. 'False' → logprob: -24.879077911376953

Token 376: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008183560334146023
    2. '
' → logprob: -4.883183479309082
    3. '               ' → logprob: -8.633183479309082
    4. '				' → logprob: -8.883183479309082
    5. '           ' → logprob: -9.383183479309082
    6. ',' → logprob: -9.758183479309082
    7. '                    
' → logprob: -10.633183479309082
    8. '		           ' → logprob: -10.758183479309082
    9. '<|end|>' → logprob: -10.883183479309082
    10. ',
' → logprob: -11.133183479309082

Token 377: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09122060984373093
    2. '
' → logprob: -2.4662206172943115
    3. '<|end|>' → logprob: -6.841220378875732
    4. '                    
' → logprob: -7.841220378875732
    5. '               ' → logprob: -8.09122085571289
    6. '           ' → logprob: -8.96622085571289
    7. '				' → logprob: -9.46622085571289
    8. ',' → logprob: -9.59122085571289
    9. ' 
' → logprob: -9.96622085571289
    10. '		           ' → logprob: -10.71622085571289

Token 378: ' comp' (ID: 1050)
  Prédit: ' comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comp' → logprob: -0.03831034526228905
    2. 'comp' (adapté à ' comp') → logprob: -3.2883102893829346
    3. '                   ' → logprob: -8.288310050964355
    4. '               ' → logprob: -11.788310050964355
    5. '	comp' → logprob: -12.038310050964355
    6. '           ' → logprob: -13.913310050964355
    7. '(comp' → logprob: -14.038310050964355
    8. '
' → logprob: -14.038310050964355
    9. '.comp' → logprob: -14.413310050964355
    10. ' comps' → logprob: -15.413310050964355

Token 379: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.176947600673884e-05
    2. '.' → logprob: -10.750021934509277
    3. '.app' → logprob: -15.875021934509277
    4. 'append' → logprob: -16.12502098083496
    5. '.ap' → logprob: -18.75002098083496
    6. '.Append' → logprob: -19.00002098083496
    7. '_append' → logprob: -20.12502098083496
    8. ' .' → logprob: -20.12502098083496
    9. '.APP' → logprob: -20.87502098083496
    10. ' append' → logprob: -21.00002098083496

Token 380: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -1.5048530030981055e-06
    2. 'u' → logprob: -14.125001907348633
    3. '(' → logprob: -14.250001907348633
    4. '(
' → logprob: -18.375001907348633
    5. '[u' → logprob: -19.875001907348633
    6. ' u' → logprob: -20.250001907348633
    7. ' (' → logprob: -21.000001907348633
    8. '	u' → logprob: -21.750001907348633
    9. '((' → logprob: -21.875001907348633
    10. ',u' → logprob: -23.375001907348633

Token 381: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10038533806800842
    2. ')
' → logprob: -2.3503854274749756
    3. '                   ' → logprob: -8.725385665893555
    4. ' )' → logprob: -12.600385665893555
    5. '               ' → logprob: -12.975385665893555
    6. ')

' → logprob: -13.100385665893555
    7. '           ' → logprob: -13.225385665893555
    8. '<|end|>' → logprob: -13.225385665893555
    9. ')
' → logprob: -13.350385665893555
    10. ' )
' → logprob: -13.725385665893555

Token 382: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0011041370453312993
    2. '           ' → logprob: -7.626104354858398
    3. ' for' → logprob: -8.501104354858398
    4. '               ' → logprob: -8.751104354858398
    5. '       ' → logprob: -9.126104354858398
    6. '
' → logprob: -10.126104354858398
    7. '   ' → logprob: -10.501104354858398
    8. 'for' → logprob: -10.751104354858398
    9. '```' → logprob: -11.001104354858398
    10. '		           ' → logprob: -11.126104354858398

Token 383: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04551411420106888
    2. ' for' → logprob: -3.7955141067504883
    3. '                   ' → logprob: -4.295514106750488
    4. 'stack' → logprob: -4.795514106750488
    5. ' stack' → logprob: -9.545514106750488
    6. '   ' → logprob: -10.295514106750488
    7. '
' → logprob: -11.670514106750488
    8. '	for' → logprob: -12.670514106750488
    9. '           ' → logprob: -12.920514106750488
    10. '               ' → logprob: -13.170514106750488

Token 384: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.20150436460971832
    2. ' w' → logprob: -1.7015043497085571
    3. 'v' → logprob: -9.451504707336426
    4. ' v' → logprob: -11.326504707336426
    5. 'neighbor' → logprob: -15.951504707336426
    6. 'vv' → logprob: -16.32650375366211
    7. ' nei' → logprob: -16.45150375366211
    8. 'nei' → logprob: -16.70150375366211
    9. '	w' → logprob: -18.07650375366211
    10. ''w' → logprob: -18.20150375366211

Token 385: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.061973731964826584
    2. 'in' → logprob: -2.811973810195923
    3. '	in' → logprob: -12.311973571777344
    4. 'w' → logprob: -14.311973571777344
    5. ' ' → logprob: -14.561973571777344
    6. 'n' → logprob: -15.686973571777344
    7. '_in' → logprob: -16.436973571777344
    8. 'In' → logprob: -16.811973571777344
    9. '   ' → logprob: -16.936973571777344
    10. '<|end|>' → logprob: -17.436973571777344

Token 386: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0031777136027812958
    2. ' adj' → logprob: -5.753177642822266
    3. '(adj' → logprob: -17.628177642822266
    4. 'ad' → logprob: -19.628177642822266
    5. '   ' → logprob: -20.628177642822266
    6. ' ' → logprob: -21.378177642822266
    7. 'Adj' → logprob: -22.253177642822266
    8. '    ' → logprob: -23.128177642822266
    9. '_adj' → logprob: -23.253177642822266
    10. '  ' → logprob: -23.253177642822266

Token 387: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.2127087504486553e-05
    2. 'u' → logprob: -10.750021934509277
    3. '[i' → logprob: -15.125021934509277
    4. '[' → logprob: -15.625021934509277
    5. '[w' → logprob: -16.375022888183594
    6. '[v' → logprob: -17.500022888183594
    7. '	u' → logprob: -17.500022888183594
    8. '```' → logprob: -17.625022888183594
    9. ' [' → logprob: -18.125022888183594
    10. '<u' → logprob: -18.250022888183594

Token 388: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.010247897356748581
    2. ']:' → logprob: -4.885247707366943
    3. ':
' → logprob: -6.135247707366943
    4. ':' → logprob: -8.260248184204102
    5. ']' → logprob: -9.510248184204102
    6. ']:
' → logprob: -10.135248184204102
    7. '():
' → logprob: -10.510248184204102
    8. '):
' → logprob: -10.885248184204102
    9. '       ' → logprob: -11.385248184204102
    10. '                   ' → logprob: -11.510248184204102

Token 389: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0003469057264737785
    2. ' stack' → logprob: -8.625347137451172
    3. ' if' → logprob: -10.250347137451172
    4. '                           ' → logprob: -10.750347137451172
    5. '                   ' → logprob: -10.750347137451172
    6. '	                   ' → logprob: -11.000347137451172
    7. '					' → logprob: -11.375347137451172
    8. '                        
' → logprob: -11.500347137451172
    9. 'stack' → logprob: -11.750347137451172
    10. '                        ' → logprob: -12.000347137451172

Token 390: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09709520637989044
    2. ' stack' → logprob: -2.847095251083374
    3. 'stack' → logprob: -3.597095251083374
    4. 'if' (adapté à ' if') → logprob: -4.972095012664795
    5. '                           ' → logprob: -8.847095489501953
    6. '                               ' → logprob: -10.972095489501953
    7. '   ' → logprob: -11.972095489501953
    8. '                       ' → logprob: -12.222095489501953
    9. '(stack' → logprob: -12.347095489501953
    10. '	stack' → logprob: -12.972095489501953

Token 391: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2519296407699585
    2. 'not' → logprob: -1.5019296407699585
    3. '(not' → logprob: -14.87692928314209
    4. '!' → logprob: -16.501930236816406
    5. '	not' → logprob: -16.876930236816406
    6. '   ' → logprob: -17.876930236816406
    7. '_not' → logprob: -18.876930236816406
    8. 'w' → logprob: -19.251930236816406
    9. '```' → logprob: -19.251930236816406
    10. ':not' → logprob: -19.501930236816406

Token 392: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.005233763717114925
    2. ' visited' → logprob: -5.2552337646484375
    3. '   ' → logprob: -18.755233764648438
    4. '
' → logprob: -19.005233764648438
    5. ' ' → logprob: -19.005233764648438
    6. 'visit' → logprob: -19.130233764648438
    7. 'visible' → logprob: -20.005233764648438
    8. 'Visited' → logprob: -20.755233764648438
    9. 'vis' → logprob: -21.380233764648438
    10. ' 
' → logprob: -21.630233764648438

Token 393: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -2.47495681833243e-05
    2. 'w' → logprob: -10.625024795532227
    3. '[' → logprob: -15.500024795532227
    4. '(w' → logprob: -15.875024795532227
    5. '<w' → logprob: -17.000024795532227
    6. ' [' → logprob: -18.000024795532227
    7. '	w' → logprob: -18.625024795532227
    8. '[u' → logprob: -18.625024795532227
    9. ' w' → logprob: -19.125024795532227
    10. '
' → logprob: -19.875024795532227

Token 394: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.0061243134550750256
    2. ']:' → logprob: -5.131124496459961
    3. ':
' → logprob: -9.381124496459961
    4. ']:
' → logprob: -10.131124496459961
    5. ']:

' → logprob: -10.631124496459961
    6. ']' → logprob: -11.256124496459961
    7. ':' → logprob: -11.881124496459961
    8. ' ]' → logprob: -11.881124496459961
    9. '():
' → logprob: -12.506124496459961
    10. '                       ' → logprob: -12.506124496459961

Token 395: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0034717784728854895
    2. ':
' → logprob: -6.878471851348877
    3. ' stack' → logprob: -6.878471851348877
    4. 'stack' → logprob: -7.253471851348877
    5. '                               ' → logprob: -8.003471374511719
    6. ':' → logprob: -9.128471374511719
    7. '                       ' → logprob: -9.253471374511719
    8. '           ' → logprob: -10.878471374511719
    9. '```' → logprob: -10.878471374511719
    10. '                            ' → logprob: -10.878471374511719

Token 396: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.6931481957435608
    2. 'stack' (adapté à ' stack') → logprob: -0.6931481957435608
    3. '	stack' → logprob: -14.568148612976074
    4. '(stack' → logprob: -15.193148612976074
    5. '                           ' → logprob: -16.568147659301758
    6. '.stack' → logprob: -17.443147659301758
    7. 'Stack' → logprob: -17.443147659301758
    8. '_stack' → logprob: -17.443147659301758
    9. '                               ' → logprob: -17.818147659301758
    10. '   ' → logprob: -18.693147659301758

Token 397: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.20603168499656e-05
    2. '.' → logprob: -9.750061988830566
    3. ' .' → logprob: -13.375061988830566
    4. 'append' → logprob: -13.750061988830566
    5. '.extend' → logprob: -14.500061988830566
    6. '.push' → logprob: -14.500061988830566
    7. '.Append' → logprob: -17.000062942504883
    8. '                           ' → logprob: -17.375062942504883
    9. '.app' → logprob: -17.500062942504883
    10. ' append' → logprob: -17.625062942504883

Token 398: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -2.47495681833243e-05
    2. '(' → logprob: -10.625024795532227
    3. 'w' → logprob: -15.000024795532227
    4. '(
' → logprob: -16.375024795532227
    5. ' (' → logprob: -17.750024795532227
    6. ')' → logprob: -20.125024795532227
    7. '((' → logprob: -20.125024795532227
    8. '	w' → logprob: -20.250024795532227
    9. '<w' → logprob: -20.500024795532227
    10. ' w' → logprob: -20.500024795532227

Token 399: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002656271681189537
    2. ')
' → logprob: -8.250266075134277
    3. ' )' → logprob: -13.500266075134277
    4. ')return' → logprob: -14.000266075134277
    5. '<|end|>' → logprob: -14.750266075134277
    6. ')

' → logprob: -15.500266075134277
    7. ')#' → logprob: -15.875266075134277
    8. ')}' → logprob: -15.875266075134277
    9. ')]' → logprob: -15.875266075134277
    10. ')}}' → logprob: -16.00026512145996

Token 400: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.692145012086257e-05
    2. '
' → logprob: -11.875046730041504
    3. 'return' → logprob: -12.125046730041504
    4. '		' → logprob: -12.250046730041504
    5. '               ' → logprob: -12.250046730041504
    6. ')' → logprob: -12.500046730041504
    7. '   ' → logprob: -12.500046730041504
    8. ',' → logprob: -12.750046730041504
    9. '```' → logprob: -12.750046730041504
    10. ' return' → logprob: -12.875046730041504

Token 401: ' groups' (ID: 8896)
  Prédit: ' groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' groups' → logprob: -0.5560247302055359
    2. 'groups' (adapté à ' groups') → logprob: -0.9310247302055359
    3. '   ' → logprob: -3.5560247898101807
    4. '(groups' → logprob: -6.056024551391602
    5. '           ' → logprob: -7.306024551391602
    6. '.groups' → logprob: -7.681024551391602
    7. '       ' → logprob: -8.681024551391602
    8. ')' → logprob: -10.181024551391602
    9. '```' → logprob: -10.181024551391602
    10. '_groups' → logprob: -11.181024551391602

Token 402: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005539863486774266
    2. '.' → logprob: -7.500554084777832
    3. '.app' → logprob: -14.250554084777832
    4. '.Append' → logprob: -16.125553131103516
    5. 'append' → logprob: -16.250553131103516
    6. '.extend' → logprob: -17.250553131103516
    7. '.ap' → logprob: -17.250553131103516
    8. ' .' → logprob: -17.875553131103516
    9. '.sort' → logprob: -18.375553131103516
    10. '.add' → logprob: -18.625553131103516

Token 403: '(comp' (ID: 60272)
  Prédit: '(comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(comp' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.000000953674316
    3. 'comp' → logprob: -16.125001907348633
    4. '(com' → logprob: -17.000001907348633
    5. '(sorted' → logprob: -17.125001907348633
    6. '(set' → logprob: -17.500001907348633
    7. '(tuple' → logprob: -19.625001907348633
    8. '(
' → logprob: -20.125001907348633
    9. ' (' → logprob: -20.125001907348633
    10. '(c' → logprob: -20.250001907348633

Token 404: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.265633419388905e-05
    2. ')
' → logprob: -9.750062942504883
    3. '   ' → logprob: -13.500062942504883
    4. '])' → logprob: -13.750062942504883
    5. ']' → logprob: -14.125062942504883
    6. ' )' → logprob: -14.875062942504883
    7. '))' → logprob: -15.125062942504883
    8. ')]' → logprob: -15.750062942504883
    9. ')return' → logprob: -16.250062942504883
    10. ')])' → logprob: -16.875062942504883

Token 405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013789254007861018
    2. '
' → logprob: -6.751379013061523
    3. 'return' → logprob: -9.376379013061523
    4. '    
' → logprob: -10.001379013061523
    5. '<|end|>' → logprob: -10.126379013061523
    6. '```' → logprob: -11.251379013061523
    7. ' return' → logprob: -11.376379013061523
    8. '	return' → logprob: -11.876379013061523
    9. ')' → logprob: -13.001379013061523
    10. '<|end|>' → logprob: -13.876379013061523

Token 406: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07932385802268982
    2. 'return' (adapté à ' return') → logprob: -2.5793237686157227
    3. ' return' → logprob: -7.829323768615723
    4. '
' → logprob: -10.954323768615723
    5. '	return' → logprob: -11.079323768615723
    6. '```' → logprob: -13.079323768615723
    7. '    
' → logprob: -14.204323768615723
    8. '       ' → logprob: -16.07932472229004
    9. ':return' → logprob: -16.32932472229004
    10. ' ' → logprob: -16.82932472229004

Token 407: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.00020354038861114532
    2. ' groups' → logprob: -8.500203132629395
    3. '(groups' → logprob: -16.62520408630371
    4. '.groups' → logprob: -19.25020408630371
    5. '[' → logprob: -20.87520408630371
    6. '_groups' → logprob: -22.00020408630371
    7. 'group' → logprob: -22.50020408630371
    8. 'roups' → logprob: -22.87520408630371
    9. 'Groups' → logprob: -23.37520408630371
    10. '```' → logprob: -23.87520408630371

Token 408: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.707744836807251
    2. '

' → logprob: -1.457744836807251
    3. '<|end|>' → logprob: -1.582744836807251
    4. 'def' → logprob: -2.707744836807251
    5. '<|end|>' → logprob: -6.457744598388672
    6. '```' → logprob: -7.832744598388672
    7. '\n' → logprob: -8.832744598388672
    8. '  
' → logprob: -9.957744598388672
    9. '


' → logprob: -10.082744598388672
    10. ')' → logprob: -10.332744598388672

Token 409: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0012697550700977445
    2. '<|end|>' → logprob: -7.251269817352295
    3. '
' → logprob: -7.751269817352295
    4. '```' → logprob: -9.751269340515137
    5. '

' → logprob: -10.501269340515137
    6. '<|end|>' → logprob: -10.626269340515137
    7. ' def' → logprob: -12.251269340515137
    8. '[' → logprob: -12.876269340515137
    9. 'import' → logprob: -13.251269340515137
    10. '\' → logprob: -13.251269340515137

Token 410: ' main' (ID: 2758)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.5796183347702026
    2. ' main' → logprob: -1.9546183347702026
    3. ' earliest' → logprob: -2.079618453979492
    4. ' find' → logprob: -2.329618453979492
    5. ' minimal' → logprob: -2.329618453979492
    6. ' min' → logprob: -2.329618453979492
    7. ' binary' → logprob: -2.829618453979492
    8. ' time' → logprob: -2.954618453979492
    9. 'time' → logprob: -3.954618453979492
    10. 'can' → logprob: -4.204618453979492

Token 411: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001794181764125824
    2. '():
' → logprob: -6.626794338226318
    3. '(' → logprob: -7.751794338226318
    4. '()' → logprob: -11.00179386138916
    5. ' ():' → logprob: -11.12679386138916
    6. '_' → logprob: -13.62679386138916
    7. '():
' → logprob: -13.75179386138916
    8. '(args' → logprob: -14.00179386138916
    9. '(argv' → logprob: -14.12679386138916
    10. '():

' → logprob: -14.25179386138916

Token 412: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030369354411959648
    2. ' import' → logprob: -3.780369281768799
    3. ' n' → logprob: -5.905369281768799
    4. 'import' → logprob: -6.780369281768799
    5. ' input' → logprob: -6.780369281768799
    6. ' readline' → logprob: -6.780369281768799
    7. ' robots' → logprob: -8.280369758605957
    8. 'n' → logprob: -8.280369758605957
    9. ' sys' → logprob: -9.155369758605957
    10. ' lines' → logprob: -9.655369758605957

Token 413: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5457402467727661
    2. ' input' → logprob: -1.1707402467727661
    3. ' import' → logprob: -3.2957401275634766
    4. 'n' → logprob: -3.2957401275634766
    5. '   ' → logprob: -3.4207401275634766
    6. ' line' → logprob: -6.170740127563477
    7. 'input' (adapté à ' input') → logprob: -7.295740127563477
    8. 'import' → logprob: -8.045740127563477
    9. ' lines' → logprob: -8.545740127563477
    10. ' data' → logprob: -8.795740127563477

Token 414: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012447139248251915
    2. '_line' → logprob: -4.637447357177734
    3. '_data' → logprob: -6.637447357177734
    4. '().' → logprob: -7.012447357177734
    5. '_lines' → logprob: -8.512447357177734
    6. ' ()' → logprob: -9.887447357177734
    7. 'line' → logprob: -10.262447357177734
    8. '()
' → logprob: -10.387447357177734
    9. 'data' → logprob: -10.387447357177734
    10. '()[' → logprob: -10.887447357177734

Token 415: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.014165159314870834
    2. 'sys' → logprob: -4.264164924621582
    3. ' input' → logprob: -14.639164924621582
    4. 'input' → logprob: -14.639164924621582
    5. '	sys' → logprob: -14.889164924621582
    6. '=sys' → logprob: -15.514164924621582
    7. '(sys' → logprob: -15.889164924621582
    8. ' lambda' → logprob: -16.5141658782959
    9. ' ' → logprob: -18.1391658782959
    10. 'lambda' → logprob: -18.7641658782959

Token 416: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0003939728485420346
    2. '.' → logprob: -8.000393867492676
    3. '.stdout' → logprob: -10.750393867492676
    4. '.std' → logprob: -10.875393867492676
    5. '.readline' → logprob: -11.875393867492676
    6. '.argv' → logprob: -12.250393867492676
    7. 'stdin' → logprob: -13.125393867492676
    8. ' .' → logprob: -13.375393867492676
    9. '.st' → logprob: -13.750393867492676
    10. '.input' → logprob: -14.250393867492676

Token 417: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0016294787637889385
    2. 'read' → logprob: -6.75162935256958
    3. '.' → logprob: -7.87662935256958
    4. '.read' → logprob: -10.001629829406738
    5. '.readlines' → logprob: -10.876629829406738
    6. 'buffer' → logprob: -12.501629829406738
    7. '_read' → logprob: -12.501629829406738
    8. 'reader' → logprob: -13.251629829406738
    9. ' readline' → logprob: -13.876629829406738
    10. 'r' → logprob: -14.126629829406738

Token 418: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5281661748886108
    2. '().' → logprob: -1.2781661748886108
    3. '()
' → logprob: -2.0281662940979004
    4. '   ' → logprob: -9.153165817260742
    5. '()

' → logprob: -10.778165817260742
    6. '()\' → logprob: -10.778165817260742
    7. '
' → logprob: -11.278165817260742
    8. '()
' → logprob: -11.528165817260742
    9. '())' → logprob: -11.778165817260742
    10. '().
' → logprob: -13.153165817260742

Token 419: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.295173317193985
    2. '()' → logprob: -1.4201732873916626
    3. '()
' → logprob: -4.420173168182373
    4. '().' → logprob: -6.420173168182373
    5. '
' → logprob: -9.170173645019531
    6. '    
' → logprob: -9.795173645019531
    7. '()\' → logprob: -10.045173645019531
    8. 'n' → logprob: -11.670173645019531
    9. '()

' → logprob: -11.920173645019531
    10. '():
' → logprob: -12.045173645019531

Token 420: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03726574406027794
    2. ' n' → logprob: -3.5372657775878906
    3. '   ' → logprob: -4.912265777587891
    4. 'N' → logprob: -9.66226577758789
    5. 't' → logprob: -11.16226577758789
    6. 'line' → logprob: -11.66226577758789
    7. ' line' → logprob: -11.66226577758789
    8. '
' → logprob: -12.03726577758789
    9. 'nt' → logprob: -12.28726577758789
    10. 'T' → logprob: -12.66226577758789

Token 421: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.03150908648967743
    2. 'True' → logprob: -3.5315091609954834
    3. '(True' → logprob: -6.406508922576904
    4. ' line' → logprob: -9.531509399414062
    5. ' ' → logprob: -10.656509399414062
    6. '()' → logprob: -13.031509399414062
    7. '=True' → logprob: -13.281509399414062
    8. ' (' → logprob: -13.531509399414062
    9. '1' → logprob: -13.906509399414062
    10. 'line' → logprob: -14.031509399414062

Token 422: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.28232645988464355
    2. ':' → logprob: -1.6573264598846436
    3. '():
' → logprob: -3.0323264598846436
    4. ':
' → logprob: -6.157326698303223
    5. '       ' → logprob: -6.532326698303223
    6. '   ' → logprob: -6.657326698303223
    7. '(' → logprob: -7.157326698303223
    8. ',' → logprob: -7.532326698303223
    9. '()' → logprob: -7.657326698303223
    10. '):' → logprob: -9.532326698303223

Token 423: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2130889743566513
    2. '   ' → logprob: -1.7130889892578125
    3. ' line' → logprob: -4.5880889892578125
    4. 'line' → logprob: -6.5880889892578125
    5. '	line' → logprob: -10.088088989257812
    6. '           ' → logprob: -12.713088989257812
    7. '#line' → logprob: -12.963088989257812
    8. '   ' → logprob: -13.088088989257812
    9. '```' → logprob: -13.213088989257812
    10. '(line' → logprob: -13.213088989257812

Token 424: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.25248900055885315
    2. 'line' (adapté à ' line') → logprob: -1.5024889707565308
    3. '   ' → logprob: -7.50248908996582
    4. '	line' → logprob: -12.00248908996582
    5. 's' → logprob: -14.37748908996582
    6. '(line' → logprob: -15.12748908996582
    7. 'l' → logprob: -15.62748908996582
    8. '       ' → logprob: -15.75248908996582
    9. ' s' → logprob: -15.87748908996582
    10. '_line' → logprob: -16.00248908996582

Token 425: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03816060721874237
    2. '=' → logprob: -3.288160562515259
    3. '=line' → logprob: -9.03816032409668
    4. '(line' → logprob: -15.78816032409668
    5. '   ' → logprob: -16.91316032409668
    6. '=input' → logprob: -17.03816032409668
    7. ' ' → logprob: -17.16316032409668
    8. 'line' → logprob: -17.53816032409668
    9. 's' → logprob: -17.53816032409668
    10. '[line' → logprob: -18.03816032409668

Token 426: ' ''
' (ID: 25366)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5776817798614502
    2. ' input' → logprob: -0.8276817798614502
    3. 'sys' → logprob: -6.827681541442871
    4. ' sys' → logprob: -7.327681541442871
    5. '=input' → logprob: -15.577681541442871
    6. '(input' → logprob: -16.452682495117188
    7. '=sys' → logprob: -17.327682495117188
    8. ' ' → logprob: -17.952682495117188
    9. '(sys' → logprob: -17.952682495117188
    10. '_input' → logprob: -18.202682495117188

Token 427: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5354868173599243
    2. '=' → logprob: -1.1604868173599243
    3. '=line' → logprob: -2.4104866981506348
    4. '       ' → logprob: -4.660486698150635
    5. ' line' → logprob: -6.535486698150635
    6. 'line' → logprob: -8.035487174987793
    7. '   ' → logprob: -9.035487174987793
    8. '(line' → logprob: -9.285487174987793
    9. '	line' → logprob: -10.410487174987793
    10. '#line' → logprob: -12.035487174987793

Token 428: ' while' (ID: 2049)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0015160536859184504
    2. ' line' → logprob: -6.501515865325928
    3. 'while' (adapté à ' while') → logprob: -11.626516342163086
    4. 'try' → logprob: -12.501516342163086
    5. '       ' → logprob: -15.126516342163086
    6. '   ' → logprob: -15.251516342163086
    7. '(line' → logprob: -15.751516342163086
    8. ' while' → logprob: -15.876516342163086
    9. '           ' → logprob: -16.876516342163086
    10. '#line' → logprob: -17.001516342163086

Token 429: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5024121999740601
    2. ' line' → logprob: -1.25241219997406
    3. ' not' → logprob: -2.3774123191833496
    4. 'not' → logprob: -4.12741231918335
    5. '(line' → logprob: -9.252411842346191
    6. 'len' → logprob: -10.002411842346191
    7. ' True' → logprob: -10.377411842346191
    8. 'True' → logprob: -11.127411842346191
    9. ' len' → logprob: -12.002411842346191
    10. '(not' → logprob: -13.002411842346191

Token 430: '.strip' (ID: 40613)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7297918200492859
    2. '.strip' → logprob: -1.1047918796539307
    3. '=' → logprob: -1.8547918796539307
    4. ' ==' → logprob: -3.9797918796539307
    5. ' =' → logprob: -4.729791641235352
    6. '.' → logprob: -6.479791641235352
    7. ':=' → logprob: -6.979791641235352
    8. ' :=' → logprob: -9.604791641235352
    9. '=line' → logprob: -10.229791641235352
    10. '.rstrip' → logprob: -10.604791641235352

Token 431: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1380947232246399
    2. '()==' → logprob: -2.138094663619995
    3. '==' → logprob: -4.513094902038574
    4. ' ==' → logprob: -9.013094902038574
    5. '=' → logprob: -11.138094902038574
    6. '===' → logprob: -13.888094902038574
    7. '```' → logprob: -14.263094902038574
    8. '()=="' → logprob: -14.638094902038574
    9. ' =' → logprob: -14.888094902038574
    10. '()!=' → logprob: -15.013094902038574

Token 432: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.003190905088558793
    2. ' ==' → logprob: -6.003190994262695
    3. '()==' → logprob: -7.253190994262695
    4. '()' → logprob: -12.753190994262695
    5. '=' → logprob: -12.753190994262695
    6. '===' → logprob: -14.378190994262695
    7. '=='' → logprob: -14.753190994262695
    8. '==
' → logprob: -16.378190994262695
    9. ')==' → logprob: -16.753190994262695
    10. '====' → logprob: -16.878190994262695

Token 433: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.003180921310558915
    2. ''' → logprob: -5.753180980682373
    3. '''
' → logprob: -13.753180503845215
    4. ''''' → logprob: -14.128180503845215
    5. '""' → logprob: -14.378180503845215
    6. ''',' → logprob: -15.128180503845215
    7. ' '':
' → logprob: -15.878180503845215
    8. ' ''' → logprob: -16.12818145751953
    9. '''.' → logprob: -16.12818145751953
    10. ''t' → logprob: -16.50318145751953

Token 434: '           ' (ID: 352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8579737544059753
    2. ' line' → logprob: -1.7329738140106201
    3. '           ' → logprob: -1.9829738140106201
    4. '=line' → logprob: -2.35797381401062
    5. '=' → logprob: -2.73297381401062
    6. '       ' → logprob: -3.35797381401062
    7. ':' → logprob: -3.73297381401062
    8. '(line' → logprob: -3.85797381401062
    9. 'line' → logprob: -4.732973575592041
    10. ':
' → logprob: -5.232973575592041

Token 435: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.01829017885029316
    2. ' line' → logprob: -4.018290042877197
    3. '           ' → logprob: -8.893290519714355
    4. 'l' → logprob: -13.768290519714355
    5. '	line' → logprob: -13.768290519714355
    6. '#line' → logprob: -15.268290519714355
    7. '=line' → logprob: -15.768290519714355
    8. '   ' → logprob: -16.14328956604004
    9. ' l' → logprob: -16.26828956604004
    10. '_line' → logprob: -16.39328956604004

Token 436: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132726848125458
    2. '=' → logprob: -1.3132727146148682
    3. '=sys' → logprob: -12.063272476196289
    4. '=line' → logprob: -12.313272476196289
    5. '=input' → logprob: -16.43827247619629
    6. ' =
' → logprob: -16.56327247619629
    7. 'sys' → logprob: -16.56327247619629
    8. '＝' → logprob: -16.68827247619629
    9. ' ' → logprob: -16.68827247619629
    10. '=subprocess' → logprob: -17.06327247619629

Token 437: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3440263271331787
    2. 'sys' → logprob: -1.8440263271331787
    3. ' input' → logprob: -2.5940263271331787
    4. ' sys' → logprob: -2.8440263271331787
    5. '=sys' → logprob: -14.969026565551758
    6. 'stdin' → logprob: -15.094026565551758
    7. '=input' → logprob: -16.219026565551758
    8. '(sys' → logprob: -16.219026565551758
    9. 'import' → logprob: -16.719026565551758
    10. '	sys' → logprob: -17.594026565551758

Token 438: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -6.682846287731081e-05
    2. 'stdin' → logprob: -9.875066757202148
    3. '.stdout' → logprob: -11.875066757202148
    4. 'in' → logprob: -12.125066757202148
    5. '.readline' → logprob: -13.000066757202148
    6. '.std' → logprob: -16.12506675720215
    7. '(stdin' → logprob: -16.25006675720215
    8. '.stderr' → logprob: -16.37506675720215
    9. 'input' → logprob: -16.50006675720215
    10. '.in' → logprob: -16.62506675720215

Token 439: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.09069783240556717
    2. '.stdin' → logprob: -2.840697765350342
    3. 'in' → logprob: -3.840697765350342
    4. 'stdin' → logprob: -5.090697765350342
    5. 'sys' → logprob: -8.2156982421875
    6. 'input' → logprob: -8.2156982421875
    7. 'read' → logprob: -10.2156982421875
    8. '.stdout' → logprob: -10.5906982421875
    9. 'out' → logprob: -11.0906982421875
    10. 'line' → logprob: -11.3406982421875

Token 440: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1129680871963501
    2. '           ' → logprob: -2.2379679679870605
    3. '()' → logprob: -10.237968444824219
    4. '.readline' → logprob: -11.237968444824219
    5. '<|end|>' → logprob: -11.362968444824219
    6. '()
' → logprob: -11.362968444824219
    7. '(' → logprob: -11.487968444824219
    8. 'import' → logprob: -11.487968444824219
    9. '().' → logprob: -11.987968444824219
    10. '<|end|>' → logprob: -11.987968444824219

Token 441: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1269964575767517
    2. '           ' → logprob: -2.1269965171813965
    3. ' if' → logprob: -10.876996040344238
    4. '   ' → logprob: -11.126996040344238
    5. '<|end|>' → logprob: -11.126996040344238
    6. '<|end|>' → logprob: -12.751996040344238
    7. 'import' → logprob: -13.251996040344238
    8. 'if' → logprob: -13.251996040344238
    9. '```' → logprob: -13.251996040344238
    10. ',' → logprob: -13.376996040344238

Token 442: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4669039845466614
    2. ' if' → logprob: -1.2169039249420166
    3. 'if' (adapté à ' if') → logprob: -2.5919039249420166
    4. '       ' → logprob: -6.216904163360596
    5. 'If' → logprob: -11.216903686523438
    6. '   ' → logprob: -12.091903686523438
    7. 'break' → logprob: -12.341903686523438
    8. '
' → logprob: -12.841903686523438
    9. '	if' → logprob: -12.966903686523438
    10. ' If' → logprob: -13.341903686523438

Token 443: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7028682827949524
    2. 'line' → logprob: -0.9528682827949524
    3. ' line' → logprob: -2.7028682231903076
    4. 'not' → logprob: -2.9528682231903076
    5. '#line' → logprob: -15.077868461608887
    6. '(line' → logprob: -15.202868461608887
    7. '	line' → logprob: -15.702868461608887
    8. '[line' → logprob: -16.70286750793457
    9. '=line' → logprob: -17.07786750793457
    10. ' ' → logprob: -17.45286750793457

Token 444: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25196003913879395
    2. ' ==' → logprob: -1.501960039138794
    3. '===' → logprob: -11.876959800720215
    4. '=' → logprob: -12.001959800720215
    5. '=='' → logprob: -12.126959800720215
    6. ')==' → logprob: -12.251959800720215
    7. '()==' → logprob: -12.876959800720215
    8. ']==' → logprob: -13.501959800720215
    9. '.strip' → logprob: -13.876959800720215
    10. '==-' → logprob: -14.501959800720215

Token 445: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.0019343505846336484
    2. ''' → logprob: -6.25193452835083
    3. ' '':
' → logprob: -12.751934051513672
    4. '''
' → logprob: -14.126934051513672
    5. ' '' → logprob: -14.751934051513672
    6. ''''' → logprob: -14.876934051513672
    7. '""' → logprob: -15.001934051513672
    8. ' ''' → logprob: -15.126934051513672
    9. '"":' → logprob: -15.251934051513672
    10. '''.' → logprob: -16.251934051513672

Token 446: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011546355381142348
    2. 'return' → logprob: -9.750115394592285
    3. ' return' → logprob: -10.500115394592285
    4. ':return' → logprob: -11.125115394592285
    5. '           ' → logprob: -12.250115394592285
    6. '                       ' → logprob: -12.875115394592285
    7. '                   ' → logprob: -13.250115394592285
    8. '       ' → logprob: -14.375115394592285
    9. '	           ' → logprob: -14.375115394592285
    10. '              ' → logprob: -14.375115394592285

Token 447: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02329287678003311
    2. ' return' → logprob: -3.7732927799224854
    3. '               ' → logprob: -10.023292541503906
    4. 'break' → logprob: -13.273292541503906
    5. '                   ' → logprob: -14.023292541503906
    6. '           ' → logprob: -15.648292541503906
    7. '                       ' → logprob: -15.773292541503906
    8. '	return' → logprob: -16.023292541503906
    9. ' break' → logprob: -17.148292541503906
    10. 'exit' → logprob: -17.898292541503906

Token 448: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0077128661796450615
    2. '
' → logprob: -5.0077128410339355
    3. '<|end|>' → logprob: -7.2577128410339355
    4. '        
' → logprob: -8.507713317871094
    5. '\n' → logprob: -10.257713317871094
    6. '   ' → logprob: -11.132713317871094
    7. '	' → logprob: -11.757713317871094
    8. '\t' → logprob: -12.257713317871094
    9. '<|end|>' → logprob: -12.382713317871094
    10. '      ' → logprob: -12.757713317871094

Token 449: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001669485354796052
    2. '<|end|>' → logprob: -9.000166893005371
    3. '        
' → logprob: -10.250166893005371
    4. ',' → logprob: -13.125166893005371
    5. 's' → logprob: -13.875166893005371
    6. ' s' → logprob: -14.000166893005371
    7. '```' → logprob: -14.000166893005371
    8. '<|end|>' → logprob: -14.375166893005371
    9. '           ' → logprob: -14.812666893005371
    10. '
' → logprob: -14.875166893005371

Token 450: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03291281312704086
    2. ' n' → logprob: -4.407912731170654
    3. '       ' → logprob: -5.032912731170654
    4. 'N' (adapté à ' N') → logprob: -5.407912731170654
    5. ' parts' → logprob: -5.407912731170654
    6. 'parts' → logprob: -5.532912731170654
    7. 'R' → logprob: -7.907912731170654
    8. 'm' → logprob: -9.532913208007812
    9. 'tokens' → logprob: -9.657913208007812
    10. 'k' → logprob: -9.782913208007812

Token 451: 'TR' (ID: 4314)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14847145974636078
    2. ',' → logprob: -2.0234713554382324
    3. '=' → logprob: -5.523471355438232
    4. ' ,' → logprob: -6.523471355438232
    5. ' ' → logprob: -8.27347183227539
    6. '   ' → logprob: -10.64847183227539
    7. ')' → logprob: -11.77347183227539
    8. '    ' → logprob: -12.02347183227539
    9. '=int' → logprob: -12.02347183227539
    10. ' =)' → logprob: -12.02347183227539

Token 452: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3141278326511383
    2. ' =' → logprob: -1.314127802848816
    3. '=line' → logprob: -7.0641279220581055
    4. '=list' → logprob: -12.439127922058105
    5. '=N' → logprob: -12.689127922058105
    6. '=input' → logprob: -13.564127922058105
    7. '   ' → logprob: -14.439127922058105
    8. '=int' → logprob: -14.814127922058105
    9. 'line' → logprob: -15.314127922058105
    10. ' ' → logprob: -15.564127922058105

Token 453: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.386425644159317
    2. ' line' → logprob: -1.6364256143569946
    3. 'list' → logprob: -2.386425733566284
    4. ' list' → logprob: -3.386425733566284
    5. '[line' → logprob: -9.886425971984863
    6. '=line' → logprob: -13.261425971984863
    7. '(line' → logprob: -13.886425971984863
    8. '	line' → logprob: -14.261425971984863
    9. '#line' → logprob: -14.261425971984863
    10. ' [' → logprob: -14.636425971984863

Token 454: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.002249580342322588
    2. '.split' → logprob: -6.502249717712402
    3. '.' → logprob: -7.252249717712402
    4. '.rstrip' → logprob: -10.252249717712402
    5. 'strip' → logprob: -13.002249717712402
    6. ' .' → logprob: -14.252249717712402
    7. 'split' → logprob: -16.127248764038086
    8. '().' → logprob: -16.127248764038086
    9. ' strip' → logprob: -18.252248764038086
    10. '.readline' → logprob: -18.377248764038086

Token 455: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.005246210377663374
    2. '.split' → logprob: -5.255246162414551
    3. '()' → logprob: -11.88024616241455
    4. '.' → logprob: -12.25524616241455
    5. ' .' → logprob: -15.38024616241455
    6. 'split' → logprob: -15.38024616241455
    7. '()
' → logprob: -16.380247116088867
    8. ' ().' → logprob: -16.505247116088867
    9. '   ' → logprob: -17.755247116088867
    10. '('').' → logprob: -18.130247116088867

Token 456: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. '(split' → logprob: -18.625
    3. ' split' → logprob: -19.375
    4. 'spl' → logprob: -20.0
    5. 'strip' → logprob: -21.375
    6. '.split' → logprob: -21.625
    7. 'rstrip' → logprob: -22.5
    8. 'sp' → logprob: -23.0
    9. '```' → logprob: -23.5
    10. '_split' → logprob: -23.625

Token 457: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.030164197087287903
    2. '('' → logprob: -3.5301642417907715
    3. '(' → logprob: -7.9051642417907715
    4. '()[' → logprob: -10.780163764953613
    5. '("("' → logprob: -11.780163764953613
    6. '()
' → logprob: -12.655163764953613
    7. '("' → logprob: -12.655163764953613
    8. '())' → logprob: -13.030163764953613
    9. '()]' → logprob: -13.530163764953613
    10. '(',' → logprob: -13.780163764953613

Token 458: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8826755881309509
    2. '       ' → logprob: -0.8826755881309509
    3. '<|end|>' → logprob: -2.6326756477355957
    4. '[N' → logprob: -2.8826756477355957
    5. '[n' → logprob: -5.132675647735596
    6. '=' → logprob: -5.132675647735596
    7. ' =' → logprob: -5.132675647735596
    8. '        
' → logprob: -5.382675647735596
    9. '
' → logprob: -5.632675647735596
    10. '(N' → logprob: -6.007675647735596

Token 459: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3455811142921448
    2. ' if' → logprob: -1.9705810546875
    3. 'N' → logprob: -2.8455810546875
    4. 'if' (adapté à ' if') → logprob: -2.9705810546875
    5. ' n' → logprob: -3.7205810546875
    6. '       ' → logprob: -4.7205810546875
    7. '[' → logprob: -5.7205810546875
    8. ' N' → logprob: -5.9705810546875
    9. '[n' → logprob: -6.4705810546875
    10. '[N' → logprob: -6.4705810546875

Token 460: ' len' (ID: 4631)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04024383798241615
    2. ' N' → logprob: -3.5402438640594482
    3. 'len' → logprob: -4.790243625640869
    4. ' len' → logprob: -6.415243625640869
    5. ' not' → logprob: -7.665243625640869
    6. 'not' → logprob: -10.915244102478027
    7. '(len' → logprob: -13.040244102478027
    8. ' ' → logprob: -13.665244102478027
    9. ''N' → logprob: -14.665244102478027
    10. '	N' → logprob: -15.290244102478027

Token 461: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00019901065388694406
    2. 'N' → logprob: -9.875199317932129
    3. '()' → logprob: -10.125199317932129
    4. '(' → logprob: -10.250199317932129
    5. '==' → logprob: -10.375199317932129
    6. '<N' → logprob: -10.500199317932129
    7. '()==' → logprob: -12.125199317932129
    8. '[N' → logprob: -13.125199317932129
    9. ' ==' → logprob: -13.250199317932129
    10. ' N' → logprob: -13.500199317932129

Token 462: 'TR' (ID: 4314)
  Prédit: 'TR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TR' → logprob: -0.006109266541898251
    2. 'T' → logprob: -5.131109237670898
    3. ')' → logprob: -9.756109237670898
    4. 'TRL' → logprob: -10.506109237670898
    5. 'TRGL' → logprob: -10.506109237670898
    6. '(TR' → logprob: -10.631109237670898
    7. '_TR' → logprob: -11.631109237670898
    8. '[' → logprob: -11.881109237670898
    9. 'R' → logprob: -12.256109237670898
    10. '   ' → logprob: -12.381109237670898

Token 463: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6748692393302917
    2. ' ==' → logprob: -0.7998692393302917
    3. ')' → logprob: -3.4248692989349365
    4. ')==' → logprob: -5.549869060516357
    5. '<' → logprob: -6.299869060516357
    6. ' !=' → logprob: -6.674869060516357
    7. ' <' → logprob: -6.924869060516357
    8. '!=' → logprob: -7.924869060516357
    9. '[' → logprob: -8.549869537353516
    10. ')<' → logprob: -9.549869537353516

Token 464: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5351669788360596
    2. ' ==' → logprob: -0.9101669788360596
    3. '<' → logprob: -4.7851667404174805
    4. ' <' → logprob: -5.9101667404174805
    5. '[' → logprob: -7.9101667404174805
    6. '```' → logprob: -9.16016674041748
    7. ')==' → logprob: -9.28516674041748
    8. '()==' → logprob: -9.41016674041748
    9. '0' → logprob: -9.53516674041748
    10. ' !=' → logprob: -10.28516674041748

Token 465: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0032882285304367542
    2. ' ' → logprob: -6.378288269042969
    3. '1' → logprob: -6.628288269042969
    4. '4' → logprob: -8.253288269042969
    5. '```' → logprob: -14.128288269042969
    6. '
' → logprob: -14.878288269042969
    7. '=' → logprob: -15.503288269042969
    8. ')' → logprob: -15.503288269042969
    9. '>' → logprob: -16.50328826904297
    10. '2' → logprob: -16.81578826904297

Token 466: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.002813194179907441
    2. '1' → logprob: -5.877813339233398
    3. ' ' → logprob: -11.752813339233398
    4. '4' → logprob: -14.752813339233398
    5. '```' → logprob: -16.2528133392334
    6. '2' → logprob: -17.2528133392334
    7. '   ' → logprob: -18.5653133392334
    8. ')' → logprob: -18.8778133392334
    9. '
' → logprob: -19.1903133392334
    10. '=' → logprob: -19.2528133392334

Token 467: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16366949677467346
    2. ':
' → logprob: -1.913669466972351
    3. ' or' → logprob: -6.038669586181641
    4. ':return' → logprob: -7.288669586181641
    5. '           ' → logprob: -8.53866958618164
    6. '   ' → logprob: -9.91366958618164
    7. '       ' → logprob: -9.91366958618164
    8. ' :' → logprob: -11.16366958618164
    9. ' :
' → logprob: -11.41366958618164
    10. '):
' → logprob: -11.91366958618164

Token 468: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017200108617544174
    2. ' break' → logprob: -4.517199993133545
    3. '       ' → logprob: -5.642199993133545
    4. 'break' → logprob: -6.892199993133545
    5. ' return' → logprob: -7.267199993133545
    6. 'return' → logprob: -7.517199993133545
    7. '	break' → logprob: -9.517200469970703
    8. '	       ' → logprob: -9.517200469970703
    9. '   ' → logprob: -9.767200469970703
    10. '               ' → logprob: -10.142200469970703

Token 469: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5643051266670227
    2. 'continue' (adapté à ' continue') → logprob: -1.439305067062378
    3. 'return' → logprob: -2.189305067062378
    4. ' continue' → logprob: -3.189305067062378
    5. 'break' → logprob: -3.689305067062378
    6. ' break' → logprob: -4.689305305480957
    7. ' return' → logprob: -5.189305305480957
    8. '               ' → logprob: -7.189305305480957
    9. '	continue' → logprob: -8.939305305480957
    10. '       ' → logprob: -9.189305305480957

Token 470: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031966082751750946
    2. '        
' → logprob: -6.753196716308594
    3. '<|end|>' → logprob: -7.128196716308594
    4. '```' → logprob: -8.003196716308594
    5. '
' → logprob: -8.253196716308594
    6. '[' → logprob: -9.378196716308594
    7. 'n' → logprob: -9.378196716308594
    8. ' N' → logprob: -9.503196716308594
    9. '\n' → logprob: -10.378196716308594
    10. '[N' → logprob: -10.378196716308594

Token 471: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07911031693220139
    2. '```' → logprob: -3.0791103839874268
    3. '
' → logprob: -4.704110145568848
    4. 'n' → logprob: -4.829110145568848
    5. '        
' → logprob: -5.204110145568848
    6. 'N' → logprob: -5.704110145568848
    7. ' N' → logprob: -7.204110145568848
    8. '`' → logprob: -7.579110145568848
    9. '``' → logprob: -7.704110145568848
    10. '[N' → logprob: -8.204110145568848

Token 472: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.0018115561688318849
    2. ' N' → logprob: -6.376811504364014
    3. '       ' → logprob: -10.126811981201172
    4. '   ' → logprob: -10.251811981201172
    5. 'n' → logprob: -10.376811981201172
    6. 'try' → logprob: -14.626811981201172
    7. '	N' → logprob: -14.626811981201172
    8. ' n' → logprob: -14.876811981201172
    9. 'break' → logprob: -14.876811981201172
    10. ' break' → logprob: -15.001811981201172

Token 473: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008593653328716755
    2. ' =' → logprob: -5.758593559265137
    3. ' ,' → logprob: -5.883593559265137
    4. '=' → logprob: -7.383593559265137
    5. ')' → logprob: -7.508593559265137
    6. '[' → logprob: -7.883593559265137
    7. ',
' → logprob: -7.883593559265137
    8. '=int' → logprob: -8.508593559265137
    9. '<|end|>' → logprob: -8.633593559265137
    10. '   ' → logprob: -10.008593559265137

Token 474: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.7124181389808655
    2. ' T' → logprob: -1.4624180793762207
    3. '=' → logprob: -2.0874180793762207
    4. ' =' → logprob: -2.4624180793762207
    5. 'R' → logprob: -3.5874180793762207
    6. ' R' → logprob: -3.7124180793762207
    7. '=int' → logprob: -4.587418079376221
    8. ' ' → logprob: -6.087418079376221
    9. '=T' → logprob: -6.962418079376221
    10. 'int' → logprob: -7.462418079376221

Token 475: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006597769097425044
    2. '=' → logprob: -7.500659942626953
    3. ' ,' → logprob: -10.000659942626953
    4. ' =' → logprob: -10.125659942626953
    5. ',R' → logprob: -10.875659942626953
    6. ',T' → logprob: -14.375659942626953
    7. ')' → logprob: -15.000659942626953
    8. 'R' → logprob: -15.250659942626953
    9. ',int' → logprob: -15.250659942626953
    10. '=int' → logprob: -15.875659942626953

Token 476: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.029924269765615463
    2. ' R' → logprob: -3.529924154281616
    3. '=' → logprob: -8.904924392700195
    4. ' =' → logprob: -10.279924392700195
    5. 'r' → logprob: -13.654924392700195
    6. ' ' → logprob: -13.779924392700195
    7. ',' → logprob: -15.154924392700195
    8. ',R' → logprob: -15.404924392700195
    9. 'Q' → logprob: -15.654924392700195
    10. '   ' → logprob: -16.029924392700195

Token 477: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519335150718689
    2. ' =' → logprob: -1.5019335746765137
    3. '=int' → logprob: -12.876933097839355
    4. ',' → logprob: -13.751933097839355
    5. '=
' → logprob: -15.501933097839355
    6. ' =
' → logprob: -15.501933097839355
    7. ')' → logprob: -15.876933097839355
    8. ')=' → logprob: -16.376934051513672
    9. '=

' → logprob: -16.501934051513672
    10. ' ' → logprob: -17.376934051513672

Token 478: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.10262485593557358
    2. ' int' → logprob: -2.6026248931884766
    3. 'int' → logprob: -4.102624893188477
    4. 'map' → logprob: -4.977624893188477
    5. '[int' → logprob: -10.352624893188477
    6. ' list' → logprob: -13.227624893188477
    7. ' [' → logprob: -14.227624893188477
    8. '(int' → logprob: -15.102624893188477
    9. ' float' → logprob: -15.102624893188477
    10. '(map' → logprob: -15.352624893188477

Token 479: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.006877937354147434
    2. 'int' → logprob: -5.006877899169922
    3. '(float' → logprob: -8.756877899169922
    4. 'float' → logprob: -12.631877899169922
    5. '(' → logprob: -13.881877899169922
    6. '(str' → logprob: -14.881877899169922
    7. '[int' → logprob: -15.381877899169922
    8. ' int' → logprob: -16.006877899169922
    9. '```' → logprob: -16.506877899169922
    10. 'str' → logprob: -17.006877899169922

Token 480: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13363303244113922
    2. '(N' → logprob: -2.5086331367492676
    3. ',N' → logprob: -3.5086331367492676
    4. ')' → logprob: -4.633633136749268
    5. 'N' → logprob: -5.633633136749268
    6. ' ,' → logprob: -8.75863265991211
    7. ')(' → logprob: -9.25863265991211
    8. '(' → logprob: -9.50863265991211
    9. ' N' → logprob: -10.38363265991211
    10. '   ' → logprob: -10.63363265991211

Token 481: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0005530327325686812
    2. ' N' → logprob: -7.500553131103516
    3. '	N' → logprob: -21.500553131103516
    4. '[N' → logprob: -21.875553131103516
    5. '   ' → logprob: -22.125553131103516
    6. ')' → logprob: -22.125553131103516
    7. ',N' → logprob: -23.625553131103516
    8. '=N' → logprob: -24.000553131103516
    9. '
' → logprob: -24.250553131103516
    10. '(N' → logprob: -24.375553131103516

Token 482: 'TR' (ID: 4314)
  Prédit: 'TR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TR' → logprob: -0.05207246541976929
    2. '(TR' → logprob: -3.052072525024414
    3. ')' → logprob: -6.427072525024414
    4. '[' → logprob: -7.927072525024414
    5. ',' → logprob: -8.052072525024414
    6. 'TRL' → logprob: -8.177072525024414
    7. '.readline' → logprob: -8.552072525024414
    8. '(line' → logprob: -8.677072525024414
    9. '(' → logprob: -9.427072525024414
    10. ' TR' → logprob: -9.552072525024414

Token 483: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1160349458805285e-05
    2. ')
' → logprob: -12.625011444091797
    3. ' )' → logprob: -12.875011444091797
    4. '())' → logprob: -13.750011444091797
    5. '[' → logprob: -14.000011444091797
    6. ');' → logprob: -14.250011444091797
    7. '),' → logprob: -14.750011444091797
    8. ')`' → logprob: -14.750011444091797
    9. ').' → logprob: -15.000011444091797
    10. ')}' → logprob: -15.250011444091797

Token 484: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2547294795513153
    2. 'robots' → logprob: -1.6297295093536377
    3. ' robots' → logprob: -3.6297295093536377
    4. '        
' → logprob: -6.879729270935059
    5. '   ' → logprob: -7.379729270935059
    6. '```' → logprob: -8.254729270935059
    7. '<|end|>' → logprob: -8.879729270935059
    8. 'robot' → logprob: -9.254729270935059
    9. 'data' → logprob: -10.629729270935059
    10. ' robot' → logprob: -10.879729270935059

Token 485: ' if' (ID: 538)
  Prédit: 'robots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' → logprob: -0.011962544173002243
    2. ' robots' → logprob: -4.511962413787842
    3. 'if' (adapté à ' if') → logprob: -7.511962413787842
    4. '       ' → logprob: -8.886962890625
    5. ' if' → logprob: -9.386962890625
    6. 'robot' → logprob: -9.886962890625
    7. '```' → logprob: -10.136962890625
    8. 'break' → logprob: -11.011962890625
    9. '        
' → logprob: -11.636962890625
    10. 'rob' → logprob: -11.886962890625

Token 486: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.16025276482105255
    2. 'N' → logprob: -1.9102528095245361
    3. ' not' → logprob: -10.910252571105957
    4. ' ' → logprob: -12.660252571105957
    5. ' T' → logprob: -12.910252571105957
    6. ' R' → logprob: -13.285252571105957
    7. 'T' → logprob: -13.660252571105957
    8. 'R' → logprob: -14.785252571105957
    9. ' ' → logprob: -15.410252571105957
    10. 'not' → logprob: -15.410252571105957

Token 487: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.39085835218429565
    2. ' ==' → logprob: -1.1408584117889404
    3. '=' → logprob: -5.765858173370361
    4. '<=' → logprob: -7.390858173370361
    5. ' <=' → logprob: -8.76585865020752
    6. ' =' → logprob: -10.26585865020752
    7. '0' → logprob: -10.64085865020752
    8. '==
' → logprob: -12.51585865020752
    9. '===' → logprob: -12.89085865020752
    10. ' ' → logprob: -13.14085865020752

Token 488: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005233882926404476
    2. ' ' → logprob: -5.2552337646484375
    3. '=' → logprob: -16.755233764648438
    4. 'T' → logprob: -18.755233764648438
    5. '۰' → logprob: -18.755233764648438
    6. '  ' → logprob: -19.130233764648438
    7. '```' → logprob: -19.130233764648438
    8. '<|end|>' → logprob: -19.380233764648438
    9. '   ' → logprob: -19.505233764648438
    10. ' ' → logprob: -20.130233764648438

Token 489: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06367413699626923
    2. ':' → logprob: -3.063674211502075
    3. 'and' → logprob: -4.438673973083496
    4. ':
' → logprob: -6.188673973083496
    5. '   ' → logprob: -7.563673973083496
    6. '       ' → logprob: -8.313673973083496
    7. '           ' → logprob: -9.063673973083496
    8. ':return' → logprob: -9.438673973083496
    9. '	and' → logprob: -10.188673973083496
    10. ' or' → logprob: -10.688673973083496

Token 490: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.31326186656951904
    2. ' T' → logprob: -1.313261866569519
    3. ' ' → logprob: -16.438261032104492
    4. '	T' → logprob: -18.313261032104492
    5. 'R' → logprob: -19.313261032104492
    6. ' ' → logprob: -19.438261032104492
    7. '  ' → logprob: -20.188261032104492
    8. '=T' → logprob: -21.188261032104492
    9. '   ' → logprob: -21.313261032104492
    10. ' R' → logprob: -21.938261032104492

Token 491: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.005504222586750984
    2. ' ==' → logprob: -5.255504131317139
    3. '0' → logprob: -8.255504608154297
    4. '=' → logprob: -12.880504608154297
    5. ' ' → logprob: -13.130504608154297
    6. ')==' → logprob: -13.255504608154297
    7. '===' → logprob: -13.505504608154297
    8. '<|end|>' → logprob: -13.880504608154297
    9. '```' → logprob: -14.255504608154297
    10. ']==' → logprob: -14.630504608154297

Token 492: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '<|end|>' → logprob: -20.125003814697266
    4. '=' → logprob: -20.375003814697266
    5. 'and' → logprob: -21.500003814697266
    6. ' and' → logprob: -22.250003814697266
    7. '<|end|>' → logprob: -22.500003814697266
    8. '۰' → logprob: -22.750003814697266
    9. '```' → logprob: -23.750003814697266
    10. '==' → logprob: -24.125003814697266

Token 493: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.029786480590701103
    2. 'and' → logprob: -3.5297865867614746
    3. '0' → logprob: -10.279786109924316
    4. '==' → logprob: -14.529786109924316
    5. ' ' → logprob: -15.279786109924316
    6. '&&' → logprob: -15.529786109924316
    7. '```' → logprob: -15.904786109924316
    8. '	and' → logprob: -16.029787063598633
    9. ' и' → logprob: -16.279787063598633
    10. '000' → logprob: -16.779787063598633

Token 494: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.00033581978641450405
    2. ' R' → logprob: -8.000335693359375
    3. '0' → logprob: -14.875335693359375
    4. ' ' → logprob: -17.250335693359375
    5. '	R' → logprob: -18.750335693359375
    6. '  ' → logprob: -19.250335693359375
    7. '   ' → logprob: -19.375335693359375
    8. ' ' → logprob: -21.125335693359375
    9. 'r' → logprob: -21.750335693359375
    10. 'RSpec' → logprob: -22.500335693359375

Token 495: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0018672407604753971
    2. ' ==' → logprob: -6.626867294311523
    3. '0' → logprob: -7.876867294311523
    4. '=' → logprob: -8.751867294311523
    5. ')==' → logprob: -14.001867294311523
    6. '==
' → logprob: -14.126867294311523
    7. '===' → logprob: -14.376867294311523
    8. ']==' → logprob: -14.501867294311523
    9. ' ' → logprob: -15.126867294311523
    10. '()==' → logprob: -15.251867294311523

Token 496: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '۰' → logprob: -19.750001907348633
    4. '<|end|>' → logprob: -20.500001907348633
    5. '   ' → logprob: -21.625001907348633
    6. '```' → logprob: -22.000001907348633
    7. '০' → logprob: -22.125001907348633
    8. '  ' → logprob: -22.500001907348633
    9. '=' → logprob: -22.750001907348633
    10. '०' → logprob: -23.125001907348633

Token 497: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1136862114071846
    2. ':
' → logprob: -2.2386863231658936
    3. ':return' → logprob: -7.2386860847473145
    4. '       ' → logprob: -9.613686561584473
    5. '   ' → logprob: -9.988686561584473
    6. '           ' → logprob: -10.738686561584473
    7. ':
' → logprob: -11.738686561584473
    8. '():
' → logprob: -14.738686561584473
    9. '	break' → logprob: -14.988686561584473
    10. ':

' → logprob: -15.363686561584473

Token 498: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00596837280318141
    2. '       ' → logprob: -5.1309685707092285
    3. '		' → logprob: -11.13096809387207
    4. '	       ' → logprob: -11.63096809387207
    5. '               ' → logprob: -12.38096809387207
    6. '          ' → logprob: -12.88096809387207
    7. '   ' → logprob: -13.13096809387207
    8. ' break' → logprob: -13.63096809387207
    9. '<|end|>' → logprob: -13.75596809387207
    10. ':' → logprob: -13.88096809387207

Token 499: ' break' (ID: 2338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12379885464906693
    2. 'break' (adapté à ' break') → logprob: -2.3737988471984863
    3. ' return' → logprob: -4.623798847198486
    4. '           ' → logprob: -4.623798847198486
    5. ' break' → logprob: -5.623798847198486
    6. '               ' → logprob: -10.248799324035645
    7. '       ' → logprob: -10.373799324035645
    8. '	break' → logprob: -12.623799324035645
    9. '	return' → logprob: -12.998799324035645
    10. '   ' → logprob: -14.123799324035645

Token 500: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11977565288543701
    2. ' robots' → logprob: -2.4947757720947266
    3. 'robots' → logprob: -3.6197757720947266
    4. '        
' → logprob: -6.869775772094727
    5. '<|end|>' → logprob: -7.119775772094727
    6. '```' → logprob: -7.369775772094727
    7. ' robot' → logprob: -7.619775772094727
    8. 'robot' → logprob: -8.494775772094727
    9. '.robot' → logprob: -9.369775772094727
    10. '   ' → logprob: -9.869775772094727

Token 501: '       ' (ID: 309)
  Prédit: 'robots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' → logprob: -0.48275911808013916
    2. ' robots' → logprob: -1.1077591180801392
    3. '       ' → logprob: -2.9827589988708496
    4. '```' → logprob: -6.48275899887085
    5. '        
' → logprob: -8.482759475708008
    6. '   ' → logprob: -9.607759475708008
    7. 'robot' → logprob: -9.857759475708008
    8. ' robot' → logprob: -10.982759475708008
    9. '``' → logprob: -11.232759475708008
    10. '
' → logprob: -11.482759475708008

Token 502: ' robots' (ID: 47605)
  Prédit: 'robots'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' (adapté à ' robots') → logprob: -0.013787341304123402
    2. ' robots' → logprob: -4.388787269592285
    3. '       ' → logprob: -6.763787269592285
    4. 'robot' → logprob: -9.888787269592285
    5. '```' → logprob: -10.513787269592285
    6. '        
' → logprob: -10.763787269592285
    7. 'rob' → logprob: -11.888787269592285
    8. '
' → logprob: -12.138787269592285
    9. '   ' → logprob: -13.513787269592285
    10. 'ro' → logprob: -13.763787269592285

Token 503: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009781472384929657
    2. '=' → logprob: -4.634781360626221
    3. '=[]' → logprob: -10.634781837463379
    4. '   ' → logprob: -14.384781837463379
    5. ' ' → logprob: -15.509781837463379
    6. 's' → logprob: -15.634781837463379
    7. '[]' → logprob: -16.259780883789062
    8. '=[]
' → logprob: -16.634780883789062
    9. '  ' → logprob: -16.634780883789062
    10. 'data' → logprob: -17.134780883789062

Token 504: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03810597583651543
    2. ' []' → logprob: -3.2881059646606445
    3. '[]
' → logprob: -9.788105964660645
    4. '[' → logprob: -12.163105964660645
    5. ' []
' → logprob: -12.913105964660645
    6. '[]}' → logprob: -14.788105964660645
    7. '[]

' → logprob: -15.913105964660645
    8. '[]"' → logprob: -16.78810691833496
    9. ' [' → logprob: -17.03810691833496
    10. '[])' → logprob: -17.53810691833496

Token 505: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09453748911619186
    2. ' for' → logprob: -2.4695374965667725
    3. 'for' → logprob: -6.094537258148193
    4. '	' → logprob: -6.719537258148193
    5. '	for' → logprob: -6.844537258148193
    6. '        
' → logprob: -7.969537258148193
    7. '
' → logprob: -7.969537258148193
    8. '   ' → logprob: -8.844537734985352
    9. '```' → logprob: -9.844537734985352
    10. '		
' → logprob: -10.469537734985352

Token 506: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005236717872321606
    2. ' for' → logprob: -5.255236625671387
    3. '       ' → logprob: -12.755236625671387
    4. '	for' → logprob: -16.880237579345703
    5. '```' → logprob: -17.880237579345703
    6. '   ' → logprob: -18.505237579345703
    7. '``' → logprob: -20.005237579345703
    8. 'from' → logprob: -21.005237579345703
    9. 'prev' → logprob: -21.380237579345703
    10. 'current' → logprob: -21.505237579345703

Token 507: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00015860427811276168
    2. '_i' → logprob: -9.000158309936523
    3. ' _' → logprob: -10.375158309936523
    4. '_range' → logprob: -12.625158309936523
    5. '_in' → logprob: -15.500158309936523
    6. '_index' → logprob: -16.375158309936523
    7. '_idx' → logprob: -17.375158309936523
    8. '_robot' → logprob: -17.375158309936523
    9. '_data' → logprob: -17.750158309936523
    10. '_time' → logprob: -17.750158309936523

Token 508: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05506880208849907
    2. 'in' → logprob: -3.1800687313079834
    3. 'range' → logprob: -4.4300689697265625
    4. ' range' → logprob: -10.305068969726562
    5. '_' → logprob: -11.430068969726562
    6. ' ' → logprob: -11.680068969726562
    7. 'import' → logprob: -11.930068969726562
    8. 'i' → logprob: -12.305068969726562
    9. 'int' → logprob: -12.430068969726562
    10. '  ' → logprob: -12.930068969726562

Token 509: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.306760805164231e-05
    2. ' range' → logprob: -11.25001335144043
    3. '(range' → logprob: -21.25001335144043
    4. '	range' → logprob: -21.37501335144043
    5. 'input' → logprob: -22.00001335144043
    6. 'ange' → logprob: -23.37501335144043
    7. '```' → logprob: -23.50001335144043
    8. ')' → logprob: -23.75001335144043
    9. 'Range' → logprob: -23.75001335144043
    10. 'r' → logprob: -23.87501335144043

Token 510: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -1.306760805164231e-05
    2. '(' → logprob: -11.37501335144043
    3. 'N' → logprob: -14.37501335144043
    4. '(int' → logprob: -14.50001335144043
    5. ' (' → logprob: -15.62501335144043
    6. '(n' → logprob: -15.62501335144043
    7. 'range' → logprob: -17.62501335144043
    8. '(
' → logprob: -17.75001335144043
    9. '(range' → logprob: -17.87501335144043
    10. ' N' → logprob: -18.00001335144043

Token 511: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18000923097133636
    2. '):' → logprob: -1.8050092458724976
    3. '       ' → logprob: -9.180008888244629
    4. '):
' → logprob: -9.430008888244629
    5. ':
' → logprob: -10.555008888244629
    6. ':' → logprob: -10.680008888244629
    7. '():
' → logprob: -11.805008888244629
    8. '   ' → logprob: -11.930008888244629
    9. ' ):
' → logprob: -12.430008888244629
    10. ')' → logprob: -12.680008888244629

Token 512: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19007396697998047
    2. ' line' → logprob: -1.8150739669799805
    3. '```' → logprob: -5.4400739669799805
    4. ' lines' → logprob: -6.0650739669799805
    5. 'line' → logprob: -6.8150739669799805
    6. '#line' → logprob: -7.0650739669799805
    7. '   ' → logprob: -8.81507396697998
    8. '	line' → logprob: -8.81507396697998
    9. '[line' → logprob: -8.94007396697998
    10. '       ' → logprob: -8.94007396697998

Token 513: ' #' (ID: 1069)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.8837565183639526
    2. 'line' → logprob: -1.6337565183639526
    3. ' k' → logprob: -2.008756637573242
    4. ' K' → logprob: -2.633756637573242
    5. 'k' → logprob: -2.758756637573242
    6. 'K' → logprob: -3.383756637573242
    7. ' M' → logprob: -4.008756637573242
    8. 'M' → logprob: -4.383756637573242
    9. ' times' → logprob: -4.758756637573242
    10. ' robot' → logprob: -5.008756637573242

Token 514: ' read' (ID: 1729)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.3554980754852295
    2. 'k' → logprob: -1.6054980754852295
    3. 'M' → logprob: -2.2304980754852295
    4. 'K' → logprob: -2.2304980754852295
    5. ' line' → logprob: -3.1054980754852295
    6. 'm' → logprob: -3.3554980754852295
    7. ' k' → logprob: -3.6054980754852295
    8. ' K' → logprob: -3.7304980754852295
    9. 'parts' → logprob: -3.7304980754852295
    10. 'L' → logprob: -3.8554980754852295

Token 515: ' nickname' (ID: 55716)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.4942384958267212
    2. 'data' → logprob: -1.7442384958267212
    3. ' data' → logprob: -1.7442384958267212
    4. ' line' → logprob: -1.7442384958267212
    5. ' times' → logprob: -2.4942383766174316
    6. 'times' → logprob: -2.7442383766174316
    7. ' robot' → logprob: -3.4942383766174316
    8. 'l' → logprob: -4.619238376617432
    9. ' parts' → logprob: -4.744238376617432
    10. ' lines' → logprob: -5.244238376617432

Token 516: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05119054391980171
    2. ' line' → logprob: -3.6761906147003174
    3. ',' → logprob: -4.426190376281738
    4. ' and' → logprob: -5.301190376281738
    5. '.readline' → logprob: -6.551190376281738
    6. ' =' → logprob: -7.176190376281738
    7. '<|end|>' → logprob: -7.301190376281738
    8. '<|end|>' → logprob: -7.676190376281738
    9. 'line' → logprob: -8.051190376281738
    10. ',line' → logprob: -8.051190376281738

Token 517: '           ' (ID: 352)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6379165649414062
    2. '           ' → logprob: -0.8879165649414062
    3. ' and' → logprob: -4.262916564941406
    4. 'line' → logprob: -4.762916564941406
    5. ' while' → logprob: -4.762916564941406
    6. '       ' → logprob: -5.387916564941406
    7. ' name' → logprob: -6.012916564941406
    8. '(line' → logprob: -6.137916564941406
    9. ',line' → logprob: -6.137916564941406
    10. ',' → logprob: -6.387916564941406

Token 518: ' while' (ID: 2049)
  Prédit: 'nickname'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nickname' → logprob: -0.7462432384490967
    2. ' nickname' → logprob: -1.3712432384490967
    3. 'name' → logprob: -1.8712432384490967
    4. ' name' → logprob: -2.9962432384490967
    5. 'nick' → logprob: -2.9962432384490967
    6. ' nick' → logprob: -4.371243476867676
    7. ' line' → logprob: -6.121243476867676
    8. 'line' → logprob: -6.496243476867676
    9. '           ' → logprob: -7.246243476867676
    10. 'robot' → logprob: -7.871243476867676

Token 519: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.6943258047103882
    2. ' True' → logprob: -0.6943258047103882
    3. '(True' → logprob: -7.069325923919678
    4. ' line' → logprob: -8.69432544708252
    5. 'line' → logprob: -8.94432544708252
    6. 'nickname' → logprob: -10.94432544708252
    7. 'robots' → logprob: -12.19432544708252
    8. '=True' → logprob: -13.19432544708252
    9. '(' → logprob: -13.56932544708252
    10. ' nickname' → logprob: -13.81932544708252

Token 520: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12741245329380035
    2. ' line' → logprob: -2.3774125576019287
    3. '           ' → logprob: -4.25241231918335
    4. 'line' → logprob: -5.12741231918335
    5. '=line' → logprob: -6.62741231918335
    6. ':' → logprob: -6.75241231918335
    7. '(line' → logprob: -6.75241231918335
    8. '   ' → logprob: -7.37741231918335
    9. '[line' → logprob: -8.252412796020508
    10. '<|end|>' → logprob: -8.252412796020508

Token 521: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6221712231636047
    2. '           ' → logprob: -1.37217116355896
    3. ' line' → logprob: -1.62217116355896
    4. '   ' → logprob: -5.247171401977539
    5. 'line' → logprob: -5.622171401977539
    6. '       ' → logprob: -5.997171401977539
    7. '	line' → logprob: -8.872171401977539
    8. '	           ' → logprob: -9.497171401977539
    9. 'name' → logprob: -9.622171401977539
    10. '#line' → logprob: -9.622171401977539

Token 522: ' nick' (ID: 26479)
  Prédit: 'nick'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nick' (adapté à ' nick') → logprob: -0.6490382552146912
    2. 'nickname' → logprob: -1.399038314819336
    3. 'line' → logprob: -2.524038314819336
    4. 'name' → logprob: -2.649038314819336
    5. ' nick' → logprob: -3.399038314819336
    6. ' nickname' → logprob: -3.649038314819336
    7. ' line' → logprob: -4.149038314819336
    8. ' name' → logprob: -5.524038314819336
    9. 'robot' → logprob: -8.274038314819336
    10. 'ln' → logprob: -10.024038314819336

Token 523: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7325197458267212
    2. '=line' → logprob: -1.2325197458267212
    3. ' =' → logprob: -1.6075197458267212
    4. '_line' → logprob: -3.7325196266174316
    5. 'line' → logprob: -5.857519626617432
    6. ' line' → logprob: -8.48252010345459
    7. '(line' → logprob: -9.48252010345459
    8. '	line' → logprob: -9.60752010345459
    9. '[line' → logprob: -10.10752010345459
    10. '.readline' → logprob: -10.23252010345459

Token 524: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.014995269477367401
    2. ' sys' → logprob: -4.264995098114014
    3. 'input' → logprob: -7.139995098114014
    4. 'line' → logprob: -10.514995574951172
    5. ' input' → logprob: -12.014995574951172
    6. '(sys' → logprob: -12.639995574951172
    7. '=sys' → logprob: -13.514995574951172
    8. '	sys' → logprob: -14.764995574951172
    9. '   ' → logprob: -15.014995574951172
    10. ' line' → logprob: -16.139995574951172

Token 525: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -4.1080467781284824e-05
    2. 'stdin' → logprob: -10.875041007995605
    3. '.stdout' → logprob: -10.875041007995605
    4. '.readline' → logprob: -12.875041007995605
    5. '(stdin' → logprob: -15.625041007995605
    6. '.std' → logprob: -15.750041007995605
    7. '.' → logprob: -16.125041961669922
    8. '.argv' → logprob: -16.500041961669922
    9. ' stdin' → logprob: -17.375041961669922
    10. '.stderr' → logprob: -18.000041961669922

Token 526: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -7.896309739408025e-07
    2. '.stdin' → logprob: -14.375000953674316
    3. '.' → logprob: -16.0
    4. ' readline' → logprob: -17.375
    5. 'stdin' → logprob: -18.625
    6. '=sys' → logprob: -19.375
    7. '.stdout' → logprob: -19.75
    8. '().' → logprob: -20.125
    9. '.readlines' → logprob: -20.875
    10. '(stdin' → logprob: -21.125

Token 527: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005965200834907591
    2. '.strip' → logprob: -7.500596523284912
    3. '.rstrip' → logprob: -10.875596046447754
    4. '()' → logprob: -11.625596046447754
    5. '('').' → logprob: -11.750596046447754
    6. '.readline' → logprob: -12.625596046447754
    7. '()
' → logprob: -13.375596046447754
    8. '("").' → logprob: -14.250596046447754
    9. ' ().' → logprob: -14.875596046447754
    10. '(strip' → logprob: -15.250596046447754

Token 528: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00020401719666551799
    2. 'rstrip' → logprob: -8.500204086303711
    3. ' strip' → logprob: -14.500204086303711
    4. '.strip' → logprob: -18.37520408630371
    5. '_strip' → logprob: -19.37520408630371
    6. 'decode' → logprob: -19.75020408630371
    7. 'trim' → logprob: -19.75020408630371
    8. 'split' → logprob: -20.25020408630371
    9. 'if' → logprob: -21.75020408630371
    10. '(strip' → logprob: -21.87520408630371

Token 529: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007532801944762468
    2. '           ' → logprob: -6.132532596588135
    3. '()
' → logprob: -6.632532596588135
    4. '())' → logprob: -6.757532596588135
    5. '():
' → logprob: -7.257532596588135
    6. '               ' → logprob: -7.507532596588135
    7. ')' → logprob: -7.882532596588135
    8. '()==' → logprob: -7.882532596588135
    9. '<|end|>' → logprob: -8.382533073425293
    10. 'if' → logprob: -9.382533073425293

Token 530: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18094822764396667
    2. '           ' → logprob: -1.805948257446289
    3. '<|end|>' → logprob: -7.305948257446289
    4. '<|end|>' → logprob: -9.555948257446289
    5. '		' → logprob: -9.930948257446289
    6. '	           ' → logprob: -9.930948257446289
    7. ' and' → logprob: -9.930948257446289
    8. ' if' → logprob: -10.305948257446289
    9. '                   ' → logprob: -10.430948257446289
    10. '	       ' → logprob: -10.555948257446289

Token 531: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.29918909072875977
    2. '               ' → logprob: -1.4241890907287598
    3. ' if' → logprob: -4.54918909072876
    4. '           ' → logprob: -4.92418909072876
    5. '                   ' → logprob: -12.049188613891602
    6. '	if' → logprob: -12.049188613891602
    7. 'break' → logprob: -12.174188613891602
    8. '	           ' → logprob: -12.674188613891602
    9. '       ' → logprob: -13.049188613891602
    10. '   ' → logprob: -13.174188613891602

Token 532: ' nick' (ID: 26479)
  Prédit: 'nick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nick' → logprob: -0.0024780353996902704
    2. ' nick' → logprob: -6.002478122711182
    3. 'len' → logprob: -13.002477645874023
    4. '.nick' → logprob: -17.502477645874023
    5. 'nic' → logprob: -17.752477645874023
    6. ' len' → logprob: -18.502477645874023
    7. 'not' → logprob: -18.877477645874023
    8. 'nickname' → logprob: -19.252477645874023
    9. 'nik' → logprob: -19.627477645874023
    10. 'Nick' → logprob: -19.752477645874023

Token 533: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.39778631925582886
    2. ' !=' → logprob: -1.2727863788604736
    3. ':' → logprob: -3.3977863788604736
    4. '!='' → logprob: -4.3977861404418945
    5. '!="' → logprob: -6.5227861404418945
    6. '<|end|>' → logprob: -8.397786140441895
    7. '!==' → logprob: -8.522786140441895
    8. ')!=' → logprob: -8.772786140441895
    9. '()!=' → logprob: -9.397786140441895
    10. '):' → logprob: -9.897786140441895

Token 534: ' '':
' (ID: 125614)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6933304667472839
    2. '''' → logprob: -0.6933304667472839
    3. '"":' → logprob: -8.818330764770508
    4. '':' → logprob: -11.068330764770508
    5. ' '':
' → logprob: -12.068330764770508
    6. ' '' → logprob: -12.193330764770508
    7. '"' → logprob: -13.318330764770508
    8. '""' → logprob: -13.318330764770508
    9. '''
' → logprob: -13.568330764770508
    10. '':''' → logprob: -13.818330764770508

Token 535: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000636308453977108
    2. '           ' → logprob: -8.500636100769043
    3. '               ' → logprob: -8.875636100769043
    4. '		           ' → logprob: -9.250636100769043
    5. ':' → logprob: -9.500636100769043
    6. ':
' → logprob: -10.875636100769043
    7. ',' → logprob: -11.125636100769043
    8. '                       ' → logprob: -11.125636100769043
    9. '				' → logprob: -11.250636100769043
    10. '   ' → logprob: -11.250636100769043

Token 536: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1941021978855133
    2. 'break' (adapté à ' break') → logprob: -1.819102168083191
    3. ' break' → logprob: -4.4441022872924805
    4. '                       ' → logprob: -6.1941022872924805
    5. '               ' → logprob: -8.31910228729248
    6. '	break' → logprob: -9.06910228729248
    7. '           ' → logprob: -10.19410228729248
    8. '				' → logprob: -10.44410228729248
    9. '   ' → logprob: -11.31910228729248
    10. '       ' → logprob: -11.69410228729248

Token 537: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008342110551893711
    2. '       ' → logprob: -4.883342266082764
    3. '               ' → logprob: -8.133341789245605
    4. '<|end|>' → logprob: -8.383341789245605
    5. '
' → logprob: -9.508341789245605
    6. '            
' → logprob: -10.633341789245605
    7. ')' → logprob: -10.758341789245605
    8. ',' → logprob: -11.008341789245605
    9. '          ' → logprob: -11.008341789245605
    10. '```' → logprob: -11.258341789245605

Token 538: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16093924641609192
    2. '       ' → logprob: -1.9109392166137695
    3. '               ' → logprob: -8.66093921661377
    4. '
' → logprob: -8.78593921661377
    5. '```' → logprob: -8.91093921661377
    6. '        ' → logprob: -10.28593921661377
    7. '        
' → logprob: -10.28593921661377
    8. '   ' → logprob: -10.53593921661377
    9. '<|end|>' → logprob: -10.66093921661377
    10. ')' → logprob: -10.66093921661377

Token 539: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7514268755912781
    2. 'k' → logprob: -1.1264269351959229
    3. 'n' → logprob: -3.001426935195923
    4. ' k' → logprob: -3.251426935195923
    5. 'K' → logprob: -3.501426935195923
    6. '#' (adapté à ' #') → logprob: -4.251426696777344
    7. ' n' → logprob: -4.751426696777344
    8. 'm' → logprob: -4.751426696777344
    9. 'times' → logprob: -4.751426696777344
    10. 'time' → logprob: -5.001426696777344

Token 540: ' read' (ID: 1729)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'times' → logprob: -1.0599230527877808
    2. 'M' → logprob: -1.3099230527877808
    3. 'k' → logprob: -2.1849231719970703
    4. 'K' → logprob: -2.5599231719970703
    5. 'num' → logprob: -3.1849231719970703
    6. 'n' → logprob: -3.1849231719970703
    7. 'm' → logprob: -3.4349231719970703
    8. 'time' → logprob: -4.43492317199707
    9. 'L' → logprob: -4.43492317199707
    10. ' times' → logprob: -4.55992317199707

Token 541: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.6602495908737183
    2. 'M' → logprob: -1.1602495908737183
    3. 'K' → logprob: -2.285249710083008
    4. 'k' → logprob: -3.535249710083008
    5. 'm' → logprob: -4.160249710083008
    6. 'line' → logprob: -5.535249710083008
    7. 'L' → logprob: -5.785249710083008
    8. ' times' → logprob: -6.160249710083008
    9. ' M' → logprob: -6.160249710083008
    10. 'time' → logprob: -6.410249710083008

Token 542: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3565504550933838
    2. 'line' → logprob: -1.8565504550933838
    3. ' line' → logprob: -3.231550455093384
    4. ' =' → logprob: -3.231550455093384
    5. '_line' → logprob: -4.231550216674805
    6. '       ' → logprob: -4.481550216674805
    7. 'and' → logprob: -4.856550216674805
    8. ' and' → logprob: -4.856550216674805
    9. '=line' → logprob: -5.231550216674805
    10. '=' → logprob: -5.356550216674805

Token 543: ' velocities' (ID: 157421)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.020724179223179817
    2. ' positions' → logprob: -4.770724296569824
    3. 'xs' → logprob: -5.395724296569824
    4. 'vel' → logprob: -6.270724296569824
    5. 'pos' → logprob: -6.270724296569824
    6. 'coords' → logprob: -7.520724296569824
    7. 'values' → logprob: -7.645724296569824
    8. 'points' → logprob: -7.645724296569824
    9. 'coordinates' → logprob: -7.645724296569824
    10. 'initial' → logprob: -8.270724296569824

Token 544: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06441444903612137
    2. '
' → logprob: -3.5644145011901855
    3. ' times' → logprob: -4.5644145011901855
    4. '       ' → logprob: -4.6894145011901855
    5. 'times' → logprob: -5.5644145011901855
    6. '```' → logprob: -6.0644145011901855
    7. '            
' → logprob: -6.3144145011901855
    8. '               ' → logprob: -6.8144145011901855
    9. '    
' → logprob: -7.0644145011901855
    10. '        
' → logprob: -7.4394145011901855

Token 545: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04762088879942894
    2. ' times' → logprob: -3.7976207733154297
    3. 'times' → logprob: -4.79762077331543
    4. '       ' → logprob: -4.92262077331543
    5. ' line' → logprob: -6.04762077331543
    6. '```' → logprob: -6.92262077331543
    7. '
' → logprob: -7.04762077331543
    8. 'line' → logprob: -7.17262077331543
    9. '               ' → logprob: -7.17262077331543
    10. ' lines' → logprob: -7.67262077331543

Token 546: ' times' (ID: 4238)
  Prédit: ' times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.5005211234092712
    2. 'times' (adapté à ' times') → logprob: -2.375521183013916
    3. ' k' → logprob: -3.000521183013916
    4. ' M' → logprob: -3.125521183013916
    5. '           ' → logprob: -3.250521183013916
    6. ' line' → logprob: -3.500521183013916
    7. ' n' → logprob: -3.875521183013916
    8. 'k' → logprob: -4.125521183013916
    9. ' L' → logprob: -4.500521183013916
    10. 'M' → logprob: -4.500521183013916

Token 547: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3514498472213745
    2. ' =' → logprob: -1.2264498472213745
    3. '_line' → logprob: -6.351449966430664
    4. '=line' → logprob: -7.726449966430664
    5. 'line' → logprob: -7.976449966430664
    6. ',' → logprob: -8.976449966430664
    7. '   ' → logprob: -9.101449966430664
    8. '=sys' → logprob: -9.601449966430664
    9. '=[]' → logprob: -9.726449966430664
    10. ' line' → logprob: -10.226449966430664

Token 548: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0062790438532829285
    2. '[]' → logprob: -5.256278991699219
    3. '[]
' → logprob: -7.381278991699219
    4. '[list' → logprob: -8.131278991699219
    5. ' list' → logprob: -9.506278991699219
    6. '[' → logprob: -10.006278991699219
    7. '[]

' → logprob: -12.131278991699219
    8. '[int' → logprob: -14.631278991699219
    9. ' []' → logprob: -14.881278991699219
    10. '[]}' → logprob: -14.881278991699219

Token 549: '           ' (ID: 352)
  Prédit: 'vel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vel' → logprob: -1.2286829948425293
    2. ' velocities' → logprob: -1.4786829948425293
    3. 'while' → logprob: -1.7286829948425293
    4. 'positions' → logprob: -1.8536829948425293
    5. 'xs' → logprob: -3.1036829948425293
    6. 'coords' → logprob: -4.353682994842529
    7. 'for' → logprob: -4.478682994842529
    8. ' while' → logprob: -4.603682994842529
    9. 'points' → logprob: -4.603682994842529
    10. 'velocity' → logprob: -4.853682994842529

Token 550: ' xs' (ID: 26642)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' (adapté à ' xs') → logprob: -0.36931437253952026
    2. 'while' → logprob: -1.994314432144165
    3. ' xs' → logprob: -2.744314432144165
    4. 'v' → logprob: -3.619314432144165
    5. ' while' → logprob: -3.869314432144165
    6. 'vel' → logprob: -3.869314432144165
    7. 'positions' → logprob: -4.119314193725586
    8. 'for' → logprob: -5.119314193725586
    9. ' positions' → logprob: -5.369314193725586
    10. ' v' → logprob: -5.744314193725586

Token 551: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14379741251468658
    2. '=' → logprob: -2.0187973976135254
    3. '=[]' → logprob: -7.643797397613525
    4. ',' → logprob: -8.268797874450684
    5. '=[]
' → logprob: -8.893797874450684
    6. '   ' → logprob: -9.518797874450684
    7. '.append' → logprob: -9.643797874450684
    8. '<|end|>' → logprob: -10.393797874450684
    9. '[]' → logprob: -11.518797874450684
    10. ' ' → logprob: -11.643797874450684

Token 552: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3869970142841339
    2. '[]
' → logprob: -1.1369969844818115
    3. '=[]
' → logprob: -9.63699722290039
    4. '=[]' → logprob: -9.88699722290039
    5. ' []
' → logprob: -12.76199722290039
    6. '[]

' → logprob: -13.01199722290039
    7. '[]=' → logprob: -13.26199722290039
    8. '=' → logprob: -14.01199722290039
    9. '[' → logprob: -14.01199722290039
    10. ' []' → logprob: -14.51199722290039

Token 553: '           ' (ID: 352)
  Prédit: ' ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ys' → logprob: -0.26713186502456665
    2. 'ys' → logprob: -1.8921318054199219
    3. '[]
' → logprob: -3.142131805419922
    4. '=[]
' → logprob: -4.017131805419922
    5. 's' → logprob: -4.142131805419922
    6. 'Ys' → logprob: -6.267131805419922
    7. '[]' → logprob: -6.392131805419922
    8. '
' → logprob: -7.142131805419922
    9. ' []
' → logprob: -7.517131805419922
    10. 'while' → logprob: -8.267131805419922

Token 554: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' (adapté à ' ys') → logprob: -0.0015023599844425917
    2. ' ys' → logprob: -6.501502513885498
    3. 'Ys' → logprob: -17.751502990722656
    4. 'yses' → logprob: -19.251502990722656
    5. 'tys' → logprob: -19.251502990722656
    6. 'sys' → logprob: -19.751502990722656
    7. 'zs' → logprob: -19.876502990722656
    8. 'hs' → logprob: -20.126502990722656
    9. 'ws' → logprob: -20.126502990722656
    10. 'rys' → logprob: -20.126502990722656

Token 555: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35167261958122253
    2. '=' → logprob: -1.226672649383545
    3. '=[]
' → logprob: -6.351672649383545
    4. '=[]' → logprob: -7.101672649383545
    5. '=
' → logprob: -8.726672172546387
    6. '[]' → logprob: -8.976672172546387
    7. '<|end|>' → logprob: -9.476672172546387
    8. '[]
' → logprob: -9.726672172546387
    9. '   ' → logprob: -9.726672172546387
    10. ' =
' → logprob: -10.101672172546387

Token 556: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1602308303117752
    2. '[]
' → logprob: -1.9102308750152588
    3. '[]

' → logprob: -12.53523063659668
    4. ' []' → logprob: -13.53523063659668
    5. '[])' → logprob: -14.66023063659668
    6. ' []
' → logprob: -15.03523063659668
    7. '[]}' → logprob: -15.16023063659668
    8. '[' → logprob: -15.16023063659668
    9. '[])
' → logprob: -15.53523063659668
    10. '=[]' → logprob: -16.41023063659668

Token 557: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023500872775912285
    2. ' velocities' → logprob: -4.523500919342041
    3. '
' → logprob: -5.023500919342041
    4. 'v' → logprob: -6.148500919342041
    5. 'vel' → logprob: -6.523500919342041
    6. 'while' → logprob: -8.023500442504883
    7. ' for' → logprob: -8.273500442504883
    8. ' v' → logprob: -8.773500442504883
    9. '            
' → logprob: -8.773500442504883
    10. ' line' → logprob: -8.898500442504883

Token 558: ' v' (ID: 323)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7761780023574829
    2. 'for' → logprob: -1.401178002357483
    3. ' for' → logprob: -2.0261778831481934
    4. ' while' → logprob: -2.2761778831481934
    5. 'line' → logprob: -3.2761778831481934
    6. ' line' → logprob: -4.526177883148193
    7. '           ' → logprob: -4.901177883148193
    8. 'count' → logprob: -7.526177883148193
    9. ' vx' → logprob: -8.151178359985352
    10. 'vx' → logprob: -8.401178359985352

Token 559: 'xs' (ID: 33335)
  Prédit: 'xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.0010472200810909271
    2. 'x' → logprob: -6.876047134399414
    3. 's' → logprob: -11.751047134399414
    4. 'els' → logprob: -12.876047134399414
    5. 'xes' → logprob: -13.376047134399414
    6. ' xs' → logprob: -13.876047134399414
    7. 'ys' → logprob: -14.501047134399414
    8. 'zs' → logprob: -14.751047134399414
    9. '_x' → logprob: -15.001047134399414
    10. '=' → logprob: -17.001047134399414

Token 560: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020595496520400047
    2. ' =' → logprob: -3.8955955505371094
    3. '=[]' → logprob: -10.02059555053711
    4. '.append' → logprob: -12.27059555053711
    5. '=[]
' → logprob: -13.14559555053711
    6. '[]' → logprob: -13.14559555053711
    7. '   ' → logprob: -15.89559555053711
    8. 's' → logprob: -16.27059555053711
    9. 'append' → logprob: -16.64559555053711
    10. '[:]' → logprob: -16.77059555053711

Token 561: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -4.47757811343763e-05
    2. '[]
' → logprob: -10.125044822692871
    3. '[]}' → logprob: -13.750044822692871
    4. '[])' → logprob: -13.750044822692871
    5. '[' → logprob: -14.000044822692871
    6. ' []' → logprob: -14.125044822692871
    7. '=[]' → logprob: -14.625044822692871
    8. '[]

' → logprob: -15.625044822692871
    9. '[]>' → logprob: -16.000043869018555
    10. '([]' → logprob: -16.125043869018555

Token 562: '           ' (ID: 352)
  Prédit: '=[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]
' → logprob: -0.5143943428993225
    2. ' =' → logprob: -1.1393942832946777
    3. '           ' → logprob: -3.3893942832946777
    4. 'vs' → logprob: -3.6393942832946777
    5. '[]
' → logprob: -5.264394283294678
    6. 'v' → logprob: -5.514394283294678
    7. 'for' → logprob: -6.514394283294678
    8. 's' → logprob: -6.514394283294678
    9. '=' → logprob: -6.764394283294678
    10. '   ' → logprob: -7.139394283294678

Token 563: ' vys' (ID: 66128)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -1.2237331867218018
    2. 'vs' → logprob: -1.2237331867218018
    3. 'v' → logprob: -1.4737331867218018
    4. ' vys' → logprob: -1.7237331867218018
    5. '=' → logprob: -6.973732948303223
    6. ' vs' → logprob: -7.098732948303223
    7. ' v' → logprob: -7.348732948303223
    8. 'sys' → logprob: -7.473732948303223
    9. ' =' → logprob: -8.098732948303223
    10. 'rys' → logprob: -8.973732948303223

Token 564: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6484848856925964
    2. '=' → logprob: -0.7734848856925964
    3. '=[]
' → logprob: -4.773484706878662
    4. '=[]' → logprob: -5.273484706878662
    5. '   ' → logprob: -7.273484706878662
    6. 'while' → logprob: -7.898484706878662
    7. '[]' → logprob: -8.27348518371582
    8. 'for' → logprob: -9.14848518371582
    9. '.append' → logprob: -9.27348518371582
    10. 'line' → logprob: -9.39848518371582

Token 565: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0034538409672677517
    2. '[]
' → logprob: -5.753453731536865
    3. ' []' → logprob: -8.253454208374023
    4. '[]

' → logprob: -11.878454208374023
    5. '[])' → logprob: -12.878454208374023
    6. '[' → logprob: -13.378454208374023
    7. '[]}' → logprob: -13.503454208374023
    8. '[],' → logprob: -13.753454208374023
    9. ' []
' → logprob: -14.128454208374023
    10. '([]' → logprob: -14.128454208374023

Token 566: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2191513031721115
    2. ' for' → logprob: -2.844151258468628
    3. '       ' → logprob: -3.094151258468628
    4. ' while' → logprob: -3.219151258468628
    5. 'while' → logprob: -3.719151258468628
    6. '
' → logprob: -4.344151496887207
    7. ' line' → logprob: -5.094151496887207
    8. 'for' → logprob: -5.344151496887207
    9. '```' → logprob: -6.344151496887207
    10. '   ' → logprob: -6.594151496887207

Token 567: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3224470019340515
    2. '           ' → logprob: -2.3224470615386963
    3. 'line' → logprob: -2.4474470615386963
    4. ' while' → logprob: -3.1974470615386963
    5. 'for' → logprob: -3.8224470615386963
    6. 'k' → logprob: -5.322446823120117
    7. ' for' → logprob: -5.572446823120117
    8. 'num' → logprob: -5.697446823120117
    9. 'count' → logprob: -5.697446823120117
    10. ' line' → logprob: -5.697446823120117

Token 568: ' read' (ID: 1729)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1930279731750488
    2. 'while' → logprob: -1.3180279731750488
    3. 'M' → logprob: -1.9430279731750488
    4. 'k' → logprob: -1.9430279731750488
    5. 'line' → logprob: -2.568027973175049
    6. 'count' → logprob: -4.068027973175049
    7. 'time' → logprob: -4.568027973175049
    8. 'm' → logprob: -4.568027973175049
    9. 'K' → logprob: -4.818027973175049
    10. 'num' → logprob: -5.568027973175049

Token 569: ' first' (ID: 1577)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4525540769100189
    2. 'M' → logprob: -1.8275541067123413
    3. 'K' → logprob: -1.9525541067123413
    4. 'for' → logprob: -4.327554225921631
    5. ' k' → logprob: -4.327554225921631
    6. ' M' → logprob: -5.202554225921631
    7. ' for' → logprob: -5.577554225921631
    8. '   ' → logprob: -5.577554225921631
    9. ' K' → logprob: -5.702554225921631
    10. 'm' → logprob: -5.827554225921631

Token 570: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.7016280293464661
    2. ' line' → logprob: -0.8266280293464661
    3. 'time' → logprob: -3.7016279697418213
    4. 'pos' → logprob: -3.7016279697418213
    5. ' time' → logprob: -5.8266282081604
    6. ' pos' → logprob: -6.0766282081604
    7. 'point' → logprob: -6.2016282081604
    8. 'token' → logprob: -6.5766282081604
    9. '_line' → logprob: -6.7016282081604
    10. 'data' → logprob: -6.9516282081604

Token 571: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7133784294128418
    2. ' line' → logprob: -1.0883784294128418
    3. 'line' → logprob: -2.463378429412842
    4. ' =' → logprob: -3.713378429412842
    5. '=line' → logprob: -3.713378429412842
    6. ' parts' → logprob: -4.963378429412842
    7. ' while' → logprob: -5.088378429412842
    8. 'while' → logprob: -5.463378429412842
    9. '[line' → logprob: -5.588378429412842
    10. 'time' → logprob: -5.963378429412842

Token 572: ' t' (ID: 260)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.35642242431640625
    2. 'line' → logprob: -1.7314224243164062
    3. ' parts' → logprob: -2.9814224243164062
    4. ' l' → logprob: -4.606422424316406
    5. 'time' → logprob: -4.606422424316406
    6. ' time' → logprob: -4.981422424316406
    7. ' data' → logprob: -5.106422424316406
    8. 'l' → logprob: -5.481422424316406
    9. ' t' → logprob: -5.481422424316406
    10. 'parts' → logprob: -5.481422424316406

Token 573: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6143482327461243
    2. '_line' → logprob: -1.4893481731414795
    3. 'line' → logprob: -2.4893481731414795
    4. ',' → logprob: -3.1143481731414795
    5. '0' → logprob: -3.3643481731414795
    6. 's' → logprob: -3.4893481731414795
    7. '=' → logprob: -4.114348411560059
    8. '=line' → logprob: -5.739348411560059
    9. ' line' → logprob: -5.989348411560059
    10. 'pos' → logprob: -6.114348411560059

Token 574: ' x' (ID: 1215)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2693402171134949
    2. '=' → logprob: -2.2693402767181396
    3. ' =' → logprob: -2.6443402767181396
    4. ',line' → logprob: -3.6443402767181396
    5. '=line' → logprob: -4.1443400382995605
    6. ' line' → logprob: -5.5193400382995605
    7. '           ' → logprob: -5.8943400382995605
    8. 'line' → logprob: -5.8943400382995605
    9. 'tokens' → logprob: -6.2693400382995605
    10. ' ,' → logprob: -6.3943400382995605

Token 575: '0' (ID: 15)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2905557453632355
    2. ' y' → logprob: -1.790555715560913
    3. '0' → logprob: -2.540555715560913
    4. ',' → logprob: -5.165555953979492
    5. ',y' → logprob: -7.540555953979492
    6. 'v' → logprob: -10.165555953979492
    7. 'yv' → logprob: -10.290555953979492
    8. ' ' → logprob: -10.415555953979492
    9. '	y' → logprob: -10.665555953979492
    10. '_' → logprob: -10.915555953979492

Token 576: ' y' (ID: 342)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2362242043018341
    2. '=' → logprob: -2.2362241744995117
    3. ',' → logprob: -2.4862241744995117
    4. '=line' → logprob: -4.736224174499512
    5. '0' → logprob: -6.111224174499512
    6. 'x' → logprob: -6.611224174499512
    7. ',v' → logprob: -6.611224174499512
    8. ',line' → logprob: -6.736224174499512
    9. ',x' → logprob: -6.861224174499512
    10. 't' → logprob: -7.611224174499512

Token 577: '0' (ID: 15)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6693755388259888
    2. '0' → logprob: -0.7943755388259888
    3. 's' → logprob: -5.044375419616699
    4. ')' → logprob: -5.294375419616699
    5. ',' → logprob: -5.294375419616699
    6. ' _' → logprob: -5.294375419616699
    7. ' =' → logprob: -5.419375419616699
    8. '[' → logprob: -5.419375419616699
    9. '[]' → logprob: -6.794375419616699
    10. '_line' → logprob: -7.169375419616699

Token 578: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3576107919216156
    2. 'line' → logprob: -1.732610821723938
    3. ' line' → logprob: -2.7326107025146484
    4. 't' → logprob: -3.8576107025146484
    5. '
' → logprob: -4.607610702514648
    6. 'while' → logprob: -5.482610702514648
    7. '=line' → logprob: -5.732610702514648
    8. ' =' → logprob: -5.857610702514648
    9. '            
' → logprob: -5.982610702514648
    10. ',' → logprob: -5.982610702514648

Token 579: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01569998450577259
    2. ' line' → logprob: -5.140699863433838
    3. 'line' → logprob: -5.390699863433838
    4. '
' → logprob: -6.265699863433838
    5. '       ' → logprob: -7.265699863433838
    6. 't' → logprob: -7.390699863433838
    7. '[line' → logprob: -7.515699863433838
    8. '#line' → logprob: -8.015700340270996
    9. '            
' → logprob: -8.515700340270996
    10. '=line' → logprob: -9.265700340270996

Token 580: ' while' (ID: 2049)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.9716009497642517
    2. '           ' → logprob: -1.3466010093688965
    3. ' line' → logprob: -1.4716010093688965
    4. 't' → logprob: -2.4716010093688965
    5. ' t' → logprob: -3.2216010093688965
    6. ' first' → logprob: -5.8466010093688965
    7. 'first' → logprob: -6.2216010093688965
    8. ' while' → logprob: -7.8466010093688965
    9. 'while' (adapté à ' while') → logprob: -8.221600532531738
    10. 'time' → logprob: -8.221600532531738

Token 581: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.25210049748420715
    2. ' True' → logprob: -1.5021004676818848
    3. 'line' → logprob: -9.252100944519043
    4. ' line' → logprob: -10.377100944519043
    5. '(True' → logprob: -10.752100944519043
    6. 'times' → logprob: -11.627100944519043
    7. 'len' → logprob: -12.627100944519043
    8. 'true' → logprob: -12.752100944519043
    9. ' times' → logprob: -12.877100944519043
    10. '1' → logprob: -13.877100944519043

Token 582: ':
' (ID: 734)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.4938453435897827
    2. '               ' → logprob: -1.4938453435897827
    3. 'line' → logprob: -2.1188454627990723
    4. '(line' → logprob: -4.368845462799072
    5. '=line' → logprob: -4.868845462799072
    6. '	line' → logprob: -5.243845462799072
    7. ':
' → logprob: -5.368845462799072
    8. ':' → logprob: -5.493845462799072
    9. '[line' → logprob: -5.493845462799072
    10. '#line' → logprob: -5.993845462799072

Token 583: '               ' (ID: 506)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.06883592903614044
    2. 'line' → logprob: -3.193835973739624
    3. '               ' → logprob: -3.818835973739624
    4. '           ' → logprob: -6.193835735321045
    5. '	line' → logprob: -7.818835735321045
    6. '#line' → logprob: -9.068836212158203
    7. 't' → logprob: -9.068836212158203
    8. '   ' → logprob: -9.193836212158203
    9. 'try' → logprob: -9.193836212158203
    10. ' True' → logprob: -9.318836212158203

Token 584: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.5879020094871521
    2. ' line' → logprob: -0.8379020094871521
    3. 'data' → logprob: -5.087902069091797
    4. ' l' → logprob: -6.462902069091797
    5. ' data' → logprob: -6.587902069091797
    6. 'l' → logprob: -7.212902069091797
    7. 'ln' → logprob: -8.087902069091797
    8. 'first' → logprob: -8.462902069091797
    9. ' parts' → logprob: -8.712902069091797
    10. 'try' → logprob: -8.962902069091797

Token 585: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18090523779392242
    2. '=' → logprob: -1.8059052228927612
    3. '=line' → logprob: -6.805905342102051
    4. 'tokens' → logprob: -10.05590534210205
    5. 'token' → logprob: -13.55590534210205
    6. ' ' → logprob: -13.93090534210205
    7. 'line' → logprob: -13.93090534210205
    8. '               ' → logprob: -14.55590534210205
    9. '.strip' → logprob: -14.68090534210205
    10. '   ' → logprob: -14.80590534210205

Token 586: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.04858850687742233
    2. ' sys' → logprob: -3.048588514328003
    3. '=sys' → logprob: -14.548588752746582
    4. 'line' → logprob: -14.673588752746582
    5. '	sys' → logprob: -16.173587799072266
    6. '(sys' → logprob: -17.048587799072266
    7. '                   ' → logprob: -17.173587799072266
    8. ' line' → logprob: -17.298587799072266
    9. '               ' → logprob: -18.048587799072266
    10. 'Sys' → logprob: -18.798587799072266

Token 587: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.019563326612114906
    2. 'stdin' → logprob: -4.6445631980896
    3. '.readline' → logprob: -5.2695631980896
    4. '=sys' → logprob: -6.0195631980896
    5. '.stdout' → logprob: -7.2695631980896
    6. 'sys' → logprob: -7.7695631980896
    7. 'stdout' → logprob: -8.769563674926758
    8. '=' → logprob: -8.894563674926758
    9. '(stdin' → logprob: -8.894563674926758
    10. 'in' → logprob: -9.144563674926758

Token 588: '.readline' (ID: 74673)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.3586840331554413
    2. '.readline' → logprob: -1.6086840629577637
    3. 'sys' → logprob: -2.3586840629577637
    4. 'strip' → logprob: -5.233684062957764
    5. 'stdin' → logprob: -7.858684062957764
    6. 'rstrip' → logprob: -7.858684062957764
    7. '=sys' → logprob: -7.983684062957764
    8. ' readline' → logprob: -8.483683586120605
    9. '=' → logprob: -11.108683586120605
    10. 'getline' → logprob: -11.233683586120605

Token 589: '()
' (ID: 1234)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.10513631254434586
    2. '.strip' → logprob: -2.6051363945007324
    3. '=' → logprob: -4.730136394500732
    4. ' =' → logprob: -5.105136394500732
    5. '               ' → logprob: -5.605136394500732
    6. '=line' → logprob: -6.230136394500732
    7. '                   ' → logprob: -6.355136394500732
    8. '():
' → logprob: -6.855136394500732
    9. '<|end|>' → logprob: -7.980136394500732
    10. '(line' → logprob: -8.105135917663574

Token 590: '               ' (ID: 506)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.23080572485923767
    2. '               ' → logprob: -1.98080575466156
    3. '().' → logprob: -3.6058056354522705
    4. '                   ' → logprob: -4.10580587387085
    5. '           ' → logprob: -4.85580587387085
    6. '=' → logprob: -5.35580587387085
    7. '.rstrip' → logprob: -5.73080587387085
    8. ' =' → logprob: -6.23080587387085
    9. '.' → logprob: -6.98080587387085
    10. '<|end|>' → logprob: -7.48080587387085

Token 591: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0990770235657692
    2. 'if' (adapté à ' if') → logprob: -2.474076986312866
    3. '               ' → logprob: -4.599077224731445
    4. ' line' → logprob: -11.599077224731445
    5. '                   ' → logprob: -12.349077224731445
    6. '           ' → logprob: -12.849077224731445
    7. 'line' → logprob: -13.224077224731445
    8. 'tokens' → logprob: -13.474077224731445
    9. '	if' → logprob: -13.724077224731445
    10. ' tokens' → logprob: -14.224077224731445

Token 592: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.38688310980796814
    2. ' line' → logprob: -1.1368831396102905
    3. '(line' → logprob: -12.511882781982422
    4. 'not' → logprob: -12.636882781982422
    5. ' not' → logprob: -13.011882781982422
    6. '=line' → logprob: -13.761882781982422
    7. '#line' → logprob: -14.261882781982422
    8. '	line' → logprob: -14.386882781982422
    9. '[line' → logprob: -14.886882781982422
    10. ' ' → logprob: -16.136882781982422

Token 593: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0006520323222503066
    2. 'strip' → logprob: -7.875651836395264
    3. '==' → logprob: -9.000652313232422
    4. '.startswith' → logprob: -9.625652313232422
    5. '```' → logprob: -11.250652313232422
    6. '_strip' → logprob: -11.375652313232422
    7. '.rstrip' → logprob: -11.625652313232422
    8. ' ==' → logprob: -12.000652313232422
    9. '<|end|>' → logprob: -12.250652313232422
    10. ' stripped' → logprob: -12.375652313232422

Token 594: '()' (ID: 416)
  Prédit: '()!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()!=' → logprob: -0.7513519525527954
    2. '()' → logprob: -0.8763519525527954
    3. ' !=' → logprob: -2.751351833343506
    4. '!=' → logprob: -4.251351833343506
    5. '()==' → logprob: -4.251351833343506
    6. '!='' → logprob: -5.001351833343506
    7. '():
' → logprob: -5.251351833343506
    8. '==' → logprob: -6.251351833343506
    9. '().' → logprob: -6.376351833343506
    10. '():' → logprob: -6.626351833343506

Token 595: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.719890832901001
    2. '==' → logprob: -1.219890832901001
    3. ' !=' → logprob: -1.719890832901001
    4. '!='' → logprob: -4.094890594482422
    5. '()!=' → logprob: -5.219890594482422
    6. '.startswith' → logprob: -5.469890594482422
    7. ' ==' → logprob: -5.594890594482422
    8. ':' → logprob: -5.719890594482422
    9. '<|end|>' → logprob: -5.969890594482422
    10. ')!=' → logprob: -7.469890594482422

Token 596: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.03805181756615639
    2. ''' → logprob: -3.2880518436431885
    3. '"":' → logprob: -12.16305160522461
    4. '""' → logprob: -13.28805160522461
    5. ''''' → logprob: -13.91305160522461
    6. '':' → logprob: -14.28805160522461
    7. ' '':
' → logprob: -14.41305160522461
    8. ''>' → logprob: -14.78805160522461
    9. '"' → logprob: -15.03805160522461
    10. ''',' → logprob: -15.66305160522461

Token 597: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005539901088923216
    2. '               ' → logprob: -5.880539894104004
    3. ':' → logprob: -6.380539894104004
    4. '                       ' → logprob: -8.130539894104004
    5. '           ' → logprob: -8.255539894104004
    6. ':
' → logprob: -8.755539894104004
    7. ',' → logprob: -9.630539894104004
    8. ' =' → logprob: -10.005539894104004
    9. 'break' → logprob: -10.255539894104004
    10. '		           ' → logprob: -10.630539894104004

Token 598: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.47592082619667053
    2. 'break' (adapté à ' break') → logprob: -1.3509207963943481
    3. '                   ' → logprob: -2.7259209156036377
    4. ' parts' → logprob: -3.2259209156036377
    5. ' t' → logprob: -5.600920677185059
    6. 'parts' → logprob: -5.850920677185059
    7. 't' → logprob: -5.975920677185059
    8. 'tokens' → logprob: -6.100920677185059
    9. '               ' → logprob: -6.725920677185059
    10. ' tokens' → logprob: -6.975920677185059

Token 599: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015731871826574206
    2. '               ' → logprob: -7.376573085784912
    3. 'tokens' → logprob: -7.876573085784912
    4. '       ' → logprob: -8.37657356262207
    5. 't' → logprob: -8.87657356262207
    6. '                   ' → logprob: -9.62657356262207
    7. '		' → logprob: -11.00157356262207
    8. '            
' → logprob: -11.25157356262207
    9. ' parts' → logprob: -11.37657356262207
    10. '	       ' → logprob: -11.37657356262207

Token 600: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014927227748557925
    2. '               ' → logprob: -7.501492500305176
    3. 't' → logprob: -8.001492500305176
    4. 'tokens' → logprob: -8.126492500305176
    5. '       ' → logprob: -8.626492500305176
    6. '                   ' → logprob: -10.251492500305176
    7. '		' → logprob: -10.876492500305176
    8. ' parts' → logprob: -11.251492500305176
    9. 'parts' → logprob: -11.501492500305176
    10. '            
' → logprob: -11.751492500305176

Token 601: ' parts' (ID: 7881)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6377571225166321
    2. '           ' → logprob: -1.0127570629119873
    3. 'parts' (adapté à ' parts') → logprob: -3.3877570629119873
    4. 'tokens' → logprob: -3.5127570629119873
    5. ' t' → logprob: -3.8877570629119873
    6. ' parts' → logprob: -3.8877570629119873
    7. ' tokens' → logprob: -6.762757301330566
    8. 'time' → logprob: -6.762757301330566
    9. '       ' → logprob: -7.262757301330566
    10. '               ' → logprob: -8.137757301330566

Token 602: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07899113744497299
    2. '=' → logprob: -2.578991174697876
    3. '=line' → logprob: -9.203990936279297
    4. 'tokens' → logprob: -14.578990936279297
    5. '＝' → logprob: -16.953990936279297
    6. '_tokens' → logprob: -16.953990936279297
    7. '   ' → logprob: -17.078990936279297
    8. ' ' → logprob: -17.203990936279297
    9. '=list' → logprob: -17.578990936279297
    10. '[' → logprob: -17.703990936279297

Token 603: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0011723674833774567
    2. ' line' → logprob: -6.7511725425720215
    3. 'list' → logprob: -13.251172065734863
    4. '[line' → logprob: -15.001172065734863
    5. '(line' → logprob: -18.75117301940918
    6. '=line' → logprob: -19.50117301940918
    7. '[' → logprob: -20.12617301940918
    8. '	line' → logprob: -20.50117301940918
    9. '#line' → logprob: -21.25117301940918
    10. ' list' → logprob: -21.75117301940918

Token 604: '.strip' (ID: 40613)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009994645603001118
    2. ' =' → logprob: -4.6349945068359375
    3. '=line' → logprob: -8.759994506835938
    4. '.strip' → logprob: -9.509994506835938
    5. '.split' → logprob: -12.259994506835938
    6. 'tokens' → logprob: -14.009994506835938
    7. '=s' → logprob: -14.134994506835938
    8. '_tokens' → logprob: -14.884994506835938
    9. '.' → logprob: -15.634994506835938
    10. '.=' → logprob: -16.134994506835938

Token 605: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0017752613639459014
    2. '()' → logprob: -6.37677526473999
    3. '()[' → logprob: -10.251774787902832
    4. '.split' → logprob: -10.501774787902832
    5. '()
' → logprob: -12.126774787902832
    6. 'split' → logprob: -13.001774787902832
    7. '()['' → logprob: -14.251774787902832
    8. '=' → logprob: -14.376774787902832
    9. '()='' → logprob: -14.751774787902832
    10. ' =' → logprob: -15.501774787902832

Token 606: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -15.75
    3. '(split' → logprob: -17.25
    4. 'spl' → logprob: -18.75
    5. '.split' → logprob: -19.375
    6. 'plit' → logprob: -21.75
    7. '_split' → logprob: -22.125
    8. '```' → logprob: -22.125
    9. 'strip' → logprob: -23.25
    10. 's' → logprob: -23.75

Token 607: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 608: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.252003014087677
    2. '```' → logprob: -2.7520029544830322
    3. 't' → logprob: -3.0020029544830322
    4. '       ' → logprob: -3.5020029544830322
    5. '[' → logprob: -4.502003192901611
    6. '		' → logprob: -4.752003192901611
    7. '[t' → logprob: -4.752003192901611
    8. '	       ' → logprob: -4.877003192901611
    9. '
' → logprob: -5.002003192901611
    10. '	t' → logprob: -5.377003192901611

Token 609: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.008403933607041836
    2. '           ' → logprob: -5.383403778076172
    3. ' t' → logprob: -5.633403778076172
    4. 'times' → logprob: -9.633403778076172
    5. '               ' → logprob: -10.133403778076172
    6. 'if' → logprob: -10.633403778076172
    7. '```' → logprob: -11.008403778076172
    8. '                   ' → logprob: -11.258403778076172
    9. '       ' → logprob: -11.758403778076172
    10. '            
' → logprob: -11.883403778076172

Token 610: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023699386045336723
    2. '[' → logprob: -4.2736992835998535
    3. '_' → logprob: -5.2736992835998535
    4. 'okens' → logprob: -7.0236992835998535
    5. '_=' → logprob: -7.0236992835998535
    6. 'ime' → logprob: -7.6486992835998535
    7. '_tokens' → logprob: -7.8986992835998535
    8. ' =' → logprob: -8.023699760437012
    9. '.append' → logprob: -8.023699760437012
    10. 'imes' → logprob: -8.648699760437012

Token 611: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5304317474365234
    2. ' =' → logprob: -0.9054317474365234
    3. ',' → logprob: -5.405431747436523
    4. '=int' → logprob: -5.905431747436523
    5. '[int' → logprob: -10.905431747436523
    6. '=float' → logprob: -11.655431747436523
    7. ')' → logprob: -11.780431747436523
    8. '[' → logprob: -11.780431747436523
    9. ',int' → logprob: -12.405431747436523
    10. 'int' → logprob: -13.030431747436523

Token 612: ' int' (ID: 677)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.062287408858537674
    2. 'int' → logprob: -2.8122873306274414
    3. ' float' → logprob: -8.062287330627441
    4. ' int' → logprob: -12.312287330627441
    5. '(float' → logprob: -16.937288284301758
    6. '0' → logprob: -17.937288284301758
    7. '=float' → logprob: -17.937288284301758
    8. '	float' → logprob: -18.437288284301758
    9. 'flo' → logprob: -20.187288284301758
    10. '[int' → logprob: -20.687288284301758

Token 613: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.0011712945997714996
    2. 'parts' → logprob: -6.751171112060547
    3. '(' → logprob: -13.876171112060547
    4. ' parts' → logprob: -15.876171112060547
    5. '(
' → logprob: -17.001171112060547
    6. '(part' → logprob: -17.876171112060547
    7. 'Parts' → logprob: -18.876171112060547
    8. '_parts' → logprob: -19.251171112060547
    9. '(tokens' → logprob: -19.876171112060547
    10. '(points' → logprob: -20.001171112060547

Token 614: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.0722858102526516e-05
    2. '0' → logprob: -10.125041007995605
    3. '(' → logprob: -14.500041007995605
    4. ' [' → logprob: -16.50004005432129
    5. ')' → logprob: -17.12504005432129
    6. '[
' → logprob: -17.62504005432129
    7. '```' → logprob: -18.75004005432129
    8. '   ' → logprob: -19.50004005432129
    9. '1' → logprob: -19.62504005432129
    10. ')[' → logprob: -19.87504005432129

Token 615: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -16.375
    3. ' ' → logprob: -16.625
    4. '[' → logprob: -17.125
    5. '
' → logprob: -18.625
    6. '   ' → logprob: -19.75
    7. '```' → logprob: -19.75
    8. '2' → logprob: -21.0
    9. ')' → logprob: -21.125
    10. '(' → logprob: -21.625

Token 616: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009873192757368088
    2. ')
' → logprob: -7.125987529754639
    3. '])' → logprob: -10.00098705291748
    4. ')]' → logprob: -10.00098705291748
    5. '),' → logprob: -10.37598705291748
    6. ')])' → logprob: -11.37598705291748
    7. '<|end|>' → logprob: -11.50098705291748
    8. ' )' → logprob: -11.62598705291748
    9. '[' → logprob: -11.87598705291748
    10. ')#' → logprob: -12.37598705291748

Token 617: '           ' (ID: 352)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.17916660010814667
    2. ',' → logprob: -2.554166555404663
    3. ' ' → logprob: -3.679166555404663
    4. ' x' → logprob: -3.804166555404663
    5. 'x' → logprob: -4.804166793823242
    6. '
' → logprob: -5.179166793823242
    7. '<|end|>' → logprob: -5.179166793823242
    8. '            
' → logprob: -5.554166793823242
    9. ' ,' → logprob: -5.929166793823242
    10. '  
' → logprob: -5.929166793823242

Token 618: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -7.278864359250292e-05
    2. ' x' → logprob: -9.625072479248047
    3. 'xs' → logprob: -12.375072479248047
    4. '           ' → logprob: -13.000072479248047
    5. 'if' → logprob: -17.000072479248047
    6. '	x' → logprob: -17.375072479248047
    7. '```' → logprob: -18.000072479248047
    8. '               ' → logprob: -18.375072479248047
    9. 'xp' → logprob: -18.375072479248047
    10. 'xn' → logprob: -18.500072479248047

Token 619: '0' (ID: 15)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7178389430046082
    2. ' =' → logprob: -0.8428389430046082
    3. '0' → logprob: -2.842839002609253
    4. '_' → logprob: -4.467838764190674
    5. '=' → logprob: -4.967838764190674
    6. '_parts' → logprob: -6.592838764190674
    7. ' parts' → logprob: -7.092838764190674
    8. 'parts' → logprob: -7.342838764190674
    9. '<|end|>' → logprob: -7.717838764190674
    10. '<|end|>' → logprob: -7.967838764190674

Token 620: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47413623332977295
    2. '=' → logprob: -0.974136233329773
    3. '=int' → logprob: -10.599136352539062
    4. ',' → logprob: -10.724136352539062
    5. ')' → logprob: -12.224136352539062
    6. '<|end|>' → logprob: -12.474136352539062
    7. '<|end|>' → logprob: -14.224136352539062
    8. ' ' → logprob: -14.724136352539062
    9. 's' → logprob: -14.974136352539062
    10. ' =
' → logprob: -15.099136352539062

Token 621: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4751499593257904
    2. 'float' → logprob: -0.9751499891281128
    3. ' float' → logprob: -7.225150108337402
    4. ' int' → logprob: -7.975150108337402
    5. '(float' → logprob: -15.975150108337402
    6. '=float' → logprob: -16.350149154663086
    7. '(int' → logprob: -16.975149154663086
    8. '   ' → logprob: -17.100149154663086
    9. '	float' → logprob: -17.100149154663086
    10. '=int' → logprob: -17.225149154663086

Token 622: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.00016241880075540394
    2. 'parts' → logprob: -8.750162124633789
    3. ' parts' → logprob: -12.500162124633789
    4. '(' → logprob: -16.00016212463379
    5. '(part' → logprob: -17.25016212463379
    6. ' (' → logprob: -18.50016212463379
    7. '.parts' → logprob: -18.75016212463379
    8. '(
' → logprob: -18.75016212463379
    9. ')' → logprob: -19.00016212463379
    10. '_parts' → logprob: -19.25016212463379

Token 623: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.45681628584861755
    2. '[' → logprob: -1.20681631565094
    3. '0' → logprob: -2.7068161964416504
    4. ']' → logprob: -8.081816673278809
    5. ')' → logprob: -8.706816673278809
    6. '])' → logprob: -8.956816673278809
    7. ' ' → logprob: -9.581816673278809
    8. '][' → logprob: -10.081816673278809
    9. '2' → logprob: -10.706816673278809
    10. '(' → logprob: -11.206816673278809

Token 624: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.618001053633634e-05
    2. 'parts' → logprob: -11.625025749206543
    3. ' ' → logprob: -12.000025749206543
    4. '1' → logprob: -12.625025749206543
    5. ']' → logprob: -12.750025749206543
    6. ')' → logprob: -12.750025749206543
    7. ' parts' → logprob: -14.125025749206543
    8. '[' → logprob: -14.875025749206543
    9. '
' → logprob: -15.625025749206543
    10. '(parts' → logprob: -16.00002670288086

Token 625: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6950810551643372
    2. ')
' → logprob: -0.6950810551643372
    3. '])' → logprob: -6.9450812339782715
    4. '])
' → logprob: -7.5700812339782715
    5. ']' → logprob: -8.695080757141113
    6. ']
' → logprob: -8.820080757141113
    7. '           ' → logprob: -10.320080757141113
    8. ' )
' → logprob: -10.570080757141113
    9. '<|end|>' → logprob: -10.695080757141113
    10. ' )' → logprob: -12.070080757141113

Token 626: '           ' (ID: 352)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.6161198019981384
    2. 'y' → logprob: -0.8661198019981384
    3. '
' → logprob: -4.241119861602783
    4. '<|end|>' → logprob: -4.741119861602783
    5. '           ' → logprob: -4.866119861602783
    6. ' 
' → logprob: -5.491119861602783
    7. '            
' → logprob: -6.866119861602783
    8. ',y' → logprob: -7.116119861602783
    9. '```' → logprob: -7.366119861602783
    10. ',' → logprob: -7.741119861602783

Token 627: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.0067156096920371056
    2. ' y' → logprob: -5.006715774536133
    3. '           ' → logprob: -15.381715774536133
    4. '	y' → logprob: -17.256715774536133
    5. '```' → logprob: -19.381715774536133
    6. '
' → logprob: -19.631715774536133
    7. '            ' → logprob: -19.756715774536133
    8. '               ' → logprob: -20.006715774536133
    9. '   ' → logprob: -20.006715774536133
    10. '0' → logprob: -20.256715774536133

Token 628: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.135819760151207e-05
    2. '[' → logprob: -9.62507152557373
    3. '<|end|>' → logprob: -12.75007152557373
    4. '_' → logprob: -14.00007152557373
    5. '<|end|>' → logprob: -14.25007152557373
    6. '```' → logprob: -14.87507152557373
    7. ']' → logprob: -15.37507152557373
    8. ' ' → logprob: -15.75007152557373
    9. ')' → logprob: -15.87507152557373
    10. '   ' → logprob: -17.125070571899414

Token 629: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 630: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011048289015889168
    2. ' int' → logprob: -4.511048316955566
    3. '0' → logprob: -15.261048316955566
    4. '=int' → logprob: -16.63604736328125
    5. 'ints' → logprob: -17.13604736328125
    6. '(int' → logprob: -17.26104736328125
    7. '[int' → logprob: -17.38604736328125
    8. ' parts' → logprob: -17.38604736328125
    9. '<int' → logprob: -17.51104736328125
    10. 'parts' → logprob: -18.01104736328125

Token 631: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.0014420190127566457
    2. 'parts' → logprob: -6.876441955566406
    3. '(' → logprob: -8.501441955566406
    4. ' parts' → logprob: -9.251441955566406
    5. '[' → logprob: -9.376441955566406
    6. '(int' → logprob: -11.751441955566406
    7. ')' → logprob: -12.126441955566406
    8. '(part' → logprob: -12.751441955566406
    9. ' (' → logprob: -12.751441955566406
    10. '[int' → logprob: -13.001441955566406

Token 632: '[' (ID: 58)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.782141569303349e-05
    2. '[' → logprob: -9.37509822845459
    3. ' ' → logprob: -12.25009822845459
    4. '(' → logprob: -13.00009822845459
    5. '1' → logprob: -13.50009822845459
    6. '   ' → logprob: -13.87509822845459
    7. '           ' → logprob: -14.25009822845459
    8. '```' → logprob: -14.50009822845459
    9. '0' → logprob: -14.75009822845459
    10. ']' → logprob: -15.00009822845459

Token 633: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.18361897766590118
    2. '1' → logprob: -1.8086190223693848
    3. '0' → logprob: -5.558619022369385
    4. ' ' → logprob: -11.558618545532227
    5. '```' → logprob: -13.933618545532227
    6. ']' → logprob: -14.683618545532227
    7. '``' → logprob: -15.058618545532227
    8. '   ' → logprob: -15.308618545532227
    9. '
' → logprob: -15.433618545532227
    10. '3' → logprob: -15.433618545532227

Token 634: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12713555991649628
    2. ')
' → logprob: -2.1271355152130127
    3. '])' → logprob: -8.877135276794434
    4. ')]' → logprob: -10.502135276794434
    5. '])
' → logprob: -11.127135276794434
    6. '           ' → logprob: -12.127135276794434
    7. ')
' → logprob: -12.377135276794434
    8. ']' → logprob: -12.627135276794434
    9. ')])' → logprob: -12.627135276794434
    10. ')

' → logprob: -13.627135276794434

Token 635: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023169182240962982
    2. 'times' → logprob: -4.023169040679932
    3. 'v' → logprob: -5.648169040679932
    4. ' times' → logprob: -6.648169040679932
    5. '
' → logprob: -10.14816951751709
    6. '   ' → logprob: -10.64816951751709
    7. '       ' → logprob: -10.64816951751709
    8. 't' → logprob: -10.77316951751709
    9. '               ' → logprob: -11.27316951751709
    10. '            
' → logprob: -11.52316951751709

Token 636: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' (adapté à ' times') → logprob: -0.0037124271038919687
    2. '           ' → logprob: -5.6287126541137695
    3. ' times' → logprob: -10.25371265411377
    4. 'v' → logprob: -10.75371265411377
    5. '               ' → logprob: -11.37871265411377
    6. 'time' → logprob: -11.62871265411377
    7. 't' → logprob: -11.62871265411377
    8. '   ' → logprob: -12.00371265411377
    9. 'timestamps' → logprob: -12.25371265411377
    10. 'x' → logprob: -13.00371265411377

Token 637: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005065653240308166
    2. '.' → logprob: -7.625506401062012
    3. '.app' → logprob: -11.375506401062012
    4. 'append' → logprob: -12.250506401062012
    5. '.ap' → logprob: -13.500506401062012
    6. '_append' → logprob: -15.750506401062012
    7. ' .' → logprob: -15.750506401062012
    8. '=' → logprob: -15.875506401062012
    9. '.Append' → logprob: -16.125507354736328
    10. '.push' → logprob: -16.875507354736328

Token 638: '(t' (ID: 2025)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0380416102707386
    2. '(t' → logprob: -3.288041591644287
    3. ' t' → logprob: -15.663042068481445
    4. '	t' → logprob: -17.788042068481445
    5. '(' → logprob: -20.163042068481445
    6. '_t' → logprob: -20.913042068481445
    7. '`t' → logprob: -21.038042068481445
    8. '0' → logprob: -22.038042068481445
    9. '   ' → logprob: -22.038042068481445
    10. '[t' → logprob: -23.413042068481445

Token 639: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.250000953674316
    3. 'o' → logprob: -16.250001907348633
    4. '_' → logprob: -16.625001907348633
    5. '```' → logprob: -17.000001907348633
    6. '(t' → logprob: -17.875001907348633
    7. '(' → logprob: -18.000001907348633
    8. 't' → logprob: -18.375001907348633
    9. ' ' → logprob: -18.375001907348633
    10. '۰' → logprob: -18.875001907348633

Token 640: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07893715798854828
    2. ')
' → logprob: -2.57893705368042
    3. '<|end|>' → logprob: -11.203937530517578
    4. ')x' → logprob: -12.203937530517578
    5. '<|end|>' → logprob: -12.203937530517578
    6. ')
' → logprob: -12.578937530517578
    7. '),' → logprob: -12.703937530517578
    8. ')t' → logprob: -12.703937530517578
    9. ' )' → logprob: -13.328937530517578
    10. ')#' → logprob: -13.578937530517578

Token 641: '           ' (ID: 352)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.1713249385356903
    2. 'v' → logprob: -2.4213249683380127
    3. '           ' → logprob: -2.7963249683380127
    4. 'x' → logprob: -5.046324729919434
    5. ' xs' → logprob: -7.296324729919434
    6. ' v' → logprob: -8.421324729919434
    7. 'vx' → logprob: -8.421324729919434
    8. 'vel' → logprob: -11.296324729919434
    9. 'velocity' → logprob: -11.671324729919434
    10. '   ' → logprob: -11.921324729919434

Token 642: ' xs' (ID: 26642)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' (adapté à ' xs') → logprob: -0.00012976066500414163
    2. '           ' → logprob: -9.250129699707031
    3. ' xs' → logprob: -10.625129699707031
    4. 'x' → logprob: -12.000129699707031
    5. '(xs' → logprob: -13.250129699707031
    6. 'axs' → logprob: -14.875129699707031
    7. 'xes' → logprob: -15.000129699707031
    8. '   ' → logprob: -15.750129699707031
    9. '<|end|>' → logprob: -16.37512969970703
    10. '            ' → logprob: -16.62512969970703

Token 643: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00011248346709180623
    2. '.' → logprob: -9.125112533569336
    3. 'append' → logprob: -12.750112533569336
    4. '.app' → logprob: -14.875112533569336
    5. '.ap' → logprob: -16.875112533569336
    6. 'appen' → logprob: -17.375112533569336
    7. ' .' → logprob: -17.500112533569336
    8. '.Append' → logprob: -17.625112533569336
    9. 'Append' → logprob: -17.875112533569336
    10. 'Appending' → logprob: -18.000112533569336

Token 644: '(x' (ID: 4061)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.061969030648469925
    2. '(x' → logprob: -2.811969041824341
    3. ' x' → logprob: -14.186968803405762
    4. 'float' → logprob: -15.061968803405762
    5. '(' → logprob: -16.561969757080078
    6. '(float' → logprob: -16.561969757080078
    7. '   ' → logprob: -16.811969757080078
    8. 'int' → logprob: -16.811969757080078
    9. '	x' → logprob: -17.186969757080078
    10. '0' → logprob: -17.436969757080078

Token 645: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '(x' → logprob: -16.75
    3. '[' → logprob: -17.25
    4. 'o' → logprob: -18.125
    5. '(' → logprob: -18.125
    6. ' ' → logprob: -19.0
    7. ')' → logprob: -19.625
    8. '[int' → logprob: -19.75
    9. '۰' → logprob: -19.875
    10. '_' → logprob: -20.125

Token 646: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31329596042633057
    2. ')' → logprob: -1.3132959604263306
    3. ')y' → logprob: -10.5632963180542
    4. '),' → logprob: -13.3132963180542
    5. ')
' → logprob: -13.4382963180542
    6. '<|end|>' → logprob: -13.6882963180542
    7. ' )
' → logprob: -14.1882963180542
    8. '           ' → logprob: -14.6882963180542
    9. ')

' → logprob: -14.8132963180542
    10. ');
' → logprob: -14.9382963180542

Token 647: '           ' (ID: 352)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.0005516022793017328
    2. ' ys' → logprob: -7.750551700592041
    3. '```' → logprob: -11.000551223754883
    4. 'yses' → logprob: -11.125551223754883
    5. '           ' → logprob: -11.125551223754883
    6. '
' → logprob: -11.625551223754883
    7. '   ' → logprob: -11.625551223754883
    8. ',' → logprob: -12.125551223754883
    9. 'tys' → logprob: -12.750551223754883
    10. '#' → logprob: -12.750551223754883

Token 648: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' (adapté à ' ys') → logprob: -2.2200749754119897e-06
    2. ' ys' → logprob: -13.125001907348633
    3. '           ' → logprob: -16.375001907348633
    4. '   ' → logprob: -17.250001907348633
    5. 'ysi' → logprob: -18.000001907348633
    6. '       ' → logprob: -18.250001907348633
    7. '               ' → logprob: -18.500001907348633
    8. 'yses' → logprob: -18.500001907348633
    9. ' ' → logprob: -19.750001907348633
    10. '          ' → logprob: -19.875001907348633

Token 649: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.014684110297821e-06
    2. '0' → logprob: -12.500008583068848
    3. 'append' → logprob: -12.875008583068848
    4. '.' → logprob: -13.250008583068848
    5. 'y' → logprob: -15.500008583068848
    6. ' y' → logprob: -15.750008583068848
    7. 'Append' → logprob: -16.125009536743164
    8. ' .' → logprob: -16.125009536743164
    9. 'app' → logprob: -16.500009536743164
    10. '.Append' → logprob: -16.500009536743164

Token 650: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.029751067981123924
    2. 'y' → logprob: -3.5297510623931885
    3. ' y' → logprob: -14.77975082397461
    4. '(' → logprob: -16.90475082397461
    5. ' (' → logprob: -17.15475082397461
    6. '	y' → logprob: -17.52975082397461
    7. '   ' → logprob: -17.90475082397461
    8. '(
' → logprob: -18.40475082397461
    9. '[y' → logprob: -19.15475082397461
    10. ',y' → logprob: -19.90475082397461

Token 651: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010199354437645525
    2. '[-' → logprob: -10.000102043151855
    3. '[' → logprob: -11.125102043151855
    4. '.append' → logprob: -11.625102043151855
    5. ' ' → logprob: -11.750102043151855
    6. '[i' → logprob: -12.000102043151855
    7. ')' → logprob: -12.125102043151855
    8. 'o' → logprob: -13.375102043151855
    9. '_' → logprob: -13.500102043151855
    10. '<|end|>' → logprob: -13.875102043151855

Token 652: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6331738233566284
    2. ')' → logprob: -0.7581738233566284
    3. ')v' → logprob: -8.133173942565918
    4. '           ' → logprob: -8.508173942565918
    5. ')
' → logprob: -11.383173942565918
    6. ')

' → logprob: -11.508173942565918
    7. '               ' → logprob: -12.008173942565918
    8. '       ' → logprob: -12.133173942565918
    9. '   ' → logprob: -12.258173942565918
    10. 'v' → logprob: -12.383173942565918

Token 653: '           ' (ID: 352)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.21562398970127106
    2. '           ' → logprob: -1.9656239748001099
    3. 'while' → logprob: -3.4656240940093994
    4. '```' → logprob: -4.21562385559082
    5. '
' → logprob: -5.34062385559082
    6. ' v' → logprob: -7.59062385559082
    7. ' while' → logprob: -7.71562385559082
    8. 't' → logprob: -7.71562385559082
    9. '	v' → logprob: -7.96562385559082
    10. '``' → logprob: -8.34062385559082

Token 654: ' v' (ID: 323)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.25701889395713806
    2. 'v' (adapté à ' v') → logprob: -2.257018804550171
    3. 'for' → logprob: -2.507018804550171
    4. 'vx' → logprob: -4.13201904296875
    5. '           ' → logprob: -4.50701904296875
    6. 'line' → logprob: -4.75701904296875
    7. 't' → logprob: -7.00701904296875
    8. '#' → logprob: -7.13201904296875
    9. 'if' → logprob: -7.38201904296875
    10. 'prev' → logprob: -7.63201904296875

Token 655: 'xs' (ID: 33335)
  Prédit: 'xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.016341444104909897
    2. 'x' → logprob: -4.266341209411621
    3. 's' → logprob: -6.141341209411621
    4. '.append' → logprob: -11.766341209411621
    5. 'xes' → logprob: -12.016341209411621
    6. ' xs' → logprob: -13.016341209411621
    7. '=' → logprob: -14.016341209411621
    8. '   ' → logprob: -14.141341209411621
    9. 'ecs' → logprob: -14.266341209411621
    10. '[' → logprob: -14.516341209411621

Token 656: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001334559783572331
    2. '.' → logprob: -9.000133514404297
    3. '.app' → logprob: -11.875133514404297
    4. 'append' → logprob: -12.875133514404297
    5. '.ap' → logprob: -15.375133514404297
    6. 'app' → logprob: -15.500133514404297
    7. ' .' → logprob: -16.125133514404297
    8. 'appen' → logprob: -17.375133514404297
    9. '.push' → logprob: -18.500133514404297
    10. '.extend' → logprob: -18.625133514404297

Token 657: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.7994282795116305e-05
    2. 'None' → logprob: -10.75004768371582
    3. 'float' → logprob: -11.00004768371582
    4. '(' → logprob: -12.00004768371582
    5. ' ' → logprob: -13.25004768371582
    6. 'int' → logprob: -14.37504768371582
    7. '(float' → logprob: -14.75004768371582
    8. 'v' → logprob: -15.12504768371582
    9. '(None' → logprob: -15.50004768371582
    10. '[]' → logprob: -16.00004768371582

Token 658: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. 'None' → logprob: -14.500001907348633
    3. 'float' → logprob: -14.625001907348633
    4. ' ' → logprob: -14.750001907348633
    5. 'v' → logprob: -16.625001907348633
    6. '(' → logprob: -17.250001907348633
    7. 'math' → logprob: -17.625001907348633
    8. ')' → logprob: -18.750001907348633
    9. '1' → logprob: -19.000001907348633
    10. '[' → logprob: -19.250001907348633

Token 659: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006208666134625673
    2. ')
' → logprob: -5.131208896636963
    3. ' )' → logprob: -8.506208419799805
    4. '<|end|>' → logprob: -10.131208419799805
    5. ',' → logprob: -11.256208419799805
    6. ' )
' → logprob: -11.756208419799805
    7. '0' → logprob: -11.756208419799805
    8. '),' → logprob: -12.256208419799805
    9. ')

' → logprob: -13.881208419799805
    10. '<|end|>' → logprob: -14.006208419799805

Token 660: '           ' (ID: 352)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.8496764302253723
    2. '<|end|>' → logprob: -0.8496764302253723
    3. '           ' → logprob: -2.8496763706207275
    4. '
' → logprob: -3.4746763706207275
    5. '```' → logprob: -4.599676609039307
    6. '            
' → logprob: -4.724676609039307
    7. ')' → logprob: -4.849676609039307
    8. '\n' → logprob: -5.599676609039307
    9. '<|end|>' → logprob: -5.599676609039307
    10. '  
' → logprob: -6.224676609039307

Token 661: ' vys' (ID: 66128)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00038086410495452583
    2. ' vys' → logprob: -8.625380516052246
    3. '           ' → logprob: -9.375380516052246
    4. '0' → logprob: -10.000380516052246
    5. 'wys' → logprob: -11.625380516052246
    6. '       ' → logprob: -11.750380516052246
    7. '
' → logprob: -12.125380516052246
    8. '   ' → logprob: -12.375380516052246
    9. '                       ' → logprob: -12.500380516052246
    10. '                   ' → logprob: -12.500380516052246

Token 662: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0046584345400333405
    2. '.' → logprob: -5.379658222198486
    3. 'append' → logprob: -10.254658699035645
    4. 'app' → logprob: -13.129658699035645
    5. '0' → logprob: -15.004658699035645
    6. '.app' → logprob: -15.504658699035645
    7. ' .' → logprob: -15.504658699035645
    8. '.push' → logprob: -16.254657745361328
    9. '   ' → logprob: -17.129657745361328
    10. 'appen' → logprob: -17.254657745361328

Token 663: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25193020701408386
    2. '(' → logprob: -1.5019302368164062
    3. ' ' → logprob: -14.001930236816406
    4. ' (' → logprob: -15.501930236816406
    5. '           ' → logprob: -16.876930236816406
    6. '(
' → logprob: -17.126930236816406
    7. '   ' → logprob: -17.251930236816406
    8. '
' → logprob: -18.251930236816406
    9. '```' → logprob: -18.626930236816406
    10. '               ' → logprob: -19.876930236816406

Token 664: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -19.5
    4. ')' → logprob: -20.5
    5. '۰' → logprob: -20.5
    6. '00' → logprob: -21.25
    7. '```' → logprob: -21.5
    8. '           ' → logprob: -21.875
    9. '(' → logprob: -22.0
    10. '  ' → logprob: -22.3125

Token 665: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0327340364456177
    2. '<|end|>' → logprob: -1.0327340364456177
    3. '
' → logprob: -1.5327340364456177
    4. '           ' → logprob: -3.282733917236328
    5. '<|end|>' → logprob: -4.157733917236328
    6. ')
' → logprob: -4.157733917236328
    7. '       ' → logprob: -7.157733917236328
    8. '            
' → logprob: -7.782733917236328
    9. ',' → logprob: -8.157733917236328
    10. '),' → logprob: -8.407733917236328

Token 666: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023311281576752663
    2. '```' → logprob: -3.8983113765716553
    3. 'while' → logprob: -6.523311138153076
    4. '       ' → logprob: -7.148311138153076
    5. '
' → logprob: -8.523311614990234
    6. 'for' → logprob: -8.898311614990234
    7. ' while' → logprob: -10.023311614990234
    8. '``' → logprob: -10.398311614990234
    9. ' for' → logprob: -10.648311614990234
    10. '#line' → logprob: -10.898311614990234

Token 667: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2747150957584381
    2. '           ' → logprob: -2.1497151851654053
    3. 'for' → logprob: -2.1497151851654053
    4. 'line' → logprob: -5.274714946746826
    5. 'count' → logprob: -7.274714946746826
    6. '```' → logprob: -8.149715423583984
    7. 'num' → logprob: -8.274715423583984
    8. '#' (adapté à ' #') → logprob: -8.524715423583984
    9. 'lines' → logprob: -8.649715423583984
    10. 'current' → logprob: -9.024715423583984

Token 668: ' read' (ID: 1729)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2686075270175934
    2. 'for' → logprob: -1.518607497215271
    3. 'line' → logprob: -5.0186076164245605
    4. '#' → logprob: -5.0186076164245605
    5. 'num' → logprob: -6.7686076164245605
    6. 'count' → logprob: -6.7686076164245605
    7. '           ' → logprob: -8.143607139587402
    8. 'k' → logprob: -8.643607139587402
    9. 'lines' → logprob: -8.643607139587402
    10. 'prev' → logprob: -9.018607139587402

Token 669: ' next' (ID: 2613)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1097333431243896
    2. 'while' → logprob: -1.3597333431243896
    3. ' for' → logprob: -2.2347333431243896
    4. ' T' → logprob: -2.9847333431243896
    5. ' while' → logprob: -3.3597333431243896
    6. 'T' → logprob: -3.6097333431243896
    7. ' times' → logprob: -3.7347333431243896
    8. 'times' → logprob: -3.7347333431243896
    9. 'int' → logprob: -3.8597333431243896
    10. ' parts' → logprob: -3.9847333431243896

Token 670: ' lines' (ID: 8698)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.06905857473611832
    2. ' line' → logprob: -2.819058656692505
    3. 'while' → logprob: -5.319058418273926
    4. 'lines' → logprob: -7.069058418273926
    5. ' while' → logprob: -8.194058418273926
    6. ' lines' → logprob: -8.444058418273926
    7. '_line' → logprob: -8.944058418273926
    8. ' ' → logprob: -9.069058418273926
    9. '2' → logprob: -9.194058418273926
    10. '3' → logprob: -9.694058418273926

Token 671: ' until' (ID: 4609)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13846959173679352
    2. ' for' → logprob: -2.138469696044922
    3. 'for' → logprob: -4.888469696044922
    4. 'while' → logprob: -6.513469696044922
    5. ' while' → logprob: -6.888469696044922
    6. '       ' → logprob: -6.888469696044922
    7. '               ' → logprob: -8.388469696044922
    8. '   ' → logprob: -9.888469696044922
    9. ',' → logprob: -10.013469696044922
    10. ':' → logprob: -10.638469696044922

Token 672: ' last' (ID: 2174)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.08154963701963425
    2. 'False' → logprob: -3.331549644470215
    3. 'times' → logprob: -3.956549644470215
    4. 'True' → logprob: -4.831549644470215
    5. 't' → logprob: -5.456549644470215
    6. 'line' → logprob: -5.831549644470215
    7. 'parts' → logprob: -5.956549644470215
    8. ' len' → logprob: -6.081549644470215
    9. 'next' → logprob: -6.706549644470215
    10. ' False' → logprob: -7.831549644470215

Token 673: ' t' (ID: 260)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.138030767440796
    2. '           ' → logprob: -1.513030767440796
    3. ' while' → logprob: -1.638030767440796
    4. 'while' → logprob: -2.138030767440796
    5. ' for' → logprob: -2.513030767440796
    6. 'line' → logprob: -3.013030767440796
    7. 'for' → logprob: -5.513031005859375
    8. ' and' → logprob: -6.013031005859375
    9. '(line' → logprob: -6.013031005859375
    10. '       ' → logprob: -7.138031005859375

Token 674: '_k' (ID: 11637)
  Prédit: 'ime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.6030727028846741
    2. '           ' → logprob: -1.7280726432800293
    3. 'line' → logprob: -2.2280726432800293
    4. '0' → logprob: -3.1030726432800293
    5. 'while' → logprob: -3.3530726432800293
    6. ' line' → logprob: -3.9780726432800293
    7. 'imes' → logprob: -4.353072643280029
    8. '(line' → logprob: -4.478072643280029
    9. 'ine' → logprob: -4.978072643280029
    10. '_line' → logprob: -5.103072643280029

Token 675: ' ==' (ID: 951)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.9780298471450806
    2. 'while' → logprob: -1.6030298471450806
    3. ' while' → logprob: -1.7280298471450806
    4. '(line' → logprob: -2.728029727935791
    5. '           ' → logprob: -3.478029727935791
    6. ' and' → logprob: -3.603029727935791
    7. ':' → logprob: -3.853029727935791
    8. '       ' → logprob: -3.978029727935791
    9. ' =' → logprob: -4.353029727935791
    10. '   ' → logprob: -4.353029727935791

Token 676: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0033989560324698687
    2. ' T' → logprob: -5.878398895263672
    3. 'times' → logprob: -8.253398895263672
    4. ' times' → logprob: -9.503398895263672
    5. '0' → logprob: -9.503398895263672
    6. 'int' → logprob: -9.878398895263672
    7. 'parts' → logprob: -9.878398895263672
    8. 't' → logprob: -10.128398895263672
    9. ' parts' → logprob: -11.628398895263672
    10. '
' → logprob: -12.253398895263672

Token 677: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05596533045172691
    2. ' while' → logprob: -3.3059654235839844
    3. 'while' → logprob: -4.305965423583984
    4. '       ' → logprob: -5.930965423583984
    5. '```' → logprob: -7.305965423583984
    6. '
' → logprob: -7.430965423583984
    7. '   ' → logprob: -8.555965423583984
    8. ',' → logprob: -10.055965423583984
    9. '               ' → logprob: -10.055965423583984
    10. '	while' → logprob: -10.555965423583984

Token 678: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004026276059448719
    2. 'while' → logprob: -5.629026412963867
    3. ' while' → logprob: -8.254026412963867
    4. '```' → logprob: -9.004026412963867
    5. '       ' → logprob: -10.254026412963867
    6. '               ' → logprob: -12.754026412963867
    7. '   ' → logprob: -13.629026412963867
    8. ',' → logprob: -14.129026412963867
    9. '``' → logprob: -14.129026412963867
    10. '                   ' → logprob: -14.629026412963867

Token 679: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.009793160483241081
    2. '           ' → logprob: -4.759793281555176
    3. ' while' → logprob: -6.759793281555176
    4. '       ' → logprob: -11.509793281555176
    5. '   ' → logprob: -12.384793281555176
    6. 'line' → logprob: -12.509793281555176
    7. '```' → logprob: -15.509793281555176
    8. '	while' → logprob: -16.00979232788086
    9. 'for' → logprob: -16.25979232788086
    10. 'While' → logprob: -17.25979232788086

Token 680: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00043257648940198123
    2. ' True' → logprob: -7.75043249130249
    3. '(True' → logprob: -13.750432968139648
    4. '   ' → logprob: -14.250432968139648
    5. '     ' → logprob: -16.87543296813965
    6. '
' → logprob: -17.12543296813965
    7. 'true' → logprob: -17.25043296813965
    8. ' ' → logprob: -17.25043296813965
    9. '=True' → logprob: -17.37543296813965
    10. '    ' → logprob: -17.50043296813965

Token 681: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.40224143862724304
    2. ':' → logprob: -1.7772414684295654
    3. ':
' → logprob: -1.9022414684295654
    4. '(line' → logprob: -6.152241230010986
    5. '=line' → logprob: -6.152241230010986
    6. ' and' → logprob: -6.527241230010986
    7. '<|end|>' → logprob: -6.652241230010986
    8. ' line' → logprob: -6.777241230010986
    9. '           ' → logprob: -7.152241230010986
    10. '[line' → logprob: -7.527241230010986

Token 682: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07555041462182999
    2. 'line' → logprob: -3.2005503177642822
    3. '   ' → logprob: -3.5755503177642822
    4. '           ' → logprob: -5.825550556182861
    5. ' line' → logprob: -7.200550556182861
    6. '       ' → logprob: -8.700550079345703
    7. '	line' → logprob: -9.325550079345703
    8. '#line' → logprob: -10.450550079345703
    9. '                   ' → logprob: -11.325550079345703
    10. ' ' → logprob: -11.450550079345703

Token 683: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.0001129602751461789
    2. '               ' → logprob: -9.125112533569336
    3. ' line' → logprob: -13.125112533569336
    4. '                   ' → logprob: -14.000112533569336
    5. '	line' → logprob: -15.125112533569336
    6. '   ' → logprob: -15.375112533569336
    7. 'l' → logprob: -15.750112533569336
    8. 'next' → logprob: -16.125112533569336
    9. 'lin' → logprob: -16.375112533569336
    10. 'lines' → logprob: -16.875112533569336

Token 684: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09013796597719193
    2. '=' → logprob: -2.8401379585266113
    3. '=line' → logprob: -3.5901379585266113
    4. '               ' → logprob: -9.84013843536377
    5. '[line' → logprob: -10.59013843536377
    6. '           ' → logprob: -10.96513843536377
    7. ' line' → logprob: -11.09013843536377
    8. '                   ' → logprob: -11.21513843536377
    9. '   ' → logprob: -11.34013843536377
    10. 'line' → logprob: -11.59013843536377

Token 685: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.1602250337600708
    2. ' sys' → logprob: -1.9102250337600708
    3. '=sys' → logprob: -14.410224914550781
    4. '	sys' → logprob: -16.03522491455078
    5. '(sys' → logprob: -16.16022491455078
    6. '                   ' → logprob: -16.91022491455078
    7. '               ' → logprob: -17.16022491455078
    8. '_sys' → logprob: -17.41022491455078
    9. 'Sys' → logprob: -17.91022491455078
    10. '.sys' → logprob: -18.66022491455078

Token 686: '.stdin' (ID: 93480)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.06297490745782852
    2. '.stdin' → logprob: -2.8129749298095703
    3. '=sys' → logprob: -7.18797492980957
    4. 'stdin' → logprob: -8.81297492980957
    5. 'sys' → logprob: -10.06297492980957
    6. '(stdin' → logprob: -11.18797492980957
    7. '```' → logprob: -11.56297492980957
    8. '.stdout' → logprob: -11.68797492980957
    9. '.' → logprob: -12.18797492980957
    10. '   ' → logprob: -12.81297492980957

Token 687: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.6054129004478455
    2. 'read' → logprob: -0.8554129004478455
    3. 'stdin' → logprob: -4.10541296005249
    4. 'sys' → logprob: -4.48041296005249
    5. ' readline' → logprob: -7.48041296005249
    6. 'strip' → logprob: -8.105412483215332
    7. 'stdout' → logprob: -8.605412483215332
    8. 'rstrip' → logprob: -8.980412483215332
    9. '=sys' → logprob: -10.480412483215332
    10. 'readonly' → logprob: -12.230412483215332

Token 688: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002666854066774249
    2. '().' → logprob: -6.50266695022583
    3. '<|end|>' → logprob: -7.37766695022583
    4. '()' → logprob: -9.002666473388672
    5. '<|end|>' → logprob: -9.252666473388672
    6. '.strip' → logprob: -9.377666473388672
    7. '                   ' → logprob: -10.002666473388672
    8. '():
' → logprob: -10.502666473388672
    9. '		       ' → logprob: -10.752666473388672
    10. '           ' → logprob: -11.002666473388672

Token 689: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0021401476114988327
    2. '           ' → logprob: -6.752140045166016
    3. 'if' → logprob: -7.502140045166016
    4. ' if' → logprob: -8.252140045166016
    5. '       ' → logprob: -9.127140045166016
    6. '                   ' → logprob: -11.252140045166016
    7. '.strip' → logprob: -11.627140045166016
    8. '   ' → logprob: -11.752140045166016
    9. '```' → logprob: -13.127140045166016
    10. '<|end|>' → logprob: -13.127140045166016

Token 690: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04350605979561806
    2. '               ' → logprob: -3.543506145477295
    3. ' if' → logprob: -4.293506145477295
    4. '           ' → logprob: -13.168505668640137
    5. 'line' → logprob: -13.543505668640137
    6. '                   ' → logprob: -15.168505668640137
    7. '	if' → logprob: -15.918505668640137
    8. '       ' → logprob: -16.043506622314453
    9. 'parts' → logprob: -16.043506622314453
    10. '   ' → logprob: -16.293506622314453

Token 691: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.25226151943206787
    2. ' line' → logprob: -1.5022615194320679
    3. ' not' → logprob: -8.3772611618042
    4. 'not' → logprob: -9.2522611618042
    5. '	line' → logprob: -13.2522611618042
    6. '(line' → logprob: -13.2522611618042
    7. '[line' → logprob: -13.5022611618042
    8. '#line' → logprob: -14.1272611618042
    9. '=line' → logprob: -15.2522611618042
    10. ' ' → logprob: -15.5022611618042

Token 692: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.006053224205970764
    2. '==' → logprob: -5.381053447723389
    3. ' ==' → logprob: -7.256053447723389
    4. 'strip' → logprob: -7.381053447723389
    5. ' is' → logprob: -10.13105297088623
    6. ' strip' → logprob: -11.00605297088623
    7. '=' → logprob: -11.25605297088623
    8. '.' → logprob: -11.50605297088623
    9. '===' → logprob: -11.88105297088623
    10. '_strip' → logprob: -12.63105297088623

Token 693: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03985157236456871
    2. '()==' → logprob: -3.664851665496826
    3. '()!=' → logprob: -4.414851665496826
    4. '==' → logprob: -6.664851665496826
    5. '!=' → logprob: -9.789851188659668
    6. ' ==' → logprob: -10.789851188659668
    7. ' !=' → logprob: -11.914851188659668
    8. '()='' → logprob: -13.539851188659668
    9. '=' → logprob: -14.414851188659668
    10. '```' → logprob: -14.539851188659668

Token 694: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0038968685548752546
    2. ' ==' → logprob: -5.628896713256836
    3. '()==' → logprob: -8.378896713256836
    4. '==
' → logprob: -10.378896713256836
    5. '=='' → logprob: -11.128896713256836
    6. ')==' → logprob: -11.878896713256836
    7. '!=' → logprob: -12.003896713256836
    8. '=' → logprob: -12.753896713256836
    9. '===' → logprob: -13.378896713256836
    10. ']==' → logprob: -13.503896713256836

Token 695: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.006193745881319046
    2. ''' → logprob: -5.1311936378479
    3. ''T' → logprob: -8.506194114685059
    4. ' '':
' → logprob: -10.381194114685059
    5. ''''' → logprob: -11.631194114685059
    6. '''
' → logprob: -11.881194114685059
    7. ''t' → logprob: -12.756194114685059
    8. '   ' → logprob: -13.131194114685059
    9. '""' → logprob: -13.381194114685059
    10. 'T' → logprob: -13.381194114685059

Token 696: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008741267025470734
    2. '               ' → logprob: -5.25874137878418
    3. ':' → logprob: -6.75874137878418
    4. '   ' → logprob: -7.13374137878418
    5. ':
' → logprob: -7.13374137878418
    6. '                       ' → logprob: -7.50874137878418
    7. '           ' → logprob: -9.38374137878418
    8. ' or' → logprob: -10.75874137878418
    9. '       ' → logprob: -10.75874137878418
    10. '                           ' → logprob: -11.25874137878418

Token 697: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.8366745114326477
    2. '                   ' → logprob: -1.336674451828003
    3. ' break' → logprob: -1.336674451828003
    4. 'continue' (adapté à ' continue') → logprob: -3.836674451828003
    5. '               ' → logprob: -4.211674690246582
    6. ' continue' → logprob: -5.461674690246582
    7. '   ' → logprob: -7.711674690246582
    8. '                       ' → logprob: -8.461674690246582
    9. '	break' → logprob: -10.211674690246582
    10. ' ' → logprob: -10.211674690246582

Token 698: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005875834613107145
    2. '           ' → logprob: -8.500587463378906
    3. '       ' → logprob: -8.625587463378906
    4. '                   ' → logprob: -9.000587463378906
    5. '```' → logprob: -11.125587463378906
    6. '                
' → logprob: -11.500587463378906
    7. 'continue' → logprob: -11.500587463378906
    8. '                ' → logprob: -12.000587463378906
    9. '
' → logprob: -12.125587463378906
    10. ',' → logprob: -12.125587463378906

Token 699: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00042923877481371164
    2. '           ' → logprob: -8.250429153442383
    3. '       ' → logprob: -9.125429153442383
    4. '                   ' → logprob: -11.625429153442383
    5. '```' → logprob: -11.625429153442383
    6. 'try' → logprob: -11.750429153442383
    7. ',' → logprob: -11.750429153442383
    8. ' parts' → logprob: -12.125429153442383
    9. '
' → logprob: -12.375429153442383
    10. 'parts' → logprob: -13.125429153442383

Token 700: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' (adapté à ' parts') → logprob: -0.00028410006780177355
    2. ' parts' → logprob: -8.875284194946289
    3. '               ' → logprob: -9.000284194946289
    4. 'if' → logprob: -10.875284194946289
    5. 'tokens' → logprob: -14.250284194946289
    6. 'part' → logprob: -14.875284194946289
    7. '           ' → logprob: -14.875284194946289
    8. 'pieces' → logprob: -15.750284194946289
    9. 'lines' → logprob: -15.875284194946289
    10. '                
' → logprob: -15.875284194946289

Token 701: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34866756200790405
    2. '=' → logprob: -1.2236676216125488
    3. 'tokens' → logprob: -9.47366714477539
    4. 'token' → logprob: -9.97366714477539
    5. '.append' → logprob: -10.97366714477539
    6. '[' → logprob: -11.09866714477539
    7. '<|end|>' → logprob: -11.59866714477539
    8. '_token' → logprob: -11.97366714477539
    9. ')' → logprob: -11.97366714477539
    10. '   ' → logprob: -12.09866714477539

Token 702: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00012678056373260915
    2. ' line' → logprob: -9.000126838684082
    3. 'list' → logprob: -12.750126838684082
    4. '[line' → logprob: -14.750126838684082
    5. '(line' → logprob: -16.625125885009766
    6. '[' → logprob: -19.375125885009766
    7. '	line' → logprob: -19.750125885009766
    8. '=line' → logprob: -20.125125885009766
    9. '#line' → logprob: -20.625125885009766
    10. 'lines' → logprob: -21.000125885009766

Token 703: '.strip' (ID: 40613)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31877657771110535
    2. ' =' → logprob: -1.6937766075134277
    3. '.strip' → logprob: -2.6937766075134277
    4. '=line' → logprob: -5.068776607513428
    5. '.split' → logprob: -5.568776607513428
    6. '[' → logprob: -5.568776607513428
    7. '               ' → logprob: -5.693776607513428
    8. '<|end|>' → logprob: -7.318776607513428
    9. '                   ' → logprob: -7.443776607513428
    10. '.' → logprob: -8.44377613067627

Token 704: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4384188652038574
    2. '().' → logprob: -1.0634188652038574
    3. '()==' → logprob: -5.313418865203857
    4. '()[' → logprob: -6.188418865203857
    5. '()
' → logprob: -6.313418865203857
    6. '()!=' → logprob: -7.813418865203857
    7. '()>' → logprob: -8.688419342041016
    8. '.split' → logprob: -8.938419342041016
    9. '()<' → logprob: -10.188419342041016
    10. '().__' → logprob: -10.563419342041016

Token 705: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -17.25
    3. '(split' → logprob: -20.5
    4. 'spl' → logprob: -21.75
    5. '.split' → logprob: -22.25
    6. 'strip' → logprob: -23.0
    7. '_split' → logprob: -24.875
    8. 'len' → logprob: -25.625
    9. '```' → logprob: -25.625
    10. 'plit' → logprob: -26.875

Token 706: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018761184066534042
    2. '<|end|>' → logprob: -5.143761157989502
    3. '[' → logprob: -5.518761157989502
    4. ' if' → logprob: -5.893761157989502
    5. '           ' → logprob: -7.018761157989502
    6. ',' → logprob: -7.393761157989502
    7. '	       ' → logprob: -7.393761157989502
    8. '	           ' → logprob: -7.393761157989502
    9. '<|end|>' → logprob: -7.518761157989502
    10. 'if' → logprob: -7.518761157989502

Token 707: '               ' (ID: 506)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.36712998151779175
    2. ' if' → logprob: -1.2421300411224365
    3. '               ' → logprob: -5.742129802703857
    4. '[' → logprob: -5.867129802703857
    5. 'token' → logprob: -5.867129802703857
    6. '                   ' → logprob: -6.242129802703857
    7. '```' → logprob: -6.492129802703857
    8. '[token' → logprob: -6.742129802703857
    9. 'v' → logprob: -6.992129802703857
    10. '   ' → logprob: -6.992129802703857

Token 708: ' t' (ID: 260)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005700892303138971
    2. 't' (adapté à ' t') → logprob: -5.255701065063477
    3. '               ' → logprob: -7.880701065063477
    4. ' if' → logprob: -9.380701065063477
    5. 'k' → logprob: -13.630701065063477
    6. '#' → logprob: -14.255701065063477
    7. 'time' → logprob: -14.255701065063477
    8. '                   ' → logprob: -14.380701065063477
    9. '                
' → logprob: -14.630701065063477
    10. 'tk' → logprob: -15.505701065063477

Token 709: ' =' (ID: 314)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.25855210423469543
    2. '_' → logprob: -2.258552074432373
    3. 'k' → logprob: -2.633552074432373
    4. '=' → logprob: -4.633552074432373
    5. ' =' → logprob: -4.883552074432373
    6. '[' → logprob: -5.008552074432373
    7. '0' → logprob: -5.133552074432373
    8. '.append' → logprob: -5.383552074432373
    9. '_idx' → logprob: -6.008552074432373
    10. '_=' → logprob: -6.008552074432373

Token 710: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001589618914294988
    2. ' int' → logprob: -8.75015926361084
    3. '[int' → logprob: -14.87515926361084
    4. '=int' → logprob: -16.750158309936523
    5. 'ints' → logprob: -17.000158309936523
    6. '(int' → logprob: -17.875158309936523
    7. '	int' → logprob: -18.500158309936523
    8. '<int' → logprob: -19.125158309936523
    9. ']int' → logprob: -20.125158309936523
    10. '   ' → logprob: -20.750158309936523

Token 711: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.00012451570364646614
    2. 'parts' → logprob: -9.00012493133545
    3. '(' → logprob: -14.50012493133545
    4. ' parts' → logprob: -14.75012493133545
    5. '(tokens' → logprob: -16.250123977661133
    6. '(part' → logprob: -17.375123977661133
    7. '(
' → logprob: -17.875123977661133
    8. '[' → logprob: -18.375123977661133
    9. '_parts' → logprob: -18.750123977661133
    10. ' (' → logprob: -19.500123977661133

Token 712: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00020783171930816025
    2. '0' → logprob: -8.500207901000977
    3. '1' → logprob: -13.000207901000977
    4. '(' → logprob: -13.875207901000977
    5. ')' → logprob: -15.000207901000977
    6. ' [' → logprob: -15.250207901000977
    7. '[-' → logprob: -15.625207901000977
    8. '```' → logprob: -16.375207901000977
    9. '   ' → logprob: -16.750207901000977
    10. '[
' → logprob: -17.125207901000977

Token 713: '0' (ID: 15)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.24774077534675598
    2. '1' → logprob: -2.1227407455444336
    3. '0' → logprob: -2.4977407455444336
    4. 'parts' → logprob: -4.997740745544434
    5. '2' → logprob: -5.247740745544434
    6. '-' → logprob: -5.622740745544434
    7. '[' → logprob: -7.747740745544434
    8. '4' → logprob: -7.872740745544434
    9. ']' → logprob: -7.997740745544434
    10. '
' → logprob: -8.747740745544434

Token 714: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0298071950674057
    2. ')
' → logprob: -3.5298070907592773
    3. '),' → logprob: -11.029807090759277
    4. ',' → logprob: -11.154807090759277
    5. '<|end|>' → logprob: -11.904807090759277
    6. ')#' → logprob: -12.779807090759277
    7. ')]' → logprob: -13.029807090759277
    8. '               ' → logprob: -13.654807090759277
    9. ')t' → logprob: -13.654807090759277
    10. ' )' → logprob: -13.779807090759277

Token 715: '               ' (ID: 506)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.377471387386322
    2. 'if' → logprob: -1.5024714469909668
    3. ',' → logprob: -3.877471446990967
    4. 'x' → logprob: -4.377471446990967
    5. '<|end|>' → logprob: -5.127471446990967
    6. 'v' → logprob: -5.252471446990967
    7. ' vx' → logprob: -5.252471446990967
    8. ' x' → logprob: -5.252471446990967
    9. '               ' → logprob: -5.377471446990967
    10. ',v' → logprob: -5.377471446990967

Token 716: ' vx' (ID: 93588)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04359941557049751
    2. 'if' → logprob: -3.1685993671417236
    3. 'vx' (adapté à ' vx') → logprob: -7.918599605560303
    4. ' x' → logprob: -9.043599128723145
    5. ' if' → logprob: -9.918599128723145
    6. 'v' → logprob: -10.668599128723145
    7. 'dx' → logprob: -10.668599128723145
    8. 'break' → logprob: -11.793599128723145
    9. '#' → logprob: -12.793599128723145
    10. ' vx' → logprob: -13.168599128723145

Token 717: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 718: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002135390415787697
    2. 'float' → logprob: -6.252135276794434
    3. ' int' → logprob: -8.502135276794434
    4. ' float' → logprob: -13.252135276794434
    5. '0' → logprob: -13.377135276794434
    6. '(int' → logprob: -16.00213623046875
    7. '=int' → logprob: -16.00213623046875
    8. '[int' → logprob: -16.62713623046875
    9. '<int' → logprob: -16.75213623046875
    10. '	int' → logprob: -17.87713623046875

Token 719: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.0019977507181465626
    2. 'parts' → logprob: -6.751997947692871
    3. ' parts' → logprob: -7.251997947692871
    4. '(' → logprob: -9.376997947692871
    5. ')' → logprob: -10.501997947692871
    6. '(tokens' → logprob: -13.126997947692871
    7. '_parts' → logprob: -13.251997947692871
    8. ' )' → logprob: -14.501997947692871
    9. ' (' → logprob: -14.751997947692871
    10. '<|end|>' → logprob: -14.876997947692871

Token 720: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14276941120624542
    2. '[' → logprob: -2.0177693367004395
    3. ')' → logprob: -10.142769813537598
    4. ' [' → logprob: -11.017769813537598
    5. ' ' → logprob: -11.142769813537598
    6. '(' → logprob: -11.767769813537598
    7. ']' → logprob: -12.017769813537598
    8. '])' → logprob: -12.892769813537598
    9. '   ' → logprob: -14.017769813537598
    10. ' )' → logprob: -14.142769813537598

Token 721: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014036978245712817
    2. '0' → logprob: -8.875140190124512
    3. '[' → logprob: -15.250140190124512
    4. ' ' → logprob: -16.000141143798828
    5. 'parts' → logprob: -16.375141143798828
    6. ')' → logprob: -16.875141143798828
    7. '-' → logprob: -17.500141143798828
    8. '
' → logprob: -17.875141143798828
    9. '3' → logprob: -17.875141143798828
    10. ']' → logprob: -18.125141143798828

Token 722: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04867468774318695
    2. ')
' → logprob: -3.0486745834350586
    3. ')v' → logprob: -10.548674583435059
    4. '<|end|>' → logprob: -10.798674583435059
    5. ')
' → logprob: -11.673674583435059
    6. '),' → logprob: -11.798674583435059
    7. ')

' → logprob: -11.923674583435059
    8. ',' → logprob: -12.798674583435059
    9. ' )' → logprob: -13.173674583435059
    10. '               ' → logprob: -13.298674583435059

Token 723: '               ' (ID: 506)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.44889116287231445
    2. ' 
' → logprob: -2.0738911628723145
    3. 'vy' → logprob: -2.3238911628723145
    4. ' vy' → logprob: -3.5738911628723145
    5. 'y' → logprob: -3.8238911628723145
    6. '<|end|>' → logprob: -3.8238911628723145
    7. '  
' → logprob: -3.9488911628723145
    8. ',v' → logprob: -4.0738911628723145
    9. '
' → logprob: -5.4488911628723145
    10. ',' → logprob: -5.8238911628723145

Token 724: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' (adapté à ' vy') → logprob: -0.00033558503491804004
    2. ' vy' → logprob: -8.000335693359375
    3. 'v' → logprob: -17.000335693359375
    4. 'vyk' → logprob: -17.250335693359375
    5. 'Vy' → logprob: -19.250335693359375
    6. 'vx' → logprob: -19.625335693359375
    7. ' 
' → logprob: -20.125335693359375
    8. 'vz' → logprob: -20.500335693359375
    9. ' ' → logprob: -21.000335693359375
    10. 'y' → logprob: -21.500335693359375

Token 725: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2695254981517792
    2. '<|end|>' → logprob: -1.5195255279541016
    3. '<|end|>' → logprob: -5.019525527954102
    4. '[' → logprob: -5.144525527954102
    5. ']' → logprob: -5.519525527954102
    6. ')]' → logprob: -9.144525527954102
    7. '])' → logprob: -9.519525527954102
    8. '```' → logprob: -9.894525527954102
    9. ')>' → logprob: -10.019525527954102
    10. '[i' → logprob: -10.019525527954102

Token 726: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0067208209075033665
    2. ' int' → logprob: -5.006721019744873
    3. '(int' → logprob: -12.756720542907715
    4. '[int' → logprob: -13.756720542907715
    5. '<int' → logprob: -14.381720542907715
    6. '=int' → logprob: -14.881720542907715
    7. 'ints' → logprob: -15.381720542907715
    8. ':int' → logprob: -16.00672149658203
    9. ']int' → logprob: -16.13172149658203
    10. ' parts' → logprob: -16.50672149658203

Token 727: '(parts' (ID: 102573)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0527939572930336
    2. '(parts' → logprob: -3.3027939796447754
    3. '(' → logprob: -4.427793979644775
    4. 'parts' → logprob: -6.927793979644775
    5. ' parts' → logprob: -7.177793979644775
    6. '_parts' → logprob: -8.552793502807617
    7. ' (' → logprob: -8.677793502807617
    8. '(int' → logprob: -8.927793502807617
    9. '2' → logprob: -9.052793502807617
    10. '[int' → logprob: -9.427793502807617

Token 728: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6947552561759949
    2. '2' → logprob: -0.8197552561759949
    3. '1' → logprob: -2.8197553157806396
    4. '```' → logprob: -8.944755554199219
    5. ']' → logprob: -9.194755554199219
    6. 's' → logprob: -9.569755554199219
    7. ')' → logprob: -9.694755554199219
    8. '][' → logprob: -10.194755554199219
    9. ' ' → logprob: -10.319755554199219
    10. '-' → logprob: -10.444755554199219

Token 729: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.661626634420827e-05
    2. '2' → logprob: -9.375086784362793
    3. '0' → logprob: -13.375086784362793
    4. ' ' → logprob: -16.000085830688477
    5. '```' → logprob: -18.000085830688477
    6. '   ' → logprob: -18.625085830688477
    7. ')' → logprob: -18.750085830688477
    8. '[' → logprob: -19.125085830688477
    9. '-' → logprob: -19.500085830688477
    10. '3' → logprob: -20.250085830688477

Token 730: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033798299729824066
    2. ')
' → logprob: -3.4087982177734375
    3. '])' → logprob: -9.033798217773438
    4. '))' → logprob: -12.033798217773438
    5. '])
' → logprob: -12.158798217773438
    6. ')]' → logprob: -12.408798217773438
    7. ')])' → logprob: -12.908798217773438
    8. ')
' → logprob: -13.033798217773438
    9. ')`' → logprob: -13.408798217773438
    10. '）' → logprob: -13.533798217773438

Token 731: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21400196850299835
    2. '           ' → logprob: -1.714002013206482
    3. ')' → logprob: -5.0890021324157715
    4. '       ' → logprob: -6.5890021324157715
    5. ',' → logprob: -6.9640021324157715
    6. '<|end|>' → logprob: -6.9640021324157715
    7. '                   ' → logprob: -7.0890021324157715
    8. '   ' → logprob: -7.4640021324157715
    9. '```' → logprob: -7.4640021324157715
    10. '                
' → logprob: -8.964001655578613

Token 732: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' (adapté à ' times') → logprob: -0.03156048804521561
    2. ' times' → logprob: -4.03156042098999
    3. 'if' → logprob: -4.40656042098999
    4. ' if' → logprob: -7.15656042098999
    5. '   ' → logprob: -8.656560897827148
    6. '               ' → logprob: -9.156560897827148
    7. '           ' → logprob: -10.406560897827148
    8. 't' → logprob: -12.031560897827148
    9. '                   ' → logprob: -12.031560897827148
    10. '       ' → logprob: -12.156560897827148

Token 733: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.1318875446449965e-05
    2. '.' → logprob: -10.125041007995605
    3. '.app' → logprob: -14.750041007995605
    4. 'append' → logprob: -14.875041007995605
    5. '.pop' → logprob: -15.625041007995605
    6. '.ap' → logprob: -16.000041961669922
    7. '.Append' → logprob: -17.125041961669922
    8. '[-' → logprob: -17.875041961669922
    9. ' .' → logprob: -18.125041961669922
    10. '.extend' → logprob: -18.250041961669922

Token 734: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0007100477814674377
    2. 't' → logprob: -7.2507100105285645
    3. '	t' → logprob: -17.250709533691406
    4. '(' → logprob: -17.750709533691406
    5. ' t' → logprob: -17.750709533691406
    6. '(
' → logprob: -20.125709533691406
    7. '_t' → logprob: -21.750709533691406
    8. '[t' → logprob: -22.375709533691406
    9. ')t' → logprob: -22.500709533691406
    10. ',t' → logprob: -23.250709533691406

Token 735: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0011446223361417651
    2. ')' → logprob: -7.0011444091796875
    3. ')v' → logprob: -8.376144409179688
    4. ')
' → logprob: -13.251144409179688
    5. 'v' → logprob: -14.751144409179688
    6. ',v' → logprob: -14.876144409179688
    7. ' )
' → logprob: -16.251144409179688
    8. ')

' → logprob: -16.876144409179688
    9. '),' → logprob: -17.251144409179688
    10. '           ' → logprob: -17.376144409179688

Token 736: '               ' (ID: 506)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0080572366714478
    2. '               ' → logprob: -1.0080572366714478
    3. '           ' → logprob: -2.383057117462158
    4. '                   ' → logprob: -2.883057117462158
    5. '	v' → logprob: -3.133057117462158
    6. ',v' → logprob: -3.258057117462158
    7. ' v' → logprob: -3.508057117462158
    8. '       ' → logprob: -6.383057117462158
    9. '   ' → logprob: -6.633057117462158
    10. '                ' → logprob: -7.133057117462158

Token 737: ' #' (ID: 1069)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.003628931473940611
    2. ' v' → logprob: -5.878628730773926
    3. 'x' → logprob: -7.253628730773926
    4. 'vx' → logprob: -9.503628730773926
    5. 'xs' → logprob: -10.503628730773926
    6. ' x' → logprob: -12.128628730773926
    7. '               ' → logprob: -12.628628730773926
    8. '           ' → logprob: -13.128628730773926
    9. ' vx' → logprob: -13.378628730773926
    10. '```' → logprob: -14.503628730773926

Token 738: ' position' (ID: 4010)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.012814756482839584
    2. 'x' → logprob: -4.387814521789551
    3. '#' → logprob: -8.76281452178955
    4. 'dx' → logprob: -9.01281452178955
    5. '   ' → logprob: -11.51281452178955
    6. 'xx' → logprob: -12.63781452178955
    7. '           ' → logprob: -13.01281452178955
    8. ' xs' → logprob: -13.01281452178955
    9. '       ' → logprob: -13.13781452178955
    10. 'prev' → logprob: -13.63781452178955

Token 739: ' at' (ID: 540)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6141456365585327
    2. 'x' → logprob: -1.7391456365585327
    3. 'xs' → logprob: -1.7391456365585327
    4. ' =' → logprob: -2.7391457557678223
    5. 'prev' → logprob: -3.9891457557678223
    6. '.append' → logprob: -4.989145755767822
    7. '_x' → logprob: -5.239145755767822
    8. '               ' → logprob: -6.114145755767822
    9. 'last' → logprob: -6.364145755767822
    10. '_prev' → logprob: -6.614145755767822

Token 740: ' t' (ID: 260)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.005043286830186844
    2. 'x' → logprob: -6.0050435066223145
    3. 'times' → logprob: -6.2550435066223145
    4. ' xs' → logprob: -7.5050435066223145
    5. ' times' → logprob: -9.630043029785156
    6. '
' → logprob: -11.630043029785156
    7. '   ' → logprob: -12.130043029785156
    8. 'positions' → logprob: -12.380043029785156
    9. '(xs' → logprob: -12.505043029785156
    10. '=' → logprob: -14.255043029785156

Token 741: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6015755534172058
    2. 'x' → logprob: -1.7265756130218506
    3. '.append' → logprob: -1.9765756130218506
    4. 'xs' → logprob: -2.4765756130218506
    5. ' =' → logprob: -3.4765756130218506
    6. 's' → logprob: -4.9765753746032715
    7. 'prev' → logprob: -5.2265753746032715
    8. '_x' → logprob: -6.3515753746032715
    9. '.' → logprob: -6.4765753746032715
    10. 'dx' → logprob: -6.7265753746032715

Token 742: ' previous' (ID: 5880)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.04285667464137077
    2. ' xs' → logprob: -3.2928566932678223
    3. '   ' → logprob: -6.167856693267822
    4. 'x' → logprob: -6.292856693267822
    5. '(xs' → logprob: -7.292856693267822
    6. ' x' → logprob: -9.792856216430664
    7. ' (' → logprob: -10.542856216430664
    8. '(' → logprob: -10.667856216430664
    9. '(x' → logprob: -10.917856216430664
    10. '       ' → logprob: -11.417856216430664

Token 743: ' position' (ID: 4010)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.04332640767097473
    2. ' xs' → logprob: -3.6683263778686523
    3. 'x' → logprob: -4.293326377868652
    4. 'positions' → logprob: -6.793326377868652
    5. '(xs' → logprob: -7.668326377868652
    6. 'times' → logprob: -7.793326377868652
    7. ' positions' → logprob: -8.168326377868652
    8. '_x' → logprob: -8.293326377868652
    9. 's' → logprob: -8.293326377868652
    10. 'position' → logprob: -9.043326377868652

Token 744: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.35093066096305847
    2. ' +' → logprob: -1.3509306907653809
    3. 'x' → logprob: -4.350930690765381
    4. '=' → logprob: -4.350930690765381
    5. ' =' → logprob: -6.100930690765381
    6. '.append' → logprob: -6.350930690765381
    7. '               ' → logprob: -6.975930690765381
    8. '<|end|>' → logprob: -7.100930690765381
    9. 'prev' → logprob: -7.600930690765381
    10. '[' → logprob: -7.725930690765381

Token 745: ' velocity' (ID: 30061)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.12649373710155487
    2. ' v' → logprob: -2.2514936923980713
    3. 'vx' → logprob: -5.25149393081665
    4. '(v' → logprob: -5.62649393081665
    5. ' vx' → logprob: -6.25149393081665
    6. ' (' → logprob: -6.75149393081665
    7. '[v' → logprob: -7.62649393081665
    8. '(' → logprob: -8.501493453979492
    9. '0' → logprob: -8.626493453979492
    10. '   ' → logprob: -8.626493453979492

Token 746: '*(' (ID: 14793)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6374050378799438
    2. 'x' → logprob: -1.8874050378799438
    3. '[-' → logprob: -2.1374049186706543
    4. ' times' → logprob: -3.1374049186706543
    5. 'times' → logprob: -3.6374049186706543
    6. 'xs' → logprob: -4.012404918670654
    7. ' at' → logprob: -4.137404918670654
    8. '               ' → logprob: -4.262404918670654
    9. '[' → logprob: -4.512404918670654
    10. '[i' → logprob: -5.262404918670654

Token 747: 't' (ID: 83)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.011491742916405201
    2. '(times' → logprob: -4.511491775512695
    3. ' (' → logprob: -8.011491775512695
    4. '(parts' → logprob: -9.761491775512695
    5. '(' → logprob: -10.011491775512695
    6. 'times' → logprob: -12.511491775512695
    7. '(time' → logprob: -13.511491775512695
    8. '(line' → logprob: -13.636491775512695
    9. ' times' → logprob: -13.886491775512695
    10. '((' → logprob: -14.261491775512695

Token 748: '-prev' (ID: 155531)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1656559556722641
    2. '-' → logprob: -2.0406558513641357
    3. '-times' → logprob: -3.9156558513641357
    4. '-t' → logprob: -6.165656089782715
    5. 'times' → logprob: -8.790656089782715
    6. '(times' → logprob: -9.165656089782715
    7. 's' → logprob: -9.290656089782715
    8. 'imes' → logprob: -9.665656089782715
    9. '-p' → logprob: -9.790656089782715
    10. '_times' → logprob: -10.165656089782715

Token 749: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.23236049711704254
    2. '_times' → logprob: -1.9823604822158813
    3. '_time' → logprob: -2.857360601425171
    4. 't' → logprob: -4.607360363006592
    5. 'times' → logprob: -6.982360363006592
    6. 'time' → logprob: -6.982360363006592
    7. '[' → logprob: -8.48236083984375
    8. ' -' → logprob: -9.98236083984375
    9. '-' → logprob: -10.73236083984375
    10. '   ' → logprob: -11.48236083984375

Token 750: ')?
' (ID: 123897)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1817396581172943
    2. ' *' → logprob: -3.556739568710327
    3. 'imes' → logprob: -3.681739568710327
    4. '_times' → logprob: -3.806739568710327
    5. ')*(' → logprob: -4.056739807128906
    6. 'times' → logprob: -4.181739807128906
    7. '[i' → logprob: -4.181739807128906
    8. '*(' → logprob: -4.681739807128906
    9. ' times' → logprob: -4.681739807128906
    10. '*' → logprob: -5.056739807128906

Token 751: '               ' (ID: 506)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.6123026609420776
    2. 'x' → logprob: -1.7373026609420776
    3. '```' → logprob: -1.8623026609420776
    4. ' xs' → logprob: -2.487302780151367
    5. '   ' → logprob: -4.112302780151367
    6. '           ' → logprob: -4.362302780151367
    7. ' x' → logprob: -5.237302780151367
    8. '``' → logprob: -5.862302780151367
    9. '               ' → logprob: -6.737302780151367
    10. '=' → logprob: -7.737302780151367

Token 752: ' #' (ID: 1069)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.7159978151321411
    2. 'xs' → logprob: -1.3409978151321411
    3. 'prev' → logprob: -2.4659976959228516
    4. 'x' → logprob: -2.5909976959228516
    5. 'dt' → logprob: -2.5909976959228516
    6. 'last' → logprob: -5.090997695922852
    7. '               ' → logprob: -6.340997695922852
    8. 'px' → logprob: -6.465997695922852
    9. 'xd' → logprob: -6.465997695922852
    10. 'delta' → logprob: -7.215997695922852

Token 753: ' No' (ID: 3004)
  Prédit: 'dt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dt' → logprob: -0.10546313226222992
    2. 'dx' → logprob: -2.9804630279541016
    3. 'prev' → logprob: -3.1054630279541016
    4. 'x' → logprob: -6.730463027954102
    5. ' dt' → logprob: -7.230463027954102
    6. 'xs' → logprob: -7.355463027954102
    7. 'delta' → logprob: -7.355463027954102
    8. 'px' → logprob: -7.855463027954102
    9. '#' → logprob: -8.355463027954102
    10. 'last' → logprob: -8.605463027954102

Token 754: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7498727440834045
    2. ',' → logprob: -1.2498726844787598
    3. '           ' → logprob: -1.9998726844787598
    4. 'x' → logprob: -3.1248726844787598
    5. ' x' → logprob: -3.8748726844787598
    6. '<|end|>' → logprob: -4.49987268447876
    7. 'xs' → logprob: -4.87487268447876
    8. '
' → logprob: -5.62487268447876
    9. '#' → logprob: -5.87487268447876
    10. '                   ' → logprob: -5.87487268447876

Token 755: ' t' (ID: 260)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6945931911468506
    2. '#' → logprob: -1.1945931911468506
    3. 'xs' → logprob: -2.0695931911468506
    4. 'dx' → logprob: -3.4445931911468506
    5. 'dt' → logprob: -4.31959342956543
    6. 'prev' → logprob: -4.56959342956543
    7. ' x' → logprob: -5.19459342956543
    8. 'pass' → logprob: -6.44459342956543
    9. ' xs' → logprob: -6.56959342956543
    10. ' dx' → logprob: -7.19459342956543

Token 756: ' is' (ID: 382)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2188000679016113
    2. 'times' → logprob: -1.8438000679016113
    3. ' =' → logprob: -2.0938000679016113
    4. ' is' → logprob: -2.2188000679016113
    5. '=' → logprob: -2.4688000679016113
    6. '<|end|>' → logprob: -3.4688000679016113
    7. ' times' → logprob: -3.5938000679016113
    8. '==' → logprob: -3.9688000679016113
    9. ',' → logprob: -3.9688000679016113
    10. 'imes' → logprob: -4.218800067901611

Token 757: ' end' (ID: 1268)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7803499102592468
    2. 'absolute' → logprob: -1.5303499698638916
    3. 'an' → logprob: -1.7803499698638916
    4. 'time' → logprob: -3.0303499698638916
    5. 'a' → logprob: -4.0303497314453125
    6. 'current' → logprob: -4.1553497314453125
    7. ' absolute' → logprob: -4.6553497314453125
    8. ' the' → logprob: -4.9053497314453125
    9. 'velocity' → logprob: -4.9053497314453125
    10. 'exact' → logprob: -5.0303497314453125

Token 758: ' time' (ID: 1058)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 759: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3240279257297516
    2. ',' → logprob: -1.8240278959274292
    3. '           ' → logprob: -2.4490280151367188
    4. '	       ' → logprob: -4.699028015136719
    5. '	           ' → logprob: -4.949028015136719
    6. '<|end|>' → logprob: -5.699028015136719
    7. '		       ' → logprob: -6.699028015136719
    8. '<|end|>' → logprob: -7.199028015136719
    9. '			' → logprob: -7.324028015136719
    10. 'x' → logprob: -7.449028015136719

Token 760: ' vx' (ID: 93588)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9054031372070312
    2. ' xs' → logprob: -1.2804031372070312
    3. 'x' → logprob: -2.4054031372070312
    4. 'xs' → logprob: -3.0304031372070312
    5. ' prev' → logprob: -3.1554031372070312
    6. '               ' → logprob: -3.7804031372070312
    7. '#' → logprob: -3.9054031372070312
    8. 'prev' → logprob: -3.9054031372070312
    9. ' dx' → logprob: -4.280403137207031
    10. ' vx' → logprob: -4.530403137207031

Token 761: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7069934010505676
    2. ' =' → logprob: -1.0819933414459229
    3. '.append' → logprob: -2.456993341445923
    4. '=' → logprob: -2.706993341445923
    5. ' and' → logprob: -5.081993579864502
    6. ',' → logprob: -6.331993579864502
    7. '<|end|>' → logprob: -6.581993579864502
    8. 'and' → logprob: -6.956993579864502
    9. '<|end|>' → logprob: -6.956993579864502
    10. 'x' → logprob: -7.331993579864502

Token 762: 'vy' (ID: 16670)
  Prédit: 'vy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.008614926598966122
    2. ' vy' → logprob: -4.758615016937256
    3. 'Vy' → logprob: -15.258614540100098
    4. 'v' → logprob: -16.633615493774414
    5. 'vx' → logprob: -17.508615493774414
    6. 'wy' → logprob: -18.258615493774414
    7. ' ' → logprob: -18.633615493774414
    8. '0' → logprob: -18.633615493774414
    9. ' ' → logprob: -18.758615493774414
    10. 'vyk' → logprob: -18.758615493774414

Token 763: ' active' (ID: 6725)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.31494879722595215
    2. '           ' → logprob: -1.8149487972259521
    3. 'x' → logprob: -2.564948797225952
    4. ',' → logprob: -4.689949035644531
    5. ' x' → logprob: -5.564949035644531
    6. '<|end|>' → logprob: -5.689949035644531
    7. '                   ' → logprob: -6.064949035644531
    8. 'prev' → logprob: -6.314949035644531
    9. 'v' → logprob: -6.564949035644531
    10. ' =' → logprob: -6.814949035644531

Token 764: ' from' (ID: 591)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15565571188926697
    2. '           ' → logprob: -2.6556556224823
    3. ',' → logprob: -3.7806556224823
    4. '	       ' → logprob: -4.530655860900879
    5. '<|end|>' → logprob: -5.280655860900879
    6. '	           ' → logprob: -5.405655860900879
    7. '			' → logprob: -5.655655860900879
    8. ' at' → logprob: -5.655655860900879
    9. '                   ' → logprob: -6.280655860900879
    10. 'x' → logprob: -6.280655860900879

Token 765: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.1475783735513687
    2. ' times' → logprob: -2.022578477859497
    3. 't' → logprob: -6.022578239440918
    4. 'prev' → logprob: -7.022578239440918
    5. 'previous' → logprob: -7.397578239440918
    6. ' t' → logprob: -7.772578239440918
    7. ' previous' → logprob: -8.022578239440918
    8. 'last' → logprob: -9.647578239440918
    9. ' prev' → logprob: -9.772578239440918
    10. ' last' → logprob: -10.147578239440918

Token 766: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.019508961588144302
    2. '[i' → logprob: -4.3945088386535645
    3. '.append' → logprob: -5.0195088386535645
    4. '[' → logprob: -9.144509315490723
    5. '```' → logprob: -9.769509315490723
    6. 'append' → logprob: -10.019509315490723
    7. '-' → logprob: -10.019509315490723
    8. 'i' → logprob: -11.144509315490723
    9. '[:-' → logprob: -11.394509315490723
    10. '           ' → logprob: -11.394509315490723

Token 767: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005543697625398636
    2. '2' → logprob: -5.2555437088012695
    3. '-' → logprob: -8.13054370880127
    4. ' ' → logprob: -11.75554370880127
    5. ' -' → logprob: -12.50554370880127
    6. '```' → logprob: -13.38054370880127
    7. '0' → logprob: -14.00554370880127
    8. '   ' → logprob: -15.13054370880127
    9. '...' → logprob: -15.69304370880127
    10. '``' → logprob: -15.75554370880127

Token 768: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003149319440126419
    2. ']-' → logprob: -6.253149509429932
    3. ']+' → logprob: -7.378149509429932
    4. '],' → logprob: -8.003149032592773
    5. ']*' → logprob: -9.628149032592773
    6. ']
' → logprob: -9.753149032592773
    7. ' ]' → logprob: -10.003149032592773
    8. ':]' → logprob: -10.753149032592773
    9. ']==' → logprob: -11.628149032592773
    10. '])' → logprob: -12.128149032592773

Token 769: ' to' (ID: 316)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3662906885147095
    2. '           ' → logprob: -1.4912906885147095
    3. ' =' → logprob: -2.74129056930542
    4. '.append' → logprob: -2.86629056930542
    5. ',' → logprob: -3.24129056930542
    6. 'prev' → logprob: -3.24129056930542
    7. '=' → logprob: -3.36629056930542
    8. '
' → logprob: -3.49129056930542
    9. '               ' → logprob: -3.49129056930542
    10. ')' → logprob: -3.61629056930542

Token 770: ' t' (ID: 260)
  Prédit: ' times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.521418571472168
    2. 'times' → logprob: -1.521418571472168
    3. 't' → logprob: -2.021418571472168
    4. ' t' → logprob: -2.896418571472168
    5. 'time' → logprob: -9.521418571472168
    6. '	t' → logprob: -10.271418571472168
    7. ' time' → logprob: -10.271418571472168
    8. '   ' → logprob: -10.646418571472168
    9. ' line' → logprob: -11.021418571472168
    10. 'line' → logprob: -11.271418571472168

Token 771: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6963542699813843
    2. '               ' → logprob: -0.9463542699813843
    3. ' x' → logprob: -2.946354389190674
    4. 'x' → logprob: -3.696354389190674
    5. ',' → logprob: -4.571354389190674
    6. 'prev' → logprob: -5.196354389190674
    7. ' prev' → logprob: -5.696354389190674
    8. '   ' → logprob: -6.196354389190674
    9. ' xs' → logprob: -6.571354389190674
    10. '       ' → logprob: -6.696354389190674

Token 772: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07726859301328659
    2. '               ' → logprob: -3.077268600463867
    3. 'x' → logprob: -4.202268600463867
    4. ' x' → logprob: -4.827268600463867
    5. '   ' → logprob: -6.327268600463867
    6. '       ' → logprob: -6.952268600463867
    7. '```' → logprob: -7.202268600463867
    8. ' ' → logprob: -7.952268600463867
    9. '                   ' → logprob: -8.327268600463867
    10. ',' → logprob: -8.702268600463867

Token 773: ' #' (ID: 1069)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.7596937417984009
    2. 'prev' → logprob: -1.6346937417984009
    3. 'x' → logprob: -1.7596937417984009
    4. 'xs' → logprob: -2.6346936225891113
    5. 'dt' → logprob: -2.7596936225891113
    6. '           ' → logprob: -5.009693622589111
    7. 'last' → logprob: -5.134693622589111
    8. '#' (adapté à ' #') → logprob: -6.134693622589111
    9. 'xd' → logprob: -6.134693622589111
    10. 'px' → logprob: -6.134693622589111

Token 774: ' For' (ID: 2214)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.6817110180854797
    2. 'x' → logprob: -1.681710958480835
    3. 'prev' → logprob: -1.681710958480835
    4. 'xs' → logprob: -2.556710958480835
    5. 'dt' → logprob: -3.806710958480835
    6. 'px' → logprob: -4.806711196899414
    7. 'last' → logprob: -5.056711196899414
    8. '           ' → logprob: -6.431711196899414
    9. '               ' → logprob: -6.806711196899414
    10. 'pos' → logprob: -6.931711196899414

Token 775: ' positions' (ID: 15897)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05457157641649246
    2. ' i' → logprob: -3.1795716285705566
    3. '_' → logprob: -5.054571628570557
    4. ' times' → logprob: -6.429571628570557
    5. 'x' → logprob: -6.679571628570557
    6. 'times' → logprob: -8.054571151733398
    7. 't' → logprob: -8.429571151733398
    8. ' _' → logprob: -8.679571151733398
    9. 'xs' → logprob: -8.929571151733398
    10. '_i' → logprob: -8.929571151733398

Token 776: ',' (ID: 11)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004563276655972004
    2. 'prev' → logprob: -6.629563331604004
    3. ' =' → logprob: -7.254563331604004
    4. '_prev' → logprob: -7.254563331604004
    5. '=' → logprob: -7.504563331604004
    6. 'append' → logprob: -8.004563331604004
    7. '           ' → logprob: -8.879563331604004
    8. '.' → logprob: -8.879563331604004
    9. ' at' → logprob: -8.879563331604004
    10. 'x' → logprob: -9.504563331604004

Token 777: ' we' (ID: 581)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9840826392173767
    2. 'prev' → logprob: -1.3590826988220215
    3. 'dt' → logprob: -1.7340826988220215
    4. 'dx' → logprob: -2.4840826988220215
    5. 'xs' → logprob: -3.2340826988220215
    6. '#' → logprob: -3.3590826988220215
    7. 'px' → logprob: -4.1090826988220215
    8. 'last' → logprob: -4.7340826988220215
    9. ' prev' → logprob: -6.1090826988220215
    10. ' x' → logprob: -6.7340826988220215

Token 778: ' store' (ID: 4897)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.7356024384498596
    2. 'need' → logprob: -1.3606023788452148
    3. 'x' → logprob: -2.985602378845215
    4. 'append' → logprob: -2.985602378845215
    5. 'continue' → logprob: -3.360602378845215
    6. '#' → logprob: -3.860602378845215
    7. ' need' → logprob: -3.985602378845215
    8. 'calculate' → logprob: -3.985602378845215
    9. 'xs' → logprob: -4.610602378845215
    10. 'pos' → logprob: -4.735602378845215

Token 779: ' at' (ID: 540)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.016111908480525017
    2. ' xs' → logprob: -4.516111850738525
    3. 'x' → logprob: -5.766111850738525
    4. 'positions' → logprob: -7.391111850738525
    5. '   ' → logprob: -7.641111850738525
    6. '#' → logprob: -8.641112327575684
    7. 'prev' → logprob: -9.016112327575684
    8. 'times' → logprob: -9.016112327575684
    9. '
' → logprob: -9.141112327575684
    10. '(xs' → logprob: -9.391112327575684

Token 780: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.12905572354793549
    2. 't' → logprob: -2.2540557384490967
    3. ' times' → logprob: -4.504055500030518
    4. '-' → logprob: -6.254055500030518
    5. 'positions' → logprob: -7.254055500030518
    6. ' t' → logprob: -7.379055500030518
    7. 'x' → logprob: -7.504055500030518
    8. 'time' → logprob: -8.254055976867676
    9. 'the' → logprob: -8.504055976867676
    10. 'line' → logprob: -9.129055976867676

Token 781: '[i' (ID: 1768)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0033524977043271065
    2. 'append' → logprob: -6.378352642059326
    3. '.' → logprob: -7.378352642059326
    4. '[-' → logprob: -8.503352165222168
    5. '               ' → logprob: -8.753352165222168
    6. '-' → logprob: -8.753352165222168
    7. ')' → logprob: -9.253352165222168
    8. '           ' → logprob: -9.378352165222168
    9. '=' → logprob: -9.878352165222168
    10. ',' → logprob: -10.003352165222168

Token 782: ']:' (ID: 12433)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04693981260061264
    2. ']' → logprob: -3.2969398498535156
    3. '],' → logprob: -4.796939849853516
    4. ' -' → logprob: -8.046939849853516
    5. ']-' → logprob: -8.546939849853516
    6. '[-' → logprob: -9.921939849853516
    7. '])' → logprob: -11.671939849853516
    8. ']+' → logprob: -11.796939849853516
    9. '][-' → logprob: -12.171939849853516
    10. '],
' → logprob: -13.296939849853516

Token 783: ' pos' (ID: 1253)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.11950838565826416
    2. ' xs' → logprob: -2.8695082664489746
    3. 'x' → logprob: -2.9945082664489746
    4. ' x' → logprob: -5.869508266448975
    5. '   ' → logprob: -6.994508266448975
    6. 'positions' → logprob: -7.494508266448975
    7. ' positions' → logprob: -8.369508743286133
    8. '#' → logprob: -8.494508743286133
    9. 'prev' → logprob: -8.619508743286133
    10. '
' → logprob: -8.994508743286133

Token 784: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1451762914657593
    2. ' =' → logprob: -1.1451762914657593
    3. '.append' → logprob: -1.6451762914657593
    4. '=' → logprob: -1.8951762914657593
    5. 'x' → logprob: -4.270176410675049
    6. 'append' → logprob: -6.645176410675049
    7. '   ' → logprob: -6.770176410675049
    8. '_x' → logprob: -6.770176410675049
    9. 'prev' → logprob: -7.520176410675049
    10. '_prev' → logprob: -7.520176410675049

Token 785: ' xs' (ID: 26642)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.14980359375476837
    2. ' xs' → logprob: -2.024803638458252
    3. '(xs' → logprob: -5.149803638458252
    4. ' (' → logprob: -8.024803161621094
    5. '(' → logprob: -8.399803161621094
    6. '[x' → logprob: -8.524803161621094
    7. '(x' → logprob: -8.649803161621094
    8. 'x' → logprob: -8.649803161621094
    9. '[' → logprob: -9.524803161621094
    10. '   ' → logprob: -10.274803161621094

Token 786: '[i' (ID: 1768)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.03696421906352043
    2. '[i' → logprob: -3.411964178085327
    3. 's' → logprob: -5.911964416503906
    4. '[' → logprob: -7.911964416503906
    5. '[-' → logprob: -8.786964416503906
    6. 'append' → logprob: -10.536964416503906
    7. '.' → logprob: -11.786964416503906
    8. '.app' → logprob: -12.036964416503906
    9. '.extend' → logprob: -12.036964416503906
    10. 'i' → logprob: -12.286964416503906

Token 787: '],' (ID: 2155)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06274821609258652
    2. ']' → logprob: -3.5627481937408447
    3. '[-' → logprob: -3.8127481937408447
    4. ']+' → logprob: -5.437748432159424
    5. '+' → logprob: -5.687748432159424
    6. ')' → logprob: -7.437748432159424
    7. '[' → logprob: -7.562748432159424
    8. ',' → logprob: -8.062747955322266
    9. 'i' → logprob: -8.437747955322266
    10. ' +' → logprob: -8.687747955322266

Token 788: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.16022737324237823
    2. ' ys' → logprob: -1.9102274179458618
    3. 'xs' → logprob: -13.91022777557373
    4. 'pos' → logprob: -14.91022777557373
    5. 'Ys' → logprob: -15.03522777557373
    6. 'sys' → logprob: -15.16022777557373
    7. '    ' → logprob: -15.41022777557373
    8. '   ' → logprob: -15.53522777557373
    9. '```' → logprob: -15.91022777557373
    10. ' ' → logprob: -16.410226821899414

Token 789: '[i' (ID: 1768)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.010365891270339489
    2. '[i' → logprob: -5.010365962982178
    3. '           ' → logprob: -6.635365962982178
    4. 'append' → logprob: -7.385365962982178
    5. '   ' → logprob: -8.13536548614502
    6. 's' → logprob: -8.51036548614502
    7. ')' → logprob: -8.63536548614502
    8. '[-' → logprob: -8.88536548614502
    9. ',' → logprob: -9.01036548614502
    10. '=' → logprob: -9.38536548614502

Token 790: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7417461276054382
    2. '[i' → logprob: -0.8667461276054382
    3. '])' → logprob: -3.491746187210083
    4. ']
' → logprob: -3.866746187210083
    5. '],' → logprob: -4.116745948791504
    6. ')' → logprob: -4.116745948791504
    7. ']+' → logprob: -4.741745948791504
    8. '])
' → logprob: -5.491745948791504
    9. '[-' → logprob: -6.491745948791504
    10. ')
' → logprob: -6.741745948791504

Token 791: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4690437614917755
    2. '           ' → logprob: -1.2190437316894531
    3. 'x' → logprob: -2.969043731689453
    4. ',' → logprob: -4.469043731689453
    5. 'xs' → logprob: -5.219043731689453
    6. '   ' → logprob: -5.469043731689453
    7. ' x' → logprob: -6.469043731689453
    8. 'v' → logprob: -6.969043731689453
    9. '                   ' → logprob: -7.094043731689453
    10. 'prev' → logprob: -7.594043731689453

Token 792: ' #' (ID: 1069)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.46022260189056396
    2. 'prev' → logprob: -1.710222601890564
    3. '           ' → logprob: -2.3352227210998535
    4. ' dx' → logprob: -3.4602227210998535
    5. 'dt' → logprob: -3.7102227210998535
    6. 'x' → logprob: -4.5852227210998535
    7. ' prev' → logprob: -5.0852227210998535
    8. '               ' → logprob: -5.2102227210998535
    9. 'xs' → logprob: -6.2102227210998535
    10. 'last' → logprob: -6.2102227210998535

Token 793: ' Next' (ID: 13886)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.7185736298561096
    2. 'dx' → logprob: -1.3435735702514648
    3. 'dt' → logprob: -1.9685735702514648
    4. 'x' → logprob: -2.968573570251465
    5. 'pos' → logprob: -4.343573570251465
    6. '#' → logprob: -4.343573570251465
    7. ' dx' → logprob: -4.843573570251465
    8. ' prev' → logprob: -4.843573570251465
    9. 'last' → logprob: -5.218573570251465
    10. 'delta' → logprob: -5.968573570251465

Token 794: ' positions' (ID: 15897)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.6123656034469604
    2. 'x' → logprob: -1.9873656034469604
    3. 'pos' → logprob: -2.11236572265625
    4. 'dx' → logprob: -2.98736572265625
    5. '_dx' → logprob: -3.11236572265625
    6. '_pos' → logprob: -3.23736572265625
    7. 't' → logprob: -3.98736572265625
    8. '_t' → logprob: -4.48736572265625
    9. '_time' → logprob: -5.48736572265625
    10. 'line' → logprob: -5.61236572265625

Token 795: ' will' (ID: 738)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.007280757185071707
    2. ' =' → logprob: -5.7572808265686035
    3. '=' → logprob: -6.2572808265686035
    4. '_x' → logprob: -6.7572808265686035
    5. 'x' → logprob: -7.5072808265686035
    6. 'append' → logprob: -9.132280349731445
    7. '_prev' → logprob: -9.632280349731445
    8. '.' → logprob: -9.757280349731445
    9. ' at' → logprob: -9.757280349731445
    10. 'prev' → logprob: -10.257280349731445

Token 796: ' be' (ID: 413)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.07178192585706711
    2. 'append' → logprob: -2.696781873703003
    3. '=' → logprob: -7.071782112121582
    4. '.' → logprob: -7.821782112121582
    5. ' append' → logprob: -8.446782112121582
    6. '.extend' → logprob: -9.196782112121582
    7. '...' → logprob: -9.321782112121582
    8. ' be' → logprob: -9.696782112121582
    9. '<|end|>' → logprob: -10.821782112121582
    10. ' =' → logprob: -11.196782112121582

Token 797: ' computed' (ID: 46716)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.07156721502542496
    2. ' xs' → logprob: -2.6965672969818115
    3. '(xs' → logprob: -6.821567058563232
    4. 'x' → logprob: -8.32156753540039
    5. '   ' → logprob: -9.44656753540039
    6. '[' → logprob: -9.69656753540039
    7. '[x' → logprob: -10.07156753540039
    8. '(' → logprob: -10.32156753540039
    9. ' x' → logprob: -10.94656753540039
    10. '0' → logprob: -11.44656753540039

Token 798: ' with' (ID: 483)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5801843404769897
    2. 'x' → logprob: -1.9551843404769897
    3. '               ' → logprob: -1.9551843404769897
    4. ' x' → logprob: -3.0801844596862793
    5. '                   ' → logprob: -3.2051844596862793
    6. ' if' → logprob: -3.8301844596862793
    7. ',' → logprob: -4.705184459686279
    8. 'if' → logprob: -5.080184459686279
    9. 'prev' → logprob: -5.205184459686279
    10. '       ' → logprob: -5.830184459686279

Token 799: ' velocity' (ID: 30061)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.050496455281972885
    2. ' v' → logprob: -3.9254963397979736
    3. 'vx' → logprob: -3.9254963397979736
    4. ' vx' → logprob: -6.050496578216553
    5. 'vel' → logprob: -6.550496578216553
    6. 'velocity' → logprob: -6.550496578216553
    7. 'xs' → logprob: -7.175496578216553
    8. '
' → logprob: -7.175496578216553
    9. ' velocities' → logprob: -7.300496578216553
    10. 'x' → logprob: -7.925496578216553

Token 800: '
' (ID: 198)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.4321765899658203
    2. 'x' → logprob: -1.5571765899658203
    3. 'dx' → logprob: -1.8071765899658203
    4. '               ' → logprob: -2.3071765899658203
    5. ',' → logprob: -2.8071765899658203
    6. '           ' → logprob: -3.0571765899658203
    7. ')' → logprob: -3.3071765899658203
    8. 'prev' → logprob: -3.5571765899658203
    9. ' =' → logprob: -4.05717658996582
    10. 's' → logprob: -4.30717658996582

Token 801: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2720290422439575
    2. 'x' → logprob: -2.897028923034668
    3. ',' → logprob: -3.022028923034668
    4. '               ' → logprob: -3.522028923034668
    5. '
' → logprob: -4.022028923034668
    6. 'xs' → logprob: -4.272028923034668
    7. '                   ' → logprob: -4.647028923034668
    8. '            
' → logprob: -5.022028923034668
    9. ' xs' → logprob: -5.022028923034668
    10. '```' → logprob: -5.147028923034668

Token 802: ' #' (ID: 1069)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.8557252883911133
    2. 'dt' → logprob: -1.6057252883911133
    3. 'x' → logprob: -1.7307252883911133
    4. 'prev' → logprob: -1.9807252883911133
    5. 'xs' → logprob: -3.8557252883911133
    6. 'pos' → logprob: -4.480725288391113
    7. 'px' → logprob: -4.730725288391113
    8. 'last' → logprob: -4.980725288391113
    9. '#' (adapté à ' #') → logprob: -5.480725288391113
    10. '           ' → logprob: -6.230725288391113

Token 803: ' We' (ID: 1416)
  Prédit: 'dt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dt' → logprob: -1.2453194856643677
    2. 'prev' → logprob: -1.2453194856643677
    3. 'dx' → logprob: -1.4953194856643677
    4. 'x' → logprob: -2.245319366455078
    5. 'last' → logprob: -3.370319366455078
    6. '#' → logprob: -4.495319366455078
    7. 'pos' → logprob: -4.495319366455078
    8. 'px' → logprob: -4.745319366455078
    9. ' last' → logprob: -5.370319366455078
    10. '           ' → logprob: -5.495319366455078

Token 804: ' must' (ID: 2804)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.184087336063385
    2. 'need' → logprob: -2.0590872764587402
    3. 'xs' → logprob: -4.18408727645874
    4. '#' → logprob: -4.80908727645874
    5. ' should' → logprob: -5.80908727645874
    6. 's' → logprob: -6.05908727645874
    7. ' can' → logprob: -6.55908727645874
    8. 'append' → logprob: -6.68408727645874
    9. ' xs' → logprob: -6.80908727645874
    10. 'times' → logprob: -7.05908727645874

Token 805: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.811961829662323
    2. 'append' → logprob: -1.0619618892669678
    3. 'calculate' → logprob: -2.0619618892669678
    4. ' compute' → logprob: -3.0619618892669678
    5. 'update' → logprob: -3.9369618892669678
    6. ' calculate' → logprob: -5.811961650848389
    7. ' update' → logprob: -5.936961650848389
    8. 'add' → logprob: -6.061961650848389
    9. 'continue' → logprob: -6.436961650848389
    10. 'calc' → logprob: -6.811961650848389

Token 806: ' xs' (ID: 26642)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.3193093538284302
    2. 'x' → logprob: -1.8193093538284302
    3. 'dt' → logprob: -2.8193092346191406
    4. 'new' → logprob: -3.6943092346191406
    5. 'prev' → logprob: -4.069309234619141
    6. 'xn' → logprob: -6.694309234619141
    7. 'nx' → logprob: -6.694309234619141
    8. ' dx' → logprob: -6.819309234619141
    9. 'px' → logprob: -6.944309234619141
    10. 'pos' → logprob: -7.069309234619141

Token 807: ' and' (ID: 326)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007281593861989677
    2. '[-' → logprob: -7.625728130340576
    3. 'append' → logprob: -9.375728607177734
    4. '.' → logprob: -10.125728607177734
    5. '_append' → logprob: -10.125728607177734
    6. '.extend' → logprob: -10.875728607177734
    7. '=' → logprob: -11.250728607177734
    8. ' =' → logprob: -11.625728607177734
    9. 's' → logprob: -11.875728607177734
    10. ',' → logprob: -12.375728607177734

Token 808: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.00045367187703959644
    2. ' ys' → logprob: -7.750453472137451
    3. '.append' → logprob: -11.12545394897461
    4. 'append' → logprob: -12.37545394897461
    5. '```' → logprob: -13.25045394897461
    6. '   ' → logprob: -14.25045394897461
    7. ' append' → logprob: -15.00045394897461
    8. 'yses' → logprob: -15.62545394897461
    9. '
' → logprob: -16.00045394897461
    10. 'Ys' → logprob: -16.62545394897461

Token 809: ' at' (ID: 540)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0638183131814003
    2. '[-' → logprob: -3.4388182163238525
    3. ' =' → logprob: -4.938818454742432
    4. '           ' → logprob: -5.313818454742432
    5. '=' → logprob: -5.813818454742432
    6. '[i' → logprob: -6.063818454742432
    7. '[' → logprob: -6.188818454742432
    8. ')' → logprob: -6.313818454742432
    9. '   ' → logprob: -6.313818454742432
    10. '_prev' → logprob: -7.188818454742432

Token 810: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.22064702212810516
    2. 't' → logprob: -1.7206469774246216
    3. ' times' → logprob: -4.095646858215332
    4. ' t' → logprob: -7.720646858215332
    5. 'len' → logprob: -7.720646858215332
    6. 'parts' → logprob: -8.095646858215332
    7. '   ' → logprob: -8.345646858215332
    8. 'i' → logprob: -8.470646858215332
    9. 'the' → logprob: -8.720646858215332
    10. '           ' → logprob: -9.345646858215332

Token 811: ' because' (ID: 2236)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.014738178811967373
    2. '=' → logprob: -4.389738082885742
    3. '[-' → logprob: -7.264738082885742
    4. ')' → logprob: -8.014738082885742
    5. '[i' → logprob: -8.139738082885742
    6. '.' → logprob: -8.389738082885742
    7. 'append' → logprob: -8.889738082885742
    8. '[' → logprob: -9.014738082885742
    9. ' =' → logprob: -9.014738082885742
    10. '           ' → logprob: -9.889738082885742

Token 812: ' they' (ID: 1023)
  Prédit: ' times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' times' → logprob: -1.3276410102844238
    2. 'xs' → logprob: -1.3276410102844238
    3. 'times' → logprob: -1.5776410102844238
    4. ' xs' → logprob: -2.202641010284424
    5. 't' → logprob: -3.202641010284424
    6. 'x' → logprob: -3.452641010284424
    7. ' t' → logprob: -3.577641010284424
    8. '               ' → logprob: -4.452641010284424
    9. 'len' → logprob: -4.577641010284424
    10. '                   ' → logprob: -5.452641010284424

Token 813: ' give' (ID: 3644)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.15307343006134033
    2. '=' → logprob: -2.778073310852051
    3. '[-' → logprob: -3.028073310852051
    4. '[' → logprob: -3.903073310852051
    5. '[i' → logprob: -5.653073310852051
    6. ' =' → logprob: -6.403073310852051
    7. ' are' → logprob: -6.403073310852051
    8. 'append' → logprob: -7.153073310852051
    9. ' need' → logprob: -7.278073310852051
    10. '.' → logprob: -7.778073310852051

Token 814: ' t' (ID: 260)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.5692473649978638
    2. 'prev' → logprob: -2.194247245788574
    3. 's' → logprob: -2.319247245788574
    4. ' xs' → logprob: -2.444247245788574
    5. ' the' → logprob: -2.569247245788574
    6. 'dx' → logprob: -2.944247245788574
    7. 'dt' → logprob: -2.944247245788574
    8. 'xs' → logprob: -3.069247245788574
    9. ' previous' → logprob: -3.194247245788574
    10. ' x' → logprob: -3.319247245788574

Token 815: ' and' (ID: 326)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4263019561767578
    2. '=' → logprob: -1.6763019561767578
    3. ' =' → logprob: -2.176301956176758
    4. '           ' → logprob: -2.426301956176758
    5. ',' → logprob: -2.801301956176758
    6. '                   ' → logprob: -3.301301956176758
    7. ')' → logprob: -3.426301956176758
    8. '[i' → logprob: -3.551301956176758
    9. '   ' → logprob: -3.676301956176758
    10. '```' → logprob: -3.676301956176758

Token 816: ' velocities' (ID: 157421)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.384442687034607
    2. 'ys' → logprob: -1.384442687034607
    3. 'vx' → logprob: -1.634442687034607
    4. 'v' → logprob: -2.5094428062438965
    5. 'vy' → logprob: -2.7594428062438965
    6. 'xs' → logprob: -3.1344428062438965
    7. 'y' → logprob: -3.2594428062438965
    8. 'positions' → logprob: -3.7594428062438965
    9. ' velocities' → logprob: -4.5094428062438965
    10. ' ys' → logprob: -4.7594428062438965

Token 817: '
' (ID: 198)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3215886354446411
    2. '.append' → logprob: -2.0715885162353516
    3. '           ' → logprob: -2.4465885162353516
    4. 'prev' → logprob: -2.5715885162353516
    5. '   ' → logprob: -2.6965885162353516
    6. '```' → logprob: -2.6965885162353516
    7. ',' → logprob: -3.1965885162353516
    8. ' =' → logprob: -3.4465885162353516
    9. '               ' → logprob: -3.8215885162353516
    10. '=' → logprob: -3.8215885162353516

Token 818: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1544287204742432
    2. '   ' → logprob: -1.5294287204742432
    3. 'x' → logprob: -2.154428720474243
    4. '```' → logprob: -2.279428720474243
    5. 'xs' → logprob: -3.154428720474243
    6. '[' → logprob: -3.654428720474243
    7. ',' → logprob: -3.654428720474243
    8. '       ' → logprob: -3.779428720474243
    9. '
' → logprob: -3.779428720474243
    10. ')' → logprob: -3.904428720474243

Token 819: ' #' (ID: 1069)
  Prédit: 'dt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dt' → logprob: -0.5763411521911621
    2. '           ' → logprob: -1.576341152191162
    3. 'prev' → logprob: -1.826341152191162
    4. ' dt' → logprob: -3.701341152191162
    5. 'dx' → logprob: -3.826341152191162
    6. 'x' → logprob: -5.076341152191162
    7. ' prev' → logprob: -5.201341152191162
    8. 't' → logprob: -6.451341152191162
    9. ' dx' → logprob: -6.576341152191162
    10. 'delta' → logprob: -6.701341152191162

Token 820: ' So' (ID: 2632)
  Prédit: 'dt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dt' → logprob: -0.3445873260498047
    2. 'dx' → logprob: -1.8445873260498047
    3. 'prev' → logprob: -2.3445873260498047
    4. '           ' → logprob: -4.469587326049805
    5. 'x' → logprob: -4.844587326049805
    6. ' dt' → logprob: -5.219587326049805
    7. '#' → logprob: -5.594587326049805
    8. 'delta' → logprob: -6.094587326049805
    9. ' dx' → logprob: -6.219587326049805
    10. ' prev' → logprob: -6.844587326049805

Token 821: ' to' (ID: 316)
  Prédit: ' prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prev' → logprob: -1.0532523393630981
    2. 'prev' → logprob: -1.1782523393630981
    3. ' dt' → logprob: -1.8032523393630981
    4. 'dt' → logprob: -1.9282523393630981
    5. ' dx' → logprob: -4.803252220153809
    6. 'dx' → logprob: -5.053252220153809
    7. '#' → logprob: -5.178252220153809
    8. ' if' → logprob: -5.428252220153809
    9. ' #' → logprob: -6.178252220153809
    10. 'if' → logprob: -6.428252220153809

Token 822: ' get' (ID: 717)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20223499834537506
    2. 'xs' → logprob: -2.827234983444214
    3. 'prev' → logprob: -3.452234983444214
    4. 'dx' → logprob: -3.827234983444214
    5. 'for' → logprob: -4.077235221862793
    6. '
' → logprob: -5.077235221862793
    7. ' for' → logprob: -5.202235221862793
    8. 'continue' → logprob: -5.452235221862793
    9. 'i' → logprob: -5.452235221862793
    10. 'while' → logprob: -5.702235221862793

Token 823: ' xs' (ID: 26642)
  Prédit: 'dt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dt' → logprob: -0.19833904504776
    2. 'dx' → logprob: -1.9483389854431152
    3. 'prev' → logprob: -3.6983389854431152
    4. 'x' → logprob: -5.198338985443115
    5. 'pos' → logprob: -6.698338985443115
    6. 'new' → logprob: -6.823338985443115
    7. 'px' → logprob: -6.823338985443115
    8. ' dt' → logprob: -6.948338985443115
    9. 'xs' → logprob: -6.948338985443115
    10. '#' → logprob: -7.448338985443115

Token 824: ' and' (ID: 326)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00021224225929472595
    2. '[-' → logprob: -9.375212669372559
    3. 'append' → logprob: -10.375212669372559
    4. '.extend' → logprob: -11.000212669372559
    5. ' +=' → logprob: -11.250212669372559
    6. '_prev' → logprob: -11.375212669372559
    7. ',' → logprob: -11.500212669372559
    8. '=' → logprob: -11.625212669372559
    9. '_append' → logprob: -11.750212669372559
    10. '.' → logprob: -11.875212669372559

Token 825: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.0007100477814674377
    2. ' ys' → logprob: -7.2507100105285645
    3. 'ysi' → logprob: -19.250709533691406
    4. 'Ys' → logprob: -19.250709533691406
    5. '
' → logprob: -19.375709533691406
    6. 'y' → logprob: -19.500709533691406
    7. '```' → logprob: -19.625709533691406
    8. '=' → logprob: -19.750709533691406
    9. 'yses' → logprob: -20.125709533691406
    10. '   ' → logprob: -20.125709533691406

Token 826: ' at' (ID: 540)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.003927845042198896
    2. '=' → logprob: -7.003927707672119
    3. ' at' → logprob: -7.628927707672119
    4. '_prev' → logprob: -7.628927707672119
    5. '[-' → logprob: -8.003928184509277
    6. ' =' → logprob: -8.003928184509277
    7. ',' → logprob: -8.253928184509277
    8. 'append' → logprob: -8.753928184509277
    9. '.extend' → logprob: -9.003928184509277
    10. '_at' → logprob: -9.128928184509277

Token 827: ' t' (ID: 260)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.20500221848487854
    2. 't' → logprob: -1.7050021886825562
    3. ' times' → logprob: -6.205002307891846
    4. 'i' → logprob: -7.705002307891846
    5. 'the' → logprob: -8.205001831054688
    6. 'parts' → logprob: -8.330001831054688
    7. 'time' → logprob: -8.830001831054688
    8. 'next' → logprob: -9.330001831054688
    9. '   ' → logprob: -9.455001831054688
    10. 'len' → logprob: -9.705001831054688

Token 828: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1665583848953247
    2. ',' → logprob: -1.1665583848953247
    3. ' =' → logprob: -1.7915583848953247
    4. '=' → logprob: -3.166558265686035
    5. 's' → logprob: -4.041558265686035
    6. '[i' → logprob: -4.166558265686035
    7. '           ' → logprob: -4.291558265686035
    8. ':' → logprob: -4.416558265686035
    9. '   ' → logprob: -4.666558265686035
    10. '```' → logprob: -4.666558265686035

Token 829: ' need' (ID: 1309)
  Prédit: ' dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.4933702051639557
    2. 'dx' → logprob: -2.368370294570923
    3. ' xs' → logprob: -2.493370294570923
    4. ' x' → logprob: -2.618370294570923
    5. ' dt' → logprob: -2.618370294570923
    6. 'x' → logprob: -3.743370294570923
    7. 'dt' → logprob: -4.493370056152344
    8. ' prev' → logprob: -4.618370056152344
    9. 'prev' → logprob: -4.868370056152344
    10. 'xs' → logprob: -4.868370056152344

Token 830: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7654509544372559
    2. '
' → logprob: -2.390450954437256
    3. 'xs' → logprob: -2.515450954437256
    4. 'to' → logprob: -2.640450954437256
    5. 'x' → logprob: -2.890450954437256
    6. 'prev' → logprob: -3.015450954437256
    7. ' xs' → logprob: -3.515450954437256
    8. 'for' → logprob: -3.890450954437256
    9. '           ' → logprob: -4.015450954437256
    10. 'dx' → logprob: -4.015450954437256

Token 831: ' compute' (ID: 23864)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5129020810127258
    2. 'xs' → logprob: -1.012902021408081
    3. ' xs' → logprob: -4.38790225982666
    4. 'append' → logprob: -5.01290225982666
    5. 'for' → logprob: -5.26290225982666
    6. ' x' → logprob: -5.76290225982666
    7. '
' → logprob: -6.13790225982666
    8. ' for' → logprob: -6.51290225982666
    9. ' append' → logprob: -6.51290225982666
    10. 'prev' → logprob: -7.01290225982666

Token 832: ' from' (ID: 591)
  Prédit: ' dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.6786062121391296
    2. ' dt' → logprob: -1.6786062717437744
    3. 'dx' → logprob: -1.6786062717437744
    4. 'dt' → logprob: -2.6786062717437744
    5. ' x' → logprob: -4.303606033325195
    6. 'x' → logprob: -4.678606033325195
    7. 'prev' → logprob: -4.803606033325195
    8. ' prev' → logprob: -4.928606033325195
    9. ' last' → logprob: -5.803606033325195
    10. ' xs' → logprob: -6.178606033325195

Token 833: ' previous' (ID: 5880)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.18525035679340363
    2. ' xs' → logprob: -1.9352504014968872
    3. 'times' → logprob: -4.810250282287598
    4. ' times' → logprob: -4.935250282287598
    5. 'previous' → logprob: -6.185250282287598
    6. 'x' → logprob: -6.185250282287598
    7. ' previous' → logprob: -6.310250282287598
    8. 'prev' → logprob: -7.185250282287598
    9. 'last' → logprob: -7.685250282287598
    10. '(xs' → logprob: -7.810250282287598

Token 834: '
' (ID: 198)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7528969645500183
    2. '_x' → logprob: -1.127897024154663
    3. 'dx' → logprob: -2.502897024154663
    4. 'xs' → logprob: -2.752897024154663
    5. 'dt' → logprob: -3.752897024154663
    6. 't' → logprob: -4.377896785736084
    7. '_dx' → logprob: -4.627896785736084
    8. 'pos' → logprob: -5.377896785736084
    9. 'times' → logprob: -6.252896785736084
    10. '_dt' → logprob: -6.502896785736084

Token 835: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0719287097454071
    2. '               ' → logprob: -4.07192850112915
    3. '   ' → logprob: -5.19692850112915
    4. '                   ' → logprob: -5.19692850112915
    5. 'x' → logprob: -5.32192850112915
    6. '```' → logprob: -5.44692850112915
    7. '
' → logprob: -5.57192850112915
    8. ' dt' → logprob: -5.82192850112915
    9. ' dx' → logprob: -5.82192850112915
    10. 'dt' → logprob: -5.82192850112915

Token 836: ' dt' (ID: 14008)
  Prédit: 'dt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dt' (adapté à ' dt') → logprob: -0.40638166666030884
    2. 'dx' → logprob: -1.781381607055664
    3. ' dt' → logprob: -2.781381607055664
    4. '           ' → logprob: -3.406381607055664
    5. 'prev' → logprob: -3.406381607055664
    6. ' dx' → logprob: -3.781381607055664
    7. 'x' → logprob: -4.906381607055664
    8. 'delta' → logprob: -6.281381607055664
    9. ' prev' → logprob: -6.781381607055664
    10. '#' → logprob: -6.906381607055664

Token 837: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759406089782715
    2. ' =' → logprob: -0.8259406089782715
    3. '=int' → logprob: -15.32594108581543
    4. '=t' → logprob: -15.45094108581543
    5. ' ' → logprob: -15.82594108581543
    6. 's' → logprob: -16.07594108581543
    7. 't' → logprob: -16.20094108581543
    8. ')' → logprob: -16.45094108581543
    9. '=time' → logprob: -16.57594108581543
    10. '=line' → logprob: -17.20094108581543

Token 838: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.20102126896381378
    2. 'times' → logprob: -1.9510213136672974
    3. ' times' → logprob: -3.826021194458008
    4. ' t' → logprob: -4.076021194458008
    5. 'parts' → logprob: -7.826021194458008
    6. ' parts' → logprob: -7.826021194458008
    7. '   ' → logprob: -8.576021194458008
    8. '(t' → logprob: -9.451021194458008
    9. '(times' → logprob: -10.076021194458008
    10. '	t' → logprob: -10.701021194458008

Token 839: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20152142643928528
    2. '-' → logprob: -1.701521396636963
    3. '=' → logprob: -9.826521873474121
    4. '-t' → logprob: -11.076521873474121
    5. '-times' → logprob: -11.076521873474121
    6. ' =' → logprob: -11.326521873474121
    7. 'times' → logprob: -12.451521873474121
    8. '   ' → logprob: -12.826521873474121
    9. 's' → logprob: -14.076521873474121
    10. ' ' → logprob: -14.451521873474121

Token 840: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.00022213248303160071
    2. ' times' → logprob: -8.500222206115723
    3. '               ' → logprob: -11.625222206115723
    4. '           ' → logprob: -12.625222206115723
    5. '(times' → logprob: -13.125222206115723
    6. '   ' → logprob: -13.250222206115723
    7. '                   ' → logprob: -13.875222206115723
    8. 'timestamps' → logprob: -14.500222206115723
    9. 'time' → logprob: -14.750222206115723
    10. '       ' → logprob: -15.750222206115723

Token 841: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -5.319370302458992e-06
    2. '-' → logprob: -12.250005722045898
    3. '[i' → logprob: -15.250005722045898
    4. '[len' → logprob: -15.375005722045898
    5. '   ' → logprob: -17.3750057220459
    6. '```' → logprob: -17.7500057220459
    7. '[' → logprob: -18.2500057220459
    8. 's' → logprob: -19.3750057220459
    9. '`' → logprob: -20.1250057220459
    10. '(-' → logprob: -20.2500057220459

Token 842: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5332478142227046e-05
    2. '1' → logprob: -11.125015258789062
    3. ' ' → logprob: -15.000015258789062
    4. '```' → logprob: -16.875015258789062
    5. '3' → logprob: -17.125015258789062
    6. '   ' → logprob: -17.500015258789062
    7. '  ' → logprob: -19.062515258789062
    8. '２' → logprob: -19.625015258789062
    9. '``' → logprob: -19.812515258789062
    10. '(' → logprob: -20.125015258789062

Token 843: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16412849724292755
    2. ']
' → logprob: -2.039128541946411
    3. ')' → logprob: -4.414128303527832
    4. '])' → logprob: -5.414128303527832
    5. ')
' → logprob: -5.914128303527832
    6. '])
' → logprob: -6.414128303527832
    7. ']
' → logprob: -8.664128303527832
    8. ']

' → logprob: -10.289128303527832
    9. ')]' → logprob: -10.539128303527832
    10. '```' → logprob: -11.414128303527832

Token 844: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013819205574691296
    2. '       ' → logprob: -5.763819217681885
    3. '               ' → logprob: -6.013819217681885
    4. 'x' → logprob: -6.263819217681885
    5. '
' → logprob: -6.513819217681885
    6. ' x' → logprob: -6.888819217681885
    7. 'xs' → logprob: -7.138819217681885
    8. '                   ' → logprob: -7.263819217681885
    9. ' xs' → logprob: -7.388819217681885
    10. '            
' → logprob: -7.638819217681885

Token 845: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.33929362893104553
    2. 'xs' → logprob: -1.5892935991287231
    3. ' x' → logprob: -3.0892937183380127
    4. ' xs' → logprob: -3.4642937183380127
    5. '           ' → logprob: -5.464293479919434
    6. '               ' → logprob: -7.339293479919434
    7. 'new' → logprob: -7.464293479919434
    8. '   ' → logprob: -7.714293479919434
    9. ' new' → logprob: -7.964293479919434
    10. 'last' → logprob: -9.464293479919434

Token 846: '_new' (ID: 13000)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.45818835496902466
    2. ' =' → logprob: -1.5831882953643799
    3. '=' → logprob: -1.9581882953643799
    4. 'new' → logprob: -4.333188533782959
    5. '_new' → logprob: -6.208188533782959
    6. ' new' → logprob: -6.208188533782959
    7. '.append' → logprob: -6.833188533782959
    8. '   ' → logprob: -7.458188533782959
    9. 'xs' → logprob: -7.708188533782959
    10. '_' → logprob: -7.958188533782959

Token 847: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048587486147880554
    2. ' =' → logprob: -3.0485875606536865
    3. ' ' → logprob: -17.298587799072266
    4. 's' → logprob: -17.298587799072266
    5. '   ' → logprob: -17.673587799072266
    6. ',' → logprob: -18.173587799072266
    7. '.append' → logprob: -18.798587799072266
    8. 'x' → logprob: -18.923587799072266
    9. '+=' → logprob: -19.298587799072266
    10. '=x' → logprob: -19.548587799072266

Token 848: ' xs' (ID: 26642)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.0009153862483799458
    2. ' xs' → logprob: -7.00091552734375
    3. '(xs' → logprob: -13.25091552734375
    4. '   ' → logprob: -13.50091552734375
    5. 'x' → logprob: -14.37591552734375
    6. ' ' → logprob: -17.37591552734375
    7. '       ' → logprob: -19.25091552734375
    8. '0' → logprob: -19.62591552734375
    9. 'Xs' → logprob: -19.62591552734375
    10. '_x' → logprob: -19.87591552734375

Token 849: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -3.128163257315464e-07
    2. '-' → logprob: -15.5
    3. '.append' → logprob: -17.375
    4. '[' → logprob: -19.125
    5. '[i' → logprob: -19.375
    6. '][-' → logprob: -19.5
    7. '```' → logprob: -19.625
    8. ' [-' → logprob: -20.375
    9. '−' → logprob: -20.625
    10. '   ' → logprob: -21.25

Token 850: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '2' → logprob: -16.75
    4. '```' → logprob: -17.25
    5. '   ' → logprob: -17.5
    6. '  ' → logprob: -19.4375
    7. '(' → logprob: -19.625
    8. '`' → logprob: -19.875
    9. '``' → logprob: -20.125
    10. '' → logprob: -20.125

Token 851: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16022635996341705
    2. '+' → logprob: -1.9102263450622559
    3. '+x' → logprob: -14.160226821899414
    4. ')' → logprob: -14.285226821899414
    5. ')+' → logprob: -15.910226821899414
    6. '   ' → logprob: -16.035226821899414
    7. '```' → logprob: -16.285226821899414
    8. '+
' → logprob: -16.410226821899414
    9. ' ' → logprob: -16.660226821899414
    10. ' +
' → logprob: -16.910226821899414

Token 852: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0788913294672966
    2. ' +' → logprob: -2.5788912773132324
    3. '+x' → logprob: -13.82889175415039
    4. '+
' → logprob: -14.70389175415039
    5. '```' → logprob: -17.07889175415039
    6. '
' → logprob: -17.32889175415039
    7. ' ' → logprob: -17.70389175415039
    8. ' +
' → logprob: -17.70389175415039
    9. '   ' → logprob: -18.07889175415039
    10. '+d' → logprob: -18.32889175415039

Token 853: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.1398757123970427e-05
    2. ' v' → logprob: -11.500011444091797
    3. '   ' → logprob: -13.750011444091797
    4. 'vx' → logprob: -15.625011444091797
    5. ' ' → logprob: -18.625011444091797
    6. 'dt' → logprob: -18.750011444091797
    7. '(v' → logprob: -19.000011444091797
    8. '  ' → logprob: -19.750011444091797
    9. '           ' → logprob: -20.000011444091797
    10. '    ' → logprob: -20.625011444091797

Token 854: 'xs' (ID: 33335)
  Prédit: 'xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.0011723674833774567
    2. 'x' → logprob: -6.7511725425720215
    3. 's' → logprob: -13.126172065734863
    4. 'xes' → logprob: -15.501172065734863
    5. 'ws' → logprob: -17.75117301940918
    6. '   ' → logprob: -18.37617301940918
    7. 'cs' → logprob: -19.25117301940918
    8. '[' → logprob: -19.25117301940918
    9. '```' → logprob: -19.25117301940918
    10. ' xs' → logprob: -19.37617301940918

Token 855: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -2.2200749754119897e-06
    2. '-' → logprob: -14.000001907348633
    3. '```' → logprob: -14.250001907348633
    4. '[' → logprob: -15.000001907348633
    5. '][-' → logprob: -16.125001907348633
    6. '[i' → logprob: -17.000001907348633
    7. '[]' → logprob: -18.000001907348633
    8. ' [-' → logprob: -18.250001907348633
    9. '`' → logprob: -18.250001907348633
    10. '[len' → logprob: -18.875001907348633

Token 856: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. '2' → logprob: -13.625004768371582
    3. '[-' → logprob: -13.625004768371582
    4. '-' → logprob: -14.000004768371582
    5. ' ' → logprob: -14.750004768371582
    6. '```' → logprob: -15.687504768371582
    7. 'len' → logprob: -16.375003814697266
    8. ']' → logprob: -16.625003814697266
    9. '][-' → logprob: -16.625003814697266
    10. ' -' → logprob: -16.750003814697266

Token 857: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -5.7292167184641585e-05
    2. ' *' → logprob: -10.125057220458984
    3. '[' → logprob: -11.250057220458984
    4. ']*' → logprob: -12.750057220458984
    5. '*[' → logprob: -14.625057220458984
    6. '```' → logprob: -15.375057220458984
    7. ')*' → logprob: -15.750057220458984
    8. '*ft' → logprob: -15.875057220458984
    9. '[*' → logprob: -16.250057220458984
    10. '*d' → logprob: -16.750057220458984

Token 858: 'dt' (ID: 12490)
  Prédit: 'dt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dt' → logprob: -4.320199877838604e-07
    2. ' dt' → logprob: -14.75
    3. 'd' → logprob: -20.125
    4. '(dt' → logprob: -21.625
    5. '_dt' → logprob: -23.25
    6. '   ' → logprob: -23.5
    7. '
' → logprob: -24.5
    8. '	d' → logprob: -24.75
    9. '.dt' → logprob: -25.5
    10. '```' → logprob: -25.5

Token 859: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 860: '               ' (ID: 506)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.026544230058789253
    2. '   ' → logprob: -5.151544094085693
    3. ' y' → logprob: -5.151544094085693
    4. '           ' → logprob: -5.401544094085693
    5. 'ys' → logprob: -5.776544094085693
    6. '
' → logprob: -6.276544094085693
    7. 's' → logprob: -6.401544094085693
    8. ' ys' → logprob: -6.651544094085693
    9. ',y' → logprob: -7.901544094085693
    10. '               ' → logprob: -8.026544570922852

Token 861: ' y' (ID: 342)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.19158095121383667
    2. 'y' (adapté à ' y') → logprob: -2.0665810108184814
    3. ' ys' → logprob: -3.1915810108184814
    4. ' y' → logprob: -5.191580772399902
    5. '               ' → logprob: -7.566580772399902
    6. '           ' → logprob: -8.316580772399902
    7. '   ' → logprob: -8.691580772399902
    8. 'xs' → logprob: -10.566580772399902
    9. '                   ' → logprob: -10.691580772399902
    10. ' ' → logprob: -11.941580772399902

Token 862: '_new' (ID: 13000)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3224338889122009
    2. '_new' → logprob: -1.5724339485168457
    3. '[-' → logprob: -2.6974339485168457
    4. 'new' → logprob: -8.322433471679688
    5. '.append' → logprob: -8.822433471679688
    6. 'New' → logprob: -9.822433471679688
    7. '_NEW' → logprob: -10.197433471679688
    8. '_' → logprob: -10.197433471679688
    9. '[]' → logprob: -10.322433471679688
    10. '```' → logprob: -10.447433471679688

Token 863: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43190115690231323
    2. '[-' → logprob: -1.181901216506958
    3. '+' → logprob: -3.806901216506958
    4. ' =' → logprob: -4.431900978088379
    5. ' +' → logprob: -4.806900978088379
    6. '[' → logprob: -7.306900978088379
    7. '+=' → logprob: -7.931900978088379
    8. 's' → logprob: -8.556900978088379
    9. ' +=' → logprob: -8.681900978088379
    10. ')' → logprob: -8.681900978088379

Token 864: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.001170460251159966
    2. ' ys' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.62617015838623
    4. ' ' → logprob: -17.376171112060547
    5. 'ysi' → logprob: -18.751171112060547
    6. '  ' → logprob: -19.376171112060547
    7. '`' → logprob: -19.501171112060547
    8. '       ' → logprob: -19.751171112060547
    9. '
' → logprob: -19.751171112060547
    10. 'xs' → logprob: -19.876171112060547

Token 865: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: 0.0
    2. '```' → logprob: -18.875
    3. '-' → logprob: -19.25
    4. '][-' → logprob: -19.875
    5. '[
' → logprob: -20.125
    6. '[' → logprob: -21.375
    7. '.append' → logprob: -21.375
    8. ' [-' → logprob: -21.875
    9. '[:-' → logprob: -22.125
    10. '...' → logprob: -22.375

Token 866: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. '-' → logprob: -11.750008583068848
    3. '[-' → logprob: -15.250008583068848
    4. '```' → logprob: -17.00000762939453
    5. 'last' → logprob: -17.37500762939453
    6. ' ' → logprob: -17.37500762939453
    7. ' -' → logprob: -18.18750762939453
    8. 'len' → logprob: -18.25000762939453
    9. '   ' → logprob: -18.43750762939453
    10. ']' → logprob: -19.50000762939453

Token 867: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5458263754844666
    2. '+' → logprob: -1.0458264350891113
    3. '[-' → logprob: -2.6708264350891113
    4. ']' → logprob: -11.545825958251953
    5. ']+' → logprob: -11.670825958251953
    6. '][-' → logprob: -11.920825958251953
    7. ')' → logprob: -12.295825958251953
    8. '[' → logprob: -12.795825958251953
    9. ')+' → logprob: -12.920825958251953
    10. ' [-' → logprob: -13.670825958251953

Token 868: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3132619559764862
    2. '+' → logprob: -1.3132619857788086
    3. '+y' → logprob: -16.188261032104492
    4. '＋' → logprob: -17.438261032104492
    5. ' ' → logprob: -17.563261032104492
    6. ' ' → logprob: -17.688261032104492
    7. '+
' → logprob: -18.063261032104492
    8. '+x' → logprob: -18.063261032104492
    9. '[' → logprob: -18.438261032104492
    10. ' +
' → logprob: -18.563261032104492

Token 869: ' vys' (ID: 66128)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.006729934364557266
    2. ' vys' → logprob: -5.006730079650879
    3. ' vyst' → logprob: -12.881730079650879
    4. 'vyk' → logprob: -13.256730079650879
    5. ' ' → logprob: -13.506730079650879
    6. 'y' → logprob: -13.881730079650879
    7. '	v' → logprob: -14.006730079650879
    8. '   ' → logprob: -14.131730079650879
    9. 'vý' → logprob: -14.506730079650879
    10. '
' → logprob: -14.631730079650879

Token 870: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -9.088346359931165e-07
    2. '-' → logprob: -14.000000953674316
    3. '```' → logprob: -17.625
    4. '][-' → logprob: -18.375
    5. '[' → logprob: -18.75
    6. ' [-' → logprob: -19.375
    7. '[i' → logprob: -20.25
    8. '
' → logprob: -20.625
    9. '[
' → logprob: -20.875
    10. '[last' → logprob: -21.0

Token 871: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. '-' → logprob: -12.625005722045898
    3. '[-' → logprob: -13.000005722045898
    4. 'last' → logprob: -15.250005722045898
    5. '[' → logprob: -16.6250057220459
    6. '```' → logprob: -16.8750057220459
    7. '2' → logprob: -17.1250057220459
    8. ' ' → logprob: -17.8750057220459
    9. '][-' → logprob: -17.8750057220459
    10. '' → logprob: -18.5625057220459

Token 872: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0013288103509694338
    2. ']*' → logprob: -6.626328945159912
    3. ')*' → logprob: -13.501328468322754
    4. ' *' → logprob: -14.501328468322754
    5. '[' → logprob: -15.001328468322754
    6. '```' → logprob: -15.376328468322754
    7. '*t' → logprob: -15.751328468322754
    8. ''*' → logprob: -16.12632942199707
    9. '*[' → logprob: -16.50132942199707
    10. ']' → logprob: -17.25132942199707

Token 873: 'dt' (ID: 12490)
  Prédit: 'dt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dt' → logprob: -9.014684110297821e-06
    2. ' dt' → logprob: -11.750008583068848
    3. 'd' → logprob: -15.000008583068848
    4. '(dt' → logprob: -15.000008583068848
    5. '[' → logprob: -15.500008583068848
    6. '_dt' → logprob: -16.500009536743164
    7. '
' → logprob: -16.875009536743164
    8. '*' → logprob: -17.000009536743164
    9. '```' → logprob: -17.000009536743164
    10. '[-' → logprob: -17.500009536743164

Token 874: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19530799984931946
    2. '               ' → logprob: -1.820307970046997
    3. ')' → logprob: -5.570308208465576
    4. '                   ' → logprob: -5.695308208465576
    5. '<|end|>' → logprob: -5.945308208465576
    6. '            
' → logprob: -6.820308208465576
    7. '
' → logprob: -6.945308208465576
    8. '       ' → logprob: -7.445308208465576
    9. ')
' → logprob: -7.820308208465576
    10. '                
' → logprob: -7.945308208465576

Token 875: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11501744389533997
    2. 'xs' → logprob: -2.8650174140930176
    3. '               ' → logprob: -3.7400174140930176
    4. ' xs' → logprob: -3.9900174140930176
    5. '   ' → logprob: -5.490017414093018
    6. 'x' → logprob: -6.240017414093018
    7. '```' → logprob: -6.490017414093018
    8. '                   ' → logprob: -7.365017414093018
    9. '       ' → logprob: -7.740017414093018
    10. '(xs' → logprob: -8.490017890930176

Token 876: ' xs' (ID: 26642)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' (adapté à ' xs') → logprob: -0.6832681894302368
    2. '           ' → logprob: -0.9332681894302368
    3. '               ' → logprob: -2.6832680702209473
    4. ' xs' → logprob: -4.308268070220947
    5. '   ' → logprob: -4.433268070220947
    6. 'times' → logprob: -4.933268070220947
    7. 'x' → logprob: -7.683268070220947
    8. '       ' → logprob: -9.058268547058105
    9. '            ' → logprob: -9.433268547058105
    10. ' ' → logprob: -9.683268547058105

Token 877: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00016432604752480984
    2. '.' → logprob: -8.750164031982422
    3. '.app' → logprob: -12.500164031982422
    4. '.ap' → logprob: -13.875164031982422
    5. '.extend' → logprob: -15.125164031982422
    6. ' .' → logprob: -15.125164031982422
    7. '.Append' → logprob: -15.875164031982422
    8. 'append' → logprob: -15.875164031982422
    9. '.push' → logprob: -16.500164031982422
    10. ').' → logprob: -16.625164031982422

Token 878: '(x' (ID: 4061)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0009115827269852161
    2. '(x' → logprob: -7.000911712646484
    3. ' x' → logprob: -16.125911712646484
    4. 'y' → logprob: -18.250911712646484
    5. '(' → logprob: -18.875911712646484
    6. '{x' → logprob: -20.500911712646484
    7. '[x' → logprob: -20.875911712646484
    8. '	x' → logprob: -21.000911712646484
    9. '(y' → logprob: -21.500911712646484
    10. 'int' → logprob: -21.875911712646484

Token 879: '_new' (ID: 13000)
  Prédit: '_new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_new' → logprob: -9.531813702778891e-05
    2. 'new' → logprob: -9.75009536743164
    3. 'New' → logprob: -11.00009536743164
    4. '[' → logprob: -11.87509536743164
    5. '_NEW' → logprob: -12.25009536743164
    6. 's' → logprob: -13.00009536743164
    7. '_' → logprob: -13.50009536743164
    8. 'y' → logprob: -13.50009536743164
    9. '```' → logprob: -14.25009536743164
    10. '.append' → logprob: -14.62509536743164

Token 880: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5762669444084167
    2. ')' → logprob: -0.8262669444084167
    3. ')y' → logprob: -8.32626724243164
    4. '               ' → logprob: -10.32626724243164
    5. ')
' → logprob: -10.32626724243164
    6. 'y' → logprob: -12.57626724243164
    7. ',y' → logprob: -12.70126724243164
    8. '           ' → logprob: -12.82626724243164
    9. '       ' → logprob: -13.20126724243164
    10. '),' → logprob: -13.32626724243164

Token 881: '               ' (ID: 506)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.534609854221344
    2. 'v' → logprob: -0.909609854221344
    3. 'ys' → logprob: -6.034609794616699
    4. ' vys' → logprob: -6.284609794616699
    5. '           ' → logprob: -6.409609794616699
    6. '               ' → logprob: -6.534609794616699
    7. '   ' → logprob: -6.659609794616699
    8. ' y' → logprob: -7.034609794616699
    9. ' ys' → logprob: -7.409609794616699
    10. '```' → logprob: -8.0346097946167

Token 882: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' (adapté à ' ys') → logprob: -0.0002613358374219388
    2. ' ys' → logprob: -8.250261306762695
    3. 'yses' → logprob: -18.000261306762695
    4. 'yes' → logprob: -19.500261306762695
    5. 'ysin' → logprob: -19.625261306762695
    6. 'ysi' → logprob: -19.750261306762695
    7. 'y' → logprob: -19.750261306762695
    8. '               ' → logprob: -19.875261306762695
    9. 'eys' → logprob: -19.875261306762695
    10. 'tys' → logprob: -20.125261306762695

Token 883: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.966313281329349e-05
    2. '.' → logprob: -10.125049591064453
    3. ' .' → logprob: -12.625049591064453
    4. '<|end|>' → logprob: -12.875049591064453
    5. 'append' → logprob: -13.500049591064453
    6. '_append' → logprob: -14.125049591064453
    7. '.app' → logprob: -14.625049591064453
    8. 'appa' → logprob: -15.000049591064453
    9. '	append' → logprob: -15.250049591064453
    10. '.Append' → logprob: -15.625049591064453

Token 884: '(y' (ID: 14684)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2519306540489197
    2. '(y' → logprob: -1.5019307136535645
    3. ' y' → logprob: -13.751930236816406
    4. '	y' → logprob: -15.376930236816406
    5. '(' → logprob: -16.376930236816406
    6. ' (' → logprob: -17.751930236816406
    7. '[y' → logprob: -17.876930236816406
    8. '_y' → logprob: -17.876930236816406
    9. '(
' → logprob: -18.001930236816406
    10. '@y' → logprob: -18.001930236816406

Token 885: '_new' (ID: 13000)
  Prédit: '_new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_new' → logprob: -0.003585102967917919
    2. '[-' → logprob: -5.753585338592529
    3. 'New' → logprob: -8.503584861755371
    4. 'new' → logprob: -9.003584861755371
    5. 's' → logprob: -10.378584861755371
    6. 'y' → logprob: -11.753584861755371
    7. '+' → logprob: -11.878584861755371
    8. '_user' → logprob: -12.253584861755371
    9. '_NEW' → logprob: -12.253584861755371
    10. 't' → logprob: -12.753584861755371

Token 886: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0025032442063093185
    2. ')' → logprob: -6.502503395080566
    3. 'v' → logprob: -7.377503395080566
    4. ')v' → logprob: -8.752503395080566
    5. '           ' → logprob: -9.252503395080566
    6. ',v' → logprob: -9.877503395080566
    7. ')
' → logprob: -10.127503395080566
    8. '   ' → logprob: -11.877503395080566
    9. '                   ' → logprob: -12.127503395080566
    10. '<|end|>' → logprob: -12.752503395080566

Token 887: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12706880271434784
    2. 'v' → logprob: -2.1270687580108643
    3. '           ' → logprob: -9.377068519592285
    4. '   ' → logprob: -10.627068519592285
    5. ' v' → logprob: -10.877068519592285
    6. '                   ' → logprob: -12.252068519592285
    7. '              ' → logprob: -12.877068519592285
    8. '                ' → logprob: -13.252068519592285
    9. '       ' → logprob: -13.627068519592285
    10. '             ' → logprob: -13.627068519592285

Token 888: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.002623097039759159
    2. '               ' → logprob: -6.002623081207275
    3. '           ' → logprob: -9.002623558044434
    4. ' v' → logprob: -11.127623558044434
    5. '   ' → logprob: -11.627623558044434
    6. ' ' → logprob: -15.502623558044434
    7. '	v' → logprob: -15.502623558044434
    8. '       ' → logprob: -16.377622604370117
    9. '              ' → logprob: -16.627622604370117
    10. '  ' → logprob: -17.627622604370117

Token 889: 'xs' (ID: 33335)
  Prédit: 'xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.0002036595979006961
    2. 'x' → logprob: -8.500204086303711
    3. 's' → logprob: -16.00020408630371
    4. 'xes' → logprob: -19.25020408630371
    5. 'xx' → logprob: -21.87520408630371
    6. 'zs' → logprob: -22.00020408630371
    7. '   ' → logprob: -22.37520408630371
    8. '```' → logprob: -22.37520408630371
    9. 'ws' → logprob: -22.62520408630371
    10. ' xs' → logprob: -23.12520408630371

Token 890: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.919942486798391e-05
    2. '.' → logprob: -9.875059127807617
    3. 'append' → logprob: -11.875059127807617
    4. '.app' → logprob: -14.625059127807617
    5. '.Append' → logprob: -15.500059127807617
    6. 'appen' → logprob: -16.625059127807617
    7. 'Append' → logprob: -17.125059127807617
    8. 'app' → logprob: -17.125059127807617
    9. 'appa' → logprob: -17.625059127807617
    10. '.ap' → logprob: -17.750059127807617

Token 891: '(v' (ID: 6932)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -1.1472419600977446e-06
    2. ' vx' → logprob: -13.875000953674316
    3. '(v' → logprob: -16.125001907348633
    4. 'vy' → logprob: -16.875001907348633
    5. 'v' → logprob: -17.625001907348633
    6. '   ' → logprob: -19.250001907348633
    7. '0' → logprob: -20.500001907348633
    8. '[v' → logprob: -20.625001907348633
    9. 'vz' → logprob: -20.625001907348633
    10. '```' → logprob: -21.375001907348633

Token 892: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.250001907348633
    3. ')' → logprob: -15.875001907348633
    4. 'xec' → logprob: -16.250001907348633
    5. '   ' → logprob: -16.625001907348633
    6. '=' → logprob: -16.750001907348633
    7. 'X' → logprob: -16.750001907348633
    8. '(x' → logprob: -17.125001907348633
    9. '                   ' → logprob: -17.500001907348633
    10. '               ' → logprob: -17.500001907348633

Token 893: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002687540603801608
    2. ')
' → logprob: -6.127687454223633
    3. ')v' → logprob: -7.752687454223633
    4. '<|end|>' → logprob: -9.877687454223633
    5. ' )' → logprob: -12.127687454223633
    6. ')y' → logprob: -12.377687454223633
    7. ')

' → logprob: -12.627687454223633
    8. '               ' → logprob: -13.127687454223633
    9. '<|end|>' → logprob: -13.752687454223633
    10. '),' → logprob: -13.877687454223633

Token 894: '               ' (ID: 506)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00896175391972065
    2. '               ' → logprob: -4.8839616775512695
    3. ' vys' → logprob: -7.1339616775512695
    4. '                   ' → logprob: -8.38396167755127
    5. 'vy' → logprob: -9.50896167755127
    6. '           ' → logprob: -9.50896167755127
    7. '                ' → logprob: -10.25896167755127
    8. 'vyk' → logprob: -10.75896167755127
    9. '                       ' → logprob: -11.13396167755127
    10. ',v' → logprob: -11.38396167755127

Token 895: ' vys' (ID: 66128)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.018177684396505356
    2. ' vys' → logprob: -4.018177509307861
    3. 'vy' → logprob: -12.26817798614502
    4. 'vý' → logprob: -12.64317798614502
    5. ' ' → logprob: -12.76817798614502
    6. '   ' → logprob: -12.89317798614502
    7. 'y' → logprob: -13.51817798614502
    8. ' ' → logprob: -13.51817798614502
    9. 'wys' → logprob: -13.89317798614502
    10. '  ' → logprob: -13.89317798614502

Token 896: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.4378848391061183e-05
    2. 'append' → logprob: -11.500014305114746
    3. '.' → logprob: -12.750014305114746
    4. '.Append' → logprob: -15.250014305114746
    5. 'Append' → logprob: -15.375014305114746
    6. '	append' → logprob: -15.875014305114746
    7. 'appen' → logprob: -16.125015258789062
    8. '.app' → logprob: -16.250015258789062
    9. '```' → logprob: -16.500015258789062
    10. '.push' → logprob: -16.500015258789062

Token 897: '(v' (ID: 6932)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.10020828247070312
    2. '(v' → logprob: -2.350208282470703
    3. ' vy' → logprob: -13.725208282470703
    4. 'v' → logprob: -14.975208282470703
    5. '(' → logprob: -16.350208282470703
    6. 'voy' → logprob: -16.850208282470703
    7. 'vyk' → logprob: -16.850208282470703
    8. 'vin' → logprob: -18.225208282470703
    9. '[v' → logprob: -18.475208282470703
    10. '   ' → logprob: -18.475208282470703

Token 898: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6331765651702881
    2. 'vy' → logprob: -0.7581765651702881
    3. ' vy' → logprob: -8.883176803588867
    4. 'yv' → logprob: -9.008176803588867
    5. 'v' → logprob: -9.883176803588867
    6. 'ay' → logprob: -10.133176803588867
    7. 'wy' → logprob: -10.383176803588867
    8. '=' → logprob: -10.383176803588867
    9. 'uy' → logprob: -10.508176803588867
    10. ')' → logprob: -10.758176803588867

Token 899: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036341617815196514
    2. '<|end|>' → logprob: -5.628633975982666
    3. '<|end|>' → logprob: -11.628634452819824
    4. '           ' → logprob: -11.753634452819824
    5. '       ' → logprob: -12.503634452819824
    6. ')
' → logprob: -12.628634452819824
    7. ')return' → logprob: -12.878634452819824
    8. '   ' → logprob: -13.753634452819824
    9. '               ' → logprob: -13.753634452819824
    10. ' )' → logprob: -14.128634452819824

Token 900: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 901: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.9519380927085876
    2. '               ' → logprob: -0.9519380927085876
    3. '           ' → logprob: -1.5769381523132324
    4. ' if' → logprob: -3.9519381523132324
    5. '       ' → logprob: -6.326938152313232
    6. '                   ' → logprob: -8.826937675476074
    7. '   ' → logprob: -9.451937675476074
    8. '	if' → logprob: -9.826937675476074
    9. '	       ' → logprob: -10.076937675476074
    10. '```' → logprob: -11.326937675476074

Token 902: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.1517960956552997e-05
    2. ' t' → logprob: -11.375011444091797
    3. '	t' → logprob: -17.250011444091797
    4. 'times' → logprob: -18.250011444091797
    5. '   ' → logprob: -18.750011444091797
    6. '`t' → logprob: -19.250011444091797
    7. 'parts' → logprob: -20.000011444091797
    8. '(t' → logprob: -20.500011444091797
    9. ')t' → logprob: -21.250011444091797
    10. 'time' → logprob: -21.250011444091797

Token 903: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2014971524477005
    2. ' ==' → logprob: -1.701497197151184
    3. '>=' → logprob: -10.076497077941895
    4. ')==' → logprob: -11.326497077941895
    5. ']==' → logprob: -11.451497077941895
    6. '==
' → logprob: -12.076497077941895
    7. 't' → logprob: -12.826497077941895
    8. '=' → logprob: -13.201497077941895
    9. '()==' → logprob: -13.451497077941895
    10. '===' → logprob: -13.451497077941895

Token 904: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.00020354038861114532
    2. ' T' → logprob: -8.500203132629395
    3. '   ' → logprob: -18.12520408630371
    4. '	T' → logprob: -19.50020408630371
    5. '=T' → logprob: -19.75020408630371
    6. ' ' → logprob: -20.75020408630371
    7. 'int' → logprob: -21.62520408630371
    8. '(T' → logprob: -22.37520408630371
    9. '  ' → logprob: -22.37520408630371
    10. '```' → logprob: -22.50020408630371

Token 905: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.031592946499586105
    2. ':
' → logprob: -3.656592845916748
    3. '           ' → logprob: -5.281592845916748
    4. 'break' → logprob: -9.781593322753906
    5. '               ' → logprob: -10.031593322753906
    6. '	break' → logprob: -11.031593322753906
    7. '<|end|>' → logprob: -11.031593322753906
    8. '		' → logprob: -11.531593322753906
    9. '                   ' → logprob: -11.656593322753906
    10. '       ' → logprob: -12.406593322753906

Token 906: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0236799418926239
    2. '               ' → logprob: -4.023679733276367
    3. '           ' → logprob: -5.273679733276367
    4. 'break' → logprob: -9.273679733276367
    5. '                       ' → logprob: -9.398679733276367
    6. '		           ' → logprob: -9.398679733276367
    7. '   ' → logprob: -10.148679733276367
    8. ' break' → logprob: -10.398679733276367
    9. '			       ' → logprob: -11.273679733276367
    10. '       ' → logprob: -11.273679733276367

Token 907: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.08177420496940613
    2. ' break' → logprob: -2.5817742347717285
    3. '           ' → logprob: -6.7067742347717285
    4. '	break' → logprob: -6.7067742347717285
    5. '               ' → logprob: -8.45677375793457
    6. '                   ' → logprob: -8.70677375793457
    7. '   ' → logprob: -10.08177375793457
    8. '                       ' → logprob: -12.08177375793457
    9. '_break' → logprob: -12.45677375793457
    10. '       ' → logprob: -12.83177375793457

Token 908: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0045607807114720345
    2. '<|end|>' → logprob: -5.629560947418213
    3. '           ' → logprob: -7.254560947418213
    4. '<|end|>' → logprob: -9.004560470581055
    5. '   ' → logprob: -10.879560470581055
    6. '
' → logprob: -11.004560470581055
    7. '        
' → logprob: -11.004560470581055
    8. '#' → logprob: -11.129560470581055
    9. '```' → logprob: -11.129560470581055
    10. ')' → logprob: -11.379560470581055

Token 909: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18297520279884338
    2. '           ' → logprob: -1.807975172996521
    3. '<|end|>' → logprob: -6.0579752922058105
    4. '   ' → logprob: -7.5579752922058105
    5. '<|end|>' → logprob: -9.432974815368652
    6. 'robots' → logprob: -9.682974815368652
    7. '```' → logprob: -9.932974815368652
    8. 'robot' → logprob: -10.682974815368652
    9. '	   ' → logprob: -10.932974815368652
    10. '        
' → logprob: -11.057974815368652

Token 910: ' robot' (ID: 20808)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10567594319581985
    2. 'robots' → logprob: -2.8556759357452393
    3. '           ' → logprob: -3.3556759357452393
    4. '   ' → logprob: -4.980676174163818
    5. 'robot' (adapté à ' robot') → logprob: -7.105676174163818
    6. ' robots' → logprob: -8.85567569732666
    7. '```' → logprob: -10.85567569732666
    8. 'rob' → logprob: -11.98067569732666
    9. 'ro' → logprob: -12.10567569732666
    10. '<|end|>' → logprob: -12.98067569732666

Token 911: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0007575734634883702
    2. ' =' → logprob: -7.875757694244385
    3. '=' → logprob: -8.125757217407227
    4. '.append' → logprob: -9.500757217407227
    5. '=s' → logprob: -12.875757217407227
    6. '={
' → logprob: -14.000757217407227
    7. '={'' → logprob: -14.125757217407227
    8. '{s' → logprob: -14.250757217407227
    9. '.' → logprob: -14.625757217407227
    10. ' s' → logprob: -15.125757217407227

Token 912: ' {'' (ID: 11881)
  Prédit: '{
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{
' → logprob: -0.3873078227043152
    2. '{'' → logprob: -1.13730788230896
    3. '{' → logprob: -8.137308120727539
    4. '{"' → logprob: -8.887308120727539
    5. '   ' → logprob: -12.262308120727539
    6. '{name' → logprob: -14.512308120727539
    7. ' {'' → logprob: -15.012308120727539
    8. '{
' → logprob: -15.387308120727539
    9. ' {
' → logprob: -15.512308120727539
    10. '{}' → logprob: -16.26230812072754

Token 913: 'nick' (ID: 39673)
  Prédit: ''n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''n' → logprob: -0.04967974126338959
    2. ''t' → logprob: -3.049679756164551
    3. 'nick' → logprob: -7.299679756164551
    4. 'times' → logprob: -8.04967975616455
    5. 'nickname' → logprob: -10.17467975616455
    6. '"' → logprob: -10.79967975616455
    7. '{'' → logprob: -11.67467975616455
    8. ''' → logprob: -11.67467975616455
    9. ''name' → logprob: -11.79967975616455
    10. '{
' → logprob: -12.42467975616455

Token 914: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -6.790129555156454e-05
    2. ''' → logprob: -10.375067710876465
    3. ':' → logprob: -10.500067710876465
    4. '":' → logprob: -12.125067710876465
    5. '':[' → logprob: -13.125067710876465
    6. '':'' → logprob: -14.125067710876465
    7. ':n' → logprob: -15.375067710876465
    8. 'name' → logprob: -15.875067710876465
    9. ' :' → logprob: -16.25006866455078
    10. ' ':' → logprob: -16.75006866455078

Token 915: 'nick' (ID: 39673)
  Prédit: 'nick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nick' → logprob: -1.0206720617134124e-05
    2. ' nick' → logprob: -11.50001049041748
    3. 'nic' → logprob: -19.125009536743164
    4. 'nik' → logprob: -20.500009536743164
    5. '   ' → logprob: -21.625009536743164
    6. '.nick' → logprob: -22.375009536743164
    7. 'Nick' → logprob: -22.625009536743164
    8. 'nickname' → logprob: -23.000009536743164
    9. 'nod' → logprob: -23.125009536743164
    10. 'n' → logprob: -23.750009536743164

Token 916: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006428572814911604
    2. ','' → logprob: -7.500642776489258
    3. '',' → logprob: -10.000642776489258
    4. ',
' → logprob: -10.625642776489258
    5. ' ,' → logprob: -11.250642776489258
    6. ',n' → logprob: -13.250642776489258
    7. '           ' → logprob: -13.750642776489258
    8. '       ' → logprob: -13.875642776489258
    9. ',"' → logprob: -14.125642776489258
    10. '   ' → logprob: -14.125642776489258

Token 917: ' '' (ID: 461)
  Prédit: ''t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''t' → logprob: -0.00045807508286088705
    2. ' '' → logprob: -7.750458240509033
    3. '   ' → logprob: -11.250457763671875
    4. '       ' → logprob: -12.250457763671875
    5. '           ' → logprob: -12.750457763671875
    6. 'times' → logprob: -12.750457763671875
    7. '               ' → logprob: -13.875457763671875
    8. ' ' → logprob: -14.625457763671875
    9. ''' → logprob: -14.875457763671875
    10. '             ' → logprob: -15.625457763671875

Token 918: 'times' (ID: 32499)
  Prédit: 'times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -3.128163257315464e-07
    2. ' times' → logprob: -15.25
    3. '   ' → logprob: -19.125
    4. ''t' → logprob: -19.125
    5. 'names' → logprob: -19.375
    6. 'xs' → logprob: -19.75
    7. 't' → logprob: -20.125
    8. ' ' → logprob: -20.375
    9. '
' → logprob: -20.875
    10. 'time' → logprob: -21.0

Token 919: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.2954105734825134
    2. ':' → logprob: -1.4204106330871582
    3. '':[' → logprob: -4.420410633087158
    4. ',' → logprob: -7.295410633087158
    5. '```' → logprob: -8.29541015625
    6. '':['' → logprob: -8.29541015625
    7. '":' → logprob: -8.54541015625
    8. ' :' → logprob: -9.04541015625
    9. ':['' → logprob: -9.42041015625
    10. '(times' → logprob: -9.42041015625

Token 920: 'times' (ID: 32499)
  Prédit: 'times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -3.5597102396423e-05
    2. ' times' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.000036239624023
    4. 'time' → logprob: -18.625036239624023
    5. '(times' → logprob: -19.000036239624023
    6. 'timestamps' → logprob: -19.375036239624023
    7. '[' → logprob: -20.875036239624023
    8. '.times' → logprob: -21.500036239624023
    9. ' ' → logprob: -21.750036239624023
    10. '       ' → logprob: -22.250036239624023

Token 921: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037442712346091866
    2. ','' → logprob: -8.125374794006348
    3. ',
' → logprob: -10.250374794006348
    4. ' ,' → logprob: -10.250374794006348
    5. '   ' → logprob: -12.125374794006348
    6. '       ' → logprob: -14.125374794006348
    7. '',' → logprob: -14.500374794006348
    8. ',"' → logprob: -15.625374794006348
    9. ' ,'' → logprob: -15.625374794006348
    10. ',
' → logprob: -15.625374794006348

Token 922: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0631457045674324
    2. ' '' → logprob: -2.813145637512207
    3. '   ' → logprob: -7.688145637512207
    4. '          ' → logprob: -8.813145637512207
    5. ' ' → logprob: -9.313145637512207
    6. ''x' → logprob: -9.563145637512207
    7. ',x' → logprob: -9.688145637512207
    8. '         ' → logprob: -9.813145637512207
    9. '       ' → logprob: -9.938145637512207
    10. '           ' → logprob: -10.188145637512207

Token 923: 'xs' (ID: 33335)
  Prédit: 'xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -2.2723104848410003e-05
    2. ' xs' → logprob: -10.750022888183594
    3. ''' → logprob: -13.750022888183594
    4. ''s' → logprob: -16.500022888183594
    5. ' ' → logprob: -16.875022888183594
    6. '(xs' → logprob: -17.000022888183594
    7. '   ' → logprob: -18.000022888183594
    8. ''x' → logprob: -18.500022888183594
    9. 'x' → logprob: -19.375022888183594
    10. '['' → logprob: -19.500022888183594

Token 924: '':' (ID: 2337)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0797618180513382
    2. ','' → logprob: -2.5797617435455322
    3. ',x' → logprob: -8.329761505126953
    4. ' ,' → logprob: -8.579761505126953
    5. ',v' → logprob: -8.954761505126953
    6. ':' → logprob: -9.204761505126953
    7. ',
' → logprob: -9.704761505126953
    8. '<|end|>' → logprob: -10.579761505126953
    9. ' ,'' → logprob: -10.704761505126953
    10. '=' → logprob: -10.704761505126953

Token 925: 'xs' (ID: 33335)
  Prédit: 'xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -2.696889623621246e-06
    2. ' xs' → logprob: -12.87500286102295
    3. 'x' → logprob: -16.875001907348633
    4. '(xs' → logprob: -17.750001907348633
    5. '[' → logprob: -17.875001907348633
    6. '   ' → logprob: -19.500001907348633
    7. '[x' → logprob: -19.625001907348633
    8. '```' → logprob: -19.750001907348633
    9. ' ' → logprob: -19.875001907348633
    10. '
' → logprob: -20.875001907348633

Token 926: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005699523026123643
    2. ','' → logprob: -7.750569820404053
    3. ' ,' → logprob: -9.250570297241211
    4. '   ' → logprob: -10.875570297241211
    5. ',
' → logprob: -11.250570297241211
    6. '',' → logprob: -11.750570297241211
    7. ',v' → logprob: -13.000570297241211
    8. ' ,'' → logprob: -15.375570297241211
    9. '       ' → logprob: -16.12557029724121
    10. ',y' → logprob: -16.12557029724121

Token 927: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0008808538550511003
    2. ' '' → logprob: -7.125880718231201
    3. '
' → logprob: -11.25088119506836
    4. ''es' → logprob: -11.50088119506836
    5. '   ' → logprob: -11.75088119506836
    6. 'ys' → logprob: -12.00088119506836
    7. '"' → logprob: -12.25088119506836
    8. '`' → logprob: -12.25088119506836
    9. ''us' → logprob: -12.50088119506836
    10. '           ' → logprob: -12.75088119506836

Token 928: 'ys' (ID: 1371)
  Prédit: 'ys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -1.7432603272027336e-06
    2. ' ys' → logprob: -13.375001907348633
    3. ''' → logprob: -16.500001907348633
    4. '
' → logprob: -19.625001907348633
    5. ''s' → logprob: -19.750001907348633
    6. '```' → logprob: -19.875001907348633
    7. '   ' → logprob: -20.000001907348633
    8. 'yes' → logprob: -20.750001907348633
    9. 'hs' → logprob: -20.875001907348633
    10. ' ' → logprob: -20.875001907348633

Token 929: '':' (ID: 2337)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8320168852806091
    2. ','' → logprob: -1.082016944885254
    3. '':' → logprob: -2.207016944885254
    4. ':' → logprob: -3.082016944885254
    5. ''' → logprob: -3.832016944885254
    6. '',' → logprob: -4.207016944885254
    7. ':'' → logprob: -5.332016944885254
    8. ''s' → logprob: -5.582016944885254
    9. 'ys' → logprob: -5.582016944885254
    10. '[' → logprob: -5.582016944885254

Token 930: 'ys' (ID: 1371)
  Prédit: 'ys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -1.9361264946837764e-07
    2. ' ys' → logprob: -15.75
    3. 'yes' → logprob: -18.125
    4. 'tys' → logprob: -19.375
    5. '[' → logprob: -20.125
    6. 'yses' → logprob: -20.5
    7. '```' → logprob: -21.0
    8. '
' → logprob: -21.375
    9. 'rys' → logprob: -21.875
    10. 'xs' → logprob: -22.0

Token 931: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044175516813993454
    2. '',' → logprob: -8.625441551208496
    3. ','' → logprob: -8.750441551208496
    4. ' ,' → logprob: -10.125441551208496
    5. ',v' → logprob: -10.125441551208496
    6. '   ' → logprob: -11.375441551208496
    7. ',
' → logprob: -11.500441551208496
    8. '           ' → logprob: -14.375441551208496
    9. '       ' → logprob: -14.500441551208496
    10. ''' → logprob: -15.750441551208496

Token 932: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0010842557530850172
    2. ' '' → logprob: -7.001084327697754
    3. '   ' → logprob: -9.001084327697754
    4. '       ' → logprob: -10.751084327697754
    5. 'v' → logprob: -11.251084327697754
    6. '           ' → logprob: -12.501084327697754
    7. ' v' → logprob: -13.126084327697754
    8. ' ' → logprob: -13.126084327697754
    9. '  ' → logprob: -14.001084327697754
    10. '    ' → logprob: -14.001084327697754

Token 933: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.9361264946837764e-07
    2. ' v' → logprob: -15.875
    3. ''' → logprob: -20.5
    4. '	v' → logprob: -22.625
    5. '   ' → logprob: -22.625
    6. 'vx' → logprob: -23.0
    7. ' ' → logprob: -23.75
    8. 'x' → logprob: -24.375
    9. '```' → logprob: -25.0
    10. 'w' → logprob: -25.375

Token 934: 'xs' (ID: 33335)
  Prédit: 'xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -3.0590548703912646e-05
    2. 'x' → logprob: -10.625030517578125
    3. 's' → logprob: -12.125030517578125
    4. 'xes' → logprob: -14.125030517578125
    5. 'ecs' → logprob: -17.625030517578125
    6. '```' → logprob: -18.000030517578125
    7. '[' → logprob: -18.625030517578125
    8. 'ex' → logprob: -18.875030517578125
    9. 'cs' → logprob: -19.125030517578125
    10. ' xs' → logprob: -19.250030517578125

Token 935: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.018711816519498825
    2. '':[' → logprob: -4.393712043762207
    3. ':v' → logprob: -5.143712043762207
    4. ',v' → logprob: -9.268712043762207
    5. '':['' → logprob: -9.518712043762207
    6. '=v' → logprob: -9.768712043762207
    7. ':' → logprob: -10.018712043762207
    8. '[v' → logprob: -10.643712043762207
    9. ''' → logprob: -11.393712043762207
    10. '```' → logprob: -11.518712043762207

Token 936: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: 0.0
    2. ' v' → logprob: -17.0
    3. ' vys' → logprob: -18.125
    4. '[v' → logprob: -18.75
    5. 'vs' → logprob: -19.0
    6. ',v' → logprob: -19.875
    7. '	v' → logprob: -20.25
    8. ' ' → logprob: -21.0
    9. '```' → logprob: -21.125
    10. '=v' → logprob: -21.25

Token 937: 'xs' (ID: 33335)
  Prédit: 'xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.15409991145133972
    2. 's' → logprob: -2.154099941253662
    3. 'x' → logprob: -3.654099941253662
    4. '[v' → logprob: -7.029099941253662
    5. '[x' → logprob: -11.154099464416504
    6. '[s' → logprob: -11.904099464416504
    7. '[' → logprob: -12.029099464416504
    8. 'xes' → logprob: -13.029099464416504
    9. 'v' → logprob: -13.779099464416504
    10. 'sx' → logprob: -14.279099464416504

Token 938: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006388116744346917
    2. ','' → logprob: -7.625638961791992
    3. ',v' → logprob: -8.875638961791992
    4. ',
' → logprob: -12.125638961791992
    5. ' ,' → logprob: -12.375638961791992
    6. '',' → logprob: -14.000638961791992
    7. '   ' → logprob: -15.625638961791992
    8. ' ,'' → logprob: -16.375638961791992
    9. ',y' → logprob: -16.500638961791992
    10. ',

' → logprob: -16.625638961791992

Token 939: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0011978477705270052
    2. ' '' → logprob: -6.751197814941406
    3. 'v' → logprob: -10.751197814941406
    4. ''y' → logprob: -12.376197814941406
    5. '   ' → logprob: -14.751197814941406
    6. ''ve' → logprob: -14.751197814941406
    7. '`' → logprob: -15.376197814941406
    8. '"' → logprob: -15.876197814941406
    9. ' ' → logprob: -16.126197814941406
    10. '       ' → logprob: -16.251197814941406

Token 940: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0002387018030276522
    2. ' vys' → logprob: -8.500238418579102
    3. ''' → logprob: -11.375238418579102
    4. '
' → logprob: -11.875238418579102
    5. ' ' → logprob: -12.125238418579102
    6. '`' → logprob: -13.500238418579102
    7. '''' → logprob: -13.750238418579102
    8. '   ' → logprob: -13.750238418579102
    9. '``' → logprob: -13.750238418579102
    10. 'wys' → logprob: -14.125238418579102

Token 941: 'ys' (ID: 1371)
  Prédit: 'ys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.002048197668045759
    2. 's' → logprob: -6.377048015594482
    3. 'sys' → logprob: -8.00204849243164
    4. 'is' → logprob: -12.75204849243164
    5. 'ýs' → logprob: -13.12704849243164
    6. '[' → logprob: -13.87704849243164
    7. '``' → logprob: -14.62704849243164
    8. 'yes' → logprob: -15.00204849243164
    9. '```' → logprob: -15.00204849243164
    10. ' ys' → logprob: -15.12704849243164

Token 942: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.06552530825138092
    2. ':v' → logprob: -2.8155252933502197
    3. 'v' → logprob: -6.440525531768799
    4. '':[' → logprob: -7.190525531768799
    5. '[v' → logprob: -7.565525531768799
    6. '':['' → logprob: -8.69052505493164
    7. '=v' → logprob: -9.19052505493164
    8. ',v' → logprob: -9.44052505493164
    9. 's' → logprob: -9.44052505493164
    10. '":' → logprob: -9.81552505493164

Token 943: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.869639476761222e-05
    2. ' vys' → logprob: -10.500039100646973
    3. 'vs' → logprob: -12.500039100646973
    4. 'ys' → logprob: -13.000039100646973
    5. 'wys' → logprob: -14.250039100646973
    6. '
' → logprob: -14.375039100646973
    7. '``' → logprob: -15.125039100646973
    8. '`' → logprob: -15.250039100646973
    9. 'bys' → logprob: -15.250039100646973
    10. 'vus' → logprob: -15.375039100646973

Token 944: 'ys' (ID: 1371)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.38703635334968567
    2. 'ys' → logprob: -1.1370363235473633
    3. '[s' → logprob: -9.387036323547363
    4. '[' → logprob: -10.762036323547363
    5. '[v' → logprob: -11.512036323547363
    6. 'ýs' → logprob: -11.637036323547363
    7. ')s' → logprob: -11.762036323547363
    8. 'sys' → logprob: -12.137036323547363
    9. '['' → logprob: -12.262036323547363
    10. 'xs' → logprob: -12.512036323547363

Token 945: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -2.856408536899835e-05
    2. '   ' → logprob: -10.875028610229492
    3. '}
' → logprob: -11.875028610229492
    4. '       ' → logprob: -13.500028610229492
    5. ' }' → logprob: -14.000028610229492
    6. '           ' → logprob: -14.875028610229492
    7. ''}' → logprob: -16.375028610229492
    8. ',' → logprob: -17.500028610229492
    9. '               ' → logprob: -17.750028610229492
    10. '`}' → logprob: -18.125028610229492

Token 946: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003452368837315589
    2. '           ' → logprob: -9.000345230102539
    3. '```' → logprob: -9.125345230102539
    4. '   ' → logprob: -9.750345230102539
    5. 'robots' → logprob: -10.000345230102539
    6. '<|end|>' → logprob: -12.375345230102539
    7. ' robots' → logprob: -13.750345230102539
    8. '<|end|>' → logprob: -14.250345230102539
    9. '     ' → logprob: -14.375345230102539
    10. '        
' → logprob: -14.750345230102539

Token 947: ' robots' (ID: 47605)
  Prédit: 'robots'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' (adapté à ' robots') → logprob: -0.009390056133270264
    2. '       ' → logprob: -4.759389877319336
    3. ' robots' → logprob: -7.509389877319336
    4. '           ' → logprob: -8.884389877319336
    5. '```' → logprob: -10.009389877319336
    6. '   ' → logprob: -10.259389877319336
    7. 'robot' → logprob: -12.634389877319336
    8. '	' → logprob: -13.509389877319336
    9. 'rob' → logprob: -13.884389877319336
    10. 'routers' → logprob: -14.134389877319336

Token 948: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0006996880983933806
    2. '.' → logprob: -7.375699520111084
    3. '.app' → logprob: -9.625699996948242
    4. '.extend' → logprob: -13.000699996948242
    5. 'append' → logprob: -13.000699996948242
    6. '.Append' → logprob: -13.875699996948242
    7. '.ap' → logprob: -14.625699996948242
    8. ').' → logprob: -15.375699996948242
    9. '.add' → logprob: -15.500699996948242
    10. '.setdefault' → logprob: -15.750699996948242

Token 949: '(robot' (ID: 166887)
  Prédit: '(robot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(robot' → logprob: -4.008129963040119e-06
    2. 'robot' → logprob: -12.500003814697266
    3. '(' → logprob: -15.375003814697266
    4. '(ro' → logprob: -18.125003814697266
    5. '((' → logprob: -19.500003814697266
    6. '(vehicle' → logprob: -20.500003814697266
    7. ' robot' → logprob: -21.250003814697266
    8. '(r' → logprob: -21.375003814697266
    9. '(room' → logprob: -21.500003814697266
    10. '.robot' → logprob: -21.500003814697266

Token 950: ')

' (ID: 1029)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5850216746330261
    2. '<|end|>' → logprob: -1.460021734237671
    3. '       ' → logprob: -1.710021734237671
    4. '        
' → logprob: -4.335021495819092
    5. '<|end|>' → logprob: -4.585021495819092
    6. '		
' → logprob: -6.085021495819092
    7. ')' → logprob: -6.585021495819092
    8. '    
' → logprob: -6.710021495819092
    9. '   ' → logprob: -8.08502197265625
    10. '```' → logprob: -8.46002197265625

Token 951: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8140146136283875
    2. '   ' → logprob: -0.9390146136283875
    3. '       ' → logprob: -1.8140146732330322
    4. '
' → logprob: -6.439014434814453
    5. 't' → logprob: -7.189014434814453
    6. 'for' → logprob: -8.314014434814453
    7. '``' → logprob: -9.064014434814453
    8. 'time' → logprob: -9.439014434814453
    9. '    
' → logprob: -10.439014434814453
    10. 's' → logprob: -11.064014434814453

Token 952: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3268712759017944
    2. 'best' → logprob: -1.3268712759017944
    3. 'max' → logprob: -1.8268712759017944
    4. 'dp' → logprob: -2.076871395111084
    5. 'times' → logprob: -3.076871395111084
    6. 'visited' → logprob: -3.576871395111084
    7. 'events' → logprob: -4.451871395111084
    8. 'result' → logprob: -4.701871395111084
    9. 'low' → logprob: -4.951871395111084
    10. '   ' → logprob: -5.076871395111084

Token 953: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0171793699264526
    2. 'best' → logprob: -1.1421793699264526
    3. 'max' → logprob: -2.392179489135742
    4. 'times' → logprob: -3.642179489135742
    5. 'dp' → logprob: -3.642179489135742
    6. '#' → logprob: -3.767179489135742
    7. 'events' → logprob: -3.892179489135742
    8. 'answer' → logprob: -4.017179489135742
    9. 'low' → logprob: -4.517179489135742
    10. 'groups' → logprob: -4.517179489135742

Token 954: ' want' (ID: 1682)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19014739990234375
    2. 'for' → logprob: -2.5651473999023438
    3. '=' → logprob: -3.4401473999023438
    4. '   ' → logprob: -3.5651473999023438
    5. ' for' → logprob: -4.315147399902344
    6. 'def' → logprob: -5.315147399902344
    7. ' =' → logprob: -5.440147399902344
    8. '
' → logprob: -6.565147399902344
    9. 'e' → logprob: -6.690147399902344
    10. '#' → logprob: -6.690147399902344

Token 955: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05444694682955742
    2. 'to' → logprob: -3.9294469356536865
    3. ' to' → logprob: -4.054447174072266
    4. '#' → logprob: -5.054447174072266
    5. 'for' → logprob: -5.804447174072266
    6. '   ' → logprob: -6.429447174072266
    7. 'max' → logprob: -6.929447174072266
    8. '
' → logprob: -6.929447174072266
    9. 'positions' → logprob: -7.054447174072266
    10. 'all' → logprob: -7.679447174072266

Token 956: ' simulate' (ID: 66687)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.7113614082336426
    2. 'for' → logprob: -1.8363614082336426
    3. 'max' → logprob: -2.0863614082336426
    4. 'check' → logprob: -2.7113614082336426
    5. 'simulate' → logprob: -2.8363614082336426
    6. 'count' → logprob: -3.8363614082336426
    7. 'min' → logprob: -4.086361408233643
    8. 'found' → logprob: -4.461361408233643
    9. 'print' → logprob: -4.461361408233643
    10. '#' → logprob: -4.711361408233643

Token 957: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2594259977340698
    2. 'dp' → logprob: -3.3844261169433594
    3. 'max' → logprob: -3.5094261169433594
    4. 'times' → logprob: -3.7594261169433594
    5. 'time' → logprob: -4.134426116943359
    6. 'events' → logprob: -4.259426116943359
    7. 'best' → logprob: -4.384426116943359
    8. ' for' → logprob: -4.384426116943359
    9. 'low' → logprob: -4.634426116943359
    10. 't' → logprob: -4.759426116943359

Token 958: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16702915728092194
    2. 't' → logprob: -2.0420291423797607
    3. 'time' → logprob: -3.7920291423797607
    4. ' t' → logprob: -6.79202938079834
    5. ' time' → logprob: -8.79202938079834
    6. ' ' → logprob: -9.29202938079834
    7. '1' → logprob: -9.41702938079834
    8. '   ' → logprob: -10.16702938079834
    9. 'for' → logprob: -12.04202938079834
    10. 'start' → logprob: -12.16702938079834

Token 959: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.027334818616509438
    2. 't' → logprob: -3.6523349285125732
    3. 'time' → logprob: -6.902334690093994
    4. ' t' → logprob: -11.152335166931152
    5. '```' → logprob: -12.652335166931152
    6. '1' → logprob: -12.777335166931152
    7. ' ' → logprob: -12.777335166931152
    8. ' time' → logprob: -13.777335166931152
    9. '   ' → logprob: -13.902335166931152
    10. 'for' → logprob: -14.152335166931152

Token 960: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.11413118988275528
    2. ' to' → logprob: -2.239131212234497
    3. '       ' → logprob: -6.739130973815918
    4. 'for' → logprob: -9.739130973815918
    5. '   ' → logprob: -10.989130973815918
    6. '```' → logprob: -11.114130973815918
    7. 't' → logprob: -11.614130973815918
    8. ' through' → logprob: -11.989130973815918
    9. ' for' → logprob: -12.989130973815918
    10. ',' → logprob: -13.114130973815918

Token 961: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.00011534435179783031
    2. '0' → logprob: -9.375115394592285
    3. ' T' → logprob: -10.625115394592285
    4. '1' → logprob: -12.625115394592285
    5. 't' → logprob: -13.750115394592285
    6. '   ' → logprob: -14.875115394592285
    7. '
' → logprob: -15.125115394592285
    8. ' ' → logprob: -15.250115394592285
    9. '10' → logprob: -15.375115394592285
    10. '100' → logprob: -15.750115394592285

Token 962: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08895538747310638
    2. 'for' → logprob: -2.5889554023742676
    3. ' for' → logprob: -4.963955402374268
    4. '
' → logprob: -6.838955402374268
    5. 't' → logprob: -7.713955402374268
    6. '   ' → logprob: -8.08895492553711
    7. 'time' → logprob: -8.08895492553711
    8. 'times' → logprob: -8.58895492553711
    9. '```' → logprob: -8.96395492553711
    10. '        
' → logprob: -9.08895492553711

Token 963: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1472918838262558
    2. '
' → logprob: -2.647291898727417
    3. '```' → logprob: -3.522291898727417
    4. ' for' → logprob: -3.647291898727417
    5. 'for' → logprob: -4.897291660308838
    6. '        
' → logprob: -6.022291660308838
    7. '``' → logprob: -8.647292137145996
    8. '   ' → logprob: -9.522292137145996
    9. ',' → logprob: -9.647292137145996
    10. '\' → logprob: -10.147292137145996

Token 964: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8358043432235718
    2. 'dp' → logprob: -2.3358044624328613
    3. 'times' → logprob: -2.4608044624328613
    4. '       ' → logprob: -2.4608044624328613
    5. 'best' → logprob: -2.8358044624328613
    6. 'max' → logprob: -2.9608044624328613
    7. 'events' → logprob: -3.4608044624328613
    8. 'visited' → logprob: -3.9608044624328613
    9. 'interval' → logprob: -3.9608044624328613
    10. 'groups' → logprob: -4.460804462432861

Token 965: ' data' (ID: 1238)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19793601334095
    2. 'events' → logprob: -3.6979360580444336
    3. 'low' → logprob: -3.8229360580444336
    4. 'dp' → logprob: -3.9479360580444336
    5. 'left' → logprob: -4.072936058044434
    6. 'best' → logprob: -4.447936058044434
    7. 'times' → logprob: -4.572936058044434
    8. 'max' → logprob: -4.822936058044434
    9. 'interval' → logprob: -4.822936058044434
    10. 'prev' → logprob: -5.197936058044434

Token 966: ' spread' (ID: 11402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004703999496996403
    2. 'time' → logprob: -7.004703998565674
    3. 't' → logprob: -7.129703998565674
    4. 'times' → logprob: -7.379703998565674
    5. '
' → logprob: -7.504703998565674
    6. '        
' → logprob: -7.754703998565674
    7. 'for' → logprob: -8.254704475402832
    8. 'events' → logprob: -8.754704475402832
    9. '#' → logprob: -8.879704475402832
    10. '   ' → logprob: -9.004704475402832

Token 967: ' initially' (ID: 25998)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8487474322319031
    2. '=' → logprob: -1.4737474918365479
    3. '       ' → logprob: -2.348747491836548
    4. 'times' → logprob: -2.473747491836548
    5. 'time' → logprob: -3.348747491836548
    6. '   ' → logprob: -3.973747491836548
    7. 'at' → logprob: -4.098747253417969
    8. '_time' → logprob: -4.223747253417969
    9. 'points' → logprob: -4.473747253417969
    10. ' at' → logprob: -4.848747253417969

Token 968: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2914994955062866
    2. 'dp' → logprob: -2.916499614715576
    3. 'max' → logprob: -3.416499614715576
    4. 'dist' → logprob: -3.916499614715576
    5. 'visited' → logprob: -3.916499614715576
    6. 'groups' → logprob: -4.291499614715576
    7. 'spread' → logprob: -4.416499614715576
    8. 'positions' → logprob: -4.541499614715576
    9. '
' → logprob: -4.916499614715576
    10. 'events' → logprob: -4.916499614715576

Token 969: ' first' (ID: 1577)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05301477387547493
    2. 'robots' → logprob: -3.5530147552490234
    3. '[' → logprob: -4.803014755249023
    4. 'robot' → logprob: -5.928014755249023
    5. 'time' → logprob: -6.053014755249023
    6. 'the' → logprob: -6.803014755249023
    7. 'positions' → logprob: -7.053014755249023
    8. '{' → logprob: -7.178014755249023
    9. ' ' → logprob: -7.428014755249023
    10. 'all' → logprob: -7.803014755249023

Token 970: ' robot' (ID: 20808)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.0531480312347412
    2. 'positions' → logprob: -1.3031480312347412
    3. 'time' → logprob: -2.553148031234741
    4. 'robot' → logprob: -2.553148031234741
    5. 'pos' → logprob: -2.803148031234741
    6. 'times' → logprob: -3.428148031234741
    7. ' line' → logprob: -3.678148031234741
    8. 'lines' → logprob: -4.05314826965332
    9. 'robots' → logprob: -4.05314826965332
    10. '0' → logprob: -4.80314826965332

Token 971: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022285401821136475
    2. '   ' → logprob: -5.772285461425781
    3. 'for' → logprob: -5.897285461425781
    4. 'dp' → logprob: -6.022285461425781
    5. 'max' → logprob: -6.147285461425781
    6. 'positions' → logprob: -6.397285461425781
    7. 'visited' → logprob: -6.522285461425781
    8. '
' → logprob: -6.772285461425781
    9. 'times' → logprob: -7.522285461425781
    10. '        
' → logprob: -7.647285461425781

Token 972: ' time' (ID: 1058)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8657787442207336
    2. 'times' → logprob: -1.3657786846160889
    3. 'xs' → logprob: -2.240778684616089
    4. '(' → logprob: -2.740778684616089
    5. 'positions' → logprob: -2.990778684616089
    6. 'robots' → logprob: -3.115778684616089
    7. 'time' → logprob: -3.490778684616089
    8. 'pos' → logprob: -4.365778923034668
    9. '(xs' → logprob: -5.490778923034668
    10. 'position' → logprob: -6.365778923034668

Token 973: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002310953801497817
    2. '=' → logprob: -6.752310752868652
    3. ' ' → logprob: -7.752310752868652
    4. '```' → logprob: -8.252310752868652
    5. ' =' → logprob: -9.502310752868652
    6. '[' → logprob: -9.502310752868652
    7. 's' → logprob: -9.502310752868652
    8. '   ' → logprob: -10.252310752868652
    9. 'def' → logprob: -10.377310752868652
    10. '#' → logprob: -11.127310752868652

Token 974: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.925185440806672e-05
    2. '=' → logprob: -10.000099182128906
    3. ' ' → logprob: -10.125099182128906
    4. '(' → logprob: -12.250099182128906
    5. '```' → logprob: -13.125099182128906
    6. '
' → logprob: -13.750099182128906
    7. ' =' → logprob: -14.250099182128906
    8. '   ' → logprob: -14.250099182128906
    9. '[' → logprob: -14.375099182128906
    10. 's' → logprob: -14.625099182128906

Token 975: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3999086618423462
    2. 'dp' → logprob: -2.6499085426330566
    3. 'data' → logprob: -2.8999085426330566
    4. 'visited' → logprob: -3.7749085426330566
    5. 'connected' → logprob: -4.024908542633057
    6. 'groups' → logprob: -4.024908542633057
    7. 'for' → logprob: -4.149908542633057
    8. ' data' → logprob: -4.274908542633057
    9. 'received' → logprob: -4.774908542633057
    10. ' for' → logprob: -4.899908542633057

Token 976: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07692813128232956
    2. '
' → logprob: -3.70192813873291
    3. 'visited' → logprob: -3.95192813873291
    4. 'data' → logprob: -5.20192813873291
    5. 'received' → logprob: -5.57692813873291
    6. '```' → logprob: -5.70192813873291
    7. 'dp' → logprob: -5.95192813873291
    8. 'for' → logprob: -6.07692813873291
    9. 'source' → logprob: -6.32692813873291
    10. 'start' → logprob: -6.95192813873291

Token 977: ' #' (ID: 1069)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.811305046081543
    2. 'visited' → logprob: -1.811305046081543
    3. 'dp' → logprob: -1.936305046081543
    4. 'dist' → logprob: -2.436305046081543
    5. 'infect' → logprob: -2.686305046081543
    6. 'source' → logprob: -3.186305046081543
    7. 'inf' → logprob: -3.186305046081543
    8. 'initial' → logprob: -3.436305046081543
    9. 'groups' → logprob: -3.561305046081543
    10. 'in' → logprob: -3.686305046081543

Token 978: ' since' (ID: 3630)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.1213891506195068
    2. 'dp' → logprob: -1.3713891506195068
    3. 'initial' → logprob: -3.121389150619507
    4. 'visited' → logprob: -3.246389150619507
    5. 'dist' → logprob: -3.246389150619507
    6. 'infect' → logprob: -3.246389150619507
    7. 'in' → logprob: -3.496389150619507
    8. 'for' → logprob: -3.871389150619507
    9. '#' → logprob: -3.996389150619507
    10. 'source' → logprob: -4.121389389038086

Token 979: ' data' (ID: 1238)
  Prédit: 'robots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'robots' → logprob: -0.5319430828094482
    2. 'N' → logprob: -2.0319430828094482
    3. '0' → logprob: -2.1569430828094482
    4. 'T' → logprob: -2.9069430828094482
    5. ' robots' → logprob: -3.7819430828094482
    6. 'len' → logprob: -4.656943321228027
    7. 'True' → logprob: -4.781943321228027
    8. ' N' → logprob: -4.781943321228027
    9. '   ' → logprob: -4.906943321228027
    10. ' T' → logprob: -5.406943321228027

Token 980: ' transfer' (ID: 8890)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.4811937808990479
    2. 'starts' → logprob: -1.4811937808990479
    3. 'spread' → logprob: -2.481193780899048
    4. ' is' → logprob: -2.481193780899048
    5. 'can' → logprob: -2.606193780899048
    6. 'initial' → logprob: -2.856193780899048
    7. ' starts' → logprob: -3.231193780899048
    8. '=' → logprob: -3.356193780899048
    9. '_sp' → logprob: -3.731193780899048
    10. 'sp' → logprob: -3.731193780899048

Token 981: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1566427946090698
    2. '   ' → logprob: -1.4066427946090698
    3. 'starts' → logprob: -2.4066429138183594
    4. '=' → logprob: -2.9066429138183594
    5. ' at' → logprob: -3.2816429138183594
    6. 'from' → logprob: -3.2816429138183594
    7. ' =' → logprob: -3.4066429138183594
    8. ' occurs' → logprob: -3.7816429138183594
    9. ' is' → logprob: -3.9066429138183594
    10. ' happens' → logprob: -3.9066429138183594

Token 982: ' instantaneous' (ID: 168555)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.9273773431777954
    2. 'instant' → logprob: -1.0523773431777954
    3. 'continuous' → logprob: -1.8023773431777954
    4. ' instantaneous' → logprob: -3.802377223968506
    5. 'allowed' → logprob: -4.177377223968506
    6. 'im' → logprob: -4.177377223968506
    7. 'def' → logprob: -4.802377223968506
    8. 'True' → logprob: -5.177377223968506
    9. '0' → logprob: -5.552377223968506
    10. 'cont' → logprob: -6.177377223968506

Token 983: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009119461290538311
    2. 'data' → logprob: -6.134119510650635
    3. 'dp' → logprob: -6.134119510650635
    4. '        
' → logprob: -6.634119510650635
    5. 'for' → logprob: -7.009119510650635
    6. 'def' → logprob: -7.884119510650635
    7. '
' → logprob: -8.009119033813477
    8. 'visited' → logprob: -8.384119033813477
    9. '```' → logprob: -8.634119033813477
    10. 'from' → logprob: -8.634119033813477

Token 984: ' data' (ID: 1238)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9287787675857544
    2. 'visited' → logprob: -2.053778648376465
    3. 'dp' → logprob: -2.553778648376465
    4. 'dist' → logprob: -2.553778648376465
    5. 'times' → logprob: -2.803778648376465
    6. 'for' → logprob: -3.053778648376465
    7. 'data' → logprob: -3.178778648376465
    8. '       ' → logprob: -3.178778648376465
    9. 'queue' → logprob: -3.553778648376465
    10. 'max' → logprob: -4.303778648376465

Token 985: ' propagate' (ID: 125190)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.6273290514945984
    2. '_positions' → logprob: -2.377329111099243
    3. '_h' → logprob: -2.502329111099243
    4. '_at' → logprob: -2.502329111099243
    5. '_nodes' → logprob: -3.127329111099243
    6. 'pos' → logprob: -3.627329111099243
    7. 'poss' → logprob: -4.252328872680664
    8. '=' → logprob: -4.252328872680664
    9. '_known' → logprob: -4.377328872680664
    10. '_has' → logprob: -4.627328872680664

Token 986: ' in' (ID: 306)
  Prédit: 'through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'through' → logprob: -0.7861929535865784
    2. 'at' → logprob: -2.0361928939819336
    3. 'from' → logprob: -2.7861928939819336
    4. '   ' → logprob: -2.9111928939819336
    5. '=' → logprob: -3.0361928939819336
    6. ' at' → logprob: -3.1611928939819336
    7. 'inst' → logprob: -3.4111928939819336
    8. ' through' → logprob: -3.6611928939819336
    9. 'instant' → logprob: -3.7861928939819336
    10. 'in' → logprob: -4.036192893981934

Token 987: ' clusters' (ID: 51310)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.43256300687789917
    2. 'all' → logprob: -2.182563066482544
    3. 'a' → logprob: -3.057563066482544
    4. '[' → logprob: -3.432563066482544
    5. 'each' → logprob: -3.432563066482544
    6. 'times' → logprob: -3.557563066482544
    7. 'any' → logprob: -4.057562828063965
    8. 'layers' → logprob: -4.057562828063965
    9. 'the' → logprob: -4.307562828063965
    10. '0' → logprob: -5.182562828063965

Token 988: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010002202354371548
    2. ' at' → logprob: -4.760002136230469
    3. ',' → logprob: -7.885002136230469
    4. ' data' → logprob: -8.135002136230469
    5. 'data' → logprob: -8.385002136230469
    6. '
' → logprob: -8.635002136230469
    7. '        
' → logprob: -9.885002136230469
    8. '   ' → logprob: -9.885002136230469
    9. 'at' → logprob: -10.010002136230469
    10. ' for' → logprob: -10.260002136230469

Token 989: ' connected' (ID: 12079)
  Prédit: 'robots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' → logprob: -0.23278753459453583
    2. 'connected' → logprob: -1.6077874898910522
    3. 'reachable' → logprob: -5.482787609100342
    4. ' robots' → logprob: -6.732787609100342
    5. ' connected' → logprob: -7.357787609100342
    6. 'time' → logprob: -8.107787132263184
    7. 'robot' → logprob: -8.357787132263184
    8. 'size' → logprob: -8.732787132263184
    9. 'connect' → logprob: -8.982787132263184
    10. 'connections' → logprob: -9.357787132263184

Token 990: ' robots' (ID: 47605)
  Prédit: 'robots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' → logprob: -0.01782328076660633
    2. 'components' → logprob: -4.142823219299316
    3. ' robots' → logprob: -6.517823219299316
    4. ' components' → logprob: -8.392823219299316
    5. '#' → logprob: -10.142823219299316
    6. '
' → logprob: -11.392823219299316
    7. '```' → logprob: -12.017823219299316
    8. 'robot' → logprob: -12.142823219299316
    9. 'groups' → logprob: -12.142823219299316
    10. 'component' → logprob: -12.892823219299316

Token 991: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010189613327383995
    2. '
' → logprob: -4.760189533233643
    3. '        
' → logprob: -7.135189533233643
    4. 'data' → logprob: -8.1351900100708
    5. ' data' → logprob: -8.2601900100708
    6. ',' → logprob: -9.7601900100708
    7. ' at' → logprob: -10.0101900100708
    8. '   ' → logprob: -11.3851900100708
    9. ' known' → logprob: -11.8851900100708
    10. '<|end|>' → logprob: -11.8851900100708

Token 992: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.023891806602478027
    2. 'time' → logprob: -4.273891925811768
    3. 'all' → logprob: -5.148891925811768
    4. 'every' → logprob: -6.148891925811768
    5. 'any' → logprob: -7.023891925811768
    6. ' each' → logprob: -8.27389144897461
    7. 't' → logprob: -8.39889144897461
    8. 'the' → logprob: -9.02389144897461
    9. 'times' → logprob: -9.14889144897461
    10. 'a' → logprob: -10.39889144897461

Token 993: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.21427015960216522
    2. 't' → logprob: -1.7142701148986816
    3. 'for' → logprob: -4.714270114898682
    4. ' time' → logprob: -5.964270114898682
    5. 'second' → logprob: -7.339270114898682
    6. '```' → logprob: -8.58927059173584
    7. ' t' → logprob: -8.96427059173584
    8. '
' → logprob: -9.21427059173584
    9. ' for' → logprob: -10.08927059173584
    10. 'int' → logprob: -10.46427059173584

Token 994: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12318912148475647
    2. '
' → logprob: -2.3731892108917236
    3. 'data' → logprob: -4.4981889724731445
    4. '        
' → logprob: -5.3731889724731445
    5. ' data' → logprob: -5.7481889724731445
    6. ' for' → logprob: -6.9981889724731445
    7. 'for' → logprob: -7.3731889724731445
    8. 'known' → logprob: -7.8731889724731445
    9. 'current' → logprob: -8.248188972473145
    10. '   ' → logprob: -8.498188972473145

Token 995: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040972303599119186
    2. '
' → logprob: -3.2909722328186035
    3. '        
' → logprob: -6.5409722328186035
    4. '   ' → logprob: -7.0409722328186035
    5. 'data' → logprob: -7.9159722328186035
    6. '    
' → logprob: -9.415972709655762
    7. ' data' → logprob: -9.790972709655762
    8. 'current' → logprob: -10.915972709655762
    9. '```' → logprob: -11.165972709655762
    10. '
' → logprob: -11.790972709655762

Token 996: ' #' (ID: 1069)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.8207481503486633
    2. 'have' → logprob: -0.9457481503486633
    3. 'has' → logprob: -1.8207480907440186
    4. 'known' → logprob: -5.695748329162598
    5. 'poss' → logprob: -6.445748329162598
    6. '   ' → logprob: -6.820748329162598
    7. 'in' → logprob: -7.070748329162598
    8. '#' (adapté à ' #') → logprob: -7.820748329162598
    9. 'infect' → logprob: -7.820748329162598
    10. 'received' → logprob: -8.070748329162598

Token 997: ' but' (ID: 889)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.8357827067375183
    2. 'data' → logprob: -1.210782766342163
    3. '       ' → logprob: -1.710782766342163
    4. 'has' → logprob: -2.585782766342163
    5. '#' → logprob: -5.710782527923584
    6. '   ' → logprob: -6.210782527923584
    7. 'poss' → logprob: -6.210782527923584
    8. 'dp' → logprob: -6.835782527923584
    9. 'with' → logprob: -7.835782527923584
    10. 'known' → logprob: -7.960782527923584

Token 998: ' robots' (ID: 47605)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3793453872203827
    2. 'data' → logprob: -1.379345417022705
    3. '       ' → logprob: -3.504345417022705
    4. 'dp' → logprob: -4.629345417022705
    5. 'for' → logprob: -4.879345417022705
    6. '
' → logprob: -6.129345417022705
    7. 'visited' → logprob: -6.129345417022705
    8. 'received' → logprob: -6.504345417022705
    9. 'times' → logprob: -6.629345417022705
    10. 'have' → logprob: -6.629345417022705

Token 999: ' move' (ID: 5275)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'have' → logprob: -1.4438457489013672
    2. 'are' → logprob: -2.193845748901367
    3. 'can' → logprob: -2.193845748901367
    4. 'at' → logprob: -2.443845748901367
    5. 'may' → logprob: -2.943845748901367
    6. ' can' → logprob: -3.193845748901367
    7. 'start' → logprob: -3.318845748901367
    8. '   ' → logprob: -3.318845748901367
    9. ' have' → logprob: -3.318845748901367
    10. '#' → logprob: -3.568845748901367

Token 1000: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06987941265106201
    2. '
' → logprob: -3.5698795318603516
    3. 'data' → logprob: -3.5698795318603516
    4. ' data' → logprob: -4.944879531860352
    5. 'dp' → logprob: -7.069879531860352
    6. '        
' → logprob: -7.194879531860352
    7. 'have' → logprob: -7.194879531860352
    8. '#' → logprob: -8.319879531860352
    9. '   ' → logprob: -8.694879531860352
    10. 'has' → logprob: -8.694879531860352

Token 1001: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5253627896308899
    2. '#' → logprob: -0.9003627896308899
    3. 'data' → logprob: -6.650362968444824
    4. 'dp' → logprob: -8.525362968444824
    5. 'times' → logprob: -8.900362968444824
    6. '
' → logprob: -8.900362968444824
    7. '   ' → logprob: -9.400362968444824
    8. ' #' → logprob: -9.525362968444824
    9. 'current' → logprob: -9.525362968444824
    10. 'visited' → logprob: -10.025362968444824

Token 1002: ' connectivity' (ID: 45849)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.8399887084960938
    2. '#' → logprob: -0.9649887084960938
    3. 'for' → logprob: -2.5899887084960938
    4. 'time' → logprob: -3.4649887084960938
    5. 'current' → logprob: -4.589988708496094
    6. 'last' → logprob: -4.589988708496094
    7. ' data' → logprob: -4.714988708496094
    8. 'times' → logprob: -4.714988708496094
    9. 'prev' → logprob: -5.089988708496094
    10. 'known' → logprob: -5.839988708496094

Token 1003: ' changes' (ID: 6629)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.909052848815918
    2. 'changes' → logprob: -1.409052848815918
    3. 'at' → logprob: -2.284052848815918
    4. '   ' → logprob: -2.784052848815918
    5. 'prev' → logprob: -3.409052848815918
    6. ' is' → logprob: -3.409052848815918
    7. '#' → logprob: -3.784052848815918
    8. ' at' → logprob: -4.159052848815918
    9. 'def' → logprob: -4.284052848815918
    10. ' changes' → logprob: -4.284052848815918

Token 1004: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008559254929423332
    2. '
' → logprob: -5.383559226989746
    3. 'data' → logprob: -6.383559226989746
    4. '   ' → logprob: -6.633559226989746
    5. '        
' → logprob: -7.633559226989746
    6. ' data' → logprob: -8.758559226989746
    7. '```' → logprob: -9.008559226989746
    8. 'visited' → logprob: -10.633559226989746
    9. '    
' → logprob: -10.883559226989746
    10. 'current' → logprob: -11.133559226989746

Token 1005: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32127124071121216
    2. '
' → logprob: -1.4462711811065674
    3. '   ' → logprob: -3.6962711811065674
    4. 'data' → logprob: -5.0712714195251465
    5. '```' → logprob: -5.4462714195251465
    6. '        
' → logprob: -6.1962714195251465
    7. '    
' → logprob: -7.0712714195251465
    8. ' data' → logprob: -7.9462714195251465
    9. 'current' → logprob: -8.946270942687988
    10. '
' → logprob: -9.946270942687988

Token 1006: ' #' (ID: 1069)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.7178425788879395
    2. 'have' → logprob: -1.2178425788879395
    3. '       ' → logprob: -1.9678425788879395
    4. 'has' → logprob: -2.9678425788879395
    5. 'dp' → logprob: -4.8428425788879395
    6. '#' (adapté à ' #') → logprob: -5.3428425788879395
    7. 'received' → logprob: -5.9678425788879395
    8. 'known' → logprob: -6.2178425788879395
    9. 'poss' → logprob: -6.3428425788879395
    10. 'visited' → logprob: -7.2178425788879395

Token 1007: ' We'll' (ID: 46830)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.5946201086044312
    2. '       ' → logprob: -1.2196201086044312
    3. 'have' → logprob: -2.7196202278137207
    4. '#' → logprob: -2.9696202278137207
    5. 'dp' → logprob: -4.594620227813721
    6. 'has' → logprob: -4.594620227813721
    7. 'times' → logprob: -5.844620227813721
    8. 'known' → logprob: -6.094620227813721
    9. 'received' → logprob: -6.219620227813721
    10. 'visited' → logprob: -6.469620227813721

Token 1008: ' simulate' (ID: 66687)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'times' → logprob: -1.2405368089675903
    2. 'dp' → logprob: -1.3655368089675903
    3. 'simulate' → logprob: -1.6155368089675903
    4. 'dist' → logprob: -2.490536689758301
    5. '#' → logprob: -2.615536689758301
    6. 'import' → logprob: -3.740536689758301
    7. 'from' → logprob: -3.865536689758301
    8. 'use' → logprob: -4.740536689758301
    9. 'visited' → logprob: -4.740536689758301
    10. '   ' → logprob: -4.865536689758301

Token 1009: ' time' (ID: 1058)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.6509041786193848
    2. 'dp' → logprob: -2.0259041786193848
    3. 'for' → logprob: -2.5259041786193848
    4. 'times' → logprob: -2.6509041786193848
    5. 'visited' → logprob: -3.0259041786193848
    6. 'time' → logprob: -3.7759041786193848
    7. 'dist' → logprob: -3.7759041786193848
    8. 'current' → logprob: -3.9009041786193848
    9. 'known' → logprob: -4.025904178619385
    10. 'have' → logprob: -4.150904178619385

Token 1010: ' step' (ID: 5983)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.14290012419223785
    2. ' =' → logprob: -3.392900228500366
    3. '=' → logprob: -3.642900228500366
    4. 'points' → logprob: -3.767900228500366
    5. 'step' → logprob: -3.767900228500366
    6. ' steps' → logprob: -4.392899990081787
    7. 's' → logprob: -4.642899990081787
    8. '_steps' → logprob: -6.267899990081787
    9. '_step' → logprob: -6.767899990081787
    10. '   ' → logprob: -7.017899990081787

Token 1011: ' by' (ID: 656)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7991604208946228
    2. '=' → logprob: -1.4241604804992676
    3. 'by' → logprob: -1.6741604804992676
    4. ' by' → logprob: -2.5491604804992676
    5. '   ' → logprob: -3.9241604804992676
    6. ' =' → logprob: -4.549160480499268
    7. '       ' → logprob: -4.799160480499268
    8. '+=' → logprob: -6.299160480499268
    9. ' +=' → logprob: -6.924160480499268
    10. 'wise' → logprob: -8.04916000366211

Token 1012: ' step' (ID: 5983)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011609932407736778
    2. 'step' → logprob: -4.63661003112793
    3. '0' → logprob: -7.51161003112793
    4. 'time' → logprob: -7.76161003112793
    5. 't' → logprob: -7.88661003112793
    6. 'range' → logprob: -9.01161003112793
    7. ' ' → logprob: -9.63661003112793
    8. 'T' → logprob: -9.88661003112793
    9. 'for' → logprob: -10.01161003112793
    10. ' step' → logprob: -10.26161003112793

Token 1013: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003961686044931412
    2. '
' → logprob: -5.753961563110352
    3. '   ' → logprob: -8.003961563110352
    4. '        
' → logprob: -8.378961563110352
    5. '```' → logprob: -10.003961563110352
    6. 'current' → logprob: -10.253961563110352
    7. 'dp' → logprob: -11.003961563110352
    8. ' current' → logprob: -11.378961563110352
    9. ' times' → logprob: -11.503961563110352
    10. ' for' → logprob: -11.628961563110352

Token 1014: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3290957510471344
    2. '   ' → logprob: -1.329095721244812
    3. '
' → logprob: -4.204095840454102
    4. '```' → logprob: -8.329095840454102
    5. '    
' → logprob: -8.454095840454102
    6. '        
' → logprob: -8.579095840454102
    7. 'current' → logprob: -10.079095840454102
    8. 't' → logprob: -10.954095840454102
    9. 'data' → logprob: -11.204095840454102
    10. 'time' → logprob: -11.829095840454102

Token 1015: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42047393321990967
    2. 'data' → logprob: -1.9204739332199097
    3. 'visited' → logprob: -2.420474052429199
    4. 'dp' → logprob: -2.670474052429199
    5. '   ' → logprob: -3.920474052429199
    6. '
' → logprob: -5.295474052429199
    7. 'current' → logprob: -6.045474052429199
    8. 'dist' → logprob: -6.545474052429199
    9. 'times' → logprob: -7.045474052429199
    10. 'import' → logprob: -7.045474052429199

Token 1016: ' To' (ID: 2514)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36350908875465393
    2. 'visited' → logprob: -2.613509178161621
    3. 'dt' → logprob: -2.738509178161621
    4. 'dp' → logprob: -2.863509178161621
    5. 'times' → logprob: -3.363509178161621
    6. 'data' → logprob: -3.738509178161621
    7. '   ' → logprob: -4.238509178161621
    8. 'time' → logprob: -4.238509178161621
    9. 'steps' → logprob: -5.488509178161621
    10. 'current' → logprob: -5.488509178161621

Token 1017: ' keep' (ID: 3357)
  Prédit: 'simulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'simulate' → logprob: -0.6061533689498901
    2. '       ' → logprob: -2.1061534881591797
    3. 'continue' → logprob: -2.4811534881591797
    4. '```' → logprob: -2.8561534881591797
    5. 'import' → logprob: -2.9811534881591797
    6. '   ' → logprob: -3.6061534881591797
    7. '
' → logprob: -3.6061534881591797
    8. ' simulate' → logprob: -4.48115348815918
    9. 'step' → logprob: -4.85615348815918
    10. ' continue' → logprob: -5.10615348815918

Token 1018: ' it' (ID: 480)
  Prédit: 'track'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'track' → logprob: -0.3477547764778137
    2. 'time' → logprob: -2.972754716873169
    3. ' track' → logprob: -2.972754716873169
    4. '```' → logprob: -3.097754716873169
    5. 'step' → logprob: -3.222754716873169
    6. '       ' → logprob: -3.472754716873169
    7. 'prev' → logprob: -4.472754955291748
    8. 'steps' → logprob: -4.597754955291748
    9. 'interval' → logprob: -4.722754955291748
    10. 'reading' → logprob: -5.222754955291748

Token 1019: ' simple' (ID: 4705)
  Prédit: 'efficient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'efficient' → logprob: -0.20995686948299408
    2. 'simple' → logprob: -2.9599568843841553
    3. ' efficient' → logprob: -4.084956645965576
    4. 'safe' → logprob: -4.084956645965576
    5. 'prec' → logprob: -4.209956645965576
    6. 'manageable' → logprob: -4.209956645965576
    7. 'memory' → logprob: -4.834956645965576
    8. 'reasonable' → logprob: -5.084956645965576
    9. 'consistent' → logprob: -5.084956645965576
    10. 'accur' → logprob: -5.334956645965576

Token 1020: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004626052919775248
    2. '
' → logprob: -5.629626274108887
    3. '        
' → logprob: -7.379626274108887
    4. ',' → logprob: -8.004626274108887
    5. ' for' → logprob: -10.879626274108887
    6. '```' → logprob: -11.754626274108887
    7. ',
' → logprob: -11.879626274108887
    8. 't' → logprob: -12.004626274108887
    9. '   ' → logprob: -12.379626274108887
    10. 'for' → logprob: -12.504626274108887

Token 1021: ' check' (ID: 2371)
  Prédit: 'dt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dt' → logprob: -0.6829716563224792
    2. '       ' → logprob: -0.9329716563224792
    3. 'for' → logprob: -3.307971715927124
    4. ' dt' → logprob: -4.182971477508545
    5. 'step' → logprob: -4.432971477508545
    6. 'dp' → logprob: -5.307971477508545
    7. 'current' → logprob: -5.307971477508545
    8. ' for' → logprob: -5.307971477508545
    9. '
' → logprob: -5.557971477508545
    10. 'delta' → logprob: -5.932971477508545

Token 1022: ' every' (ID: 1753)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -1.0289499759674072
    2. 'for' → logprob: -1.5289499759674072
    3. 'every' → logprob: -2.2789499759674072
    4. 'time' → logprob: -2.4039499759674072
    5. 'all' → logprob: -2.6539499759674072
    6. 'each' → logprob: -3.1539499759674072
    7. 't' → logprob: -3.1539499759674072
    8. '```' → logprob: -3.9039499759674072
    9. ' every' → logprob: -4.528949737548828
    10. ' for' → logprob: -4.778949737548828

Token 1023: ' integer' (ID: 16336)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.37384599447250366
    2. '1' → logprob: -1.2488460540771484
    3. ' t' → logprob: -4.873846054077148
    4. 'time' → logprob: -5.248846054077148
    5. 'second' → logprob: -5.248846054077148
    6. '0' → logprob: -5.873846054077148
    7. 'for' → logprob: -6.748846054077148
    8. ' ' → logprob: -7.248846054077148
    9. '   ' → logprob: -7.498846054077148
    10. 's' → logprob: -8.123846054077148

Token 1024: ' time' (ID: 1058)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9852551817893982
    2. '
' → logprob: -1.735255241394043
    3. '       ' → logprob: -1.860255241394043
    4. 'time' → logprob: -1.985255241394043
    5. 'for' → logprob: -2.485255241394043
    6. ' time' → logprob: -3.610255241394043
    7. ' t' → logprob: -3.735255241394043
    8. ' for' → logprob: -4.610255241394043
    9. '```' → logprob: -4.610255241394043
    10. '   ' → logprob: -6.735255241394043

Token 1025: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01119671668857336
    2. '
' → logprob: -4.636196613311768
    3. ' for' → logprob: -7.011196613311768
    4. '   ' → logprob: -8.636197090148926
    5. '        
' → logprob: -8.636197090148926
    6. 'for' → logprob: -9.011197090148926
    7. ',' → logprob: -10.261197090148926
    8. '    
' → logprob: -12.261197090148926
    9. '```' → logprob: -12.386197090148926
    10. '           ' → logprob: -12.636197090148926

Token 1026: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -12.500007629394531
    3. 't' → logprob: -13.375007629394531
    4. '1' → logprob: -13.750007629394531
    5. '```' → logprob: -15.000007629394531
    6. '
' → logprob: -15.375007629394531
    7. '   ' → logprob: -15.875007629394531
    8. 'time' → logprob: -16.00000762939453
    9. '`' → logprob: -16.87500762939453
    10. 'for' → logprob: -17.25000762939453

Token 1027: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.4849443838757e-06
    2. '1' → logprob: -13.000004768371582
    3. '```' → logprob: -14.125004768371582
    4. ' ' → logprob: -14.250004768371582
    5. '
' → logprob: -15.375004768371582
    6. 't' → logprob: -15.500004768371582
    7. '`' → logprob: -15.875004768371582
    8. '``' → logprob: -17.000003814697266
    9. 'for' → logprob: -18.000003814697266
    10. 'time' → logprob: -18.125003814697266

Token 1028: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.4546184241771698
    2. ' to' → logprob: -1.0796184539794922
    3. '       ' → logprob: -3.704618453979492
    4. '   ' → logprob: -7.704618453979492
    5. '
' → logprob: -8.829618453979492
    6. ',' → logprob: -8.829618453979492
    7. ' through' → logprob: -9.454618453979492
    8. ' up' → logprob: -9.829618453979492
    9. '```' → logprob: -10.329618453979492
    10. 'for' → logprob: -11.454618453979492

Token 1029: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.009018339216709137
    2. ' T' → logprob: -4.759018421173096
    3. '0' → logprob: -8.009017944335938
    4. '1' → logprob: -10.634017944335938
    5. '```' → logprob: -10.884017944335938
    6. '
' → logprob: -11.259017944335938
    7. ' ' → logprob: -11.759017944335938
    8. '``' → logprob: -12.759017944335938
    9. '   ' → logprob: -13.009017944335938
    10. 't' → logprob: -13.759017944335938

Token 1030: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3932642936706543
    2. '
' → logprob: -1.1432642936706543
    3. '   ' → logprob: -5.143264293670654
    4. '        
' → logprob: -8.018264770507812
    5. '    
' → logprob: -9.768264770507812
    6. 'data' → logprob: -10.018264770507812
    7. ',' → logprob: -10.643264770507812
    8. '```' → logprob: -10.893264770507812
    9. '
' → logprob: -11.268264770507812
    10. 'for' → logprob: -11.393264770507812

Token 1031: 'T' (ID: 51)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39132896065711975
    2. 'for' → logprob: -1.6413289308547974
    3. ')' → logprob: -3.141329050064087
    4. ')
' → logprob: -3.141329050064087
    5. '
' → logprob: -4.016328811645508
    6. ' for' → logprob: -4.141328811645508
    7. '   ' → logprob: -5.641328811645508
    8. 'T' → logprob: -6.391328811645508
    9. 't' → logprob: -6.891328811645508
    10. '):
' → logprob: -7.016328811645508

Token 1032: ' <=' (ID: 5017)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002911861753091216
    2. ' +' → logprob: -6.1279120445251465
    3. '
' → logprob: -8.377911567687988
    4. '):
' → logprob: -8.627911567687988
    5. '```' → logprob: -8.877911567687988
    6. ')' → logprob: -9.502911567687988
    7. '+
' → logprob: -10.752911567687988
    8. '=' → logprob: -10.752911567687988
    9. '):' → logprob: -11.002911567687988
    10. ')+' → logprob: -11.877911567687988

Token 1033: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.03312734141945839
    2. '10' → logprob: -4.158127307891846
    3. 'T' → logprob: -5.283127307891846
    4. '200' → logprob: -5.658127307891846
    5. ' ' → logprob: -6.033127307891846
    6. '500' → logprob: -6.783127307891846
    7. '50' → logprob: -6.908127307891846
    8. '20' → logprob: -6.908127307891846
    9. '```' → logprob: -6.908127307891846
    10. '300' → logprob: -7.533127307891846

Token 1034: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7730863690376282
    2. '0' → logprob: -1.5230863094329834
    3. '):
' → logprob: -2.1480863094329834
    4. '+' → logprob: -2.3980863094329834
    5. ')
' → logprob: -2.8980863094329834
    6. '```' → logprob: -3.1480863094329834
    7. '       ' → logprob: -5.7730865478515625
    8. '):' → logprob: -6.0230865478515625
    9. ':
' → logprob: -6.1480865478515625
    10. '
' → logprob: -6.1480865478515625

Token 1035: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6466595530509949
    2. ')' → logprob: -1.5216596126556396
    3. ')
' → logprob: -1.8966596126556396
    4. '):' → logprob: -2.7716596126556396
    5. '+' → logprob: -3.5216596126556396
    6. '       ' → logprob: -4.8966593742370605
    7. '
' → logprob: -5.6466593742370605
    8. ':
' → logprob: -6.1466593742370605
    9. ':' → logprob: -7.3966593742370605
    10. '```' → logprob: -7.5216593742370605

Token 1036: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02259710431098938
    2. '
' → logprob: -4.272597312927246
    3. '   ' → logprob: -5.022597312927246
    4. '```' → logprob: -6.772597312927246
    5. '        
' → logprob: -7.647597312927246
    6. '    
' → logprob: -9.397597312927246
    7. 'data' → logprob: -10.272597312927246
    8. ' data' → logprob: -10.897597312927246
    9. '`' → logprob: -11.272597312927246
    10. '``' → logprob: -11.522597312927246

Token 1037: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09941619634628296
    2. '
' → logprob: -2.5994162559509277
    3. '   ' → logprob: -4.974416255950928
    4. 'data' → logprob: -4.974416255950928
    5. '        
' → logprob: -5.724416255950928
    6. ' data' → logprob: -6.974416255950928
    7. '```' → logprob: -7.599416255950928
    8. '    
' → logprob: -8.47441577911377
    9. 'poss' → logprob: -8.47441577911377
    10. 'visited' → logprob: -8.59941577911377

Token 1038: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3095875382423401
    2. 'data' → logprob: -2.0595874786376953
    3. 'have' → logprob: -2.1845874786376953
    4. '   ' → logprob: -4.934587478637695
    5. 'has' → logprob: -5.059587478637695
    6. 'poss' → logprob: -5.309587478637695
    7. 'visited' → logprob: -6.559587478637695
    8. 'received' → logprob: -6.934587478637695
    9. 'known' → logprob: -7.184587478637695
    10. 'got' → logprob: -7.309587478637695

Token 1039: ' better' (ID: 3432)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2553158700466156
    2. 'time' → logprob: -1.630315899848938
    3. 'data' → logprob: -4.130315780639648
    4. ' t' → logprob: -5.630315780639648
    5. ' time' → logprob: -6.505315780639648
    6. 'infect' → logprob: -6.880315780639648
    7. 'have' → logprob: -7.005315780639648
    8. 'i' → logprob: -7.005315780639648
    9. 'times' → logprob: -7.005315780639648
    10. 'received' → logprob: -7.380315780639648

Token 1040: ' we' (ID: 581)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.4176786243915558
    2. 't' → logprob: -1.1676785945892334
    3. ' _' → logprob: -4.5426788330078125
    4. 'i' → logprob: -5.0426788330078125
    5. 'time' → logprob: -5.7926788330078125
    6. ' time' → logprob: -5.9176788330078125
    7. ' i' → logprob: -6.1676788330078125
    8. ' line' → logprob: -6.7926788330078125
    9. ' range' → logprob: -7.1676788330078125
    10. '
' → logprob: -7.6676788330078125

Token 1041: ' can' (ID: 665)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6404655575752258
    2. '   ' → logprob: -1.265465497970581
    3. ' continue' → logprob: -2.265465497970581
    4. ' for' → logprob: -3.515465497970581
    5. ' can' → logprob: -4.14046573638916
    6. ' will' → logprob: -4.76546573638916
    7. ' =' → logprob: -5.14046573638916
    8. '    ' → logprob: -5.26546573638916
    9. 'continue' → logprob: -5.51546573638916
    10. '```' → logprob: -5.64046573638916

Token 1042: ' check' (ID: 2371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7279224395751953
    2. 'range' → logprob: -1.1029224395751953
    3. '```' → logprob: -2.2279224395751953
    4. 'def' → logprob: -3.6029224395751953
    5. 'continue' → logprob: -3.6029224395751953
    6. ' for' → logprob: -4.977922439575195
    7. 'simulate' → logprob: -5.602922439575195
    8. 'import' → logprob: -5.727922439575195
    9. '
' → logprob: -5.977922439575195
    10. ' range' → logprob: -6.102922439575195

Token 1043: ' all' (ID: 722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6251658201217651
    2. 'range' → logprob: -1.1251658201217651
    3. ' range' → logprob: -3.2501659393310547
    4. ' for' → logprob: -3.2501659393310547
    5. 't' → logprob: -4.000165939331055
    6. '```' → logprob: -4.125165939331055
    7. '   ' → logprob: -5.125165939331055
    8. '
' → logprob: -5.125165939331055
    9. '       ' → logprob: -5.125165939331055
    10. '0' → logprob: -6.250165939331055

Token 1044: ' integer' (ID: 16336)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.23799633979797363
    2. 't' → logprob: -2.6129963397979736
    3. ' times' → logprob: -3.3629963397979736
    4. '```' → logprob: -3.3629963397979736
    5. 'for' → logprob: -3.7379963397979736
    6. 'time' → logprob: -4.3629961013793945
    7. '
' → logprob: -5.1129961013793945
    8. '       ' → logprob: -5.3629961013793945
    9. 'timestamps' → logprob: -5.6129961013793945
    10. '_times' → logprob: -5.9879961013793945

Token 1045: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.1304807960987091
    2. ' times' → logprob: -2.1304807662963867
    3. 'time' → logprob: -6.505480766296387
    4. '```' → logprob: -7.505480766296387
    5. '
' → logprob: -8.005480766296387
    6. 't' → logprob: -8.005480766296387
    7. '_times' → logprob: -8.130480766296387
    8. 'timestamps' → logprob: -9.255480766296387
    9. 's' → logprob: -9.380480766296387
    10. '(times' → logprob: -9.755480766296387

Token 1046: ' plus' (ID: 2932)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11653883010149002
    2. '
' → logprob: -2.2415387630462646
    3. 'data' → logprob: -6.866539001464844
    4. '        
' → logprob: -7.116539001464844
    5. 'received' → logprob: -7.366539001464844
    6. '#' → logprob: -8.241539001464844
    7. ',' → logprob: -8.616539001464844
    8. '   ' → logprob: -8.616539001464844
    9. 'visited' → logprob: -8.741539001464844
    10. '```' → logprob: -9.366539001464844

Token 1047: ' T' (ID: 353)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8959630727767944
    2. 'the' → logprob: -2.270963191986084
    3. 'all' → logprob: -2.770963191986084
    4. '0' → logprob: -2.895963191986084
    5. 'times' → logprob: -3.020963191986084
    6. '[T' → logprob: -3.020963191986084
    7. 'sorted' → logprob: -3.145963191986084
    8. 'range' → logprob: -3.270963191986084
    9. '
' → logprob: -3.520963191986084
    10. 'set' → logprob: -3.520963191986084

Token 1048: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.249418243765831
    2. 'have' → logprob: -2.249418258666992
    3. 'data' → logprob: -2.749418258666992
    4. '
' → logprob: -3.624418258666992
    5. 'poss' → logprob: -5.624418258666992
    6. 'has' → logprob: -5.999418258666992
    7. '   ' → logprob: -5.999418258666992
    8. '        
' → logprob: -6.124418258666992
    9. 'received' → logprob: -6.124418258666992
    10. 'visited' → logprob: -6.124418258666992

Token 1049: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03991010785102844
    2. '   ' → logprob: -4.039910316467285
    3. '```' → logprob: -4.289910316467285
    4. '
' → logprob: -5.789910316467285
    5. 'data' → logprob: -5.789910316467285
    6. '        
' → logprob: -7.914910316467285
    7. 'visited' → logprob: -8.289910316467285
    8. 'received' → logprob: -8.539910316467285
    9. 'poss' → logprob: -8.789910316467285
    10. 'have' → logprob: -9.039910316467285

Token 1050: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1258787214756012
    2. 'data' → logprob: -2.7508788108825684
    3. 'have' → logprob: -3.5008788108825684
    4. '```' → logprob: -5.375878810882568
    5. '
' → logprob: -5.500878810882568
    6. 'poss' → logprob: -6.000878810882568
    7. 'received' → logprob: -6.125878810882568
    8. 'visited' → logprob: -6.500878810882568
    9. 'has' → logprob: -6.500878810882568
    10. 'infect' → logprob: -6.625878810882568

Token 1051: ' For' (ID: 2214)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.4785943329334259
    2. 'data' → logprob: -1.7285943031311035
    3. '       ' → logprob: -1.9785943031311035
    4. 'has' → logprob: -3.8535943031311035
    5. 'in' → logprob: -4.2285943031311035
    6. '   ' → logprob: -5.2285943031311035
    7. 'inf' → logprob: -5.4785943031311035
    8. 'poss' → logprob: -5.4785943031311035
    9. 'known' → logprob: -5.7285943031311035
    10. 'infect' → logprob: -6.1035943031311035

Token 1052: ' each' (ID: 2454)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'times' → logprob: -1.0264010429382324
    2. 'received' → logprob: -2.0264010429382324
    3. 'data' → logprob: -2.1514010429382324
    4. 'time' → logprob: -2.4014010429382324
    5. 'have' → logprob: -2.6514010429382324
    6. 't' → logprob: -2.6514010429382324
    7. 'visited' → logprob: -3.1514010429382324
    8. 'i' → logprob: -3.4014010429382324
    9. 'infect' → logprob: -3.7764010429382324
    10. 'ac' → logprob: -4.401401042938232

Token 1053: ' time' (ID: 1058)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5329599380493164
    2. 'time' → logprob: -1.0329599380493164
    3. ' t' → logprob: -3.2829599380493164
    4. ' time' → logprob: -4.032959938049316
    5. 'i' → logprob: -7.157959938049316
    6. '```' → logprob: -8.032959938049316
    7. '
' → logprob: -8.282959938049316
    8. '_time' → logprob: -8.532959938049316
    9. 'ti' → logprob: -9.407959938049316
    10. 'current' → logprob: -9.782959938049316

Token 1054: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.525918185710907
    2. ' in' → logprob: -0.900918185710907
    3. 'for' → logprob: -7.150918006896973
    4. '
' → logprob: -7.150918006896973
    5. ',' → logprob: -7.775918006896973
    6. 't' → logprob: -8.775918006896973
    7. '   ' → logprob: -9.150918006896973
    8. ' t' → logprob: -9.275918006896973
    9. '```' → logprob: -9.400918006896973
    10. 'from' → logprob: -9.650918006896973

Token 1055: ' find' (ID: 1646)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.3944324254989624
    2. 'data' → logprob: -1.8944324254989624
    3. '       ' → logprob: -3.519432544708252
    4. 'in' → logprob: -3.519432544708252
    5. 'infect' → logprob: -3.519432544708252
    6. '#' → logprob: -4.394432544708252
    7. ' data' → logprob: -4.394432544708252
    8. 'has' → logprob: -4.519432544708252
    9. 'poss' → logprob: -4.769432544708252
    10. 'received' → logprob: -4.769432544708252

Token 1056: ' connected' (ID: 12079)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.008629471063613892
    2. 'connected' → logprob: -5.508629322052002
    3. 'reachable' → logprob: -6.633629322052002
    4. 'connections' → logprob: -7.008629322052002
    5. ' groups' → logprob: -7.508629322052002
    6. 'components' → logprob: -7.633629322052002
    7. 'the' → logprob: -8.00862979888916
    8. '   ' → logprob: -8.38362979888916
    9. 'clusters' → logprob: -8.75862979888916
    10. 'robots' → logprob: -9.13362979888916

Token 1057: ' components' (ID: 10674)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.7259194850921631
    2. '_components' → logprob: -0.8509194850921631
    3. '_groups' → logprob: -3.225919485092163
    4. '_' → logprob: -3.975919485092163
    5. 'groups' → logprob: -4.350919723510742
    6. ' components' → logprob: -5.475919723510742
    7. 'robots' → logprob: -5.600919723510742
    8. '   ' → logprob: -5.975919723510742
    9. '_sets' → logprob: -6.100919723510742
    10. 'component' → logprob: -6.475919723510742

Token 1058: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09129982441663742
    2. '
' → logprob: -2.7162997722625732
    3. 'data' → logprob: -4.341300010681152
    4. ',' → logprob: -6.216300010681152
    5. ' data' → logprob: -6.716300010681152
    6. 'have' → logprob: -7.091300010681152
    7. '        
' → logprob: -7.091300010681152
    8. '   ' → logprob: -7.341300010681152
    9. '```' → logprob: -7.591300010681152
    10. '#' → logprob: -8.091300010681152

Token 1059: ' for' (ID: 395)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0701961517333984
    2. 'data' → logprob: -1.1951961517333984
    3. 'have' → logprob: -1.6951961517333984
    4. '       ' → logprob: -2.0701961517333984
    5. 'has' → logprob: -4.570196151733398
    6. 'poss' → logprob: -4.695196151733398
    7. 'known' → logprob: -5.195196151733398
    8. 'owned' → logprob: -5.945196151733398
    9. 'received' → logprob: -6.070196151733398
    10. ' data' → logprob: -6.320196151733398

Token 1060: ' each' (ID: 2454)
  Prédit: 'robot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robot' → logprob: -0.5623830556869507
    2. ' robot' → logprob: -2.0623831748962402
    3. 'each' → logprob: -2.5623831748962402
    4. 'i' → logprob: -2.8123831748962402
    5. 't' → logprob: -3.0623831748962402
    6. 'robots' → logprob: -3.5623831748962402
    7. ' each' → logprob: -3.9373831748962402
    8. ' t' → logprob: -4.06238317489624
    9. ' i' → logprob: -4.81238317489624
    10. 'which' → logprob: -4.81238317489624

Token 1061: ' group' (ID: 3566)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.5440757870674133
    2. 'time' → logprob: -1.1690757274627686
    3. 'i' → logprob: -3.7940757274627686
    4. 't' → logprob: -4.044075965881348
    5. ' t' → logprob: -4.169075965881348
    6. ' i' → logprob: -4.419075965881348
    7. ' robot' → logprob: -4.794075965881348
    8. 'robot' → logprob: -4.919075965881348
    9. '```' → logprob: -5.044075965881348
    10. '
' → logprob: -5.169075965881348

Token 1062: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.790441632270813
    2. ',' → logprob: -1.540441632270813
    3. '
' → logprob: -2.1654415130615234
    4. 'with' → logprob: -3.0404415130615234
    5. 'that' → logprob: -3.4154415130615234
    6. 'have' → logprob: -3.9154415130615234
    7. '#' → logprob: -4.165441513061523
    8. 'data' → logprob: -4.165441513061523
    9. '```' → logprob: -4.290441513061523
    10. 'for' → logprob: -4.415441513061523

Token 1063: ' any' (ID: 1062)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13159430027008057
    2. 'i' → logprob: -2.381594181060791
    3. 'any' → logprob: -4.381594181060791
    4. 'data' → logprob: -5.506594181060791
    5. 'robot' → logprob: -5.756594181060791
    6. 'len' → logprob: -5.881594181060791
    7. 'robots' → logprob: -6.006594181060791
    8. ' ' → logprob: -6.756594181060791
    9. 't' → logprob: -6.881594181060791
    10. ' any' → logprob: -7.256594181060791

Token 1064: ' member' (ID: 6027)
  Prédit: 'robot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'robot' → logprob: -0.5633479952812195
    2. ' robot' → logprob: -1.5633480548858643
    3. 'i' → logprob: -1.8133480548858643
    4. '
' → logprob: -4.188347816467285
    5. ' i' → logprob: -4.938347816467285
    6. 'time' → logprob: -4.938347816467285
    7. '   ' → logprob: -5.813347816467285
    8. 'data' → logprob: -5.813347816467285
    9. ' data' → logprob: -5.938347816467285
    10. 'member' → logprob: -6.063347816467285

Token 1065: ' has' (ID: 853)
  Prédit: ' has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.5007756352424622
    2. ' in' → logprob: -1.2507755756378174
    3. 'has' → logprob: -2.6257755756378174
    4. 'in' → logprob: -3.5007755756378174
    5. '
' → logprob: -5.7507758140563965
    6. ' is' → logprob: -7.5007758140563965
    7. '_has' → logprob: -8.125775337219238
    8. '```' → logprob: -8.875775337219238
    9. '   ' → logprob: -9.000775337219238
    10. 's' → logprob: -9.000775337219238

Token 1066: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.045142948627471924
    2. 'the' → logprob: -3.420142889022827
    3. ' data' → logprob: -4.545143127441406
    4. ' the' → logprob: -7.545143127441406
    5. '
' → logprob: -8.545143127441406
    6. '0' → logprob: -10.795143127441406
    7. 'has' → logprob: -11.045143127441406
    8. '_data' → logprob: -11.545143127441406
    9. 'received' → logprob: -11.545143127441406
    10. '```' → logprob: -12.170143127441406

Token 1067: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8697738647460938
    2. '       ' → logprob: -1.2447738647460938
    3. ',' → logprob: -1.6197738647460938
    4. 'data' → logprob: -3.9947738647460938
    5. ' has' → logprob: -3.9947738647460938
    6. ':
' → logprob: -4.744773864746094
    7. ',
' → logprob: -4.994773864746094
    8. 'has' → logprob: -4.994773864746094
    9. ' data' → logprob: -5.119773864746094
    10. '           ' → logprob: -5.244773864746094

Token 1068: ' all' (ID: 722)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.26538702845573425
    2. 'data' → logprob: -2.0153870582580566
    3. ' data' → logprob: -3.0153870582580566
    4. ' then' → logprob: -4.265387058258057
    5. 'continue' → logprob: -4.640387058258057
    6. ' #' → logprob: -5.140387058258057
    7. 'then' → logprob: -5.515387058258057
    8. 'for' → logprob: -5.515387058258057
    9. 'they' → logprob: -5.890387058258057
    10. '           ' → logprob: -6.640387058258057

Token 1069: ' get' (ID: 717)
  Prédit: ' members'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' members' → logprob: -0.46970248222351074
    2. 'members' → logprob: -1.0947024822235107
    3. ' have' → logprob: -3.8447024822235107
    4. 'have' → logprob: -5.46970272064209
    5. ' group' → logprob: -6.09470272064209
    6. ' robots' → logprob: -6.21970272064209
    7. ' get' → logprob: -6.46970272064209
    8. ' data' → logprob: -6.59470272064209
    9. 'tokens' → logprob: -6.84470272064209
    10. '#' → logprob: -7.09470272064209

Token 1070: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.31398889422416687
    2. 'data' → logprob: -1.3139889240264893
    3. '```' → logprob: -7.93898868560791
    4. '
' → logprob: -9.31398868560791
    5. 'token' → logprob: -9.43898868560791
    6. ' it' → logprob: -9.81398868560791
    7. 'the' → logprob: -10.56398868560791
    8. ' the' → logprob: -10.93898868560791
    9. '_data' → logprob: -11.06398868560791
    10. ' them' → logprob: -11.43898868560791

Token 1071: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029496237635612488
    2. '
' → logprob: -3.654496192932129
    3. 'data' → logprob: -6.154496192932129
    4. '```' → logprob: -7.779496192932129
    5. '   ' → logprob: -8.154496192932129
    6. '        
' → logprob: -8.279496192932129
    7. ' data' → logprob: -10.029496192932129
    8. '``' → logprob: -11.779496192932129
    9. 'has' → logprob: -12.029496192932129
    10. '    
' → logprob: -12.279496192932129

Token 1072: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3911650478839874
    2. '
' → logprob: -1.141165018081665
    3. '```' → logprob: -6.266165256500244
    4. '   ' → logprob: -6.891165256500244
    5. '        
' → logprob: -7.141165256500244
    6. 'data' → logprob: -7.641165256500244
    7. '    
' → logprob: -10.016164779663086
    8. '``' → logprob: -11.016164779663086
    9. ' data' → logprob: -11.516164779663086
    10. '
' → logprob: -12.516164779663086

Token 1073: ' have' (ID: 679)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0784510150551796
    2. 'data' → logprob: -2.953450918197632
    3. '
' → logprob: -4.078451156616211
    4. '```' → logprob: -5.328451156616211
    5. ' data' → logprob: -7.953451156616211
    6. '        
' → logprob: -8.078451156616211
    7. 'have' (adapté à ' have') → logprob: -8.453451156616211
    8. 'has' → logprob: -8.453451156616211
    9. '   ' → logprob: -8.828451156616211
    10. '``' → logprob: -9.703451156616211

Token 1074: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.14326536655426025
    2. ' =' → logprob: -2.1432652473449707
    3. '_' → logprob: -4.518265247344971
    4. '_tokens' → logprob: -7.143265247344971
    5. '_d' → logprob: -7.268265247344971
    6. 'data' → logprob: -7.268265247344971
    7. '_space' → logprob: -7.518265247344971
    8. '_at' → logprob: -7.893265247344971
    9. '=' → logprob: -8.018265724182129
    10. '  ' → logprob: -8.893265724182129

Token 1075: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038065701723098755
    2. ' =' → logprob: -3.2880656719207764
    3. '=[' → logprob: -10.788065910339355
    4. '=set' → logprob: -13.038065910339355
    5. '[' → logprob: -14.163065910339355
    6. '   ' → logprob: -15.413065910339355
    7. '=[]' → logprob: -16.03806495666504
    8. ' ' → logprob: -16.66306495666504
    9. '＝' → logprob: -17.03806495666504
    10. 's' → logprob: -17.03806495666504

Token 1076: ' set' (ID: 920)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1723162978887558
    2. '{' → logprob: -2.422316312789917
    3. 'set' → logprob: -2.672316312789917
    4. ' set' → logprob: -8.172316551208496
    5. ' [' → logprob: -8.672316551208496
    6. ' {' → logprob: -10.672316551208496
    7. '   ' → logprob: -13.547316551208496
    8. '=set' → logprob: -14.297316551208496
    9. '(set' → logprob: -15.547316551208496
    10. ' ' → logprob: -16.17231559753418

Token 1077: '()
' (ID: 1234)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.021354280412197113
    2. '()
' → logprob: -4.2713541984558105
    3. '()' → logprob: -5.2713541984558105
    4. '(' → logprob: -6.3963541984558105
    5. '[' → logprob: -9.021354675292969
    6. '({' → logprob: -9.146354675292969
    7. '{' → logprob: -9.521354675292969
    8. '(range' → logprob: -9.896354675292969
    9. '0' → logprob: -12.521354675292969
    10. '()

' → logprob: -12.896354675292969

Token 1078: '       ' (ID: 309)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.49621593952178955
    2. '(' → logprob: -1.3712159395217896
    3. 'have' → logprob: -2.4962158203125
    4. '0' → logprob: -3.3712158203125
    5. '[' → logprob: -4.2462158203125
    6. 'robots' → logprob: -5.9962158203125
    7. '([' → logprob: -6.3712158203125
    8. 'range' → logprob: -7.7462158203125
    9. '```' → logprob: -8.2462158203125
    10. ' have' → logprob: -8.2462158203125

Token 1079: ' have' (ID: 679)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' (adapté à ' have') → logprob: -1.3663626305060461e-05
    2. 'for' → logprob: -12.37501335144043
    3. ' have' → logprob: -12.75001335144043
    4. '{' → logprob: -13.00001335144043
    5. '0' → logprob: -13.37501335144043
    6. 'if' → logprob: -14.12501335144043
    7. '   ' → logprob: -14.37501335144043
    8. '       ' → logprob: -14.62501335144043
    9. '
' → logprob: -15.00001335144043
    10. '#' → logprob: -15.25001335144043

Token 1080: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.004939731676131487
    2. '(' → logprob: -5.629939556121826
    3. ' =' → logprob: -7.504939556121826
    4. '   ' → logprob: -8.504940032958984
    5. ' ' → logprob: -8.629940032958984
    6. '_' → logprob: -9.004940032958984
    7. '=' → logprob: -9.629940032958984
    8. '(
' → logprob: -9.629940032958984
    9. '  ' → logprob: -10.629940032958984
    10. ' (' → logprob: -10.879940032958984

Token 1081: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.031357645988464355
    2. '=' → logprob: -3.906357765197754
    3. '.' → logprob: -5.156357765197754
    4. ' =' → logprob: -5.531357765197754
    5. ' .' → logprob: -8.031357765197754
    6. 'add' → logprob: -8.281357765197754
    7. '().' → logprob: -8.531357765197754
    8. '.update' → logprob: -9.406357765197754
    9. '.=' → logprob: -9.906357765197754
    10. '<|end|>' → logprob: -9.906357765197754

Token 1082: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00016063073417171836
    2. '0' → logprob: -8.750160217285156
    3. ' (' → logprob: -13.125160217285156
    4. '(
' → logprob: -16.500160217285156
    5. '((' → logprob: -17.375160217285156
    6. ' ' → logprob: -17.750160217285156
    7. '   ' → logprob: -19.875160217285156
    8. '```' → logprob: -19.875160217285156
    9. '[' → logprob: -20.375160217285156
    10. 'a' → logprob: -21.000160217285156

Token 1083: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '[' → logprob: -18.375
    4. '(' → logprob: -18.375
    5. '   ' → logprob: -18.75
    6. ')' → logprob: -19.25
    7. '       ' → logprob: -21.0
    8. '```' → logprob: -21.0
    9. '00' → logprob: -21.125
    10. '#' → logprob: -21.125

Token 1084: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017115899827331305
    2. ')
' → logprob: -6.376711368560791
    3. ' )' → logprob: -11.87671184539795
    4. '<|end|>' → logprob: -14.12671184539795
    5. ')

' → logprob: -14.25171184539795
    6. '       ' → logprob: -15.50171184539795
    7. '   ' → logprob: -15.75171184539795
    8. '}' → logprob: -15.75171184539795
    9. '),' → logprob: -16.001710891723633
    10. ')}' → logprob: -16.376710891723633

Token 1085: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16668280959129333
    2. '
' → logprob: -2.291682720184326
    3. 'for' → logprob: -3.291682720184326
    4. '       ' → logprob: -4.541682720184326
    5. '   ' → logprob: -6.416682720184326
    6. ' 
' → logprob: -7.166682720184326
    7. '```' → logprob: -7.291682720184326
    8. '        
' → logprob: -7.416682720184326
    9. '    
' → logprob: -8.041683197021484
    10. '	for' → logprob: -8.166683197021484

Token 1086: ' first' (ID: 1577)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.37658676505088806
    2. '<|end|>' → logprob: -1.2515867948532104
    3. ')' → logprob: -3.751586675643921
    4. '```' → logprob: -6.6265869140625
    5. '<|end|>' → logprob: -6.7515869140625
    6. ' ' → logprob: -8.0015869140625
    7. '(' → logprob: -8.1265869140625
    8. 't' → logprob: -8.5015869140625
    9. 'for' → logprob: -8.8765869140625
    10. '
' → logprob: -9.3765869140625

Token 1087: ' robot' (ID: 20808)
  Prédit: 'robot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robot' → logprob: -0.025621134787797928
    2. ' robot' → logprob: -3.775621175765991
    3. 'token' → logprob: -6.400620937347412
    4. '<|end|>' → logprob: -8.27562141418457
    5. 'robots' → logprob: -9.02562141418457
    6. ')' → logprob: -9.15062141418457
    7. '(robot' → logprob: -9.52562141418457
    8. '0' → logprob: -10.15062141418457
    9. '_robot' → logprob: -10.27562141418457
    10. '.robot' → logprob: -10.52562141418457

Token 1088: ' has' (ID: 853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5816456079483032
    2. ' for' → logprob: -1.7066456079483032
    3. '
' → logprob: -2.0816454887390137
    4. 'for' → logprob: -2.0816454887390137
    5. '        
' → logprob: -6.081645488739014
    6. '```' → logprob: -6.206645488739014
    7. '<|end|>' → logprob: -6.331645488739014
    8. '   ' → logprob: -6.956645488739014
    9. '	' → logprob: -7.081645488739014
    10. '	for' → logprob: -7.331645488739014

Token 1089: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0037041159812361
    2. ' data' → logprob: -5.753704071044922
    3. '0' → logprob: -7.628704071044922
    4. 'the' → logprob: -10.503704071044922
    5. '_data' → logprob: -12.128704071044922
    6. ' ' → logprob: -13.253704071044922
    7. 'initial' → logprob: -13.378704071044922
    8. '
' → logprob: -13.628704071044922
    9. '(' → logprob: -14.378704071044922
    10. '```' → logprob: -14.503704071044922

Token 1090: ' initially' (ID: 25998)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2024819403886795
    2. 'for' → logprob: -2.077481985092163
    3. '       ' → logprob: -3.202481985092163
    4. '
' → logprob: -4.202481746673584
    5. '        
' → logprob: -6.952481746673584
    6. '   ' → logprob: -7.452481746673584
    7. '```' → logprob: -7.577481746673584
    8. '	for' → logprob: -8.827482223510742
    9. '    
' → logprob: -9.452482223510742
    10. ' 
' → logprob: -10.077482223510742

Token 1091: '

' (ID: 279)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7729628086090088
    2. '       ' → logprob: -1.0229628086090088
    3. 'for' → logprob: -2.022962808609009
    4. '
' → logprob: -3.397962808609009
    5. '   ' → logprob: -4.52296257019043
    6. '```' → logprob: -7.14796257019043
    7. '        
' → logprob: -7.52296257019043
    8. '	for' → logprob: -7.77296257019043
    9. 't' → logprob: -8.89796257019043
    10. '    
' → logprob: -9.39796257019043

Token 1092: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2611787021160126
    2. ' for' → logprob: -1.761178731918335
    3. '       ' → logprob: -2.886178731918335
    4. '```' → logprob: -6.386178493499756
    5. '   ' → logprob: -7.886178493499756
    6. '
' → logprob: -9.511178970336914
    7. 'visited' → logprob: -10.261178970336914
    8. '	for' → logprob: -11.011178970336914
    9. '        
' → logprob: -11.761178970336914
    10. '``' → logprob: -11.886178970336914

Token 1093: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02358575165271759
    2. '       ' → logprob: -4.148585796356201
    3. ' for' → logprob: -4.898585796356201
    4. '```' → logprob: -10.523585319519043
    5. '   ' → logprob: -11.148585319519043
    6. '
' → logprob: -12.148585319519043
    7. 't' → logprob: -12.148585319519043
    8. 'prev' → logprob: -12.273585319519043
    9. 'time' → logprob: -12.523585319519043
    10. '	for' → logprob: -13.148585319519043

Token 1094: ' We'll' (ID: 46830)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013190467143431306
    2. '       ' → logprob: -7.00131893157959
    3. ' for' → logprob: -7.87631893157959
    4. 't' → logprob: -12.25131893157959
    5. 'from' → logprob: -12.25131893157959
    6. 'times' → logprob: -12.37631893157959
    7. 'time' → logprob: -12.50131893157959
    8. '```' → logprob: -12.87631893157959
    9. 'prev' → logprob: -13.50131893157959
    10. 'current' → logprob: -13.75131893157959

Token 1095: ' do' (ID: 621)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02183505892753601
    2. ' for' → logprob: -4.396834850311279
    3. 'simulate' → logprob: -5.021834850311279
    4. '       ' → logprob: -6.646834850311279
    5. 'range' → logprob: -7.271834850311279
    6. 'continue' → logprob: -8.146835327148438
    7. 'go' → logprob: -9.146835327148438
    8. 't' → logprob: -9.521835327148438
    9. 'check' → logprob: -10.146835327148438
    10. 'time' → logprob: -10.271835327148438

Token 1096: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0133684566244483
    2. ' for' → logprob: -4.763368606567383
    3. '       ' → logprob: -5.513368606567383
    4. 'range' → logprob: -8.263368606567383
    5. 'visited' → logprob: -9.013368606567383
    6. 'prev' → logprob: -9.263368606567383
    7. '   ' → logprob: -10.013368606567383
    8. 'time' → logprob: -10.138368606567383
    9. 'times' → logprob: -10.263368606567383
    10. 't' → logprob: -10.388368606567383

Token 1097: ' BFS' (ID: 190016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005455489736050367
    2. 'or' → logprob: -5.880455493927002
    3. ' for' → logprob: -6.005455493927002
    4. 'range' → logprob: -9.255455017089844
    5. '```' → logprob: -10.130455017089844
    6. '   ' → logprob: -11.505455017089844
    7. '
' → logprob: -11.630455017089844
    8. 'def' → logprob: -11.755455017089844
    9. '``' → logprob: -11.880455017089844
    10. '`' → logprob: -12.880455017089844

Token 1098: ' connectivity' (ID: 45849)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.28375256061553955
    2. ' from' → logprob: -2.15875244140625
    3. 'queue' → logprob: -2.53375244140625
    4. ' queue' → logprob: -3.78375244140625
    5. '
' → logprob: -4.28375244140625
    6. '       ' → logprob: -4.53375244140625
    7. '   ' → logprob: -5.90875244140625
    8. 'import' → logprob: -7.40875244140625
    9. '(queue' → logprob: -7.40875244140625
    10. 'que' → logprob: -8.40875244140625

Token 1099: ' on' (ID: 402)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.142164945602417
    2. ' queue' → logprob: -2.392164945602417
    3. 'from' → logprob: -3.892164945602417
    4. '
' → logprob: -4.767165184020996
    5. '   ' → logprob: -5.267165184020996
    6. ' from' → logprob: -6.142165184020996
    7. 'q' → logprob: -6.392165184020996
    8. '       ' → logprob: -6.642165184020996
    9. 'for' → logprob: -7.767165184020996
    10. 'que' → logprob: -8.142165184020996

Token 1100: ' dynamic' (ID: 14012)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16825039684772491
    2. ' range' → logprob: -3.168250322341919
    3. 'times' → logprob: -3.418250322341919
    4. 'queue' → logprob: -3.793250322341919
    5. '   ' → logprob: -4.543250560760498
    6. ' times' → logprob: -4.918250560760498
    7. 'for' → logprob: -4.918250560760498
    8. 'each' → logprob: -5.043250560760498
    9. 'time' → logprob: -5.293250560760498
    10. 't' → logprob: -5.793250560760498

Token 1101: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.0260841846466064
    2. 'times' → logprob: -1.4010841846466064
    3. ' graph' → logprob: -2.4010841846466064
    4. ' times' → logprob: -2.5260841846466064
    5. 'time' → logprob: -2.5260841846466064
    6. 'for' → logprob: -3.5260841846466064
    7. 't' → logprob: -3.6510841846466064
    8. ' time' → logprob: -4.026083946228027
    9. ' for' → logprob: -4.026083946228027
    10. '
' → logprob: -4.401083946228027

Token 1102: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10140115767717361
    2. '
' → logprob: -2.9764010906219482
    3. ' from' → logprob: -4.101401329040527
    4. ' for' → logprob: -4.351401329040527
    5. 'from' → logprob: -4.726401329040527
    6. ' at' → logprob: -5.726401329040527
    7. 'for' → logprob: -6.726401329040527
    8. ' queue' → logprob: -7.351401329040527
    9. '        
' → logprob: -7.601401329040527
    10. 'queue' → logprob: -7.601401329040527

Token 1103: ' each' (ID: 2454)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2012588530778885
    2. ' t' → logprob: -2.201258897781372
    3. 'time' → logprob: -2.951258897781372
    4. '   ' → logprob: -4.826258659362793
    5. ' time' → logprob: -5.326258659362793
    6. '       ' → logprob: -6.201258659362793
    7. 'each' → logprob: -6.201258659362793
    8. ' each' → logprob: -7.576258659362793
    9. 'all' → logprob: -7.951258659362793
    10. 'i' → logprob: -8.451258659362793

Token 1104: ' time' (ID: 1058)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.059855807572603226
    2. ' t' → logprob: -3.0598556995391846
    3. 'time' → logprob: -4.559855937957764
    4. ' time' → logprob: -7.434855937957764
    5. '   ' → logprob: -9.559855461120605
    6. '       ' → logprob: -10.434855461120605
    7. '```' → logprob: -10.809855461120605
    8. '`t' → logprob: -11.184855461120605
    9. '
' → logprob: -12.559855461120605
    10. '           ' → logprob: -13.309855461120605

Token 1105: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02241888828575611
    2. '
' → logprob: -4.522418975830078
    3. ' for' → logprob: -4.772418975830078
    4. 'for' → logprob: -6.022418975830078
    5. '        
' → logprob: -8.522418975830078
    6. '   ' → logprob: -9.022418975830078
    7. ',' → logprob: -10.022418975830078
    8. ' 
' → logprob: -12.022418975830078
    9. '  
' → logprob: -12.022418975830078
    10. '           ' → logprob: -12.147418975830078

Token 1106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3225822150707245
    2. ' for' → logprob: -1.6975822448730469
    3. 'for' → logprob: -2.572582244873047
    4. '
' → logprob: -4.572582244873047
    5. '```' → logprob: -5.197582244873047
    6. '``' → logprob: -8.697582244873047
    7. '        
' → logprob: -9.447582244873047
    8. '   ' → logprob: -9.697582244873047
    9. ' 
' → logprob: -10.447582244873047
    10. '           ' → logprob: -10.947582244873047

Token 1107: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18193595111370087
    2. '       ' → logprob: -1.8069359064102173
    3. 'from' → logprob: -6.931935787200928
    4. ' for' → logprob: -7.681935787200928
    5. '
' → logprob: -7.681935787200928
    6. 'visited' → logprob: -8.806936264038086
    7. '   ' → logprob: -9.681936264038086
    8. '```' → logprob: -9.931936264038086
    9. '        
' → logprob: -11.556936264038086
    10. 'queue' → logprob: -12.181936264038086

Token 1108: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004659980535507202
    2. 'from' → logprob: -5.504660129547119
    3. 'visited' → logprob: -8.129659652709961
    4. '       ' → logprob: -8.754659652709961
    5. ' for' → logprob: -9.879659652709961
    6. 'queue' → logprob: -10.379659652709961
    7. 'import' → logprob: -10.879659652709961
    8. '```' → logprob: -11.254659652709961
    9. 'times' → logprob: -11.879659652709961
    10. 'time' → logprob: -13.129659652709961

Token 1109: ' propagate' (ID: 125190)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0902352333068848
    2. 'for' → logprob: -1.4652352333068848
    3. '```' → logprob: -1.7152352333068848
    4. 'continue' → logprob: -2.8402352333068848
    5. '
' → logprob: -2.8402352333068848
    6. 'find' → logprob: -4.340235233306885
    7. 'simulate' → logprob: -4.465235233306885
    8. ' range' → logprob: -4.840235233306885
    9. 'add' → logprob: -5.090235233306885
    10. '   ' → logprob: -5.215235233306885

Token 1110: ' data' (ID: 1238)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12100987136363983
    2. ' for' → logprob: -2.3710098266601562
    3. 't' → logprob: -4.121009826660156
    4. 'time' → logprob: -6.246009826660156
    5. '
' → logprob: -7.121009826660156
    6. ' t' → logprob: -7.871009826660156
    7. '       ' → logprob: -7.996009826660156
    8. '   ' → logprob: -8.121009826660156
    9. 'range' → logprob: -8.621009826660156
    10. '```' → logprob: -9.121009826660156

Token 1111: ' between' (ID: 2870)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.373602956533432
    2. ' for' → logprob: -1.2486029863357544
    3. '       ' → logprob: -3.748602867126465
    4. 'from' → logprob: -7.123602867126465
    5. '
' → logprob: -8.623602867126465
    6. ' from' → logprob: -9.498602867126465
    7. '   ' → logprob: -9.623602867126465
    8. '```' → logprob: -9.623602867126465
    9. 't' → logprob: -10.248602867126465
    10. 'import' → logprob: -11.248602867126465

Token 1112: ' times' (ID: 4238)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.1726499795913696
    2. '0' → logprob: -1.2976499795913696
    3. 't' → logprob: -1.6726499795913696
    4. 'times' → logprob: -1.7976499795913696
    5. '1' → logprob: -3.04764986038208
    6. ' times' → logprob: -5.54764986038208
    7. 'robots' → logprob: -5.67264986038208
    8. ' t' → logprob: -6.42264986038208
    9. ' time' → logprob: -6.54764986038208
    10. 'all' → logprob: -6.67264986038208

Token 1113: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1797960251569748
    2. '       ' → logprob: -2.179795980453491
    3. 'for' → logprob: -3.054795980453491
    4. '
' → logprob: -5.55479621887207
    5. '   ' → logprob: -8.17979621887207
    6. 't' → logprob: -9.67979621887207
    7. ' t' → logprob: -10.17979621887207
    8. ' current' → logprob: -10.80479621887207
    9. ' time' → logprob: -10.92979621887207
    10. ',' → logprob: -11.05479621887207

Token 1114: ' data' (ID: 1238)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01182471588253975
    2. ' for' → logprob: -5.261824607849121
    3. 'from' → logprob: -6.011824607849121
    4. 'current' → logprob: -6.636824607849121
    5. 'visited' → logprob: -7.136824607849121
    6. 'have' → logprob: -8.011824607849121
    7. 'times' → logprob: -8.136824607849121
    8. 'import' → logprob: -8.386824607849121
    9. 'data' → logprob: -8.386824607849121
    10. 'prev' → logprob: -8.511824607849121

Token 1115: ' only' (ID: 1606)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_at' → logprob: -1.1914923191070557
    2. ' =' → logprob: -1.8164923191070557
    3. '_times' → logprob: -2.1914923191070557
    4. 'times' → logprob: -2.6914923191070557
    5. '=' → logprob: -3.0664923191070557
    6. '_updated' → logprob: -3.3164923191070557
    7. 'for' → logprob: -3.4414923191070557
    8. '_prev' → logprob: -3.4414923191070557
    9. '_new' → logprob: -3.5664923191070557
    10. '_current' → logprob: -3.6914923191070557

Token 1116: ' accumulate' (ID: 74226)
  Prédit: 'prop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prop' → logprob: -0.47085824608802795
    2. 'sp' → logprob: -1.8458582162857056
    3. 'updates' → logprob: -2.720858335494995
    4. 'can' → logprob: -2.970858335494995
    5. 'trans' → logprob: -2.970858335494995
    6. '=' → logprob: -4.220858097076416
    7. 'moves' → logprob: -4.970858097076416
    8. 'gets' → logprob: -4.970858097076416
    9. 'update' → logprob: -5.595858097076416
    10. 'adds' → logprob: -6.220858097076416

Token 1117: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7763783931732178
    2. '       ' → logprob: -0.7763783931732178
    3. ' for' → logprob: -2.6513783931732178
    4. 'for' → logprob: -4.901378631591797
    5. '        
' → logprob: -7.026378631591797
    6. ' 
' → logprob: -7.776378631591797
    7. '   ' → logprob: -8.901378631591797
    8. '\n' → logprob: -9.526378631591797
    9. '
' → logprob: -9.776378631591797
    10. '  
' → logprob: -10.276378631591797

Token 1118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06705139577388763
    2. 'for' → logprob: -3.317051410675049
    3. ' for' → logprob: -3.817051410675049
    4. '```' → logprob: -5.692051410675049
    5. '   ' → logprob: -6.192051410675049
    6. '
' → logprob: -6.817051410675049
    7. '``' → logprob: -10.56705093383789
    8. '	for' → logprob: -10.56705093383789
    9. '        
' → logprob: -10.69205093383789
    10. '           ' → logprob: -12.44205093383789

Token 1119: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03206580504775047
    2. '       ' → logprob: -3.5320658683776855
    3. ' for' → logprob: -6.1570658683776855
    4. 't' → logprob: -9.282065391540527
    5. '   ' → logprob: -10.032065391540527
    6. '
' → logprob: -10.157065391540527
    7. 'time' → logprob: -11.657065391540527
    8. '```' → logprob: -12.532065391540527
    9. 'current' → logprob: -13.657065391540527
    10. 'from' → logprob: -13.907065391540527

Token 1120: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.20257093012332916
    2. 't' → logprob: -1.702570915222168
    3. ' time' → logprob: -7.327570915222168
    4. 'time' → logprob: -8.077570915222168
    5. '   ' → logprob: -9.077570915222168
    6. ' _' → logprob: -10.827570915222168
    7. 'i' → logprob: -11.702570915222168
    8. ' current' → logprob: -11.827570915222168
    9. '```' → logprob: -12.077570915222168
    10. ' ' → logprob: -12.577570915222168

Token 1121: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008806372061371803
    2. 'in' → logprob: -4.758806228637695
    3. ' ' → logprob: -8.758806228637695
    4. '   ' → logprob: -11.758806228637695
    5. '0' → logprob: -12.258806228637695
    6. 'range' → logprob: -12.383806228637695
    7. ')' → logprob: -12.758806228637695
    8. ',' → logprob: -12.758806228637695
    9. ' ,' → logprob: -13.008806228637695
    10. ' range' → logprob: -13.758806228637695

Token 1122: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07891127467155457
    2. ' range' → logprob: -2.578911304473877
    3. '0' → logprob: -11.078910827636719
    4. ' ' → logprob: -12.953910827636719
    5. '   ' → logprob: -13.328910827636719
    6. '(range' → logprob: -14.203910827636719
    7. '	range' → logprob: -14.828910827636719
    8. '  ' → logprob: -15.453910827636719
    9. '```' → logprob: -15.453910827636719
    10. '
' → logprob: -15.828910827636719

Token 1123: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06247377023100853
    2. '(T' → logprob: -2.812473773956299
    3. '1' → logprob: -8.31247329711914
    4. '(t' → logprob: -8.81247329711914
    5. '0' → logprob: -9.56247329711914
    6. '(
' → logprob: -10.18747329711914
    7. ' (' → logprob: -13.06247329711914
    8. 'T' → logprob: -14.81247329711914
    9. '   ' → logprob: -14.81247329711914
    10. ' ' → logprob: -15.43747329711914

Token 1124: '0' (ID: 15)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.1756405383348465
    2. '1' → logprob: -2.30064058303833
    3. '0' → logprob: -2.80064058303833
    4. 't' → logprob: -9.550640106201172
    5. ' T' → logprob: -10.675640106201172
    6. '   ' → logprob: -11.175640106201172
    7. ' ' → logprob: -12.675640106201172
    8. '(T' → logprob: -13.550640106201172
    9. '(' → logprob: -14.675640106201172
    10. '       ' → logprob: -15.300640106201172

Token 1125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07389538735151291
    2. ' ,' → logprob: -2.8238954544067383
    3. '+' → logprob: -4.823895454406738
    4. '   ' → logprob: -6.823895454406738
    5. '1' → logprob: -7.198895454406738
    6. ',T' → logprob: -7.448895454406738
    7. ' +' → logprob: -7.573895454406738
    8. '(' → logprob: -8.573895454406738
    9. 'T' → logprob: -8.698895454406738
    10. '0' → logprob: -9.073895454406738

Token 1126: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -9.491498531133402e-06
    2. '   ' → logprob: -11.875009536743164
    3. ' T' → logprob: -13.000009536743164
    4. '       ' → logprob: -16.125009536743164
    5. '1' → logprob: -17.000009536743164
    6. '           ' → logprob: -17.750009536743164
    7. ' ' → logprob: -18.000009536743164
    8. '
' → logprob: -18.500009536743164
    9. '	T' → logprob: -18.750009536743164
    10. '  ' → logprob: -19.000009536743164

Token 1127: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008095058728940785
    2. ' +' → logprob: -7.125809669494629
    3. '):
' → logprob: -13.000809669494629
    4. '):' → logprob: -13.625809669494629
    5. '   ' → logprob: -14.000809669494629
    6. '+
' → logprob: -14.625809669494629
    7. '```' → logprob: -15.500809669494629
    8. '()+' → logprob: -16.500808715820312
    9. '
' → logprob: -16.875808715820312
    10. ')+' → logprob: -17.625808715820312

Token 1128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. '
' → logprob: -13.750003814697266
    3. ' ' → logprob: -13.875003814697266
    4. '   ' → logprob: -13.875003814697266
    5. '+' → logprob: -15.500003814697266
    6. '```' → logprob: -16.625003814697266
    7. ')' → logprob: -16.750003814697266
    8. '):
' → logprob: -17.250003814697266
    9. '2' → logprob: -18.000003814697266
    10. '       ' → logprob: -18.125003814697266

Token 1129: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20170393586158752
    2. '):' → logprob: -1.7017039060592651
    3. ':' → logprob: -9.076704025268555
    4. '   ' → logprob: -9.451704025268555
    5. '+' → logprob: -10.701704025268555
    6. ':
' → logprob: -10.701704025268555
    7. '):
' → logprob: -11.326704025268555
    8. '       ' → logprob: -11.701704025268555
    9. ')' → logprob: -11.951704025268555
    10. ',' → logprob: -11.951704025268555

Token 1130: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6437969207763672
    2. '       ' → logprob: -0.7687969207763672
    3. '```' → logprob: -5.643796920776367
    4. '    
' → logprob: -6.143796920776367
    5. '        
' → logprob: -6.393796920776367
    6. '           ' → logprob: -6.643796920776367
    7. '
' → logprob: -6.893796920776367
    8. ' groups' → logprob: -7.643796920776367
    9. ' positions' → logprob: -8.768796920776367
    10. 'groups' → logprob: -9.018796920776367

Token 1131: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' (adapté à ' groups') → logprob: -0.0009904148755595088
    2. '       ' → logprob: -7.375990390777588
    3. '           ' → logprob: -8.375990867614746
    4. '   ' → logprob: -9.375990867614746
    5. ' groups' → logprob: -10.125990867614746
    6. 'components' → logprob: -12.250990867614746
    7. 'for' → logprob: -14.250990867614746
    8. 'group' → logprob: -14.625990867614746
    9. 'roups' → logprob: -15.000990867614746
    10. 'connected' → logprob: -15.125990867614746

Token 1132: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048747241497039795
    2. ' =' → logprob: -3.0487473011016846
    3. ' in' → logprob: -9.548747062683105
    4. ':' → logprob: -10.548747062683105
    5. ')' → logprob: -11.173747062683105
    6. 'for' → logprob: -11.673747062683105
    7. '   ' → logprob: -12.298747062683105
    8. '           ' → logprob: -12.298747062683105
    9. ' at' → logprob: -12.298747062683105
    10. '<|end|>' → logprob: -12.298747062683105

Token 1133: ' reachable' (ID: 143580)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.0001239196863025427
    2. ' reachable' → logprob: -9.000123977661133
    3. 'reach' → logprob: -15.250123977661133
    4. '   ' → logprob: -15.500123977661133
    5. '```' → logprob: -18.875123977661133
    6. 'ready' → logprob: -19.375123977661133
    7. '
' → logprob: -19.625123977661133
    8. '  ' → logprob: -20.125123977661133
    9. '       ' → logprob: -20.375123977661133
    10. 'read' → logprob: -21.000123977661133

Token 1134: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.440506407059729e-05
    2. 'robots' → logprob: -10.37503433227539
    3. '```' → logprob: -13.50003433227539
    4. ' (' → logprob: -14.00003433227539
    5. '(
' → logprob: -14.50003433227539
    6. '
' → logprob: -15.25003433227539
    7. '(robot' → logprob: -16.25003433227539
    8. ',' → logprob: -18.25003433227539
    9. '   ' → logprob: -18.37503433227539
    10. ')' → logprob: -18.87503433227539

Token 1135: 'robots' (ID: 136360)
  Prédit: 'robots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' → logprob: -1.0683535037969705e-05
    2. ')' → logprob: -12.25001049041748
    3. ' robots' → logprob: -12.50001049041748
    4. '```' → logprob: -14.12501049041748
    5. 'rob' → logprob: -14.62501049041748
    6. '(' → logprob: -14.62501049041748
    7. 'robot' → logprob: -15.50001049041748
    8. ',' → logprob: -16.250011444091797
    9. '),' → logprob: -17.375011444091797
    10. '[' → logprob: -17.375011444091797

Token 1136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005446366500109434
    2. '(' → logprob: -5.255446434020996
    3. ',[' → logprob: -9.380446434020996
    4. ' ,' → logprob: -9.505446434020996
    5. '[' → logprob: -10.880446434020996
    6. ',(' → logprob: -11.880446434020996
    7. '```' → logprob: -12.005446434020996
    8. ',
' → logprob: -12.255446434020996
    9. '           ' → logprob: -12.380446434020996
    10. ')' → logprob: -13.255446434020996

Token 1137: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.016039881855249405
    2. ' R' → logprob: -4.141039848327637
    3. ')' → logprob: -12.266039848327637
    4. '           ' → logprob: -15.766039848327637
    5. ',' → logprob: -16.016040802001953
    6. ' ' → logprob: -16.266040802001953
    7. '               ' → logprob: -16.391040802001953
    8. ' ' → logprob: -16.391040802001953
    9. '   ' → logprob: -16.516040802001953
    10. ',R' → logprob: -16.516040802001953

Token 1138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014041600516065955
    2. ',t' → logprob: -6.626404285430908
    3. '           ' → logprob: -10.12640380859375
    4. ' ,' → logprob: -10.75140380859375
    5. '[t' → logprob: -12.37640380859375
    6. '(t' → logprob: -12.62640380859375
    7. ',
' → logprob: -12.75140380859375
    8. '```' → logprob: -13.62640380859375
    9. 't' → logprob: -14.12640380859375
    10. '   ' → logprob: -14.50140380859375

Token 1139: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -2.7968066206085496e-05
    2. ' t' → logprob: -10.500027656555176
    3. ')t' → logprob: -16.375028610229492
    4. ')' → logprob: -16.625028610229492
    5. '           ' → logprob: -16.875028610229492
    6. '`t' → logprob: -17.625028610229492
    7. '
' → logprob: -17.750028610229492
    8. '```' → logprob: -17.750028610229492
    9. '   ' → logprob: -18.125028610229492
    10. '(t' → logprob: -19.750028610229492

Token 1140: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.05653632804751396
    2. ')' → logprob: -2.9315364360809326
    3. '           ' → logprob: -6.4315361976623535
    4. '):
' → logprob: -10.431536674499512
    5. ')
' → logprob: -11.681536674499512
    6. ')

' → logprob: -13.556536674499512
    7. '       ' → logprob: -14.181536674499512
    8. '
' → logprob: -14.556536674499512
    9. ' )
' → logprob: -14.681536674499512
    10. ']
' → logprob: -15.681536674499512

Token 1141: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03521472588181496
    2. 'for' → logprob: -3.53521466255188
    3. ' for' → logprob: -5.410214900970459
    4. '       ' → logprob: -7.910214900970459
    5. '   ' → logprob: -8.1602144241333
    6. '```' → logprob: -8.6602144241333
    7. '
' → logprob: -9.1602144241333
    8. '            
' → logprob: -10.7852144241333
    9. '               ' → logprob: -11.2852144241333
    10. '        
' → logprob: -12.7852144241333

Token 1142: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20442675054073334
    2. 'for' → logprob: -1.7044267654418945
    3. ' for' → logprob: -5.8294267654418945
    4. 'new' → logprob: -10.204426765441895
    5. '       ' → logprob: -11.079426765441895
    6. '   ' → logprob: -11.829426765441895
    7. '
' → logprob: -12.454426765441895
    8. '```' → logprob: -13.579426765441895
    9. 'next' → logprob: -13.579426765441895
    10. '               ' → logprob: -13.829426765441895

Token 1143: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1015780046582222
    2. '           ' → logprob: -2.3515779972076416
    3. ' for' → logprob: -6.601578235626221
    4. '       ' → logprob: -11.851577758789062
    5. '   ' → logprob: -12.601577758789062
    6. '               ' → logprob: -14.351577758789062
    7. '```' → logprob: -14.851577758789062
    8. '
' → logprob: -15.226577758789062
    9. 'have' → logprob: -16.226577758789062
    10. ' ' → logprob: -16.351577758789062

Token 1144: ' each' (ID: 2454)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.002238162560388446
    2. 'g' → logprob: -6.8772382736206055
    3. ' group' → logprob: -7.1272382736206055
    4. 'grp' → logprob: -7.8772382736206055
    5. '   ' → logprob: -11.627238273620605
    6. ' g' → logprob: -12.377238273620605
    7. '
' → logprob: -13.252238273620605
    8. 'comp' → logprob: -13.252238273620605
    9. '```' → logprob: -13.377238273620605
    10. 'groups' → logprob: -14.377238273620605

Token 1145: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.0020612843800336123
    2. ' group' → logprob: -6.502061367034912
    3. 'g' → logprob: -7.502061367034912
    4. 'grp' → logprob: -12.752060890197754
    5. ' g' → logprob: -13.127060890197754
    6. 'groups' → logprob: -13.502060890197754
    7. '   ' → logprob: -14.627060890197754
    8. '"group' → logprob: -17.25206184387207
    9. 'comp' → logprob: -17.50206184387207
    10. '	group' → logprob: -17.75206184387207

Token 1146: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5708791613578796
    2. '           ' → logprob: -1.3208792209625244
    3. '               ' → logprob: -2.1958792209625244
    4. 'for' → logprob: -3.5708792209625244
    5. ':' → logprob: -3.6958792209625244
    6. ',' → logprob: -6.695878982543945
    7. '):
' → logprob: -7.195878982543945
    8. ' for' → logprob: -7.195878982543945
    9. 'in' → logprob: -7.945878982543945
    10. '
' → logprob: -8.070878982543945

Token 1147: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006815304048359394
    2. ' for' → logprob: -5.006815433502197
    3. '           ' → logprob: -9.256814956665039
    4. '               ' → logprob: -13.256814956665039
    5. 'data' → logprob: -14.131814956665039
    6. 'have' → logprob: -14.256814956665039
    7. 'members' → logprob: -15.006814956665039
    8. 'new' → logprob: -15.131814956665039
    9. 'if' → logprob: -16.00681495666504
    10. 'any' → logprob: -16.13181495666504

Token 1148: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.015071716159582138
    2. ' any' → logprob: -4.265071868896484
    3. 'len' → logprob: -7.015071868896484
    4. ' len' → logprob: -12.640071868896484
    5. ' ' → logprob: -13.015071868896484
    6. '   ' → logprob: -13.265071868896484
    7. '
' → logprob: -13.515071868896484
    8. 'not' → logprob: -14.765071868896484
    9. '(any' → logprob: -15.265071868896484
    10. '  ' → logprob: -15.515071868896484

Token 1149: ' has' (ID: 853)
  Prédit: 'member'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'member' → logprob: -0.008721290156245232
    2. ' member' → logprob: -5.008721351623535
    3. 'robot' → logprob: -6.508721351623535
    4. 'i' → logprob: -8.383721351623535
    5. 'm' → logprob: -9.508721351623535
    6. ' robot' → logprob: -10.133721351623535
    7. '   ' → logprob: -10.258721351623535
    8. '(member' → logprob: -10.508721351623535
    9. 'have' → logprob: -10.883721351623535
    10. '(' → logprob: -11.258721351623535

Token 1150: ' data' (ID: 1238)
  Prédit: 'member'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'member' → logprob: -0.8753772377967834
    2. 'have' → logprob: -1.1253771781921387
    3. '_data' → logprob: -2.1253771781921387
    4. 'data' → logprob: -2.3753771781921387
    5. 'any' → logprob: -4.250377178192139
    6. 'a' → logprob: -4.375377178192139
    7. '
' → logprob: -5.000377178192139
    8. 'robot' → logprob: -5.875377178192139
    9. 'Data' → logprob: -6.000377178192139
    10. 'someone' → logprob: -6.250377178192139

Token 1151: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9332894086837769
    2. ':
' → logprob: -1.0582894086837769
    3. 'in' → logprob: -1.5582894086837769
    4. ' in' → logprob: -3.9332895278930664
    5. ':' → logprob: -4.558289527893066
    6. '           ' → logprob: -4.558289527893066
    7. ',' → logprob: -5.933289527893066
    8. '):
' → logprob: -6.433289527893066
    9. 'if' → logprob: -6.933289527893066
    10. '```' → logprob: -8.433289527893066

Token 1152: ' all' (ID: 722)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.2362240105867386
    2. ' for' → logprob: -2.6112239360809326
    3. 'for' → logprob: -2.6112239360809326
    4. ' have' → logprob: -2.9862239360809326
    5. '               ' → logprob: -4.861224174499512
    6. '           ' → logprob: -5.611224174499512
    7. 'has' → logprob: -7.861224174499512
    8. ' new' → logprob: -8.736224174499512
    9. 'any' → logprob: -8.736224174499512
    10. '
' → logprob: -8.736224174499512

Token 1153: ' get' (ID: 717)
  Prédit: '.update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.3696717321872711
    2. '.' → logprob: -1.3696717023849487
    3. '.add' → logprob: -3.6196718215942383
    4. 'have' → logprob: -4.244671821594238
    5. 'update' → logprob: -5.494671821594238
    6. '           ' → logprob: -6.119671821594238
    7. 'member' → logprob: -6.994671821594238
    8. 'in' → logprob: -7.369671821594238
    9. 'members' → logprob: -7.494671821594238
    10. '               ' → logprob: -7.494671821594238

Token 1154: ' data' (ID: 1238)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.23684042692184448
    2. 'data' → logprob: -1.8618404865264893
    3. '           ' → logprob: -4.23684024810791
    4. 'group' → logprob: -4.23684024810791
    5. '   ' → logprob: -4.61184024810791
    6. ' data' → logprob: -5.73684024810791
    7. '       ' → logprob: -6.11184024810791
    8. ' group' → logprob: -6.11184024810791
    9. '```' → logprob: -6.23684024810791
    10. 'token' → logprob: -6.73684024810791

Token 1155: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015514022670686245
    2. '
' → logprob: -6.626551628112793
    3. ',' → logprob: -9.876551628112793
    4. '               ' → logprob: -10.251551628112793
    5. ' for' → logprob: -10.626551628112793
    6. ':
' → logprob: -10.751551628112793
    7. '   ' → logprob: -10.751551628112793
    8. '            
' → logprob: -11.001551628112793
    9. 'for' → logprob: -11.126551628112793
    10. ',
' → logprob: -12.001551628112793

Token 1156: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025960952043533325
    2. '
' → logprob: -4.150960922241211
    3. '               ' → logprob: -5.400960922241211
    4. '```' → logprob: -6.025960922241211
    5. '            
' → logprob: -7.025960922241211
    6. ' for' → logprob: -7.025960922241211
    7. '                   ' → logprob: -8.525960922241211
    8. '  
' → logprob: -9.025960922241211
    9. '<|end|>' → logprob: -9.150960922241211
    10. '    
' → logprob: -9.150960922241211

Token 1157: ' new' (ID: 620)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2056988626718521
    2. ' for' → logprob: -1.955698847770691
    3. '
' → logprob: -3.4556989669799805
    4. 'for' → logprob: -4.7056989669799805
    5. ' 
' → logprob: -6.9556989669799805
    6. '   ' → logprob: -7.0806989669799805
    7. '            
' → logprob: -7.7056989669799805
    8. '    
' → logprob: -8.08069896697998
    9. '```' → logprob: -8.08069896697998
    10. '       ' → logprob: -8.33069896697998

Token 1158: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.016652049496769905
    2. '_tokens' → logprob: -4.6416521072387695
    3. '_have' → logprob: -6.1416521072387695
    4. ' =' → logprob: -6.5166521072387695
    5. 'data' → logprob: -7.1416521072387695
    6. '_' → logprob: -7.6416521072387695
    7. '```' → logprob: -7.6416521072387695
    8. '=' → logprob: -8.26665210723877
    9. '   ' → logprob: -8.51665210723877
    10. 'for' → logprob: -8.89165210723877

Token 1159: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.290848046541214
    2. ' =' → logprob: -1.4158480167388916
    3. '.update' → logprob: -4.915848255157471
    4. '.' → logprob: -7.040848255157471
    5. '=set' → logprob: -7.415848255157471
    6. '.add' → logprob: -8.040847778320312
    7. '_update' → logprob: -8.665847778320312
    8. '   ' → logprob: -9.665847778320312
    9. ' |=' → logprob: -10.040847778320312
    10. '.=' → logprob: -10.540847778320312

Token 1160: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0006672830786556005
    2. ' set' → logprob: -7.500667095184326
    3. 'have' → logprob: -9.250667572021484
    4. '{' → logprob: -11.500667572021484
    5. '   ' → logprob: -12.750667572021484
    6. '=set' → logprob: -13.250667572021484
    7. '       ' → logprob: -13.750667572021484
    8. '           ' → logprob: -14.250667572021484
    9. '(set' → logprob: -14.875667572021484
    10. 'False' → logprob: -15.750667572021484

Token 1161: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5872162580490112
    2. '()
' → logprob: -0.8372162580490112
    3. '(group' → logprob: -4.587216377258301
    4. '(groups' → logprob: -7.087216377258301
    5. '()

' → logprob: -9.8372163772583
    6. '(
' → logprob: -10.2122163772583
    7. '();' → logprob: -10.5872163772583
    8. '=' → logprob: -11.2122163772583
    9. '([' → logprob: -11.4622163772583
    10. '.union' → logprob: -11.5872163772583

Token 1162: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012186899548396468
    2. ' for' → logprob: -7.376218795776367
    3. 'for' → logprob: -7.501218795776367
    4. '               ' → logprob: -11.126218795776367
    5. '   ' → logprob: -12.501218795776367
    6. '            
' → logprob: -12.876218795776367
    7. '                   ' → logprob: -12.876218795776367
    8. '       ' → logprob: -13.001218795776367
    9. '	       ' → logprob: -13.126218795776367
    10. '<|end|>' → logprob: -13.126218795776367

Token 1163: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3285061717033386
    2. ' for' → logprob: -1.3285062313079834
    3. '           ' → logprob: -4.203505992889404
    4. '               ' → logprob: -9.453506469726562
    5. '            
' → logprob: -10.953506469726562
    6. '```' → logprob: -11.328506469726562
    7. '   ' → logprob: -11.453506469726562
    8. 'group' → logprob: -11.578506469726562
    9. '
' → logprob: -11.703506469726562
    10. '                   ' → logprob: -11.703506469726562

Token 1164: ' g' (ID: 329)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.001980022294446826
    2. 'g' → logprob: -6.251979827880859
    3. 'grp' → logprob: -10.00197982788086
    4. ' group' → logprob: -12.50197982788086
    5. 'comp' → logprob: -13.00197982788086
    6. ' g' → logprob: -16.25197982788086
    7. '   ' → logprob: -17.00197982788086
    8. 'gr' → logprob: -19.25197982788086
    9. 'groups' → logprob: -19.37697982788086
    10. 'gid' → logprob: -20.37697982788086

Token 1165: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04886826127767563
    2. 'in' → logprob: -3.048868179321289
    3. ' ' → logprob: -9.423868179321289
    4. 'g' → logprob: -9.673868179321289
    5. ' g' → logprob: -10.673868179321289
    6. 'i' → logprob: -10.673868179321289
    7. ')' → logprob: -10.923868179321289
    8. 'n' → logprob: -11.548868179321289
    9. '_in' → logprob: -11.673868179321289
    10. 's' → logprob: -12.048868179321289

Token 1166: ' groups' (ID: 8896)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.029847217723727226
    2. 'groups' → logprob: -3.5298471450805664
    3. 'group' → logprob: -9.779847145080566
    4. ' g' → logprob: -10.779847145080566
    5. '(g' → logprob: -11.904847145080566
    6. ' groups' → logprob: -12.279847145080566
    7. '(groups' → logprob: -12.529847145080566
    8. '[g' → logprob: -13.404847145080566
    9. '   ' → logprob: -13.529847145080566
    10. ' ' → logprob: -15.404847145080566

Token 1167: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4359704852104187
    2. '               ' → logprob: -1.5609705448150635
    3. ':' → logprob: -2.0609705448150635
    4. ' in' → logprob: -5.185970306396484
    5. ' if' → logprob: -6.185970306396484
    6. '):
' → logprob: -6.685970306396484
    7. 'in' → logprob: -6.685970306396484
    8. 'if' → logprob: -6.810970306396484
    9. '           ' → logprob: -7.310970306396484
    10. '{' → logprob: -7.560970306396484

Token 1168: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007229181355796754
    2. ' if' → logprob: -7.750722885131836
    3. ' for' → logprob: -8.750722885131836
    4. 'if' → logprob: -9.750722885131836
    5. 'for' → logprob: -10.625722885131836
    6. '```' → logprob: -10.875722885131836
    7. '                   ' → logprob: -11.500722885131836
    8. '           ' → logprob: -12.500722885131836
    9. '                               ' → logprob: -12.500722885131836
    10. '                       ' → logprob: -12.500722885131836

Token 1169: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.284964919090271
    2. ' for' → logprob: -1.909964919090271
    3. '                   ' → logprob: -3.0349650382995605
    4. 'if' (adapté à ' if') → logprob: -4.0349650382995605
    5. '               ' → logprob: -4.0349650382995605
    6. '                       ' → logprob: -5.1599650382995605
    7. '   ' → logprob: -6.0349650382995605
    8. 'for' → logprob: -6.4099650382995605
    9. '           ' → logprob: -6.5349650382995605
    10. '                           ' → logprob: -7.2849650382995605

Token 1170: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.006064598448574543
    2. ' any' → logprob: -5.506064414978027
    3. 'len' → logprob: -6.256064414978027
    4. 'not' → logprob: -9.756064414978027
    5. '   ' → logprob: -12.631064414978027
    6. ' not' → logprob: -13.381064414978027
    7. '(any' → logprob: -13.631064414978027
    8. ' len' → logprob: -13.881064414978027
    9. ' ' → logprob: -15.381064414978027
    10. '
' → logprob: -16.131065368652344

Token 1171: '(r' (ID: 4729)
  Prédit: '(robot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(robot' → logprob: -0.3294677734375
    2. '(member' → logprob: -1.5794677734375
    3. '(i' → logprob: -3.0794677734375
    4. '((' → logprob: -4.5794677734375
    5. '(u' → logprob: -4.9544677734375
    6. '(x' → logprob: -5.3294677734375
    7. '(node' → logprob: -5.9544677734375
    8. 'member' → logprob: -6.9544677734375
    9. '(r' → logprob: -6.9544677734375
    10. '(' → logprob: -7.2044677734375

Token 1172: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3876851201057434
    2. ' in' → logprob: -1.1376850605010986
    3. 'r' → logprob: -7.387685298919678
    4. ' ' → logprob: -10.26268482208252
    5. 'i' → logprob: -10.38768482208252
    6. 'n' → logprob: -10.38768482208252
    7. '
' → logprob: -11.01268482208252
    8. '   ' → logprob: -11.13768482208252
    9. ' r' → logprob: -11.51268482208252
    10. 'for' → logprob: -11.63768482208252

Token 1173: ' have' (ID: 679)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -3.47626737493556e-05
    2. 'g' → logprob: -10.87503433227539
    3. ' have' → logprob: -11.12503433227539
    4. 'new' → logprob: -14.37503433227539
    5. ' g' → logprob: -15.50003433227539
    6. '   ' → logprob: -16.37503433227539
    7. '           ' → logprob: -16.62503433227539
    8. '
' → logprob: -17.75003433227539
    9. 'has' → logprob: -17.75003433227539
    10. '               ' → logprob: -18.12503433227539

Token 1174: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.00046606172691099346
    2. 'g' → logprob: -8.125466346740723
    3. 'data' → logprob: -8.875466346740723
    4. 'r' → logprob: -11.750466346740723
    5. '           ' → logprob: -12.000466346740723
    6. ' g' → logprob: -12.500466346740723
    7. '```' → logprob: -13.000466346740723
    8. '   ' → logprob: -13.250466346740723
    9. '``' → logprob: -13.625466346740723
    10. '               ' → logprob: -13.875466346740723

Token 1175: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07907143235206604
    2. 'for' → logprob: -2.579071521759033
    3. '                   ' → logprob: -9.079071044921875
    4. ')' → logprob: -11.579071044921875
    5. ' g' → logprob: -11.579071044921875
    6. '               ' → logprob: -11.954071044921875
    7. '                    ' → logprob: -12.079071044921875
    8. '                  ' → logprob: -12.079071044921875
    9. '                       ' → logprob: -12.204071044921875
    10. 'g' → logprob: -12.204071044921875

Token 1176: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02591913752257824
    2. 'g' → logprob: -3.775919198989868
    3. ' r' → logprob: -6.025918960571289
    4. ' g' → logprob: -8.275918960571289
    5. '   ' → logprob: -15.775918960571289
    6. ' ' → logprob: -16.90091896057129
    7. '  ' → logprob: -18.52591896057129
    8. '	r' → logprob: -18.77591896057129
    9. '    ' → logprob: -19.15091896057129
    10. '_r' → logprob: -19.27591896057129

Token 1177: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9209215044975281
    2. 'r' → logprob: -1.5459215641021729
    3. ' r' → logprob: -1.6709215641021729
    4. 'in' → logprob: -2.170921564102173
    5. ' g' → logprob: -2.795921564102173
    6. 'g' → logprob: -3.670921564102173
    7. ')' → logprob: -10.295921325683594
    8. ' ' → logprob: -11.670921325683594
    9. 's' → logprob: -11.795921325683594
    10. ' )' → logprob: -12.045921325683594

Token 1178: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.676292231422849e-05
    2. ' g' → logprob: -11.000017166137695
    3. '   ' → logprob: -20.250017166137695
    4. '	g' → logprob: -20.500017166137695
    5. '[g' → logprob: -21.250017166137695
    6. '
' → logprob: -22.125017166137695
    7. ' ' → logprob: -22.375017166137695
    8. ')' → logprob: -23.125017166137695
    9. '    ' → logprob: -23.250017166137695
    10. '```' → logprob: -23.250017166137695

Token 1179: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0007498288759961724
    2. '                   ' → logprob: -7.7507500648498535
    3. '):' → logprob: -8.625749588012695
    4. ':
' → logprob: -9.250749588012695
    5. '               ' → logprob: -10.875749588012695
    6. ')' → logprob: -12.125749588012695
    7. ':' → logprob: -12.250749588012695
    8. '                       ' → logprob: -12.750749588012695
    9. ')==' → logprob: -12.750749588012695
    10. '):
' → logprob: -13.000749588012695

Token 1180: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0023882566019892693
    2. ' new' → logprob: -6.1273884773254395
    3. 'new' → logprob: -9.502388000488281
    4. '                       ' → logprob: -9.627388000488281
    5. '               ' → logprob: -11.377388000488281
    6. '                           ' → logprob: -11.502388000488281
    7. '                  ' → logprob: -12.127388000488281
    8. '[new' → logprob: -12.377388000488281
    9. '                    
' → logprob: -12.627388000488281
    10. ' =' → logprob: -12.752388000488281

Token 1181: ' for' (ID: 395)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.012679868377745152
    2. ' new' → logprob: -5.0126800537109375
    3. '                       ' → logprob: -5.2626800537109375
    4. 'for' (adapté à ' for') → logprob: -7.2626800537109375
    5. '                   ' → logprob: -10.262680053710938
    6. ' for' → logprob: -10.762680053710938
    7. '   ' → logprob: -12.512680053710938
    8. '
' → logprob: -13.262680053710938
    9. '       ' → logprob: -14.387680053710938
    10. '                      ' → logprob: -14.762680053710938

Token 1182: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0003709701995830983
    2. ' r' → logprob: -8.625370979309082
    3. 'robot' → logprob: -8.625370979309082
    4. 'x' → logprob: -12.000370979309082
    5. ' robot' → logprob: -12.500370979309082
    6. 'u' → logprob: -14.875370979309082
    7. 'node' → logprob: -15.000370979309082
    8. 'member' → logprob: -15.000370979309082
    9. 'rr' → logprob: -15.250370979309082
    10. 'idx' → logprob: -15.500370979309082

Token 1183: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04858975484967232
    2. 'in' → logprob: -3.0485897064208984
    3. '	in' → logprob: -14.048589706420898
    4. 's' → logprob: -14.173589706420898
    5. 'r' → logprob: -14.423589706420898
    6. 'n' → logprob: -16.6735897064209
    7. '_in' → logprob: -16.9235897064209
    8. 'd' → logprob: -16.9235897064209
    9. ' ' → logprob: -17.0485897064209
    10. 'i' → logprob: -17.5485897064209

Token 1184: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -5.157039049663581e-05
    2. ' g' → logprob: -9.875051498413086
    3. '   ' → logprob: -17.875051498413086
    4. '	g' → logprob: -18.750051498413086
    5. '```' → logprob: -19.875051498413086
    6. 'range' → logprob: -20.750051498413086
    7. '[g' → logprob: -20.750051498413086
    8. 'group' → logprob: -20.875051498413086
    9. '
' → logprob: -20.875051498413086
    10. '    ' → logprob: -21.000051498413086

Token 1185: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.29052168130874634
    2. ':
' → logprob: -2.0405216217041016
    3. 'in' → logprob: -2.1655216217041016
    4. ':' → logprob: -5.415521621704102
    5. '                       ' → logprob: -6.540521621704102
    6. '                           ' → logprob: -7.540521621704102
    7. '):
' → logprob: -8.165521621704102
    8. '                               ' → logprob: -8.540521621704102
    9. '   ' → logprob: -9.040521621704102
    10. '               ' → logprob: -9.540521621704102

Token 1186: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.08007239550352097
    2. ' new' → logprob: -2.5800724029541016
    3. 'new' → logprob: -7.580072402954102
    4. '                           ' → logprob: -8.955072402954102
    5. ' have' → logprob: -9.330072402954102
    6. '                   ' → logprob: -9.455072402954102
    7. '                        
' → logprob: -9.580072402954102
    8. '       ' → logprob: -10.080072402954102
    9. '                               ' → logprob: -10.205072402954102
    10. '                        ' → logprob: -10.330072402954102

Token 1187: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.06235013157129288
    2. ' new' → logprob: -2.812350034713745
    3. '                               ' → logprob: -8.437350273132324
    4. '                           ' → logprob: -8.812350273132324
    5. '   ' → logprob: -11.562350273132324
    6. '                                   ' → logprob: -13.312350273132324
    7. ' ' → logprob: -13.312350273132324
    8. '
' → logprob: -13.687350273132324
    9. 'have' → logprob: -14.312350273132324
    10. '           ' → logprob: -14.812350273132324

Token 1188: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -1.0280383548888494e-06
    2. '```' → logprob: -14.625000953674316
    3. '_' → logprob: -15.625000953674316
    4. ' _' → logprob: -16.125001907348633
    5. 'data' → logprob: -16.375001907348633
    6. ')_' → logprob: -17.000001907348633
    7. '_code' → logprob: -17.375001907348633
    8. 'r' → logprob: -17.375001907348633
    9. '_Data' → logprob: -17.375001907348633
    10. '_DATA' → logprob: -17.750001907348633

Token 1189: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.005383518524467945
    2. '.' → logprob: -5.255383491516113
    3. ' .' → logprob: -9.505383491516113
    4. 'add' → logprob: -10.380383491516113
    5. '.update' → logprob: -11.255383491516113
    6. '=' → logprob: -11.880383491516113
    7. '                           ' → logprob: -12.005383491516113
    8. '                       ' → logprob: -12.380383491516113
    9. '.setdefault' → logprob: -12.630383491516113
    10. '```' → logprob: -13.130383491516113

Token 1190: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.00011152983643114567
    2. 'r' → logprob: -9.12511157989502
    3. '(' → logprob: -13.25011157989502
    4. ' r' → logprob: -14.37511157989502
    5. ' (' → logprob: -15.37511157989502
    6. '(
' → logprob: -16.875110626220703
    7. '	r' → logprob: -17.875110626220703
    8. '[r' → logprob: -19.000110626220703
    9. ')' → logprob: -20.000110626220703
    10. '_r' → logprob: -20.375110626220703

Token 1191: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012203442165628076
    2. ' )' → logprob: -7.626220226287842
    3. '<|end|>' → logprob: -7.751220226287842
    4. ')
' → logprob: -8.626220703125
    5. '                       ' → logprob: -9.501220703125
    6. '):
' → logprob: -11.626220703125
    7. '                           ' → logprob: -11.751220703125
    8. ')return' → logprob: -11.876220703125
    9. '<|end|>' → logprob: -12.751220703125
    10. '                   ' → logprob: -13.001220703125

Token 1192: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0071124485693871975
    2. 'have' → logprob: -5.632112503051758
    3. ' have' → logprob: -6.257112503051758
    4. '
' → logprob: -6.507112503051758
    5. '            
' → logprob: -10.382112503051758
    6. '       ' → logprob: -10.632112503051758
    7. '               ' → logprob: -11.132112503051758
    8. '   ' → logprob: -11.882112503051758
    9. '```' → logprob: -12.632112503051758
    10. '          ' → logprob: -12.882112503051758

Token 1193: ' have' (ID: 679)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17226001620292664
    2. 'have' (adapté à ' have') → logprob: -2.172260046005249
    3. '           ' → logprob: -3.422260046005249
    4. ' have' → logprob: -4.67225980758667
    5. '
' → logprob: -6.17225980758667
    6. '   ' → logprob: -8.422260284423828
    7. 'has' → logprob: -12.047260284423828
    8. ' ' → logprob: -12.297260284423828
    9. '               ' → logprob: -12.547260284423828
    10. '     ' → logprob: -13.297260284423828

Token 1194: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -3.128163257315464e-07
    2. 'data' → logprob: -17.0
    3. '           ' → logprob: -17.0
    4. ' =' → logprob: -17.625
    5. '
' → logprob: -18.625
    6. '   ' → logprob: -19.0
    7. '=' → logprob: -19.25
    8. '_' → logprob: -19.375
    9. '       ' → logprob: -19.5
    10. '_d' → logprob: -19.75

Token 1195: ' =' (ID: 314)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.37923404574394226
    2. ' |=' → logprob: -2.1292340755462646
    3. '.update' → logprob: -2.3792340755462646
    4. '=' → logprob: -2.3792340755462646
    5. ' =' → logprob: -4.5042338371276855
    6. '.union' → logprob: -8.129234313964844
    7. '.' → logprob: -10.379234313964844
    8. 'update' → logprob: -10.379234313964844
    9. '|=
' → logprob: -11.129234313964844
    10. '.=' → logprob: -13.129234313964844

Token 1196: ' have' (ID: 679)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0713573470711708
    2. 'have' → logprob: -2.821357250213623
    3. ' new' → logprob: -4.696357250213623
    4. ' have' → logprob: -8.446357727050781
    5. '```' → logprob: -14.571357727050781
    6. 'union' → logprob: -14.696357727050781
    7. 'Have' → logprob: -15.071357727050781
    8. '   ' → logprob: -15.196357727050781
    9. '	new' → logprob: -15.571357727050781
    10. 'has' → logprob: -15.821357727050781

Token 1197: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.005992789752781391
    2. 'have' → logprob: -5.130992889404297
    3. 'ave' → logprob: -10.255992889404297
    4. 'data' → logprob: -11.005992889404297
    5. 'ata' → logprob: -11.880992889404297
    6. 'able' → logprob: -13.630992889404297
    7. 'aved' → logprob: -14.755992889404297
    8. 'at' → logprob: -15.005992889404297
    9. 'had' → logprob: -15.005992889404297
    10. 'ed' → logprob: -15.630992889404297

Token 1198: '.union' (ID: 140875)
  Prédit: '.union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.union' → logprob: -0.00012797261297237128
    2. 'union' → logprob: -9.500127792358398
    3. '|' → logprob: -10.625127792358398
    4. '.' → logprob: -10.625127792358398
    5. ' |' → logprob: -12.500127792358398
    6. ' union' → logprob: -14.625127792358398
    7. '_union' → logprob: -16.2501277923584
    8. ' .' → logprob: -17.6251277923584
    9. 'new' → logprob: -17.7501277923584
    10. '	union' → logprob: -18.1251277923584

Token 1199: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -1.7120533811976202e-05
    2. 'new' → logprob: -11.000017166137695
    3. '(' → logprob: -14.875017166137695
    4. ' new' → logprob: -17.750017166137695
    5. ')new' → logprob: -18.000017166137695
    6. '(
' → logprob: -18.250017166137695
    7. ' (' → logprob: -19.125017166137695
    8. '=new' → logprob: -19.250017166137695
    9. '```' → logprob: -19.250017166137695
    10. '	new' → logprob: -20.750017166137695

Token 1200: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -4.000763510703109e-05
    2. 'data' → logprob: -11.000040054321289
    3. 'new' → logprob: -11.125040054321289
    4. '{' → logprob: -12.875040054321289
    5. 'ata' → logprob: -13.375040054321289
    6. 'set' → logprob: -13.500040054321289
    7. '```' → logprob: -14.375040054321289
    8. 's' → logprob: -15.000040054321289
    9. '_new' → logprob: -15.125040054321289
    10. 'a' → logprob: -15.500040054321289

Token 1201: ')

' (ID: 1029)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06840663403272629
    2. '   ' → logprob: -3.443406581878662
    3. '
' → logprob: -3.693406581878662
    4. '<|end|>' → logprob: -5.443406581878662
    5. '```' → logprob: -5.693406581878662
    6. '        
' → logprob: -6.818406581878662
    7. '    
' → logprob: -8.06840705871582
    8. 'print' → logprob: -9.81840705871582
    9. '           ' → logprob: -10.69340705871582
    10. ')' → logprob: -10.81840705871582

Token 1203: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03841140493750572
    2. 'print' → logprob: -3.2884113788604736
    3. '```' → logprob: -9.038411140441895
    4. '   ' → logprob: -9.538411140441895
    5. '
' → logprob: -9.538411140441895
    6. 'for' → logprob: -10.038411140441895
    7. '        
' → logprob: -10.288411140441895
    8. 'if' → logprob: -11.038411140441895
    9. ' print' → logprob: -12.413411140441895
    10. '    
' → logprob: -13.288411140441895

Token 1204: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.641122579574585
    2. '       ' → logprob: -0.766122579574585
    3. 'if' → logprob: -5.641122817993164
    4. 'count' → logprob: -6.141122817993164
    5. 'data' → logprob: -7.141122817993164
    6. 'sys' → logprob: -7.641122817993164
    7. 'result' → logprob: -7.891122817993164
    8. 'missing' → logprob: -8.766122817993164
    9. 'for' → logprob: -9.266122817993164
    10. 'all' → logprob: -9.266122817993164

Token 1205: ' nick' (ID: 26479)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.08329710364341736
    2. '(sorted' → logprob: -3.58329701423645
    3. '()
' → logprob: -3.70829701423645
    4. '(max' → logprob: -5.208297252655029
    5. 'for' → logprob: -5.208297252655029
    6. '(' → logprob: -5.333297252655029
    7. 'len' → logprob: -5.833297252655029
    8. '('' → logprob: -6.333297252655029
    9. '(f' → logprob: -6.458297252655029
    10. '()' → logprob: -6.458297252655029

Token 1206: 'names' (ID: 23354)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8986973762512207
    2. '(' → logprob: -1.1486973762512207
    3. '()' → logprob: -2.5236973762512207
    4. '()
' → logprob: -2.6486973762512207
    5. 'for' → logprob: -2.6486973762512207
    6. '('' → logprob: -3.6486973762512207
    7. '(f' → logprob: -4.648697376251221
    8. '(robot' → logprob: -5.398697376251221
    9. '(n' → logprob: -6.148697376251221
    10. '(h' → logprob: -6.398697376251221

Token 1207: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20301036536693573
    2. 'for' → logprob: -1.7030103206634521
    3. ' for' → logprob: -6.453010559082031
    4. '```' → logprob: -11.953010559082031
    5. '   ' → logprob: -12.328010559082031
    6. '        
' → logprob: -13.203010559082031
    7. '
' → logprob: -13.203010559082031
    8. 'names' → logprob: -13.328010559082031
    9. '           ' → logprob: -13.578010559082031
    10. ',' → logprob: -14.578010559082031

Token 1208: ' robots' (ID: 47605)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3997306823730469
    2. 'robots' → logprob: -1.1497306823730469
    3. 'data' → logprob: -5.649730682373047
    4. 'with' → logprob: -5.899730682373047
    5. 'robot' → logprob: -6.149730682373047
    6. 'have' → logprob: -6.524730682373047
    7. 'sorted' → logprob: -6.899730682373047
    8. 'rob' → logprob: -7.399730682373047
    9. 'r' → logprob: -8.899730682373047
    10. 'those' → logprob: -9.024730682373047

Token 1209: ' with' (ID: 483)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30169591307640076
    2. '       ' → logprob: -1.4266959428787231
    3. ' for' → logprob: -3.9266958236694336
    4. ',' → logprob: -8.426695823669434
    5. '```' → logprob: -9.426695823669434
    6. '[' → logprob: -9.676695823669434
    7. 'sorted' → logprob: -9.801695823669434
    8. '(' → logprob: -10.301695823669434
    9. 'with' → logprob: -10.551695823669434
    10. '
' → logprob: -10.801695823669434

Token 1210: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.006967558991163969
    2. ' data' → logprob: -5.256967544555664
    3. '_data' → logprob: -6.381967544555664
    4. '
' → logprob: -10.381967544555664
    5. '   ' → logprob: -12.881967544555664
    6. 'Data' → logprob: -13.131967544555664
    7. '```' → logprob: -13.381967544555664
    8. ' 
' → logprob: -14.631967544555664
    9. '-data' → logprob: -14.631967544555664
    10. ''' → logprob: -15.006967544555664

Token 1211: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4762521982192993
    2. '       ' → logprob: -0.9762521982192993
    3. ' for' → logprob: -6.22625207901001
    4. '```' → logprob: -8.726252555847168
    5. '   ' → logprob: -11.226252555847168
    6. '           ' → logprob: -12.476252555847168
    7. 'sorted' → logprob: -13.226252555847168
    8. '``' → logprob: -13.226252555847168
    9. 'names' → logprob: -13.351252555847168
    10. '        
' → logprob: -13.351252555847168

Token 1212: ' dictionary' (ID: 22131)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.006902921013534069
    2. ' sorted' → logprob: -6.006902694702148
    3. 'for' → logprob: -6.756902694702148
    4. 'alphabet' → logprob: -6.756902694702148
    5. '
' → logprob: -6.881902694702148
    6. 'order' → logprob: -8.631902694702148
    7. '   ' → logprob: -8.756902694702148
    8. 'data' → logprob: -9.256902694702148
    9. 'ascending' → logprob: -9.256902694702148
    10. 'ordered' → logprob: -9.506902694702148

Token 1213: ' order' (ID: 2569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3281913697719574
    2. '```' → logprob: -1.8281913995742798
    3. '{' → logprob: -3.3281912803649902
    4. 'data' → logprob: -3.5781912803649902
    5. 'for' → logprob: -3.7031912803649902
    6. '
' → logprob: -5.57819128036499
    7. '``' → logprob: -5.70319128036499
    8. 'nick' → logprob: -5.82819128036499
    9. '{
' → logprob: -5.95319128036499
    10. '   ' → logprob: -6.07819128036499

Token 1214: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004694276489317417
    2. 'names' → logprob: -5.75469446182251
    3. 'for' → logprob: -7.37969446182251
    4. 'result' → logprob: -7.62969446182251
    5. '```' → logprob: -8.379693984985352
    6. 'print' → logprob: -9.879693984985352
    7. 'n' → logprob: -10.504693984985352
    8. ' for' → logprob: -10.879693984985352
    9. 'nick' → logprob: -11.004693984985352
    10. '   ' → logprob: -11.004693984985352

Token 1215: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7571990489959717
    2. '       ' → logprob: -1.0071990489959717
    3. 'have' → logprob: -2.8821990489959717
    4. 'for' → logprob: -3.0071990489959717
    5. 'names' → logprob: -3.2571990489959717
    6. 'data' → logprob: -5.382199287414551
    7. '```' → logprob: -5.507199287414551
    8. 'n' → logprob: -6.007199287414551
    9. 'res' → logprob: -6.132199287414551
    10. 'nick' → logprob: -6.382199287414551

Token 1216: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.6211656332015991
    2. '       ' → logprob: -1.7461656332015991
    3. 'for' → logprob: -1.7461656332015991
    4. 'n' → logprob: -3.4961657524108887
    5. 'names' → logprob: -3.7461657524108887
    6. 'have' → logprob: -4.121165752410889
    7. 'data' → logprob: -4.496165752410889
    8. 'res' → logprob: -4.621165752410889
    9. 'with' → logprob: -5.246165752410889
    10. 's' → logprob: -5.371165752410889

Token 1217: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.388038694858551
    2. '=' → logprob: -1.1380386352539062
    3. '   ' → logprob: -7.513038635253906
    4. '_' → logprob: -8.263038635253906
    5. '_sorted' → logprob: -9.138038635253906
    6. '```' → logprob: -9.388038635253906
    7. '_ids' → logprob: -10.638038635253906
    8. 's' → logprob: -10.638038635253906
    9. '_names' → logprob: -11.013038635253906
    10. '       ' → logprob: -11.013038635253906

Token 1218: ' [' (ID: 723)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.023460114374756813
    2. '[' → logprob: -3.7734601497650146
    3. '[s' → logprob: -9.273460388183594
    4. '[]
' → logprob: -10.023460388183594
    5. ' sorted' → logprob: -10.023460388183594
    6. '   ' → logprob: -11.273460388183594
    7. '(sorted' → logprob: -11.648460388183594
    8. ' [' → logprob: -12.523460388183594
    9. '[]' → logprob: -12.773460388183594
    10. '[str' → logprob: -13.648460388183594

Token 1219: 'robots' (ID: 136360)
  Prédit: 'robots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' → logprob: -0.043743204325437546
    2. 'robot' → logprob: -3.168743133544922
    3. 'r' → logprob: -7.293743133544922
    4. 'rob' → logprob: -10.918743133544922
    5. ' robots' → logprob: -10.918743133544922
    6. '(' → logprob: -11.168743133544922
    7. '(robot' → logprob: -12.168743133544922
    8. '   ' → logprob: -13.168743133544922
    9. 'nick' → logprob: -13.918743133544922
    10. '(r' → logprob: -14.043743133544922

Token 1220: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0894567146897316
    2. '[r' → logprob: -2.464456796646118
    3. 'r' → logprob: -8.964456558227539
    4. '[result' → logprob: -9.089456558227539
    5. '[idx' → logprob: -9.839456558227539
    6. '[' → logprob: -9.964456558227539
    7. 'result' → logprob: -10.214456558227539
    8. 'i' → logprob: -10.839456558227539
    9. '```' → logprob: -10.964456558227539
    10. ']' → logprob: -10.964456558227539

Token 1221: ']['' (ID: 12019)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.5297223925590515
    2. ']['' → logprob: -0.9047223925590515
    3. 'for' → logprob: -5.779722213745117
    4. '[i' → logprob: -5.904722213745117
    5. ''' → logprob: -7.779722213745117
    6. ' for' → logprob: -9.154722213745117
    7. '[' → logprob: -9.904722213745117
    8. ']' → logprob: -10.404722213745117
    9. ')['' → logprob: -10.654722213745117
    10. '']['' → logprob: -10.904722213745117

Token 1222: 'nick' (ID: 39673)
  Prédit: 'nick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nick' → logprob: -0.011067275889217854
    2. ''n' → logprob: -4.5110673904418945
    3. ''' → logprob: -10.886067390441895
    4. ' nick' → logprob: -16.011066436767578
    5. 'nik' → logprob: -16.511066436767578
    6. ''r' → logprob: -16.636066436767578
    7. ''nin' → logprob: -16.636066436767578
    8. '['' → logprob: -16.761066436767578
    9. 'nickname' → logprob: -16.761066436767578
    10. '   ' → logprob: -17.136066436767578

Token 1223: '']' (ID: 1089)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04228147864341736
    2. 'for' → logprob: -3.29228138923645
    3. '']' → logprob: -5.792281627655029
    4. ' for' → logprob: -7.042281627655029
    5. ')' → logprob: -9.042281150817871
    6. '[i' → logprob: -9.167281150817871
    7. '   ' → logprob: -10.167281150817871
    8. '       ' → logprob: -11.542281150817871
    9. '"]' → logprob: -12.292281150817871
    10. ' ]' → logprob: -12.292281150817871

Token 1224: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07891853898763657
    2. ' for' → logprob: -2.57891845703125
    3. '           ' → logprob: -10.95391845703125
    4. '               ' → logprob: -12.95391845703125
    5. ']' → logprob: -13.32891845703125
    6. '       ' → logprob: -13.57891845703125
    7. '          ' → logprob: -13.82891845703125
    8. '         ' → logprob: -14.07891845703125
    9. '   ' → logprob: -14.07891845703125
    10. '
' → logprob: -14.32891845703125

Token 1225: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004309076175559312
    2. ' i' → logprob: -7.750431060791016
    3. '
' → logprob: -16.125431060791016
    4. '	i' → logprob: -17.125431060791016
    5. '   ' → logprob: -17.875431060791016
    6. ' ' → logprob: -18.375431060791016
    7. '  ' → logprob: -19.125431060791016
    8. '```' → logprob: -21.000431060791016
    9. 'robot' → logprob: -21.375431060791016
    10. '

' → logprob: -21.875431060791016

Token 1226: ' in' (ID: 306)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4649016857147217
    2. ' in' → logprob: -1.5899016857147217
    3. 'in' → logprob: -1.8399016857147217
    4. ' i' → logprob: -4.714901924133301
    5. ' ' → logprob: -10.7149019241333
    6. 'for' → logprob: -11.0899019241333
    7. '  ' → logprob: -12.2149019241333
    8. '   ' → logprob: -12.4649019241333
    9. 'idx' → logprob: -12.7149019241333
    10. 'if' → logprob: -12.7149019241333

Token 1227: ' have' (ID: 679)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.07897108793258667
    2. 'range' → logprob: -2.5789711475372314
    3. ' have' → logprob: -10.578970909118652
    4. 'i' → logprob: -10.703970909118652
    5. ' range' → logprob: -11.453970909118652
    6. '
' → logprob: -11.953970909118652
    7. 'sorted' → logprob: -12.078970909118652
    8. '[i' → logprob: -12.453970909118652
    9. 'r' → logprob: -13.078970909118652
    10. '   ' → logprob: -13.453970909118652

Token 1228: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.0005558936391025782
    2. 'have' → logprob: -7.500555992126465
    3. 'having' → logprob: -14.875555992126465
    4. 't' → logprob: -15.000555992126465
    5. 'ave' → logprob: -15.000555992126465
    6. 'had' → logprob: -15.375555992126465
    7. 'data' → logprob: -15.375555992126465
    8. ' have' → logprob: -15.500555992126465
    9. 'range' → logprob: -15.875555992126465
    10. ' in' → logprob: -16.12555503845215

Token 1229: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.016454724594950676
    2. '       ' → logprob: -4.266454696655273
    3. ']' → logprob: -6.641454696655273
    4. 'if' → logprob: -7.766454696655273
    5. ' if' → logprob: -7.891454696655273
    6. ')
' → logprob: -9.141454696655273
    7. '   ' → logprob: -11.141454696655273
    8. 'result' → logprob: -11.141454696655273
    9. '.sort' → logprob: -11.391454696655273
    10. '
' → logprob: -11.516454696655273

Token 1230: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.07917331904172897
    2. '       ' → logprob: -2.5791733264923096
    3. '```' → logprob: -8.95417308807373
    4. '
' → logprob: -9.45417308807373
    5. ' result' → logprob: -9.57917308807373
    6. '   ' → logprob: -13.82917308807373
    7. '``' → logprob: -13.82917308807373
    8. '[result' → logprob: -13.95417308807373
    9. ',result' → logprob: -14.07917308807373
    10. '(result' → logprob: -14.70417308807373

Token 1231: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -3.190178904333152e-05
    2. '       ' → logprob: -11.000031471252441
    3. 'for' → logprob: -12.000031471252441
    4. '
' → logprob: -12.250031471252441
    5. ' result' → logprob: -12.625031471252441
    6. 'print' → logprob: -14.125031471252441
    7. '   ' → logprob: -16.000032424926758
    8. '```' → logprob: -17.750032424926758
    9. '	result' → logprob: -19.625032424926758
    10. '        
' → logprob: -19.750032424926758

Token 1232: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -2.0100624169572257e-05
    2. '.' → logprob: -10.875020027160645
    3. 'sort' → logprob: -14.000020027160645
    4. '=' → logprob: -15.375020027160645
    5. ' .' → logprob: -18.00002098083496
    6. '   ' → logprob: -18.25002098083496
    7. ').' → logprob: -18.62502098083496
    8. ' =' → logprob: -18.62502098083496
    9. '.reverse' → logprob: -19.25002098083496
    10. '	sort' → logprob: -19.37502098083496

Token 1233: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06677790731191635
    2. 'for' → logprob: -3.0667779445648193
    3. 'print' → logprob: -4.06677770614624
    4. '```' → logprob: -7.69177770614624
    5. ' for' → logprob: -7.81677770614624
    6. '   ' → logprob: -11.066778182983398
    7. '``' → logprob: -11.941778182983398
    8. ' print' → logprob: -12.691778182983398
    9. '
' → logprob: -13.066778182983398
    10. '        
' → logprob: -13.191778182983398

Token 1234: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18769092857837677
    2. 'print' → logprob: -2.1876909732818604
    3. 'for' → logprob: -2.9376909732818604
    4. '```' → logprob: -5.187690734863281
    5. ' for' → logprob: -8.437690734863281
    6. '   ' → logprob: -9.062690734863281
    7. '``' → logprob: -10.687690734863281
    8. ' print' → logprob: -11.812690734863281
    9. '
' → logprob: -12.437690734863281
    10. '           ' → logprob: -12.562690734863281

Token 1235: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3204295039176941
    2. 'print' → logprob: -1.3204295635223389
    3. '       ' → logprob: -5.07042932510376
    4. '```' → logprob: -7.07042932510376
    5. ' for' → logprob: -11.945429801940918
    6. '   ' → logprob: -12.570429801940918
    7. '``' → logprob: -13.570429801940918
    8. '
' → logprob: -13.945429801940918
    9. ' print' → logprob: -15.445429801940918
    10. 'sys' → logprob: -15.945429801940918

Token 1236: ' r' (ID: 428)
  Prédit: 'nick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nick' → logprob: -0.006846792530268431
    2. 'r' → logprob: -5.756846904754639
    3. ' nick' → logprob: -5.756846904754639
    4. 'name' → logprob: -7.756846904754639
    5. 'robot' → logprob: -9.88184642791748
    6. 'nickname' → logprob: -11.25684642791748
    7. 'res' → logprob: -12.38184642791748
    8. 'rn' → logprob: -13.00684642791748
    9. 'i' → logprob: -13.75684642791748
    10. ' r' → logprob: -13.88184642791748

Token 1237: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5239613056182861
    2. ' in' → logprob: -0.8989613056182861
    3. 'r' → logprob: -7.523961067199707
    4. 'print' → logprob: -9.148961067199707
    5. ' r' → logprob: -9.523961067199707
    6. 'i' → logprob: -10.023961067199707
    7. 'n' → logprob: -10.273961067199707
    8. ' ' → logprob: -11.898961067199707
    9. 'e' → logprob: -12.023961067199707
    10. '   ' → logprob: -12.523961067199707

Token 1238: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.3856492842023727e-06
    2. 'range' → logprob: -14.000000953674316
    3. ' result' → logprob: -14.750000953674316
    4. '(result' → logprob: -16.500001907348633
    5. 'print' → logprob: -19.000001907348633
    6. '
' → logprob: -19.250001907348633
    7. 'r' → logprob: -19.375001907348633
    8. '   ' → logprob: -19.875001907348633
    9. 'results' → logprob: -20.500001907348633
    10. '	result' → logprob: -22.000001907348633

Token 1239: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13876672089099884
    2. ':
' → logprob: -2.7637667655944824
    3. 'print' → logprob: -2.8887667655944824
    4. ':' → logprob: -5.013766765594482
    5. ' print' → logprob: -6.263766765594482
    6. '):
' → logprob: -7.638766765594482
    7. '```' → logprob: -7.763766765594482
    8. '.print' → logprob: -7.888766765594482
    9. '       ' → logprob: -8.763766288757324
    10. '
' → logprob: -9.013766288757324

Token 1240: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029926475137472153
    2. 'print' → logprob: -3.5299265384674072
    3. '   ' → logprob: -9.029926300048828
    4. ' print' → logprob: -10.779926300048828
    5. '	       ' → logprob: -11.154926300048828
    6. '       ' → logprob: -11.779926300048828
    7. '```' → logprob: -12.029926300048828
    8. '	print' → logprob: -12.779926300048828
    9. '               ' → logprob: -12.904926300048828
    10. '		' → logprob: -14.154926300048828

Token 1241: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.5776860184123507e-06
    2. ' print' → logprob: -13.00000286102295
    3. '           ' → logprob: -15.75000286102295
    4. '```' → logprob: -18.250001907348633
    5. 'sys' → logprob: -18.625001907348633
    6. '	print' → logprob: -18.875001907348633
    7. '   ' → logprob: -19.250001907348633
    8. '       ' → logprob: -19.375001907348633
    9. '#print' → logprob: -21.625001907348633
    10. '_print' → logprob: -22.750001907348633

Token 1242: '(r' (ID: 4729)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0007117166533134878
    2. '(r' → logprob: -7.250711917877197
    3. ' r' → logprob: -13.250711441040039
    4. '```' → logprob: -17.87571144104004
    5. '   ' → logprob: -18.87571144104004
    6. 'f' → logprob: -19.12571144104004
    7. '	r' → logprob: -20.12571144104004
    8. '_r' → logprob: -20.12571144104004
    9. '{}' → logprob: -20.37571144104004
    10. '       ' → logprob: -20.37571144104004

Token 1243: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.1186566047836095e-05
    2. '())' → logprob: -10.750031471252441
    3. ')
' → logprob: -12.250031471252441
    4. '()' → logprob: -12.625031471252441
    5. '       ' → logprob: -13.625031471252441
    6. ' )' → logprob: -16.000030517578125
    7. '   ' → logprob: -16.250030517578125
    8. ')`' → logprob: -17.125030517578125
    9. '<|end|>' → logprob: -17.250030517578125
    10. '```' → logprob: -17.625030517578125

Token 1244: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1245: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.16022585332393646
    2. '__' → logprob: -1.9102258682250977
    3. '_' → logprob: -14.410225868225098
    4. '_name' → logprob: -14.910225868225098
    5. '___' → logprob: -15.535225868225098
    6. ' main' → logprob: -15.910225868225098
    7. ' _' → logprob: -16.16022491455078
    8. '_main' → logprob: -16.28522491455078
    9. 'if' → logprob: -16.53522491455078
    10. '(__' → logprob: -16.66022491455078

Token 1246: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0009751861798577011
    2. '==' → logprob: -7.250975131988525
    3. ' ==' → logprob: -8.625975608825684
    4. ' __' → logprob: -10.625975608825684
    5. '```' → logprob: -10.750975608825684
    6. '=="' → logprob: -11.500975608825684
    7. '__.__' → logprob: -11.875975608825684
    8. '.__' → logprob: -12.250975608825684
    9. 'if' → logprob: -12.500975608825684
    10. 'name' → logprob: -12.625975608825684

Token 1247: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.002830673009157181
    2. '__.__' → logprob: -6.002830505371094
    3. '__.' → logprob: -8.252830505371094
    4. '==' → logprob: -10.377830505371094
    5. '```' → logprob: -11.127830505371094
    6. '__["' → logprob: -11.127830505371094
    7. '=="' → logprob: -11.752830505371094
    8. '__('' → logprob: -11.877830505371094
    9. '__
' → logprob: -12.377830505371094
    10. '___' → logprob: -12.502830505371094

Token 1248: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.28902333974838257
    2. '__' → logprob: -2.2890233993530273
    3. ' ==' → logprob: -2.5390233993530273
    4. '=="' → logprob: -3.2890233993530273
    5. '=='' → logprob: -3.4140233993530273
    6. '```' → logprob: -8.539023399353027
    7. '.__' → logprob: -9.539023399353027
    8. '__.__' → logprob: -9.789023399353027
    9. '==
' → logprob: -10.414023399353027
    10. '**' → logprob: -10.914023399353027

Token 1249: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.47410640120506287
    2. ''' → logprob: -0.9741064310073853
    3. '__' → logprob: -10.474106788635254
    4. ' "__' → logprob: -13.974106788635254
    5. ' '__' → logprob: -15.724106788635254
    6. ''"' → logprob: -16.849105834960938
    7. '   ' → logprob: -17.599105834960938
    8. '"'' → logprob: -17.849105834960938
    9. '"<?' → logprob: -18.099105834960938
    10. '('__' → logprob: -18.724105834960938

Token 1250: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -9.865583706414327e-05
    2. '__' → logprob: -9.25009822845459
    3. 'name' → logprob: -13.12509822845459
    4. ''' → logprob: -15.25009822845459
    5. '_main' → logprob: -16.250099182128906
    6. '"' → logprob: -16.750099182128906
    7. ' main' → logprob: -17.125099182128906
    8. 'm' → logprob: -19.125099182128906
    9. '___' → logprob: -19.500099182128906
    10. '	main' → logprob: -20.125099182128906

Token 1251: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.08695781230926514
    2. '__' → logprob: -2.9619579315185547
    3. ':' → logprob: -3.9619579315185547
    4. '__":
' → logprob: -5.336957931518555
    5. '():
' → logprob: -6.336957931518555
    6. '__:' → logprob: -6.836957931518555
    7. '==' → logprob: -7.086957931518555
    8. ':
' → logprob: -7.336957931518555
    9. '```' → logprob: -7.461957931518555
    10. '<|end|>' → logprob: -7.961957931518555

Token 1252: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.023967700079083443
    2. '   ' → logprob: -3.773967742919922
    3. ' main' → logprob: -7.773967742919922
    4. '	main' → logprob: -8.148967742919922
    5. '```' → logprob: -11.648967742919922
    6. '__' → logprob: -13.773967742919922
    7. '_main' → logprob: -14.273967742919922
    8. '(main' → logprob: -14.523967742919922
    9. '    
' → logprob: -14.648967742919922
    10. '
' → logprob: -15.023967742919922

Token 1253: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -15.75
    3. '	main' → logprob: -21.0
    4. '   ' → logprob: -23.875
    5. '(main' → logprob: -24.5
    6. '.main' → logprob: -24.625
    7. '_main' → logprob: -25.625
    8. 'import' → logprob: -27.0
    9. '
' → logprob: -27.5
    10. '```' → logprob: -27.75

Token 1254: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1252
Tokens correctement prédits (1ère position, stricte): 475
Tokens correctement prédits (1ère position, avec adaptation): 524
Tokens correctement prédits (top 10): 981
Précision stricte (1ère position): 37.94%
Précision adaptée (1ère position): 41.85%
Précision (top 10): 78.35%
================================================================================
