================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class TrapType:
    def __init__(self, symbol: str, damage: int):
        self.symbol = symbol
        self.damage = damage

class Potion:
    def __init__(self, heal_amount: int):
        self.heal_amount = heal_amount

class Position:
    def __init__(self, row: int, col: int):
        self.row = row
        self.col = col
    def move(self, direction: str):
        moves = {'U': (-1,0), 'D': (1,0), 'L': (0,-1), 'R': (0,1)}
        dr, dc = moves[direction]
        return Position(self.row + dr, self.col + dc)
    def __eq__(self, other):
        return self.row == other.row and self.col == other.col
    def __hash__(self):
        return hash((self.row, self.col))

class Cave:
    def __init__(self, rows, cols, layout, trap_types):
        self.rows = rows
        self.cols = cols
        self.layout = layout  # List[List[str]] trap symbol at each cell
        self.trap_types = trap_types  # dict symbol -> TrapType

    def get_trap_damage(self, pos: Position) -> int:
        trap_symbol = self.layout[pos.row][pos.col]
        if trap_symbol in self.trap_types:
            return self.trap_types[trap_symbol].damage
        return 0

class PatrolStep:
    def __init__(self, direction: str, distance: int):
        self.direction = direction
        self.distance = distance

class Agent:
    def __init__(self, hp_init: int, hp_max: int, potions):
        self.hp_max = hp_max
        self.hp = hp_init
        self.potions = potions  # list of Potion objects
    def use_potions(self, needed_hp_loss: int):
        # Before stepping into a trap cell with damage needed_hp_loss, try to heal optimally using potions
        # Since agent can use any combination of potions any number of times (with restrictions?), 
        # but problem states only "more than one type at once", no limit on count of potions use is specified.
        # So we can use each potion at most once per cell? Problem does not specify usage restrictions, so assume each potion can be used once per cell step.
        # Because number of potions is small (<=12), we try all subsets to maximize healing but only to just cover damage.
        # Goal: maximize healing without exceeding hp_max or over-heal unnecessarily.

        # We want to pick subset of potions (once each max) summing healing h so that hp + h - damage > 0
        # Or hp + h > damage

        # We try from minimal needed healing upward to minimal subset sum that covers needed.

        # But also must not exceed hp_max.

        # We'll consider subsets with pruning to not exceed hp_max.

        from itertools import combinations
        pot_heals = [p.heal_amount for p in self.potions]
        # If no potions, just skip
        if not pot_heals:
            return
        max_healing = 0
        best_subset = []
        # Generate all subsets; up to 2^P where P<=12, feasible
        n = len(pot_heals)
        for r in range(1, n+1):
            for combi in combinations(range(n), r):
                heal_sum = sum(pot_heals[i] for i in combi)
                # can't heal beyond hp_max
                if self.hp + heal_sum > self.hp_max:
                    heal_sum = self.hp_max - self.hp  # effective healing max
                # if after healing the hp is enough to survive damage:
                if self.hp + heal_sum > needed_hp_loss:
                    # pick minimal healing that allows survive but maximizes hp after
                    # but problem is just to survive, so pick minimal healing that make hp+heal > damage
                    if max_healing == 0 or heal_sum < max_healing:
                        max_healing = heal_sum
                        best_subset = combi
        if max_healing > 0:
            # apply the best healing
            self.hp += max_healing
            if self.hp > self.hp_max:
                self.hp = self.hp_max

class PatrolRoute:
    def __init__(self, steps):
        self.steps = steps  # list of PatrolStep
    def expand_path(self, start_pos: Position):
        path = []
        current = start_pos
        for step in self.steps:
            for _ in range(step.distance):
                current = current.move(step.direction)
                path.append(current)
        return path

class DungeonQuestII:
    def __init__(self):
        self.datasets = []

    def read_dataset(self, input_lines):
        # parse one dataset from input_lines iterator, return None if termination line encountered
        hp_init_max = next(input_lines).strip()
        if hp_init_max == '0 0':
            return None
        hp_init, hp_max = map(int, hp_init_max.split())
        R, C = map(int, next(input_lines).split())
        layout = [list(next(input_lines).rstrip('\n')) for _ in range(R)]
        T = int(next(input_lines))
        trap_types = {}
        for _ in range(T):
            line = next(input_lines).split()
            symbol = line[0]
            damage = int(line[1])
            trap_types[symbol] = TrapType(symbol, damage)
        S = int(next(input_lines))
        steps = []
        for _ in range(S):
            direction, n = next(input_lines).split()
            steps.append(PatrolStep(direction, int(n)))
        P = int(next(input_lines))
        potions = []
        for _ in range(P):
            pval = int(next(input_lines))
            potions.append(Potion(pval))
        return hp_init, hp_max, R, C, layout, trap_types, steps, potions

    def judge_patrol(self, hp_init, hp_max, R, C, layout, trap_types, steps, potions) -> str:
        cave = Cave(R, C, layout, trap_types)
        agent = Agent(hp_init, hp_max, potions)
        route = PatrolRoute(steps)
        start_pos = Position(0,0)
        # Must note: top-left corner has no traps guaranteed
        # path is all cells stepped on after each move
        path = route.expand_path(start_pos)

        # For each cell stepped into, agent uses potions before stepping in. If hp <=0 dies.
        for pos in path:
            damage = cave.get_trap_damage(pos)
            agent.use_potions(damage)
            # take damage
            agent.hp -= damage
            if agent.hp <= 0:
                return "NO"
        return "YES"

    def run(self):
        import sys
        input_lines = iter(sys.stdin.readline, '')
        # Python readline iterator stops at '' (empty), not at EOF, so wrap input
        # We'll use sys.stdin as iterable lines, stopping at "0 0"

        lines_buffer = []
        for line in sys.stdin:
            lines_buffer.append(line)
        input_lines = iter(lines_buffer)

        while True:
            dataset = self.read_dataset(input_lines)
            if dataset is None:
                break
            hp_init, hp_max, R, C, layout, trap_types, steps, potions = dataset
            result = self.judge_patrol(hp_init, hp_max, R, C, layout, trap_types, steps, potions)
            print(result)

if __name__ == "__main__":
    game = DungeonQuestII()
    game.run()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Trap' (ID: 104412)
  → Token d'amorce (pas de prédiction)

Token 2: 'Type' (ID: 1163)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3406031131744385
    2. '{' → logprob: -1.8406031131744385
    3. '(' → logprob: -2.0906031131744385
    4. ' {' → logprob: -5.340602874755859
    5. ' :' → logprob: -7.340602874755859
    6. ' ' → logprob: -8.34060287475586
    7. '.' → logprob: -8.34060287475586
    8. '[' → logprob: -8.59060287475586
    9. '```' → logprob: -9.59060287475586
    10. '(:' → logprob: -9.84060287475586

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005229136906564236
    2. '(' → logprob: -5.7552289962768555
    3. '.' → logprob: -7.0052289962768555
    4. '   ' → logprob: -7.6302289962768555
    5. '```' → logprob: -8.130228996276855
    6. ' :' → logprob: -9.130228996276855
    7. ':
' → logprob: -9.255228996276855
    8. '\' → logprob: -10.255228996276855
    9. ' ' → logprob: -10.755228996276855
    10. '():' → logprob: -10.880228996276855

Token 5: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2519242763519287
    2. ' ' → logprob: -2.2519242763519287
    3. '```' → logprob: -2.7519242763519287
    4. '_' → logprob: -3.6269242763519287
    5. '    ' → logprob: -5.251924514770508
    6. '[' → logprob: -5.751924514770508
    7. 'class' → logprob: -5.751924514770508
    8. ':' → logprob: -6.001924514770508
    9. '`' → logprob: -6.501924514770508
    10. ' pass' → logprob: -6.626924514770508

Token 6: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05112961679697037
    2. ' __' → logprob: -3.4261295795440674
    3. '__' → logprob: -5.0511298179626465
    4. ' ' → logprob: -5.5511298179626465
    5. '  ' → logprob: -6.6761298179626465
    6. '_' → logprob: -6.9261298179626465
    7. ' init' → logprob: -7.0511298179626465
    8. '<|end|>' → logprob: -7.0511298179626465
    9. 'space' → logprob: -7.1761298179626465
    10. ' space' → logprob: -8.051129341125488

Token 7: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.392202976712724e-06
    2. ' init' → logprob: -12.375006675720215
    3. '_init' → logprob: -13.750006675720215
    4. 'ini' → logprob: -14.000006675720215
    5. 'in' → logprob: -16.8750057220459
    6. '	init' → logprob: -16.8750057220459
    7. 'i' → logprob: -17.3750057220459
    8. 'innit' → logprob: -18.2500057220459
    9. 'inite' → logprob: -18.3750057220459
    10. 'int' → logprob: -18.5000057220459

Token 8: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.38812655210494995
    2. '__' → logprob: -1.1381266117095947
    3. '__(
' → logprob: -7.388126373291016
    4. '(' → logprob: -8.388126373291016
    5. '__((' → logprob: -8.763126373291016
    6. '_' → logprob: -8.888126373291016
    7. '__('' → logprob: -9.513126373291016
    8. '___' → logprob: -11.263126373291016
    9. '__(*' → logprob: -11.888126373291016
    10. '__("' → logprob: -12.013126373291016

Token 9: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004624868277460337
    2. ' self' → logprob: -5.379624843597412
    3. '(self' → logprob: -13.00462532043457
    4. ')' → logprob: -14.25462532043457
    5. '       ' → logprob: -14.62962532043457
    6. '	self' → logprob: -15.12962532043457
    7. '   ' → logprob: -15.12962532043457
    8. ' ' → logprob: -15.12962532043457
    9. '    ' → logprob: -16.87962532043457
    10. 'space' → logprob: -16.87962532043457

Token 10: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6765974760055542
    2. '(self' → logprob: -1.5515974760055542
    3. ',' → logprob: -2.0515975952148438
    4. ')' → logprob: -2.8015975952148438
    5. '(' → logprob: -3.5515975952148438
    6. ' self' → logprob: -3.5515975952148438
    7. ' (' → logprob: -4.051597595214844
    8. '<|end|>' → logprob: -5.801597595214844
    9. '):' → logprob: -6.176597595214844
    10. '   ' → logprob: -6.551597595214844

Token 11: ' symbol' (ID: 10038)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.20237746834754944
    2. 'self' → logprob: -1.702377438545227
    3. ' trap' → logprob: -8.077377319335938
    4. 'name' → logprob: -8.952377319335938
    5. ' type' → logprob: -8.952377319335938
    6. ' name' → logprob: -9.077377319335938
    7. 'trap' → logprob: -9.952377319335938
    8. 'type' → logprob: -9.952377319335938
    9. ')' → logprob: -10.202377319335938
    10. ' )' → logprob: -10.202377319335938

Token 12: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018677061423659325
    2. ',' → logprob: -4.768677234649658
    3. ')' → logprob: -4.893677234649658
    4. ':' → logprob: -6.768677234649658
    5. '):
' → logprob: -6.893677234649658
    6. '=' → logprob: -8.7686767578125
    7. '   ' → logprob: -9.3936767578125
    8. ' ):' → logprob: -10.6436767578125
    9. '```' → logprob: -10.7686767578125
    10. '_' → logprob: -11.6436767578125

Token 13: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.5762676000595093
    2. ' str' → logprob: -0.8262676000595093
    3. ')' → logprob: -8.57626724243164
    4. ' ' → logprob: -10.45126724243164
    5. '   ' → logprob: -10.70126724243164
    6. ':str' → logprob: -11.07626724243164
    7. 's' → logprob: -11.32626724243164
    8. '	str' → logprob: -11.32626724243164
    9. '(str' → logprob: -11.70126724243164
    10. ' )' → logprob: -11.82626724243164

Token 14: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030284708365797997
    2. ')' → logprob: -4.030284881591797
    3. ',' → logprob: -4.655284881591797
    4. '):
' → logprob: -6.030284881591797
    5. '   ' → logprob: -9.655284881591797
    6. ':' → logprob: -10.030284881591797
    7. '       ' → logprob: -12.030284881591797
    8. '):

' → logprob: -12.155284881591797
    9. '```' → logprob: -12.405284881591797
    10. ')->' → logprob: -12.530284881591797

Token 15: ' damage' (ID: 10364)
  Prédit: ' damage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' damage' → logprob: -0.8072656393051147
    2. ' name' → logprob: -1.0572656393051147
    3. ' position' → logprob: -3.5572657585144043
    4. ' description' → logprob: -3.5572657585144043
    5. 'damage' → logprob: -4.182265758514404
    6. 'name' → logprob: -4.182265758514404
    7. ' durability' → logprob: -4.307265758514404
    8. ' level' → logprob: -4.432265758514404
    9. ' cost' → logprob: -4.807265758514404
    10. ' size' → logprob: -4.807265758514404

Token 16: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04957015812397003
    2. '):' → logprob: -3.674570083618164
    3. ',' → logprob: -3.799570083618164
    4. '_amount' → logprob: -8.674570083618164
    5. ')' → logprob: -8.799570083618164
    6. '=' → logprob: -9.299570083618164
    7. '_points' → logprob: -9.924570083618164
    8. '):
' → logprob: -10.674570083618164
    9. ':int' → logprob: -10.799570083618164
    10. ' :' → logprob: -10.924570083618164

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5760562419891357
    2. ' int' → logprob: -0.8260562419891357
    3. ')' → logprob: -10.576056480407715
    4. '[int' → logprob: -10.576056480407715
    5. ':int' → logprob: -11.201056480407715
    6. ' float' → logprob: -11.451056480407715
    7. '=int' → logprob: -11.701056480407715
    8. '(int' → logprob: -11.826056480407715
    9. ' )' → logprob: -11.951056480407715
    10. ' ' → logprob: -12.451056480407715

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009913324378430843
    2. ',' → logprob: -4.884913444519043
    3. ')' → logprob: -6.259913444519043
    4. '):
' → logprob: -8.009913444519043
    5. '   ' → logprob: -10.384913444519043
    6. ':' → logprob: -11.009913444519043
    7. ' ):' → logprob: -12.884913444519043
    8. '```' → logprob: -13.009913444519043
    9. '):
' → logprob: -13.259913444519043
    10. ' ' → logprob: -13.634913444519043

Token 19: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03403591737151146
    2. '   ' → logprob: -4.284035682678223
    3. ':' → logprob: -4.659035682678223
    4. '\n' → logprob: -6.034035682678223
    5. '<|end|>' → logprob: -6.659035682678223
    6. '\' → logprob: -7.034035682678223
    7. '```' → logprob: -7.034035682678223
    8. 'newline' → logprob: -7.159035682678223
    9. 'self' → logprob: -7.284035682678223
    10. ')' → logprob: -7.409035682678223

Token 20: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.17066031694412231
    2. '       ' → logprob: -1.9206602573394775
    3. ' self' → logprob: -4.670660495758057
    4. '   ' → logprob: -7.670660495758057
    5. '           ' → logprob: -8.545660018920898
    6. '```' → logprob: -8.795660018920898
    7. '_self' → logprob: -9.795660018920898
    8. ' ' → logprob: -10.045660018920898
    9. '	self' → logprob: -11.170660018920898
    10. 'Self' → logprob: -11.670660018920898

Token 21: '.symbol' (ID: 70386)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1131628081202507
    2. '.symbol' → logprob: -2.2381627559661865
    3. '.damage' → logprob: -9.613162994384766
    4. ' .' → logprob: -9.863162994384766
    5. 'symbol' → logprob: -10.488162994384766
    6. '.s' → logprob: -10.613162994384766
    7. '.sym' → logprob: -10.613162994384766
    8. 'self' → logprob: -10.738162994384766
    9. '.self' → logprob: -10.863162994384766
    10. '._' → logprob: -10.863162994384766

Token 22: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5792930126190186
    2. ' =' → logprob: -0.8292930126190186
    3. '<|end|>' → logprob: -6.079293251037598
    4. ')' → logprob: -7.954293251037598
    5. '       ' → logprob: -8.704293251037598
    6. '.' → logprob: -8.704293251037598
    7. '<|end|>' → logprob: -9.329293251037598
    8. ' ' → logprob: -9.454293251037598
    9. ',' → logprob: -9.829293251037598
    10. '   ' → logprob: -9.954293251037598

Token 23: ' symbol' (ID: 10038)
  Prédit: ' symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' symbol' → logprob: -0.04859009385108948
    2. 'symbol' → logprob: -3.0485901832580566
    3. ' symbole' → logprob: -14.298589706420898
    4. ' ' → logprob: -14.548589706420898
    5. '(symbol' → logprob: -14.548589706420898
    6. ' символ' → logprob: -15.548589706420898
    7. 'Symbol' → logprob: -15.673589706420898
    8. '_symbol' → logprob: -15.798589706420898
    9. ' ' → logprob: -16.1735897064209
    10. ' simbol' → logprob: -16.2985897064209

Token 24: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1736559271812439
    2. '<|end|>' → logprob: -1.9236559867858887
    3. '        ' → logprob: -5.423655986785889
    4. ' ' → logprob: -5.923655986785889
    5. '```' → logprob: -6.423655986785889
    6. '        
' → logprob: -6.673655986785889
    7. '<|end|>' → logprob: -7.048655986785889
    8. '    ' → logprob: -7.673655986785889
    9. '   ' → logprob: -8.29865550994873
    10. ')' → logprob: -8.42365550994873

Token 26: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006420594174414873
    2. 'self' (adapté à ' self') → logprob: -5.131420612335205
    3. ' self' → logprob: -7.631420612335205
    4. '   ' → logprob: -13.506420135498047
    5. '	self' → logprob: -13.756420135498047
    6. '      ' → logprob: -14.131420135498047
    7. '        ' → logprob: -14.506420135498047
    8. 'damage' → logprob: -14.506420135498047
    9. '
' → logprob: -14.756420135498047
    10. ',' → logprob: -14.881420135498047

Token 27: '.damage' (ID: 140039)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10072740167379379
    2. '.damage' → logprob: -2.3507273197174072
    3. '.d' → logprob: -8.350727081298828
    4. '.symbol' → logprob: -8.475727081298828
    5. 'damage' → logprob: -10.350727081298828
    6. ' .' → logprob: -11.350727081298828
    7. '.s' → logprob: -11.850727081298828
    8. '.name' → logprob: -12.975727081298828
    9. '.user' → logprob: -12.975727081298828
    10. '.is' → logprob: -13.350727081298828

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868789076805115
    2. '=' → logprob: -1.1368789672851562
    3. '<|end|>' → logprob: -12.386878967285156
    4. '   ' → logprob: -13.761878967285156
    5. ' ' → logprob: -13.886878967285156
    6. ' =
' → logprob: -14.011878967285156
    7. ')' → logprob: -15.511878967285156
    8. ' =)' → logprob: -15.636878967285156
    9. ',' → logprob: -16.261878967285156
    10. '=

' → logprob: -16.636878967285156

Token 29: ' damage' (ID: 10364)
  Prédit: ' damage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' damage' → logprob: -0.054901123046875
    2. 'damage' → logprob: -2.929901123046875
    3. '	damage' → logprob: -11.804901123046875
    4. '0' → logprob: -12.804901123046875
    5. '.damage' → logprob: -13.054901123046875
    6. ' ' → logprob: -13.054901123046875
    7. ' ' → logprob: -13.179901123046875
    8. 'dam' → logprob: -13.929901123046875
    9. '_damage' → logprob: -14.929901123046875
    10. ' dam' → logprob: -14.929901123046875

Token 30: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10306712239980698
    2. '<|end|>' → logprob: -2.72806715965271
    3. '   ' → logprob: -4.478066921234131
    4. '    
' → logprob: -4.853066921234131
    5. '\n' → logprob: -5.728066921234131
    6. '

' → logprob: -6.103066921234131
    7. '```' → logprob: -6.603066921234131
    8. ':' → logprob: -6.728066921234131
    9. ' 
' → logprob: -6.853066921234131
    10. 'class' → logprob: -7.478066921234131

Token 31: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010610788129270077
    2. 'class' → logprob: -5.260610580444336
    3. '

' → logprob: -5.885610580444336
    4. '   ' → logprob: -6.885610580444336
    5. '<|end|>' → logprob: -7.510610580444336
    6. '```' → logprob: -8.010610580444336
    7. '    
' → logprob: -8.385610580444336
    8. 'n' → logprob: -9.635610580444336
    9. '\n' → logprob: -9.885610580444336
    10. ',' → logprob: -10.010610580444336

Token 32: ' Potion' (ID: 186654)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18675921857357025
    2. ' Trap' → logprob: -2.1867592334747314
    3. ' Player' → logprob: -3.9367592334747314
    4. ' Space' → logprob: -4.186758995056152
    5. ' Enemy' → logprob: -4.311758995056152
    6. ' Treasure' → logprob: -6.561758995056152
    7. ' Tr' → logprob: -6.686758995056152
    8. ' Monster' → logprob: -7.061758995056152
    9. ' ' → logprob: -7.436758995056152
    10. ' space' → logprob: -7.436758995056152

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020735294092446566
    2. '):' → logprob: -7.127073764801025
    3. '(' → logprob: -7.252073764801025
    4. '():' → logprob: -9.252073287963867
    5. '(object' → logprob: -9.377073287963867
    6. 'Type' → logprob: -9.502073287963867
    7. ' :' → logprob: -9.627073287963867
    8. '<|end|>' → logprob: -9.752073287963867
    9. '(Type' → logprob: -10.127073287963867
    10. '>:' → logprob: -10.502073287963867

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009497877210378647
    2. '(' → logprob: -4.88449764251709
    3. '(n' → logprob: -7.88449764251709
    4. '<|end|>' → logprob: -7.88449764251709
    5. 'def' → logprob: -8.50949764251709
    6. ' (' → logprob: -8.75949764251709
    7. '    ' → logprob: -9.13449764251709
    8. ' def' → logprob: -9.13449764251709
    9. ' ' → logprob: -9.25949764251709
    10. '(object' → logprob: -9.63449764251709

Token 35: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7916593551635742
    2. 'def' (adapté à ' def') → logprob: -1.0416593551635742
    3. ' def' → logprob: -1.7916593551635742
    4. 'class' → logprob: -3.666659355163574
    5. ' class' → logprob: -7.291659355163574
    6. ' ' → logprob: -8.041659355163574
    7. '    ' → logprob: -8.416659355163574
    8. '```' → logprob: -8.791659355163574
    9. '(' → logprob: -9.416659355163574
    10. ' (' → logprob: -9.666659355163574

Token 36: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.004171356093138456
    2. '_' → logprob: -6.129171371459961
    3. '__' → logprob: -6.504171371459961
    4. '_init' → logprob: -8.629171371459961
    5. ' ' → logprob: -8.879171371459961
    6. ' init' → logprob: -9.379171371459961
    7. ' ' → logprob: -10.004171371459961
    8. ' _' → logprob: -10.629171371459961
    9. ' def' → logprob: -12.004171371459961
    10. ' ___' → logprob: -12.504171371459961

Token 37: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.0206720617134124e-05
    2. '   ' → logprob: -12.62501049041748
    3. 'i' → logprob: -12.87501049041748
    4. ' init' → logprob: -13.62501049041748
    5. 'int' → logprob: -14.50001049041748
    6. 'ini' → logprob: -14.50001049041748
    7. '  ' → logprob: -14.62501049041748
    8. 'in' → logprob: -14.87501049041748
    9. 'def' → logprob: -15.00001049041748
    10. '```' → logprob: -15.25001049041748

Token 38: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0915808379650116
    2. '__' → logprob: -2.466580867767334
    3. '(' → logprob: -6.841580867767334
    4. '__((' → logprob: -7.341580867767334
    5. '__(
' → logprob: -7.716580867767334
    6. '(self' → logprob: -8.591580390930176
    7. ' (' → logprob: -9.216580390930176
    8. '__(*' → logprob: -9.716580390930176
    9. '__('' → logprob: -9.841580390930176
    10. '<|end|>' → logprob: -11.216580390930176

Token 39: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0028493294958025217
    2. ' self' → logprob: -5.877849102020264
    3. ')' → logprob: -10.127849578857422
    4. '(self' → logprob: -13.627849578857422
    5. '	self' → logprob: -13.877849578857422
    6. 'type' → logprob: -15.002849578857422
    7. 'sel' → logprob: -15.127849578857422
    8. '   ' → logprob: -15.127849578857422
    9. ',' → logprob: -15.252849578857422
    10. ' potion' → logprob: -15.252849578857422

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.044620852917432785
    2. ' ,' → logprob: -3.5446207523345947
    3. 'self' → logprob: -4.294620990753174
    4. ' self' → logprob: -6.919620990753174
    5. ',self' → logprob: -10.294620513916016
    6. ')' → logprob: -10.669620513916016
    7. '   ' → logprob: -11.044620513916016
    8. '(self' → logprob: -11.419620513916016
    9. ' potion' → logprob: -11.419620513916016
    10. 'type' → logprob: -11.544620513916016

Token 41: ' heal' (ID: 40582)
  Prédit: ' effect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' effect' → logprob: -1.11520516872406
    2. ' name' → logprob: -1.86520516872406
    3. ' color' → logprob: -2.1152052879333496
    4. ' type' → logprob: -2.1152052879333496
    5. ' strength' → logprob: -2.7402052879333496
    6. ' amount' → logprob: -2.8652052879333496
    7. ' potion' → logprob: -3.1152052879333496
    8. 'effect' → logprob: -3.8652052879333496
    9. ' quantity' → logprob: -3.9902052879333496
    10. 'name' → logprob: -4.36520528793335

Token 42: '_amount' (ID: 29145)
  Prédit: '_amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amount' → logprob: -0.0025487891398370266
    2. ':' → logprob: -6.252548694610596
    3. '_points' → logprob: -8.377549171447754
    4. 'amount' → logprob: -9.127549171447754
    5. '_amt' → logprob: -9.377549171447754
    6. '):' → logprob: -9.752549171447754
    7. '_' → logprob: -10.377549171447754
    8. 'ing' → logprob: -10.627549171447754
    9. 'ed' → logprob: -11.377549171447754
    10. '   ' → logprob: -11.502549171447754

Token 43: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03384429216384888
    2. '):' → logprob: -3.408844232559204
    3. ':int' → logprob: -8.908843994140625
    4. ' ):' → logprob: -10.908843994140625
    5. '):
' → logprob: -11.033843994140625
    6. ' :' → logprob: -11.283843994140625
    7. ')' → logprob: -11.658843994140625
    8. '=' → logprob: -12.658843994140625
    9. '   ' → logprob: -13.283843994140625
    10. '```' → logprob: -14.658843994140625

Token 44: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5759568214416504
    2. ' int' → logprob: -0.8259568214416504
    3. ')' → logprob: -11.700956344604492
    4. ':int' → logprob: -13.200956344604492
    5. ' )' → logprob: -13.325956344604492
    6. ',int' → logprob: -13.450956344604492
    7. '=int' → logprob: -13.575956344604492
    8. ']int' → logprob: -14.075956344604492
    9. ' ' → logprob: -14.450956344604492
    10. '(int' → logprob: -14.575956344604492

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003647826088126749
    2. ')' → logprob: -8.125365257263184
    3. '):
' → logprob: -9.750365257263184
    4. '   ' → logprob: -12.125365257263184
    5. ' ):' → logprob: -13.125365257263184
    6. ':' → logprob: -13.500365257263184
    7. ',' → logprob: -14.500365257263184
    8. '       ' → logprob: -14.625365257263184
    9. '):
' → logprob: -15.125365257263184
    10. ' ' → logprob: -15.625365257263184

Token 46: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014302362687885761
    2. 'self' → logprob: -6.626430034637451
    3. ' self' → logprob: -9.37643051147461
    4. '<|end|>' → logprob: -11.37643051147461
    5. '```' → logprob: -13.00143051147461
    6. '   ' → logprob: -13.37643051147461
    7. '
' → logprob: -14.37643051147461
    8. '      ' → logprob: -14.50143051147461
    9. ',' → logprob: -14.50143051147461
    10. '<|end|>' → logprob: -14.87643051147461

Token 47: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.20238681137561798
    2. ' self' → logprob: -1.7023868560791016
    3. '       ' → logprob: -6.952386856079102
    4. ' ' → logprob: -11.827386856079102
    5. ' ' → logprob: -12.827386856079102
    6. '   ' → logprob: -12.952386856079102
    7. '	self' → logprob: -13.577386856079102
    8. 's' → logprob: -13.952386856079102
    9. '(self' → logprob: -14.202386856079102
    10. '        ' → logprob: -14.827386856079102

Token 48: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.25353187322616577
    2. '.' → logprob: -1.5035319328308105
    3. ' .' → logprob: -6.5035319328308105
    4. '.damage' → logprob: -9.628531455993652
    5. '.He' → logprob: -10.878531455993652
    6. '.health' → logprob: -12.628531455993652
    7. '_he' → logprob: -12.753531455993652
    8. 'heal' → logprob: -13.253531455993652
    9. 'he' → logprob: -13.378531455993652
    10. ' ' → logprob: -13.628531455993652

Token 49: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -1.1994775377388578e-05
    2. '   ' → logprob: -12.375012397766113
    3. ' al' → logprob: -13.375012397766113
    4. 'a' → logprob: -13.500012397766113
    5. '       ' → logprob: -13.500012397766113
    6. '           ' → logprob: -14.500012397766113
    7. '```' → logprob: -14.625012397766113
    8. '        ' → logprob: -14.875012397766113
    9. 'alt' → logprob: -15.500012397766113
    10. 'l' → logprob: -15.500012397766113

Token 50: '_amount' (ID: 29145)
  Prédit: '_amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amount' → logprob: -1.1756367712223437e-05
    2. '_' → logprob: -11.500011444091797
    3. '_amt' → logprob: -14.750011444091797
    4. ' _' → logprob: -15.375011444091797
    5. '_value' → logprob: -15.750011444091797
    6. '_quantity' → logprob: -15.875011444091797
    7. '=_' → logprob: -16.500011444091797
    8. 'amount' → logprob: -16.750011444091797
    9. '_am' → logprob: -16.875011444091797
    10. 's' → logprob: -16.875011444091797

Token 51: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519327998161316
    2. ' =' → logprob: -1.5019328594207764
    3. ' ' → logprob: -13.751933097839355
    4. '   ' → logprob: -14.126933097839355
    5. '       ' → logprob: -14.251933097839355
    6. '=self' → logprob: -14.626933097839355
    7. '<|end|>' → logprob: -14.626933097839355
    8. 'self' → logprob: -16.37693214416504
    9. '        ' → logprob: -16.75193214416504
    10. '  ' → logprob: -17.37693214416504

Token 52: ' heal' (ID: 40582)
  Prédit: ' heal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heal' → logprob: -0.07889782637357712
    2. 'heal' → logprob: -2.578897714614868
    3. ' ' → logprob: -12.203897476196289
    4. 'he' → logprob: -13.328897476196289
    5. ' healing' → logprob: -14.703897476196289
    6. ' he' → logprob: -14.828897476196289
    7. ' ' → logprob: -15.453897476196289
    8. ' heil' → logprob: -16.20389747619629
    9. ' healed' → logprob: -16.70389747619629
    10. ' healer' → logprob: -16.70389747619629

Token 53: '_amount' (ID: 29145)
  Prédit: '_amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amount' → logprob: -0.02568654902279377
    2. 't' → logprob: -4.275686740875244
    3. '_' → logprob: -4.775686740875244
    4. 'al' → logprob: -6.275686740875244
    5. '_amt' → logprob: -7.525686740875244
    6. 'ed' → logprob: -8.900686264038086
    7. 'e' → logprob: -9.525686264038086
    8. 'amount' → logprob: -9.775686264038086
    9. 'a' → logprob: -9.900686264038086
    10. '_t' → logprob: -9.900686264038086

Token 54: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35186246037483215
    2. '

' → logprob: -1.8518624305725098
    3. 'class' → logprob: -1.9768624305725098
    4. ' class' → logprob: -7.72686243057251
    5. '<|end|>' → logprob: -7.97686243057251
    6. '```' → logprob: -8.726862907409668
    7. '
' → logprob: -10.351862907409668
    8. '
    
' → logprob: -10.726862907409668
    9. '


' → logprob: -10.726862907409668
    10. '' → logprob: -10.851862907409668

Token 55: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.003849009284749627
    2. '
' → logprob: -5.628849029541016
    3. '

' → logprob: -9.003849029541016
    4. 'c' → logprob: -9.878849029541016
    5. '```' → logprob: -11.003849029541016
    6. ' class' → logprob: -11.128849029541016
    7. 'def' → logprob: -11.378849029541016
    8. 'clas' → logprob: -11.878849029541016
    9. 'cl' → logprob: -12.378849029541016
    10. '\n' → logprob: -12.753849029541016

Token 56: ' Position' (ID: 21829)
  Prédit: ' Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Player' → logprob: -0.03499305248260498
    2. ' Hero' → logprob: -4.1599931716918945
    3. ' Character' → logprob: -4.9099931716918945
    4. ' Trap' → logprob: -5.4099931716918945
    5. ' Monster' → logprob: -6.2849931716918945
    6. ' Enemy' → logprob: -7.0349931716918945
    7. ' ' → logprob: -7.0349931716918945
    8. 'Player' → logprob: -7.2849931716918945
    9. ' Treasure' → logprob: -7.4099931716918945
    10. ' Warrior' → logprob: -7.9099931716918945

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013224469497799873
    2. ' :' → logprob: -4.3882246017456055
    3. '():' → logprob: -8.388224601745605
    4. '):' → logprob: -8.763224601745605
    5. '<|end|>' → logprob: -8.763224601745605
    6. '(' → logprob: -9.013224601745605
    7. '(object' → logprob: -11.513224601745605
    8. ':
' → logprob: -11.638224601745605
    9. ':**' → logprob: -11.888224601745605
    10. '>:' → logprob: -12.263224601745605

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12039326876401901
    2. '<|end|>' → logprob: -2.4953932762145996
    3. '(' → logprob: -5.1203932762146
    4. ' ' → logprob: -5.7453932762146
    5. '```' → logprob: -5.8703932762146
    6. ':' → logprob: -5.8703932762146
    7. ' (' → logprob: -5.9953932762146
    8. '
' → logprob: -5.9953932762146
    9. '  ' → logprob: -6.3703932762146
    10. '    ' → logprob: -6.3703932762146

Token 59: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16063189506530762
    2. 'def' (adapté à ' def') → logprob: -2.4106318950653076
    3. ' def' → logprob: -3.0356318950653076
    4. '    ' → logprob: -5.535632133483887
    5. '(' → logprob: -6.785632133483887
    6. ' ' → logprob: -6.785632133483887
    7. '```' → logprob: -6.785632133483887
    8. ' (' → logprob: -6.910632133483887
    9. 'class' → logprob: -7.035632133483887
    10. '  ' → logprob: -7.785632133483887

Token 60: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18390792608261108
    2. ' __' → logprob: -1.8089079856872559
    3. ' (' → logprob: -6.183907985687256
    4. '  ' → logprob: -7.683907985687256
    5. ' ' → logprob: -8.058907508850098
    6. ' ()' → logprob: -8.558907508850098
    7. ' _' → logprob: -8.558907508850098
    8. '(' → logprob: -8.683907508850098
    9. ' int' → logprob: -8.808907508850098
    10. ' def' → logprob: -9.433907508850098

Token 61: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.07942318171262741
    2. 'i' → logprob: -2.579423189163208
    3. 'in' → logprob: -7.829422950744629
    4. 'ini' → logprob: -9.079422950744629
    5. 'int' → logprob: -11.079422950744629
    6. '_i' → logprob: -13.079422950744629
    7. '_init' → logprob: -13.954422950744629
    8. '(i' → logprob: -14.204422950744629
    9. '_' → logprob: -14.329422950744629
    10. '```' → logprob: -14.454422950744629

Token 62: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1619458943605423
    2. '__(' → logprob: -2.5369458198547363
    3. ' (' → logprob: -3.2869458198547363
    4. '<|end|>' → logprob: -3.9119458198547363
    5. '__' → logprob: -5.036945819854736
    6. '_' → logprob: -6.036945819854736
    7. '(self' → logprob: -6.661945819854736
    8. '__(
' → logprob: -7.036945819854736
    9. '__((' → logprob: -7.161945819854736
    10. ',' → logprob: -8.411946296691895

Token 63: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015062900492921472
    2. ' self' → logprob: -6.626506328582764
    3. 'x' → logprob: -8.626505851745605
    4. '0' → logprob: -14.626505851745605
    5. ')' → logprob: -15.126505851745605
    6. ' x' → logprob: -15.876505851745605
    7. ' ' → logprob: -16.626506805419922
    8. '   ' → logprob: -16.626506805419922
    9. '(self' → logprob: -17.001506805419922
    10. '	self' → logprob: -18.126506805419922

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014348712749779224
    2. ' ,' → logprob: -4.26434850692749
    3. ')' → logprob: -9.389348983764648
    4. 'self' → logprob: -10.014348983764648
    5. '):' → logprob: -11.514348983764648
    6. ' ' → logprob: -12.014348983764648
    7. '(' → logprob: -12.389348983764648
    8. ':' → logprob: -12.389348983764648
    9. ' )' → logprob: -12.389348983764648
    10. '_,' → logprob: -12.514348983764648

Token 65: ' row' (ID: 5225)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2524811029434204
    2. 'x' → logprob: -1.5024811029434204
    3. ' self' → logprob: -8.002481460571289
    4. 'self' → logprob: -8.627481460571289
    5. ' ' → logprob: -11.127481460571289
    6. ')x' → logprob: -11.627481460571289
    7. ' row' → logprob: -12.502481460571289
    8. '	x' → logprob: -12.877481460571289
    9. '```' → logprob: -13.127481460571289
    10. ')' → logprob: -13.127481460571289

Token 66: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007962428033351898
    2. ' ,' → logprob: -5.382962226867676
    3. '):' → logprob: -6.382962226867676
    4. '<|end|>' → logprob: -7.132962226867676
    5. ')' → logprob: -7.382962226867676
    6. ':' → logprob: -8.757962226867676
    7. '<|end|>' → logprob: -11.132962226867676
    8. ',int' → logprob: -11.632962226867676
    9. ' ):' → logprob: -12.007962226867676
    10. '   ' → logprob: -12.007962226867676

Token 67: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5193260908126831
    2. 'int' → logprob: -1.519326090812683
    3. ' ' → logprob: -1.769326090812683
    4. '0' → logprob: -4.894326210021973
    5. ':int' → logprob: -5.644326210021973
    6. ' )' → logprob: -6.644326210021973
    7. ')' → logprob: -6.894326210021973
    8. ' ,' → logprob: -6.894326210021973
    9. ',' → logprob: -8.019326210021973
    10. '(int' → logprob: -8.644326210021973

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041208078619092703
    2. ' ,' → logprob: -7.8754119873046875
    3. '<|end|>' → logprob: -11.375411987304688
    4. ')' → logprob: -11.625411987304688
    5. ',int' → logprob: -12.250411987304688
    6. ',
' → logprob: -13.250411987304688
    7. '):' → logprob: -13.375411987304688
    8. '‌,' → logprob: -13.750411987304688
    9. '<|end|>' → logprob: -14.375411987304688
    10. ',row' → logprob: -14.625411987304688

Token 69: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.14509667456150055
    2. ' column' → logprob: -2.020096778869629
    3. 'column' → logprob: -6.520096778869629
    4. 'col' → logprob: -7.645096778869629
    5. ' ' → logprob: -8.520096778869629
    6. ',column' → logprob: -8.895096778869629
    7. '<|end|>' → logprob: -9.645096778869629
    8. ' ' → logprob: -10.770096778869629
    9. '	column' → logprob: -11.770096778869629
    10. ' space' → logprob: -12.020096778869629

Token 70: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1276106834411621
    2. ')' → logprob: -2.127610683441162
    3. ':' → logprob: -7.752610683441162
    4. '):
' → logprob: -8.62761116027832
    5. '<|end|>' → logprob: -10.37761116027832
    6. ' ):' → logprob: -11.12761116027832
    7. ',' → logprob: -12.00261116027832
    8. ' ' → logprob: -12.50261116027832
    9. '   ' → logprob: -12.87761116027832
    10. ')>' → logprob: -13.12761116027832

Token 71: ' int' (ID: 677)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.8934827446937561
    2. ' int' → logprob: -1.6434826850891113
    3. ' ' → logprob: -1.8934826850891113
    4. ')' → logprob: -1.8934826850891113
    5. 'int' → logprob: -2.3934826850891113
    6. ':int' → logprob: -6.143482685089111
    7. ' ):' → logprob: -6.768482685089111
    8. '1' → logprob: -8.01848316192627
    9. ' ):
' → logprob: -8.01848316192627
    10. ' ),' → logprob: -8.64348316192627

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05505131930112839
    2. ')' → logprob: -2.930051326751709
    3. '):
' → logprob: -9.05505084991455
    4. ':' → logprob: -9.93005084991455
    5. ',' → logprob: -13.68005084991455
    6. ')**' → logprob: -14.68005084991455
    7. '   ' → logprob: -14.93005084991455
    8. ' ):' → logprob: -15.30505084991455
    9. '),' → logprob: -15.30505084991455
    10. '):
' → logprob: -15.80505084991455

Token 73: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013842601329088211
    2. ' )' → logprob: -5.263842582702637
    3. ')' → logprob: -5.888842582702637
    4. ' 
' → logprob: -6.138842582702637
    5. '<|end|>' → logprob: -6.888842582702637
    6. '    ' → logprob: -7.513842582702637
    7. '       ' → logprob: -7.513842582702637
    8. '        ' → logprob: -7.638842582702637
    9. 'self' → logprob: -8.388842582702637
    10. 'r' → logprob: -9.138842582702637

Token 74: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5842432379722595
    2. 'self' (adapté à ' self') → logprob: -0.8342432379722595
    3. '       ' → logprob: -4.834243297576904
    4. '        ' → logprob: -8.834242820739746
    5. ' ' → logprob: -9.334242820739746
    6. ' ' → logprob: -9.709242820739746
    7. '	self' → logprob: -11.584242820739746
    8. '   ' → logprob: -11.834242820739746
    9. '    ' → logprob: -13.209242820739746
    10. '  ' → logprob: -14.334242820739746

Token 75: '.row' (ID: 24627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07203774899244308
    2. ' ' → logprob: -3.447037696838379
    3. '=' → logprob: -3.947037696838379
    4. ' =' → logprob: -4.447037696838379
    5. ' .' → logprob: -5.822037696838379
    6. '<|end|>' → logprob: -6.572037696838379
    7. '.row' → logprob: -6.947037696838379
    8. ',' → logprob: -7.572037696838379
    9. '=row' → logprob: -7.822037696838379
    10. ')' → logprob: -8.822037696838379

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39286595582962036
    2. '=' → logprob: -1.1428658962249756
    3. '<|end|>' → logprob: -5.392866134643555
    4. ' ' → logprob: -7.517866134643555
    5. ',' → logprob: -7.642866134643555
    6. ')' → logprob: -8.892866134643555
    7. ' +=' → logprob: -9.267866134643555
    8. '+' → logprob: -9.392866134643555
    9. '<|end|>' → logprob: -9.892866134643555
    10. ' ,' → logprob: -11.517866134643555

Token 77: ' row' (ID: 5225)
  Prédit: ' col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.5570558905601501
    2. ' row' → logprob: -0.9320558905601501
    3. ' ' → logprob: -3.807055950164795
    4. 'row' → logprob: -4.682055950164795
    5. 'col' → logprob: -6.932055950164795
    6. ' ' → logprob: -7.057055950164795
    7. '	row' → logprob: -10.807055473327637
    8. '<|end|>' → logprob: -11.182055473327637
    9. '(row' → logprob: -12.432055473327637
    10. '	col' → logprob: -12.682055473327637

Token 78: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: ' self' (ID: 1051)
  Prédit: ' col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.017180191352963448
    2. 'col' → logprob: -4.5171799659729
    3. ' ' → logprob: -5.6421799659729
    4. ',' → logprob: -6.6421799659729
    5. ' 
' → logprob: -7.2671799659729
    6. ')' → logprob: -9.142180442810059
    7. ',col' → logprob: -9.267180442810059
    8. '<|end|>' → logprob: -9.517180442810059
    9. ''' → logprob: -9.642180442810059
    10. '  
' → logprob: -9.892180442810059

Token 81: '.col' (ID: 7320)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0001266613689949736
    2. '<|end|>' → logprob: -9.875126838684082
    3. ',' → logprob: -10.000126838684082
    4. ' ' → logprob: -11.125126838684082
    5. '.
' → logprob: -11.875126838684082
    6. ')' → logprob: -12.625126838684082
    7. ' .' → logprob: -13.500126838684082
    8. '_' → logprob: -14.250126838684082
    9. '.col' → logprob: -14.375126838684082
    10. '<|end|>' → logprob: -14.500126838684082

Token 82: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.0025107357650995255
    2. 'col' → logprob: -6.0025105476379395
    3. ' ' → logprob: -10.377511024475098
    4. '	col' → logprob: -12.627511024475098
    5. ' coli' → logprob: -15.127511024475098
    6. '<|end|>' → logprob: -16.25251007080078
    7. ' ' → logprob: -16.50251007080078
    8. '.col' → logprob: -16.87751007080078
    9. '[col' → logprob: -17.12751007080078
    10. '0' → logprob: -17.25251007080078

Token 84: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01004941388964653
    2. 'class' → logprob: -5.010049343109131
    3. '

' → logprob: -6.010049343109131
    4. '<|end|>' → logprob: -8.385049819946289
    5. '```' → logprob: -8.385049819946289
    6. '\n' → logprob: -8.885049819946289
    7. ' 
' → logprob: -9.885049819946289
    8. '' → logprob: -10.260049819946289
    9. '   ' → logprob: -10.510049819946289
    10. '\' → logprob: -10.510049819946289

Token 85: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2607344388961792
    2. 'class' → logprob: -1.5107344388961792
    3. '

' → logprob: -4.885734558105469
    4. '```' → logprob: -8.010734558105469
    5. '\n' → logprob: -8.135734558105469
    6. '' → logprob: -9.010734558105469
    7. ' class' → logprob: -9.635734558105469
    8. '\' → logprob: -9.635734558105469
    9. '   ' → logprob: -10.135734558105469
    10. 'c' → logprob: -10.135734558105469

Token 86: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018022574484348297
    2. '<|end|>' → logprob: -4.393022537231445
    3. '

' → logprob: -5.643022537231445
    4. '   ' → logprob: -7.768022537231445
    5. 'def' (adapté à ' def') → logprob: -8.018022537231445
    6. '\n' → logprob: -8.018022537231445
    7. '<|end|>' → logprob: -8.643022537231445
    8. '    
' → logprob: -9.018022537231445
    9. '
    
' → logprob: -9.518022537231445
    10. '' → logprob: -9.518022537231445

Token 87: ' move' (ID: 5275)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021879492327570915
    2. '_' → logprob: -3.8968794345855713
    3. ' ' → logprob: -7.64687967300415
    4. ' ==' → logprob: -8.271879196166992
    5. ' __' → logprob: -8.896879196166992
    6. ' ```' → logprob: -9.896879196166992
    7. '=' → logprob: -10.146879196166992
    8. ' _' → logprob: -10.146879196166992
    9. '-' → logprob: -10.271879196166992
    10. 's' → logprob: -10.396879196166992

Token 88: '(self' (ID: 2402)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02223864756524563
    2. '(' → logprob: -4.022238731384277
    3. '_to' → logprob: -6.397238731384277
    4. '_up' → logprob: -6.647238731384277
    5. '(self' → logprob: -8.147238731384277
    6. '_space' → logprob: -8.272238731384277
    7. '_by' → logprob: -8.772238731384277
    8. '<|end|>' → logprob: -9.272238731384277
    9. '(
' → logprob: -10.147238731384277
    10. 's' → logprob: -10.272238731384277

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21748875081539154
    2. '<|end|>' → logprob: -2.5924887657165527
    3. ' ' → logprob: -2.9674887657165527
    4. ')' → logprob: -3.2174887657165527
    5. '_' → logprob: -3.7174887657165527
    6. ' ,' → logprob: -6.092488765716553
    7. 'self' → logprob: -7.467488765716553
    8. 's' → logprob: -7.967488765716553
    9. '(' → logprob: -8.217488288879395
    10. '_to' → logprob: -8.342488288879395

Token 90: ' direction' (ID: 9262)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7205408811569214
    2. ' direction' → logprob: -1.4705408811569214
    3. 'self' → logprob: -1.7205408811569214
    4. ')' → logprob: -3.095541000366211
    5. 'direction' → logprob: -3.845541000366211
    6. ' )' → logprob: -4.220541000366211
    7. ' ' → logprob: -4.345541000366211
    8. '<|end|>' → logprob: -5.970541000366211
    9. ' delta' → logprob: -6.595541000366211
    10. ' row' → logprob: -6.595541000366211

Token 91: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14819088578224182
    2. ':' → logprob: -2.273190975189209
    3. ')' → logprob: -3.898190975189209
    4. ' ):' → logprob: -4.898190975189209
    5. ',' → logprob: -5.398190975189209
    6. '<|end|>' → logprob: -7.023190975189209
    7. ' ' → logprob: -7.148190975189209
    8. ' )' → logprob: -8.02319049835205
    9. '):
' → logprob: -8.64819049835205
    10. ' ,' → logprob: -9.14819049835205

Token 92: ' str' (ID: 989)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15429046750068665
    2. ')' → logprob: -2.2792904376983643
    3. ' )' → logprob: -4.029290676116943
    4. ' "' → logprob: -4.529290676116943
    5. ' '' → logprob: -4.904290676116943
    6. ' str' → logprob: -6.529290676116943
    7. '<|end|>' → logprob: -6.779290676116943
    8. ' s' → logprob: -8.029290199279785
    9. ',' → logprob: -8.279290199279785
    10. ' ")' → logprob: -8.404290199279785

Token 93: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.017341291531920433
    2. ',' → logprob: -4.642341136932373
    3. ')' → logprob: -5.142341136932373
    4. ':' → logprob: -6.642341136932373
    5. ' ):' → logprob: -8.392341613769531
    6. '):
' → logprob: -8.767341613769531
    7. ' ,' → logprob: -12.142341613769531
    8. '<|end|>' → logprob: -12.267341613769531
    9. ' ' → logprob: -12.392341613769531
    10. ' )' → logprob: -12.642341613769531

Token 94: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: ' moves' (ID: 19523)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15720714628696442
    2. ' 
' → logprob: -3.1572072505950928
    3. ' if' → logprob: -3.1572072505950928
    4. '       ' → logprob: -3.4072072505950928
    5. 'if' → logprob: -5.032207012176514
    6. '        ' → logprob: -5.157207012176514
    7. '        
' → logprob: -6.532207012176514
    8. '    ' → logprob: -6.657207012176514
    9. '\' → logprob: -6.782207012176514
    10. 'r' → logprob: -6.782207012176514

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3092495799064636
    2. '=' → logprob: -1.9342496395111084
    3. '[' → logprob: -2.6842496395111084
    4. '_' → logprob: -3.1842496395111084
    5. '.setdefault' → logprob: -5.934249401092529
    6. '.' → logprob: -6.434249401092529
    7. '.get' → logprob: -6.684249401092529
    8. ' ' → logprob: -6.684249401092529
    9. ')' → logprob: -7.184249401092529
    10. '<|end|>' → logprob: -7.184249401092529

Token 97: ' {'' (ID: 11881)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.030220631510019302
    2. ' {
' → logprob: -4.0302205085754395
    3. ' {'' → logprob: -5.0302205085754395
    4. '{' → logprob: -5.4052205085754395
    5. ' {"' → logprob: -7.0302205085754395
    6. '{
' → logprob: -10.155220985412598
    7. ' {
' → logprob: -10.780220985412598
    8. '{'' → logprob: -11.530220985412598
    9. '{"' → logprob: -11.905220985412598
    10. ' ' → logprob: -12.655220985412598

Token 98: 'U' (ID: 52)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.5206342339515686
    2. 'U' → logprob: -1.8956341743469238
    3. 'up' → logprob: -2.145634174346924
    4. 'N' → logprob: -2.770634174346924
    5. 'u' → logprob: -2.895634174346924
    6. 'n' → logprob: -4.645634174346924
    7. 'UP' → logprob: -5.145634174346924
    8. 'W' → logprob: -5.895634174346924
    9. 'L' → logprob: -7.145634174346924
    10. 'r' → logprob: -7.770634174346924

Token 99: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0018195280572399497
    2. ''' → logprob: -6.751819610595703
    3. '':'' → logprob: -7.751819610595703
    4. 'p' → logprob: -9.251819610595703
    5. ''p' → logprob: -10.376819610595703
    6. ':' → logprob: -10.751819610595703
    7. '-' → logprob: -11.001819610595703
    8. ''):' → logprob: -11.126819610595703
    9. ''>' → logprob: -11.126819610595703
    10. '',' → logprob: -12.001819610595703

Token 100: ' (-' (ID: 21382)
  Prédit: ' (-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (-' → logprob: -0.2014891654253006
    2. '(-' → logprob: -1.7014892101287842
    3. ' (' → logprob: -9.576489448547363
    4. '(' → logprob: -12.326489448547363
    5. ' ('' → logprob: -14.076489448547363
    6. '-' → logprob: -14.076489448547363
    7. ' ' → logprob: -15.826489448547363
    8. ' '' → logprob: -16.701488494873047
    9. '(row' → logprob: -16.701488494873047
    10. '[-' → logprob: -16.951488494873047

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. ')' → logprob: -17.125001907348633
    4. '-' → logprob: -17.125001907348633
    5. '<|end|>' → logprob: -18.125001907348633
    6. '   ' → logprob: -19.125001907348633
    7. 'row' → logprob: -19.875001907348633
    8. '```' → logprob: -19.937501907348633
    9. '
' → logprob: -20.375001907348633
    10. '

' → logprob: -20.375001907348633

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.774276774493046e-05
    2. '<|end|>' → logprob: -10.375038146972656
    3. ' ,' → logprob: -13.000038146972656
    4. ',
' → logprob: -13.375038146972656
    5. ')' → logprob: -13.750038146972656
    6. ',)' → logprob: -14.500038146972656
    7. '<|end|>' → logprob: -15.500038146972656
    8. ',

' → logprob: -15.500038146972656
    9. '),' → logprob: -15.625038146972656
    10. '‌,' → logprob: -16.625038146972656

Token 103: '0' (ID: 15)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2519344687461853
    2. '0' → logprob: -1.50193452835083
    3. ')' → logprob: -13.001934051513672
    4. '<|end|>' → logprob: -13.001934051513672
    5. '1' → logprob: -14.501934051513672
    6. ' )' → logprob: -16.501934051513672
    7. ' 
' → logprob: -16.626934051513672
    8. ',' → logprob: -16.876934051513672
    9. ' ,' → logprob: -17.001934051513672
    10. ' ' → logprob: -17.564434051513672

Token 104: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.2819868326187134
    2. ')' → logprob: -1.4069868326187134
    3. '),
' → logprob: -7.281986713409424
    4. '),

' → logprob: -9.531987190246582
    5. ')}}' → logprob: -10.406987190246582
    6. ',' → logprob: -11.156987190246582
    7. '<|end|>' → logprob: -11.406987190246582
    8. ')}' → logprob: -12.281987190246582
    9. '),(' → logprob: -12.406987190246582
    10. '),'' → logprob: -13.156987190246582

Token 105: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.15937340259552002
    2. ' ' → logprob: -2.6593732833862305
    3. ''' → logprob: -3.4093732833862305
    4. '<|end|>' → logprob: -3.5343732833862305
    5. ')' → logprob: -5.4093732833862305
    6. ''s' → logprob: -5.5343732833862305
    7. '        ' → logprob: -6.2843732833862305
    8. ' (' → logprob: -7.2843732833862305
    9. '    ' → logprob: -7.2843732833862305
    10. ' )' → logprob: -7.9093732833862305

Token 106: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0002422779070911929
    2. ''D' → logprob: -8.625242233276367
    3. ' D' → logprob: -9.750242233276367
    4. ''' → logprob: -13.125242233276367
    5. '"D' → logprob: -14.250242233276367
    6. ' '' → logprob: -14.500242233276367
    7. ')' → logprob: -14.750242233276367
    8. 'R' → logprob: -15.000242233276367
    9. '	D' → logprob: -15.625242233276367
    10. ' ' → logprob: -15.875242233276367

Token 107: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.5283995270729065
    2. ':' → logprob: -0.9033995270729065
    3. '<|end|>' → logprob: -5.528399467468262
    4. '):' → logprob: -7.153399467468262
    5. ''):' → logprob: -8.403399467468262
    6. ' :' → logprob: -9.278399467468262
    7. '":' → logprob: -9.778399467468262
    8. ':(' → logprob: -10.528399467468262
    9. '')' → logprob: -10.903399467468262
    10. ' ':' → logprob: -11.278399467468262

Token 108: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08319070190191269
    2. ' (' → logprob: -2.583190679550171
    3. '1' → logprob: -5.45819091796875
    4. ' ' → logprob: -10.70819091796875
    5. '(+' → logprob: -12.70819091796875
    6. '<|end|>' → logprob: -12.83319091796875
    7. '+' → logprob: -13.95819091796875
    8. ' (+' → logprob: -13.95819091796875
    9. '(
' → logprob: -15.70819091796875
    10. '  ' → logprob: -16.08319091796875

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.383526149671525e-05
    2. ' ' → logprob: -9.875053405761719
    3. '+' → logprob: -13.000053405761719
    4. '```' → logprob: -17.25005340576172
    5. ' +' → logprob: -17.62505340576172
    6. '   ' → logprob: -18.25005340576172
    7. '
' → logprob: -19.06255340576172
    8. ')' → logprob: -19.06255340576172
    9. '۱' → logprob: -19.18755340576172
    10. '  ' → logprob: -19.31255340576172

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.7755875129951164e-05
    2. '<|end|>' → logprob: -10.50004768371582
    3. ' ,' → logprob: -11.75004768371582
    4. ')' → logprob: -12.50004768371582
    5. ',)' → logprob: -12.62504768371582
    6. ',-' → logprob: -14.12504768371582
    7. '),' → logprob: -14.25004768371582
    8. ',
' → logprob: -14.50004768371582
    9. ',None' → logprob: -14.50004768371582
    10. ',),' → logprob: -14.87504768371582

Token 111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007114782347343862
    2. ' ' → logprob: -7.250711441040039
    3. '<|end|>' → logprob: -13.500711441040039
    4. ',' → logprob: -17.25071144104004
    5. ')' → logprob: -18.12571144104004
    6. '```' → logprob: -18.50071144104004
    7. '۰' → logprob: -19.25071144104004
    8. '
' → logprob: -19.50071144104004
    9. '  ' → logprob: -19.62571144104004
    10. '1' → logprob: -20.12571144104004

Token 112: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.004196405876427889
    2. ')' → logprob: -5.504196643829346
    3. ',' → logprob: -9.754196166992188
    4. ')}' → logprob: -10.254196166992188
    5. '),
' → logprob: -11.754196166992188
    6. ' ),' → logprob: -12.379196166992188
    7. '},' → logprob: -13.129196166992188
    8. ')}}' → logprob: -13.129196166992188
    9. '),(' → logprob: -13.254196166992188
    10. '),

' → logprob: -13.254196166992188

Token 113: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.08554842323064804
    2. ''' → logprob: -2.5855484008789062
    3. ' ' → logprob: -5.585548400878906
    4. '<|end|>' → logprob: -6.710548400878906
    5. ''s' → logprob: -7.085548400878906
    6. ' (' → logprob: -9.210548400878906
    7. ''u' → logprob: -9.460548400878906
    8. '    ' → logprob: -9.710548400878906
    9. ')' → logprob: -10.085548400878906
    10. '        ' → logprob: -10.085548400878906

Token 114: 'L' (ID: 43)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2443147897720337
    2. ' ' → logprob: -1.7443147897720337
    3. ''' → logprob: -3.369314670562744
    4. ',' → logprob: -5.619314670562744
    5. ' '' → logprob: -6.244314670562744
    6. ')' → logprob: -7.244314670562744
    7. '-' → logprob: -8.119315147399902
    8. '  ' → logprob: -8.494315147399902
    9. ' ,' → logprob: -8.869315147399902
    10. ','' → logprob: -9.119315147399902

Token 115: '':' (ID: 2337)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2957533895969391
    2. '<|end|>' → logprob: -1.4207533597946167
    3. ':' → logprob: -4.920753479003906
    4. '',' → logprob: -5.795753479003906
    5. ' ,' → logprob: -5.920753479003906
    6. '':' → logprob: -7.420753479003906
    7. '',(' → logprob: -8.295753479003906
    8. '<|end|>' → logprob: -8.420753479003906
    9. ')' → logprob: -9.045753479003906
    10. '):' → logprob: -9.545753479003906

Token 116: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4695717692375183
    2. '0' → logprob: -1.844571828842163
    3. ' (' → logprob: -1.844571828842163
    4. ' ' → logprob: -2.844571828842163
    5. ',' → logprob: -8.094572067260742
    6. '<|end|>' → logprob: -10.344572067260742
    7. ' ,' → logprob: -10.469572067260742
    8. ')' → logprob: -11.844572067260742
    9. '
' → logprob: -12.969572067260742
    10. '  ' → logprob: -13.344572067260742

Token 117: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009219424682669342
    2. ' ' → logprob: -7.000921726226807
    3. ',' → logprob: -11.625922203063965
    4. '-' → logprob: -14.875922203063965
    5. ' ,' → logprob: -15.313422203063965
    6. '
' → logprob: -15.438422203063965
    7. '  ' → logprob: -15.688422203063965
    8. '   ' → logprob: -16.31342124938965
    9. '```' → logprob: -16.43842124938965
    10. '

' → logprob: -16.62592124938965

Token 118: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.22548949718475342
    2. ',' → logprob: -1.6004894971847534
    3. '-' → logprob: -10.850489616394043
    4. ',-

' → logprob: -10.975489616394043
    5. ' ,' → logprob: -11.475489616394043
    6. ' ,-' → logprob: -11.600489616394043
    7. ',-
' → logprob: -11.725489616394043
    8. ',
' → logprob: -13.100489616394043
    9. ',

' → logprob: -13.350489616394043
    10. ')' → logprob: -13.475489616394043

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -13.00000286102295
    3. ')' → logprob: -14.25000286102295
    4. '<|end|>' → logprob: -16.000003814697266
    5. '```' → logprob: -17.250003814697266
    6. '  ' → logprob: -18.062503814697266
    7. '۱' → logprob: -18.125003814697266
    8. '">' → logprob: -18.312503814697266
    9. '１' → logprob: -18.437503814697266
    10. '१' → logprob: -18.625003814697266

Token 120: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.02470463328063488
    2. ')' → logprob: -3.899704694747925
    3. ')}' → logprob: -5.524704456329346
    4. ' ),' → logprob: -9.774704933166504
    5. ')}}' → logprob: -10.399704933166504
    6. '},' → logprob: -10.649704933166504
    7. '}' → logprob: -10.774704933166504
    8. '),
' → logprob: -11.899704933166504
    9. ''),' → logprob: -11.899704933166504
    10. ')},' → logprob: -12.399704933166504

Token 121: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.6106345057487488
    2. ''' → logprob: -0.8606345057487488
    3. ''r' → logprob: -3.7356345653533936
    4. 'R' → logprob: -5.7356343269348145
    5. ' (' → logprob: -5.8606343269348145
    6. '(' → logprob: -6.6106343269348145
    7. ')' → logprob: -6.8606343269348145
    8. ' ' → logprob: -7.9856343269348145
    9. ''s' → logprob: -8.235634803771973
    10. ' R' → logprob: -8.485634803771973

Token 122: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.000133098365040496
    2. ''' → logprob: -9.250133514404297
    3. ' R' → logprob: -10.250133514404297
    4. ')' → logprob: -13.750133514404297
    5. ' ' → logprob: -15.750133514404297
    6. ''>' → logprob: -16.375133514404297
    7. '')' → logprob: -16.375133514404297
    8. ''s' → logprob: -16.875133514404297
    9. ' '' → logprob: -16.875133514404297
    10. ''r' → logprob: -17.125133514404297

Token 123: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.626784086227417
    2. ':' → logprob: -1.001784086227417
    3. '):' → logprob: -2.876784086227417
    4. ')' → logprob: -4.126784324645996
    5. ',' → logprob: -4.501784324645996
    6. '')' → logprob: -5.376784324645996
    7. ''):' → logprob: -5.501784324645996
    8. '',' → logprob: -6.001784324645996
    9. '(' → logprob: -7.501784324645996
    10. ' ,' → logprob: -8.001784324645996

Token 124: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.47585657238960266
    2. '(' → logprob: -0.9758565425872803
    3. '0' → logprob: -6.475856781005859
    4. ' ' → logprob: -8.35085678100586
    5. ')' → logprob: -14.10085678100586
    6. '<|end|>' → logprob: -14.35085678100586
    7. ' ' → logprob: -16.47585678100586
    8. ')(' → logprob: -16.97585678100586
    9. '">(' → logprob: -17.22585678100586
    10. ' `(' → logprob: -17.72585678100586

Token 125: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015549783129245043
    2. ' ' → logprob: -6.5015549659729
    3. '1' → logprob: -9.876555442810059
    4. ',' → logprob: -14.251555442810059
    5. ')' → logprob: -15.751555442810059
    6. '  ' → logprob: -16.501554489135742
    7. '

' → logprob: -16.501554489135742
    8. '   ' → logprob: -16.939054489135742
    9. '۰' → logprob: -17.126554489135742
    10. ' ,' → logprob: -17.314054489135742

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006143859936855733
    2. '1' → logprob: -7.625614166259766
    3. ' ,' → logprob: -9.750614166259766
    4. ')' → logprob: -10.625614166259766
    5. ')}' → logprob: -10.625614166259766
    6. ' ' → logprob: -11.875614166259766
    7. '0' → logprob: -12.750614166259766
    8. ',
' → logprob: -13.125614166259766
    9. ',+' → logprob: -13.250614166259766
    10. ')}}' → logprob: -13.375614166259766

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004925066023133695
    2. ' ' → logprob: -7.625492572784424
    3. '0' → logprob: -12.375492095947266
    4. '+' → logprob: -15.375492095947266
    5. ')' → logprob: -15.875492095947266
    6. '
' → logprob: -17.625492095947266
    7. '```' → logprob: -18.000492095947266
    8. '

' → logprob: -18.375492095947266
    9. '  ' → logprob: -19.375492095947266
    10. ' )' → logprob: -19.750492095947266

Token 128: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.10559409856796265
    2. ')' → logprob: -2.3555941581726074
    3. '}' → logprob: -5.730594158172607
    4. ')}
' → logprob: -6.605594158172607
    5. ' )' → logprob: -8.35559368133545
    6. ')}
' → logprob: -8.98059368133545
    7. '')}' → logprob: -9.10559368133545
    8. '   ' → logprob: -9.23059368133545
    9. '       ' → logprob: -9.85559368133545
    10. ' }' → logprob: -10.10559368133545

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4579120874404907
    2. '
' → logprob: -1.3329120874404907
    3. ')' → logprob: -2.457911968231201
    4. ',' → logprob: -5.207911968231201
    5. ':' → logprob: -5.457911968231201
    6. ')
' → logprob: -6.207911968231201
    7. '   ' → logprob: -6.332911968231201
    8. '        
' → logprob: -7.332911968231201
    9. '):' → logprob: -7.582911968231201
    10. '):
' → logprob: -7.957911968231201

Token 130: ' dr' (ID: 1498)
  Prédit: ' dr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dr' → logprob: -0.19946999847888947
    2. 'dr' (adapté à ' dr') → logprob: -1.949470043182373
    3. ' delta' → logprob: -3.949470043182373
    4. 'delta' → logprob: -4.574470043182373
    5. ' if' → logprob: -5.449470043182373
    6. 'if' → logprob: -6.199470043182373
    7. '       ' → logprob: -6.324470043182373
    8. 'd' → logprob: -8.449469566345215
    9. 'row' → logprob: -8.824469566345215
    10. 'dx' → logprob: -9.074469566345215

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001295222609769553
    2. ',d' → logprob: -9.250129699707031
    3. ' ,' → logprob: -10.625129699707031
    4. ',r' → logprob: -12.625129699707031
    5. ',col' → logprob: -13.625129699707031
    6. ',row' → logprob: -14.375129699707031
    7. ',c' → logprob: -14.750129699707031
    8. ',n' → logprob: -14.875129699707031
    9. ',m' → logprob: -15.000129699707031
    10. ',j' → logprob: -15.000129699707031

Token 132: ' dc' (ID: 37843)
  Prédit: ' dc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dc' → logprob: -0.016080237925052643
    2. 'dc' → logprob: -4.141080379486084
    3. ' ' → logprob: -10.766079902648926
    4. '_dc' → logprob: -11.266079902648926
    5. '<|end|>' → logprob: -12.391079902648926
    6. '(dc' → logprob: -12.891079902648926
    7. '.dc' → logprob: -13.266079902648926
    8. ' 
' → logprob: -13.766079902648926
    9. ' ' → logprob: -14.141079902648926
    10. 'd' → logprob: -14.891079902648926

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10023200511932373
    2. '=' → logprob: -2.3502321243286133
    3. '<|end|>' → logprob: -10.975232124328613
    4. ')' → logprob: -11.850232124328613
    5. ']' → logprob: -15.475232124328613
    6. ' =)' → logprob: -15.725232124328613
    7. '<|end|>' → logprob: -15.725232124328613
    8. ')=' → logprob: -15.850232124328613
    9. ' ' → logprob: -16.475231170654297
    10. ',' → logprob: -16.975231170654297

Token 134: ' moves' (ID: 19523)
  Prédit: ' moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' moves' → logprob: -0.016114721074700356
    2. 'moves' → logprob: -4.141114711761475
    3. 'm' → logprob: -9.766115188598633
    4. ' m' → logprob: -11.641115188598633
    5. ' ' → logprob: -11.766115188598633
    6. ' self' → logprob: -12.891115188598633
    7. '.moves' → logprob: -14.016115188598633
    8. '_moves' → logprob: -14.266115188598633
    9. ' ' → logprob: -14.516115188598633
    10. 'self' → logprob: -14.641115188598633

Token 135: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.955703818472102e-05
    2. '.get' → logprob: -10.125059127807617
    3. '[d' → logprob: -11.500059127807617
    4. '[get' → logprob: -12.500059127807617
    5. '[data' → logprob: -14.000059127807617
    6. '[action' → logprob: -14.125059127807617
    7. '[position' → logprob: -14.375059127807617
    8. '[
' → logprob: -14.500059127807617
    9. '[self' → logprob: -14.750059127807617
    10. 'direction' → logprob: -15.250059127807617

Token 136: 'direction' (ID: 43278)
  Prédit: 'direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.000491672137286514
    2. ' direction' → logprob: -7.625491619110107
    3. '(direction' → logprob: -13.250492095947266
    4. ']' → logprob: -14.000492095947266
    5. 'dire' → logprob: -15.125492095947266
    6. ')' → logprob: -15.250492095947266
    7. ' ' → logprob: -16.000492095947266
    8. 'd' → logprob: -16.375492095947266
    9. 'position' → logprob: -16.500492095947266
    10. '   ' → logprob: -16.625492095947266

Token 137: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009490952361375093
    2. ']
' → logprob: -7.000948905944824
    3. ' ]' → logprob: -10.625948905944824
    4. ')]' → logprob: -11.875948905944824
    5. ')' → logprob: -13.000948905944824
    6. ']

' → logprob: -13.375948905944824
    7. '']' → logprob: -14.500948905944824
    8. ']
' → logprob: -14.750948905944824
    9. '"]' → logprob: -15.000948905944824
    10. '])' → logprob: -15.250948905944824

Token 138: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39390647411346436
    2. '       ' → logprob: -1.1439064741134644
    3. '<|end|>' → logprob: -6.018906593322754
    4. 'self' → logprob: -6.518906593322754
    5. '        
' → logprob: -6.643906593322754
    6. '
' → logprob: -7.643906593322754
    7. '  
' → logprob: -7.768906593322754
    8. ' self' → logprob: -8.268906593322754
    9. ' 
' → logprob: -9.018906593322754
    10. '

' → logprob: -9.643906593322754

Token 139: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47647011280059814
    2. ' self' → logprob: -0.9764701128005981
    3. '       ' → logprob: -6.851469993591309
    4. 'return' (adapté à ' return') → logprob: -6.976469993591309
    5. ' return' → logprob: -7.976469993591309
    6. '
' → logprob: -10.226469993591309
    7. '        ' → logprob: -11.851469993591309
    8. 'new' → logprob: -12.726469993591309
    9. '(self' → logprob: -13.226469993591309
    10. ' new' → logprob: -13.351469993591309

Token 140: ' Position' (ID: 21829)
  Prédit: ' Position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Position' → logprob: -0.0019288709154352546
    2. 'Position' → logprob: -6.251928806304932
    3. '(Position' → logprob: -15.62692928314209
    4. ' Pos' → logprob: -17.376928329467773
    5. ' ' → logprob: -18.751928329467773
    6. '_Position' → logprob: -19.126928329467773
    7. ' ' → logprob: -19.626928329467773
    8. '.Position' → logprob: -20.501928329467773
    9. 'Pos' → logprob: -20.626928329467773
    10. ' Pose' → logprob: -20.626928329467773

Token 141: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002043748099822551
    2. '(' → logprob: -8.500204086303711
    3. 'self' → logprob: -14.000204086303711
    4. '(
' → logprob: -17.25020408630371
    5. '(sel' → logprob: -18.00020408630371
    6. '(

' → logprob: -18.62520408630371
    7. '((' → logprob: -19.12520408630371
    8. '(s' → logprob: -19.25020408630371
    9. ' (' → logprob: -19.62520408630371
    10. '(row' → logprob: -20.00020408630371

Token 142: '.row' (ID: 24627)
  Prédit: '.row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.row' → logprob: -5.3596853831550106e-05
    2. '.' → logprob: -9.875053405761719
    3. 'row' → logprob: -13.250053405761719
    4. ' .' → logprob: -16.37505340576172
    5. '.
' → logprob: -16.50005340576172
    6. '.Row' → logprob: -18.00005340576172
    7. '	row' → logprob: -18.00005340576172
    8. '$row' → logprob: -18.25005340576172
    9. '.position' → logprob: -18.50005340576172
    10. ',row' → logprob: -18.75005340576172

Token 143: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.004124349914491177
    2. '+' → logprob: -5.504124164581299
    3. ' ' → logprob: -10.004124641418457
    4. ' +
' → logprob: -15.254124641418457
    5. '<|end|>' → logprob: -15.379124641418457
    6. ' plus' → logprob: -15.879124641418457
    7. ' ' → logprob: -16.37912368774414
    8. ' dr' → logprob: -17.37912368774414
    9. ')' → logprob: -19.12912368774414
    10. '+r' → logprob: -19.37912368774414

Token 144: ' dr' (ID: 1498)
  Prédit: ' dr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dr' → logprob: -0.3132631182670593
    2. 'dr' → logprob: -1.313263177871704
    3. '	dr' → logprob: -13.813262939453125
    4. '_dr' → logprob: -15.938262939453125
    5. ' ' → logprob: -16.438262939453125
    6. '(dr' → logprob: -17.188262939453125
    7. ' ' → logprob: -17.688262939453125
    8. '.dr' → logprob: -17.813262939453125
    9. '-dr' → logprob: -18.313262939453125
    10. '

' → logprob: -18.438262939453125

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029494395130313933
    2. ' ,' → logprob: -8.37529468536377
    3. ',self' → logprob: -9.87529468536377
    4. ',
' → logprob: -11.50029468536377
    5. ')' → logprob: -13.00029468536377
    6. '<|end|>' → logprob: -16.000295639038086
    7. 'self' → logprob: -16.375295639038086
    8. '),' → logprob: -16.500295639038086
    9. ',

' → logprob: -17.000295639038086
    10. '   ' → logprob: -17.000295639038086

Token 146: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1603187620639801
    2. 'self' → logprob: -1.9103187322616577
    3. ' ' → logprob: -10.035318374633789
    4. ' ' → logprob: -10.160318374633789
    5. '    ' → logprob: -12.410318374633789
    6. '	self' → logprob: -12.785318374633789
    7. ' dc' → logprob: -13.785318374633789
    8. ' 
' → logprob: -14.035318374633789
    9. '(self' → logprob: -14.410318374633789
    10. '        ' → logprob: -14.785318374633789

Token 147: '.col' (ID: 7320)
  Prédit: '.col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.col' → logprob: -0.00039385363925248384
    2. '.' → logprob: -8.250393867492676
    3. 'col' → logprob: -9.000393867492676
    4. ',col' → logprob: -13.000393867492676
    5. '.dc' → logprob: -13.375393867492676
    6. '	col' → logprob: -14.250393867492676
    7. ',' → logprob: -14.250393867492676
    8. '[col' → logprob: -14.250393867492676
    9. '.Col' → logprob: -14.375393867492676
    10. ' col' → logprob: -14.375393867492676

Token 148: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10020763427019119
    2. '+' → logprob: -2.350207567214966
    3. ' ' → logprob: -14.600207328796387
    4. ')' → logprob: -15.100207328796387
    5. ' +
' → logprob: -16.600208282470703
    6. '+c' → logprob: -16.600208282470703
    7. '<|end|>' → logprob: -17.100208282470703
    8. ' ' → logprob: -17.225208282470703
    9. '+
' → logprob: -17.725208282470703
    10. '+)' → logprob: -18.475208282470703

Token 149: ' dc' (ID: 37843)
  Prédit: 'dc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -0.03804333135485649
    2. ' dc' → logprob: -3.288043260574341
    3. '(dc' → logprob: -14.163043022155762
    4. '_dc' → logprob: -14.288043022155762
    5. '.dc' → logprob: -14.913043022155762
    6. ' ' → logprob: -16.413043975830078
    7. '
' → logprob: -16.538043975830078
    8. '1' → logprob: -16.913043975830078
    9. 'tc' → logprob: -18.288043975830078
    10. 'col' → logprob: -19.038043975830078

Token 150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ')
' → logprob: -13.875000953674316
    3. '<|end|>' → logprob: -15.625000953674316
    4. ' )' → logprob: -16.000001907348633
    5. ')return' → logprob: -16.375001907348633
    6. '}' → logprob: -17.750001907348633
    7. ')

' → logprob: -17.875001907348633
    8. '   ' → logprob: -18.375001907348633
    9. ')#' → logprob: -18.500001907348633
    10. ')}' → logprob: -18.750001907348633

Token 151: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 153: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.10049046576023102
    2. '__' → logprob: -2.3504905700683594
    3. ' ' → logprob: -8.47549057006836
    4. '_equals' → logprob: -10.85049057006836
    5. '_' → logprob: -11.35049057006836
    6. ' ==' → logprob: -11.85049057006836
    7. ' equals' → logprob: -11.97549057006836
    8. ' is' → logprob: -12.35049057006836
    9. '_equal' → logprob: -12.35049057006836
    10. 'equals' → logprob: -12.35049057006836

Token 154: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: 0.0
    2. ' eq' → logprob: -17.875
    3. 'repr' → logprob: -18.125
    4. '_eq' → logprob: -18.625
    5. 'hash' → logprob: -18.75
    6. 'e' → logprob: -19.0
    7. 'str' → logprob: -19.0
    8. 'lt' → logprob: -21.125
    9. 'add' → logprob: -22.0
    10. 'Eq' → logprob: -22.75

Token 155: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005261272192001343
    2. '__(' → logprob: -5.255261421203613
    3. '__('' → logprob: -11.005261421203613
    4. '__((' → logprob: -12.005261421203613
    5. '__("' → logprob: -13.505261421203613
    6. '__(
' → logprob: -13.755261421203613
    7. '___' → logprob: -14.130261421203613
    8. '__.__' → logprob: -14.130261421203613
    9. '__(*' → logprob: -14.880261421203613
    10. '__

' → logprob: -16.380260467529297

Token 156: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38059738278388977
    2. 'other' → logprob: -1.3805973529815674
    3. ' other' → logprob: -3.2555973529815674
    4. ' self' → logprob: -3.6305973529815674
    5. ' ' → logprob: -10.005597114562988
    6. ')' → logprob: -12.255597114562988
    7. '(self' → logprob: -13.130597114562988
    8. '<|end|>' → logprob: -13.255597114562988
    9. 'Other' → logprob: -13.255597114562988
    10. 'obj' → logprob: -13.505597114562988

Token 157: ',' (ID: 11)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0009499297011643648
    2. '__(' → logprob: -7.500949859619141
    3. '<|end|>' → logprob: -8.87594985961914
    4. '__,' → logprob: -9.50094985961914
    5. '__('' → logprob: -10.00094985961914
    6. '__((' → logprob: -11.00094985961914
    7. '__:' → logprob: -11.00094985961914
    8. '__)' → logprob: -11.12594985961914
    9. ')' → logprob: -11.25094985961914
    10. '_' → logprob: -11.37594985961914

Token 158: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.10020741820335388
    2. 'other' → logprob: -2.3502073287963867
    3. ' o' → logprob: -14.850207328796387
    4. ' ' → logprob: -15.350207328796387
    5. '(other' → logprob: -16.475208282470703
    6. ' oth' → logprob: -16.475208282470703
    7. 'Other' → logprob: -17.100208282470703
    8. '_other' → logprob: -17.975208282470703
    9. 'o' → logprob: -18.475208282470703
    10. '.other' → logprob: -18.475208282470703

Token 159: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011620076838880777
    2. ':' → logprob: -7.626162052154541
    3. ')' → logprob: -7.751162052154541
    4. '):
' → logprob: -8.501161575317383
    5. ' ):' → logprob: -10.251161575317383
    6. '):
' → logprob: -13.501161575317383
    7. '<|end|>' → logprob: -13.751161575317383
    8. '):

' → logprob: -14.001161575317383
    9. ',' → logprob: -14.876161575317383
    10. ' ' → logprob: -15.251161575317383

Token 160: '       ' (ID: 309)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1179436519742012
    2. ' isinstance' → logprob: -2.74294376373291
    3. '    ' → logprob: -3.86794376373291
    4. 'self' → logprob: -4.86794376373291
    5. ' ' → logprob: -5.36794376373291
    6. ' (' → logprob: -5.49294376373291
    7. '       ' → logprob: -6.11794376373291
    8. ' return' → logprob: -6.24294376373291
    9. ' other' → logprob: -6.36794376373291
    10. '(self' → logprob: -6.99294376373291

Token 161: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6410824060440063
    2. 'return' (adapté à ' return') → logprob: -1.3910824060440063
    3. ' self' → logprob: -2.141082286834717
    4. 'self' → logprob: -2.391082286834717
    5. ' isinstance' → logprob: -4.891082286834717
    6. ' (' → logprob: -6.391082286834717
    7. '(self' → logprob: -6.516082286834717
    8. ' ' → logprob: -6.641082286834717
    9. '
' → logprob: -6.891082286834717
    10. ' other' → logprob: -7.141082286834717

Token 162: ' self' (ID: 1051)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.5004267692565918
    2. ' self' → logprob: -1.2504267692565918
    3. 'self' → logprob: -2.250426769256592
    4. ' (' → logprob: -6.500426769256592
    5. '(self' → logprob: -8.12542724609375
    6. 'is' → logprob: -8.75042724609375
    7. '(' → logprob: -11.25042724609375
    8. ' ' → logprob: -11.75042724609375
    9. ' (
' → logprob: -11.87542724609375
    10. '(
' → logprob: -12.87542724609375

Token 163: '.row' (ID: 24627)
  Prédit: '.row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.row' → logprob: -6.754368223482743e-05
    2. '.' → logprob: -10.000067710876465
    3. 'row' → logprob: -12.250067710876465
    4. ' .' → logprob: -12.375067710876465
    5. '.Row' → logprob: -12.500067710876465
    6. '.user' → logprob: -12.625067710876465
    7. '.is' → logprob: -13.625067710876465
    8. '.__' → logprob: -14.000067710876465
    9. ' and' → logprob: -14.125067710876465
    10. '.col' → logprob: -14.125067710876465

Token 164: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1602281779050827
    2. '==' → logprob: -1.9102281332015991
    3. '=' → logprob: -13.16022777557373
    4. '==
' → logprob: -14.03522777557373
    5. ' ' → logprob: -14.78522777557373
    6. ')==' → logprob: -15.28522777557373
    7. '()==' → logprob: -15.78522777557373
    8. ',' → logprob: -16.035228729248047
    9. ' ==
' → logprob: -16.535228729248047
    10. '===' → logprob: -16.535228729248047

Token 165: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.03804149478673935
    2. 'other' → logprob: -3.288041591644287
    3. '(other' → logprob: -18.413042068481445
    4. 'Other' → logprob: -18.538042068481445
    5. '
' → logprob: -19.663042068481445
    6. '_other' → logprob: -19.788042068481445
    7. '.other' → logprob: -20.038042068481445
    8. ' ' → logprob: -20.913042068481445
    9. 'self' → logprob: -21.038042068481445
    10. ' oth' → logprob: -21.413042068481445

Token 166: '.row' (ID: 24627)
  Prédit: '.row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.row' → logprob: -0.005259372293949127
    2. '.' → logprob: -5.2552595138549805
    3. ' .' → logprob: -11.38025951385498
    4. '.col' → logprob: -11.75525951385498
    5. 'row' → logprob: -12.75525951385498
    6. '.
' → logprob: -13.13025951385498
    7. '.rows' → logprob: -14.63025951385498
    8. '.user' → logprob: -15.00525951385498
    9. '.other' → logprob: -16.130258560180664
    10. '.<' → logprob: -16.380258560180664

Token 167: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.048591457307338715
    2. 'and' → logprob: -3.048591375350952
    3. ' ' → logprob: -12.798591613769531
    4. '        ' → logprob: -14.548591613769531
    5. '       ' → logprob: -15.298591613769531
    6. '    ' → logprob: -15.673591613769531
    7. '	and' → logprob: -15.923591613769531
    8. '<|end|>' → logprob: -16.42359161376953
    9. '   ' → logprob: -16.67359161376953
    10. ' ' → logprob: -16.92359161376953

Token 168: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.028466518968343735
    2. 'self' → logprob: -3.7784664630889893
    3. ' other' → logprob: -5.278466701507568
    4. 'other' → logprob: -9.15346622467041
    5. ' ' → logprob: -14.40346622467041
    6. '    ' → logprob: -15.40346622467041
    7. '	self' → logprob: -16.028467178344727
    8. ' ' → logprob: -16.278467178344727
    9. '   ' → logprob: -17.028467178344727
    10. 'Other' → logprob: -17.403467178344727

Token 169: '.col' (ID: 7320)
  Prédit: '.col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.col' → logprob: -5.860340752406046e-05
    2. '.' → logprob: -9.7500581741333
    3. '.Col' → logprob: -16.500059127807617
    4. ' .' → logprob: -16.625059127807617
    5. 'col' → logprob: -16.875059127807617
    6. '.cols' → logprob: -17.000059127807617
    7. '[col' → logprob: -18.000059127807617
    8. ' col' → logprob: -18.875059127807617
    9. '	col' → logprob: -19.750059127807617
    10. '.cod' → logprob: -19.750059127807617

Token 170: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06198393553495407
    2. ' ==' → logprob: -2.811983823776245
    3. '==
' → logprob: -11.686984062194824
    4. '=' → logprob: -11.936984062194824
    5. '<|end|>' → logprob: -14.686984062194824
    6. ')==' → logprob: -15.061984062194824
    7. ']==' → logprob: -15.686984062194824
    8. '==(' → logprob: -16.061983108520508
    9. ' ' → logprob: -16.686983108520508
    10. ')' → logprob: -16.686983108520508

Token 171: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.16022422909736633
    2. ' other' → logprob: -1.910224199295044
    3. '(other' → logprob: -16.41022491455078
    4. '.other' → logprob: -17.91022491455078
    5. 'Other' → logprob: -18.53522491455078
    6. '_other' → logprob: -19.28522491455078
    7. ' ' → logprob: -19.91022491455078
    8. '   ' → logprob: -20.03522491455078
    9. '<|end|>' → logprob: -21.41022491455078
    10. '  ' → logprob: -21.78522491455078

Token 172: '.col' (ID: 7320)
  Prédit: '.col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.col' → logprob: -7.941850526549388e-06
    2. '.' → logprob: -12.000007629394531
    3. 'col' → logprob: -13.375007629394531
    4. ' col' → logprob: -16.00000762939453
    5. ' .' → logprob: -17.25000762939453
    6. '[col' → logprob: -17.37500762939453
    7. '	col' → logprob: -18.00000762939453
    8. '.cod' → logprob: -19.25000762939453
    9. '.Col' → logprob: -19.25000762939453
    10. '.co' → logprob: -19.25000762939453

Token 173: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004397359676659107
    2. '<|end|>' → logprob: -6.129397392272949
    3. '   ' → logprob: -7.004397392272949
    4. 'class' → logprob: -7.129397392272949
    5. '    
' → logprob: -9.37939739227295
    6. '

' → logprob: -9.37939739227295
    7. '```' → logprob: -9.62939739227295
    8. ' 
' → logprob: -9.87939739227295
    9. ':' → logprob: -10.00439739227295
    10. ' class' → logprob: -10.25439739227295

Token 174: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.030033137649297714
    2. '<|end|>' → logprob: -4.655033111572266
    3. 'class' → logprob: -4.905033111572266
    4. '

' → logprob: -5.155033111572266
    5. '\n' → logprob: -6.405033111572266
    6. ' 
' → logprob: -6.780033111572266
    7. '```' → logprob: -7.280033111572266
    8. ':' → logprob: -7.530033111572266
    9. '   ' → logprob: -7.655033111572266
    10. '\' → logprob: -7.780033111572266

Token 175: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40073108673095703
    2. '
' → logprob: -1.650731086730957
    3. ':' → logprob: -2.525731086730957
    4. ' ' → logprob: -4.025731086730957
    5. '<|end|>' → logprob: -4.650731086730957
    6. 'def' (adapté à ' def') → logprob: -4.775731086730957
    7. ' 
' → logprob: -5.400731086730957
    8. '```' → logprob: -5.650731086730957
    9. 'class' → logprob: -5.775731086730957
    10. '    
' → logprob: -5.900731086730957

Token 176: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.048832282423973083
    2. '__' → logprob: -3.0488321781158447
    3. 'def' → logprob: -8.548831939697266
    4. ' ' → logprob: -10.423831939697266
    5. ' def' → logprob: -11.298831939697266
    6. 'hash' → logprob: -13.548831939697266
    7. '___' → logprob: -13.798831939697266
    8. '.__' → logprob: -14.173831939697266
    9. ' ' → logprob: -14.298831939697266
    10. '
' → logprob: -14.423831939697266

Token 177: 'hash' (ID: 16909)
  Prédit: 'hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.004065340384840965
    2. 'repr' → logprob: -5.75406551361084
    3. 'lt' → logprob: -7.75406551361084
    4. 'ne' → logprob: -8.00406551361084
    5. 'str' → logprob: -9.00406551361084
    6. '```' → logprob: -15.37906551361084
    7. 'neg' → logprob: -15.62906551361084
    8. ' hash' → logprob: -16.004064559936523
    9. 'add' → logprob: -16.004064559936523
    10. '
' → logprob: -16.004064559936523

Token 178: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.14627429842948914
    2. '__' → logprob: -2.0212743282318115
    3. '__(
' → logprob: -6.271274089813232
    4. '(self' → logprob: -7.521274089813232
    5. '__((' → logprob: -7.521274089813232
    6. '<|end|>' → logprob: -7.896274089813232
    7. '__('' → logprob: -8.89627456665039
    8. '__(*' → logprob: -10.14627456665039
    9. '(' → logprob: -10.27127456665039
    10. '__("' → logprob: -11.64627456665039

Token 179: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003361774142831564
    2. ' self' → logprob: -8.000336647033691
    3. ')' → logprob: -15.000336647033691
    4. 'other' → logprob: -15.875336647033691
    5. ' ' → logprob: -16.250335693359375
    6. '   ' → logprob: -17.000335693359375
    7. '
' → logprob: -17.250335693359375
    8. '(self' → logprob: -17.250335693359375
    9. '	self' → logprob: -18.250335693359375
    10. '  ' → logprob: -18.625335693359375

Token 180: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.26167047023773193
    2. ')' → logprob: -1.636670470237732
    3. ',' → logprob: -3.6366705894470215
    4. '):
' → logprob: -4.8866705894470215
    5. '<|end|>' → logprob: -7.5116705894470215
    6. ' ):' → logprob: -7.6366705894470215
    7. 'self' → logprob: -8.261670112609863
    8. ' )' → logprob: -8.886670112609863
    9. ')object' → logprob: -9.386670112609863
    10. '):

' → logprob: -9.636670112609863

Token 181: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1184336319565773
    2. '       ' → logprob: -2.493433713912964
    3. 'return' → logprob: -3.743433713912964
    4. '   ' → logprob: -5.368433475494385
    5. ' hash' → logprob: -7.993433475494385
    6. '    ' → logprob: -8.368433952331543
    7. '        ' → logprob: -9.118433952331543
    8. 'hash' → logprob: -10.743433952331543
    9. '      ' → logprob: -11.368433952331543
    10. ' ' → logprob: -11.868433952331543

Token 182: ' return' (ID: 622)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.5982705354690552
    2. ' hash' → logprob: -0.8482705354690552
    3. ' return' → logprob: -4.473270416259766
    4. 'return' (adapté à ' return') → logprob: -4.598270416259766
    5. '(hash' → logprob: -7.723270416259766
    6. '   ' → logprob: -9.348270416259766
    7. '    ' → logprob: -9.973270416259766
    8. ' (' → logprob: -12.223270416259766
    9. '       ' → logprob: -12.598270416259766
    10. ' ' → logprob: -12.598270416259766

Token 183: ' hash' (ID: 10691)
  Prédit: ' hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hash' → logprob: -0.06199715659022331
    2. 'hash' → logprob: -2.811997175216675
    3. '(hash' → logprob: -10.811997413635254
    4. ' self' → logprob: -11.811997413635254
    5. 'self' → logprob: -14.061997413635254
    6. '   ' → logprob: -14.311997413635254
    7. ' ' → logprob: -15.561997413635254
    8. '	hash' → logprob: -15.936997413635254
    9. ' (' → logprob: -16.061996459960938
    10. 'Hash' → logprob: -16.436996459960938

Token 184: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.02978578582406044
    2. '(' → logprob: -3.5297858715057373
    3. '(self' → logprob: -10.279786109924316
    4. ' (' → logprob: -14.279786109924316
    5. ' ((' → logprob: -15.779786109924316
    6. '(
' → logprob: -17.02978515625
    7. '(tuple' → logprob: -17.15478515625
    8. '(this' → logprob: -17.65478515625
    9. '(f' → logprob: -17.90478515625
    10. '(('' → logprob: -18.02978515625

Token 185: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.2246291337069124e-05
    2. ' self' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.125021934509277
    4. '(self' → logprob: -15.500021934509277
    5. '
' → logprob: -15.625021934509277
    6. '       ' → logprob: -16.125022888183594
    7. '	self' → logprob: -17.625022888183594
    8. '    ' → logprob: -17.750022888183594
    9. '  ' → logprob: -18.250022888183594
    10. '           ' → logprob: -18.625022888183594

Token 186: '.row' (ID: 24627)
  Prédit: '.row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.row' → logprob: -0.00012035090912831947
    2. '.' → logprob: -9.125120162963867
    3. '.col' → logprob: -11.875120162963867
    4. ' .' → logprob: -13.000120162963867
    5. 'row' → logprob: -14.000120162963867
    6. '.r' → logprob: -15.250120162963867
    7. '.ro' → logprob: -15.375120162963867
    8. '.user' → logprob: -15.500120162963867
    9. '.Row' → logprob: -15.875120162963867
    10. '.rows' → logprob: -16.125120162963867

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001342903997283429
    2. ' ,' → logprob: -9.125134468078613
    3. ',
' → logprob: -10.625134468078613
    4. ',self' → logprob: -14.375134468078613
    5. ',

' → logprob: -15.625134468078613
    6. '
' → logprob: -15.875134468078613
    7. ' ' → logprob: -17.375133514404297
    8. '

' → logprob: -17.500133514404297
    9. '‌,' → logprob: -17.750133514404297
    10. '<|end|>' → logprob: -18.125133514404297

Token 188: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.28119561076164246
    2. ' self' → logprob: -1.4061956405639648
    3. ' ' → logprob: -11.031195640563965
    4. '   ' → logprob: -11.906195640563965
    5. '    ' → logprob: -12.031195640563965
    6. '       ' → logprob: -12.531195640563965
    7. '	self' → logprob: -12.656195640563965
    8. '  ' → logprob: -12.781195640563965
    9. '(self' → logprob: -13.656195640563965
    10. '        ' → logprob: -13.656195640563965

Token 189: '.col' (ID: 7320)
  Prédit: '.col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.col' → logprob: -0.00021224225929472595
    2. 'col' → logprob: -8.500212669372559
    3. ',col' → logprob: -12.500212669372559
    4. '.' → logprob: -13.000212669372559
    5. ' col' → logprob: -13.375212669372559
    6. ' .' → logprob: -14.500212669372559
    7. ',' → logprob: -15.625212669372559
    8. '	col' → logprob: -15.750212669372559
    9. 'Col' → logprob: -16.000211715698242
    10. '.co' → logprob: -16.750211715698242

Token 190: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31326544284820557
    2. '))' → logprob: -1.3132654428482056
    3. ')
' → logprob: -13.313265800476074
    4. '))
' → logprob: -14.188265800476074
    5. ')}' → logprob: -14.563265800476074
    6. ')))' → logprob: -15.063265800476074
    7. ' )' → logprob: -15.313265800476074
    8. '})' → logprob: -15.938265800476074
    9. ' ))' → logprob: -16.688264846801758
    10. '}' → logprob: -17.063264846801758

Token 191: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00016539888747502118
    2. '
' → logprob: -8.875164985656738
    3. '

' → logprob: -10.750164985656738
    4. ' class' → logprob: -12.750164985656738
    5. '"class' → logprob: -14.875164985656738
    6. '


' → logprob: -15.875164985656738
    7. '<class' → logprob: -16.000165939331055
    8. '
' → logprob: -16.125165939331055
    9. '\n' → logprob: -16.250165939331055
    10. '```' → logprob: -16.750165939331055

Token 192: ' Cave' (ID: 83453)
  Prédit: ' Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Player' → logprob: -0.06720501184463501
    2. ' Dungeon' → logprob: -3.6922049522399902
    3. ' Game' → logprob: -4.31720495223999
    4. ' Maze' → logprob: -4.56720495223999
    5. ' Hero' → logprob: -5.31720495223999
    6. ' Room' → logprob: -5.56720495223999
    7. ' Trap' → logprob: -5.94220495223999
    8. 'Player' → logprob: -6.44220495223999
    9. ' Map' → logprob: -7.31720495223999
    10. ' Board' → logprob: -7.44220495223999

Token 193: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006344011635519564
    2. 'Map' → logprob: -7.75063419342041
    3. ':
' → logprob: -9.37563419342041
    4. '():' → logprob: -10.62563419342041
    5. '(' → logprob: -10.75063419342041
    6. 'Explorer' → logprob: -10.75063419342041
    7. 'C' → logprob: -11.25063419342041
    8. 'Area' → logprob: -11.62563419342041
    9. 'Game' → logprob: -12.75063419342041
    10. 'Grid' → logprob: -12.87563419342041

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018089372897520661
    2. ' def' → logprob: -6.751809120178223
    3. 'def' → logprob: -7.876809120178223
    4. '(' → logprob: -8.751809120178223
    5. ':' → logprob: -9.876809120178223
    6. '    ' → logprob: -10.626809120178223
    7. ' (' → logprob: -11.751809120178223
    8. '    
' → logprob: -12.126809120178223
    9. ' 
' → logprob: -13.626809120178223
    10. ')' → logprob: -14.001809120178223

Token 195: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.10647788643836975
    2. 'def' (adapté à ' def') → logprob: -2.606477975845337
    3. '   ' → logprob: -3.606477975845337
    4. ' __' → logprob: -10.481477737426758
    5. '    ' → logprob: -10.606477737426758
    6. ' ' → logprob: -12.481477737426758
    7. '	def' → logprob: -13.106477737426758
    8. 'class' → logprob: -13.731477737426758
    9. ' ' → logprob: -13.981477737426758
    10. '__' → logprob: -14.481477737426758

Token 196: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00016623330884613097
    2. '__' → logprob: -8.750165939331055
    3. ' ' → logprob: -12.625165939331055
    4. '_' → logprob: -13.625165939331055
    5. '_init' → logprob: -13.625165939331055
    6. ' _' → logprob: -14.125165939331055
    7. ' def' → logprob: -14.750165939331055
    8. ' ' → logprob: -15.125165939331055
    9. ' ___' → logprob: -15.500165939331055
    10. ' init' → logprob: -15.750165939331055

Token 197: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.2664456789934775e-06
    2. 'def' → logprob: -14.625000953674316
    3. '   ' → logprob: -15.250000953674316
    4. '```' → logprob: -15.750000953674316
    5. '_init' → logprob: -16.000001907348633
    6. ' init' → logprob: -16.250001907348633
    7. '__' → logprob: -17.500001907348633
    8. 'int' → logprob: -17.500001907348633
    9. '  ' → logprob: -18.250001907348633
    10. '
' → logprob: -18.375001907348633

Token 198: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.007009590044617653
    2. '(self' → logprob: -5.007009506225586
    3. '__(
' → logprob: -9.132009506225586
    4. '(' → logprob: -9.632009506225586
    5. '_(' → logprob: -9.882009506225586
    6. ' (' → logprob: -10.257009506225586
    7. '__' → logprob: -10.507009506225586
    8. 'self' → logprob: -13.507009506225586
    9. '<|end|>' → logprob: -13.507009506225586
    10. '_' → logprob: -13.882009506225586

Token 199: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008621551096439362
    2. ' self' → logprob: -4.758621692657471
    3. '   ' → logprob: -12.883621215820312
    4. '
' → logprob: -13.133621215820312
    5. ' ' → logprob: -13.633621215820312
    6. ')' → logprob: -14.383621215820312
    7. 'size' → logprob: -15.508621215820312
    8. '  ' → logprob: -15.883621215820312
    9. '       ' → logprob: -16.133621215820312
    10. '    ' → logprob: -16.133621215820312

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018697108316700906
    2. ' ,' → logprob: -8.750186920166016
    3. 'self' → logprob: -10.500186920166016
    4. ',self' → logprob: -15.125186920166016
    5. ' self' → logprob: -15.250186920166016
    6. ',
' → logprob: -16.125186920166016
    7. '(self' → logprob: -16.500186920166016
    8. '   ' → logprob: -16.625186920166016
    9. '_,' → logprob: -17.125186920166016
    10. ' ' → logprob: -17.125186920166016

Token 201: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.483507364988327
    2. 'self' → logprob: -1.8585073947906494
    3. ' rows' → logprob: -2.2335073947906494
    4. ' self' → logprob: -2.9835073947906494
    5. ' grid' → logprob: -3.1085073947906494
    6. 'grid' → logprob: -4.10850715637207
    7. 'height' → logprob: -6.10850715637207
    8. ' height' → logprob: -6.60850715637207
    9. ' width' → logprob: -7.10850715637207
    10. ' layout' → logprob: -7.23350715637207

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004468772385735065
    2. ':' → logprob: -8.125447273254395
    3. ' ,' → logprob: -9.375447273254395
    4. ':int' → logprob: -10.875447273254395
    5. '):' → logprob: -11.000447273254395
    6. '=' → logprob: -11.375447273254395
    7. '<|end|>' → logprob: -11.500447273254395
    8. ')' → logprob: -12.625447273254395
    9. '<|end|>' → logprob: -13.250447273254395
    10. ',int' → logprob: -13.375447273254395

Token 203: ' cols' (ID: 37134)
  Prédit: 'cols'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cols' → logprob: -0.4293544590473175
    2. ' cols' → logprob: -1.0543544292449951
    3. 'columns' → logprob: -7.679354667663574
    4. ' columns' → logprob: -8.679354667663574
    5. '   ' → logprob: -11.429354667663574
    6. '_cols' → logprob: -12.554354667663574
    7. '(cols' → logprob: -13.554354667663574
    8. 'col' → logprob: -13.679354667663574
    9. '.cols' → logprob: -13.929354667663574
    10. ' ' → logprob: -14.054354667663574

Token 204: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06231687217950821
    2. ',' → logprob: -2.81231689453125
    3. ' ):' → logprob: -8.18731689453125
    4. ')' → logprob: -9.81231689453125
    5. '):
' → logprob: -11.56231689453125
    6. ' ,' → logprob: -12.31231689453125
    7. '   ' → logprob: -14.06231689453125
    8. '),' → logprob: -15.06231689453125
    9. ':' → logprob: -15.06231689453125
    10. ' ' → logprob: -15.31231689453125

Token 205: ' layout' (ID: 10557)
  Prédit: ' traps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' traps' → logprob: -0.24709706008434296
    2. 'tr' → logprob: -2.3720970153808594
    3. 'trap' → logprob: -3.1220970153808594
    4. 'grid' → logprob: -3.8720970153808594
    5. ' grid' → logprob: -4.122097015380859
    6. ' trap' → logprob: -4.622097015380859
    7. 'player' → logprob: -5.122097015380859
    8. ' player' → logprob: -5.247097015380859
    9. 'walls' → logprob: -5.622097015380859
    10. ' walls' → logprob: -5.747097015380859

Token 206: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016712307929992676
    2. ',' → logprob: -4.141712188720703
    3. ':' → logprob: -7.891712188720703
    4. '):
' → logprob: -8.516712188720703
    5. ')' → logprob: -9.641712188720703
    6. ' ):' → logprob: -10.391712188720703
    7. ' ,' → logprob: -13.391712188720703
    8. '=None' → logprob: -13.516712188720703
    9. '):
' → logprob: -14.266712188720703
    10. '   ' → logprob: -14.516712188720703

Token 207: ' trap' (ID: 34270)
  Prédit: ' traps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' traps' → logprob: -0.6498122215270996
    2. 'trap' → logprob: -1.5248122215270996
    3. ' trap' → logprob: -1.7748122215270996
    4. 'tr' → logprob: -2.8998122215270996
    5. ' player' → logprob: -4.3998122215271
    6. 'player' → logprob: -4.8998122215271
    7. ' pot' → logprob: -5.5248122215271
    8. ' start' → logprob: -6.0248122215271
    9. 'pot' → logprob: -6.1498122215271
    10. 'start' → logprob: -6.2748122215271

Token 208: '_types' (ID: 21515)
  Prédit: '_types'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_types' → logprob: -0.07077042758464813
    2. 's' → logprob: -2.695770502090454
    3. 'Types' → logprob: -7.445770263671875
    4. 'types' → logprob: -8.820770263671875
    5. '_type' → logprob: -9.570770263671875
    6. '_positions' → logprob: -11.820770263671875
    7. '_' → logprob: -12.070770263671875
    8. '_map' → logprob: -12.570770263671875
    9. 'ypes' → logprob: -12.570770263671875
    10. ')' → logprob: -13.320770263671875

Token 209: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004554254002869129
    2. ',' → logprob: -5.504554271697998
    3. '):
' → logprob: -8.50455379486084
    4. ' ):' → logprob: -8.62955379486084
    5. ':' → logprob: -10.00455379486084
    6. ')' → logprob: -10.25455379486084
    7. '=None' → logprob: -11.75455379486084
    8. '=' → logprob: -13.50455379486084
    9. '   ' → logprob: -14.12955379486084
    10. ' ' → logprob: -14.75455379486084

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1197870746254921
    2. ':' → logprob: -2.2447869777679443
    3. ',' → logprob: -5.494787216186523
    4. '):' → logprob: -6.619787216186523
    5. ':
' → logprob: -7.494787216186523
    6. '):
' → logprob: -7.994787216186523
    7. 'self' → logprob: -8.369787216186523
    8. '   ' → logprob: -9.369787216186523
    9. ' self' → logprob: -9.744787216186523
    10. '<|end|>' → logprob: -10.119787216186523

Token 211: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02475021779537201
    2. ' self' → logprob: -4.024750232696533
    3. '       ' → logprob: -5.024750232696533
    4. '   ' → logprob: -12.774749755859375
    5. '	self' → logprob: -13.524749755859375
    6. ' ' → logprob: -14.899749755859375
    7. 'super' → logprob: -15.524749755859375
    8. 'import' → logprob: -15.774749755859375
    9. '
' → logprob: -16.024749755859375
    10. '(self' → logprob: -16.524749755859375

Token 212: '.rows' (ID: 41542)
  Prédit: '.rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rows' → logprob: -0.07898330688476562
    2. '.' → logprob: -2.5789833068847656
    3. 'rows' → logprob: -9.703983306884766
    4. ' .' → logprob: -11.328983306884766
    5. '_rows' → logprob: -12.828983306884766
    6. ' rows' → logprob: -12.953983306884766
    7. '._' → logprob: -13.078983306884766
    8. '.
' → logprob: -13.078983306884766
    9. '.cells' → logprob: -13.078983306884766
    10. '	rows' → logprob: -13.203983306884766

Token 213: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7379917502403259
    2. ',' → logprob: -1.3629918098449707
    3. '=' → logprob: -1.4879918098449707
    4. '<|end|>' → logprob: -3.2379918098449707
    5. ' ,' → logprob: -7.612991809844971
    6. '<|end|>' → logprob: -8.487991333007812
    7. ')' → logprob: -9.237991333007812
    8. ' ' → logprob: -9.487991333007812
    9. '   ' → logprob: -10.237991333007812
    10. ',
' → logprob: -11.987991333007812

Token 214: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.06196914613246918
    2. ' rows' → logprob: -2.811969041824341
    3. '	rows' → logprob: -14.061968803405762
    4. '(rows' → logprob: -14.186968803405762
    5. '_rows' → logprob: -17.436969757080078
    6. '.rows' → logprob: -17.936969757080078
    7. 'row' → logprob: -18.186969757080078
    8. 'r' → logprob: -18.311969757080078
    9. 'int' → logprob: -19.186969757080078
    10. 'rowse' → logprob: -19.311969757080078

Token 215: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 216: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5772674083709717
    2. '<|end|>' → logprob: -0.9522674083709717
    3. '
' → logprob: -3.4522674083709717
    4. ',' → logprob: -4.077267646789551
    5. '        
' → logprob: -6.702267646789551
    6. 'self' → logprob: -7.327267646789551
    7. ' ' → logprob: -7.702267646789551
    8. ' 
' → logprob: -7.952267646789551
    9. '<|end|>' → logprob: -7.952267646789551
    10. '        ' → logprob: -8.32726764678955

Token 217: ' self' (ID: 1051)
  Prédit: 'cols'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cols' → logprob: -0.47452425956726074
    2. ' cols' → logprob: -0.9745242595672607
    3. 'self' (adapté à ' self') → logprob: -7.84952449798584
    4. ' self' → logprob: -9.84952449798584
    5. '(cols' → logprob: -13.09952449798584
    6. 'col' → logprob: -14.34952449798584
    7. ' col' → logprob: -14.34952449798584
    8. '_cols' → logprob: -14.59952449798584
    9. '.cols' → logprob: -14.72452449798584
    10. '-cols' → logprob: -15.72452449798584

Token 218: '.cols' (ID: 89556)
  Prédit: '.cols'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cols' → logprob: -0.014585580676794052
    2. '.' → logprob: -4.264585494995117
    3. '.columns' → logprob: -8.389585494995117
    4. '.rows' → logprob: -8.889585494995117
    5. ' .' → logprob: -10.264585494995117
    6. 'cols' → logprob: -11.889585494995117
    7. '.col' → logprob: -12.014585494995117
    8. '.cells' → logprob: -12.639585494995117
    9. '.classes' → logprob: -12.889585494995117
    10. '.code' → logprob: -14.389585494995117

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6713827848434448
    2. '=' → logprob: -0.7963827848434448
    3. ',' → logprob: -3.7963829040527344
    4. '<|end|>' → logprob: -4.171382904052734
    5. '<|end|>' → logprob: -9.671382904052734
    6. ' ,' → logprob: -9.796382904052734
    7. ')' → logprob: -10.921382904052734
    8. ' ' → logprob: -11.171382904052734
    9. ' =
' → logprob: -13.921382904052734
    10. ',
' → logprob: -14.296382904052734

Token 220: ' cols' (ID: 37134)
  Prédit: 'cols'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cols' → logprob: -0.25194475054740906
    2. ' cols' → logprob: -1.5019447803497314
    3. 'col' → logprob: -11.751944541931152
    4. '(cols' → logprob: -12.251944541931152
    5. ' col' → logprob: -13.751944541931152
    6. 'rows' → logprob: -13.876944541931152
    7. '.cols' → logprob: -15.126944541931152
    8. '-cols' → logprob: -15.876944541931152
    9. ' ' → logprob: -16.00194549560547
    10. '_cols' → logprob: -16.37694549560547

Token 221: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019972586596850306
    2. 'self' → logprob: -8.875199317932129
    3. ' self' → logprob: -11.000199317932129
    4. ',' → logprob: -11.000199317932129
    5. '
' → logprob: -11.125199317932129
    6. '<|end|>' → logprob: -12.000199317932129
    7. '   ' → logprob: -13.000199317932129
    8. '```' → logprob: -14.000199317932129
    9. ' ' → logprob: -14.875199317932129
    10. '#' → logprob: -15.000199317932129

Token 222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0039452980272471905
    2. 'self' → logprob: -5.628945350646973
    3. ' self' → logprob: -8.003945350646973
    4. '   ' → logprob: -11.628945350646973
    5. '
' → logprob: -14.003945350646973
    6. '	self' → logprob: -15.378945350646973
    7. '      ' → logprob: -15.378945350646973
    8. '           ' → logprob: -15.503945350646973
    9. ' ' → logprob: -15.628945350646973
    10. ',' → logprob: -15.753945350646973

Token 223: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0020368914119899273
    2. 'layout' → logprob: -6.252037048339844
    3. '       ' → logprob: -9.627037048339844
    4. ' self' → logprob: -10.252037048339844
    5. 'for' → logprob: -13.252037048339844
    6. '   ' → logprob: -13.252037048339844
    7. 'trap' → logprob: -14.127037048339844
    8. ' layout' → logprob: -14.502037048339844
    9. '        
' → logprob: -15.502037048339844
    10. '#' → logprob: -15.627037048339844

Token 224: '.layout' (ID: 12865)
  Prédit: '.layout'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.layout' → logprob: -0.00023679454170633107
    2. '.' → logprob: -8.875236511230469
    3. 'layout' → logprob: -10.250236511230469
    4. '.grid' → logprob: -10.875236511230469
    5. '._' → logprob: -11.000236511230469
    6. ' .' → logprob: -11.500236511230469
    7. '_layout' → logprob: -12.500236511230469
    8. '.rows' → logprob: -12.500236511230469
    9. '.tr' → logprob: -13.500236511230469
    10. '.symbol' → logprob: -13.500236511230469

Token 225: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740898013114929
    2. '=' → logprob: -0.9740898013114929
    3. '[' → logprob: -12.349089622497559
    4. ' ' → logprob: -13.099089622497559
    5. '[:]' → logprob: -13.099089622497559
    6. ',' → logprob: -13.599089622497559
    7. '   ' → logprob: -14.099089622497559
    8. ')' → logprob: -14.099089622497559
    9. '=[]' → logprob: -14.849089622497559
    10. ' =
' → logprob: -15.099089622497559

Token 226: ' layout' (ID: 10557)
  Prédit: 'layout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'layout' → logprob: -0.05038096755743027
    2. ' layout' → logprob: -3.4253809452056885
    3. '[' → logprob: -4.175381183624268
    4. ' [' → logprob: -6.800381183624268
    5. '[[' → logprob: -9.92538070678711
    6. '(layout' → logprob: -11.42538070678711
    7. '	layout' → logprob: -11.55038070678711
    8. '[l' → logprob: -11.92538070678711
    9. '[list' → logprob: -12.17538070678711
    10. '.layout' → logprob: -12.42538070678711

Token 227: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.282620906829834
    2. '<|end|>' → logprob: -1.532620906829834
    3. '
' → logprob: -3.532620906829834
    4. 'self' → logprob: -8.657621383666992
    5. '<|end|>' → logprob: -8.657621383666992
    6. '   ' → logprob: -8.657621383666992
    7. ',' → logprob: -9.032621383666992
    8. '        
' → logprob: -9.407621383666992
    9. ' ' → logprob: -9.907621383666992
    10. ')' → logprob: -10.157621383666992

Token 228: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3909628689289093
    2. '       ' → logprob: -1.390962839126587
    3. '<|end|>' → logprob: -2.640962839126587
    4. '        
' → logprob: -7.390963077545166
    5. 'self' → logprob: -7.515963077545166
    6. ',' → logprob: -7.515963077545166
    7. '   ' → logprob: -8.515962600708008
    8. '[
' → logprob: -8.515962600708008
    9. ' ' → logprob: -8.515962600708008
    10. ' 
' → logprob: -8.890962600708008

Token 229: ' List' (ID: 2655)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7337213754653931
    2. ' [' → logprob: -0.8587213754653931
    3. '[]' → logprob: -3.6087212562561035
    4. ' [['' → logprob: -4.2337212562561035
    5. '[['' → logprob: -4.3587212562561035
    6. '[List' → logprob: -4.6087212562561035
    7. '[
' → logprob: -5.3587212562561035
    8. ' []' → logprob: -5.4837212562561035
    9. '[list' → logprob: -5.4837212562561035
    10. '['' → logprob: -5.7337212562561035

Token 230: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.09002631157636642
    2. ' of' → logprob: -2.840026378631592
    3. '[' → logprob: -3.840026378631592
    4. '[str' → logprob: -6.215026378631592
    5. '[list' → logprob: -6.715026378631592
    6. '[int' → logprob: -6.965026378631592
    7. '<|end|>' → logprob: -7.090026378631592
    8. '<List' → logprob: -7.340026378631592
    9. '[
' → logprob: -8.090025901794434
    10. 'of' → logprob: -9.215025901794434

Token 231: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.0025699487887322903
    2. '[int' → logprob: -6.002570152282715
    3. '[List' → logprob: -9.502570152282715
    4. ']' → logprob: -11.252570152282715
    5. '[' → logprob: -12.252570152282715
    6. ']]' → logprob: -14.002570152282715
    7. 'str' → logprob: -14.127570152282715
    8. '[
' → logprob: -16.3775691986084
    9. '(str' → logprob: -16.6275691986084
    10. ']]]' → logprob: -18.0025691986084

Token 232: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.05519266799092293
    2. ']' → logprob: -2.930192708969116
    3. ' ]]' → logprob: -9.055192947387695
    4. ')]' → logprob: -9.430192947387695
    5. ' ]' → logprob: -10.055192947387695
    6. ']>' → logprob: -10.805192947387695
    7. '']]' → logprob: -10.930192947387695
    8. '>]' → logprob: -11.805192947387695
    9. '[' → logprob: -12.430192947387695
    10. ']]]' → logprob: -12.680192947387695

Token 233: ' trap' (ID: 34270)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06502310186624527
    2. '<|end|>' → logprob: -2.815023183822632
    3. '
' → logprob: -6.440022945404053
    4. ',' → logprob: -7.440022945404053
    5. 'self' → logprob: -7.815022945404053
    6. ')' → logprob: -8.940023422241211
    7. ' self' → logprob: -9.315023422241211
    8. '<|end|>' → logprob: -9.690023422241211
    9. '```' → logprob: -9.815023422241211
    10. '        
' → logprob: -10.440023422241211

Token 234: ' symbol' (ID: 10038)
  Prédit: '_types'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_types' → logprob: -0.091121144592762
    2. '_' → logprob: -3.216121196746826
    3. 's' → logprob: -3.216121196746826
    4. '_positions' → logprob: -5.591121196746826
    5. '_type' → logprob: -6.216121196746826
    6. '_map' → logprob: -7.466121196746826
    7. '_s' → logprob: -9.216120719909668
    8. '_layout' → logprob: -9.466120719909668
    9. 'Types' → logprob: -9.841120719909668
    10. '_
' → logprob: -9.841120719909668

Token 235: ' at' (ID: 540)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.987289547920227
    2. '<|end|>' → logprob: -1.112289547920227
    3. '       ' → logprob: -1.362289547920227
    4. ')' → logprob: -4.1122894287109375
    5. '   ' → logprob: -4.9872894287109375
    6. ' ' → logprob: -5.1122894287109375
    7. '
' → logprob: -5.4872894287109375
    8. ']' → logprob: -5.7372894287109375
    9. '<|end|>' → logprob: -6.9872894287109375
    10. '  ' → logprob: -7.1122894287109375

Token 236: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.0901644378900528
    2. 'each' → logprob: -2.5901644229888916
    3. ' positions' → logprob: -4.840164661407471
    4. 'positions' → logprob: -6.465164661407471
    5. ' position' → logprob: -6.840164661407471
    6. 'position' → logprob: -8.090164184570312
    7. ' every' → logprob: -9.340164184570312
    8. '<|end|>' → logprob: -9.590164184570312
    9. ' the' → logprob: -10.340164184570312
    10. '[row' → logprob: -10.465164184570312

Token 237: ' cell' (ID: 4206)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.11318537592887878
    2. 'position' → logprob: -2.988185405731201
    3. ' cell' → logprob: -3.238185405731201
    4. '[row' → logprob: -4.988185405731201
    5. ' ' → logprob: -6.113185405731201
    6. 'cell' → logprob: -6.488185405731201
    7. ' space' → logprob: -6.488185405731201
    8. '<|end|>' → logprob: -6.613185405731201
    9. '[position' → logprob: -7.238185405731201
    10. '<|end|>' → logprob: -7.613185405731201

Token 238: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020094260573387146
    2. '<|end|>' → logprob: -4.145094394683838
    3. ',' → logprob: -5.770094394683838
    4. '
' → logprob: -8.27009391784668
    5. 'self' → logprob: -8.27009391784668
    6. ')' → logprob: -8.64509391784668
    7. '   ' → logprob: -9.39509391784668
    8. ' self' → logprob: -9.77009391784668
    9. '<|end|>' → logprob: -10.27009391784668
    10. '      ' → logprob: -11.39509391784668

Token 239: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00044377794256433845
    2. 'self' → logprob: -7.875443935394287
    3. ' self' → logprob: -10.500443458557129
    4. '<|end|>' → logprob: -11.250443458557129
    5. '        
' → logprob: -11.875443458557129
    6. '
' → logprob: -12.125443458557129
    7. '   ' → logprob: -12.250443458557129
    8. ',' → logprob: -13.125443458557129
    9. '      ' → logprob: -13.250443458557129
    10. '```' → logprob: -14.500443458557129

Token 240: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.012210346758365631
    2. '       ' → logprob: -4.512210369110107
    3. ' self' → logprob: -6.762210369110107
    4. '   ' → logprob: -13.38720989227295
    5. 'trap' → logprob: -13.88720989227295
    6. 'class' → logprob: -14.51220989227295
    7. '```' → logprob: -14.51220989227295
    8. ' ' → logprob: -15.13720989227295
    9. '      ' → logprob: -15.26220989227295
    10. '	self' → logprob: -15.51220989227295

Token 241: '.tr' (ID: 8992)
  Prédit: '.tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tr' → logprob: -0.024708706885576248
    2. '.' → logprob: -3.8997087478637695
    3. ' .' → logprob: -5.7747087478637695
    4. '.p' → logprob: -7.5247087478637695
    5. 'trap' → logprob: -8.02470874786377
    6. 'tr' → logprob: -10.14970874786377
    7. '.positions' → logprob: -10.52470874786377
    8. '._' → logprob: -11.27470874786377
    9. '_tr' → logprob: -11.52470874786377
    10. ' trap' → logprob: -11.77470874786377

Token 242: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.0005170515505596995
    2. 'aps' → logprob: -7.625516891479492
    3. 'a' → logprob: -12.750516891479492
    4. '#' → logprob: -13.000516891479492
    5. 'ап' → logprob: -13.000516891479492
    6. 'trap' → logprob: -13.000516891479492
    7. 'types' → logprob: -13.250516891479492
    8. '   ' → logprob: -13.375516891479492
    9. 'y' → logprob: -13.500516891479492
    10. 'apped' → logprob: -13.625516891479492

Token 243: '_types' (ID: 21515)
  Prédit: '_types'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_types' → logprob: -0.0002497767563909292
    2. '_positions' → logprob: -9.125249862670898
    3. 's' → logprob: -9.625249862670898
    4. '_symbols' → logprob: -10.500249862670898
    5. '_type' → logprob: -11.000249862670898
    6. '_map' → logprob: -11.375249862670898
    7. 'types' → logprob: -12.375249862670898
    8. '_cells' → logprob: -12.750249862670898
    9. '_counts' → logprob: -13.000249862670898
    10. '_locations' → logprob: -13.000249862670898

Token 244: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759449005126953
    2. ' =' → logprob: -0.8259449005126953
    3. ' ' → logprob: -12.450944900512695
    4. '_map' → logprob: -13.950944900512695
    5. ':' → logprob: -14.825944900512695
    6. '_dict' → logprob: -15.825944900512695
    7. '   ' → logprob: -16.450944900512695
    8. 's' → logprob: -16.575944900512695
    9. '[' → logprob: -17.325944900512695
    10. '  ' → logprob: -17.325944900512695

Token 245: ' trap' (ID: 34270)
  Prédit: 'trap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trap' → logprob: -0.010043746791779995
    2. '{' → logprob: -5.135043621063232
    3. ' trap' → logprob: -5.635043621063232
    4. '{}' → logprob: -7.885043621063232
    5. ' {' → logprob: -9.01004409790039
    6. '{}
' → logprob: -11.38504409790039
    7. ' ' → logprob: -12.13504409790039
    8. 'tr' → logprob: -12.38504409790039
    9. ' {}' → logprob: -12.76004409790039
    10. '{}

' → logprob: -12.88504409790039

Token 246: '_types' (ID: 21515)
  Prédit: '_types'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_types' → logprob: -6.630610641877865e-06
    2. '_type' → logprob: -13.250006675720215
    3. 's' → logprob: -13.500006675720215
    4. '_' → logprob: -13.625006675720215
    5. 'types' → logprob: -13.625006675720215
    6. ' _' → logprob: -14.875006675720215
    7. 'Types' → logprob: -15.500006675720215
    8. 'ypes' → logprob: -15.875006675720215
    9. '_TYPES' → logprob: -15.875006675720215
    10. '[_' → logprob: -17.0000057220459

Token 247: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 248: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2601562738418579
    2. 'self' → logprob: -2.1351561546325684
    3. '       ' → logprob: -2.6351561546325684
    4. '#' → logprob: -4.010156154632568
    5. '<|end|>' → logprob: -5.135156154632568
    6. 'def' → logprob: -5.510156154632568
    7. ' self' → logprob: -6.135156154632568
    8. ' ' → logprob: -6.510156154632568
    9. '        
' → logprob: -6.510156154632568
    10. ' #' → logprob: -6.760156154632568

Token 249: ' dict' (ID: 11878)
  Prédit: ' dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dict' → logprob: -0.72344970703125
    2. 'dict' → logprob: -0.97344970703125
    3. '{' → logprob: -2.47344970703125
    4. 'Dict' → logprob: -3.22344970703125
    5. '{}' → logprob: -4.97344970703125
    6. ' Dict' → logprob: -5.84844970703125
    7. ' {' → logprob: -5.97344970703125
    8. ' {}' → logprob: -7.34844970703125
    9. 'List' → logprob: -10.84844970703125
    10. '_dict' → logprob: -11.72344970703125

Token 250: ' symbol' (ID: 10038)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.6636959910392761
    2. '<|end|>' → logprob: -0.7886959910392761
    3. '{' → logprob: -5.038695812225342
    4. '[' → logprob: -5.163695812225342
    5. 'from' → logprob: -5.538695812225342
    6. ' of' → logprob: -5.788695812225342
    7. '[int' → logprob: -6.038695812225342
    8. ' from' → logprob: -6.163695812225342
    9. '<|end|>' → logprob: -6.163695812225342
    10. ')' → logprob: -6.913695812225342

Token 251: ' ->' (ID: 2747)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 252: ' Trap' (ID: 104412)
  Prédit: 'Trap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Trap' → logprob: -0.004089678172022104
    2. ' Trap' → logprob: -5.504089832305908
    3. 'trap' → logprob: -11.62908935546875
    4. 'int' → logprob: -13.50408935546875
    5. ' int' → logprob: -14.37908935546875
    6. ' trap' → logprob: -15.00408935546875
    7. ' ' → logprob: -17.12908935546875
    8. 'self' → logprob: -18.37908935546875
    9. '   ' → logprob: -19.00408935546875
    10. 'Damage' → logprob: -19.12908935546875

Token 253: 'Type' (ID: 1163)
  Prédit: 'Type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Type' → logprob: -1.2664456789934775e-06
    2. 'type' → logprob: -13.875000953674316
    3. 'ype' → logprob: -16.625001907348633
    4. '   ' → logprob: -16.750001907348633
    5. '<|end|>' → logprob: -16.750001907348633
    6. '_type' → logprob: -16.875001907348633
    7. ')' → logprob: -17.750001907348633
    8. 'Types' → logprob: -18.250001907348633
    9. ' Type' → logprob: -18.375001907348633
    10. 'Trap' → logprob: -18.375001907348633

Token 254: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07384701073169708
    2. 'def' → logprob: -2.9488470554351807
    3. '
' → logprob: -4.198846817016602
    4. ' def' → logprob: -6.323846817016602
    5. '<|end|>' → logprob: -7.323846817016602
    6. '    
' → logprob: -7.698846817016602
    7. 'class' → logprob: -7.823846817016602
    8. ' ' → logprob: -8.573846817016602
    9. '       ' → logprob: -10.073846817016602
    10. ',' → logprob: -10.073846817016602

Token 256: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.003435538848862052
    2. ' def' → logprob: -6.2534356117248535
    3. '   ' → logprob: -6.5034356117248535
    4. ')' → logprob: -13.003435134887695
    5. ' ' → logprob: -13.753435134887695
    6. '
' → logprob: -13.878435134887695
    7. '    
' → logprob: -14.253435134887695
    8. 'de' → logprob: -14.378435134887695
    9. 'class' → logprob: -14.628435134887695
    10. '	def' → logprob: -14.878435134887695

Token 257: ' get' (ID: 717)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.8882225751876831
    2. ' is' → logprob: -1.263222575187683
    3. ' get' → logprob: -1.638222575187683
    4. 'get' → logprob: -2.5132226943969727
    5. ' in' → logprob: -4.138222694396973
    6. 'in' → logprob: -6.013222694396973
    7. 'has' → logprob: -6.138222694396973
    8. 'def' → logprob: -6.263222694396973
    9. ' has' → logprob: -6.388222694396973
    10. ' can' → logprob: -6.638222694396973

Token 258: '_tr' (ID: 7410)
  Prédit: '_tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tr' → logprob: -0.004304307512938976
    2. '_cell' → logprob: -5.6293044090271
    3. '_' → logprob: -8.129303932189941
    4. '_damage' → logprob: -8.879303932189941
    5. '_tile' → logprob: -9.004303932189941
    6. '_symbol' → logprob: -9.754303932189941
    7. '_position' → logprob: -10.504303932189941
    8. 'trap' → logprob: -11.254303932189941
    9. '_entity' → logprob: -11.504303932189941
    10. 'Trap' → logprob: -11.879303932189941

Token 259: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.00012880703434348106
    2. 'aps' → logprob: -9.375128746032715
    3. 'a' → logprob: -10.625128746032715
    4. 'apped' → logprob: -12.125128746032715
    5. 'ап' → logprob: -12.250128746032715
    6. 'apping' → logprob: -14.062628746032715
    7. '   ' → logprob: -14.125128746032715
    8. 'symbol' → logprob: -14.187628746032715
    9. 'p' → logprob: -14.375128746032715
    10. 'app' → logprob: -14.875128746032715

Token 260: '_damage' (ID: 124305)
  Prédit: '_type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.016874894499778748
    2. '(self' → logprob: -4.64187479019165
    3. '_at' → logprob: -5.14187479019165
    4. '_damage' → logprob: -7.01687479019165
    5. '_symbol' → logprob: -8.891875267028809
    6. 'Type' → logprob: -9.266875267028809
    7. '(' → logprob: -9.891875267028809
    8. 'type' → logprob: -10.516875267028809
    9. 'damage' → logprob: -11.641875267028809
    10. '_position' → logprob: -12.016875267028809

Token 261: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008102210704237223
    2. '(' → logprob: -7.125810146331787
    3. ' (' → logprob: -12.625810623168945
    4. 'self' → logprob: -13.250810623168945
    5. '   ' → logprob: -15.250810623168945
    6. '(s' → logprob: -15.500810623168945
    7. '(
' → logprob: -16.375810623168945
    8. ' ' → logprob: -16.750810623168945
    9. '(sel' → logprob: -16.875810623168945
    10. ' self' → logprob: -17.000810623168945

Token 262: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1780003309249878
    2. ',' → logprob: -2.3030004501342773
    3. 'self' → logprob: -2.8030004501342773
    4. ')' → logprob: -7.553000450134277
    5. ' (' → logprob: -7.803000450134277
    6. '(' → logprob: -7.928000450134277
    7. ',self' → logprob: -8.053000450134277
    8. 'symbol' → logprob: -8.178000450134277
    9. ')(' → logprob: -8.678000450134277
    10. ' ,' → logprob: -9.178000450134277

Token 263: ' pos' (ID: 1253)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02496301755309105
    2. 'position' → logprob: -3.899962902069092
    3. 'pos' → logprob: -5.774962902069092
    4. ' self' → logprob: -6.899962902069092
    5. 'row' → logprob: -8.52496337890625
    6. ' position' → logprob: -9.77496337890625
    7. '   ' → logprob: -10.77496337890625
    8. '       ' → logprob: -11.77496337890625
    9. ' pos' → logprob: -12.64996337890625
    10. ')' → logprob: -13.14996337890625

Token 264: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016735631972551346
    2. ')' → logprob: -4.766735553741455
    3. '):
' → logprob: -4.891735553741455
    4. 'ition' → logprob: -7.766735553741455
    5. ':' → logprob: -10.141736030578613
    6. 'osition' → logprob: -10.141736030578613
    7. '):
' → logprob: -10.516736030578613
    8. '):

' → logprob: -10.891736030578613
    9. 'tion' → logprob: -11.641736030578613
    10. 'ion' → logprob: -12.391736030578613

Token 265: ' Position' (ID: 21829)
  Prédit: 'Position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Position' → logprob: -0.1222330629825592
    2. 'pos' → logprob: -2.7472331523895264
    3. ' Position' → logprob: -3.6222331523895264
    4. ')' → logprob: -4.872232913970947
    5. ' pos' → logprob: -5.247232913970947
    6. 'position' → logprob: -5.497232913970947
    7. '):
' → logprob: -5.997232913970947
    8. '):' → logprob: -5.997232913970947
    9. 'Pos' → logprob: -6.747232913970947
    10. 'self' → logprob: -8.122233390808105

Token 266: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005367871839553118
    2. ')' → logprob: -5.380367755889893
    3. '):
' → logprob: -7.255367755889893
    4. ' ):' → logprob: -10.25536823272705
    5. '):
' → logprob: -13.38036823272705
    6. '   ' → logprob: -13.38036823272705
    7. ':' → logprob: -13.88036823272705
    8. ' )' → logprob: -14.50536823272705
    9. '):

' → logprob: -14.63036823272705
    10. ')->' → logprob: -14.88036823272705

Token 267: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006232837215065956
    2. '):' → logprob: -5.381232738494873
    3. '():' → logprob: -6.506232738494873
    4. ':
' → logprob: -9.631233215332031
    5. ' :' → logprob: -11.506233215332031
    6. '):
' → logprob: -12.006233215332031
    7. ',' → logprob: -12.131233215332031
    8. '():
' → logprob: -12.256233215332031
    9. '       ' → logprob: -12.506233215332031
    10. ':**' → logprob: -12.756233215332031

Token 268: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03404490277171135
    2. ' int' → logprob: -3.4090449810028076
    3. 'self' → logprob: -8.534045219421387
    4. '   ' → logprob: -8.784045219421387
    5. ' self' → logprob: -10.784045219421387
    6. 'Optional' → logprob: -11.284045219421387
    7. '0' → logprob: -12.534045219421387
    8. ' ' → logprob: -12.909045219421387
    9. ' Optional' → logprob: -12.909045219421387
    10. '[int' → logprob: -13.159045219421387

Token 269: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00324473949149251
    2. '):' → logprob: -5.878244876861572
    3. '       ' → logprob: -8.628244400024414
    4. ':
' → logprob: -8.753244400024414
    5. '():' → logprob: -10.003244400024414
    6. ',' → logprob: -11.378244400024414
    7. '(self' → logprob: -11.628244400024414
    8. '   ' → logprob: -12.003244400024414
    9. ' :' → logprob: -12.003244400024414
    10. ')' → logprob: -12.378244400024414

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002278838539496064
    2. ' if' → logprob: -6.377278804779053
    3. 'if' → logprob: -8.002279281616211
    4. 'symbol' → logprob: -9.377279281616211
    5. ' symbol' → logprob: -9.877279281616211
    6. '```' → logprob: -10.502279281616211
    7. 'return' → logprob: -11.377279281616211
    8. 'tr' → logprob: -12.002279281616211
    9. ':' → logprob: -12.002279281616211
    10. 'trap' → logprob: -12.252279281616211

Token 271: ' trap' (ID: 34270)
  Prédit: 'symbol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'symbol' → logprob: -0.046822305768728256
    2. 'cell' → logprob: -4.0468220710754395
    3. 'if' → logprob: -4.5468220710754395
    4. 'trap' (adapté à ' trap') → logprob: -4.5468220710754395
    5. '       ' → logprob: -5.7968220710754395
    6. ' symbol' → logprob: -5.9218220710754395
    7. ' if' → logprob: -7.5468220710754395
    8. 'sym' → logprob: -7.7968220710754395
    9. ' cell' → logprob: -8.296822547912598
    10. 'ch' → logprob: -10.171822547912598

Token 272: '_symbol' (ID: 43798)
  Prédit: '_symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_symbol' → logprob: -0.0029303953051567078
    2. '_' → logprob: -6.377930164337158
    3. '_sym' → logprob: -7.252930164337158
    4. '_type' → logprob: -8.127930641174316
    5. ' =' → logprob: -9.252930641174316
    6. '_char' → logprob: -9.502930641174316
    7. 'symbol' → logprob: -10.127930641174316
    8. '=' → logprob: -12.377930641174316
    9. '_s' → logprob: -12.877930641174316
    10. '_cell' → logprob: -13.627930641174316

Token 273: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326204538345337
    2. '=' → logprob: -1.3132619857788086
    3. '=self' → logprob: -16.063262939453125
    4. ' ' → logprob: -16.563262939453125
    5. 's' → logprob: -16.813262939453125
    6. '=

' → logprob: -17.438262939453125
    7. '   ' → logprob: -18.188262939453125
    8. ')' → logprob: -18.313262939453125
    9. ' ' → logprob: -18.313262939453125
    10. '=}' → logprob: -18.438262939453125

Token 274: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12693357467651367
    2. ' self' → logprob: -2.1269335746765137
    3. '       ' → logprob: -13.501934051513672
    4. '   ' → logprob: -13.626934051513672
    5. '(self' → logprob: -14.126934051513672
    6. '
' → logprob: -14.501934051513672
    7. '	self' → logprob: -14.626934051513672
    8. 'None' → logprob: -14.751934051513672
    9. ' None' → logprob: -15.751934051513672
    10. ' ' → logprob: -15.876934051513672

Token 275: '.layout' (ID: 12865)
  Prédit: '.layout'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.layout' → logprob: -1.3544423381972592e-05
    2. '.' → logprob: -11.62501335144043
    3. 'layout' → logprob: -12.62501335144043
    4. ' .' → logprob: -13.87501335144043
    5. '.layouts' → logprob: -15.50001335144043
    6. '.Layout' → logprob: -17.25001335144043
    7. ' layout' → logprob: -17.87501335144043
    8. '	layout' → logprob: -18.00001335144043
    9. '.l' → logprob: -18.50001335144043
    10. '.position' → logprob: -19.25001335144043

Token 276: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -1.4378848391061183e-05
    2. '[' → logprob: -11.250014305114746
    3. 'pos' → logprob: -14.375014305114746
    4. ' [' → logprob: -14.625014305114746
    5. '[position' → logprob: -15.375014305114746
    6. '[row' → logprob: -16.875015258789062
    7. '[
' → logprob: -16.875015258789062
    8. '[p' → logprob: -17.625015258789062
    9. '```' → logprob: -17.625015258789062
    10. '[self' → logprob: -17.750015258789062

Token 277: '.row' (ID: 24627)
  Prédit: '.row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.row' → logprob: -1.27099974633893e-05
    2. '.' → logprob: -11.375012397766113
    3. ' .' → logprob: -14.125012397766113
    4. 'row' → logprob: -15.750012397766113
    5. '[row' → logprob: -16.75001335144043
    6. '].' → logprob: -17.12501335144043
    7. '   ' → logprob: -17.25001335144043
    8. '[' → logprob: -17.37501335144043
    9. '.col' → logprob: -17.50001335144043
    10. '	row' → logprob: -17.50001335144043

Token 278: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -9.2576454335358e-05
    2. ']' → logprob: -9.500092506408691
    3. ' ][' → logprob: -11.125092506408691
    4. '[pos' → logprob: -13.000092506408691
    5. ']][' → logprob: -15.625092506408691
    6. '"][' → logprob: -16.250093460083008
    7. '][]' → logprob: -16.375093460083008
    8. '   ' → logprob: -16.500093460083008
    9. '()][' → logprob: -16.750093460083008
    10. ' ' → logprob: -17.000093460083008

Token 279: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.4855663721391466e-05
    2. ' pos' → logprob: -11.125015258789062
    3. '
' → logprob: -18.250015258789062
    4. '	pos' → logprob: -18.375015258789062
    5. 'p' → logprob: -19.125015258789062
    6. '   ' → logprob: -19.750015258789062
    7. 'post' → logprob: -20.000015258789062
    8. '_pos' → logprob: -20.000015258789062
    9. 'po' → logprob: -20.625015258789062
    10. ' ' → logprob: -20.625015258789062

Token 280: '.col' (ID: 7320)
  Prédit: '.col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.col' → logprob: -7.3458322731312364e-06
    2. 'col' → logprob: -11.875007629394531
    3. '	col' → logprob: -15.625007629394531
    4. '.column' → logprob: -16.62500762939453
    5. 'Col' → logprob: -17.25000762939453
    6. ' col' → logprob: -17.25000762939453
    7. ' .' → logprob: -17.50000762939453
    8. '_col' → logprob: -17.62500762939453
    9. '.Col' → logprob: -17.62500762939453
    10. '.' → logprob: -18.50000762939453

Token 281: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.5332478142227046e-05
    2. ')' → logprob: -11.625015258789062
    3. ' ]' → logprob: -12.875015258789062
    4. ']
' → logprob: -13.375015258789062
    5. '])' → logprob: -13.500015258789062
    6. ')]' → logprob: -14.375015258789062
    7. ']

' → logprob: -16.125015258789062
    8. '[' → logprob: -18.125015258789062
    9. '']' → logprob: -18.125015258789062
    10. ']
' → logprob: -18.500015258789062

Token 282: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3372116684913635
    2. '       ' → logprob: -2.3372116088867188
    3. 'if' → logprob: -2.3372116088867188
    4. '<|end|>' → logprob: -3.2122116088867188
    5. '
' → logprob: -3.3372116088867188
    6. '   ' → logprob: -5.212211608886719
    7. ' ' → logprob: -5.337211608886719
    8. ')' → logprob: -6.337211608886719
    9. ' 
' → logprob: -7.337211608886719
    10. 'return' → logprob: -7.337211608886719

Token 283: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7693760991096497
    2. ' if' → logprob: -1.2693760395050049
    3. 'return' → logprob: -1.6443760395050049
    4. '       ' → logprob: -2.894376039505005
    5. ' return' → logprob: -5.269376277923584
    6. '
' → logprob: -6.269376277923584
    7. 'trap' → logprob: -9.519375801086426
    8. '        
' → logprob: -10.144375801086426
    9. '   ' → logprob: -10.769375801086426
    10. ')' → logprob: -11.519375801086426

Token 284: ' trap' (ID: 34270)
  Prédit: ' trap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trap' → logprob: -0.42875561118125916
    2. 'trap' → logprob: -1.0537556409835815
    3. ' ' → logprob: -11.053755760192871
    4. ' ' → logprob: -11.553755760192871
    5. ' not' → logprob: -11.803755760192871
    6. 'tr' → logprob: -11.928755760192871
    7. 'not' → logprob: -12.928755760192871
    8. ' self' → logprob: -12.991255760192871
    9. '   ' → logprob: -12.991255760192871
    10. 'self' → logprob: -13.428755760192871

Token 285: '_symbol' (ID: 43798)
  Prédit: '_symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_symbol' → logprob: -7.93448489275761e-05
    2. '_' → logprob: -10.000079154968262
    3. 'symbol' → logprob: -10.875079154968262
    4. '_symbols' → logprob: -11.625079154968262
    5. '_sym' → logprob: -12.500079154968262
    6. ' _' → logprob: -14.250079154968262
    7. '_s' → logprob: -14.625079154968262
    8. '_type' → logprob: -15.250079154968262
    9. 's' → logprob: -15.375079154968262
    10. '_

' → logprob: -15.750079154968262

Token 286: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2926998436450958
    2. ' ==' → logprob: -1.6676998138427734
    3. ' not' → logprob: -3.2926998138427734
    4. ' is' → logprob: -4.417699813842773
    5. '==' → logprob: -5.042699813842773
    6. ' !=' → logprob: -5.292699813842773
    7. 'not' → logprob: -6.542699813842773
    8. ' and' → logprob: -6.792699813842773
    9. 'in' → logprob: -7.667699813842773
    10. 'and' → logprob: -7.792699813842773

Token 287: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5761397480964661
    2. 'self' → logprob: -0.8261397480964661
    3. 'elf' → logprob: -8.826139450073242
    4. ' ' → logprob: -11.701139450073242
    5. '	self' → logprob: -11.826139450073242
    6. '<|end|>' → logprob: -11.826139450073242
    7. '(self' → logprob: -11.951139450073242
    8. '[self' → logprob: -11.951139450073242
    9. '    ' → logprob: -12.951139450073242
    10. '=self' → logprob: -13.451139450073242

Token 288: '.tr' (ID: 8992)
  Prédit: '.tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tr' → logprob: -4.56102097814437e-05
    2. '.' → logprob: -10.125045776367188
    3. ' .' → logprob: -12.250045776367188
    4. 'trap' → logprob: -14.625045776367188
    5. 'tr' → logprob: -16.750045776367188
    6. '<tr' → logprob: -17.000045776367188
    7. '.trip' → logprob: -17.625045776367188
    8. '	tr' → logprob: -17.625045776367188
    9. '..' → logprob: -18.750045776367188
    10. '.t' → logprob: -19.000045776367188

Token 289: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.0002506111632101238
    2. '   ' → logprob: -9.875250816345215
    3. 'aps' → logprob: -9.875250816345215
    4. '
' → logprob: -10.937750816345215
    5. 'a' → logprob: -11.062750816345215
    6. 'app' → logprob: -11.562750816345215
    7. '#' → logprob: -11.625250816345215
    8. 'trap' → logprob: -11.875250816345215
    9. '

' → logprob: -12.062750816345215
    10. 'ап' → logprob: -12.125250816345215

Token 290: '_types' (ID: 21515)
  Prédit: '_types'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_types' → logprob: -7.896309739408025e-07
    2. '_type' → logprob: -14.625000953674316
    3. '_' → logprob: -16.0
    4. '_TYPES' → logprob: -16.75
    5. 'Types' → logprob: -17.5
    6. 'types' → logprob: -17.5
    7. '_symbols' → logprob: -17.5
    8. 's' → logprob: -18.625
    9. '   ' → logprob: -18.75
    10. 'ypes' → logprob: -19.0

Token 291: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16051869094371796
    2. ':
' → logprob: -1.9105186462402344
    3. ':return' → logprob: -9.160518646240234
    4. ' :' → logprob: -9.785518646240234
    5. ' and' → logprob: -9.910518646240234
    6. '):
' → logprob: -10.285518646240234
    7. ' :
' → logprob: -10.660518646240234
    8. ':

' → logprob: -11.535518646240234
    9. '):' → logprob: -12.035518646240234
    10. ':
' → logprob: -12.410518646240234

Token 292: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7742152214050293
    2. ':' → logprob: -1.1492152214050293
    3. ':
' → logprob: -1.7742152214050293
    4. ':return' → logprob: -3.3992152214050293
    5. 'return' → logprob: -4.649215221405029
    6. ' return' → logprob: -4.899215221405029
    7. '       ' → logprob: -6.649215221405029
    8. '
' → logprob: -8.399215698242188
    9. ' :
' → logprob: -9.524215698242188
    10. ':

' → logprob: -9.774215698242188

Token 293: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.14839869737625122
    2. ' return' → logprob: -2.2733986377716064
    3. '           ' → logprob: -3.3983986377716064
    4. '       ' → logprob: -7.3983988761901855
    5. '
' → logprob: -7.5233988761901855
    6. ':return' → logprob: -8.898398399353027
    7. '               ' → logprob: -9.773398399353027
    8. ':' → logprob: -10.023398399353027
    9. ' 
' → logprob: -10.648398399353027
    10. '            
' → logprob: -10.773398399353027

Token 294: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.06196858361363411
    2. 'self' → logprob: -2.8119685649871826
    3. ' ' → logprob: -15.311968803405762
    4. 'elf' → logprob: -15.561968803405762
    5. '	self' → logprob: -15.811968803405762
    6. '(self' → logprob: -16.186967849731445
    7. '           ' → logprob: -16.311967849731445
    8. 'Self' → logprob: -17.811967849731445
    9. '_self' → logprob: -17.811967849731445
    10. '       ' → logprob: -18.061967849731445

Token 295: '.tr' (ID: 8992)
  Prédit: '.tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tr' → logprob: -5.12127808178775e-05
    2. '.' → logprob: -10.250051498413086
    3. ' .' → logprob: -11.125051498413086
    4. '<tr' → logprob: -14.750051498413086
    5. '	tr' → logprob: -15.625051498413086
    6. 'tr' → logprob: -15.750051498413086
    7. '   ' → logprob: -16.000051498413086
    8. 'trap' → logprob: -16.125051498413086
    9. ' ' → logprob: -16.375051498413086
    10. '.trip' → logprob: -16.750051498413086

Token 296: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -1.5094070477061905e-05
    2. '   ' → logprob: -12.625015258789062
    3. 'trap' → logprob: -12.750015258789062
    4. 'a' → logprob: -13.000015258789062
    5. 'ап' → logprob: -13.375015258789062
    6. 'aps' → logprob: -13.875015258789062
    7. '
' → logprob: -14.250015258789062
    8. '       ' → logprob: -14.750015258789062
    9. '

' → logprob: -14.875015258789062
    10. '	ap' → logprob: -15.375015258789062

Token 297: '_types' (ID: 21515)
  Prédit: '_types'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_types' → logprob: -1.7432603272027336e-06
    2. '_damage' → logprob: -14.750001907348633
    3. '_TYPES' → logprob: -15.250001907348633
    4. '_' → logprob: -15.625001907348633
    5. '_symbols' → logprob: -15.625001907348633
    6. 'Types' → logprob: -15.750001907348633
    7. '_type' → logprob: -15.875001907348633
    8. '_
' → logprob: -16.375001907348633
    9. '   ' → logprob: -16.500001907348633
    10. '_symbol' → logprob: -17.125001907348633

Token 298: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.842555426876061e-06
    2. ' [' → logprob: -13.625004768371582
    3. '[pos' → logprob: -13.625004768371582
    4. 'trap' → logprob: -13.625004768371582
    5. '[
' → logprob: -14.375004768371582
    6. '   ' → logprob: -16.3750057220459
    7. '[s' → logprob: -16.8750057220459
    8. '[temp' → logprob: -16.8750057220459
    9. '_tr' → logprob: -17.1250057220459
    10. ' ' → logprob: -17.1250057220459

Token 299: 'trap' (ID: 74519)
  Prédit: 'trap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trap' → logprob: -4.246537173457909e-06
    2. ' trap' → logprob: -12.750003814697266
    3. '[' → logprob: -13.750003814697266
    4. '   ' → logprob: -16.500003814697266
    5. '
' → logprob: -17.000003814697266
    6. ' ' → logprob: -17.250003814697266
    7. 'tr' → logprob: -17.625003814697266
    8. 't' → logprob: -18.250003814697266
    9. 'trip' → logprob: -18.750003814697266
    10. ']' → logprob: -18.750003814697266

Token 300: '_symbol' (ID: 43798)
  Prédit: '_symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_symbol' → logprob: -0.01249551959335804
    2. '_types' → logprob: -4.887495517730713
    3. 'symbol' → logprob: -5.387495517730713
    4. '_symbols' → logprob: -8.762495994567871
    5. '_type' → logprob: -9.762495994567871
    6. 'types' → logprob: -10.137495994567871
    7. '_damage' → logprob: -11.387495994567871
    8. ')' → logprob: -11.887495994567871
    9. 'Symbol' → logprob: -12.512495994567871
    10. '_' → logprob: -12.512495994567871

Token 301: '].' (ID: 1651)
  Prédit: '.damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.damage' → logprob: -0.019611835479736328
    2. '].' → logprob: -4.519611835479736
    3. '.' → logprob: -4.894611835479736
    4. ').' → logprob: -7.019611835479736
    5. '}.' → logprob: -9.644611358642578
    6. ' .' → logprob: -9.644611358642578
    7. '.d' → logprob: -11.894611358642578
    8. '	damage' → logprob: -12.894611358642578
    9. '>.' → logprob: -13.144611358642578
    10. ' ].' → logprob: -13.394611358642578

Token 302: 'damage' (ID: 94103)
  Prédit: 'damage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'damage' → logprob: -1.7432603272027336e-06
    2. 'dam' → logprob: -13.750001907348633
    3. '	damage' → logprob: -15.250001907348633
    4. '.damage' → logprob: -15.750001907348633
    5. ' damage' → logprob: -16.125001907348633
    6. 'danger' → logprob: -16.125001907348633
    7. '_damage' → logprob: -17.500001907348633
    8. 'amage' → logprob: -19.125001907348633
    9. 'da' → logprob: -19.250001907348633
    10. 'd' → logprob: -19.375001907348633

Token 303: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006805036100558937
    2. '
' → logprob: -8.250680923461914
    3. 'return' → logprob: -8.250680923461914
    4. 'else' → logprob: -10.125680923461914
    5. ' return' → logprob: -10.250680923461914
    6. ' else' → logprob: -10.500680923461914
    7. '<|end|>' → logprob: -10.500680923461914
    8. '        
' → logprob: -12.125680923461914
    9. '   ' → logprob: -12.375680923461914
    10. '	' → logprob: -12.500680923461914

Token 304: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024524700711481273
    2. 'return' → logprob: -8.500245094299316
    3. ' return' → logprob: -10.875245094299316
    4. '
' → logprob: -11.625245094299316
    5. '   ' → logprob: -12.750245094299316
    6. 'else' → logprob: -12.750245094299316
    7. '	' → logprob: -13.250245094299316
    8. '           ' → logprob: -13.750245094299316
    9. ' else' → logprob: -13.875245094299316
    10. '        
' → logprob: -14.500245094299316

Token 305: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2521783113479614
    2. 'return' (adapté à ' return') → logprob: -1.6271783113479614
    3. 'else' → logprob: -4.627178192138672
    4. '
' → logprob: -5.252178192138672
    5. ' return' → logprob: -5.502178192138672
    6. '   ' → logprob: -5.502178192138672
    7. ' else' → logprob: -5.877178192138672
    8. '    
' → logprob: -8.752178192138672
    9. '        
' → logprob: -8.752178192138672
    10. '0' → logprob: -10.877178192138672

Token 306: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1269282102584839
    2. ' ' → logprob: -2.1269283294677734
    3. ' ' → logprob: -16.751928329467773
    4. '   ' → logprob: -19.626928329467773
    5. '  ' → logprob: -20.564428329467773
    6. '۰' → logprob: -20.751928329467773
    7. 'None' → logprob: -20.876928329467773
    8. ' None' → logprob: -21.126928329467773
    9. '1' → logprob: -21.376928329467773
    10. '00' → logprob: -21.564428329467773

Token 307: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '00' → logprob: -20.50000762939453
    4. '   ' → logprob: -20.62500762939453
    5. '000' → logprob: -20.87500762939453
    6. 'None' → logprob: -21.25000762939453
    7. '۰' → logprob: -21.87500762939453
    8. ' ' → logprob: -22.31250762939453
    9. '  ' → logprob: -22.37500762939453
    10. '1' → logprob: -23.06250762939453

Token 308: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6350332498550415
    2. '<|end|>' → logprob: -0.7600332498550415
    3. '<|end|>' → logprob: -6.885033130645752
    4. '   ' → logprob: -8.01003360748291
    5. '    
' → logprob: -8.01003360748291
    6. '```' → logprob: -8.63503360748291
    7. ' 
' → logprob: -8.63503360748291
    8. '  
' → logprob: -9.51003360748291
    9. '

' → logprob: -9.51003360748291
    10. '\n' → logprob: -9.88503360748291

Token 309: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5012060403823853
    2. '
' → logprob: -1.3762060403823853
    3. 'class' → logprob: -2.0012059211730957
    4. 'def' → logprob: -6.001205921173096
    5. '<|end|>' → logprob: -6.126205921173096
    6. '    
' → logprob: -6.501205921173096
    7. ' class' → logprob: -9.501206398010254
    8. '<|end|>' → logprob: -9.751206398010254
    9. '```' → logprob: -9.876206398010254
    10. '

' → logprob: -10.126206398010254

Token 310: ' Patrol' (ID: 89322)
  Prédit: ' Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Player' → logprob: -0.40286362171173096
    2. ' Hero' → logprob: -2.5278635025024414
    3. ' Explorer' → logprob: -2.5278635025024414
    4. 'Player' → logprob: -2.7778635025024414
    5. ' Advent' → logprob: -3.0278635025024414
    6. 'Explorer' → logprob: -4.277863502502441
    7. 'Hero' → logprob: -4.527863502502441
    8. ' Ad' → logprob: -4.777863502502441
    9. 'Ad' → logprob: -5.402863502502441
    10. ' Game' → logprob: -5.527863502502441

Token 311: 'Step' (ID: 10643)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008664678782224655
    2. ':
' → logprob: -4.758664608001709
    3. '(' → logprob: -11.008665084838867
    4. 'Type' → logprob: -11.383665084838867
    5. '():' → logprob: -11.633665084838867
    6. ' :' → logprob: -12.508665084838867
    7. ':

' → logprob: -13.008665084838867
    8. '):' → logprob: -13.008665084838867
    9. 's' → logprob: -13.633665084838867
    10. 'Pat' → logprob: -14.383665084838867

Token 312: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010494812158867717
    2. ':
' → logprob: -6.876049518585205
    3. '(' → logprob: -11.376049041748047
    4. ':

' → logprob: -13.626049041748047
    5. ' :' → logprob: -13.751049041748047
    6. '):' → logprob: -14.126049041748047
    7. ':def' → logprob: -15.126049041748047
    8. '(object' → logprob: -15.251049041748047
    9. '<|end|>' → logprob: -15.376049041748047
    10. '():' → logprob: -15.376049041748047

Token 313: '   ' (ID: 271)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7442680597305298
    2. ':' → logprob: -1.1192680597305298
    3. '   ' → logprob: -1.6192680597305298
    4. '(' → logprob: -8.744268417358398
    5. 'def' → logprob: -9.744268417358398
    6. '):
' → logprob: -10.619268417358398
    7. ' def' → logprob: -10.994268417358398
    8. ':def' → logprob: -11.119268417358398
    9. '  ' → logprob: -11.244268417358398
    10. '<|end|>' → logprob: -11.744268417358398

Token 314: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.02878057025372982
    2. ' def' → logprob: -4.028780460357666
    3. '   ' → logprob: -4.903780460357666
    4. 'class' → logprob: -5.778780460357666
    5. '__' → logprob: -10.528780937194824
    6. 'from' → logprob: -11.028780937194824
    7. ' ' → logprob: -12.028780937194824
    8. '	def' → logprob: -12.653780937194824
    9. '  ' → logprob: -13.028780937194824
    10. ':' → logprob: -13.278780937194824

Token 315: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.7857289910316467
    2. '__' → logprob: -1.160728931427002
    3. 'def' → logprob: -2.035728931427002
    4. ' def' → logprob: -2.410728931427002
    5. 'class' → logprob: -5.660728931427002
    6. '_init' → logprob: -6.660728931427002
    7. 'init' → logprob: -7.035728931427002
    8. 'object' → logprob: -7.535728931427002
    9. '<|end|>' → logprob: -7.535728931427002
    10. '```' → logprob: -7.660728931427002

Token 316: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.440506407059729e-05
    2. 'int' → logprob: -11.12503433227539
    3. 'class' → logprob: -11.37503433227539
    4. 'def' → logprob: -12.75003433227539
    5. 'it' → logprob: -13.37503433227539
    6. 'nit' → logprob: -13.37503433227539
    7. '_init' → logprob: -14.62503433227539
    8. 'dict' → logprob: -15.12503433227539
    9. '(init' → logprob: -15.25003433227539
    10. '__' → logprob: -15.37503433227539

Token 317: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.009639095515012741
    2. '(self' → logprob: -4.884639263153076
    3. '__' → logprob: -6.509639263153076
    4. '(' → logprob: -8.384638786315918
    5. ' (' → logprob: -9.009638786315918
    6. '_(' → logprob: -9.509638786315918
    7. '__(
' → logprob: -9.634638786315918
    8. 'self' → logprob: -10.634638786315918
    9. '__((' → logprob: -11.134638786315918
    10. '<|end|>' → logprob: -12.259638786315918

Token 318: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007619291078299284
    2. ' self' → logprob: -4.882619380950928
    3. ',' → logprob: -12.00761890411377
    4. '(self' → logprob: -13.50761890411377
    5. ')' → logprob: -13.75761890411377
    6. '   ' → logprob: -13.88261890411377
    7. 'direction' → logprob: -14.13261890411377
    8. 'pos' → logprob: -14.25761890411377
    9. 'def' → logprob: -14.88261890411377
    10. ' direction' → logprob: -15.13261890411377

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03358449786901474
    2. ' ,' → logprob: -3.9085845947265625
    3. 'self' → logprob: -4.4085845947265625
    4. ' self' → logprob: -7.7835845947265625
    5. '_,' → logprob: -8.783584594726562
    6. ',self' → logprob: -9.658584594726562
    7. '(self' → logprob: -10.283584594726562
    8. ' (' → logprob: -10.783584594726562
    9. '__,' → logprob: -10.908584594726562
    10. '   ' → logprob: -10.908584594726562

Token 320: ' direction' (ID: 9262)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.6134355664253235
    2. 'pos' → logprob: -1.3634355068206787
    3. 'direction' → logprob: -1.8634355068206787
    4. 'positions' → logprob: -3.9884355068206787
    5. ' position' → logprob: -4.738435745239258
    6. ' direction' → logprob: -5.363435745239258
    7. 'time' → logprob: -6.113435745239258
    8. ' pos' → logprob: -6.113435745239258
    9. 'action' → logprob: -6.613435745239258
    10. 'start' → logprob: -6.863435745239258

Token 321: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14092467725276947
    2. ':' → logprob: -2.1409246921539307
    3. '):' → logprob: -4.515924453735352
    4. ' ,' → logprob: -6.640924453735352
    5. ' :' → logprob: -7.140924453735352
    6. '):
' → logprob: -8.015924453735352
    7. ':str' → logprob: -8.390924453735352
    8. ' ):' → logprob: -9.140924453735352
    9. ')' → logprob: -9.640924453735352
    10. '<|end|>' → logprob: -10.140924453735352

Token 322: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.2818050980567932
    2. ' str' → logprob: -1.4068050384521484
    3. ')' → logprob: -7.406805038452148
    4. ':str' → logprob: -11.781805038452148
    5. '):
' → logprob: -11.906805038452148
    6. '(str' → logprob: -11.906805038452148
    7. '[str' → logprob: -12.031805038452148
    8. 's' → logprob: -12.906805038452148
    9. '=str' → logprob: -12.906805038452148
    10. '	str' → logprob: -13.031805038452148

Token 323: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05543676018714905
    2. '):' → logprob: -2.930436849594116
    3. ' ,' → logprob: -8.055437088012695
    4. '):
' → logprob: -8.680437088012695
    5. ')' → logprob: -10.305437088012695
    6. '   ' → logprob: -11.430437088012695
    7. ' ):' → logprob: -11.805437088012695
    8. '       ' → logprob: -12.930437088012695
    9. ':' → logprob: -13.180437088012695
    10. '=' → logprob: -13.555437088012695

Token 324: ' distance' (ID: 9324)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.7846478819847107
    2. ' duration' → logprob: -2.2846479415893555
    3. 'duration' → logprob: -2.2846479415893555
    4. ' steps' → logprob: -2.6596479415893555
    5. 'wait' → logprob: -2.7846479415893555
    6. ' wait' → logprob: -3.0346479415893555
    7. 'delay' → logprob: -3.4096479415893555
    8. ' delay' → logprob: -3.5346479415893555
    9. 'count' → logprob: -4.0346479415893555
    10. 'distance' → logprob: -4.6596479415893555

Token 325: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0029055625200271606
    2. ':' → logprob: -6.502905368804932
    3. '):
' → logprob: -6.752905368804932
    4. ' ):' → logprob: -8.87790584564209
    5. '=' → logprob: -9.87790584564209
    6. ')' → logprob: -10.75290584564209
    7. ',' → logprob: -11.50290584564209
    8. ' ' → logprob: -12.62790584564209
    9. '=None' → logprob: -13.00290584564209
    10. ':int' → logprob: -13.37790584564209

Token 326: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02327110432088375
    2. ' int' → logprob: -3.773271083831787
    3. '<|end|>' → logprob: -11.773271560668945
    4. ':int' → logprob: -12.148271560668945
    5. '1' → logprob: -12.398271560668945
    6. ')' → logprob: -12.523271560668945
    7. '[int' → logprob: -13.648271560668945
    8. ' ' → logprob: -13.773271560668945
    9. '(int' → logprob: -14.523271560668945
    10. '0' → logprob: -14.648271560668945

Token 327: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00766364810988307
    2. '):
' → logprob: -4.882663726806641
    3. ')' → logprob: -9.88266372680664
    4. ',' → logprob: -13.25766372680664
    5. '   ' → logprob: -13.25766372680664
    6. '):
' → logprob: -13.38266372680664
    7. ':' → logprob: -14.38266372680664
    8. ' ):' → logprob: -15.00766372680664
    9. '):

' → logprob: -15.25766372680664
    10. '       ' → logprob: -15.38266372680664

Token 328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013250234769657254
    2. 'self' → logprob: -9.37513256072998
    3. ' self' → logprob: -10.00013256072998
    4. '   ' → logprob: -14.00013256072998
    5. '<|end|>' → logprob: -14.62513256072998
    6. '      ' → logprob: -15.37513256072998
    7. ',' → logprob: -15.62513256072998
    8. ' ' → logprob: -15.75013256072998
    9. '	self' → logprob: -15.75013256072998
    10. '	' → logprob: -16.375131607055664

Token 329: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.032836683094501495
    2. '       ' → logprob: -3.532836675643921
    3. ' self' → logprob: -5.7828369140625
    4. '   ' → logprob: -14.4078369140625
    5. '	self' → logprob: -14.7828369140625
    6. ' ' → logprob: -15.5328369140625
    7. '        ' → logprob: -16.2828369140625
    8. '      ' → logprob: -16.4078369140625
    9. '     ' → logprob: -16.9078369140625
    10. '           ' → logprob: -16.9078369140625

Token 330: '.direction' (ID: 63524)
  Prédit: '.direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.direction' → logprob: -0.020692996680736542
    2. '.' → logprob: -4.020692825317383
    3. 'direction' → logprob: -6.270692825317383
    4. ' .' → logprob: -7.645692825317383
    5. ' direction' → logprob: -8.770692825317383
    6. ' =' → logprob: -12.520692825317383
    7. '.space' → logprob: -12.770692825317383
    8. ' ' → logprob: -13.645692825317383
    9. '_direction' → logprob: -13.645692825317383
    10. '=' → logprob: -13.645692825317383

Token 331: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.726293683052063
    2. ' =' → logprob: -0.726293683052063
    3. '<|end|>' → logprob: -3.6012935638427734
    4. ' ' → logprob: -5.851293563842773
    5. ',' → logprob: -6.851293563842773
    6. ')' → logprob: -6.976293563842773
    7. ':' → logprob: -8.226293563842773
    8. '<|end|>' → logprob: -9.601293563842773
    9. '='' → logprob: -9.851293563842773
    10. ' is' → logprob: -11.601293563842773

Token 332: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.3869290053844452
    2. 'direction' → logprob: -1.1369290351867676
    3. ''' → logprob: -10.26192855834961
    4. '(direction' → logprob: -11.26192855834961
    5. ' ' → logprob: -12.76192855834961
    6. '"' → logprob: -13.01192855834961
    7. 'space' → logprob: -13.01192855834961
    8. ' '' → logprob: -13.88692855834961
    9. '<|end|>' → logprob: -14.01192855834961
    10. '.direction' → logprob: -15.13692855834961

Token 333: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 334: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 335: ' self' (ID: 1051)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.029757557436823845
    2. ' distance' → logprob: -3.529757499694824
    3. 'self' (adapté à ' self') → logprob: -12.779757499694824
    4. '(distance' → logprob: -13.154757499694824
    5. '       ' → logprob: -14.154757499694824
    6. 'space' → logprob: -14.404757499694824
    7. '        ' → logprob: -15.404757499694824
    8. '
' → logprob: -15.404757499694824
    9. '.distance' → logprob: -15.779757499694824
    10. '_distance' → logprob: -15.779757499694824

Token 336: '.distance' (ID: 65482)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.5921120643615723
    2. '<|end|>' → logprob: -1.5921120643615723
    3. ' distance' → logprob: -2.9671120643615723
    4. ' ,' → logprob: -3.0921120643615723
    5. ' ' → logprob: -3.2171120643615723
    6. 'space' → logprob: -3.3421120643615723
    7. ',' → logprob: -3.4671120643615723
    8. ' space' → logprob: -3.9671120643615723
    9. '.' → logprob: -5.092112064361572
    10. ' =' → logprob: -5.842112064361572

Token 337: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5268226265907288
    2. '=' → logprob: -0.9018226265907288
    3. '<|end|>' → logprob: -5.651822566986084
    4. ' ' → logprob: -9.151823043823242
    5. ')' → logprob: -10.276823043823242
    6. '<|end|>' → logprob: -10.651823043823242
    7. ' =
' → logprob: -13.026823043823242
    8. ',' → logprob: -13.026823043823242
    9. '=
' → logprob: -13.526823043823242
    10. ':' → logprob: -13.651823043823242

Token 338: ' distance' (ID: 9324)
  Prédit: ' distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.3132668435573578
    2. 'distance' → logprob: -1.3132668733596802
    3. '(distance' → logprob: -12.81326675415039
    4. '1' → logprob: -13.68826675415039
    5. ' ' → logprob: -14.43826675415039
    6. ' distancia' → logprob: -16.06326675415039
    7. '0' → logprob: -16.18826675415039
    8. 'space' → logprob: -16.31326675415039
    9. ' ' → logprob: -16.43826675415039
    10. '_distance' → logprob: -16.93826675415039

Token 339: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5686419010162354
    2. '<|end|>' → logprob: -1.3186419010162354
    3. 'class' → logprob: -1.8186419010162354
    4. '<|end|>' → logprob: -6.193641662597656
    5. '

' → logprob: -7.068641662597656
    6. ' class' → logprob: -7.818641662597656
    7. '   ' → logprob: -7.943641662597656
    8. '  
' → logprob: -9.693641662597656
    9. '    
' → logprob: -9.693641662597656
    10. '#' → logprob: -10.318641662597656

Token 340: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00020008347928524017
    2. '
' → logprob: -8.625200271606445
    3. ' class' → logprob: -11.375200271606445
    4. '

' → logprob: -13.000200271606445
    5. 'def' → logprob: -13.750200271606445
    6. '<|end|>' → logprob: -14.000200271606445
    7. 'from' → logprob: -14.125200271606445
    8. '```' → logprob: -14.250200271606445
    9. '<class' → logprob: -14.750200271606445
    10. '   ' → logprob: -15.000200271606445

Token 341: ' Agent' (ID: 28237)
  Prédit: 'Pat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Pat' → logprob: -0.0738823190331459
    2. ' Patrol' → logprob: -3.0738823413848877
    3. 'Trap' → logprob: -4.448882102966309
    4. ' Pat' → logprob: -5.323882102966309
    5. 'Player' → logprob: -6.198882102966309
    6. 'Monster' → logprob: -6.323882102966309
    7. 'Enemy' → logprob: -6.573882102966309
    8. ' Trap' → logprob: -7.698882102966309
    9. 'Guard' → logprob: -7.948882102966309
    10. 'Path' → logprob: -8.198882102966309

Token 342: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011191526427865028
    2. ':
' → logprob: -4.511191368103027
    3. '):' → logprob: -9.636191368103027
    4. ' :' → logprob: -10.886191368103027
    5. '):
' → logprob: -11.386191368103027
    6. '<|end|>' → logprob: -11.761191368103027
    7. '():' → logprob: -11.886191368103027
    8. 'Type' → logprob: -12.011191368103027
    9. '():
' → logprob: -12.511191368103027
    10. ':

' → logprob: -12.511191368103027

Token 343: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007751675322651863
    2. ' def' → logprob: -4.88275146484375
    3. 'def' → logprob: -9.25775146484375
    4. 'class' → logprob: -10.75775146484375
    5. ' class' → logprob: -11.13275146484375
    6. '<|end|>' → logprob: -12.63275146484375
    7. '    
' → logprob: -12.75775146484375
    8. ':' → logprob: -13.00775146484375
    9. '	def' → logprob: -14.13275146484375
    10. '
' → logprob: -14.38275146484375

Token 344: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.1070474311709404
    2. 'def' (adapté à ' def') → logprob: -2.3570473194122314
    3. '   ' → logprob: -5.2320475578308105
    4. 'class' → logprob: -6.6070475578308105
    5. ' class' → logprob: -9.232047080993652
    6. ' ' → logprob: -11.732047080993652
    7. '```' → logprob: -12.482047080993652
    8. ':' → logprob: -12.607047080993652
    9. ' __' → logprob: -12.857047080993652
    10. '  ' → logprob: -12.857047080993652

Token 345: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.005617315880954266
    2. ' def' → logprob: -6.005617141723633
    3. 'init' → logprob: -6.505617141723633
    4. '_init' → logprob: -7.505617141723633
    5. ' init' → logprob: -7.755617141723633
    6. '__' → logprob: -8.255617141723633
    7. 'def' → logprob: -8.755617141723633
    8. 'class' → logprob: -9.255617141723633
    9. ' ' → logprob: -9.380617141723633
    10. ' ' → logprob: -11.255617141723633

Token 346: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -7.896309739408025e-07
    2. 'def' → logprob: -15.375000953674316
    3. ' init' → logprob: -15.500000953674316
    4. 'int' → logprob: -16.375
    5. '_init' → logprob: -16.625
    6. '(init' → logprob: -17.0
    7. '   ' → logprob: -17.625
    8. '```' → logprob: -17.875
    9. '__' → logprob: -18.0
    10. '
' → logprob: -18.25

Token 347: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0039739166386425495
    2. '(self' → logprob: -5.878973960876465
    3. '__' → logprob: -7.003973960876465
    4. ' (' → logprob: -8.628973960876465
    5. '__(
' → logprob: -10.003973960876465
    6. '(' → logprob: -10.503973960876465
    7. ',' → logprob: -12.878973960876465
    8. 'self' → logprob: -13.253973960876465
    9. '_(' → logprob: -13.503973960876465
    10. '__((' → logprob: -13.753973960876465

Token 348: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024902839213609695
    2. ' self' → logprob: -6.002490520477295
    3. ',' → logprob: -11.877490043640137
    4. '
' → logprob: -12.127490043640137
    5. '0' → logprob: -13.627490043640137
    6. '(self' → logprob: -15.502490043640137
    7. ' ' → logprob: -15.502490043640137
    8. '   ' → logprob: -15.627490043640137
    9. ')(' → logprob: -16.127490997314453
    10. ')' → logprob: -16.252490997314453

Token 349: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004067832604050636
    2. 'self' → logprob: -6.004067897796631
    3. ' ,' → logprob: -6.504067897796631
    4. ' self' → logprob: -9.629067420959473
    5. '(self' → logprob: -11.629067420959473
    6. ',
' → logprob: -12.504067420959473
    7. '<|end|>' → logprob: -12.754067420959473
    8. '__,' → logprob: -12.879067420959473
    9. ',self' → logprob: -13.004067420959473
    10. ' (' → logprob: -13.254067420959473

Token 350: ' hp' (ID: 37774)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.6015837788581848
    2. ' position' → logprob: -1.35158371925354
    3. 'pos' → logprob: -2.85158371925354
    4. 'name' → logprob: -3.35158371925354
    5. 'health' → logprob: -3.47658371925354
    6. ' health' → logprob: -4.351583957672119
    7. ' name' → logprob: -4.476583957672119
    8. ' pos' → logprob: -4.601583957672119
    9. 'start' → logprob: -4.851583957672119
    10. ' start' → logprob: -5.101583957672119

Token 351: '_init' (ID: 13909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21493065357208252
    2. ':' → logprob: -1.7149306535720825
    3. '):' → logprob: -4.714930534362793
    4. '=' → logprob: -5.589930534362793
    5. ' ,' → logprob: -7.964930534362793
    6. ')' → logprob: -8.839930534362793
    7. ':int' → logprob: -8.964930534362793
    8. '):
' → logprob: -9.839930534362793
    9. ' ):' → logprob: -10.464930534362793
    10. ' :' → logprob: -11.964930534362793

Token 352: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06721615791320801
    2. ':' → logprob: -3.317216157913208
    3. '):' → logprob: -3.817216157913208
    4. '=' → logprob: -5.317215919494629
    5. ' ,' → logprob: -6.692215919494629
    6. '_,' → logprob: -8.442215919494629
    7. '):
' → logprob: -9.317215919494629
    8. ')' → logprob: -9.442215919494629
    9. ' ):' → logprob: -9.442215919494629
    10. '_:' → logprob: -9.692215919494629

Token 353: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03854826092720032
    2. ' int' → logprob: -3.288548231124878
    3. ',' → logprob: -7.913548469543457
    4. ',int' → logprob: -9.038548469543457
    5. ':int' → logprob: -11.413548469543457
    6. '=int' → logprob: -12.413548469543457
    7. ' ,' → logprob: -13.163548469543457
    8. ')' → logprob: -13.538548469543457
    9. '(int' → logprob: -14.163548469543457
    10. ']int' → logprob: -14.538548469543457

Token 354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12968136370182037
    2. '):' → logprob: -2.129681348800659
    3. '):
' → logprob: -6.004681587219238
    4. ' ,' → logprob: -8.879681587219238
    5. ' ):' → logprob: -9.504681587219238
    6. ')' → logprob: -10.004681587219238
    7. '=' → logprob: -11.879681587219238
    8. '):
' → logprob: -11.879681587219238
    9. ',
' → logprob: -13.442181587219238
    10. ' ' → logprob: -13.567181587219238

Token 355: ' hp' (ID: 37774)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.7056316137313843
    2. 'pos' → logprob: -0.9556316137313843
    3. ' position' → logprob: -2.705631732940674
    4. ' pos' → logprob: -4.205631732940674
    5. 'start' → logprob: -4.330631732940674
    6. 'p' → logprob: -5.580631732940674
    7. 'max' → logprob: -5.705631732940674
    8. 'attack' → logprob: -5.955631732940674
    9. 'hp' → logprob: -5.955631732940674
    10. ' start' → logprob: -6.330631732940674

Token 356: '_max' (ID: 13731)
  Prédit: '_current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_current' → logprob: -1.205675482749939
    2. ',' → logprob: -1.330675482749939
    3. '_max' → logprob: -1.455675482749939
    4. ':' → logprob: -1.955675482749939
    5. '=' → logprob: -3.4556756019592285
    6. '):' → logprob: -4.4556756019592285
    7. 'max' → logprob: -5.4556756019592285
    8. '   ' → logprob: -5.8306756019592285
    9. 'current' → logprob: -6.0806756019592285
    10. ' ,' → logprob: -6.7056756019592285

Token 357: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12215530872344971
    2. ',' → logprob: -2.49715518951416
    3. '):' → logprob: -3.62215518951416
    4. ' :' → logprob: -6.24715518951416
    5. ' ,' → logprob: -6.49715518951416
    6. ':int' → logprob: -6.62215518951416
    7. '_:' → logprob: -7.62215518951416
    8. ' ):' → logprob: -7.87215518951416
    9. ')' → logprob: -8.99715518951416
    10. '_,' → logprob: -10.12215518951416

Token 358: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2652600407600403
    2. ' int' → logprob: -1.5152599811553955
    3. ' hp' → logprob: -5.640260219573975
    4. ':int' → logprob: -6.015260219573975
    5. 'hp' → logprob: -6.140260219573975
    6. ',' → logprob: -6.390260219573975
    7. ')' → logprob: -6.640260219573975
    8. ',int' → logprob: -6.890260219573975
    9. '=int' → logprob: -8.140259742736816
    10. ' ' → logprob: -8.765259742736816

Token 359: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05000104010105133
    2. '):' → logprob: -3.0500011444091797
    3. '):
' → logprob: -6.67500114440918
    4. ' ,' → logprob: -9.05000114440918
    5. ' ):' → logprob: -10.92500114440918
    6. ')' → logprob: -12.30000114440918
    7. '):
' → logprob: -12.80000114440918
    8. '=' → logprob: -13.42500114440918
    9. ',
' → logprob: -13.42500114440918
    10. '):

' → logprob: -13.55000114440918

Token 360: ' pot' (ID: 3208)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8507136702537537
    2. 'position' → logprob: -0.9757136702537537
    3. 'p' → logprob: -2.7257137298583984
    4. ' position' → logprob: -3.1007137298583984
    5. 'pot' → logprob: -3.3507137298583984
    6. ' pot' → logprob: -4.100713729858398
    7. ' pos' → logprob: -4.600713729858398
    8. 'hp' → logprob: -4.850713729858398
    9. ' potion' → logprob: -5.850713729858398
    10. 'he' → logprob: -6.600713729858398

Token 361: 'ions' (ID: 756)
  Prédit: 'ion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.38708385825157166
    2. 'ions' → logprob: -1.137083888053894
    3. '   ' → logprob: -9.637084007263184
    4. '_init' → logprob: -9.887084007263184
    5. '_amount' → logprob: -10.012084007263184
    6. '```' → logprob: -11.012084007263184
    7. 'amount' → logprob: -11.262084007263184
    8. 's' → logprob: -12.762084007263184
    9. '
' → logprob: -12.762084007263184
    10. '       ' → logprob: -12.887084007263184

Token 362: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03421897813677788
    2. '):' → logprob: -4.159218788146973
    3. ',' → logprob: -4.409218788146973
    4. '_count' → logprob: -6.284218788146973
    5. ' :' → logprob: -6.909218788146973
    6. '):
' → logprob: -7.409218788146973
    7. '_capacity' → logprob: -7.659218788146973
    8. ' ):' → logprob: -8.159218788146973
    9. '_available' → logprob: -8.409218788146973
    10. '=' → logprob: -8.409218788146973

Token 363: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21333496272563934
    2. ':' → logprob: -1.9633349180221558
    3. '       ' → logprob: -3.0883350372314453
    4. '):
' → logprob: -5.588335037231445
    5. '=None' → logprob: -7.838335037231445
    6. '=[],' → logprob: -8.088335037231445
    7. '):' → logprob: -8.213335037231445
    8. '=[]' → logprob: -8.338335037231445
    9. ':list' → logprob: -8.588335037231445
    10. '[],' → logprob: -8.588335037231445

Token 364: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.030006639659404755
    2. ' self' → logprob: -3.5300066471099854
    3. '       ' → logprob: -8.280006408691406
    4. '   ' → logprob: -13.655006408691406
    5. '	self' → logprob: -14.280006408691406
    6. ' ' → logprob: -14.780006408691406
    7. 'super' → logprob: -16.405006408691406
    8. '        ' → logprob: -16.405006408691406
    9. '
' → logprob: -17.030006408691406
    10. '(self' → logprob: -17.030006408691406

Token 365: '.hp' (ID: 97958)
  Prédit: '.hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hp' → logprob: -0.01919923536479473
    2. '.' → logprob: -4.519199371337891
    3. ' =' → logprob: -5.519199371337891
    4. ' .' → logprob: -6.144199371337891
    5. '_hp' → logprob: -6.894199371337891
    6. '=' → logprob: -8.26919937133789
    7. 'hp' → logprob: -8.26919937133789
    8. ' hp' → logprob: -9.26919937133789
    9. ':' → logprob: -10.01919937133789
    10. '.health' → logprob: -10.26919937133789

Token 366: '_max' (ID: 13731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11309477686882019
    2. '_init' → logprob: -2.6130948066711426
    3. '_current' → logprob: -3.7380948066711426
    4. '=' → logprob: -4.738094806671143
    5. '_' → logprob: -7.113094806671143
    6. '=_' → logprob: -9.738094329833984
    7. '_initial' → logprob: -9.738094329833984
    8. '_max' → logprob: -9.738094329833984
    9. '_initialized' → logprob: -11.488094329833984
    10. '=current' → logprob: -11.738094329833984

Token 367: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889551669359207
    2. ' =' → logprob: -2.5788955688476562
    3. ',' → logprob: -12.828895568847656
    4. ')' → logprob: -14.328895568847656
    5. '=int' → logprob: -14.328895568847656
    6. '   ' → logprob: -14.453895568847656
    7. '=_' → logprob: -14.953895568847656
    8. '_' → logprob: -15.203895568847656
    9. '=
' → logprob: -16.203895568847656
    10. ' ' → logprob: -16.203895568847656

Token 368: ' hp' (ID: 37774)
  Prédit: ' hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hp' → logprob: -0.3132617771625519
    2. 'hp' → logprob: -1.3132617473602295
    3. '_hp' → logprob: -16.563261032104492
    4. ' ' → logprob: -17.188261032104492
    5. '.hp' → logprob: -17.688261032104492
    6. 'hpp' → logprob: -18.688261032104492
    7. '   ' → logprob: -19.688261032104492
    8. 'Hp' → logprob: -19.813261032104492
    9. 'HP' → logprob: -19.938261032104492
    10. 'h' → logprob: -20.188261032104492

Token 369: '_max' (ID: 13731)
  Prédit: '_init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_init' → logprob: -0.012830058112740517
    2. '_max' → logprob: -4.6378302574157715
    3. '
' → logprob: -6.1378302574157715
    4. ' =' → logprob: -8.012829780578613
    5. '    
' → logprob: -9.137829780578613
    6. '=' → logprob: -9.137829780578613
    7. '_' → logprob: -9.137829780578613
    8. '   
' → logprob: -10.387829780578613
    9. '        
' → logprob: -10.387829780578613
    10. ' 
' → logprob: -10.762829780578613

Token 370: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02472975105047226
    2. '
' → logprob: -3.7747297286987305
    3. 'self' → logprob: -6.7747297286987305
    4. ' self' → logprob: -8.77472972869873
    5. ',' → logprob: -9.27472972869873
    6. '   ' → logprob: -10.52472972869873
    7. '<|end|>' → logprob: -11.14972972869873
    8. ' ' → logprob: -11.39972972869873
    9. '        
' → logprob: -11.89972972869873
    10. ',
' → logprob: -11.89972972869873

Token 371: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007954503409564495
    2. 'self' → logprob: -5.0079545974731445
    3. ' self' → logprob: -6.7579545974731445
    4. '   ' → logprob: -10.632954597473145
    5. ',' → logprob: -10.882954597473145
    6. '
' → logprob: -10.882954597473145
    7. ' ' → logprob: -12.382954597473145
    8. '	self' → logprob: -12.882954597473145
    9. '<|end|>' → logprob: -13.257954597473145
    10. '      ' → logprob: -13.757954597473145

Token 372: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0006769311730749905
    2. '       ' → logprob: -7.875677108764648
    3. ' self' → logprob: -8.125677108764648
    4. '	self' → logprob: -14.750677108764648
    5. 'hp' → logprob: -15.250677108764648
    6. '   ' → logprob: -16.12567710876465
    7. '
' → logprob: -16.62567710876465
    8. ' ' → logprob: -17.00067710876465
    9. 's' → logprob: -17.62567710876465
    10. '(self' → logprob: -17.75067710876465

Token 373: '.hp' (ID: 97958)
  Prédit: '.hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hp' → logprob: -0.0028353037778288126
    2. '.' → logprob: -6.877835273742676
    3. ' .' → logprob: -7.377835273742676
    4. 'hp' → logprob: -7.877835273742676
    5. '_hp' → logprob: -7.877835273742676
    6. ' hp' → logprob: -8.252835273742676
    7. '._' → logprob: -10.127835273742676
    8. ' =' → logprob: -10.377835273742676
    9. '       ' → logprob: -11.377835273742676
    10. '
' → logprob: -11.377835273742676

Token 374: ' =' (ID: 314)
  Prédit: '_init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_init' → logprob: -0.737125813961029
    2. ' =' → logprob: -1.2371258735656738
    3. '=' → logprob: -1.4871258735656738
    4. '_current' → logprob: -5.612125873565674
    5. '_' → logprob: -6.737125873565674
    6. '_initial' → logprob: -8.987125396728516
    7. 'init' → logprob: -9.612125396728516
    8. '_=' → logprob: -9.737125396728516
    9. '=_' → logprob: -10.237125396728516
    10. '    ' → logprob: -10.237125396728516

Token 375: ' hp' (ID: 37774)
  Prédit: ' hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hp' → logprob: -0.3868716359138489
    2. 'hp' → logprob: -1.136871576309204
    3. '_hp' → logprob: -14.636871337890625
    4. ' ' → logprob: -16.886871337890625
    5. '.hp' → logprob: -17.011871337890625
    6. 'hpp' → logprob: -18.136871337890625
    7. '   ' → logprob: -19.136871337890625
    8. '
' → logprob: -19.261871337890625
    9. 'h' → logprob: -19.261871337890625
    10. 'HP' → logprob: -19.511871337890625

Token 376: '_init' (ID: 13909)
  Prédit: '_init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_init' → logprob: -3.7146746763028204e-05
    2. '_max' → logprob: -10.25003719329834
    3. '_' → logprob: -13.75003719329834
    4. '_ini' → logprob: -15.00003719329834
    5. 'init' → logprob: -15.87503719329834
    6. ' _' → logprob: -16.625036239624023
    7. '_

' → logprob: -17.375036239624023
    8. '_int' → logprob: -17.500036239624023
    9. '_INIT' → logprob: -17.625036239624023
    10. '_in' → logprob: -17.750036239624023

Token 377: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.334533878136426e-05
    2. 'self' → logprob: -10.625042915344238
    3. '
' → logprob: -11.250042915344238
    4. ',' → logprob: -13.125042915344238
    5. ' self' → logprob: -13.250042915344238
    6. '<|end|>' → logprob: -13.625042915344238
    7. '   ' → logprob: -14.250042915344238
    8. '      ' → logprob: -16.125043869018555
    9. '        
' → logprob: -16.875043869018555
    10. ',
' → logprob: -17.125043869018555

Token 378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00046546570956707
    2. 'self' → logprob: -7.750465393066406
    3. ' self' → logprob: -10.375465393066406
    4. '   ' → logprob: -13.125465393066406
    5. '
' → logprob: -14.000465393066406
    6. '<|end|>' → logprob: -15.000465393066406
    7. '      ' → logprob: -16.125465393066406
    8. '        
' → logprob: -16.250465393066406
    9. ',' → logprob: -16.250465393066406
    10. ' ' → logprob: -16.750465393066406

Token 379: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.023300331085920334
    2. '       ' → logprob: -3.8983004093170166
    3. ' self' → logprob: -5.8983001708984375
    4. '   ' → logprob: -12.148300170898438
    5. '
' → logprob: -13.273300170898438
    6. 'def' → logprob: -13.898300170898438
    7. '	self' → logprob: -14.523300170898438
    8. 'import' → logprob: -14.773300170898438
    9. ' ' → logprob: -14.773300170898438
    10. '#' → logprob: -15.648300170898438

Token 380: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0001227276516146958
    2. '.pos' → logprob: -9.875123023986816
    3. ' .' → logprob: -10.625123023986816
    4. '.' → logprob: -11.125123023986816
    5. '.position' → logprob: -11.375123023986816
    6. '.positions' → logprob: -11.625123023986816
    7. '.inventory' → logprob: -12.875123023986816
    8. 'pot' → logprob: -13.500123023986816
    9. '.in' → logprob: -14.000123023986816
    10. ').' → logprob: -14.500123023986816

Token 381: 'otions' (ID: 54764)
  Prédit: 'otions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'otions' → logprob: -6.630610641877865e-06
    2. 'ot' → logprob: -12.625006675720215
    3. 'otion' → logprob: -13.000006675720215
    4. 'o' → logprob: -14.375006675720215
    5. 'pot' → logprob: -16.1250057220459
    6. '
' → logprob: -16.1250057220459
    7. 't' → logprob: -16.7500057220459
    8. 'utions' → logprob: -17.5000057220459
    9. 'options' → logprob: -17.6250057220459
    10. 'oti' → logprob: -17.6250057220459

Token 382: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740970730781555
    2. ' =' → logprob: -0.9740970730781555
    3. '.append' → logprob: -11.47409725189209
    4. '.extend' → logprob: -12.72409725189209
    5. '.' → logprob: -12.97409725189209
    6. ',' → logprob: -13.47409725189209
    7. '=[]' → logprob: -13.59909725189209
    8. ':' → logprob: -14.72409725189209
    9. '[' → logprob: -15.09909725189209
    10. ')' → logprob: -15.22409725189209

Token 383: ' pot' (ID: 3208)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.004252200480550528
    2. 'list' → logprob: -5.7542524337768555
    3. ' pot' → logprob: -7.0042524337768555
    4. 'p' → logprob: -9.754252433776855
    5. '[]' → logprob: -10.004252433776855
    6. '{' → logprob: -11.254252433776855
    7. ' list' → logprob: -11.504252433776855
    8. '[' → logprob: -11.629252433776855
    9. '{}' → logprob: -11.629252433776855
    10. '[]
' → logprob: -12.004252433776855

Token 384: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -5.2166411478538066e-05
    2. 'otions' → logprob: -10.375052452087402
    3. '[]' → logprob: -11.625052452087402
    4. 't' → logprob: -12.375052452087402
    5. '[' → logprob: -12.500052452087402
    6. '[]
' → logprob: -14.375052452087402
    7. 'iones' → logprob: -14.500052452087402
    8. 'io' → logprob: -14.750052452087402
    9. 'IONS' → logprob: -14.875052452087402
    10. 'ion' → logprob: -15.000052452087402

Token 385: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 386: ' #' (ID: 1069)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.46330246329307556
    2. '.copy' → logprob: -1.088302493095398
    3. '<|end|>' → logprob: -3.8383023738861084
    4. '[:' → logprob: -5.2133026123046875
    5. '
' → logprob: -6.3383026123046875
    6. ' ' → logprob: -6.4633026123046875
    7. '#' → logprob: -7.4633026123046875
    8. ' or' → logprob: -7.4633026123046875
    9. '[::-' → logprob: -7.4633026123046875
    10. 'def' → logprob: -7.7133026123046875

Token 387: ' list' (ID: 1562)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.6662787795066833
    2. 'list' → logprob: -0.7912787795066833
    3. '[]' → logprob: -4.291278839111328
    4. '{}' → logprob: -4.916278839111328
    5. ' list' → logprob: -5.416278839111328
    6. '[List' → logprob: -6.166278839111328
    7. '{' → logprob: -6.291278839111328
    8. '[p' → logprob: -6.416278839111328
    9. 'dict' → logprob: -7.166278839111328
    10. 'p' → logprob: -7.916278839111328

Token 388: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1698337197303772
    2. '[P' → logprob: -2.0448336601257324
    3. ' of' → logprob: -4.044833660125732
    4. '[int' → logprob: -4.919833660125732
    5. 'of' → logprob: -6.544833660125732
    6. '[
' → logprob: -9.16983413696289
    7. '<|end|>' → logprob: -9.29483413696289
    8. '<P' → logprob: -9.79483413696289
    9. ')' → logprob: -10.04483413696289
    10. '```' → logprob: -10.16983413696289

Token 389: ' Potion' (ID: 186654)
  Prédit: 'Potion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Potion' → logprob: -0.0008110555354505777
    2. ' Potion' → logprob: -7.6258111000061035
    3. 'int' → logprob: -8.125810623168945
    4. 'Pot' → logprob: -10.625810623168945
    5. ' int' → logprob: -13.750810623168945
    6. 'P' → logprob: -13.875810623168945
    7. '
' → logprob: -14.750810623168945
    8. '

' → logprob: -15.625810623168945
    9. '[int' → logprob: -16.500810623168945
    10. 'ints' → logprob: -17.375810623168945

Token 390: ' objects' (ID: 11736)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 391: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1744895875453949
    2. '
' → logprob: -2.7994894981384277
    3. '       ' → logprob: -3.0494894981384277
    4. '<|end|>' → logprob: -3.0494894981384277
    5. ',' → logprob: -6.424489498138428
    6. '    
' → logprob: -7.049489498138428
    7. 'def' → logprob: -7.174489498138428
    8. '<|end|>' → logprob: -8.424489974975586
    9. ' def' → logprob: -8.799489974975586
    10. '  
' → logprob: -8.799489974975586

Token 392: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 393: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22126366198062897
    2. '<|end|>' → logprob: -1.8462636470794678
    3. '
' → logprob: -3.5962636470794678
    4. 'def' (adapté à ' def') → logprob: -4.721263885498047
    5. ' def' → logprob: -5.721263885498047
    6. '    
' → logprob: -8.096263885498047
    7. '       ' → logprob: -8.346263885498047
    8. '<|end|>' → logprob: -8.596263885498047
    9. '	def' → logprob: -9.846263885498047
    10. '```' → logprob: -9.971263885498047

Token 394: ' use' (ID: 1199)
  Prédit: ' use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' use' → logprob: -0.606338620185852
    2. 'use' → logprob: -1.106338620185852
    3. ' move' → logprob: -3.2313385009765625
    4. 'heal' → logprob: -3.4813385009765625
    5. 'move' → logprob: -3.9813385009765625
    6. ' heal' → logprob: -3.9813385009765625
    7. ' take' → logprob: -5.4813385009765625
    8. 'take' → logprob: -5.7313385009765625
    9. 'is' → logprob: -5.8563385009765625
    10. ' is' → logprob: -6.2313385009765625

Token 395: '_p' (ID: 1359)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.38735517859458923
    2. '_p' → logprob: -1.1373552083969116
    3. '(' → logprob: -8.387354850769043
    4. '()' → logprob: -8.512354850769043
    5. '_(' → logprob: -12.137354850769043
    6. '_space' → logprob: -12.137354850769043
    7. '_token' → logprob: -12.387354850769043
    8. ' _' → logprob: -12.637354850769043
    9. '_pen' → logprob: -12.887354850769043
    10. '(p' → logprob: -13.012354850769043

Token 396: 'otions' (ID: 54764)
  Prédit: 'otion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'otion' → logprob: -0.0036420035175979137
    2. 'otions' → logprob: -5.6286420822143555
    3. 'ot' → logprob: -10.628642082214355
    4. 'oti' → logprob: -12.003642082214355
    5. 'o' → logprob: -12.128642082214355
    6. 'OTION' → logprob: -13.378642082214355
    7. 'osition' → logprob: -13.753642082214355
    8. 'ortion' → logprob: -13.878642082214355
    9. 'otential' → logprob: -14.878642082214355
    10. 'tion' → logprob: -15.253642082214355

Token 397: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.805981972021982e-05
    2. ' (' → logprob: -9.62509822845459
    3. '(' → logprob: -10.37509822845459
    4. ' ' → logprob: -15.37509822845459
    5. 'self' → logprob: -15.50009822845459
    6. '   ' → logprob: -16.125097274780273
    7. '()' → logprob: -16.125097274780273
    8. ' self' → logprob: -16.375097274780273
    9. '	self' → logprob: -17.500097274780273
    10. '(s' → logprob: -17.750097274780273

Token 398: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.37366965413093567
    2. '):
' → logprob: -1.7486696243286133
    3. '(self' → logprob: -2.6236696243286133
    4. ',' → logprob: -3.3736696243286133
    5. 'self' → logprob: -3.7486696243286133
    6. ' ):' → logprob: -5.748669624328613
    7. ')' → logprob: -6.373669624328613
    8. ' ):
' → logprob: -7.373669624328613
    9. ' self' → logprob: -7.748669624328613
    10. '):
' → logprob: -7.873669624328613

Token 399: ' needed' (ID: 6118)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.611693799495697
    2. ')' → logprob: -2.111693859100342
    3. ' amount' → logprob: -2.236693859100342
    4. 'self' → logprob: -2.736693859100342
    5. 'heal' → logprob: -2.861693859100342
    6. '):' → logprob: -3.111693859100342
    7. 'he' → logprob: -3.861693859100342
    8. ' self' → logprob: -4.736693859100342
    9. 'damage' → logprob: -5.236693859100342
    10. ' heal' → logprob: -5.361693859100342

Token 400: '_hp' (ID: 117795)
  Prédit: '_hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hp' → logprob: -0.15795497596263885
    2. '):' → logprob: -2.5329549312591553
    3. '_he' → logprob: -3.5329549312591553
    4. ':' → logprob: -3.9079549312591553
    5. '):
' → logprob: -4.782955169677734
    6. '_amount' → logprob: -5.032955169677734
    7. '_health' → logprob: -7.157955169677734
    8. '=' → logprob: -7.782955169677734
    9. '_' → logprob: -8.407955169677734
    10. ' ):' → logprob: -8.532955169677734

Token 401: '_loss' (ID: 23902)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.33829841017723083
    2. '):
' → logprob: -1.3382984399795532
    3. ':' → logprob: -3.7132983207702637
    4. '):
' → logprob: -8.838298797607422
    5. '):

' → logprob: -9.963298797607422
    6. ' ):' → logprob: -9.963298797607422
    7. ':int' → logprob: -10.588298797607422
    8. ' ):
' → logprob: -11.088298797607422
    9. ')' → logprob: -11.463298797607422
    10. '_' → logprob: -11.588298797607422

Token 402: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4325139820575714
    2. '):
' → logprob: -1.182513952255249
    3. ':' → logprob: -3.182513952255249
    4. ' ):' → logprob: -6.932514190673828
    5. '):
' → logprob: -7.182514190673828
    6. ' ):
' → logprob: -7.682514190673828
    7. '):

' → logprob: -7.932514190673828
    8. ')' → logprob: -8.557514190673828
    9. ' :' → logprob: -9.432514190673828
    10. '=' → logprob: -9.682514190673828

Token 403: ' int' (ID: 677)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28949686884880066
    2. ' ):' → logprob: -1.914496898651123
    3. '):
' → logprob: -2.414496898651123
    4. ' ):
' → logprob: -4.539496898651123
    5. ':' → logprob: -6.664496898651123
    6. ')' → logprob: -7.039496898651123
    7. ' ' → logprob: -7.914496898651123
    8. ' :' → logprob: -8.039496421813965
    9. ':int' → logprob: -8.039496421813965
    10. ' )' → logprob: -8.289496421813965

Token 404: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.049701858311891556
    2. '):
' → logprob: -3.0497019290924072
    3. '):
' → logprob: -7.799701690673828
    4. ')' → logprob: -7.924701690673828
    5. ' ):' → logprob: -8.674701690673828
    6. ',' → logprob: -8.924701690673828
    7. ' ):
' → logprob: -10.924701690673828
    8. '):

' → logprob: -11.674701690673828
    9. '   ' → logprob: -12.299701690673828
    10. ')->' → logprob: -13.299701690673828

Token 405: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13148321211338043
    2. ' current' → logprob: -3.631483316421509
    3. ' hp' → logprob: -3.756483316421509
    4. ' for' → logprob: -4.25648307800293
    5. ' total' → logprob: -4.50648307800293
    6. ' amount' → logprob: -4.88148307800293
    7. 'hp' → logprob: -5.00648307800293
    8. ' needed' → logprob: -5.00648307800293
    9. '   ' → logprob: -5.13148307800293
    10. 'needed' → logprob: -5.88148307800293

Token 406: ' #' (ID: 1069)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -1.3772255182266235
    2. ' healed' → logprob: -1.3772255182266235
    3. ' restored' → logprob: -2.252225399017334
    4. 'rest' → logprob: -2.627225399017334
    5. '       ' → logprob: -3.002225399017334
    6. ' current' → logprob: -3.252225399017334
    7. ' recovered' → logprob: -3.377225399017334
    8. ' hp' → logprob: -3.502225399017334
    9. ' used' → logprob: -3.752225399017334
    10. '   ' → logprob: -3.877225399017334

Token 407: ' Before' (ID: 16935)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.362539529800415
    2. 'he' → logprob: -1.862539529800415
    3. ' healed' → logprob: -2.112539529800415
    4. ' used' → logprob: -2.237539529800415
    5. 'self' → logprob: -2.737539529800415
    6. ' pot' → logprob: -3.112539529800415
    7. 'used' → logprob: -3.112539529800415
    8. ' restored' → logprob: -3.362539529800415
    9. ' hp' → logprob: -3.612539529800415
    10. 'rest' → logprob: -3.862539529800415

Token 408: ' stepping' (ID: 63083)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.0361237525939941
    2. '       ' → logprob: -2.536123752593994
    3. 'self' → logprob: -2.536123752593994
    4. ' amount' → logprob: -2.536123752593994
    5. ' to' → logprob: -2.661123752593994
    6. ' used' → logprob: -2.786123752593994
    7. ' pot' → logprob: -3.286123752593994
    8. ' needed' → logprob: -3.286123752593994
    9. '   ' → logprob: -3.411123752593994
    10. ' for' → logprob: -3.786123752593994

Token 409: ' into' (ID: 1511)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8373649716377258
    2. '       ' → logprob: -0.8373649716377258
    3. ' ,' → logprob: -3.837364912033081
    4. ' =' → logprob: -4.08736515045166
    5. ':' → logprob: -4.21236515045166
    6. '_needed' → logprob: -4.21236515045166
    7. ' for' → logprob: -4.33736515045166
    8. ' to' → logprob: -4.33736515045166
    9. ' if' → logprob: -5.21236515045166
    10. ' needed' → logprob: -5.33736515045166

Token 410: ' a' (ID: 261)
  Prédit: 'trap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trap' → logprob: -1.3437771797180176
    2. 'damage' → logprob: -1.5937771797180176
    3. 'a' → logprob: -2.0937771797180176
    4. ' damage' → logprob: -2.2187771797180176
    5. 'def' → logprob: -2.7187771797180176
    6. ' a' → logprob: -2.8437771797180176
    7. 'the' → logprob: -3.0937771797180176
    8. ' trap' → logprob: -3.2187771797180176
    9. ' the' → logprob: -3.4687771797180176
    10. ' traps' → logprob: -3.8437771797180176

Token 411: ' trap' (ID: 34270)
  Prédit: 'trap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trap' → logprob: -0.19667701423168182
    2. ' trap' → logprob: -2.5716769695281982
    3. 'cell' → logprob: -3.3216769695281982
    4. ' cell' → logprob: -3.8216769695281982
    5. 'danger' → logprob: -4.196677207946777
    6. 'step' → logprob: -5.446677207946777
    7. 'while' → logprob: -5.696677207946777
    8. 'new' → logprob: -5.821677207946777
    9. ' new' → logprob: -6.071677207946777
    10. 'position' → logprob: -6.071677207946777

Token 412: ' cell' (ID: 4206)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05602281540632248
    2. ':' → logprob: -3.556022882461548
    3. '       ' → logprob: -3.806022882461548
    4. ' ,' → logprob: -6.181022644042969
    5. '<|end|>' → logprob: -7.306022644042969
    6. ' for' → logprob: -8.431022644042969
    7. '<|end|>' → logprob: -8.556022644042969
    8. '   ' → logprob: -9.556022644042969
    9. ',
' → logprob: -9.556022644042969
    10. ' :' → logprob: -10.056022644042969

Token 413: ' with' (ID: 483)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03282133489847183
    2. ':' → logprob: -4.532821178436279
    3. '       ' → logprob: -4.657821178436279
    4. ' ,' → logprob: -4.657821178436279
    5. ',
' → logprob: -7.532821178436279
    6. ' for' → logprob: -7.657821178436279
    7. ' while' → logprob: -8.032821655273438
    8. '
' → logprob: -8.282821655273438
    9. ' to' → logprob: -9.032821655273438
    10. 'def' → logprob: -9.157821655273438

Token 414: ' damage' (ID: 10364)
  Prédit: 'damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'damage' → logprob: -0.040307506918907166
    2. 'hp' → logprob: -4.040307521820068
    3. ' damage' → logprob: -4.165307521820068
    4. 'potential' → logprob: -6.040307521820068
    5. 'a' → logprob: -7.415307521820068
    6. 'trap' → logprob: -7.540307521820068
    7. 'needed' → logprob: -7.790307521820068
    8. 'danger' → logprob: -8.04030704498291
    9. 'expected' → logprob: -8.16530704498291
    10. ' hp' → logprob: -8.29030704498291

Token 415: ' needed' (ID: 6118)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.040296513587236404
    2. ':' → logprob: -4.29029655456543
    3. '>' → logprob: -5.04029655456543
    4. ' ,' → logprob: -5.41529655456543
    5. '   ' → logprob: -6.29029655456543
    6. '_needed' → logprob: -6.29029655456543
    7. ' >' → logprob: -6.91529655456543
    8. '=' → logprob: -6.91529655456543
    9. '>=' → logprob: -7.04029655456543
    10. ' if' → logprob: -7.16529655456543

Token 416: '_hp' (ID: 117795)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6160224080085754
    2. '_to' → logprob: -1.8660223484039307
    3. ',' → logprob: -2.3660223484039307
    4. '_hp' → logprob: -2.4910223484039307
    5. '=' → logprob: -2.8660223484039307
    6. ':' → logprob: -3.7410223484039307
    7. '_points' → logprob: -4.49102258682251
    8. ' to' → logprob: -4.61602258682251
    9. '   ' → logprob: -5.11602258682251
    10. 'ed' → logprob: -5.99102258682251

Token 417: '_loss' (ID: 23902)
  Prédit: '_loss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_loss' → logprob: -9.114600834436715e-05
    2. 'loss' → logprob: -9.500091552734375
    3. '_damage' → logprob: -12.250091552734375
    4. '_' → logprob: -13.125091552734375
    5. '
' → logprob: -13.375091552734375
    6. ' loss' → logprob: -13.500091552734375
    7. 'Loss' → logprob: -13.625091552734375
    8. '   ' → logprob: -13.875091552734375
    9. '_losses' → logprob: -14.375091552734375
    10. '=' → logprob: -14.375091552734375

Token 418: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009194119833409786
    2. ':' → logprob: -5.3841938972473145
    3. ' ,' → logprob: -5.5091938972473145
    4. '       ' → logprob: -8.259194374084473
    5. ',
' → logprob: -10.634194374084473
    6. '_needed' → logprob: -10.634194374084473
    7. ' for' → logprob: -10.759194374084473
    8. 'def' → logprob: -10.884194374084473
    9. ' to' → logprob: -11.009194374084473
    10. '=' → logprob: -11.259194374084473

Token 419: ' try' (ID: 2075)
  Prédit: ' pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pot' → logprob: -1.7053993940353394
    2. ' while' → logprob: -1.8303993940353394
    3. 'pot' → logprob: -2.080399513244629
    4. 'he' → logprob: -2.705399513244629
    5. ' healed' → logprob: -2.705399513244629
    6. ' hp' → logprob: -2.830399513244629
    7. ' used' → logprob: -2.830399513244629
    8. ' restored' → logprob: -2.955399513244629
    9. '   ' → logprob: -3.330399513244629
    10. 'used' → logprob: -3.580399513244629

Token 420: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4373204708099365
    2. ' to' → logprob: -1.3123204708099365
    3. 'to' → logprob: -2.5623204708099365
    4. ':
' → logprob: -5.437320709228516
    5. '   ' → logprob: -6.312320709228516
    6. '    ' → logprob: -6.937320709228516
    7. 'ing' → logprob: -7.812320709228516
    8. '       ' → logprob: -8.812320709228516
    9. '  ' → logprob: -10.937320709228516
    10. 'all' → logprob: -10.937320709228516

Token 421: ' heal' (ID: 40582)
  Prédit: 'restore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'restore' → logprob: -0.22998571395874023
    2. ' restore' → logprob: -2.2299857139587402
    3. 'recover' → logprob: -3.6049857139587402
    4. 'heal' → logprob: -3.6049857139587402
    5. 'while' → logprob: -4.35498571395874
    6. ' while' → logprob: -4.72998571395874
    7. ' recover' → logprob: -5.72998571395874
    8. 'he' → logprob: -5.97998571395874
    9. ' heal' → logprob: -6.10498571395874
    10. 'for' → logprob: -6.22998571395874

Token 422: ' optim' (ID: 9367)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.888774037361145
    2. ' for' → logprob: -1.888774037361145
    3. ' to' → logprob: -2.2637739181518555
    4. ' while' → logprob: -2.5137739181518555
    5. '_needed' → logprob: -3.1387739181518555
    6. ' amount' → logprob: -3.3887739181518555
    7. 'while' → logprob: -3.8887739181518555
    8. ' needed' → logprob: -3.8887739181518555
    9. 'amount' → logprob: -4.1387739181518555
    10. 'needed' → logprob: -4.1387739181518555

Token 423: 'ally' (ID: 2146)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.9673599004745483
    2. 'ally' → logprob: -1.0923599004745483
    3. 'ize' → logprob: -1.3423599004745483
    4. 'um' → logprob: -4.092360019683838
    5. 'ized' → logprob: -6.217360019683838
    6. '```' → logprob: -6.842360019683838
    7. '

' → logprob: -6.967360019683838
    8. '   ' → logprob: -7.342360019683838
    9. '
' → logprob: -7.592360019683838
    10. 'iz' → logprob: -8.71735954284668

Token 424: ' using' (ID: 2360)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031117554754018784
    2. ',' → logprob: -4.5311174392700195
    3. ':' → logprob: -4.9061174392700195
    4. ' to' → logprob: -6.1561174392700195
    5. 'def' → logprob: -6.6561174392700195
    6. '   ' → logprob: -6.7811174392700195
    7. ' if' → logprob: -7.0311174392700195
    8. '(p' → logprob: -7.5311174392700195
    9. '        
' → logprob: -7.6561174392700195
    10. ' for' → logprob: -7.6561174392700195

Token 425: ' pot' (ID: 3208)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.49126192927360535
    2. 'pot' → logprob: -1.7412619590759277
    3. 'p' → logprob: -2.2412619590759277
    4. ' self' → logprob: -3.1162619590759277
    5. ' pot' → logprob: -4.241261959075928
    6. 'the' → logprob: -4.491261959075928
    7. 'sorted' → logprob: -4.491261959075928
    8. ' the' → logprob: -5.241261959075928
    9. 'range' → logprob: -5.741261959075928
    10. '   ' → logprob: -5.741261959075928

Token 426: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -2.9160102712921798e-05
    2. 'ion' → logprob: -10.500029563903809
    3. '```' → logprob: -14.250029563903809
    4. '   ' → logprob: -14.875029563903809
    5. 'IONS' → logprob: -15.625029563903809
    6. 'i' → logprob: -15.750029563903809
    7. '`' → logprob: -17.250028610229492
    8. '

' → logprob: -17.375028610229492
    9. '#' → logprob: -17.375028610229492
    10. 's' → logprob: -17.375028610229492

Token 427: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005623954813927412
    2. ',' → logprob: -6.255623817443848
    3. ':' → logprob: -6.630623817443848
    4. '        ' → logprob: -7.505623817443848
    5. '    ' → logprob: -8.255623817443848
    6. '   ' → logprob: -8.505623817443848
    7. ' to' → logprob: -8.755623817443848
    8. '(' → logprob: -8.880623817443848
    9. 'p' → logprob: -9.005623817443848
    10. '<|end|>' → logprob: -9.505623817443848

Token 428: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001535812160000205
    2. ',' → logprob: -6.751535892486572
    3. '        
' → logprob: -9.126535415649414
    4. ':' → logprob: -9.626535415649414
    5. '<|end|>' → logprob: -9.751535415649414
    6. '        ' → logprob: -10.751535415649414
    7. '   ' → logprob: -10.876535415649414
    8. ')' → logprob: -11.626535415649414
    9. '      ' → logprob: -11.626535415649414
    10. '    ' → logprob: -11.626535415649414

Token 429: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2602484226226807
    2. 'self' → logprob: -1.6352484226226807
    3. 'used' → logprob: -1.6352484226226807
    4. ' self' → logprob: -1.7602484226226807
    5. ' used' → logprob: -2.6352484226226807
    6. 'he' → logprob: -3.1352484226226807
    7. 'pot' → logprob: -4.510248184204102
    8. ' pot' → logprob: -5.010248184204102
    9. 'def' → logprob: -5.885248184204102
    10. 'remaining' → logprob: -5.885248184204102

Token 430: ' Since' (ID: 12265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7040790915489197
    2. ' used' → logprob: -1.9540791511535645
    3. ' healed' → logprob: -2.2040791511535645
    4. ' self' → logprob: -2.9540791511535645
    5. ' total' → logprob: -2.9540791511535645
    6. ' current' → logprob: -3.4540791511535645
    7. ' pot' → logprob: -4.4540791511535645
    8. ' healing' → logprob: -4.4540791511535645
    9. ' remaining' → logprob: -4.5790791511535645
    10. 'he' → logprob: -4.5790791511535645

Token 431: ' agent' (ID: 11793)
  Prédit: 'needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'needed' → logprob: -1.2872674465179443
    2. 'self' → logprob: -1.5372674465179443
    3. ' self' → logprob: -1.7872674465179443
    4. ' the' → logprob: -2.0372674465179443
    5. ' needed' → logprob: -2.2872674465179443
    6. 'the' → logprob: -3.4122674465179443
    7. 'len' → logprob: -3.6622674465179443
    8. ' len' → logprob: -4.412267684936523
    9. ' pot' → logprob: -4.662267684936523
    10. ' we' → logprob: -5.537267684936523

Token 432: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.1185680627822876
    2. ' has' → logprob: -1.7435680627822876
    3. '.p' → logprob: -2.118567943572998
    4. '<|end|>' → logprob: -2.618567943572998
    5. '<|end|>' → logprob: -2.743567943572998
    6. '.' → logprob: -3.243567943572998
    7. ' wants' → logprob: -3.368567943572998
    8. ' should' → logprob: -3.368567943572998
    9. '   ' → logprob: -3.618567943572998
    10. ' may' → logprob: -4.118567943572998

Token 433: ' use' (ID: 1199)
  Prédit: ' use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' use' → logprob: -0.2654227614402771
    2. 'use' → logprob: -1.7654228210449219
    3. ' only' → logprob: -4.015422821044922
    4. 'consume' → logprob: -4.265422821044922
    5. 'choose' → logprob: -4.890422821044922
    6. ' consume' → logprob: -5.015422821044922
    7. ' choose' → logprob: -5.640422821044922
    8. 'only' → logprob: -5.890422821044922
    9. 'heal' → logprob: -6.265422821044922
    10. ' heal' → logprob: -6.640422821044922

Token 434: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.8721734881401062
    2. ' multiple' → logprob: -1.372173547744751
    3. ' pot' → logprob: -1.622173547744751
    4. 'pot' → logprob: -2.747173547744751
    5. 'any' → logprob: -3.497173547744751
    6. 'multiple' → logprob: -3.622173547744751
    7. ' a' → logprob: -5.997173309326172
    8. ' all' → logprob: -6.622173309326172
    9. ' the' → logprob: -6.872173309326172
    10. 'p' → logprob: -7.372173309326172

Token 435: ' combination' (ID: 14083)
  Prédit: ' combination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combination' → logprob: -0.4257553815841675
    2. 'comb' → logprob: -1.8007553815841675
    3. ' subset' → logprob: -2.675755500793457
    4. ' number' → logprob: -2.925755500793457
    5. 'subset' → logprob: -3.550755500793457
    6. 'number' → logprob: -3.800755500793457
    7. ' potion' → logprob: -5.425755500793457
    8. 'p' → logprob: -6.175755500793457
    9. ' pot' → logprob: -8.675755500793457
    10. ' combinations' → logprob: -8.800755500793457

Token 436: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.023009369149804115
    2. 'of' → logprob: -3.8980093002319336
    3. '       ' → logprob: -6.898009300231934
    4. ',' → logprob: -7.273009300231934
    5. '<|end|>' → logprob: -8.648009300231934
    6. ' ' → logprob: -8.773009300231934
    7. '	of' → logprob: -8.773009300231934
    8. '   ' → logprob: -9.523009300231934
    9. '
' → logprob: -9.898009300231934
    10. '<|end|>' → logprob: -10.148009300231934

Token 437: ' pot' (ID: 3208)
  Prédit: ' pot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pot' → logprob: -0.3489465117454529
    2. 'pot' → logprob: -1.2239465713500977
    3. 'p' → logprob: -8.348946571350098
    4. ' the' → logprob: -9.598946571350098
    5. 'self' → logprob: -9.598946571350098
    6. 'the' → logprob: -10.223946571350098
    7. ' available' → logprob: -10.723946571350098
    8. ' self' → logprob: -11.098946571350098
    9. ' potion' → logprob: -11.223946571350098
    10. ' their' → logprob: -11.348946571350098

Token 438: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -3.2378600735682994e-05
    2. 'ion' → logprob: -10.375032424926758
    3. '```' → logprob: -14.875032424926758
    4. 'IONS' → logprob: -15.000032424926758
    5. '#' → logprob: -16.625032424926758
    6. '``' → logprob: -16.625032424926758
    7. '
' → logprob: -16.625032424926758
    8. 'ons' → logprob: -16.750032424926758
    9. 'ioned' → logprob: -17.000032424926758
    10. '

' → logprob: -17.250032424926758

Token 439: ' any' (ID: 1062)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012429358437657356
    2. ' ,' → logprob: -5.262429237365723
    3. '       ' → logprob: -5.512429237365723
    4. ' to' → logprob: -6.262429237365723
    5. '<|end|>' → logprob: -8.262429237365723
    6. ' and' → logprob: -8.387429237365723
    7. '<|end|>' → logprob: -8.762429237365723
    8. ' in' → logprob: -9.137429237365723
    9. ',
' → logprob: -9.262429237365723
    10. ':' → logprob: -9.262429237365723

Token 440: ' number' (ID: 2086)
  Prédit: ' combination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combination' → logprob: -0.21662989258766174
    2. ' number' → logprob: -1.9666298627853394
    3. 'number' → logprob: -3.466629981994629
    4. ' combinations' → logprob: -4.716629981994629
    5. '   ' → logprob: -5.591629981994629
    6. ' subset' → logprob: -6.216629981994629
    7. '<|end|>' → logprob: -6.341629981994629
    8. '<|end|>' → logprob: -6.841629981994629
    9. ' ' → logprob: -7.216629981994629
    10. 'comb' → logprob: -7.216629981994629

Token 441: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.08557775616645813
    2. 'of' → logprob: -2.8355777263641357
    3. '       ' → logprob: -3.8355777263641357
    4. '   ' → logprob: -7.460577964782715
    5. '    ' → logprob: -8.585577964782715
    6. ' ' → logprob: -8.835577964782715
    7. '  ' → logprob: -8.960577964782715
    8. ',' → logprob: -9.210577964782715
    9. '<|end|>' → logprob: -9.210577964782715
    10. '        
' → logprob: -9.585577964782715

Token 442: ' times' (ID: 4238)
  Prédit: ' times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.38691145181655884
    2. 'times' → logprob: -1.136911392211914
    3. 'types' → logprob: -11.886911392211914
    4. 'each' → logprob: -12.011911392211914
    5. '   ' → logprob: -12.136911392211914
    6. ' ' → logprob: -12.511911392211914
    7. ' each' → logprob: -12.636911392211914
    8. 'time' → logprob: -12.636911392211914
    9. 'copies' → logprob: -12.886911392211914
    10. '```' → logprob: -13.761911392211914

Token 443: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6497887372970581
    2. '       ' → logprob: -0.7747887372970581
    3. ':' → logprob: -4.899788856506348
    4. '<|end|>' → logprob: -6.274788856506348
    5. '<|end|>' → logprob: -6.649788856506348
    6. '        
' → logprob: -7.274788856506348
    7. ' ,' → logprob: -7.274788856506348
    8. ' (' → logprob: -7.399788856506348
    9. '
' → logprob: -7.524788856506348
    10. ' to' → logprob: -7.524788856506348

Token 444: 'with' (ID: 6332)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.27305492758750916
    2. ' ),' → logprob: -1.6480549573898315
    3. ')' → logprob: -3.273054838180542
    4. ' )' → logprob: -5.023055076599121
    5. ' to' → logprob: -7.523055076599121
    6. ',' → logprob: -7.648055076599121
    7. '),
' → logprob: -8.523055076599121
    8. ' ),
' → logprob: -8.648055076599121
    9. ' ,' → logprob: -9.773055076599121
    10. '):
' → logprob: -9.898055076599121

Token 445: ' restrictions' (ID: 24679)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.4875801205635071
    2. ' replacement' → logprob: -1.2375800609588623
    3. 'replacement' → logprob: -3.7375800609588623
    4. 'in' → logprob: -3.8625800609588623
    5. ' no' → logprob: -4.112580299377441
    6. ' unlimited' → logprob: -4.487580299377441
    7. ' the' → logprob: -5.612580299377441
    8. ' available' → logprob: -5.737580299377441
    9. ' infinite' → logprob: -6.487580299377441
    10. ' limited' → logprob: -6.487580299377441

Token 446: '?),' (ID: 95807)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.46939817070961
    2. ',' → logprob: -1.4693981409072876
    3. '):' → logprob: -2.469398260116577
    4. ':' → logprob: -4.094398021697998
    5. ')' → logprob: -4.219398021697998
    6. '       ' → logprob: -5.344398021697998
    7. ' to' → logprob: -5.344398021697998
    8. ' ),' → logprob: -5.594398021697998
    9. ' ,' → logprob: -5.719398021697998
    10. ' on' → logprob: -6.094398021697998

Token 447: ' 
' (ID: 793)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 448: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9619590640068054
    2. ' used' → logprob: -1.3369591236114502
    3. ' pass' → logprob: -2.21195912361145
    4. ' for' → logprob: -2.21195912361145
    5. '#' → logprob: -3.21195912361145
    6. ' self' → logprob: -4.211958885192871
    7. 'used' → logprob: -4.711958885192871
    8. 'pass' → logprob: -4.836958885192871
    9. ' remaining' → logprob: -4.961958885192871
    10. 'self' → logprob: -5.336958885192871

Token 449: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.1162077188491821
    2. ' pass' → logprob: -1.6162077188491821
    3. 'pass' → logprob: -2.1162075996398926
    4. ' used' → logprob: -2.3662075996398926
    5. ' for' → logprob: -3.2412075996398926
    6. ' self' → logprob: -3.2412075996398926
    7. ' #' → logprob: -3.2412075996398926
    8. 'used' → logprob: -3.3662075996398926
    9. 'self' → logprob: -3.7412075996398926
    10. '       ' → logprob: -4.241207599639893

Token 450: ' but' (ID: 889)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2099621295928955
    2. 'pass' → logprob: -1.9599621295928955
    3. 'used' → logprob: -2.2099621295928955
    4. 'pot' → logprob: -2.2099621295928955
    5. 'self' → logprob: -2.3349621295928955
    6. ' pass' → logprob: -2.9599621295928955
    7. ' used' → logprob: -3.3349621295928955
    8. ' pot' → logprob: -3.3349621295928955
    9. ' self' → logprob: -3.5849621295928955
    10. 'he' → logprob: -3.7099621295928955

Token 451: ' problem' (ID: 4792)
  Prédit: ' pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pot' → logprob: -0.9270656108856201
    2. ' the' → logprob: -1.5520656108856201
    3. ' only' → logprob: -2.80206561088562
    4. ' we' → logprob: -2.80206561088562
    5. ' each' → logprob: -3.55206561088562
    6. ' can' → logprob: -3.80206561088562
    7. ' in' → logprob: -3.80206561088562
    8. '#' → logprob: -3.80206561088562
    9. ' for' → logprob: -3.92706561088562
    10. ' self' → logprob: -3.92706561088562

Token 452: ' states' (ID: 9407)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6654309034347534
    2. ' constraints' → logprob: -1.4154309034347534
    3. '#' → logprob: -2.165431022644043
    4. ' states' → logprob: -3.665431022644043
    5. ':' → logprob: -4.165431022644043
    6. ' does' → logprob: -4.290431022644043
    7. ' remains' → logprob: -4.540431022644043
    8. 'constraints' → logprob: -4.540431022644043
    9. '<|end|>' → logprob: -4.915431022644043
    10. ' doesn't' → logprob: -5.040431022644043

Token 453: ' only' (ID: 1606)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.533518373966217
    2. ' nothing' → logprob: -1.6585183143615723
    3. 'that' → logprob: -2.4085183143615723
    4. ' pot' → logprob: -3.1585183143615723
    5. ' only' → logprob: -3.6585183143615723
    6. 'pot' → logprob: -4.158518314361572
    7. ' agent' → logprob: -4.408518314361572
    8. ' the' → logprob: -4.658518314361572
    9. 'nothing' → logprob: -5.033518314361572
    10. 'the' → logprob: -5.533518314361572

Token 454: ' "' (ID: 392)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -1.4253513813018799
    2. ' pot' → logprob: -1.8003513813018799
    3. ' the' → logprob: -1.9253513813018799
    4. 'the' → logprob: -2.67535138130188
    5. 'each' → logprob: -2.92535138130188
    6. 'that' → logprob: -3.17535138130188
    7. ' each' → logprob: -3.42535138130188
    8. ' one' → logprob: -3.55035138130188
    9. 'pot' → logprob: -3.55035138130188
    10. ' use' → logprob: -3.55035138130188

Token 455: 'more' (ID: 8229)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -1.073156476020813
    2. 'the' → logprob: -2.0731563568115234
    3. ' the' → logprob: -2.5731563568115234
    4. ' each' → logprob: -2.9481563568115234
    5. ' pot' → logprob: -3.0731563568115234
    6. 'available' → logprob: -3.3231563568115234
    7. 'can' → logprob: -3.3231563568115234
    8. 'pot' → logprob: -3.3231563568115234
    9. ' that' → logprob: -3.5731563568115234
    10. 'use' → logprob: -3.9481563568115234

Token 456: ' than' (ID: 1572)
  Prédit: ' than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' than' → logprob: -0.7592970132827759
    2. '_p' → logprob: -2.0092968940734863
    3. 'p' → logprob: -2.7592968940734863
    4. 'pot' → logprob: -3.0092968940734863
    5. ' pot' → logprob: -3.0092968940734863
    6. '_than' → logprob: -3.5092968940734863
    7. ' =' → logprob: -3.6342968940734863
    8. 'than' → logprob: -3.8842968940734863
    9. '_code' → logprob: -4.509296894073486
    10. '"' → logprob: -4.509296894073486

Token 457: ' one' (ID: 1001)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.3607275485992432
    2. ' ' → logprob: -1.7357275485992432
    3. ' needed' → logprob: -2.110727548599243
    4. '0' → logprob: -2.485727548599243
    5. ' available' → logprob: -2.610727548599243
    6. 'needed' → logprob: -2.735727548599243
    7. 'available' → logprob: -3.235727548599243
    8. ' one' → logprob: -3.235727548599243
    9. 'the' → logprob: -3.485727548599243
    10. ' zero' → logprob: -3.985727548599243

Token 458: ' type' (ID: 1490)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.752906322479248
    2. ' potion' → logprob: -1.002906322479248
    3. ' pot' → logprob: -2.877906322479248
    4. ' at' → logprob: -4.127906322479248
    5. 'p' → logprob: -4.752906322479248
    6. ' of' → logprob: -4.752906322479248
    7. 'can' → logprob: -4.877906322479248
    8. ' time' → logprob: -5.002906322479248
    9. ' line' → logprob: -5.127906322479248
    10. 'pot' → logprob: -5.127906322479248

Token 459: ' at' (ID: 540)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.32468605041503906
    2. '"' → logprob: -2.324686050415039
    3. ' can' → logprob: -2.449686050415039
    4. '<|end|>' → logprob: -3.949686050415039
    5. ',' → logprob: -4.074686050415039
    6. ' is' → logprob: -4.574686050415039
    7. '_of' → logprob: -4.949686050415039
    8. '",' → logprob: -5.324686050415039
    9. ' to' → logprob: -5.699686050415039
    10. ' at' → logprob: -5.949686050415039

Token 460: ' once' (ID: 4730)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0859079658985138
    2. 'most' → logprob: -3.4609079360961914
    3. 'once' → logprob: -3.7109079360961914
    4. ' a' → logprob: -4.085907936096191
    5. 'each' → logprob: -5.835907936096191
    6. 'the' → logprob: -5.960907936096191
    7. ' once' → logprob: -6.710907936096191
    8. 'least' → logprob: -7.335907936096191
    9. 'all' → logprob: -8.210907936096191
    10. 'time' → logprob: -8.210907936096191

Token 461: '",' (ID: 672)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.9847559332847595
    2. ',' → logprob: -1.1097559928894043
    3. '",' → logprob: -2.6097559928894043
    4. ' can' → logprob: -2.7347559928894043
    5. ' is' → logprob: -2.9847559928894043
    6. '.' → logprob: -3.8597559928894043
    7. ',"' → logprob: -3.8597559928894043
    8. ' at' → logprob: -4.484755992889404
    9. '."' → logprob: -4.609755992889404
    10. ' and' → logprob: -4.859755992889404

Token 462: ' no' (ID: 860)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8996008038520813
    2. ' pass' → logprob: -1.5246007442474365
    3. '#' → logprob: -2.2746007442474365
    4. ' for' → logprob: -3.1496007442474365
    5. ' return' → logprob: -3.1496007442474365
    6. 'return' → logprob: -3.1496007442474365
    7. 'pass' → logprob: -3.3996007442474365
    8. ' used' → logprob: -3.5246007442474365
    9. 'self' → logprob: -3.8996007442474365
    10. ' self' → logprob: -4.274600982666016

Token 463: ' limit' (ID: 5967)
  Prédit: ' more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' more' → logprob: -2.084365129470825
    2. 'p' → logprob: -2.209365129470825
    3. 'pot' → logprob: -2.334365129470825
    4. ' return' → logprob: -2.709365129470825
    5. ' limit' → logprob: -2.834365129470825
    6. 'self' → logprob: -2.834365129470825
    7. 'def' → logprob: -2.959365129470825
    8. 't' → logprob: -3.084365129470825
    9. ',' → logprob: -3.084365129470825
    10. ' pot' → logprob: -3.084365129470825

Token 464: ' on' (ID: 402)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5007870197296143
    2. '       ' → logprob: -1.6257870197296143
    3. ':' → logprob: -2.1257870197296143
    4. '.' → logprob: -4.625786781311035
    5. '
' → logprob: -4.625786781311035
    6. '<|end|>' → logprob: -4.625786781311035
    7. ' if' → logprob: -4.875786781311035
    8. ' to' → logprob: -5.000786781311035
    9. ' and' → logprob: -5.375786781311035
    10. '   ' → logprob: -5.625786781311035

Token 465: ' count' (ID: 3605)
  Prédit: ' pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pot' → logprob: -1.5109668970108032
    2. ' number' → logprob: -1.7609668970108032
    3. ' usage' → logprob: -1.7609668970108032
    4. ' quantity' → logprob: -2.7609667778015137
    5. ' the' → logprob: -2.8859667778015137
    6. 'pot' → logprob: -3.2609667778015137
    7. ' quantities' → logprob: -3.2609667778015137
    8. 'the' → logprob: -3.3859667778015137
    9. 'quantity' → logprob: -3.3859667778015137
    10. 'usage' → logprob: -3.6359667778015137

Token 466: ' of' (ID: 328)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34819602966308594
    2. ',' → logprob: -1.848196029663086
    3. '       ' → logprob: -2.973196029663086
    4. '.' → logprob: -3.723196029663086
    5. '):' → logprob: -3.973196029663086
    6. '<|end|>' → logprob: -4.848196029663086
    7. '
' → logprob: -5.098196029663086
    8. ' if' → logprob: -5.348196029663086
    9. '<|end|>' → logprob: -5.973196029663086
    10. 's' → logprob: -6.223196029663086

Token 467: ' pot' (ID: 3208)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.6536160111427307
    2. 'pot' → logprob: -1.403615951538086
    3. ' pot' → logprob: -1.903615951538086
    4. ' each' → logprob: -2.903615951538086
    5. ' usage' → logprob: -4.903615951538086
    6. 'usage' → logprob: -4.903615951538086
    7. 'uses' → logprob: -5.778615951538086
    8. 'p' → logprob: -5.903615951538086
    9. ' potion' → logprob: -6.278615951538086
    10. ' uses' → logprob: -6.403615951538086

Token 468: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.0009188431431539357
    2. 'ion' → logprob: -7.000918865203857
    3. '   ' → logprob: -13.1259183883667
    4. '```' → logprob: -13.1259183883667
    5. '       ' → logprob: -14.6259183883667
    6. 'ons' → logprob: -14.6259183883667
    7. 's' → logprob: -14.8759183883667
    8. 'i' → logprob: -15.0009183883667
    9. 'IONS' → logprob: -15.1259183883667
    10. '
' → logprob: -15.1259183883667

Token 469: ' use' (ID: 1199)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6352340579032898
    2. '       ' → logprob: -1.8852341175079346
    3. ',' → logprob: -2.1352341175079346
    4. '):' → logprob: -3.0102341175079346
    5. '.' → logprob: -3.5102341175079346
    6. '):
' → logprob: -3.8852341175079346
    7. ' =' → logprob: -4.2602338790893555
    8. ' to' → logprob: -4.2602338790893555
    9. ' if' → logprob: -4.5102338790893555
    10. ' for' → logprob: -5.0102338790893555

Token 470: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.145253524184227
    2. ',' → logprob: -2.8952534198760986
    3. ':' → logprob: -3.2702534198760986
    4. ' to' → logprob: -5.270253658294678
    5. '<|end|>' → logprob: -5.270253658294678
    6. ' =' → logprob: -5.395253658294678
    7. '.' → logprob: -5.520253658294678
    8. '):' → logprob: -5.895253658294678
    9. '   ' → logprob: -6.270253658294678
    10. '):
' → logprob: -6.270253658294678

Token 471: ' specified' (ID: 10185)
  Prédit: ' allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' allowed' → logprob: -0.7393659353256226
    2. ' False' → logprob: -2.239366054534912
    3. ' specified' → logprob: -2.239366054534912
    4. ' True' → logprob: -3.114366054534912
    5. ' not' → logprob: -3.364366054534912
    6. ' None' → logprob: -3.364366054534912
    7. ' given' → logprob: -3.614366054534912
    8. 'False' → logprob: -3.739366054534912
    9. ' mentioned' → logprob: -3.864366054534912
    10. ' implied' → logprob: -3.864366054534912

Token 472: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6304273009300232
    2. ':' → logprob: -1.005427360534668
    3. ',' → logprob: -2.880427360534668
    4. '.' → logprob: -4.255427360534668
    5. '<|end|>' → logprob: -4.255427360534668
    6. '   ' → logprob: -5.630427360534668
    7. '<|end|>' → logprob: -5.880427360534668
    8. '
' → logprob: -6.005427360534668
    9. ':
' → logprob: -7.130427360534668
    10. '        
' → logprob: -7.130427360534668

Token 473: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08544938266277313
    2. 'used' → logprob: -4.21044921875
    3. ' used' → logprob: -4.21044921875
    4. 'he' → logprob: -4.46044921875
    5. 'pass' → logprob: -4.71044921875
    6. ' pass' → logprob: -4.83544921875
    7. 'total' → logprob: -5.71044921875
    8. 'needed' → logprob: -5.83544921875
    9. 'amount' → logprob: -6.33544921875
    10. ' to' → logprob: -6.58544921875

Token 474: ' #' (ID: 1069)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -1.0173333883285522
    2. 'used' → logprob: -1.8923333883285522
    3. '       ' → logprob: -2.267333507537842
    4. 'self' → logprob: -2.392333507537842
    5. 'pot' → logprob: -2.892333507537842
    6. '#' (adapté à ' #') → logprob: -3.142333507537842
    7. 'pass' → logprob: -3.517333507537842
    8. ' pot' → logprob: -3.892333507537842
    9. ' self' → logprob: -4.142333507537842
    10. ' used' → logprob: -4.142333507537842

Token 475: ' So' (ID: 2632)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.5216426253318787
    2. 'used' → logprob: -2.1466426849365234
    3. 'self' → logprob: -2.5216426849365234
    4. '#' → logprob: -3.3966426849365234
    5. 'heal' → logprob: -3.3966426849365234
    6. 'pot' → logprob: -3.7716426849365234
    7. 'def' → logprob: -4.021642684936523
    8. 'pass' → logprob: -4.021642684936523
    9. '   ' → logprob: -4.396642684936523
    10. ' healed' → logprob: -4.521642684936523

Token 476: ' we' (ID: 581)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -1.3955974578857422
    2. 'pass' → logprob: -1.5205974578857422
    3. '#' → logprob: -2.145597457885742
    4. 'used' → logprob: -2.395597457885742
    5. ' used' → logprob: -3.020597457885742
    6. 'for' → logprob: -3.520597457885742
    7. '       ' → logprob: -3.520597457885742
    8. '   ' → logprob: -3.645597457885742
    9. 'self' → logprob: -3.645597457885742
    10. 'return' → logprob: -3.645597457885742

Token 477: ' can' (ID: 665)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -1.0701900720596313
    2. ' can' → logprob: -1.1951900720596313
    3. ' should' → logprob: -2.070189952850342
    4. 'need' → logprob: -2.320189952850342
    5. 'def' → logprob: -3.570189952850342
    6. 'should' → logprob: -3.695189952850342
    7. ' assume' → logprob: -3.820189952850342
    8. 'can' → logprob: -3.945189952850342
    9. ' will' → logprob: -4.695189952850342
    10. 'ass' → logprob: -5.820189952850342

Token 478: ' use' (ID: 1199)
  Prédit: 'ass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ass' → logprob: -0.6158457398414612
    2. 'consider' → logprob: -2.4908456802368164
    3. 'try' → logprob: -2.6158456802368164
    4. 'use' → logprob: -2.9908456802368164
    5. ' assume' → logprob: -3.1158456802368164
    6. 'implement' → logprob: -3.2408456802368164
    7. ' use' → logprob: -3.4908456802368164
    8. 'simulate' → logprob: -3.4908456802368164
    9. ' try' → logprob: -3.9908456802368164
    10. ' implement' → logprob: -4.240845680236816

Token 479: ' each' (ID: 2454)
  Prédit: ' pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pot' → logprob: -0.7352878451347351
    2. 'pot' → logprob: -1.3602879047393799
    3. ' any' → logprob: -2.36028790473938
    4. 'any' → logprob: -2.98528790473938
    5. ' a' → logprob: -3.86028790473938
    6. 'a' → logprob: -3.98528790473938
    7. 'all' → logprob: -4.110287666320801
    8. 'from' → logprob: -4.610287666320801
    9. 'multiple' → logprob: -4.735287666320801
    10. ' multiple' → logprob: -4.985287666320801

Token 480: ' potion' (ID: 152801)
  Prédit: ' potion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' potion' → logprob: -0.03030274249613285
    2. '_p' → logprob: -4.15530252456665
    3. 'p' → logprob: -5.03030252456665
    4. ' pot' → logprob: -5.53030252456665
    5. 'pot' → logprob: -6.53030252456665
    6. 'Potion' → logprob: -7.28030252456665
    7. ' p' → logprob: -7.90530252456665
    8. ' for' → logprob: -8.155303001403809
    9. '   ' → logprob: -8.780303001403809
    10. 'for' → logprob: -8.905303001403809

Token 481: ' at' (ID: 540)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7234366536140442
    2. '[]' → logprob: -1.4734365940093994
    3. ' in' → logprob: -2.3484365940093994
    4. ' at' → logprob: -3.2234365940093994
    5. ' only' → logprob: -3.3484365940093994
    6. '_types' → logprob: -4.2234368324279785
    7. ' multiple' → logprob: -4.5984368324279785
    8. ' once' → logprob: -4.7234368324279785
    9. ' to' → logprob: -4.9734368324279785
    10. '.' → logprob: -5.0984368324279785

Token 482: ' most' (ID: 1645)
  Prédit: 'most'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.0013329789508134127
    2. ' most' → logprob: -6.626332759857178
    3. '

' → logprob: -13.126333236694336
    4. 'least' → logprob: -13.251333236694336
    5. 'max' → logprob: -14.001333236694336
    6. 'Most' → logprob: -14.001333236694336
    7. '   ' → logprob: -14.251333236694336
    8. '```' → logprob: -15.376333236694336
    9. '
' → logprob: -15.751333236694336
    10. '-most' → logprob: -15.751333236694336

Token 483: ' once' (ID: 4730)
  Prédit: ' once'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' once' → logprob: -0.04863903298974037
    2. 'once' → logprob: -3.0486390590667725
    3. ' ' → logprob: -10.673639297485352
    4. '1' → logprob: -11.298639297485352
    5. 'len' → logprob: -11.673639297485352
    6. ' one' → logprob: -12.423639297485352
    7. ' len' → logprob: -13.798639297485352
    8. '_once' → logprob: -13.923639297485352
    9. 'one' → logprob: -14.048639297485352
    10. ' as' → logprob: -14.548639297485352

Token 484: ' per' (ID: 777)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19943806529045105
    2. ',' → logprob: -2.4494380950927734
    3. '<|end|>' → logprob: -3.1994380950927734
    4. ':' → logprob: -3.4494380950927734
    5. '.' → logprob: -4.949438095092773
    6. '
' → logprob: -5.824438095092773
    7. '<|end|>' → logprob: -5.824438095092773
    8. ' and' → logprob: -6.699438095092773
    9. '        
' → logprob: -6.949438095092773
    10. ' if' → logprob: -7.074438095092773

Token 485: ' cell' (ID: 4206)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.30975255370140076
    2. 'move' → logprob: -2.0597524642944336
    3. 'use' → logprob: -3.0597524642944336
    4. ' step' → logprob: -3.1847524642944336
    5. ' move' → logprob: -4.059752464294434
    6. 'trap' → logprob: -4.434752464294434
    7. 'def' → logprob: -5.684752464294434
    8. 'call' → logprob: -5.809752464294434
    9. 'turn' → logprob: -5.934752464294434
    10. 'movement' → logprob: -6.434752464294434

Token 486: '?' (ID: 30)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03553299978375435
    2. ',' → logprob: -4.0355329513549805
    3. '
' → logprob: -4.9105329513549805
    4. '        
' → logprob: -5.6605329513549805
    5. ':' → logprob: -6.2855329513549805
    6. '<|end|>' → logprob: -6.4105329513549805
    7. '.' → logprob: -7.9105329513549805
    8. '   ' → logprob: -8.03553295135498
    9. '<|end|>' → logprob: -8.28553295135498
    10. ' to' → logprob: -8.41053295135498

Token 487: ' Problem' (ID: 26113)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009061932563781738
    2. '#' → logprob: -6.759061813354492
    3. ':' → logprob: -6.759061813354492
    4. ',' → logprob: -6.884061813354492
    5. ' pass' → logprob: -7.009061813354492
    6. '        
' → logprob: -7.259061813354492
    7. '<|end|>' → logprob: -7.259061813354492
    8. '   ' → logprob: -8.134061813354492
    9. ')' → logprob: -8.134061813354492
    10. ' if' → logprob: -8.509061813354492

Token 488: ' does' (ID: 2226)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026358237490057945
    2. '<|end|>' → logprob: -4.526358127593994
    3. '):' → logprob: -5.151358127593994
    4. ' is' → logprob: -6.276358127593994
    5. ',' → logprob: -6.401358127593994
    6. '.' → logprob: -6.526358127593994
    7. '<|end|>' → logprob: -6.526358127593994
    8. ' can' → logprob: -8.151358604431152
    9. '   ' → logprob: -8.151358604431152
    10. '#' → logprob: -8.651358604431152

Token 489: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.14589627087116241
    2. 'not' → logprob: -2.0208961963653564
    3. 'n't' → logprob: -5.7708964347839355
    4. '_not' → logprob: -9.395895957946777
    5. '<|end|>' → logprob: -12.145895957946777
    6. '	not' → logprob: -12.395895957946777
    7. 'n' → logprob: -13.270895957946777
    8. 'nt' → logprob: -13.770895957946777
    9. '   ' → logprob: -14.770895957946777
    10. '#' → logprob: -14.770895957946777

Token 490: ' specify' (ID: 27018)
  Prédit: ' specify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' specify' → logprob: -0.030749505385756493
    2. 'spec' → logprob: -3.905749559402466
    3. 'state' → logprob: -5.405749320983887
    4. ' clarify' → logprob: -5.655749320983887
    5. ' explicitly' → logprob: -7.155749320983887
    6. ' state' → logprob: -7.280749320983887
    7. 'explicit' → logprob: -8.530749320983887
    8. ' provide' → logprob: -9.155749320983887
    9. '_spec' → logprob: -9.405749320983887
    10. ' mention' → logprob: -9.405749320983887

Token 491: ' usage' (ID: 16622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12969917058944702
    2. ',' → logprob: -3.254699230194092
    3. '
' → logprob: -4.129699230194092
    4. ':' → logprob: -4.254699230194092
    5. '.' → logprob: -4.379699230194092
    6. '#' → logprob: -4.379699230194092
    7. '<|end|>' → logprob: -5.254699230194092
    8. '        
' → logprob: -5.379699230194092
    9. ':
' → logprob: -5.754699230194092
    10. ' if' → logprob: -6.004699230194092

Token 492: ' restrictions' (ID: 24679)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7682161331176758
    2. ',' → logprob: -1.1432161331176758
    3. '   ' → logprob: -2.393216133117676
    4. ' at' → logprob: -3.643216133117676
    5. ':' → logprob: -3.893216133117676
    6. '       ' → logprob: -4.393216133117676
    7. '<|end|>' → logprob: -4.518216133117676
    8. 'def' → logprob: -4.643216133117676
    9. '_limit' → logprob: -5.143216133117676
    10. '_' → logprob: -5.393216133117676

Token 493: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6430473327636719
    2. ':' → logprob: -1.2680473327636719
    3. ',' → logprob: -2.393047332763672
    4. '.' → logprob: -2.643047332763672
    5. '<|end|>' → logprob: -4.768047332763672
    6. '
' → logprob: -5.018047332763672
    7. '   ' → logprob: -5.518047332763672
    8. '        
' → logprob: -5.893047332763672
    9. '<|end|>' → logprob: -6.018047332763672
    10. ':
' → logprob: -6.893047332763672

Token 494: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2897974252700806
    2. 'return' → logprob: -1.2897974252700806
    3. '#' → logprob: -1.6647974252700806
    4. ' return' → logprob: -1.9147974252700806
    5. ' pass' → logprob: -3.164797306060791
    6. 'pass' → logprob: -3.164797306060791
    7. ' used' → logprob: -4.664797306060791
    8. ' #' → logprob: -4.914797306060791
    9. 'used' → logprob: -5.414797306060791
    10. ' so' → logprob: -5.664797306060791

Token 495: ' assume' (ID: 19429)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -1.0496598482131958
    2. ' pass' → logprob: -1.2996598482131958
    3. 'used' → logprob: -2.1746597290039062
    4. 'return' → logprob: -2.5496597290039062
    5. '#' → logprob: -2.7996597290039062
    6. ' return' → logprob: -2.9246597290039062
    7. ' used' → logprob: -3.1746597290039062
    8. '   ' → logprob: -4.674659729003906
    9. ' #' → logprob: -5.049659729003906
    10. 'pot' → logprob: -6.424659729003906

Token 496: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.8580964207649231
    2. ' that' → logprob: -1.4830963611602783
    3. 'each' → logprob: -2.1080963611602783
    4. ' only' → logprob: -2.6080963611602783
    5. ' for' → logprob: -3.3580963611602783
    6. ' pot' → logprob: -3.4830963611602783
    7. 'that' → logprob: -3.7330963611602783
    8. 'for' → logprob: -4.233096599578857
    9. 'pot' → logprob: -4.358096599578857
    10. ' any' → logprob: -4.608096599578857

Token 497: ' potion' (ID: 152801)
  Prédit: ' potion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' potion' → logprob: -0.00979858823120594
    2. 'p' → logprob: -5.259798526763916
    3. ' pot' → logprob: -6.009798526763916
    4. 'pot' → logprob: -6.759798526763916
    5. 'Potion' → logprob: -8.134799003601074
    6. '_p' → logprob: -8.259799003601074
    7. ' type' → logprob: -8.884799003601074
    8. 'type' → logprob: -9.009799003601074
    9. ' p' → logprob: -10.384799003601074
    10. ' Potion' → logprob: -10.634799003601074

Token 498: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.4904055893421173
    2. ' can' → logprob: -0.9904055595397949
    3. 'used' → logprob: -4.865405559539795
    4. ':' → logprob: -5.615405559539795
    5. ' is' → logprob: -7.115405559539795
    6. '.can' → logprob: -7.615405559539795
    7. 'use' → logprob: -7.615405559539795
    8. '.' → logprob: -7.615405559539795
    9. 'is' → logprob: -7.990405559539795
    10. 'usage' → logprob: -8.365406036376953

Token 499: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.5718272924423218
    2. ' be' → logprob: -0.9468272924423218
    3. 'only' → logprob: -3.5718274116516113
    4. ' only' → logprob: -3.9468274116516113
    5. ' ' → logprob: -10.071826934814453
    6. '	be' → logprob: -10.446826934814453
    7. 'each' → logprob: -10.946826934814453
    8. 'not' → logprob: -11.946826934814453
    9. '  ' → logprob: -12.696826934814453
    10. '_be' → logprob: -12.821826934814453

Token 500: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.005931758787482977
    2. ' used' → logprob: -5.130931854248047
    3. '_used' → logprob: -14.005931854248047
    4. 'use' → logprob: -14.130931854248047
    5. '.used' → logprob: -14.380931854248047
    6. ' ' → logprob: -14.755931854248047
    7. '
' → logprob: -15.130931854248047
    8. 'Used' → logprob: -16.380931854248047
    9. 'only' → logprob: -16.505931854248047
    10. '0' → logprob: -16.755931854248047

Token 501: ' once' (ID: 4730)
  Prédit: 'once'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'once' → logprob: -0.8202657699584961
    2. 'only' → logprob: -1.320265769958496
    3. ' only' → logprob: -2.195265769958496
    4. ' once' → logprob: -2.695265769958496
    5. 'at' → logprob: -2.820265769958496
    6. ' at' → logprob: -2.945265769958496
    7. 'exact' → logprob: -6.570265769958496
    8. ' exactly' → logprob: -9.195265769958496
    9. 'any' → logprob: -10.195265769958496
    10. 'multiple' → logprob: -10.945265769958496

Token 502: ' per' (ID: 777)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 503: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.5488812327384949
    2. 'step' → logprob: -1.5488812923431396
    3. ' cell' → logprob: -2.5488812923431396
    4. 'trap' → logprob: -2.9238812923431396
    5. 'move' → logprob: -3.1738812923431396
    6. ' step' → logprob: -4.0488810539245605
    7. ' move' → logprob: -4.4238810539245605
    8. 'enc' → logprob: -6.9238810539245605
    9. ' trap' → logprob: -6.9238810539245605
    10. 'enter' → logprob: -7.1738810539245605

Token 504: ' step' (ID: 5983)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13009925186634064
    2. ',' → logprob: -3.130099296569824
    3. '.' → logprob: -3.255099296569824
    4. '<|end|>' → logprob: -4.130099296569824
    5. ' and' → logprob: -4.505099296569824
    6. '        
' → logprob: -5.755099296569824
    7. ':' → logprob: -5.880099296569824
    8. '<|end|>' → logprob: -6.255099296569824
    9. '
' → logprob: -6.755099296569824
    10. ' to' → logprob: -6.880099296569824

Token 505: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04059051349759102
    2. ',' → logprob: -3.915590524673462
    3. '<|end|>' → logprob: -4.790590286254883
    4. '
' → logprob: -5.415590286254883
    5. '.' → logprob: -5.790590286254883
    6. '        
' → logprob: -6.290590286254883
    7. '<|end|>' → logprob: -7.665590286254883
    8. ' and' → logprob: -7.790590286254883
    9. ':' → logprob: -8.040590286254883
    10. ' to' → logprob: -8.665590286254883

Token 506: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015373582718893886
    2. '        
' → logprob: -7.001537322998047
    3. 'def' → logprob: -8.751537322998047
    4. '<|end|>' → logprob: -8.751537322998047
    5. '   ' → logprob: -10.126537322998047
    6. ',' → logprob: -10.251537322998047
    7. '
' → logprob: -10.251537322998047
    8. '#' → logprob: -10.876537322998047
    9. '        ' → logprob: -10.876537322998047
    10. 'dp' → logprob: -11.001537322998047

Token 507: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009965257719159126
    2. ' used' → logprob: -5.634965419769287
    3. 'used' → logprob: -5.884965419769287
    4. 'dp' → logprob: -6.759965419769287
    5. '        
' → logprob: -8.134964942932129
    6. 'available' → logprob: -8.384964942932129
    7. 'def' → logprob: -8.384964942932129
    8. 'self' → logprob: -8.384964942932129
    9. 'pass' → logprob: -9.259964942932129
    10. ' available' → logprob: -9.384964942932129

Token 508: ' Because' (ID: 13602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7522594928741455
    2. ' self' → logprob: -1.8772594928741455
    3. ' used' → logprob: -2.5022594928741455
    4. 'self' → logprob: -3.0022594928741455
    5. ' pot' → logprob: -3.3772594928741455
    6. 'def' → logprob: -3.5022594928741455
    7. 'used' → logprob: -3.6272594928741455
    8. 'dp' → logprob: -3.6272594928741455
    9. '#' → logprob: -4.377259254455566
    10. ' from' → logprob: -4.377259254455566

Token 509: ' number' (ID: 2086)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.14863164722919464
    2. ' needed' → logprob: -2.7736315727233887
    3. ' max' → logprob: -4.148631572723389
    4. 'self' → logprob: -4.273631572723389
    5. ' pot' → logprob: -4.523631572723389
    6. ' the' → logprob: -4.773631572723389
    7. '       ' → logprob: -5.523631572723389
    8. ' if' → logprob: -5.648631572723389
    9. ' from' → logprob: -6.148631572723389
    10. ' #' → logprob: -6.148631572723389

Token 510: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.23344725370407104
    2. 'of' → logprob: -2.233447313308716
    3. '_of' → logprob: -2.733447313308716
    4. '       ' → logprob: -4.858447074890137
    5. '   ' → logprob: -5.358447074890137
    6. '=' → logprob: -5.733447074890137
    7. '    ' → logprob: -5.733447074890137
    8. '_limit' → logprob: -5.733447074890137
    9. ' =' → logprob: -5.858447074890137
    10. '
' → logprob: -6.358447074890137

Token 511: ' pot' (ID: 3208)
  Prédit: ' pot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pot' → logprob: -0.28431224822998047
    2. 'pot' → logprob: -1.5343122482299805
    3. 'self' → logprob: -4.2843122482299805
    4. ' self' → logprob: -4.2843122482299805
    5. 'p' → logprob: -5.6593122482299805
    6. ' p' → logprob: -7.7843122482299805
    7. ' potion' → logprob: -9.28431224822998
    8. '   ' → logprob: -9.65931224822998
    9. 'len' → logprob: -10.15931224822998
    10. ' types' → logprob: -10.28431224822998

Token 512: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -4.8351892473874614e-05
    2. 't' → logprob: -10.500048637390137
    3. 'otions' → logprob: -11.250048637390137
    4. 's' → logprob: -12.125048637390137
    5. 'itions' → logprob: -14.000048637390137
    6. 'ion' → logprob: -14.250048637390137
    7. 'IONS' → logprob: -15.750048637390137
    8. '=' → logprob: -16.00004768371582
    9. '```' → logprob: -16.12504768371582
    10. 'def' → logprob: -16.62504768371582

Token 513: ' is' (ID: 382)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.26326385140419006
    2. ' is' → logprob: -2.6382639408111572
    3. ' ==' → logprob: -2.7632639408111572
    4. ' >' → logprob: -3.2632639408111572
    5. ' =' → logprob: -4.263263702392578
    6. ' and' → logprob: -4.763263702392578
    7. '<=' → logprob: -5.013263702392578
    8. ':' → logprob: -5.263263702392578
    9. '   ' → logprob: -5.263263702392578
    10. '=' → logprob: -5.638263702392578

Token 514: ' small' (ID: 3291)
  Prédit: ' limited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limited' → logprob: -1.0616600513458252
    2. 'len' → logprob: -1.3116600513458252
    3. ' len' → logprob: -1.8116600513458252
    4. ' small' → logprob: -1.9366600513458252
    5. 'small' → logprob: -2.936660051345825
    6. 'limited' → logprob: -3.936660051345825
    7. ' finite' → logprob: -6.936659812927246
    8. '1' → logprob: -7.436659812927246
    9. ' ' → logprob: -8.186659812927246
    10. 'finite' → logprob: -8.436659812927246

Token 515: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8064634799957275
    2. '       ' → logprob: -0.8064634799957275
    3. '
' → logprob: -3.5564634799957275
    4. ':' → logprob: -4.056463241577148
    5. ' and' → logprob: -4.056463241577148
    6. '<|end|>' → logprob: -4.556463241577148
    7. '        
' → logprob: -4.556463241577148
    8. ' (' → logprob: -5.306463241577148
    9. ',
' → logprob: -5.431463241577148
    10. ':
' → logprob: -5.931463241577148

Token 516: '<=' (ID: 16672)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.20525750517845154
    2. ' len' → logprob: -1.705257534980774
    3. ')' → logprob: -6.080257415771484
    4. '<=' → logprob: -8.080257415771484
    5. '10' → logprob: -8.205257415771484
    6. ' <=' → logprob: -8.330257415771484
    7. '5' → logprob: -8.580257415771484
    8. '<len' → logprob: -9.330257415771484
    9. '20' → logprob: -9.455257415771484
    10. '3' → logprob: -9.705257415771484

Token 517: '12' (ID: 899)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -0.6860455274581909
    2. '10' → logprob: -1.061045527458191
    3. '5' → logprob: -2.4360456466674805
    4. 'len' → logprob: -2.9360456466674805
    5. '3' → logprob: -5.8110456466674805
    6. '15' → logprob: -5.9360456466674805
    7. '50' → logprob: -6.8110456466674805
    8. '100' → logprob: -7.5610456466674805
    9. '7' → logprob: -8.06104564666748
    10. ' ' → logprob: -8.06104564666748

Token 518: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.02150561846792698
    2. ')' → logprob: -3.89650559425354
    3. '       ' → logprob: -7.771505832672119
    4. ',' → logprob: -8.396505355834961
    5. '):
' → logprob: -9.021505355834961
    6. ' ),' → logprob: -9.646505355834961
    7. '):' → logprob: -9.896505355834961
    8. '   ' → logprob: -10.771505355834961
    9. ' and' → logprob: -10.771505355834961
    10. ').' → logprob: -12.021505355834961

Token 519: ' we' (ID: 581)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1281903982162476
    2. 'dp' → logprob: -1.2531903982162476
    3. '       ' → logprob: -2.128190517425537
    4. ' from' → logprob: -2.503190517425537
    5. '#' → logprob: -3.253190517425537
    6. 'import' → logprob: -3.753190517425537
    7. 'pot' → logprob: -3.878190517425537
    8. 'best' → logprob: -4.003190517425537
    9. ' pot' → logprob: -4.128190517425537
    10. ' best' → logprob: -4.128190517425537

Token 520: ' try' (ID: 2075)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.10808753967285156
    2. 'from' → logprob: -2.9830875396728516
    3. ' from' → logprob: -3.4830875396728516
    4. 'import' → logprob: -4.233087539672852
    5. 'can' → logprob: -6.358087539672852
    6. 'def' → logprob: -6.858087539672852
    7. '       ' → logprob: -6.858087539672852
    8. ' import' → logprob: -6.983087539672852
    9. '   ' → logprob: -7.233087539672852
    10. ' will' → logprob: -7.983087539672852

Token 521: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.19242359697818756
    2. '       ' → logprob: -1.9424235820770264
    3. ' all' → logprob: -3.6924235820770264
    4. '   ' → logprob: -5.3174238204956055
    5. 'from' → logprob: -6.9424238204956055
    6. 'import' → logprob: -8.067423820495605
    7. '_all' → logprob: -8.817423820495605
    8. '	all' → logprob: -8.817423820495605
    9. ' ' → logprob: -9.567423820495605
    10. '           ' → logprob: -10.067423820495605

Token 522: ' subsets' (ID: 165377)
  Prédit: ' combinations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combinations' → logprob: -1.0833721160888672
    2. 'com' → logprob: -1.3333721160888672
    3. ' subsets' → logprob: -1.3333721160888672
    4. '   ' → logprob: -3.083372116088867
    5. 'subset' → logprob: -3.708372116088867
    6. 'sub' → logprob: -4.083372116088867
    7. 'possible' → logprob: -4.083372116088867
    8. 'import' → logprob: -4.708372116088867
    9. ' possible' → logprob: -4.958372116088867
    10. 'from' → logprob: -5.083372116088867

Token 523: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00784403644502163
    2. 'from' → logprob: -5.882843971252441
    3. ' from' → logprob: -6.007843971252441
    4. ',' → logprob: -7.007843971252441
    5. 'import' → logprob: -7.507843971252441
    6. ':' → logprob: -8.007843971252441
    7. '<|end|>' → logprob: -9.007843971252441
    8. ' for' → logprob: -9.257843971252441
    9. '.' → logprob: -9.257843971252441
    10. ' to' → logprob: -9.382843971252441

Token 524: ' maximize' (ID: 44207)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.8056133985519409
    2. 'find' → logprob: -1.055613398551941
    3. 'min' → logprob: -2.4306135177612305
    4. 'import' → logprob: -2.6806135177612305
    5. ' minimize' → logprob: -3.9306135177612305
    6. 'restore' → logprob: -5.0556135177612305
    7. ' min' → logprob: -5.8056135177612305
    8. ' use' → logprob: -6.0556135177612305
    9. 'recover' → logprob: -6.3056135177612305
    10. 'from' → logprob: -6.3056135177612305

Token 525: ' healing' (ID: 26726)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.10829980671405792
    2. 'heal' → logprob: -2.358299732208252
    3. ' healing' → logprob: -5.483299732208252
    4. 'hp' → logprob: -7.358299732208252
    5. 'possible' → logprob: -7.608299732208252
    6. 'total' → logprob: -7.733299732208252
    7. 'the' → logprob: -7.983299732208252
    8. '   ' → logprob: -8.23330020904541
    9. 'restore' → logprob: -8.35830020904541
    10. ' heal' → logprob: -8.48330020904541

Token 526: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17080353200435638
    2. ' from' → logprob: -2.6708035469055176
    3. 'from' → logprob: -3.4208035469055176
    4. ',' → logprob: -3.5458035469055176
    5. ':' → logprob: -5.045803546905518
    6. ' subsets' → logprob: -5.545803546905518
    7. '   ' → logprob: -5.795803546905518
    8. 'import' → logprob: -5.795803546905518
    9. '.' → logprob: -5.795803546905518
    10. '<|end|>' → logprob: -7.420803546905518

Token 527: ' only' (ID: 1606)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.14399240911006927
    2. 'not' → logprob: -2.1439924240112305
    3. 'do' → logprob: -5.7689924240112305
    4. ' do' → logprob: -5.7689924240112305
    5. ' without' → logprob: -5.8939924240112305
    6. 'without' → logprob: -6.0189924240112305
    7. ' only' → logprob: -6.2689924240112305
    8. ' stay' → logprob: -6.3939924240112305
    9. 'only' → logprob: -7.3939924240112305
    10. 'stay' → logprob: -8.64399242401123

Token 528: ' to' (ID: 316)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7242666482925415
    2. 'up' → logprob: -1.7242666482925415
    3. 'heal' → logprob: -1.7242666482925415
    4. ' if' → logprob: -2.849266529083252
    5. 'use' → logprob: -2.974266529083252
    6. ' up' → logprob: -4.474266529083252
    7. 'he' → logprob: -4.724266529083252
    8. ' heal' → logprob: -4.974266529083252
    9. ' use' → logprob: -5.099266529083252
    10. 'sum' → logprob: -5.974266529083252

Token 529: ' just' (ID: 1327)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.1911744475364685
    2. ' not' → logprob: -1.8161745071411133
    3. ' at' → logprob: -6.316174507141113
    4. 'heal' → logprob: -6.316174507141113
    5. 'restore' → logprob: -6.691174507141113
    6. 'at' → logprob: -6.691174507141113
    7. 'avoid' → logprob: -6.816174507141113
    8. 'the' → logprob: -7.316174507141113
    9. 'cover' → logprob: -7.941174507141113
    10. 'prevent' → logprob: -7.941174507141113

Token 530: ' cover' (ID: 4321)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.42444345355033875
    2. 'ex' → logprob: -1.7994434833526611
    3. 'not' → logprob: -3.174443483352661
    4. ' exceed' → logprob: -3.549443483352661
    5. 'cover' → logprob: -3.674443483352661
    6. 'heal' → logprob: -4.174443244934082
    7. 'reach' → logprob: -4.299443244934082
    8. 'restore' → logprob: -4.424443244934082
    9. 'over' → logprob: -4.549443244934082
    10. 'before' → logprob: -4.674443244934082

Token 531: ' damage' (ID: 10364)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5500050187110901
    2. ' needed' → logprob: -1.4250049591064453
    3. 'needed' → logprob: -1.9250049591064453
    4. 'the' → logprob: -3.4250049591064453
    5. '_needed' → logprob: -5.800004959106445
    6. ' required' → logprob: -8.550004959106445
    7. '   ' → logprob: -8.800004959106445
    8. '    ' → logprob: -8.925004959106445
    9. ' a' → logprob: -9.550004959106445
    10. 'damage' → logprob: -9.675004959106445

Token 532: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01017367746680975
    2. '
' → logprob: -4.885173797607422
    3. '   ' → logprob: -7.260173797607422
    4. '        
' → logprob: -7.510173797607422
    5. ',' → logprob: -7.760173797607422
    6. 'from' → logprob: -9.010173797607422
    7. ' from' → logprob: -9.260173797607422
    8. 's' → logprob: -9.385173797607422
    9. ':' → logprob: -9.885173797607422
    10. '  
' → logprob: -10.010173797607422

Token 533: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005396892665885389
    2. '        
' → logprob: -8.875539779663086
    3. 'from' → logprob: -9.000539779663086
    4. ' from' → logprob: -9.375539779663086
    5. '   ' → logprob: -10.125539779663086
    6. ',' → logprob: -10.375539779663086
    7. '
' → logprob: -11.125539779663086
    8. 'n' → logprob: -11.250539779663086
    9. 'import' → logprob: -11.375539779663086
    10. '      ' → logprob: -11.500539779663086

Token 534: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008090290939435363
    2. '        
' → logprob: -7.750809192657471
    3. '        ' → logprob: -9.250808715820312
    4. '
' → logprob: -10.250808715820312
    5. 'import' → logprob: -10.625808715820312
    6. ' 
' → logprob: -10.625808715820312
    7. '      ' → logprob: -10.625808715820312
    8. ' from' → logprob: -10.875808715820312
    9. '    ' → logprob: -10.875808715820312
    10. 'from' → logprob: -11.250808715820312

Token 535: ' Goal' (ID: 67160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008233106695115566
    2. 'from' → logprob: -5.383233070373535
    3. ' from' → logprob: -6.133233070373535
    4. 'best' → logprob: -7.508233070373535
    5. 'max' → logprob: -8.883233070373535
    6. ' best' → logprob: -9.008233070373535
    7. 'import' → logprob: -9.008233070373535
    8. 'possible' → logprob: -9.258233070373535
    9. 'dp' → logprob: -9.383233070373535
    10. 'n' → logprob: -9.508233070373535

Token 536: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36806219816207886
    2. ' is' → logprob: -1.8680622577667236
    3. ':' → logprob: -2.1180622577667236
    4. '=' → logprob: -3.4930622577667236
    5. 'is' → logprob: -6.7430620193481445
    6. '       ' → logprob: -7.2430620193481445
    7. ',' → logprob: -8.493062019348145
    8. ' :' → logprob: -8.618062019348145
    9. 's' → logprob: -8.993062019348145
    10. ' ' → logprob: -9.243062019348145

Token 537: ' maximize' (ID: 44207)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2708219289779663
    2. ' best' → logprob: -1.5208219289779663
    3. ' min' → logprob: -2.020822048187256
    4. ' use' → logprob: -2.270822048187256
    5. 'best' → logprob: -3.145822048187256
    6. 'min' → logprob: -3.520822048187256
    7. ' to' → logprob: -3.645822048187256
    8. '#' → logprob: -4.270822048187256
    9. ' heal' → logprob: -4.270822048187256
    10. ' find' → logprob: -4.395822048187256

Token 538: ' healing' (ID: 26726)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.7213871479034424
    2. ' healing' → logprob: -0.7213871479034424
    3. 'heal' → logprob: -4.596386909484863
    4. ' total' → logprob: -4.971386909484863
    5. ' healed' → logprob: -5.346386909484863
    6. ' heal' → logprob: -5.596386909484863
    7. 'total' → logprob: -7.221386909484863
    8. ' self' → logprob: -8.221386909484863
    9. ' sum' → logprob: -8.596386909484863
    10. '   ' → logprob: -8.721386909484863

Token 539: ' without' (ID: 2935)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21903008222579956
    2. ',' → logprob: -1.8440301418304443
    3. ':' → logprob: -5.094029903411865
    4. ' to' → logprob: -5.469029903411865
    5. '   ' → logprob: -5.594029903411865
    6. '_possible' → logprob: -5.719029903411865
    7. ' possible' → logprob: -5.719029903411865
    8. ' =' → logprob: -5.969029903411865
    9. '        
' → logprob: -6.469029903411865
    10. 'possible' → logprob: -6.969029903411865

Token 540: ' exceeding' (ID: 85205)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.6937547326087952
    2. ' exceeding' → logprob: -0.6937547326087952
    3. ' going' → logprob: -8.193755149841309
    4. 'going' → logprob: -8.693755149841309
    5. 'over' → logprob: -9.568755149841309
    6. 'overs' → logprob: -10.568755149841309
    7. '>' → logprob: -11.068755149841309
    8. ' exceed' → logprob: -11.443755149841309
    9. '
' → logprob: -11.693755149841309
    10. '   ' → logprob: -12.068755149841309

Token 541: ' hp' (ID: 37774)
  Prédit: 'needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'needed' → logprob: -0.2352064549922943
    2. ' needed' → logprob: -2.235206365585327
    3. 'self' → logprob: -2.485206365585327
    4. ' self' → logprob: -3.985206365585327
    5. '   ' → logprob: -8.235206604003906
    6. '(' → logprob: -9.735206604003906
    7. ' the' → logprob: -9.860206604003906
    8. '_needed' → logprob: -9.985206604003906
    9. 'the' → logprob: -10.235206604003906
    10. '(self' → logprob: -10.235206604003906

Token 542: '_max' (ID: 13731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0222463421523571
    2. '   ' → logprob: -4.522246360778809
    3. ',' → logprob: -6.147246360778809
    4. '
' → logprob: -6.147246360778809
    5. '_' → logprob: -6.647246360778809
    6. '        
' → logprob: -6.647246360778809
    7. '	' → logprob: -7.772246360778809
    8. '    ' → logprob: -7.772246360778809
    9. '_possible' → logprob: -8.022246360778809
    10. '        ' → logprob: -8.397246360778809

Token 543: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019085442647337914
    2. ',' → logprob: -4.26908540725708
    3. '<|end|>' → logprob: -6.39408540725708
    4. '
' → logprob: -6.89408540725708
    5. '<|end|>' → logprob: -7.26908540725708
    6. '        
' → logprob: -7.89408540725708
    7. '   ' → logprob: -8.144085884094238
    8. ':' → logprob: -8.894085884094238
    9. '.' → logprob: -9.269085884094238
    10. '	' → logprob: -9.644085884094238

Token 544: ' over' (ID: 1072)
  Prédit: ' going'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' going' → logprob: -0.36536839604377747
    2. 'going' → logprob: -1.615368366241455
    3. ' dropping' → logprob: -2.740368366241455
    4. 'redu' → logprob: -4.990368366241455
    5. 'dro' → logprob: -5.365368366241455
    6. ' exceeding' → logprob: -5.865368366241455
    7. 'ex' → logprob: -5.865368366241455
    8. 'over' → logprob: -5.865368366241455
    9. ' reducing' → logprob: -5.990368366241455
    10. 'w' → logprob: -5.990368366241455

Token 545: '-he' (ID: 60074)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.03404651954770088
    2. ' healing' → logprob: -3.6590464115142822
    3. 'heal' → logprob: -5.159046649932861
    4. 'using' → logprob: -7.034046649932861
    5. '_he' → logprob: -8.159046173095703
    6. '```' → logprob: -8.784046173095703
    7. '-he' → logprob: -8.909046173095703
    8. 'rest' → logprob: -9.284046173095703
    9. ' heal' → logprob: -9.784046173095703
    10. 'shoot' → logprob: -9.909046173095703

Token 546: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.16192959249019623
    2. 'aling' → logprob: -1.9119296073913574
    3. 'alp' → logprob: -7.661929607391357
    4. 'aled' → logprob: -8.1619291305542
    5. 'als' → logprob: -8.2869291305542
    6. '```' → logprob: -9.2244291305542
    7. '
' → logprob: -9.7869291305542
    8. 'alth' → logprob: -10.0994291305542
    9. 'alable' → logprob: -10.1619291305542
    10. 'a' → logprob: -10.7244291305542

Token 547: ' unnecessarily' (ID: 169842)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03343554958701134
    2. ',' → logprob: -4.158435344696045
    3. '
' → logprob: -4.408435344696045
    4. '   ' → logprob: -6.033435344696045
    5. '        
' → logprob: -7.408435344696045
    6. '.' → logprob: -8.408435821533203
    7. 'def' → logprob: -8.408435821533203
    8. ':' → logprob: -8.658435821533203
    9. '
' → logprob: -8.908435821533203
    10. ' to' → logprob: -9.345935821533203

Token 548: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04070485383272171
    2. ',' → logprob: -4.040704727172852
    3. '
' → logprob: -4.665704727172852
    4. '        
' → logprob: -5.290704727172852
    5. '   ' → logprob: -5.540704727172852
    6. ':' → logprob: -6.915704727172852
    7. '<|end|>' → logprob: -7.790704727172852
    8. 'def' → logprob: -8.040704727172852
    9. '  
' → logprob: -8.290704727172852
    10. '    
' → logprob: -8.290704727172852

Token 549: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005089493934065104
    2. '        
' → logprob: -8.500509262084961
    3. 'def' → logprob: -9.000509262084961
    4. 'from' → logprob: -9.750509262084961
    5. 'import' → logprob: -10.500509262084961
    6. '   ' → logprob: -10.875509262084961
    7. ' from' → logprob: -10.875509262084961
    8. ',' → logprob: -11.000509262084961
    9. '<|end|>' → logprob: -11.625509262084961
    10. '
' → logprob: -12.750509262084961

Token 550: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28316742181777954
    2. ' from' → logprob: -2.5331673622131348
    3. ' best' → logprob: -2.9081673622131348
    4. 'from' → logprob: -2.9081673622131348
    5. 'best' → logprob: -3.4081673622131348
    6. ' n' → logprob: -4.783167362213135
    7. 'n' → logprob: -5.408167362213135
    8. ' max' → logprob: -6.158167362213135
    9. 'max' → logprob: -6.408167362213135
    10. 'possible' → logprob: -6.533167362213135

Token 551: ' We' (ID: 1416)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.6104539036750793
    2. 'from' → logprob: -1.3604538440704346
    3. '       ' → logprob: -2.4854538440704346
    4. ' best' → logprob: -3.2354538440704346
    5. ' from' → logprob: -3.8604538440704346
    6. 'n' → logprob: -4.360454082489014
    7. 'max' → logprob: -4.735454082489014
    8. 'available' → logprob: -4.860454082489014
    9. 'possible' → logprob: -5.110454082489014
    10. 'def' → logprob: -5.735454082489014

Token 552: ' want' (ID: 1682)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.2047202587127686
    2. ' need' → logprob: -1.4547202587127686
    3. ' have' → logprob: -2.0797202587127686
    4. '       ' → logprob: -2.9547202587127686
    5. ' import' → logprob: -3.3297202587127686
    6. 'def' → logprob: -3.5797202587127686
    7. '   ' → logprob: -3.5797202587127686
    8. ' def' → logprob: -3.7047202587127686
    9. 'from' → logprob: -3.9547202587127686
    10. ' continue' → logprob: -3.9547202587127686

Token 553: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.13580983877182007
    2. 'to' → logprob: -2.260809898376465
    3. '       ' → logprob: -3.885809898376465
    4. '   ' → logprob: -7.635809898376465
    5. ' best' → logprob: -7.760809898376465
    6. 'best' → logprob: -8.010809898376465
    7. 'def' → logprob: -8.385809898376465
    8. 'import' → logprob: -8.510809898376465
    9. 'from' → logprob: -9.510809898376465
    10. '    ' → logprob: -9.635809898376465

Token 554: ' pick' (ID: 5230)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -1.2756850719451904
    2. 'find' → logprob: -1.4006850719451904
    3. 'min' → logprob: -1.5256850719451904
    4. 'maximize' → logprob: -2.6506850719451904
    5. 'from' → logprob: -2.9006850719451904
    6. 'import' → logprob: -3.1506850719451904
    7. ' minimize' → logprob: -3.7756850719451904
    8. ' from' → logprob: -4.0256853103637695
    9. ' min' → logprob: -5.0256853103637695
    10. 'def' → logprob: -5.1506853103637695

Token 555: ' subset' (ID: 58845)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.3761625289916992
    2. ' best' → logprob: -2.001162528991699
    3. 'best' → logprob: -2.251162528991699
    4. ' pot' → logprob: -2.251162528991699
    5. 'from' → logprob: -2.376162528991699
    6. ' a' → logprob: -2.626162528991699
    7. 'the' → logprob: -2.626162528991699
    8. ' subsets' → logprob: -2.751162528991699
    9. 'pot' → logprob: -3.126162528991699
    10. ' from' → logprob: -4.376162528991699

Token 556: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 557: ' pot' (ID: 3208)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.055014193058013916
    2. 'pot' → logprob: -3.055014133453369
    3. ' self' → logprob: -5.430014133453369
    4. ' pot' → logprob: -7.180014133453369
    5. 'p' → logprob: -7.680014133453369
    6. 'range' → logprob: -7.930014133453369
    7. 'the' → logprob: -8.305014610290527
    8. ' range' → logprob: -10.055014610290527
    9. '[self' → logprob: -10.305014610290527
    10. '[' → logprob: -10.430014610290527

Token 558: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -1.2664456789934775e-06
    2. 'ion' → logprob: -14.250000953674316
    3. 'IONS' → logprob: -15.375000953674316
    4. '```' → logprob: -15.750000953674316
    5. 'ons' → logprob: -16.250001907348633
    6. 's' → logprob: -17.000001907348633
    7. 'i' → logprob: -18.500001907348633
    8. '``' → logprob: -18.625001907348633
    9. '   ' → logprob: -19.000001907348633
    10. 'iones' → logprob: -19.125001907348633

Token 559: ' (' (ID: 350)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -1.4016813039779663
    2. ',' → logprob: -1.7766813039779663
    3. ' to' → logprob: -1.7766813039779663
    4. '       ' → logprob: -1.7766813039779663
    5. ' with' → logprob: -2.401681423187256
    6. ' from' → logprob: -2.526681423187256
    7. 'from' → logprob: -4.776681423187256
    8. '   ' → logprob: -4.776681423187256
    9. ':' → logprob: -5.151681423187256
    10. ' subsets' → logprob: -5.151681423187256

Token 560: 'once' (ID: 21986)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06746022403240204
    2. ' range' → logprob: -4.067460060119629
    3. '):
' → logprob: -4.567460060119629
    4. 'range' → logprob: -4.692460060119629
    5. ' )' → logprob: -5.192460060119629
    6. ' that' → logprob: -5.692460060119629
    7. 'from' → logprob: -5.942460060119629
    8. '       ' → logprob: -5.942460060119629
    9. 'self' → logprob: -6.067460060119629
    10. 'p' → logprob: -6.692460060119629

Token 561: ' each' (ID: 2454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42849114537239075
    2. ' )' → logprob: -1.5534911155700684
    3. ' each' → logprob: -3.0534911155700684
    4. ' used' → logprob: -3.9284911155700684
    5. ' per' → logprob: -4.053491115570068
    6. 'each' → logprob: -4.553491115570068
    7. ' subsets' → logprob: -5.053491115570068
    8. 's' → logprob: -5.303491115570068
    9. ' ' → logprob: -5.428491115570068
    10. ' at' → logprob: -5.553491115570068

Token 562: ' max' (ID: 2999)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015733062755316496
    2. '),' → logprob: -7.626573085784912
    3. ' )' → logprob: -7.876573085784912
    4. ' at' → logprob: -8.12657356262207
    5. ' used' → logprob: -9.00157356262207
    6. ',' → logprob: -9.87657356262207
    7. 'used' → logprob: -10.00157356262207
    8. ' or' → logprob: -10.12657356262207
    9. ' each' → logprob: -10.37657356262207
    10. 'each' → logprob: -10.50157356262207

Token 563: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010356683051213622
    2. 'used' → logprob: -7.751035690307617
    3. '),' → logprob: -8.376035690307617
    4. 'each' → logprob: -9.001035690307617
    5. 'use' → logprob: -9.626035690307617
    6. ' use' → logprob: -10.126035690307617
    7. ' used' → logprob: -10.251035690307617
    8. ' each' → logprob: -10.626035690307617
    9. ' )' → logprob: -10.751035690307617
    10. ',' → logprob: -11.626035690307617

Token 564: ' summ' (ID: 16552)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03072512336075306
    2. ' from' → logprob: -4.280725002288818
    3. 'from' → logprob: -5.030725002288818
    4. ',' → logprob: -5.030725002288818
    5. ' to' → logprob: -7.030725002288818
    6. 'import' → logprob: -7.405725002288818
    7. '<|end|>' → logprob: -7.530725002288818
    8. ' that' → logprob: -8.155725479125977
    9. '   ' → logprob: -8.905725479125977
    10. ' for' → logprob: -9.030725479125977

Token 565: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.17305341362953186
    2. 'ed' → logprob: -2.923053503036499
    3. 'ary' → logprob: -3.048053503036499
    4. 'ation' → logprob: -3.673053503036499
    5. 'ar' → logprob: -4.17305326461792
    6. 'on' → logprob: -5.29805326461792
    7. 'um' → logprob: -6.29805326461792
    8. '   ' → logprob: -6.29805326461792
    9. 'ate' → logprob: -6.29805326461792
    10. 'arily' → logprob: -6.29805326461792

Token 566: ' healing' (ID: 26726)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.9069581627845764
    2. ' up' → logprob: -1.5319581031799316
    3. 'up' → logprob: -1.6569581031799316
    4. ' to' → logprob: -1.7819581031799316
    5. '<=' → logprob: -4.531958103179932
    6. '       ' → logprob: -5.531958103179932
    7. ' <=' → logprob: -6.656958103179932
    8. 'he' → logprob: -7.031958103179932
    9. ' healing' → logprob: -7.031958103179932
    10. '_up' → logprob: -7.406958103179932

Token 567: ' h' (ID: 312)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2726711928844452
    2. '_amount' → logprob: -2.1476712226867676
    3. ' amounts' → logprob: -3.1476712226867676
    4. 'amount' → logprob: -3.3976712226867676
    5. 'from' → logprob: -4.647671222686768
    6. '   ' → logprob: -5.022671222686768
    7. ',' → logprob: -5.272671222686768
    8. ' from' → logprob: -5.397671222686768
    9. ' to' → logprob: -6.147671222686768
    10. 'powers' → logprob: -6.147671222686768

Token 568: ' so' (ID: 813)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1914675384759903
    2. '_needed' → logprob: -3.191467523574829
    3. 's' → logprob: -3.441467523574829
    4. ' that' → logprob: -4.066467761993408
    5. '_amount' → logprob: -4.441467761993408
    6. '       ' → logprob: -4.441467761993408
    7. ',' → logprob: -4.566467761993408
    8. '   ' → logprob: -4.691467761993408
    9. '=' → logprob: -4.941467761993408
    10. '_to' → logprob: -5.066467761993408

Token 569: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.018199341371655464
    2. ' that' → logprob: -4.018199443817139
    3. '_that' → logprob: -10.76819896697998
    4. '       ' → logprob: -11.14319896697998
    5. '   ' → logprob: -11.76819896697998
    6. '	that' → logprob: -12.89319896697998
    7. 't' → logprob: -13.89319896697998
    8. ' ' → logprob: -14.01819896697998
    9. '           ' → logprob: -14.39319896697998
    10. '
' → logprob: -15.39319896697998

Token 570: ' hp' (ID: 37774)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.009451470337808132
    2. 'self' → logprob: -4.759451389312744
    3. ' h' → logprob: -7.259451389312744
    4. ' self' → logprob: -10.009451866149902
    5. '       ' → logprob: -10.134451866149902
    6. '0' → logprob: -10.884451866149902
    7. '   ' → logprob: -12.134451866149902
    8. '           ' → logprob: -12.134451866149902
    9. '
' → logprob: -12.509451866149902
    10. '	h' → logprob: -12.509451866149902

Token 571: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.030687542632222176
    2. '+' → logprob: -3.5306875705718994
    3. '+self' → logprob: -7.65568733215332
    4. '_current' → logprob: -8.53068733215332
    5. '   ' → logprob: -9.78068733215332
    6. '       ' → logprob: -9.78068733215332
    7. '_' → logprob: -9.78068733215332
    8. '+h' → logprob: -10.90568733215332
    9. '+p' → logprob: -11.53068733215332
    10. ' ' → logprob: -12.03068733215332

Token 572: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.016056187450885773
    2. ' h' → logprob: -4.141056060791016
    3. 'needed' → logprob: -11.266056060791016
    4. ' needed' → logprob: -12.641056060791016
    5. '```' → logprob: -13.391056060791016
    6. '	h' → logprob: -14.016056060791016
    7. 'he' → logprob: -14.266056060791016
    8. ' ' → logprob: -14.266056060791016
    9. '_needed' → logprob: -14.766056060791016
    10. '
' → logprob: -15.141056060791016

Token 573: ' -' (ID: 533)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.16301323473453522
    2. '<=' → logprob: -2.163013219833374
    3. ' +' → logprob: -4.038013458251953
    4. ' >=' → logprob: -4.413013458251953
    5. '>=' → logprob: -5.788013458251953
    6. '+' → logprob: -6.038013458251953
    7. ' ' → logprob: -9.038013458251953
    8. ' ≤' → logprob: -10.288013458251953
    9. '```' → logprob: -10.913013458251953
    10. '   ' → logprob: -11.788013458251953

Token 574: ' damage' (ID: 10364)
  Prédit: 'needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'needed' → logprob: -0.005959495436400175
    2. ' needed' → logprob: -5.130959510803223
    3. '   ' → logprob: -11.130959510803223
    4. 'required' → logprob: -12.505959510803223
    5. 'used' → logprob: -13.005959510803223
    6. 'necessary' → logprob: -13.130959510803223
    7. 'need' → logprob: -13.380959510803223
    8. '
' → logprob: -13.380959510803223
    9. '           ' → logprob: -13.755959510803223
    10. '       ' → logprob: -13.880959510803223

Token 575: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.021920781582593918
    2. '<=' → logprob: -4.021920680999756
    3. '_loss' → logprob: -6.021920680999756
    4. ' >=' → logprob: -7.146920680999756
    5. ')' → logprob: -9.146921157836914
    6. '   ' → logprob: -9.771921157836914
    7. '>=' → logprob: -9.896921157836914
    8. 'loss' → logprob: -9.896921157836914
    9. ')<=' → logprob: -9.896921157836914
    10. '_needed' → logprob: -10.021921157836914

Token 576: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.027587655931711197
    2. ' ' → logprob: -4.152587890625
    3. '=' → logprob: -4.652587890625
    4. 'needed' → logprob: -6.402587890625
    5. ' needed' → logprob: -9.402587890625
    6. 'self' → logprob: -9.652587890625
    7. '   ' → logprob: -10.715087890625
    8. 'damage' → logprob: -11.152587890625
    9. '  ' → logprob: -11.277587890625
    10. ' self' → logprob: -11.777587890625

Token 577: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002797868102788925
    2. ' ' → logprob: -6.252798080444336
    3. '=' → logprob: -7.252798080444336
    4. 'needed' → logprob: -9.252798080444336
    5. 'self' → logprob: -10.502798080444336
    6. 'damage' → logprob: -11.502798080444336
    7. '-' → logprob: -12.440298080444336
    8. 'hp' → logprob: -12.440298080444336
    9. '```' → logprob: -13.440298080444336
    10. '
' → logprob: -13.565298080444336

Token 578: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033712323755025864
    2. ',' → logprob: -3.783712387084961
    3. '
' → logprob: -5.408712387084961
    4. '<|end|>' → logprob: -6.033712387084961
    5. '        
' → logprob: -7.033712387084961
    6. ' and' → logprob: -7.158712387084961
    7. '   ' → logprob: -7.908712387084961
    8. '.' → logprob: -8.033712387084961
    9. '<|end|>' → logprob: -8.158712387084961
    10. ' ,' → logprob: -9.033712387084961

Token 579: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007851249538362026
    2. ',' → logprob: -5.1328511238098145
    3. '        
' → logprob: -7.3828511238098145
    4. ' and' → logprob: -7.6328511238098145
    5. '<|end|>' → logprob: -8.882851600646973
    6. '   ' → logprob: -9.007851600646973
    7. '.' → logprob: -9.257851600646973
    8. '
' → logprob: -9.257851600646973
    9. ' ,' → logprob: -9.507851600646973
    10. '        ' → logprob: -10.007851600646973

Token 580: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006328910123556852
    2. '        
' → logprob: -6.00632905960083
    3. '
' → logprob: -6.38132905960083
    4. ',' → logprob: -6.88132905960083
    5. ' from' → logprob: -7.88132905960083
    6. 'from' → logprob: -8.756328582763672
    7. ' and' → logprob: -8.881328582763672
    8. ' 
' → logprob: -10.006328582763672
    9. '    
' → logprob: -10.131328582763672
    10. '   ' → logprob: -10.131328582763672

Token 581: ' Or' (ID: 2604)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022659344598650932
    2. 'from' → logprob: -4.2726593017578125
    3. ' from' → logprob: -4.8976593017578125
    4. ' n' → logprob: -8.522659301757812
    5. 'n' → logprob: -8.897659301757812
    6. 'import' → logprob: -9.147659301757812
    7. 'dp' → logprob: -9.522659301757812
    8. '#' → logprob: -9.897659301757812
    9. '   ' → logprob: -9.897659301757812
    10. '        
' → logprob: -9.897659301757812

Token 582: ' hp' (ID: 37774)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3161887526512146
    2. ' if' → logprob: -2.9411888122558594
    3. ' h' → logprob: -2.9411888122558594
    4. ' max' → logprob: -3.8161888122558594
    5. ' needed' → logprob: -4.066188812255859
    6. ' best' → logprob: -4.441188812255859
    7. ' return' → logprob: -4.566188812255859
    8. ' at' → logprob: -4.816188812255859
    9. 'def' → logprob: -4.816188812255859
    10. ' hp' → logprob: -4.816188812255859

Token 583: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03932976350188255
    2. '+' → logprob: -3.289329767227173
    3. '   ' → logprob: -7.789329528808594
    4. '    ' → logprob: -8.539329528808594
    5. '       ' → logprob: -8.539329528808594
    6. '        ' → logprob: -9.664329528808594
    7. ' <=' → logprob: -9.789329528808594
    8. 'max' → logprob: -9.789329528808594
    9. ' >=' → logprob: -9.914329528808594
    10. ' -' → logprob: -10.289329528808594

Token 584: ' h' (ID: 312)
  Prédit: 'needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'needed' → logprob: -0.014395018108189106
    2. ' needed' → logprob: -4.389395236968994
    3. 'h' → logprob: -7.639395236968994
    4. '       ' → logprob: -8.264394760131836
    5. '   ' → logprob: -8.639394760131836
    6. ' h' → logprob: -8.639394760131836
    7. 'max' → logprob: -9.139394760131836
    8. 'used' → logprob: -9.264394760131836
    9. '           ' → logprob: -9.764394760131836
    10. 'sum' → logprob: -10.014394760131836

Token 585: ' >' (ID: 1424)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6075708270072937
    2. ' -' → logprob: -1.4825708866119385
    3. ' <=' → logprob: -2.4825708866119385
    4. '>=' → logprob: -2.6075708866119385
    5. ' +' → logprob: -2.8575708866119385
    6. '<=' → logprob: -5.232570648193359
    7. '+' → logprob: -6.232570648193359
    8. ' ' → logprob: -6.607570648193359
    9. '-' → logprob: -6.732570648193359
    10. ' >' → logprob: -7.107570648193359

Token 586: ' damage' (ID: 10364)
  Prédit: 'needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'needed' → logprob: -0.001015779678709805
    2. ' needed' → logprob: -7.001015663146973
    3. '   ' → logprob: -10.001015663146973
    4. 'need' → logprob: -11.126015663146973
    5. '           ' → logprob: -12.001015663146973
    6. 'necessary' → logprob: -12.251015663146973
    7. '=' → logprob: -12.251015663146973
    8. 'self' → logprob: -12.251015663146973
    9. '```' → logprob: -12.501015663146973
    10. '       ' → logprob: -12.501015663146973

Token 587: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015524646267294884
    2. '
' → logprob: -4.890524864196777
    3. ',' → logprob: -5.640524864196777
    4. '        
' → logprob: -6.265524864196777
    5. '<|end|>' → logprob: -7.015524864196777
    6. '<|end|>' → logprob: -7.390524864196777
    7. '   ' → logprob: -8.515524864196777
    8. ':' → logprob: -8.515524864196777
    9. 'from' → logprob: -9.515524864196777
    10. '  
' → logprob: -9.890524864196777

Token 588: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001615438493900001
    2. '        
' → logprob: -6.626615524291992
    3. 'from' → logprob: -9.751615524291992
    4. ',' → logprob: -9.751615524291992
    5. '<|end|>' → logprob: -10.126615524291992
    6. '
' → logprob: -10.626615524291992
    7. ' from' → logprob: -10.626615524291992
    8. '   ' → logprob: -11.126615524291992
    9. 'import' → logprob: -11.626615524291992
    10. '        ' → logprob: -11.626615524291992

Token 589: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022940635681152344
    2. ' from' → logprob: -7.252294063568115
    3. ' n' → logprob: -7.627294063568115
    4. 'from' → logprob: -8.377294540405273
    5. 'n' → logprob: -8.627294540405273
    6. '
' → logprob: -9.377294540405273
    7. ' dp' → logprob: -9.502294540405273
    8. ' max' → logprob: -9.877294540405273
    9. 'dp' → logprob: -9.877294540405273
    10. '        
' → logprob: -10.002294540405273

Token 590: ' We' (ID: 1416)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.20134735107421875
    2. '       ' → logprob: -3.0763473510742188
    3. 'best' → logprob: -3.3263473510742188
    4. 'needed' → logprob: -3.5763473510742188
    5. 'available' → logprob: -3.8263473510742188
    6. ' from' → logprob: -4.951347351074219
    7. 'max' → logprob: -5.076347351074219
    8. 'dp' → logprob: -5.076347351074219
    9. 'possible' → logprob: -5.076347351074219
    10. 'n' → logprob: -5.076347351074219

Token 591: ' try' (ID: 2075)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.8069548606872559
    2. '       ' → logprob: -1.3069548606872559
    3. '   ' → logprob: -2.806954860687256
    4. 'def' → logprob: -3.306954860687256
    5. '    ' → logprob: -3.681954860687256
    6. 'can' → logprob: -3.931954860687256
    7. 'from' → logprob: -3.931954860687256
    8. ' need' → logprob: -4.056954860687256
    9. ' =' → logprob: -4.431954860687256
    10. ' want' → logprob: -4.431954860687256

Token 592: ' from' (ID: 591)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.1556813269853592
    2. 'all' → logprob: -2.0306813716888428
    3. '       ' → logprob: -4.780681133270264
    4. 'from' → logprob: -6.530681133270264
    5. 'import' → logprob: -6.905681133270264
    6. ' to' → logprob: -7.405681133270264
    7. ' from' → logprob: -8.030681610107422
    8. ':' → logprob: -8.155681610107422
    9. '   ' → logprob: -8.155681610107422
    10. ':
' → logprob: -8.655681610107422

Token 593: ' minimal' (ID: 19957)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9046238660812378
    2. '1' → logprob: -1.0296238660812378
    3. 'needed' → logprob: -2.0296239852905273
    4. ' ' → logprob: -3.0296239852905273
    5. ' needed' → logprob: -3.1546239852905273
    6. ' itertools' → logprob: -5.029623985290527
    7. 'sum' → logprob: -5.654623985290527
    8. 'min' → logprob: -6.029623985290527
    9. 'len' → logprob: -7.529623985290527
    10. '_needed' → logprob: -7.654623985290527

Token 594: ' needed' (ID: 6118)
  Prédit: ' healing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' healing' → logprob: -0.5533600449562073
    2. ' ' → logprob: -2.0533599853515625
    3. 'he' → logprob: -3.0533599853515625
    4. ' h' → logprob: -3.4283599853515625
    5. ' needed' → logprob: -3.8033599853515625
    6. ' sum' → logprob: -4.1783599853515625
    7. ' total' → logprob: -4.1783599853515625
    8. 'sum' → logprob: -4.4283599853515625
    9. ' possible' → logprob: -4.4283599853515625
    10. 'h' → logprob: -4.5533599853515625

Token 595: ' healing' (ID: 26726)
  Prédit: '_he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_he' → logprob: -0.3099285066127777
    2. '_hp' → logprob: -1.8099285364151
    3. '_needed' → logprob: -3.5599284172058105
    4. 'he' → logprob: -3.9349284172058105
    5. '   ' → logprob: -4.4349284172058105
    6. '_' → logprob: -5.0599284172058105
    7. '_h' → logprob: -5.3099284172058105
    8. ' healing' → logprob: -5.3099284172058105
    9. 'heal' → logprob: -5.8099284172058105
    10. '_amount' → logprob: -5.9349284172058105

Token 596: ' upward' (ID: 71327)
  Prédit: '_needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_needed' → logprob: -0.8125108480453491
    2. '       ' → logprob: -1.8125108480453491
    3. ':' → logprob: -2.1875109672546387
    4. ' to' → logprob: -2.3125109672546387
    5. ' needed' → logprob: -3.0625109672546387
    6. 'needed' → logprob: -3.8125109672546387
    7. '_to' → logprob: -4.062510967254639
    8. ' =' → logprob: -4.062510967254639
    9. '   ' → logprob: -4.187510967254639
    10. ',' → logprob: -4.312510967254639

Token 597: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038703777827322483
    2. ',' → logprob: -6.128870487213135
    3. ':' → logprob: -7.753870487213135
    4. '   ' → logprob: -8.253870010375977
    5. ' for' → logprob: -8.253870010375977
    6. '
' → logprob: -8.503870010375977
    7. '        
' → logprob: -9.253870010375977
    8. '      ' → logprob: -9.878870010375977
    9. 'for' → logprob: -10.378870010375977
    10. ':
' → logprob: -10.378870010375977

Token 598: ' minimal' (ID: 19957)
  Prédit: 'needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'needed' → logprob: -0.3254840075969696
    2. 'self' → logprob: -1.825484037399292
    3. ' needed' → logprob: -2.825484037399292
    4. 'sum' → logprob: -3.575484037399292
    5. 'max' → logprob: -4.950483798980713
    6. ' self' → logprob: -5.200483798980713
    7. ' sum' → logprob: -5.575483798980713
    8. '(' → logprob: -5.700483798980713
    9. 'min' → logprob: -5.825483798980713
    10. 'len' → logprob: -7.200483798980713

Token 599: ' subset' (ID: 58845)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.3209410011768341
    2. ' healing' → logprob: -2.5709409713745117
    3. 'needed' → logprob: -2.8209409713745117
    4. ' needed' → logprob: -3.5709409713745117
    5. '_needed' → logprob: -3.5709409713745117
    6. '_he' → logprob: -3.8209409713745117
    7. '       ' → logprob: -4.320940971374512
    8. '   ' → logprob: -5.070940971374512
    9. 'heal' → logprob: -5.195940971374512
    10. ' ' → logprob: -5.445940971374512

Token 600: ' sum' (ID: 4215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011153455823659897
    2. ',' → logprob: -5.136153221130371
    3. ':' → logprob: -6.761153221130371
    4. '   ' → logprob: -7.011153221130371
    5. '        
' → logprob: -7.261153221130371
    6. 's' → logprob: -8.636153221130371
    7. ' for' → logprob: -8.761153221130371
    8. 'def' → logprob: -8.761153221130371
    9. ' from' → logprob: -8.886153221130371
    10. ' =' → logprob: -9.011153221130371

Token 601: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005006870720535517
    2. ',' → logprob: -5.880006790161133
    3. 'from' → logprob: -7.630006790161133
    4. '   ' → logprob: -7.755006790161133
    5. ' from' → logprob: -8.255006790161133
    6. ' for' → logprob: -9.005006790161133
    7. 'def' → logprob: -9.005006790161133
    8. ':' → logprob: -9.005006790161133
    9. '
' → logprob: -9.380006790161133
    10. '        
' → logprob: -9.505006790161133

Token 602: ' covers' (ID: 17804)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -1.1370718479156494
    2. 'ex' → logprob: -2.0120718479156494
    3. ' covers' → logprob: -2.2620718479156494
    4. 'covers' → logprob: -2.2620718479156494
    5. 'is' → logprob: -2.3870718479156494
    6. ' is' → logprob: -2.7620718479156494
    7. 's' → logprob: -3.0120718479156494
    8. ' exceeds' → logprob: -3.2620718479156494
    9. ' >=' → logprob: -3.3870718479156494
    10. ' achieves' → logprob: -4.01207160949707

Token 603: ' needed' (ID: 6118)
  Prédit: 'needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'needed' → logprob: -0.2811591923236847
    2. ' needed' → logprob: -1.7811591625213623
    3. 'the' → logprob: -3.6561591625213623
    4. ' the' → logprob: -3.7811591625213623
    5. 'damage' → logprob: -4.031159400939941
    6. ' damage' → logprob: -4.906159400939941
    7. '   ' → logprob: -7.031159400939941
    8. '_needed' → logprob: -7.406159400939941
    9. ' required' → logprob: -8.406159400939941
    10. 'required' → logprob: -8.656159400939941

Token 604: '.

' (ID: 364)
  Prédit: '_hp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_hp' → logprob: -0.05139654129743576
    2. '_he' → logprob: -3.051396608352661
    3. 'hp' → logprob: -6.801396369934082
    4. '_' → logprob: -7.301396369934082
    5. '_damage' → logprob: -8.676396369934082
    6. ' =' → logprob: -8.926396369934082
    7. '   ' → logprob: -9.301396369934082
    8. '_loss' → logprob: -9.426396369934082
    9. 'heal' → logprob: -9.426396369934082
    10. '_p' → logprob: -9.551396369934082

Token 605: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005792465526610613
    2. 'from' → logprob: -8.750578880310059
    3. '   ' → logprob: -9.375578880310059
    4. ' from' → logprob: -9.625578880310059
    5. '        ' → logprob: -10.375578880310059
    6. ',' → logprob: -10.375578880310059
    7. 'n' → logprob: -10.500578880310059
    8. '      ' → logprob: -10.500578880310059
    9. ' for' → logprob: -10.625578880310059
    10. '        
' → logprob: -10.750578880310059

Token 606: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08043434470891953
    2. ' from' → logprob: -3.0804343223571777
    3. 'from' → logprob: -4.080434322357178
    4. ' n' → logprob: -4.955434322357178
    5. 'n' → logprob: -6.455434322357178
    6. 'dp' → logprob: -7.205434322357178
    7. 'possible' → logprob: -7.330434322357178
    8. ' dp' → logprob: -7.580434322357178
    9. '
' → logprob: -7.705434322357178
    10. ' possible' → logprob: -7.830434322357178

Token 607: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2623525857925415
    2. ' from' → logprob: -2.387352466583252
    3. 'from' → logprob: -2.387352466583252
    4. ' n' → logprob: -4.012352466583252
    5. 'def' → logprob: -5.012352466583252
    6. 'n' → logprob: -5.262352466583252
    7. 'possible' → logprob: -5.762352466583252
    8. 'dp' → logprob: -6.262352466583252
    9. 'best' → logprob: -6.637352466583252
    10. ' possible' → logprob: -6.762352466583252

Token 608: ' also' (ID: 1217)
  Prédit: ' pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pot' → logprob: -0.8881939649581909
    2. '       ' → logprob: -1.263193964958191
    3. ' from' → logprob: -1.763193964958191
    4. 'from' → logprob: -3.2631940841674805
    5. ' n' → logprob: -3.3881940841674805
    6. 'pot' → logprob: -4.1381940841674805
    7. ' if' → logprob: -4.7631940841674805
    8. ' for' → logprob: -5.1381940841674805
    9. ' max' → logprob: -5.5131940841674805
    10. 'n' → logprob: -5.6381940841674805

Token 609: ' must' (ID: 2804)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22898545861244202
    2. ' if' → logprob: -1.7289854288101196
    3. ' current' → logprob: -5.10398530960083
    4. ' max' → logprob: -5.22898530960083
    5. 'if' → logprob: -5.60398530960083
    6. '   ' → logprob: -6.10398530960083
    7. 'max' → logprob: -6.22898530960083
    8. 'def' → logprob: -6.97898530960083
    9. 'current' → logprob: -7.35398530960083
    10. ' available' → logprob: -7.35398530960083

Token 610: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.47019702196121216
    2. '       ' → logprob: -2.0951969623565674
    3. ' consider' → logprob: -2.7201969623565674
    4. ' avoid' → logprob: -2.8451969623565674
    5. ' ensure' → logprob: -3.7201969623565674
    6. ' be' → logprob: -3.8451969623565674
    7. ' check' → logprob: -4.2201972007751465
    8. 'not' → logprob: -4.2201972007751465
    9. 'consider' → logprob: -5.0951972007751465
    10. ' respect' → logprob: -5.0951972007751465

Token 611: ' exceed' (ID: 23275)
  Prédit: ' exceed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exceed' → logprob: -0.06118878722190857
    2. 'ex' → logprob: -3.4361886978149414
    3. 'over' → logprob: -4.936188697814941
    4. ' over' → logprob: -5.561188697814941
    5. ' allow' → logprob: -5.686188697814941
    6. ' use' → logprob: -6.061188697814941
    7. 'allow' → logprob: -6.311188697814941
    8. ' cause' → logprob: -6.811188697814941
    9. 'overflow' → logprob: -6.811188697814941
    10. ' overflow' → logprob: -6.936188697814941

Token 612: ' hp' (ID: 37774)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.38732489943504333
    2. 'self' → logprob: -1.1373249292373657
    3. ' the' → logprob: -8.012325286865234
    4. ' hp' → logprob: -10.262325286865234
    5. '	self' → logprob: -10.887325286865234
    6. '   ' → logprob: -11.012325286865234
    7. '(self' → logprob: -11.137325286865234
    8. 'hp' → logprob: -11.387325286865234
    9. 'the' → logprob: -12.137325286865234
    10. '       ' → logprob: -12.262325286865234

Token 613: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.009339874610304832
    2. '       ' → logprob: -5.634339809417725
    3. 'max' → logprob: -6.759339809417725
    4. '_' → logprob: -6.884339809417725
    5. ' +' → logprob: -7.134339809417725
    6. '   ' → logprob: -7.259339809417725
    7. '+' → logprob: -7.634339809417725
    8. ' =' → logprob: -8.384340286254883
    9. '    ' → logprob: -8.634340286254883
    10. '_init' → logprob: -8.759340286254883

Token 614: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023918582126498222
    2. '
' → logprob: -3.898918628692627
    3. '        
' → logprob: -6.273918628692627
    4. ',' → logprob: -8.023918151855469
    5. '<|end|>' → logprob: -8.648918151855469
    6. '   ' → logprob: -8.773918151855469
    7. 'def' → logprob: -9.273918151855469
    8. '  
' → logprob: -9.273918151855469
    9. '    
' → logprob: -9.648918151855469
    10. ':' → logprob: -10.023918151855469

Token 615: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012973772827535868
    2. '        
' → logprob: -7.001297473907471
    3. '
' → logprob: -8.376296997070312
    4. '<|end|>' → logprob: -9.501296997070312
    5. '   ' → logprob: -10.501296997070312
    6. 'from' → logprob: -12.001296997070312
    7. ',' → logprob: -12.126296997070312
    8. '    
' → logprob: -12.251296997070312
    9. '        ' → logprob: -12.376296997070312
    10. '  
' → logprob: -12.501296997070312

Token 616: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03331034258008003
    2. 'from' → logprob: -5.408310413360596
    3. 'max' → logprob: -5.533310413360596
    4. 'possible' → logprob: -6.158310413360596
    5. 'used' → logprob: -6.283310413360596
    6. ' from' → logprob: -6.283310413360596
    7. ' max' → logprob: -6.408310413360596
    8. ' n' → logprob: -6.533310413360596
    9. 'needed' → logprob: -6.533310413360596
    10. 'n' → logprob: -6.533310413360596

Token 617: ' We'll' (ID: 46830)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003237482625991106
    2. ' from' → logprob: -6.628237247467041
    3. 'from' → logprob: -7.003237247467041
    4. 'def' → logprob: -8.3782377243042
    5. 'possible' → logprob: -8.5032377243042
    6. ' possible' → logprob: -8.8782377243042
    7. 'dp' → logprob: -9.1282377243042
    8. ' dp' → logprob: -9.2532377243042
    9. '   ' → logprob: -10.0032377243042
    10. 'n' → logprob: -10.8782377243042

Token 618: ' consider' (ID: 3331)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0823886394500732
    2. 'from' → logprob: -1.2073886394500732
    3. 'try' → logprob: -2.2073886394500732
    4. 'def' → logprob: -2.3323886394500732
    5. '   ' → logprob: -2.8323886394500732
    6. 'implement' → logprob: -3.2073886394500732
    7. 'use' → logprob: -4.082388877868652
    8. 'continue' → logprob: -5.082388877868652
    9. 'simulate' → logprob: -5.457388877868652
    10. 'find' → logprob: -5.457388877868652

Token 619: ' subsets' (ID: 165377)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.29957130551338196
    2. 'all' → logprob: -2.5495712757110596
    3. 'used' → logprob: -2.7995712757110596
    4. 'possible' → logprob: -3.4245712757110596
    5. '   ' → logprob: -3.6745712757110596
    6. 'pot' → logprob: -4.299571514129639
    7. ' from' → logprob: -4.924571514129639
    8. 'sub' → logprob: -4.924571514129639
    9. 'n' → logprob: -4.924571514129639
    10. 'import' → logprob: -5.424571514129639

Token 620: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09641365706920624
    2. ' from' → logprob: -3.2214136123657227
    3. 'from' → logprob: -3.3464136123657227
    4. ',' → logprob: -5.471413612365723
    5. '   ' → logprob: -5.471413612365723
    6. '
' → logprob: -6.096413612365723
    7. 'import' → logprob: -6.596413612365723
    8. ':' → logprob: -6.721413612365723
    9. '        
' → logprob: -7.096413612365723
    10. ' subsets' → logprob: -7.471413612365723

Token 621: ' pruning' (ID: 135775)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9057996869087219
    2. 'pot' → logprob: -1.4057996273040771
    3. 'import' → logprob: -1.9057996273040771
    4. 'all' → logprob: -3.155799627304077
    5. 'bit' → logprob: -3.530799627304077
    6. 'size' → logprob: -3.530799627304077
    7. 'sum' → logprob: -3.905799627304077
    8. ' pot' → logprob: -4.155799865722656
    9. 'powers' → logprob: -4.405799865722656
    10. 'len' → logprob: -4.530799865722656

Token 622: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002328552072867751
    2. '   ' → logprob: -7.127328395843506
    3. 'from' → logprob: -7.752328395843506
    4. '
' → logprob: -8.502328872680664
    5. ',' → logprob: -8.627328872680664
    6. ' from' → logprob: -8.877328872680664
    7. '<|end|>' → logprob: -9.502328872680664
    8. ':' → logprob: -9.502328872680664
    9. 'import' → logprob: -9.627328872680664
    10. '        
' → logprob: -9.877328872680664

Token 623: ' not' (ID: 625)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.6529734134674072
    2. 'min' → logprob: -0.9029734134674072
    3. 'avoid' → logprob: -3.9029734134674072
    4. 'opt' → logprob: -4.652973175048828
    5. ' find' → logprob: -4.902973175048828
    6. 'use' → logprob: -4.902973175048828
    7. ' minimize' → logprob: -5.277973175048828
    8. 'select' → logprob: -5.527973175048828
    9. 'choose' → logprob: -6.027973175048828
    10. 'import' → logprob: -6.152973175048828

Token 624: ' exceed' (ID: 23275)
  Prédit: ' exceed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exceed' → logprob: -0.9651229381561279
    2. ' use' → logprob: -1.090122938156128
    3. 'use' → logprob: -1.590122938156128
    4. 'ex' → logprob: -2.965122938156128
    5. 'over' → logprob: -4.840123176574707
    6. 'import' → logprob: -6.090123176574707
    7. 'expl' → logprob: -6.215123176574707
    8. 'consider' → logprob: -6.340123176574707
    9. ' cause' → logprob: -6.590123176574707
    10. ' over' → logprob: -6.715123176574707

Token 625: ' hp' (ID: 37774)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5835545063018799
    2. 'self' → logprob: -0.8335545063018799
    3. ' the' → logprob: -5.333554267883301
    4. ' needed' → logprob: -7.333554267883301
    5. '   ' → logprob: -7.958554267883301
    6. 'the' → logprob: -8.0835542678833
    7. 'needed' → logprob: -8.0835542678833
    8. ' ' → logprob: -8.2085542678833
    9. '       ' → logprob: -8.8335542678833
    10. '```' → logprob: -9.3335542678833

Token 626: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.35535871982574463
    2. '       ' → logprob: -1.7303587198257446
    3. '_' → logprob: -3.105358600616455
    4. ' _' → logprob: -3.355358600616455
    5. 'max' → logprob: -4.355358600616455
    6. '   ' → logprob: -5.105358600616455
    7. '_MAX' → logprob: -5.730358600616455
    8. '           ' → logprob: -5.730358600616455
    9. '    ' → logprob: -6.230358600616455
    10. ')' → logprob: -6.355358600616455

Token 627: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017135072499513626
    2. ',' → logprob: -4.767135143280029
    3. '<|end|>' → logprob: -5.892135143280029
    4. ':' → logprob: -6.392135143280029
    5. '   ' → logprob: -7.017135143280029
    6. '.' → logprob: -7.017135143280029
    7. '<|end|>' → logprob: -7.517135143280029
    8. '        
' → logprob: -7.767135143280029
    9. 'from' → logprob: -8.267134666442871
    10. '
' → logprob: -8.642134666442871

Token 628: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009143244242295623
    2. '        
' → logprob: -7.250914096832275
    3. '
' → logprob: -9.875914573669434
    4. 'from' → logprob: -10.625914573669434
    5. '<|end|>' → logprob: -10.625914573669434
    6. '   ' → logprob: -10.875914573669434
    7. 'import' → logprob: -10.875914573669434
    8. 'n' → logprob: -11.375914573669434
    9. '        ' → logprob: -11.750914573669434
    10. ' from' → logprob: -12.125914573669434

Token 629: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0509641095995903
    2. 'from' (adapté à ' from') → logprob: -4.050963878631592
    3. ' from' → logprob: -4.675963878631592
    4. 'best' → logprob: -5.175963878631592
    5. ' n' → logprob: -5.425963878631592
    6. ' best' → logprob: -5.425963878631592
    7. 'n' → logprob: -5.675963878631592
    8. 'dp' → logprob: -7.175963878631592
    9. 'used' → logprob: -7.425963878631592
    10. 'def' → logprob: -7.425963878631592

Token 630: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.07958921045064926
    2. 'it' → logprob: -2.5795891284942627
    3. 'collections' → logprob: -7.954589366912842
    4. 'heap' → logprob: -9.204588890075684
    5. '_it' → logprob: -9.329588890075684
    6. 'math' → logprob: -9.829588890075684
    7. 'copy' → logprob: -10.204588890075684
    8. 'operator' → logprob: -10.829588890075684
    9. 'bis' → logprob: -11.704588890075684
    10. ' functools' → logprob: -11.954588890075684

Token 631: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4751003086566925
    2. ' import' → logprob: -0.9751002788543701
    3. '.' → logprob: -8.22510051727295
    4. '	import' → logprob: -8.22510051727295
    5. '.com' → logprob: -8.35010051727295
    6. '<|end|>' → logprob: -8.97510051727295
    7. '.import' → logprob: -10.10010051727295
    8. 'ertools' → logprob: -10.85010051727295
    9. '_import' → logprob: -11.10010051727295
    10. 'com' → logprob: -11.22510051727295

Token 632: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.002738781739026308
    2. ' combinations' → logprob: -6.002738952636719
    3. 'chain' → logprob: -8.252738952636719
    4. 'comb' → logprob: -13.502738952636719
    5. ' chain' → logprob: -14.377738952636719
    6. 'powers' → logprob: -15.877738952636719
    7. 'combine' → logprob: -16.00273895263672
    8. '	com' → logprob: -16.12773895263672
    9. '```' → logprob: -17.00273895263672
    10. 'compress' → logprob: -17.00273895263672

Token 633: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15002380311489105
    2. '
' → logprob: -2.7750236988067627
    3. '        
' → logprob: -4.150023937225342
    4. ',' → logprob: -4.400023937225342
    5. '<|end|>' → logprob: -4.525023937225342
    6. ' 
' → logprob: -4.525023937225342
    7. '   ' → logprob: -5.025023937225342
    8. '  
' → logprob: -5.650023937225342
    9. ' for' → logprob: -5.775023937225342
    10. ' ' → logprob: -5.900023937225342

Token 634: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04289092868566513
    2. '        
' → logprob: -4.042891025543213
    3. ' 
' → logprob: -5.167891025543213
    4. ',' → logprob: -5.417891025543213
    5. '   ' → logprob: -6.042891025543213
    6. '
' → logprob: -6.042891025543213
    7. ' ' → logprob: -6.667891025543213
    8. '  
' → logprob: -6.917891025543213
    9. ' for' → logprob: -6.917891025543213
    10. '    ' → logprob: -7.042891025543213

Token 635: ' pot' (ID: 3208)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42136892676353455
    2. ' best' → logprob: -1.421368956565857
    3. ' for' → logprob: -3.9213688373565674
    4. ' max' → logprob: -4.0463690757751465
    5. ' result' → logprob: -4.1713690757751465
    6. '
' → logprob: -4.6713690757751465
    7. 'best' → logprob: -4.6713690757751465
    8. '        
' → logprob: -4.7963690757751465
    9. 'result' → logprob: -5.4213690757751465
    10. '   ' → logprob: -5.5463690757751465

Token 636: '_he' (ID: 94257)
  Prédit: 'ions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ions' → logprob: -7.107425062713446e-06
    2. 'ion' → logprob: -12.750006675720215
    3. '```' → logprob: -13.500006675720215
    4. 'i' → logprob: -13.750006675720215
    5. 'IONS' → logprob: -14.250006675720215
    6. '   ' → logprob: -14.500006675720215
    7. 's' → logprob: -16.00000762939453
    8. '
' → logprob: -16.75000762939453
    9. 'ons' → logprob: -17.12500762939453
    10. 'io' → logprob: -17.25000762939453

Token 637: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.43418383598327637
    2. 'al' → logprob: -1.0591838359832764
    3. 'aling' → logprob: -6.0591840744018555
    4. 'alth' → logprob: -7.0591840744018555
    5. 'l' → logprob: -7.3091840744018555
    6. 'ights' → logprob: -8.059184074401855
    7. 'alt' → logprob: -8.559184074401855
    8. 'alts' → logprob: -8.559184074401855
    9. 'ls' → logprob: -8.684184074401855
    10. 'r' → logprob: -8.684184074401855

Token 638: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32908502221107483
    2. '=' → logprob: -1.3290849924087524
    3. 's' → logprob: -4.829084873199463
    4. '=[' → logprob: -5.954084873199463
    5. 'als' → logprob: -6.454084873199463
    6. '   ' → logprob: -6.829084873199463
    7. 'al' → logprob: -7.079084873199463
    8. '=[]' → logprob: -7.454084873199463
    9. '[]' → logprob: -8.579085350036621
    10. '[' → logprob: -9.079085350036621

Token 639: ' [' (ID: 723)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.4193972051143646
    2. ' [' → logprob: -1.419397234916687
    3. '[' → logprob: -2.4193971157073975
    4. '[item' → logprob: -5.169397354125977
    5. '[i' → logprob: -6.419397354125977
    6. '[self' → logprob: -6.544397354125977
    7. '[pos' → logprob: -6.669397354125977
    8. '[obj' → logprob: -7.794397354125977
    9. '[token' → logprob: -7.919397354125977
    10. '[val' → logprob: -9.169397354125977

Token 640: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.255023956531659e-05
    2. 'pot' → logprob: -9.625072479248047
    3. ' p' → logprob: -12.750072479248047
    4. ' potion' → logprob: -13.750072479248047
    5. 'Potion' → logprob: -13.875072479248047
    6. '(p' → logprob: -14.375072479248047
    7. 'pt' → logprob: -14.750072479248047
    8. '	p' → logprob: -16.125072479248047
    9. 'po' → logprob: -16.500072479248047
    10. '   ' → logprob: -16.875072479248047

Token 641: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.10156378895044327
    2. 'otion' → logprob: -2.3515636920928955
    3. '.hp' → logprob: -7.351563930511475
    4. '.' → logprob: -9.101563453674316
    5. '.on' → logprob: -9.476563453674316
    6. 'p' → logprob: -9.726563453674316
    7. 'o' → logprob: -9.851563453674316
    8. '.He' → logprob: -9.976563453674316
    9. 'ion' → logprob: -10.101563453674316
    10. 'oton' → logprob: -10.351563453674316

Token 642: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -1.747814349073451e-05
    2. '
' → logprob: -12.625017166137695
    3. 'alp' → logprob: -12.625017166137695
    4. '```' → logprob: -13.000017166137695
    5. 'el' → logprob: -13.125017166137695
    6. 'l' → logprob: -14.000017166137695
    7. 'alth' → logprob: -14.000017166137695
    8. 'als' → logprob: -14.250017166137695
    9. 'AL' → logprob: -14.750017166137695
    10. 'a' → logprob: -14.750017166137695

Token 643: '_amount' (ID: 29145)
  Prédit: '_amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amount' → logprob: -7.719917630311102e-05
    2. 't' → logprob: -9.875077247619629
    3. 'amount' → logprob: -11.625077247619629
    4. '_amt' → logprob: -11.875077247619629
    5. '_' → logprob: -12.375077247619629
    6. 'al' → logprob: -13.125077247619629
    7. '_AMOUNT' → logprob: -13.875077247619629
    8. 'l' → logprob: -14.250077247619629
    9. 'd' → logprob: -15.125077247619629
    10. 's' → logprob: -15.250077247619629

Token 644: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0021311102900654078
    2. 'for' → logprob: -6.25213098526001
    3. '       ' → logprob: -9.002131462097168
    4. '        ' → logprob: -10.252131462097168
    5. ' ' → logprob: -11.002131462097168
    6. ']' → logprob: -11.377131462097168
    7. ',' → logprob: -12.502131462097168
    8. ' ]' → logprob: -12.627131462097168
    9. '           ' → logprob: -12.752131462097168
    10. '	for' → logprob: -13.502131462097168

Token 645: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0009348054882138968
    2. ' p' → logprob: -7.000934600830078
    3. 'self' → logprob: -10.750934600830078
    4. ' self' → logprob: -14.000934600830078
    5. '	p' → logprob: -14.875934600830078
    6. '
' → logprob: -15.375934600830078
    7. '_p' → logprob: -15.625934600830078
    8. '   ' → logprob: -17.000934600830078
    9. '

' → logprob: -17.000934600830078
    10. ' ' → logprob: -17.000934600830078

Token 646: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6540568470954895
    2. ' in' → logprob: -0.7790568470954895
    3. 'self' → logprob: -3.9040567874908447
    4. ' self' → logprob: -7.779057025909424
    5. 'p' → logprob: -7.904057025909424
    6. ' p' → logprob: -9.279056549072266
    7. ' ' → logprob: -9.904056549072266
    8. '
' → logprob: -11.029056549072266
    9. '<|end|>' → logprob: -11.029056549072266
    10. '   ' → logprob: -11.154056549072266

Token 647: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00010914575977949426
    2. ' self' → logprob: -9.12510871887207
    3. '(self' → logprob: -17.00010871887207
    4. '   ' → logprob: -17.62510871887207
    5. '
' → logprob: -17.87510871887207
    6. '	self' → logprob: -18.75010871887207
    7. ' ' → logprob: -18.87510871887207
    8. '       ' → logprob: -19.00010871887207
    9. '[self' → logprob: -19.00010871887207
    10. '

' → logprob: -19.50010871887207

Token 648: '.p' (ID: 1201)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.5816571712493896
    2. '.p' → logprob: -0.8316571712493896
    3. 'p' → logprob: -5.206657409667969
    4. 'pots' → logprob: -9.081657409667969
    5. ' pot' → logprob: -10.081657409667969
    6. '_p' → logprob: -11.206657409667969
    7. '	p' → logprob: -12.206657409667969
    8. ' ' → logprob: -12.706657409667969
    9. 'otions' → logprob: -12.956657409667969
    10. 'ponent' → logprob: -12.956657409667969

Token 649: 'otions' (ID: 54764)
  Prédit: 'otions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'otions' → logprob: -0.0005969968624413013
    2. 't' → logprob: -8.50059700012207
    3. 'ot' → logprob: -8.62559700012207
    4. 'pot' → logprob: -9.12559700012207
    5. 'otion' → logprob: -11.00059700012207
    6. 's' → logprob: -11.25059700012207
    7. '
' → logprob: -11.50059700012207
    8. '```' → logprob: -11.75059700012207
    9. '>' → logprob: -11.87559700012207
    10. 'ptions' → logprob: -11.87559700012207

Token 650: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00771025475114584
    2. ']
' → logprob: -5.0077104568481445
    3. '       ' → logprob: -7.1327104568481445
    4. ']
' → logprob: -9.257710456848145
    5. ' ]' → logprob: -9.507710456848145
    6. ']

' → logprob: -10.757710456848145
    7. ',' → logprob: -13.507710456848145
    8. ' ]
' → logprob: -13.632710456848145
    9. ']

' → logprob: -14.007710456848145
    10. ')' → logprob: -15.132710456848145

Token 651: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015687424689531326
    2. ' for' → logprob: -4.390687465667725
    3. '        
' → logprob: -6.890687465667725
    4. 'for' → logprob: -6.890687465667725
    5. '
' → logprob: -7.765687465667725
    6. '   ' → logprob: -8.015686988830566
    7. 'n' → logprob: -9.265686988830566
    8. ',' → logprob: -9.765686988830566
    9. ' next' → logprob: -10.515686988830566
    10. '           ' → logprob: -10.515686988830566

Token 652: ' #' (ID: 1069)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.509707510471344
    2. 'for' → logprob: -2.009707450866699
    3. ' best' → logprob: -2.134707450866699
    4. '       ' → logprob: -2.759707450866699
    5. ' for' → logprob: -3.259707450866699
    6. 'max' → logprob: -4.009707450866699
    7. 'n' → logprob: -5.134707450866699
    8. 'min' → logprob: -5.259707450866699
    9. 'result' → logprob: -5.384707450866699
    10. ' max' → logprob: -6.009707450866699

Token 653: ' If' (ID: 1843)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.6651711463928223
    2. ' best' → logprob: -1.2901711463928223
    3. 'for' → logprob: -2.2901711463928223
    4. ' for' → logprob: -2.7901711463928223
    5. 'max' → logprob: -4.040171146392822
    6. ' max' → logprob: -4.915171146392822
    7. 'n' → logprob: -5.290171146392822
    8. 'min' → logprob: -5.790171146392822
    9. ' min' → logprob: -5.915171146392822
    10. '   ' → logprob: -6.040171146392822

Token 654: ' no' (ID: 860)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8843676447868347
    2. 'max' → logprob: -1.1343677043914795
    3. 'needed' → logprob: -2.1343677043914795
    4. ' self' → logprob: -3.2593677043914795
    5. 'sum' → logprob: -3.5093677043914795
    6. 'not' → logprob: -3.5093677043914795
    7. ' needed' → logprob: -4.0093674659729
    8. ' max' → logprob: -4.5093674659729
    9. 'pot' → logprob: -4.8843674659729
    10. ' not' → logprob: -5.5093674659729

Token 655: ' pot' (ID: 3208)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.2815682888031006
    2. ' pot' → logprob: -1.4065682888031006
    3. 'self' → logprob: -8.90656852722168
    4. ' needed' → logprob: -9.90656852722168
    5. 'p' → logprob: -10.15656852722168
    6. ' ' → logprob: -10.28156852722168
    7. 'needed' → logprob: -10.53156852722168
    8. ' self' → logprob: -10.65656852722168
    9. 's' → logprob: -11.03156852722168
    10. '```' → logprob: -11.03156852722168

Token 656: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.4050145149230957
    2. '_he' → logprob: -1.1550145149230957
    3. 'he' → logprob: -4.030014514923096
    4. 'ons' → logprob: -9.780014038085938
    5. 's' → logprob: -10.405014038085938
    6. '_' → logprob: -10.405014038085938
    7. 'ations' → logprob: -11.030014038085938
    8. '```' → logprob: -11.530014038085938
    9. '_h' → logprob: -11.655014038085938
    10. 'otions' → logprob: -11.655014038085938

Token 657: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018219047924503684
    2. ',' → logprob: -7.126821994781494
    3. '==' → logprob: -8.251821517944336
    4. ':return' → logprob: -8.376821517944336
    5. ':
' → logprob: -8.501821517944336
    6. ' or' → logprob: -8.751821517944336
    7. ' ==' → logprob: -10.501821517944336
    8. ' and' → logprob: -10.751821517944336
    9. '.' → logprob: -11.001821517944336
    10. '   ' → logprob: -11.001821517944336

Token 658: ' just' (ID: 1327)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6957625150680542
    2. 'if' → logprob: -1.1957625150680542
    3. 'return' → logprob: -2.3207626342773438
    4. ' return' → logprob: -2.4457626342773438
    5. '       ' → logprob: -4.320762634277344
    6. '           ' → logprob: -7.945762634277344
    7. '   ' → logprob: -8.945762634277344
    8. '        ' → logprob: -9.445762634277344
    9. '    ' → logprob: -10.445762634277344
    10. ' pass' → logprob: -10.945762634277344

Token 659: ' skip' (ID: 16677)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4792901277542114
    2. ' return' → logprob: -0.9792901277542114
    3. 'if' → logprob: -6.229290008544922
    4. ' if' → logprob: -6.854290008544922
    5. 'pass' → logprob: -7.104290008544922
    6. ' pass' → logprob: -7.479290008544922
    7. '   ' → logprob: -8.229290008544922
    8. '           ' → logprob: -8.229290008544922
    9. '       ' → logprob: -9.354290008544922
    10. ':return' → logprob: -10.104290008544922

Token 660: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006857693195343018
    2. '
' → logprob: -5.506857872009277
    3. ',' → logprob: -7.131857872009277
    4. '           ' → logprob: -7.381857872009277
    5. ' if' → logprob: -7.756857872009277
    6. '        
' → logprob: -8.006857872009277
    7. '.' → logprob: -8.756857872009277
    8. ' and' → logprob: -9.131857872009277
    9. '   ' → logprob: -9.381857872009277
    10. '<|end|>' → logprob: -9.631857872009277

Token 661: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1083855926990509
    2. '        
' → logprob: -2.9833855628967285
    3. ' 
' → logprob: -4.1083855628967285
    4. '
' → logprob: -4.3583855628967285
    5. ' if' → logprob: -4.4833855628967285
    6. '    
' → logprob: -5.8583855628967285
    7. '  
' → logprob: -5.9833855628967285
    8. 'if' → logprob: -6.6083855628967285
    9. ',' → logprob: -7.1083855628967285
    10. '   ' → logprob: -7.3583855628967285

Token 662: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.37953710556030273
    2. '       ' → logprob: -1.3795371055603027
    3. 'if' (adapté à ' if') → logprob: -2.7545371055603027
    4. 'return' → logprob: -9.129537582397461
    5. '   ' → logprob: -9.254537582397461
    6. ' return' → logprob: -9.254537582397461
    7. '        
' → logprob: -9.504537582397461
    8. '
' → logprob: -10.629537582397461
    9. 'n' → logprob: -11.129537582397461
    10. ' 
' → logprob: -11.379537582397461

Token 663: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.713293194770813
    2. 'self' → logprob: -1.338293194770813
    3. ' self' → logprob: -1.588293194770813
    4. 'not' → logprob: -3.2132930755615234
    5. ' len' → logprob: -6.463293075561523
    6. 'len' → logprob: -6.463293075561523
    7. ' ' → logprob: -11.088293075561523
    8. '	self' → logprob: -11.588293075561523
    9. '   ' → logprob: -11.963293075561523
    10. ' False' → logprob: -12.213293075561523

Token 664: ' pot' (ID: 3208)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.28231602907180786
    2. ' self' → logprob: -1.532315969467163
    3. 'pot' → logprob: -4.032316207885742
    4. ' pot' → logprob: -4.407316207885742
    5. ' ' → logprob: -12.282316207885742
    6. '	self' → logprob: -13.657316207885742
    7. ' ' → logprob: -14.282316207885742
    8. '```' → logprob: -14.282316207885742
    9. '(self' → logprob: -14.657316207885742
    10. 'sel' → logprob: -15.157316207885742

Token 665: '_he' (ID: 94257)
  Prédit: 'ions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.023278091102838516
    2. 'otions' → logprob: -3.773277997970581
    3. 's' → logprob: -12.02327823638916
    4. 'utions' → logprob: -12.39827823638916
    5. '   ' → logprob: -12.52327823638916
    6. 't' → logprob: -12.64827823638916
    7. 'ations' → logprob: -13.02327823638916
    8. '_' → logprob: -13.02327823638916
    9. 'IONS' → logprob: -13.27327823638916
    10. 'itions' → logprob: -13.39827823638916

Token 666: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.6433518528938293
    2. 'al' → logprob: -1.1433517932891846
    3. 'ions' → logprob: -2.7683517932891846
    4. 'l' → logprob: -3.5183517932891846
    5. 'otions' → logprob: -4.018352031707764
    6. 't' → logprob: -4.268352031707764
    7. 'alt' → logprob: -5.143352031707764
    8. 'pot' → logprob: -5.143352031707764
    9. 'lp' → logprob: -5.268352031707764
    10. 's' → logprob: -5.768352031707764

Token 667: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001545214676298201
    2. ':
' → logprob: -7.001545429229736
    3. ':return' → logprob: -7.376545429229736
    4. ' :' → logprob: -11.876544952392578
    5. 'return' → logprob: -14.751544952392578
    6. ':

' → logprob: -16.126544952392578
    7. '):' → logprob: -16.251544952392578
    8. ' or' → logprob: -16.251544952392578
    9. ':
' → logprob: -16.376544952392578
    10. ' return' → logprob: -16.501544952392578

Token 668: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0024781543761491776
    2. ':' → logprob: -6.752478122711182
    3. ':
' → logprob: -7.252478122711182
    4. 'return' → logprob: -8.00247859954834
    5. ':return' → logprob: -8.75247859954834
    6. ' return' → logprob: -9.87747859954834
    7. '       ' → logprob: -10.62747859954834
    8. '
' → logprob: -11.62747859954834
    9. '               ' → logprob: -12.12747859954834
    10. '   ' → logprob: -12.62747859954834

Token 669: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7947406768798828
    2. '           ' → logprob: -1.2947406768798828
    3. ' return' → logprob: -1.2947406768798828
    4. '       ' → logprob: -8.544740676879883
    5. '	return' → logprob: -10.044740676879883
    6. '
' → logprob: -10.544740676879883
    7. ':return' → logprob: -10.669740676879883
    8. '               ' → logprob: -10.794740676879883
    9. '   ' → logprob: -10.919740676879883
    10. '{return' → logprob: -11.669740676879883

Token 670: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.003954529762268
    2. '
' → logprob: -1.378954529762268
    3. ' None' → logprob: -1.753954529762268
    4. 'None' → logprob: -2.3789544105529785
    5. '  
' → logprob: -2.6289544105529785
    6. ' ' → logprob: -3.6289544105529785
    7. '0' → logprob: -5.3789544105529785
    8. '        
' → logprob: -5.5039544105529785
    9. '    
' → logprob: -5.8789544105529785
    10. '\n' → logprob: -6.6289544105529785

Token 671: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014545880258083344
    2. ' for' → logprob: -5.389545917510986
    3. '        
' → logprob: -5.764545917510986
    4. '
' → logprob: -6.014545917510986
    5. 'for' → logprob: -6.014545917510986
    6. '   ' → logprob: -6.889545917510986
    7. '    
' → logprob: -8.264545440673828
    8. '```' → logprob: -8.264545440673828
    9. '  
' → logprob: -8.889545440673828
    10. 'n' → logprob: -10.139545440673828

Token 672: ' max' (ID: 2999)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24081560969352722
    2. ' for' → logprob: -1.7408156394958496
    3. 'for' → logprob: -4.36581563949585
    4. ' best' → logprob: -4.74081563949585
    5. '        
' → logprob: -5.74081563949585
    6. 'best' → logprob: -5.86581563949585
    7. ' max' → logprob: -5.99081563949585
    8. 'max' (adapté à ' max') → logprob: -6.36581563949585
    9. ' possible' → logprob: -6.99081563949585
    10. 'n' → logprob: -6.99081563949585

Token 673: '_he' (ID: 94257)
  Prédit: '_he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_he' → logprob: -0.060022179037332535
    2. '_' → logprob: -4.185022354125977
    3. '_hp' → logprob: -4.185022354125977
    4. '_use' → logprob: -4.810022354125977
    5. '_needed' → logprob: -5.060022354125977
    6. '_subset' → logprob: -5.810022354125977
    7. '_sum' → logprob: -5.935022354125977
    8. '_restore' → logprob: -6.310022354125977
    9. '_h' → logprob: -6.935022354125977
    10. '_health' → logprob: -7.435022354125977

Token 674: 'aling' (ID: 7330)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.010343351401388645
    2. 'aling' → logprob: -4.635343551635742
    3. 'alp' → logprob: -8.385343551635742
    4. 'als' → logprob: -8.760343551635742
    5. '```' → logprob: -9.885343551635742
    6. 'alth' → logprob: -10.010343551635742
    7. 'alable' → logprob: -10.135343551635742
    8. 'aled' → logprob: -11.385343551635742
    9. 'alc' → logprob: -11.760343551635742
    10. 'el' → logprob: -12.197843551635742

Token 675: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2521100342273712
    2. '=' → logprob: -1.5021100044250488
    3. '_' → logprob: -10.002110481262207
    4. ',' → logprob: -10.002110481262207
    5. ' ' → logprob: -10.377110481262207
    6. '_possible' → logprob: -11.127110481262207
    7. '   ' → logprob: -11.627110481262207
    8. '=int' → logprob: -12.627110481262207
    9. '=[]' → logprob: -12.752110481262207
    10. '_needed' → logprob: -13.002110481262207

Token 676: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5960709452629089
    2. '0' → logprob: -0.8460709452629089
    3. 'sum' → logprob: -4.096070766448975
    4. ' self' → logprob: -6.096070766448975
    5. 'max' → logprob: -7.471070766448975
    6. ' ' → logprob: -8.471071243286133
    7. ' sum' → logprob: -9.471071243286133
    8. 'min' → logprob: -9.471071243286133
    9. 'float' → logprob: -10.221071243286133
    10. '   ' → logprob: -11.471071243286133

Token 677: '0' (ID: 15)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47779250144958496
    2. '0' → logprob: -1.227792501449585
    3. 'sum' → logprob: -2.477792501449585
    4. 'min' → logprob: -6.227792739868164
    5. 'max' → logprob: -6.977792739868164
    6. ' self' → logprob: -10.477792739868164
    7. 'float' → logprob: -11.102792739868164
    8. '-' → logprob: -11.977792739868164
    9. '[self' → logprob: -12.352792739868164
    10. ' sum' → logprob: -12.477792739868164

Token 678: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0968162789940834
    2. '
' → logprob: -3.346816301345825
    3. ' for' → logprob: -3.971816301345825
    4. '<|end|>' → logprob: -4.221816062927246
    5. '        
' → logprob: -4.846816062927246
    6. ',' → logprob: -5.346816062927246
    7. ' 
' → logprob: -5.721816062927246
    8. '  
' → logprob: -6.346816062927246
    9. ' ' → logprob: -6.721816062927246
    10. '        ' → logprob: -6.721816062927246

Token 679: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03447457775473595
    2. ' for' → logprob: -3.6594746112823486
    3. '<|end|>' → logprob: -5.6594743728637695
    4. '
' → logprob: -6.6594743728637695
    5. '        
' → logprob: -7.1594743728637695
    6. ',' → logprob: -7.4094743728637695
    7. '        ' → logprob: -8.03447437286377
    8. 'for' → logprob: -8.15947437286377
    9. ' ' → logprob: -8.15947437286377
    10. ' 
' → logprob: -8.65947437286377

Token 680: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.051049407571554184
    2. 'chosen' → logprob: -3.5510494709014893
    3. 'used' → logprob: -4.42604923248291
    4. ' best' → logprob: -5.92604923248291
    5. 'subset' → logprob: -6.17604923248291
    6. 'for' → logprob: -6.17604923248291
    7. 'selected' → logprob: -7.05104923248291
    8. ' chosen' → logprob: -8.05104923248291
    9. 'use' → logprob: -8.67604923248291
    10. 'min' → logprob: -8.67604923248291

Token 681: '_subset' (ID: 162934)
  Prédit: '_subset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_subset' → logprob: -0.03538757190108299
    2. '_' → logprob: -3.6603875160217285
    3. '_combo' → logprob: -5.1603875160217285
    4. '_comb' → logprob: -6.6603875160217285
    5. '_sub' → logprob: -7.1603875160217285
    6. '_set' → logprob: -7.4103875160217285
    7. '_choice' → logprob: -9.160387992858887
    8. '_token' → logprob: -9.285387992858887
    9. '_mask' → logprob: -9.410387992858887
    10. '_s' → logprob: -9.535387992858887

Token 682: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47423022985458374
    2. '=' → logprob: -0.9742302298545837
    3. '=[]' → logprob: -9.59922981262207
    4. ' ' → logprob: -10.09922981262207
    5. '_' → logprob: -10.47422981262207
    6. '=None' → logprob: -11.47422981262207
    7. '  ' → logprob: -14.22422981262207
    8. '_=' → logprob: -14.22422981262207
    9. '_idx' → logprob: -14.47422981262207
    10. 's' → logprob: -14.47422981262207

Token 683: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03518744930624962
    2. 'None' → logprob: -3.4101874828338623
    3. '()' → logprob: -6.910187244415283
    4. ' []' → logprob: -7.785187244415283
    5. ' None' → logprob: -9.285187721252441
    6. '[]
' → logprob: -11.660187721252441
    7. 'set' → logprob: -11.785187721252441
    8. '[]}' → logprob: -12.285187721252441
    9. 'none' → logprob: -12.785187721252441
    10. '(None' → logprob: -12.910187721252441

Token 684: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0056708985939621925
    2. ' for' → logprob: -5.50567102432251
    3. '        
' → logprob: -7.13067102432251
    4. 'for' → logprob: -7.75567102432251
    5. '
' → logprob: -8.255670547485352
    6. '    
' → logprob: -10.630670547485352
    7. '<|end|>' → logprob: -10.755670547485352
    8. ' 
' → logprob: -11.005670547485352
    9. '  
' → logprob: -11.130670547485352
    10. '   ' → logprob: -11.130670547485352

Token 685: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3138065040111542
    2. 'for' → logprob: -1.5638065338134766
    3. ' for' → logprob: -2.8138065338134766
    4. 'n' → logprob: -11.438806533813477
    5. '        
' → logprob: -11.813806533813477
    6. '   ' → logprob: -13.063806533813477
    7. '
' → logprob: -13.313806533813477
    8. '	for' → logprob: -13.688806533813477
    9. ' n' → logprob: -14.438806533813477
    10. 'from' → logprob: -14.688806533813477

Token 686: ' Generate' (ID: 33886)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01497354730963707
    2. ' for' → logprob: -4.3899736404418945
    3. 'n' → logprob: -6.2649736404418945
    4. '       ' → logprob: -7.6399736404418945
    5. ' n' → logprob: -10.014973640441895
    6. 'max' → logprob: -11.514973640441895
    7. 'from' → logprob: -11.764973640441895
    8. 'all' → logprob: -11.889973640441895
    9. '   ' → logprob: -12.889973640441895
    10. 'num' → logprob: -13.264973640441895

Token 687: ' all' (ID: 722)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6675154566764832
    2. 'subset' → logprob: -1.667515516281128
    3. 'length' → logprob: -1.792515516281128
    4. 'size' → logprob: -2.167515516281128
    5. 'l' → logprob: -5.042515277862549
    6. 'i' → logprob: -5.167515277862549
    7. 'k' → logprob: -6.667515277862549
    8. '   ' → logprob: -7.417515277862549
    9. 'sz' → logprob: -7.667515277862549
    10. 'for' → logprob: -7.792515277862549

Token 688: ' subsets' (ID: 165377)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.3315225839614868
    2. 'sub' → logprob: -1.4565225839614868
    3. 'com' → logprob: -3.5815224647521973
    4. ' subsets' → logprob: -4.956522464752197
    5. 'comb' → logprob: -5.706522464752197
    6. '_subset' → logprob: -6.206522464752197
    7. ' subset' → logprob: -6.206522464752197
    8. '   ' → logprob: -6.331522464752197
    9. 'sizes' → logprob: -6.831522464752197
    10. 'i' → logprob: -7.206522464752197

Token 689: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6572455167770386
    2. 'for' → logprob: -1.2822455167770386
    3. ' for' → logprob: -2.032245635986328
    4. '(range' → logprob: -3.157245635986328
    5. 'range' → logprob: -3.782245635986328
    6. ' range' → logprob: -6.157245635986328
    7. '
' → logprob: -6.407245635986328
    8. 'from' → logprob: -6.907245635986328
    9. ' (' → logprob: -7.157245635986328
    10. '(' → logprob: -7.407245635986328

Token 690: ' up' (ID: 869)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10350091755390167
    2. 'for' → logprob: -2.3535008430480957
    3. ' n' → logprob: -5.978500843048096
    4. 'n' → logprob: -7.353500843048096
    5. '       ' → logprob: -9.353501319885254
    6. ' from' → logprob: -10.853501319885254
    7. 'from' → logprob: -11.603501319885254
    8. '        
' → logprob: -15.103501319885254
    9. '   ' → logprob: -15.353501319885254
    10. ' 
' → logprob: -16.728500366210938

Token 691: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.000996963819488883
    2. '_to' → logprob: -7.375997066497803
    3. 'To' → logprob: -9.000996589660645
    4. '       ' → logprob: -9.625996589660645
    5. ' to' → logprob: -10.125996589660645
    6. '   ' → logprob: -10.375996589660645
    7. 'pto' → logprob: -10.500996589660645
    8. '1' → logprob: -10.625996589660645
    9. '=' → logprob: -12.125996589660645
    10. 'from' → logprob: -12.625996589660645

Token 692: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.25817981362342834
    2. '12' → logprob: -1.508179783821106
    3. '(' → logprob: -5.383179664611816
    4. '1' → logprob: -7.133179664611816
    5. '(len' → logprob: -8.133179664611816
    6. 'min' → logprob: -8.383179664611816
    7. ' len' → logprob: -8.508179664611816
    8. '2' → logprob: -9.758179664611816
    9. '13' → logprob: -11.383179664611816
    10. '
' → logprob: -11.758179664611816

Token 693: '2' (ID: 17)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.010401640087366104
    2. '12' → logprob: -4.635401725769043
    3. '(' → logprob: -8.510401725769043
    4. '1' → logprob: -8.635401725769043
    5. 'min' → logprob: -8.760401725769043
    6. '(len' → logprob: -9.635401725769043
    7. ' len' → logprob: -11.010401725769043
    8. '
' → logprob: -11.510401725769043
    9. '2' → logprob: -11.760401725769043
    10. 'sum' → logprob: -12.760401725769043

Token 694: '^' (ID: 61)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.25274714827537537
    2. '**' → logprob: -1.5027471780776978
    3. '0' → logprob: -8.127747535705566
    4. ' ' → logprob: -8.752747535705566
    5. ' *' → logprob: -9.002747535705566
    6. '*' → logprob: -9.627747535705566
    7. '^' → logprob: -9.752747535705566
    8. '```' → logprob: -10.877747535705566
    9. ' ' → logprob: -11.002747535705566
    10. ' ^' → logprob: -11.127747535705566

Token 695: 'P' (ID: 47)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0003951648832298815
    2. '12' → logprob: -7.87539529800415
    3. '(len' → logprob: -11.500394821166992
    4. ' len' → logprob: -12.500394821166992
    5. 'n' → logprob: -14.875394821166992
    6. '```' → logprob: -14.875394821166992
    7. '
' → logprob: -15.875394821166992
    8. '	len' → logprob: -16.250394821166992
    9. '[len' → logprob: -16.500394821166992
    10. '   ' → logprob: -16.750394821166992

Token 696: ' where' (ID: 1919)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3511434495449066
    2. 'for' → logprob: -2.3511433601379395
    3. '       ' → logprob: -2.8511433601379395
    4. '   ' → logprob: -3.4761433601379395
    5. ' ' → logprob: -3.8511433601379395
    6. '=' → logprob: -4.3511433601379395
    7. ',' → logprob: -4.4761433601379395
    8. ')' → logprob: -4.7261433601379395
    9. 'len' → logprob: -4.9761433601379395
    10. ':' → logprob: -4.9761433601379395

Token 697: ' P' (ID: 398)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.030031858012080193
    2. 'P' → logprob: -3.90503191947937
    3. 'p' → logprob: -4.905031681060791
    4. ' len' → logprob: -6.280031681060791
    5. ' P' → logprob: -9.40503215789795
    6. '12' → logprob: -11.15503215789795
    7. '   ' → logprob: -11.15503215789795
    8. ' p' → logprob: -11.40503215789795
    9. '(len' → logprob: -11.78003215789795
    10. '```' → logprob: -11.90503215789795

Token 698: '<=' (ID: 16672)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32145875692367554
    2. '=' → logprob: -1.4464588165283203
    3. '=len' → logprob: -3.3214588165283203
    4. '<=' → logprob: -6.82145881652832
    5. '       ' → logprob: -7.44645881652832
    6. ' <=' → logprob: -7.69645881652832
    7. '   ' → logprob: -7.82145881652832
    8. 'len' → logprob: -8.07145881652832
    9. '_len' → logprob: -9.19645881652832
    10. '           ' → logprob: -9.82145881652832

Token 699: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.0097618717700243
    2. 'len' → logprob: -4.634761810302734
    3. ' len' → logprob: -12.759761810302734
    4. ' ' → logprob: -13.384761810302734
    5. '(len' → logprob: -14.884761810302734
    6. '
' → logprob: -15.259761810302734
    7. '13' → logprob: -15.384761810302734
    8. '11' → logprob: -15.884761810302734
    9. '```' → logprob: -16.134761810302734
    10. '=len' → logprob: -16.384761810302734

Token 700: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7889804244041443
    2. 'for' → logprob: -1.413980484008789
    3. ':' → logprob: -2.038980484008789
    4. '
' → logprob: -2.538980484008789
    5. ',' → logprob: -3.288980484008789
    6. '       ' → logprob: -4.038980484008789
    7. ':
' → logprob: -4.663980484008789
    8. '   ' → logprob: -5.038980484008789
    9. ',
' → logprob: -5.913980484008789
    10. '  
' → logprob: -5.913980484008789

Token 701: ' feasible' (ID: 58866)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4348480701446533
    2. 'for' → logprob: -1.0598480701446533
    3. '       ' → logprob: -5.184847831726074
    4. '        ' → logprob: -8.184847831726074
    5. '        
' → logprob: -10.184847831726074
    6. ')' → logprob: -10.309847831726074
    7. 'p' → logprob: -10.684847831726074
    8. ' 
' → logprob: -11.059847831726074
    9. '           ' → logprob: -11.059847831726074
    10. 'n' → logprob: -11.059847831726074

Token 702: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28485241532325745
    2. ' for' → logprob: -2.0348525047302246
    3. 'for' → logprob: -2.1598525047302246
    4. '
' → logprob: -6.909852504730225
    5. ',' → logprob: -7.784852504730225
    6. '   ' → logprob: -9.159852027893066
    7. '.' → logprob: -9.784852027893066
    8. ':' → logprob: -10.159852027893066
    9. '<|end|>' → logprob: -10.284852027893066
    10. '        
' → logprob: -10.409852027893066

Token 703: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012668921612203121
    2. ' for' → logprob: -4.512669086456299
    3. 'for' → logprob: -6.637669086456299
    4. '        
' → logprob: -8.63766860961914
    5. '
' → logprob: -9.38766860961914
    6. ',' → logprob: -11.13766860961914
    7. '   ' → logprob: -11.26266860961914
    8. '           ' → logprob: -12.51266860961914
    9. ' in' → logprob: -13.13766860961914
    10. '    
' → logprob: -13.38766860961914

Token 704: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.827354371547699
    2. ' for' → logprob: -0.827354371547699
    3. 'for' → logprob: -2.0773544311523438
    4. '   ' → logprob: -9.077354431152344
    5. '        
' → logprob: -9.202354431152344
    6. 'n' (adapté à ' n') → logprob: -10.077354431152344
    7. '
' → logprob: -10.327354431152344
    8. '```' → logprob: -11.952354431152344
    9. '    
' → logprob: -12.077354431152344
    10. ' 
' → logprob: -12.202354431152344

Token 705: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34850844740867615
    2. ' =' → logprob: -1.2235084772109985
    3. '=len' → logprob: -10.223508834838867
    4. 'for' → logprob: -12.223508834838867
    5. 'p' → logprob: -12.598508834838867
    6. '=int' → logprob: -12.723508834838867
    7. ',' → logprob: -12.973508834838867
    8. '   ' → logprob: -13.223508834838867
    9. ')' → logprob: -13.223508834838867
    10. '=p' → logprob: -13.473508834838867

Token 706: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -7.493430894101039e-05
    2. ' len' → logprob: -9.500075340270996
    3. '(len' → logprob: -17.62507438659668
    4. '12' → logprob: -18.62507438659668
    5. '[len' → logprob: -18.62507438659668
    6. '=len' → logprob: -21.00007438659668
    7. '	len' → logprob: -21.12507438659668
    8. '   ' → logprob: -22.87507438659668
    9. '<len' → logprob: -23.87507438659668
    10. '
' → logprob: -24.12507438659668

Token 707: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.028694167733192444
    2. 'pot' → logprob: -4.278694152832031
    3. '(self' → logprob: -4.403694152832031
    4. 'self' → logprob: -6.153694152832031
    5. '(
' → logprob: -10.403694152832031
    6. 'p' → logprob: -10.778694152832031
    7. '(' → logprob: -11.528694152832031
    8. ' pot' → logprob: -12.028694152832031
    9. '```' → logprob: -15.028694152832031
    10. ' (' → logprob: -16.65369415283203

Token 708: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.0008414304465986788
    2. 'pot' → logprob: -7.1258416175842285
    3. 'he' → logprob: -11.62584114074707
    4. '```' → logprob: -12.50084114074707
    5. 'otions' → logprob: -12.62584114074707
    6. 'от' → logprob: -12.87584114074707
    7. '(self' → logprob: -13.25084114074707
    8. 'o' → logprob: -13.25084114074707
    9. 'otential' → logprob: -13.50084114074707
    10. 'self' → logprob: -13.50084114074707

Token 709: '_he' (ID: 94257)
  Prédit: '_he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_he' → logprob: -0.02944345586001873
    2. 'ions' → logprob: -3.6544435024261475
    3. 'he' → logprob: -5.904443264007568
    4. 'otions' → logprob: -8.029443740844727
    5. '\' → logprob: -10.279443740844727
    6. '```' → logprob: -11.279443740844727
    7. '_' → logprob: -12.029443740844727
    8. 's' → logprob: -12.029443740844727
    9. 'ations' → logprob: -12.529443740844727
    10. '   ' → logprob: -13.154443740844727

Token 710: 'als' (ID: 1288)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.5015852451324463
    2. 'ions' → logprob: -1.3765852451324463
    3. 'ons' → logprob: -2.5015852451324463
    4. 'els' → logprob: -3.6265852451324463
    5. 'ols' → logprob: -4.501585006713867
    6. 'e' → logprob: -5.251585006713867
    7. '_he' → logprob: -5.501585006713867
    8. 'otions' → logprob: -5.626585006713867
    9. 'ot' → logprob: -5.751585006713867
    10. 'ots' → logprob: -6.001585006713867

Token 711: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08895669877529144
    2. ')
' → logprob: -2.463956594467163
    3. ')
' → logprob: -11.838956832885742
    4. '
' → logprob: -12.838956832885742
    5. ')

' → logprob: -13.588956832885742
    6. '):
' → logprob: -13.713956832885742
    7. ' )' → logprob: -13.838956832885742
    8. '<|end|>' → logprob: -13.838956832885742
    9. '       ' → logprob: -14.713956832885742
    10. ')>
' → logprob: -15.213956832885742

Token 712: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4439864456653595
    2. ' for' → logprob: -1.693986415863037
    3. '
' → logprob: -2.318986415863037
    4. 'for' → logprob: -3.443986415863037
    5. ' 
' → logprob: -3.943986415863037
    6. '   ' → logprob: -4.568986415863037
    7. '        
' → logprob: -4.943986415863037
    8. '  
' → logprob: -5.818986415863037
    9. '    
' → logprob: -6.318986415863037
    10. '<|end|>' → logprob: -7.318986415863037

Token 713: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7289734482765198
    2. 'for' (adapté à ' for') → logprob: -0.7289734482765198
    3. '       ' → logprob: -3.353973388671875
    4. '   ' → logprob: -9.353973388671875
    5. '
' → logprob: -9.978973388671875
    6. '        
' → logprob: -10.103973388671875
    7. ' 
' → logprob: -11.103973388671875
    8. '```' → logprob: -11.103973388671875
    9. ' ' → logprob: -11.478973388671875
    10. '	for' → logprob: -11.728973388671875

Token 714: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03525489941239357
    2. 'size' → logprob: -3.785254955291748
    3. 'k' → logprob: -5.285254955291748
    4. 'subset' → logprob: -5.785254955291748
    5. 'length' → logprob: -6.910254955291748
    6. 'sz' → logprob: -6.910254955291748
    7. ' r' → logprob: -7.035254955291748
    8. 'i' → logprob: -7.660254955291748
    9. 'l' → logprob: -8.91025447845459
    10. ' size' → logprob: -9.28525447845459

Token 715: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01448995340615511
    2. 'in' → logprob: -4.264490127563477
    3. ' ' → logprob: -8.139490127563477
    4. ' i' → logprob: -11.264490127563477
    5. ' r' → logprob: -11.639490127563477
    6. 'r' → logprob: -12.264490127563477
    7. 'space' → logprob: -12.764490127563477
    8. '  ' → logprob: -14.139490127563477
    9. 'i' → logprob: -14.389490127563477
    10. '1' → logprob: -14.389490127563477

Token 716: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.836499985889532e-05
    2. ' range' → logprob: -9.7500581741333
    3. '1' → logprob: -18.875059127807617
    4. 'n' → logprob: -18.875059127807617
    5. '(range' → logprob: -19.000059127807617
    6. '
' → logprob: -20.000059127807617
    7. 'r' → logprob: -20.375059127807617
    8. ' ' → logprob: -21.500059127807617
    9. '	range' → logprob: -21.625059127807617
    10. '   ' → logprob: -22.375059127807617

Token 717: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17203401029109955
    2. '(n' → logprob: -2.4220340251922607
    3. '1' → logprob: -2.6720340251922607
    4. 'n' → logprob: -8.54703426361084
    5. '(
' → logprob: -13.67203426361084
    6. '
' → logprob: -14.17203426361084
    7. '(len' → logprob: -15.17203426361084
    8. '0' → logprob: -15.29703426361084
    9. ' ' → logprob: -16.172033309936523
    10. ' n' → logprob: -16.797033309936523

Token 718: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06999390572309494
    2. 'n' → logprob: -2.6949939727783203
    3. '0' → logprob: -10.19499397277832
    4. '
' → logprob: -11.19499397277832
    5. ' n' → logprob: -12.81999397277832
    6. '(n' → logprob: -12.94499397277832
    7. 'len' → logprob: -14.44499397277832
    8. ' ' → logprob: -15.31999397277832
    9. '(' → logprob: -15.31999397277832
    10. '

' → logprob: -16.31999397277832

Token 719: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38698843121528625
    2. ',n' → logprob: -1.1369884014129639
    3. ' ,' → logprob: -9.511988639831543
    4. ',
' → logprob: -10.886988639831543
    5. ',r' → logprob: -11.011988639831543
    6. 'n' → logprob: -12.636988639831543
    7. '(n' → logprob: -13.011988639831543
    8. ',len' → logprob: -13.761988639831543
    9. '   ' → logprob: -14.761988639831543
    10. '
' → logprob: -15.136988639831543

Token 720: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.547789674485102e-05
    2. ' n' → logprob: -10.250035285949707
    3. '	n' → logprob: -18.875036239624023
    4. '(n' → logprob: -19.000036239624023
    5. '
' → logprob: -19.500036239624023
    6. '```' → logprob: -20.750036239624023
    7. ')n' → logprob: -20.875036239624023
    8. '   ' → logprob: -20.875036239624023
    9. 'len' → logprob: -21.000036239624023
    10. '[n' → logprob: -21.500036239624023

Token 721: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024950411170721054
    2. ' +' → logprob: -6.002494812011719
    3. '+
' → logprob: -11.502494812011719
    4. '):' → logprob: -12.127494812011719
    5. '+r' → logprob: -13.502494812011719
    6. '+n' → logprob: -13.877494812011719
    7. '):
' → logprob: -14.002494812011719
    8. ')+' → logprob: -15.752494812011719
    9. ' +
' → logprob: -16.12749481201172
    10. ')' → logprob: -16.25249481201172

Token 722: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.759734732331708e-05
    2. 'r' → logprob: -11.375017166137695
    3. ' ' → logprob: -12.125017166137695
    4. ' r' → logprob: -14.875017166137695
    5. 'n' → logprob: -15.375017166137695
    6. '+' → logprob: -16.750017166137695
    7. ')' → logprob: -17.000017166137695
    8. '
' → logprob: -17.750017166137695
    9. '+r' → logprob: -17.750017166137695
    10. '```' → logprob: -18.375017166137695

Token 723: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.28629299998283386
    2. '):' → logprob: -1.7862930297851562
    3. ':' → logprob: -2.5362930297851562
    4. ':
' → logprob: -6.161293029785156
    5. '):
' → logprob: -9.786293029785156
    6. ')' → logprob: -10.411293029785156
    7. '   ' → logprob: -11.661293029785156
    8. ' ):
' → logprob: -11.911293029785156
    9. ' ):' → logprob: -13.411293029785156
    10. ',' → logprob: -13.411293029785156

Token 724: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1467713862657547
    2. ':' → logprob: -3.0217714309692383
    3. '<|end|>' → logprob: -3.0217714309692383
    4. '           ' → logprob: -4.146771430969238
    5. ' for' → logprob: -5.396771430969238
    6. '   ' → logprob: -5.396771430969238
    7. '        ' → logprob: -5.646771430969238
    8. '<|end|>' → logprob: -5.896771430969238
    9. ' ' → logprob: -6.021771430969238
    10. '	       ' → logprob: -6.521771430969238

Token 725: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2835105359554291
    2. 'for' (adapté à ' for') → logprob: -2.033510446548462
    3. '           ' → logprob: -2.158510446548462
    4. '       ' → logprob: -7.908510684967041
    5. '   ' → logprob: -10.158510208129883
    6. '               ' → logprob: -10.408510208129883
    7. '	       ' → logprob: -10.533510208129883
    8. '	for' → logprob: -11.408510208129883
    9. ' ' → logprob: -12.158510208129883
    10. '         ' → logprob: -12.908510208129883

Token 726: ' comb' (ID: 4134)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.0016238800017163157
    2. 'combo' → logprob: -6.50162410736084
    3. 'comb' → logprob: -9.37662410736084
    4. ' subset' → logprob: -10.37662410736084
    5. 'indices' → logprob: -12.50162410736084
    6. 'subs' → logprob: -14.00162410736084
    7. 'idx' → logprob: -14.87662410736084
    8. ' combo' → logprob: -15.00162410736084
    9. '_subset' → logprob: -15.50162410736084
    10. 'inds' → logprob: -16.501623153686523

Token 727: 'i' (ID: 72)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5698602795600891
    2. 'ination' → logprob: -0.9448602795600891
    3. 'in' → logprob: -3.1948602199554443
    4. 'inations' → logprob: -6.069860458374023
    5. ',' → logprob: -6.319860458374023
    6. 'o' → logprob: -9.444860458374023
    7. 'INATION' → logprob: -9.444860458374023
    8. ' ,' → logprob: -9.819860458374023
    9. '[' → logprob: -10.069860458374023
    10. 'ina' → logprob: -10.319860458374023

Token 728: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026041436940431595
    2. 'in' → logprob: -4.401041507720947
    3. 'ination' → logprob: -5.151041507720947
    4. 'nation' → logprob: -5.651041507720947
    5. 'n' → logprob: -5.776041507720947
    6. 'ation' → logprob: -7.401041507720947
    7. '[n' → logprob: -9.526041030883789
    8. ',' → logprob: -9.901041030883789
    9. 'inations' → logprob: -10.026041030883789
    10. '   ' → logprob: -10.151041030883789

Token 729: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -4.320199877838604e-07
    2. '(com' → logprob: -15.0
    3. ' combinations' → logprob: -17.25
    4. '_com' → logprob: -19.25
    5. 'comb' → logprob: -19.375
    6. '	com' → logprob: -20.375
    7. '-com' → logprob: -21.875
    8. '.com' → logprob: -23.0
    9. '=com' → logprob: -23.0
    10. '<com' → logprob: -23.0

Token 730: '(range' (ID: 50017)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0026446215342730284
    2. '(self' → logprob: -6.0026445388793945
    3. '(range' → logprob: -8.752644538879395
    4. '(' → logprob: -12.127644538879395
    5. 'self' → logprob: -12.627644538879395
    6. 'range' → logprob: -13.502644538879395
    7. ' (' → logprob: -15.127644538879395
    8. '(
' → logprob: -16.25264549255371
    9. '   ' → logprob: -16.50264549255371
    10. ',' → logprob: -17.37764549255371

Token 731: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0006290406454354525
    2. 'n' → logprob: -7.37562894821167
    3. '(' → logprob: -13.375629425048828
    4. ' n' → logprob: -15.000629425048828
    5. ')n' → logprob: -15.500629425048828
    6. '(len' → logprob: -15.875629425048828
    7. ',n' → logprob: -16.000629425048828
    8. '	n' → logprob: -16.875629425048828
    9. '   ' → logprob: -17.250629425048828
    10. 'len' → logprob: -17.875629425048828

Token 732: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.006878530140966177
    2. ',' → logprob: -5.00687837600708
    3. ',r' → logprob: -9.006878852844238
    4. ',),' → logprob: -11.381878852844238
    5. ' ),' → logprob: -11.506878852844238
    6. ' ,' → logprob: -12.506878852844238
    7. '},' → logprob: -12.506878852844238
    8. '],' → logprob: -12.631878852844238
    9. 'r' → logprob: -12.881878852844238
    10. ')' → logprob: -14.131878852844238

Token 733: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0040785204619169235
    2. ' r' → logprob: -5.504078388214111
    3. '   ' → logprob: -18.129077911376953
    4. ')' → logprob: -18.379077911376953
    5. '	r' → logprob: -18.629077911376953
    6. ' ' → logprob: -19.379077911376953
    7. '    ' → logprob: -20.629077911376953
    8. '
' → logprob: -21.504077911376953
    9. '  ' → logprob: -22.129077911376953
    10. ',r' → logprob: -22.379077911376953

Token 734: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06238260865211487
    2. '):' → logprob: -2.812382698059082
    3. '):
' → logprob: -7.812382698059082
    4. '           ' → logprob: -12.562382698059082
    5. '):

' → logprob: -12.812382698059082
    6. ')' → logprob: -13.187382698059082
    7. ':' → logprob: -14.312382698059082
    8. '               ' → logprob: -14.437382698059082
    9. ' ):
' → logprob: -14.687382698059082
    10. '       ' → logprob: -15.562382698059082

Token 735: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006783455144613981
    2. '           ' → logprob: -5.631783485412598
    3. '<|end|>' → logprob: -6.881783485412598
    4. '                
' → logprob: -7.381783485412598
    5. '                ' → logprob: -8.256783485412598
    6. '[' → logprob: -8.506783485412598
    7. '       ' → logprob: -8.631783485412598
    8. ' ' → logprob: -8.756783485412598
    9. '            ' → logprob: -9.256783485412598
    10. ',' → logprob: -9.506783485412598

Token 736: ' heal' (ID: 40582)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.2807621359825134
    2. 'heal' (adapté à ' heal') → logprob: -2.030762195587158
    3. 'total' → logprob: -2.905762195587158
    4. '                   ' → logprob: -3.530762195587158
    5. 'sum' → logprob: -4.405762195587158
    6. ' total' → logprob: -4.780762195587158
    7. 'h' → logprob: -6.155762195587158
    8. '   ' → logprob: -6.530762195587158
    9. ' heal' → logprob: -6.530762195587158
    10. ' healing' → logprob: -6.530762195587158

Token 737: '_sum' (ID: 29859)
  Prédit: '_amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amount' → logprob: -0.8119789361953735
    2. '_sum' → logprob: -1.4369789361953735
    3. ' =' → logprob: -1.5619789361953735
    4. '=' → logprob: -2.561978816986084
    5. '=sum' → logprob: -3.686978816986084
    6. 'sum' → logprob: -5.686978816986084
    7. '_amt' → logprob: -6.686978816986084
    8. '_total' → logprob: -7.186978816986084
    9. 's' → logprob: -7.936978816986084
    10. '               ' → logprob: -8.811979293823242

Token 738: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740987718105316
    2. ' =' → logprob: -0.974098801612854
    3. '=sum' → logprob: -10.849099159240723
    4. ' ' → logprob: -13.599099159240723
    5. ' +=' → logprob: -14.974099159240723
    6. '+=' → logprob: -15.599099159240723
    7. 'sum' → logprob: -15.849099159240723
    8. '+' → logprob: -16.224098205566406
    9. '_sum' → logprob: -16.849098205566406
    10. ' =
' → logprob: -16.974098205566406

Token 739: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.16856086254119873
    2. '0' → logprob: -1.9185608625411987
    3. ' sum' → logprob: -4.793560981750488
    4. ' ' → logprob: -10.918560981750488
    5. '	sum' → logprob: -14.543560981750488
    6. '=sum' → logprob: -15.668560981750488
    7. '   ' → logprob: -15.793560981750488
    8. '(sum' → logprob: -16.918560028076172
    9. '.sum' → logprob: -17.043560028076172
    10. ',sum' → logprob: -17.293560028076172

Token 740: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00675551313906908
    2. '([' → logprob: -5.006755352020264
    3. '(' → logprob: -10.381755828857422
    4. 'pot' → logprob: -12.381755828857422
    5. '[p' → logprob: -12.631755828857422
    6. '(
' → logprob: -13.881755828857422
    7. '((' → logprob: -15.006755828857422
    8. 'p' → logprob: -15.381755828857422
    9. '[' → logprob: -15.881755828857422
    10. '(

' → logprob: -16.631755828857422

Token 741: 'ot' (ID: 346)
  Prédit: '_he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_he' → logprob: -0.0005791273433715105
    2. 'ot' → logprob: -7.625579357147217
    3. 'he' → logprob: -10.375578880310059
    4. '_ot' → logprob: -10.875578880310059
    5. '_' → logprob: -11.000578880310059
    6. 't' → logprob: -12.250578880310059
    7. '.he' → logprob: -12.375578880310059
    8. '_h' → logprob: -12.500578880310059
    9. 'otions' → logprob: -12.750578880310059
    10. '```' → logprob: -13.875578880310059

Token 742: '_he' (ID: 94257)
  Prédit: '_he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_he' → logprob: -0.00023846338444855064
    2. 'he' → logprob: -8.375238418579102
    3. '_' → logprob: -13.250238418579102
    4. '   ' → logprob: -13.750238418579102
    5. 'ions' → logprob: -13.875238418579102
    6. 'He' → logprob: -14.250238418579102
    7. '```' → logprob: -14.375238418579102
    8. '.he' → logprob: -14.875238418579102
    9. 's' → logprob: -15.000238418579102
    10. 'ion' → logprob: -15.125238418579102

Token 743: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.002707273466512561
    2. 'al' → logprob: -6.002707481384277
    3. 'ls' → logprob: -10.377707481384277
    4. '```' → logprob: -10.815207481384277
    5. 'els' → logprob: -10.877707481384277
    6. '[' → logprob: -10.877707481384277
    7. 'a' → logprob: -11.377707481384277
    8. '_amount' → logprob: -11.690207481384277
    9. '_' → logprob: -11.940207481384277
    10. '
' → logprob: -12.002707481384277

Token 744: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.6550729419104755e-05
    2. '[idx' → logprob: -10.250036239624023
    3. '[index' → logprob: -14.375036239624023
    4. 'i' → logprob: -14.875036239624023
    5. '[j' → logprob: -16.250036239624023
    6. '[k' → logprob: -17.250036239624023
    7. 'idx' → logprob: -18.250036239624023
    8. '
' → logprob: -18.625036239624023
    9. '[' → logprob: -19.000036239624023
    10. ')' → logprob: -19.125036239624023

Token 745: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05674123018980026
    2. ' for' → logprob: -3.306741237640381
    3. 'for' → logprob: -4.431741237640381
    4. '])' → logprob: -5.556741237640381
    5. ')' → logprob: -6.056741237640381
    6. ' ]' → logprob: -8.056740760803223
    7. ' ' → logprob: -10.056740760803223
    8. ']+' → logprob: -11.181740760803223
    9. ' ])' → logprob: -11.306740760803223
    10. ' )' → logprob: -11.306740760803223

Token 746: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2646019160747528
    2. 'for' → logprob: -1.5146019458770752
    3. ')' → logprob: -4.389601707458496
    4. ']' → logprob: -9.889601707458496
    5. '               ' → logprob: -10.514601707458496
    6. ' ' → logprob: -10.514601707458496
    7. ' )' → logprob: -11.139601707458496
    8. '[i' → logprob: -11.264601707458496
    9. '                ' → logprob: -11.514601707458496
    10. '	for' → logprob: -12.014601707458496

Token 747: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04863482713699341
    2. 'com' → logprob: -3.0486347675323486
    3. ' i' → logprob: -10.79863452911377
    4. ' com' → logprob: -11.54863452911377
    5. ' comb' → logprob: -12.17363452911377
    6. 'im' → logprob: -12.29863452911377
    7. '(com' → logprob: -12.92363452911377
    8. '	com' → logprob: -13.92363452911377
    9. 'ic' → logprob: -14.17363452911377
    10. ' ' → logprob: -14.54863452911377

Token 748: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5848425626754761
    2. 'in' → logprob: -0.8348425626754761
    3. 'com' → logprob: -5.084842681884766
    4. 'i' → logprob: -5.959842681884766
    5. ' i' → logprob: -10.584842681884766
    6. ' comb' → logprob: -10.959842681884766
    7. ' com' → logprob: -11.584842681884766
    8. ')' → logprob: -11.709842681884766
    9. ' ' → logprob: -11.959842681884766
    10. '<com' → logprob: -12.647342681884766

Token 749: ' comb' (ID: 4134)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -9.088346359931165e-07
    2. '(com' → logprob: -14.375000953674316
    3. '	com' → logprob: -16.375
    4. ' com' → logprob: -16.5
    5. '   ' → logprob: -16.625
    6. ' comb' → logprob: -17.125
    7. '

' → logprob: -17.75
    8. '
' → logprob: -17.875
    9. 'c' → logprob: -18.125
    10. '`' → logprob: -18.375

Token 750: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007358930306509137
    2. 'inations' → logprob: -8.000736236572266
    3. 'com' → logprob: -8.625736236572266
    4. '   ' → logprob: -10.000736236572266
    5. 'ination' → logprob: -10.125736236572266
    6. 'ations' → logprob: -10.250736236572266
    7. 'bi' → logprob: -10.875736236572266
    8. 'comb' → logprob: -11.375736236572266
    9. '[i' → logprob: -11.500736236572266
    10. 'binations' → logprob: -11.750736236572266

Token 751: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26179710030555725
    2. ')
' → logprob: -1.5117970705032349
    3. '               ' → logprob: -4.636796951293945
    4. ' )' → logprob: -10.386796951293945
    5. ' )
' → logprob: -10.511796951293945
    6. ')
' → logprob: -10.761796951293945
    7. '):
' → logprob: -11.011796951293945
    8. '           ' → logprob: -11.261796951293945
    9. ')

' → logprob: -12.386796951293945
    10. '                ' → logprob: -12.511796951293945

Token 752: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010004170471802354
    2. '<|end|>' → logprob: -7.75100040435791
    3. '                
' → logprob: -8.37600040435791
    4. '```' → logprob: -8.75100040435791
    5. '                ' → logprob: -9.62600040435791
    6. '              ' → logprob: -11.00100040435791
    7. ' ' → logprob: -11.25100040435791
    8. '           ' → logprob: -11.25100040435791
    9. '                   ' → logprob: -11.37600040435791
    10. '<|end|>' → logprob: -11.62600040435791

Token 753: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4276483654975891
    2. ' if' → logprob: -1.1776483058929443
    3. 'if' → logprob: -3.3026483058929443
    4. '                
' → logprob: -6.427648544311523
    5. '                   ' → logprob: -7.552648544311523
    6. '```' → logprob: -8.552648544311523
    7. '
' → logprob: -8.802648544311523
    8. ' current' → logprob: -8.927648544311523
    9. '           ' → logprob: -9.177648544311523
    10. '                ' → logprob: -9.677648544311523

Token 754: ' can't' (ID: 8535)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2670123875141144
    2. '               ' → logprob: -1.767012357711792
    3. ' if' → logprob: -3.267012357711792
    4. 'current' → logprob: -3.767012357711792
    5. ' current' → logprob: -6.517012596130371
    6. 'new' → logprob: -8.017012596130371
    7. '   ' → logprob: -9.017012596130371
    8. '           ' → logprob: -9.642012596130371
    9. '                   ' → logprob: -10.017012596130371
    10. 'total' → logprob: -10.267012596130371

Token 755: ' heal' (ID: 40582)
  Prédit: ' exceed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' exceed' → logprob: -0.7221981883049011
    2. '>' → logprob: -1.347198247909546
    3. ' >' → logprob: -1.972198247909546
    4. ' use' → logprob: -3.347198247909546
    5. 'ex' → logprob: -3.597198247909546
    6. ' be' → logprob: -4.097198009490967
    7. ' if' → logprob: -4.847198009490967
    8. ' ' → logprob: -5.097198009490967
    9. ' have' → logprob: -5.472198009490967
    10. ' allow' → logprob: -5.847198009490967

Token 756: ' beyond' (ID: 11615)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2961025834083557
    2. ' >' → logprob: -2.046102523803711
    3. '>' → logprob: -2.671102523803711
    4. '               ' → logprob: -4.171102523803711
    5. ' more' → logprob: -4.546102523803711
    6. 'if' → logprob: -4.671102523803711
    7. ' +' → logprob: -4.796102523803711
    8. ' ' → logprob: -5.296102523803711
    9. '+' → logprob: -6.421102523803711
    10. '_more' → logprob: -7.171102523803711

Token 757: ' hp' (ID: 37774)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.038803547620773315
    2. ' self' → logprob: -3.2888035774230957
    3. '(self' → logprob: -7.913803577423096
    4. '	self' → logprob: -9.413803100585938
    5. 'the' → logprob: -9.663803100585938
    6. ' ' → logprob: -10.413803100585938
    7. ' the' → logprob: -10.663803100585938
    8. '   ' → logprob: -10.663803100585938
    9. 'max' → logprob: -10.663803100585938
    10. '_self' → logprob: -11.163803100585938

Token 758: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.011536635458469391
    2. ' +' → logprob: -4.886536598205566
    3. '_' → logprob: -6.511536598205566
    4. '+' → logprob: -6.636536598205566
    5. ' _' → logprob: -7.886536598205566
    6. 'max' → logprob: -8.886536598205566
    7. ' +=' → logprob: -8.886536598205566
    8. ' =' → logprob: -9.136536598205566
    9. '               ' → logprob: -9.636536598205566
    10. ')' → logprob: -10.136536598205566

Token 759: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05965784192085266
    2. ' or' → logprob: -3.8096578121185303
    3. '               ' → logprob: -4.559658050537109
    4. 'and' → logprob: -5.059658050537109
    5. ' if' → logprob: -5.184658050537109
    6. ',' → logprob: -6.059658050537109
    7. ' -' → logprob: -6.059658050537109
    8. '<|end|>' → logprob: -6.309658050537109
    9. '           ' → logprob: -6.559658050537109
    10. ':' → logprob: -6.934658050537109

Token 760: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.037821583449840546
    2. ' and' → logprob: -3.4128215312957764
    3. ' or' → logprob: -5.9128217697143555
    4. ' if' → logprob: -7.5378217697143555
    5. ',' → logprob: -7.7878217697143555
    6. '>' → logprob: -10.037821769714355
    7. '<|end|>' → logprob: -10.037821769714355
    8. ' =' → logprob: -10.162821769714355
    9. '           ' → logprob: -10.162821769714355
    10. 'and' → logprob: -10.287821769714355

Token 761: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6536681652069092
    2. '               ' → logprob: -0.7786681652069092
    3. 'if' (adapté à ' if') → logprob: -3.903668165206909
    4. '                
' → logprob: -8.528668403625488
    5. '                   ' → logprob: -8.778668403625488
    6. '
' → logprob: -9.028668403625488
    7. '                ' → logprob: -9.903668403625488
    8. '```' → logprob: -10.528668403625488
    9. ' and' → logprob: -10.653668403625488
    10. '           ' → logprob: -10.903668403625488

Token 762: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.08898211270570755
    2. 'self' → logprob: -2.463982105255127
    3. ' heal' → logprob: -10.963982582092285
    4. '(self' → logprob: -11.213982582092285
    5. '	self' → logprob: -12.213982582092285
    6. 'heal' → logprob: -12.713982582092285
    7. '   ' → logprob: -13.463982582092285
    8. ' ' → logprob: -13.963982582092285
    9. ' (' → logprob: -14.463982582092285
    10. ' ' → logprob: -15.338982582092285

Token 763: '.hp' (ID: 97958)
  Prédit: '.hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hp' → logprob: -0.0037195575423538685
    2. '.' → logprob: -5.628719329833984
    3. ' .' → logprob: -9.753719329833984
    4. 'hp' → logprob: -10.753719329833984
    5. '.
' → logprob: -11.003719329833984
    6. ' hp' → logprob: -12.503719329833984
    7. '.p' → logprob: -12.628719329833984
    8. ' ' → logprob: -13.128719329833984
    9. '```' → logprob: -13.378719329833984
    10. 'HP' → logprob: -13.503719329833984

Token 764: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16023021936416626
    2. '+' → logprob: -1.9102301597595215
    3. '+p' → logprob: -12.78523063659668
    4. ' ' → logprob: -14.41023063659668
    5. '+
' → logprob: -14.41023063659668
    6. '+self' → logprob: -14.53523063659668
    7. '+i' → logprob: -15.03523063659668
    8. ' +
' → logprob: -15.28523063659668
    9. '+c' → logprob: -15.41023063659668
    10. '<' → logprob: -15.66023063659668

Token 765: ' heal' (ID: 40582)
  Prédit: 'heal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heal' → logprob: -0.0021945175249129534
    2. ' heal' → logprob: -6.127194404602051
    3. 'he' → logprob: -11.75219440460205
    4. 'hear' → logprob: -15.37719440460205
    5. 'Heal' → logprob: -15.50219440460205
    6. 'heap' → logprob: -15.62719440460205
    7. '
' → logprob: -15.87719440460205
    8. 'hea' → logprob: -16.127195358276367
    9. 'health' → logprob: -16.377195358276367
    10. 'heur' → logprob: -16.502195358276367

Token 766: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.0325924449716695e-05
    2. '_' → logprob: -12.00001049041748
    3. 'sum' → logprob: -13.37501049041748
    4. 'a' → logprob: -15.12501049041748
    5. '\' → logprob: -15.25001049041748
    6. '_s' → logprob: -15.37501049041748
    7. '_SUM' → logprob: -15.37501049041748
    8. 's' → logprob: -15.50001049041748
    9. '```' → logprob: -15.50001049041748
    10. '
' → logprob: -15.62501049041748

Token 767: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5660803318023682
    2. '<=' → logprob: -1.1910803318023682
    3. '>' → logprob: -2.441080331802368
    4. ' >' → logprob: -3.191080331802368
    5. '-' → logprob: -8.941080093383789
    6. ' ' → logprob: -11.191080093383789
    7. ' -' → logprob: -11.816080093383789
    8. ')<=' → logprob: -13.191080093383789
    9. ')' → logprob: -13.316080093383789
    10. '<' → logprob: -13.316080093383789

Token 768: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0036012595519423485
    2. ' self' → logprob: -5.62860107421875
    3. '
' → logprob: -15.12860107421875
    4. '=self' → logprob: -15.12860107421875
    5. '(self' → logprob: -15.50360107421875
    6. '0' → logprob: -15.87860107421875
    7. '	self' → logprob: -16.00360107421875
    8. '[self' → logprob: -16.62860107421875
    9. ' ' → logprob: -16.75360107421875
    10. 'hp' → logprob: -17.12860107421875

Token 769: '.hp' (ID: 97958)
  Prédit: '.hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hp' → logprob: -8.44706009957008e-05
    2. 'hp' → logprob: -9.50008487701416
    3. '.' → logprob: -11.75008487701416
    4. ' hp' → logprob: -14.62508487701416
    5. ' .' → logprob: -14.87508487701416
    6. '_hp' → logprob: -15.62508487701416
    7. '.damage' → logprob: -16.125083923339844
    8. '
' → logprob: -16.375083923339844
    9. 'HP' → logprob: -16.625083923339844
    10. '​.' → logprob: -16.750083923339844

Token 770: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.00029506313148885965
    2. '_' → logprob: -8.75029468536377
    3. 'max' → logprob: -9.00029468536377
    4. ' _' → logprob: -12.25029468536377
    5. '_MAX' → logprob: -12.37529468536377
    6. 'Max' → logprob: -13.75029468536377
    7. '_m' → logprob: -14.37529468536377
    8. '_Max' → logprob: -15.12529468536377
    9. '_
' → logprob: -15.62529468536377
    10. 's' → logprob: -15.75029468536377

Token 771: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03216000646352768
    2. ':' → logprob: -3.6571600437164307
    3. 'and' → logprob: -5.282159805297852
    4. '           ' → logprob: -8.032159805297852
    5. ':
' → logprob: -8.407159805297852
    6. '               ' → logprob: -9.157159805297852
    7. '                   ' → logprob: -10.782159805297852
    8. '            ' → logprob: -10.907159805297852
    9. ' ' → logprob: -11.407159805297852
    10. ',' → logprob: -11.532159805297852

Token 772: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005208732560276985
    2. ' continue' → logprob: -5.755208969116211
    3. 'continue' → logprob: -6.505208969116211
    4. '               ' → logprob: -8.130208969116211
    5. '                       ' → logprob: -8.630208969116211
    6. '                    ' → logprob: -10.505208969116211
    7. '                ' → logprob: -11.880208969116211
    8. '                 ' → logprob: -12.130208969116211
    9. '           ' → logprob: -12.505208969116211
    10. '                  ' → logprob: -12.630208969116211

Token 773: ' heal' (ID: 40582)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5817112922668457
    2. 'continue' → logprob: -0.8317112922668457
    3. ' continue' → logprob: -5.331711292266846
    4. '                       ' → logprob: -7.206711292266846
    5. '               ' → logprob: -9.081710815429688
    6. '	continue' → logprob: -10.081710815429688
    7. '   ' → logprob: -11.581710815429688
    8. '           ' → logprob: -12.581710815429688
    9. '				' → logprob: -12.706710815429688
    10. '
' → logprob: -13.456710815429688

Token 774: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.06946245580911636
    2. 's' → logprob: -3.944462537765503
    3. '                   ' → logprob: -4.069462299346924
    4. '               ' → logprob: -5.569462299346924
    5. '_limit' → logprob: -5.569462299346924
    6. '=' → logprob: -5.694462299346924
    7. 'sum' → logprob: -5.694462299346924
    8. ' =' → logprob: -5.819462299346924
    9. 'ed' → logprob: -6.194462299346924
    10. '_s' → logprob: -6.319462299346924

Token 775: ' =' (ID: 314)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7973218560218811
    2. ' <=' → logprob: -1.5473217964172363
    3. '>' → logprob: -1.7973217964172363
    4. 'continue' → logprob: -3.0473217964172363
    5. '=' → logprob: -3.1723217964172363
    6. ' continue' → logprob: -3.5473217964172363
    7. '<=' → logprob: -3.6723217964172363
    8. ' -=' → logprob: -4.672321796417236
    9. '-' → logprob: -4.922321796417236
    10. '               ' → logprob: -5.922321796417236

Token 776: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.060365608893335e-05
    2. ' self' → logprob: -10.125041007995605
    3. '(self' → logprob: -15.125041007995605
    4. '   ' → logprob: -17.00004005432129
    5. '
' → logprob: -17.25004005432129
    6. '0' → logprob: -17.50004005432129
    7. '[self' → logprob: -18.25004005432129
    8. '	self' → logprob: -18.50004005432129
    9. '=self' → logprob: -19.00004005432129
    10. ' ' → logprob: -19.62504005432129

Token 777: '.hp' (ID: 97958)
  Prédit: '.hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hp' → logprob: -0.00024037064576987177
    2. 'hp' → logprob: -8.625240325927734
    3. 'self' → logprob: -11.125240325927734
    4. 'p' → logprob: -11.375240325927734
    5. '_hp' → logprob: -11.500240325927734
    6. ' hp' → logprob: -12.250240325927734
    7. '.p' → logprob: -12.375240325927734
    8. '.max' → logprob: -13.125240325927734
    9. 'max' → logprob: -13.250240325927734
    10. 'HP' → logprob: -13.250240325927734

Token 778: '_max' (ID: 13731)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.056653816252946854
    2. '+' → logprob: -2.9316537380218506
    3. '_' → logprob: -7.18165397644043
    4. '_max' → logprob: -7.55665397644043
    5. ')' → logprob: -8.93165397644043
    6. '<|end|>' → logprob: -9.55665397644043
    7. ' ' → logprob: -9.93165397644043
    8. '   ' → logprob: -10.30665397644043
    9. 'max' → logprob: -10.43165397644043
    10. '<|end|>' → logprob: -10.68165397644043

Token 779: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.43144509196281433
    2. '-' → logprob: -1.0564451217651367
    3. '-he' → logprob: -6.056445121765137
    4. '<|end|>' → logprob: -8.306445121765137
    5. ')' → logprob: -9.806445121765137
    6. '-self' → logprob: -11.306445121765137
    7. '+' → logprob: -11.681445121765137
    8. ',' → logprob: -11.931445121765137
    9. 'he' → logprob: -12.181445121765137
    10. '-p' → logprob: -12.306445121765137

Token 780: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00017982252757064998
    2. ' self' → logprob: -8.6251802444458
    3. '
' → logprob: -15.7501802444458
    4. '           ' → logprob: -16.750179290771484
    5. '(self' → logprob: -17.250179290771484
    6. '                   ' → logprob: -17.500179290771484
    7. '   ' → logprob: -18.000179290771484
    8. '=self' → logprob: -18.375179290771484
    9. '[self' → logprob: -18.500179290771484
    10. '	self' → logprob: -18.625179290771484

Token 781: '.hp' (ID: 97958)
  Prédit: '.hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hp' → logprob: -0.3869113624095917
    2. 'hp' → logprob: -1.136911392211914
    3. '_hp' → logprob: -10.886911392211914
    4. ' hp' → logprob: -11.136911392211914
    5. 'HP' → logprob: -12.886911392211914
    6. '.' → logprob: -13.761911392211914
    7. 'Hp' → logprob: -13.886911392211914
    8. '
' → logprob: -14.136911392211914
    9. '```' → logprob: -14.386911392211914
    10. 'self' → logprob: -14.886911392211914

Token 782: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 783: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004636776284314692
    2. '                   ' → logprob: -8.500463485717773
    3. 'if' → logprob: -9.125463485717773
    4. ' if' → logprob: -9.500463485717773
    5. '           ' → logprob: -11.000463485717773
    6. ',' → logprob: -11.625463485717773
    7. 'else' → logprob: -12.000463485717773
    8. '
' → logprob: -12.125463485717773
    9. '                
' → logprob: -12.125463485717773
    10. '              ' → logprob: -12.125463485717773

Token 784: ' effective' (ID: 8488)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.41024741530418396
    2. 'if' → logprob: -1.2852474451065063
    3. 'continue' → logprob: -3.660247325897217
    4. ' if' → logprob: -3.910247325897217
    5. '                   ' → logprob: -4.535247325897217
    6. '
' → logprob: -6.535247325897217
    7. ' continue' → logprob: -6.660247325897217
    8. '                       ' → logprob: -8.535247802734375
    9. '                
' → logprob: -8.660247802734375
    10. '           ' → logprob: -9.410247802734375

Token 785: ' healing' (ID: 26726)
  Prédit: 'heal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heal' → logprob: -0.5881599187850952
    2. 'he' → logprob: -0.9631599187850952
    3. ' healing' → logprob: -3.2131600379943848
    4. ' heal' → logprob: -3.9631600379943848
    5. '_he' → logprob: -6.713160037994385
    6. '+' → logprob: -7.588160037994385
    7. '```' → logprob: -7.713160037994385
    8. ' if' → logprob: -8.338159561157227
    9. 'if' → logprob: -8.338159561157227
    10. 'damage' → logprob: -9.088159561157227

Token 786: ' max' (ID: 2999)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000889067945536226
    2. '                   ' → logprob: -7.250889301300049
    3. '                
' → logprob: -9.50088882446289
    4. '<|end|>' → logprob: -10.12588882446289
    5. '           ' → logprob: -11.00088882446289
    6. '                ' → logprob: -11.62588882446289
    7. '                    
' → logprob: -11.87588882446289
    8. '              ' → logprob: -12.25088882446289
    9. '
' → logprob: -12.37588882446289
    10. '<|end|>' → logprob: -12.50088882446289

Token 787: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011941337026655674
    2. '                   ' → logprob: -4.511941432952881
    3. '                
' → logprob: -8.261940956115723
    4. '                    
' → logprob: -9.011940956115723
    5. '                ' → logprob: -9.136940956115723
    6. '           ' → logprob: -9.511940956115723
    7. ')' → logprob: -9.636940956115723
    8. '<|end|>' → logprob: -9.761940956115723
    9. '
' → logprob: -10.261940956115723
    10. '              ' → logprob: -10.511940956115723

Token 788: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009782671695575118
    2. '                   ' → logprob: -7.000978469848633
    3. '                
' → logprob: -10.250978469848633
    4. '                ' → logprob: -11.500978469848633
    5. '                    
' → logprob: -12.125978469848633
    6. '           ' → logprob: -12.125978469848633
    7. '              ' → logprob: -12.250978469848633
    8. '<|end|>' → logprob: -13.750978469848633
    9. '                       ' → logprob: -14.125978469848633
    10. ' if' → logprob: -14.250978469848633

Token 789: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00199608551338315
    2. ' if' → logprob: -6.751996040344238
    3. 'if' → logprob: -7.126996040344238
    4. '                   ' → logprob: -12.001996040344238
    5. '           ' → logprob: -12.501996040344238
    6. '       ' → logprob: -13.251996040344238
    7. '                
' → logprob: -13.501996040344238
    8. ',' → logprob: -13.876996040344238
    9. '                ' → logprob: -13.876996040344238
    10. 'token' → logprob: -13.876996040344238

Token 790: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003728774609044194
    2. 'if' → logprob: -8.000372886657715
    3. ' if' → logprob: -11.000372886657715
    4. '                
' → logprob: -11.500372886657715
    5. '                ' → logprob: -12.875372886657715
    6. '              ' → logprob: -13.125372886657715
    7. '                   ' → logprob: -13.250372886657715
    8. '           ' → logprob: -13.875372886657715
    9. '<|end|>' → logprob: -14.000372886657715
    10. '	           ' → logprob: -15.000372886657715

Token 791: ' after' (ID: 1934)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.9314736127853394
    2. 'self' → logprob: -1.3064736127853394
    3. 'heal' → logprob: -1.6814736127853394
    4. ' heal' → logprob: -1.9314736127853394
    5. 'hp' → logprob: -6.806473731994629
    6. ' hp' → logprob: -6.806473731994629
    7. '   ' → logprob: -7.181473731994629
    8. 'he' → logprob: -7.931473731994629
    9. '(self' → logprob: -8.868973731994629
    10. ' ' → logprob: -9.118973731994629

Token 792: ' healing' (ID: 26726)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.709294319152832
    2. 'heal' → logprob: -1.584294319152832
    3. ' self' → logprob: -1.959294319152832
    4. 'use' → logprob: -3.459294319152832
    5. '+' → logprob: -3.584294319152832
    6. 'he' → logprob: -3.709294319152832
    7. ' heal' → logprob: -3.834294319152832
    8. 'using' → logprob: -4.459294319152832
    9. ' +' → logprob: -4.584294319152832
    10. ' healing' → logprob: -4.834294319152832

Token 793: ' the' (ID: 290)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6619549989700317
    2. '+' → logprob: -0.9119549989700317
    3. 'self' → logprob: -2.911954879760742
    4. ' self' → logprob: -5.286954879760742
    5. '+self' → logprob: -5.286954879760742
    6. '>' → logprob: -5.411954879760742
    7. ',' → logprob: -5.661954879760742
    8. '               ' → logprob: -5.786954879760742
    9. '```' → logprob: -7.036954879760742
    10. '(self' → logprob: -7.036954879760742

Token 794: ' hp' (ID: 37774)
  Prédit: 'hp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hp' → logprob: -0.7229210734367371
    2. 'damage' → logprob: -1.3479211330413818
    3. 'self' → logprob: -1.7229211330413818
    4. 'heal' → logprob: -2.972921133041382
    5. 'agent' → logprob: -4.847920894622803
    6. ' damage' → logprob: -5.472920894622803
    7. ' hp' → logprob: -5.597920894622803
    8. 'needed' → logprob: -6.597920894622803
    9. ' self' → logprob: -6.722920894622803
    10. 'he' → logprob: -6.847920894622803

Token 795: ' is' (ID: 382)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04159228876233101
    2. '+' → logprob: -3.2915923595428467
    3. '>' → logprob: -6.166592121124268
    4. '               ' → logprob: -7.666592121124268
    5. ' >' → logprob: -7.916592121124268
    6. ' -' → logprob: -9.041592597961426
    7. '+self' → logprob: -9.166592597961426
    8. ' ' → logprob: -9.541592597961426
    9. '           ' → logprob: -9.541592597961426
    10. '```' → logprob: -9.791592597961426

Token 796: ' enough' (ID: 4951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5419210195541382
    2. ' >' → logprob: -0.9169210195541382
    3. '               ' → logprob: -5.291921138763428
    4. 'greater' → logprob: -5.416921138763428
    5. ' >=' → logprob: -5.791921138763428
    6. '+' → logprob: -6.166921138763428
    7. '>=' → logprob: -6.916921138763428
    8. ' greater' → logprob: -7.041921138763428
    9. '                   ' → logprob: -7.166921138763428
    10. ' +' → logprob: -7.541921138763428

Token 797: ' to' (ID: 316)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6787331700325012
    2. '               ' → logprob: -1.0537331104278564
    3. ' to' → logprob: -2.4287331104278564
    4. 'and' → logprob: -3.6787331104278564
    5. ',' → logprob: -4.8037333488464355
    6. '>' → logprob: -5.1787333488464355
    7. ':' → logprob: -5.6787333488464355
    8. ' >' → logprob: -6.1787333488464355
    9. ' for' → logprob: -6.3037333488464355
    10. 'to' → logprob: -6.3037333488464355

Token 798: ' survive' (ID: 30153)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.028534766286611557
    2. ' survive' → logprob: -4.278534889221191
    3. 'with' → logprob: -5.153534889221191
    4. 'cover' → logprob: -5.528534889221191
    5. ' withstand' → logprob: -6.903534889221191
    6. 'abs' → logprob: -6.903534889221191
    7. 'step' → logprob: -7.153534889221191
    8. 'take' → logprob: -7.278534889221191
    9. 'face' → logprob: -8.403534889221191
    10. 's' → logprob: -8.903534889221191

Token 799: ' damage' (ID: 10364)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18440628051757812
    2. ' and' → logprob: -2.184406280517578
    3. ' (' → logprob: -4.434406280517578
    4. ' to' → logprob: -4.684406280517578
    5. ':' → logprob: -4.809406280517578
    6. ',' → logprob: -4.934406280517578
    7. 'and' → logprob: -5.059406280517578
    8. ':
' → logprob: -5.309406280517578
    9. ' if' → logprob: -6.309406280517578
    10. 'to' → logprob: -6.934406280517578

Token 800: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.27675527334213257
    2. ' and' → logprob: -1.5267553329467773
    3. ':' → logprob: -4.526755332946777
    4. ',' → logprob: -5.151755332946777
    5. '                   ' → logprob: -5.276755332946777
    6. ':
' → logprob: -6.526755332946777
    7. 'and' → logprob: -7.526755332946777
    8. '           ' → logprob: -8.276755332946777
    9. '                ' → logprob: -9.151755332946777
    10. ' to' → logprob: -9.401755332946777

Token 801: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00017123986617662013
    2. '                   ' → logprob: -8.875171661376953
    3. '```' → logprob: -11.375171661376953
    4. '                
' → logprob: -12.125171661376953
    5. '                ' → logprob: -12.750171661376953
    6. ' if' → logprob: -12.750171661376953
    7. '                       ' → logprob: -12.875171661376953
    8. '           ' → logprob: -12.875171661376953
    9. '              ' → logprob: -13.875171661376953
    10. 'if' → logprob: -14.750171661376953

Token 802: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005197895807214081
    2. 'if' (adapté à ' if') → logprob: -7.750519752502441
    3. ' if' → logprob: -9.375519752502441
    4. '                   ' → logprob: -12.750519752502441
    5. '```' → logprob: -14.875519752502441
    6. '   ' → logprob: -15.250519752502441
    7. '           ' → logprob: -15.375519752502441
    8. '              ' → logprob: -16.000520706176758
    9. ' ' → logprob: -16.000520706176758
    10. '                       ' → logprob: -16.625520706176758

Token 803: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.15185123682022095
    2. 'self' → logprob: -2.151851177215576
    3. ' heal' → logprob: -3.776851177215576
    4. 'heal' → logprob: -6.901851177215576
    5. '               ' → logprob: -8.401851654052734
    6. '(self' → logprob: -9.401851654052734
    7. '                   ' → logprob: -9.526851654052734
    8. ' hp' → logprob: -9.714351654052734
    9. ' (' → logprob: -9.839351654052734
    10. 'he' → logprob: -9.901851654052734

Token 804: '.hp' (ID: 97958)
  Prédit: '.hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hp' → logprob: -0.01295020617544651
    2. '.' → logprob: -4.387950420379639
    3. ' .' → logprob: -8.38794994354248
    4. 'hp' → logprob: -8.88794994354248
    5. ' hp' → logprob: -11.01294994354248
    6. '._' → logprob: -11.13794994354248
    7. ' ' → logprob: -12.01294994354248
    8. '_hp' → logprob: -12.13794994354248
    9. ').' → logprob: -13.26294994354248
    10. '.pt' → logprob: -13.38794994354248

Token 805: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.014177965931594372
    2. '+' → logprob: -4.2641777992248535
    3. ' +
' → logprob: -12.264178276062012
    4. ' ' → logprob: -12.889178276062012
    5. '>' → logprob: -13.139178276062012
    6. ' >=' → logprob: -14.139178276062012
    7. ' >' → logprob: -14.264178276062012
    8. '<|end|>' → logprob: -15.014178276062012
    9. '    ' → logprob: -15.139178276062012
    10. ' plus' → logprob: -15.264178276062012

Token 806: ' heal' (ID: 40582)
  Prédit: 'heal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heal' → logprob: -0.0009883884340524673
    2. ' heal' → logprob: -7.000988483428955
    3. 'he' → logprob: -9.625988006591797
    4. 'max' → logprob: -12.125988006591797
    5. 'needed' → logprob: -12.625988006591797
    6. ' ' → logprob: -14.875988006591797
    7. '   ' → logprob: -15.500988006591797
    8. 'health' → logprob: -15.750988006591797
    9. 'hear' → logprob: -15.750988006591797
    10. 'Heal' → logprob: -15.750988006591797

Token 807: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.027952300384640694
    2. '+' → logprob: -4.027952194213867
    3. ' +' → logprob: -5.027952194213867
    4. '_he' → logprob: -6.777952194213867
    5. 'Sum' → logprob: -7.402952194213867
    6. '_loss' → logprob: -7.777952194213867
    7. 'sum' → logprob: -8.402952194213867
    8. ')' → logprob: -9.152952194213867
    9. 'he' → logprob: -9.402952194213867
    10. '_use' → logprob: -9.527952194213867

Token 808: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.049048300832509995
    2. '>' → logprob: -3.0490481853485107
    3. ' >=' → logprob: -8.17404842376709
    4. ' -' → logprob: -9.29904842376709
    5. ' ' → logprob: -10.17404842376709
    6. '>=' → logprob: -10.54904842376709
    7. '-' → logprob: -11.79904842376709
    8. '   ' → logprob: -12.17404842376709
    9. '               ' → logprob: -13.29904842376709
    10. ' >
' → logprob: -13.42404842376709

Token 809: ' needed' (ID: 6118)
  Prédit: 'needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'needed' → logprob: -0.0004011177225038409
    2. ' needed' → logprob: -7.875401020050049
    3. '=' → logprob: -11.750401496887207
    4. '   ' → logprob: -12.375401496887207
    5. 'damage' → logprob: -12.750401496887207
    6. 'need' → logprob: -13.125401496887207
    7. 'necessary' → logprob: -13.625401496887207
    8. 'required' → logprob: -14.125401496887207
    9. '0' → logprob: -14.250401496887207
    10. '
' → logprob: -14.875401496887207

Token 810: '_hp' (ID: 117795)
  Prédit: '_hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hp' → logprob: -0.0008222569595091045
    2. '_damage' → logprob: -7.875822067260742
    3. '_' → logprob: -8.750822067260742
    4. 'hp' → logprob: -9.125822067260742
    5. '_loss' → logprob: -9.625822067260742
    6. 'Hp' → logprob: -10.875822067260742
    7. '_p' → logprob: -11.500822067260742
    8. 'HP' → logprob: -11.500822067260742
    9. 'damage' → logprob: -12.000822067260742
    10. '_lp' → logprob: -12.000822067260742

Token 811: '_loss' (ID: 23902)
  Prédit: '_loss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_loss' → logprob: -9.472211968386546e-05
    2. '_damage' → logprob: -9.625094413757324
    3. '_' → logprob: -11.250094413757324
    4. ' _' → logprob: -11.875094413757324
    5. '```' → logprob: -13.750094413757324
    6. 'loss' → logprob: -13.875094413757324
    7. '_lo' → logprob: -14.000094413757324
    8. '       ' → logprob: -14.250094413757324
    9. '   ' → logprob: -14.500094413757324
    10. '_losses' → logprob: -14.875094413757324

Token 812: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11354287713766098
    2. '                   ' → logprob: -2.7385427951812744
    3. ' and' → logprob: -3.8635427951812744
    4. '               ' → logprob: -4.3635430335998535
    5. ':
' → logprob: -5.2385430335998535
    6. '                       ' → logprob: -6.4885430335998535
    7. '           ' → logprob: -7.2385430335998535
    8. '):' → logprob: -7.7385430335998535
    9. 'and' → logprob: -7.9885430335998535
    10. '                           ' → logprob: -9.113542556762695

Token 813: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006919850129634142
    2. '                       ' → logprob: -5.381919860839844
    3. '               ' → logprob: -6.881919860839844
    4. '                    ' → logprob: -7.756919860839844
    5. '                           ' → logprob: -8.506919860839844
    6. ':' → logprob: -8.756919860839844
    7. '                ' → logprob: -8.881919860839844
    8. '                    
' → logprob: -9.506919860839844
    9. '           ' → logprob: -10.006919860839844
    10. ')' → logprob: -10.631919860839844

Token 814: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.022137103602290154
    2. '                       ' → logprob: -4.02213716506958
    3. ' best' → logprob: -6.02213716506958
    4. 'best' → logprob: -7.52213716506958
    5. '               ' → logprob: -8.147136688232422
    6. '           ' → logprob: -8.147136688232422
    7. ' if' → logprob: -8.772136688232422
    8. '       ' → logprob: -9.397136688232422
    9. 'self' → logprob: -10.272136688232422
    10. ' for' → logprob: -10.272136688232422

Token 815: ' pick' (ID: 5230)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05176789313554764
    2. '                   ' → logprob: -3.6767678260803223
    3. ' if' → logprob: -3.9267678260803223
    4. 'best' → logprob: -5.801767826080322
    5. '                       ' → logprob: -6.926767826080322
    6. '               ' → logprob: -6.926767826080322
    7. '           ' → logprob: -9.05176830291748
    8. 'max' → logprob: -9.17676830291748
    9. 'current' → logprob: -9.92676830291748
    10. ' best' → logprob: -10.05176830291748

Token 816: ' minimal' (ID: 19957)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7245755791664124
    2. ' best' → logprob: -1.2245755195617676
    3. ' if' → logprob: -2.7245755195617676
    4. 'best' → logprob: -2.7245755195617676
    5. '                       ' → logprob: -2.9745755195617676
    6. 'if' → logprob: -3.8495755195617676
    7. '               ' → logprob: -5.349575519561768
    8. 'return' → logprob: -5.974575519561768
    9. '_best' → logprob: -5.974575519561768
    10. ' return' → logprob: -6.349575519561768

Token 817: ' healing' (ID: 26726)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.21650999784469604
    2. ' if' → logprob: -2.716510057449341
    3. '               ' → logprob: -3.591510057449341
    4. '                ' → logprob: -4.091509819030762
    5. '                       ' → logprob: -4.216509819030762
    6. '                    
' → logprob: -4.341509819030762
    7. '                    ' → logprob: -4.341509819030762
    8. 'if' → logprob: -4.966509819030762
    9. '_subset' → logprob: -5.341509819030762
    10. ' subset' → logprob: -5.716509819030762

Token 818: ' that' (ID: 484)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06860131770372391
    2. '                       ' → logprob: -2.818601369857788
    3. '               ' → logprob: -5.818601131439209
    4. ':' → logprob: -6.193601131439209
    5. '                    ' → logprob: -7.193601131439209
    6. ' and' → logprob: -8.568601608276367
    7. '                    
' → logprob: -9.068601608276367
    8. ',' → logprob: -9.568601608276367
    9. '                ' → logprob: -9.818601608276367
    10. '                  ' → logprob: -9.943601608276367

Token 819: ' allows' (ID: 7927)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7998344302177429
    2. '>=' → logprob: -1.4248344898223877
    3. 'is' → logprob: -2.5498344898223877
    4. ' is' → logprob: -2.7998344898223877
    5. ' >=' → logprob: -3.2998344898223877
    6. 'ex' → logprob: -3.9248344898223877
    7. ' be' → logprob: -4.174834251403809
    8. ' >' → logprob: -4.299834251403809
    9. 's' → logprob: -4.299834251403809
    10. 'sur' → logprob: -4.424834251403809

Token 820: ' survive' (ID: 30153)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.40842485427856445
    2. 'sur' → logprob: -2.1584248542785645
    3. '                       ' → logprob: -2.5334248542785645
    4. 'break' → logprob: -2.6584248542785645
    5. 'return' → logprob: -3.2834248542785645
    6. 'to' → logprob: -5.0334248542785645
    7. ' to' → logprob: -5.4084248542785645
    8. 'he' → logprob: -5.5334248542785645
    9. ' survive' → logprob: -6.0334248542785645
    10. ' survival' → logprob: -6.0334248542785645

Token 821: ' but' (ID: 889)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0017384823877364397
    2. '                       ' → logprob: -6.876738548278809
    3. '               ' → logprob: -8.126738548278809
    4. '                    ' → logprob: -9.251738548278809
    5. ',' → logprob: -9.501738548278809
    6. '                    
' → logprob: -9.626738548278809
    7. ' and' → logprob: -9.876738548278809
    8. '                  ' → logprob: -10.501738548278809
    9. '           ' → logprob: -10.876738548278809
    10. ':' → logprob: -11.001738548278809

Token 822: ' maxim' (ID: 29045)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.7268536686897278
    2. 'break' → logprob: -0.9768536686897278
    3. ' not' → logprob: -2.351853609085083
    4. '                   ' → logprob: -3.601853609085083
    5. '                       ' → logprob: -4.976853847503662
    6. 'not' → logprob: -5.226853847503662
    7. ' is' → logprob: -6.601853847503662
    8. ' return' → logprob: -7.726853847503662
    9. 'return' → logprob: -7.851853847503662
    10. 'continue' → logprob: -7.976853847503662

Token 823: 'izes' (ID: 6370)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.001631378778256476
    2. 'um' → logprob: -7.126631259918213
    3. 'izes' → logprob: -7.751631259918213
    4. 'imize' → logprob: -8.876631736755371
    5. 'aze' → logprob: -10.001631736755371
    6. '       ' → logprob: -10.126631736755371
    7. '   ' → logprob: -10.376631736755371
    8. 'al' → logprob: -10.751631736755371
    9. '                   ' → logprob: -11.126631736755371
    10. '               ' → logprob: -11.376631736755371

Token 824: ' hp' (ID: 37774)
  Prédit: 'heal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heal' → logprob: -0.4513867497444153
    2. 'he' → logprob: -1.0763866901397705
    3. ' healing' → logprob: -4.57638692855835
    4. ' heal' → logprob: -5.32638692855835
    5. 'hp' → logprob: -6.57638692855835
    6. 'len' → logprob: -7.45138692855835
    7. 'the' → logprob: -7.45138692855835
    8. '   ' → logprob: -7.45138692855835
    9. 'comb' → logprob: -7.82638692855835
    10. '```' → logprob: -8.076386451721191

Token 825: ' after' (ID: 1934)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2347988337278366
    2. '                       ' → logprob: -2.6097989082336426
    3. '                    ' → logprob: -2.8597989082336426
    4. '_' → logprob: -3.3597989082336426
    5. '               ' → logprob: -4.859798908233643
    6. ' _' → logprob: -5.234798908233643
    7. '                    
' → logprob: -5.484798908233643
    8. '                     ' → logprob: -6.109798908233643
    9. '                ' → logprob: -6.234798908233643
    10. ',' → logprob: -6.359798908233643

Token 826: '
' (ID: 198)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.28335627913475037
    2. 'use' → logprob: -2.158356189727783
    3. '_he' → logprob: -2.908356189727783
    4. '                   ' → logprob: -4.658356189727783
    5. '_use' → logprob: -4.783356189727783
    6. ' healing' → logprob: -4.783356189727783
    7. '_' → logprob: -4.783356189727783
    8. ' use' → logprob: -5.033356189727783
    9. 'heal' → logprob: -5.283356189727783
    10. '+' → logprob: -5.283356189727783

Token 827: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0318613275885582
    2. '                       ' → logprob: -4.031861305236816
    3. '                    ' → logprob: -5.406861305236816
    4. ':' → logprob: -5.531861305236816
    5. '               ' → logprob: -6.031861305236816
    6. ',' → logprob: -7.906861305236816
    7. '_' → logprob: -8.031861305236816
    8. ' and' → logprob: -8.031861305236816
    9. ')' → logprob: -8.406861305236816
    10. '                  ' → logprob: -8.406861305236816

Token 828: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.16608595848083496
    2. 'if' → logprob: -2.041085958480835
    3. ' if' → logprob: -3.791085958480835
    4. '                       ' → logprob: -7.791086196899414
    5. '               ' → logprob: -9.666086196899414
    6. '           ' → logprob: -10.916086196899414
    7. '   ' → logprob: -11.291086196899414
    8. 'current' → logprob: -11.541086196899414
    9. '                    ' → logprob: -12.291086196899414
    10. 'return' → logprob: -12.416086196899414

Token 829: ' but' (ID: 889)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07402956485748291
    2. 'if' → logprob: -2.8240294456481934
    3. ' if' → logprob: -4.449029445648193
    4. '               ' → logprob: -8.824029922485352
    5. '                       ' → logprob: -9.199029922485352
    6. '           ' → logprob: -10.949029922485352
    7. '   ' → logprob: -11.449029922485352
    8. '                    ' → logprob: -12.574029922485352
    9. '       ' → logprob: -12.824029922485352
    10. 'return' → logprob: -13.074029922485352

Token 830: ' problem' (ID: 4792)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.6239138841629028
    2. ' if' → logprob: -1.7489138841629028
    3. ' (' → logprob: -1.9989138841629028
    4. ' heal' → logprob: -2.1239137649536133
    5. 'heal' → logprob: -2.1239137649536133
    6. '                   ' → logprob: -2.3739137649536133
    7. 'self' → logprob: -2.8739137649536133
    8. '(' → logprob: -3.4989137649536133
    9. ' self' → logprob: -3.7489137649536133
    10. '(self' → logprob: -4.248913764953613

Token 831: ' is' (ID: 382)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6545360088348389
    2. ':' → logprob: -2.154536008834839
    3. '<|end|>' → logprob: -2.529536008834839
    4. '               ' → logprob: -3.529536008834839
    5. ')' → logprob: -3.654536008834839
    6. '                       ' → logprob: -3.779536008834839
    7. '_' → logprob: -3.904536008834839
    8. '):' → logprob: -3.904536008834839
    9. '.' → logprob: -4.029536247253418
    10. '_max' → logprob: -4.154536247253418

Token 832: ' just' (ID: 1327)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.738639235496521
    2. '                       ' → logprob: -1.113639235496521
    3. ' not' → logprob: -2.3636393547058105
    4. '                    ' → logprob: -4.3636393547058105
    5. ' if' → logprob: -4.8636393547058105
    6. ',' → logprob: -4.8636393547058105
    7. '               ' → logprob: -4.9886393547058105
    8. ':' → logprob: -5.1136393547058105
    9. 'he' → logprob: -5.4886393547058105
    10. ')' → logprob: -5.6136393547058105

Token 833: ' to' (ID: 316)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -1.0137931108474731
    2. '                   ' → logprob: -1.3887931108474731
    3. 'continue' → logprob: -2.6387929916381836
    4. 'return' → logprob: -2.7637929916381836
    5. 'to' → logprob: -3.3887929916381836
    6. 'he' → logprob: -3.6387929916381836
    7. ' to' → logprob: -4.013792991638184
    8. ' continue' → logprob: -4.138792991638184
    9. ' return' → logprob: -4.263792991638184
    10. 'if' → logprob: -4.388792991638184

Token 834: ' survive' (ID: 30153)
  Prédit: 'maximize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maximize' → logprob: -1.6124331951141357
    2. 'use' → logprob: -1.7374331951141357
    3. 'choose' → logprob: -2.2374331951141357
    4. 'sur' → logprob: -2.2374331951141357
    5. 'pick' → logprob: -2.7374331951141357
    6. 'return' → logprob: -2.7374331951141357
    7. 'continue' → logprob: -3.1124331951141357
    8. 'ensure' → logprob: -3.1124331951141357
    9. 'select' → logprob: -3.1124331951141357
    10. '                   ' → logprob: -3.4874331951141357

Token 835: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08981580287218094
    2. '                       ' → logprob: -2.839815855026245
    3. ':' → logprob: -4.339815616607666
    4. '               ' → logprob: -4.589815616607666
    5. '           ' → logprob: -6.964815616607666
    6. ':
' → logprob: -7.589815616607666
    7. '                    
' → logprob: -7.714815616607666
    8. '                    ' → logprob: -7.839815616607666
    9. '       ' → logprob: -7.839815616607666
    10. ' and' → logprob: -7.964815616607666

Token 836: ' so' (ID: 813)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004056671168655157
    2. '                       ' → logprob: -6.254056453704834
    3. '               ' → logprob: -6.754056453704834
    4. 'return' → logprob: -7.879056453704834
    5. 'continue' → logprob: -8.754056930541992
    6. '           ' → logprob: -9.004056930541992
    7. '                    ' → logprob: -9.754056930541992
    8. '       ' → logprob: -10.004056930541992
    9. '                  ' → logprob: -10.629056930541992
    10. '                    
' → logprob: -10.754056930541992

Token 837: ' pick' (ID: 5230)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7465305328369141
    2. 'if' → logprob: -1.871530532836914
    3. '                       ' → logprob: -2.121530532836914
    4. ' if' → logprob: -2.246530532836914
    5. 'return' → logprob: -2.246530532836914
    6. 'continue' → logprob: -3.996530532836914
    7. ' return' → logprob: -4.246530532836914
    8. ' continue' → logprob: -5.996530532836914
    9. 'self' → logprob: -6.246530532836914
    10. 'break' → logprob: -7.371530532836914

Token 838: ' minimal' (ID: 19957)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.17583023011684418
    2. 'best' → logprob: -2.925830125808716
    3. ' best' → logprob: -3.425830125808716
    4. ' comb' → logprob: -3.925830125808716
    5. 'comb' → logprob: -3.925830125808716
    6. '                   ' → logprob: -4.675830364227295
    7. 'he' → logprob: -5.050830364227295
    8. '               ' → logprob: -5.550830364227295
    9. 'the' → logprob: -5.675830364227295
    10. ' the' → logprob: -5.800830364227295

Token 839: ' healing' (ID: 26726)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 840: ' that' (ID: 484)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6383240818977356
    2. ':' → logprob: -0.8883240818977356
    3. '                       ' → logprob: -4.01332426071167
    4. ':
' → logprob: -4.13832426071167
    5. '               ' → logprob: -4.26332426071167
    6. ' and' → logprob: -5.38832426071167
    7. '.' → logprob: -6.63832426071167
    8. ',' → logprob: -6.63832426071167
    9. '                    ' → logprob: -6.76332426071167
    10. '):' → logprob: -7.38832426071167

Token 841: ' make' (ID: 1520)
  Prédit: 'allows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allows' → logprob: -0.8943938612937927
    2. ' allows' → logprob: -1.5193939208984375
    3. 's' → logprob: -2.5193939208984375
    4. ' suff' → logprob: -2.7693939208984375
    5. '>=' → logprob: -3.1443939208984375
    6. 'ex' → logprob: -3.3943939208984375
    7. '>' → logprob: -3.5193939208984375
    8. 'ens' → logprob: -4.1443939208984375
    9. 'ke' → logprob: -4.2693939208984375
    10. ' ensures' → logprob: -4.3943939208984375

Token 842: ' hp' (ID: 37774)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.24937866628170013
    2. 'hp' → logprob: -1.9993786811828613
    3. ' self' → logprob: -3.2493786811828613
    4. 'the' → logprob: -4.749378681182861
    5. '+' → logprob: -5.249378681182861
    6. ' hp' → logprob: -5.249378681182861
    7. '_' → logprob: -5.374378681182861
    8. 's' → logprob: -5.624378681182861
    9. ' the' → logprob: -5.624378681182861
    10. 'sure' → logprob: -5.874378681182861

Token 843: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.432302325963974
    2. '+' → logprob: -1.0573023557662964
    3. '>' → logprob: -6.932302474975586
    4. '_' → logprob: -7.057302474975586
    5. ' >' → logprob: -8.182302474975586
    6. '>=' → logprob: -8.557302474975586
    7. '_max' → logprob: -8.682302474975586
    8. ' ' → logprob: -8.682302474975586
    9. ' >=' → logprob: -8.682302474975586
    10. '_plus' → logprob: -9.057302474975586

Token 844: 'heal' (ID: 164482)
  Prédit: 'heal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heal' → logprob: -0.004016310907900333
    2. ' heal' → logprob: -5.879016399383545
    3. 'he' → logprob: -7.379016399383545
    4. '_he' → logprob: -7.754016399383545
    5. '_' → logprob: -9.754015922546387
    6. ' ' → logprob: -10.379015922546387
    7. '1' → logprob: -10.629015922546387
    8. '```' → logprob: -11.379015922546387
    9. '+' → logprob: -12.004015922546387
    10. '   ' → logprob: -12.629015922546387

Token 845: ' >' (ID: 1424)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4666975140571594
    2. ' +' → logprob: -1.8416974544525146
    3. '_sum' → logprob: -1.9666974544525146
    4. '               ' → logprob: -3.7166974544525146
    5. '           ' → logprob: -4.716697692871094
    6. '>' → logprob: -4.716697692871094
    7. '   ' → logprob: -4.966697692871094
    8. '>=' → logprob: -5.216697692871094
    9. ' >=' → logprob: -5.841697692871094
    10. ' ' → logprob: -6.216697692871094

Token 846: ' damage' (ID: 10364)
  Prédit: 'needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'needed' → logprob: -0.0008079635445028543
    2. ' needed' → logprob: -7.875807762145996
    3. '=' → logprob: -8.250807762145996
    4. 'damage' → logprob: -9.625807762145996
    5. 'self' → logprob: -9.875807762145996
    6. '0' → logprob: -11.125807762145996
    7. '```' → logprob: -11.625807762145996
    8. 'need' → logprob: -12.125807762145996
    9. 'required' → logprob: -12.500807762145996
    10. 'necessary' → logprob: -12.625807762145996

Token 847: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.24102285504341125
    2. ':' → logprob: -1.9910228252410889
    3. '               ' → logprob: -3.366022825241089
    4. ' and' → logprob: -4.366023063659668
    5. '                       ' → logprob: -4.366023063659668
    6. ':
' → logprob: -4.866023063659668
    7. ',' → logprob: -5.741023063659668
    8. '.' → logprob: -5.991023063659668
    9. '):' → logprob: -7.366023063659668
    10. 'and' → logprob: -7.741023063659668

Token 848: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.020502766594290733
    2. '               ' → logprob: -4.52050256729126
    3. '                       ' → logprob: -5.39550256729126
    4. '                    ' → logprob: -6.02050256729126
    5. ')' → logprob: -6.89550256729126
    6. '                ' → logprob: -7.89550256729126
    7. '                  ' → logprob: -8.395503044128418
    8. '           ' → logprob: -9.145503044128418
    9. '<|end|>' → logprob: -9.145503044128418
    10. '                    
' → logprob: -9.270503044128418

Token 849: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.048299118876457214
    2. 'if' (adapté à ' if') → logprob: -3.9232990741729736
    3. ' if' → logprob: -4.298299312591553
    4. '                       ' → logprob: -4.548299312591553
    5. '               ' → logprob: -6.673299312591553
    6. 'continue' → logprob: -7.298299312591553
    7. 'return' → logprob: -7.548299312591553
    8. 'for' → logprob: -8.548298835754395
    9. '           ' → logprob: -8.923298835754395
    10. ' continue' → logprob: -9.423298835754395

Token 850: ' max' (ID: 2999)
  Prédit: 'heal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heal' → logprob: -0.06450945883989334
    2. ' heal' → logprob: -3.314509391784668
    3. '(' → logprob: -4.564509391784668
    4. 'best' → logprob: -5.064509391784668
    5. ' (' → logprob: -5.814509391784668
    6. 'he' → logprob: -6.939509391784668
    7. '(not' → logprob: -7.064509391784668
    8. 'hp' → logprob: -7.064509391784668
    9. '(best' → logprob: -7.189509391784668
    10. 'max' → logprob: -7.189509391784668

Token 851: '_he' (ID: 94257)
  Prédit: '_he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_he' → logprob: -6.027225754223764e-05
    2. 'he' → logprob: -10.000060081481934
    3. '_' → logprob: -12.875060081481934
    4. '```' → logprob: -13.000060081481934
    5. '\' → logprob: -13.500060081481934
    6. ' healing' → logprob: -13.750060081481934
    7. '<' → logprob: -14.250060081481934
    8. '_h' → logprob: -14.250060081481934
    9. 'Healing' → logprob: -14.500060081481934
    10. '`' → logprob: -14.500060081481934

Token 852: 'aling' (ID: 7330)
  Prédit: 'aling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aling' → logprob: -0.1602739840745926
    2. 'al' → logprob: -1.9102740287780762
    3. 'aled' → logprob: -10.285273551940918
    4. 'alp' → logprob: -12.785273551940918
    5. 'alin' → logprob: -12.910273551940918
    6. 'alth' → logprob: -12.910273551940918
    7. 'alig' → logprob: -13.160273551940918
    8. 'als' → logprob: -13.285273551940918
    9. 'alable' → logprob: -14.660273551940918
    10. 'alid' → logprob: -15.285273551940918

Token 853: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2533099055290222
    2. ' <' → logprob: -1.503309965133667
    3. '==' → logprob: -7.003309726715088
    4. ' ==' → logprob: -8.628310203552246
    5. '=' → logprob: -8.878310203552246
    6. '<
' → logprob: -10.503310203552246
    7. '<th' → logprob: -10.503310203552246
    8. ' ' → logprob: -11.628310203552246
    9. '<int' → logprob: -11.628310203552246
    10. ' is' → logprob: -11.878310203552246

Token 854: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.697387966094539e-05
    2. ' ' → logprob: -9.375086784362793
    3. '<' → logprob: -14.500086784362793
    4. '=' → logprob: -15.437586784362793
    5. '1' → logprob: -16.06258773803711
    6. '   ' → logprob: -16.06258773803711
    7. '```' → logprob: -16.06258773803711
    8. '                       ' → logprob: -16.43758773803711
    9. ' or' → logprob: -16.62508773803711
    10. '  ' → logprob: -16.87508773803711

Token 855: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010998018842656165
    2. ' ' → logprob: -9.125109672546387
    3. '   ' → logprob: -15.625109672546387
    4. '  ' → logprob: -16.250110626220703
    5. '```' → logprob: -16.312610626220703
    6. '-' → logprob: -16.375110626220703
    7. ' ' → logprob: -16.937610626220703
    8. '1' → logprob: -17.187610626220703
    9. ' -' → logprob: -17.375110626220703
    10. '<' → logprob: -17.375110626220703

Token 856: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.008217616006731987
    2. 'or' → logprob: -4.883217811584473
    3. ':' → logprob: -7.758217811584473
    4. '                   ' → logprob: -10.008217811584473
    5. '               ' → logprob: -10.008217811584473
    6. '                       ' → logprob: -10.883217811584473
    7. '                           ' → logprob: -11.133217811584473
    8. '           ' → logprob: -11.883217811584473
    9. ':
' → logprob: -11.883217811584473
    10. ' and' → logprob: -11.883217811584473

Token 857: ' heal' (ID: 40582)
  Prédit: 'heal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heal' → logprob: -0.0033239840995520353
    2. ' heal' → logprob: -6.253324031829834
    3. 'he' → logprob: -6.753324031829834
    4. 'hp' → logprob: -9.628323554992676
    5. '   ' → logprob: -10.003323554992676
    6. 'len' → logprob: -10.503323554992676
    7. 'sum' → logprob: -11.003323554992676
    8. '(' → logprob: -11.378323554992676
    9. 'heur' → logprob: -11.878323554992676
    10. 'heap' → logprob: -12.003323554992676

Token 858: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -3.7385154428193346e-05
    2. '_' → logprob: -10.87503719329834
    3. '_s' → logprob: -12.37503719329834
    4. 'sum' → logprob: -12.50003719329834
    5. '               ' → logprob: -12.87503719329834
    6. '_subset' → logprob: -13.50003719329834
    7. '_sub' → logprob: -14.50003719329834
    8. ' _' → logprob: -14.50003719329834
    9. '_set' → logprob: -14.62503719329834
    10. '                   ' → logprob: -14.75003719329834

Token 859: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -1.1052603721618652
    2. '>=' → logprob: -1.3552603721618652
    3. '>' → logprob: -1.9802603721618652
    4. ' >=' → logprob: -2.3552603721618652
    5. '<=' → logprob: -2.4802603721618652
    6. ' <' → logprob: -2.9802603721618652
    7. ' <=' → logprob: -3.6052603721618652
    8. ' >' → logprob: -4.230260372161865
    9. '==' → logprob: -6.855260372161865
    10. '<
' → logprob: -8.855260848999023

Token 860: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0013742801966145635
    2. ' max' → logprob: -6.876374244689941
    3. 'heal' → logprob: -8.376374244689941
    4. 'best' → logprob: -9.501374244689941
    5. 'needed' → logprob: -12.251374244689941
    6. 'min' → logprob: -12.251374244689941
    7. '=' → logprob: -12.501374244689941
    8. 'he' → logprob: -12.626374244689941
    9. '=max' → logprob: -12.626374244689941
    10. 'pot' → logprob: -12.751374244689941

Token 861: '_he' (ID: 94257)
  Prédit: '_he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_he' → logprob: -3.011373155459296e-05
    2. 'he' → logprob: -10.500030517578125
    3. '_h' → logprob: -15.000030517578125
    4. '\' → logprob: -15.000030517578125
    5. '```' → logprob: -15.250030517578125
    6. 'Healing' → logprob: -15.375030517578125
    7. 'max' → logprob: -15.625030517578125
    8. ' healing' → logprob: -15.875030517578125
    9. '-he' → logprob: -16.125030517578125
    10. '_needed' → logprob: -16.125030517578125

Token 862: 'aling' (ID: 7330)
  Prédit: 'aling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aling' → logprob: -8.637786231702194e-05
    2. 'al' → logprob: -9.375086784362793
    3. 'ing' → logprob: -14.000086784362793
    4. 'alig' → logprob: -16.125085830688477
    5. 'aled' → logprob: -16.625085830688477
    6. 'alth' → logprob: -16.750085830688477
    7. 'eling' → logprob: -16.750085830688477
    8. 'alling' → logprob: -17.250085830688477
    9. 'ling' → logprob: -17.250085830688477
    10. 'align' → logprob: -17.500085830688477

Token 863: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04107528552412987
    2. '                       ' → logprob: -3.4160752296447754
    3. '                   ' → logprob: -5.916075229644775
    4. ':
' → logprob: -6.166075229644775
    5. ' and' → logprob: -6.916075229644775
    6. '                           ' → logprob: -7.416075229644775
    7. ' or' → logprob: -7.541075229644775
    8. '               ' → logprob: -8.791075706481934
    9. '                               ' → logprob: -9.041075706481934
    10. 'and' → logprob: -9.791075706481934

Token 864: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.09850140661001205
    2. '                   ' → logprob: -2.473501443862915
    3. '                           ' → logprob: -5.473501205444336
    4. '                               ' → logprob: -6.098501205444336
    5. '               ' → logprob: -6.723501205444336
    6. ':' → logprob: -6.848501205444336
    7. '           ' → logprob: -7.973501205444336
    8. '                        ' → logprob: -8.973501205444336
    9. '       ' → logprob: -9.848501205444336
    10. '                    ' → logprob: -10.098501205444336

Token 865: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.007557878736406565
    2. ' max' → logprob: -5.2575578689575195
    3. '                       ' → logprob: -6.6325578689575195
    4. 'best' → logprob: -7.2575578689575195
    5. '                           ' → logprob: -8.25755786895752
    6. '           ' → logprob: -11.13255786895752
    7. '                   ' → logprob: -11.38255786895752
    8. '               ' → logprob: -11.75755786895752
    9. ' best' → logprob: -13.00755786895752
    10. '                               ' → logprob: -13.50755786895752

Token 866: '_he' (ID: 94257)
  Prédit: '_he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_he' → logprob: -1.1472419600977446e-06
    2. 'he' → logprob: -14.250000953674316
    3. '\' → logprob: -15.250000953674316
    4. '_' → logprob: -16.125001907348633
    5. 'Healing' → logprob: -17.250001907348633
    6. '_health' → logprob: -18.125001907348633
    7. '_che' → logprob: -18.750001907348633
    8. 'He' → logprob: -18.750001907348633
    9. '_te' → logprob: -19.000001907348633
    10. ' healing' → logprob: -19.125001907348633

Token 867: 'aling' (ID: 7330)
  Prédit: 'aling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aling' → logprob: -2.5822400857578032e-05
    2. 'al' → logprob: -10.625025749206543
    3. 'ing' → logprob: -15.125025749206543
    4. 'ling' → logprob: -15.250025749206543
    5. 'eling' → logprob: -15.875025749206543
    6. ' healing' → logprob: -16.62502670288086
    7. 'align' → logprob: -16.75002670288086
    8. 'ging' → logprob: -16.87502670288086
    9. 'alig' → logprob: -16.87502670288086
    10. 'aled' → logprob: -17.00002670288086

Token 868: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005929393693804741
    2. ' =' → logprob: -5.130929470062256
    3. '=max' → logprob: -15.505928993225098
    4. '=
' → logprob: -15.630928993225098
    5. '=

' → logprob: -16.380929946899414
    6. '＝' → logprob: -16.505929946899414
    7. '                           ' → logprob: -16.755929946899414
    8. '<|end|>' → logprob: -17.005929946899414
    9. '=int' → logprob: -17.630929946899414
    10. '=}' → logprob: -17.755929946899414

Token 869: ' heal' (ID: 40582)
  Prédit: 'heal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heal' → logprob: -0.0001777960715116933
    2. ' heal' → logprob: -8.750177383422852
    3. 'he' → logprob: -10.875177383422852
    4. 'Heal' → logprob: -16.25017738342285
    5. 'hea' → logprob: -16.37517738342285
    6. 'heel' → logprob: -16.75017738342285
    7. 'hear' → logprob: -16.87517738342285
    8. 'heap' → logprob: -17.37517738342285
    9. '   ' → logprob: -17.50017738342285
    10. 'heur' → logprob: -17.50017738342285

Token 870: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0001657565007917583
    2. 'al' → logprob: -9.250165939331055
    3. 'aling' → logprob: -10.625165939331055
    4. 'Sum' → logprob: -10.750165939331055
    5. 'ing' → logprob: -11.625165939331055
    6. 'sum' → logprob: -12.875165939331055
    7. 'als' → logprob: -13.500165939331055
    8. '   ' → logprob: -13.750165939331055
    9. 'ed' → logprob: -13.875165939331055
    10. 'alc' → logprob: -14.000165939331055

Token 871: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.1247028037905693
    2. '                           ' → logprob: -2.4997026920318604
    3. '                        ' → logprob: -4.1247029304504395
    4. '```' → logprob: -5.6247029304504395
    5. '                               ' → logprob: -5.7497029304504395
    6. ')' → logprob: -5.7497029304504395
    7. '                   ' → logprob: -6.1247029304504395
    8. '                        
' → logprob: -6.7497029304504395
    9. '<|end|>' → logprob: -6.8747029304504395
    10. '_' → logprob: -6.9997029304504395

Token 872: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0016547059640288353
    2. '                        ' → logprob: -7.001654624938965
    3. '                   ' → logprob: -8.751654624938965
    4. '                        
' → logprob: -8.876654624938965
    5. '                           ' → logprob: -9.001654624938965
    6. ')' → logprob: -9.501654624938965
    7. '           ' → logprob: -9.876654624938965
    8. ',' → logprob: -10.001654624938965
    9. '               ' → logprob: -10.501654624938965
    10. '                      ' → logprob: -10.626654624938965

Token 873: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.005976554471999407
    2. ' best' → logprob: -5.130976676940918
    3. '                       ' → logprob: -10.005976676940918
    4. '	best' → logprob: -14.005976676940918
    5. '                   ' → logprob: -14.380976676940918
    6. '                           ' → logprob: -14.755976676940918
    7. '(best' → logprob: -15.130976676940918
    8. '               ' → logprob: -15.880976676940918
    9. '                        ' → logprob: -16.2559757232666
    10. '           ' → logprob: -16.2559757232666

Token 874: '_subset' (ID: 162934)
  Prédit: '_subset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_subset' → logprob: -9.746380237629637e-05
    2. 'subset' → logprob: -9.625097274780273
    3. '_' → logprob: -10.875097274780273
    4. 'Subset' → logprob: -12.625097274780273
    5. '_com' → logprob: -12.750097274780273
    6. 'com' → logprob: -12.750097274780273
    7. '_sub' → logprob: -13.875097274780273
    8. '_comb' → logprob: -14.000097274780273
    9. ' subset' → logprob: -14.875097274780273
    10. '_s' → logprob: -15.250097274780273

Token 875: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804171830415726
    2. ' =' → logprob: -3.288041830062866
    3. '=[]' → logprob: -16.538042068481445
    4. '=list' → logprob: -16.913042068481445
    5. '＝' → logprob: -17.038042068481445
    6. '=com' → logprob: -17.788042068481445
    7. '=

' → logprob: -18.038042068481445
    8. '=
' → logprob: -18.413042068481445
    9. '.=' → logprob: -18.413042068481445
    10. '    ' → logprob: -18.538042068481445

Token 876: ' comb' (ID: 4134)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.0169841255992651
    2. '[' → logprob: -4.141983985900879
    3. 'list' → logprob: -7.641983985900879
    4. '[i' → logprob: -8.016983985900879
    5. ' list' → logprob: -10.266983985900879
    6. '[list' → logprob: -10.641983985900879
    7. ' [' → logprob: -10.891983985900879
    8. '   ' → logprob: -11.141983985900879
    9. ' com' → logprob: -11.391983985900879
    10. '(com' → logprob: -11.516983985900879

Token 877: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1975385844707489
    2. 'b' → logprob: -1.9475386142730713
    3. '(' → logprob: -3.8225386142730713
    4. '()' → logprob: -5.572538375854492
    5. 'bination' → logprob: -5.697538375854492
    6. 'ination' → logprob: -5.822538375854492
    7. 'bi' → logprob: -6.822538375854492
    8. '[' → logprob: -7.072538375854492
    9. '(com' → logprob: -7.322538375854492
    10. 'com' → logprob: -7.322538375854492

Token 878: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027056082617491484
    2. '
' → logprob: -7.3777055740356445
    3. '           ' → logprob: -7.5027055740356445
    4. '                       ' → logprob: -7.8777055740356445
    5. '               ' → logprob: -8.002705574035645
    6. '                   ' → logprob: -8.127705574035645
    7. '                        
' → logprob: -8.627705574035645
    8. '        
' → logprob: -9.002705574035645
    9. ')' → logprob: -9.627705574035645
    10. '   ' → logprob: -9.627705574035645

Token 879: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008745048195123672
    2. '                       ' → logprob: -5.508745193481445
    3. '               ' → logprob: -6.258745193481445
    4. '                   ' → logprob: -6.883745193481445
    5. '           ' → logprob: -7.633745193481445
    6. '   ' → logprob: -7.758745193481445
    7. ')' → logprob: -8.008745193481445
    8. '                        
' → logprob: -8.633745193481445
    9. '        
' → logprob: -9.258745193481445
    10. '                           ' → logprob: -10.258745193481445

Token 880: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02040804550051689
    2. 'if' (adapté à ' if') → logprob: -4.3954081535339355
    3. ' if' → logprob: -5.1454081535339355
    4. '   ' → logprob: -7.1454081535339355
    5. '        
' → logprob: -7.7704081535339355
    6. ')' → logprob: -8.145407676696777
    7. '
' → logprob: -8.395407676696777
    8. 'for' → logprob: -9.270407676696777
    9. '```' → logprob: -9.520407676696777
    10. '           ' → logprob: -10.395407676696777

Token 881: ' max' (ID: 2999)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.09548657387495041
    2. 'max' → logprob: -2.970486640930176
    3. ' best' → logprob: -3.345486640930176
    4. ' max' → logprob: -5.970486640930176
    5. 'not' → logprob: -6.470486640930176
    6. ' not' → logprob: -7.720486640930176
    7. 'len' → logprob: -13.720486640930176
    8. '	best' → logprob: -13.970486640930176
    9. ' ' → logprob: -14.845486640930176
    10. '(best' → logprob: -15.970486640930176

Token 882: '_he' (ID: 94257)
  Prédit: '_he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_he' → logprob: -0.00018113377154804766
    2. '_' → logprob: -8.625181198120117
    3. '>' → logprob: -15.125181198120117
    4. '\' → logprob: -15.625181198120117
    5. '_che' → logprob: -16.125181198120117
    6. ')' → logprob: -16.500181198120117
    7. 'he' → logprob: -16.750181198120117
    8. '_health' → logprob: -16.750181198120117
    9. '_)' → logprob: -17.000181198120117
    10. '_subset' → logprob: -17.125181198120117

Token 883: 'aling' (ID: 7330)
  Prédit: 'aling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aling' → logprob: -3.4121114822482923e-06
    2. 'al' → logprob: -12.750003814697266
    3. 'Healing' → logprob: -15.500003814697266
    4. ' healing' → logprob: -17.500003814697266
    5. 'ing' → logprob: -17.750003814697266
    6. '
' → logprob: -17.750003814697266
    7. 'aled' → logprob: -17.875003814697266
    8. 'eling' → logprob: -18.000003814697266
    9. '_' → logprob: -18.250003814697266
    10. 'alig' → logprob: -18.500003814697266

Token 884: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2103235274553299
    2. '>' → logprob: -1.7103235721588135
    3. ':' → logprob: -4.835323333740234
    4. ' ==' → logprob: -7.085323333740234
    5. '==' → logprob: -9.460323333740234
    6. ' !=' → logprob: -12.335323333740234
    7. '>:' → logprob: -12.585323333740234
    8. '=' → logprob: -14.085323333740234
    9. ' ' → logprob: -14.210323333740234
    10. '   ' → logprob: -14.585323333740234

Token 885: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00317783304490149
    2. ' ' → logprob: -5.753177642822266
    3. '=' → logprob: -15.878177642822266
    4. '<|end|>' → logprob: -17.503177642822266
    5. '   ' → logprob: -19.128177642822266
    6. '  ' → logprob: -19.253177642822266
    7. ' ' → logprob: -19.378177642822266
    8. 'zero' → logprob: -19.503177642822266
    9. '۰' → logprob: -19.878177642822266
    10. ' zero' → logprob: -19.878177642822266

Token 886: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. 'self' → logprob: -18.625030517578125
    4. 'zero' → logprob: -19.750030517578125
    5. '  ' → logprob: -20.500030517578125
    6. '<|end|>' → logprob: -21.000030517578125
    7. '=' → logprob: -21.125030517578125
    8. ' ' → logprob: -21.625030517578125
    9. '۰' → logprob: -21.625030517578125
    10. '   ' → logprob: -21.750030517578125

Token 887: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3133952021598816
    2. ':
' → logprob: -1.3133952617645264
    3. '       ' → logprob: -9.563395500183105
    4. '           ' → logprob: -10.438395500183105
    5. '):
' → logprob: -11.688395500183105
    6. ',' → logprob: -11.813395500183105
    7. ':
' → logprob: -11.938395500183105
    8. ':

' → logprob: -12.313395500183105
    9. ' and' → logprob: -13.688395500183105
    10. '():
' → logprob: -13.813395500183105

Token 888: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008657119236886501
    2. '       ' → logprob: -5.508656978607178
    3. ':' → logprob: -5.883656978607178
    4. '```' → logprob: -7.508656978607178
    5. ':
' → logprob: -7.883656978607178
    6. '
' → logprob: -8.383657455444336
    7. '	       ' → logprob: -8.508657455444336
    8. '   ' → logprob: -9.383657455444336
    9. '	   ' → logprob: -9.758657455444336
    10. '            
' → logprob: -10.133657455444336

Token 889: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6362090110778809
    2. ' for' → logprob: -1.3862090110778809
    3. '           ' → logprob: -1.6362090110778809
    4. 'he' → logprob: -4.136209011077881
    5. 'self' → logprob: -5.386209011077881
    6. ' self' → logprob: -6.136209011077881
    7. 'heal' → logprob: -6.761209011077881
    8. 'used' → logprob: -7.261209011077881
    9. ' used' → logprob: -7.511209011077881
    10. '   ' → logprob: -7.886209011077881

Token 890: ' apply' (ID: 6096)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03002087213099003
    2. '           ' → logprob: -3.7800209522247314
    3. ' for' → logprob: -5.780020713806152
    4. 'self' → logprob: -6.530020713806152
    5. 'he' → logprob: -6.655020713806152
    6. '#' → logprob: -7.905020713806152
    7. 'used' → logprob: -8.155020713806152
    8. 'heal' → logprob: -8.780020713806152
    9. '   ' → logprob: -10.530020713806152
    10. 'selected' → logprob: -10.780020713806152

Token 891: ' the' (ID: 290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18151149153709412
    2. ' for' → logprob: -1.8065115213394165
    3. '           ' → logprob: -6.556511402130127
    4. '
' → logprob: -9.181511878967285
    5. '            
' → logprob: -9.931511878967285
    6. 'he' → logprob: -10.056511878967285
    7. 'heal' → logprob: -10.306511878967285
    8. '               ' → logprob: -10.806511878967285
    9. '   ' → logprob: -11.056511878967285
    10. ' healing' → logprob: -11.181511878967285

Token 892: ' best' (ID: 1636)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17318186163902283
    2. ' for' → logprob: -2.0481817722320557
    3. 'he' → logprob: -3.6731817722320557
    4. ' healing' → logprob: -6.548182010650635
    5. 'heal' → logprob: -6.673182010650635
    6. '           ' → logprob: -7.298182010650635
    7. 'p' → logprob: -7.798182010650635
    8. ' heal' → logprob: -8.923181533813477
    9. '_he' → logprob: -8.923181533813477
    10. 'pot' → logprob: -9.048181533813477

Token 893: ' healing' (ID: 26726)
  Prédit: '_subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_subset' → logprob: -0.013215885497629642
    2. ' for' → logprob: -5.013216018676758
    3. 'subset' → logprob: -6.263216018676758
    4. 'for' → logprob: -6.388216018676758
    5. '           ' → logprob: -6.513216018676758
    6. '_he' → logprob: -7.638216018676758
    7. '               ' → logprob: -8.388216018676758
    8. ' subset' → logprob: -8.388216018676758
    9. '   ' → logprob: -9.138216018676758
    10. ':' → logprob: -10.138216018676758

Token 894: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011415483430027962
    2. '
' → logprob: -5.136415481567383
    3. ' for' → logprob: -5.386415481567383
    4. ':' → logprob: -8.886415481567383
    5. '       ' → logprob: -8.886415481567383
    6. ',' → logprob: -9.011415481567383
    7. '            
' → logprob: -9.011415481567383
    8. ':
' → logprob: -9.136415481567383
    9. 'for' → logprob: -9.386415481567383
    10. '	       ' → logprob: -10.261415481567383

Token 895: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00024429336190223694
    2. ' for' → logprob: -8.625244140625
    3. 'for' → logprob: -10.000244140625
    4. ',' → logprob: -12.375244140625
    5. '       ' → logprob: -12.625244140625
    6. '
' → logprob: -12.750244140625
    7. '               ' → logprob: -12.750244140625
    8. '            
' → logprob: -13.500244140625
    9. '	       ' → logprob: -13.750244140625
    10. '		' → logprob: -14.000244140625

Token 896: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5984944701194763
    2. 'for' → logprob: -1.473494529724121
    3. 'he' → logprob: -2.223494529724121
    4. 'self' (adapté à ' self') → logprob: -2.348494529724121
    5. 'heal' → logprob: -4.473494529724121
    6. ' for' → logprob: -5.848494529724121
    7. ' self' → logprob: -6.598494529724121
    8. '   ' → logprob: -6.848494529724121
    9. 'total' → logprob: -8.348494529724121
    10. 'used' → logprob: -8.723494529724121

Token 897: '.hp' (ID: 97958)
  Prédit: '.hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hp' → logprob: -0.009801307693123817
    2. '.' → logprob: -4.634801387786865
    3. ' .' → logprob: -10.759800910949707
    4. '​.' → logprob: -11.634800910949707
    5. '.
' → logprob: -12.509800910949707
    6. '.he' → logprob: -12.759800910949707
    7. '.p' → logprob: -14.134800910949707
    8. '‌.' → logprob: -14.384800910949707
    9. '.hs' → logprob: -14.384800910949707
    10. '.health' → logprob: -14.384800910949707

Token 898: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.011952287517488003
    2. '+=' → logprob: -4.5119524002075195
    3. ' =' → logprob: -7.1369524002075195
    4. '=' → logprob: -9.13695240020752
    5. '+' → logprob: -14.13695240020752
    6. ' +' → logprob: -14.76195240020752
    7. ' ' → logprob: -16.636951446533203
    8. ']+=' → logprob: -16.886951446533203
    9. '    ' → logprob: -17.386951446533203
    10. ' ' → logprob: -18.011951446533203

Token 899: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.002411800203844905
    2. 'sum' → logprob: -6.127411842346191
    3. ' max' → logprob: -9.252411842346191
    4. 'int' → logprob: -9.627411842346191
    5. 'min' → logprob: -9.752411842346191
    6. 'pot' → logprob: -13.002411842346191
    7. ' sum' → logprob: -14.127411842346191
    8. '   ' → logprob: -14.252411842346191
    9. '(max' → logprob: -14.502411842346191
    10. 'best' → logprob: -14.627411842346191

Token 900: '_he' (ID: 94257)
  Prédit: '_he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_he' → logprob: -2.165027217415627e-05
    2. 'he' → logprob: -10.750021934509277
    3. 'Healing' → logprob: -16.12502098083496
    4. '\' → logprob: -17.12502098083496
    5. '_h' → logprob: -18.25002098083496
    6. '_health' → logprob: -18.37502098083496
    7. ' healing' → logprob: -19.37502098083496
    8. '.he' → logprob: -19.75002098083496
    9. '```' → logprob: -19.75002098083496
    10. 'He' → logprob: -19.87502098083496

Token 901: 'aling' (ID: 7330)
  Prédit: 'aling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aling' → logprob: -1.5048530030981055e-06
    2. 'al' → logprob: -14.125001907348633
    3. 'ing' → logprob: -15.500001907348633
    4. '_he' → logprob: -16.000001907348633
    5. '_al' → logprob: -16.875001907348633
    6. 'eling' → logprob: -17.000001907348633
    7. 'alig' → logprob: -17.000001907348633
    8. 'aled' → logprob: -17.125001907348633
    9. 'ling' → logprob: -17.250001907348633
    10. '
' → logprob: -17.375001907348633

Token 902: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 903: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 904: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8045474886894226
    2. '           ' → logprob: -1.3045475482940674
    3. ' for' → logprob: -1.3045475482940674
    4. 'return' → logprob: -5.429547309875488
    5. '<|end|>' → logprob: -5.804547309875488
    6. '       ' → logprob: -6.429547309875488
    7. '```' → logprob: -7.554547309875488
    8. 'self' → logprob: -8.554547309875488
    9. '   ' → logprob: -8.929547309875488
    10. '#' → logprob: -9.679547309875488

Token 905: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.130576806142926e-05
    2. ' self' → logprob: -10.375031471252441
    3. '	self' → logprob: -18.125030517578125
    4. '           ' → logprob: -18.250030517578125
    5. '(self' → logprob: -18.750030517578125
    6. '
' → logprob: -19.250030517578125
    7. '   ' → logprob: -19.375030517578125
    8. 'Self' → logprob: -20.125030517578125
    9. '>' → logprob: -20.500030517578125
    10. 's' → logprob: -20.875030517578125

Token 906: '.hp' (ID: 97958)
  Prédit: '.hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hp' → logprob: -5.676981345459353e-06
    2. '.' → logprob: -12.125005722045898
    3. 'hp' → logprob: -16.3750057220459
    4. '>' → logprob: -16.5000057220459
    5. '.ip' → logprob: -17.5000057220459
    6. '>.' → logprob: -18.6250057220459
    7. ' .' → logprob: -19.1250057220459
    8. '.bp' → logprob: -19.2500057220459
    9. ' hp' → logprob: -19.5000057220459
    10. '.hg' → logprob: -19.6250057220459

Token 907: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.20142152905464172
    2. ' >' → logprob: -1.7014214992523193
    3. '_' → logprob: -12.201421737670898
    4. ' ' → logprob: -13.076421737670898
    5. ' >
' → logprob: -14.701421737670898
    6. ' >
' → logprob: -15.076421737670898
    7. ' ' → logprob: -15.701421737670898
    8. '>
' → logprob: -16.3264217376709
    9. ' >

' → logprob: -17.5764217376709
    10. '_max' → logprob: -17.9514217376709

Token 908: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00033558503491804004
    2. ' self' → logprob: -8.000335693359375
    3. '
' → logprob: -16.250335693359375
    4. '=self' → logprob: -19.125335693359375
    5. '	self' → logprob: -19.500335693359375
    6. '(self' → logprob: -19.625335693359375
    7. '[self' → logprob: -20.375335693359375
    8. '           ' → logprob: -20.375335693359375
    9. '0' → logprob: -21.250335693359375
    10. '   ' → logprob: -21.375335693359375

Token 909: '.hp' (ID: 97958)
  Prédit: '.hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hp' → logprob: -0.0007314971298910677
    2. '._' → logprob: -7.500731468200684
    3. '_hp' → logprob: -8.875731468200684
    4. '.' → logprob: -10.875731468200684
    5. '_.' → logprob: -12.000731468200684
    6. 'hp' → logprob: -12.375731468200684
    7. '_max' → logprob: -13.125731468200684
    8. ' .' → logprob: -13.125731468200684
    9. '.max' → logprob: -13.625731468200684
    10. ' hp' → logprob: -14.125731468200684

Token 910: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -6.988221684878226e-06
    2. 'max' → logprob: -12.000006675720215
    3. 'Max' → logprob: -14.250006675720215
    4. '_' → logprob: -16.50000762939453
    5. '_MAX' → logprob: -16.50000762939453
    6. '_min' → logprob: -19.25000762939453
    7. '_Max' → logprob: -19.37500762939453
    8. ' _' → logprob: -19.75000762939453
    9. '```' → logprob: -20.12500762939453
    10. ' max' → logprob: -20.50000762939453

Token 911: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010549608850851655
    2. ':
' → logprob: -7.251054763793945
    3. '=' → logprob: -8.626054763793945
    4. '<|end|>' → logprob: -9.751054763793945
    5. '           ' → logprob: -10.376054763793945
    6. '):' → logprob: -10.376054763793945
    7. ')' → logprob: -10.876054763793945
    8. ' =' → logprob: -12.251054763793945
    9. '               ' → logprob: -12.501054763793945
    10. '       ' → logprob: -12.751054763793945

Token 912: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004162095487117767
    2. 'self' → logprob: -6.129162311553955
    3. ' =' → logprob: -7.129162311553955
    4. ' self' → logprob: -7.254162311553955
    5. '=' → logprob: -8.004161834716797
    6. '           ' → logprob: -10.004161834716797
    7. '=self' → logprob: -10.754161834716797
    8. '```' → logprob: -10.879161834716797
    9. '<|end|>' → logprob: -12.129161834716797
    10. ' ' → logprob: -12.129161834716797

Token 913: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07942252606153488
    2. ' self' → logprob: -2.5794224739074707
    3. '               ' → logprob: -7.829422473907471
    4. '           ' → logprob: -9.079422950744629
    5. '=' → logprob: -11.204422950744629
    6. ' =' → logprob: -13.329422950744629
    7. '   ' → logprob: -13.454422950744629
    8. '=self' → logprob: -13.704422950744629
    9. '	self' → logprob: -14.329422950744629
    10. ' ' → logprob: -15.204422950744629

Token 914: '.hp' (ID: 97958)
  Prédit: '.hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hp' → logprob: -0.000356199947418645
    2. '=' → logprob: -8.750356674194336
    3. '_hp' → logprob: -9.125356674194336
    4. 'hp' → logprob: -10.000356674194336
    5. '.' → logprob: -10.375356674194336
    6. ' =' → logprob: -12.250356674194336
    7. ' hp' → logprob: -12.625356674194336
    8. '.=' → logprob: -13.375356674194336
    9. '_' → logprob: -14.000356674194336
    10. '._' → logprob: -14.875356674194336

Token 915: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007100477814674377
    2. ' =' → logprob: -7.2507100105285645
    3. '=
' → logprob: -17.000709533691406
    4. '=max' → logprob: -18.500709533691406
    5. '＝' → logprob: -19.250709533691406
    6. '=

' → logprob: -19.250709533691406
    7. '.=' → logprob: -19.500709533691406
    8. '=}' → logprob: -20.125709533691406
    9. '+=' → logprob: -20.625709533691406
    10. '=int' → logprob: -21.000709533691406

Token 916: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001584850688232109
    2. ' self' → logprob: -8.750158309936523
    3. '           ' → logprob: -19.500158309936523
    4. '               ' → logprob: -19.750158309936523
    5. '(self' → logprob: -20.875158309936523
    6. '
' → logprob: -21.000158309936523
    7. '	self' → logprob: -22.625158309936523
    8. '   ' → logprob: -22.750158309936523
    9. '       ' → logprob: -22.750158309936523
    10. '[self' → logprob: -23.125158309936523

Token 917: '.hp' (ID: 97958)
  Prédit: '.hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hp' → logprob: -0.0033931334037333727
    2. '_max' → logprob: -6.128393173217773
    3. '_hp' → logprob: -7.003393173217773
    4. 'max' → logprob: -8.878393173217773
    5. '._' → logprob: -9.503393173217773
    6. 'hp' → logprob: -9.753393173217773
    7. '_.' → logprob: -11.628393173217773
    8. 'Max' → logprob: -11.878393173217773
    9. '.max' → logprob: -12.003393173217773
    10. 'self' → logprob: -14.503393173217773

Token 918: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -3.292907877039397e-06
    2. 'max' → logprob: -12.87500286102295
    3. 'Max' → logprob: -15.50000286102295
    4. '_MAX' → logprob: -15.50000286102295
    5. '._' → logprob: -16.250003814697266
    6. '_' → logprob: -16.750003814697266
    7. '.max' → logprob: -17.750003814697266
    8. ' _' → logprob: -18.375003814697266
    9. '_min' → logprob: -19.750003814697266
    10. '_Max' → logprob: -19.750003814697266

Token 919: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 920: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 921: ' Patrol' (ID: 89322)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.6323479413986206
    2. 'Player' → logprob: -2.13234806060791
    3. 'Path' → logprob: -2.38234806060791
    4. 'Pat' → logprob: -3.13234806060791
    5. 'Agent' → logprob: -3.25734806060791
    6. 'Explorer' → logprob: -3.25734806060791
    7. 'Dungeon' → logprob: -3.88234806060791
    8. 'Simulation' → logprob: -4.13234806060791
    9. 'Trap' → logprob: -4.38234806060791
    10. 'C' → logprob: -4.50734806060791

Token 922: 'Route' (ID: 7656)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08026053756475449
    2. 'Step' → logprob: -2.9552605152130127
    3. ':
' → logprob: -3.7052605152130127
    4. 'Type' → logprob: -8.580260276794434
    5. '(P' → logprob: -9.455260276794434
    6. 'Pat' → logprob: -9.455260276794434
    7. '(S' → logprob: -10.455260276794434
    8. '_step' → logprob: -10.830260276794434
    9. '(' → logprob: -11.330260276794434
    10. '):' → logprob: -11.330260276794434

Token 923: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002497537061572075
    2. ':
' → logprob: -6.002497673034668
    3. '(' → logprob: -11.877497673034668
    4. '<|end|>' → logprob: -12.627497673034668
    5. '```' → logprob: -12.752497673034668
    6. ':def' → logprob: -13.002497673034668
    7. '):' → logprob: -13.752497673034668
    8. '<class' → logprob: -14.252497673034668
    9. ':

' → logprob: -14.252497673034668
    10. '(object' → logprob: -14.252497673034668

Token 924: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014833441004157066
    2. 'class' → logprob: -4.264833450317383
    3. 'def' → logprob: -7.639833450317383
    4. '```' → logprob: -9.139833450317383
    5. ' def' → logprob: -10.264833450317383
    6. ' class' → logprob: -10.389833450317383
    7. ':' → logprob: -12.514833450317383
    8. '
' → logprob: -12.889833450317383
    9. '    ' → logprob: -13.264833450317383
    10. ':
' → logprob: -13.764833450317383

Token 925: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.002228525234386325
    2. 'class' → logprob: -6.627228736877441
    3. '   ' → logprob: -7.127228736877441
    4. ' def' → logprob: -9.627228736877441
    5. '```' → logprob: -10.877228736877441
    6. '__' → logprob: -11.252228736877441
    7. '	def' → logprob: -14.127228736877441
    8. 'from' → logprob: -15.377228736877441
    9. '
' → logprob: -15.877228736877441
    10. ':' → logprob: -16.127227783203125

Token 926: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.21462224423885345
    2. '```' → logprob: -2.4646222591400146
    3. 'init' → logprob: -2.7146222591400146
    4. 'def' → logprob: -4.2146220207214355
    5. ' __' → logprob: -4.3396220207214355
    6. 'class' → logprob: -4.3396220207214355
    7. 'classmethod' → logprob: -7.9646220207214355
    8. 'list' → logprob: -8.964622497558594
    9. '___' → logprob: -9.339622497558594
    10. ' def' → logprob: -9.589622497558594

Token 927: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.319370302458992e-06
    2. 'class' → logprob: -12.875005722045898
    3. 'def' → logprob: -13.375005722045898
    4. 'it' → logprob: -14.125005722045898
    5. '```' → logprob: -15.875005722045898
    6. 'iter' → logprob: -16.1250057220459
    7. '_init' → logprob: -16.2500057220459
    8. '__' → logprob: -17.0000057220459
    9. '(init' → logprob: -17.3750057220459
    10. 'ini' → logprob: -17.6250057220459

Token 928: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0001835141738411039
    2. '(self' → logprob: -8.75018310546875
    3. '__' → logprob: -11.25018310546875
    4. '__(
' → logprob: -11.50018310546875
    5. '(' → logprob: -14.12518310546875
    6. 'self' → logprob: -14.50018310546875
    7. '_(' → logprob: -15.25018310546875
    8. '__((' → logprob: -15.37518310546875
    9. '__('' → logprob: -17.37518310546875
    10. 'class' → logprob: -17.75018310546875

Token 929: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0683535037969705e-05
    2. ' self' → logprob: -11.50001049041748
    3. '       ' → logprob: -15.37501049041748
    4. '
' → logprob: -16.250011444091797
    5. '   ' → logprob: -16.500011444091797
    6. ',' → logprob: -17.125011444091797
    7. '(self' → logprob: -17.875011444091797
    8. 'pat' → logprob: -18.875011444091797
    9. 'class' → logprob: -19.125011444091797
    10. '```' → logprob: -19.125011444091797

Token 930: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0794471800327301
    2. 'self' → logprob: -2.5794472694396973
    3. '(self' → logprob: -7.829447269439697
    4. ' self' → logprob: -10.079446792602539
    5. ',self' → logprob: -10.329446792602539
    6. '   ' → logprob: -10.704446792602539
    7. '__(' → logprob: -11.079446792602539
    8. ' (' → logprob: -11.329446792602539
    9. 'class' → logprob: -11.579446792602539
    10. '(' → logprob: -11.704446792602539

Token 931: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.003988404292613268
    2. 'self' → logprob: -5.628988265991211
    3. 'pat' → logprob: -8.378988265991211
    4. ' steps' → logprob: -9.128988265991211
    5. '   ' → logprob: -10.378988265991211
    6. 'step' → logprob: -12.128988265991211
    7. '       ' → logprob: -12.628988265991211
    8. 'start' → logprob: -12.878988265991211
    9. 'path' → logprob: -13.628988265991211
    10. ' patrol' → logprob: -13.753988265991211

Token 932: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5804335474967957
    2. '):' → logprob: -1.5804336071014404
    3. ':' → logprob: -1.7054336071014404
    4. '):
' → logprob: -3.0804336071014404
    5. '   ' → logprob: -5.705433368682861
    6. '       ' → logprob: -6.455433368682861
    7. '[]):' → logprob: -7.830433368682861
    8. '=' → logprob: -8.70543384552002
    9. ':list' → logprob: -8.83043384552002
    10. '=[]' → logprob: -8.95543384552002

Token 933: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19974574446678162
    2. 'self' → logprob: -1.824745774269104
    3. 'def' → logprob: -4.6997456550598145
    4. '[' → logprob: -5.3247456550598145
    5. '   ' → logprob: -5.8247456550598145
    6. '(self' → logprob: -6.1997456550598145
    7. ' self' → logprob: -7.8247456550598145
    8. '(' → logprob: -8.699746131896973
    9. '[self' → logprob: -9.574746131896973
    10. '```' → logprob: -10.199746131896973

Token 934: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -1.1994775377388578e-05
    2. '       ' → logprob: -11.500012397766113
    3. ' self' → logprob: -13.250012397766113
    4. 'steps' → logprob: -16.750011444091797
    5. '   ' → logprob: -18.375011444091797
    6. '	self' → logprob: -20.250011444091797
    7. '[self' → logprob: -20.375011444091797
    8. '(self' → logprob: -20.875011444091797
    9. '[' → logprob: -23.000011444091797
    10. '[]' → logprob: -23.125011444091797

Token 935: '.steps' (ID: 126813)
  Prédit: '.steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.steps' → logprob: -0.0010398367885500193
    2. '.' → logprob: -7.126039981842041
    3. 'steps' → logprob: -8.501039505004883
    4. ' .' → logprob: -10.501039505004883
    5. '_steps' → logprob: -12.876039505004883
    6. '=' → logprob: -14.751039505004883
    7. ' =' → logprob: -14.876039505004883
    8. 'Steps' → logprob: -14.876039505004883
    9. '.step' → logprob: -15.126039505004883
    10. '.st' → logprob: -15.126039505004883

Token 936: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04861030355095863
    2. ' =' → logprob: -3.048610210418701
    3. '   ' → logprob: -11.04861068725586
    4. '=[]' → logprob: -12.67361068725586
    5. ':' → logprob: -13.54861068725586
    6. '       ' → logprob: -14.17361068725586
    7. '.extend' → logprob: -14.42361068725586
    8. '=self' → logprob: -15.04861068725586
    9. ')' → logprob: -15.04861068725586
    10. '.append' → logprob: -15.29861068725586

Token 937: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.0018059646245092154
    2. ' steps' → logprob: -6.501805782318115
    3. '[]' → logprob: -8.126806259155273
    4. ' []' → logprob: -12.126806259155273
    5. '[' → logprob: -13.251806259155273
    6. '[]}' → logprob: -14.876806259155273
    7. '[]
' → logprob: -15.501806259155273
    8. '.steps' → logprob: -16.126806259155273
    9. 'list' → logprob: -17.001806259155273
    10. '[]

' → logprob: -17.376806259155273

Token 938: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9966403245925903
    2. '
' → logprob: -1.2466403245925903
    3. 'def' → logprob: -1.3716403245925903
    4. '<|end|>' → logprob: -2.996640205383301
    5. ' def' → logprob: -3.371640205383301
    6. '<|end|>' → logprob: -5.996640205383301
    7. 'class' → logprob: -6.746640205383301
    8. ',' → logprob: -7.621640205383301
    9. '```' → logprob: -8.1216402053833
    10. '    
' → logprob: -8.2466402053833

Token 939: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 940: ' list' (ID: 1562)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.8735712766647339
    2. 'List' → logprob: -1.1235712766647339
    3. 'list' → logprob: -1.3735712766647339
    4. '[]' → logprob: -5.623571395874023
    5. '[' → logprob: -7.748571395874023
    6. '[List' → logprob: -8.998571395874023
    7. '[]
' → logprob: -10.498571395874023
    8. '_list' → logprob: -12.123571395874023
    9. '[
' → logprob: -12.123571395874023
    10. ' steps' → logprob: -12.748571395874023

Token 941: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7886171340942383
    2. 'of' → logprob: -1.0386171340942383
    3. ' of' → logprob: -1.6636171340942383
    4. '[P' → logprob: -7.038617134094238
    5. '[int' → logprob: -8.413617134094238
    6. '   ' → logprob: -8.788617134094238
    7. '[class' → logprob: -8.913617134094238
    8. '<|end|>' → logprob: -8.913617134094238
    9. '[List' → logprob: -9.163617134094238
    10. '[
' → logprob: -9.663617134094238

Token 942: ' Patrol' (ID: 89322)
  Prédit: 'Pat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pat' → logprob: 0.0
    2. ' Patrol' → logprob: -17.875
    3. 'pat' → logprob: -20.375
    4. 'Pet' → logprob: -20.625
    5. '`' → logprob: -21.25
    6. 'Patent' → logprob: -22.25
    7. '   ' → logprob: -22.375
    8. '_pat' → logprob: -22.5
    9. 'Pan' → logprob: -22.75
    10. '```' → logprob: -23.0

Token 943: 'Step' (ID: 10643)
  Prédit: 'Step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Step' → logprob: -1.27099974633893e-05
    2. 'Steps' → logprob: -11.375012397766113
    3. '[' → logprob: -15.000012397766113
    4. 'Stop' → logprob: -15.000012397766113
    5. '_step' → logprob: -16.75001335144043
    6. 'Ste' → logprob: -16.75001335144043
    7. 'Route' → logprob: -16.87501335144043
    8. '```' → logprob: -16.87501335144043
    9. 'step' → logprob: -17.00001335144043
    10. 'S' → logprob: -17.12501335144043

Token 944: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11669965088367462
    2. 'def' → logprob: -2.741699695587158
    3. '
' → logprob: -4.116699695587158
    4. '<|end|>' → logprob: -4.241699695587158
    5. ' def' → logprob: -4.866699695587158
    6. ')' → logprob: -5.491699695587158
    7. ',' → logprob: -7.741699695587158
    8. 'class' → logprob: -7.866699695587158
    9. '<|end|>' → logprob: -7.866699695587158
    10. ')
' → logprob: -7.866699695587158

Token 945: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01364012248814106
    2. '
' → logprob: -5.1386399269104
    3. '<|end|>' → logprob: -5.1386399269104
    4. 'def' → logprob: -6.8886399269104
    5. 'class' → logprob: -7.8886399269104
    6. '<|end|>' → logprob: -9.138640403747559
    7. '```' → logprob: -9.638640403747559
    8. ')' → logprob: -9.888640403747559
    9. ' ' → logprob: -10.013640403747559
    10. ',' → logprob: -10.263640403747559

Token 946: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5722522735595703
    2. '   ' → logprob: -1.1972522735595703
    3. '
' → logprob: -2.1972522735595703
    4. ' def' → logprob: -4.32225227355957
    5. '<|end|>' → logprob: -4.94725227355957
    6. '    
' → logprob: -7.07225227355957
    7. '<|end|>' → logprob: -7.69725227355957
    8. '```' → logprob: -8.57225227355957
    9. ' ' → logprob: -8.82225227355957
    10. '        
' → logprob: -8.82225227355957

Token 947: ' expand' (ID: 10791)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00122070184443146
    2. 'get' → logprob: -7.876220703125
    3. ' __' → logprob: -8.001220703125
    4. 'next' → logprob: -8.376220703125
    5. 'len' → logprob: -9.626220703125
    6. 'def' → logprob: -10.001220703125
    7. 'iter' → logprob: -10.001220703125
    8. 'current' → logprob: -10.501220703125
    9. 'iterator' → logprob: -10.751220703125
    10. '___' → logprob: -11.126220703125

Token 948: '_path' (ID: 5558)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0069398521445691586
    2. '(' → logprob: -5.006939888000488
    3. '(
' → logprob: -9.256939888000488
    4. 'self' → logprob: -9.756939888000488
    5. '_steps' → logprob: -10.756939888000488
    6. 'def' → logprob: -11.256939888000488
    7. '   ' → logprob: -12.006939888000488
    8. '_pat' → logprob: -12.506939888000488
    9. '_route' → logprob: -12.506939888000488
    10. ' (' → logprob: -12.631939888000488

Token 949: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009294486371800303
    2. '(' → logprob: -7.000929355621338
    3. '   ' → logprob: -11.500929832458496
    4. '(
' → logprob: -12.500929832458496
    5. ' (' → logprob: -13.250929832458496
    6. 'self' → logprob: -13.625929832458496
    7. '(s' → logprob: -14.875929832458496
    8. '       ' → logprob: -15.250929832458496
    9. 'def' → logprob: -15.625929832458496
    10. ' ' → logprob: -16.25092887878418

Token 950: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6505066156387329
    2. ',' → logprob: -1.775506615638733
    3. 'self' → logprob: -1.775506615638733
    4. '):' → logprob: -2.6505064964294434
    5. '(' → logprob: -3.1505064964294434
    6. '):
' → logprob: -4.275506496429443
    7. ')' → logprob: -6.025506496429443
    8. 'def' → logprob: -6.400506496429443
    9. '(
' → logprob: -6.525506496429443
    10. '{' → logprob: -6.900506496429443

Token 951: ' start' (ID: 1604)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03689609840512276
    2. '):
' → logprob: -4.036896228790283
    3. ')' → logprob: -4.536896228790283
    4. '):' → logprob: -5.161896228790283
    5. '
' → logprob: -6.286896228790283
    6. '):

' → logprob: -9.661895751953125
    7. '   ' → logprob: -9.786895751953125
    8. ' ' → logprob: -10.661895751953125
    9. 'start' → logprob: -10.661895751953125
    10. ' self' → logprob: -10.911895751953125

Token 952: '_pos' (ID: 14692)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5313628911972046
    2. '_position' → logprob: -1.9063628911972046
    3. '_pos' → logprob: -2.156363010406494
    4. '):
' → logprob: -2.281363010406494
    5. 'Position' → logprob: -3.656363010406494
    6. ',' → logprob: -4.656363010406494
    7. 'Pos' → logprob: -5.781363010406494
    8. '=' → logprob: -5.781363010406494
    9. ':' → logprob: -7.406363010406494
    10. '   ' → logprob: -7.531363010406494

Token 953: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021183311939239502
    2. '(self' → logprob: -4.146183490753174
    3. 'self' → logprob: -6.396183490753174
    4. '):
' → logprob: -6.521183490753174
    5. '):' → logprob: -6.896183490753174
    6. '       ' → logprob: -7.646183490753174
    7. '   ' → logprob: -7.896183490753174
    8. ',self' → logprob: -10.021183013916016
    9. ' self' → logprob: -10.396183013916016
    10. ' ,' → logprob: -10.771183013916016

Token 954: ' Position' (ID: 21829)
  Prédit: 'Position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Position' → logprob: -2.9040898880339228e-05
    2. ' Position' → logprob: -10.875028610229492
    3. ')' → logprob: -12.000028610229492
    4. 'position' → logprob: -13.250028610229492
    5. 'lambda' → logprob: -13.875028610229492
    6. 'self' → logprob: -15.000028610229492
    7. '):' → logprob: -15.875028610229492
    8. '):
' → logprob: -15.875028610229492
    9. '(Position' → logprob: -16.000028610229492
    10. 'Pos' → logprob: -16.000028610229492

Token 955: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.17160764336585999
    2. '):' → logprob: -1.9216076135635376
    3. ',' → logprob: -4.546607494354248
    4. ')' → logprob: -8.046607971191406
    5. '   ' → logprob: -8.671607971191406
    6. '):
' → logprob: -9.171607971191406
    7. '       ' → logprob: -9.421607971191406
    8. '):

' → logprob: -10.671607971191406
    9. ' ):
' → logprob: -11.796607971191406
    10. ' ):' → logprob: -13.296607971191406

Token 956: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.794061770662665e-05
    2. '```' → logprob: -9.75009822845459
    3. 'path' → logprob: -11.25009822845459
    4. 'result' → logprob: -12.00009822845459
    5. ' path' → logprob: -12.12509822845459
    6. 'positions' → logprob: -12.62509822845459
    7. 'tokens' → logprob: -12.87509822845459
    8. 'pos' → logprob: -13.12509822845459
    9. ',' → logprob: -13.50009822845459
    10. 'def' → logprob: -14.75009822845459

Token 957: ' path' (ID: 3104)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03384831175208092
    2. 'path' (adapté à ' path') → logprob: -4.033848285675049
    3. ' path' → logprob: -4.908848285675049
    4. 'positions' → logprob: -5.533848285675049
    5. 'pos' → logprob: -6.033848285675049
    6. 'result' → logprob: -7.283848285675049
    7. 'current' → logprob: -8.158848762512207
    8. 'position' → logprob: -8.283848762512207
    9. '```' → logprob: -8.408848762512207
    10. ' positions' → logprob: -8.533848762512207

Token 958: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00980472844094038
    2. '=' → logprob: -4.634804725646973
    3. '       ' → logprob: -10.384804725646973
    4. '=[]' → logprob: -11.384804725646973
    5. '   ' → logprob: -12.884804725646973
    6. '=[]
' → logprob: -13.384804725646973
    7. '        ' → logprob: -14.634804725646973
    8. '[]' → logprob: -14.884804725646973
    9. ' ' → logprob: -15.009804725646973
    10. '    ' → logprob: -15.134804725646973

Token 959: ' []
' (ID: 8911)
  Prédit: '[start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.00038586699520237744
    2. '[' → logprob: -8.000386238098145
    3. ' [' → logprob: -10.500386238098145
    4. '[]
' → logprob: -12.000386238098145
    5. '[position' → logprob: -13.125386238098145
    6. '[next' → logprob: -13.125386238098145
    7. '[self' → logprob: -13.250386238098145
    8. '[]' → logprob: -13.375386238098145
    9. '[pos' → logprob: -13.500386238098145
    10. '[end' → logprob: -13.875386238098145

Token 960: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15109214186668396
    2. 'pos' → logprob: -2.151092052459717
    3. 'current' → logprob: -4.151092052459717
    4. ' pos' → logprob: -5.276092052459717
    5. ' current' → logprob: -6.151092052459717
    6. 'prev' → logprob: -7.651092052459717
    7. 'position' → logprob: -8.776092529296875
    8. '```' → logprob: -9.401092529296875
    9. 'curr' → logprob: -9.901092529296875
    10. 'cur' → logprob: -10.651092529296875

Token 961: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.01944945752620697
    2. 'pos' → logprob: -4.019449234008789
    3. 'curr' → logprob: -7.019449234008789
    4. 'cur' → logprob: -8.019449234008789
    5. '       ' → logprob: -9.644449234008789
    6. '   ' → logprob: -12.269449234008789
    7. ' current' → logprob: -12.519449234008789
    8. 'for' → logprob: -14.394449234008789
    9. 'position' → logprob: -14.394449234008789
    10. 'last' → logprob: -14.394449234008789

Token 962: ' =' (ID: 314)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0005624461336992681
    2. '_position' → logprob: -7.87556266784668
    3. 'Pos' → logprob: -9.25056266784668
    4. '=' → logprob: -10.12556266784668
    5. 'pos' → logprob: -10.25056266784668
    6. ' =' → logprob: -12.12556266784668
    7. 'Position' → logprob: -13.00056266784668
    8. '_token' → logprob: -13.75056266784668
    9. '=_' → logprob: -14.00056266784668
    10. '_' → logprob: -14.50056266784668

Token 963: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.06998790055513382
    2. ' start' → logprob: -2.6949880123138428
    3. 'Position' → logprob: -9.944988250732422
    4. ' Position' → logprob: -13.319988250732422
    5. 'Start' → logprob: -14.069988250732422
    6. '(start' → logprob: -14.444988250732422
    7. 'position' → logprob: -15.569988250732422
    8. ' ' → logprob: -16.194988250732422
    9. '	start' → logprob: -16.194988250732422
    10. 'star' → logprob: -16.444988250732422

Token 964: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00036442498094402254
    2. 'Pos' → logprob: -8.000364303588867
    3. 'pos' → logprob: -10.625364303588867
    4. '_position' → logprob: -12.875364303588867
    5. '._' → logprob: -13.750364303588867
    6. 'Position' → logprob: -14.250364303588867
    7. '_' → logprob: -16.000364303588867
    8. '.pos' → logprob: -16.125364303588867
    9. '_Pos' → logprob: -16.500364303588867
    10. '_POS' → logprob: -17.500364303588867

Token 965: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7933026552200317
    2. ' =' → logprob: -0.9183026552200317
    3. '       ' → logprob: -2.918302536010742
    4. 'for' → logprob: -3.543302536010742
    5. '=' → logprob: -4.043302536010742
    6. ' for' → logprob: -4.168302536010742
    7. '        
' → logprob: -4.668302536010742
    8. ':' → logprob: -5.543302536010742
    9. '<|end|>' → logprob: -5.668302536010742
    10. ' 
' → logprob: -6.043302536010742

Token 966: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004889673553407192
    2. '        
' → logprob: -6.879889488220215
    3. ' for' → logprob: -7.129889488220215
    4. '<|end|>' → logprob: -7.254889488220215
    5. '	' → logprob: -7.379889488220215
    6. ':' → logprob: -7.879889488220215
    7. '
' → logprob: -8.004889488220215
    8. 'for' → logprob: -8.754889488220215
    9. '```' → logprob: -9.129889488220215
    10. '		
' → logprob: -9.129889488220215

Token 967: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.229872087715194e-05
    2. ' for' → logprob: -9.750061988830566
    3. '       ' → logprob: -12.875061988830566
    4. '```' → logprob: -14.250061988830566
    5. '
' → logprob: -14.500061988830566
    6. 'path' → logprob: -15.625061988830566
    7. '        
' → logprob: -18.625062942504883
    8. '	for' → logprob: -19.125062942504883
    9. '   ' → logprob: -19.250062942504883
    10. '`' → logprob: -19.375062942504883

Token 968: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -9.014684110297821e-06
    2. ' step' → logprob: -11.625008583068848
    3. 's' → logprob: -17.250009536743164
    4. '	step' → logprob: -17.875009536743164
    5. '(step' → logprob: -18.750009536743164
    6. '   ' → logprob: -20.750009536743164
    7. 'Step' → logprob: -20.750009536743164
    8. '.step' → logprob: -21.000009536743164
    9. 'steps' → logprob: -21.000009536743164
    10. '_step' → logprob: -21.125009536743164

Token 969: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00672804145142436
    2. 'in' → logprob: -5.006728172302246
    3. ' ' → logprob: -12.131728172302246
    4. '	in' → logprob: -13.381728172302246
    5. 's' → logprob: -13.631728172302246
    6. ' ' → logprob: -14.381728172302246
    7. '.' → logprob: -14.631728172302246
    8. '
' → logprob: -15.006728172302246
    9. 'step' → logprob: -15.006728172302246
    10. '  ' → logprob: -15.131728172302246

Token 970: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08664052933454514
    2. 'step' → logprob: -2.7116405963897705
    3. 'range' → logprob: -4.586640357971191
    4. ' self' → logprob: -5.961640357971191
    5. 'path' → logprob: -6.836640357971191
    6. 'steps' → logprob: -7.211640357971191
    7. 'pat' → logprob: -7.336640357971191
    8. '[' → logprob: -7.836640357971191
    9. ' step' → logprob: -8.086640357971191
    10. 'current' → logprob: -8.336640357971191

Token 971: '.steps' (ID: 126813)
  Prédit: '.steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.steps' → logprob: -0.07889661937952042
    2. 'steps' → logprob: -2.5788965225219727
    3. '.' → logprob: -12.703896522521973
    4. ' steps' → logprob: -12.703896522521973
    5. ' .' → logprob: -15.203896522521973
    6. '_steps' → logprob: -15.703896522521973
    7. ' ' → logprob: -16.82889747619629
    8. '   ' → logprob: -16.95389747619629
    9. 'Steps' → logprob: -17.07889747619629
    10. '.s' → logprob: -17.20389747619629

Token 972: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25788435339927673
    2. ':
' → logprob: -1.5078843832015991
    3. '           ' → logprob: -5.257884502410889
    4. ',' → logprob: -8.00788402557373
    5. '       ' → logprob: -8.50788402557373
    6. '):
' → logprob: -9.88288402557373
    7. ' for' → logprob: -10.13288402557373
    8. '=' → logprob: -10.75788402557373
    9. 'for' → logprob: -11.00788402557373
    10. ':
' → logprob: -11.25788402557373

Token 973: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2504388988018036
    2. '       ' → logprob: -1.625438928604126
    3. ' for' → logprob: -3.875438928604126
    4. '
' → logprob: -6.500438690185547
    5. '	       ' → logprob: -7.250438690185547
    6. 'for' → logprob: -7.250438690185547
    7. ',' → logprob: -8.500438690185547
    8. '```' → logprob: -9.125438690185547
    9. '        
' → logprob: -9.250438690185547
    10. '   ' → logprob: -9.250438690185547

Token 974: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5251469612121582
    2. ' for' → logprob: -0.9001469612121582
    3. '           ' → logprob: -6.275146961212158
    4. '               ' → logprob: -9.275146484375
    5. '
' → logprob: -10.400146484375
    6. '```' → logprob: -12.650146484375
    7. '	for' → logprob: -12.900146484375
    8. '            
' → logprob: -13.025146484375
    9. ' ' → logprob: -13.650146484375
    10. '   ' → logprob: -13.900146484375

Token 975: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004372678697109222
    2. '_i' → logprob: -5.504372596740723
    3. '_direction' → logprob: -8.879372596740723
    4. '_move' → logprob: -9.504372596740723
    5. 'i' → logprob: -10.754372596740723
    6. '_step' → logprob: -10.754372596740723
    7. '_distance' → logprob: -11.129372596740723
    8. '_dist' → logprob: -12.004372596740723
    9. '_dir' → logprob: -12.254372596740723
    10. ' _' → logprob: -12.879372596740723

Token 976: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0010329303331673145
    2. 'in' → logprob: -6.876032829284668
    3. ' ' → logprob: -16.751033782958984
    4. '	in' → logprob: -17.501033782958984
    5. 'range' → logprob: -18.251033782958984
    6. 'i' → logprob: -18.501033782958984
    7. 'import' → logprob: -18.626033782958984
    8. '  ' → logprob: -19.251033782958984
    9. '
' → logprob: -19.501033782958984
    10. ' i' → logprob: -19.626033782958984

Token 977: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.5776860184123507e-06
    2. ' range' → logprob: -13.00000286102295
    3. 'step' → logprob: -15.25000286102295
    4. '_range' → logprob: -20.375001907348633
    5. '
' → logprob: -21.375001907348633
    6. '(range' → logprob: -22.125001907348633
    7. '	range' → logprob: -22.875001907348633
    8. '_' → logprob: -23.500001907348633
    9. 'Range' → logprob: -24.250001907348633
    10. 'r' → logprob: -24.375001907348633

Token 978: '(step' (ID: 79951)
  Prédit: '(step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(step' → logprob: -0.0015030752401798964
    2. 'step' → logprob: -6.501502990722656
    3. '(' → logprob: -14.876502990722656
    4. ' step' → logprob: -15.001502990722656
    5. '	step' → logprob: -18.126502990722656
    6. '1' → logprob: -19.751502990722656
    7. '(
' → logprob: -20.376502990722656
    8. '.step' → logprob: -21.126502990722656
    9. 'Step' → logprob: -21.751502990722656
    10. '_step' → logprob: -22.126502990722656

Token 979: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -0.00019221604452468455
    2. 'distance' → logprob: -9.125192642211914
    3. ' .' → logprob: -10.000192642211914
    4. '.' → logprob: -10.500192642211914
    5. '.direction' → logprob: -12.750192642211914
    6. '.dist' → logprob: -13.375192642211914
    7. '.length' → logprob: -13.500192642211914
    8. ' distance' → logprob: -14.125192642211914
    9. '.step' → logprob: -14.500192642211914
    10. '   ' → logprob: -14.625192642211914

Token 980: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03826995566487312
    2. '):' → logprob: -3.2882699966430664
    3. '               ' → logprob: -9.913269996643066
    4. '           ' → logprob: -10.038269996643066
    5. ':
' → logprob: -10.288269996643066
    6. ':' → logprob: -10.413269996643066
    7. '):
' → logprob: -10.663269996643066
    8. '   ' → logprob: -10.913269996643066
    9. '():
' → logprob: -11.538269996643066
    10. ' ):
' → logprob: -12.413269996643066

Token 981: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0080860061571002
    2. 'current' → logprob: -5.133086204528809
    3. ' current' → logprob: -6.633086204528809
    4. '           ' → logprob: -8.633086204528809
    5. '		       ' → logprob: -9.008086204528809
    6. '
' → logprob: -9.258086204528809
    7. '	           ' → logprob: -9.383086204528809
    8. '	       ' → logprob: -9.383086204528809
    9. '<|end|>' → logprob: -10.008086204528809
    10. '```' → logprob: -10.508086204528809

Token 982: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.47442445158958435
    2. ' current' → logprob: -0.9744244813919067
    3. '               ' → logprob: -8.099424362182617
    4. '                   ' → logprob: -10.849424362182617
    5. '	current' → logprob: -11.474424362182617
    6. '
' → logprob: -12.349424362182617
    7. 'new' → logprob: -13.474424362182617
    8. ',current' → logprob: -13.474424362182617
    9. '(current' → logprob: -13.599424362182617
    10. '.current' → logprob: -13.849424362182617

Token 983: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061967913061380386
    2. ' =' → logprob: -2.8119678497314453
    3. '=current' → logprob: -15.186967849731445
    4. '=
' → logprob: -18.811967849731445
    5. '=

' → logprob: -19.061967849731445
    6. '＝' → logprob: -19.311967849731445
    7. '=new' → logprob: -20.186967849731445
    8. ' ' → logprob: -20.436967849731445
    9. '_=' → logprob: -20.561967849731445
    10. '=row' → logprob: -20.936967849731445

Token 984: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.005233763717114925
    2. ' current' → logprob: -5.2552337646484375
    3. '.current' → logprob: -19.130233764648438
    4. '(current' → logprob: -19.255233764648438
    5. 'Current' → logprob: -19.505233764648438
    6. 'urrent' → logprob: -19.755233764648438
    7. '=current' → logprob: -20.130233764648438
    8. '_current' → logprob: -20.255233764648438
    9. '	current' → logprob: -20.255233764648438
    10. '$current' → logprob: -20.380233764648438

Token 985: '.move' (ID: 24425)
  Prédit: '.move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.move' → logprob: -2.2246291337069124e-05
    2. '.' → logprob: -10.750021934509277
    3. 'move' → logprob: -14.500021934509277
    4. ' .' → logprob: -15.250021934509277
    5. ' move' → logprob: -19.750022888183594
    6. '.Move' → logprob: -20.125022888183594
    7. '.m' → logprob: -20.250022888183594
    8. '.
' → logprob: -20.375022888183594
    9. '
' → logprob: -20.500022888183594
    10. '   ' → logprob: -21.625022888183594

Token 986: '(step' (ID: 79951)
  Prédit: '(step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(step' → logprob: -1.1041145626222715e-05
    2. '(' → logprob: -11.625011444091797
    3. 'step' → logprob: -13.250011444091797
    4. '(
' → logprob: -15.500011444091797
    5. ' (' → logprob: -17.625011444091797
    6. ' step' → logprob: -18.250011444091797
    7. '('' → logprob: -18.875011444091797
    8. '(st' → logprob: -19.500011444091797
    9. '```' → logprob: -19.625011444091797
    10. '((' → logprob: -19.750011444091797

Token 987: '.direction' (ID: 63524)
  Prédit: '.direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.direction' → logprob: -0.05365491658449173
    2. 'direction' → logprob: -3.303654909133911
    3. ')' → logprob: -4.17865514755249
    4. '.step' → logprob: -9.053654670715332
    5. '(direction' → logprob: -10.428654670715332
    6. '[' → logprob: -11.678654670715332
    7. '.' → logprob: -12.678654670715332
    8. 'step' → logprob: -12.678654670715332
    9. ' direction' → logprob: -13.178654670715332
    10. '```' → logprob: -13.553654670715332

Token 988: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03368904069066048
    2. ')
' → logprob: -3.408689022064209
    3. '               ' → logprob: -10.658689498901367
    4. ')
' → logprob: -12.033689498901367
    5. '<|end|>' → logprob: -12.408689498901367
    6. ')

' → logprob: -12.783689498901367
    7. ')return' → logprob: -13.283689498901367
    8. '),' → logprob: -13.908689498901367
    9. ')add' → logprob: -14.408689498901367
    10. ')#' → logprob: -14.658689498901367

Token 989: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004822697374038398
    2. '```' → logprob: -8.000482559204102
    3. '           ' → logprob: -9.125482559204102
    4. '       ' → logprob: -10.625482559204102
    5. '                   ' → logprob: -12.750482559204102
    6. '``' → logprob: -12.750482559204102
    7. '   ' → logprob: -13.250482559204102
    8. '                
' → logprob: -13.250482559204102
    9. '              ' → logprob: -13.375482559204102
    10. '<|end|>' → logprob: -13.750482559204102

Token 990: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.024734869599342346
    2. ' path' → logprob: -3.7747349739074707
    3. '               ' → logprob: -6.524734973907471
    4. '```' → logprob: -11.649734497070312
    5. '                   ' → logprob: -11.774734497070312
    6. '           ' → logprob: -13.274734497070312
    7. '	path' → logprob: -14.024734497070312
    8. '"path' → logprob: -14.399734497070312
    9. '       ' → logprob: -14.899734497070312
    10. '   ' → logprob: -15.024734497070312

Token 991: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.054500666621607e-06
    2. '.' → logprob: -12.75000286102295
    3. 'append' → logprob: -17.000003814697266
    4. '.app' → logprob: -17.125003814697266
    5. '.Append' → logprob: -17.375003814697266
    6. '_append' → logprob: -20.000003814697266
    7. 'Append' → logprob: -20.250003814697266
    8. '.extend' → logprob: -20.750003814697266
    9. '.ap' → logprob: -21.000003814697266
    10. ' .' → logprob: -21.500003814697266

Token 992: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.03804252669215202
    2. 'current' → logprob: -3.2880425453186035
    3. ' current' → logprob: -13.788042068481445
    4. '(' → logprob: -17.788042068481445
    5. '$current' → logprob: -19.413042068481445
    6. '(
' → logprob: -19.663042068481445
    7. '	current' → logprob: -20.163042068481445
    8. '[current' → logprob: -20.288042068481445
    9. ',current' → logprob: -20.288042068481445
    10. 'Current' → logprob: -20.538042068481445

Token 993: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.8961017202818766e-05
    2. ')
' → logprob: -10.375059127807617
    3. '<|end|>' → logprob: -11.000059127807617
    4. ')return' → logprob: -12.125059127807617
    5. '
' → logprob: -12.875059127807617
    6. ' )' → logprob: -13.625059127807617
    7. '               ' → logprob: -14.750059127807617
    8. '       ' → logprob: -15.500059127807617
    9. '<|end|>' → logprob: -15.625059127807617
    10. '[' → logprob: -15.625059127807617

Token 994: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002494087442755699
    2. 'return' → logprob: -6.252493858337402
    3. '
' → logprob: -7.752493858337402
    4. '        
' → logprob: -9.877493858337402
    5. '```' → logprob: -10.127493858337402
    6. ' return' → logprob: -11.002493858337402
    7. '[' → logprob: -11.752493858337402
    8. '           ' → logprob: -12.627493858337402
    9. '               ' → logprob: -12.752493858337402
    10. '	' → logprob: -13.252493858337402

Token 995: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12767699360847473
    2. '       ' → logprob: -2.1276769638061523
    3. ' return' → logprob: -7.252676963806152
    4. '
' → logprob: -10.627676963806152
    5. '   ' → logprob: -11.377676963806152
    6. '	return' → logprob: -12.877676963806152
    7. '```' → logprob: -13.877676963806152
    8. '           ' → logprob: -15.002676963806152
    9. '{return' → logprob: -15.627676963806152
    10. 'class' → logprob: -15.752676963806152

Token 996: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.00033546582562848926
    2. ' path' → logprob: -8.000335693359375
    3. '   ' → logprob: -22.750335693359375
    4. '[path' → logprob: -23.250335693359375
    5. '(path' → logprob: -23.500335693359375
    6. '	path' → logprob: -23.625335693359375
    7. 'pos' → logprob: -24.000335693359375
    8. '```' → logprob: -24.000335693359375
    9. 'list' → logprob: -25.000335693359375
    10. 'Path' → logprob: -25.000335693359375

Token 997: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.012535669840872288
    2. 'def' → logprob: -4.387535572052002
    3. ' class' → logprob: -11.63753604888916
    4. '   ' → logprob: -11.76253604888916
    5. '<|end|>' → logprob: -12.51253604888916
    6. '#' → logprob: -12.76253604888916
    7. 'import' → logprob: -14.01253604888916
    8. 'from' → logprob: -14.26253604888916
    9. '
' → logprob: -14.51253604888916
    10. ')' → logprob: -15.38753604888916

Token 998: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -9.968312951968983e-06
    2. 'def' → logprob: -11.875009536743164
    3. ' class' → logprob: -13.250009536743164
    4. '```' → logprob: -14.250009536743164
    5. '#' → logprob: -15.125009536743164
    6. '<|end|>' → logprob: -16.250009536743164
    7. '"class' → logprob: -17.000009536743164
    8. '@dat' → logprob: -17.000009536743164
    9. '<class' → logprob: -17.500009536743164
    10. '   ' → logprob: -17.875009536743164

Token 999: ' Dungeon' (ID: 124775)
  Prédit: 'Explorer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Explorer' → logprob: -0.910702109336853
    2. 'Game' → logprob: -1.285702109336853
    3. 'Player' → logprob: -1.660702109336853
    4. 'Agent' → logprob: -2.5357022285461426
    5. 'Simulation' → logprob: -4.285702228546143
    6. 'Runner' → logprob: -4.910702228546143
    7. 'Hero' → logprob: -5.535702228546143
    8. 'Tre' → logprob: -5.535702228546143
    9. 'Dungeon' → logprob: -5.910702228546143
    10. ' Explorer' → logprob: -6.160702228546143

Token 1000: 'Quest' (ID: 37831)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007597190560773015
    2. ':
' → logprob: -7.250759601593018
    3. 'C' → logprob: -11.000760078430176
    4. '):' → logprob: -12.125760078430176
    5. '():' → logprob: -12.375760078430176
    6. '(object' → logprob: -12.375760078430176
    7. '(' → logprob: -12.625760078430176
    8. '>:' → logprob: -13.250760078430176
    9. '<|end|>' → logprob: -13.250760078430176
    10. '(C' → logprob: -13.375760078430176

Token 1001: 'II' (ID: 6013)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00978170707821846
    2. ':
' → logprob: -4.634781837463379
    3. '<|end|>' → logprob: -12.009781837463379
    4. '(' → logprob: -12.259781837463379
    5. ':def' → logprob: -12.259781837463379
    6. ' :' → logprob: -13.509781837463379
    7. ':

' → logprob: -13.884781837463379
    8. '   ' → logprob: -13.884781837463379
    9. '():' → logprob: -13.884781837463379
    10. '(object' → logprob: -14.134781837463379

Token 1002: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001840229262597859
    2. ':
' → logprob: -6.751840114593506
    3. '(' → logprob: -7.501840114593506
    4. '(C' → logprob: -9.501840591430664
    5. '{' → logprob: -12.001840591430664
    6. '():' → logprob: -12.376840591430664
    7. '```' → logprob: -12.626840591430664
    8. ':

' → logprob: -12.876840591430664
    9. ':def' → logprob: -12.876840591430664
    10. 'C' → logprob: -13.126840591430664

Token 1003: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007526897243224084
    2. 'class' → logprob: -7.750752925872803
    3. ' def' → logprob: -8.500752449035645
    4. 'def' → logprob: -9.500752449035645
    5. ' class' → logprob: -10.875752449035645
    6. '```' → logprob: -11.875752449035645
    7. '    ' → logprob: -12.500752449035645
    8. ':' → logprob: -12.500752449035645
    9. '    
' → logprob: -12.625752449035645
    10. '
' → logprob: -12.750752449035645

Token 1004: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.35673829913139343
    2. '   ' → logprob: -1.6067383289337158
    3. ' def' → logprob: -2.356738328933716
    4. 'class' → logprob: -5.356738090515137
    5. '```' → logprob: -10.106738090515137
    6. ' class' → logprob: -12.106738090515137
    7. '__' → logprob: -12.106738090515137
    8. '
' → logprob: -12.606738090515137
    9. ' ' → logprob: -14.106738090515137
    10. '	def' → logprob: -14.356738090515137

Token 1005: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.21777768433094025
    2. 'def' → logprob: -1.7177777290344238
    3. 'init' → logprob: -5.217777729034424
    4. '```' → logprob: -5.592777729034424
    5. 'object' → logprob: -6.467777729034424
    6. 'class' → logprob: -6.467777729034424
    7. ' __' → logprob: -6.717777729034424
    8. '___' → logprob: -7.467777729034424
    9. '...' → logprob: -7.717777729034424
    10. '_init' → logprob: -7.967777729034424

Token 1006: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. ' init' → logprob: -16.25
    3. '_init' → logprob: -17.5
    4. '(init' → logprob: -17.625
    5. '__' → logprob: -17.75
    6. 'new' → logprob: -18.375
    7. '```' → logprob: -18.375
    8. 'class' → logprob: -18.625
    9. 'int' → logprob: -19.125
    10. '	init' → logprob: -19.5

Token 1007: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0011431955499574542
    2. '__' → logprob: -6.876142978668213
    3. '__(
' → logprob: -9.251143455505371
    4. '(self' → logprob: -11.876143455505371
    5. '__((' → logprob: -12.626143455505371
    6. '(' → logprob: -13.876143455505371
    7. '__('' → logprob: -14.126143455505371
    8. '__(*' → logprob: -14.626143455505371
    9. '__("' → logprob: -14.751143455505371
    10. '```' → logprob: -15.126143455505371

Token 1008: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.9146995327901095e-05
    2. ' self' → logprob: -11.000019073486328
    3. '   ' → logprob: -14.125019073486328
    4. '       ' → logprob: -14.250019073486328
    5. ',' → logprob: -14.500019073486328
    6. '
' → logprob: -15.250019073486328
    7. '0' → logprob: -16.750019073486328
    8. '(self' → logprob: -16.750019073486328
    9. ')' → logprob: -17.500019073486328
    10. '...' → logprob: -18.000019073486328

Token 1009: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030067605897784233
    2. 'self' → logprob: -3.5300676822662354
    3. '(self' → logprob: -8.530067443847656
    4. ' ,' → logprob: -10.280067443847656
    5. ' self' → logprob: -10.655067443847656
    6. '__,' → logprob: -11.030067443847656
    7. '__(' → logprob: -11.530067443847656
    8. ' (' → logprob: -11.655067443847656
    9. ',self' → logprob: -11.655067443847656
    10. '   ' → logprob: -12.405067443847656

Token 1010: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001609481987543404
    2. '   ' → logprob: -7.0016093254089355
    3. '       ' → logprob: -7.6266093254089355
    4. ' self' → logprob: -8.501609802246094
    5. '(self' → logprob: -12.751609802246094
    6. 'rows' → logprob: -13.001609802246094
    7. '           ' → logprob: -14.251609802246094
    8. 'def' → logprob: -14.876609802246094
    9. '	self' → logprob: -14.876609802246094
    10. '
' → logprob: -15.001609802246094

Token 1011: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0019549215212464333
    2. '       ' → logprob: -6.251955032348633
    3. ' self' → logprob: -11.001955032348633
    4. 'pass' → logprob: -12.251955032348633
    5. '   ' → logprob: -13.001955032348633
    6. 'def' → logprob: -13.376955032348633
    7. '
' → logprob: -15.126955032348633
    8. 'rows' → logprob: -15.501955032348633
    9. 'super' → logprob: -15.501955032348633
    10. '(self' → logprob: -16.751955032348633

Token 1012: '.datasets' (ID: 136555)
  Prédit: '.rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.rows' → logprob: -0.054545167833566666
    2. '._' → logprob: -3.1795451641082764
    3. '.d' → logprob: -5.6795454025268555
    4. '.map' → logprob: -6.5545454025268555
    5. '_rows' → logprob: -6.9295454025268555
    6. '.c' → logprob: -7.0545454025268555
    7. '.rooms' → logprob: -7.0545454025268555
    8. '.hp' → logprob: -7.3045454025268555
    9. '.p' → logprob: -7.6795454025268555
    10. '.cols' → logprob: -7.9295454025268555

Token 1013: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11339378356933594
    2. '=' → logprob: -2.238393783569336
    3. '[' → logprob: -8.613393783569336
    4. '.append' → logprob: -9.113393783569336
    5. '_' → logprob: -9.238393783569336
    6. '   ' → logprob: -10.363393783569336
    7. '=[]' → logprob: -10.738393783569336
    8. '[]' → logprob: -10.738393783569336
    9. '['' → logprob: -10.738393783569336
    10. '.' → logprob: -10.988393783569336

Token 1014: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00011319868644932285
    2. '{}' → logprob: -9.250113487243652
    3. '[]
' → logprob: -11.500113487243652
    4. ' []' → logprob: -12.000113487243652
    5. '[]}' → logprob: -15.125113487243652
    6. '[]

' → logprob: -15.250113487243652
    7. '[' → logprob: -15.625113487243652
    8. '[],' → logprob: -17.500112533569336
    9. '[])' → logprob: -18.250112533569336
    10. '[]"' → logprob: -18.625112533569336

Token 1015: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008042368106544018
    2. 'def' → logprob: -5.508042335510254
    3. ' def' → logprob: -5.633042335510254
    4. '```' → logprob: -8.633042335510254
    5. '<|end|>' → logprob: -9.883042335510254
    6. '
' → logprob: -9.883042335510254
    7. 'class' → logprob: -10.008042335510254
    8. '    
' → logprob: -10.258042335510254
    9. ' class' → logprob: -12.383042335510254
    10. '<|end|>' → logprob: -12.633042335510254

Token 1016: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -8.709308167453855e-05
    2. ' def' → logprob: -9.375086784362793
    3. '   ' → logprob: -13.250086784362793
    4. '
' → logprob: -15.125086784362793
    5. 'class' → logprob: -16.12508773803711
    6. '```' → logprob: -18.00008773803711
    7. '@' → logprob: -18.50008773803711
    8. '	def' → logprob: -19.12508773803711
    9. ' ' → logprob: -19.50008773803711
    10. '    
' → logprob: -20.00008773803711

Token 1017: ' read' (ID: 1729)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.11637882143259048
    2. 'load' → logprob: -2.8663787841796875
    3. ' add' → logprob: -3.9913787841796875
    4. 'parse' → logprob: -4.6163787841796875
    5. 'run' → logprob: -4.8663787841796875
    6. 'simulate' → logprob: -5.1163787841796875
    7. 'read' → logprob: -5.7413787841796875
    8. 'process' → logprob: -5.9913787841796875
    9. 'solve' → logprob: -5.9913787841796875
    10. ' load' → logprob: -6.3663787841796875

Token 1018: '_dataset' (ID: 40568)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.2838383913040161
    2. '_data' → logprob: -2.1588382720947266
    3. '_dataset' → logprob: -2.7838382720947266
    4. '_input' → logprob: -2.9088382720947266
    5. '(self' → logprob: -4.283838272094727
    6. '_d' → logprob: -8.408838272094727
    7. '(' → logprob: -8.533838272094727
    8. '_' → logprob: -8.783838272094727
    9. '_code' → logprob: -8.908838272094727
    10. '()' → logprob: -8.908838272094727

Token 1019: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003609458915889263
    2. '(' → logprob: -5.628609657287598
    3. ' (' → logprob: -12.378609657287598
    4. '(
' → logprob: -12.753609657287598
    5. '(s' → logprob: -13.753609657287598
    6. 'self' → logprob: -14.378609657287598
    7. '(Self' → logprob: -16.12860870361328
    8. '(line' → logprob: -16.25360870361328
    9. '(sel' → logprob: -16.37860870361328
    10. '   ' → logprob: -17.00360870361328

Token 1020: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.46107029914855957
    2. 'self' → logprob: -1.0860702991485596
    3. ',' → logprob: -3.9610702991485596
    4. '(' → logprob: -5.4610700607299805
    5. ')(' → logprob: -6.0860700607299805
    6. ')' → logprob: -6.3360700607299805
    7. '):
' → logprob: -7.0860700607299805
    8. ' self' → logprob: -7.4610700607299805
    9. '):' → logprob: -7.4610700607299805
    10. '   ' → logprob: -7.9610700607299805

Token 1021: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7501887083053589
    2. 'self' → logprob: -0.8751887083053589
    3. 'lines' → logprob: -2.8751888275146484
    4. ' input' → logprob: -4.125188827514648
    5. 'data' → logprob: -4.125188827514648
    6. ' lines' → logprob: -4.500188827514648
    7. ' self' → logprob: -4.875188827514648
    8. ')' → logprob: -6.750188827514648
    9. 'dataset' → logprob: -6.750188827514648
    10. ' data' → logprob: -8.000188827514648

Token 1022: '_lines' (ID: 42980)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.11488281190395355
    2. '):' → logprob: -3.614882707595825
    3. '_stream' → logprob: -3.739882707595825
    4. '_lines' → logprob: -4.239882946014404
    5. '_source' → logprob: -4.364882946014404
    6. '):
' → logprob: -4.614882946014404
    7. '_data' → logprob: -5.114882946014404
    8. '()' → logprob: -5.489882946014404
    9. '()):
' → logprob: -5.864882946014404
    10. '_string' → logprob: -6.239882946014404

Token 1023: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5989559292793274
    2. ',' → logprob: -1.9739558696746826
    3. '):
' → logprob: -2.3489558696746826
    4. '[' → logprob: -2.4739558696746826
    5. '):' → logprob: -3.0989558696746826
    6. '       ' → logprob: -3.5989558696746826
    7. 'self' → logprob: -3.8489558696746826
    8. '   ' → logprob: -4.098956108093262
    9. '[self' → logprob: -4.973956108093262
    10. '(' → logprob: -5.223956108093262

Token 1024: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013464801304508
    2. '```' → logprob: -9.500134468078613
    3. ' lines' → logprob: -10.500134468078613
    4. ' line' → logprob: -11.250134468078613
    5. 'tokens' → logprob: -12.500134468078613
    6. ',' → logprob: -12.875134468078613
    7. '   ' → logprob: -13.375134468078613
    8. '[' → logprob: -13.625134468078613
    9. ' for' → logprob: -13.875134468078613
    10. '        
' → logprob: -13.875134468078613

Token 1025: ' #' (ID: 1069)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.17187069356441498
    2. '       ' → logprob: -2.671870708465576
    3. 'lines' → logprob: -3.171870708465576
    4. ' idx' → logprob: -3.921870708465576
    5. ' line' → logprob: -5.046870708465576
    6. 'idx' → logprob: -5.421870708465576
    7. 'line' → logprob: -5.421870708465576
    8. ' n' → logprob: -5.921870708465576
    9. '```' → logprob: -6.421870708465576
    10. 'index' → logprob: -7.046870708465576

Token 1026: ' parse' (ID: 8420)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.8471867442131042
    2. 'n' → logprob: -1.347186803817749
    3. 'lines' → logprob: -2.222186803817749
    4. 'line' → logprob: -2.222186803817749
    5. ' n' → logprob: -3.722186803817749
    6. ' idx' → logprob: -3.847186803817749
    7. 'index' → logprob: -4.34718656539917
    8. '       ' → logprob: -4.59718656539917
    9. '   ' → logprob: -4.72218656539917
    10. 'num' → logprob: -4.84718656539917

Token 1027: ' one' (ID: 1001)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.3367081880569458
    2. 'line' → logprob: -1.9617081880569458
    3. 'input' → logprob: -2.2117080688476562
    4. ' lines' → logprob: -3.7117080688476562
    5. 'tokens' → logprob: -5.961708068847656
    6. ' input' → logprob: -6.211708068847656
    7. 'self' → logprob: -6.211708068847656
    8. ' line' → logprob: -6.336708068847656
    9. 'idx' → logprob: -7.336708068847656
    10. '   ' → logprob: -7.461708068847656

Token 1028: ' dataset' (ID: 20830)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.162856101989746
    2. 'line' → logprob: -1.537856101989746
    3. '       ' → logprob: -2.162856101989746
    4. '   ' → logprob: -2.287856101989746
    5. 'def' → logprob: -2.662856101989746
    6. ' lines' → logprob: -3.537856101989746
    7. ' input' → logprob: -3.787856101989746
    8. 'input' → logprob: -3.912856101989746
    9. '_line' → logprob: -4.162856101989746
    10. 'index' → logprob: -4.287856101989746

Token 1029: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00514848530292511
    2. '   ' → logprob: -6.630148410797119
    3. 'self' → logprob: -6.755148410797119
    4. '(self' → logprob: -6.755148410797119
    5. '```' → logprob: -8.255148887634277
    6. 'def' → logprob: -8.505148887634277
    7. ',' → logprob: -8.630148887634277
    8. '           ' → logprob: -9.005148887634277
    9. 'line' → logprob: -9.005148887634277
    10. '
' → logprob: -9.005148887634277

Token 1030: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0005109758349135518
    2. 'self' → logprob: -8.125511169433594
    3. 'iter' → logprob: -9.125511169433594
    4. ' input' → logprob: -9.375511169433594
    5. 'iterator' → logprob: -11.750511169433594
    6. '0' → logprob: -12.125511169433594
    7. '1' → logprob: -12.875511169433594
    8. 'next' → logprob: -13.375511169433594
    9. '
' → logprob: -14.000511169433594
    10. 'index' → logprob: -15.000511169433594

Token 1031: '_lines' (ID: 42980)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7012322545051575
    2. '(self' → logprob: -0.8262322545051575
    3. '   ' → logprob: -4.201232433319092
    4. 'self' → logprob: -4.326232433319092
    5. 'def' → logprob: -4.451232433319092
    6. '```' → logprob: -5.076232433319092
    7. ' lines' → logprob: -5.451232433319092
    8. '(lines' → logprob: -5.576232433319092
    9. '_line' → logprob: -5.701232433319092
    10. ',' → logprob: -5.951232433319092

Token 1032: ' iterator' (ID: 30787)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17417295277118683
    2. '(self' → logprob: -1.9241729974746704
    3. 'self' → logprob: -5.549172878265381
    4. '(' → logprob: -6.174172878265381
    5. '   ' → logprob: -6.299172878265381
    6. 'def' → logprob: -6.549172878265381
    7. '```' → logprob: -6.799172878265381
    8. '[' → logprob: -6.924172878265381
    9. ',' → logprob: -7.174172878265381
    10. ':' → logprob: -7.924172878265381

Token 1033: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004317722283303738
    2. ',' → logprob: -5.754317760467529
    3. ':' → logprob: -8.129317283630371
    4. '```' → logprob: -8.379317283630371
    5. ' line' → logprob: -9.004317283630371
    6. 'tokens' → logprob: -9.504317283630371
    7. 'def' → logprob: -9.879317283630371
    8. 'token' → logprob: -10.129317283630371
    9. 'index' → logprob: -10.129317283630371
    10. '        
' → logprob: -10.254317283630371

Token 1034: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2487664818763733
    2. ' line' → logprob: -1.8737664222717285
    3. ' lines' → logprob: -2.9987664222717285
    4. 'line' → logprob: -4.6237664222717285
    5. 'lines' → logprob: -6.1237664222717285
    6. ' input' → logprob: -6.2487664222717285
    7. '```' → logprob: -7.4987664222717285
    8. 'input' → logprob: -7.6237664222717285
    9. ' idx' → logprob: -7.7487664222717285
    10. 'index' → logprob: -8.248766899108887

Token 1035: ' None' (ID: 4662)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6745882630348206
    2. '(len' → logprob: -1.4245882034301758
    3. 'dataset' → logprob: -2.549588203430176
    4. 'next' → logprob: -2.549588203430176
    5. '(next' → logprob: -3.549588203430176
    6. '(True' → logprob: -4.049588203430176
    7. 'True' → logprob: -4.924588203430176
    8. ' next' → logprob: -5.174588203430176
    9. '(dataset' → logprob: -5.549588203430176
    10. 'list' → logprob: -5.674588203430176

Token 1036: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1596348136663437
    2. 'if' → logprob: -2.284634828567505
    3. ',' → logprob: -3.534634828567505
    4. ' or' → logprob: -4.284634590148926
    5. '
' → logprob: -7.659634590148926
    6. ' until' → logprob: -7.909634590148926
    7. 'while' → logprob: -8.534634590148926
    8. 'def' → logprob: -8.534634590148926
    9. 'for' → logprob: -8.659634590148926
    10. 'or' → logprob: -8.784634590148926

Token 1037: ' termination' (ID: 64585)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.39053526520729065
    2. ' not' → logprob: -1.1405352354049683
    3. 'len' → logprob: -5.640535354614258
    4. 'next' → logprob: -10.140535354614258
    5. 'False' → logprob: -11.015535354614258
    6. '
' → logprob: -11.265535354614258
    7. 'None' → logprob: -11.890535354614258
    8. 'empty' → logprob: -11.890535354614258
    9. ' len' → logprob: -12.140535354614258
    10. ' next' → logprob: -12.765535354614258

Token 1038: ' line' (ID: 2543)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9036672115325928
    2. '
' → logprob: -1.4036672115325928
    3. '       ' → logprob: -1.5286672115325928
    4. '   ' → logprob: -3.2786672115325928
    5. ',
' → logprob: -4.153667449951172
    6. ' or' → logprob: -4.528667449951172
    7. ':
' → logprob: -5.153667449951172
    8. 'def' → logprob: -5.278667449951172
    9. ' for' → logprob: -5.403667449951172
    10. '[' → logprob: -5.403667449951172

Token 1039: ' encountered' (ID: 41065)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016191203147172928
    2. ' line' → logprob: -4.766191005706787
    3. '   ' → logprob: -6.016191005706787
    4. '        
' → logprob: -6.641191005706787
    5. ',' → logprob: -6.891191005706787
    6. '```' → logprob: -7.141191005706787
    7. '
' → logprob: -7.516191005706787
    8. 'line' → logprob: -8.141191482543945
    9. 'token' → logprob: -8.141191482543945
    10. ' next' → logprob: -8.766191482543945

Token 1040: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024428023025393486
    2. ',' → logprob: -4.524427890777588
    3. '
' → logprob: -4.899427890777588
    4. ' line' → logprob: -6.399427890777588
    5. '(line' → logprob: -6.774427890777588
    6. '        
' → logprob: -7.524427890777588
    7. 'line' → logprob: -7.899427890777588
    8. ':' → logprob: -7.899427890777588
    9. '[line' → logprob: -8.649428367614746
    10. '   ' → logprob: -8.774428367614746

Token 1041: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019364648323971778
    2. '   ' → logprob: -9.25019359588623
    3. '```' → logprob: -11.00019359588623
    4. 'def' → logprob: -11.12519359588623
    5. ',' → logprob: -11.25019359588623
    6. ' line' → logprob: -11.62519359588623
    7. 'line' → logprob: -11.62519359588623
    8. '           ' → logprob: -11.75019359588623
    9. 'token' → logprob: -12.25019359588623
    10. 'next' → logprob: -12.25019359588623

Token 1042: ' hp' (ID: 37774)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.06550265103578568
    2. '       ' → logprob: -2.815502643585205
    3. ' line' → logprob: -5.940502643585205
    4. '   ' → logprob: -7.315502643585205
    5. 'if' → logprob: -9.440503120422363
    6. '```' → logprob: -9.940503120422363
    7. '	line' → logprob: -10.815503120422363
    8. '
' → logprob: -10.815503120422363
    9. 'input' → logprob: -11.190503120422363
    10. 'for' → logprob: -11.315503120422363

Token 1043: '_init' (ID: 13909)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.1045542061328888
    2. '_max' → logprob: -2.9795541763305664
    3. '_init' → logprob: -3.8545541763305664
    4. ' =' → logprob: -4.104554176330566
    5. '=' → logprob: -5.604554176330566
    6. ',' → logprob: -5.854554176330566
    7. '_' → logprob: -6.979554176330566
    8. 'line' → logprob: -7.729554176330566
    9. 'max' → logprob: -8.104554176330566
    10. '_limit' → logprob: -8.229554176330566

Token 1044: '_max' (ID: 13731)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7130534648895264
    2. '=' → logprob: -0.8380534648895264
    3. ' =' → logprob: -2.5880534648895264
    4. '_line' → logprob: -7.2130537033081055
    5. ',line' → logprob: -8.338053703308105
    6. '   ' → logprob: -8.588053703308105
    7. ' ,' → logprob: -9.088053703308105
    8. '_,' → logprob: -9.088053703308105
    9. '=line' → logprob: -9.088053703308105
    10. ',_' → logprob: -9.338053703308105

Token 1045: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07540516555309296
    2. '=' → logprob: -3.0754051208496094
    3. ' =' → logprob: -3.7004051208496094
    4. ' ,' → logprob: -7.575405120849609
    5. ',line' → logprob: -8.07540512084961
    6. '_line' → logprob: -8.45040512084961
    7. ',
' → logprob: -9.32540512084961
    8. '_,' → logprob: -9.45040512084961
    9. '_str' → logprob: -9.45040512084961
    10. '   ' → logprob: -9.57540512084961

Token 1046: ' next' (ID: 2613)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5684940814971924
    2. 'list' → logprob: -0.9434940814971924
    3. 'next' → logprob: -4.193493843078613
    4. 'tuple' → logprob: -4.193493843078613
    5. ' input' → logprob: -5.068493843078613
    6. ' list' → logprob: -5.693493843078613
    7. 'int' → logprob: -5.818493843078613
    8. 'map' → logprob: -7.193493843078613
    9. ' tuple' → logprob: -7.693493843078613
    10. ' next' → logprob: -8.443493843078613

Token 1047: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.006971705239266157
    2. '(' → logprob: -5.006971836090088
    3. '(
' → logprob: -8.88197135925293
    4. 'input' → logprob: -9.13197135925293
    5. ' (' → logprob: -13.00697135925293
    6. '(iter' → logprob: -13.75697135925293
    7. '(self' → logprob: -13.88197135925293
    8. '(

' → logprob: -14.00697135925293
    9. '(iterator' → logprob: -14.13197135925293
    10. '(token' → logprob: -14.38197135925293

Token 1048: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.5775964260101318
    2. '_line' → logprob: -1.2025964260101318
    3. '(input' → logprob: -2.702596426010132
    4. '(_' → logprob: -3.827596426010132
    5. ')' → logprob: -3.952596426010132
    6. '_token' → logprob: -4.577596664428711
    7. ')_' → logprob: -4.952596664428711
    8. '(lines' → logprob: -4.952596664428711
    9. '_tokens' → logprob: -6.327596664428711
    10. '(' → logprob: -7.327596664428711

Token 1049: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.3792151212692261
    2. '()).' → logprob: -1.754215121269226
    3. '()' → logprob: -2.6292152404785156
    4. '().' → logprob: -3.6292152404785156
    5. '()
' → logprob: -3.7542152404785156
    6. ')' → logprob: -4.129215240478516
    7. ')
' → logprob: -6.879215240478516
    8. '   ' → logprob: -7.379215240478516
    9. '())' → logprob: -7.879215240478516
    10. '())
' → logprob: -8.004215240478516

Token 1050: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -4.9186317482963204e-05
    2. 'rstrip' → logprob: -10.500049591064453
    3. 'split' → logprob: -10.750049591064453
    4. ' strip' → logprob: -16.375049591064453
    5. '_strip' → logprob: -17.125049591064453
    6. '.strip' → logprob: -18.750049591064453
    7. '(strip' → logprob: -20.000049591064453
    8. '```' → logprob: -20.000049591064453
    9. '-strip' → logprob: -20.750049591064453
    10. '   ' → logprob: -21.625049591064453

Token 1051: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.457189679145813
    2. '()' → logprob: -1.332189679145813
    3. '       ' → logprob: -3.0821895599365234
    4. '.split' → logprob: -4.582189559936523
    5. 'if' → logprob: -4.957189559936523
    6. '<|end|>' → logprob: -5.082189559936523
    7. '=' → logprob: -5.207189559936523
    8. '().' → logprob: -5.582189559936523
    9. ' =' → logprob: -5.707189559936523
    10. '
' → logprob: -5.707189559936523

Token 1052: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1687738448381424
    2. 'if' → logprob: -2.418773889541626
    3. ' if' → logprob: -3.543773889541626
    4. ' =' → logprob: -3.918773889541626
    5. '=' → logprob: -4.668773651123047
    6. '        
' → logprob: -6.043773651123047
    7. '==' → logprob: -6.543773651123047
    8. '
' → logprob: -7.043773651123047
    9. ' ==' → logprob: -7.293773651123047
    10. '           ' → logprob: -7.418773651123047

Token 1053: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.000386105413781479
    2. ' if' → logprob: -8.250386238098145
    3. '       ' → logprob: -9.000386238098145
    4. 'If' → logprob: -13.875386238098145
    5. '
' → logprob: -15.250386238098145
    6. ';if' → logprob: -16.125385284423828
    7. '           ' → logprob: -17.250385284423828
    8. '   ' → logprob: -17.250385284423828
    9. '```' → logprob: -17.500385284423828
    10. '        
' → logprob: -18.125385284423828

Token 1054: ' hp' (ID: 37774)
  Prédit: 'hp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hp' → logprob: -0.01928412728011608
    2. 'not' → logprob: -4.769284248352051
    3. ' hp' → logprob: -4.894284248352051
    4. ' not' → logprob: -5.769284248352051
    5. '_hp' → logprob: -14.26928424835205
    6. '.hp' → logprob: -15.14428424835205
    7. 'len' → logprob: -15.76928424835205
    8. 'Hp' → logprob: -16.144283294677734
    9. '
' → logprob: -16.519283294677734
    10. '   ' → logprob: -16.644283294677734

Token 1055: '_init' (ID: 13909)
  Prédit: '_init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_init' → logprob: -0.00042447797022759914
    2. '_' → logprob: -7.875424385070801
    3. '_
' → logprob: -11.1254243850708
    4. 'init' → logprob: -12.3754243850708
    5. 'Init' → logprob: -12.7504243850708
    6. '_max' → logprob: -12.8754243850708
    7. ' ==' → logprob: -13.0004243850708
    8. ''_' → logprob: -13.1254243850708
    9. '```' → logprob: -13.2504243850708
    10. '==' → logprob: -13.2504243850708

Token 1056: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.01699795573949814
    2. '_init' → logprob: -4.141997814178467
    3. '==' → logprob: -8.266998291015625
    4. '_' → logprob: -8.391998291015625
    5. '=' → logprob: -9.266998291015625
    6. 'max' → logprob: -9.266998291015625
    7. '```' → logprob: -9.891998291015625
    8. ' ==' → logprob: -10.141998291015625
    9. '_min' → logprob: -10.766998291015625
    10. ''_' → logprob: -10.766998291015625

Token 1057: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.048665717244148254
    2. ' ==' → logprob: -3.048665761947632
    3. '=' → logprob: -9.923666000366211
    4. '==
' → logprob: -11.048666000366211
    5. '()==' → logprob: -12.673666000366211
    6. '===' → logprob: -12.798666000366211
    7. '=="' → logprob: -12.923666000366211
    8. '=='' → logprob: -13.423666000366211
    9. ')==' → logprob: -13.548666000366211
    10. ']==' → logprob: -14.048666000366211

Token 1058: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6384183168411255
    2. '"' → logprob: -0.7634183168411255
    3. '''' → logprob: -5.388418197631836
    4. '""' → logprob: -7.513418197631836
    5. '0' → logprob: -8.263418197631836
    6. ''-' → logprob: -9.513418197631836
    7. ''#' → logprob: -9.513418197631836
    8. '   ' → logprob: -10.263418197631836
    9. '"":' → logprob: -10.388418197631836
    10. ''O' → logprob: -10.388418197631836

Token 1059: '0' (ID: 15)
  Prédit: '':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.17497006058692932
    2. '0' → logprob: -2.5499701499938965
    3. '''' → logprob: -3.4249701499938965
    4. '':' → logprob: -3.5499701499938965
    5. ''' → logprob: -4.1749701499938965
    6. '""' → logprob: -5.9249701499938965
    7. '"' → logprob: -6.2999701499938965
    8. '-' → logprob: -8.549969673156738
    9. '':
' → logprob: -8.549969673156738
    10. 'END' → logprob: -9.049969673156738

Token 1060: ' ' (ID: 220)
  Prédit: '':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.0847984105348587
    2. '':' → logprob: -2.8347983360290527
    3. '0' → logprob: -4.334798336029053
    4. ' ' → logprob: -5.084798336029053
    5. '':
' → logprob: -6.084798336029053
    6. ''' → logprob: -7.084798336029053
    7. ' '' → logprob: -8.959798812866211
    8. '':

' → logprob: -11.459798812866211
    9. ''):
' → logprob: -11.834798812866211
    10. '":
' → logprob: -12.959798812866211

Token 1061: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010843054042197764
    2. ''' → logprob: -10.12510871887207
    3. '':' → logprob: -10.75010871887207
    4. ''):
' → logprob: -11.00010871887207
    5. '':
' → logprob: -11.50010871887207
    6. ' ' → logprob: -11.75010871887207
    7. ''):' → logprob: -12.50010871887207
    8. ''>' → logprob: -13.37510871887207
    9. '':
' → logprob: -13.62510871887207
    10. '```' → logprob: -14.00010871887207

Token 1062: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.024056384339928627
    2. '':' → logprob: -3.8990564346313477
    3. '\n' → logprob: -5.774056434631348
    4. '':
' → logprob: -8.274056434631348
    5. ''' → logprob: -9.024056434631348
    6. ''):
' → logprob: -11.149056434631348
    7. '":
' → logprob: -12.649056434631348
    8. '':

' → logprob: -13.149056434631348
    9. ''
' → logprob: -13.524056434631348
    10. '\r' → logprob: -13.524056434631348

Token 1063: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005695434287190437
    2. ':
' → logprob: -5.505695343017578
    3. ':' → logprob: -7.130695343017578
    4. '       ' → logprob: -7.380695343017578
    5. '               ' → logprob: -9.880695343017578
    6. 'return' → logprob: -10.130695343017578
    7. ':return' → logprob: -10.380695343017578
    8. '          ' → logprob: -11.130695343017578
    9. '
' → logprob: -11.255695343017578
    10. '		' → logprob: -11.755695343017578

Token 1064: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0011258102022111416
    2. '           ' → logprob: -7.001125812530518
    3. ' return' → logprob: -8.75112533569336
    4. '               ' → logprob: -10.62612533569336
    5. '
' → logprob: -10.62612533569336
    6. '{return' → logprob: -12.87612533569336
    7. ':return' → logprob: -13.25112533569336
    8. '	return' → logprob: -13.62612533569336
    9. '```' → logprob: -14.25112533569336
    10. '       ' → logprob: -14.75112533569336

Token 1065: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.10542644560337067
    2. ' None' → logprob: -2.355426549911499
    3. '(None' → logprob: -5.48042631149292
    4. '
' → logprob: -7.10542631149292
    5. ' (' → logprob: -10.355426788330078
    6. '[' → logprob: -10.355426788330078
    7. ',None' → logprob: -10.480426788330078
    8. '[]
' → logprob: -10.980426788330078
    9. '[int' → logprob: -11.105426788330078
    10. '[]' → logprob: -11.230426788330078

Token 1066: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003474032273516059
    2. '
' → logprob: -6.503474235534668
    3. '        
' → logprob: -6.628474235534668
    4. ',' → logprob: -8.378474235534668
    5. '<|end|>' → logprob: -9.003474235534668
    6. '  
' → logprob: -9.128474235534668
    7. '      ' → logprob: -9.753474235534668
    8. '    
' → logprob: -10.628474235534668
    9. '```' → logprob: -11.253474235534668
    10. '        ' → logprob: -11.253474235534668

Token 1067: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02154587209224701
    2. '
' → logprob: -4.396545886993408
    3. '        
' → logprob: -5.396545886993408
    4. '<|end|>' → logprob: -5.896545886993408
    5. ',' → logprob: -7.271545886993408
    6. '```' → logprob: -8.52154541015625
    7. '  
' → logprob: -9.02154541015625
    8. 'tokens' → logprob: -9.02154541015625
    9. '    
' → logprob: -9.77154541015625
    10. 'token' → logprob: -10.14654541015625

Token 1068: ' hp' (ID: 37774)
  Prédit: 'hp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hp' (adapté à ' hp') → logprob: -0.0843956246972084
    2. 'rows' → logprob: -2.58439564704895
    3. '       ' → logprob: -5.959395408630371
    4. 'parts' → logprob: -6.334395408630371
    5. 'row' → logprob: -7.834395408630371
    6. 'h' → logprob: -8.209395408630371
    7. 'r' → logprob: -8.209395408630371
    8. 'max' → logprob: -10.334395408630371
    9. 'hc' → logprob: -10.459395408630371
    10. 'cols' → logprob: -10.834395408630371

Token 1069: '_init' (ID: 13909)
  Prédit: '_init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_init' → logprob: -0.0003570343542378396
    2. '_initial' → logprob: -8.750356674194336
    3. ',' → logprob: -8.875356674194336
    4. '_max' → logprob: -11.125356674194336
    5. '_,' → logprob: -12.000356674194336
    6. '_tokens' → logprob: -12.125356674194336
    7. ',_' → logprob: -12.250356674194336
    8. '_parts' → logprob: -12.750356674194336
    9. '_INIT' → logprob: -13.125356674194336
    10. '_values' → logprob: -13.250356674194336

Token 1070: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35176920890808105
    2. '_max' → logprob: -2.351769208908081
    3. '_,' → logprob: -2.351769208908081
    4. '_init' → logprob: -2.476769208908081
    5. ',_' → logprob: -4.47676944732666
    6. '_' → logprob: -4.85176944732666
    7. ' ,' → logprob: -6.97676944732666
    8. '_tokens' → logprob: -8.10176944732666
    9. 'max' → logprob: -8.72676944732666
    10. '_split' → logprob: -8.97676944732666

Token 1071: ' hp' (ID: 37774)
  Prédit: 'hp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hp' → logprob: -0.005235767923295498
    2. ' hp' → logprob: -5.25523567199707
    3. '_hp' → logprob: -13.13023567199707
    4. '_' → logprob: -18.25523567199707
    5. ' ' → logprob: -18.38023567199707
    6. 'HP' → logprob: -18.63023567199707
    7. '
' → logprob: -19.00523567199707
    8. 'hpp' → logprob: -19.63023567199707
    9. '_,' → logprob: -19.88023567199707
    10. '.hp' → logprob: -19.88023567199707

Token 1072: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.008666337467730045
    2. '_init' → logprob: -4.758666515350342
    3. 'max' → logprob: -10.758666038513184
    4. '_' → logprob: -11.008666038513184
    5. '_min' → logprob: -12.633666038513184
    6. ',' → logprob: -13.008666038513184
    7. ',_' → logprob: -13.508666038513184
    8. ' _' → logprob: -13.883666038513184
    9. '_initial' → logprob: -13.883666038513184
    10. '_MAX' → logprob: -14.133666038513184

Token 1073: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1754721999168396
    2. ' =' → logprob: -2.1754722595214844
    3. ',' → logprob: -3.0504722595214844
    4. '_str' → logprob: -11.050472259521484
    5. ' ,' → logprob: -11.300472259521484
    6. ' ' → logprob: -12.425472259521484
    7. '=int' → logprob: -12.800472259521484
    8. ')' → logprob: -12.925472259521484
    9. ',_' → logprob: -13.050472259521484
    10. '   ' → logprob: -13.300472259521484

Token 1074: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.04962529242038727
    2. ' map' → logprob: -3.0496253967285156
    3. 'hp' → logprob: -6.924625396728516
    4. ' hp' → logprob: -10.049625396728516
    5. '[' → logprob: -11.549625396728516
    6. '(map' → logprob: -14.049625396728516
    7. 'list' → logprob: -16.299625396728516
    8. '_map' → logprob: -16.424625396728516
    9. 'mp' → logprob: -16.424625396728516
    10. ' [' → logprob: -16.799625396728516

Token 1075: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009182471549138427
    2. 'int' → logprob: -7.000918388366699
    3. '(str' → logprob: -12.1259183883667
    4. '[int' → logprob: -14.5009183883667
    5. '(' → logprob: -15.5009183883667
    6. 'str' → logprob: -15.6259183883667
    7. '(lambda' → logprob: -15.8759183883667
    8. '
' → logprob: -16.125917434692383
    9. '```' → logprob: -17.125917434692383
    10. '=int' → logprob: -17.375917434692383

Token 1076: ',' (ID: 11)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.616563081741333
    2. 'hp' → logprob: -1.491563081741333
    3. ')' → logprob: -1.616563081741333
    4. '(next' → logprob: -3.741563081741333
    5. '(' → logprob: -4.991562843322754
    6. 'next' → logprob: -6.116562843322754
    7. ',' → logprob: -6.866562843322754
    8. '(
' → logprob: -7.241562843322754
    9. ' hp' → logprob: -7.491562843322754
    10. ')(' → logprob: -7.741562843322754

Token 1077: ' hp' (ID: 37774)
  Prédit: 'hp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hp' → logprob: -3.547789674485102e-05
    2. ' hp' → logprob: -10.250035285949707
    3. '_hp' → logprob: -19.250036239624023
    4. '.hp' → logprob: -20.500036239624023
    5. 'hm' → logprob: -21.875036239624023
    6. '
' → logprob: -21.875036239624023
    7. 'HP' → logprob: -23.000036239624023
    8. 'Hp' → logprob: -23.000036239624023
    9. 'hf' → logprob: -23.750036239624023
    10. 'hr' → logprob: -23.750036239624023

Token 1078: '_init' (ID: 13909)
  Prédit: '_init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_init' → logprob: -2.7372048862162046e-05
    2. 'init' → logprob: -11.750027656555176
    3. '   ' → logprob: -12.000027656555176
    4. '.init' → logprob: -12.500027656555176
    5. '_.' → logprob: -13.500027656555176
    6. ' .' → logprob: -13.750027656555176
    7. '```' → logprob: -14.375027656555176
    8. 'Init' → logprob: -14.500027656555176
    9. '_INIT' → logprob: -14.500027656555176
    10. '    ' → logprob: -14.500027656555176

Token 1079: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.20759578049182892
    2. '_init' → logprob: -2.2075958251953125
    3. '.split' → logprob: -3.7075958251953125
    4. '.readline' → logprob: -3.8325958251953125
    5. '_next' → logprob: -4.4575958251953125
    6. ')' → logprob: -5.3325958251953125
    7. '.next' → logprob: -6.2075958251953125
    8. '   ' → logprob: -6.3325958251953125
    9. '_tokens' → logprob: -6.3325958251953125
    10. 'max' → logprob: -6.4575958251953125

Token 1080: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.008204610086977482
    2. '().' → logprob: -4.883204460144043
    3. '.strip' → logprob: -8.008204460144043
    4. '.' → logprob: -8.508204460144043
    5. ' .' → logprob: -10.383204460144043
    6. '.readline' → logprob: -11.133204460144043
    7. ')' → logprob: -11.883204460144043
    8. '[' → logprob: -12.383204460144043
    9. 'split' → logprob: -12.633204460144043
    10. '   ' → logprob: -13.508204460144043

Token 1081: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02461402304470539
    2. '()' → logprob: -3.774614095687866
    3. '('' → logprob: -7.399613857269287
    4. ')' → logprob: -7.649613857269287
    5. '())
' → logprob: -8.524614334106445
    6. '()[' → logprob: -9.649614334106445
    7. '()
' → logprob: -12.399614334106445
    8. '()]' → logprob: -12.524614334106445
    9. '(' → logprob: -12.899614334106445
    10. '(None' → logprob: -13.399614334106445

Token 1082: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004747910890728235
    2. ' layout' → logprob: -6.3797478675842285
    3. 'layout' → logprob: -7.3797478675842285
    4. '```' → logprob: -7.5047478675842285
    5. '        
' → logprob: -7.6297478675842285
    6. ' trap' → logprob: -8.379748344421387
    7. 'rows' → logprob: -8.754748344421387
    8. ' traps' → logprob: -8.754748344421387
    9. 'row' → logprob: -9.004748344421387
    10. 'trap' → logprob: -9.254748344421387

Token 1083: ' R' (ID: 460)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.008454885333776474
    2. ' rows' → logprob: -5.6334547996521
    3. 'trap' → logprob: -6.7584547996521
    4. 'n' → logprob: -6.8834547996521
    5. 'layout' → logprob: -7.2584547996521
    6. '       ' → logprob: -7.3834547996521
    7. 'r' → logprob: -7.8834547996521
    8. 'R' (adapté à ' R') → logprob: -8.258455276489258
    9. 'num' → logprob: -8.883455276489258
    10. '   ' → logprob: -9.008455276489258

Token 1084: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03966952860355377
    2. ' =' → logprob: -3.5396695137023926
    3. '=' → logprob: -4.789669513702393
    4. ' ,' → logprob: -6.914669513702393
    5. '<|end|>' → logprob: -8.28966999053955
    6. ',
' → logprob: -9.03966999053955
    7. ')' → logprob: -9.53966999053955
    8. ',R' → logprob: -11.03966999053955
    9. '   ' → logprob: -11.16466999053955
    10. '       ' → logprob: -11.41466999053955

Token 1085: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.002807013690471649
    2. ' C' → logprob: -5.877807140350342
    3. '
' → logprob: -13.877806663513184
    4. 'S' → logprob: -14.877806663513184
    5. '   ' → logprob: -14.877806663513184
    6. '

' → logprob: -16.0028076171875
    7. '    ' → logprob: -16.7528076171875
    8. ' ' → logprob: -16.8778076171875
    9. '    
' → logprob: -16.8778076171875
    10. '
' → logprob: -17.1278076171875

Token 1086: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5232035517692566
    2. ' =' → logprob: -0.8982035517692566
    3. ',' → logprob: -10.02320384979248
    4. '=line' → logprob: -10.39820384979248
    5. '=int' → logprob: -13.39820384979248
    6. '       ' → logprob: -14.52320384979248
    7. '    ' → logprob: -14.89820384979248
    8. '=input' → logprob: -15.14820384979248
    9. '<|end|>' → logprob: -15.14820384979248
    10. '   ' → logprob: -15.27320384979248

Token 1087: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.47680625319480896
    2. ' map' → logprob: -0.9768062829971313
    3. 'next' → logprob: -5.976806163787842
    4. ' next' → logprob: -8.601806640625
    5. '[next' → logprob: -12.976806640625
    6. '[' → logprob: -13.476806640625
    7. 'list' → logprob: -14.601806640625
    8. '	map' → logprob: -15.351806640625
    9. '(map' → logprob: -16.351806640625
    10. 'input' → logprob: -16.476806640625

Token 1088: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000785091076977551
    2. '(next' → logprob: -8.000784873962402
    3. '(str' → logprob: -8.125784873962402
    4. 'int' → logprob: -9.625784873962402
    5. '[int' → logprob: -10.125784873962402
    6. 'next' → logprob: -10.500784873962402
    7. '(lambda' → logprob: -11.000784873962402
    8. '=int' → logprob: -13.875784873962402
    9. '(' → logprob: -13.875784873962402
    10. '(list' → logprob: -14.750784873962402

Token 1089: ',' (ID: 11)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.35937419533729553
    2. ',' → logprob: -1.3593741655349731
    3. 'next' → logprob: -3.8593742847442627
    4. ',next' → logprob: -4.484374046325684
    5. ')' → logprob: -5.609374046325684
    6. '(input' → logprob: -6.234374046325684
    7. ' next' → logprob: -6.484374046325684
    8. '[next' → logprob: -6.609374046325684
    9. ',input' → logprob: -6.609374046325684
    10. '),' → logprob: -6.734374046325684

Token 1090: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.005318901035934687
    2. ' next' → logprob: -5.255319118499756
    3. 'input' → logprob: -9.505318641662598
    4. '(next' → logprob: -11.505318641662598
    5. '[next' → logprob: -15.380318641662598
    6. ' input' → logprob: -16.005319595336914
    7. '_next' → logprob: -16.755319595336914
    8. ',next' → logprob: -16.880319595336914
    9. '.next' → logprob: -17.005319595336914
    10. '	next' → logprob: -17.505319595336914

Token 1091: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.25227975845336914
    2. 'input' → logprob: -1.5022797584533691
    3. ' input' → logprob: -8.002279281616211
    4. '=input' → logprob: -11.752279281616211
    5. '[input' → logprob: -13.127279281616211
    6. '<input' → logprob: -13.252279281616211
    7. ')' → logprob: -13.377279281616211
    8. '(' → logprob: -14.127279281616211
    9. ',input' → logprob: -14.377279281616211
    10. '(
' → logprob: -15.002279281616211

Token 1092: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0013883279170840979
    2. 'input' → logprob: -6.8763885498046875
    3. 'lines' → logprob: -8.626388549804688
    4. '(input' → logprob: -9.001388549804688
    5. 'Lines' → logprob: -10.251388549804688
    6. '(lines' → logprob: -12.376388549804688
    7. '```' → logprob: -12.376388549804688
    8. ')' → logprob: -13.876388549804688
    9. '_LINES' → logprob: -13.876388549804688
    10. '(' → logprob: -14.626388549804688

Token 1093: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.0016675653168931603
    2. '().' → logprob: -6.501667499542236
    3. '()).' → logprob: -8.751667976379395
    4. ')' → logprob: -12.376667976379395
    5. ' ).' → logprob: -13.876667976379395
    6. '.split' → logprob: -14.876667976379395
    7. '>().' → logprob: -15.001667976379395
    8. '   ' → logprob: -15.251667976379395
    9. '),' → logprob: -15.501667976379395
    10. '').' → logprob: -15.751667976379395

Token 1094: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.889424836728722e-05
    2. 'strip' → logprob: -9.250099182128906
    3. '(split' → logprob: -13.875099182128906
    4. '().' → logprob: -14.250099182128906
    5. ' split' → logprob: -14.250099182128906
    6. '.split' → logprob: -14.375099182128906
    7. '_split' → logprob: -17.125099182128906
    8. 'rstrip' → logprob: -17.625099182128906
    9. '()' → logprob: -19.750099182128906
    10. 'spl' → logprob: -19.750099182128906

Token 1095: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02454574592411518
    2. ')' → logprob: -4.149545669555664
    3. '()' → logprob: -4.899545669555664
    4. '())
' → logprob: -7.024545669555664
    5. '(' → logprob: -9.399545669555664
    6. '(),' → logprob: -10.649545669555664
    7. '()
' → logprob: -12.274545669555664
    8. '(','' → logprob: -12.399545669555664
    9. '().' → logprob: -12.524545669555664
    10. '()[' → logprob: -12.649545669555664

Token 1096: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015595538541674614
    2. 'layout' → logprob: -4.265595436096191
    3. 'trap' → logprob: -7.515595436096191
    4. ' layout' → logprob: -7.640595436096191
    5. '```' → logprob: -9.015595436096191
    6. '        
' → logprob: -10.515595436096191
    7. 'grid' → logprob: -10.765595436096191
    8. 'rows' → logprob: -10.765595436096191
    9. 'self' → logprob: -10.890595436096191
    10. 'line' → logprob: -11.015595436096191

Token 1097: ' layout' (ID: 10557)
  Prédit: 'layout'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'layout' (adapté à ' layout') → logprob: -0.0010491237044334412
    2. 'trap' → logprob: -7.001049041748047
    3. '       ' → logprob: -9.001049041748047
    4. ' layout' → logprob: -11.501049041748047
    5. 'tr' → logprob: -13.251049041748047
    6. 'rows' → logprob: -14.376049041748047
    7. 'self' → logprob: -14.626049041748047
    8. '_layout' → logprob: -15.126049041748047
    9. 'lines' → logprob: -15.376049041748047
    10. 'grid' → logprob: -15.626049041748047

Token 1098: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760014653205872
    2. '=' → logprob: -0.8260014653205872
    3. '=[]' → logprob: -10.576001167297363
    4. '       ' → logprob: -10.951001167297363
    5. '=[]
' → logprob: -12.076001167297363
    6. '   ' → logprob: -12.951001167297363
    7. '=line' → logprob: -13.076001167297363
    8. '        ' → logprob: -13.326001167297363
    9. '_lines' → logprob: -13.576001167297363
    10. '=
' → logprob: -13.826001167297363

Token 1099: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.024194978177547455
    2. '[]
' → logprob: -3.7741949558258057
    3. '[]' → logprob: -8.024194717407227
    4. '[next' → logprob: -9.024194717407227
    5. '[class' → logprob: -9.274194717407227
    6. '[str' → logprob: -10.024194717407227
    7. '[list' → logprob: -10.149194717407227
    8. '[new' → logprob: -10.399194717407227
    9. '[
' → logprob: -10.399194717407227
    10. ' [' → logprob: -10.524194717407227

Token 1100: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.08522017300128937
    2. 'next' → logprob: -2.5852200984954834
    3. '[next' → logprob: -5.0852203369140625
    4. 'input' → logprob: -9.460220336914062
    5. '[list' → logprob: -10.835220336914062
    6. ' list' → logprob: -11.335220336914062
    7. ' next' → logprob: -11.960220336914062
    8. '(next' → logprob: -12.585220336914062
    9. '[]' → logprob: -13.835220336914062
    10. '[input' → logprob: -13.960220336914062

Token 1101: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.00013274075172375888
    2. 'next' → logprob: -9.00013256072998
    3. '(input' → logprob: -12.50013256072998
    4. '(' → logprob: -12.75013256072998
    5. '(map' → logprob: -13.62513256072998
    6. '[next' → logprob: -13.75013256072998
    7. '((' → logprob: -16.750133514404297
    8. 'input' → logprob: -16.875133514404297
    9. '(
' → logprob: -17.125133514404297
    10. '```' → logprob: -17.250133514404297

Token 1102: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04860236495733261
    2. 'input' → logprob: -3.048602342605591
    3. ' input' → logprob: -11.923602104187012
    4. '=input' → logprob: -12.798602104187012
    5. '(
' → logprob: -13.298602104187012
    6. '_input' → logprob: -13.548602104187012
    7. '[input' → logprob: -13.673602104187012
    8. ',input' → logprob: -14.673602104187012
    9. '<input' → logprob: -15.173602104187012
    10. '(' → logprob: -15.298602104187012

Token 1103: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.019744038581848145
    2. 'input' → logprob: -4.019743919372559
    3. 'lines' → logprob: -7.144743919372559
    4. '(input' → logprob: -7.269743919372559
    5. 'Lines' → logprob: -10.394743919372559
    6. ')' → logprob: -10.394743919372559
    7. 'line' → logprob: -11.019743919372559
    8. '(lines' → logprob: -11.644743919372559
    9. '[input' → logprob: -12.144743919372559
    10. '=input' → logprob: -12.894743919372559

Token 1104: ').' (ID: 741)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00040421701851300895
    2. '())' → logprob: -8.750404357910156
    3. '()))' → logprob: -8.875404357910156
    4. '()[' → logprob: -10.125404357910156
    5. '()' → logprob: -10.625404357910156
    6. '.strip' → logprob: -11.125404357910156
    7. '))' → logprob: -12.000404357910156
    8. '.readline' → logprob: -12.000404357910156
    9. ').' → logprob: -13.000404357910156
    10. '()).' → logprob: -13.125404357910156

Token 1105: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.008614926598966122
    2. 'rstrip' → logprob: -4.758615016937256
    3. ' strip' → logprob: -15.133614540100098
    4. '_strip' → logprob: -15.758614540100098
    5. '(strip' → logprob: -17.008615493774414
    6. '.strip' → logprob: -17.383615493774414
    7. '-strip' → logprob: -19.008615493774414
    8. '.rstrip' → logprob: -19.508615493774414
    9. 'Strip' → logprob: -20.758615493774414
    10. 'r' → logprob: -20.883615493774414

Token 1106: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.3874033987522125
    2. '())' → logprob: -1.1374033689498901
    3. '()' → logprob: -8.13740348815918
    4. '())
' → logprob: -8.88740348815918
    5. ''\' → logprob: -10.13740348815918
    6. '()\' → logprob: -10.38740348815918
    7. '("\' → logprob: -11.26240348815918
    8. '()
' → logprob: -11.51240348815918
    9. ')' → logprob: -12.38740348815918
    10. '().' → logprob: -13.01240348815918

Token 1107: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.2729995988775045e-06
    2. '\n' → logprob: -12.000006675720215
    3. 'r' → logprob: -17.8750057220459
    4. '012' → logprob: -21.1250057220459
    5. '
' → logprob: -22.0000057220459
    6. ')' → logprob: -22.2500057220459
    7. ' n' → logprob: -22.5000057220459
    8. 'newline' → logprob: -22.5000057220459
    9. 'ndef' → logprob: -22.6250057220459
    10. ')\' → logprob: -23.2500057220459

Token 1108: ''))' (ID: 7974)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4351983666419983
    2. ''))' → logprob: -1.0601983070373535
    3. '()))' → logprob: -5.1851983070373535
    4. '"))' → logprob: -8.560198783874512
    5. '))
' → logprob: -8.560198783874512
    6. ''))
' → logprob: -8.685198783874512
    7. ')' → logprob: -9.685198783874512
    8. '()' → logprob: -9.810198783874512
    9. '\n' → logprob: -10.060198783874512
    10. '('\' → logprob: -10.435198783874512

Token 1109: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07023195177316666
    2. 'for' → logprob: -2.6952319145202637
    3. '       ' → logprob: -8.570232391357422
    4. '()' → logprob: -10.445232391357422
    5. '           ' → logprob: -10.695232391357422
    6. ')' → logprob: -11.195232391357422
    7. '	for' → logprob: -11.195232391357422
    8. '        ' → logprob: -11.320232391357422
    9. '               ' → logprob: -12.695232391357422
    10. ']' → logprob: -12.695232391357422

Token 1110: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.030460597947239876
    2. '_range' → logprob: -3.5304605960845947
    3. 'range' → logprob: -7.405460834503174
    4. ' range' → logprob: -10.030460357666016
    5. '_in' → logprob: -11.280460357666016
    6. '_
' → logprob: -11.280460357666016
    7. '_i' → logprob: -12.030460357666016
    8. '_r' → logprob: -12.155460357666016
    9. ' _' → logprob: -12.530460357666016
    10. '_row' → logprob: -12.780460357666016

Token 1111: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001877351081930101
    2. ' range' → logprob: -6.501877307891846
    3. 'in' → logprob: -8.001877784729004
    4. ' in' → logprob: -10.376877784729004
    5. '_' → logprob: -12.876877784729004
    6. '(range' → logprob: -13.251877784729004
    7. '
' → logprob: -13.876877784729004
    8. ')' → logprob: -13.876877784729004
    9. 'ange' → logprob: -14.126877784729004
    10. '   ' → logprob: -15.126877784729004

Token 1112: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.961759259458631e-06
    2. ' range' → logprob: -12.250004768371582
    3. '_range' → logprob: -16.7500057220459
    4. '
' → logprob: -18.0000057220459
    5. '(range' → logprob: -19.3750057220459
    6. '_' → logprob: -20.1250057220459
    7. '	range' → logprob: -20.1250057220459
    8. '   ' → logprob: -21.0000057220459
    9. ')' → logprob: -21.8750057220459
    10. '.range' → logprob: -22.5000057220459

Token 1113: '(R' (ID: 4092)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.009834124706685543
    2. '(R' → logprob: -4.634834289550781
    3. ' R' → logprob: -9.509834289550781
    4. '	R' → logprob: -13.509834289550781
    5. '   ' → logprob: -14.009834289550781
    6. '       ' → logprob: -14.509834289550781
    7. '
' → logprob: -15.009834289550781
    8. '           ' → logprob: -15.259834289550781
    9. ',R' → logprob: -15.384834289550781
    10. ')' → logprob: -16.00983428955078

Token 1114: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00022213248303160071
    2. ')]
' → logprob: -8.875222206115723
    3. ')' → logprob: -9.750222206115723
    4. '       ' → logprob: -10.875222206115723
    5. ']' → logprob: -13.125222206115723
    6. ')]
' → logprob: -14.125222206115723
    7. ')],' → logprob: -14.750222206115723
    8. ')])' → logprob: -15.000222206115723
    9. ')
' → logprob: -15.250222206115723
    10. '   ' → logprob: -15.500222206115723

Token 1115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012689977302215993
    2. 'trap' → logprob: -9.250126838684082
    3. 'tr' → logprob: -11.500126838684082
    4. '        
' → logprob: -11.625126838684082
    5. '           ' → logprob: -13.625126838684082
    6. '   ' → logprob: -13.625126838684082
    7. ' traps' → logprob: -13.625126838684082
    8. '	' → logprob: -14.000126838684082
    9. '```' → logprob: -14.125126838684082
    10. 'Trap' → logprob: -14.250126838684082

Token 1116: ' T' (ID: 353)
  Prédit: 'trap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trap' → logprob: -0.6846718192100525
    2. 'T' (adapté à ' T') → logprob: -0.9346718192100525
    3. 'N' → logprob: -2.9346718788146973
    4. 'num' → logprob: -3.9346718788146973
    5. 't' → logprob: -4.809671878814697
    6. '       ' → logprob: -5.059671878814697
    7. 'n' → logprob: -5.184671878814697
    8. 'tr' → logprob: -5.934671878814697
    9. 'K' → logprob: -6.559671878814697
    10. 'line' → logprob: -6.684671878814697

Token 1117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11305592209100723
    2. '=' → logprob: -2.988055944442749
    3. '_line' → logprob: -3.488055944442749
    4. '       ' → logprob: -4.73805570602417
    5. ',' → logprob: -4.86305570602417
    6. '   ' → logprob: -5.36305570602417
    7. '_lines' → logprob: -6.86305570602417
    8. 'ypes' → logprob: -6.98805570602417
    9. '    ' → logprob: -7.61305570602417
    10. '           ' → logprob: -7.73805570602417

Token 1118: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.061967797577381134
    2. ' int' → logprob: -2.8119678497314453
    3. '=int' → logprob: -16.686967849731445
    4. 'next' → logprob: -16.811967849731445
    5. '[int' → logprob: -16.936967849731445
    6. '
' → logprob: -17.561967849731445
    7. '	int' → logprob: -18.311967849731445
    8. '(int' → logprob: -18.311967849731445
    9. '       ' → logprob: -18.686967849731445
    10. '<int' → logprob: -19.061967849731445

Token 1119: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.0031846018973737955
    2. 'next' → logprob: -5.753184795379639
    3. '(input' → logprob: -12.12818431854248
    4. '[next' → logprob: -14.00318431854248
    5. ' next' → logprob: -15.12818431854248
    6. '(' → logprob: -16.003185272216797
    7. '.next' → logprob: -16.378185272216797
    8. '	next' → logprob: -16.503185272216797
    9. 'input' → logprob: -16.878185272216797
    10. '_next' → logprob: -17.128185272216797

Token 1120: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -5.931863051955588e-05
    2. 'input' → logprob: -9.750059127807617
    3. ' input' → logprob: -15.125059127807617
    4. '=input' → logprob: -15.375059127807617
    5. '[input' → logprob: -15.375059127807617
    6. '(
' → logprob: -16.500059127807617
    7. ',input' → logprob: -16.625059127807617
    8. ' (' → logprob: -17.250059127807617
    9. '<input' → logprob: -17.375059127807617
    10. '	input' → logprob: -17.750059127807617

Token 1121: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0015367622254416347
    2. '(input' → logprob: -6.876536846160889
    3. 'lines' → logprob: -8.12653636932373
    4. 'input' → logprob: -8.62653636932373
    5. '(lines' → logprob: -11.00153636932373
    6. 'Lines' → logprob: -11.62653636932373
    7. '_line' → logprob: -14.37653636932373
    8. '[input' → logprob: -14.37653636932373
    9. '_LINES' → logprob: -14.62653636932373
    10. 'line' → logprob: -14.62653636932373

Token 1122: '))
' (ID: 2210)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.08161501586437225
    2. '())
' → logprob: -2.5816149711608887
    3. '()' → logprob: -6.581614971160889
    4. ')' → logprob: -6.706614971160889
    5. '().' → logprob: -9.706615447998047
    6. '())
' → logprob: -10.581615447998047
    7. '()
' → logprob: -11.206615447998047
    8. ')
' → logprob: -12.706615447998047
    9. '()))' → logprob: -12.831615447998047
    10. ' ())' → logprob: -13.081615447998047

Token 1123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030985695775598288
    2. '<|end|>' → logprob: -5.878098487854004
    3. '        
' → logprob: -9.003098487854004
    4. '<|end|>' → logprob: -10.128098487854004
    5. 'tokens' → logprob: -10.253098487854004
    6. 'tr' → logprob: -11.128098487854004
    7. ')' → logprob: -11.753098487854004
    8. 'token' → logprob: -11.878098487854004
    9. ',' → logprob: -12.003098487854004
    10. '```' → logprob: -12.003098487854004

Token 1124: ' trap' (ID: 34270)
  Prédit: 'trap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trap' (adapté à ' trap') → logprob: -0.0024819616228342056
    2. '       ' → logprob: -6.002481937408447
    3. 'tr' → logprob: -12.627482414245605
    4. ' trap' → logprob: -12.877482414245605
    5. 'self' → logprob: -15.877482414245605
    6. '```' → logprob: -16.12748146057129
    7. '   ' → logprob: -16.50248146057129
    8. 'Trap' → logprob: -17.50248146057129
    9. 'trip' → logprob: -18.00248146057129
    10. '        
' → logprob: -18.12748146057129

Token 1125: '_types' (ID: 21515)
  Prédit: '_types'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_types' → logprob: -3.106736039626412e-05
    2. '_symbols' → logprob: -10.750031471252441
    3. 's' → logprob: -12.375031471252441
    4. '_symbol' → logprob: -13.250031471252441
    5. '_type' → logprob: -13.375031471252441
    6. '_lines' → logprob: -14.625031471252441
    7. '_line' → logprob: -14.625031471252441
    8. '   ' → logprob: -14.750031471252441
    9. 'types' → logprob: -15.500031471252441
    10. '_TYPES' → logprob: -16.125030517578125

Token 1126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519499361515045
    2. '=' → logprob: -1.5019499063491821
    3. '       ' → logprob: -11.75195026397705
    4. '={}' → logprob: -12.25195026397705
    5. '   ' → logprob: -12.87695026397705
    6. '=[]' → logprob: -13.50195026397705
    7. '        ' → logprob: -13.62695026397705
    8. '    ' → logprob: -14.12695026397705
    9. '={}
' → logprob: -14.62695026397705
    10. '=[]
' → logprob: -14.87695026397705

Token 1127: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.02977108582854271
    2. '{}
' → logprob: -3.529771089553833
    3. 'dict' → logprob: -11.779770851135254
    4. ' {}' → logprob: -11.779770851135254
    5. ' {}
' → logprob: -12.279770851135254
    6. '{}

' → logprob: -14.529770851135254
    7. '{' → logprob: -16.40477180480957
    8. '{})' → logprob: -16.65477180480957
    9. '{}\' → logprob: -17.15477180480957
    10. ' dict' → logprob: -17.40477180480957

Token 1128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005959614180028439
    2. 'for' → logprob: -5.255959510803223
    3. ' for' → logprob: -7.255959510803223
    4. 'next' → logprob: -11.880959510803223
    5. '<|end|>' → logprob: -12.380959510803223
    6. 'token' → logprob: -12.880959510803223
    7. '        
' → logprob: -13.005959510803223
    8. '```' → logprob: -14.130959510803223
    9. '   ' → logprob: -14.630959510803223
    10. '           ' → logprob: -14.880959510803223

Token 1129: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0015987720107659698
    2. '       ' → logprob: -6.501598834991455
    3. ' for' → logprob: -9.251598358154297
    4. '	for' → logprob: -14.501598358154297
    5. '   ' → logprob: -17.876598358154297
    6. 'next' → logprob: -18.501598358154297
    7. 'token' → logprob: -18.626598358154297
    8. 'For' → logprob: -18.751598358154297
    9. 'line' → logprob: -19.626598358154297
    10. 'while' → logprob: -19.626598358154297

Token 1130: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.668304245569743e-05
    2. '_i' → logprob: -10.750046730041504
    3. '_t' → logprob: -10.875046730041504
    4. ' _' → logprob: -13.125046730041504
    5. '_
' → logprob: -13.375046730041504
    6. '_range' → logprob: -13.625046730041504
    7. 't' → logprob: -14.500046730041504
    8. 'i' → logprob: -15.000046730041504
    9. '_=' → logprob: -16.000045776367188
    10. '_
' → logprob: -16.875045776367188

Token 1131: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06914868205785751
    2. 'in' → logprob: -3.3191487789154053
    3. 'range' → logprob: -3.5691487789154053
    4. '_' → logprob: -6.194148540496826
    5. ' range' → logprob: -7.819148540496826
    6. ' ' → logprob: -13.819149017333984
    7. 't' → logprob: -13.944149017333984
    8. '
' → logprob: -14.069149017333984
    9. 'i' → logprob: -14.194149017333984
    10. '_range' → logprob: -14.694149017333984

Token 1132: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.9027791495318525e-05
    2. ' range' → logprob: -10.875019073486328
    3. '
' → logprob: -17.125019073486328
    4. '(range' → logprob: -17.125019073486328
    5. '_range' → logprob: -18.750019073486328
    6. '   ' → logprob: -19.500019073486328
    7. '	range' → logprob: -19.875019073486328
    8. 'in' → logprob: -20.000019073486328
    9. ' ' → logprob: -20.125019073486328
    10. '_' → logprob: -20.500019073486328

Token 1133: '(T' (ID: 7014)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0016276907408609986
    2. '(T' → logprob: -6.5016279220581055
    3. ' T' → logprob: -9.001627922058105
    4. '   ' → logprob: -13.501627922058105
    5. 'range' → logprob: -15.001627922058105
    6. '	T' → logprob: -15.626627922058105
    7. '       ' → logprob: -16.62662696838379
    8. '(' → logprob: -17.12662696838379
    9. '
' → logprob: -17.12662696838379
    10. '[T' → logprob: -17.12662696838379

Token 1134: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1682453751564026
    2. '):' → logprob: -1.9182453155517578
    3. '       ' → logprob: -5.668245315551758
    4. '           ' → logprob: -6.043245315551758
    5. ',' → logprob: -6.668245315551758
    6. ':' → logprob: -7.793245315551758
    7. ':
' → logprob: -8.793245315551758
    8. '):
' → logprob: -9.043245315551758
    9. '   ' → logprob: -9.793245315551758
    10. ')' → logprob: -10.543245315551758

Token 1135: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15532611310482025
    2. 'line' → logprob: -2.0303261280059814
    3. ' line' → logprob: -4.655325889587402
    4. 'trap' → logprob: -6.030325889587402
    5. '       ' → logprob: -8.155325889587402
    6. '	line' → logprob: -9.280325889587402
    7. 'tr' → logprob: -9.655325889587402
    8. '```' → logprob: -9.905325889587402
    9. 'token' → logprob: -10.905325889587402
    10. '   ' → logprob: -10.905325889587402

Token 1136: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.20237639546394348
    2. 'trap' → logprob: -1.702376365661621
    3. 'symbol' → logprob: -7.452376365661621
    4. ' line' → logprob: -8.827376365661621
    5. '           ' → logprob: -8.827376365661621
    6. 'parts' → logprob: -10.202376365661621
    7. 'type' → logprob: -10.827376365661621
    8. 'symbols' → logprob: -11.827376365661621
    9. 'tr' → logprob: -11.952376365661621
    10. 'tokens' → logprob: -11.952376365661621

Token 1137: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3977329134941101
    2. '=' → logprob: -1.1477329730987549
    3. '=line' → logprob: -4.772732734680176
    4. '_tokens' → logprob: -6.647732734680176
    5. 'tokens' → logprob: -7.147732734680176
    6. '=
' → logprob: -10.022732734680176
    7. ' =
' → logprob: -10.522732734680176
    8. '           ' → logprob: -10.772732734680176
    9. ' tokens' → logprob: -10.772732734680176
    10. '   ' → logprob: -10.772732734680176

Token 1138: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.002600034000352025
    2. ' next' → logprob: -6.002600193023682
    3. 'input' → logprob: -9.002599716186523
    4. ' input' → logprob: -13.752599716186523
    5. '(next' → logprob: -16.002599716186523
    6. '.next' → logprob: -18.627599716186523
    7. '	next' → logprob: -19.127599716186523
    8. '[next' → logprob: -19.377599716186523
    9. '   ' → logprob: -21.002599716186523
    10. '_next' → logprob: -21.627599716186523

Token 1139: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01816328801214695
    2. 'input' → logprob: -4.018163204193115
    3. '=input' → logprob: -12.018163681030273
    4. '[input' → logprob: -12.518163681030273
    5. ',input' → logprob: -13.893163681030273
    6. ' input' → logprob: -14.018163681030273
    7. 'line' → logprob: -14.143163681030273
    8. '<input' → logprob: -14.893163681030273
    9. 'import' → logprob: -15.518163681030273
    10. '/input' → logprob: -15.643163681030273

Token 1140: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.10212546586990356
    2. '(input' → logprob: -2.352125406265259
    3. 'input' → logprob: -6.352125644683838
    4. 'lines' → logprob: -9.60212516784668
    5. '=input' → logprob: -10.35212516784668
    6. '(lines' → logprob: -10.72712516784668
    7. '[input' → logprob: -11.10212516784668
    8. '_input' → logprob: -11.72712516784668
    9. 'Lines' → logprob: -11.97712516784668
    10. ' input' → logprob: -12.10212516784668

Token 1141: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.07771439850330353
    2. '().' → logprob: -2.827714443206787
    3. '()
' → logprob: -4.952714443206787
    4. '()).' → logprob: -5.702714443206787
    5. '
' → logprob: -6.202714443206787
    6. ')' → logprob: -6.702714443206787
    7. '()' → logprob: -6.952714443206787
    8. ')
' → logprob: -7.327714443206787
    9. '       ' → logprob: -8.952713966369629
    10. '           ' → logprob: -9.952713966369629

Token 1142: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.06582169234752655
    2. 'rstrip' → logprob: -2.815821647644043
    3. 'split' → logprob: -5.565821647644043
    4. '_strip' → logprob: -10.940821647644043
    5. 'str' → logprob: -14.315821647644043
    6. '=' → logprob: -14.565821647644043
    7. '_split' → logprob: -15.315821647644043
    8. '
' → logprob: -15.440821647644043
    9. ' strip' → logprob: -15.815821647644043
    10. 'Strip' → logprob: -15.940821647644043

Token 1143: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.022113662213087082
    2. '()[' → logprob: -4.397113800048828
    3. '()
' → logprob: -5.147113800048828
    4. '(' → logprob: -6.647113800048828
    5. '('' → logprob: -6.897113800048828
    6. '[' → logprob: -7.772113800048828
    7. '<|end|>' → logprob: -8.272113800048828
    8. '();' → logprob: -8.647113800048828
    9. '(
' → logprob: -9.397113800048828
    10. '[
' → logprob: -9.647113800048828

Token 1144: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018042956944555044
    2. '       ' → logprob: -6.376804351806641
    3. '[' → logprob: -10.50180435180664
    4. '               ' → logprob: -11.25180435180664
    5. 'token' → logprob: -11.37680435180664
    6. '   ' → logprob: -11.50180435180664
    7. '	       ' → logprob: -12.00180435180664
    8. '<|end|>' → logprob: -12.00180435180664
    9. ',' → logprob: -12.37680435180664
    10. 'tokens' → logprob: -12.75180435180664

Token 1145: ' symbol' (ID: 10038)
  Prédit: 'symbol'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'symbol' (adapté à ' symbol') → logprob: -0.0010549608850851655
    2. 'trap' → logprob: -7.501054763793945
    3. '           ' → logprob: -7.751054763793945
    4. 'sym' → logprob: -10.001054763793945
    5. ' symbol' → logprob: -10.876054763793945
    6. 's' → logprob: -13.751054763793945
    7. '               ' → logprob: -14.001054763793945
    8. '   ' → logprob: -14.251054763793945
    9. 'char' → logprob: -14.251054763793945
    10. '       ' → logprob: -14.251054763793945

Token 1146: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07720724493265152
    2. ' =' → logprob: -2.827207326889038
    3. ',' → logprob: -4.202207088470459
    4. '           ' → logprob: -9.702207565307617
    5. '=
' → logprob: -10.577207565307617
    6. '<|end|>' → logprob: -10.577207565307617
    7. '[' → logprob: -11.202207565307617
    8. '       ' → logprob: -12.077207565307617
    9. '=line' → logprob: -12.077207565307617
    10. ']=' → logprob: -12.952207565307617

Token 1147: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -2.935296834039036e-06
    2. ' line' → logprob: -12.75000286102295
    3. '   ' → logprob: -19.625003814697266
    4. '[line' → logprob: -20.250003814697266
    5. '(line' → logprob: -20.750003814697266
    6. '#line' → logprob: -21.250003814697266
    7. '	line' → logprob: -21.250003814697266
    8. ' ' → logprob: -23.125003814697266
    9. '=line' → logprob: -23.125003814697266
    10. '
' → logprob: -23.125003814697266

Token 1148: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001577698567416519
    2. '0' → logprob: -9.250157356262207
    3. '=' → logprob: -9.875157356262207
    4. '[
' → logprob: -12.000157356262207
    5. 's' → logprob: -13.000157356262207
    6. ' =' → logprob: -15.125157356262207
    7. 'token' → logprob: -15.125157356262207
    8. 'def' → logprob: -15.125157356262207
    9. 'import' → logprob: -15.250157356262207
    10. '#' → logprob: -15.750157356262207

Token 1149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.153795766294934e-06
    2. '[' → logprob: -12.125005722045898
    3. '1' → logprob: -15.000005722045898
    4. ' ' → logprob: -15.750005722045898
    5. '
' → logprob: -16.2500057220459
    6. '-' → logprob: -17.6250057220459
    7. '#' → logprob: -17.8750057220459
    8. '   ' → logprob: -18.2500057220459
    9. '```' → logprob: -18.6250057220459
    10. '(' → logprob: -19.1250057220459

Token 1150: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017226820811629295
    2. '<|end|>' → logprob: -4.392226696014404
    3. '           ' → logprob: -6.142226696014404
    4. '
' → logprob: -7.267226696014404
    5. ')' → logprob: -7.767226696014404
    6. '       ' → logprob: -8.267227172851562
    7. ',
' → logprob: -8.267227172851562
    8. ']' → logprob: -8.767227172851562
    9. '               ' → logprob: -9.142227172851562
    10. ';' → logprob: -9.392227172851562

Token 1151: '           ' (ID: 352)
  Prédit: 'damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'damage' → logprob: -0.16872291266918182
    2. '           ' → logprob: -2.0437228679656982
    3. ' damage' → logprob: -3.6687228679656982
    4. '	damage' → logprob: -8.918723106384277
    5. '.damage' → logprob: -10.918723106384277
    6. '       ' → logprob: -11.293723106384277
    7. '_damage' → logprob: -11.418723106384277
    8. 'Damage' → logprob: -12.418723106384277
    9. ',' → logprob: -12.418723106384277
    10. '          ' → logprob: -13.043723106384277

Token 1152: ' damage' (ID: 10364)
  Prédit: 'damage'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'damage' (adapté à ' damage') → logprob: -7.803360495017841e-05
    2. '           ' → logprob: -9.500078201293945
    3. ' damage' → logprob: -12.875078201293945
    4. '	damage' → logprob: -15.250078201293945
    5. 'dam' → logprob: -16.250078201293945
    6. '       ' → logprob: -17.125078201293945
    7. '               ' → logprob: -17.125078201293945
    8. 'd' → logprob: -17.375078201293945
    9. 'Damage' → logprob: -18.125078201293945
    10. '.damage' → logprob: -18.375078201293945

Token 1153: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16122570633888245
    2. ' =' → logprob: -1.91122567653656
    3. '=int' → logprob: -6.91122579574585
    4. ',' → logprob: -13.536225318908691
    5. 'int' → logprob: -13.661225318908691
    6. '=
' → logprob: -14.286225318908691
    7. '           ' → logprob: -14.286225318908691
    8. ' ' → logprob: -15.786225318908691
    9. '   ' → logprob: -15.911225318908691
    10. '       ' → logprob: -16.411226272583008

Token 1154: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.704273118884885e-07
    2. ' int' → logprob: -14.250000953674316
    3. '[int' → logprob: -20.875
    4. '=int' → logprob: -21.125
    5. '<int' → logprob: -22.375
    6. '(int' → logprob: -23.125
    7. ':int' → logprob: -23.25
    8. '	int' → logprob: -24.625
    9. '
' → logprob: -24.75
    10. ']int' → logprob: -25.0

Token 1155: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.000263481488218531
    2. 'line' → logprob: -8.250263214111328
    3. '[line' → logprob: -13.375263214111328
    4. '=line' → logprob: -14.750263214111328
    5. '#line' → logprob: -16.250263214111328
    6. ' line' → logprob: -16.250263214111328
    7. '	line' → logprob: -17.375263214111328
    8. ',line' → logprob: -19.625263214111328
    9. 'Line' → logprob: -21.375263214111328
    10. '_line' → logprob: -22.000263214111328

Token 1156: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001314295077463612
    2. '[line' → logprob: -9.250131607055664
    3. 'line' → logprob: -10.750131607055664
    4. '1' → logprob: -11.375131607055664
    5. '(line' → logprob: -13.625131607055664
    6. ' line' → logprob: -14.125131607055664
    7. '_line' → logprob: -16.625131607055664
    8. '
' → logprob: -17.000131607055664
    9. '=line' → logprob: -17.000131607055664
    10. '2' → logprob: -17.125131607055664

Token 1157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.771655115589965e-05
    2. '[' → logprob: -11.000018119812012
    3. ' ' → logprob: -14.375018119812012
    4. 'line' → logprob: -16.000017166137695
    5. '   ' → logprob: -16.250017166137695
    6. '
' → logprob: -17.625017166137695
    7. '(' → logprob: -17.750017166137695
    8. '2' → logprob: -17.875017166137695
    9. ']' → logprob: -18.250017166137695
    10. '[line' → logprob: -18.250017166137695

Token 1158: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0053176009096205235
    2. ')
' → logprob: -5.255317687988281
    3. '])' → logprob: -10.255317687988281
    4. '           ' → logprob: -11.005317687988281
    5. '       ' → logprob: -12.005317687988281
    6. ']' → logprob: -12.005317687988281
    7. ')]' → logprob: -12.005317687988281
    8. '<|end|>' → logprob: -12.005317687988281
    9. ' )' → logprob: -13.630317687988281
    10. ')
' → logprob: -13.880317687988281

Token 1159: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.779520092299208e-05
    2. '       ' → logprob: -10.250078201293945
    3. 'trap' → logprob: -10.250078201293945
    4. '               ' → logprob: -13.125078201293945
    5. '   ' → logprob: -13.500078201293945
    6. '
' → logprob: -13.500078201293945
    7. '          ' → logprob: -14.500078201293945
    8. '         ' → logprob: -15.250078201293945
    9. '<|end|>' → logprob: -15.375078201293945
    10. ' trap' → logprob: -15.500078201293945

Token 1160: ' trap' (ID: 34270)
  Prédit: 'trap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trap' (adapté à ' trap') → logprob: -0.0036119476426392794
    2. '           ' → logprob: -5.628612041473389
    3. ' trap' → logprob: -11.87861156463623
    4. '       ' → logprob: -12.75361156463623
    5. 'self' → logprob: -13.75361156463623
    6. '               ' → logprob: -15.00361156463623
    7. '   ' → logprob: -15.50361156463623
    8. 'trip' → logprob: -16.503612518310547
    9. 'tr' → logprob: -16.628612518310547
    10. '
' → logprob: -16.878612518310547

Token 1161: '_types' (ID: 21515)
  Prédit: '_types'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_types' → logprob: -3.5716304410016164e-05
    2. '_symbol' → logprob: -11.375035285949707
    3. 'symbol' → logprob: -11.500035285949707
    4. '_type' → logprob: -12.125035285949707
    5. '_symbols' → logprob: -12.875035285949707
    6. '=' → logprob: -13.500035285949707
    7. ' =' → logprob: -13.500035285949707
    8. '_' → logprob: -14.375035285949707
    9. '_TYPES' → logprob: -14.625035285949707
    10. 'types' → logprob: -15.000035285949707

Token 1162: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0022215070202946663
    2. '[' → logprob: -6.127221584320068
    3. '=' → logprob: -10.50222110748291
    4. ' =' → logprob: -12.75222110748291
    5. 'symbol' → logprob: -13.00222110748291
    6. '=s' → logprob: -13.50222110748291
    7. '[
' → logprob: -13.75222110748291
    8. '
' → logprob: -15.25222110748291
    9. '[class' → logprob: -15.50222110748291
    10. ' [' → logprob: -15.87722110748291

Token 1163: 'ymbol' (ID: 8315)
  Prédit: 'ymbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ymbol' → logprob: -2.935296834039036e-06
    2. 'symbol' → logprob: -13.12500286102295
    3. '[' → logprob: -14.25000286102295
    4. '(symbol' → logprob: -15.87500286102295
    5. '_symbol' → logprob: -17.500003814697266
    6. 'ystem' → logprob: -18.000003814697266
    7. '[s' → logprob: -18.375003814697266
    8. 'ym' → logprob: -19.375003814697266
    9. ' symbol' → logprob: -19.500003814697266
    10. '```' → logprob: -20.125003814697266

Token 1164: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.41118505597114563
    2. ']' → logprob: -1.1611850261688232
    3. ' =' → logprob: -4.161185264587402
    4. ']=' → logprob: -4.786185264587402
    5. ')' → logprob: -9.786185264587402
    6. '=
' → logprob: -11.536185264587402
    7. ')=' → logprob: -11.536185264587402
    8. ' ]' → logprob: -11.911185264587402
    9. '   ' → logprob: -13.161185264587402
    10. ' =
' → logprob: -13.411185264587402

Token 1165: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031781906727701426
    2. ' =' → logprob: -5.753178119659424
    3. '=
' → logprob: -14.753178596496582
    4. ']=' → logprob: -18.128177642822266
    5. ']' → logprob: -19.128177642822266
    6. '=

' → logprob: -19.378177642822266
    7. ' =
' → logprob: -20.253177642822266
    8. '[' → logprob: -20.378177642822266
    9. '=new' → logprob: -20.628177642822266
    10. '   ' → logprob: -21.003177642822266

Token 1166: ' Trap' (ID: 104412)
  Prédit: 'Trap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Trap' → logprob: -5.512236498361744e-07
    2. ' Trap' → logprob: -14.500000953674316
    3. 'trap' → logprob: -19.25
    4. '   ' → logprob: -22.375
    5. 'Tr' → logprob: -23.0
    6. '
' → logprob: -23.75
    7. 'Tray' → logprob: -24.0
    8. 'Trial' → logprob: -24.75
    9. 'Tap' → logprob: -24.875
    10. 'Trie' → logprob: -25.0

Token 1167: 'Type' (ID: 1163)
  Prédit: 'Type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Type' → logprob: -1.9361264946837764e-07
    2. 'type' → logprob: -16.625
    3. 'Trap' → logprob: -17.125
    4. '[' → logprob: -17.875
    5. '_type' → logprob: -18.5
    6. 'Damage' → logprob: -18.875
    7. 'Step' → logprob: -19.125
    8. 'Typ' → logprob: -19.25
    9. 'ype' → logprob: -20.0
    10. '	Type' → logprob: -20.0

Token 1168: '(symbol' (ID: 81393)
  Prédit: '(symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(symbol' → logprob: -0.0007323168683797121
    2. 'symbol' → logprob: -7.625732421875
    3. '(line' → logprob: -8.750732421875
    4. '(
' → logprob: -9.625732421875
    5. '(tr' → logprob: -11.125732421875
    6. '(' → logprob: -13.375732421875
    7. 'trap' → logprob: -13.375732421875
    8. '
' → logprob: -14.000732421875
    9. ' symbol' → logprob: -14.500732421875
    10. 'line' → logprob: -15.875732421875

Token 1169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9146995327901095e-05
    2. ',
' → logprob: -11.500019073486328
    3. ',d' → logprob: -11.750019073486328
    4. ' ,' → logprob: -14.250019073486328
    5. 'damage' → logprob: -16.000019073486328
    6. ',line' → logprob: -16.250019073486328
    7. ')' → logprob: -16.625019073486328
    8. 'symbol' → logprob: -16.875019073486328
    9. '	damage' → logprob: -17.500019073486328
    10. '
' → logprob: -17.625019073486328

Token 1170: ' damage' (ID: 10364)
  Prédit: 'damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'damage' → logprob: -9.686778503237292e-05
    2. ' damage' → logprob: -9.250097274780273
    3. '
' → logprob: -15.250097274780273
    4. '	damage' → logprob: -15.625097274780273
    5. '.damage' → logprob: -16.125097274780273
    6. '           ' → logprob: -16.375097274780273
    7. 'dam' → logprob: -17.250097274780273
    8. 'Damage' → logprob: -18.500097274780273
    9. '               ' → logprob: -18.500097274780273
    10. '                   ' → logprob: -18.625097274780273

Token 1171: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00759704178199172
    2. ')
' → logprob: -5.507596969604492
    3. '<|end|>' → logprob: -5.882596969604492
    4. '       ' → logprob: -7.882596969604492
    5. '
' → logprob: -8.257596969604492
    6. '<|end|>' → logprob: -9.882596969604492
    7. ')return' → logprob: -10.882596969604492
    8. '        
' → logprob: -12.757596969604492
    9. ')\
' → logprob: -13.382596969604492
    10. ' )' → logprob: -13.632596969604492

Token 1172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005753128207288682
    2. '```' → logprob: -8.750575065612793
    3. '<|end|>' → logprob: -9.250575065612793
    4. 'Next' → logprob: -9.375575065612793
    5. '
' → logprob: -9.875575065612793
    6. '           ' → logprob: -10.000575065612793
    7. '        
' → logprob: -10.625575065612793
    8. 'next' → logprob: -10.625575065612793
    9. 'class' → logprob: -10.750575065612793
    10. '   ' → logprob: -11.250575065612793

Token 1173: ' S' (ID: 336)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.5779336094856262
    2. '       ' → logprob: -0.9529336094856262
    3. ' P' → logprob: -3.7029335498809814
    4. 'p' → logprob: -4.8279337882995605
    5. 'M' → logprob: -5.3279337882995605
    6. '   ' → logprob: -6.4529337882995605
    7. 'S' (adapté à ' S') → logprob: -6.4529337882995605
    8. '#' → logprob: -6.7029337882995605
    9. 'route' → logprob: -6.7654337882995605
    10. 'n' → logprob: -6.9529337882995605

Token 1174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07586029171943665
    2. ',' → logprob: -3.4508602619171143
    3. '=' → logprob: -3.5758602619171143
    4. '   ' → logprob: -4.825860500335693
    5. '_line' → logprob: -5.700860500335693
    6. '       ' → logprob: -7.700860500335693
    7. '_lines' → logprob: -7.950860500335693
    8. '_' → logprob: -8.325860023498535
    9. '    ' → logprob: -8.700860023498535
    10. 'tep' → logprob: -9.200860023498535

Token 1175: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02324547804892063
    2. ' int' → logprob: -3.7732455730438232
    3. '=int' → logprob: -18.023244857788086
    4. 'next' → logprob: -18.273244857788086
    5. '[int' → logprob: -19.523244857788086
    6. '(int' → logprob: -19.773244857788086
    7. '<int' → logprob: -20.148244857788086
    8. '
' → logprob: -20.898244857788086
    9. '   ' → logprob: -21.523244857788086
    10. '	int' → logprob: -21.648244857788086

Token 1176: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.00150390958879143
    2. 'next' → logprob: -6.501503944396973
    3. '[next' → logprob: -13.626503944396973
    4. ' next' → logprob: -14.876503944396973
    5. '.next' → logprob: -17.376502990722656
    6. ',next' → logprob: -17.751502990722656
    7. '	next' → logprob: -18.251502990722656
    8. '(' → logprob: -19.751502990722656
    9. '_next' → logprob: -19.876502990722656
    10. '
' → logprob: -19.876502990722656

Token 1177: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0003758575767278671
    2. 'input' → logprob: -8.000375747680664
    3. '[input' → logprob: -10.250375747680664
    4. '<input' → logprob: -13.125375747680664
    5. ',input' → logprob: -13.625375747680664
    6. '=input' → logprob: -13.625375747680664
    7. ' input' → logprob: -15.625375747680664
    8. '
' → logprob: -15.875375747680664
    9. '(next' → logprob: -16.375375747680664
    10. '```' → logprob: -16.500375747680664

Token 1178: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.002862177789211273
    2. '(input' → logprob: -6.127861976623535
    3. 'lines' → logprob: -7.752861976623535
    4. 'input' → logprob: -9.127861976623535
    5. '(lines' → logprob: -9.127861976623535
    6. '[input' → logprob: -11.752861976623535
    7. 'Lines' → logprob: -12.252861976623535
    8. '```' → logprob: -12.877861976623535
    9. '_inputs' → logprob: -13.127861976623535
    10. ')' → logprob: -13.252861976623535

Token 1179: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7031972408294678
    2. ')
' → logprob: -0.7031972408294678
    3. '())
' → logprob: -4.703197479248047
    4. '())' → logprob: -7.203197479248047
    5. '()' → logprob: -9.328197479248047
    6. ')
' → logprob: -9.828197479248047
    7. '))
' → logprob: -11.203197479248047
    8. '()
' → logprob: -11.703197479248047
    9. ')`
' → logprob: -11.703197479248047
    10. '))' → logprob: -11.828197479248047

Token 1180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003993296413682401
    2. '<|end|>' → logprob: -8.000399589538574
    3. 'steps' → logprob: -11.625399589538574
    4. 'next' → logprob: -11.875399589538574
    5. '<|end|>' → logprob: -11.875399589538574
    6. '```' → logprob: -12.375399589538574
    7. ' lines' → logprob: -12.500399589538574
    8. '        
' → logprob: -12.500399589538574
    9. 'lines' → logprob: -12.875399589538574
    10. 'tokens' → logprob: -12.875399589538574

Token 1181: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' (adapté à ' steps') → logprob: -0.17139464616775513
    2. '       ' → logprob: -2.1713945865631104
    3. 'pat' → logprob: -3.7963945865631104
    4. 'path' → logprob: -4.6713948249816895
    5. '```' → logprob: -5.2963948249816895
    6. 'p' → logprob: -5.6713948249816895
    7. 'pot' → logprob: -6.9213948249816895
    8. 'positions' → logprob: -6.9213948249816895
    9. 'route' → logprob: -8.296394348144531
    10. 'paths' → logprob: -8.921394348144531

Token 1182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008895344100892544
    2. '=' → logprob: -4.758895397186279
    3. '<|end|>' → logprob: -9.258894920349121
    4. '   ' → logprob: -9.383894920349121
    5. '=[]' → logprob: -10.633894920349121
    6. '<|end|>' → logprob: -10.883894920349121
    7. '       ' → logprob: -11.008894920349121
    8. '    ' → logprob: -11.883894920349121
    9. '[]' → logprob: -12.633894920349121
    10. ':' → logprob: -12.633894920349121

Token 1183: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.38964468240737915
    2. '[]
' → logprob: -1.1396446228027344
    3. ' []' → logprob: -6.139644622802734
    4. ' []
' → logprob: -7.764644622802734
    5. '[' → logprob: -8.764644622802734
    6. '[int' → logprob: -10.764644622802734
    7. '[]

' → logprob: -12.264644622802734
    8. '[
' → logprob: -13.264644622802734
    9. '[])
' → logprob: -14.264644622802734
    10. '   ' → logprob: -14.264644622802734

Token 1184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6709998250007629
    2. 'for' → logprob: -0.7959998250007629
    3. ' for' → logprob: -3.295999765396118
    4. 'line' → logprob: -8.545999526977539
    5. '[line' → logprob: -9.045999526977539
    6. '   ' → logprob: -9.545999526977539
    7. 'token' → logprob: -9.920999526977539
    8. ' line' → logprob: -10.295999526977539
    9. '(line' → logprob: -10.670999526977539
    10. '           ' → logprob: -10.670999526977539

Token 1185: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0010297117987647653
    2. ' for' → logprob: -7.6260294914245605
    3. '       ' → logprob: -8.001029968261719
    4. 'line' → logprob: -8.626029968261719
    5. '	for' → logprob: -10.626029968261719
    6. '[line' → logprob: -14.251029968261719
    7. 'step' → logprob: -14.376029968261719
    8. 'next' → logprob: -14.751029968261719
    9. ' line' → logprob: -14.751029968261719
    10. '	line' → logprob: -15.251029968261719

Token 1186: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.7968066206085496e-05
    2. ' _' → logprob: -10.500027656555176
    3. '_
' → logprob: -15.875027656555176
    4. '_=' → logprob: -16.250028610229492
    5. '_range' → logprob: -17.500028610229492
    6. '_s' → logprob: -17.750028610229492
    7. '_step' → logprob: -17.750028610229492
    8. '_

' → logprob: -17.875028610229492
    9. 'i' → logprob: -18.000028610229492
    10. '_
' → logprob: -18.375028610229492

Token 1187: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4475087523460388
    2. ' in' → logprob: -1.5725088119506836
    3. 'in' → logprob: -1.9475088119506836
    4. ' _' → logprob: -4.572508811950684
    5. ' ' → logprob: -8.697508811950684
    6. 's' → logprob: -10.072508811950684
    7. 'step' → logprob: -10.572508811950684
    8. 'range' → logprob: -10.697508811950684
    9. ' step' → logprob: -11.572508811950684
    10. '_step' → logprob: -12.072508811950684

Token 1188: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002682541264221072
    2. ' range' → logprob: -6.002682685852051
    3. '_' → logprob: -8.50268268585205
    4. 'step' → logprob: -13.12768268585205
    5. ' in' → logprob: -13.75268268585205
    6. '_range' → logprob: -14.50268268585205
    7. 'in' → logprob: -15.12768268585205
    8. '(range' → logprob: -16.627681732177734
    9. '0' → logprob: -17.377681732177734
    10. 's' → logprob: -19.127681732177734

Token 1189: '(S' (ID: 6181)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0024566298816353083
    2. '(S' → logprob: -6.2524566650390625
    3. 'range' → logprob: -7.6274566650390625
    4. '0' → logprob: -10.877456665039062
    5. ' S' → logprob: -11.252456665039062
    6. '_S' → logprob: -12.377456665039062
    7. ' range' → logprob: -13.502456665039062
    8. 'int' → logprob: -13.752456665039062
    9. '(' → logprob: -14.002456665039062
    10. '   ' → logprob: -14.127456665039062

Token 1190: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.17829832434654236
    2. '):' → logprob: -3.053298234939575
    3. ',' → logprob: -3.428298234939575
    4. '           ' → logprob: -3.428298234939575
    5. '       ' → logprob: -3.553298234939575
    6. '(line' → logprob: -5.303298473358154
    7. ' line' → logprob: -5.803298473358154
    8. '   ' → logprob: -5.928298473358154
    9. ')' → logprob: -6.053298473358154
    10. ':' → logprob: -6.303298473358154

Token 1191: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10671383142471313
    2. 'line' → logprob: -2.4817137718200684
    3. ' line' → logprob: -4.481713771820068
    4. '       ' → logprob: -5.231713771820068
    5. 'step' → logprob: -7.356713771820068
    6. '	line' → logprob: -9.106714248657227
    7. '   ' → logprob: -9.856714248657227
    8. '#line' → logprob: -10.231714248657227
    9. '(line' → logprob: -10.606714248657227
    10. '	       ' → logprob: -11.106714248657227

Token 1192: ' direction' (ID: 9262)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.005847258493304253
    2. 'step' → logprob: -5.880847454071045
    3. '           ' → logprob: -6.255847454071045
    4. 'direction' (adapté à ' direction') → logprob: -7.005847454071045
    5. ' line' → logprob: -9.255846977233887
    6. 'dir' → logprob: -9.380846977233887
    7. 'parts' → logprob: -10.755846977233887
    8. 'lines' → logprob: -13.255846977233887
    9. '	line' → logprob: -13.255846977233887
    10. 'dire' → logprob: -13.255846977233887

Token 1193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3985779285430908
    2. '=' → logprob: -1.3985779285430908
    3. ' =' → logprob: -2.523577928543091
    4. ' ,' → logprob: -7.523577690124512
    5. ',line' → logprob: -7.773577690124512
    6. '=line' → logprob: -7.898577690124512
    7. 'line' → logprob: -9.148577690124512
    8. '_line' → logprob: -10.273577690124512
    9. ' ' → logprob: -11.273577690124512
    10. ',length' → logprob: -11.398577690124512

Token 1194: ' n' (ID: 297)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.0476452074944973
    2. ' distance' → logprob: -3.547645092010498
    3. 'dist' → logprob: -4.047645092010498
    4. ' dist' → logprob: -8.547645568847656
    5. 'str' → logprob: -10.422645568847656
    6. 'space' → logprob: -10.547645568847656
    7. 'count' → logprob: -12.797645568847656
    8. 'rest' → logprob: -13.047645568847656
    9. ' ' → logprob: -13.172645568847656
    10. 'd' → logprob: -13.422645568847656

Token 1195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019603651016950607
    2. '_str' → logprob: -4.269603729248047
    3. '=' → logprob: -5.894603729248047
    4. '_steps' → logprob: -6.519603729248047
    5. 'str' → logprob: -7.394603729248047
    6. '_tokens' → logprob: -8.769603729248047
    7. 'ext' → logprob: -9.019603729248047
    8. 'steps' → logprob: -9.269603729248047
    9. 'um' → logprob: -9.894603729248047
    10. '=int' → logprob: -10.144603729248047

Token 1196: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.12693114578723907
    2. ' next' → logprob: -2.1269311904907227
    3. '(next' → logprob: -13.126931190490723
    4. '[next' → logprob: -14.501931190490723
    5. 'line' → logprob: -15.251931190490723
    6. ' line' → logprob: -15.376931190490723
    7. '.next' → logprob: -16.126930236816406
    8. ',next' → logprob: -17.251930236816406
    9. '_next' → logprob: -17.501930236816406
    10. '	next' → logprob: -18.001930236816406

Token 1197: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.007666609715670347
    2. 'input' → logprob: -4.88266658782959
    3. ' input' → logprob: -11.13266658782959
    4. '[input' → logprob: -11.13266658782959
    5. '_input' → logprob: -11.50766658782959
    6. '=input' → logprob: -12.00766658782959
    7. '(' → logprob: -12.63266658782959
    8. ' (' → logprob: -13.50766658782959
    9. 'lines' → logprob: -13.50766658782959
    10. '(lines' → logprob: -13.63266658782959

Token 1198: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.10224289447069168
    2. '(input' → logprob: -2.352242946624756
    3. 'input' → logprob: -6.352242946624756
    4. '_inputs' → logprob: -8.977242469787598
    5. '_input' → logprob: -10.102242469787598
    6. 'lines' → logprob: -10.102242469787598
    7. '[input' → logprob: -10.477242469787598
    8. '_steps' → logprob: -11.102242469787598
    9. '(lines' → logprob: -11.227242469787598
    10. ' input' → logprob: -11.602242469787598

Token 1199: ').' (ID: 741)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.006208666134625673
    2. ').' → logprob: -6.256208896636963
    3. ' =' → logprob: -6.506208896636963
    4. '=' → logprob: -6.756208896636963
    5. '()' → logprob: -6.881208896636963
    6. '.split' → logprob: -8.131208419799805
    7. ')' → logprob: -8.881208419799805
    8. '   ' → logprob: -10.256208419799805
    9. '       ' → logprob: -10.756208419799805
    10. '.' → logprob: -11.006208419799805

Token 1200: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.25284111499786377
    2. 'strip' → logprob: -1.5028411149978638
    3. 'rstrip' → logprob: -7.002840995788574
    4. '(split' → logprob: -13.752840995788574
    5. ' split' → logprob: -14.752840995788574
    6. '_split' → logprob: -15.002840995788574
    7. ' strip' → logprob: -15.502840995788574
    8. '_strip' → logprob: -15.877840995788574
    9. '(strip' → logprob: -16.00284194946289
    10. 'plit' → logprob: -16.62784194946289

Token 1201: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7538790106773376
    2. ',' → logprob: -0.8788790106773376
    3. '       ' → logprob: -3.7538790702819824
    4. '               ' → logprob: -4.003879070281982
    5. '(n' → logprob: -4.753879070281982
    6. ',n' → logprob: -4.753879070281982
    7. '            
' → logprob: -4.878879070281982
    8. ' =' → logprob: -5.003879070281982
    9. 'n' → logprob: -5.003879070281982
    10. '<|end|>' → logprob: -5.128879070281982

Token 1202: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22212977707386017
    2. '<|end|>' → logprob: -2.5971298217773438
    3. '       ' → logprob: -2.9721298217773438
    4. ' ' → logprob: -4.472129821777344
    5. '	       ' → logprob: -4.722129821777344
    6. '<|end|>' → logprob: -4.847129821777344
    7. '            ' → logprob: -5.097129821777344
    8. ' n' → logprob: -5.097129821777344
    9. '        
' → logprob: -5.472129821777344
    10. '            
' → logprob: -5.597129821777344

Token 1203: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' (adapté à ' steps') → logprob: -0.11647527664899826
    2. 'n' → logprob: -2.8664753437042236
    3. ' steps' → logprob: -3.2414753437042236
    4. '           ' → logprob: -4.6164751052856445
    5. ' n' → logprob: -6.1164751052856445
    6. '       ' → logprob: -6.4914751052856445
    7. 'distance' → logprob: -8.491475105285645
    8. '   ' → logprob: -10.241475105285645
    9. 'tokens' → logprob: -10.866475105285645
    10. 'points' → logprob: -11.741475105285645

Token 1204: '.append' (ID: 3709)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.53066086769104
    2. '.append' → logprob: -1.28066086769104
    3. '=' → logprob: -2.90566086769104
    4. '           ' → logprob: -3.40566086769104
    5. '_tokens' → logprob: -3.53066086769104
    6. ',' → logprob: -6.030660629272461
    7. '<|end|>' → logprob: -6.280660629272461
    8. '=int' → logprob: -6.280660629272461
    9. '       ' → logprob: -6.655660629272461
    10. 'tokens' → logprob: -6.655660629272461

Token 1205: '(P' (ID: 8952)
  Prédit: 'Pat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pat' → logprob: -0.00019293125660624355
    2. ' Patrol' → logprob: -8.875192642211914
    3. ' Pat' → logprob: -10.000192642211914
    4. '   ' → logprob: -12.375192642211914
    5. '(P' → logprob: -13.500192642211914
    6. '           ' → logprob: -13.750192642211914
    7. '       ' → logprob: -15.250192642211914
    8. '               ' → logprob: -15.500192642211914
    9. ' ' → logprob: -15.875192642211914
    10. '_P' → logprob: -16.125192642211914

Token 1206: 'atrol' (ID: 184413)
  Prédit: 'atrol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atrol' → logprob: -0.001625429606065154
    2. 'at' → logprob: -6.5016255378723145
    3. 'Pat' → logprob: -9.126625061035156
    4. 'atro' → logprob: -11.376625061035156
    5. ' Patrol' → logprob: -13.876625061035156
    6. 'atr' → logprob: -14.501625061035156
    7. '[' → logprob: -14.876625061035156
    8. 'ar' → logprob: -15.876625061035156
    9. 'At' → logprob: -16.001625061035156
    10. '<' → logprob: -16.376625061035156

Token 1207: 'Step' (ID: 10643)
  Prédit: 'Step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Step' → logprob: -1.9361264946837764e-07
    2. 'step' → logprob: -16.5
    3. '[' → logprob: -18.125
    4. 'Steps' → logprob: -18.125
    5. '   ' → logprob: -18.5
    6. '_step' → logprob: -18.625
    7. ' Step' → logprob: -19.0
    8. '       ' → logprob: -19.625
    9. 'Stop' → logprob: -19.75
    10. 'Ste' → logprob: -20.0

Token 1208: '(direction' (ID: 97422)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.3870033323764801
    2. '(direction' → logprob: -1.1370033025741577
    3. ' direction' → logprob: -9.137002944946289
    4. '(' → logprob: -11.387002944946289
    5. '   ' → logprob: -12.262002944946289
    6. '
' → logprob: -12.887002944946289
    7. '[' → logprob: -13.262002944946289
    8. '(
' → logprob: -14.012002944946289
    9. 'n' → logprob: -14.512002944946289
    10. ')' → logprob: -14.637002944946289

Token 1209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023456385359168053
    2. ',int' → logprob: -3.773456335067749
    3. ' ,' → logprob: -9.023456573486328
    4. ',n' → logprob: -10.148456573486328
    5. 'int' → logprob: -10.523456573486328
    6. '(int' → logprob: -11.023456573486328
    7. '[int' → logprob: -12.648456573486328
    8. '=int' → logprob: -13.273456573486328
    9. ',float' → logprob: -13.773456573486328
    10. '),' → logprob: -15.023456573486328

Token 1210: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0004336493439041078
    2. ' int' → logprob: -7.750433444976807
    3. 'n' → logprob: -12.750433921813965
    4. '
' → logprob: -17.00043296813965
    5. '[int' → logprob: -17.62543296813965
    6. '(int' → logprob: -17.75043296813965
    7. ' n' → logprob: -18.75043296813965
    8. '1' → logprob: -19.12543296813965
    9. '=int' → logprob: -19.50043296813965
    10. ' 
' → logprob: -20.12543296813965

Token 1211: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0004900033236481249
    2. 'n' → logprob: -7.625490188598633
    3. ')n' → logprob: -13.625490188598633
    4. '(' → logprob: -14.875490188598633
    5. ')' → logprob: -16.000490188598633
    6. '(
' → logprob: -16.125490188598633
    7. '	n' → logprob: -16.625490188598633
    8. '[n' → logprob: -16.875490188598633
    9. ' n' → logprob: -17.125490188598633
    10. '
' → logprob: -17.750490188598633

Token 1212: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07889870554208755
    2. ')))' → logprob: -2.5788986682891846
    3. ')' → logprob: -12.328898429870605
    4. '))
' → logprob: -12.578898429870605
    5. ')))
' → logprob: -15.078898429870605
    6. '))))' → logprob: -15.703898429870605
    7. '}))' → logprob: -16.078899383544922
    8. '   ' → logprob: -16.328899383544922
    9. ' ))' → logprob: -16.578899383544922
    10. '       ' → logprob: -16.703899383544922

Token 1213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023286080977413803
    2. '<|end|>' → logprob: -9.500232696533203
    3. '```' → logprob: -9.875232696533203
    4. '
' → logprob: -10.750232696533203
    5. '        
' → logprob: -10.750232696533203
    6. 'return' → logprob: -10.875232696533203
    7. '           ' → logprob: -11.625232696533203
    8. 'Next' → logprob: -11.750232696533203
    9. 'class' → logprob: -12.750232696533203
    10. '<|end|>' → logprob: -12.875232696533203

Token 1214: ' P' (ID: 398)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10588978230953217
    2. 'start' → logprob: -2.7308897972106934
    3. 'return' → logprob: -3.8558897972106934
    4. 'pos' → logprob: -5.355889797210693
    5. 'agent' → logprob: -5.855889797210693
    6. 'p' → logprob: -6.105889797210693
    7. 'pot' → logprob: -6.980889797210693
    8. '#' → logprob: -7.605889797210693
    9. ' start' → logprob: -7.730889797210693
    10. '```' → logprob: -7.730889797210693

Token 1215: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05721788853406906
    2. '=' → logprob: -2.932217836380005
    3. '_line' → logprob: -6.807218074798584
    4. '   ' → logprob: -7.182218074798584
    5. '_lines' → logprob: -8.057217597961426
    6. ' ' → logprob: -9.682217597961426
    7. '    ' → logprob: -11.182217597961426
    8. '  ' → logprob: -11.182217597961426
    9. ',' → logprob: -11.432217597961426
    10. '=line' → logprob: -12.057217597961426

Token 1216: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023249322548508644
    2. ' int' → logprob: -3.773249387741089
    3. 'next' → logprob: -12.648249626159668
    4. '[int' → logprob: -15.148249626159668
    5. ' next' → logprob: -16.02324867248535
    6. '(int' → logprob: -16.02324867248535
    7. '0' → logprob: -16.27324867248535
    8. '=int' → logprob: -16.89824867248535
    9. '<int' → logprob: -17.89824867248535
    10. '
' → logprob: -18.77324867248535

Token 1217: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.005260083824396133
    2. 'next' → logprob: -5.255259990692139
    3. '[next' → logprob: -10.755260467529297
    4. ' next' → logprob: -12.505260467529297
    5. '(input' → logprob: -13.880260467529297
    6. '.next' → logprob: -15.380260467529297
    7. '	next' → logprob: -16.755260467529297
    8. ',next' → logprob: -17.755260467529297
    9. '_next' → logprob: -18.005260467529297
    10. 'input' → logprob: -18.380260467529297

Token 1218: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0006429764907807112
    2. 'input' → logprob: -7.375642776489258
    3. '[input' → logprob: -11.125642776489258
    4. '=input' → logprob: -14.125642776489258
    5. ' input' → logprob: -14.750642776489258
    6. ',input' → logprob: -15.500642776489258
    7. '<input' → logprob: -15.875642776489258
    8. '(' → logprob: -16.500642776489258
    9. '```' → logprob: -16.875642776489258
    10. '	input' → logprob: -16.875642776489258

Token 1219: '_lines' (ID: 42980)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1606694608926773
    2. '_lines' → logprob: -1.9106694459915161
    3. 'input' → logprob: -7.910669326782227
    4. 'lines' → logprob: -10.285669326782227
    5. '[input' → logprob: -10.910669326782227
    6. '(lines' → logprob: -12.035669326782227
    7. 'Lines' → logprob: -12.035669326782227
    8. '=input' → logprob: -12.535669326782227
    9. ',input' → logprob: -12.660669326782227
    10. '<input' → logprob: -13.160669326782227

Token 1220: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.14706933498382568
    2. ')' → logprob: -2.0220694541931152
    3. '())
' → logprob: -5.522069454193115
    4. '()' → logprob: -8.772068977355957
    5. '())' → logprob: -9.022068977355957
    6. '()
' → logprob: -9.772068977355957
    7. ')
' → logprob: -10.522068977355957
    8. '       ' → logprob: -11.522068977355957
    9. '   ' → logprob: -11.647068977355957
    10. ')`
' → logprob: -12.897068977355957

Token 1221: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09434669464826584
    2. 'pot' → logprob: -2.719346761703491
    3. 'p' → logprob: -3.844346761703491
    4. ' pot' → logprob: -7.094346523284912
    5. '<|end|>' → logprob: -7.219346523284912
    6. 'lines' → logprob: -8.59434700012207
    7. '	p' → logprob: -8.84434700012207
    8. '```' → logprob: -9.09434700012207
    9. '_p' → logprob: -9.21934700012207
    10. 'pots' → logprob: -9.59434700012207

Token 1222: ' pot' (ID: 3208)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6951774954795837
    2. 'pot' (adapté à ' pot') → logprob: -0.6951774954795837
    3. 'p' → logprob: -6.3201775550842285
    4. 'pots' → logprob: -8.69517707824707
    5. ' pot' → logprob: -10.32017707824707
    6. '   ' → logprob: -11.32017707824707
    7. '```' → logprob: -12.69517707824707
    8. 'self' → logprob: -12.82017707824707
    9. 'Pot' → logprob: -13.44517707824707
    10. 'pok' → logprob: -13.82017707824707

Token 1223: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -5.512236498361744e-07
    2. 'IONS' → logprob: -14.875000953674316
    3. 'ion' → logprob: -16.5
    4. '   ' → logprob: -17.375
    5. '
' → logprob: -18.0
    6. 's' → logprob: -18.5
    7. '```' → logprob: -19.0
    8. '       ' → logprob: -19.125
    9. '_' → logprob: -20.5
    10. '`' → logprob: -21.0

Token 1224: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47411471605300903
    2. '=' → logprob: -0.974114716053009
    3. '=[]' → logprob: -10.599114418029785
    4. '=[]
' → logprob: -11.974114418029785
    5. '   ' → logprob: -12.474114418029785
    6. '_p' → logprob: -14.724114418029785
    7. '       ' → logprob: -14.974114418029785
    8. '    ' → logprob: -15.099114418029785
    9. '_line' → logprob: -15.474114418029785
    10. '=[]
' → logprob: -15.849114418029785

Token 1225: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.015006786212325096
    2. '[]' → logprob: -4.515007019042969
    3. '[' → logprob: -5.765007019042969
    4. '[p' → logprob: -7.765007019042969
    5. ' []
' → logprob: -8.015007019042969
    6. ' [' → logprob: -10.765007019042969
    7. '[P' → logprob: -11.265007019042969
    8. ' []' → logprob: -11.515007019042969
    9. '[
' → logprob: -12.265007019042969
    10. '[int' → logprob: -12.390007019042969

Token 1226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001104852301068604
    2. ' for' → logprob: -7.876104831695557
    3. '<|end|>' → logprob: -8.001105308532715
    4. 'for' → logprob: -8.376105308532715
    5. '	' → logprob: -10.126105308532715
    6. '	for' → logprob: -10.376105308532715
    7. '        
' → logprob: -10.626105308532715
    8. '<|end|>' → logprob: -11.501105308532715
    9. '```' → logprob: -12.001105308532715
    10. '	       ' → logprob: -12.251105308532715

Token 1227: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.029757659882307053
    2. '       ' → logprob: -3.5297577381134033
    3. ' for' → logprob: -11.904757499694824
    4. '	for' → logprob: -15.154757499694824
    5. '   ' → logprob: -16.02975845336914
    6. '           ' → logprob: -17.52975845336914
    7. '	' → logprob: -18.77975845336914
    8. '```' → logprob: -18.90475845336914
    9. 'For' → logprob: -19.90475845336914
    10. '
' → logprob: -19.90475845336914

Token 1228: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.896309739408025e-07
    2. ' in' → logprob: -15.000000953674316
    3. ' _' → logprob: -15.375000953674316
    4. '_
' → logprob: -15.500000953674316
    5. '_

' → logprob: -17.75
    6. '_
' → logprob: -18.25
    7. '_p' → logprob: -18.75
    8. '
' → logprob: -19.875
    9. '_i' → logprob: -20.0
    10. '_range' → logprob: -20.0

Token 1229: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2852404713630676
    2. ' in' → logprob: -1.4102404117584229
    3. '_' → logprob: -6.160240650177002
    4. 'range' → logprob: -6.285240650177002
    5. 'i' → logprob: -9.785240173339844
    6. 'p' → logprob: -10.910240173339844
    7. ' range' → logprob: -11.160240173339844
    8. 'n' → logprob: -12.910240173339844
    9. 's' → logprob: -13.035240173339844
    10. ' ' → logprob: -13.285240173339844

Token 1230: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7729658540920354e-05
    2. ' range' → logprob: -10.500027656555176
    3. '_' → logprob: -17.125028610229492
    4. '_range' → logprob: -17.250028610229492
    5. 'P' → logprob: -18.750028610229492
    6. '
' → logprob: -18.875028610229492
    7. '(range' → logprob: -19.125028610229492
    8. '	range' → logprob: -20.250028610229492
    9. 'next' → logprob: -21.000028610229492
    10. 'in' → logprob: -21.125028610229492

Token 1231: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.5761178135871887
    2. 'P' → logprob: -0.8261178135871887
    3. 'range' → logprob: -8.826117515563965
    4. ' P' → logprob: -10.701117515563965
    5. '(' → logprob: -12.201117515563965
    6. ' range' → logprob: -13.701117515563965
    7. '(int' → logprob: -14.201117515563965
    8. 'int' → logprob: -14.451117515563965
    9. '   ' → logprob: -15.076117515563965
    10. ' (' → logprob: -15.201117515563965

Token 1232: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7586097121238708
    2. ':' → logprob: -1.3836097717285156
    3. ':
' → logprob: -1.7586097717285156
    4. '       ' → logprob: -3.3836097717285156
    5. '():
' → logprob: -3.8836097717285156
    6. '):' → logprob: -4.258609771728516
    7. ',' → logprob: -4.633609771728516
    8. '           ' → logprob: -5.008609771728516
    9. '(p' → logprob: -5.133609771728516
    10. '(next' → logprob: -5.258609771728516

Token 1233: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0033254071604460478
    2. '
' → logprob: -7.253325462341309
    3. ' line' → logprob: -7.628325462341309
    4. '   ' → logprob: -7.878325462341309
    5. '       ' → logprob: -8.128325462341309
    6. 'line' → logprob: -8.378325462341309
    7. '            
' → logprob: -8.628325462341309
    8. 'pot' → logprob: -8.753325462341309
    9. '```' → logprob: -8.878325462341309
    10. '	       ' → logprob: -9.128325462341309

Token 1234: ' p' (ID: 275)
  Prédit: 'heal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heal' → logprob: -0.12117651849985123
    2. 'pot' → logprob: -2.4961764812469482
    3. 'amount' → logprob: -3.8711764812469482
    4. 'he' → logprob: -5.621176719665527
    5. 'p' (adapté à ' p') → logprob: -5.871176719665527
    6. 'hp' → logprob: -6.121176719665527
    7. 'amt' → logprob: -6.871176719665527
    8. '           ' → logprob: -7.246176719665527
    9. 'line' → logprob: -9.621176719665527
    10. 'pots' → logprob: -9.746176719665527

Token 1235: 'val' (ID: 1105)
  Prédit: '_amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_amount' → logprob: -0.7911906242370605
    2. 'ot' → logprob: -2.1661906242370605
    3. 'amount' → logprob: -2.4161906242370605
    4. '_he' → logprob: -2.5411906242370605
    5. 'pot' → logprob: -2.7911906242370605
    6. '_p' → logprob: -3.0411906242370605
    7. 'p' → logprob: -4.1661906242370605
    8. '_line' → logprob: -4.1661906242370605
    9. 'otion' → logprob: -4.1661906242370605
    10. 'otions' → logprob: -4.2911906242370605

Token 1236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3087334632873535
    2. '_line' → logprob: -1.5587334632873535
    3. '_amount' → logprob: -3.5587334632873535
    4. '=' → logprob: -4.5587334632873535
    5. 'ine' → logprob: -4.5587334632873535
    6. '=int' → logprob: -6.5587334632873535
    7. '_amt' → logprob: -6.8087334632873535
    8. 'line' → logprob: -7.0587334632873535
    9. 'amount' → logprob: -7.5587334632873535
    10. '_' → logprob: -7.8087334632873535

Token 1237: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.165027217415627e-05
    2. ' int' → logprob: -10.750021934509277
    3. '(int' → logprob: -16.25002098083496
    4. '[int' → logprob: -17.12502098083496
    5. '           ' → logprob: -17.50002098083496
    6. '
' → logprob: -18.75002098083496
    7. '=int' → logprob: -18.75002098083496
    8. '<int' → logprob: -18.87502098083496
    9. 'next' → logprob: -19.37502098083496
    10. '   ' → logprob: -20.00002098083496

Token 1238: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.014169503934681416
    2. 'next' → logprob: -4.264169692993164
    3. '(input' → logprob: -12.639169692993164
    4. 'input' → logprob: -14.264169692993164
    5. '[next' → logprob: -14.264169692993164
    6. ' next' → logprob: -14.264169692993164
    7. '(' → logprob: -15.139169692993164
    8. '
' → logprob: -15.514169692993164
    9. '	next' → logprob: -16.139169692993164
    10. '(
' → logprob: -16.389169692993164

Token 1239: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.020622001960873604
    2. 'input' → logprob: -3.8956220149993896
    3. '[input' → logprob: -9.895622253417969
    4. '=input' → logprob: -11.145622253417969
    5. ' input' → logprob: -11.895622253417969
    6. '<input' → logprob: -12.270622253417969
    7. ',input' → logprob: -13.145622253417969
    8. '	input' → logprob: -13.770622253417969
    9. '_input' → logprob: -15.270622253417969
    10. '/input' → logprob: -16.27062225341797

Token 1240: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.00022570860164705664
    2. 'lines' → logprob: -8.500226020812988
    3. '())' → logprob: -12.250226020812988
    4. 'Lines' → logprob: -12.625226020812988
    5. '```' → logprob: -12.875226020812988
    6. '().' → logprob: -13.250226020812988
    7. '_LINES' → logprob: -13.375226020812988
    8. '(lines' → logprob: -13.375226020812988
    9. 'input' → logprob: -13.625226020812988
    10. '()' → logprob: -13.875226020812988

Token 1241: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1411178559064865
    2. ').' → logprob: -2.516117811203003
    3. '))
' → logprob: -3.641117811203003
    4. ')' → logprob: -4.016118049621582
    5. '()))' → logprob: -5.641118049621582
    6. '()))
' → logprob: -6.391118049621582
    7. '().' → logprob: -7.016118049621582
    8. '())' → logprob: -8.391118049621582
    9. '()' → logprob: -9.516118049621582
    10. '()).' → logprob: -9.641118049621582

Token 1242: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004948906716890633
    2. '       ' → logprob: -7.750494956970215
    3. '<|end|>' → logprob: -10.750494956970215
    4. '               ' → logprob: -11.375494956970215
    5. '          ' → logprob: -11.750494956970215
    6. '   ' → logprob: -12.250494956970215
    7. ' pot' → logprob: -12.625494956970215
    8. 'pot' → logprob: -13.000494956970215
    9. '```' → logprob: -13.000494956970215
    10. '         ' → logprob: -13.250494956970215

Token 1243: ' pot' (ID: 3208)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pot' (adapté à ' pot') → logprob: -0.022226408123970032
    2. '           ' → logprob: -4.022226333618164
    3. ' pot' → logprob: -5.522226333618164
    4. 'p' → logprob: -9.647226333618164
    5. '       ' → logprob: -12.647226333618164
    6. '```' → logprob: -13.522226333618164
    7. 'pots' → logprob: -13.897226333618164
    8. '
' → logprob: -14.772226333618164
    9. '               ' → logprob: -15.522226333618164
    10. 'pom' → logprob: -16.147226333618164

Token 1244: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -1.9361264946837764e-07
    2. 'ion' → logprob: -15.625
    3. 'IONS' → logprob: -18.0
    4. 'ons' → logprob: -19.0
    5. 'iones' → logprob: -20.5
    6. '
' → logprob: -21.875
    7. '```' → logprob: -21.875
    8. '   ' → logprob: -22.125
    9. 'otions' → logprob: -22.5
    10. 'ios' → logprob: -22.5

Token 1245: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0010448360117152333
    2. '.' → logprob: -6.876044750213623
    3. '.p' → logprob: -12.501045227050781
    4. '.app' → logprob: -12.626045227050781
    5. 'append' → logprob: -13.126045227050781
    6. ' .' → logprob: -13.251045227050781
    7. '.
' → logprob: -14.876045227050781
    8. '.ap' → logprob: -15.501045227050781
    9. '.extend' → logprob: -16.00104522705078
    10. '.push' → logprob: -16.12604522705078

Token 1246: '(P' (ID: 8952)
  Prédit: 'Potion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Potion' → logprob: -0.0007055217283777893
    2. ' Potion' → logprob: -7.500705718994141
    3. '(P' → logprob: -8.87570571899414
    4. 'Pot' → logprob: -11.62570571899414
    5. '           ' → logprob: -13.62570571899414
    6. 'P' → logprob: -14.25070571899414
    7. '   ' → logprob: -14.37570571899414
    8. '	P' → logprob: -14.37570571899414
    9. 'Puzzle' → logprob: -15.37570571899414
    10. '               ' → logprob: -15.75070571899414

Token 1247: 'otion' (ID: 7469)
  Prédit: 'Potion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Potion' → logprob: -0.0017232499085366726
    2. 'otion' → logprob: -6.376723289489746
    3. ' Potion' → logprob: -11.001723289489746
    4. 'P' → logprob: -12.626723289489746
    5. '(P' → logprob: -14.501723289489746
    6. '#' → logprob: -16.25172233581543
    7. 'Pot' → logprob: -16.37672233581543
    8. '_P' → logprob: -16.37672233581543
    9. 'p' → logprob: -16.50172233581543
    10. ' potion' → logprob: -16.87672233581543

Token 1248: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00033903829171322286
    2. 'p' → logprob: -8.00033950805664
    3. '(' → logprob: -12.87533950805664
    4. ')' → logprob: -14.50033950805664
    5. '(
' → logprob: -15.62533950805664
    6. ' (' → logprob: -16.00033950805664
    7. ' p' → logprob: -16.12533950805664
    8. ')(' → logprob: -16.75033950805664
    9. ')p' → logprob: -16.87533950805664
    10. '
' → logprob: -18.00033950805664

Token 1249: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -7.159660890465602e-05
    2. '_val' → logprob: -9.62507152557373
    3. 'p' → logprob: -13.25007152557373
    4. 'aval' → logprob: -14.25007152557373
    5. '	val' → logprob: -15.37507152557373
    6. '```' → logprob: -15.37507152557373
    7. '.val' → logprob: -15.50007152557373
    8. '_' → logprob: -15.62507152557373
    9. 'amount' → logprob: -15.62507152557373
    10. '   ' → logprob: -15.75007152557373

Token 1250: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.001206423039548099
    2. ')' → logprob: -6.751206398010254
    3. '))
' → logprob: -10.251206398010254
    4. ')))' → logprob: -15.251206398010254
    5. '       ' → logprob: -15.376206398010254
    6. '));' → logprob: -15.751206398010254
    7. ' ))' → logprob: -16.12620735168457
    8. '           ' → logprob: -16.75120735168457
    9. '))

' → logprob: -17.37620735168457
    10. ')
' → logprob: -17.37620735168457

Token 1251: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003045331686735153
    2. '
' → logprob: -5.878045558929443
    3. '<|end|>' → logprob: -9.503045082092285
    4. 'class' → logprob: -9.753045082092285
    5. '        
' → logprob: -10.503045082092285
    6. '```' → logprob: -10.878045082092285
    7. '   ' → logprob: -10.878045082092285
    8. '           ' → logprob: -11.878045082092285
    9. 'return' → logprob: -12.128045082092285
    10. ' class' → logprob: -12.253045082092285

Token 1252: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014844478107988834
    2. 'start' → logprob: -4.5148444175720215
    3. ' start' → logprob: -6.7648444175720215
    4. 'return' (adapté à ' return') → logprob: -6.8898444175720215
    5. 'pos' → logprob: -7.0148444175720215
    6. 'agent' → logprob: -8.38984489440918
    7. 'position' → logprob: -9.63984489440918
    8. '#' → logprob: -9.76484489440918
    9. 'self' → logprob: -10.01484489440918
    10. ' return' → logprob: -10.26484489440918

Token 1253: ' hp' (ID: 37774)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.06122690811753273
    2. 'hp' → logprob: -3.3112268447875977
    3. '{
' → logprob: -4.436226844787598
    4. '(R' → logprob: -5.811226844787598
    5. '(C' → logprob: -6.686226844787598
    6. '(
' → logprob: -6.811226844787598
    7. 'C' → logprob: -6.936226844787598
    8. '(D' → logprob: -7.186226844787598
    9. '(self' → logprob: -7.311226844787598
    10. '(' → logprob: -7.436226844787598

Token 1254: '_init' (ID: 13909)
  Prédit: '_init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_init' → logprob: -0.010112665593624115
    2. 'init' → logprob: -4.635112762451172
    3. ',' → logprob: -8.010112762451172
    4. '_max' → logprob: -12.260112762451172
    5. 'max' → logprob: -12.510112762451172
    6. '(init' → logprob: -12.885112762451172
    7. '```' → logprob: -13.135112762451172
    8. 'def' → logprob: -13.385112762451172
    9. 'hp' → logprob: -13.635112762451172
    10. '#' → logprob: -14.010112762451172

Token 1255: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003834398463368416
    2. '<|end|>' → logprob: -5.628834247589111
    3. '<|end|>' → logprob: -8.75383472442627
    4. ' ,' → logprob: -10.12883472442627
    5. ',h' → logprob: -11.25383472442627
    6. '_,' → logprob: -12.62883472442627
    7. '   ' → logprob: -12.75383472442627
    8. ',p' → logprob: -12.87883472442627
    9. ' ' → logprob: -13.25383472442627
    10. ',max' → logprob: -13.50383472442627

Token 1256: ' hp' (ID: 37774)
  Prédit: 'hp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hp' → logprob: -0.0007101670489646494
    2. ' hp' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.750709533691406
    4. '       ' → logprob: -17.125709533691406
    5. '_hp' → logprob: -18.375709533691406
    6. 'hc' → logprob: -18.625709533691406
    7. '           ' → logprob: -19.000709533691406
    8. '.hp' → logprob: -19.125709533691406
    9. 'HP' → logprob: -19.250709533691406
    10. 'hpp' → logprob: -19.250709533691406

Token 1257: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0020312999840825796
    2. 'max' → logprob: -6.252031326293945
    3. ',' → logprob: -9.252031326293945
    4. ',max' → logprob: -12.627031326293945
    5. '_init' → logprob: -13.627031326293945
    6. 'Max' → logprob: -14.002031326293945
    7. 'P' → logprob: -15.252031326293945
    8. '_MAX' → logprob: -15.502031326293945
    9. ',_' → logprob: -16.002031326293945
    10. '\' → logprob: -16.127031326293945

Token 1258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007058793562464416
    2. ' ,' → logprob: -7.875705718994141
    3. '<|end|>' → logprob: -8.50070571899414
    4. '       ' → logprob: -9.62570571899414
    5. ',pos' → logprob: -10.75070571899414
    6. ',row' → logprob: -11.25070571899414
    7. ',
' → logprob: -11.75070571899414
    8. ',p' → logprob: -13.12570571899414
    9. 'Position' → logprob: -13.25070571899414
    10. '_,' → logprob: -13.62570571899414

Token 1259: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -4.227250610711053e-05
    2. ' R' → logprob: -10.125041961669922
    3. 'rows' → logprob: -13.625041961669922
    4. '       ' → logprob: -14.750041961669922
    5. '<|end|>' → logprob: -15.875041961669922
    6. '   ' → logprob: -16.250041961669922
    7. '           ' → logprob: -16.750041961669922
    8. 'C' → logprob: -17.125041961669922
    9. 'layout' → logprob: -17.625041961669922
    10. '    ' → logprob: -17.750041961669922

Token 1260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.504040356958285e-05
    2. ' ,' → logprob: -9.875064849853516
    3. ',C' → logprob: -12.375064849853516
    4. '       ' → logprob: -12.375064849853516
    5. ',
' → logprob: -13.250064849853516
    6. '   ' → logprob: -13.875064849853516
    7. '<|end|>' → logprob: -14.125064849853516
    8. ',c' → logprob: -15.125064849853516
    9. ',\
' → logprob: -15.250064849853516
    10. ',P' → logprob: -15.500064849853516

Token 1261: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.08894655108451843
    2. ' C' → logprob: -2.463946580886841
    3. '<|end|>' → logprob: -12.088946342468262
    4. ' ' → logprob: -14.588946342468262
    5. '       ' → logprob: -14.963946342468262
    6. '   ' → logprob: -16.088947296142578
    7. '```' → logprob: -16.088947296142578
    8. '           ' → logprob: -16.088947296142578
    9. '        ' → logprob: -16.588947296142578
    10. ',' → logprob: -16.838947296142578

Token 1262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05200671777129173
    2. 'layout' → logprob: -3.427006721496582
    3. '       ' → logprob: -4.552006721496582
    4. ' layout' → logprob: -5.052006721496582
    5. ',p' → logprob: -7.052006721496582
    6. ' ,' → logprob: -8.677006721496582
    7. '(layout' → logprob: -9.802006721496582
    8. '	layout' → logprob: -10.427006721496582
    9. '```' → logprob: -10.802006721496582
    10. ',line' → logprob: -10.927006721496582

Token 1263: ' layout' (ID: 10557)
  Prédit: 'layout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'layout' → logprob: -0.023249205201864243
    2. ' layout' → logprob: -3.7732491493225098
    3. '       ' → logprob: -13.148249626159668
    4. '	layout' → logprob: -15.023249626159668
    5. '```' → logprob: -15.398249626159668
    6. '   ' → logprob: -15.523249626159668
    7. 'list' → logprob: -15.648249626159668
    8. '(layout' → logprob: -15.648249626159668
    9. '[' → logprob: -16.02324867248535
    10. '_layout' → logprob: -16.14824867248535

Token 1264: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006558468448929489
    2. '       ' → logprob: -7.625655651092529
    3. ',p' → logprob: -9.500656127929688
    4. ',tr' → logprob: -10.250656127929688
    5. ' ,' → logprob: -10.500656127929688
    6. ',P' → logprob: -11.500656127929688
    7. '<|end|>' → logprob: -11.750656127929688
    8. ',
' → logprob: -12.500656127929688
    9. '   ' → logprob: -13.000656127929688
    10. '[],' → logprob: -13.500656127929688

Token 1265: ' trap' (ID: 34270)
  Prédit: 'trap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trap' → logprob: -0.0006403613369911909
    2. ' trap' → logprob: -7.375640392303467
    3. 'tr' → logprob: -12.125639915466309
    4. '
' → logprob: -13.125639915466309
    5. 'Trap' → logprob: -13.125639915466309
    6. '       ' → logprob: -13.625639915466309
    7. '   ' → logprob: -13.750639915466309
    8. 'trip' → logprob: -14.750639915466309
    9. '    ' → logprob: -15.250639915466309
    10. '           ' → logprob: -15.250639915466309

Token 1266: '_types' (ID: 21515)
  Prédit: '_types'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_types' → logprob: 0.0
    2. '_symbols' → logprob: -17.375
    3. 'types' → logprob: -17.5
    4. '_type' → logprob: -17.75
    5. '_TYPES' → logprob: -17.875
    6. '
' → logprob: -19.25
    7. '_symbol' → logprob: -19.875
    8. 'symbol' → logprob: -20.25
    9. '_' → logprob: -20.25
    10. 'ypes' → logprob: -20.375

Token 1267: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1268: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.026372993364930153
    2. 'S' → logprob: -3.6513729095458984
    3. ' steps' → logprob: -9.776372909545898
    4. 'Steps' → logprob: -11.651372909545898
    5. '       ' → logprob: -12.651372909545898
    6. '   ' → logprob: -13.401372909545898
    7. ' S' → logprob: -13.526372909545898
    8. '           ' → logprob: -15.151372909545898
    9. 'step' → logprob: -15.651372909545898
    10. 's' → logprob: -16.2763729095459

Token 1269: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1270: ' pot' (ID: 3208)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.10031428933143616
    2. 'P' → logprob: -2.3503143787384033
    3. ' pot' → logprob: -9.600314140319824
    4. 'Pot' → logprob: -10.975314140319824
    5. 'pat' → logprob: -11.475314140319824
    6. 'pots' → logprob: -11.725314140319824
    7. ' P' → logprob: -12.975314140319824
    8. 'p' → logprob: -14.100314140319824
    9. '   ' → logprob: -15.100314140319824
    10. '```' → logprob: -15.850314140319824

Token 1271: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -1.0280383548888494e-06
    2. 'IONS' → logprob: -14.250000953674316
    3. 'ons' → logprob: -15.625000953674316
    4. 'ion' → logprob: -18.750001907348633
    5. '```' → logprob: -18.875001907348633
    6. 'otions' → logprob: -19.750001907348633
    7. '[' → logprob: -20.000001907348633
    8. 't' → logprob: -20.125001907348633
    9. '``' → logprob: -20.375001907348633
    10. 'ioned' → logprob: -20.625001907348633

Token 1272: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5603861808776855
    2. '
' → logprob: -0.9353861808776855
    3. 'def' → logprob: -4.1853861808776855
    4. '<|end|>' → logprob: -4.6853861808776855
    5. '    
' → logprob: -4.8103861808776855
    6. 'class' → logprob: -6.1853861808776855
    7. ')' → logprob: -7.9353861808776855
    8. '

' → logprob: -8.185386657714844
    9. '<|end|>' → logprob: -8.185386657714844
    10. '```' → logprob: -8.310386657714844

Token 1273: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04919935762882233
    2. '   ' → logprob: -3.049199342727661
    3. ' def' → logprob: -7.79919958114624
    4. '<|end|>' → logprob: -9.549199104309082
    5. '
' → logprob: -10.049199104309082
    6. '    
' → logprob: -10.299199104309082
    7. '<|end|>' → logprob: -11.174199104309082
    8. ')' → logprob: -11.674199104309082
    9. 'class' → logprob: -11.924199104309082
    10. '```' → logprob: -12.174199104309082

Token 1274: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.12758749723434448
    2. '   ' → logprob: -2.1275875568389893
    3. ' def' → logprob: -7.37758731842041
    4. '
' → logprob: -10.75258731842041
    5. '	def' → logprob: -12.25258731842041
    6. 'import' → logprob: -13.12758731842041
    7. '```' → logprob: -13.62758731842041
    8. ' ' → logprob: -13.75258731842041
    9. '<|end|>' → logprob: -14.12758731842041
    10. 'from' → logprob: -14.25258731842041

Token 1275: ' judge' (ID: 23319)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.8527389764785767
    2. 'process' → logprob: -1.1027389764785767
    3. 'solve' → logprob: -1.6027389764785767
    4. 'simulate' → logprob: -3.852738857269287
    5. 'play' → logprob: -3.977738857269287
    6. 'main' → logprob: -8.602739334106445
    7. ' run' → logprob: -9.352739334106445
    8. '_run' → logprob: -10.102739334106445
    9. ' solve' → logprob: -10.227739334106445
    10. 'parse' → logprob: -10.477739334106445

Token 1276: '_pat' (ID: 139092)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0049684434197843075
    2. '(' → logprob: -5.379968643188477
    3. '_' → logprob: -9.879968643188477
    4. '_result' → logprob: -10.004968643188477
    5. 'def' → logprob: -10.254968643188477
    6. '_step' → logprob: -10.379968643188477
    7. 'self' → logprob: -10.504968643188477
    8. '_line' → logprob: -10.629968643188477
    9. '(
' → logprob: -10.754968643188477
    10. '_next' → logprob: -10.879968643188477

Token 1277: 'rol' (ID: 1521)
  Prédit: 'rol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rol' → logprob: -0.0004166105354670435
    2. 'r' → logprob: -9.00041675567627
    3. 'ral' → logprob: -9.00041675567627
    4. 'ro' → logprob: -10.12541675567627
    5. 'role' → logprob: -10.12541675567627
    6. 'h' → logprob: -10.50041675567627
    7. 'al' → logprob: -11.62541675567627
    8. 'ron' → logprob: -11.87541675567627
    9. '
' → logprob: -12.37541675567627
    10. 'roll' → logprob: -12.62541675567627

Token 1278: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.19761548936367035
    2. '_path' → logprob: -1.9476155042648315
    3. '_route' → logprob: -4.072615623474121
    4. '_step' → logprob: -4.197615623474121
    5. '(' → logprob: -5.947615623474121
    6. '_position' → logprob: -7.072615623474121
    7. 'self' → logprob: -8.072615623474121
    8. 'Step' → logprob: -8.322615623474121
    9. '_(' → logprob: -9.322615623474121
    10. 'path' → logprob: -9.697615623474121

Token 1279: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.014546815305948257
    2. '(' → logprob: -4.514546871185303
    3. 'self' → logprob: -6.139546871185303
    4. '_path' → logprob: -8.014546394348145
    5. ')' → logprob: -8.639546394348145
    6. ',' → logprob: -8.764546394348145
    7. '_' → logprob: -9.014546394348145
    8. '(
' → logprob: -9.014546394348145
    9. '   ' → logprob: -10.014546394348145
    10. '_step' → logprob: -10.389546394348145

Token 1280: ' hp' (ID: 37774)
  Prédit: 'hp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hp' → logprob: -0.9222394227981567
    2. 'pat' → logprob: -1.6722394227981567
    3. 'agent' → logprob: -2.172239303588867
    4. 'self' → logprob: -2.172239303588867
    5. 'start' → logprob: -2.922239303588867
    6. 'pos' → logprob: -3.172239303588867
    7. 'path' → logprob: -3.297239303588867
    8. 'route' → logprob: -4.047239303588867
    9. ' hp' → logprob: -4.172239303588867
    10. ' agent' → logprob: -5.172239303588867

Token 1281: '_init' (ID: 13909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34815168380737305
    2. '_' → logprob: -2.348151683807373
    3. '_init' → logprob: -2.348151683807373
    4. '_,' → logprob: -3.848151683807373
    5. '   ' → logprob: -3.973151683807373
    6. 'self' → logprob: -4.098151683807373
    7. '(self' → logprob: -4.598151683807373
    8. '       ' → logprob: -5.348151683807373
    9. '):' → logprob: -5.473151683807373
    10. ')' → logprob: -5.473151683807373

Token 1282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010075619211420417
    2. ':' → logprob: -8.251008033752441
    3. ' ,' → logprob: -8.626008033752441
    4. '):' → logprob: -9.126008033752441
    5. '   ' → logprob: -9.501008033752441
    6. '       ' → logprob: -9.501008033752441
    7. '=' → logprob: -9.876008033752441
    8. '<|end|>' → logprob: -10.001008033752441
    9. 'self' → logprob: -10.126008033752441
    10. '):
' → logprob: -10.751008033752441

Token 1283: ' hp' (ID: 37774)
  Prédit: 'hp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hp' → logprob: -3.690834273584187e-05
    2. ' hp' → logprob: -10.25003719329834
    3. '
' → logprob: -15.00003719329834
    4. '   ' → logprob: -15.00003719329834
    5. 'pat' → logprob: -15.12503719329834
    6. '
' → logprob: -15.50003719329834
    7. '       ' → logprob: -16.000036239624023
    8. '```' → logprob: -16.750036239624023
    9. '    ' → logprob: -16.875036239624023
    10. 'hc' → logprob: -17.250036239624023

Token 1284: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0008086714660748839
    2. 'max' → logprob: -7.1258087158203125
    3. ',' → logprob: -12.750808715820312
    4. ',max' → logprob: -13.875808715820312
    5. '_,' → logprob: -16.125808715820312
    6. '_init' → logprob: -16.500808715820312
    7. 'Max' → logprob: -16.625808715820312
    8. '   ' → logprob: -16.625808715820312
    9. '_MAX' → logprob: -17.375808715820312
    10. ',_' → logprob: -17.625808715820312

Token 1285: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.1928003813372925e-05
    2. ' ,' → logprob: -10.875051498413086
    3. '<|end|>' → logprob: -11.000051498413086
    4. ',pos' → logprob: -11.500051498413086
    5. ',p' → logprob: -13.250051498413086
    6. ',
' → logprob: -14.125051498413086
    7. '   ' → logprob: -14.125051498413086
    8. ')' → logprob: -14.500051498413086
    9. '<|end|>' → logprob: -15.000051498413086
    10. ':' → logprob: -15.125051498413086

Token 1286: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.02934657223522663
    2. 'steps' → logprob: -4.779346466064453
    3. 'pot' → logprob: -4.779346466064453
    4. 'rows' → logprob: -5.029346466064453
    5. 'P' → logprob: -6.654346466064453
    6. 'start' → logprob: -6.904346466064453
    7. 'layout' → logprob: -7.154346466064453
    8. 'position' → logprob: -7.779346466064453
    9. ' R' → logprob: -7.904346466064453
    10. 'p' → logprob: -7.904346466064453

Token 1287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001549089647596702
    2. ' ,' → logprob: -9.625154495239258
    3. ',C' → logprob: -10.250154495239258
    4. ',
' → logprob: -10.500154495239258
    5. '   ' → logprob: -10.875154495239258
    6. '       ' → logprob: -13.500154495239258
    7. '<|end|>' → logprob: -13.500154495239258
    8. '=' → logprob: -14.375154495239258
    9. ',c' → logprob: -14.500154495239258
    10. '    ' → logprob: -15.000154495239258

Token 1288: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.001963009126484394
    2. ' C' → logprob: -6.251963138580322
    3. '   ' → logprob: -10.501962661743164
    4. '
' → logprob: -13.251962661743164
    5. '       ' → logprob: -13.376962661743164
    6. ' ' → logprob: -14.001962661743164
    7. '    ' → logprob: -14.376962661743164
    8. '  ' → logprob: -14.626962661743164
    9. '           ' → logprob: -14.876962661743164
    10. '     ' → logprob: -15.376962661743164

Token 1289: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.922563963802531e-05
    2. ',pos' → logprob: -10.125079154968262
    3. ' ,' → logprob: -10.375079154968262
    4. '       ' → logprob: -12.125079154968262
    5. ',
' → logprob: -13.750079154968262
    6. '   ' → logprob: -14.500079154968262
    7. '```' → logprob: -15.500079154968262
    8. ',p' → logprob: -16.125080108642578
    9. 'pos' → logprob: -16.625080108642578
    10. '
' → logprob: -16.625080108642578

Token 1290: ' layout' (ID: 10557)
  Prédit: 'layout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'layout' → logprob: -0.0020958955865353346
    2. ' layout' → logprob: -6.502095699310303
    3. 'steps' → logprob: -8.002096176147461
    4. 'pat' → logprob: -9.627096176147461
    5. 'path' → logprob: -9.877096176147461
    6. 'start' → logprob: -10.252096176147461
    7. 'hp' → logprob: -10.752096176147461
    8. '
' → logprob: -10.752096176147461
    9. '       ' → logprob: -11.377096176147461
    10. '   ' → logprob: -11.627096176147461

Token 1291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.388769103679806e-05
    2. ',pos' → logprob: -10.125093460083008
    3. ' ,' → logprob: -10.250093460083008
    4. '       ' → logprob: -11.125093460083008
    5. ',
' → logprob: -13.250093460083008
    6. ',p' → logprob: -13.875093460083008
    7. '   ' → logprob: -15.250093460083008
    8. '           ' → logprob: -15.375093460083008
    9. ',path' → logprob: -17.125093460083008
    10. 'self' → logprob: -17.375093460083008

Token 1292: ' trap' (ID: 34270)
  Prédit: 'trap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trap' → logprob: -0.0006079599261283875
    2. 'steps' → logprob: -7.750607967376709
    3. '   ' → logprob: -9.87560749053955
    4. '
' → logprob: -9.87560749053955
    5. ' trap' → logprob: -10.00060749053955
    6. '       ' → logprob: -11.75060749053955
    7. 'pat' → logprob: -12.12560749053955
    8. 'trip' → logprob: -13.25060749053955
    9. 'layout' → logprob: -13.62560749053955
    10. 'Trap' → logprob: -13.75060749053955

Token 1293: '_types' (ID: 21515)
  Prédit: '_types'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_types' → logprob: -6.432518421206623e-05
    2. 'types' → logprob: -10.0000638961792
    3. 'ypes' → logprob: -11.2500638961792
    4. '_' → logprob: -13.2500638961792
    5. '_type' → logprob: -13.3750638961792
    6. '_positions' → logprob: -14.5000638961792
    7. '_steps' → logprob: -14.6250638961792
    8. '_TYPES' → logprob: -15.1250638961792
    9. '_symbols' → logprob: -15.1250638961792
    10. '   ' → logprob: -15.2500638961792

Token 1294: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.523948907968588e-05
    2. ',pos' → logprob: -11.000035285949707
    3. ' ,' → logprob: -11.625035285949707
    4. ',
' → logprob: -12.250035285949707
    5. '       ' → logprob: -12.375035285949707
    6. '   ' → logprob: -16.00003433227539
    7. ')' → logprob: -16.00003433227539
    8. '           ' → logprob: -16.37503433227539
    9. ',p' → logprob: -16.87503433227539
    10. '
' → logprob: -16.87503433227539

Token 1295: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.0005144290626049042
    2. ' steps' → logprob: -8.125514030456543
    3. 'start' → logprob: -9.125514030456543
    4. '       ' → logprob: -10.125514030456543
    5. '   ' → logprob: -10.375514030456543
    6. 'pat' → logprob: -11.625514030456543
    7. '
' → logprob: -12.125514030456543
    8. 'step' → logprob: -12.625514030456543
    9. 'positions' → logprob: -12.625514030456543
    10. 'position' → logprob: -12.875514030456543

Token 1296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011021859245374799
    2. '):
' → logprob: -10.250110626220703
    3. ',
' → logprob: -10.750110626220703
    4. ' ,' → logprob: -10.875110626220703
    5. ',p' → logprob: -11.125110626220703
    6. '   ' → logprob: -11.875110626220703
    7. '):' → logprob: -11.875110626220703
    8. '       ' → logprob: -12.625110626220703
    9. ',pos' → logprob: -13.750110626220703
    10. '<|end|>' → logprob: -15.875110626220703

Token 1297: ' pot' (ID: 3208)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.0016579244984313846
    2. ' pot' → logprob: -6.626657962799072
    3. 'pos' → logprob: -9.126657485961914
    4. 'position' → logprob: -9.876657485961914
    5. 'start' → logprob: -10.001657485961914
    6. '
' → logprob: -10.376657485961914
    7. 'positions' → logprob: -10.376657485961914
    8. '   ' → logprob: -10.876657485961914
    9. 'pat' → logprob: -11.251657485961914
    10. 'pots' → logprob: -11.626657485961914

Token 1298: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -2.2246291337069124e-05
    2. '```' → logprob: -11.875021934509277
    3. 'ion' → logprob: -12.000021934509277
    4. 's' → logprob: -12.375021934509277
    5. '   ' → logprob: -13.625021934509277
    6. 'IONS' → logprob: -13.875021934509277
    7. 'ons' → logprob: -13.875021934509277
    8. 'i' → logprob: -14.250021934509277
    9. 'steps' → logprob: -16.125022888183594
    10. '       ' → logprob: -16.125022888183594

Token 1299: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007505475077778101
    2. '       ' → logprob: -5.507505416870117
    3. '):
' → logprob: -6.382505416870117
    4. '):' → logprob: -6.507505416870117
    5. '   ' → logprob: -8.757505416870117
    6. ')' → logprob: -10.507505416870117
    7. 'self' → logprob: -10.882505416870117
    8. ',pos' → logprob: -11.382505416870117
    9. ':' → logprob: -12.257505416870117
    10. ',self' → logprob: -12.632505416870117

Token 1300: ' ->' (ID: 2747)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7632696032524109
    2. ':' → logprob: -1.2632696628570557
    3. ':
' → logprob: -1.5132696628570557
    4. ',' → logprob: -3.7632696628570557
    5. '):
' → logprob: -5.263269424438477
    6. '   ' → logprob: -7.013269424438477
    7. '```' → logprob: -7.888269424438477
    8. '():
' → logprob: -8.388269424438477
    9. '        
' → logprob: -8.388269424438477
    10. ')' → logprob: -8.513269424438477

Token 1301: ' str' (ID: 989)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.20525729656219482
    2. 'str' → logprob: -1.8302572965621948
    3. 'int' → logprob: -3.8302574157714844
    4. ' bool' → logprob: -6.580257415771484
    5. ' str' → logprob: -7.080257415771484
    6. 'list' → logprob: -7.705257415771484
    7. '"' → logprob: -8.080257415771484
    8. 'tuple' → logprob: -9.080257415771484
    9. '(str' → logprob: -9.830257415771484
    10. ' int' → logprob: -9.830257415771484

Token 1302: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14196336269378662
    2. '       ' → logprob: -2.391963481903076
    3. ':
' → logprob: -3.266963481903076
    4. '   ' → logprob: -6.766963481903076
    5. '):' → logprob: -7.516963481903076
    6. ',' → logprob: -8.266963005065918
    7. '):
' → logprob: -8.391963005065918
    8. '():' → logprob: -9.016963005065918
    9. '(self' → logprob: -9.516963005065918
    10. ' :' → logprob: -9.641963005065918

Token 1303: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008723941282369196
    2. '```' → logprob: -7.250872611999512
    3. '        
' → logprob: -10.250872611999512
    4. '``' → logprob: -10.500872611999512
    5. '
' → logprob: -10.875872611999512
    6. ',' → logprob: -10.875872611999512
    7. '`' → logprob: -11.250872611999512
    8. '   ' → logprob: -11.375872611999512
    9. 'def' → logprob: -12.000872611999512
    10. 'pos' → logprob: -12.500872611999512

Token 1304: ' cave' (ID: 44365)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.48420852422714233
    2. 'agent' → logprob: -1.609208583831787
    3. '       ' → logprob: -1.859208583831787
    4. 'current' → logprob: -4.359208583831787
    5. 'hp' → logprob: -4.734208583831787
    6. 'result' → logprob: -5.859208583831787
    7. 'position' → logprob: -6.984208583831787
    8. '```' → logprob: -7.234208583831787
    9. 'path' → logprob: -8.234208106994629
    10. '#' → logprob: -8.359208106994629

Token 1305: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004908535163849592
    2. '=' → logprob: -5.379908561706543
    3. '   ' → logprob: -9.129908561706543
    4. '       ' → logprob: -9.254908561706543
    5. ' =
' → logprob: -11.129908561706543
    6. ',' → logprob: -11.254908561706543
    7. '    ' → logprob: -11.879908561706543
    8. '
' → logprob: -11.879908561706543
    9. '=
' → logprob: -12.129908561706543
    10. 'class' → logprob: -12.379908561706543

Token 1306: ' Cave' (ID: 83453)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0003364158037584275
    2. ' Cave' → logprob: -8.000336647033691
    3. '   ' → logprob: -14.625336647033691
    4. '	C' → logprob: -15.500336647033691
    5. ' C' → logprob: -15.750336647033691
    6. '       ' → logprob: -16.250335693359375
    7. '_C' → logprob: -17.625335693359375
    8. 'Dungeon' → logprob: -18.000335693359375
    9. 'Cube' → logprob: -18.250335693359375
    10. '"C' → logprob: -18.750335693359375

Token 1307: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -3.2617008400848135e-05
    2. '(' → logprob: -10.875032424926758
    3. '(C' → logprob: -11.750032424926758
    4. 'R' → logprob: -12.375032424926758
    5. '(
' → logprob: -14.125032424926758
    6. '(self' → logprob: -15.000032424926758
    7. '       ' → logprob: -15.375032424926758
    8. '(rows' → logprob: -16.500032424926758
    9. ' (' → logprob: -17.375032424926758
    10. '((' → logprob: -17.500032424926758

Token 1308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012133294949308038
    2. ',C' → logprob: -6.876213550567627
    3. ',c' → logprob: -8.751213073730469
    4. ' ,' → logprob: -11.126213073730469
    5. ',
' → logprob: -12.376213073730469
    6. '       ' → logprob: -13.626213073730469
    7. 'C' → logprob: -14.251213073730469
    8. ',p' → logprob: -15.001213073730469
    9. '   ' → logprob: -15.126213073730469
    10. ',P' → logprob: -15.876213073730469

Token 1309: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.000805341056548059
    2. ' C' → logprob: -7.125805377960205
    3. '   ' → logprob: -14.750804901123047
    4. '
' → logprob: -15.750804901123047
    5. ' ' → logprob: -15.875804901123047
    6. '    ' → logprob: -16.500804901123047
    7. '  ' → logprob: -16.875804901123047
    8. '       ' → logprob: -16.875804901123047
    9. '```' → logprob: -17.250804901123047
    10. '
' → logprob: -17.750804901123047

Token 1310: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.060365608893335e-05
    2. ',
' → logprob: -10.375041007995605
    3. '       ' → logprob: -13.000041007995605
    4. ' ,' → logprob: -13.125041007995605
    5. ',c' → logprob: -13.250041007995605
    6. ')' → logprob: -14.375041007995605
    7. 'layout' → logprob: -14.375041007995605
    8. ',p' → logprob: -14.500041007995605
    9. '   ' → logprob: -14.875041007995605
    10. ',

' → logprob: -15.750041007995605

Token 1311: ' layout' (ID: 10557)
  Prédit: 'layout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'layout' → logprob: -4.842555426876061e-06
    2. ' layout' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.2500057220459
    4. '	layout' → logprob: -19.0000057220459
    5. '       ' → logprob: -19.1250057220459
    6. 'lay' → logprob: -19.3750057220459
    7. '
' → logprob: -19.6250057220459
    8. '(layout' → logprob: -19.8750057220459
    9. 'list' → logprob: -20.5000057220459
    10. '.layout' → logprob: -20.6250057220459

Token 1312: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015598179015796632
    2. ',tr' → logprob: -8.87515640258789
    3. ',
' → logprob: -11.50015640258789
    4. ' ,' → logprob: -12.37515640258789
    5. '       ' → logprob: -14.50015640258789
    6. '   ' → logprob: -15.12515640258789
    7. ',c' → logprob: -15.37515640258789
    8. ')' → logprob: -15.62515640258789
    9. ',t' → logprob: -15.87515640258789
    10. '           ' → logprob: -16.00015640258789

Token 1313: ' trap' (ID: 34270)
  Prédit: 'trap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trap' → logprob: -5.319370302458992e-06
    2. ' trap' → logprob: -12.250005722045898
    3. '
' → logprob: -15.000005722045898
    4. '   ' → logprob: -17.2500057220459
    5. '       ' → logprob: -17.5000057220459
    6. '```' → logprob: -17.8750057220459
    7. '
' → logprob: -18.3750057220459
    8. 'tap' → logprob: -18.8750057220459
    9. 'Trap' → logprob: -18.8750057220459
    10. '{' → logprob: -19.6250057220459

Token 1314: '_types' (ID: 21515)
  Prédit: '_types'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_types' → logprob: -9.088346359931165e-07
    2. 'ypes' → logprob: -14.625000953674316
    3. 'types' → logprob: -14.875000953674316
    4. '_TYPES' → logprob: -16.625
    5. 'trap' → logprob: -17.5
    6. '_type' → logprob: -18.75
    7. '_symbols' → logprob: -19.125
    8. 'Types' → logprob: -19.125
    9. 'symbol' → logprob: -19.25
    10. 'atypes' → logprob: -19.375

Token 1315: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06218816712498665
    2. ')
' → logprob: -2.812188148498535
    3. '       ' → logprob: -8.437188148498535
    4. ')
' → logprob: -13.187188148498535
    5. '   ' → logprob: -14.312188148498535
    6. ',' → logprob: -14.812188148498535
    7. ')

' → logprob: -14.937188148498535
    8. ')`' → logprob: -16.06218910217285
    9. ')`
' → logprob: -16.43718910217285
    10. ' )' → logprob: -16.43718910217285

Token 1316: '       ' (ID: 309)
  Prédit: 'agent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agent' → logprob: -0.027674168348312378
    2. '       ' → logprob: -3.7776741981506348
    3. 'pat' → logprob: -5.527674198150635
    4. 'path' → logprob: -8.777673721313477
    5. ' agent' → logprob: -9.277673721313477
    6. 'ag' → logprob: -9.652673721313477
    7. '```' → logprob: -9.902673721313477
    8. 'pos' → logprob: -10.527673721313477
    9. '   ' → logprob: -10.652673721313477
    10. 'route' → logprob: -11.527673721313477

Token 1317: ' agent' (ID: 11793)
  Prédit: 'agent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agent' (adapté à ' agent') → logprob: -0.00070230319397524
    2. 'hp' → logprob: -8.500701904296875
    3. 'pos' → logprob: -8.625701904296875
    4. 'path' → logprob: -8.875701904296875
    5. '       ' → logprob: -9.375701904296875
    6. 'pat' → logprob: -10.625701904296875
    7. 'start' → logprob: -11.250701904296875
    8. 'position' → logprob: -11.250701904296875
    9. '   ' → logprob: -11.250701904296875
    10. 'current' → logprob: -11.375701904296875

Token 1318: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001326433615759015
    2. '=' → logprob: -6.626326560974121
    3. ' =
' → logprob: -15.501326560974121
    4. '_hp' → logprob: -15.876326560974121
    5. '_' → logprob: -16.376325607299805
    6. ' ' → logprob: -16.751325607299805
    7. ' =
' → logprob: -17.251325607299805
    8. 'hp' → logprob: -17.376325607299805
    9. '_pos' → logprob: -17.751325607299805
    10. '_space' → logprob: -17.876325607299805

Token 1319: ' Agent' (ID: 28237)
  Prédit: 'Agent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Agent' → logprob: -4.842555426876061e-06
    2. ' Agent' → logprob: -12.250004768371582
    3. '   ' → logprob: -25.3750057220459
    4. 'Ag' → logprob: -25.5000057220459
    5. '.Agent' → logprob: -26.3750057220459
    6. '_agent' → logprob: -26.5000057220459
    7. 'AG' → logprob: -26.6250057220459
    8. 'Agency' → logprob: -26.8750057220459
    9. 'agent' → logprob: -27.3750057220459
    10. 'Actor' → logprob: -27.8750057220459

Token 1320: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.625001907348633
    3. 'hp' → logprob: -14.500001907348633
    4. '(
' → logprob: -14.875001907348633
    5. '(hr' → logprob: -17.875001907348633
    6. '((' → logprob: -18.500001907348633
    7. ' hp' → logprob: -18.750001907348633
    8. ' (' → logprob: -18.750001907348633
    9. '```' → logprob: -18.750001907348633
    10. '   ' → logprob: -19.250001907348633

Token 1321: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00464076129719615
    2. '_init' → logprob: -5.379640579223633
    3. '_' → logprob: -12.254640579223633
    4. 'init' → logprob: -12.754640579223633
    5. 'hp' → logprob: -12.879640579223633
    6. '_p' → logprob: -13.754640579223633
    7. 'i' → logprob: -13.879640579223633
    8. '=' → logprob: -13.879640579223633
    9. 'it' → logprob: -14.504640579223633
    10. '_INIT' → logprob: -14.504640579223633

Token 1322: '_init' (ID: 13909)
  Prédit: '_init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_init' → logprob: -5.2166411478538066e-05
    2. '_max' → logprob: -11.125052452087402
    3. 'init' → logprob: -11.375052452087402
    4. ',' → logprob: -11.625052452087402
    5. '_,' → logprob: -12.250052452087402
    6. '_' → logprob: -12.750052452087402
    7. '```' → logprob: -13.500052452087402
    8. '_
' → logprob: -13.625052452087402
    9. '
' → logprob: -14.250052452087402
    10. ')' → logprob: -14.375052452087402

Token 1323: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010962257510982454
    2. ' ,' → logprob: -9.625109672546387
    3. ',h' → logprob: -11.500109672546387
    4. '<|end|>' → logprob: -11.500109672546387
    5. ')' → logprob: -11.750109672546387
    6. '=' → logprob: -12.375109672546387
    7. '_,' → logprob: -12.500109672546387
    8. '   ' → logprob: -12.750109672546387
    9. ',
' → logprob: -13.500109672546387
    10. '<|end|>' → logprob: -14.250109672546387

Token 1324: ' hp' (ID: 37774)
  Prédit: 'hp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hp' → logprob: -0.002877272432669997
    2. ' hp' → logprob: -5.877877235412598
    3. '
' → logprob: -9.752877235412598
    4. '
' → logprob: -11.502877235412598
    5. 'hpp' → logprob: -13.877877235412598
    6. '           ' → logprob: -14.752877235412598
    7. '_hp' → logprob: -14.752877235412598
    8. '       ' → logprob: -15.002877235412598
    9. '

' → logprob: -15.377877235412598
    10. '   ' → logprob: -15.627877235412598

Token 1325: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0067170290276408195
    2. 'max' → logprob: -5.006717205047607
    3. 'Max' → logprob: -14.13171672821045
    4. '_init' → logprob: -15.13171672821045
    5. '
' → logprob: -15.38171672821045
    6. 'maxlength' → logprob: -15.75671672821045
    7. '_MAX' → logprob: -16.506717681884766
    8. '	max' → logprob: -17.006717681884766
    9. ' max' → logprob: -17.506717681884766
    10. '_' → logprob: -17.881717681884766

Token 1326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001422770437784493
    2. ',p' → logprob: -9.000142097473145
    3. ' ,' → logprob: -11.000142097473145
    4. ')' → logprob: -14.375142097473145
    5. ',
' → logprob: -14.625142097473145
    6. '<|end|>' → logprob: -15.125142097473145
    7. '[' → logprob: -15.250142097473145
    8. '   ' → logprob: -15.875142097473145
    9. ',P' → logprob: -16.50014305114746
    10. '       ' → logprob: -16.62514305114746

Token 1327: ' pot' (ID: 3208)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.00862213596701622
    2. ' pot' → logprob: -4.758622169494629
    3. 'p' → logprob: -12.633622169494629
    4. 'pots' → logprob: -13.258622169494629
    5. '[' → logprob: -14.633622169494629
    6. '   ' → logprob: -14.758622169494629
    7. '
' → logprob: -15.258622169494629
    8. 'Pot' → logprob: -15.508622169494629
    9. '```' → logprob: -15.508622169494629
    10. '
' → logprob: -15.633622169494629

Token 1328: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.004087305162101984
    2. 'otions' → logprob: -5.504087448120117
    3. '```' → logprob: -12.629087448120117
    4. '_' → logprob: -13.629087448120117
    5. 't' → logprob: -14.254087448120117
    6. 'IONS' → logprob: -14.754087448120117
    7. '[' → logprob: -14.879087448120117
    8. '
' → logprob: -15.004087448120117
    9. '``' → logprob: -15.129087448120117
    10. '__' → logprob: -15.129087448120117

Token 1329: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3195577561855316
    2. ')
' → logprob: -1.819557785987854
    3. '       ' → logprob: -2.1945576667785645
    4. ')
' → logprob: -11.444558143615723
    5. '   ' → logprob: -12.069558143615723
    6. ',' → logprob: -12.944558143615723
    7. '[' → logprob: -14.194558143615723
    8. ')

' → logprob: -14.319558143615723
    9. '      ' → logprob: -14.819558143615723
    10. '),' → logprob: -14.819558143615723

Token 1330: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2795853316783905
    2. 'start' → logprob: -2.529585361480713
    3. 'pat' → logprob: -2.904585361480713
    4. 'path' → logprob: -2.904585361480713
    5. 'pos' → logprob: -3.654585361480713
    6. 'route' → logprob: -3.904585361480713
    7. 'position' → logprob: -5.529585361480713
    8. 'current' → logprob: -5.904585361480713
    9. '   ' → logprob: -6.779585361480713
    10. '```' → logprob: -7.904585361480713

Token 1331: ' route' (ID: 9656)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.34990063309669495
    2. 'path' → logprob: -1.9749006032943726
    3. 'start' → logprob: -2.474900722503662
    4. 'route' (adapté à ' route') → logprob: -3.599900722503662
    5. 'pat' → logprob: -3.724900722503662
    6. 'position' → logprob: -4.599900722503662
    7. 'current' → logprob: -4.599900722503662
    8. 'positions' → logprob: -8.224900245666504
    9. '#' → logprob: -8.974900245666504
    10. 'curr' → logprob: -9.474900245666504

Token 1332: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07186579704284668
    2. '=' → logprob: -2.6968657970428467
    3. '_path' → logprob: -6.946866035461426
    4. '_' → logprob: -8.071866035461426
    5. '   ' → logprob: -8.071866035461426
    6. '.' → logprob: -8.446866035461426
    7. '_tokens' → logprob: -10.196866035461426
    8. 's' → logprob: -10.571866035461426
    9. '       ' → logprob: -11.571866035461426
    10. '._' → logprob: -11.696866035461426

Token 1333: ' Patrol' (ID: 89322)
  Prédit: 'Pat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pat' → logprob: -8.061054359131958e-06
    2. ' Patrol' → logprob: -11.750007629394531
    3. ' Pat' → logprob: -16.12500762939453
    4. '   ' → logprob: -20.25000762939453
    5. '       ' → logprob: -20.75000762939453
    6. ' patrol' → logprob: -20.87500762939453
    7. 'Patent' → logprob: -20.87500762939453
    8. 'Pet' → logprob: -21.25000762939453
    9. ' ' → logprob: -21.50000762939453
    10. '
' → logprob: -21.75000762939453

Token 1334: 'Route' (ID: 7656)
  Prédit: 'Route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Route' → logprob: -3.292907877039397e-06
    2. 'Step' → logprob: -12.75000286102295
    3. 'route' → logprob: -15.62500286102295
    4. '<Route' → logprob: -16.750003814697266
    5. '_route' → logprob: -17.000003814697266
    6. '	Route' → logprob: -17.750003814697266
    7. '(Route' → logprob: -17.875003814697266
    8. 'Router' → logprob: -18.125003814697266
    9. 'R' → logprob: -18.625003814697266
    10. 'Steps' → logprob: -18.750003814697266

Token 1335: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011711753904819489
    2. 'steps' → logprob: -6.751171112060547
    3. ' steps' → logprob: -14.626171112060547
    4. '(
' → logprob: -15.126171112060547
    5. ' (' → logprob: -16.501171112060547
    6. '       ' → logprob: -16.626171112060547
    7. '[' → logprob: -17.251171112060547
    8. 'Steps' → logprob: -17.626171112060547
    9. '[](' → logprob: -18.001171112060547
    10. '(step' → logprob: -18.251171112060547

Token 1336: 'steps' (ID: 27176)
  Prédit: 'steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -12.500003814697266
    3. 'step' → logprob: -15.875003814697266
    4. ' steps' → logprob: -16.000003814697266
    5. '[
' → logprob: -17.875003814697266
    6. '[]
' → logprob: -19.500003814697266
    7. '[]' → logprob: -19.625003814697266
    8. '(' → logprob: -19.625003814697266
    9. '[(' → logprob: -20.250003814697266
    10. '   ' → logprob: -20.250003814697266

Token 1337: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025100242346525192
    2. '(start' → logprob: -6.752510070800781
    3. ')
' → logprob: -7.377510070800781
    4. '       ' → logprob: -7.752510070800781
    5. '(' → logprob: -9.002510070800781
    6. '[start' → logprob: -10.002510070800781
    7. ',' → logprob: -10.377510070800781
    8. '[' → logprob: -10.502510070800781
    9. ').' → logprob: -11.127510070800781
    10. '(current' → logprob: -11.627510070800781

Token 1338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4511267840862274
    2. 'start' → logprob: -1.0761268138885498
    3. 'pos' → logprob: -4.576126575469971
    4. 'current' → logprob: -4.951126575469971
    5. 'path' → logprob: -5.951126575469971
    6. ' start' → logprob: -7.201126575469971
    7. '   ' → logprob: -7.451126575469971
    8. 'position' → logprob: -7.701126575469971
    9. '```' → logprob: -9.076127052307129
    10. '
' → logprob: -9.201127052307129

Token 1339: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.3529512584209442
    2. 'pos' → logprob: -1.8529512882232666
    3. 'path' → logprob: -2.3529512882232666
    4. 'current' → logprob: -3.2279512882232666
    5. 'position' → logprob: -5.4779510498046875
    6. '       ' → logprob: -6.6029510498046875
    7. 'curr' → logprob: -9.602951049804688
    8. 'cur' → logprob: -9.727951049804688
    9. 'pat' → logprob: -9.852951049804688
    10. 'positions' → logprob: -10.227951049804688

Token 1340: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.014268811792135239
    2. '_position' → logprob: -4.88926887512207
    3. 'Pos' → logprob: -5.13926887512207
    4. 'Position' → logprob: -8.13926887512207
    5. 'ing' → logprob: -8.38926887512207
    6. 'pos' → logprob: -8.76426887512207
    7. ' =' → logprob: -10.26426887512207
    8. '_positions' → logprob: -10.76426887512207
    9. '_' → logprob: -10.88926887512207
    10. '=' → logprob: -11.51426887512207

Token 1341: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17976075410842896
    2. '=' → logprob: -1.8047606945037842
    3. '(Position' → logprob: -11.804760932922363
    4. 'Position' → logprob: -13.179760932922363
    5. ':' → logprob: -13.429760932922363
    6. '=None' → logprob: -13.554760932922363
    7. '       ' → logprob: -13.929760932922363
    8. ')' → logprob: -14.554760932922363
    9. '(' → logprob: -14.804760932922363
    10. ',' → logprob: -15.054760932922363

Token 1342: ' Position' (ID: 21829)
  Prédit: 'Position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Position' → logprob: -7.505351095460355e-05
    2. ' Position' → logprob: -9.500075340270996
    3. '(Position' → logprob: -16.62507438659668
    4. '_Position' → logprob: -17.87507438659668
    5. 'position' → logprob: -18.87507438659668
    6. '0' → logprob: -19.12507438659668
    7. 'Pos' → logprob: -19.12507438659668
    8. 'Trap' → logprob: -19.50007438659668
    9. '_position' → logprob: -19.62507438659668
    10. '.Position' → logprob: -19.62507438659668

Token 1343: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008615515194833279
    2. '(' → logprob: -4.758615493774414
    3. ' ' → logprob: -14.008615493774414
    4. '       ' → logprob: -16.258615493774414
    5. ' (' → logprob: -16.883615493774414
    6. '(
' → logprob: -17.258615493774414
    7. '   ' → logprob: -18.133615493774414
    8. '1' → logprob: -18.258615493774414
    9. '
' → logprob: -18.758615493774414
    10. '=' → logprob: -19.508615493774414

Token 1344: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4272752852994017e-05
    2. 'R' → logprob: -10.87502384185791
    3. '(' → logprob: -13.25002384185791
    4. ' ' → logprob: -14.12502384185791
    5. 'c' → logprob: -14.12502384185791
    6. ')' → logprob: -14.75002384185791
    7. '-' → logprob: -15.25002384185791
    8. '=' → logprob: -15.62502384185791
    9. '1' → logprob: -15.81252384185791
    10. 'C' → logprob: -16.250024795532227

Token 1345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003062646137550473
    2. '<|end|>' → logprob: -8.500306129455566
    3. ' ,' → logprob: -9.750306129455566
    4. ')' → logprob: -10.500306129455566
    5. '0' → logprob: -11.625306129455566
    6. '<|end|>' → logprob: -12.125306129455566
    7. ',
' → logprob: -14.375306129455566
    8. ' ' → logprob: -15.125306129455566
    9. '   ' → logprob: -15.375306129455566
    10. '),' → logprob: -15.625306129455566

Token 1346: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '
' → logprob: -18.250024795532227
    4. '   ' → logprob: -18.500024795532227
    5. ')' → logprob: -18.750024795532227
    6. '       ' → logprob: -18.875024795532227
    7. '۰' → logprob: -19.375024795532227
    8. '    ' → logprob: -19.812524795532227
    9. '           ' → logprob: -19.937524795532227
    10. '        ' → logprob: -20.312524795532227

Token 1347: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028975941240787506
    2. ')
' → logprob: -5.8778977394104
    3. '       ' → logprob: -9.627897262573242
    4. ' )' → logprob: -11.377897262573242
    5. '<|end|>' → logprob: -11.877897262573242
    6. '
' → logprob: -13.627897262573242
    7. '   ' → logprob: -13.877897262573242
    8. '[' → logprob: -14.002897262573242
    9. ')return' → logprob: -14.127897262573242
    10. ').' → logprob: -14.502897262573242

Token 1348: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18599827587604523
    2. 'current' → logprob: -2.6859982013702393
    3. 'path' → logprob: -2.6859982013702393
    4. 'pos' → logprob: -3.4359982013702393
    5. 'position' → logprob: -7.435998439788818
    6. '```' → logprob: -8.06099796295166
    7. '   ' → logprob: -9.18599796295166
    8. 'for' → logprob: -9.56099796295166
    9. ' path' → logprob: -9.81099796295166
    10. ' current' → logprob: -10.43599796295166

Token 1349: ' #' (ID: 1069)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.06069270521402359
    2. 'current' → logprob: -3.43569278717041
    3. 'pos' → logprob: -4.18569278717041
    4. 'for' → logprob: -4.56069278717041
    5. 'position' → logprob: -7.81069278717041
    6. 'positions' → logprob: -7.81069278717041
    7. 'route' → logprob: -9.56069278717041
    8. 'pat' → logprob: -10.43569278717041
    9. 'curr' → logprob: -10.68569278717041
    10. 'if' → logprob: -10.81069278717041

Token 1350: ' Must' (ID: 20953)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.7213103175163269
    2. 'pos' → logprob: -1.2213103771209717
    3. 'current' → logprob: -1.5963103771209717
    4. 'for' → logprob: -4.471310138702393
    5. 'position' → logprob: -6.096310138702393
    6. 'curr' → logprob: -7.096310138702393
    7. 'positions' → logprob: -7.471310138702393
    8. 'cur' → logprob: -7.596310138702393
    9. 'hp' → logprob: -7.721310138702393
    10. 'route' → logprob: -9.47131061553955

Token 1351: ' note' (ID: 7477)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.3153672218322754
    2. 'sur' → logprob: -1.3153672218322754
    3. 'def' → logprob: -2.4403672218322754
    4. 'move' → logprob: -2.5653672218322754
    5. ' survive' → logprob: -2.5653672218322754
    6. 'pass' → logprob: -2.6903672218322754
    7. 'follow' → logprob: -3.3153672218322754
    8. '       ' → logprob: -3.5653672218322754
    9. 'return' → logprob: -4.565367221832275
    10. 'check' → logprob: -5.190367221832275

Token 1352: ':' (ID: 25)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.395612120628357
    2. 'that' → logprob: -1.895612120628357
    3. 'current' → logprob: -2.0206122398376465
    4. ' that' → logprob: -2.0206122398376465
    5. '       ' → logprob: -2.2706122398376465
    6. 'pos' → logprob: -2.2706122398376465
    7. ' if' → logprob: -3.0206122398376465
    8. '#' → logprob: -3.5206122398376465
    9. ' current' → logprob: -3.7706122398376465
    10. 'for' → logprob: -4.7706122398376465

Token 1353: ' top' (ID: 2344)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.855324923992157
    2. 'current' → logprob: -0.855324923992157
    3. 'for' → logprob: -2.6053249835968018
    4. '#' → logprob: -3.6053249835968018
    5. 'path' → logprob: -3.6053249835968018
    6. 'if' → logprob: -4.230324745178223
    7. 'prev' → logprob: -6.480324745178223
    8. ' current' → logprob: -6.855324745178223
    9. 'hp' → logprob: -7.105324745178223
    10. 'position' → logprob: -7.230324745178223

Token 1354: '-left' (ID: 17007)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.11489896476268768
    2. '-left' → logprob: -2.739898920059204
    3. '
' → logprob: -4.239899158477783
    4. 'le' → logprob: -4.739899158477783
    5. '_left' → logprob: -5.239899158477783
    6. 'Left' → logprob: -5.614899158477783
    7. ' left' → logprob: -5.989899158477783
    8. '=' → logprob: -6.739899158477783
    9. '   ' → logprob: -6.864899158477783
    10. '       ' → logprob: -6.989899158477783

Token 1355: ' corner' (ID: 14194)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0873346328735352
    2. ' =' → logprob: -1.3373346328735352
    3. '
' → logprob: -2.212334632873535
    4. 'position' → logprob: -2.337334632873535
    5. ' position' → logprob: -3.462334632873535
    6. 'pos' → logprob: -3.462334632873535
    7. '=' → logprob: -3.712334632873535
    8. 'corner' → logprob: -3.837334632873535
    9. 'start' → logprob: -4.337334632873535
    10. '   ' → logprob: -4.837334632873535

Token 1356: ' has' (ID: 853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.059373337775468826
    2. '
' → logprob: -3.309373378753662
    3. 'current' → logprob: -4.934373378753662
    4. 'for' → logprob: -5.309373378753662
    5. 'pos' → logprob: -5.934373378753662
    6. ' for' → logprob: -5.934373378753662
    7. 'path' → logprob: -6.559373378753662
    8. ' path' → logprob: -7.309373378753662
    9. 'position' → logprob: -7.684373378753662
    10. ' current' → logprob: -7.684373378753662

Token 1357: ' no' (ID: 860)
  Prédit: 'coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coordinates' → logprob: -0.8699764609336853
    2. 'row' → logprob: -0.9949764609336853
    3. '0' → logprob: -2.11997652053833
    4. 'indices' → logprob: -3.24497652053833
    5. 'index' → logprob: -3.99497652053833
    6. 'symbol' → logprob: -4.99497652053833
    7. 'coordinate' → logprob: -4.99497652053833
    8. '(' → logprob: -5.36997652053833
    9. ' coordinates' → logprob: -5.49497652053833
    10. 'the' → logprob: -6.11997652053833

Token 1358: ' traps' (ID: 88055)
  Prédit: 'trap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trap' → logprob: -0.03014475852251053
    2. 'tr' → logprob: -3.780144691467285
    3. ' traps' → logprob: -5.530144691467285
    4. ' trap' → logprob: -5.905144691467285
    5. 'symbol' → logprob: -10.530144691467285
    6. '#' → logprob: -10.780144691467285
    7. '   ' → logprob: -10.780144691467285
    8. '`' → logprob: -11.655144691467285
    9. '_tr' → logprob: -11.655144691467285
    10. 'damage' → logprob: -11.780144691467285

Token 1359: ' guaranteed' (ID: 21862)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12158237397670746
    2. '
' → logprob: -2.746582269668579
    3. 'current' → logprob: -3.621582269668579
    4. ' for' → logprob: -4.746582508087158
    5. 'for' → logprob: -4.996582508087158
    6. 'pos' → logprob: -5.371582508087158
    7. ' current' → logprob: -6.371582508087158
    8. '        
' → logprob: -7.371582508087158
    9. 'path' → logprob: -7.621582508087158
    10. 'position' → logprob: -8.99658203125

Token 1360: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11692801117897034
    2. '
' → logprob: -2.8669281005859375
    3. 'current' → logprob: -3.3669281005859375
    4. 'pos' → logprob: -4.8669281005859375
    5. 'for' → logprob: -5.3669281005859375
    6. 'path' → logprob: -5.4919281005859375
    7. ' for' → logprob: -7.2419281005859375
    8. 'position' → logprob: -7.8669281005859375
    9. ' current' → logprob: -8.116928100585938
    10. '
' → logprob: -8.241928100585938

Token 1361: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057409025728702545
    2. '
' → logprob: -3.0574090480804443
    3. 'current' → logprob: -5.307408809661865
    4. 'pos' → logprob: -6.682408809661865
    5. ' for' → logprob: -6.932408809661865
    6. ' current' → logprob: -7.682408809661865
    7. 'for' → logprob: -7.682408809661865
    8. '        
' → logprob: -8.557409286499023
    9. '```' → logprob: -8.557409286499023
    10. 'position' → logprob: -9.682409286499023

Token 1362: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4824797511100769
    2. 'current' → logprob: -1.6074798107147217
    3. 'for' → logprob: -1.8574798107147217
    4. 'path' → logprob: -4.107479572296143
    5. '       ' → logprob: -4.982479572296143
    6. 'position' → logprob: -6.607479572296143
    7. 'if' → logprob: -6.982479572296143
    8. 'curr' → logprob: -8.6074800491333
    9. 'cur' → logprob: -8.8574800491333
    10. 'prev' → logprob: -9.2324800491333

Token 1363: ' path' (ID: 3104)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5596061944961548
    2. 'current' → logprob: -1.1846061944961548
    3. 'path' → logprob: -2.4346060752868652
    4. '       ' → logprob: -4.184606075286865
    5. 'for' → logprob: -4.184606075286865
    6. 'position' → logprob: -5.684606075286865
    7. 'positions' → logprob: -7.809606075286865
    8. 'curr' → logprob: -8.434606552124023
    9. 'prev' → logprob: -8.809606552124023
    10. 'cur' → logprob: -9.309606552124023

Token 1364: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09049477428197861
    2. ' =' → logprob: -2.4654948711395264
    3. 'for' → logprob: -7.215494632720947
    4. '       ' → logprob: -8.215495109558105
    5. 'positions' → logprob: -8.215495109558105
    6. 'path' → logprob: -8.965495109558105
    7. 'pos' → logprob: -9.715495109558105
    8. '#' → logprob: -11.090495109558105
    9. '=[]' → logprob: -11.340495109558105
    10. '.append' → logprob: -11.715495109558105

Token 1365: ' all' (ID: 722)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.003493519499897957
    2. ' route' → logprob: -6.128493309020996
    3. '[' → logprob: -6.753493309020996
    4. '[(' → logprob: -9.128493309020996
    5. ' [' → logprob: -10.878493309020996
    6. 'start' → logprob: -12.128493309020996
    7. '[start' → logprob: -12.628493309020996
    8. '[]' → logprob: -13.628493309020996
    9. '[]
' → logprob: -13.878493309020996
    10. '   ' → logprob: -14.253493309020996

Token 1366: ' cells' (ID: 11242)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.051467884331941605
    2. 'cells' → logprob: -3.6764678955078125
    3. 'steps' → logprob: -3.9264678955078125
    4. 'trap' → logprob: -6.5514678955078125
    5. 'pat' → logprob: -7.0514678955078125
    6. 'the' → logprob: -7.3014678955078125
    7. 'Positions' → logprob: -7.8014678955078125
    8. ' positions' → logprob: -7.9264678955078125
    9. 'except' → logprob: -8.301467895507812
    10. 'route' → logprob: -8.551467895507812

Token 1367: ' stepped' (ID: 45744)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09349618852138519
    2. '
' → logprob: -3.343496084213257
    3. 'for' → logprob: -3.718496084213257
    4. ' for' → logprob: -4.343496322631836
    5. ' =' → logprob: -5.093496322631836
    6. 'path' → logprob: -5.843496322631836
    7. '```' → logprob: -5.968496322631836
    8. '        
' → logprob: -6.843496322631836
    9. '=' → logprob: -7.468496322631836
    10. 'current' → logprob: -7.593496322631836

Token 1368: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017002880573272705
    2. 'for' → logprob: -4.392003059387207
    3. '
' → logprob: -6.267003059387207
    4. ' for' → logprob: -6.517003059387207
    5. 'pos' → logprob: -8.142003059387207
    6. 'path' → logprob: -8.517003059387207
    7. '```' → logprob: -8.517003059387207
    8. 'current' → logprob: -8.642003059387207
    9. 'next' → logprob: -9.517003059387207
    10. '        
' → logprob: -9.767003059387207

Token 1369: ' after' (ID: 1934)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08657635748386383
    2. 'path' → logprob: -2.586576461791992
    3. 'pos' → logprob: -5.461576461791992
    4. '
' → logprob: -6.336576461791992
    5. '```' → logprob: -6.961576461791992
    6. 'current' → logprob: -8.086576461791992
    7. ' path' → logprob: -8.961576461791992
    8. 'for' → logprob: -10.086576461791992
    9. 'position' → logprob: -10.211576461791992
    10. '        
' → logprob: -10.461576461791992

Token 1370: ' each' (ID: 2454)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8387021422386169
    2. 'start' → logprob: -0.8387021422386169
    3. 'starting' → logprob: -2.5887022018432617
    4. 'moving' → logprob: -3.4637022018432617
    5. 'first' → logprob: -4.088702201843262
    6. 'each' → logprob: -5.963702201843262
    7. 'taking' → logprob: -6.088702201843262
    8. 'step' → logprob: -6.588702201843262
    9. 'initial' → logprob: -6.713702201843262
    10. 'enter' → logprob: -6.963702201843262

Token 1371: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.6412107348442078
    2. 'step' → logprob: -0.7662107348442078
    3. ' move' → logprob: -5.641210556030273
    4. 'pat' → logprob: -6.266210556030273
    5. 'movement' → logprob: -6.266210556030273
    6. ' step' → logprob: -7.516210556030273
    7. 'position' → logprob: -9.266210556030273
    8. 'for' → logprob: -9.391210556030273
    9. 'direction' → logprob: -9.641210556030273
    10. '#' → logprob: -10.016210556030273

Token 1372: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15590634942054749
    2. 'path' → logprob: -2.9059064388275146
    3. '
' → logprob: -3.2809064388275146
    4. 'pos' → logprob: -3.4059064388275146
    5. 'current' → logprob: -4.4059062004089355
    6. 'for' → logprob: -6.0309062004089355
    7. '```' → logprob: -6.4059062004089355
    8. 'position' → logprob: -7.0309062004089355
    9. '        
' → logprob: -8.030906677246094
    10. ' path' → logprob: -8.030906677246094

Token 1373: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05952666327357292
    2. 'pos' → logprob: -3.4345266819000244
    3. 'for' → logprob: -4.434526443481445
    4. 'current' → logprob: -4.934526443481445
    5. ' for' → logprob: -5.809526443481445
    6. '
' → logprob: -6.184526443481445
    7. '```' → logprob: -7.434526443481445
    8. '   ' → logprob: -8.559526443481445
    9. 'position' → logprob: -8.934526443481445
    10. ' current' → logprob: -8.934526443481445

Token 1374: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.27323925495147705
    2. 'pos' → logprob: -1.648239254951477
    3. 'current' → logprob: -3.8982391357421875
    4. 'for' → logprob: -4.3982391357421875
    5. '       ' → logprob: -4.5232391357421875
    6. 'position' → logprob: -6.1482391357421875
    7. 'prev' → logprob: -7.3982391357421875
    8. 'positions' → logprob: -8.273239135742188
    9. '```' → logprob: -9.273239135742188
    10. 'curr' → logprob: -10.273239135742188

Token 1375: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7407280802726746
    2. ' =' → logprob: -0.7407280802726746
    3. '.append' → logprob: -3.2407281398773193
    4. '.extend' → logprob: -5.86572790145874
    5. '.' → logprob: -6.49072790145874
    6. ' +=' → logprob: -6.74072790145874
    7. '=[]' → logprob: -7.99072790145874
    8. ')' → logprob: -8.115728378295898
    9. '+=' → logprob: -8.115728378295898
    10. '+' → logprob: -8.240728378295898

Token 1376: ' route' (ID: 9656)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.06197025999426842
    2. ' route' → logprob: -2.8119702339172363
    3. '[]' → logprob: -13.186970710754395
    4. '[' → logprob: -15.436970710754395
    5. '(route' → logprob: -15.436970710754395
    6. '$route' → logprob: -15.686970710754395
    7. '.route' → logprob: -16.311969757080078
    8. '_route' → logprob: -16.936969757080078
    9. 'Route' → logprob: -17.686969757080078
    10. ' []' → logprob: -17.686969757080078

Token 1377: '.expand' (ID: 61449)
  Prédit: '.expand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.expand' → logprob: -2.0100624169572257e-05
    2. 'expand' → logprob: -11.125020027160645
    3. '.extend' → logprob: -13.375020027160645
    4. '.' → logprob: -13.375020027160645
    5. ' .' → logprob: -13.625020027160645
    6. '```' → logprob: -14.250020027160645
    7. '   ' → logprob: -16.37502098083496
    8. '`.' → logprob: -16.87502098083496
    9. '.exp' → logprob: -17.50002098083496
    10. '._' → logprob: -17.62502098083496

Token 1378: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.006179528776556253
    2. 'path' → logprob: -5.131179332733154
    3. 'Path' → logprob: -8.381179809570312
    4. 'route' → logprob: -12.756179809570312
    5. 'pat' → logprob: -12.756179809570312
    6. '_route' → logprob: -12.756179809570312
    7. '_pat' → logprob: -12.881179809570312
    8. 'current' → logprob: -13.256179809570312
    9. '(path' → logprob: -13.506179809570312
    10. 'Pat' → logprob: -13.756179809570312

Token 1379: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.09707453846931458
    2. '(' → logprob: -2.597074508666992
    3. 'start' → logprob: -4.097074508666992
    4. '[start' → logprob: -7.472074508666992
    5. '(current' → logprob: -8.347074508666992
    6. ')' → logprob: -8.722074508666992
    7. '[' → logprob: -9.097074508666992
    8. ' start' → logprob: -9.722074508666992
    9. '       ' → logprob: -9.972074508666992
    10. '   ' → logprob: -10.472074508666992

Token 1380: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0002979240380227566
    2. 'pos' → logprob: -8.125297546386719
    3. 'start' → logprob: -13.750297546386719
    4. 'Pos' → logprob: -14.125297546386719
    5. ')' → logprob: -17.25029754638672
    6. 'position' → logprob: -17.25029754638672
    7. '_position' → logprob: -17.62529754638672
    8. '```' → logprob: -17.75029754638672
    9. '(start' → logprob: -17.87529754638672
    10. '_start' → logprob: -18.62529754638672

Token 1381: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.463590145111084
    2. '       ' → logprob: -1.588590145111084
    3. '
' → logprob: -2.463590145111084
    4. ')
' → logprob: -2.588590145111084
    5. '[' → logprob: -5.838590145111084
    6. '        
' → logprob: -5.963590145111084
    7. '  
' → logprob: -8.338590621948242
    8. '<|end|>' → logprob: -9.338590621948242
    9. '):
' → logprob: -9.463590621948242
    10. '    
' → logprob: -9.588590621948242

Token 1382: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16156715154647827
    2. '       ' → logprob: -1.911567211151123
    3. 'current' → logprob: -6.911567211151123
    4. ' for' → logprob: -8.911566734313965
    5. '```' → logprob: -9.286566734313965
    6. '   ' → logprob: -9.411566734313965
    7. '
' → logprob: -10.661566734313965
    8. 'prev' → logprob: -11.911566734313965
    9. '        
' → logprob: -13.161566734313965
    10. '``' → logprob: -13.161566734313965

Token 1383: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006805036100558937
    2. 'current' → logprob: -7.500680446624756
    3. '       ' → logprob: -9.125680923461914
    4. '```' → logprob: -12.000680923461914
    5. 'prev' → logprob: -12.375680923461914
    6. 'hp' → logprob: -12.750680923461914
    7. ' for' → logprob: -12.875680923461914
    8. 'curr' → logprob: -14.125680923461914
    9. 'cur' → logprob: -14.500680923461914
    10. 'alive' → logprob: -14.750680923461914

Token 1384: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3489528298377991
    2. 'current' → logprob: -1.8489527702331543
    3. 'hp' → logprob: -2.0989527702331543
    4. 'curr' → logprob: -5.348952770233154
    5. 'prev' → logprob: -5.473952770233154
    6. 'cur' → logprob: -6.223952770233154
    7. 'agent' → logprob: -6.848952770233154
    8. '       ' → logprob: -6.973952770233154
    9. 'last' → logprob: -7.473952770233154
    10. 'alive' → logprob: -7.848952770233154

Token 1385: ' each' (ID: 2454)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0041610258631408215
    2. ' pos' → logprob: -5.6291608810424805
    3. 'cell' → logprob: -8.00416088104248
    4. 'step' → logprob: -8.87916088104248
    5. 'i' → logprob: -9.87916088104248
    6. ' cell' → logprob: -11.87916088104248
    7. 'position' → logprob: -12.00416088104248
    8. 'idx' → logprob: -12.37916088104248
    9. '(pos' → logprob: -12.62916088104248
    10. 'current' → logprob: -12.75416088104248

Token 1386: ' cell' (ID: 4206)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.021441910415887833
    2. ' pos' → logprob: -4.14644193649292
    3. 'cell' → logprob: -5.64644193649292
    4. 'position' → logprob: -7.27144193649292
    5. 'step' → logprob: -7.64644193649292
    6. ' cell' → logprob: -8.021441459655762
    7. ' position' → logprob: -9.021441459655762
    8. ' step' → logprob: -9.521441459655762
    9. 'next' → logprob: -9.646441459655762
    10. '   ' → logprob: -10.521441459655762

Token 1387: ' stepped' (ID: 45744)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5289803743362427
    2. 'in' → logprob: -0.9039803743362427
    3. 'pos' → logprob: -5.653980255126953
    4. '       ' → logprob: -7.028980255126953
    5. 'visited' → logprob: -7.778980255126953
    6. ',' → logprob: -8.278980255126953
    7. '
' → logprob: -8.403980255126953
    8. 'for' → logprob: -9.153980255126953
    9. '```' → logprob: -9.153980255126953
    10. 'idx' → logprob: -9.528980255126953

Token 1388: ' into' (ID: 1511)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.021068578585982323
    2. ' on' → logprob: -4.271068572998047
    3. '           ' → logprob: -5.646068572998047
    4. 'in' → logprob: -6.646068572998047
    5. '       ' → logprob: -7.021068572998047
    6. 'onto' → logprob: -7.646068572998047
    7. '               ' → logprob: -9.146068572998047
    8. ':' → logprob: -9.146068572998047
    9. '```' → logprob: -9.646068572998047
    10. ' in' → logprob: -9.896068572998047

Token 1389: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9296109080314636
    2. 'in' → logprob: -1.5546109676361084
    3. ':' → logprob: -1.8046109676361084
    4. '       ' → logprob: -2.1796109676361084
    5. ':
' → logprob: -2.9296109676361084
    6. ',' → logprob: -3.3046109676361084
    7. 'for' → logprob: -4.804610729217529
    8. ' for' → logprob: -4.929610729217529
    9. '           ' → logprob: -4.929610729217529
    10. '   ' → logprob: -6.054610729217529

Token 1390: ' agent' (ID: 11793)
  Prédit: 'damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'damage' → logprob: -0.7559284567832947
    2. '       ' → logprob: -1.8809285163879395
    3. '           ' → logprob: -2.1309285163879395
    4. 'trap' → logprob: -2.3809285163879395
    5. ' damage' → logprob: -3.5059285163879395
    6. ' for' → logprob: -3.7559285163879395
    7. 'pos' → logprob: -3.8809285163879395
    8. 'for' → logprob: -3.8809285163879395
    9. 'cell' → logprob: -4.3809285163879395
    10. ' if' → logprob: -4.6309285163879395

Token 1391: ' uses' (ID: 8844)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6656013131141663
    2. '       ' → logprob: -1.5406012535095215
    3. '.hp' → logprob: -2.0406012535095215
    4. ' =' → logprob: -4.0406012535095215
    5. '```' → logprob: -4.2906012535095215
    6. ' must' → logprob: -4.4156012535095215
    7. 'damage' → logprob: -4.5406012535095215
    8. 'hp' → logprob: -4.5406012535095215
    9. '.damage' → logprob: -4.5406012535095215
    10. '_hp' → logprob: -4.6656012535095215

Token 1392: ' pot' (ID: 3208)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.003746987320482731
    2. 'self' → logprob: -6.62874698638916
    3. 'the' → logprob: -7.00374698638916
    4. ' pot' → logprob: -7.37874698638916
    5. '_p' → logprob: -8.00374698638916
    6. 'p' → logprob: -8.25374698638916
    7. '```' → logprob: -9.00374698638916
    8. '       ' → logprob: -10.25374698638916
    9. 'their' → logprob: -10.50374698638916
    10. 'trap' → logprob: -10.62874698638916

Token 1393: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.0007441143970936537
    2. 'otions' → logprob: -7.625744342803955
    3. '```' → logprob: -8.750743865966797
    4. 't' → logprob: -10.625743865966797
    5. 'ion' → logprob: -11.125743865966797
    6. '       ' → logprob: -11.125743865966797
    7. '``' → logprob: -11.625743865966797
    8. '   ' → logprob: -11.625743865966797
    9. '`' → logprob: -12.500743865966797
    10. '#' → logprob: -12.625743865966797

Token 1394: ' before' (ID: 2254)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32022443413734436
    2. 'to' → logprob: -1.945224404335022
    3. ' to' → logprob: -2.4452245235443115
    4. 'and' → logprob: -4.195224285125732
    5. ' and' → logprob: -4.570224285125732
    6. 'before' → logprob: -4.945224285125732
    7. 'if' → logprob: -5.695224285125732
    8. ' before' → logprob: -6.070224285125732
    9. ',' → logprob: -6.195224285125732
    10. '
' → logprob: -6.570224285125732

Token 1395: ' stepping' (ID: 63083)
  Prédit: 'ste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ste' → logprob: -0.8924639225006104
    2. 'checking' → logprob: -1.0174639225006104
    3. 'enter' → logprob: -2.2674639225006104
    4. 'taking' → logprob: -2.5174639225006104
    5. 'moving' → logprob: -4.517463684082031
    6. 'the' → logprob: -4.517463684082031
    7. ' stepping' → logprob: -5.267463684082031
    8. 'app' → logprob: -5.767463684082031
    9. 'f' → logprob: -6.142463684082031
    10. 'damage' → logprob: -6.267463684082031

Token 1396: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49585843086242676
    2. 'into' → logprob: -1.3708584308624268
    3. ' into' → logprob: -2.6208584308624268
    4. 'in' → logprob: -3.6208584308624268
    5. '
' → logprob: -4.245858192443848
    6. '           ' → logprob: -4.870858192443848
    7. ' in' → logprob: -5.620858192443848
    8. 'if' → logprob: -5.870858192443848
    9. ',' → logprob: -5.995858192443848
    10. 'onto' → logprob: -6.245858192443848

Token 1397: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14825275540351868
    2. ' for' → logprob: -2.6482527256011963
    3. 'for' → logprob: -2.8982527256011963
    4. '
' → logprob: -4.898252964019775
    5. ',' → logprob: -6.398252964019775
    6. ' to' → logprob: -7.023252964019775
    7. ' and' → logprob: -7.148252964019775
    8. '   ' → logprob: -7.648252964019775
    9. '```' → logprob: -8.523252487182617
    10. '        
' → logprob: -9.023252487182617

Token 1398: ' If' (ID: 1843)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07911978662014008
    2. 'for' → logprob: -2.5791196823120117
    3. ' for' → logprob: -8.704119682312012
    4. '
' → logprob: -10.079119682312012
    5. 'For' → logprob: -11.454119682312012
    6. '```' → logprob: -11.829119682312012
    7. '   ' → logprob: -12.954119682312012
    8. '
' → logprob: -14.454119682312012
    9. '           ' → logprob: -14.454119682312012
    10. 'def' → logprob: -15.329119682312012

Token 1399: ' hp' (ID: 37774)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.027050822973251343
    2. ' cave' → logprob: -4.402050971984863
    3. 'trap' → logprob: -4.652050971984863
    4. 'cell' → logprob: -6.277050971984863
    5. 'damage' → logprob: -7.152050971984863
    6. 'agent' → logprob: -7.277050971984863
    7. 'the' → logprob: -7.652050971984863
    8. '
' → logprob: -8.527050971984863
    9. '   ' → logprob: -8.652050971984863
    10. 'not' → logprob: -9.152050971984863

Token 1400: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.634229838848114
    2. '<=' → logprob: -0.759229838848114
    3. '           ' → logprob: -7.63422966003418
    4. '>' → logprob: -7.88422966003418
    5. '   ' → logprob: -8.13422966003418
    6. ' >' → logprob: -8.75922966003418
    7. '       ' → logprob: -9.38422966003418
    8. '```' → logprob: -9.50922966003418
    9. '               ' → logprob: -10.38422966003418
    10. ' <' → logprob: -10.50922966003418

Token 1401: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7737787961959839
    2. 'c' → logprob: -1.1487787961959839
    3. 'trap' → logprob: -1.6487787961959839
    4. 'self' → logprob: -3.7737789154052734
    5. 'damage' → logprob: -6.148778915405273
    6. 'layout' → logprob: -7.023778915405273
    7. ' trap' → logprob: -7.148778915405273
    8. 'cell' → logprob: -7.773778915405273
    9. ' ' → logprob: -8.273778915405273
    10. 'agent' → logprob: -8.523778915405273

Token 1402: ' dies' (ID: 4487)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021308299154043198
    2. ',' → logprob: -4.646308422088623
    3. ':
' → logprob: -5.396308422088623
    4. ' and' → logprob: -6.146308422088623
    5. 'and' → logprob: -6.771308422088623
    6. ' or' → logprob: -6.771308422088623
    7. '       ' → logprob: -7.396308422088623
    8. ' at' → logprob: -7.521308422088623
    9. ' before' → logprob: -7.521308422088623
    10. '           ' → logprob: -8.396307945251465

Token 1403: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004199255723506212
    2. '
' → logprob: -5.879199028015137
    3. ',' → logprob: -7.129199028015137
    4. ' for' → logprob: -8.129199028015137
    5. ' at' → logprob: -8.504199028015137
    6. ' and' → logprob: -10.629199028015137
    7. ' before' → logprob: -11.254199028015137
    8. 'for' → logprob: -11.629199028015137
    9. '           ' → logprob: -11.879199028015137
    10. ' after' → logprob: -12.004199028015137

Token 1404: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023476807109545916
    2. 'for' → logprob: -9.125234603881836
    3. '
' → logprob: -9.250234603881836
    4. '```' → logprob: -10.750234603881836
    5. 'For' → logprob: -12.625234603881836
    6. ' for' → logprob: -13.000234603881836
    7. '   ' → logprob: -13.125234603881836
    8. '           ' → logprob: -15.500234603881836
    9. 'Next' → logprob: -16.125234603881836
    10. 'Here' → logprob: -16.875234603881836

Token 1405: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040828000754117966
    2. ' for' → logprob: -4.040828227996826
    3. 'for' (adapté à ' for') → logprob: -4.165828227996826
    4. '
' → logprob: -5.040828227996826
    5. '```' → logprob: -8.040827751159668
    6. '   ' → logprob: -9.415827751159668
    7. 'For' → logprob: -11.415827751159668
    8. '        
' → logprob: -11.915827751159668
    9. '``' → logprob: -12.415827751159668
    10. '
' → logprob: -12.540827751159668

Token 1406: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.003385883988812566
    2. ' pos' → logprob: -6.2533860206604
    3. 'next' → logprob: -6.8783860206604
    4. '   ' → logprob: -8.128385543823242
    5. 'position' → logprob: -9.878385543823242
    6. ' next' → logprob: -10.253385543823242
    7. 'cell' → logprob: -10.878385543823242
    8. 'step' → logprob: -11.628385543823242
    9. '       ' → logprob: -12.253385543823242
    10. '```' → logprob: -12.878385543823242

Token 1407: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026365095749497414
    2. 'in' → logprob: -3.651365041732788
    3. '	in' → logprob: -10.026365280151367
    4. '_in' → logprob: -11.151365280151367
    5. 'In' → logprob: -13.651365280151367
    6. ',' → logprob: -13.776365280151367
    7. '<|end|>' → logprob: -14.276365280151367
    8. ' ' → logprob: -14.401365280151367
    9. '   ' → logprob: -14.901365280151367
    10. '[in' → logprob: -15.401365280151367

Token 1408: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -5.836499985889532e-05
    2. ' path' → logprob: -9.7500581741333
    3. '(path' → logprob: -16.875059127807617
    4. '[path' → logprob: -17.625059127807617
    5. '   ' → logprob: -17.875059127807617
    6. ':path' → logprob: -18.750059127807617
    7. '[' → logprob: -18.875059127807617
    8. 'position' → logprob: -19.625059127807617
    9. '	path' → logprob: -19.625059127807617
    10. 'pos' → logprob: -19.625059127807617

Token 1409: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008605590090155602
    2. ':
' → logprob: -5.258605480194092
    3. '       ' → logprob: -6.508605480194092
    4. ',' → logprob: -6.758605480194092
    5. '<|end|>' → logprob: -8.13360595703125
    6. '.' → logprob: -9.50860595703125
    7. '<|end|>' → logprob: -9.50860595703125
    8. '[' → logprob: -10.13360595703125
    9. '```' → logprob: -10.13360595703125
    10. '{' → logprob: -10.50860595703125

Token 1410: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12488240748643875
    2. '       ' → logprob: -2.374882459640503
    3. '```' → logprob: -3.749882459640503
    4. '
' → logprob: -8.249882698059082
    5. 'damage' → logprob: -8.874882698059082
    6. 'tr' → logprob: -8.874882698059082
    7. 'trap' → logprob: -9.374882698059082
    8. '`' → logprob: -10.124882698059082
    9. '``' → logprob: -10.249882698059082
    10. '               ' → logprob: -10.249882698059082

Token 1411: ' damage' (ID: 10364)
  Prédit: 'damage'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'damage' (adapté à ' damage') → logprob: -0.4927464425563812
    2. 'trap' → logprob: -1.3677464723587036
    3. '       ' → logprob: -2.617746353149414
    4. '           ' → logprob: -3.617746353149414
    5. 'needed' → logprob: -3.742746353149414
    6. 'agent' → logprob: -5.242746353149414
    7. ' damage' → logprob: -6.992746353149414
    8. 'if' → logprob: -7.242746353149414
    9. ' trap' → logprob: -7.617746353149414
    10. 'd' → logprob: -7.617746353149414

Token 1412: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889430224895477
    2. '=' → logprob: -2.5788943767547607
    3. '           ' → logprob: -13.20389461517334
    4. '       ' → logprob: -13.70389461517334
    5. '   ' → logprob: -14.45389461517334
    6. '               ' → logprob: -14.95389461517334
    7. '        ' → logprob: -15.45389461517334
    8. '            ' → logprob: -16.078893661499023
    9. '    ' → logprob: -16.453893661499023
    10. '                ' → logprob: -16.703893661499023

Token 1413: ' cave' (ID: 44365)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0021853535436093807
    2. ' cave' → logprob: -6.127185344696045
    3. '```' → logprob: -16.252185821533203
    4. ' c' → logprob: -17.002185821533203
    5. 'self' → logprob: -17.127185821533203
    6. '	c' → logprob: -17.377185821533203
    7. '   ' → logprob: -17.502185821533203
    8. 'care' → logprob: -18.127185821533203
    9. 'cape' → logprob: -18.502185821533203
    10. '`' → logprob: -18.502185821533203

Token 1414: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0012409444898366928
    2. '.' → logprob: -6.7512407302856445
    3. 'get' → logprob: -10.251240730285645
    4. '_get' → logprob: -11.001240730285645
    5. '   ' → logprob: -11.626240730285645
    6. ' .' → logprob: -12.251240730285645
    7. '._' → logprob: -13.126240730285645
    8. '.
' → logprob: -13.626240730285645
    9. '_.' → logprob: -14.251240730285645
    10. '       ' → logprob: -15.001240730285645

Token 1415: '_tr' (ID: 7410)
  Prédit: '_tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tr' → logprob: -9.372294698550832e-06
    2. 'trap' → logprob: -11.750009536743164
    3. 'tr' → logprob: -13.875009536743164
    4. '_' → logprob: -15.125009536743164
    5. '```' → logprob: -16.625009536743164
    6. '(tr' → logprob: -18.125009536743164
    7. '_damage' → logprob: -18.375009536743164
    8. '(' → logprob: -18.500009536743164
    9. '`' → logprob: -19.000009536743164
    10. '_trip' → logprob: -19.000009536743164

Token 1416: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.0032335598953068256
    2. '_damage' → logprob: -6.003233432769775
    3. 'damage' → logprob: -8.503233909606934
    4. 'trap' → logprob: -9.253233909606934
    5. 'a' → logprob: -9.503233909606934
    6. '_' → logprob: -9.503233909606934
    7. '```' → logprob: -10.253233909606934
    8. '_ap' → logprob: -10.253233909606934
    9. 'aps' → logprob: -10.628233909606934
    10. '   ' → logprob: -10.628233909606934

Token 1417: '_damage' (ID: 124305)
  Prédit: '_damage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_damage' → logprob: -0.007753907237201929
    2. 'damage' → logprob: -4.882753849029541
    3. 'pos' → logprob: -9.5077543258667
    4. '_' → logprob: -11.0077543258667
    5. '_symbol' → logprob: -11.2577543258667
    6. '(pos' → logprob: -11.3827543258667
    7. '[pos' → logprob: -11.6327543258667
    8. '_pos' → logprob: -12.0077543258667
    9. 'Damage' → logprob: -12.1327543258667
    10. ' damage' → logprob: -12.6327543258667

Token 1418: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -13.00000286102295
    3. '[pos' → logprob: -14.75000286102295
    4. 'pos' → logprob: -15.00000286102295
    5. '(position' → logprob: -16.125003814697266
    6. '(
' → logprob: -17.000003814697266
    7. ',pos' → logprob: -17.375003814697266
    8. '(Pos' → logprob: -18.625003814697266
    9. ' (' → logprob: -18.750003814697266
    10. '(prev' → logprob: -19.750003814697266

Token 1419: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037696745712310076
    2. ')
' → logprob: -5.878769874572754
    3. '           ' → logprob: -7.003769874572754
    4. '()' → logprob: -10.628769874572754
    5. '())' → logprob: -11.753769874572754
    6. ' )' → logprob: -12.628769874572754
    7. '               ' → logprob: -13.003769874572754
    8. '<|end|>' → logprob: -13.003769874572754
    9. '<|end|>' → logprob: -13.253769874572754
    10. '       ' → logprob: -13.378769874572754

Token 1420: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013090482680127025
    2. '       ' → logprob: -6.751308917999268
    3. ' if' → logprob: -9.251309394836426
    4. '```' → logprob: -11.251309394836426
    5. 'if' → logprob: -11.876309394836426
    6. '   ' → logprob: -12.376309394836426
    7. '        
' → logprob: -12.376309394836426
    8. '            
' → logprob: -12.501309394836426
    9. '<|end|>' → logprob: -12.501309394836426
    10. '
' → logprob: -12.876309394836426

Token 1421: ' agent' (ID: 11793)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22567017376422882
    2. 'agent' (adapté à ' agent') → logprob: -1.8506702184677124
    3. '           ' → logprob: -3.225670099258423
    4. '       ' → logprob: -5.350670337677002
    5. ' if' → logprob: -8.475669860839844
    6. '```' → logprob: -9.100669860839844
    7. ' agent' → logprob: -9.850669860839844
    8. 'while' → logprob: -10.850669860839844
    9. '   ' → logprob: -12.225669860839844
    10. '``' → logprob: -12.725669860839844

Token 1422: '.use' (ID: 12176)
  Prédit: '.use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.use' → logprob: -0.001598175847902894
    2. '.' → logprob: -6.501598358154297
    3. 'use' → logprob: -9.626598358154297
    4. '   ' → logprob: -11.876598358154297
    5. ' .' → logprob: -12.251598358154297
    6. ' use' → logprob: -12.251598358154297
    7. '	use' → logprob: -12.751598358154297
    8. '`.' → logprob: -13.626598358154297
    9. '.us' → logprob: -13.626598358154297
    10. '"use' → logprob: -14.126598358154297

Token 1423: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -7.493430894101039e-05
    2. '_' → logprob: -9.500075340270996
    3. '_s' → logprob: -17.75007438659668
    4. 's' → logprob: -18.50007438659668
    5. '_P' → logprob: -18.62507438659668
    6. '_pro' → logprob: -19.12507438659668
    7. '```' → logprob: -19.25007438659668
    8. ')_' → logprob: -19.37507438659668
    9. '_a' → logprob: -19.75007438659668
    10. ' _' → logprob: -20.37507438659668

Token 1424: 'otions' (ID: 54764)
  Prédit: 'otions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'otions' → logprob: -0.0006373812211677432
    2. 'pot' → logprob: -7.375637531280518
    3. 't' → logprob: -13.12563705444336
    4. '_' → logprob: -13.25063705444336
    5. '
' → logprob: -13.37563705444336
    6. 'ot' → logprob: -13.50063705444336
    7. 'motions' → logprob: -14.12563705444336
    8. '

' → logprob: -14.50063705444336
    9. 'o' → logprob: -14.62563705444336
    10. '\' → logprob: -15.00063705444336

Token 1425: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.47432008385658264
    2. '(' → logprob: -0.9743200540542603
    3. '(
' → logprob: -8.724320411682129
    4. ' (' → logprob: -10.474320411682129
    5. '((' → logprob: -10.849320411682129
    6. '('' → logprob: -11.724320411682129
    7. '(max' → logprob: -11.849320411682129
    8. 'damage' → logprob: -11.974320411682129
    9. '()' → logprob: -13.099320411682129
    10. '	damage' → logprob: -13.724320411682129

Token 1426: 'amage' (ID: 22402)
  Prédit: 'amage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amage' → logprob: -7.703443770878948e-06
    2. 'am' → logprob: -13.125007629394531
    3. 'damage' → logprob: -13.125007629394531
    4. 'amaged' → logprob: -14.000007629394531
    5. 'AMAGE' → logprob: -14.500007629394531
    6. 'amag' → logprob: -15.000007629394531
    7. 'ame' → logprob: -15.125007629394531
    8. '
' → logprob: -15.250007629394531
    9. '[' → logprob: -15.750007629394531
    10. '{' → logprob: -16.00000762939453

Token 1427: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13242049515247345
    2. '           ' → logprob: -2.257420539855957
    3. '<|end|>' → logprob: -4.382420539855957
    4. ')
' → logprob: -5.757420539855957
    5. '
' → logprob: -7.132420539855957
    6. '            
' → logprob: -7.257420539855957
    7. '<|end|>' → logprob: -7.382420539855957
    8. '       ' → logprob: -7.882420539855957
    9. ' if' → logprob: -8.757420539855957
    10. ',' → logprob: -8.757420539855957

Token 1428: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005199724342674017
    2. '       ' → logprob: -5.380199909210205
    3. 'if' → logprob: -8.005199432373047
    4. ' if' → logprob: -9.130199432373047
    5. '
' → logprob: -9.755199432373047
    6. '   ' → logprob: -10.005199432373047
    7. '```' → logprob: -11.255199432373047
    8. '            
' → logprob: -11.630199432373047
    9. '        
' → logprob: -11.755199432373047
    10. '               ' → logprob: -14.005199432373047

Token 1429: ' #' (ID: 1069)
  Prédit: 'agent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'agent' → logprob: -0.013889510184526443
    2. '           ' → logprob: -4.888889312744141
    3. 'if' → logprob: -5.263889312744141
    4. '       ' → logprob: -6.888889312744141
    5. ' agent' → logprob: -10.01388931274414
    6. '```' → logprob: -11.01388931274414
    7. '   ' → logprob: -13.26388931274414
    8. '            
' → logprob: -13.51388931274414
    9. '(agent' → logprob: -13.76388931274414
    10. '
' → logprob: -14.38888931274414

Token 1430: ' take' (ID: 2304)
  Prédit: 'agent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'agent' → logprob: -0.0010512693552300334
    2. 'if' → logprob: -7.251051425933838
    3. '           ' → logprob: -8.00105094909668
    4. '       ' → logprob: -13.12605094909668
    5. ' agent' → logprob: -13.50105094909668
    6. '#' → logprob: -13.62605094909668
    7. '(agent' → logprob: -15.25105094909668
    8. '            
' → logprob: -15.75105094909668
    9. '```' → logprob: -15.87605094909668
    10. 'self' → logprob: -16.00105094909668

Token 1431: ' damage' (ID: 10364)
  Prédit: 'damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'damage' → logprob: -0.0623285211622715
    2. ' damage' → logprob: -2.812328577041626
    3. '_damage' → logprob: -8.187328338623047
    4. '	damage' → logprob: -10.437328338623047
    5. '           ' → logprob: -11.187328338623047
    6. '   ' → logprob: -11.562328338623047
    7. 'dam' → logprob: -11.687328338623047
    8. '
' → logprob: -11.937328338623047
    9. '.damage' → logprob: -12.562328338623047
    10. 'Damage' → logprob: -12.812328338623047

Token 1432: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20900140702724457
    2. 'agent' → logprob: -1.7090014219284058
    3. ' agent' → logprob: -5.459001541137695
    4. '
' → logprob: -6.209001541137695
    5. '(agent' → logprob: -7.709001541137695
    6. '```' → logprob: -7.959001541137695
    7. '       ' → logprob: -8.584001541137695
    8. '.agent' → logprob: -9.334001541137695
    9. ',' → logprob: -9.959001541137695
    10. 'if' → logprob: -10.709001541137695

Token 1433: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001259398995898664
    2. 'agent' → logprob: -6.8762593269348145
    3. '       ' → logprob: -8.501259803771973
    4. '   ' → logprob: -11.626259803771973
    5. ' agent' → logprob: -12.501259803771973
    6. '```' → logprob: -13.001259803771973
    7. 'if' → logprob: -13.126259803771973
    8. '
' → logprob: -13.626259803771973
    9. '               ' → logprob: -13.751259803771973
    10. '_agent' → logprob: -14.126259803771973

Token 1434: ' agent' (ID: 11793)
  Prédit: 'agent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agent' (adapté à ' agent') → logprob: -8.947715832618997e-05
    2. '           ' → logprob: -9.500089645385742
    3. 'if' → logprob: -11.625089645385742
    4. ' agent' → logprob: -12.250089645385742
    5. '       ' → logprob: -15.125089645385742
    6. '```' → logprob: -15.375089645385742
    7. '   ' → logprob: -16.375089645385742
    8. '            
' → logprob: -16.625089645385742
    9. '(agent' → logprob: -16.750089645385742
    10. '
' → logprob: -17.000089645385742

Token 1435: '.hp' (ID: 97958)
  Prédit: '.hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hp' → logprob: -4.8828707804204896e-05
    2. '.' → logprob: -10.000048637390137
    3. ' .' → logprob: -13.000048637390137
    4. '.hy' → logprob: -14.750048637390137
    5. '​.' → logprob: -16.250049591064453
    6. '```' → logprob: -16.500049591064453
    7. '   ' → logprob: -16.750049591064453
    8. '.hr' → logprob: -17.000049591064453
    9. '.ip' → logprob: -17.125049591064453
    10. '.
' → logprob: -17.125049591064453

Token 1436: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.27663078904151917
    2. ' -=' → logprob: -1.5266307592391968
    3. '-' → logprob: -3.9016308784484863
    4. '=' → logprob: -5.776630878448486
    5. '           ' → logprob: -7.026630878448486
    6. '```' → logprob: -9.776630401611328
    7. '            ' → logprob: -10.276630401611328
    8. '   ' → logprob: -10.276630401611328
    9. ' -' → logprob: -10.776630401611328
    10. '    ' → logprob: -11.526630401611328

Token 1437: ' damage' (ID: 10364)
  Prédit: 'damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'damage' → logprob: -1.0206720617134124e-05
    2. ' damage' → logprob: -11.50001049041748
    3. '	damage' → logprob: -16.875009536743164
    4. 'dam' → logprob: -19.125009536743164
    5. '.damage' → logprob: -20.375009536743164
    6. '_damage' → logprob: -21.375009536743164
    7. '   ' → logprob: -21.625009536743164
    8. 'Damage' → logprob: -22.000009536743164
    9. '
' → logprob: -22.625009536743164
    10. 'danger' → logprob: -22.750009536743164

Token 1438: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.2127087504486553e-05
    2. 'if' → logprob: -11.250021934509277
    3. ' if' → logprob: -11.875021934509277
    4. '       ' → logprob: -14.125021934509277
    5. '
' → logprob: -15.250021934509277
    6. '		' → logprob: -15.250021934509277
    7. ',' → logprob: -15.500021934509277
    8. '            
' → logprob: -15.750021934509277
    9. '               ' → logprob: -15.750021934509277
    10. '   ' → logprob: -16.000022888183594

Token 1439: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.0722858102526516e-05
    2. 'if' → logprob: -10.625041007995605
    3. '```' → logprob: -11.500041007995605
    4. '       ' → logprob: -12.750041007995605
    5. ' if' → logprob: -13.125041007995605
    6. '   ' → logprob: -14.125041007995605
    7. '		' → logprob: -15.625041007995605
    8. '               ' → logprob: -16.25004005432129
    9. '            
' → logprob: -16.50004005432129
    10. '
' → logprob: -16.62504005432129

Token 1440: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4745261073112488
    2. 'if' (adapté à ' if') → logprob: -0.9745261073112488
    3. ' if' → logprob: -7.7245259284973145
    4. '       ' → logprob: -12.599526405334473
    5. '   ' → logprob: -13.099526405334473
    6. '```' → logprob: -13.974526405334473
    7. '
' → logprob: -15.099526405334473
    8. '		' → logprob: -15.599526405334473
    9. '               ' → logprob: -16.099525451660156
    10. '          ' → logprob: -16.474525451660156

Token 1441: ' agent' (ID: 11793)
  Prédit: 'agent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agent' → logprob: -0.0001584850688232109
    2. ' agent' → logprob: -8.750158309936523
    3. '(agent' → logprob: -17.750158309936523
    4. '           ' → logprob: -20.500158309936523
    5. '
' → logprob: -20.625158309936523
    6. '   ' → logprob: -20.750158309936523
    7. 'self' → logprob: -20.750158309936523
    8. '.agent' → logprob: -21.125158309936523
    9. 'agency' → logprob: -21.750158309936523
    10. 'agents' → logprob: -22.875158309936523

Token 1442: '.hp' (ID: 97958)
  Prédit: '.hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hp' → logprob: -0.0002649119414854795
    2. '.' → logprob: -8.250265121459961
    3. '.
' → logprob: -13.750265121459961
    4. 'hp' → logprob: -14.250265121459961
    5. '.<' → logprob: -15.125265121459961
    6. '​.' → logprob: -15.250265121459961
    7. '.hr' → logprob: -15.500265121459961
    8. ' .' → logprob: -15.875265121459961
    9. '.hs' → logprob: -16.12526512145996
    10. '.bp' → logprob: -16.37526512145996

Token 1443: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4740857779979706
    2. '<=' → logprob: -0.974085807800293
    3. ')<=' → logprob: -12.474085807800293
    4. '>' → logprob: -13.599085807800293
    5. '```' → logprob: -14.599085807800293
    6. '==' → logprob: -14.724085807800293
    7. '<' → logprob: -14.849085807800293
    8. 'le' → logprob: -15.224085807800293
    9. ' <' → logprob: -15.224085807800293
    10. ')' → logprob: -15.224085807800293

Token 1444: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '<|end|>' → logprob: -20.250001907348633
    4. ' ' → logprob: -22.000001907348633
    5. '۰' → logprob: -22.375001907348633
    6. '   ' → logprob: -22.500001907348633
    7. '
' → logprob: -22.875001907348633
    8. '  ' → logprob: -23.500001907348633
    9. 'zero' → logprob: -23.750001907348633
    10. '[' → logprob: -24.000001907348633

Token 1445: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. 'damage' → logprob: -20.75
    4. 'zero' → logprob: -20.875
    5. 'agent' → logprob: -22.0
    6. '۰' → logprob: -22.125
    7. '<|end|>' → logprob: -22.25
    8. ' ' → logprob: -22.375
    9. '
' → logprob: -22.5
    10. '   ' → logprob: -22.625

Token 1446: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03939371556043625
    2. '               ' → logprob: -3.414393663406372
    3. ':
' → logprob: -5.789393901824951
    4. '           ' → logprob: -6.289393901824951
    5. ':return' → logprob: -7.664393901824951
    6. '.' → logprob: -8.539393424987793
    7. ',' → logprob: -10.289393424987793
    8. '                   ' → logprob: -11.164393424987793
    9. '              ' → logprob: -11.164393424987793
    10. '       ' → logprob: -11.414393424987793

Token 1447: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001979378139367327
    2. 'return' → logprob: -9.125198364257812
    3. ' return' → logprob: -9.625198364257812
    4. '           ' → logprob: -11.625198364257812
    5. '                   ' → logprob: -12.000198364257812
    6. '                
' → logprob: -13.250198364257812
    7. '```' → logprob: -13.500198364257812
    8. '              ' → logprob: -13.875198364257812
    9. '	           ' → logprob: -14.125198364257812
    10. '                       ' → logprob: -14.625198364257812

Token 1448: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02841901406645775
    2. ' return' → logprob: -3.778419017791748
    3. '                   ' → logprob: -6.028419017791748
    4. '               ' → logprob: -6.028419017791748
    5. '           ' → logprob: -8.02841854095459
    6. '   ' → logprob: -11.52841854095459
    7. '	return' → logprob: -12.77841854095459
    8. '                       ' → logprob: -13.52841854095459
    9. '
' → logprob: -14.52841854095459
    10. '       ' → logprob: -14.77841854095459

Token 1449: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.11476451903581619
    2. ''' → logprob: -2.239764451980591
    3. '"No' → logprob: -6.86476469039917
    4. ''D' → logprob: -8.989764213562012
    5. '"'' → logprob: -9.364764213562012
    6. '   ' → logprob: -9.489764213562012
    7. '"L' → logprob: -9.489764213562012
    8. ''S' → logprob: -9.739764213562012
    9. '"B' → logprob: -9.739764213562012
    10. ''"' → logprob: -9.989764213562012

Token 1450: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.7197538018226624
    2. 'DE' → logprob: -1.0947537422180176
    3. '"' → logprob: -2.7197537422180176
    4. 'LOSE' → logprob: -3.7197537422180176
    5. 'No' → logprob: -3.9697537422180176
    6. 'IMP' → logprob: -4.719753742218018
    7. 'Dead' → logprob: -4.844753742218018
    8. 'Impossible' → logprob: -5.219753742218018
    9. 'D' → logprob: -5.344753742218018
    10. 'IN' → logprob: -5.469753742218018

Token 1451: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0686563029885292
    2. '"
' → logprob: -3.1936562061309814
    3. '\n' → logprob: -3.6936562061309814
    4. '"\' → logprob: -7.9436564445495605
    5. '"
' → logprob: -9.818655967712402
    6. '"`
' → logprob: -11.443655967712402
    7. '\' → logprob: -11.443655967712402
    8. '"#' → logprob: -13.193655967712402
    9. '\r' → logprob: -13.693655967712402
    10. '")' → logprob: -13.818655967712402

Token 1452: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022368213103618473
    2. '        
' → logprob: -9.000224113464355
    3. '
' → logprob: -9.500224113464355
    4. 'return' → logprob: -11.375224113464355
    5. '```' → logprob: -12.500224113464355
    6. '    
' → logprob: -12.875224113464355
    7. '<|end|>' → logprob: -13.250224113464355
    8. ' return' → logprob: -13.375224113464355
    9. '   ' → logprob: -14.250224113464355
    10. '      ' → logprob: -14.375224113464355

Token 1453: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12704075872898102
    2. 'return' (adapté à ' return') → logprob: -2.1270408630371094
    3. ' return' → logprob: -9.50204086303711
    4. '   ' → logprob: -11.50204086303711
    5. '```' → logprob: -11.50204086303711
    6. '
' → logprob: -11.75204086303711
    7. '	return' → logprob: -11.87704086303711
    8. '{return' → logprob: -13.87704086303711
    9. ')return' → logprob: -15.12704086303711
    10. '`' → logprob: -15.12704086303711

Token 1454: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005246329586952925
    2. ' "' → logprob: -5.255246162414551
    3. ''' → logprob: -11.63024616241455
    4. '   ' → logprob: -13.63024616241455
    5. '"No' → logprob: -14.00524616241455
    6. '
' → logprob: -14.38024616241455
    7. '("' → logprob: -15.13024616241455
    8. '"I' → logprob: -15.13024616241455
    9. '    
' → logprob: -16.130247116088867
    10. '        
' → logprob: -16.380247116088867

Token 1455: 'YES' (ID: 31958)
  Prédit: 'YES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.018152514472603798
    2. '"' → logprob: -4.018152713775635
    3. ''' → logprob: -13.643152236938477
    4. 'Yes' → logprob: -14.268152236938477
    5. '"""' → logprob: -15.768152236938477
    6. 'OK' → logprob: -16.018152236938477
    7. '
' → logprob: -16.143152236938477
    8. '`' → logprob: -16.268152236938477
    9. '""' → logprob: -16.643152236938477
    10. '"
' → logprob: -16.768152236938477

Token 1456: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.35268428921699524
    2. '<|end|>' → logprob: -1.8526842594146729
    3. '
' → logprob: -2.477684259414673
    4. '\n' → logprob: -3.102684259414673
    5. ')' → logprob: -4.727684497833252
    6. '```' → logprob: -6.477684497833252
    7. '")' → logprob: -7.852684497833252
    8. '<|end|>' → logprob: -8.602684020996094
    9. '"""' → logprob: -9.102684020996094
    10. '">' → logprob: -9.727684020996094

Token 1457: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.028271272778511047
    2. '   ' → logprob: -4.278271198272705
    3. '<|end|>' → logprob: -4.403271198272705
    4. ' def' → logprob: -6.903271198272705
    5. '```' → logprob: -7.653271198272705
    6. '#' → logprob: -9.028271675109863
    7. '	def' → logprob: -9.653271675109863
    8. '<|end|>' → logprob: -9.903271675109863
    9. ')' → logprob: -11.403271675109863
    10. '    
' → logprob: -11.778271675109863

Token 1458: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.014517332427203655
    2. '   ' → logprob: -4.264517307281494
    3. ' def' → logprob: -8.764517784118652
    4. '<|end|>' → logprob: -8.889517784118652
    5. '	def' → logprob: -10.139517784118652
    6. '```' → logprob: -11.264517784118652
    7. '
' → logprob: -12.764517784118652
    8. '    
' → logprob: -13.514517784118652
    9. ' ' → logprob: -14.639517784118652
    10. '       ' → logprob: -14.764517784118652

Token 1459: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.09508829563856125
    2. 'def' → logprob: -2.595088243484497
    3. ' run' → logprob: -4.595088481903076
    4. 'solve' → logprob: -5.595088481903076
    5. 'main' → logprob: -6.345088481903076
    6. 'process' → logprob: -8.345088005065918
    7. ' def' → logprob: -8.970088005065918
    8. '_run' → logprob: -9.845088005065918
    9. ' main' → logprob: -9.970088005065918
    10. ' solve' → logprob: -11.095088005065918

Token 1460: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0012092802207916975
    2. '(
' → logprob: -7.376209259033203
    3. '   ' → logprob: -8.001209259033203
    4. '(' → logprob: -8.376209259033203
    5. '       ' → logprob: -11.876209259033203
    6. 'self' → logprob: -12.126209259033203
    7. 'def' → logprob: -13.501209259033203
    8. '_' → logprob: -13.876209259033203
    9. '```' → logprob: -14.501209259033203
    10. '():
' → logprob: -14.876209259033203

Token 1461: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.8550992608070374
    2. '):' → logprob: -0.9800992608070374
    3. '):
' → logprob: -1.8550992012023926
    4. 'self' → logprob: -4.105099201202393
    5. ',' → logprob: -4.730099201202393
    6. '   ' → logprob: -5.105099201202393
    7. ')' → logprob: -5.230099201202393
    8. '       ' → logprob: -6.480099201202393
    9. ')(' → logprob: -6.480099201202393
    10. '_' → logprob: -7.105099201202393

Token 1462: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006027150084264576
    2. '   ' → logprob: -7.875602722167969
    3. '```' → logprob: -9.375602722167969
    4. 'input' → logprob: -9.625602722167969
    5. 'self' → logprob: -10.875602722167969
    6. '           ' → logprob: -11.500602722167969
    7. '	' → logprob: -11.750602722167969
    8. 'def' → logprob: -11.750602722167969
    9. 'line' → logprob: -12.875602722167969
    10. '      ' → logprob: -13.000602722167969

Token 1463: ' import' (ID: 1588)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9080567359924316
    2. 'input' → logprob: -1.4080567359924316
    3. '       ' → logprob: -1.7830567359924316
    4. ' for' → logprob: -2.7830567359924316
    5. 'while' → logprob: -2.7830567359924316
    6. '```' → logprob: -3.6580567359924316
    7. '
' → logprob: -4.408056735992432
    8. ' input' → logprob: -4.408056735992432
    9. ' while' → logprob: -5.408056735992432
    10. '   ' → logprob: -6.408056735992432

Token 1464: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.676292231422849e-05
    2. ' sys' → logprob: -11.000017166137695
    3. '=sys' → logprob: -18.250017166137695
    4. '
' → logprob: -18.625017166137695
    5. '	sys' → logprob: -19.000017166137695
    6. '   ' → logprob: -20.375017166137695
    7. 'stdin' → logprob: -20.625017166137695
    8. '```' → logprob: -21.000017166137695
    9. 'io' → logprob: -21.375017166137695
    10. '_sys' → logprob: -21.875017166137695

Token 1465: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07062292844057083
    2. '
' → logprob: -2.8206229209899902
    3. '        
' → logprob: -5.82062292098999
    4. 'input' → logprob: -6.07062292098999
    5. 'for' → logprob: -6.07062292098999
    6. ' for' → logprob: -7.82062292098999
    7. '```' → logprob: -8.320623397827148
    8. ' lines' → logprob: -8.945623397827148
    9. '   ' → logprob: -9.445623397827148
    10. 'line' → logprob: -10.445623397827148

Token 1466: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17249609529972076
    2. 'input' → logprob: -3.0474960803985596
    3. '```' → logprob: -3.0474960803985596
    4. ' lines' → logprob: -3.5474960803985596
    5. 'for' → logprob: -4.297496318817139
    6. 'lines' → logprob: -4.547496318817139
    7. ' for' → logprob: -5.547496318817139
    8. ' input' → logprob: -6.172496318817139
    9. '   ' → logprob: -6.422496318817139
    10. 'line' → logprob: -6.922496318817139

Token 1467: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.28984424471855164
    2. 'for' → logprob: -1.789844274520874
    3. '       ' → logprob: -2.789844274520874
    4. 'lines' → logprob: -4.289844036102295
    5. ' for' → logprob: -5.539844036102295
    6. ' input' → logprob: -5.664844036102295
    7. ' lines' → logprob: -6.289844036102295
    8. '```' → logprob: -9.164844512939453
    9. 'line' → logprob: -9.289844512939453
    10. '   ' → logprob: -11.164844512939453

Token 1468: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.007443463429808617
    2. '_line' → logprob: -5.632443428039551
    3. '_' → logprob: -6.382443428039551
    4. '()' → logprob: -7.007443428039551
    5. ' =' → logprob: -7.257443428039551
    6. '()
' → logprob: -8.88244342803955
    7. '_iterator' → logprob: -9.13244342803955
    8. '_iter' → logprob: -9.50744342803955
    9. '=' → logprob: -9.75744342803955
    10. '_data' → logprob: -10.00744342803955

Token 1469: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1427389234304428
    2. ' =' → logprob: -2.0177388191223145
    3. '=input' → logprob: -11.142739295959473
    4. '   ' → logprob: -11.642739295959473
    5. '_iter' → logprob: -11.892739295959473
    6. '=
' → logprob: -12.142739295959473
    7. '_=' → logprob: -12.392739295959473
    8. '       ' → logprob: -12.517739295959473
    9. '=sys' → logprob: -12.892739295959473
    10. '_iterator' → logprob: -12.892739295959473

Token 1470: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.2770234942436218
    2. 'sys' → logprob: -1.6520235538482666
    3. '(iter' → logprob: -3.7770235538482666
    4. '(sys' → logprob: -3.9020235538482666
    5. ' iter' → logprob: -5.0270233154296875
    6. '   ' → logprob: -8.277023315429688
    7. ' sys' → logprob: -9.027023315429688
    8. 'line' → logprob: -9.152023315429688
    9. ' (' → logprob: -9.402023315429688
    10. 'map' → logprob: -10.152023315429688

Token 1471: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0010393599513918161
    2. '(input' → logprob: -7.001039505004883
    3. 'sys' → logprob: -9.876039505004883
    4. '(' → logprob: -10.626039505004883
    5. '(list' → logprob: -11.501039505004883
    6. '(System' → logprob: -11.626039505004883
    7. 'input' → logprob: -12.126039505004883
    8. '()' → logprob: -12.376039505004883
    9. '(lambda' → logprob: -12.751039505004883
    10. '(system' → logprob: -12.876039505004883

Token 1472: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -8.2994620242971e-06
    2. '.stdout' → logprob: -12.750008583068848
    3. '.argv' → logprob: -12.875008583068848
    4. 'stdin' → logprob: -13.000008583068848
    5. '.std' → logprob: -15.500008583068848
    6. '
' → logprob: -16.00000762939453
    7. '.' → logprob: -16.37500762939453
    8. ' stdin' → logprob: -17.00000762939453
    9. '(stdin' → logprob: -17.12500762939453
    10. ' .' → logprob: -17.12500762939453

Token 1473: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.03466423973441124
    2. ')' → logprob: -4.034664154052734
    3. ')
' → logprob: -4.409664154052734
    4. '.readlines' → logprob: -5.534664154052734
    5. '())
' → logprob: -8.659664154052734
    6. '())' → logprob: -9.784664154052734
    7. '   ' → logprob: -11.284664154052734
    8. '.read' → logprob: -11.784664154052734
    9. '().' → logprob: -11.909664154052734
    10. '()
' → logprob: -12.409664154052734

Token 1474: ',' (ID: 11)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.23982998728752136
    2. '())
' → logprob: -1.8648300170898438
    3. ')' → logprob: -2.9898300170898438
    4. '()' → logprob: -5.239830017089844
    5. ')
' → logprob: -6.114830017089844
    6. '())

' → logprob: -8.114830017089844
    7. '().' → logprob: -9.364830017089844
    8. '()
' → logprob: -10.364830017089844
    9. 's' → logprob: -10.614830017089844
    10. '(' → logprob: -11.364830017089844

Token 1475: ' '')
' (ID: 53215)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.008746467530727386
    2. '"' → logprob: -4.75874662399292
    3. ''\' → logprob: -9.633746147155762
    4. '''' → logprob: -9.758746147155762
    5. '''
' → logprob: -11.883746147155762
    6. '""' → logprob: -14.133746147155762
    7. ' '')' → logprob: -14.258746147155762
    8. ''',' → logprob: -15.633746147155762
    9. ' '')
' → logprob: -16.133747100830078
    10. '"\' → logprob: -16.508747100830078

Token 1476: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018816311785485595
    2. 'while' → logprob: -9.750187873840332
    3. '   ' → logprob: -9.875187873840332
    4. '        
' → logprob: -10.375187873840332
    5. '```' → logprob: -11.625187873840332
    6. '           ' → logprob: -11.625187873840332
    7. '
' → logprob: -11.750187873840332
    8. ' while' → logprob: -12.125187873840332
    9. '	' → logprob: -12.375187873840332
    10. '<|end|>' → logprob: -13.500187873840332

Token 1477: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008930440060794353
    2. 'while' → logprob: -4.883930206298828
    3. ' while' → logprob: -7.258930206298828
    4. 'for' → logprob: -8.008930206298828
    5. '
' → logprob: -9.883930206298828
    6. ' for' → logprob: -10.008930206298828
    7. '        
' → logprob: -10.133930206298828
    8. '   ' → logprob: -10.133930206298828
    9. '```' → logprob: -10.133930206298828
    10. 'next' → logprob: -10.883930206298828

Token 1478: ' Python' (ID: 26534)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4757942259311676
    2. 'while' → logprob: -0.9757941961288452
    3. 'for' → logprob: -6.725794315338135
    4. ' while' → logprob: -7.725794315338135
    5. '   ' → logprob: -9.850793838500977
    6. 'line' → logprob: -11.475793838500977
    7. 'try' → logprob: -12.850793838500977
    8. ' for' → logprob: -13.100793838500977
    9. '
' → logprob: -13.475793838500977
    10. '```' → logprob: -13.475793838500977

Token 1479: ' readline' (ID: 179561)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20662842690944672
    2. '
' → logprob: -1.831628441810608
    3. 'def' → logprob: -4.831628322601318
    4. 'while' → logprob: -4.956628322601318
    5. 'for' → logprob: -5.456628322601318
    6. '   ' → logprob: -5.456628322601318
    7. '        
' → logprob: -6.331628322601318
    8. ' for' → logprob: -7.831628322601318
    9. 'import' → logprob: -8.456628799438477
    10. ' while' → logprob: -8.831628799438477

Token 1480: ' iterator' (ID: 30787)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48182937502861023
    2. '()' → logprob: -1.1068294048309326
    3. '()
' → logprob: -3.1068294048309326
    4. ':' → logprob: -7.1068291664123535
    5. '   ' → logprob: -7.1068291664123535
    6. '        
' → logprob: -7.3568291664123535
    7. 'for' → logprob: -7.3568291664123535
    8. '
' → logprob: -7.3568291664123535
    9. ' for' → logprob: -7.4818291664123535
    10. '():
' → logprob: -8.231829643249512

Token 1481: ' stops' (ID: 29924)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014104148373007774
    2. 'for' → logprob: -4.76410436630249
    3. ' for' → logprob: -6.13910436630249
    4. ':' → logprob: -6.63910436630249
    5. 'while' → logprob: -7.51410436630249
    6. '()' → logprob: -8.389103889465332
    7. '   ' → logprob: -8.639103889465332
    8. ':
' → logprob: -8.639103889465332
    9. '```' → logprob: -8.889103889465332
    10. '        
' → logprob: -8.889103889465332

Token 1482: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06499304622411728
    2. 'for' → logprob: -3.314993143081665
    3. ' for' → logprob: -4.939992904663086
    4. ' at' → logprob: -5.439992904663086
    5. 'while' → logprob: -5.689992904663086
    6. 'with' → logprob: -6.314992904663086
    7. 'at' → logprob: -6.314992904663086
    8. '
' → logprob: -6.439992904663086
    9. ' after' → logprob: -6.939992904663086
    10. 'after' → logprob: -7.064992904663086

Token 1483: ' ''' (ID: 8686)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.008446375839412212
    2. '''
' → logprob: -5.633446216583252
    3. ''' → logprob: -6.008446216583252
    4. ''\' → logprob: -6.383446216583252
    5. 'EOF' → logprob: -8.38344669342041
    6. '""' → logprob: -8.50844669342041
    7. ' ''' → logprob: -9.63344669342041
    8. '\n' → logprob: -10.00844669342041
    9. ''',' → logprob: -10.13344669342041
    10. '"' → logprob: -11.13344669342041

Token 1484: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019757419358938932
    2. '
' → logprob: -7.1269755363464355
    3. ',' → logprob: -7.8769755363464355
    4. ' for' → logprob: -8.501976013183594
    5. 'while' → logprob: -8.751976013183594
    6. ' while' → logprob: -8.876976013183594
    7. '        
' → logprob: -9.501976013183594
    8. 'for' → logprob: -9.751976013183594
    9. '.' → logprob: -9.876976013183594
    10. '           ' → logprob: -11.001976013183594

Token 1485: 'empty' (ID: 6857)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9647783637046814
    2. ''\' → logprob: -1.2147784233093262
    3. ')' → logprob: -1.4647784233093262
    4. '')' → logprob: -3.089778423309326
    5. ''' → logprob: -3.464778423309326
    6. '''' → logprob: -4.964778423309326
    7. ')
' → logprob: -6.339778423309326
    8. 'EOF' → logprob: -6.464778423309326
    9. '('\' → logprob: -7.214778423309326
    10. '
' → logprob: -7.214778423309326

Token 1486: '),' (ID: 936)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.05402396619319916
    2. 'line' → logprob: -3.0540239810943604
    3. ' string' → logprob: -5.554023742675781
    4. ' line' → logprob: -6.804023742675781
    5. ')' → logprob: -8.679023742675781
    6. '
' → logprob: -9.429023742675781
    7. '')' → logprob: -9.679023742675781
    8. ' lines' → logprob: -10.304023742675781
    9. '''' → logprob: -10.429023742675781
    10. 'strings' → logprob: -10.929023742675781

Token 1487: ' not' (ID: 625)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003151100128889084
    2. 'while' → logprob: -6.253150939941406
    3. 'for' → logprob: -7.128150939941406
    4. '
' → logprob: -9.003150939941406
    5. ' while' → logprob: -9.128150939941406
    6. ' for' → logprob: -9.378150939941406
    7. '           ' → logprob: -10.628150939941406
    8. '   ' → logprob: -10.753150939941406
    9. '#' → logprob: -11.003150939941406
    10. '        
' → logprob: -11.128150939941406

Token 1488: ' at' (ID: 540)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.8633841276168823
    2. 'EOF' → logprob: -1.6133841276168823
    3. 'at' → logprob: -1.7383841276168823
    4. ''\' → logprob: -2.488384246826172
    5. 'Stop' → logprob: -3.113384246826172
    6. '\n' → logprob: -3.613384246826172
    7. ' at' → logprob: -4.613384246826172
    8. 'stop' → logprob: -4.738384246826172
    9. 'strip' → logprob: -4.863384246826172
    10. 'necessarily' → logprob: -4.863384246826172

Token 1489: ' EOF' (ID: 72412)
  Prédit: 'EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'EOF' → logprob: -0.33125728368759155
    2. ''' → logprob: -1.7062573432922363
    3. ''\' → logprob: -2.4562573432922363
    4. 'None' → logprob: -4.831257343292236
    5. '0' → logprob: -6.706257343292236
    6. 'newline' → logprob: -6.956257343292236
    7. 'line' → logprob: -7.206257343292236
    8. '\n' → logprob: -7.331257343292236
    9. 'end' → logprob: -7.831257343292236
    10. ''end' → logprob: -8.081256866455078

Token 1490: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007294843439012766
    2. 'while' → logprob: -5.007294654846191
    3. '```' → logprob: -8.257294654846191
    4. ' while' → logprob: -8.507294654846191
    5. 'for' → logprob: -9.382294654846191
    6. '
' → logprob: -11.382294654846191
    7. ' for' → logprob: -12.132294654846191
    8. '   ' → logprob: -12.382294654846191
    9. '           ' → logprob: -13.132294654846191
    10. ',' → logprob: -13.132294654846191

Token 1491: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002223056508228183
    2. 'while' → logprob: -6.752223014831543
    3. 'for' → logprob: -7.252223014831543
    4. '
' → logprob: -8.877223014831543
    5. ' for' → logprob: -10.002223014831543
    6. '#' → logprob: -10.127223014831543
    7. ' while' → logprob: -10.502223014831543
    8. 'import' → logprob: -10.752223014831543
    9. '```' → logprob: -10.752223014831543
    10. '           ' → logprob: -11.377223014831543

Token 1492: ' wrap' (ID: 20404)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45883795619010925
    2. '       ' → logprob: -1.3338379859924316
    3. 'while' → logprob: -2.3338379859924316
    4. ' for' → logprob: -5.333837985992432
    5. 'import' → logprob: -6.208837985992432
    6. '
' → logprob: -7.708837985992432
    7. ' while' → logprob: -8.583837509155273
    8. 'try' → logprob: -10.083837509155273
    9. '#' → logprob: -10.833837509155273
    10. '        
' → logprob: -11.083837509155273

Token 1493: ' input' (ID: 3422)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2509240508079529
    2. 'try' → logprob: -2.3759241104125977
    3. 'for' → logprob: -2.7509241104125977
    4. 'while' → logprob: -2.8759241104125977
    5. ' for' → logprob: -5.375924110412598
    6. 'import' → logprob: -6.875924110412598
    7. ' while' → logprob: -6.875924110412598
    8. 'def' → logprob: -7.500924110412598
    9. '
' → logprob: -8.000924110412598
    10. 'class' → logprob: -8.125924110412598

Token 1494: '
' (ID: 198)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.7742689251899719
    2. '       ' → logprob: -1.1492688655853271
    3. ' =' → logprob: -3.149268865585327
    4. '   ' → logprob: -3.274268865585327
    5. '()' → logprob: -3.649268865585327
    6. '=' → logprob: -3.649268865585327
    7. 'def' → logprob: -3.774268865585327
    8. 'for' → logprob: -3.774268865585327
    9. '()
' → logprob: -4.149269104003906
    10. 'import' → logprob: -4.774269104003906

Token 1495: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016841089818626642
    2. 'for' → logprob: -7.001684188842773
    3. ' for' → logprob: -7.501684188842773
    4. '```' → logprob: -9.501684188842773
    5. '   ' → logprob: -10.001684188842773
    6. 'while' → logprob: -10.626684188842773
    7. ',' → logprob: -11.251684188842773
    8. ':' → logprob: -11.251684188842773
    9. ')' → logprob: -11.626684188842773
    10. '        
' → logprob: -11.626684188842773

Token 1496: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4726150631904602
    2. 'while' → logprob: -1.3476150035858154
    3. 'for' → logprob: -2.2226150035858154
    4. ' for' → logprob: -5.7226152420043945
    5. ' while' → logprob: -5.7226152420043945
    6. '```' → logprob: -6.7226152420043945
    7. '   ' → logprob: -8.472615242004395
    8. 'line' → logprob: -8.847615242004395
    9. 'try' → logprob: -9.222615242004395
    10. 'def' → logprob: -9.722615242004395

Token 1497: ' We'll' (ID: 46830)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13464929163455963
    2. 'while' → logprob: -2.5096492767333984
    3. '       ' → logprob: -3.1346492767333984
    4. 'try' → logprob: -7.259649276733398
    5. 'import' → logprob: -8.509649276733398
    6. ' for' → logprob: -9.009649276733398
    7. 'line' → logprob: -10.009649276733398
    8. '
' → logprob: -10.009649276733398
    9. 'def' → logprob: -11.009649276733398
    10. ' while' → logprob: -11.509649276733398

Token 1498: ' use' (ID: 1199)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6089884638786316
    2. 'import' → logprob: -1.1089885234832764
    3. '
' → logprob: -3.2339885234832764
    4. 'while' → logprob: -3.7339885234832764
    5. '       ' → logprob: -4.108988285064697
    6. '   ' → logprob: -4.233988285064697
    7. ' for' → logprob: -4.358988285064697
    8. 'try' → logprob: -4.858988285064697
    9. 'def' → logprob: -5.483988285064697
    10. 'continue' → logprob: -6.483988285064697

Token 1499: ' sys' (ID: 12228)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5504329800605774
    2. 'self' → logprob: -1.8004329204559326
    3. 'iter' → logprob: -2.3004329204559326
    4. 'list' → logprob: -2.6754329204559326
    5. 'input' → logprob: -3.6754329204559326
    6. 'next' → logprob: -3.8004329204559326
    7. 'while' → logprob: -4.925433158874512
    8. 'map' → logprob: -5.175433158874512
    9. 'sys' → logprob: -5.175433158874512
    10. 'line' → logprob: -5.175433158874512

Token 1500: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.3935887813568115
    2. 'stdin' → logprob: -1.1435887813568115
    3. '
' → logprob: -5.268589019775391
    4. 'import' → logprob: -6.768589019775391
    5. '   ' → logprob: -8.89358901977539
    6. 'std' → logprob: -9.76858901977539
    7. 'for' → logprob: -9.76858901977539
    8. '.stdout' → logprob: -10.01858901977539
    9. 'stdout' → logprob: -10.14358901977539
    10. 'input' → logprob: -11.51858901977539

Token 1501: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2703419625759125
    2. 'for' → logprob: -2.7703418731689453
    3. 'def' → logprob: -3.0203418731689453
    4. 'import' → logprob: -3.6453418731689453
    5. '.readline' → logprob: -3.6453418731689453
    6. ' for' → logprob: -4.395341873168945
    7. '   ' → logprob: -4.395341873168945
    8. ' =' → logprob: -4.520341873168945
    9. ':' → logprob: -4.895341873168945
    10. '
' → logprob: -5.520341873168945

Token 1502: ' iterable' (ID: 113880)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.6891099214553833
    2. 'input' → logprob: -0.8141099214553833
    3. 'sys' → logprob: -3.3141098022460938
    4. 'line' → logprob: -4.814109802246094
    5. 'list' → logprob: -5.064109802246094
    6. 'map' → logprob: -6.564109802246094
    7. '
' → logprob: -7.189109802246094
    8. 'iterator' → logprob: -7.439109802246094
    9. 'import' → logprob: -8.189109802246094
    10. 'lines' → logprob: -8.564109802246094

Token 1503: ' lines' (ID: 8698)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05496939644217491
    2. 'for' → logprob: -3.179969310760498
    3. ' for' → logprob: -4.554969310760498
    4. 'while' → logprob: -7.429969310760498
    5. '```' → logprob: -8.429969787597656
    6. ',' → logprob: -8.679969787597656
    7. 'import' → logprob: -8.929969787597656
    8. ' while' → logprob: -9.929969787597656
    9. '
' → logprob: -10.304969787597656
    10. '        
' → logprob: -10.429969787597656

Token 1504: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008539431728422642
    2. '```' → logprob: -8.125853538513184
    3. 'for' → logprob: -8.250853538513184
    4. ' for' → logprob: -8.750853538513184
    5. 'while' → logprob: -9.875853538513184
    6. '
' → logprob: -10.375853538513184
    7. ' while' → logprob: -11.250853538513184
    8. '        
' → logprob: -11.625853538513184
    9. ',' → logprob: -11.750853538513184
    10. '   ' → logprob: -12.125853538513184

Token 1505: ' stopping' (ID: 36616)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028471270576119423
    2. 'for' → logprob: -4.15347146987915
    3. ' for' → logprob: -4.90347146987915
    4. 'while' → logprob: -5.77847146987915
    5. '
' → logprob: -6.77847146987915
    6. ' while' → logprob: -7.52847146987915
    7. 'import' → logprob: -9.653470993041992
    8. '   ' → logprob: -10.528470993041992
    9. '        
' → logprob: -11.153470993041992
    10. '```' → logprob: -11.153470993041992

Token 1506: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0514901876449585
    2. 'at' → logprob: -1.4264901876449585
    3. ' at' → logprob: -1.4264901876449585
    4. 'for' → logprob: -2.301490306854248
    5. 'with' → logprob: -3.551490306854248
    6. ' for' → logprob: -4.926490306854248
    7. 'while' → logprob: -5.176490306854248
    8. ':' → logprob: -5.676490306854248
    9. '```' → logprob: -5.676490306854248
    10. '   ' → logprob: -5.676490306854248

Token 1507: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.24031607806682587
    2. '''' → logprob: -1.9903160333633423
    3. ''\' → logprob: -4.365315914154053
    4. 'EOF' → logprob: -4.490315914154053
    5. '"' → logprob: -4.615315914154053
    6. 'line' → logprob: -4.865315914154053
    7. 'import' → logprob: -5.615315914154053
    8. '''
' → logprob: -5.865315914154053
    9. '(' → logprob: -5.990315914154053
    10. '('' → logprob: -5.990315914154053

Token 1508: '0' (ID: 15)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.42809349298477173
    2. '0' → logprob: -1.303093433380127
    3. '\n' → logprob: -3.053093433380127
    4. ''' → logprob: -5.053093433380127
    5. '```' → logprob: -5.428093433380127
    6. 'def' → logprob: -5.928093433380127
    7. '"\' → logprob: -6.178093433380127
    8. '"""' → logprob: -6.178093433380127
    9. 'EOF' → logprob: -6.303093433380127
    10. '"
' → logprob: -6.678093433380127

Token 1509: ' ' (ID: 220)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.413968950510025
    2. ' ' → logprob: -1.2889689207077026
    3. '"' → logprob: -3.288969039916992
    4. ' ")' → logprob: -4.538969039916992
    5. '   ' → logprob: -5.038969039916992
    6. ' "
' → logprob: -5.163969039916992
    7. '0' → logprob: -6.538969039916992
    8. '")' → logprob: -7.913969039916992
    9. '  ' → logprob: -8.163969039916992
    10. ' ",' → logprob: -8.413969039916992

Token 1510: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03366518020629883
    2. ' ' → logprob: -3.408665180206299
    3. '
' → logprob: -11.65866470336914
    4. '"' → logprob: -12.15866470336914
    5. '<|end|>' → logprob: -13.65866470336914
    6. '<|end|>' → logprob: -13.78366470336914
    7. '```' → logprob: -14.53366470336914
    8. ' ' → logprob: -14.65866470336914
    9. '   ' → logprob: -15.15866470336914
    10. '  ' → logprob: -15.15866470336914

Token 1511: '"

' (ID: 2678)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.15034930408000946
    2. '"
' → logprob: -2.1503493785858154
    3. '"' → logprob: -3.9003493785858154
    4. '
' → logprob: -7.025349140167236
    5. '":
' → logprob: -8.150349617004395
    6. '")' → logprob: -8.400349617004395
    7. ''
' → logprob: -8.525349617004395
    8. '```' → logprob: -8.900349617004395
    9. ')"
' → logprob: -8.900349617004395
    10. '   ' → logprob: -9.025349617004395

Token 1512: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.500108141452074e-05
    2. 'for' → logprob: -11.750035285949707
    3. '```' → logprob: -11.750035285949707
    4. '   ' → logprob: -12.000035285949707
    5. ' for' → logprob: -12.375035285949707
    6. 'while' → logprob: -12.500035285949707
    7. '           ' → logprob: -13.375035285949707
    8. ' while' → logprob: -13.500035285949707
    9. '        
' → logprob: -14.125035285949707
    10. ',' → logprob: -15.250035285949707

Token 1513: ' lines' (ID: 8698)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5655726194381714
    2. 'while' → logprob: -1.3155726194381714
    3. 'for' → logprob: -1.8155726194381714
    4. ' while' → logprob: -7.690572738647461
    5. ' for' → logprob: -7.940572738647461
    6. 'line' → logprob: -10.315572738647461
    7. '   ' → logprob: -10.315572738647461
    8. '```' → logprob: -12.065572738647461
    9. 'import' → logprob: -12.565572738647461
    10. 'def' → logprob: -12.815572738647461

Token 1514: '_buffer' (ID: 17892)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3218090236186981
    2. ' =' → logprob: -1.3218090534210205
    3. '   ' → logprob: -5.446808815002441
    4. '       ' → logprob: -6.071808815002441
    5. 'for' → logprob: -6.571808815002441
    6. '_iter' → logprob: -9.321808815002441
    7. '_iterator' → logprob: -9.571808815002441
    8. '    ' → logprob: -9.696808815002441
    9. '=[]' → logprob: -9.821808815002441
    10. '=
' → logprob: -10.071808815002441

Token 1515: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6361499428749084
    2. ' =' → logprob: -0.7611499428749084
    3. '=[]' → logprob: -5.761149883270264
    4. '.append' → logprob: -9.011150360107422
    5. '=[]
' → logprob: -9.386150360107422
    6. '   ' → logprob: -9.511150360107422
    7. '       ' → logprob: -11.011150360107422
    8. ',' → logprob: -11.386150360107422
    9. ':' → logprob: -11.511150360107422
    10. '.extend' → logprob: -11.761150360107422

Token 1516: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03526639938354492
    2. '[]
' → logprob: -3.410266399383545
    3. ' []' → logprob: -7.160266399383545
    4. '[' → logprob: -7.285266399383545
    5. 'sys' → logprob: -9.785266876220703
    6. '   ' → logprob: -10.785266876220703
    7. '[]

' → logprob: -11.035266876220703
    8. '[
' → logprob: -11.160266876220703
    9. '[line' → logprob: -11.910266876220703
    10. ' []
' → logprob: -12.035266876220703

Token 1517: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008268333040177822
    2. 'while' → logprob: -5.258268356323242
    3. 'for' → logprob: -6.633268356323242
    4. ' while' → logprob: -7.383268356323242
    5. ' for' → logprob: -7.508268356323242
    6. '```' → logprob: -8.008268356323242
    7. '   ' → logprob: -9.258268356323242
    8. '           ' → logprob: -9.508268356323242
    9. '`' → logprob: -11.258268356323242
    10. ',' → logprob: -11.758268356323242

Token 1518: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.05775124952197075
    2. 'while' → logprob: -3.057751178741455
    3. '       ' → logprob: -4.807751178741455
    4. ' for' → logprob: -7.432751178741455
    5. 'line' → logprob: -8.557751655578613
    6. 'try' → logprob: -9.432751655578613
    7. '
' → logprob: -9.807751655578613
    8. ' while' → logprob: -10.682751655578613
    9. '   ' → logprob: -11.807751655578613
    10. 'import' → logprob: -13.057751655578613

Token 1519: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0015043864259496331
    2. ' line' → logprob: -6.501504421234131
    3. '_line' → logprob: -13.251503944396973
    4. '	line' → logprob: -15.626503944396973
    5. '(line' → logprob: -16.62650489807129
    6. '[line' → logprob: -17.75150489807129
    7. '=line' → logprob: -18.12650489807129
    8. 'lin' → logprob: -18.12650489807129
    9. 'input' → logprob: -18.75150489807129
    10. 'raw' → logprob: -18.87650489807129

Token 1520: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0004108924185857177
    2. 'in' → logprob: -7.875411033630371
    3. '       ' → logprob: -11.125411033630371
    4. '   ' → logprob: -12.500411033630371
    5. ':
' → logprob: -12.500411033630371
    6. '           ' → logprob: -12.750411033630371
    7. ':' → logprob: -13.625411033630371
    8. ' =' → logprob: -14.125411033630371
    9. '=' → logprob: -14.625411033630371
    10. '        ' → logprob: -15.125411033630371

Token 1521: ' sys' (ID: 12228)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0023938443046063185
    2. 'lines' → logprob: -6.25239372253418
    3. 'sys' → logprob: -8.25239372253418
    4. ' line' → logprob: -8.62739372253418
    5. 'input' → logprob: -11.37739372253418
    6. '(line' → logprob: -12.50239372253418
    7. '
' → logprob: -12.50239372253418
    8. 'in' → logprob: -13.62739372253418
    9. 'lin' → logprob: -13.87739372253418
    10. ' lines' → logprob: -14.25239372253418

Token 1522: '.stdin' (ID: 93480)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7130630016326904
    2. '\n' → logprob: -1.8380630016326904
    3. '   ' → logprob: -2.5880630016326904
    4. ' ' → logprob: -2.8380630016326904
    5. ':
' → logprob: -3.3380630016326904
    6. '.readline' → logprob: -3.7130630016326904
    7. '_' → logprob: -4.2130632400512695
    8. '.readlines' → logprob: -4.3380632400512695
    9. '):
' → logprob: -4.4630632400512695
    10. '_lines' → logprob: -4.4630632400512695

Token 1523: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47702038288116455
    2. ':
' → logprob: -1.1020203828811646
    3. '       ' → logprob: -3.977020263671875
    4. '           ' → logprob: -4.227020263671875
    5. '   ' → logprob: -5.102020263671875
    6. ' if' → logprob: -6.727020263671875
    7. '=' → logprob: -6.852020263671875
    8. ' in' → logprob: -7.227020263671875
    9. '.rstrip' → logprob: -7.227020263671875
    10. ',' → logprob: -7.852020263671875

Token 1524: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015959147131070495
    2. '```' → logprob: -7.126595973968506
    3. '   ' → logprob: -7.876595973968506
    4. '       ' → logprob: -8.626595497131348
    5. '(lines' → logprob: -9.751595497131348
    6. '<|end|>' → logprob: -10.126595497131348
    7. '<|end|>' → logprob: -10.501595497131348
    8. '               ' → logprob: -10.751595497131348
    9. ' lines' → logprob: -11.251595497131348
    10. ' if' → logprob: -11.501595497131348

Token 1525: ' lines' (ID: 8698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45411819219589233
    2. ' lines' → logprob: -1.579118251800537
    3. '               ' → logprob: -2.829118251800537
    4. '           ' → logprob: -2.954118251800537
    5. 'lines' (adapté à ' lines') → logprob: -3.204118251800537
    6. '	lines' → logprob: -5.329118251800537
    7. '(lines' → logprob: -6.579118251800537
    8. ' if' → logprob: -7.579118251800537
    9. '   ' → logprob: -9.329117774963379
    10. 'if' → logprob: -9.704117774963379

Token 1526: '_buffer' (ID: 17892)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.07039185613393784
    2. '.' → logprob: -4.070391654968262
    3. 'append' → logprob: -4.320391654968262
    4. '_buffer' → logprob: -4.570391654968262
    5. 'rstrip' → logprob: -4.820391654968262
    6. '=' → logprob: -5.445391654968262
    7. '.strip' → logprob: -5.820391654968262
    8. '.rstrip' → logprob: -5.945391654968262
    9. ' =' → logprob: -6.070391654968262
    10. 'strip' → logprob: -6.195391654968262

Token 1527: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00011367550177965313
    2. '.' → logprob: -9.375113487243652
    3. 'append' → logprob: -10.875113487243652
    4. '.extend' → logprob: -12.500113487243652
    5. '           ' → logprob: -13.250113487243652
    6. ' .' → logprob: -13.500113487243652
    7. '       ' → logprob: -14.125113487243652
    8. '.strip' → logprob: -14.375113487243652
    9. '   ' → logprob: -15.000113487243652
    10. '.rstrip' → logprob: -15.000113487243652

Token 1528: '(line' (ID: 18178)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -2.5776860184123507e-06
    2. ' line' → logprob: -13.50000286102295
    3. '(line' → logprob: -13.75000286102295
    4. '[line' → logprob: -17.500001907348633
    5. '	line' → logprob: -18.125001907348633
    6. '=line' → logprob: -18.375001907348633
    7. '#line' → logprob: -19.375001907348633
    8. '   ' → logprob: -19.500001907348633
    9. '
' → logprob: -21.000001907348633
    10. ',line' → logprob: -21.500001907348633

Token 1529: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8384226560592651
    2. '       ' → logprob: -0.8384226560592651
    3. ')
' → logprob: -2.0884227752685547
    4. '
' → logprob: -4.588422775268555
    5. '<|end|>' → logprob: -8.088422775268555
    6. '           ' → logprob: -8.213422775268555
    7. '<|end|>' → logprob: -8.338422775268555
    8. '   ' → logprob: -9.838422775268555
    9. '        
' → logprob: -10.088422775268555
    10. '):
' → logprob: -10.463422775268555

Token 1530: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051796987652778625
    2. '           ' → logprob: -4.051796913146973
    3. 'if' → logprob: -4.551796913146973
    4. 'while' → logprob: -4.676796913146973
    5. '```' → logprob: -5.051796913146973
    6. 'for' → logprob: -6.051796913146973
    7. ' if' → logprob: -6.051796913146973
    8. '   ' → logprob: -7.051796913146973
    9. '
' → logprob: -7.676796913146973
    10. ' for' → logprob: -8.426796913146973

Token 1531: ' input' (ID: 3422)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.838716983795166
    2. 'for' → logprob: -1.838716983795166
    3. 'input' (adapté à ' input') → logprob: -2.088716983795166
    4. '       ' → logprob: -2.338716983795166
    5. 'lines' → logprob: -3.088716983795166
    6. 'idx' → logprob: -3.338716983795166
    7. 'index' → logprob: -3.463716983795166
    8. 'i' → logprob: -3.463716983795166
    9. 'from' → logprob: -3.713716983795166
    10. '   ' → logprob: -5.213716983795166

Token 1532: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.007224892731755972
    2. '_iter' → logprob: -5.257225036621094
    3. '_iterator' → logprob: -6.382225036621094
    4. '_line' → logprob: -8.632225036621094
    5. '_' → logprob: -10.382225036621094
    6. '_it' → logprob: -10.632225036621094
    7. '```' → logprob: -10.757225036621094
    8. '_index' → logprob: -11.882225036621094
    9. '_buffer' → logprob: -12.257225036621094
    10. '_idx' → logprob: -12.382225036621094

Token 1533: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869937062263489
    2. ' =' → logprob: -1.136993646621704
    3. '_iter' → logprob: -9.511993408203125
    4. '=input' → logprob: -11.386993408203125
    5. '=line' → logprob: -12.261993408203125
    6. '   ' → logprob: -12.511993408203125
    7. '=
' → logprob: -12.511993408203125
    8. '_iterator' → logprob: -12.636993408203125
    9. '    ' → logprob: -12.636993408203125
    10. 'import' → logprob: -12.761993408203125

Token 1534: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.014399359934031963
    2. '(iter' → logprob: -4.264399528503418
    3. ' iter' → logprob: -8.514399528503418
    4. '   ' → logprob: -10.764399528503418
    5. 'lines' → logprob: -12.139399528503418
    6. 'line' → logprob: -12.264399528503418
    7. '
' → logprob: -13.264399528503418
    8. '	iter' → logprob: -14.389399528503418
    9. '```' → logprob: -15.014399528503418
    10. '(line' → logprob: -15.014399528503418

Token 1535: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.3868754208087921
    2. 'lines' → logprob: -1.1368753910064697
    3. '	lines' → logprob: -13.26187515258789
    4. 'line' → logprob: -13.63687515258789
    5. 'Lines' → logprob: -14.76187515258789
    6. ' lines' → logprob: -14.76187515258789
    7. '(line' → logprob: -15.51187515258789
    8. '
' → logprob: -15.76187515258789
    9. '```' → logprob: -16.01187515258789
    10. '[line' → logprob: -16.01187515258789

Token 1536: '_buffer' (ID: 17892)
  Prédit: '_buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_buffer' → logprob: -0.018767504021525383
    2. '_lines' → logprob: -4.393767356872559
    3. '(lines' → logprob: -5.518767356872559
    4. 'lines' → logprob: -6.393767356872559
    5. 's' → logprob: -8.518767356872559
    6. 'buffer' → logprob: -9.393767356872559
    7. '\' → logprob: -9.393767356872559
    8. ')' → logprob: -9.393767356872559
    9. '```' → logprob: -11.018767356872559
    10. 'es' → logprob: -11.268767356872559

Token 1537: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012834995053708553
    2. ')
' → logprob: -4.3878350257873535
    3. '       ' → logprob: -8.262834548950195
    4. '   ' → logprob: -10.637834548950195
    5. '())' → logprob: -11.637834548950195
    6. '<|end|>' → logprob: -11.637834548950195
    7. '<|end|>' → logprob: -11.887834548950195
    8. ')}' → logprob: -13.387834548950195
    9. '):
' → logprob: -13.512834548950195
    10. '())
' → logprob: -13.637834548950195

Token 1538: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014128951355814934
    2. 'while' → logprob: -4.389129161834717
    3. '```' → logprob: -6.889129161834717
    4. 'for' → logprob: -8.014128684997559
    5. ' while' → logprob: -8.639128684997559
    6. '   ' → logprob: -9.889128684997559
    7. ' for' → logprob: -11.014128684997559
    8. 'next' → logprob: -12.014128684997559
    9. '``' → logprob: -12.264128684997559
    10. 'def' → logprob: -12.514128684997559

Token 1539: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.47572529315948486
    2. '       ' → logprob: -0.9757252931594849
    3. 'for' → logprob: -6.600725173950195
    4. ' while' → logprob: -8.600725173950195
    5. '   ' → logprob: -9.475725173950195
    6. '```' → logprob: -10.725725173950195
    7. 'def' → logprob: -13.475725173950195
    8. '	while' → logprob: -14.225725173950195
    9. 'While' → logprob: -14.350725173950195
    10. '        
' → logprob: -14.600725173950195

Token 1540: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0009512408869341016
    2. ' True' → logprob: -7.000951290130615
    3. '(True' → logprob: -10.250950813293457
    4. '   ' → logprob: -12.625950813293457
    5. '1' → logprob: -14.375950813293457
    6. '       ' → logprob: -14.875950813293457
    7. ' ' → logprob: -16.375951766967773
    8. 'true' → logprob: -16.625951766967773
    9. '     ' → logprob: -17.125951766967773
    10. '
' → logprob: -17.250951766967773

Token 1541: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023755736649036407
    2. ':' → logprob: -4.1487555503845215
    3. '<|end|>' → logprob: -5.6487555503845215
    4. '<|end|>' → logprob: -6.7737555503845215
    5. ':
' → logprob: -7.3987555503845215
    6. '.readline' → logprob: -7.7737555503845215
    7. '(line' → logprob: -7.7737555503845215
    8. '       ' → logprob: -8.02375602722168
    9. '   ' → logprob: -9.14875602722168
    10. '```' → logprob: -9.27375602722168

Token 1542: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009885113686323166
    2. '       ' → logprob: -5.134885311126709
    3. '   ' → logprob: -5.759885311126709
    4. '```' → logprob: -7.884885311126709
    5. 'try' → logprob: -8.00988483428955
    6. '               ' → logprob: -10.75988483428955
    7. 'next' → logprob: -11.25988483428955
    8. 'line' → logprob: -11.38488483428955
    9. 'token' → logprob: -11.75988483428955
    10. '                   ' → logprob: -12.50988483428955

Token 1543: ' dataset' (ID: 20830)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.23727795481681824
    2. '           ' → logprob: -1.7372779846191406
    3. 'line' → logprob: -3.3622779846191406
    4. 'data' → logprob: -9.23727798461914
    5. 'next' → logprob: -9.23727798461914
    6. '   ' → logprob: -9.36227798461914
    7. '       ' → logprob: -9.73727798461914
    8. '               ' → logprob: -9.86227798461914
    9. 'token' → logprob: -9.86227798461914
    10. '```' → logprob: -10.11227798461914

Token 1544: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14837485551834106
    2. ' =' → logprob: -2.0233747959136963
    3. '_line' → logprob: -6.273375034332275
    4. '   ' → logprob: -6.398375034332275
    5. 'line' → logprob: -7.273375034332275
    6. '=line' → logprob: -7.273375034332275
    7. '_token' → logprob: -8.523374557495117
    8. '_' → logprob: -8.898374557495117
    9. ' line' → logprob: -10.023374557495117
    10. '       ' → logprob: -10.273374557495117

Token 1545: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023738853633403778
    2. 'next' → logprob: -3.7737388610839844
    3. '           ' → logprob: -7.898738861083984
    4. ' self' → logprob: -9.523738861083984
    5. ' next' → logprob: -10.023738861083984
    6. '(next' → logprob: -13.148738861083984
    7. '(self' → logprob: -13.523738861083984
    8. '_next' → logprob: -14.398738861083984
    9. '.next' → logprob: -15.398738861083984
    10. 'Next' → logprob: -16.023738861083984

Token 1546: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.01669003814458847
    2. 'read' → logprob: -4.141690254211426
    3. '.readline' → logprob: -8.016690254211426
    4. '._' → logprob: -8.641690254211426
    5. '.__' → logprob: -9.391690254211426
    6. '.next' → logprob: -10.016690254211426
    7. '.' → logprob: -11.391690254211426
    8. '.readlines' → logprob: -12.516690254211426
    9. '_.' → logprob: -14.141690254211426
    10. '   ' → logprob: -14.266690254211426

Token 1547: '_dataset' (ID: 40568)
  Prédit: '_dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dataset' → logprob: -0.01129148993641138
    2. 'dataset' → logprob: -4.51129150390625
    3. '(dataset' → logprob: -8.63629150390625
    4. 'ataset' → logprob: -10.26129150390625
    5. 'line' → logprob: -11.63629150390625
    6. 's' → logprob: -12.63629150390625
    7. 'Dataset' → logprob: -12.88629150390625
    8. ' dataset' → logprob: -13.26129150390625
    9. '_' → logprob: -13.38629150390625
    10. '```' → logprob: -13.51129150390625

Token 1548: '(input' (ID: 10054)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.028847986832261086
    2. '       ' → logprob: -4.903848171234131
    3. '<|end|>' → logprob: -4.903848171234131
    4. '()
' → logprob: -5.278848171234131
    5. ')' → logprob: -6.403848171234131
    6. '();' → logprob: -6.528848171234131
    7. '           ' → logprob: -6.528848171234131
    8. '():
' → logprob: -6.903848171234131
    9. '<|end|>' → logprob: -6.903848171234131
    10. '   ' → logprob: -7.778848171234131

Token 1549: '_lines' (ID: 42980)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.027281690388917923
    2. ')' → logprob: -4.277281761169434
    3. '(lines' → logprob: -5.027281761169434
    4. '()' → logprob: -5.652281761169434
    5. '())' → logprob: -7.027281761169434
    6. 'input' → logprob: -7.027281761169434
    7. '(' → logprob: -7.777281761169434
    8. 'lines' → logprob: -7.777281761169434
    9. '_lines' → logprob: -8.902281761169434
    10. '(
' → logprob: -9.152281761169434

Token 1550: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15888753533363342
    2. ')
' → logprob: -2.6588876247406006
    3. '           ' → logprob: -3.2838876247406006
    4. '):
' → logprob: -3.2838876247406006
    5. '       ' → logprob: -6.7838873863220215
    6. '):' → logprob: -7.9088873863220215
    7. '               ' → logprob: -9.90888786315918
    8. '())' → logprob: -9.90888786315918
    9. '())
' → logprob: -10.03388786315918
    10. '```' → logprob: -10.40888786315918

Token 1551: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3548886179924011
    2. '       ' → logprob: -1.229888677597046
    3. '```' → logprob: -5.479888439178467
    4. ' if' → logprob: -7.229888439178467
    5. '   ' → logprob: -7.979888439178467
    6. '               ' → logprob: -8.104888916015625
    7. '<|end|>' → logprob: -8.479888916015625
    8. '[' → logprob: -9.104888916015625
    9. '<|end|>' → logprob: -9.104888916015625
    10. 'if' → logprob: -9.479888916015625

Token 1552: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03904307633638382
    2. 'if' (adapté à ' if') → logprob: -3.2890431880950928
    3. ' if' → logprob: -7.414042949676514
    4. '   ' → logprob: -8.289043426513672
    5. '       ' → logprob: -9.289043426513672
    6. '               ' → logprob: -9.914043426513672
    7. ' ' → logprob: -13.539043426513672
    8. 'If' → logprob: -14.164043426513672
    9. '	       ' → logprob: -14.414043426513672
    10. '```' → logprob: -14.539043426513672

Token 1553: ' dataset' (ID: 20830)
  Prédit: 'dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dataset' → logprob: -0.0031871015671640635
    2. ' dataset' → logprob: -5.75318717956543
    3. 'not' → logprob: -12.37818717956543
    4. ' not' → logprob: -12.37818717956543
    5. '           ' → logprob: -14.00318717956543
    6. '(dataset' → logprob: -15.75318717956543
    7. '               ' → logprob: -17.37818717956543
    8. '_dataset' → logprob: -17.50318717956543
    9. '.dataset' → logprob: -17.62818717956543
    10. '   ' → logprob: -18.50318717956543

Token 1554: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0028582511004060507
    2. 'is' → logprob: -6.0028581619262695
    3. '==' → logprob: -8.25285816192627
    4. ' ==' → logprob: -9.75285816192627
    5. '	is' → logprob: -10.75285816192627
    6. '<|end|>' → logprob: -10.87785816192627
    7. '===' → logprob: -12.25285816192627
    8. ')' → logprob: -12.50285816192627
    9. '<|end|>' → logprob: -12.50285816192627
    10. ')is' → logprob: -13.00285816192627

Token 1555: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00023894020705483854
    2. ' None' → logprob: -8.375239372253418
    3. '_None' → logprob: -12.500239372253418
    4. '(None' → logprob: -13.000239372253418
    5. '=None' → logprob: -13.125239372253418
    6. ',None' → logprob: -16.0002384185791
    7. '           ' → logprob: -16.5002384185791
    8. 'none' → logprob: -17.2502384185791
    9. '   ' → logprob: -17.2502384185791
    10. '_none' → logprob: -17.5002384185791

Token 1556: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0065656909719109535
    2. '           ' → logprob: -5.506565570831299
    3. ':' → logprob: -6.131565570831299
    4. ':
' → logprob: -8.381566047668457
    5. '                   ' → logprob: -10.256566047668457
    6. '	           ' → logprob: -11.756566047668457
    7. '                       ' → logprob: -11.756566047668457
    8. '       ' → logprob: -12.131566047668457
    9. '              ' → logprob: -12.381566047668457
    10. '		       ' → logprob: -12.506566047668457

Token 1557: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020865805447101593
    2. '           ' → logprob: -3.8958659172058105
    3. '                   ' → logprob: -8.895865440368652
    4. '       ' → logprob: -9.395865440368652
    5. '                       ' → logprob: -10.520865440368652
    6. '	           ' → logprob: -10.520865440368652
    7. '		       ' → logprob: -11.020865440368652
    8. '   ' → logprob: -11.395865440368652
    9. 'break' → logprob: -12.145865440368652
    10. '```' → logprob: -12.520865440368652

Token 1558: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004736041650176048
    2. '           ' → logprob: -5.504735946655273
    3. '                   ' → logprob: -8.254735946655273
    4. 'break' (adapté à ' break') → logprob: -8.254735946655273
    5. '	           ' → logprob: -9.879735946655273
    6. '			' → logprob: -10.504735946655273
    7. '		       ' → logprob: -10.629735946655273
    8. '       ' → logprob: -11.629735946655273
    9. '	break' → logprob: -12.254735946655273
    10. '                       ' → logprob: -12.629735946655273

Token 1559: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.040841396898031235
    2. '       ' → logprob: -3.2908413410186768
    3. '
' → logprob: -6.790841579437256
    4. '<|end|>' → logprob: -7.040841579437256
    5. '<|end|>' → logprob: -8.040841102600098
    6. '        
' → logprob: -8.415841102600098
    7. '```' → logprob: -9.915841102600098
    8. '            
' → logprob: -10.040841102600098
    9. '   ' → logprob: -10.040841102600098
    10. '               ' → logprob: -10.665841102600098

Token 1560: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02105749025940895
    2. '       ' → logprob: -3.896057605743408
    3. '
' → logprob: -8.64605712890625
    4. '```' → logprob: -8.77105712890625
    5. '<|end|>' → logprob: -9.77105712890625
    6. '        
' → logprob: -9.89605712890625
    7. '            
' → logprob: -10.89605712890625
    8. '<|end|>' → logprob: -10.89605712890625
    9. '   ' → logprob: -11.77105712890625
    10. '          ' → logprob: -11.77105712890625

Token 1561: ' hp' (ID: 37774)
  Prédit: 'hp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hp' (adapté à ' hp') → logprob: -0.0007518553175032139
    2. '           ' → logprob: -7.500751972198486
    3. '```' → logprob: -9.125751495361328
    4. 'result' → logprob: -9.875751495361328
    5. ' hp' → logprob: -10.750751495361328
    6. '       ' → logprob: -11.625751495361328
    7. '(h' → logprob: -13.250751495361328
    8. '_hp' → logprob: -13.500751495361328
    9. 'hpp' → logprob: -14.125751495361328
    10. 'h' → logprob: -14.250751495361328

Token 1562: '_init' (ID: 13909)
  Prédit: '_init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_init' → logprob: -0.0008040298125706613
    2. ',' → logprob: -7.5008039474487305
    3. '_,' → logprob: -8.87580394744873
    4. ',_' → logprob: -10.25080394744873
    5. '_initial' → logprob: -10.25080394744873
    6. '_max' → logprob: -11.12580394744873
    7. '_' → logprob: -11.75080394744873
    8. '_INIT' → logprob: -12.87580394744873
    9. '<|end|>' → logprob: -13.00080394744873
    10. '_initialized' → logprob: -13.12580394744873

Token 1563: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0050753140822052956
    2. '_,' → logprob: -5.380075454711914
    3. '<|end|>' → logprob: -8.630075454711914
    4. '_' → logprob: -8.755075454711914
    5. ')' → logprob: -10.005075454711914
    6. ' ,' → logprob: -11.005075454711914
    7. ',_' → logprob: -11.255075454711914
    8. '=' → logprob: -11.880075454711914
    9. '_max' → logprob: -12.130075454711914
    10. ',h' → logprob: -12.130075454711914

Token 1564: ' hp' (ID: 37774)
  Prédit: 'hp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hp' → logprob: -0.0009114635176956654
    2. ' hp' → logprob: -7.000911235809326
    3. '_hp' → logprob: -16.875911712646484
    4. '.hp' → logprob: -19.125911712646484
    5. '
' → logprob: -19.625911712646484
    6. '   ' → logprob: -19.875911712646484
    7. '```' → logprob: -20.500911712646484
    8. 'Hp' → logprob: -20.875911712646484
    9. 'hc' → logprob: -21.000911712646484
    10. 'hpp' → logprob: -21.250911712646484

Token 1565: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -5.919942486798391e-05
    2. '_init' → logprob: -10.125059127807617
    3. 'max' → logprob: -11.500059127807617
    4. ',' → logprob: -11.875059127807617
    5. '_,' → logprob: -14.000059127807617
    6. ',max' → logprob: -14.375059127807617
    7. ',_' → logprob: -14.625059127807617
    8. '_MAX' → logprob: -17.125059127807617
    9. '_min' → logprob: -17.250059127807617
    10. '```' → logprob: -17.625059127807617

Token 1566: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.432518421206623e-05
    2. ',h' → logprob: -10.2500638961792
    3. ' ,' → logprob: -11.8750638961792
    4. ',p' → logprob: -12.1250638961792
    5. '           ' → logprob: -12.2500638961792
    6. '`,' → logprob: -12.8750638961792
    7. '=' → logprob: -13.0000638961792
    8. ',P' → logprob: -13.1250638961792
    9. ',c' → logprob: -13.2500638961792
    10. '```' → logprob: -14.2500638961792

Token 1567: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.00012356207298580557
    2. ' R' → logprob: -9.000123977661133
    3. '   ' → logprob: -17.125123977661133
    4. '    ' → logprob: -18.750123977661133
    5. '	R' → logprob: -19.500123977661133
    6. '       ' → logprob: -19.625123977661133
    7. '
' → logprob: -19.875123977661133
    8. '           ' → logprob: -19.875123977661133
    9. '_R' → logprob: -20.000123977661133
    10. '     ' → logprob: -20.000123977661133

Token 1568: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7372048862162046e-05
    2. ' ,' → logprob: -11.125027656555176
    3. '=' → logprob: -11.875027656555176
    4. ',C' → logprob: -12.625027656555176
    5. ',
' → logprob: -13.875027656555176
    6. ',c' → logprob: -14.500027656555176
    7. '           ' → logprob: -14.875027656555176
    8. '`,' → logprob: -15.875027656555176
    9. '       ' → logprob: -16.75002670288086
    10. '<|end|>' → logprob: -17.00002670288086

Token 1569: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0003357006062287837
    2. ' C' → logprob: -8.000335693359375
    3. '```' → logprob: -16.250335693359375
    4. '       ' → logprob: -16.875335693359375
    5. '           ' → logprob: -16.875335693359375
    6. '   ' → logprob: -17.500335693359375
    7. '
' → logprob: -17.625335693359375
    8. ' ' → logprob: -18.500335693359375
    9. '<|end|>' → logprob: -18.875335693359375
    10. '    ' → logprob: -19.125335693359375

Token 1570: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.190178904333152e-05
    2. '           ' → logprob: -11.250031471252441
    3. ' ,' → logprob: -11.250031471252441
    4. 'layout' → logprob: -13.375031471252441
    5. ',p' → logprob: -13.625031471252441
    6. '`,' → logprob: -14.000031471252441
    7. ',line' → logprob: -14.125031471252441
    8. '=' → logprob: -14.250031471252441
    9. '```' → logprob: -15.875031471252441
    10. '_,' → logprob: -16.125032424926758

Token 1571: ' layout' (ID: 10557)
  Prédit: 'layout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'layout' → logprob: -0.00033558503491804004
    2. ' layout' → logprob: -8.000335693359375
    3. '       ' → logprob: -17.500335693359375
    4. '           ' → logprob: -18.000335693359375
    5. '	layout' → logprob: -18.000335693359375
    6. '   ' → logprob: -18.375335693359375
    7. '_layout' → logprob: -18.750335693359375
    8. '```' → logprob: -19.875335693359375
    9. '(layout' → logprob: -20.125335693359375
    10. '.layout' → logprob: -20.250335693359375

Token 1572: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000193527273950167
    2. ',tr' → logprob: -8.87519359588623
    3. '           ' → logprob: -10.12519359588623
    4. ' ,' → logprob: -11.87519359588623
    5. '`,' → logprob: -12.75019359588623
    6. ',
' → logprob: -14.25019359588623
    7. ',p' → logprob: -14.62519359588623
    8. ',t' → logprob: -14.75019359588623
    9. '=' → logprob: -15.12519359588623
    10. '```' → logprob: -15.12519359588623

Token 1573: ' trap' (ID: 34270)
  Prédit: 'trap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trap' → logprob: -0.0005069229518994689
    2. 'layout' → logprob: -7.87550687789917
    3. ' trap' → logprob: -9.000507354736328
    4. '   ' → logprob: -13.000507354736328
    5. '       ' → logprob: -15.000507354736328
    6. 'tray' → logprob: -15.375507354736328
    7. ' layout' → logprob: -15.625507354736328
    8. 'tr' → logprob: -16.250507354736328
    9. 'Trap' → logprob: -16.750507354736328
    10. 'trip' → logprob: -16.875507354736328

Token 1574: '_types' (ID: 21515)
  Prédit: '_types'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_types' → logprob: -0.0003969455719925463
    2. 'ypes' → logprob: -7.875396728515625
    3. '_symbols' → logprob: -11.750396728515625
    4. 'types' → logprob: -12.500396728515625
    5. '_type' → logprob: -13.000396728515625
    6. '_layout' → logprob: -13.625396728515625
    7. 'ype' → logprob: -15.125396728515625
    8. '_TYPES' → logprob: -15.375396728515625
    9. '_steps' → logprob: -15.375396728515625
    10. 'ayout' → logprob: -16.125396728515625

Token 1575: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001295222609769553
    2. '           ' → logprob: -9.000129699707031
    3. ' ,' → logprob: -12.750129699707031
    4. '       ' → logprob: -13.375129699707031
    5. '_,' → logprob: -15.125129699707031
    6. '   ' → logprob: -15.125129699707031
    7. '<|end|>' → logprob: -15.125129699707031
    8. ',p' → logprob: -15.750129699707031
    9. ',
' → logprob: -16.12512969970703
    10. '`,' → logprob: -16.50012969970703

Token 1576: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -1.9385402993066236e-05
    2. ' steps' → logprob: -11.000019073486328
    3. '           ' → logprob: -13.625019073486328
    4. '   ' → logprob: -14.250019073486328
    5. '       ' → logprob: -14.375019073486328
    6. '         ' → logprob: -16.875019073486328
    7. '          ' → logprob: -17.125019073486328
    8. '```' → logprob: -18.125019073486328
    9. '     ' → logprob: -18.375019073486328
    10. '               ' → logprob: -18.375019073486328

Token 1577: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031846018973737955
    2. ',p' → logprob: -5.753184795379639
    3. ' ,' → logprob: -12.12818431854248
    4. 'p' → logprob: -14.75318431854248
    5. ',P' → logprob: -14.75318431854248
    6. '   ' → logprob: -15.00318431854248
    7. ',
' → logprob: -15.87818431854248
    8. '_,' → logprob: -16.753185272216797
    9. ',t' → logprob: -17.253185272216797
    10. ',pos' → logprob: -17.503185272216797

Token 1578: ' pot' (ID: 3208)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pot' → logprob: -2.0339031834737398e-05
    2. ' pot' → logprob: -11.125020027160645
    3. 'pots' → logprob: -12.500020027160645
    4. '   ' → logprob: -14.000020027160645
    5. '```' → logprob: -15.125020027160645
    6. '       ' → logprob: -15.125020027160645
    7. 'p' → logprob: -15.500020027160645
    8. '           ' → logprob: -16.50002098083496
    9. 'P' → logprob: -17.37502098083496
    10. '``' → logprob: -17.37502098083496

Token 1579: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -4.246537173457909e-06
    2. 'IONS' → logprob: -12.625003814697266
    3. '```' → logprob: -15.250003814697266
    4. 'otions' → logprob: -15.375003814697266
    5. 's' → logprob: -15.750003814697266
    6. 'ons' → logprob: -16.250003814697266
    7. 'iones' → logprob: -16.375003814697266
    8. 'I' → logprob: -16.625003814697266
    9. '[' → logprob: -18.875003814697266
    10. 'ios' → logprob: -19.000003814697266

Token 1580: ' =' (ID: 314)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00594065198674798
    2. ',' → logprob: -5.7559404373168945
    3. '<|end|>' → logprob: -6.3809404373168945
    4. '<|end|>' → logprob: -7.7559404373168945
    5. '       ' → logprob: -8.505940437316895
    6. ' =' → logprob: -8.505940437316895
    7. '            
' → logprob: -10.130940437316895
    8. '          ' → logprob: -10.130940437316895
    9. '
' → logprob: -10.505940437316895
    10. ')' → logprob: -10.505940437316895

Token 1581: ' dataset' (ID: 20830)
  Prédit: 'dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dataset' → logprob: -0.02395687997341156
    2. ' dataset' → logprob: -3.773956775665283
    3. 'hp' → logprob: -7.273956775665283
    4. ' hp' → logprob: -11.273957252502441
    5. '(dataset' → logprob: -13.273957252502441
    6. '           ' → logprob: -13.898957252502441
    7. 'ataset' → logprob: -14.148957252502441
    8. '_dataset' → logprob: -14.398957252502441
    9. '.dataset' → logprob: -14.523957252502441
    10. 'datasets' → logprob: -15.523957252502441

Token 1582: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003909927327185869
    2. '       ' → logprob: -9.125391006469727
    3. '<|end|>' → logprob: -9.375391006469727
    4. 'output' → logprob: -9.625391006469727
    5. 'result' → logprob: -9.750391006469727
    6. '<|end|>' → logprob: -10.500391006469727
    7. '
' → logprob: -11.250391006469727
    8. '            
' → logprob: -12.000391006469727
    9. '```' → logprob: -12.125391006469727
    10. '	       ' → logprob: -12.500391006469727

Token 1583: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0899454727768898
    2. '       ' → logprob: -2.4649455547332764
    3. '```' → logprob: -7.214945316314697
    4. 'result' → logprob: -8.964945793151855
    5. 'agent' → logprob: -9.714945793151855
    6. '   ' → logprob: -10.714945793151855
    7. '`' → logprob: -11.589945793151855
    8. '<|end|>' → logprob: -11.714945793151855
    9. ',' → logprob: -12.339945793151855
    10. '               ' → logprob: -12.589945793151855

Token 1584: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.012708236463367939
    2. '           ' → logprob: -4.7627081871032715
    3. 'res' → logprob: -6.0127081871032715
    4. 'answer' → logprob: -6.5127081871032715
    5. 'ans' → logprob: -9.51270866394043
    6. 'print' → logprob: -9.88770866394043
    7. 'output' → logprob: -11.01270866394043
    8. ' result' → logprob: -12.13770866394043
    9. 'out' → logprob: -13.13770866394043
    10. 'status' → logprob: -13.51270866394043

Token 1585: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3640096187591553
    2. ' =' → logprob: -1.3640096187591553
    3. ' +=' → logprob: -4.614009857177734
    4. '[' → logprob: -4.864009857177734
    5. '<|end|>' → logprob: -4.864009857177734
    6. '```' → logprob: -4.989009857177734
    7. '<|end|>' → logprob: -4.989009857177734
    8. '+=' → logprob: -5.489009857177734
    9. '[
' → logprob: -7.114009857177734
    10. '|=
' → logprob: -7.739009857177734

Token 1586: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019337546546012163
    2. ' self' → logprob: -6.251933574676514
    3. '           ' → logprob: -12.251934051513672
    4. '"' → logprob: -15.626934051513672
    5. '(self' → logprob: -16.126934051513672
    6. '       ' → logprob: -16.876934051513672
    7. '               ' → logprob: -17.501934051513672
    8. '   ' → logprob: -17.501934051513672
    9. '	self' → logprob: -18.501934051513672
    10. '                   ' → logprob: -18.501934051513672

Token 1587: '.j' (ID: 1760)
  Prédit: '.j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.j' → logprob: -0.4742636978626251
    2. 'judge' → logprob: -0.9742636680603027
    3. '```' → logprob: -10.224264144897461
    4. ' judge' → logprob: -10.349264144897461
    5. 'jud' → logprob: -10.849264144897461
    6. '.run' → logprob: -10.849264144897461
    7. '.' → logprob: -10.974264144897461
    8. '.predict' → logprob: -11.349264144897461
    9. ' .' → logprob: -11.599264144897461
    10. 'run' → logprob: -11.974264144897461

Token 1588: 'udge' (ID: 35933)
  Prédit: 'udge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'udge' → logprob: -1.664371848164592e-05
    2. 'judge' → logprob: -11.500016212463379
    3. 'ud' → logprob: -12.000016212463379
    4. 'udget' → logprob: -15.375016212463379
    5. 'UDGE' → logprob: -17.125017166137695
    6. 'u' → logprob: -18.000017166137695
    7. 'uge' → logprob: -19.125017166137695
    8. 'adge' → logprob: -19.375017166137695
    9. 'ude' → logprob: -19.375017166137695
    10. 'udit' → logprob: -19.875017166137695

Token 1589: '_pat' (ID: 139092)
  Prédit: '_pat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pat' → logprob: -9.729906196298543e-06
    2. 'result' → logprob: -11.875009536743164
    3. 'pat' → logprob: -13.125009536743164
    4. 'Pat' → logprob: -15.000009536743164
    5. '_result' → logprob: -16.000009536743164
    6. '_PAT' → logprob: -17.500009536743164
    7. 'output' → logprob: -18.125009536743164
    8. '_pet' → logprob: -18.250009536743164
    9. '(result' → logprob: -18.500009536743164
    10. '```' → logprob: -18.625009536743164

Token 1590: 'rol' (ID: 1521)
  Prédit: 'atrol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atrol' → logprob: -0.18257682025432587
    2. 'rol' → logprob: -1.8075767755508423
    3. 'at' → logprob: -7.057576656341553
    4. 'r' → logprob: -7.432576656341553
    5. 'ral' → logprob: -7.807576656341553
    6. 'role' → logprob: -7.807576656341553
    7. 'ro' → logprob: -8.557577133178711
    8. 'ar' → logprob: -8.807577133178711
    9. 'roll' → logprob: -9.807577133178711
    10. 'atro' → logprob: -10.057577133178711

Token 1591: '(h' (ID: 8120)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0007269674097187817
    2. '(' → logprob: -7.50072717666626
    3. '(
' → logprob: -9.500726699829102
    4. '(h' → logprob: -10.000726699829102
    5. 'result' → logprob: -10.250726699829102
    6. '[result' → logprob: -11.500726699829102
    7. '           ' → logprob: -13.125726699829102
    8. '(results' → logprob: -13.750726699829102
    9. '=result' → logprob: -13.875726699829102
    10. '_result' → logprob: -13.875726699829102

Token 1592: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.117345684382599e-05
    2. '_init' → logprob: -11.625020980834961
    3. 'init' → logprob: -12.500020980834961
    4. '   ' → logprob: -13.375020980834961
    5. '(p' → logprob: -13.750020980834961
    6. 'P' → logprob: -13.750020980834961
    7. 'it' → logprob: -14.000020980834961
    8. 'int' → logprob: -14.750020980834961
    9. 'ip' → logprob: -14.875020980834961
    10. '(' → logprob: -15.000020980834961

Token 1593: '_init' (ID: 13909)
  Prédit: '_init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_init' → logprob: -6.897412822581828e-05
    2. 'init' → logprob: -9.750068664550781
    3. ',' → logprob: -11.750068664550781
    4. '(init' → logprob: -14.000068664550781
    5. '_,' → logprob: -14.250068664550781
    6. '   ' → logprob: -15.125068664550781
    7. ',_' → logprob: -15.250068664550781
    8. '```' → logprob: -16.25006866455078
    9. '_int' → logprob: -16.50006866455078
    10. '_INIT' → logprob: -16.50006866455078

Token 1594: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003685861302074045
    2. ',h' → logprob: -8.000368118286133
    3. ' ,' → logprob: -10.875368118286133
    4. ',
' → logprob: -11.625368118286133
    5. ',p' → logprob: -13.250368118286133
    6. '           ' → logprob: -13.625368118286133
    7. '   ' → logprob: -14.625368118286133
    8. '       ' → logprob: -14.750368118286133
    9. '
' → logprob: -15.375368118286133
    10. ')' → logprob: -15.625368118286133

Token 1595: ' hp' (ID: 37774)
  Prédit: 'hp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hp' → logprob: -3.547789674485102e-05
    2. ' hp' → logprob: -10.250035285949707
    3. '_hp' → logprob: -17.500036239624023
    4. '
' → logprob: -17.625036239624023
    5. '```' → logprob: -18.000036239624023
    6. '   ' → logprob: -18.625036239624023
    7. '
' → logprob: -18.750036239624023
    8. '.hp' → logprob: -19.000036239624023
    9. 'hpp' → logprob: -20.125036239624023
    10. 'hq' → logprob: -20.500036239624023

Token 1596: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -5.991464786347933e-05
    2. 'max' → logprob: -9.750060081481934
    3. ',' → logprob: -14.000060081481934
    4. ',max' → logprob: -15.125060081481934
    5. ',_' → logprob: -15.750060081481934
    6. '_MAX' → logprob: -16.000059127807617
    7. '_,' → logprob: -16.125059127807617
    8. ' _' → logprob: -16.375059127807617
    9. '_' → logprob: -16.875059127807617
    10. 'Max' → logprob: -17.875059127807617

Token 1597: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.710618905955926e-05
    2. ',h' → logprob: -10.000097274780273
    3. '           ' → logprob: -10.750097274780273
    4. ' ,' → logprob: -11.000097274780273
    5. ',result' → logprob: -12.125097274780273
    6. ',p' → logprob: -12.375097274780273
    7. ',
' → logprob: -13.625097274780273
    8. ',R' → logprob: -14.250097274780273
    9. ',P' → logprob: -14.625097274780273
    10. ',C' → logprob: -15.250097274780273

Token 1598: ' R' (ID: 460)
  Prédit: 'hp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hp' → logprob: -0.07461421191692352
    2. 'R' → logprob: -2.8246142864227295
    3. ' hp' → logprob: -4.44961404800415
    4. ' R' → logprob: -7.07461404800415
    5. '
' → logprob: -11.074614524841309
    6. '   ' → logprob: -12.074614524841309
    7. '
' → logprob: -12.324614524841309
    8. 'HP' → logprob: -12.449614524841309
    9. 'hc' → logprob: -12.949614524841309
    10. 'Hp' → logprob: -14.074614524841309

Token 1599: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00081487005809322
    2. ',C' → logprob: -7.250814914703369
    3. ' ,' → logprob: -9.500814437866211
    4. ',
' → logprob: -11.375814437866211
    5. ',P' → logprob: -11.375814437866211
    6. 'C' → logprob: -12.750814437866211
    7. ',p' → logprob: -13.500814437866211
    8. ',c' → logprob: -13.625814437866211
    9. '_,' → logprob: -14.500814437866211
    10. '           ' → logprob: -15.625814437866211

Token 1600: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.002535355743020773
    2. 'hp' → logprob: -6.002535343170166
    3. ' C' → logprob: -10.127535820007324
    4. '
' → logprob: -11.377535820007324
    5. '
' → logprob: -12.877535820007324
    6. '   ' → logprob: -13.252535820007324
    7. 'hc' → logprob: -14.127535820007324
    8. ' hp' → logprob: -14.377535820007324
    9. '' → logprob: -15.502535820007324
    10. 'hpp' → logprob: -15.502535820007324

Token 1601: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.167648876318708e-05
    2. ',
' → logprob: -10.500041961669922
    3. ' ,' → logprob: -11.875041961669922
    4. '           ' → logprob: -12.000041961669922
    5. ',p' → logprob: -16.000041961669922
    6. '_,' → logprob: -16.000041961669922
    7. '   ' → logprob: -16.000041961669922
    8. '
' → logprob: -16.125041961669922
    9. '       ' → logprob: -16.250041961669922
    10. '          ' → logprob: -16.500041961669922

Token 1602: ' layout' (ID: 10557)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.04059714823961258
    2. 'layout' → logprob: -4.040596961975098
    3. 'steps' → logprob: -4.290596961975098
    4. ' pot' → logprob: -4.915596961975098
    5. 'pots' → logprob: -7.915596961975098
    6. 'P' → logprob: -8.165596961975098
    7. ' layout' → logprob: -8.915596961975098
    8. 'C' → logprob: -9.290596961975098
    9. 'p' → logprob: -9.540596961975098
    10. ' steps' → logprob: -9.915596961975098

Token 1603: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000145137935760431
    2. ',
' → logprob: -9.125144958496094
    3. '_,' → logprob: -11.375144958496094
    4. ' ,' → logprob: -11.750144958496094
    5. '           ' → logprob: -11.875144958496094
    6. ',p' → logprob: -12.000144958496094
    7. '
' → logprob: -14.250144958496094
    8. ',tr' → logprob: -14.625144958496094
    9. '   ' → logprob: -14.750144958496094
    10. ',
' → logprob: -15.125144958496094

Token 1604: ' trap' (ID: 34270)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -1.0710545778274536
    2. 'trap' → logprob: -1.0710545778274536
    3. 'pot' → logprob: -1.1960545778274536
    4. ' pot' → logprob: -4.696054458618164
    5. ' steps' → logprob: -6.946054458618164
    6. ' trap' → logprob: -6.946054458618164
    7. '   ' → logprob: -7.696054458618164
    8. 'pots' → logprob: -8.196054458618164
    9. '       ' → logprob: -8.571054458618164
    10. 'tr' → logprob: -9.196054458618164

Token 1605: '_types' (ID: 21515)
  Prédit: '_types'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_types' → logprob: -0.0005211008246988058
    2. 's' → logprob: -7.875521183013916
    3. '_type' → logprob: -9.375520706176758
    4. '_steps' → logprob: -10.625520706176758
    5. '   ' → logprob: -12.500520706176758
    6. 'ypes' → logprob: -12.625520706176758
    7. 'ots' → logprob: -12.750520706176758
    8. 'ot' → logprob: -13.250520706176758
    9. 'os' → logprob: -13.250520706176758
    10. '       ' → logprob: -13.625520706176758

Token 1606: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.762356209335849e-05
    2. '           ' → logprob: -10.50003719329834
    3. ',
' → logprob: -12.25003719329834
    4. ' ,' → logprob: -12.50003719329834
    5. '   ' → logprob: -14.50003719329834
    6. '       ' → logprob: -15.12503719329834
    7. '               ' → logprob: -15.37503719329834
    8. '                   ' → logprob: -16.000038146972656
    9. '          ' → logprob: -16.125038146972656
    10. '<|end|>' → logprob: -16.875038146972656

Token 1607: ' steps' (ID: 10331)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.12733416259288788
    2. ' pot' → logprob: -2.2523341178894043
    3. 'steps' → logprob: -4.377334117889404
    4. ' steps' → logprob: -6.627334117889404
    5. 'pots' → logprob: -8.127334594726562
    6. '   ' → logprob: -9.877334594726562
    7. 'p' → logprob: -10.002334594726562
    8. '```' → logprob: -10.752334594726562
    9. '       ' → logprob: -11.002334594726562
    10. '
' → logprob: -11.252334594726562

Token 1608: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002525184245314449
    2. ',p' → logprob: -8.375252723693848
    3. '           ' → logprob: -11.500252723693848
    4. ' ,' → logprob: -12.125252723693848
    5. ',
' → logprob: -12.750252723693848
    6. ')' → logprob: -13.750252723693848
    7. '       ' → logprob: -14.625252723693848
    8. '),' → logprob: -15.125252723693848
    9. '<|end|>' → logprob: -15.125252723693848
    10. '   ' → logprob: -15.250252723693848

Token 1609: ' pot' (ID: 3208)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.005310485139489174
    2. ' pot' → logprob: -5.255310535430908
    3. 'p' → logprob: -10.13031005859375
    4. 'pots' → logprob: -10.88031005859375
    5. '
' → logprob: -11.38031005859375
    6. '```' → logprob: -12.88031005859375
    7. '
' → logprob: -13.38031005859375
    8. '   ' → logprob: -14.00531005859375
    9. 'Pot' → logprob: -15.25531005859375
    10. '``' → logprob: -15.63031005859375

Token 1610: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -5.080963092041202e-06
    2. 'ons' → logprob: -12.375004768371582
    3. '```' → logprob: -14.375004768371582
    4. 'IONS' → logprob: -16.1250057220459
    5. '`' → logprob: -17.6250057220459
    6. '``' → logprob: -17.8750057220459
    7. 'otions' → logprob: -18.1250057220459
    8. '   ' → logprob: -18.2500057220459
    9. '
' → logprob: -18.6250057220459
    10. 'ion' → logprob: -18.7500057220459

Token 1611: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1138971820473671
    2. '           ' → logprob: -2.7388970851898193
    3. ')
' → logprob: -3.2388970851898193
    4. '[' → logprob: -6.863897323608398
    5. '+' → logprob: -7.738897323608398
    6. '       ' → logprob: -8.238897323608398
    7. '
' → logprob: -8.238897323608398
    8. '            
' → logprob: -8.613897323608398
    9. '```' → logprob: -8.613897323608398
    10. '<|end|>' → logprob: -8.613897323608398

Token 1612: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010397175792604685
    2. 'print' → logprob: -6.876039505004883
    3. ' print' → logprob: -12.626039505004883
    4. '
' → logprob: -14.001039505004883
    5. '```' → logprob: -14.251039505004883
    6. '       ' → logprob: -14.376039505004883
    7. '            
' → logprob: -14.626039505004883
    8. '               ' → logprob: -15.126039505004883
    9. '		' → logprob: -15.751039505004883
    10. '          ' → logprob: -16.251039505004883

Token 1613: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.003335990710183978
    2. '           ' → logprob: -5.753335952758789
    3. ' print' → logprob: -8.753335952758789
    4. '```' → logprob: -15.878335952758789
    5. '#print' → logprob: -17.25333595275879
    6. '
' → logprob: -17.37833595275879
    7. '	print' → logprob: -17.62833595275879
    8. '.print' → logprob: -18.00333595275879
    9. '            
' → logprob: -19.00333595275879
    10. '_print' → logprob: -19.62833595275879

Token 1614: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.011049824766814709
    2. 'result' → logprob: -4.511049747467041
    3. '(' → logprob: -13.1360502243042
    4. '(f' → logprob: -17.511049270629883
    5. ' result' → logprob: -17.761049270629883
    6. '('' → logprob: -17.886049270629883
    7. '("' → logprob: -18.636049270629883
    8. 'Result' → logprob: -18.886049270629883
    9. '[result' → logprob: -19.011049270629883
    10. '(results' → logprob: -19.261049270629883

Token 1615: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2948405128554441e-05
    2. ')
' → logprob: -12.25001335144043
    3. '()' → logprob: -12.75001335144043
    4. '())' → logprob: -13.00001335144043
    5. ' )' → logprob: -14.25001335144043
    6. '(' → logprob: -14.75001335144043
    7. '`)' → logprob: -15.00001335144043
    8. '       ' → logprob: -15.12501335144043
    9. ')`' → logprob: -15.12501335144043
    10. '")' → logprob: -15.25001335144043

Token 1616: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.012696231715381145
    2. 'd' → logprob: -5.387696266174316
    3. '```' → logprob: -5.887696266174316
    4. 'Dungeon' → logprob: -6.012696266174316
    5. '#' → logprob: -6.262696266174316
    6. ' if' → logprob: -7.387696266174316
    7. 'D' → logprob: -9.762696266174316
    8. '<|end|>' → logprob: -9.762696266174316
    9. 'If' → logprob: -10.637696266174316
    10. 'Trap' → logprob: -10.637696266174316

Token 1617: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.12693819403648376
    2. '__' → logprob: -2.1269381046295166
    3. '_' → logprob: -12.001937866210938
    4. '___' → logprob: -13.376937866210938
    5. 'name' → logprob: -13.876937866210938
    6. '_name' → logprob: -14.501937866210938
    7. ' ' → logprob: -14.626937866210938
    8. ' ' → logprob: -15.501937866210938
    9. 'Name' → logprob: -16.501937866210938
    10. ' ___' → logprob: -16.876937866210938

Token 1618: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0027793198823928833
    2. '_' → logprob: -7.627779483795166
    3. 'name' → logprob: -7.877779483795166
    4. ' ==' → logprob: -8.377779006958008
    5. ' __' → logprob: -8.377779006958008
    6. '[' → logprob: -8.502779006958008
    7. '.__' → logprob: -8.752779006958008
    8. '==' → logprob: -9.127779006958008
    9. '__':
' → logprob: -9.127779006958008
    10. '<|end|>' → logprob: -9.377779006958008

Token 1619: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00420151324942708
    2. '==' → logprob: -6.379201412200928
    3. '=="' → logprob: -6.754201412200928
    4. '__.__' → logprob: -7.254201412200928
    5. '=='' → logprob: -7.754201412200928
    6. '__('' → logprob: -9.129201889038086
    7. ' ==' → logprob: -10.129201889038086
    8. '____' → logprob: -11.629201889038086
    9. '__.' → logprob: -12.129201889038086
    10. '__["' → logprob: -12.129201889038086

Token 1620: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.34533223509788513
    2. '==' → logprob: -2.095332145690918
    3. '=="' → logprob: -2.220332145690918
    4. '=='' → logprob: -3.595332145690918
    5. '__.__' → logprob: -4.220332145690918
    6. ' ==' → logprob: -4.470332145690918
    7. '.__' → logprob: -6.095332145690918
    8. '"' → logprob: -6.845332145690918
    9. ''' → logprob: -7.845332145690918
    10. '.' → logprob: -7.970332145690918

Token 1621: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0788913294672966
    2. ''' → logprob: -2.5788912773132324
    3. '__' → logprob: -13.95389175415039
    4. ' "__' → logprob: -14.45389175415039
    5. '"class' → logprob: -16.57889175415039
    6. ' '__' → logprob: -17.07889175415039
    7. '"name' → logprob: -17.45389175415039
    8. ''"' → logprob: -17.45389175415039
    9. '"user' → logprob: -18.45389175415039
    10. '   ' → logprob: -18.82889175415039

Token 1622: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.03809186443686485
    2. '__' → logprob: -3.2880918979644775
    3. '"' → logprob: -10.788091659545898
    4. 'name' → logprob: -11.288091659545898
    5. 'built' → logprob: -11.538091659545898
    6. 'python' → logprob: -12.788091659545898
    7. ''' → logprob: -12.913091659545898
    8. '__":
' → logprob: -14.788091659545898
    9. 'builtin' → logprob: -14.788091659545898
    10. ' "__' → logprob: -14.913091659545898

Token 1623: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.011381899937987328
    2. '__' → logprob: -4.886382102966309
    3. '__':
' → logprob: -5.636382102966309
    4. '():
' → logprob: -8.886382102966309
    5. '__()
' → logprob: -11.636382102966309
    6. '__:' → logprob: -11.636382102966309
    7. '->____' → logprob: -12.261382102966309
    8. '__((' → logprob: -12.636382102966309
    9. '__["' → logprob: -12.761382102966309
    10. '(">' → logprob: -12.886382102966309

Token 1624: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14299841225147247
    2. 'Dungeon' → logprob: -2.142998456954956
    3. 'DQ' → logprob: -5.142998218536377
    4. 'dq' → logprob: -5.517998218536377
    5. 'd' → logprob: -6.142998218536377
    6. 'Dw' → logprob: -6.392998218536377
    7. 'D' → logprob: -6.642998218536377
    8. ' Dungeon' → logprob: -8.267998695373535
    9. 'C' → logprob: -8.642998695373535
    10. '```' → logprob: -9.392998695373535

Token 1625: ' game' (ID: 2813)
  Prédit: 'Dungeon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dungeon' → logprob: -0.06054462119936943
    2. 'import' → logprob: -3.435544729232788
    3. 'dq' → logprob: -3.810544729232788
    4. 'd' → logprob: -6.435544490814209
    5. 'DQ' → logprob: -6.560544490814209
    6. 'D' → logprob: -7.935544490814209
    7. '   ' → logprob: -8.060544967651367
    8. ' Dungeon' → logprob: -8.310544967651367
    9. 'quest' → logprob: -8.810544967651367
    10. 'from' → logprob: -9.560544967651367

Token 1626: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5780081152915955
    2. '.run' → logprob: -2.0780081748962402
    3. ' =' → logprob: -2.3280081748962402
    4. '.game' → logprob: -2.4530081748962402
    5. '   ' → logprob: -3.0780081748962402
    6. '().' → logprob: -3.3280081748962402
    7. '.mainloop' → logprob: -3.9530081748962402
    8. '=' → logprob: -4.07800817489624
    9. '.execute' → logprob: -5.82800817489624
    10. ' .' → logprob: -6.70300817489624

Token 1627: ' Dungeon' (ID: 124775)
  Prédit: 'Dungeon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dungeon' → logprob: -0.0009115827269852161
    2. ' Dungeon' → logprob: -7.000911712646484
    3. 'Dung' → logprob: -18.000911712646484
    4. 'D' → logprob: -18.250911712646484
    5. 'Dorm' → logprob: -18.750911712646484
    6. '	D' → logprob: -19.375911712646484
    7. '_D' → logprob: -19.625911712646484
    8. ' dungeon' → logprob: -19.875911712646484
    9. 'Dice' → logprob: -20.500911712646484
    10. 'Dog' → logprob: -21.500911712646484

Token 1628: 'Quest' (ID: 37831)
  Prédit: 'Quest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Quest' → logprob: -2.1008713702030946e-06
    2. 'quest' → logprob: -13.250001907348633
    3. '
' → logprob: -16.625001907348633
    4. ' Quest' → logprob: -16.875001907348633
    5. 'Q' → logprob: -17.250001907348633
    6. '   ' → logprob: -17.250001907348633
    7. 'Quiz' → logprob: -17.375001907348633
    8. 'Qu' → logprob: -17.750001907348633
    9. ' quest' → logprob: -18.000001907348633
    10. '```' → logprob: -18.250001907348633

Token 1629: 'II' (ID: 6013)
  Prédit: 'II'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'II' → logprob: -3.292907877039397e-06
    2. '(game' → logprob: -12.87500286102295
    3. 'game' → logprob: -14.62500286102295
    4. ' II' → logprob: -16.000003814697266
    5. 'III' → logprob: -17.000003814697266
    6. 'I' → logprob: -17.875003814697266
    7. 'ii' → logprob: -18.625003814697266
    8. ' game' → logprob: -18.750003814697266
    9. '```' → logprob: -18.750003814697266
    10. '   ' → logprob: -19.250003814697266

Token 1630: '()
' (ID: 1234)
  Prédit: '.run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.run' → logprob: -0.038992978632450104
    2. '   ' → logprob: -3.5389928817749023
    3. '.' → logprob: -5.538992881774902
    4. '.game' → logprob: -5.663992881774902
    5. 'game' → logprob: -6.788992881774902
    6. '
' → logprob: -7.913992881774902
    7. 'run' → logprob: -9.788992881774902
    8. '.
' → logprob: -9.788992881774902
    9. '.mainloop' → logprob: -10.163992881774902
    10. '    
' → logprob: -10.288992881774902

Token 1631: '   ' (ID: 271)
  Prédit: 'game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'game' → logprob: -0.048980649560689926
    2. '   ' → logprob: -3.048980712890625
    3. '	game' → logprob: -8.173980712890625
    4. ' game' → logprob: -9.548980712890625
    5. '(game' → logprob: -10.673980712890625
    6. '
' → logprob: -11.673980712890625
    7. '.game' → logprob: -12.673980712890625
    8. '  ' → logprob: -13.423980712890625
    9. '_game' → logprob: -13.548980712890625
    10. '    
' → logprob: -14.048980712890625

Token 1632: ' game' (ID: 2813)
  Prédit: 'game'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'game' (adapté à ' game') → logprob: 0.0
    2. ' game' → logprob: -18.125
    3. '
' → logprob: -18.375
    4. '   ' → logprob: -19.0
    5. '	game' → logprob: -19.75
    6. '(game' → logprob: -19.875
    7. '```' → logprob: -21.0
    8. '.game' → logprob: -21.375
    9. '_game' → logprob: -21.625
    10. '`' → logprob: -22.5

Token 1633: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -6.706686690449715e-05
    2. '.' → logprob: -9.625066757202148
    3. 'run' → logprob: -14.375066757202148
    4. '.
' → logprob: -16.50006675720215
    5. ' .' → logprob: -16.50006675720215
    6. '   ' → logprob: -16.75006675720215
    7. '().' → logprob: -17.12506675720215
    8. '.mainloop' → logprob: -17.75006675720215
    9. '.start' → logprob: -18.62506675720215
    10. '
' → logprob: -18.75006675720215

Token 1634: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1632
Tokens correctement prédits (1ère position, stricte): 657
Tokens correctement prédits (1ère position, avec adaptation): 718
Tokens correctement prédits (top 10): 1269
Précision stricte (1ère position): 40.26%
Précision adaptée (1ère position): 44.00%
Précision (top 10): 77.76%
================================================================================
