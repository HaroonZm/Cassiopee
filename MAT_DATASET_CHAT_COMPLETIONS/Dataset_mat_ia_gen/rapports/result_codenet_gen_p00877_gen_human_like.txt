================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def can_separate(points_black, points_white):
    # Combine points with colors: black=0, white=1
    points = [(x, y, 0) for (x, y) in points_black] + [(x, y, 1) for (x, y) in points_white]

    # If all points are same color or no points, trivially separate
    if not points_black or not points_white:
        return True

    # To check if two sets separated by a line, try all pairs of points to define line directions
    for i in range(len(points)):
        for j in range(i + 1, len(points)):
            x1, y1, c1 = points[i]
            x2, y2, c2 = points[j]
            # Skip if points have same position (problem states they don't)
            # Direction vector orthogonal to line connecting points i and j
            dx = x2 - x1
            dy = y2 - y1

            # The line direction vector can be considered perpendicular to vector (dx, dy)
            # We'll use vector (-dy, dx) for line direction

            # Define the line: ax + by + c = 0 with a=-dy, b=dx
            a = -dy
            b = dx

            # To avoid overflow, no need to normalize because only relative sign matters

            # Compute c so that line doesn't pass through points i or j
            # Since line is infinite, any line parallel and not crossing points i,j is valid
            # Let's check two possible lines, slightly shifting by offset (+1 and -1), but here, we actually
            # want to check separation line that doesn't pass through any point.

            # Instead, we just check sign of each point for line through points i and j
            # But line through i and j passes through those points -> line crossing points (forbidden)
            # So we need to consider lines parallel to the line through i and j
            # Try 2 possible offsets: one offset just above the max projection of points i and j along a,b
            # and one just below min

            # Project all points to line normal vector (a,b)
            projections = [a * x + b * y for (x, y, _) in points]

            # The projections of points i and j are:
            pi = a * x1 + b * y1
            pj = a * x2 + b * y2
            p_min = min(pi, pj)
            p_max = max(pi, pj)

            # Candidate offsets for line to not cross points i,j
            # We can try lines at p = p_min - 0.5 and p = p_max + 0.5 (offset sufficiently small)
            candidate_ps = [p_min - 0.5, p_max + 0.5]

            for p in candidate_ps:
                # For each point get sign relative to line ax + by = p
                # sign = (a*x + b*y) - p
                signs = []
                for (x, y, c) in points:
                    val = a * x + b * y - p
                    # Since points have integer coords and p is offset by 0.5, val != 0 always => no point on line
                    s = 1 if val > 0 else -1
                    signs.append((s, c))

                # Check if signs separate the colors
                # One side has only color 0, other side has only color 1
                # That means the signs must split colors perfectly

                side0_colors = set(c for s, c in signs if s == 1)
                side1_colors = set(c for s, c in signs if s == -1)

                if (side0_colors == {0} and side1_colors == {1}) or (side0_colors == {1} and side1_colors == {0}):
                    return True

    return False


def main():
    while True:
        line = input().strip()
        if line == '':
            continue
        n, m = map(int, line.split())
        if n == 0 and m == 0:
            break
        points_black = [tuple(map(int, input().split())) for _ in range(n)]
        points_white = [tuple(map(int, input().split())) for _ in range(m)]
        result = "YES" if can_separate(points_black, points_white) else "NO"
        print(result)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' can' (ID: 665)
  → Token d'amorce (pas de prédiction)

Token 2: '_se' (ID: 7123)
  → Token d'amorce (pas de prédiction)

Token 3: 'parate' (ID: 60471)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00020270596724003553
    2. '_e' → logprob: -8.750203132629395
    3. 'a' → logprob: -11.000203132629395
    4. '```' → logprob: -12.250203132629395
    5. 'elif' → logprob: -12.750203132629395
    6. 'arch' → logprob: -12.875203132629395
    7. 'quence' → logprob: -13.000203132629395
    8. 'em' → logprob: -13.125203132629395
    9. '_' → logprob: -13.375203132629395
    10. 't' → logprob: -13.500203132629395

Token 4: '(points' (ID: 72131)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.049598295241594315
    2. '(' → logprob: -3.049598217010498
    3. ' (' → logprob: -7.424598217010498
    4. '```' → logprob: -9.049598693847656
    5. '(_' → logprob: -10.049598693847656
    6. 's' → logprob: -10.299598693847656
    7. ' _' → logprob: -10.424598693847656
    8. '_(' → logprob: -10.549598693847656
    9. '_space' → logprob: -11.049598693847656
    10. '(space' → logprob: -11.549598693847656

Token 5: '_black' (ID: 92024)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2091817855834961
    2. ',' → logprob: -2.334181785583496
    3. ')' → logprob: -2.584181785583496
    4. '[' → logprob: -4.334181785583496
    5. ':' → logprob: -7.209181785583496
    6. '<|end|>' → logprob: -7.209181785583496
    7. '_points' → logprob: -7.834181785583496
    8. '):
' → logprob: -8.209181785583496
    9. '[]):' → logprob: -8.209181785583496
    10. '```' → logprob: -8.959181785583496

Token 6: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004611218813806772
    2. '):' → logprob: -6.129611015319824
    3. ')' → logprob: -6.254611015319824
    4. '_points' → logprob: -7.879611015319824
    5. ' ,' → logprob: -9.754611015319824
    6. ',p' → logprob: -11.504611015319824
    7. ',b' → logprob: -11.504611015319824
    8. '```' → logprob: -11.629611015319824
    9. '_,' → logprob: -12.004611015319824
    10. '_' → logprob: -12.129611015319824

Token 7: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.023313844576478004
    2. 'points' → logprob: -3.7733137607574463
    3. '_points' → logprob: -10.648313522338867
    4. ' white' → logprob: -11.023313522338867
    5. '	points' → logprob: -11.773313522338867
    6. '```' → logprob: -12.273313522338867
    7. ')' → logprob: -12.523313522338867
    8. '(points' → logprob: -13.023313522338867
    9. ' ' → logprob: -13.148313522338867
    10. ' ' → logprob: -13.648313522338867

Token 8: '_white' (ID: 105599)
  Prédit: '_white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_white' → logprob: -0.002442596945911646
    2. '_black' → logprob: -6.127442359924316
    3. '_' → logprob: -9.502442359924316
    4. ',' → logprob: -9.627442359924316
    5. '_wh' → logprob: -10.127442359924316
    6. ')' → logprob: -10.627442359924316
    7. 'white' → logprob: -10.752442359924316
    8. '```' → logprob: -11.752442359924316
    9. '_blue' → logprob: -11.877442359924316
    10. '_red' → logprob: -13.252442359924316

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0032922595273703337
    2. ')' → logprob: -5.753292083740234
    3. ':' → logprob: -9.753292083740234
    4. ',' → logprob: -10.753292083740234
    5. '):
' → logprob: -10.753292083740234
    6. ''):' → logprob: -12.628292083740234
    7. '```' → logprob: -12.878292083740234
    8. '):

' → logprob: -13.128292083740234
    9. ' ):' → logprob: -13.878292083740234
    10. '   ' → logprob: -13.878292083740234

Token 10: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02565193362534046
    2. '   ' → logprob: -3.9006519317626953
    3. '():' → logprob: -5.650651931762695
    4. '```' → logprob: -7.400651931762695
    5. '(' → logprob: -7.775651931762695
    6. '':' → logprob: -9.525651931762695
    7. '    
' → logprob: -9.650651931762695
    8. '(:' → logprob: -9.900651931762695
    9. ':
' → logprob: -9.900651931762695
    10. '":' → logprob: -10.025651931762695

Token 11: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16023559868335724
    2. ':' → logprob: -2.785235643386841
    3. '```' → logprob: -3.410235643386841
    4. ' ' → logprob: -3.785235643386841
    5. '    ' → logprob: -4.910235404968262
    6. '    
' → logprob: -5.160235404968262
    7. '(' → logprob: -6.160235404968262
    8. ' return' → logprob: -6.535235404968262
    9. '       ' → logprob: -6.660235404968262
    10. ''' → logprob: -6.785235404968262

Token 12: ' Combine' (ID: 78092)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3921440839767456
    2. '```' → logprob: -1.3921440839767456
    3. ' ```' → logprob: -1.8921440839767456
    4. ' ' → logprob: -2.392144203186035
    5. ' return' → logprob: -2.642144203186035
    6. 'return' → logprob: -2.892144203186035
    7. ' for' → logprob: -3.892144203186035
    8. ' """' → logprob: -4.142144203186035
    9. ''' → logprob: -4.892144203186035
    10. ' `' → logprob: -5.017144203186035

Token 13: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.20773446559906006
    2. '_points' → logprob: -2.0827345848083496
    3. '(points' → logprob: -3.4577345848083496
    4. 'points' → logprob: -4.20773458480835
    5. '_' → logprob: -5.45773458480835
    6. '(' → logprob: -5.70773458480835
    7. ' the' → logprob: -6.20773458480835
    8. ' all' → logprob: -6.20773458480835
    9. ' both' → logprob: -6.45773458480835
    10. ' (' → logprob: -7.08273458480835

Token 14: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4640832245349884
    2. '_' → logprob: -1.589083194732666
    3. '_points' → logprob: -2.339083194732666
    4. '=' → logprob: -3.089083194732666
    5. '(' → logprob: -4.339083194732666
    6. ',' → logprob: -5.839083194732666
    7. ')' → logprob: -6.464083194732666
    8. '[' → logprob: -6.714083194732666
    9. ':' → logprob: -6.964083194732666
    10. '```' → logprob: -6.964083194732666

Token 15: ' colors' (ID: 10803)
  Prédit: ' labels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' labels' → logprob: -0.0831630602478981
    2. 'labels' → logprob: -3.208163022994995
    3. '_labels' → logprob: -4.083163261413574
    4. ' a' → logprob: -5.583163261413574
    5. ' color' → logprob: -5.708163261413574
    6. ' their' → logprob: -5.833163261413574
    7. ' labeled' → logprob: -5.958163261413574
    8. 'out' → logprob: -6.333163261413574
    9. 'color' → logprob: -6.583163261413574
    10. '_label' → logprob: -6.833163261413574

Token 16: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2487975358963013
    2. ' points' → logprob: -1.2487975358963013
    3. ' =' → logprob: -2.2487974166870117
    4. '(points' → logprob: -2.3737974166870117
    5. '_points' → logprob: -2.4987974166870117
    6. 'points' → logprob: -2.8737974166870117
    7. ':' → logprob: -2.8737974166870117
    8. '=' → logprob: -4.873797416687012
    9. '```' → logprob: -4.873797416687012
    10. ',' → logprob: -5.623797416687012

Token 17: ' black' (ID: 5960)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.023689020425081253
    2. '(points' → logprob: -5.273688793182373
    3. 'points' → logprob: -5.398688793182373
    4. '[' → logprob: -5.898688793182373
    5. '```' → logprob: -5.898688793182373
    6. ' [(' → logprob: -5.898688793182373
    7. '_points' → logprob: -6.523688793182373
    8. ' [' → logprob: -7.148688793182373
    9. ' [('' → logprob: -7.523688793182373
    10. ')' → logprob: -8.023689270019531

Token 18: '=' (ID: 28)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.7966374158859253
    2. ',' → logprob: -1.2966374158859253
    3. '   ' → logprob: -2.296637535095215
    4. ' =' → logprob: -2.296637535095215
    5. ')' → logprob: -4.171637535095215
    6. '=' → logprob: -4.421637535095215
    7. '```' → logprob: -4.671637535095215
    8. ' ,' → logprob: -5.046637535095215
    9. '[' → logprob: -5.421637535095215
    10. '_' → logprob: -5.421637535095215

Token 19: '0' (ID: 15)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09541743993759155
    2. '0' → logprob: -2.5954174995422363
    3. ' -' → logprob: -5.220417499542236
    4. ' '' → logprob: -5.595417499542236
    5. ''' → logprob: -5.845417499542236
    6. ' (' → logprob: -6.220417499542236
    7. '-' → logprob: -7.095417499542236
    8. '1' → logprob: -7.345417499542236
    9. '(' → logprob: -7.845417499542236
    10. ' True' → logprob: -8.595417022705078

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002736878115683794
    2. ')' → logprob: -6.377737045288086
    3. ' ,' → logprob: -7.377737045288086
    4. ',
' → logprob: -9.002737045288086
    5. '<|end|>' → logprob: -9.002737045288086
    6. '   ' → logprob: -9.377737045288086
    7. '<|end|>' → logprob: -10.627737045288086
    8. '```' → logprob: -11.752737045288086
    9. ' points' → logprob: -11.877737045288086
    10. '0' → logprob: -12.252737045288086

Token 21: ' white' (ID: 6461)
  Prédit: ' white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' white' → logprob: -0.00020020268857479095
    2. 'white' → logprob: -8.625200271606445
    3. '   ' → logprob: -11.500200271606445
    4. '_white' → logprob: -12.875200271606445
    5. ' ' → logprob: -13.000200271606445
    6. '1' → logprob: -13.750200271606445
    7. ' and' → logprob: -14.250200271606445
    8. ',' → logprob: -14.375200271606445
    9. ' whitespace' → logprob: -14.625200271606445
    10. '.white' → logprob: -14.875200271606445

Token 22: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5708760023117065
    2. '=' → logprob: -1.3208760023117065
    3. ')' → logprob: -2.320876121520996
    4. ' =' → logprob: -3.445876121520996
    5. '```' → logprob: -4.195876121520996
    6. ')=' → logprob: -5.195876121520996
    7. '_points' → logprob: -5.195876121520996
    8. '   ' → logprob: -5.820876121520996
    9. '):' → logprob: -5.945876121520996
    10. '<|end|>' → logprob: -6.820876121520996

Token 23: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4769652485847473
    2. ' ' → logprob: -0.9769652485847473
    3. '0' → logprob: -5.851965427398682
    4. '```' → logprob: -12.476964950561523
    5. ' ' → logprob: -13.726964950561523
    6. '2' → logprob: -13.976964950561523
    7. '`' → logprob: -14.101964950561523
    8. '  ' → logprob: -14.226964950561523
    9. '   ' → logprob: -14.789464950561523
    10. '[' → logprob: -15.414464950561523

Token 24: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9821033477783203
    2. ' points' → logprob: -1.6071033477783203
    3. ',' → logprob: -2.3571033477783203
    4. 'points' → logprob: -2.4821033477783203
    5. ':' → logprob: -2.6071033477783203
    6. '
' → logprob: -2.8571033477783203
    7. '```' → logprob: -3.6071033477783203
    8. '):' → logprob: -4.10710334777832
    9. '(points' → logprob: -4.48210334777832
    10. '_points' → logprob: -4.60710334777832

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3224399983882904
    2. ',' → logprob: -2.4474399089813232
    3. ':' → logprob: -2.5724399089813232
    4. '```' → logprob: -3.3224399089813232
    5. '
' → logprob: -3.4474399089813232
    6. ' ' → logprob: -4.697440147399902
    7. '\n' → logprob: -5.197440147399902
    8. '    
' → logprob: -5.447440147399902
    9. '``' → logprob: -5.697440147399902
    10. ' points' → logprob: -5.697440147399902

Token 26: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.10571853071451187
    2. 'points' (adapté à ' points') → logprob: -2.7307186126708984
    3. '   ' → logprob: -4.230718612670898
    4. '(points' → logprob: -4.605718612670898
    5. '```' → logprob: -6.105718612670898
    6. '_points' → logprob: -6.355718612670898
    7. '[' → logprob: -6.730718612670898
    8. ',' → logprob: -6.730718612670898
    9. '	points' → logprob: -7.480718612670898
    10. ' p' → logprob: -7.480718612670898

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5320445895195007
    2. '_with' → logprob: -1.2820446491241455
    3. '_' → logprob: -2.1570446491241455
    4. '_points' → logprob: -5.157044410705566
    5. '=' → logprob: -5.282044410705566
    6. '_comb' → logprob: -6.282044410705566
    7. '_colors' → logprob: -6.282044410705566
    8. ')' → logprob: -7.282044410705566
    9. ',' → logprob: -7.532044410705566
    10. 'with' → logprob: -7.657044410705566

Token 28: ' [(' (ID: 43900)
  Prédit: ' [('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [(' → logprob: -0.34188491106033325
    2. ' points' → logprob: -1.9668848514556885
    3. '[(' → logprob: -2.3418848514556885
    4. ' [' → logprob: -3.0918848514556885
    5. '[' → logprob: -5.091885089874268
    6. 'points' → logprob: -7.216885089874268
    7. ' list' → logprob: -8.09188461303711
    8. ' [[' → logprob: -8.59188461303711
    9. ' np' → logprob: -9.21688461303711
    10. ' [
' → logprob: -9.21688461303711

Token 29: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09397107362747192
    2. 'p' → logprob: -2.468971014022827
    3. 'pt' → logprob: -6.218971252441406
    4. ' x' → logprob: -7.468971252441406
    5. '   ' → logprob: -7.718971252441406
    6. 'px' → logprob: -7.718971252441406
    7. ')' → logprob: -7.843971252441406
    8. ' p' → logprob: -8.093971252441406
    9. 'point' → logprob: -8.343971252441406
    10. '*' → logprob: -9.218971252441406

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008348815608769655
    2. ',y' → logprob: -7.625834941864014
    3. ' ,' → logprob: -8.125834465026855
    4. '[' → logprob: -10.375834465026855
    5. '<|end|>' → logprob: -12.250834465026855
    6. 'y' → logprob: -12.500834465026855
    7. ')' → logprob: -13.500834465026855
    8. ' ' → logprob: -13.625834465026855
    9. '```' → logprob: -13.750834465026855
    10. '<|end|>' → logprob: -14.125834465026855

Token 31: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3132633566856384
    2. ' y' → logprob: -1.3132634162902832
    3. '	y' → logprob: -14.063262939453125
    4. ' ' → logprob: -15.188262939453125
    5. ')y' → logprob: -15.563262939453125
    6. '    ' → logprob: -15.938262939453125
    7. ')' → logprob: -16.188262939453125
    8. ',y' → logprob: -16.563262939453125
    9. '   ' → logprob: -16.688262939453125
    10. ' ' → logprob: -17.563262939453125

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021212305000517517
    2. ' ,' → logprob: -8.500211715698242
    3. ')' → logprob: -12.750211715698242
    4. '),' → logprob: -13.000211715698242
    5. '0' → logprob: -14.000211715698242
    6. ' ' → logprob: -14.500211715698242
    7. '<|end|>' → logprob: -14.500211715698242
    8. '   ' → logprob: -15.625211715698242
    9. '‌,' → logprob: -15.750211715698242
    10. ',)' → logprob: -15.875211715698242

Token 33: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3486112058162689
    2. '0' → logprob: -1.2236112356185913
    3. ' color' → logprob: -8.973610877990723
    4. 'color' → logprob: -11.098610877990723
    5. ')' → logprob: -11.598610877990723
    6. ' black' → logprob: -12.348610877990723
    7. ' ' → logprob: -12.473610877990723
    8. '1' → logprob: -13.161110877990723
    9. ' )' → logprob: -14.223610877990723
    10. '  ' → logprob: -14.286110877990723

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024844540748745203
    2. ' ' → logprob: -6.002484321594238
    3. '1' → logprob: -12.252484321594238
    4. ')' → logprob: -13.877484321594238
    5. 'black' → logprob: -14.127484321594238
    6. 'color' → logprob: -14.377484321594238
    7. '   ' → logprob: -14.752484321594238
    8. '  ' → logprob: -14.939984321594238
    9. ' black' → logprob: -15.252484321594238
    10. '```' → logprob: -16.252485275268555

Token 35: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2567063868045807
    2. '),' → logprob: -1.5067063570022583
    3. ')]' → logprob: -5.381706237792969
    4. '),
' → logprob: -9.006706237792969
    5. '),(' → logprob: -11.381706237792969
    6. ')...' → logprob: -11.506706237792969
    7. ')
' → logprob: -12.256706237792969
    8. ')],' → logprob: -12.256706237792969
    9. ' )' → logprob: -12.756706237792969
    10. '   ' → logprob: -13.006706237792969

Token 36: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07681664079427719
    2. ',' → logprob: -3.2018165588378906
    3. ' for' → logprob: -4.076816558837891
    4. '),' → logprob: -4.201816558837891
    5. 'for' → logprob: -7.451816558837891
    6. ')]' → logprob: -8.57681655883789
    7. '   ' → logprob: -8.95181655883789
    8. ' )' → logprob: -9.45181655883789
    9. ']' → logprob: -9.95181655883789
    10. '       ' → logprob: -10.20181655883789

Token 37: ' (' (ID: 350)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.3110194504261017
    2. ' points' → logprob: -1.4360194206237793
    3. 'p' → logprob: -4.436019420623779
    4. ' pt' → logprob: -5.186019420623779
    5. ' _' → logprob: -5.561019420623779
    6. ' point' → logprob: -5.811019420623779
    7. 'points' → logprob: -6.436019420623779
    8. ' black' → logprob: -7.061019420623779
    9. ' b' → logprob: -7.686019420623779
    10. ' ' → logprob: -7.811019420623779

Token 38: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006770672742277384
    2. ' x' → logprob: -5.006770610809326
    3. '(x' → logprob: -10.881771087646484
    4. ')' → logprob: -11.506771087646484
    5. ')x' → logprob: -11.631771087646484
    6. '	x' → logprob: -12.256771087646484
    7. ' (' → logprob: -12.881771087646484
    8. '_x' → logprob: -12.881771087646484
    9. 'p' → logprob: -13.506771087646484
    10. 'points' → logprob: -13.506771087646484

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004755943373311311
    2. ' ,' → logprob: -8.500475883483887
    3. '<|end|>' → logprob: -9.125475883483887
    4. '_,' → logprob: -9.750475883483887
    5. '‌,' → logprob: -10.875475883483887
    6. ' in' → logprob: -11.000475883483887
    7. ',y' → logprob: -11.125475883483887
    8. ',_' → logprob: -11.500475883483887
    9. ',x' → logprob: -11.625475883483887
    10. ',user' → logprob: -12.125475883483887

Token 40: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3135029077529907
    2. 'y' → logprob: -1.3135029077529907
    3. ')' → logprob: -9.56350326538086
    4. 'x' → logprob: -9.93850326538086
    5. ' points' → logprob: -9.93850326538086
    6. ' x' → logprob: -10.93850326538086
    7. ' ' → logprob: -11.06350326538086
    8. 'points' → logprob: -12.18850326538086
    9. ' _' → logprob: -12.56350326538086
    10. '<|end|>' → logprob: -12.56350326538086

Token 41: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.055329155176877975
    2. 'in' → logprob: -3.1803290843963623
    3. ' in' → logprob: -4.430329322814941
    4. ' )' → logprob: -8.555329322814941
    5. 'points' → logprob: -9.680329322814941
    6. ')]' → logprob: -10.430329322814941
    7. '),' → logprob: -11.805329322814941
    8. '<|end|>' → logprob: -11.930329322814941
    9. '   ' → logprob: -12.305329322814941
    10. '(points' → logprob: -12.430329322814941

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02638494223356247
    2. 'in' → logprob: -3.6513848304748535
    3. 'points' → logprob: -10.651385307312012
    4. ')' → logprob: -11.026385307312012
    5. ' points' → logprob: -11.026385307312012
    6. '<|end|>' → logprob: -11.276385307312012
    7. ']' → logprob: -12.026385307312012
    8. 's' → logprob: -12.901385307312012
    9. '(points' → logprob: -12.901385307312012
    10. '_points' → logprob: -14.151385307312012

Token 43: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.2521103024482727
    2. 'points' → logprob: -1.502110242843628
    3. '(points' → logprob: -8.752110481262207
    4. '	points' → logprob: -11.502110481262207
    5. ')' → logprob: -12.627110481262207
    6. '_points' → logprob: -13.002110481262207
    7. '.points' → logprob: -13.127110481262207
    8. ' pontos' → logprob: -14.377110481262207
    9. ' puntos' → logprob: -14.502110481262207
    10. ' ' → logprob: -14.814610481262207

Token 44: '_black' (ID: 92024)
  Prédit: '_black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_black' → logprob: -1.981667537620524e-06
    2. 'black' → logprob: -14.375001907348633
    3. '_' → logprob: -15.125001907348633
    4. '_white' → logprob: -15.250001907348633
    5. ')_' → logprob: -15.625001907348633
    6. '_bl' → logprob: -15.875001907348633
    7. ')' → logprob: -15.875001907348633
    8. ')]' → logprob: -16.500001907348633
    9. ']_' → logprob: -16.625001907348633
    10. ' _' → logprob: -16.750001907348633

Token 45: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.865583706414327e-05
    2. ' ]' → logprob: -9.25009822845459
    3. ')]' → logprob: -13.75009822845459
    4. ']+' → logprob: -13.87509822845459
    5. '   ' → logprob: -15.25009822845459
    6. ')' → logprob: -16.125099182128906
    7. '`]' → logprob: -16.125099182128906
    8. '']' → logprob: -16.875099182128906
    9. ']
' → logprob: -17.125099182128906
    10. '+]' → logprob: -17.750099182128906

Token 46: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.23806369304656982
    2. ']' → logprob: -2.1130638122558594
    3. '+' → logprob: -2.7380638122558594
    4. ')' → logprob: -4.488063812255859
    5. ']+' → logprob: -4.863063812255859
    6. ' +
' → logprob: -5.738063812255859
    7. ' ]' → logprob: -6.613063812255859
    8. ')+(' → logprob: -7.613063812255859
    9. ')+' → logprob: -7.613063812255859
    10. '+[' → logprob: -7.738063812255859

Token 47: ' [(' (ID: 43900)
  Prédit: ' [('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [(' → logprob: -0.5759485960006714
    2. '[(' → logprob: -0.8259485960006714
    3. '[((' → logprob: -11.825948715209961
    4. ' [' → logprob: -14.200948715209961
    5. '([(' → logprob: -14.200948715209961
    6. '[' → logprob: -14.825948715209961
    7. ' ((' → logprob: -17.32594871520996
    8. ' ' → logprob: -17.57594871520996
    9. ' [('' → logprob: -18.45094871520996
    10. ' ' → logprob: -18.95094871520996

Token 48: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0004247163888067007
    2. '(x' → logprob: -8.2504243850708
    3. ' x' → logprob: -8.7504243850708
    4. ' (' → logprob: -12.2504243850708
    5. '(' → logprob: -16.000425338745117
    6. ')x' → logprob: -16.500425338745117
    7. ''x' → logprob: -17.125425338745117
    8. ')' → logprob: -17.500425338745117
    9. '"x' → logprob: -17.875425338745117
    10. '  ' → logprob: -18.500425338745117

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6776029699249193e-05
    2. ' ,' → logprob: -10.75002670288086
    3. '<|end|>' → logprob: -12.25002670288086
    4. ',y' → logprob: -15.62502670288086
    5. ',
' → logprob: -15.87502670288086
    6. '‌,' → logprob: -16.25002670288086
    7. '(' → logprob: -17.12502670288086
    8. 's' → logprob: -17.25002670288086
    9. ')' → logprob: -17.37502670288086
    10. '<|end|>' → logprob: -17.50002670288086

Token 50: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.253579318523407
    2. 'y' → logprob: -1.5035793781280518
    3. '<|end|>' → logprob: -7.128579139709473
    4. ',' → logprob: -7.628579139709473
    5. ' ' → logprob: -8.378579139709473
    6. ',y' → logprob: -9.628579139709473
    7. ' ,' → logprob: -10.003579139709473
    8. ''y' → logprob: -12.253579139709473
    9. ' ' → logprob: -12.753579139709473
    10. '	y' → logprob: -12.753579139709473

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.85235276655294e-05
    2. ' ,' → logprob: -9.375088691711426
    3. '(' → logprob: -13.500088691711426
    4. ',(' → logprob: -14.250088691711426
    5. '(x' → logprob: -15.000088691711426
    6. ')' → logprob: -15.125088691711426
    7. ' (' → logprob: -15.250088691711426
    8. ',x' → logprob: -15.625088691711426
    9. '<|end|>' → logprob: -15.750088691711426
    10. '),' → logprob: -16.00008773803711

Token 52: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16025550663471222
    2. ' ' → logprob: -1.9102555513381958
    3. '<|end|>' → logprob: -11.285255432128906
    4. ')' → logprob: -12.035255432128906
    5. '0' → logprob: -12.285255432128906
    6. ',' → logprob: -12.535255432128906
    7. ' ' → logprob: -13.910255432128906
    8. '```' → logprob: -14.035255432128906
    9. '  ' → logprob: -14.160255432128906
    10. ' ,' → logprob: -15.222755432128906

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000553151941858232
    2. ' ' → logprob: -7.500553131103516
    3. '<|end|>' → logprob: -16.500553131103516
    4. '  ' → logprob: -16.625553131103516
    5. ')' → logprob: -17.000553131103516
    6. '   ' → logprob: -18.000553131103516
    7. '```' → logprob: -18.625553131103516
    8. '0' → logprob: -18.750553131103516
    9. ',' → logprob: -19.063053131103516
    10. '۱' → logprob: -19.313053131103516

Token 54: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.966313281329349e-05
    2. ')]' → logprob: -10.625049591064453
    3. ' )' → logprob: -10.875049591064453
    4. 'for' → logprob: -13.000049591064453
    5. '   ' → logprob: -13.375049591064453
    6. ')
' → logprob: -14.250049591064453
    7. ']' → logprob: -15.125049591064453
    8. '))' → logprob: -15.375049591064453
    9. ' ' → logprob: -15.500049591064453
    10. ' for' → logprob: -15.750049591064453

Token 55: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22808991372585297
    2. ' for' → logprob: -1.8530899286270142
    3. 'for' → logprob: -3.1030898094177246
    4. ' in' → logprob: -6.353089809417725
    5. ' )' → logprob: -8.103090286254883
    6. ' ' → logprob: -9.603090286254883
    7. 'in' → logprob: -9.603090286254883
    8. ')]' → logprob: -10.103090286254883
    9. '   ' → logprob: -10.228090286254883
    10. ']' → logprob: -11.853090286254883

Token 56: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5399215817451477
    2. '(points' → logprob: -1.539921522140503
    3. ' points' → logprob: -1.664921522140503
    4. 'points' → logprob: -5.039921760559082
    5. '(x' → logprob: -5.289921760559082
    6. '(point' → logprob: -7.039921760559082
    7. '(p' → logprob: -7.164921760559082
    8. '(' → logprob: -8.414921760559082
    9. '(w' → logprob: -9.789921760559082
    10. ' point' → logprob: -10.539921760559082

Token 57: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1749560534954071
    2. 'points' → logprob: -2.7999560832977295
    3. '(x' → logprob: -2.7999560832977295
    4. ' (' → logprob: -4.17495584487915
    5. ' points' → logprob: -4.54995584487915
    6. ' x' → logprob: -5.04995584487915
    7. 'p' → logprob: -5.54995584487915
    8. 'point' → logprob: -6.67495584487915
    9. ')' → logprob: -8.049956321716309
    10. '(points' → logprob: -8.049956321716309

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25878679752349854
    2. ' in' → logprob: -2.258786678314209
    3. '(x' → logprob: -2.758786678314209
    4. ',y' → logprob: -3.883786678314209
    5. '(y' → logprob: -4.508786678314209
    6. ' ,' → logprob: -4.758786678314209
    7. 'in' → logprob: -5.133786678314209
    8. ' (' → logprob: -5.383786678314209
    9. '_white' → logprob: -5.758786678314209
    10. ',x' → logprob: -6.258786678314209

Token 59: ' y' (ID: 342)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.23385436832904816
    2. 'points' → logprob: -1.6088544130325317
    3. '_white' → logprob: -5.483854293823242
    4. '(points' → logprob: -6.233854293823242
    5. 'white' → logprob: -6.858854293823242
    6. ' white' → logprob: -7.483854293823242
    7. ')' → logprob: -8.983854293823242
    8. ' y' → logprob: -9.233854293823242
    9. '_points' → logprob: -9.233854293823242
    10. 'y' → logprob: -9.358854293823242

Token 60: ')' (ID: 8)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15160304307937622
    2. ')' → logprob: -2.1516029834747314
    3. 'in' → logprob: -3.7766029834747314
    4. 'points' → logprob: -6.9016032218933105
    5. ' )' → logprob: -8.776602745056152
    6. ' points' → logprob: -9.026602745056152
    7. 's' → logprob: -10.026602745056152
    8. '(points' → logprob: -10.151602745056152
    9. '<|end|>' → logprob: -10.526602745056152
    10. ')]' → logprob: -11.151602745056152

Token 61: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.025524340569972992
    2. 'in' → logprob: -3.900524377822876
    3. 'points' → logprob: -6.025524139404297
    4. ' points' → logprob: -6.025524139404297
    5. ')' → logprob: -9.275524139404297
    6. '(points' → logprob: -10.900524139404297
    7. ']' → logprob: -11.400524139404297
    8. '_points' → logprob: -11.900524139404297
    9. 's' → logprob: -12.275524139404297
    10. 'oints' → logprob: -14.650524139404297

Token 62: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.4740879237651825
    2. ' points' → logprob: -0.9740879535675049
    3. '(points' → logprob: -11.599087715148926
    4. '	points' → logprob: -13.974087715148926
    5. '.points' → logprob: -14.974087715148926
    6. ')' → logprob: -15.599087715148926
    7. '_points' → logprob: -16.099088668823242
    8. ' ' → logprob: -16.349088668823242
    9. 'oints' → logprob: -16.974088668823242
    10. 'point' → logprob: -17.224088668823242

Token 63: '_white' (ID: 105599)
  Prédit: '_white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_white' → logprob: -2.339278580620885e-06
    2. '_' → logprob: -14.250001907348633
    3. ')_' → logprob: -14.750001907348633
    4. ')' → logprob: -14.750001907348633
    5. 'white' → logprob: -15.000001907348633
    6. '_black' → logprob: -15.125001907348633
    7. '_WHITE' → logprob: -16.500001907348633
    8. 'White' → logprob: -17.250001907348633
    9. '])' → logprob: -17.375001907348633
    10. ')]' → logprob: -17.375001907348633

Token 64: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008649553172290325
    2. ')]' → logprob: -4.7586493492126465
    3. ')' → logprob: -11.008649826049805
    4. '])' → logprob: -11.133649826049805
    5. ' ]' → logprob: -13.133649826049805
    6. '])]' → logprob: -14.133649826049805
    7. ')])' → logprob: -14.883649826049805
    8. ']
' → logprob: -15.258649826049805
    9. ']}' → logprob: -15.633649826049805
    10. '()]' → logprob: -15.883649826049805

Token 65: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16576310992240906
    2. '   ' → logprob: -2.6657631397247314
    3. ':
' → logprob: -2.9157631397247314
    4. '
' → logprob: -3.9157631397247314
    5. '    
' → logprob: -5.665762901306152
    6. '\n' → logprob: -6.790762901306152
    7. '\' → logprob: -6.915762901306152
    8. ',' → logprob: -7.165762901306152
    9. '```' → logprob: -7.665762901306152
    10. ' ' → logprob: -7.790762901306152

Token 66: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0066947937011719
    2. '   ' → logprob: -1.6316947937011719
    3. 'from' → logprob: -1.8816947937011719
    4. 'import' → logprob: -2.256694793701172
    5. ' from' → logprob: -2.506694793701172
    6. ' for' → logprob: -3.381694793701172
    7. 'for' → logprob: -4.256694793701172
    8. ':' → logprob: -4.256694793701172
    9. '#' (adapté à ' #') → logprob: -4.756694793701172
    10. '```' → logprob: -5.131694793701172

Token 67: ' If' (ID: 1843)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6575430631637573
    2. ' from' → logprob: -0.9075430631637573
    3. ' import' → logprob: -3.532543182373047
    4. 'from' → logprob: -4.157543182373047
    5. ' n' → logprob: -4.657543182373047
    6. 'import' → logprob: -5.657543182373047
    7. ' if' → logprob: -5.907543182373047
    8. '```' → logprob: -5.907543182373047
    9. '#' → logprob: -6.032543182373047
    10. 'for' → logprob: -6.282543182373047

Token 68: ' all' (ID: 722)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.048944439738988876
    2. ' not' → logprob: -3.1739444732666016
    3. 'len' → logprob: -5.173944473266602
    4. ' all' → logprob: -9.173944473266602
    5. 'not' → logprob: -9.423944473266602
    6. ' ' → logprob: -10.048944473266602
    7. ' points' → logprob: -10.923944473266602
    8. ' the' → logprob: -12.423944473266602
    9. '(len' → logprob: -12.548944473266602
    10. '   ' → logprob: -13.298944473266602

Token 69: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.03634871914982796
    2. 'points' → logprob: -3.536348819732666
    3. ' black' → logprob: -5.286348819732666
    4. '_points' → logprob: -7.661348819732666
    5. ' the' → logprob: -7.911348819732666
    6. ')' → logprob: -8.786348342895508
    7. '(points' → logprob: -8.911348342895508
    8. 'black' → logprob: -9.161348342895508
    9. ' in' → logprob: -9.786348342895508
    10. '_black' → logprob: -10.036348342895508

Token 70: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.022517850622534752
    2. 'are' → logprob: -4.647517681121826
    3. ' have' → logprob: -5.647517681121826
    4. ' lie' → logprob: -5.647517681121826
    5. ' in' → logprob: -6.022517681121826
    6. '<|end|>' → logprob: -6.272517681121826
    7. ' on' → logprob: -7.647517681121826
    8. ')' → logprob: -8.772518157958984
    9. 'in' → logprob: -8.897518157958984
    10. '   ' → logprob: -9.147518157958984

Token 71: ' same' (ID: 2684)
  Prédit: ' col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.38080504536628723
    2. ' on' → logprob: -1.3808050155639648
    3. ' in' → logprob: -3.255805015563965
    4. 'col' → logprob: -4.255805015563965
    5. 'on' → logprob: -5.130805015563965
    6. 'in' → logprob: -6.255805015563965
    7. ' the' → logprob: -6.630805015563965
    8. ' of' → logprob: -6.880805015563965
    9. ' from' → logprob: -7.505805015563965
    10. ' either' → logprob: -7.755805015563965

Token 72: ' color' (ID: 3089)
  Prédit: ' color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.08132272213697433
    2. '   ' → logprob: -3.70632266998291
    3. 'color' → logprob: -4.20632266998291
    4. '_color' → logprob: -4.70632266998291
    5. ' colors' → logprob: -4.83132266998291
    6. ')' → logprob: -5.45632266998291
    7. 'def' → logprob: -5.83132266998291
    8. '    ' → logprob: -5.95632266998291
    9. ' ' → logprob: -6.08132266998291
    10. ' in' → logprob: -6.33132266998291

Token 73: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4944289028644562
    2. ',' → logprob: -1.1194288730621338
    3. '   ' → logprob: -2.869428873062134
    4. ' or' → logprob: -5.994429111480713
    5. '    ' → logprob: -6.619429111480713
    6. ' ,' → logprob: -6.994429111480713
    7. ' :' → logprob: -7.119429111480713
    8. ':return' → logprob: -7.744429111480713
    9. ' ' → logprob: -8.369428634643555
    10. '       ' → logprob: -9.119428634643555

Token 74: ' no' (ID: 860)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.45191866159439087
    2. 'len' → logprob: -2.076918601989746
    3. 'not' → logprob: -2.326918601989746
    4. ' no' → logprob: -2.451918601989746
    5. 'no' → logprob: -4.326918601989746
    6. ' there' → logprob: -4.701918601989746
    7. ' len' → logprob: -5.076918601989746
    8. ' all' → logprob: -5.326918601989746
    9. ' points' → logprob: -5.326918601989746
    10. ' only' → logprob: -5.826918601989746

Token 75: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.06411944329738617
    2. 'points' → logprob: -3.064119338989258
    3. '(points' → logprob: -5.564119338989258
    4. '   ' → logprob: -5.939119338989258
    5. 't' → logprob: -6.064119338989258
    6. '_points' → logprob: -6.439119338989258
    7. ')' → logprob: -6.439119338989258
    8. ' ' → logprob: -7.314119338989258
    9. ' or' → logprob: -7.314119338989258
    10. 'def' → logprob: -7.564119338989258

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10350532084703445
    2. ':' → logprob: -2.3535053730010986
    3. '   ' → logprob: -5.8535051345825195
    4. ':return' → logprob: -8.47850513458252
    5. ' return' → logprob: -9.85350513458252
    6. ' ,' → logprob: -10.35350513458252
    7. ' or' → logprob: -10.47850513458252
    8. '):' → logprob: -10.72850513458252
    9. 'return' → logprob: -11.10350513458252
    10. '```' → logprob: -11.35350513458252

Token 77: ' triv' (ID: 190102)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.14385811984539032
    2. ' ' → logprob: -2.8938581943511963
    3. '    ' → logprob: -3.2688581943511963
    4. '   ' → logprob: -3.3938581943511963
    5. ' 
' → logprob: -6.018857955932617
    6. 'return' → logprob: -6.643857955932617
    7. '    
' → logprob: -7.518857955932617
    8. '     
' → logprob: -7.768857955932617
    9. ':return' → logprob: -7.893857955932617
    10. ' None' → logprob: -7.893857955932617

Token 78: 'ially' (ID: 43210)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3978055417537689
    2. 'al' → logprob: -1.2728055715560913
    3. 'i' → logprob: -3.1478054523468018
    4. 'ial' → logprob: -5.897805690765381
    5. 'e' → logprob: -6.272805690765381
    6. 'ialize' → logprob: -8.522805213928223
    7. '   ' → logprob: -9.897805213928223
    8. ' a' → logprob: -10.147805213928223
    9. ' ' → logprob: -10.147805213928223
    10. '```' → logprob: -10.147805213928223

Token 79: ' separate' (ID: 13574)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.05374958738684654
    2. ' True' → logprob: -3.1787495613098145
    3. 'return' → logprob: -5.4287495613098145
    4. ' separate' → logprob: -5.9287495613098145
    5. ' separated' → logprob: -6.0537495613098145
    6. '   ' → logprob: -7.1787495613098145
    7. 'True' → logprob: -8.803750038146973
    8. ' can' → logprob: -9.303750038146973
    9. ' separ' → logprob: -9.678750038146973
    10. ' ' → logprob: -9.803750038146973

Token 80: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012591710314154625
    2. ':' → logprob: -4.63759183883667
    3. ',' → logprob: -6.38759183883667
    4. '    
' → logprob: -8.262591361999512
    5. '```' → logprob: -8.387591361999512
    6. '       ' → logprob: -8.887591361999512
    7. ' if' → logprob: -9.137591361999512
    8. '    ' → logprob: -9.262591361999512
    9. ' by' → logprob: -9.512591361999512
    10. '\n' → logprob: -9.887591361999512

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003912764601409435
    2. '    
' → logprob: -6.503912925720215
    3. ':' → logprob: -6.753912925720215
    4. '    ' → logprob: -7.878912925720215
    5. ' ' → logprob: -8.628912925720215
    6. '\n' → logprob: -8.878912925720215
    7. ' if' → logprob: -8.878912925720215
    8. ',' → logprob: -9.378912925720215
    9. '  ' → logprob: -9.878912925720215
    10. '   
' → logprob: -10.128912925720215

Token 82: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09783163666725159
    2. ' if' → logprob: -2.9728317260742188
    3. '\n' → logprob: -4.097831726074219
    4. '    
' → logprob: -4.472831726074219
    5. ' ' → logprob: -5.597831726074219
    6. 'if' (adapté à ' if') → logprob: -5.972831726074219
    7. '   
' → logprob: -6.972831726074219
    8. '\' → logprob: -7.097831726074219
    9. '    ' → logprob: -7.097831726074219
    10. ':' → logprob: -7.222831726074219

Token 83: ' not' (ID: 625)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.6360700726509094
    2. ' not' → logprob: -0.7610700726509094
    3. 'len' → logprob: -6.136070251464844
    4. 'not' → logprob: -6.761070251464844
    5. '(len' → logprob: -9.761070251464844
    6. ' points' → logprob: -10.261070251464844
    7. ' all' → logprob: -11.011070251464844
    8. ' (' → logprob: -11.136070251464844
    9. ' ' → logprob: -11.386070251464844
    10. '   ' → logprob: -12.511070251464844

Token 84: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.004716345574706793
    2. 'points' → logprob: -5.379716396331787
    3. '(points' → logprob: -9.379715919494629
    4. '	points' → logprob: -12.504715919494629
    5. ' (' → logprob: -12.629715919494629
    6. '_points' → logprob: -13.879715919494629
    7. '(' → logprob: -14.254715919494629
    8. ' ' → logprob: -14.504715919494629
    9. ' point' → logprob: -14.754715919494629
    10. ' ' → logprob: -14.754715919494629

Token 85: '_black' (ID: 92024)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.029494386166334152
    2. ':' → logprob: -3.654494285583496
    3. 'or' → logprob: -5.779494285583496
    4. ' ' → logprob: -9.779494285583496
    5. ' :' → logprob: -10.279494285583496
    6. ':return' → logprob: -13.154494285583496
    7. ' and' → logprob: -13.279494285583496
    8. ':
' → logprob: -14.029494285583496
    9. '	or' → logprob: -14.154494285583496
    10. '=' → logprob: -15.029494285583496

Token 86: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0009145628428086638
    2. 'or' → logprob: -7.625914573669434
    3. ' and' → logprob: -8.000914573669434
    4. ' ' → logprob: -9.500914573669434
    5. ':' → logprob: -11.500914573669434
    6. ')' → logprob: -13.000914573669434
    7. 'and' → logprob: -13.000914573669434
    8. '   ' → logprob: -14.000914573669434
    9. '	or' → logprob: -15.125914573669434
    10. '    ' → logprob: -15.750914573669434

Token 87: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03804183006286621
    2. 'not' → logprob: -3.288041830062866
    3. '   ' → logprob: -16.288042068481445
    4. '(not' → logprob: -16.413042068481445
    5. '<|end|>' → logprob: -17.038042068481445
    6. ' len' → logprob: -17.163042068481445
    7. '	not' → logprob: -17.163042068481445
    8. ' ' → logprob: -17.413042068481445
    9. 'len' → logprob: -18.163042068481445
    10. ')' → logprob: -18.288042068481445

Token 88: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.0889679342508316
    2. 'points' → logprob: -2.46396803855896
    3. '(points' → logprob: -10.713968276977539
    4. '	points' → logprob: -13.088968276977539
    5. '_points' → logprob: -13.338968276977539
    6. ' ' → logprob: -14.213968276977539
    7. ' puntos' → logprob: -15.338968276977539
    8. '.points' → logprob: -15.338968276977539
    9. 'oints' → logprob: -15.338968276977539
    10. ' pontos' → logprob: -15.338968276977539

Token 89: '_white' (ID: 105599)
  Prédit: '_white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_white' → logprob: -0.0026147786993533373
    2. '_black' → logprob: -6.002614974975586
    3. '_' → logprob: -9.377614974975586
    4. '_points' → logprob: -10.627614974975586
    5. 'white' → logprob: -11.127614974975586
    6. '_WHITE' → logprob: -12.127614974975586
    7. 'points' → logprob: -12.377614974975586
    8. 'White' → logprob: -14.252614974975586
    9. '_wh' → logprob: -14.252614974975586
    10. ')' → logprob: -14.752614974975586

Token 90: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00043937109876424074
    2. ':
' → logprob: -8.250439643859863
    3. ':return' → logprob: -9.125439643859863
    4. ' :' → logprob: -9.750439643859863
    5. '):' → logprob: -12.000439643859863
    6. '   ' → logprob: -12.750439643859863
    7. ' :
' → logprob: -14.125439643859863
    8. ')' → logprob: -15.000439643859863
    9. ',' → logprob: -15.875439643859863
    10. ':**' → logprob: -16.000438690185547

Token 91: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06297915428876877
    2. ':' → logprob: -2.937979221343994
    3. '   ' → logprob: -5.187979221343994
    4. ':
' → logprob: -6.687979221343994
    5. ':return' → logprob: -7.562979221343994
    6. '
' → logprob: -8.437978744506836
    7. ' return' → logprob: -9.187978744506836
    8. '    
' → logprob: -9.937978744506836
    9. '	' → logprob: -10.062978744506836
    10. '        
' → logprob: -10.312978744506836

Token 92: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08750777691602707
    2. ' return' → logprob: -2.837507724761963
    3. 'return' (adapté à ' return') → logprob: -4.212507724761963
    4. '   ' → logprob: -4.587507724761963
    5. '    ' → logprob: -8.962508201599121
    6. ' 
' → logprob: -10.337508201599121
    7. ' ' → logprob: -10.962508201599121
    8. '
' → logprob: -11.087508201599121
    9. '        
' → logprob: -11.837508201599121
    10. '    
' → logprob: -12.212508201599121

Token 93: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.00861456897109747
    2. 'True' → logprob: -4.758614540100098
    3. ' ' → logprob: -16.758615493774414
    4. ' False' → logprob: -17.883615493774414
    5. '   ' → logprob: -19.508615493774414
    6. 'False' → logprob: -19.883615493774414
    7. ' ' → logprob: -20.008615493774414
    8. ' true' → logprob: -20.383615493774414
    9. '(True' → logprob: -20.508615493774414
    10. ' None' → logprob: -22.133615493774414

Token 94: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3966398537158966
    2. '    
' → logprob: -1.5216398239135742
    3. '   ' → logprob: -2.646639823913574
    4. '\n' → logprob: -4.646639823913574
    5. ' 
' → logprob: -4.896639823913574
    6. '  
' → logprob: -5.396639823913574
    7. '
    
' → logprob: -5.646639823913574
    8. '   
' → logprob: -5.896639823913574
    9. '' → logprob: -6.021639823913574
    10. '

' → logprob: -6.396639823913574

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08724944293498993
    2. '    
' → logprob: -3.212249517440796
    3. '
' → logprob: -3.837249517440796
    4. ' 
' → logprob: -4.837249279022217
    5. '   
' → logprob: -5.587249279022217
    6. ':' → logprob: -6.087249279022217
    7. '     
' → logprob: -6.212249279022217
    8. 'n' → logprob: -6.712249279022217
    9. '    ' → logprob: -6.837249279022217
    10. '' → logprob: -7.587249279022217

Token 96: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012442545033991337
    2. 'import' → logprob: -5.262442588806152
    3. 'for' → logprob: -6.137442588806152
    4. ' for' → logprob: -6.512442588806152
    5. 'from' → logprob: -6.637442588806152
    6. '    
' → logprob: -7.637442588806152
    7. 'n' → logprob: -7.637442588806152
    8. '#' (adapté à ' #') → logprob: -8.012442588806152
    9. '
' → logprob: -8.012442588806152
    10. ' from' → logprob: -8.387442588806152

Token 97: ' To' (ID: 2514)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8882781863212585
    2. '#' → logprob: -1.3882782459259033
    3. 'for' → logprob: -1.5132782459259033
    4. 'from' → logprob: -3.3882782459259033
    5. '   ' → logprob: -3.7632782459259033
    6. 'import' → logprob: -4.013278007507324
    7. ' from' → logprob: -4.138278007507324
    8. ' #' → logprob: -4.388278007507324
    9. ' n' → logprob: -5.013278007507324
    10. 'n' → logprob: -5.263278007507324

Token 98: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.09906169772148132
    2. ' test' → logprob: -2.9740617275238037
    3. ' determine' → logprob: -3.9740617275238037
    4. ' separate' → logprob: -5.224061489105225
    5. ' find' → logprob: -5.349061489105225
    6. 'check' → logprob: -5.474061489105225
    7. 'det' → logprob: -5.724061489105225
    8. '   ' → logprob: -6.599061489105225
    9. ' try' → logprob: -6.849061489105225
    10. 'se' → logprob: -7.599061489105225

Token 99: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8155620098114014
    2. ' all' → logprob: -0.9405620098114014
    3. ' for' → logprob: -2.4405620098114014
    4. ' whether' → logprob: -3.5655620098114014
    5. ' lines' → logprob: -4.1905622482299805
    6. ' the' → logprob: -4.3155622482299805
    7. ' separation' → logprob: -5.1905622482299805
    8. ' possible' → logprob: -5.4405622482299805
    9. 'all' → logprob: -5.9405622482299805
    10. ' each' → logprob: -6.1905622482299805

Token 100: ' two' (ID: 1920)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.326954960823059
    2. ' all' → logprob: -1.326954960823059
    3. ' there' → logprob: -1.951954960823059
    4. ' a' → logprob: -2.5769548416137695
    5. 'the' → logprob: -2.5769548416137695
    6. ' any' → logprob: -3.4519548416137695
    7. 'len' → logprob: -3.5769548416137695
    8. 'all' → logprob: -3.5769548416137695
    9. ' len' → logprob: -3.7019548416137695
    10. ' we' → logprob: -4.2019548416137695

Token 101: ' sets' (ID: 11982)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.29056254029273987
    2. ' sets' → logprob: -1.5405625104904175
    3. ' lines' → logprob: -4.040562629699707
    4. 'points' → logprob: -4.290562629699707
    5. ' classes' → logprob: -6.040562629699707
    6. ' lists' → logprob: -7.665562629699707
    7. 'sets' → logprob: -7.790562629699707
    8. 'lines' → logprob: -8.040562629699707
    9. ' groups' → logprob: -8.165562629699707
    10. ' line' → logprob: -8.165562629699707

Token 102: ' separated' (ID: 33930)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.6369001269340515
    2. ' of' → logprob: -1.0119001865386963
    3. ' are' → logprob: -2.6369001865386963
    4. ' points' → logprob: -4.386899948120117
    5. 'of' → logprob: -4.386899948120117
    6. 'can' → logprob: -5.136899948120117
    7. 'points' → logprob: -5.886899948120117
    8. 'are' → logprob: -6.886899948120117
    9. 'def' → logprob: -8.511899948120117
    10. ' could' → logprob: -8.636899948120117

Token 103: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.5769926905632019
    2. 'by' → logprob: -0.8269926905632019
    3. 'def' → logprob: -7.076992511749268
    4. ',' → logprob: -9.826992988586426
    5. '   ' → logprob: -10.701992988586426
    6. ':' → logprob: -10.951992988586426
    7. 'for' → logprob: -10.951992988586426
    8. 'import' → logprob: -11.451992988586426
    9. 'from' → logprob: -11.451992988586426
    10. '<|end|>' → logprob: -11.701992988586426

Token 104: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3890748918056488
    2. 'a' → logprob: -1.1390749216079712
    3. ' some' → logprob: -7.264074802398682
    4. ' any' → logprob: -7.514074802398682
    5. ' one' → logprob: -8.13907527923584
    6. 'one' → logprob: -8.88907527923584
    7. 'some' → logprob: -9.01407527923584
    8. ' line' → logprob: -9.26407527923584
    9. 'any' → logprob: -9.38907527923584
    10. 'line' → logprob: -9.38907527923584

Token 105: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3935118317604065
    2. 'line' → logprob: -1.3935117721557617
    3. ' straight' → logprob: -2.8935117721557617
    4. ' single' → logprob: -4.768511772155762
    5. 'straight' → logprob: -4.893511772155762
    6. 'single' → logprob: -5.768511772155762
    7. ' hyper' → logprob: -7.143511772155762
    8. 'linear' → logprob: -7.393511772155762
    9. 'hyper' → logprob: -8.018511772155762
    10. ' linear' → logprob: -8.393511772155762

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18398666381835938
    2. ':' → logprob: -1.8089866638183594
    3. '   ' → logprob: -5.933986663818359
    4. ' ,' → logprob: -6.933986663818359
    5. ' :' → logprob: -8.80898666381836
    6. ' ' → logprob: -8.93398666381836
    7. '.' → logprob: -9.30898666381836
    8. ':
' → logprob: -10.05898666381836
    9. '    
' → logprob: -10.68398666381836
    10. ',
' → logprob: -10.80898666381836

Token 107: ' try' (ID: 2075)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.22155389189720154
    2. ' for' → logprob: -2.2215538024902344
    3. ' from' → logprob: -3.2215538024902344
    4. ' import' → logprob: -3.8465538024902344
    5. '   ' → logprob: -4.471553802490234
    6. 'n' → logprob: -4.596553802490234
    7. ' we' → logprob: -6.221553802490234
    8. 'import' → logprob: -6.721553802490234
    9. ' return' → logprob: -6.721553802490234
    10. 'from' → logprob: -6.846553802490234

Token 108: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.009625403210520744
    2. 'all' → logprob: -5.259625434875488
    3. ' lines' → logprob: -5.884625434875488
    4. ' to' → logprob: -8.009625434875488
    5. ' two' → logprob: -8.134625434875488
    6. ' a' → logprob: -8.134625434875488
    7. ':' → logprob: -8.509625434875488
    8. ' every' → logprob: -8.634625434875488
    9. '   ' → logprob: -9.884625434875488
    10. ' each' → logprob: -10.134625434875488

Token 109: ' pairs' (ID: 24702)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.512161374092102
    2. ' pairs' → logprob: -1.262161374092102
    3. '   ' → logprob: -3.1371612548828125
    4. ' points' → logprob: -3.5121612548828125
    5. ' combinations' → logprob: -3.5121612548828125
    6. 'pairs' → logprob: -5.5121612548828125
    7. ' directions' → logprob: -6.0121612548828125
    8. ' possible' → logprob: -6.1371612548828125
    9. 'lines' → logprob: -6.7621612548828125
    10. 'points' → logprob: -6.8871612548828125

Token 110: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23490647971630096
    2. ':' → logprob: -2.6099064350128174
    3. ' of' → logprob: -3.3599064350128174
    4. '    ' → logprob: -3.7349064350128174
    5. ' for' → logprob: -3.7349064350128174
    6. '    
' → logprob: -3.8599064350128174
    7. 'for' → logprob: -4.3599066734313965
    8. ',' → logprob: -5.4849066734313965
    9. ' ' → logprob: -5.9849066734313965
    10. '  ' → logprob: -6.4849066734313965

Token 111: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.008646951988339424
    2. 'points' → logprob: -4.7586469650268555
    3. '(points' → logprob: -11.633646965026855
    4. '	points' → logprob: -11.633646965026855
    5. '_points' → logprob: -12.008646965026855
    6. ' distinct' → logprob: -12.883646965026855
    7. ' puntos' → logprob: -13.758646965026855
    8. ' ' → logprob: -13.883646965026855
    9. ' point' → logprob: -14.008646965026855
    10. ' lines' → logprob: -14.508646965026855

Token 112: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18776296079158783
    2. ':' → logprob: -2.312762975692749
    3. ',' → logprob: -3.062762975692749
    4. ' ' → logprob: -5.06276273727417
    5. '    ' → logprob: -5.18776273727417
    6. ' for' → logprob: -5.31276273727417
    7. '<|end|>' → logprob: -5.81276273727417
    8. '    
' → logprob: -6.68776273727417
    9. '       ' → logprob: -7.18776273727417
    10. '  ' → logprob: -7.43776273727417

Token 113: ' define' (ID: 13174)
  Prédit: ' define'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' define' → logprob: -0.10243701189756393
    2. ' generate' → logprob: -3.1024370193481445
    3. ' find' → logprob: -3.7274370193481445
    4. ' form' → logprob: -4.2274370193481445
    5. ' get' → logprob: -5.8524370193481445
    6. ' ' → logprob: -6.1024370193481445
    7. ' create' → logprob: -6.3524370193481445
    8. 'define' → logprob: -6.7274370193481445
    9. ' determine' → logprob: -6.9774370193481445
    10. '   ' → logprob: -7.1024370193481445

Token 114: ' line' (ID: 2543)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.01508710440248251
    2. 'a' → logprob: -4.390087127685547
    3. ' the' → logprob: -6.265087127685547
    4. ' an' → logprob: -7.515087127685547
    5. ' lines' → logprob: -10.015087127685547
    6. 'the' → logprob: -10.515087127685547
    7. ' line' → logprob: -10.515087127685547
    8. ' ' → logprob: -10.640087127685547
    9. 'an' → logprob: -13.140087127685547
    10. ',' → logprob: -14.515087127685547

Token 115: ' directions' (ID: 24921)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05109880119562149
    2. ':' → logprob: -4.051098823547363
    3. '    
' → logprob: -4.676098823547363
    4. ',' → logprob: -4.676098823547363
    5. ' for' → logprob: -5.426098823547363
    6. '    ' → logprob: -5.801098823547363
    7. 'for' → logprob: -6.176098823547363
    8. '
' → logprob: -6.801098823547363
    9. '\n' → logprob: -7.801098823547363
    10. ' ' → logprob: -7.926098823547363

Token 116: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013413269072771072
    2. '    
' → logprob: -5.013413429260254
    3. ':' → logprob: -5.888413429260254
    4. ' for' → logprob: -6.638413429260254
    5. ',' → logprob: -6.888413429260254
    6. '
' → logprob: -7.263413429260254
    7. '    ' → logprob: -8.138413429260254
    8. 'for' → logprob: -8.888413429260254
    9. '.' → logprob: -9.263413429260254
    10. '  
' → logprob: -9.888413429260254

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1271522492170334
    2. '    
' → logprob: -2.75215220451355
    3. '
' → logprob: -3.87715220451355
    4. ':' → logprob: -4.127152442932129
    5. '    ' → logprob: -5.252152442932129
    6. ' 
' → logprob: -5.627152442932129
    7. '     
' → logprob: -6.377152442932129
    8. '  
' → logprob: -6.502152442932129
    9. '   
' → logprob: -6.502152442932129
    10. '\' → logprob: -6.627152442932129

Token 118: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16889135539531708
    2. '
' → logprob: -2.543891429901123
    3. ' for' → logprob: -2.793891429901123
    4. '    
' → logprob: -4.418891429901123
    5. ' 
' → logprob: -6.418891429901123
    6. 'for' (adapté à ' for') → logprob: -6.668891429901123
    7. '   
' → logprob: -8.293890953063965
    8. '  
' → logprob: -8.418890953063965
    9. '    ' → logprob: -9.293890953063965
    10. '     
' → logprob: -10.793890953063965

Token 119: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0033072312362492085
    2. 'i' → logprob: -6.128307342529297
    3. ' p' → logprob: -7.003307342529297
    4. ' ' → logprob: -9.253307342529297
    5. ' (' → logprob: -10.003307342529297
    6. ' _' → logprob: -11.253307342529297
    7. '	i' → logprob: -11.503307342529297
    8. '   ' → logprob: -11.753307342529297
    9. '_i' → logprob: -11.753307342529297
    10. '  ' → logprob: -12.128307342529297

Token 120: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07354181259870529
    2. ',' → logprob: -3.1985418796539307
    3. 'in' → logprob: -4.073541641235352
    4. ' ,' → logprob: -4.573541641235352
    5. ' ' → logprob: -5.948541641235352
    6. ',in' → logprob: -10.198541641235352
    7. '  ' → logprob: -10.698541641235352
    8. ' i' → logprob: -11.073541641235352
    9. 'n' → logprob: -11.323541641235352
    10. ',n' → logprob: -11.448541641235352

Token 121: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0002502535644453019
    2. 'range' → logprob: -8.500249862670898
    3. ' points' → logprob: -10.000249862670898
    4. '	range' → logprob: -14.625249862670898
    5. ' xrange' → logprob: -15.000249862670898
    6. ' ' → logprob: -15.000249862670898
    7. '(range' → logprob: -16.0002498626709
    8. 'points' → logprob: -17.2502498626709
    9. '  ' → logprob: -18.2502498626709
    10. '.range' → logprob: -18.7502498626709

Token 122: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.010952201671898365
    2. ' len' → logprob: -5.010951995849609
    3. '(' → logprob: -5.635951995849609
    4. ' (' → logprob: -8.01095199584961
    5. ' ' → logprob: -8.38595199584961
    6. 'len' → logprob: -10.38595199584961
    7. '1' → logprob: -10.38595199584961
    8. '	len' → logprob: -11.13595199584961
    9. '<|end|>' → logprob: -11.26095199584961
    10. '[len' → logprob: -13.01095199584961

Token 123: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.0001214237418025732
    2. '(' → logprob: -9.875121116638184
    3. 'points' → logprob: -10.125121116638184
    4. ' points' → logprob: -10.500121116638184
    5. '	points' → logprob: -13.875121116638184
    6. '_points' → logprob: -14.625121116638184
    7. ' (' → logprob: -15.500121116638184
    8. '(p' → logprob: -15.625121116638184
    9. '(parts' → logprob: -15.875121116638184
    10. ')' → logprob: -15.875121116638184

Token 124: ')):
' (ID: 22530)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.917992115020752
    2. '):' → logprob: -1.417992115020752
    3. ')):' → logprob: -1.542992115020752
    4. ' -' → logprob: -2.667992115020752
    5. ')):
' → logprob: -3.917992115020752
    6. '))' → logprob: -4.417992115020752
    7. '-' → logprob: -4.417992115020752
    8. '):
' → logprob: -4.792992115020752
    9. ' ):' → logprob: -5.042992115020752
    10. '   ' → logprob: -5.042992115020752

Token 125: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.076055884361267
    2. ' for' → logprob: -1.201055884361267
    3. ':' → logprob: -1.826055884361267
    4. ' ' → logprob: -2.3260560035705566
    5. '<|end|>' → logprob: -3.2010560035705566
    6. '       ' → logprob: -3.7010560035705566
    7. '    ' → logprob: -4.076056003570557
    8. 'for' → logprob: -5.451056003570557
    9. '  ' → logprob: -5.576056003570557
    10. ',' → logprob: -6.451056003570557

Token 126: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03524119779467583
    2. 'for' (adapté à ' for') → logprob: -3.91024112701416
    3. ' ' → logprob: -4.91024112701416
    4. ' 
' → logprob: -5.91024112701416
    5. '   ' → logprob: -6.16024112701416
    6. '<|end|>' → logprob: -7.16024112701416
    7. '    ' → logprob: -7.66024112701416
    8. '    
' → logprob: -8.41024112701416
    9. '
' → logprob: -9.16024112701416
    10. ' ' → logprob: -9.41024112701416

Token 127: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4339432716369629
    2. ' range' → logprob: -1.558943271636963
    3. ' j' → logprob: -2.433943271636963
    4. 'range' → logprob: -3.558943271636963
    5. 'i' → logprob: -4.558943271636963
    6. ' ' → logprob: -4.933943271636963
    7. 'j' → logprob: -5.308943271636963
    8. ' (' → logprob: -7.183943271636963
    9. '   ' → logprob: -7.558943271636963
    10. '    ' → logprob: -8.308942794799805

Token 128: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09725724160671234
    2. ' ' → logprob: -2.472257137298584
    3. ' i' → logprob: -5.597257137298584
    4. 'in' → logprob: -5.722257137298584
    5. ' =' → logprob: -8.347257614135742
    6. '<|end|>' → logprob: -8.347257614135742
    7. ')' → logprob: -8.847257614135742
    8. '  ' → logprob: -9.097257614135742
    9. ' (' → logprob: -9.347257614135742
    10. '(' → logprob: -9.472257614135742

Token 129: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12701399624347687
    2. 'range' → logprob: -2.127013921737671
    3. '(range' → logprob: -9.50201416015625
    4. '	range' → logprob: -12.75201416015625
    5. ' xrange' → logprob: -12.87701416015625
    6. ' ' → logprob: -13.62701416015625
    7. 'ange' → logprob: -13.75201416015625
    8. 'i' → logprob: -14.00201416015625
    9. '   ' → logprob: -14.50201416015625
    10. ' points' → logprob: -15.25201416015625

Token 130: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.697023332118988
    2. '(len' → logprob: -0.697023332118988
    3. '(' → logprob: -6.197023391723633
    4. ' (' → logprob: -6.572023391723633
    5. '(range' → logprob: -7.822023391723633
    6. ' range' → logprob: -11.697023391723633
    7. '(j' → logprob: -11.697023391723633
    8. '(length' → logprob: -12.072023391723633
    9. ' i' → logprob: -12.572023391723633
    10. 'range' → logprob: -13.072023391723633

Token 131: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12702658772468567
    2. ' +' → logprob: -2.1270265579223633
    3. '1' → logprob: -9.377026557922363
    4. ' ' → logprob: -12.002026557922363
    5. '+i' → logprob: -13.127026557922363
    6. '+j' → logprob: -13.127026557922363
    7. ' +
' → logprob: -13.877026557922363
    8. '+
' → logprob: -14.252026557922363
    9. '+)' → logprob: -14.502026557922363
    10. ')+' → logprob: -14.752026557922363

Token 132: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011703446507453918
    2. ' ' → logprob: -6.7511701583862305
    3. '<|end|>' → logprob: -16.751171112060547
    4. '2' → logprob: -17.376171112060547
    5. '   ' → logprob: -18.251171112060547
    6. '0' → logprob: -18.376171112060547
    7. 'def' → logprob: -18.501171112060547
    8. '  ' → logprob: -18.876171112060547
    9. '```' → logprob: -19.001171112060547
    10. '    ' → logprob: -20.188671112060547

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '2' → logprob: -17.87501335144043
    4. '   ' → logprob: -19.75001335144043
    5. 'def' → logprob: -19.87501335144043
    6. '0' → logprob: -19.93751335144043
    7. '
' → logprob: -19.93751335144043
    8. '<|end|>' → logprob: -19.93751335144043
    9. '```' → logprob: -19.93751335144043
    10. 'for' → logprob: -20.12501335144043

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003076109802350402
    2. ',len' → logprob: -5.878076076507568
    3. ' ,' → logprob: -8.253076553344727
    4. '(len' → logprob: -12.628076553344727
    5. '<len' → logprob: -12.628076553344727
    6. 'len' → logprob: -13.128076553344727
    7. '<|end|>' → logprob: -14.628076553344727
    8. ',length' → logprob: -14.878076553344727
    9. ' ' → logprob: -15.128076553344727
    10. ' len' → logprob: -15.128076553344727

Token 135: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.16024890542030334
    2. 'len' → logprob: -1.910248875617981
    3. '	len' → logprob: -11.660248756408691
    4. '(len' → logprob: -11.910248756408691
    5. '[len' → logprob: -12.785248756408691
    6. ' ' → logprob: -12.910248756408691
    7. '=len' → logprob: -13.910248756408691
    8. '<len' → logprob: -13.910248756408691
    9. ',len' → logprob: -14.035248756408691
    10. '    ' → logprob: -14.160248756408691

Token 136: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -3.106736039626412e-05
    2. 'points' → logprob: -10.875031471252441
    3. ' points' → logprob: -11.750031471252441
    4. '(' → logprob: -12.625031471252441
    5. '	points' → logprob: -15.000031471252441
    6. ' (' → logprob: -15.625031471252441
    7. ')' → logprob: -15.875031471252441
    8. '(parts' → logprob: -16.125030517578125
    9. 'Points' → logprob: -16.750030517578125
    10. '(
' → logprob: -17.000030517578125

Token 137: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.08640022575855255
    2. ')):
' → logprob: -2.586400270462036
    3. '))' → logprob: -5.211400032043457
    4. '):' → logprob: -6.336400032043457
    5. ':' → logprob: -9.836400032043457
    6. ')' → logprob: -9.836400032043457
    7. ' ' → logprob: -10.086400032043457
    8. '):
' → logprob: -10.336400032043457
    9. ')):
' → logprob: -10.586400032043457
    10. '   ' → logprob: -10.586400032043457

Token 138: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08405011892318726
    2. '       ' → logprob: -2.709050178527832
    3. ':
' → logprob: -4.584050178527832
    4. ' :' → logprob: -6.459050178527832
    5. ',' → logprob: -7.334050178527832
    6. '<|end|>' → logprob: -7.834050178527832
    7. '           ' → logprob: -7.959050178527832
    8. '   ' → logprob: -8.459050178527832
    9. '):' → logprob: -8.834050178527832
    10. ' :
' → logprob: -8.959050178527832

Token 139: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3897149860858917
    2. ' 
' → logprob: -1.2647149562835693
    3. '            
' → logprob: -4.514715194702148
    4. 'x' (adapté à ' x') → logprob: -5.764715194702148
    5. ' x' → logprob: -5.889715194702148
    6. '  
' → logprob: -5.889715194702148
    7. '             
' → logprob: -6.014715194702148
    8. ' (' → logprob: -6.264715194702148
    9. '       ' → logprob: -6.389715194702148
    10. '                
' → logprob: -6.764715194702148

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011830847943201661
    2. '0' → logprob: -6.751183032989502
    3. '_' → logprob: -12.25118350982666
    4. ',' → logprob: -12.87618350982666
    5. 'i' → logprob: -13.50118350982666
    6. 'diff' → logprob: -13.50118350982666
    7. '_diff' → logprob: -13.50118350982666
    8. ' ' → logprob: -14.62618350982666
    9. '' → logprob: -15.62618350982666
    10. '_i' → logprob: -15.87618350982666

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002755174064077437
    2. ',y' → logprob: -8.250275611877441
    3. ',x' → logprob: -11.375275611877441
    4. ' ,' → logprob: -13.250275611877441
    5. ',j' → logprob: -15.250275611877441
    6. '=' → logprob: -15.375275611877441
    7. ',v' → logprob: -16.500274658203125
    8. '_,' → logprob: -16.875274658203125
    9. 'y' → logprob: -17.000274658203125
    10. ',p' → logprob: -17.000274658203125

Token 142: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10042242705821991
    2. ' y' → logprob: -2.3504223823547363
    3. '<|end|>' → logprob: -8.475422859191895
    4. ',y' → logprob: -13.100422859191895
    5. ' ' → logprob: -13.350422859191895
    6. '_y' → logprob: -13.975422859191895
    7. 'x' → logprob: -14.350422859191895
    8. '	y' → logprob: -14.350422859191895
    9. '=' → logprob: -14.725422859191895
    10. ',' → logprob: -14.850422859191895

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00927277933806181
    2. '_' → logprob: -4.759272575378418
    3. ',' → logprob: -7.509272575378418
    4. '<|end|>' → logprob: -10.134272575378418
    5. '0' → logprob: -10.384272575378418
    6. '```' → logprob: -11.509272575378418
    7. '_,' → logprob: -11.884272575378418
    8. ',_' → logprob: -12.134272575378418
    9. ')' → logprob: -12.759272575378418
    10. '=' → logprob: -13.009272575378418

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01699807308614254
    2. ' =' → logprob: -4.516998291015625
    3. '=' → logprob: -5.141998291015625
    4. ' ,' → logprob: -10.016998291015625
    5. ',x' → logprob: -10.641998291015625
    6. '<|end|>' → logprob: -11.516998291015625
    7. ' ' → logprob: -12.766998291015625
    8. ')' → logprob: -13.891998291015625
    9. ' =
' → logprob: -14.141998291015625
    10. ',y' → logprob: -14.766998291015625

Token 145: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10307540744543076
    2. ' c' → logprob: -2.7280755043029785
    3. '_' → logprob: -3.9780755043029785
    4. 'color' → logprob: -4.6030755043029785
    5. ' color' → logprob: -5.8530755043029785
    6. ' _' → logprob: -7.6030755043029785
    7. '_=' → logprob: -8.10307502746582
    8. 'col' → logprob: -9.85307502746582
    9. '_c' → logprob: -10.35307502746582
    10. '_color' → logprob: -10.72807502746582

Token 146: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2580100893974304
    2. ' =' → logprob: -1.5080101490020752
    3. '1' → logprob: -5.133009910583496
    4. '_' → logprob: -8.883009910583496
    5. ',' → logprob: -11.633009910583496
    6. ')' → logprob: -11.883009910583496
    7. 'x' → logprob: -13.008009910583496
    8. ' ' → logprob: -13.758009910583496
    9. 'i' → logprob: -14.258009910583496
    10. ']' → logprob: -14.383009910583496

Token 147: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407862544059753
    2. '=' → logprob: -0.9740786552429199
    3. ',' → logprob: -13.474078178405762
    4. ')' → logprob: -15.724078178405762
    5. ' ' → logprob: -16.224079132080078
    6. ' =)' → logprob: -18.224079132080078
    7. '=}' → logprob: -18.349079132080078
    8. ' =
' → logprob: -18.474079132080078
    9. ')=' → logprob: -18.724079132080078
    10. '=

' → logprob: -19.099079132080078

Token 148: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.023247109726071358
    2. 'points' → logprob: -3.773247003555298
    3. '	points' → logprob: -13.773246765136719
    4. '(points' → logprob: -14.773246765136719
    5. '_points' → logprob: -16.89824676513672
    6. ' pontos' → logprob: -17.39824676513672
    7. '.points' → logprob: -17.89824676513672
    8. ' puntos' → logprob: -18.14824676513672
    9. ' ' → logprob: -18.27324676513672
    10. ' Points' → logprob: -18.77324676513672

Token 149: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007911216467618942
    2. '[j' → logprob: -4.882911205291748
    3. '=' → logprob: -8.632911682128906
    4. ' =' → logprob: -9.257911682128906
    5. '[' → logprob: -10.757911682128906
    6. 'i' → logprob: -12.257911682128906
    7. 'points' → logprob: -13.132911682128906
    8. ' [' → logprob: -14.132911682128906
    9. '   ' → logprob: -14.632911682128906
    10. '_points' → logprob: -14.757911682128906

Token 150: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7954809665679932
    2. ']' → logprob: -1.1704809665679932
    3. '
' → logprob: -1.6704809665679932
    4. '<|end|>' → logprob: -4.295480728149414
    5. '           ' → logprob: -4.670480728149414
    6. ')
' → logprob: -5.170480728149414
    7. '            
' → logprob: -5.295480728149414
    8. ',' → logprob: -5.295480728149414
    9. '  
' → logprob: -6.170480728149414
    10. ';' → logprob: -6.420480728149414

Token 151: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.382412850856781
    2. '           ' → logprob: -1.2574129104614258
    3. '<|end|>' → logprob: -4.007412910461426
    4. '            
' → logprob: -5.132412910461426
    5. ' 
' → logprob: -5.257412910461426
    6. '  
' → logprob: -6.882412910461426
    7. '<|end|>' → logprob: -7.632412910461426
    8. '       ' → logprob: -7.632412910461426
    9. ' ' → logprob: -8.257412910461426
    10. ',' → logprob: -8.507412910461426

Token 152: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23333369195461273
    2. ' x' → logprob: -2.2333335876464844
    3. 'x' (adapté à ' x') → logprob: -2.3583335876464844
    4. ' 
' → logprob: -5.608333587646484
    5. '           ' → logprob: -7.108333587646484
    6. '<|end|>' → logprob: -7.733333587646484
    7. '            ' → logprob: -8.108333587646484
    8. '    ' → logprob: -8.733333587646484
    9. ',' → logprob: -8.858333587646484
    10. '   ' → logprob: -9.233333587646484

Token 153: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01275602076202631
    2. ',' → logprob: -4.387755870819092
    3. ' ,' → logprob: -9.13775634765625
    4. '1' → logprob: -9.76275634765625
    5. ' ' → logprob: -10.63775634765625
    6. '0' → logprob: -10.63775634765625
    7. '<|end|>' → logprob: -11.26275634765625
    8. '=' → logprob: -11.76275634765625
    9. ',
' → logprob: -13.01275634765625
    10. '_,' → logprob: -13.26275634765625

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.941161776310764e-05
    2. ' ,' → logprob: -10.250039100646973
    3. '<|end|>' → logprob: -12.750039100646973
    4. '=' → logprob: -15.000039100646973
    5. ' ' → logprob: -15.125039100646973
    6. ',y' → logprob: -15.875039100646973
    7. ',
' → logprob: -16.12504005432129
    8. '‌,' → logprob: -17.00004005432129
    9. ')' → logprob: -17.00004005432129
    10. ',x' → logprob: -17.25004005432129

Token 155: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.008694346062839031
    2. 'y' → logprob: -5.508694171905518
    3. '<|end|>' → logprob: -5.633694171905518
    4. ' ' → logprob: -7.008694171905518
    5. ' x' → logprob: -9.508694648742676
    6. 'x' → logprob: -11.008694648742676
    7. ',' → logprob: -12.133694648742676
    8. ' ' → logprob: -12.133694648742676
    9. ')' → logprob: -12.508694648742676
    10. '"' → logprob: -12.758694648742676

Token 156: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0030114573892205954
    2. ',' → logprob: -6.253011226654053
    3. '<|end|>' → logprob: -7.503011226654053
    4. '1' → logprob: -8.378011703491211
    5. ' ' → logprob: -8.378011703491211
    6. '```' → logprob: -9.753011703491211
    7. ' ,' → logprob: -13.128011703491211
    8. '[' → logprob: -13.128011703491211
    9. '  ' → logprob: -13.503011703491211
    10. '`' → logprob: -13.628011703491211

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6286106983898208e-05
    2. ' ,' → logprob: -11.250016212463379
    3. '=' → logprob: -13.625016212463379
    4. ',y' → logprob: -14.250016212463379
    5. '<|end|>' → logprob: -14.500016212463379
    6. ',
' → logprob: -14.875016212463379
    7. ',user' → logprob: -16.250017166137695
    8. ',c' → logprob: -16.375017166137695
    9. ' ' → logprob: -16.625017166137695
    10. ',x' → logprob: -16.750017166137695

Token 158: ' c' (ID: 274)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.016105804592370987
    2. 'y' → logprob: -4.141105651855469
    3. ' points' → logprob: -10.016105651855469
    4. 'points' → logprob: -10.891105651855469
    5. '<|end|>' → logprob: -12.516105651855469
    6. ' ' → logprob: -13.266105651855469
    7. ',' → logprob: -14.391105651855469
    8. '	y' → logprob: -14.516105651855469
    9. ',y' → logprob: -14.766105651855469
    10. 'x' → logprob: -15.141105651855469

Token 159: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.966313281329349e-05
    2. '1' → logprob: -10.250049591064453
    3. ' ' → logprob: -11.875049591064453
    4. '<|end|>' → logprob: -12.875049591064453
    5. ',' → logprob: -13.000049591064453
    6. '[' → logprob: -14.125049591064453
    7. '```' → logprob: -14.375049591064453
    8. '=' → logprob: -14.750049591064453
    9. '  ' → logprob: -15.250049591064453
    10. '   ' → logprob: -16.125049591064453

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3870522081851959
    2. '=' → logprob: -1.1370521783828735
    3. ',' → logprob: -8.637052536010742
    4. ' ' → logprob: -13.137052536010742
    5. ')' → logprob: -14.637052536010742
    6. '   ' → logprob: -15.012052536010742
    7. ' =
' → logprob: -15.137052536010742
    8. ' ,' → logprob: -15.762052536010742
    9. '=

' → logprob: -15.887052536010742
    10. ' =)' → logprob: -16.137052536010742

Token 161: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.6326197981834412
    2. 'points' → logprob: -0.7576197981834412
    3. '(points' → logprob: -11.257619857788086
    4. '	points' → logprob: -12.507619857788086
    5. ' ' → logprob: -13.632619857788086
    6. '.points' → logprob: -14.132619857788086
    7. 'oints' → logprob: -14.757619857788086
    8. '_points' → logprob: -15.257619857788086
    9. '   ' → logprob: -15.382619857788086
    10. 'point' → logprob: -15.507619857788086

Token 162: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.17575033009052277
    2. '[' → logprob: -1.9257503747940063
    3. '<|end|>' → logprob: -4.925750255584717
    4. ']' → logprob: -5.050750255584717
    5. '[
' → logprob: -7.550750255584717
    6. '```' → logprob: -7.675750255584717
    7. '[i' → logprob: -8.425750732421875
    8. '[user' → logprob: -8.550750732421875
    9. '<|end|>' → logprob: -9.300750732421875
    10. '[]' → logprob: -9.800750732421875

Token 163: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38785356283187866
    2. ']' → logprob: -1.1378536224365234
    3. ':' → logprob: -8.012853622436523
    4. '):' → logprob: -8.262853622436523
    5. '           ' → logprob: -9.012853622436523
    6. ')
' → logprob: -9.387853622436523
    7. ']
' → logprob: -10.387853622436523
    8. '   ' → logprob: -10.762853622436523
    9. ']=' → logprob: -11.012853622436523
    10. ']:' → logprob: -11.262853622436523

Token 164: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.041321802884340286
    2. '
' → logprob: -3.9163217544555664
    3. '            
' → logprob: -4.166321754455566
    4. '  
' → logprob: -6.416321754455566
    5. ' 
' → logprob: -6.916321754455566
    6. '<|end|>' → logprob: -7.041321754455566
    7. ':' → logprob: -7.416321754455566
    8. '    
' → logprob: -8.916321754455566
    9. '               ' → logprob: -9.041321754455566
    10. ' if' → logprob: -9.291321754455566

Token 165: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5031084418296814
    2. '
' → logprob: -1.1281085014343262
    3. '            
' → logprob: -2.753108501434326
    4. ' if' → logprob: -5.628108501434326
    5. ' 
' → logprob: -6.378108501434326
    6. ' #' → logprob: -7.503108501434326
    7. '  
' → logprob: -7.878108501434326
    8. '
            
' → logprob: -8.253108024597168
    9. '#' (adapté à ' #') → logprob: -8.378108024597168
    10. '           
' → logprob: -8.503108024597168

Token 166: ' Skip' (ID: 47626)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.5108070969581604
    2. 'if' → logprob: -1.8858070373535156
    3. ' if' → logprob: -2.1358070373535156
    4. ' dx' → logprob: -2.5108070373535156
    5. '#' → logprob: -3.6358070373535156
    6. ' #' → logprob: -4.385807037353516
    7. 'If' → logprob: -6.010807037353516
    8. '   ' → logprob: -7.010807037353516
    9. 'Continue' → logprob: -7.135807037353516
    10. 'continue' → logprob: -7.385807037353516

Token 167: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0043767173774540424
    2. 'if' → logprob: -5.5043768882751465
    3. ' lines' → logprob: -8.504376411437988
    4. '           ' → logprob: -10.254376411437988
    5. ' points' → logprob: -10.504376411437988
    6. ' ' → logprob: -11.004376411437988
    7. ' line' → logprob: -12.129376411437988
    8. '   ' → logprob: -13.129376411437988
    9. 'points' → logprob: -13.254376411437988
    10. '            ' → logprob: -14.004376411437988

Token 168: ' points' (ID: 5571)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.33935225009918213
    2. ' c' → logprob: -1.5893522500991821
    3. 'x' → logprob: -3.0893521308898926
    4. '(x' → logprob: -4.339352130889893
    5. ' x' → logprob: -4.464352130889893
    6. ' (' → logprob: -4.839352130889893
    7. '(c' → logprob: -5.839352130889893
    8. ' points' → logprob: -6.089352130889893
    9. 'points' → logprob: -8.71435260772705
    10. '(' → logprob: -9.33935260772705

Token 169: ' have' (ID: 679)
  Prédit: ' have'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.3334204852581024
    2. ' are' → logprob: -1.5834205150604248
    3. 'have' → logprob: -2.583420515060425
    4. 'are' → logprob: -6.208420276641846
    5. '[' → logprob: -8.083420753479004
    6. ' of' → logprob: -9.208420753479004
    7. '_have' → logprob: -10.083420753479004
    8. ' share' → logprob: -10.208420753479004
    9. ' ' → logprob: -10.208420753479004
    10. ' belong' → logprob: -10.333420753479004

Token 170: ' same' (ID: 2684)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3214735984802246
    2. 'the' → logprob: -1.5714735984802246
    3. 'same' → logprob: -3.1964735984802246
    4. ' same' → logprob: -3.6964735984802246
    5. 'c' → logprob: -6.696473598480225
    6. ' identical' → logprob: -9.071474075317383
    7. ' c' → logprob: -9.571474075317383
    8. 'x' → logprob: -10.821474075317383
    9. 'exact' → logprob: -11.696474075317383
    10. ' exactly' → logprob: -12.821474075317383

Token 171: ' position' (ID: 4010)
  Prédit: ' color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.0320696160197258
    2. ' c' → logprob: -4.407069683074951
    3. ' ' → logprob: -4.532069683074951
    4. ' colors' → logprob: -5.782069683074951
    5. 'color' → logprob: -6.532069683074951
    6. 'c' → logprob: -6.907069683074951
    7. '  ' → logprob: -7.032069683074951
    8. '   ' → logprob: -7.407069683074951
    9. '_color' → logprob: -8.032069206237793
    10. ')' → logprob: -8.282069206237793

Token 172: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09286770969629288
    2. '               ' → logprob: -2.592867612838745
    3. ' continue' → logprob: -5.342867851257324
    4. ' or' → logprob: -5.717867851257324
    5. '   ' → logprob: -6.342867851257324
    6. '       ' → logprob: -6.342867851257324
    7. 'continue' → logprob: -7.717867851257324
    8. ':' → logprob: -7.842867851257324
    9. ',' → logprob: -8.092867851257324
    10. '\n' → logprob: -8.592867851257324

Token 173: 'problem' (ID: 63922)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32708266377449036
    2. ' and' → logprob: -1.952082633972168
    3. ' )' → logprob: -3.202082633972168
    4. 'and' → logprob: -3.952082633972168
    5. ' x' → logprob: -3.952082633972168
    6. ' continue' → logprob: -4.202082633972168
    7. 'x' → logprob: -4.202082633972168
    8. ' or' → logprob: -4.452082633972168
    9. ' ' → logprob: -4.952082633972168
    10. 'continue' → logprob: -5.077082633972168

Token 174: ' states' (ID: 9407)
  Prédit: 'atic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atic' → logprob: -0.3788480758666992
    2. ')' → logprob: -1.2538480758666992
    3. ' continues' → logprob: -5.003848075866699
    4. ' or' → logprob: -5.503848075866699
    5. 'atically' → logprob: -5.753848075866699
    6. ' )' → logprob: -5.753848075866699
    7. ' with' → logprob: -6.003848075866699
    8. ':' → logprob: -6.003848075866699
    9. 'at' → logprob: -6.128848075866699
    10. ' in' → logprob: -6.128848075866699

Token 175: ' they' (ID: 1023)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.26114630699157715
    2. ' that' → logprob: -2.761146306991577
    3. ' no' → logprob: -2.886146306991577
    4. ' distinct' → logprob: -3.261146306991577
    5. ' they' → logprob: -4.011146545410156
    6. 'points' → logprob: -4.261146545410156
    7. 'distinct' → logprob: -5.011146545410156
    8. ' we' → logprob: -5.511146545410156
    9. 'they' → logprob: -5.761146545410156
    10. ' to' → logprob: -5.886146545410156

Token 176: ' don't' (ID: 4128)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.7348217368125916
    2. ' won't' → logprob: -1.8598217964172363
    3. ' are' → logprob: -1.9848217964172363
    4. 'can' → logprob: -2.9848217964172363
    5. ' may' → logprob: -3.3598217964172363
    6. ' cannot' → logprob: -3.9848217964172363
    7. ' might' → logprob: -3.9848217964172363
    8. 'are' → logprob: -3.9848217964172363
    9. 'cannot' → logprob: -3.9848217964172363
    10. ' can't' → logprob: -4.109821796417236

Token 177: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023070288822054863
    2. ')
' → logprob: -3.8980703353881836
    3. '           ' → logprob: -6.773070335388184
    4. ' or' → logprob: -7.523070335388184
    5. '):' → logprob: -8.148070335388184
    6. '):
' → logprob: -8.523070335388184
    7. ' )' → logprob: -8.898070335388184
    8. ',' → logprob: -9.898070335388184
    9. ')
' → logprob: -10.398070335388184
    10. '               ' → logprob: -10.523070335388184

Token 178: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0187101811170578
    2. '            
' → logprob: -4.268710136413574
    3. '
' → logprob: -5.768710136413574
    4. ' 
' → logprob: -7.393710136413574
    5. '  
' → logprob: -9.018710136413574
    6. '<|end|>' → logprob: -9.268710136413574
    7. '            

' → logprob: -9.268710136413574
    8. '            ' → logprob: -9.768710136413574
    9. ' continue' → logprob: -9.893710136413574
    10. '    
' → logprob: -10.018710136413574

Token 179: ' #' (ID: 1069)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6065328121185303
    2. '           ' → logprob: -1.1065328121185303
    3. ' if' → logprob: -2.2315328121185303
    4. 'continue' → logprob: -4.981533050537109
    5. 'if' → logprob: -5.231533050537109
    6. '            
' → logprob: -6.231533050537109
    7. ' 
' → logprob: -6.981533050537109
    8. ' ' → logprob: -7.731533050537109
    9. '               ' → logprob: -7.856533050537109
    10. '            ' → logprob: -8.98153305053711

Token 180: ' Direction' (ID: 39049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6135870814323425
    2. ' if' → logprob: -1.2385871410369873
    3. '           ' → logprob: -2.7385871410369873
    4. ' continue' → logprob: -2.8635871410369873
    5. 'continue' → logprob: -3.1135871410369873
    6. 'Continue' → logprob: -7.113586902618408
    7. 'dx' → logprob: -7.863586902618408
    8. '            
' → logprob: -7.988586902618408
    9. ' Continue' → logprob: -8.238587379455566
    10. 'If' → logprob: -9.113587379455566

Token 181: ' vector' (ID: 9727)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3824116587638855
    2. '_x' → logprob: -1.7574117183685303
    3. '_dx' → logprob: -2.8824117183685303
    4. 'x' → logprob: -3.0074117183685303
    5. ' vector' → logprob: -4.632411479949951
    6. ' dx' → logprob: -4.632411479949951
    7. 'dx' → logprob: -4.757411479949951
    8. '=' → logprob: -5.382411479949951
    9. '_' → logprob: -6.257411479949951
    10. '_vector' → logprob: -6.507411479949951

Token 182: ' orth' (ID: 35656)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09961918741464615
    2. ' dx' → logprob: -2.599619150161743
    3. 'dx' → logprob: -4.224619388580322
    4. '=' → logprob: -5.349619388580322
    5. ' ' → logprob: -8.224618911743164
    6. ':' → logprob: -8.599618911743164
    7. 'd' → logprob: -9.099618911743164
    8. 'x' → logprob: -9.349618911743164
    9. ' vx' → logprob: -9.474618911743164
    10. '_dx' → logprob: -9.849618911743164

Token 183: 'ogonal' (ID: 127861)
  Prédit: 'ogonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -9.849109119386412e-06
    2. '=' → logprob: -12.250009536743164
    3. 'ogon' → logprob: -12.500009536743164
    4. 'og' → logprob: -14.000009536743164
    5. '   ' → logprob: -16.125009536743164
    6. 'agonal' → logprob: -16.250009536743164
    7. '(-' → logprob: -17.000009536743164
    8. '(' → logprob: -17.000009536743164
    9. 'ogo' → logprob: -17.500009536743164
    10. '=(-' → logprob: -17.500009536743164

Token 184: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.019609495997428894
    2. 'to' → logprob: -4.269609451293945
    3. ' =' → logprob: -6.019609451293945
    4. '=' → logprob: -6.894609451293945
    5. ' (' → logprob: -7.269609451293945
    6. '<|end|>' → logprob: -7.894609451293945
    7. ' ' → logprob: -8.019609451293945
    8. '_to' → logprob: -8.394609451293945
    9. ':' → logprob: -9.394609451293945
    10. '=(' → logprob: -9.519609451293945

Token 185: ' line' (ID: 2543)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.09875880181789398
    2. '(x' → logprob: -2.7237586975097656
    3. '(y' → logprob: -3.8487586975097656
    4. ' y' → logprob: -6.348758697509766
    5. ' ' → logprob: -6.598758697509766
    6. '   ' → logprob: -6.848758697509766
    7. '(' → logprob: -7.473758697509766
    8. ' x' → logprob: -7.473758697509766
    9. 'x' → logprob: -7.723758697509766
    10. '((' → logprob: -8.223758697509766

Token 186: ' connecting' (ID: 29430)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8829800486564636
    2. ' dx' → logprob: -1.3829801082611084
    3. '(dx' → logprob: -2.1329801082611084
    4. ':' → logprob: -2.8829801082611084
    5. '           ' → logprob: -2.8829801082611084
    6. 'dx' → logprob: -3.3829801082611084
    7. '(x' → logprob: -4.007979869842529
    8. ' =' → logprob: -4.757979869842529
    9. '(' → logprob: -5.007979869842529
    10. ',' → logprob: -5.257979869842529

Token 187: ' points' (ID: 5571)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5025445222854614
    2. '(x' → logprob: -1.0025445222854614
    3. ' points' → logprob: -4.502544403076172
    4. 'x' → logprob: -5.127544403076172
    5. 'points' → logprob: -5.377544403076172
    6. ' x' → logprob: -5.877544403076172
    7. ' the' → logprob: -7.002544403076172
    8. 'p' → logprob: -7.127544403076172
    9. '(' → logprob: -7.252544403076172
    10. 'the' → logprob: -7.627544403076172

Token 188: ' i' (ID: 575)
  Prédit: ' dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.3893979787826538
    2. '           ' → logprob: -2.0143980979919434
    3. ':' → logprob: -2.7643980979919434
    4. ',' → logprob: -3.3893980979919434
    5. 'dx' → logprob: -3.8893980979919434
    6. ' (' → logprob: -4.014398097991943
    7. '(dx' → logprob: -4.014398097991943
    8. ' =' → logprob: -5.389398097991943
    9. '
' → logprob: -5.639398097991943
    10. ' 
' → logprob: -5.889398097991943

Token 189: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5653355121612549
    2. ':' → logprob: -1.6903355121612549
    3. ' and' → logprob: -2.065335512161255
    4. ' ' → logprob: -3.690335512161255
    5. ' ,' → logprob: -3.815335512161255
    6. ' (' → logprob: -4.440335273742676
    7. ' x' → logprob: -4.690335273742676
    8. ' is' → logprob: -5.065335273742676
    9. 'and' → logprob: -5.190335273742676
    10. ',
' → logprob: -5.315335273742676

Token 190: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.04859202727675438
    2. ' j' → logprob: -3.0485920906066895
    3. '	j' → logprob: -12.923591613769531
    4. ' ' → logprob: -14.423591613769531
    5. 'y' → logprob: -14.673591613769531
    6. 'x' → logprob: -15.298591613769531
    7. '1' → logprob: -15.423591613769531
    8. '_j' → logprob: -15.548591613769531
    9. ',j' → logprob: -15.923591613769531
    10. '$j' → logprob: -16.42359161376953

Token 191: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5495851635932922
    2. ' dx' → logprob: -1.1745851039886475
    3. '
' → logprob: -3.0495851039886475
    4. ':' → logprob: -3.7995851039886475
    5. 'dx' → logprob: -4.549585342407227
    6. '            
' → logprob: -4.924585342407227
    7. ',' → logprob: -5.049585342407227
    8. ' 
' → logprob: -5.299585342407227
    9. '(dx' → logprob: -5.924585342407227
    10. 'n' → logprob: -6.549585342407227

Token 192: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03774673864245415
    2. '            
' → logprob: -4.412746906280518
    3. ':' → logprob: -5.162746906280518
    4. '<|end|>' → logprob: -5.162746906280518
    5. ',' → logprob: -5.537746906280518
    6. ' 
' → logprob: -5.662746906280518
    7. '            ' → logprob: -7.037746906280518
    8. ' ' → logprob: -7.287746906280518
    9. '<|end|>' → logprob: -7.662746906280518
    10. 'n' → logprob: -7.787746906280518

Token 193: ' dx' (ID: 29472)
  Prédit: ' dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.05008314177393913
    2. 'dx' (adapté à ' dx') → logprob: -3.3000831604003906
    3. '           ' → logprob: -4.675083160400391
    4. ' d' → logprob: -7.550083160400391
    5. 'd' → logprob: -7.800083160400391
    6. '            ' → logprob: -8.05008316040039
    7. ' vx' → logprob: -8.55008316040039
    8. '            
' → logprob: -8.67508316040039
    9. ' ' → logprob: -9.05008316040039
    10. 'n' → logprob: -9.55008316040039

Token 194: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5839890241622925
    2. '=' → logprob: -0.8339890241622925
    3. ',' → logprob: -4.833989143371582
    4. ' ' → logprob: -10.333989143371582
    5. ' ,' → logprob: -10.708989143371582
    6. '=y' → logprob: -13.958989143371582
    7. ')' → logprob: -14.083989143371582
    8. ' ' → logprob: -14.208989143371582
    9. ',y' → logprob: -14.458989143371582
    10. 's' → logprob: -14.583989143371582

Token 195: ' x' (ID: 1215)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03798066824674606
    2. ' y' → logprob: -3.537980556488037
    3. '-(' → logprob: -4.912980556488037
    4. 'x' → logprob: -7.912980556488037
    5. ' -(' → logprob: -8.787981033325195
    6. '   ' → logprob: -9.037981033325195
    7. '(y' → logprob: -9.287981033325195
    8. ' ' → logprob: -10.037981033325195
    9. '	y' → logprob: -10.287981033325195
    10. ' (' → logprob: -11.787981033325195

Token 196: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015164113137871027
    2. '1' → logprob: -6.501516342163086
    3. 'y' → logprob: -12.001516342163086
    4. ' ' → logprob: -12.751516342163086
    5. 'j' → logprob: -12.876516342163086
    6. '=' → logprob: -14.626516342163086
    7. '_' → logprob: -14.751516342163086
    8. '<|end|>' → logprob: -14.751516342163086
    9. ' =' → logprob: -15.876516342163086
    10. '```' → logprob: -16.001516342163086

Token 197: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.34871506690979004
    2. '-' → logprob: -1.22371506690979
    3. 'y' → logprob: -9.098714828491211
    4. ',' → logprob: -9.473714828491211
    5. '<|end|>' → logprob: -11.098714828491211
    6. '2' → logprob: -11.223714828491211
    7. ' y' → logprob: -11.223714828491211
    8. '1' → logprob: -11.473714828491211
    9. ' ' → logprob: -11.848714828491211
    10. '_' → logprob: -12.223714828491211

Token 198: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0076081594452261925
    2. ' x' → logprob: -5.007607936859131
    3. 'y' → logprob: -7.382607936859131
    4. '<|end|>' → logprob: -8.507608413696289
    5. ' y' → logprob: -9.882608413696289
    6. ' ' → logprob: -12.507608413696289
    7. '	x' → logprob: -12.507608413696289
    8. '1' → logprob: -13.257608413696289
    9. ')x' → logprob: -13.882608413696289
    10. ')' → logprob: -14.007608413696289

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014398897998034954
    2. 'x' → logprob: -4.26439905166626
    3. ' x' → logprob: -9.014398574829102
    4. '<|end|>' → logprob: -9.139398574829102
    5. ' ' → logprob: -12.639398574829102
    6. '[' → logprob: -14.639398574829102
    7. '```' → logprob: -14.764398574829102
    8. '   ' → logprob: -15.139398574829102
    9. '<|end|>' → logprob: -15.701898574829102
    10. '0' → logprob: -15.826898574829102

Token 200: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26721930503845215
    2. 'dy' → logprob: -2.142219305038452
    3. '           ' → logprob: -2.767219305038452
    4. ',' → logprob: -3.767219305038452
    5. 'y' → logprob: -4.517219543457031
    6. ',
' → logprob: -4.892219543457031
    7. '  
' → logprob: -5.642219543457031
    8. '            
' → logprob: -6.142219543457031
    9. ' 
' → logprob: -6.142219543457031
    10. ' dy' → logprob: -6.267219543457031

Token 201: '           ' (ID: 352)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.008343169465661049
    2. ' dy' → logprob: -5.38334321975708
    3. '<|end|>' → logprob: -5.63334321975708
    4. ',' → logprob: -10.258342742919922
    5. ' ' → logprob: -10.508342742919922
    6. '
' → logprob: -10.883342742919922
    7. ' 
' → logprob: -11.008342742919922
    8. '<|end|>' → logprob: -11.133342742919922
    9. '.dy' → logprob: -11.883342742919922
    10. '           ' → logprob: -12.133342742919922

Token 202: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' (adapté à ' dy') → logprob: -0.10042750090360641
    2. ' dy' → logprob: -2.3504273891448975
    3. '-d' → logprob: -8.725427627563477
    4. '<|end|>' → logprob: -10.600427627563477
    5. 'd' → logprob: -11.100427627563477
    6. '.dy' → logprob: -11.975427627563477
    7. 'y' → logprob: -12.975427627563477
    8. ' ' → logprob: -13.475427627563477
    9. '-' → logprob: -13.475427627563477
    10. ' -' → logprob: -13.725427627563477

Token 203: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18692703545093536
    2. '=' → logprob: -1.936927080154419
    3. '<|end|>' → logprob: -3.686927080154419
    4. ' ' → logprob: -6.81192684173584
    5. ',' → logprob: -9.56192684173584
    6. '<|end|>' → logprob: -9.68692684173584
    7. ')' → logprob: -11.81192684173584
    8. '=-' → logprob: -11.93692684173584
    9. '#' → logprob: -12.18692684173584
    10. ' =
' → logprob: -12.31192684173584

Token 204: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5761058330535889
    2. ' y' → logprob: -0.8261058330535889
    3. '-' → logprob: -10.326106071472168
    4. '-(' → logprob: -10.576106071472168
    5. '(y' → logprob: -10.576106071472168
    6. ' -' → logprob: -10.826106071472168
    7. '-y' → logprob: -11.076106071472168
    8. '	y' → logprob: -11.201106071472168
    9. ' -(' → logprob: -11.951106071472168
    10. ' (' → logprob: -12.076106071472168

Token 205: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.024178100749850273
    2. ' -' → logprob: -4.1491780281066895
    3. '2' → logprob: -5.2741780281066895
    4. '-' → logprob: -6.5241780281066895
    5. ' ' → logprob: -6.5241780281066895
    6. '   ' → logprob: -10.399178504943848
    7. 'x' → logprob: -11.524178504943848
    8. '    ' → logprob: -12.274178504943848
    9. '```' → logprob: -13.524178504943848
    10. '  ' → logprob: -13.524178504943848

Token 206: ' -' (ID: 533)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07601465284824371
    2. '<|end|>' → logprob: -3.326014757156372
    3. ' =' → logprob: -3.701014757156372
    4. ',' → logprob: -5.076014518737793
    5. '-' → logprob: -5.826014518737793
    6. ')' → logprob: -7.451014518737793
    7. ' -' → logprob: -7.701014518737793
    8. '#' → logprob: -7.826014518737793
    9. 'dx' → logprob: -8.076014518737793
    10. ' ' → logprob: -8.076014518737793

Token 207: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.09253119677305222
    2. ' y' → logprob: -2.467531204223633
    3. 'x' → logprob: -5.717531204223633
    4. '1' → logprob: -8.217531204223633
    5. ' ' → logprob: -11.342531204223633
    6. ' x' → logprob: -11.467531204223633
    7. '<|end|>' → logprob: -12.592531204223633
    8. '	y' → logprob: -14.467531204223633
    9. '(y' → logprob: -15.092531204223633
    10. '0' → logprob: -15.467531204223633

Token 208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018304655095562339
    2. 'x' → logprob: -6.376830577850342
    3. ' ' → logprob: -9.376830101013184
    4. 'dx' → logprob: -10.876830101013184
    5. 'y' → logprob: -11.376830101013184
    6. ' x' → logprob: -12.126830101013184
    7. '2' → logprob: -12.501830101013184
    8. ' y' → logprob: -13.376830101013184
    9. 'dy' → logprob: -13.876830101013184
    10. ' dx' → logprob: -14.376830101013184

Token 209: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024643566459417343
    2. '           ' → logprob: -4.274643421173096
    3. ' 
' → logprob: -5.024643421173096
    4. '  
' → logprob: -6.149643421173096
    5. '            
' → logprob: -7.649643421173096
    6. '
' → logprob: -8.024643898010254
    7. '<|end|>' → logprob: -8.899643898010254
    8. ' ' → logprob: -9.149643898010254
    9. ',' → logprob: -9.274643898010254
    10. '    
' → logprob: -10.149643898010254

Token 210: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09915897995233536
    2. '
' → logprob: -2.724159002304077
    3. ' 
' → logprob: -4.599158763885498
    4. '            
' → logprob: -4.849158763885498
    5. '<|end|>' → logprob: -5.724158763885498
    6. '  
' → logprob: -5.974158763885498
    7. '            ' → logprob: -6.599158763885498
    8. ',' → logprob: -7.099158763885498
    9. ' for' → logprob: -7.474158763885498
    10. ' ' → logprob: -8.099159240722656

Token 211: ' #' (ID: 1069)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.858757495880127
    2. 'a' → logprob: -1.108757495880127
    3. 'A' → logprob: -1.858757495880127
    4. 'normal' → logprob: -3.233757495880127
    5. ' nx' → logprob: -4.608757495880127
    6. '#' (adapté à ' #') → logprob: -5.108757495880127
    7. 'ax' → logprob: -5.233757495880127
    8. ' normal' → logprob: -5.358757495880127
    9. 'for' → logprob: -5.358757495880127
    10. ' A' → logprob: -5.483757495880127

Token 212: ' The' (ID: 623)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.2872358560562134
    2. 'normal' → logprob: -2.037235736846924
    3. 'for' → logprob: -3.162235736846924
    4. 'a' → logprob: -3.537235736846924
    5. 'A' → logprob: -4.162235736846924
    6. '#' → logprob: -4.162235736846924
    7. 'norm' → logprob: -5.412235736846924
    8. ' nx' → logprob: -6.162235736846924
    9. ' normal' → logprob: -6.287235736846924
    10. 'orth' → logprob: -6.412235736846924

Token 213: ' line' (ID: 2543)
  Prédit: ' normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' normal' → logprob: -0.5297775268554688
    2. ' for' → logprob: -2.1547775268554688
    3. 'normal' → logprob: -2.6547775268554688
    4. 'for' → logprob: -2.9047775268554688
    5. ' nx' → logprob: -3.1547775268554688
    6. 'nx' → logprob: -3.4047775268554688
    7. ' A' → logprob: -3.7797775268554688
    8. 'a' → logprob: -4.279777526855469
    9. ' a' → logprob: -4.404777526855469
    10. 'A' → logprob: -4.404777526855469

Token 214: ' direction' (ID: 9262)
  Prédit: ' normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' normal' → logprob: -1.1842511892318726
    2. ' is' → logprob: -1.8092511892318726
    3. ':' → logprob: -2.309251308441162
    4. ' =' → logprob: -2.309251308441162
    5. '_normal' → logprob: -2.559251308441162
    6. ' for' → logprob: -2.684251308441162
    7. '=' → logprob: -2.934251308441162
    8. 's' → logprob: -3.934251308441162
    9. 'normal' → logprob: -4.184251308441162
    10. 'for' → logprob: -4.434251308441162

Token 215: ' vector' (ID: 9727)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.054486632347107
    2. '=' → logprob: -1.304486632347107
    3. ' is' → logprob: -1.304486632347107
    4. ' perpendicular' → logprob: -3.4294867515563965
    5. 's' → logprob: -3.9294867515563965
    6. ' for' → logprob: -4.1794867515563965
    7. 'is' → logprob: -4.9294867515563965
    8. ':' → logprob: -5.1794867515563965
    9. 'per' → logprob: -5.9294867515563965
    10. ''s' → logprob: -5.9294867515563965

Token 216: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2106628566980362
    2. '=' → logprob: -1.835662841796875
    3. ' is' → logprob: -4.335662841796875
    4. ' perpendicular' → logprob: -5.210662841796875
    5. ' dx' → logprob: -5.335662841796875
    6. '           ' → logprob: -6.210662841796875
    7. 'dx' → logprob: -6.960662841796875
    8. ':' → logprob: -7.085662841796875
    9. ' perp' → logprob: -7.210662841796875
    10. 's' → logprob: -7.835662841796875

Token 217: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.023685414344072342
    2. ' dx' → logprob: -4.648685455322266
    3. ' continue' → logprob: -6.148685455322266
    4. 'dx' → logprob: -6.398685455322266
    5. ' either' → logprob: -6.648685455322266
    6. ' ' → logprob: -6.773685455322266
    7. ' perpendicular' → logprob: -6.773685455322266
    8. 's' → logprob: -7.148685455322266
    9. ' a' → logprob: -7.648685455322266
    10. ' s' → logprob: -7.898685455322266

Token 218: ' considered' (ID: 9474)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.3985752761363983
    2. ' (' → logprob: -2.1485753059387207
    3. ' (-' → logprob: -2.1485753059387207
    4. '(' → logprob: -3.8985753059387207
    5. '(dx' → logprob: -4.148575305938721
    6. ' either' → logprob: -4.273575305938721
    7. 'dx' → logprob: -4.773575305938721
    8. ' dx' → logprob: -4.898575305938721
    9. '-' → logprob: -5.023575305938721
    10. ' -' → logprob: -5.148575305938721

Token 219: ' perpendicular' (ID: 137754)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.08062297850847244
    2. ' (' → logprob: -3.205622911453247
    3. ' perpendicular' → logprob: -4.080623149871826
    4. ' (-' → logprob: -5.080623149871826
    5. '           ' → logprob: -5.955623149871826
    6. ' either' → logprob: -6.205623149871826
    7. '            ' → logprob: -6.205623149871826
    8. '(' → logprob: -6.830623149871826
    9. 'as' → logprob: -7.080623149871826
    10. ' orth' → logprob: -7.830623149871826

Token 220: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.07207445800304413
    2. '           ' → logprob: -3.6970744132995605
    3. ':' → logprob: -3.9470744132995605
    4. ' (' → logprob: -4.4470744132995605
    5. 'to' → logprob: -5.0720744132995605
    6. ',' → logprob: -6.1970744132995605
    7. '=' → logprob: -6.8220744132995605
    8. '(' → logprob: -6.8220744132995605
    9. ' dx' → logprob: -7.3220744132995605
    10. '(dx' → logprob: -7.4470744132995605

Token 221: ' vector' (ID: 9727)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -1.0834896564483643
    2. 'dy' → logprob: -1.4584896564483643
    3. '(dx' → logprob: -1.7084896564483643
    4. '(-' → logprob: -2.3334896564483643
    5. ' (' → logprob: -2.9584896564483643
    6. ' dx' → logprob: -3.5834896564483643
    7. ' dy' → logprob: -3.7084896564483643
    8. '-d' → logprob: -4.208489418029785
    9. '(' → logprob: -4.583489418029785
    10. '(d' → logprob: -4.708489418029785

Token 222: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0393379926681519
    2. ' (-' → logprob: -1.6643379926681519
    3. ' dx' → logprob: -1.9143379926681519
    4. '(-' → logprob: -2.1643381118774414
    5. '(dx' → logprob: -3.0393381118774414
    6. '           ' → logprob: -3.0393381118774414
    7. 'dx' → logprob: -3.2893381118774414
    8. '(' → logprob: -3.5393381118774414
    9. ' dy' → logprob: -4.914338111877441
    10. ' =' → logprob: -5.289338111877441

Token 223: 'dx' (ID: 22100)
  Prédit: '-d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-d' → logprob: -0.4757099449634552
    2. 'dy' → logprob: -1.4757099151611328
    3. 'dx' → logprob: -2.100709915161133
    4. ' -' → logprob: -4.225709915161133
    5. '-' → logprob: -5.100709915161133
    6. ' dy' → logprob: -5.350709915161133
    7. ' dx' → logprob: -6.350709915161133
    8. '   ' → logprob: -8.975709915161133
    9. ' ' → logprob: -10.413209915161133
    10. 'd' → logprob: -10.850709915161133

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006120640318840742
    2. ' ,' → logprob: -5.131120681762695
    3. ',
' → logprob: -9.131120681762695
    4. ',y' → logprob: -10.131120681762695
    5. ',-' → logprob: -11.756120681762695
    6. ')' → logprob: -12.006120681762695
    7. '           ' → logprob: -12.006120681762695
    8. 'y' → logprob: -12.506120681762695
    9. 'dy' → logprob: -12.506120681762695
    10. ',d' → logprob: -12.756120681762695

Token 225: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.026312021538615227
    2. ' dy' → logprob: -3.6513121128082275
    3. '-d' → logprob: -11.776311874389648
    4. ' -' → logprob: -13.776311874389648
    5. 'dx' → logprob: -14.151311874389648
    6. ')' → logprob: -14.276311874389648
    7. '-' → logprob: -14.401311874389648
    8. ' ' → logprob: -14.901311874389648
    9. '

' → logprob: -15.776311874389648
    10. '```' → logprob: -16.02631187438965

Token 226: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09260912239551544
    2. ')
' → logprob: -3.092609167098999
    3. '           ' → logprob: -3.592609167098999
    4. ',' → logprob: -5.46760892868042
    5. ' )' → logprob: -5.46760892868042
    6. ':' → logprob: -5.84260892868042
    7. '):' → logprob: -6.59260892868042
    8. ' )
' → logprob: -7.21760892868042
    9. '):
' → logprob: -7.71760892868042
    10. '),' → logprob: -8.467609405517578

Token 227: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0028080830816179514
    2. '            
' → logprob: -6.877808094024658
    3. ' perpendicular' → logprob: -7.252808094024658
    4. ':' → logprob: -8.8778076171875
    5. ' for' → logprob: -8.8778076171875
    6. ' perp' → logprob: -8.8778076171875
    7. ' dx' → logprob: -8.8778076171875
    8. ',' → logprob: -8.8778076171875
    9. '
' → logprob: -9.2528076171875
    10. 'dx' → logprob: -10.7528076171875

Token 228: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5572079420089722
    2. ' perp' → logprob: -1.4322079420089722
    3. 'nx' → logprob: -3.4322080612182617
    4. ' for' → logprob: -3.4322080612182617
    5. ' nx' → logprob: -3.9322080612182617
    6. ' line' → logprob: -4.057208061218262
    7. ' px' → logprob: -4.057208061218262
    8. 'per' → logprob: -4.182208061218262
    9. 'px' → logprob: -4.307208061218262
    10. 'line' → logprob: -5.307208061218262

Token 229: ' We'll' (ID: 46830)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nx' → logprob: -1.2376480102539062
    2. 'for' → logprob: -1.6126480102539062
    3. ' for' → logprob: -1.7376480102539062
    4. ' perp' → logprob: -2.4876480102539062
    5. ' nx' → logprob: -2.4876480102539062
    6. ' normal' → logprob: -3.3626480102539062
    7. 'normal' → logprob: -4.112648010253906
    8. 'line' → logprob: -4.362648010253906
    9. ' line' → logprob: -4.612648010253906
    10. 'vx' → logprob: -4.737648010253906

Token 230: ' use' (ID: 1199)
  Prédit: ' test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' test' → logprob: -0.6867109537124634
    2. ' try' → logprob: -1.4367109537124634
    3. ' check' → logprob: -1.6867109537124634
    4. ' continue' → logprob: -3.311710834503174
    5. ' use' → logprob: -3.686710834503174
    6. ' consider' → logprob: -5.311710834503174
    7. 'check' → logprob: -6.061710834503174
    8. 'try' → logprob: -6.186710834503174
    9. 'test' → logprob: -7.311710834503174
    10. 'continue' → logprob: -7.436710834503174

Token 231: ' vector' (ID: 9727)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.4098977744579315
    2. ' (-' → logprob: -2.284897804260254
    3. ' -' → logprob: -2.784897804260254
    4. ' (' → logprob: -3.034897804260254
    5. 'dy' → logprob: -3.284897804260254
    6. '-d' → logprob: -4.159897804260254
    7. 'dx' → logprob: -4.159897804260254
    8. ' dy' → logprob: -4.659897804260254
    9. '(' → logprob: -4.659897804260254
    10. '(dx' → logprob: -5.034897804260254

Token 232: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.7188447117805481
    2. ' (-' → logprob: -1.0938446521759033
    3. ' (' → logprob: -2.0938446521759033
    4. '(' → logprob: -4.343844890594482
    5. ' =' → logprob: -4.843844890594482
    6. ' perpendicular' → logprob: -5.093844890594482
    7. ' -' → logprob: -5.218844890594482
    8. '(dx' → logprob: -5.593844890594482
    9. '   ' → logprob: -5.718844890594482
    10. '=' → logprob: -6.468844890594482

Token 233: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -3.7697225252486533e-06
    2. 'd' → logprob: -12.750003814697266
    3. ' dy' → logprob: -14.500003814697266
    4. '(d' → logprob: -15.750003814697266
    5. '```' → logprob: -16.250003814697266
    6. '-d' → logprob: -16.750003814697266
    7. '.dy' → logprob: -17.125003814697266
    8. '	d' → logprob: -17.375003814697266
    9. '   ' → logprob: -17.875003814697266
    10. ')' → logprob: -19.125003814697266

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004089204594492912
    2. ' ,' → logprob: -5.50408935546875
    3. ')' → logprob: -12.37908935546875
    4. ',
' → logprob: -12.87908935546875
    5. '),' → logprob: -14.12908935546875
    6. ',d' → logprob: -14.37908935546875
    7. '           ' → logprob: -14.37908935546875
    8. ' ' → logprob: -14.62908935546875
    9. '```' → logprob: -15.25408935546875
    10. '   ' → logprob: -15.50408935546875

Token 235: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.008614808320999146
    2. ' dx' → logprob: -4.758615016937256
    3. '_dx' → logprob: -15.633614540100098
    4. '(dx' → logprob: -16.883615493774414
    5. ' ' → logprob: -17.383615493774414
    6. '.dx' → logprob: -17.758615493774414
    7. '   ' → logprob: -17.883615493774414
    8. ')' → logprob: -18.758615493774414
    9. 'DX' → logprob: -19.383615493774414
    10. 'Dx' → logprob: -20.008615493774414

Token 236: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033201880287379026
    2. ' )' → logprob: -6.128320217132568
    3. '           ' → logprob: -7.253320217132568
    4. '):' → logprob: -8.62831974029541
    5. ')
' → logprob: -8.75331974029541
    6. ').' → logprob: -10.12831974029541
    7. '):
' → logprob: -11.25331974029541
    8. '),' → logprob: -11.87831974029541
    9. ')

' → logprob: -12.12831974029541
    10. '            ' → logprob: -12.62831974029541

Token 237: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.304625004529953
    2. '
' → logprob: -1.6796250343322754
    3. '            
' → logprob: -2.8046250343322754
    4. ' for' → logprob: -5.429625034332275
    5. '  
' → logprob: -5.804625034332275
    6. ' to' → logprob: -6.804625034332275
    7. ':' → logprob: -7.054625034332275
    8. ' 
' → logprob: -7.179625034332275
    9. '<|end|>' → logprob: -7.429625034332275
    10. 'for' → logprob: -7.554625034332275

Token 238: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.4856344163417816
    2. ' the' → logprob: -2.2356343269348145
    3. ' separation' → logprob: -2.4856343269348145
    4. ' direction' → logprob: -2.7356343269348145
    5. 'line' → logprob: -3.3606343269348145
    6. 'the' → logprob: -3.8606343269348145
    7. 'direction' → logprob: -3.9856343269348145
    8. ' normal' → logprob: -4.3606343269348145
    9. ' separating' → logprob: -4.9856343269348145
    10. 'normal' → logprob: -5.3606343269348145

Token 239: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.1308138519525528
    2. 'direction' → logprob: -2.8808138370513916
    3. '           ' → logprob: -3.6308138370513916
    4. ' normal' → logprob: -4.130814075469971
    5. ' for' → logprob: -5.255814075469971
    6. 'normal' → logprob: -5.505814075469971
    7. '_direction' → logprob: -5.755814075469971
    8. '            
' → logprob: -5.755814075469971
    9. ' ' → logprob: -6.255814075469971
    10. '
' → logprob: -7.130814075469971

Token 240: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11506208032369614
    2. '
' → logprob: -3.1150619983673096
    3. '            
' → logprob: -3.1150619983673096
    4. ':' → logprob: -4.490062236785889
    5. '.' → logprob: -6.365062236785889
    6. ',' → logprob: -6.365062236785889
    7. '\n' → logprob: -7.240062236785889
    8. '            

' → logprob: -7.490062236785889
    9. ' for' → logprob: -7.615062236785889
    10. '  
' → logprob: -7.990062236785889

Token 241: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.032128602266311646
    2. '            
' → logprob: -3.9071285724639893
    3. ' for' → logprob: -4.657128810882568
    4. 'for' → logprob: -7.407128810882568
    5. '
' → logprob: -8.15712833404541
    6. ' 
' → logprob: -8.65712833404541
    7. '  
' → logprob: -8.90712833404541
    8. '    
' → logprob: -9.28212833404541
    9. '            ' → logprob: -9.53212833404541
    10. '           
' → logprob: -9.78212833404541

Token 242: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7531003952026367
    2. ' for' → logprob: -1.0031003952026367
    3. 'for' → logprob: -2.0031003952026367
    4. ' line' → logprob: -4.878100395202637
    5. '            
' → logprob: -6.003100395202637
    6. ' direction' → logprob: -6.128100395202637
    7. '#' (adapté à ' #') → logprob: -6.128100395202637
    8. 'line' → logprob: -6.128100395202637
    9. 'direction' → logprob: -6.378100395202637
    10. '            ' → logprob: -6.628100395202637

Token 243: ' Define' (ID: 38966)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3789634704589844
    2. 'normal' → logprob: -2.5039634704589844
    3. 'line' → logprob: -2.7539634704589844
    4. 'direction' → logprob: -3.2539634704589844
    5. 'dir' → logprob: -3.3789634704589844
    6. ' for' → logprob: -3.7539634704589844
    7. '#' → logprob: -3.8789634704589844
    8. ' normal' → logprob: -4.753963470458984
    9. 'vec' → logprob: -4.878963470458984
    10. 'nx' → logprob: -5.128963470458984

Token 244: ' the' (ID: 290)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0147243738174438
    2. 'a' → logprob: -1.7647243738174438
    3. ' line' → logprob: -1.7647243738174438
    4. 'line' → logprob: -2.5147242546081543
    5. 'def' → logprob: -2.5147242546081543
    6. ' def' → logprob: -2.8897242546081543
    7. 'A' → logprob: -4.014724254608154
    8. ' A' → logprob: -4.639724254608154
    9. ' ax' → logprob: -5.264724254608154
    10. '           ' → logprob: -5.514724254608154

Token 245: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.7678605914115906
    2. ' line' → logprob: -1.0178606510162354
    3. 'def' → logprob: -3.1428606510162354
    4. 'a' → logprob: -3.3928606510162354
    5. 'normal' → logprob: -3.5178606510162354
    6. ' normal' → logprob: -4.517860412597656
    7. 'A' → logprob: -4.767860412597656
    8. ' def' → logprob: -5.267860412597656
    9. ' a' → logprob: -5.392860412597656
    10. 'side' → logprob: -5.642860412597656

Token 246: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27279797196388245
    2. ' =' → logprob: -2.7727980613708496
    3. '_direction' → logprob: -3.3977980613708496
    4. 'def' → logprob: -3.5227980613708496
    5. '_normal' → logprob: -4.14779806137085
    6. ' normal' → logprob: -4.27279806137085
    7. ' for' → logprob: -4.64779806137085
    8. ' direction' → logprob: -4.77279806137085
    9. ' vector' → logprob: -4.77279806137085
    10. '_vector' → logprob: -5.02279806137085

Token 247: ' ax' (ID: 6807)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6689348816871643
    2. 'a' → logprob: -1.5439348220825195
    3. ' A' → logprob: -2.1689348220825195
    4. ' a' → logprob: -2.2939348220825195
    5. ' for' → logprob: -3.7939348220825195
    6. 'for' → logprob: -3.7939348220825195
    7. 'def' → logprob: -5.9189348220825195
    8. '   ' → logprob: -6.6689348220825195
    9. ' normal' → logprob: -6.7939348220825195
    10. 'normal' → logprob: -7.0439348220825195

Token 248: ' +' (ID: 659)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5423356890678406
    2. '=' → logprob: -0.9173356890678406
    3. ',' → logprob: -4.042335510253906
    4. '=-' → logprob: -7.042335510253906
    5. 'x' → logprob: -7.542335510253906
    6. '*' → logprob: -10.542335510253906
    7. '*x' → logprob: -11.917335510253906
    8. ' ,' → logprob: -12.042335510253906
    9. '=(-' → logprob: -12.292335510253906
    10. ' x' → logprob: -12.417335510253906

Token 249: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -1.0010137557983398
    2. 'dy' → logprob: -1.5010137557983398
    3. ' by' → logprob: -1.7510137557983398
    4. ' dy' → logprob: -2.12601375579834
    5. 'b' → logprob: -2.87601375579834
    6. 'ay' → logprob: -3.75101375579834
    7. 'y' → logprob: -4.12601375579834
    8. ' y' → logprob: -5.12601375579834
    9. ' b' → logprob: -5.37601375579834
    10. 'biy' → logprob: -6.12601375579834

Token 250: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16583552956581116
    2. '+' → logprob: -2.1658356189727783
    3. ' =' → logprob: -3.7908356189727783
    4. '=' → logprob: -4.165835380554199
    5. '+a' → logprob: -11.2908353805542
    6. '+b' → logprob: -11.7908353805542
    7. ' ' → logprob: -12.1658353805542
    8. ' +=' → logprob: -12.1658353805542
    9. ',' → logprob: -12.1658353805542
    10. ' -' → logprob: -12.2908353805542

Token 251: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0336495004594326
    2. ' c' → logprob: -3.408649444580078
    3. '=' → logprob: -14.158649444580078
    4. '	c' → logprob: -14.408649444580078
    5. '```' → logprob: -14.533649444580078
    6. 'cx' → logprob: -14.908649444580078
    7. '_c' → logprob: -14.908649444580078
    8. 'cz' → logprob: -15.033649444580078
    9. '=c' → logprob: -15.533649444580078
    10. '0' → logprob: -15.783649444580078

Token 252: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760425329208374
    2. ' =' → logprob: -0.8260425329208374
    3. 'a' → logprob: -10.701042175292969
    4. ',' → logprob: -10.826042175292969
    5. 's' → logprob: -11.201042175292969
    6. ':' → logprob: -11.326042175292969
    7. 'x' → logprob: -11.826042175292969
    8. '<|end|>' → logprob: -11.826042175292969
    9. ' ' → logprob: -12.076042175292969
    10. ')' → logprob: -12.701042175292969

Token 253: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010405298322439194
    2. '=' → logprob: -5.01040506362915
    3. ' ' → logprob: -5.63540506362915
    4. ' =' → logprob: -10.260405540466309
    5. 'c' → logprob: -10.510405540466309
    6. 'd' → logprob: -10.760405540466309
    7. 'f' → logprob: -11.885405540466309
    8. ' c' → logprob: -12.135405540466309
    9. ' d' → logprob: -12.385405540466309
    10. '1' → logprob: -12.635405540466309

Token 254: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005287261446937919
    2. ' ' → logprob: -7.625528812408447
    3. 'd' → logprob: -10.875528335571289
    4. '=' → logprob: -11.250528335571289
    5. 'dy' → logprob: -12.625528335571289
    6. 'dx' → logprob: -12.625528335571289
    7. '(' → logprob: -14.875528335571289
    8. '```' → logprob: -15.000528335571289
    9. 'c' → logprob: -15.375528335571289
    10. ' dy' → logprob: -15.500528335571289

Token 255: ' with' (ID: 483)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7765518426895142
    2. ' =' → logprob: -1.9015518426895142
    3. ':' → logprob: -2.0265517234802246
    4. '=' → logprob: -2.6515517234802246
    5. '
' → logprob: -3.0265517234802246
    6. 'a' → logprob: -3.1515517234802246
    7. '            
' → logprob: -3.6515517234802246
    8. ',' → logprob: -4.276551723480225
    9. '  
' → logprob: -4.401551723480225
    10. '<|end|>' → logprob: -4.526551723480225

Token 256: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07890928536653519
    2. ' a' → logprob: -2.578909397125244
    3. '   ' → logprob: -12.453908920288086
    4. '	a' → logprob: -12.953908920288086
    5. '-' → logprob: -13.453908920288086
    6. 'c' → logprob: -13.703908920288086
    7. 'ax' → logprob: -13.828908920288086
    8. ' -' → logprob: -13.953908920288086
    9. '_a' → logprob: -13.953908920288086
    10. 'x' → logprob: -13.953908920288086

Token 257: '=-' (ID: 21714)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03383161127567291
    2. ' =' → logprob: -3.4088315963745117
    3. '=-' → logprob: -8.783831596374512
    4. ',' → logprob: -10.408831596374512
    5. '=
' → logprob: -14.408831596374512
    6. '=int' → logprob: -15.158831596374512
    7. 'a' → logprob: -15.408831596374512
    8. '=(-' → logprob: -15.408831596374512
    9. '-' → logprob: -15.658831596374512
    10. '=a' → logprob: -15.783831596374512

Token 258: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.024265842512249947
    2. '-d' → logprob: -3.774265766143799
    3. '(-' → logprob: -7.399265766143799
    4. 'd' → logprob: -8.774266242980957
    5. ' dy' → logprob: -9.024266242980957
    6. '-' → logprob: -10.024266242980957
    7. ' -' → logprob: -10.649266242980957
    8. '(d' → logprob: -10.899266242980957
    9. 'y' → logprob: -11.024266242980957
    10. '   ' → logprob: -11.649266242980957

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004473438952118158
    2. ' ,' → logprob: -5.5044732093811035
    3. ',b' → logprob: -8.629473686218262
    4. '           ' → logprob: -9.129473686218262
    5. ' and' → logprob: -10.379473686218262
    6. ' ' → logprob: -11.379473686218262
    7. 'a' → logprob: -11.504473686218262
    8. ',d' → logprob: -11.504473686218262
    9. ',a' → logprob: -11.629473686218262
    10. '   ' → logprob: -11.879473686218262

Token 260: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.9190449714660645
    2. 'dx' → logprob: -0.9190449714660645
    3. ' dx' → logprob: -2.2940449714660645
    4. ' b' → logprob: -2.6690449714660645
    5. 'a' → logprob: -3.5440449714660645
    6. ' a' → logprob: -6.9190449714660645
    7. 'x' → logprob: -7.2940449714660645
    8. '<|end|>' → logprob: -7.9190449714660645
    9. 'd' → logprob: -8.169044494628906
    10. 'bx' → logprob: -8.669044494628906

Token 261: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00110116065479815
    2. ' =' → logprob: -7.126101016998291
    3. 'dx' → logprob: -9.12610149383545
    4. '=d' → logprob: -9.37610149383545
    5. '=x' → logprob: -10.00110149383545
    6. ',' → logprob: -10.25110149383545
    7. ' dx' → logprob: -11.50110149383545
    8. 'x' → logprob: -12.75110149383545
    9. '=df' → logprob: -13.25110149383545
    10. '=ax' → logprob: -13.50110149383545

Token 262: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.000555416801944375
    2. ' dx' → logprob: -7.500555515289307
    3. '_dx' → logprob: -13.250555038452148
    4. '(dx' → logprob: -14.500555038452148
    5. '-d' → logprob: -16.25055503845215
    6. '.dx' → logprob: -16.50055503845215
    7. 'x' → logprob: -18.00055503845215
    8. 'Dx' → logprob: -18.62555503845215
    9. ' ' → logprob: -18.75055503845215
    10. 'd' → logprob: -19.50055503845215

Token 263: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6800548434257507
    2. '           ' → logprob: -0.8050548434257507
    3. ' c' → logprob: -4.430054664611816
    4. '<|end|>' → logprob: -5.305054664611816
    5. 'a' → logprob: -5.555054664611816
    6. '   ' → logprob: -5.555054664611816
    7. '
' → logprob: -5.680054664611816
    8. ' ' → logprob: -5.930054664611816
    9. ' ,' → logprob: -6.305054664611816
    10. 'c' → logprob: -6.430054664611816

Token 264: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01602674275636673
    2. 'a' → logprob: -4.516026973724365
    3. ' a' → logprob: -6.641026973724365
    4. ',' → logprob: -6.641026973724365
    5. '            
' → logprob: -7.641026973724365
    6. '   ' → logprob: -7.766026973724365
    7. '       ' → logprob: -8.016026496887207
    8. '
' → logprob: -8.391026496887207
    9. '            ' → logprob: -8.891026496887207
    10. '<|end|>' → logprob: -8.891026496887207

Token 265: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.26092877984046936
    2. '           ' → logprob: -2.0109288692474365
    3. ' a' → logprob: -2.3859288692474365
    4. '   ' → logprob: -6.635928630828857
    5. '            ' → logprob: -7.635928630828857
    6. '            
' → logprob: -7.635928630828857
    7. '       ' → logprob: -7.885928630828857
    8. ' for' → logprob: -8.510929107666016
    9. ' c' → logprob: -8.510929107666016
    10. '    ' → logprob: -9.010929107666016

Token 266: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023660030215978622
    2. ' =' → logprob: -3.7736599445343018
    3. '=-' → logprob: -8.023659706115723
    4. ',' → logprob: -9.398659706115723
    5. '=
' → logprob: -13.273659706115723
    6. ')' → logprob: -14.148659706115723
    7. '=(-' → logprob: -14.648659706115723
    8. '=

' → logprob: -14.773659706115723
    9. '=int' → logprob: -15.773659706115723
    10. '=}' → logprob: -16.02366065979004

Token 267: ' -' (ID: 533)
  Prédit: '-d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-d' → logprob: -0.02921922504901886
    2. ' -' → logprob: -4.029219150543213
    3. '-' → logprob: -4.529219150543213
    4. '-y' → logprob: -9.154219627380371
    5. '-D' → logprob: -9.779219627380371
    6. '   ' → logprob: -10.904219627380371
    7. '-p' → logprob: -11.529219627380371
    8. ' ' → logprob: -12.529219627380371
    9. '	' → logprob: -13.029219627380371
    10. '(-' → logprob: -13.279219627380371

Token 268: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -7.896309739408025e-07
    2. ' dy' → logprob: -14.500000953674316
    3. 'd' → logprob: -15.250000953674316
    4. 'y' → logprob: -18.75
    5. '.dy' → logprob: -19.625
    6. '-d' → logprob: -21.25
    7. '   ' → logprob: -21.5
    8. 'dyr' → logprob: -21.625
    9. 'dym' → logprob: -21.625
    10. 'Dy' → logprob: -21.75

Token 269: '
' (ID: 198)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.24323195219039917
    2. ' b' → logprob: -1.618232011795044
    3. ',' → logprob: -4.368231773376465
    4. ',b' → logprob: -5.493231773376465
    5. '	b' → logprob: -8.118231773376465
    6. '
' → logprob: -8.118231773376465
    7. ' ' → logprob: -9.118231773376465
    8. '   ' → logprob: -9.618231773376465
    9. '           ' → logprob: -10.118231773376465
    10. '<|end|>' → logprob: -11.493231773376465

Token 270: '           ' (ID: 352)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3868718445301056
    2. ' b' → logprob: -1.1368718147277832
    3. '	b' → logprob: -14.886872291564941
    4. ' ' → logprob: -15.261872291564941
    5. ',b' → logprob: -15.761872291564941
    6. ',' → logprob: -16.636871337890625
    7. '   ' → logprob: -17.136871337890625
    8. '    ' → logprob: -18.511871337890625
    9. ' ' → logprob: -18.886871337890625
    10. ' =' → logprob: -19.261871337890625

Token 271: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.004078401252627373
    2. ' b' → logprob: -5.504078388214111
    3. '	b' → logprob: -19.004077911376953
    4. '<|end|>' → logprob: -19.254077911376953
    5. ' ' → logprob: -19.754077911376953
    6. '    ' → logprob: -20.379077911376953
    7. '   ' → logprob: -20.629077911376953
    8. ')b' → logprob: -21.254077911376953
    9. ',b' → logprob: -21.379077911376953
    10. '=' → logprob: -21.379077911376953

Token 272: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245595395565033
    2. ' =' → logprob: -3.7732455730438232
    3. '=
' → logprob: -17.023244857788086
    4. ' ' → logprob: -19.023244857788086
    5. ',' → logprob: -19.148244857788086
    6. 'dx' → logprob: -19.273244857788086
    7. '=d' → logprob: -19.398244857788086
    8. ')' → logprob: -19.648244857788086
    9. ' =
' → logprob: -19.648244857788086
    10. '＝' → logprob: -19.898244857788086

Token 273: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.011047935113310814
    2. ' dx' → logprob: -4.511047840118408
    3. '_dx' → logprob: -16.01104736328125
    4. 'x' → logprob: -17.63604736328125
    5. '(dx' → logprob: -18.88604736328125
    6. '.dx' → logprob: -19.38604736328125
    7. 'Dx' → logprob: -20.26104736328125
    8. 'xd' → logprob: -20.88604736328125
    9. ' ' → logprob: -21.26104736328125
    10. 'DX' → logprob: -21.88604736328125

Token 274: '

' (ID: 279)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6152964234352112
    2. '           ' → logprob: -1.2402963638305664
    3. ' c' → logprob: -2.2402963638305664
    4. '
' → logprob: -3.6152963638305664
    5. '            
' → logprob: -4.115296363830566
    6. '   ' → logprob: -4.990296363830566
    7. ' for' → logprob: -5.365296363830566
    8. 'for' → logprob: -5.865296363830566
    9. '    
' → logprob: -6.865296363830566
    10. ' ' → logprob: -6.865296363830566

Token 275: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6425597667694092
    2. 'c' → logprob: -1.0175597667694092
    3. ' c' → logprob: -2.392559766769409
    4. '   ' → logprob: -4.142560005187988
    5. ' ' → logprob: -6.517560005187988
    6. ' for' → logprob: -7.017560005187988
    7. '	c' → logprob: -7.267560005187988
    8. '            
' → logprob: -7.267560005187988
    9. 'for' → logprob: -7.517560005187988
    10. '       ' → logprob: -8.142560005187988

Token 276: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03690150007605553
    2. 'for' → logprob: -4.411901473999023
    3. '           ' → logprob: -4.536901473999023
    4. ' c' → logprob: -4.911901473999023
    5. ' for' → logprob: -5.536901473999023
    6. '#' (adapté à ' #') → logprob: -6.911901473999023
    7. '            
' → logprob: -7.661901473999023
    8. '   ' → logprob: -8.411901473999023
    9. 'if' → logprob: -8.661901473999023
    10. ' if' → logprob: -9.661901473999023

Token 277: ' To' (ID: 2514)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02422383613884449
    2. 'for' → logprob: -4.524223804473877
    3. '#' → logprob: -4.774223804473877
    4. ' c' → logprob: -5.774223804473877
    5. ' for' → logprob: -8.024224281311035
    6. 'possible' → logprob: -8.524224281311035
    7. 'For' → logprob: -8.899224281311035
    8. ' #' → logprob: -9.274224281311035
    9. '   ' → logprob: -9.524224281311035
    10. 'continue' → logprob: -9.649224281311035

Token 278: ' avoid' (ID: 8397)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4947208762168884
    2. ' continue' → logprob: -0.9947208762168884
    3. 'def' → logprob: -5.369720935821533
    4. 'check' → logprob: -5.619720935821533
    5. '_continue' → logprob: -6.244720935821533
    6. 'calculate' → logprob: -6.369720935821533
    7. 'for' → logprob: -6.744720935821533
    8. 'det' → logprob: -6.869720935821533
    9. ' check' → logprob: -6.994720935821533
    10. '#' → logprob: -7.494720935821533

Token 279: ' overflow' (ID: 28614)
  Prédit: ' division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' division' → logprob: -0.12760281562805176
    2. ' divide' → logprob: -3.2526028156280518
    3. ' a' → logprob: -3.6276028156280518
    4. 'division' → logprob: -3.8776028156280518
    5. 'a' → logprob: -4.752602577209473
    6. ' zero' → logprob: -5.252602577209473
    7. ' ' → logprob: -5.502602577209473
    8. ' floating' → logprob: -5.752602577209473
    9. 'divide' → logprob: -5.752602577209473
    10. '0' → logprob: -5.877602577209473

Token 280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009689392521977425
    2. ' and' → logprob: -5.6346893310546875
    3. ' ,' → logprob: -6.2596893310546875
    4. ' or' → logprob: -6.6346893310546875
    5. '<|end|>' → logprob: -7.3846893310546875
    6. ' c' → logprob: -7.5096893310546875
    7. ' if' → logprob: -7.8846893310546875
    8. '=' → logprob: -8.134689331054688
    9. ':' → logprob: -8.259689331054688
    10. ' for' → logprob: -8.759689331054688

Token 281: ' no' (ID: 860)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9165735244750977
    2. ' c' → logprob: -1.1665735244750977
    3. ' continue' → logprob: -1.4165735244750977
    4. 'continue' → logprob: -3.9165735244750977
    5. ' if' → logprob: -4.791573524475098
    6. ' norm' → logprob: -5.291573524475098
    7. ' for' → logprob: -5.541573524475098
    8. 'for' → logprob: -6.416573524475098
    9. ' break' → logprob: -6.416573524475098
    10. 'if' → logprob: -6.791573524475098

Token 282: ' need' (ID: 1309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9375689029693604
    2. ' need' → logprob: -1.6875689029693604
    3. ' continue' → logprob: -1.6875689029693604
    4. ' c' → logprob: -2.5625689029693604
    5. 'c' → logprob: -3.1875689029693604
    6. 'if' → logprob: -3.8125689029693604
    7. 'import' → logprob: -3.9375689029693604
    8. ' ' → logprob: -4.437568664550781
    9. ' import' → logprob: -4.562568664550781
    10. ' a' → logprob: -4.937568664550781

Token 283: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.07767469435930252
    2. ' c' → logprob: -3.577674627304077
    3. ' if' → logprob: -4.202674865722656
    4. 'to' → logprob: -4.827674865722656
    5. ' for' → logprob: -4.952674865722656
    6. '           ' → logprob: -5.327674865722656
    7. 'c' → logprob: -6.077674865722656
    8. ' =' → logprob: -6.077674865722656
    9. 'for' → logprob: -6.452674865722656
    10. ' continue' → logprob: -6.577674865722656

Token 284: ' normalize' (ID: 44464)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -0.5986289978027344
    2. ' normalize' → logprob: -1.9736289978027344
    3. ' continue' → logprob: -2.2236289978027344
    4. 'import' → logprob: -2.5986289978027344
    5. 'continue' → logprob: -2.9736289978027344
    6. 'abs' → logprob: -3.2236289978027344
    7. 'if' → logprob: -4.098628997802734
    8. ' if' → logprob: -5.348628997802734
    9. 'calculate' → logprob: -6.348628997802734
    10. 'a' → logprob: -6.348628997802734

Token 285: ' because' (ID: 2236)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0395201444625854
    2. ' c' → logprob: -1.2895201444625854
    3. '
' → logprob: -1.4145201444625854
    4. ' for' → logprob: -3.289520263671875
    5. 'c' → logprob: -3.414520263671875
    6. '            
' → logprob: -3.664520263671875
    7. '<|end|>' → logprob: -4.789520263671875
    8. 'for' → logprob: -5.414520263671875
    9. '  
' → logprob: -5.539520263671875
    10. ' ' → logprob: -5.789520263671875

Token 286: ' only' (ID: 1606)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' we' → logprob: -1.1424059867858887
    2. ' only' → logprob: -1.2674059867858887
    3. ' the' → logprob: -1.6424059867858887
    4. 'we' → logprob: -2.5174059867858887
    5. ' relative' → logprob: -3.2674059867858887
    6. ' for' → logprob: -4.017405986785889
    7. ' all' → logprob: -4.142405986785889
    8. ' comparing' → logprob: -4.392405986785889
    9. ' comparisons' → logprob: -4.517405986785889
    10. ' comparison' → logprob: -5.017405986785889

Token 287: ' relative' (ID: 15001)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -1.0561095476150513
    2. ' signs' → logprob: -1.4311095476150513
    3. ' the' → logprob: -1.9311095476150513
    4. 'relative' → logprob: -1.9311095476150513
    5. ' relative' → logprob: -2.8061094284057617
    6. ' sign' → logprob: -3.3061094284057617
    7. 'the' → logprob: -3.8061094284057617
    8. 'a' → logprob: -6.931109428405762
    9. 'rel' → logprob: -7.681109428405762
    10. '_sign' → logprob: -7.806109428405762

Token 288: ' sign' (ID: 2232)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -1.0315836668014526
    2. ' signs' → logprob: -1.4065836668014526
    3. 'positions' → logprob: -1.9065836668014526
    4. ' position' → logprob: -2.531583786010742
    5. 'sign' → logprob: -2.531583786010742
    6. 'position' → logprob: -2.906583786010742
    7. ' sign' → logprob: -4.906583786010742
    8. '<|end|>' → logprob: -5.031583786010742
    9. ' comparisons' → logprob: -5.281583786010742
    10. ' orientations' → logprob: -6.031583786010742

Token 289: ' matters' (ID: 19854)
  Prédit: ' matters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matters' → logprob: -0.17443251609802246
    2. 's' → logprob: -2.2994325160980225
    3. 'mat' → logprob: -4.299432754516602
    4. ' matter' → logprob: -4.299432754516602
    5. ' is' → logprob: -4.299432754516602
    6. 'counts' → logprob: -5.799432754516602
    7. 'matter' → logprob: -5.799432754516602
    8. ' s' → logprob: -6.049432754516602
    9. ' counts' → logprob: -6.174432754516602
    10. ' of' → logprob: -6.174432754516602

Token 290: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14675934612751007
    2. '
' → logprob: -2.146759271621704
    3. '            
' → logprob: -5.021759510040283
    4. '<|end|>' → logprob: -5.521759510040283
    5. '  
' → logprob: -6.021759510040283
    6. ' c' → logprob: -6.271759510040283
    7. '   ' → logprob: -7.146759510040283
    8. 'c' → logprob: -7.396759510040283
    9. '<|end|>' → logprob: -7.646759510040283
    10. ' for' → logprob: -7.771759510040283

Token 291: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22213196754455566
    2. 'c' → logprob: -1.9721319675445557
    3. ' c' → logprob: -3.7221319675445557
    4. ' for' → logprob: -3.9721319675445557
    5. 'for' → logprob: -4.597131729125977
    6. '            
' → logprob: -5.347131729125977
    7. '   ' → logprob: -6.972131729125977
    8. '
' → logprob: -7.722131729125977
    9. ' ' → logprob: -8.472131729125977
    10. '#' → logprob: -8.972131729125977

Token 292: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.05288463830947876
    2. 'for' → logprob: -3.427884578704834
    3. '           ' → logprob: -4.802884578704834
    4. ' c' → logprob: -5.302884578704834
    5. ' for' → logprob: -5.552884578704834
    6. '   ' → logprob: -7.052884578704834
    7. 'valid' → logprob: -7.802884578704834
    8. '#' (adapté à ' #') → logprob: -8.552885055541992
    9. ' ' → logprob: -8.677885055541992
    10. 'all' → logprob: -9.427885055541992

Token 293: ' Compute' (ID: 45438)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5604398846626282
    2. 'for' → logprob: -0.9354398846626282
    3. ' for' → logprob: -4.0604400634765625
    4. '#' → logprob: -4.4354400634765625
    5. ' c' → logprob: -6.0604400634765625
    6. 'For' → logprob: -6.9354400634765625
    7. 'possible' → logprob: -6.9354400634765625
    8. 'values' → logprob: -7.0604400634765625
    9. 'def' → logprob: -7.4354400634765625
    10. '   ' → logprob: -8.685440063476562

Token 294: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6396323442459106
    2. ' c' → logprob: -1.2646323442459106
    3. ' side' → logprob: -2.389632225036621
    4. 'side' → logprob: -3.889632225036621
    5. ' values' → logprob: -4.264632225036621
    6. 'values' → logprob: -4.639632225036621
    7. 's' → logprob: -4.764632225036621
    8. ' signs' → logprob: -5.014632225036621
    9. 'sign' → logprob: -5.014632225036621
    10. ' sides' → logprob: -5.014632225036621

Token 295: ' so' (ID: 813)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030362769961357117
    2. '=' → logprob: -3.530362844467163
    3. 's' → logprob: -8.155363082885742
    4. '1' → logprob: -9.280363082885742
    5. 'x' → logprob: -9.780363082885742
    6. 'a' → logprob: -10.030363082885742
    7. '<|end|>' → logprob: -10.030363082885742
    8. ' ' → logprob: -11.030363082885742
    9. '_values' → logprob: -11.030363082885742
    10. 'values' → logprob: -11.530363082885742

Token 296: ' that' (ID: 484)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05520553141832352
    2. ' =' → logprob: -3.0552055835723877
    3. ' that' → logprob: -5.180205345153809
    4. 'that' → logprob: -7.805205345153809
    5. '   ' → logprob: -8.930205345153809
    6. 'c' → logprob: -8.930205345153809
    7. '=-' → logprob: -9.055205345153809
    8. 's' → logprob: -10.055205345153809
    9. 'a' → logprob: -11.055205345153809
    10. ':' → logprob: -11.055205345153809

Token 297: ' line' (ID: 2543)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17850105464458466
    2. ' a' → logprob: -2.0535011291503906
    3. 'c' → logprob: -3.6785011291503906
    4. ' c' → logprob: -5.053501129150391
    5. '-' → logprob: -6.428501129150391
    6. ' -' → logprob: -6.553501129150391
    7. '-a' → logprob: -8.30350112915039
    8. ' the' → logprob: -9.30350112915039
    9. '-c' → logprob: -9.92850112915039
    10. '<|end|>' → logprob: -11.30350112915039

Token 298: ' doesn't' (ID: 8740)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6771813631057739
    2. '=' → logprob: -1.052181363105774
    3. ' passes' → logprob: -2.3021812438964844
    4. 's' → logprob: -3.6771812438964844
    5. 'passes' → logprob: -4.427181243896484
    6. 'c' → logprob: -6.552181243896484
    7. '=-' → logprob: -6.927181243896484
    8. ':' → logprob: -7.677181243896484
    9. 'x' → logprob: -7.927181243896484
    10. ' c' → logprob: -7.927181243896484

Token 299: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.06333359330892563
    2. 'pass' → logprob: -2.813333511352539
    3. ' go' → logprob: -7.438333511352539
    4. ' cut' → logprob: -8.438333511352539
    5. 'go' → logprob: -9.063333511352539
    6. 'cut' → logprob: -9.438333511352539
    7. '_pass' → logprob: -9.688333511352539
    8. ' passes' → logprob: -9.813333511352539
    9. 'passes' → logprob: -9.813333511352539
    10. ' separate' → logprob: -10.188333511352539

Token 300: ' through' (ID: 1819)
  Prédit: ' through'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' through' → logprob: -0.14310358464717865
    2. 'through' → logprob: -2.01810359954834
    3. '<|end|>' → logprob: -8.39310359954834
    4. 'Through' → logprob: -9.76810359954834
    5. ' ' → logprob: -10.39310359954834
    6. '=' → logprob: -10.76810359954834
    7. ')' → logprob: -10.76810359954834
    8. '-through' → logprob: -11.01810359954834
    9. 'points' → logprob: -11.39310359954834
    10. ' exactly' → logprob: -11.64310359954834

Token 301: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.7177548408508301
    2. ' x' → logprob: -1.09275484085083
    3. 'x' → logprob: -2.59275484085083
    4. ' the' → logprob: -3.21775484085083
    5. 'points' → logprob: -3.71775484085083
    6. ' (' → logprob: -3.71775484085083
    7. '(x' → logprob: -5.34275484085083
    8. ' a' → logprob: -6.21775484085083
    9. ' point' → logprob: -6.46775484085083
    10. '(points' → logprob: -6.71775484085083

Token 302: ' i' (ID: 575)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5451312065124512
    2. '=' → logprob: -2.045131206512451
    3. '           ' → logprob: -2.295131206512451
    4. ' c' → logprob: -2.295131206512451
    5. ' for' → logprob: -3.170131206512451
    6. 's' → logprob: -4.045131206512451
    7. 'c' → logprob: -4.670131206512451
    8. 'for' → logprob: -5.295131206512451
    9. ' ' → logprob: -6.045131206512451
    10. '1' → logprob: -6.295131206512451

Token 303: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.125476360321045
    2. ' =' → logprob: -1.500476360321045
    3. '=' → logprob: -2.000476360321045
    4. ',' → logprob: -2.375476360321045
    5. ' ' → logprob: -2.500476360321045
    6. ':' → logprob: -3.375476360321045
    7. '   ' → logprob: -3.750476360321045
    8. ' for' → logprob: -4.375476360321045
    9. '       ' → logprob: -4.750476360321045
    10. '<|end|>' → logprob: -4.750476360321045

Token 304: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4742896854877472
    2. ' j' → logprob: -0.9742896556854248
    3. '1' → logprob: -8.599289894104004
    4. ' ' → logprob: -10.974289894104004
    5. '   ' → logprob: -13.099289894104004
    6. '  ' → logprob: -13.099289894104004
    7. '```' → logprob: -13.599289894104004
    8. 'x' → logprob: -13.724289894104004
    9. '	j' → logprob: -13.724289894104004
    10. '_j' → logprob: -14.599289894104004

Token 305: '
' (ID: 198)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.9586508274078369
    2. 'c' → logprob: -1.083650827407837
    3. ' =' → logprob: -1.958650827407837
    4. '=' → logprob: -2.083650827407837
    5. ':' → logprob: -5.458650588989258
    6. ' for' → logprob: -5.958650588989258
    7. '           ' → logprob: -6.333650588989258
    8. ',' → logprob: -6.958650588989258
    9. ' ' → logprob: -7.208650588989258
    10. '<|end|>' → logprob: -7.833650588989258

Token 306: '           ' (ID: 352)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.079484224319458
    2. ' c' → logprob: -1.079484224319458
    3. ' ' → logprob: -1.954484224319458
    4. '=' → logprob: -2.704484224319458
    5. ' =' → logprob: -2.829484224319458
    6. '`' → logprob: -4.204483985900879
    7. ' 
' → logprob: -4.454483985900879
    8. '<|end|>' → logprob: -5.204483985900879
    9. '  
' → logprob: -5.454483985900879
    10. ',' → logprob: -6.079483985900879

Token 307: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7387802004814148
    2. ' c' → logprob: -0.8637802004814148
    3. '=' → logprob: -3.1137802600860596
    4. ' =' → logprob: -3.3637802600860596
    5. ' ' → logprob: -4.3637800216674805
    6. ' 
' → logprob: -5.9887800216674805
    7. '           ' → logprob: -6.7387800216674805
    8. ' for' → logprob: -7.2387800216674805
    9. '            
' → logprob: -7.2387800216674805
    10. 'for' → logprob: -7.6137800216674805

Token 308: ' Since' (ID: 12265)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.14600053429603577
    2. ' c' → logprob: -2.021000623703003
    3. '           ' → logprob: -5.771000385284424
    4. '   ' → logprob: -9.021000862121582
    5. ' ' → logprob: -10.521000862121582
    6. '#' → logprob: -11.771000862121582
    7. ' continue' → logprob: -11.771000862121582
    8. 'continue' → logprob: -12.021000862121582
    9. ' for' → logprob: -12.458500862121582
    10. '            
' → logprob: -12.458500862121582

Token 309: ' line' (ID: 2543)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.45105883479118347
    2. ' c' → logprob: -1.0760588645935059
    3. 'a' → logprob: -4.451058864593506
    4. 'x' → logprob: -5.576058864593506
    5. ' a' → logprob: -5.701058864593506
    6. ' points' → logprob: -7.451058864593506
    7. ' the' → logprob: -7.576058864593506
    8. 'points' → logprob: -7.701058864593506
    9. ' (' → logprob: -8.201058387756348
    10. ' x' → logprob: -8.326058387756348

Token 310: ' is' (ID: 382)
  Prédit: ' passes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' passes' → logprob: -0.10785491019487381
    2. 'passes' → logprob: -2.9828548431396484
    3. ' c' → logprob: -4.482854843139648
    4. '=' → logprob: -4.857854843139648
    5. 'c' → logprob: -4.857854843139648
    6. ' =' → logprob: -4.982854843139648
    7. 's' → logprob: -5.732854843139648
    8. ' can' → logprob: -5.857854843139648
    9. ' should' → logprob: -6.482854843139648
    10. ' does' → logprob: -6.482854843139648

Token 311: ' infinite' (ID: 48413)
  Prédit: ' passing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' passing' → logprob: -0.2770974338054657
    2. ' not' → logprob: -2.902097463607788
    3. 'passing' → logprob: -3.027097463607788
    4. ' defined' → logprob: -3.402097463607788
    5. 'a' → logprob: -3.402097463607788
    6. ' through' → logprob: -4.027097225189209
    7. 'not' → logprob: -4.277097225189209
    8. 'defined' → logprob: -4.777097225189209
    9. 'through' → logprob: -5.277097225189209
    10. ' passes' → logprob: -5.902097225189209

Token 312: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008846665732562542
    2. ' c' → logprob: -5.508846759796143
    3. '=' → logprob: -5.633846759796143
    4. 'c' → logprob: -7.508846759796143
    5. ' ' → logprob: -8.633846282958984
    6. ',' → logprob: -8.633846282958984
    7. 's' → logprob: -9.758846282958984
    8. '<|end|>' → logprob: -9.883846282958984
    9. '           ' → logprob: -10.008846282958984
    10. ')' → logprob: -11.008846282958984

Token 313: ' any' (ID: 1062)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.49222344160079956
    2. ' continue' → logprob: -1.4922235012054443
    3. ' c' → logprob: -2.1172235012054443
    4. 'continue' → logprob: -3.7422235012054443
    5. ' for' → logprob: -4.367223262786865
    6. '#' → logprob: -5.992223262786865
    7. 'for' → logprob: -6.367223262786865
    8. ' pass' → logprob: -6.867223262786865
    9. ' #' → logprob: -7.742223262786865
    10. '   ' → logprob: -8.492223739624023

Token 314: ' line' (ID: 2543)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.24509039521217346
    2. 'c' → logprob: -1.870090365409851
    3. ' point' → logprob: -3.4950904846191406
    4. 'point' → logprob: -4.995090484619141
    5. ' of' → logprob: -5.370090484619141
    6. ' value' → logprob: -5.495090484619141
    7. '<|end|>' → logprob: -6.370090484619141
    8. 'x' → logprob: -6.932590484619141
    9. ' constant' → logprob: -6.995090484619141
    10. ' x' → logprob: -6.995090484619141

Token 315: ' parallel' (ID: 26697)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.4987529516220093
    2. '<|end|>' → logprob: -1.7487529516220093
    3. ' passing' → logprob: -1.7487529516220093
    4. ' c' → logprob: -1.8737529516220093
    5. ' passes' → logprob: -2.373753070831299
    6. ' will' → logprob: -3.373753070831299
    7. ' that' → logprob: -3.498753070831299
    8. ' =' → logprob: -3.498753070831299
    9. ' with' → logprob: -3.873753070831299
    10. ' is' → logprob: -4.373753070831299

Token 316: ' and' (ID: 326)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.039525046944618225
    2. '=' → logprob: -3.914525032043457
    3. ' =' → logprob: -4.789525032043457
    4. 'to' → logprob: -5.039525032043457
    5. ' line' → logprob: -6.414525032043457
    6. ' with' → logprob: -7.289525032043457
    7. '            ' → logprob: -7.914525032043457
    8. '           ' → logprob: -8.164525032043457
    9. ' +=' → logprob: -8.289525032043457
    10. ' lines' → logprob: -9.039525032043457

Token 317: ' not' (ID: 625)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.6547770500183105
    2. 'not' → logprob: -1.5297770500183105
    3. 'offset' → logprob: -2.5297770500183105
    4. ' shifted' → logprob: -2.9047770500183105
    5. 'passing' → logprob: -3.0297770500183105
    6. ' not' → logprob: -3.4047770500183105
    7. ' offset' → logprob: -4.2797770500183105
    8. ' passing' → logprob: -4.6547770500183105
    9. 'through' → logprob: -5.2797770500183105
    10. 'close' → logprob: -5.2797770500183105

Token 318: ' crossing' (ID: 50946)
  Prédit: 'passing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'passing' → logprob: -0.5030984878540039
    2. ' passing' → logprob: -1.003098487854004
    3. 'through' → logprob: -4.003098487854004
    4. ' through' → logprob: -4.878098487854004
    5. ' going' → logprob: -7.128098487854004
    6. ' coinc' → logprob: -7.628098487854004
    7. 'going' → logprob: -8.003098487854004
    8. 'equal' → logprob: -8.128098487854004
    9. '   ' → logprob: -8.878098487854004
    10. 'pass' → logprob: -9.128098487854004

Token 319: ' points' (ID: 5571)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7262513041496277
    2. 'the' → logprob: -1.2262513637542725
    3. 'points' → logprob: -2.3512513637542725
    4. ' points' → logprob: -2.8512513637542725
    5. ' through' → logprob: -3.9762513637542725
    6. ' (' → logprob: -4.226251125335693
    7. 'through' → logprob: -4.726251125335693
    8. '(points' → logprob: -5.101251125335693
    9. ' to' → logprob: -5.226251125335693
    10. '(' → logprob: -5.476251125335693

Token 320: ' i' (ID: 575)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1417183130979538
    2. ' can' → logprob: -2.7667183876037598
    3. '=' → logprob: -3.1417183876037598
    4. ' will' → logprob: -4.51671838760376
    5. ' ' → logprob: -5.64171838760376
    6. ' is' → logprob: -5.76671838760376
    7. '<|end|>' → logprob: -6.26671838760376
    8. ' c' → logprob: -6.76671838760376
    9. 'c' → logprob: -7.01671838760376
    10. 's' → logprob: -7.76671838760376

Token 321: ',j' (ID: 22712)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.1297234445810318
    2. 'or' → logprob: -2.37972354888916
    3. ' and' → logprob: -4.00472354888916
    4. 'and' → logprob: -5.25472354888916
    5. ',' → logprob: -5.37972354888916
    6. '1' → logprob: -7.75472354888916
    7. ' ' → logprob: -9.00472354888916
    8. '#' → logprob: -9.75472354888916
    9. '+' → logprob: -10.00472354888916
    10. 'will' → logprob: -10.00472354888916

Token 322: ' is' (ID: 382)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.2512694001197815
    2. ' will' → logprob: -2.7512693405151367
    3. '           ' → logprob: -3.5012693405151367
    4. ' is' → logprob: -3.8762693405151367
    5. ' c' → logprob: -4.126269340515137
    6. '<|end|>' → logprob: -4.126269340515137
    7. ' could' → logprob: -4.251269340515137
    8. ' =' → logprob: -4.501269340515137
    9. '<|end|>' → logprob: -4.751269340515137
    10. ' would' → logprob: -4.751269340515137

Token 323: ' valid' (ID: 4529)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.8621375560760498
    2. ' acceptable' → logprob: -2.11213755607605
    3. ' not' → logprob: -2.73713755607605
    4. ' c' → logprob: -2.73713755607605
    5. ' valid' → logprob: -2.86213755607605
    6. ' okay' → logprob: -2.98713755607605
    7. ' fine' → logprob: -3.23713755607605
    8. ' ' → logprob: -3.23713755607605
    9. ' a' → logprob: -3.98713755607605
    10. ' (' → logprob: -4.112137794494629

Token 324: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019496101886034012
    2. '<|end|>' → logprob: -5.019495964050293
    3. '<|end|>' → logprob: -5.769495964050293
    4. '            
' → logprob: -6.144495964050293
    5. ' c' → logprob: -6.769495964050293
    6. ' ' → logprob: -6.769495964050293
    7. '
' → logprob: -6.894495964050293
    8. '   ' → logprob: -7.519495964050293
    9. ' 
' → logprob: -7.519495964050293
    10. '       ' → logprob: -7.519495964050293

Token 325: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24858707189559937
    2. ' c' → logprob: -1.6235871315002441
    3. '<|end|>' → logprob: -4.623587131500244
    4. 'c' → logprob: -5.873587131500244
    5. ' ' → logprob: -6.248587131500244
    6. '
' → logprob: -6.248587131500244
    7. '   ' → logprob: -7.123587131500244
    8. '```' → logprob: -7.248587131500244
    9. '<|end|>' → logprob: -7.623587131500244
    10. '          ' → logprob: -7.873587131500244

Token 326: ' #' (ID: 1069)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6343344449996948
    2. '           ' → logprob: -0.8843344449996948
    3. ' for' → logprob: -3.6343345642089844
    4. 'c' → logprob: -4.259334564208984
    5. ' ' → logprob: -5.509334564208984
    6. '   ' → logprob: -6.009334564208984
    7. 'for' → logprob: -6.384334564208984
    8. '            ' → logprob: -6.759334564208984
    9. '       ' → logprob: -6.884334564208984
    10. ' 
' → logprob: -7.259334564208984

Token 327: ' Let's' (ID: 41021)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3449571132659912
    2. ' c' → logprob: -2.094957113265991
    3. ' for' → logprob: -2.719957113265991
    4. 'for' → logprob: -2.719957113265991
    5. '           ' → logprob: -3.594957113265991
    6. ' continue' → logprob: -5.84495735168457
    7. 'continue' → logprob: -5.96995735168457
    8. '   ' → logprob: -6.96995735168457
    9. '#' → logprob: -7.21995735168457
    10. 'For' → logprob: -7.34495735168457

Token 328: ' check' (ID: 2371)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' try' → logprob: -1.0655657052993774
    2. ' compute' → logprob: -1.3155657052993774
    3. ' continue' → logprob: -1.5655657052993774
    4. 'continue' → logprob: -3.315565586090088
    5. 'compute' → logprob: -3.815565586090088
    6. 'try' → logprob: -4.065565586090088
    7. ' test' → logprob: -4.065565586090088
    8. ' choose' → logprob: -4.190565586090088
    9. '           ' → logprob: -4.190565586090088
    10. 'choose' → logprob: -4.565565586090088

Token 329: ' two' (ID: 1920)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6566855311393738
    2. ' c' → logprob: -1.4066855907440186
    3. ' if' → logprob: -2.2816855907440186
    4. ' all' → logprob: -2.5316855907440186
    5. ' continue' → logprob: -3.9066855907440186
    6. ' possible' → logprob: -4.5316853523254395
    7. 'for' → logprob: -5.5316853523254395
    8. ' a' → logprob: -5.7816853523254395
    9. 'c' → logprob: -6.0316853523254395
    10. ' ' → logprob: -6.1566853523254395

Token 330: ' possible' (ID: 4149)
  Prédit: ' options'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' options' → logprob: -0.4750133156776428
    2. ' possible' → logprob: -1.975013256072998
    3. ' lines' → logprob: -2.600013256072998
    4. ' offsets' → logprob: -3.350013256072998
    5. ' possibilities' → logprob: -3.475013256072998
    6. 'c' → logprob: -3.975013256072998
    7. ' c' → logprob: -4.225013256072998
    8. 'offset' → logprob: -4.475013256072998
    9. 'possible' → logprob: -4.475013256072998
    10. ' choices' → logprob: -4.725013256072998

Token 331: ' lines' (ID: 8698)
  Prédit: ' offsets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' offsets' → logprob: -0.6252648234367371
    2. ' lines' → logprob: -1.6252648830413818
    3. ' c' → logprob: -2.750264883041382
    4. 'offset' → logprob: -3.250264883041382
    5. 'c' → logprob: -3.500264883041382
    6. ' options' → logprob: -4.000264644622803
    7. ' orientations' → logprob: -4.000264644622803
    8. ' positions' → logprob: -4.000264644622803
    9. ' offset' → logprob: -4.250264644622803
    10. ' shifts' → logprob: -4.375264644622803

Token 332: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8776537775993347
    2. ' c' → logprob: -1.6276538372039795
    3. ' for' → logprob: -2.0026538372039795
    4. 'c' → logprob: -2.8776538372039795
    5. '=' → logprob: -3.0026538372039795
    6. ' =' → logprob: -3.1276538372039795
    7. 'for' → logprob: -3.1276538372039795
    8. ':' → logprob: -4.0026535987854
    9. '
' → logprob: -4.3776535987854
    10. '            
' → logprob: -5.0026535987854

Token 333: ' slightly' (ID: 16132)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.062295589596033096
    2. 'c' → logprob: -2.93729567527771
    3. '           ' → logprob: -5.312295436859131
    4. '               ' → logprob: -7.812295436859131
    5. ' one' → logprob: -8.062295913696289
    6. '            ' → logprob: -8.312295913696289
    7. '#' → logprob: -8.687295913696289
    8. ' for' → logprob: -8.812295913696289
    9. ' (' → logprob: -8.812295913696289
    10. ' #' → logprob: -9.187295913696289

Token 334: ' shifting' (ID: 53586)
  Prédit: ' offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' offset' → logprob: -0.20586489140987396
    2. 'offset' → logprob: -2.205864906311035
    3. ' shifted' → logprob: -2.830864906311035
    4. ' above' → logprob: -4.705864906311035
    5. 'shift' → logprob: -5.705864906311035
    6. ' off' → logprob: -6.205864906311035
    7. 'above' → logprob: -6.830864906311035
    8. ' below' → logprob: -8.330864906311035
    9. ' on' → logprob: -8.455864906311035
    10. 'off' → logprob: -8.705864906311035

Token 335: ' by' (ID: 656)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5239360332489014
    2. 'c' → logprob: -1.7739360332489014
    3. ' the' → logprob: -2.0239360332489014
    4. ' along' → logprob: -3.0239360332489014
    5. ' lines' → logprob: -4.5239362716674805
    6. ' line' → logprob: -4.8989362716674805
    7. ' by' → logprob: -5.1489362716674805
    8. 'the' → logprob: -5.3989362716674805
    9. 'along' → logprob: -5.5239362716674805
    10. ' a' → logprob: -5.6489362716674805

Token 336: ' offset' (ID: 8985)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14622363448143005
    2. '+' → logprob: -2.396223545074463
    3. ' +' → logprob: -3.771223545074463
    4. ' ' → logprob: -4.271223545074463
    5. ' a' → logprob: -6.271223545074463
    6. 'epsilon' → logprob: -6.271223545074463
    7. ' epsilon' → logprob: -6.896223545074463
    8. '0' → logprob: -6.896223545074463
    9. 'a' → logprob: -7.021223545074463
    10. ' an' → logprob: -7.521223545074463

Token 337: ' (+' (ID: 36088)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3731577694416046
    2. '=' → logprob: -1.9981577396392822
    3. ' =' → logprob: -2.8731577396392822
    4. ' for' → logprob: -3.6231577396392822
    5. '           ' → logprob: -4.248157978057861
    6. ' +' → logprob: -4.498157978057861
    7. ':
' → logprob: -4.623157978057861
    8. '+' → logprob: -4.873157978057861
    9. 'offset' → logprob: -4.873157978057861
    10. ' :' → logprob: -5.373157978057861

Token 338: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1144132986664772
    2. ' ' → logprob: -2.364413261413574
    3. '0' → logprob: -4.739413261413574
    4. '=' → logprob: -6.364413261413574
    5. ',' → logprob: -6.489413261413574
    6. ')' → logprob: -6.614413261413574
    7. ' or' → logprob: -8.864413261413574
    8. 'a' → logprob: -8.864413261413574
    9. '-' → logprob: -9.614413261413574
    10. ' and' → logprob: -9.614413261413574

Token 339: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1626138985157013
    2. ',' → logprob: -2.662613868713379
    3. ' and' → logprob: -3.037613868713379
    4. ' )' → logprob: -4.287613868713379
    5. ' or' → logprob: -5.037613868713379
    6. ' ,' → logprob: -5.412613868713379
    7. '0' → logprob: -5.412613868713379
    8. '),' → logprob: -7.662613868713379
    9. ' if' → logprob: -7.662613868713379
    10. '           ' → logprob: -7.787613868713379

Token 340: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4757012724876404
    2. '-' → logprob: -0.9757012724876404
    3. ' ' → logprob: -7.350701332092285
    4. '0' → logprob: -7.725701332092285
    5. '1' → logprob: -8.225701332092285
    6. ')' → logprob: -8.975701332092285
    7. ' and' → logprob: -9.350701332092285
    8. ' )' → logprob: -11.475701332092285
    9. 'and' → logprob: -11.600701332092285
    10. ',' → logprob: -11.725701332092285

Token 341: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014739240519702435
    2. ' ' → logprob: -4.264739036560059
    3. '0' → logprob: -7.639739036560059
    4. ')' → logprob: -9.389739036560059
    5. ' )' → logprob: -12.889739036560059
    6. '  ' → logprob: -13.889739036560059
    7. '100' → logprob: -14.014739036560059
    8. '=' → logprob: -14.389739036560059
    9. ',' → logprob: -14.389739036560059
    10. '<|end|>' → logprob: -14.452239036560059

Token 342: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4547230303287506
    2. '):' → logprob: -1.4547230005264282
    3. '):
' → logprob: -2.3297231197357178
    4. '):

' → logprob: -4.704722881317139
    5. ' )' → logprob: -4.954722881317139
    6. '           ' → logprob: -4.954722881317139
    7. ')
' → logprob: -5.204722881317139
    8. ' ):
' → logprob: -6.829722881317139
    9. ' ):' → logprob: -7.204722881317139
    10. 'offset' → logprob: -7.454722881317139

Token 343: ' but' (ID: 889)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.854881227016449
    2. '           ' → logprob: -1.3548812866210938
    3. ' c' → logprob: -1.9798812866210938
    4. ' and' → logprob: -3.1048812866210938
    5. 'for' → logprob: -3.4798812866210938
    6. ' continue' → logprob: -3.9798812866210938
    7. ' or' → logprob: -4.229881286621094
    8. 'c' → logprob: -4.479881286621094
    9. ' ' → logprob: -4.604881286621094
    10. ' but' → logprob: -5.479881286621094

Token 344: ' here' (ID: 2105)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5130023956298828
    2. ' for' → logprob: -1.7630023956298828
    3. 'continue' → logprob: -2.763002395629883
    4. ' not' → logprob: -3.388002395629883
    5. ' c' → logprob: -3.888002395629883
    6. 'for' → logprob: -4.013002395629883
    7. ' the' → logprob: -4.388002395629883
    8. ' continuing' → logprob: -4.513002395629883
    9. ' since' → logprob: -5.013002395629883
    10. ' ' → logprob: -5.138002395629883

Token 345: ',' (ID: 11)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.1419568508863449
    2. ':' → logprob: -3.2669568061828613
    3. 'continue' → logprob: -3.5169568061828613
    4. ' we' → logprob: -3.8919568061828613
    5. ' c' → logprob: -4.141956806182861
    6. '           ' → logprob: -4.516956806182861
    7. ' continues' → logprob: -5.266956806182861
    8. ' the' → logprob: -5.891956806182861
    9. ',' → logprob: -6.141956806182861
    10. ' for' → logprob: -6.766956806182861

Token 346: ' we' (ID: 581)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7256624102592468
    2. 'continue' → logprob: -1.6006624698638916
    3. ' for' → logprob: -2.3506624698638916
    4. 'c' → logprob: -2.4756624698638916
    5. 'for' → logprob: -2.8506624698638916
    6. ' c' → logprob: -3.3506624698638916
    7. '#' → logprob: -3.6006624698638916
    8. ' #' → logprob: -5.4756622314453125
    9. ' pass' → logprob: -5.7256622314453125
    10. 'pass' → logprob: -6.2256622314453125

Token 347: ' actually' (ID: 4771)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8080968260765076
    2. ' can' → logprob: -0.9330968260765076
    3. 'continue' → logprob: -2.3080968856811523
    4. 'can' → logprob: -3.8080968856811523
    5. ' try' → logprob: -3.8080968856811523
    6. 'try' → logprob: -5.808096885681152
    7. ''ll' → logprob: -6.308096885681152
    8. ' skip' → logprob: -6.308096885681152
    9. ' will' → logprob: -6.558096885681152
    10. 'skip' → logprob: -6.683096885681152

Token 348: '
' (ID: 198)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.29019302129745483
    2. 'continue' → logprob: -1.9151930809020996
    3. ' can' → logprob: -3.4151930809020996
    4. ' check' → logprob: -4.0401930809021
    5. ':' → logprob: -4.0401930809021
    6. 'can' → logprob: -4.7901930809021
    7. ' try' → logprob: -5.1651930809021
    8. 'check' → logprob: -5.2901930809021
    9. ' just' → logprob: -6.2901930809021
    10. ' use' → logprob: -6.2901930809021

Token 349: '           ' (ID: 352)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.09082585573196411
    2. ' can' → logprob: -3.0908257961273193
    3. ':' → logprob: -3.9658257961273193
    4. 'continue' → logprob: -4.715826034545898
    5. ' have' → logprob: -5.840826034545898
    6. ' only' → logprob: -6.465826034545898
    7. ' return' → logprob: -6.840826034545898
    8. ' just' → logprob: -6.840826034545898
    9. '   ' → logprob: -6.965826034545898
    10. ' check' → logprob: -7.090826034545898

Token 350: ' #' (ID: 1069)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.7119993567466736
    2. ' continue' → logprob: -1.0869994163513184
    3. 'continue' → logprob: -2.4619994163513184
    4. 'can' → logprob: -2.5869994163513184
    5. ':' → logprob: -6.461999416351318
    6. 'pass' → logprob: -6.836999416351318
    7. 'for' → logprob: -6.836999416351318
    8. ' for' → logprob: -7.086999416351318
    9. ' try' → logprob: -7.336999416351318
    10. ' pass' → logprob: -7.336999416351318

Token 351: ' want' (ID: 1682)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.9133182764053345
    2. ' can' → logprob: -1.1633182764053345
    3. 'continue' → logprob: -2.038318157196045
    4. 'check' → logprob: -3.163318157196045
    5. ' continue' → logprob: -3.913318157196045
    6. 'try' → logprob: -4.288318157196045
    7. ' check' → logprob: -4.413318157196045
    8. 'skip' → logprob: -4.663318157196045
    9. 'need' → logprob: -5.163318157196045
    10. 'for' → logprob: -5.163318157196045

Token 352: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.1027822345495224
    2. 'to' → logprob: -2.3527822494506836
    3. ':' → logprob: -6.852782249450684
    4. ' a' → logprob: -7.477782249450684
    5. 'a' → logprob: -7.852782249450684
    6. '   ' → logprob: -8.477782249450684
    7. ' ' → logprob: -9.352782249450684
    8. '    ' → logprob: -9.352782249450684
    9. '  ' → logprob: -10.352782249450684
    10. '=' → logprob: -10.352782249450684

Token 353: ' check' (ID: 2371)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.0389775037765503
    2. 'check' → logprob: -1.4139775037765503
    3. 'try' → logprob: -1.6639775037765503
    4. ' check' → logprob: -2.16397762298584
    5. ' continue' → logprob: -3.16397762298584
    6. ' try' → logprob: -4.03897762298584
    7. 'for' → logprob: -4.41397762298584
    8. 'skip' → logprob: -5.28897762298584
    9. 'pass' → logprob: -5.41397762298584
    10. 'enumer' → logprob: -5.91397762298584

Token 354: ' separation' (ID: 39612)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.957529604434967
    2. ' two' → logprob: -1.7075295448303223
    3. ' c' → logprob: -2.2075295448303223
    4. ' for' → logprob: -2.8325295448303223
    5. ' both' → logprob: -2.8325295448303223
    6. ' the' → logprob: -2.9575295448303223
    7. ' a' → logprob: -3.4575295448303223
    8. ' all' → logprob: -3.4575295448303223
    9. 'offset' → logprob: -4.207529544830322
    10. ' offset' → logprob: -4.457529544830322

Token 355: ' line' (ID: 2543)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3046412765979767
    2. '
' → logprob: -2.8046412467956543
    3. ' for' → logprob: -2.8046412467956543
    4. ':' → logprob: -2.9296412467956543
    5. '            
' → logprob: -3.6796412467956543
    6. '<|end|>' → logprob: -4.929641246795654
    7. '   ' → logprob: -5.054641246795654
    8. '<|end|>' → logprob: -5.054641246795654
    9. '       ' → logprob: -5.304641246795654
    10. ' ' → logprob: -5.429641246795654

Token 356: ' that' (ID: 484)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9506344199180603
    2. ' for' → logprob: -1.075634479522705
    3. ' c' → logprob: -2.825634479522705
    4. '<|end|>' → logprob: -3.325634479522705
    5. '<|end|>' → logprob: -3.575634479522705
    6. '            
' → logprob: -3.825634479522705
    7. ':' → logprob: -3.825634479522705
    8. '
' → logprob: -3.950634479522705
    9. ' ' → logprob: -4.325634479522705
    10. 'for' → logprob: -4.325634479522705

Token 357: ' doesn't' (ID: 8740)
  Prédit: ' passes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' passes' → logprob: -0.08645686507225037
    2. ' exactly' → logprob: -3.211456775665283
    3. 'passes' → logprob: -3.586456775665283
    4. ' can' → logprob: -5.461456775665283
    5. ' pass' → logprob: -5.586456775665283
    6. ' goes' → logprob: -6.086456775665283
    7. 'pass' → logprob: -6.711456775665283
    8. 's' → logprob: -6.836456775665283
    9. 'exact' → logprob: -7.836456775665283
    10. ' is' → logprob: -8.211457252502441

Token 358: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.4785894751548767
    2. 'pass' → logprob: -0.9785894751548767
    3. 'go' → logprob: -6.2285895347595215
    4. ' go' → logprob: -7.2285895347595215
    5. ' passes' → logprob: -7.6035895347595215
    6. 'cross' → logprob: -7.6035895347595215
    7. 'exact' → logprob: -8.228589057922363
    8. 'passes' → logprob: -8.228589057922363
    9. ' cross' → logprob: -9.103589057922363
    10. ' exactly' → logprob: -9.853589057922363

Token 359: ' through' (ID: 1819)
  Prédit: ' through'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' through' → logprob: -0.09120059758424759
    2. 'through' → logprob: -2.466200590133667
    3. ' ' → logprob: -6.841200828552246
    4. ' a' → logprob: -7.341200828552246
    5. 'a' → logprob: -9.216200828552246
    6. '=' → logprob: -9.716200828552246
    7. '#' → logprob: -9.716200828552246
    8. ' for' → logprob: -10.091200828552246
    9. ')' → logprob: -10.091200828552246
    10. '<|end|>' → logprob: -10.216200828552246

Token 360: ' any' (ID: 1062)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.23614400625228882
    2. 'points' → logprob: -2.1111440658569336
    3. ' any' → logprob: -3.2361440658569336
    4. ' the' → logprob: -3.6111440658569336
    5. ' either' → logprob: -4.361144065856934
    6. 'the' → logprob: -5.236144065856934
    7. 'any' → logprob: -5.986144065856934
    8. 'either' → logprob: -7.361144065856934
    9. 'i' → logprob: -7.486144065856934
    10. ' i' → logprob: -7.611144065856934

Token 361: ' point' (ID: 2438)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.6270321011543274
    2. ' point' → logprob: -1.1270320415496826
    3. 'points' → logprob: -2.5020320415496826
    4. ' of' → logprob: -3.3770320415496826
    5. 'point' → logprob: -3.7520320415496826
    6. ' token' → logprob: -7.627032279968262
    7. 'token' → logprob: -8.002032279968262
    8. 'of' → logprob: -8.877032279968262
    9. '_points' → logprob: -9.002032279968262
    10. ' tokens' → logprob: -9.252032279968262

Token 362: '.

' (ID: 364)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31774839758872986
    2. '
' → logprob: -1.6927484273910522
    3. '            
' → logprob: -3.3177483081817627
    4. ' 
' → logprob: -4.067748546600342
    5. '<|end|>' → logprob: -4.942748546600342
    6. '  
' → logprob: -5.317748546600342
    7. ' for' → logprob: -5.692748546600342
    8. '       ' → logprob: -5.817748546600342
    9. ' ' → logprob: -6.067748546600342
    10. '<|end|>' → logprob: -6.067748546600342

Token 363: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13571564853191376
    2. ' for' → logprob: -2.8857157230377197
    3. ' c' → logprob: -3.8857157230377197
    4. '       ' → logprob: -4.760715484619141
    5. '
' → logprob: -5.010715484619141
    6. ' 
' → logprob: -5.135715484619141
    7. '   ' → logprob: -5.135715484619141
    8. ' ' → logprob: -5.135715484619141
    9. '            
' → logprob: -5.135715484619141
    10. 'for' → logprob: -5.510715484619141

Token 364: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.037035584449768
    2. ' for' → logprob: -1.162035584449768
    3. ' ' → logprob: -2.1620354652404785
    4. ' c' → logprob: -2.6620354652404785
    5. 'for' → logprob: -3.1620354652404785
    6. '
' → logprob: -3.4120354652404785
    7. ' 
' → logprob: -3.5370354652404785
    8. '   ' → logprob: -4.7870354652404785
    9. '  
' → logprob: -4.9120354652404785
    10. '            
' → logprob: -5.2870354652404785

Token 365: ' Instead' (ID: 21050)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1985352337360382
    2. 'for' → logprob: -2.073535203933716
    3. 'c' → logprob: -3.823535203933716
    4. ' c' → logprob: -4.198535442352295
    5. 'offset' → logprob: -5.198535442352295
    6. ' offset' → logprob: -5.948535442352295
    7. '           ' → logprob: -6.323535442352295
    8. ' possible' → logprob: -6.573535442352295
    9. ' offsets' → logprob: -6.573535442352295
    10. '#' → logprob: -7.198535442352295

Token 366: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24320915341377258
    2. '=' → logprob: -1.7432091236114502
    3. ' of' → logprob: -4.243209362030029
    4. ' =' → logprob: -5.243209362030029
    5. '<|end|>' → logprob: -5.493209362030029
    6. '            ' → logprob: -6.118209362030029
    7. '            
' → logprob: -6.118209362030029
    8. '            
            
' → logprob: -6.118209362030029
    9. '       ' → logprob: -6.243209362030029
    10. '   ' → logprob: -6.368209362030029

Token 367: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.152634620666504
    2. '#' → logprob: -1.777634620666504
    3. ' for' → logprob: -2.027634620666504
    4. 'c' → logprob: -2.152634620666504
    5. 'continue' → logprob: -2.402634620666504
    6. ' continue' → logprob: -3.527634620666504
    7. ' c' → logprob: -3.652634620666504
    8. ' #' → logprob: -4.152634620666504
    9. 'vals' → logprob: -4.152634620666504
    10. 'values' → logprob: -4.402634620666504

Token 368: ' just' (ID: 1327)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.245480015873909
    2. ':' → logprob: -2.3704800605773926
    3. 'continue' → logprob: -2.9954800605773926
    4. '           ' → logprob: -3.4954800605773926
    5. ' try' → logprob: -4.745480060577393
    6. ' can' → logprob: -5.120480060577393
    7. ' for' → logprob: -5.245480060577393
    8. ''ll' → logprob: -5.245480060577393
    9. 'for' → logprob: -5.620480060577393
    10. ' want' → logprob: -5.870480060577393

Token 369: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.5629285573959351
    2. 'check' → logprob: -1.687928557395935
    3. ' continue' → logprob: -2.3129286766052246
    4. 'continue' → logprob: -2.8129286766052246
    5. ' try' → logprob: -3.4379286766052246
    6. ' compute' → logprob: -4.187928676605225
    7. 'calculate' → logprob: -4.687928676605225
    8. ' for' → logprob: -4.812928676605225
    9. 'try' → logprob: -5.312928676605225
    10. ' test' → logprob: -5.437928676605225

Token 370: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.46204838156700134
    2. 'all' → logprob: -1.4620484113693237
    3. ' all' → logprob: -2.587048292160034
    4. 'def' → logprob: -3.962048292160034
    5. 'se' → logprob: -4.712048530578613
    6. 'for' → logprob: -5.087048530578613
    7. 'side' → logprob: -5.337048530578613
    8. 'if' → logprob: -5.462048530578613
    9. ' for' → logprob: -5.837048530578613
    10. ' if' → logprob: -5.962048530578613

Token 371: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21158140897750854
    2. '<|end|>' → logprob: -2.9615814685821533
    3. ' =' → logprob: -3.3365814685821533
    4. '<|end|>' → logprob: -3.9615814685821533
    5. ' for' → logprob: -4.336581230163574
    6. ' of' → logprob: -4.336581230163574
    7. ' s' → logprob: -4.586581230163574
    8. '=' → logprob: -4.586581230163574
    9. '   ' → logprob: -4.836581230163574
    10. ' ' → logprob: -4.961581230163574

Token 372: ' each' (ID: 2454)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.048940692096948624
    2. ' a' → logprob: -3.298940658569336
    3. ' all' → logprob: -5.423940658569336
    4. 'all' → logprob: -6.298940658569336
    5. ' the' → logprob: -6.548940658569336
    6. 's' → logprob: -7.298940658569336
    7. '(a' → logprob: -7.423940658569336
    8. 'the' → logprob: -7.923940658569336
    9. ' each' → logprob: -8.298940658569336
    10. 'each' → logprob: -8.298940658569336

Token 373: ' point' (ID: 2438)
  Prédit: ' point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.1033502146601677
    2. 'point' → logprob: -2.3533501625061035
    3. ' points' → logprob: -7.6033501625061035
    4. 'points' → logprob: -7.6033501625061035
    5. '_point' → logprob: -7.7283501625061035
    6. ' for' → logprob: -7.8533501625061035
    7. '(point' → logprob: -8.603350639343262
    8. 'p' → logprob: -8.978350639343262
    9. 'for' → logprob: -8.978350639343262
    10. ' (' → logprob: -8.978350639343262

Token 374: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019050590693950653
    2. ' for' → logprob: -4.769050598144531
    3. '<|end|>' → logprob: -5.769050598144531
    4. ':' → logprob: -6.394050598144531
    5. '<|end|>' → logprob: -6.394050598144531
    6. '
' → logprob: -7.269050598144531
    7. '       ' → logprob: -7.519050598144531
    8. '            
' → logprob: -7.519050598144531
    9. ',' → logprob: -8.019050598144531
    10. '   ' → logprob: -8.269050598144531

Token 375: ' line' (ID: 2543)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6768568754196167
    2. 'a' → logprob: -1.8018568754196167
    3. ' all' → logprob: -2.0518569946289062
    4. ' the' → logprob: -2.8018569946289062
    5. ' (' → logprob: -3.1768569946289062
    6. ' both' → logprob: -3.5518569946289062
    7. ' point' → logprob: -3.8018569946289062
    8. ' side' → logprob: -4.801856994628906
    9. ' separation' → logprob: -5.801856994628906
    10. ' line' → logprob: -5.801856994628906

Token 376: ' through' (ID: 1819)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34714874625205994
    2. 's' → logprob: -2.8471486568450928
    3. '=' → logprob: -2.9721486568450928
    4. ':' → logprob: -3.3471486568450928
    5. ' ' → logprob: -3.8471486568450928
    6. 'a' → logprob: -3.9721486568450928
    7. '
' → logprob: -4.097148895263672
    8. ')' → logprob: -4.347148895263672
    9. '            
' → logprob: -4.347148895263672
    10. '<|end|>' → logprob: -4.472148895263672

Token 377: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -1.1723723411560059
    2. 'points' → logprob: -1.5473723411560059
    3. 'x' → logprob: -1.6723723411560059
    4. ' (' → logprob: -2.422372341156006
    5. ' x' → logprob: -2.672372341156006
    6. '(x' → logprob: -3.172372341156006
    7. 'i' → logprob: -3.547372341156006
    8. '(' → logprob: -4.172372341156006
    9. ' point' → logprob: -4.297372341156006
    10. ' i' → logprob: -4.547372341156006

Token 378: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.35113370418548584
    2. ' i' → logprob: -1.8511337041854858
    3. '<|end|>' → logprob: -2.3511338233947754
    4. '1' → logprob: -4.351133823394775
    5. '[i' → logprob: -4.851133823394775
    6. 's' → logprob: -4.851133823394775
    7. '_i' → logprob: -5.601133823394775
    8. ')' → logprob: -5.976133823394775
    9. '[' → logprob: -6.351133823394775
    10. '<|end|>' → logprob: -6.976133823394775

Token 379: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.710107147693634
    2. ' and' → logprob: -0.710107147693634
    3. 'and' → logprob: -5.460107326507568
    4. ',j' → logprob: -5.710107326507568
    5. ' ,' → logprob: -5.710107326507568
    6. '1' → logprob: -6.085107326507568
    7. ' or' → logprob: -6.835107326507568
    8. '+' → logprob: -7.335107326507568
    9. ')' → logprob: -7.585107326507568
    10. '[' → logprob: -8.58510684967041

Token 380: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.023270756006240845
    2. ' j' → logprob: -3.773270845413208
    3. ' ' → logprob: -11.898270606994629
    4. '	j' → logprob: -12.398270606994629
    5. 'i' → logprob: -12.898270606994629
    6. 'y' → logprob: -13.023270606994629
    7. '
' → logprob: -13.273270606994629
    8. '   ' → logprob: -13.773270606994629
    9. '```' → logprob: -14.085770606994629
    10. '_j' → logprob: -14.398270606994629

Token 381: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2166234701871872
    2. '<|end|>' → logprob: -1.9666234254837036
    3. '<|end|>' → logprob: -3.466623544692993
    4. '
' → logprob: -4.466623306274414
    5. '            
' → logprob: -5.716623306274414
    6. ':' → logprob: -6.841623306274414
    7. ',' → logprob: -6.841623306274414
    8. '  
' → logprob: -7.091623306274414
    9. '.' → logprob: -7.091623306274414
    10. ' ' → logprob: -7.216623306274414

Token 382: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013426439836621284
    2. '<|end|>' → logprob: -4.638426303863525
    3. ' ' → logprob: -7.013426303863525
    4. '            
' → logprob: -7.388426303863525
    5. '<|end|>' → logprob: -7.513426303863525
    6. ',' → logprob: -8.638426780700684
    7. '   ' → logprob: -8.763426780700684
    8. '               ' → logprob: -9.138426780700684
    9. '
' → logprob: -9.263426780700684
    10. ' continue' → logprob: -9.263426780700684

Token 383: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017625942826271057
    2. '<|end|>' → logprob: -5.51762580871582
    3. '            
' → logprob: -5.89262580871582
    4. '
' → logprob: -6.14262580871582
    5. ' ' → logprob: -6.26762580871582
    6. '  
' → logprob: -6.51762580871582
    7. ':' → logprob: -7.39262580871582
    8. ' 
' → logprob: -7.51762580871582
    9. '<|end|>' → logprob: -7.76762580871582
    10. ' for' → logprob: -7.89262580871582

Token 384: ' But' (ID: 3072)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5019931793212891
    2. ' c' → logprob: -1.501993179321289
    3. 'c' → logprob: -2.876993179321289
    4. ' for' → logprob: -3.126993179321289
    5. ' continue' → logprob: -3.626993179321289
    6. 'for' → logprob: -4.751993179321289
    7. '   ' → logprob: -4.876993179321289
    8. 'continue' → logprob: -5.001993179321289
    9. ' if' → logprob: -5.251993179321289
    10. ' ' → logprob: -5.501993179321289

Token 385: ' line' (ID: 2543)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.56515371799469
    2. 'since' → logprob: -1.81515371799469
    3. '           ' → logprob: -1.94015371799469
    4. ' continue' → logprob: -2.3151535987854004
    5. ' since' → logprob: -2.4401535987854004
    6. 'we' → logprob: -3.3151535987854004
    7. ' for' → logprob: -3.3151535987854004
    8. ' we' → logprob: -3.3151535987854004
    9. 'for' → logprob: -3.5651535987854004
    10. ' the' → logprob: -3.5651535987854004

Token 386: ' through' (ID: 1819)
  Prédit: ' passes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passes' → logprob: -1.467131495475769
    2. ' through' → logprob: -1.842131495475769
    3. '_th' → logprob: -1.967131495475769
    4. '=' → logprob: -2.7171316146850586
    5. 'passes' → logprob: -2.7171316146850586
    6. ' =' → logprob: -3.0921316146850586
    7. '_pass' → logprob: -3.2171316146850586
    8. 'through' → logprob: -3.3421316146850586
    9. '_value' → logprob: -3.5921316146850586
    10. '_vec' → logprob: -3.7171316146850586

Token 387: ' i' (ID: 575)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.6606396436691284
    2. 'points' → logprob: -0.9106396436691284
    3. 'i' → logprob: -3.160639762878418
    4. ' i' → logprob: -4.785639762878418
    5. ' (' → logprob: -4.910639762878418
    6. 'x' → logprob: -5.285639762878418
    7. '(x' → logprob: -5.785639762878418
    8. ' the' → logprob: -6.035639762878418
    9. 'the' → logprob: -6.035639762878418
    10. '<|end|>' → logprob: -6.035639762878418

Token 388: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08257929980754852
    2. 'and' → logprob: -2.8325793743133545
    3. ',' → logprob: -3.9575793743133545
    4. ' or' → logprob: -7.957579135894775
    5. ' ,' → logprob: -8.707579612731934
    6. ',j' → logprob: -8.707579612731934
    7. '<|end|>' → logprob: -8.957579612731934
    8. '1' → logprob: -8.957579612731934
    9. ' ' → logprob: -9.332579612731934
    10. ' is' → logprob: -9.707579612731934

Token 389: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0022437504958361387
    2. ' j' → logprob: -6.127243518829346
    3. '   ' → logprob: -11.252243995666504
    4. 'points' → logprob: -11.627243995666504
    5. 'point' → logprob: -12.002243995666504
    6. 'k' → logprob: -12.627243995666504
    7. 'x' → logprob: -12.752243995666504
    8. '
' → logprob: -12.752243995666504
    9. '```' → logprob: -12.752243995666504
    10. ' points' → logprob: -12.877243995666504

Token 390: ' passes' (ID: 29169)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1316213607788086
    2. '<|end|>' → logprob: -3.3816213607788086
    3. ' passes' → logprob: -4.006621360778809
    4. '.' → logprob: -4.256621360778809
    5. ',' → logprob: -4.381621360778809
    6. ' will' → logprob: -4.756621360778809
    7. ' is' → logprob: -5.006621360778809
    8. ' may' → logprob: -5.631621360778809
    9. ' continues' → logprob: -5.631621360778809
    10. ' can' → logprob: -5.756621360778809

Token 391: ' through' (ID: 1819)
  Prédit: ' through'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' through' → logprob: -0.6342337727546692
    2. 'through' → logprob: -0.7592337727546692
    3. '<|end|>' → logprob: -6.6342339515686035
    4. 'Through' → logprob: -9.634233474731445
    5. 'points' → logprob: -9.884233474731445
    6. ' ' → logprob: -10.009233474731445
    7. 'tokens' → logprob: -10.509233474731445
    8. 'exact' → logprob: -10.759233474731445
    9. '.' → logprob: -11.634233474731445
    10. '<|end|>' → logprob: -11.634233474731445

Token 392: ' those' (ID: 2617)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' points' → logprob: -1.0630788803100586
    2. 'points' → logprob: -1.3130788803100586
    3. ' both' → logprob: -1.6880788803100586
    4. 'both' → logprob: -2.0630788803100586
    5. 'i' → logprob: -3.9380788803100586
    6. ' the' → logprob: -4.313078880310059
    7. 'the' → logprob: -4.688078880310059
    8. ' i' → logprob: -4.688078880310059
    9. 'x' → logprob: -4.813078880310059
    10. ' (' → logprob: -6.438078880310059

Token 393: ' points' (ID: 5571)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 394: ' ->' (ID: 2747)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1274747997522354
    2. '            
' → logprob: -3.502474784851074
    3. ' ' → logprob: -3.627474784851074
    4. ' 
' → logprob: -4.252474784851074
    5. '
' → logprob: -4.502474784851074
    6. '<|end|>' → logprob: -4.627474784851074
    7. ' continue' → logprob: -5.627474784851074
    8. '  
' → logprob: -6.002474784851074
    9. '.' → logprob: -6.002474784851074
    10. ':' → logprob: -6.377474784851074

Token 395: ' line' (ID: 2543)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.008997661992907524
    2. 'continue' → logprob: -5.008997440338135
    3. '           ' → logprob: -6.508997440338135
    4. ' ' → logprob: -8.383997917175293
    5. '\n' → logprob: -9.758997917175293
    6. '            
' → logprob: -10.008997917175293
    7. ' 
' → logprob: -10.008997917175293
    8. ' return' → logprob: -10.133997917175293
    9. '            ' → logprob: -10.258997917175293
    10. ' continues' → logprob: -10.258997917175293

Token 396: ' crossing' (ID: 50946)
  Prédit: ' passes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' passes' → logprob: -1.32965886592865
    2. '=' → logprob: -1.82965886592865
    3. '_pass' → logprob: -1.82965886592865
    4. ' =' → logprob: -2.2046589851379395
    5. '_sign' → logprob: -2.3296589851379395
    6. 'passes' → logprob: -2.5796589851379395
    7. '_points' → logprob: -2.7046589851379395
    8. 'pass' → logprob: -5.0796589851379395
    9. '_th' → logprob: -5.3296589851379395
    10. 's' → logprob: -5.3296589851379395

Token 397: ' points' (ID: 5571)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2270724773406982
    2. '<|end|>' → logprob: -1.4770724773406982
    3. ':' → logprob: -1.8520724773406982
    4. '\n' → logprob: -2.4770724773406982
    5. ' ' → logprob: -2.6020724773406982
    6. '<|end|>' → logprob: -3.2270724773406982
    7. ' 
' → logprob: -3.8520724773406982
    8. '           ' → logprob: -3.9770724773406982
    9. '  
' → logprob: -4.352072715759277
    10. ':
' → logprob: -4.352072715759277

Token 398: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9787538647651672
    2. '<|end|>' → logprob: -1.2287538051605225
    3. '
' → logprob: -2.2287538051605225
    4. '<|end|>' → logprob: -2.7287538051605225
    5. '\n' → logprob: -2.9787538051605225
    6. ' ' → logprob: -3.2287538051605225
    7. '            
' → logprob: -3.8537538051605225
    8. ' 
' → logprob: -4.353754043579102
    9. '  
' → logprob: -4.603754043579102
    10. '    
' → logprob: -6.228754043579102

Token 399: 'for' (ID: 1938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023251304402947426
    2. 'i' → logprob: -4.898251533508301
    3. ' )' → logprob: -5.148251533508301
    4. 's' → logprob: -6.273251533508301
    5. ').' → logprob: -6.523251533508301
    6. ',' → logprob: -6.523251533508301
    7. '.' → logprob: -6.773251533508301
    8. ' i' → logprob: -7.398251533508301
    9. '),' → logprob: -7.898251533508301
    10. ')i' → logprob: -8.0232515335083

Token 400: 'bidden' (ID: 41148)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9997206330299377
    2. ' k' → logprob: -1.749720573425293
    3. ' separation' → logprob: -1.874720573425293
    4. ' now' → logprob: -2.749720573425293
    5. ' line' → logprob: -3.874720573425293
    6. 'classification' → logprob: -3.999720573425293
    7. ' classification' → logprob: -4.124720573425293
    8. 'se' → logprob: -4.249720573425293
    9. ' point' → logprob: -4.249720573425293
    10. 'point' → logprob: -4.499720573425293

Token 401: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005763472989201546
    2. ')
' → logprob: -5.630763530731201
    3. '           ' → logprob: -6.380763530731201
    4. ').' → logprob: -9.005763053894043
    5. ' )' → logprob: -9.380763053894043
    6. ',' → logprob: -9.755763053894043
    7. '),' → logprob: -10.505763053894043
    8. '#' → logprob: -10.755763053894043
    9. '):
' → logprob: -10.755763053894043
    10. ')

' → logprob: -11.255763053894043

Token 402: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005644705146551132
    2. '            
' → logprob: -5.755644798278809
    3. '<|end|>' → logprob: -7.130644798278809
    4. '
' → logprob: -7.630644798278809
    5. '.' → logprob: -8.130644798278809
    6. '<|end|>' → logprob: -8.880644798278809
    7. '               ' → logprob: -9.130644798278809
    8. '  
' → logprob: -9.255644798278809
    9. '\n' → logprob: -9.630644798278809
    10. ' 
' → logprob: -9.880644798278809

Token 403: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022451069205999374
    2. '            
' → logprob: -4.772450923919678
    3. '
' → logprob: -5.147450923919678
    4. ' continue' → logprob: -6.272450923919678
    5. '\n' → logprob: -6.772450923919678
    6. '<|end|>' → logprob: -6.897450923919678
    7. 'continue' → logprob: -7.022450923919678
    8. ' 
' → logprob: -7.272450923919678
    9. ' ' → logprob: -7.897450923919678
    10. '  
' → logprob: -8.272451400756836

Token 404: ' So' (ID: 2632)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16755427420139313
    2. '\n' → logprob: -2.4175543785095215
    3. '
' → logprob: -3.6675543785095215
    4. '            
' → logprob: -4.0425543785095215
    5. ' continue' → logprob: -4.9175543785095215
    6. ' 
' → logprob: -5.0425543785095215
    7. 'continue' → logprob: -6.0425543785095215
    8. '               ' → logprob: -7.1675543785095215
    9. '       ' → logprob: -7.4175543785095215
    10. '  
' → logprob: -7.4175543785095215

Token 405: ' we' (ID: 581)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.10178464651107788
    2. 'continue' → logprob: -2.3517847061157227
    3. '               ' → logprob: -7.726784706115723
    4. '           ' → logprob: -7.851784706115723
    5. '
' → logprob: -8.351784706115723
    6. '#' → logprob: -9.101784706115723
    7. ' #' → logprob: -9.226784706115723
    8. '	continue' → logprob: -9.476784706115723
    9. ' for' → logprob: -9.726784706115723
    10. '   ' → logprob: -10.226784706115723

Token 406: ' need' (ID: 1309)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.318742573261261
    2. 'continue' → logprob: -1.3187425136566162
    3. ' can' → logprob: -6.318742752075195
    4. ' need' → logprob: -6.568742752075195
    5. ' skip' → logprob: -7.818742752075195
    6. '	continue' → logprob: -7.818742752075195
    7. '           ' → logprob: -7.943742752075195
    8. ' should' → logprob: -8.068742752075195
    9. '   ' → logprob: -8.568742752075195
    10. ''ll' → logprob: -9.068742752075195

Token 407: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.1023552343249321
    2. 'to' → logprob: -2.3523552417755127
    3. ' a' → logprob: -6.727355003356934
    4. 'a' → logprob: -7.727355003356934
    5. '   ' → logprob: -9.102355003356934
    6. ' another' → logprob: -9.102355003356934
    7. ' an' → logprob: -9.602355003356934
    8. 'another' → logprob: -9.852355003356934
    9. 'continue' → logprob: -10.602355003356934
    10. ' ' → logprob: -10.852355003356934

Token 408: ' consider' (ID: 3331)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.25609949231147766
    2. ' continue' → logprob: -1.6310994625091553
    3. ' check' → logprob: -3.7560994625091553
    4. 'check' → logprob: -5.256099700927734
    5. 'consider' → logprob: -7.631099700927734
    6. 'try' → logprob: -8.381099700927734
    7. ' consider' → logprob: -8.631099700927734
    8. ' try' → logprob: -8.631099700927734
    9. 'contin' → logprob: -9.006099700927734
    10. 'skip' → logprob: -9.381099700927734

Token 409: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.3759455680847168
    2. ' a' → logprob: -1.5009455680847168
    3. ' shifting' → logprob: -4.375945568084717
    4. ' two' → logprob: -4.500945568084717
    5. ' the' → logprob: -4.500945568084717
    6. 'offset' → logprob: -4.625945568084717
    7. ' offset' → logprob: -4.875945568084717
    8. ' an' → logprob: -5.000945568084717
    9. 'a' → logprob: -5.250945568084717
    10. 'lines' → logprob: -5.500945568084717

Token 410: ' parallel' (ID: 26697)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.24251598119735718
    2. ' offset' → logprob: -3.242516040802002
    3. ' perpendicular' → logprob: -3.242516040802002
    4. ' parallel' → logprob: -3.367516040802002
    5. ' passing' → logprob: -3.367516040802002
    6. '           ' → logprob: -4.367516040802002
    7. 'offset' → logprob: -4.617516040802002
    8. ' with' → logprob: -4.742516040802002
    9. ' through' → logprob: -5.492516040802002
    10. 'that' → logprob: -5.492516040802002

Token 411: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 412: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.4431428611278534
    2. ' the' → logprob: -1.4431428909301758
    3. 'a' → logprob: -2.693142890930176
    4. ' line' → logprob: -3.818142890930176
    5. 'line' → logprob: -4.193142890930176
    6. ' a' → logprob: -4.443142890930176
    7. ' (' → logprob: -6.318142890930176
    8. 'dx' → logprob: -7.318142890930176
    9. ' ' → logprob: -7.443142890930176
    10. '(-' → logprob: -7.693142890930176

Token 413: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.20055967569351196
    2. ' line' → logprob: -1.8255596160888672
    3. 'a' → logprob: -4.075559616088867
    4. 'direction' → logprob: -6.575559616088867
    5. 'original' → logprob: -7.200559616088867
    6. 'current' → logprob: -7.450559616088867
    7. ' a' → logprob: -8.075559616088867
    8. 'ab' → logprob: -9.450559616088867
    9. ' original' → logprob: -9.575559616088867
    10. ' current' → logprob: -9.700559616088867

Token 414: ' through' (ID: 1819)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3189629912376404
    2. '<|end|>' → logprob: -2.443963050842285
    3. ' ' → logprob: -3.693963050842285
    4. ',' → logprob: -3.693963050842285
    5. ' s' → logprob: -4.068963050842285
    6. ' for' → logprob: -4.318963050842285
    7. ' (' → logprob: -4.443963050842285
    8. '   ' → logprob: -4.818963050842285
    9. 's' → logprob: -4.818963050842285
    10. '<|end|>' → logprob: -4.943963050842285

Token 415: ' i' (ID: 575)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.1874496042728424
    2. 'points' → logprob: -2.0624496936798096
    3. ' i' → logprob: -4.1874494552612305
    4. ' (' → logprob: -4.6874494552612305
    5. ' dx' → logprob: -5.3124494552612305
    6. 'i' → logprob: -5.4374494552612305
    7. ' the' → logprob: -5.5624494552612305
    8. '(points' → logprob: -6.0624494552612305
    9. 'dx' → logprob: -6.8124494552612305
    10. ' ' → logprob: -7.0624494552612305

Token 416: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7658440470695496
    2. 'and' → logprob: -0.7658440470695496
    3. ',' → logprob: -3.0158441066741943
    4. ',j' → logprob: -5.140843868255615
    5. '1' → logprob: -5.515843868255615
    6. '+' → logprob: -5.640843868255615
    7. '           ' → logprob: -6.140843868255615
    8. ' ' → logprob: -7.015843868255615
    9. '-' → logprob: -7.015843868255615
    10. '   ' → logprob: -7.140843868255615

Token 417: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.029778728261590004
    2. ' j' → logprob: -3.5297787189483643
    3. ' ' → logprob: -11.404778480529785
    4. '	j' → logprob: -12.779778480529785
    5. '
' → logprob: -13.217278480529785
    6. ' points' → logprob: -13.217278480529785
    7. '```' → logprob: -13.217278480529785
    8. '   ' → logprob: -13.592278480529785
    9. ' ' → logprob: -13.654778480529785
    10. '_j' → logprob: -14.029778480529785

Token 418: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01286182552576065
    2. '
' → logprob: -5.637861728668213
    3. '<|end|>' → logprob: -5.762861728668213
    4. '            
' → logprob: -5.887861728668213
    5. '<|end|>' → logprob: -7.137861728668213
    6. ' for' → logprob: -7.262861728668213
    7. ' 
' → logprob: -7.887861728668213
    8. ',' → logprob: -8.262862205505371
    9. '.' → logprob: -8.887862205505371
    10. '  
' → logprob: -8.887862205505371

Token 419: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007162876892834902
    2. ' for' → logprob: -5.507163047790527
    3. '
' → logprob: -6.757163047790527
    4. '            
' → logprob: -7.007163047790527
    5. '<|end|>' → logprob: -8.007163047790527
    6. ' continue' → logprob: -9.257163047790527
    7. '       ' → logprob: -9.382163047790527
    8. ',' → logprob: -9.632163047790527
    9. 'for' → logprob: -9.632163047790527
    10. '<|end|>' → logprob: -9.757163047790527

Token 420: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11592552810907364
    2. '
' → logprob: -2.6159255504608154
    3. '            
' → logprob: -3.4909255504608154
    4. ' 
' → logprob: -6.240925312042236
    5. ' for' → logprob: -7.115925312042236
    6. '<|end|>' → logprob: -7.490925312042236
    7. '  
' → logprob: -7.740925312042236
    8. '           
' → logprob: -8.865925788879395
    9. '\' → logprob: -8.990925788879395
    10. '       ' → logprob: -8.990925788879395

Token 421: ' Try' (ID: 14720)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13007520139217377
    2. ' for' → logprob: -2.505075216293335
    3. '            
' → logprob: -4.380074977874756
    4. '
' → logprob: -4.755074977874756
    5. ' 
' → logprob: -4.880074977874756
    6. ' continue' → logprob: -5.880074977874756
    7. 'for' → logprob: -6.130074977874756
    8. '       ' → logprob: -6.630074977874756
    9. '   ' → logprob: -7.505074977874756
    10. ' (' → logprob: -8.005075454711914

Token 422: ' ' (ID: 220)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.13208222389221191
    2. ' offsets' → logprob: -2.507082223892212
    3. ' offset' → logprob: -3.882082223892212
    4. 'for' → logprob: -4.257081985473633
    5. ' for' → logprob: -5.382081985473633
    6. '   ' → logprob: -6.882081985473633
    7. ' shift' → logprob: -8.007081985473633
    8. 'shift' → logprob: -8.257081985473633
    9. '
' → logprob: -8.382081985473633
    10. ' shifts' → logprob: -9.007081985473633

Token 423: '2' (ID: 17)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.15757043659687042
    2. 'for' → logprob: -2.5325703620910645
    3. ' offsets' → logprob: -3.7825703620910645
    4. 'c' → logprob: -4.0325703620910645
    5. ' for' → logprob: -4.9075703620910645
    6. ' offset' → logprob: -5.0325703620910645
    7. '1' → logprob: -5.4075703620910645
    8. '-' → logprob: -5.7825703620910645
    9. ' c' → logprob: -6.2825703620910645
    10. '   ' → logprob: -7.5325703620910645

Token 424: ' possible' (ID: 4149)
  Prédit: ' offsets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' offsets' → logprob: -0.7193935513496399
    2. ' for' → logprob: -1.8443934917449951
    3. 'offset' → logprob: -2.344393491744995
    4. 'for' → logprob: -2.719393491744995
    5. ' offset' → logprob: -2.969393491744995
    6. ' c' → logprob: -2.969393491744995
    7. '   ' → logprob: -3.219393491744995
    8. ' shifts' → logprob: -4.219393730163574
    9. 'c' → logprob: -4.469393730163574
    10. ' ' → logprob: -5.094393730163574

Token 425: ' offsets' (ID: 78390)
  Prédit: ' offsets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' offsets' → logprob: -0.4753044843673706
    2. 'offset' → logprob: -1.8503044843673706
    3. ' c' → logprob: -2.10030460357666
    4. 'c' → logprob: -2.47530460357666
    5. ' offset' → logprob: -5.47530460357666
    6. ' shifts' → logprob: -5.72530460357666
    7. ' constants' → logprob: -6.47530460357666
    8. 'for' → logprob: -6.60030460357666
    9. ' lines' → logprob: -6.72530460357666
    10. ' for' → logprob: -7.47530460357666

Token 426: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2086910456418991
    2. ' for' → logprob: -1.7086910009384155
    3. 'for' → logprob: -5.083691120147705
    4. 'offset' → logprob: -8.833690643310547
    5. ',' → logprob: -9.208690643310547
    6. '   ' → logprob: -9.208690643310547
    7. ' offsets' → logprob: -9.333690643310547
    8. '       ' → logprob: -9.458690643310547
    9. '            
' → logprob: -9.708690643310547
    10. ':' → logprob: -9.958690643310547

Token 427: ' one' (ID: 1001)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.620807409286499
    2. 'for' → logprob: -1.620807409286499
    3. 'offset' → logprob: -2.495807409286499
    4. ' c' → logprob: -2.995807409286499
    5. ' offsets' → logprob: -3.245807409286499
    6. '1' → logprob: -3.495807409286499
    7. ' offset' → logprob: -3.870807409286499
    8. ' ' → logprob: -4.495807647705078
    9. 'c' → logprob: -4.745807647705078
    10. '0' → logprob: -5.370807647705078

Token 428: ' offset' (ID: 8985)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8778377771377563
    2. 'for' → logprob: -1.8778377771377563
    3. '=' → logprob: -2.252837657928467
    4. '   ' → logprob: -2.877837657928467
    5. 'offset' → logprob: -3.002837657928467
    6. ':' → logprob: -3.377837657928467
    7. '           ' → logprob: -3.502837657928467
    8. '+' → logprob: -4.377837657928467
    9. ' offset' → logprob: -4.502837657928467
    10. ' =' → logprob: -4.502837657928467

Token 429: ' just' (ID: 1327)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5811626315116882
    2. ' =' → logprob: -0.8311626315116882
    3. 's' → logprob: -5.831162452697754
    4. '1' → logprob: -6.581162452697754
    5. ' ' → logprob: -8.581162452697754
    6. '+' → logprob: -8.706162452697754
    7. ' +' → logprob: -8.706162452697754
    8. ' in' → logprob: -10.081162452697754
    9. '=-' → logprob: -10.081162452697754
    10. ' +=' → logprob: -10.331162452697754

Token 430: ' above' (ID: 5151)
  Prédit: 'above'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'above' → logprob: -0.38449057936668396
    2. '=' → logprob: -1.6344906091690063
    3. ' above' → logprob: -2.759490489959717
    4. '1' → logprob: -3.384490489959717
    5. 'below' → logprob: -4.634490489959717
    6. '+' → logprob: -4.634490489959717
    7. 'before' → logprob: -6.509490489959717
    8. ' ' → logprob: -6.634490489959717
    9. '+=' → logprob: -6.884490489959717
    10. ' below' → logprob: -7.259490489959717

Token 431: ' the' (ID: 290)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6221802830696106
    2. ' and' → logprob: -1.1221802234649658
    3. ' =' → logprob: -2.997180223464966
    4. '1' → logprob: -3.747180223464966
    5. 'and' → logprob: -4.247180461883545
    6. ' or' → logprob: -4.622180461883545
    7. ' +' → logprob: -4.872180461883545
    8. ' c' → logprob: -5.372180461883545
    9. '           ' → logprob: -5.497180461883545
    10. '+' → logprob: -5.497180461883545

Token 432: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.3223357200622559
    2. 'line' → logprob: -1.9473357200622559
    3. 'points' → logprob: -1.9473357200622559
    4. ' line' → logprob: -2.072335720062256
    5. ' points' → logprob: -2.447335720062256
    6. '0' → logprob: -2.447335720062256
    7. '1' → logprob: -3.072335720062256
    8. '+' → logprob: -3.447335720062256
    9. ' max' → logprob: -3.822335720062256
    10. 'y' → logprob: -4.947335720062256

Token 433: ' projection' (ID: 41244)
  Prédit: '_y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_y' → logprob: -1.4584283828735352
    2. '_offset' → logprob: -1.7084283828735352
    3. '_c' → logprob: -1.8334283828735352
    4. 'y' → logprob: -2.208428382873535
    5. 'c' → logprob: -2.833428382873535
    6. '_sign' → logprob: -2.958428382873535
    7. '_' → logprob: -3.083428382873535
    8. 'offset' → logprob: -3.458428382873535
    9. 'sign' → logprob: -3.958428382873535
    10. 's' → logprob: -4.083428382873535

Token 434: ' of' (ID: 328)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.41955041885375977
    2. '           ' → logprob: -1.5445504188537598
    3. ' +' → logprob: -3.0445504188537598
    4. ',' → logprob: -3.6695504188537598
    5. '<|end|>' → logprob: -4.54455041885376
    6. '+' → logprob: -4.79455041885376
    7. ' or' → logprob: -5.04455041885376
    8. 'and' → logprob: -5.16955041885376
    9. '<|end|>' → logprob: -5.66955041885376
    10. ' for' → logprob: -6.04455041885376

Token 435: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.29825910925865173
    2. 'points' → logprob: -1.4232591390609741
    3. ' the' → logprob: -5.298259258270264
    4. 'the' → logprob: -6.048259258270264
    5. ' all' → logprob: -6.298259258270264
    6. 'a' → logprob: -6.423259258270264
    7. ' dy' → logprob: -6.923259258270264
    8. 'dy' → logprob: -7.048259258270264
    9. 'all' → logprob: -7.423259258270264
    10. ' a' → logprob: -7.548259258270264

Token 436: ' i' (ID: 575)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5564579963684082
    2. '           ' → logprob: -1.8064579963684082
    3. ' +' → logprob: -2.056457996368408
    4. ',' → logprob: -2.931457996368408
    5. ' ' → logprob: -4.556457996368408
    6. '+' → logprob: -4.556457996368408
    7. ' =' → logprob: -4.681457996368408
    8. '=' → logprob: -4.931457996368408
    9. ' or' → logprob: -5.556457996368408
    10. '   ' → logprob: -5.556457996368408

Token 437: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5997376441955566
    2. 'and' → logprob: -1.3497376441955566
    3. ',' → logprob: -2.5997376441955566
    4. '+' → logprob: -3.7247376441955566
    5. '-' → logprob: -3.8497376441955566
    6. ' -' → logprob: -4.474737644195557
    7. '           ' → logprob: -4.599737644195557
    8. ' +' → logprob: -5.099737644195557
    9. 'x' → logprob: -5.474737644195557
    10. 'a' → logprob: -5.474737644195557

Token 438: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0067381043918430805
    2. ' j' → logprob: -5.006738185882568
    3. '1' → logprob: -11.00673770904541
    4. '	j' → logprob: -13.75673770904541
    5. ' ' → logprob: -14.13173770904541
    6. '_j' → logprob: -14.13173770904541
    7. '```' → logprob: -14.13173770904541
    8. '$j' → logprob: -14.25673770904541
    9. '[j' → logprob: -14.38173770904541
    10. 'y' → logprob: -15.50673770904541

Token 439: ' along' (ID: 4251)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23834636807441711
    2. ' and' → logprob: -2.2383463382720947
    3. ' +' → logprob: -3.3633463382720947
    4. ',' → logprob: -3.7383463382720947
    5. '+' → logprob: -4.113346576690674
    6. ' for' → logprob: -4.488346576690674
    7. '<|end|>' → logprob: -6.238346576690674
    8. 'and' → logprob: -6.363346576690674
    9. '            ' → logprob: -6.613346576690674
    10. ' =' → logprob: -6.613346576690674

Token 440: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.44347816705703735
    2. ' the' → logprob: -1.3184781074523926
    3. 'a' → logprob: -3.1934781074523926
    4. 'the' → logprob: -3.8184781074523926
    5. ' b' → logprob: -5.193478107452393
    6. ' ' → logprob: -5.193478107452393
    7. ' (-' → logprob: -5.568478107452393
    8. ' (' → logprob: -5.943478107452393
    9. ' '' → logprob: -6.193478107452393
    10. '"' → logprob: -6.193478107452393

Token 441: ',b' (ID: 17568)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6235533356666565
    2. ' a' → logprob: -0.8735533356666565
    3. ' vector' → logprob: -4.748553276062012
    4. ' the' → logprob: -5.123553276062012
    5. ' perpendicular' → logprob: -5.498553276062012
    6. 'b' → logprob: -5.623553276062012
    7. ' normal' → logprob: -6.123553276062012
    8. ' b' → logprob: -6.123553276062012
    9. ' =' → logprob: -6.498553276062012
    10. ' direction' → logprob: -6.498553276062012

Token 442: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3336343467235565
    2. '
' → logprob: -2.208634376525879
    3. '<|end|>' → logprob: -2.583634376525879
    4. ' and' → logprob: -2.958634376525879
    5. '   ' → logprob: -4.833634376525879
    6. ' ' → logprob: -4.833634376525879
    7. ',' → logprob: -4.833634376525879
    8. ' 
' → logprob: -5.583634376525879
    9. '       ' → logprob: -5.708634376525879
    10. '<|end|>' → logprob: -5.833634376525879

Token 443: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1285950392484665
    2. '
' → logprob: -2.2535951137542725
    3. '<|end|>' → logprob: -5.003594875335693
    4. '            
' → logprob: -6.878594875335693
    5. '<|end|>' → logprob: -6.878594875335693
    6. '   ' → logprob: -7.253594875335693
    7. ',' → logprob: -7.253594875335693
    8. ' for' → logprob: -7.503594875335693
    9. '       ' → logprob: -7.503594875335693
    10. ' 
' → logprob: -7.628594875335693

Token 444: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1114410012960434
    2. '
' → logprob: -3.361440896987915
    3. ' 
' → logprob: -3.736440896987915
    4. ' ' → logprob: -4.236441135406494
    5. '<|end|>' → logprob: -4.736441135406494
    6. '   ' → logprob: -5.611441135406494
    7. '       ' → logprob: -5.611441135406494
    8. '\n' → logprob: -5.861441135406494
    9. '            
' → logprob: -5.986441135406494
    10. ' and' → logprob: -6.111441135406494

Token 445: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08070159703493118
    2. '
' → logprob: -2.9557015895843506
    3. '   ' → logprob: -5.08070182800293
    4. ' 
' → logprob: -5.70570182800293
    5. '            
' → logprob: -6.08070182800293
    6. ',' → logprob: -6.33070182800293
    7. ' for' → logprob: -6.33070182800293
    8. '       ' → logprob: -6.58070182800293
    9. ' c' → logprob: -6.70570182800293
    10. ' and' → logprob: -6.95570182800293

Token 446: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.03356098011136055
    2. 'one' → logprob: -3.6585609912872314
    3. ' another' → logprob: -5.783560752868652
    4. ' the' → logprob: -6.033560752868652
    5. ' below' → logprob: -7.658560752868652
    6. 'another' → logprob: -7.658560752868652
    7. 'the' → logprob: -8.158560752868652
    8. ' then' → logprob: -9.033560752868652
    9. 'below' → logprob: -9.783560752868652
    10. ' just' → logprob: -9.908560752868652

Token 447: ' just' (ID: 1327)
  Prédit: ' offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' offset' → logprob: -0.30531466007232666
    2. 'offset' → logprob: -2.055314540863037
    3. ' below' → logprob: -2.680314540863037
    4. ' just' → logprob: -2.805314540863037
    5. 'below' → logprob: -6.430314540863037
    6. ' with' → logprob: -6.805314540863037
    7. '   ' → logprob: -7.055314540863037
    8. 'just' → logprob: -7.305314540863037
    9. ' ' → logprob: -7.555314540863037
    10. '	offset' → logprob: -8.305315017700195

Token 448: ' below' (ID: 4895)
  Prédit: 'below'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'below' → logprob: -0.10022565722465515
    2. ' below' → logprob: -2.3502256870269775
    3. 'offset' → logprob: -12.600225448608398
    4. '1' → logprob: -12.850225448608398
    5. 'Below' → logprob: -12.975225448608398
    6. ' ' → logprob: -13.350225448608398
    7. '   ' → logprob: -13.725225448608398
    8. 'bene' → logprob: -13.725225448608398
    9. 'under' → logprob: -13.975225448608398
    10. 'above' → logprob: -13.975225448608398

Token 449: ' min' (ID: 1349)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02140912041068077
    2. '
' → logprob: -4.396409034729004
    3. '            
' → logprob: -5.896409034729004
    4. '       ' → logprob: -6.396409034729004
    5. '   ' → logprob: -6.896409034729004
    6. ':' → logprob: -7.521409034729004
    7. ',' → logprob: -7.771409034729004
    8. ' for' → logprob: -8.271409034729004
    9. '               ' → logprob: -8.521409034729004
    10. '            ' → logprob: -8.521409034729004

Token 450: '

' (ID: 279)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8947093486785889
    2. '_projection' → logprob: -1.3947093486785889
    3. '_proj' → logprob: -1.6447093486785889
    4. '_pro' → logprob: -2.644709348678589
    5. '_val' → logprob: -3.019709348678589
    6. '_offset' → logprob: -4.394709587097168
    7. '_c' → logprob: -4.894709587097168
    8. '_p' → logprob: -5.769709587097168
    9. '_value' → logprob: -5.894709587097168
    10. '_x' → logprob: -7.394709587097168

Token 451: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08357412368059158
    2. '
' → logprob: -2.583574056625366
    3. '            
' → logprob: -5.583574295043945
    4. ' 
' → logprob: -8.708574295043945
    5. '<|end|>' → logprob: -8.833574295043945
    6. '       ' → logprob: -9.083574295043945
    7. '  
' → logprob: -9.458574295043945
    8. '    
' → logprob: -9.833574295043945
    9. '

' → logprob: -9.833574295043945
    10. ',' → logprob: -10.208574295043945

Token 452: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7918969988822937
    2. '
' → logprob: -1.1668970584869385
    3. ' c' → logprob: -3.0418970584869385
    4. '            
' → logprob: -3.1668970584869385
    5. ' min' → logprob: -3.5418970584869385
    6. 'min' → logprob: -3.5418970584869385
    7. ' 
' → logprob: -4.291896820068359
    8. 'max' → logprob: -4.416896820068359
    9. '   ' → logprob: -4.666896820068359
    10. 'c' → logprob: -4.791896820068359

Token 453: ' Project' (ID: 8761)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.884896457195282
    2. 'c' → logprob: -1.1348965167999268
    3. ' min' → logprob: -2.0098965167999268
    4. 'min' → logprob: -3.0098965167999268
    5. ' max' → logprob: -4.009896278381348
    6. 'offset' → logprob: -4.009896278381348
    7. 'max' → logprob: -4.634896278381348
    8. ' offset' → logprob: -5.384896278381348
    9. '   ' → logprob: -5.509896278381348
    10. '           ' → logprob: -5.509896278381348

Token 454: ' all' (ID: 722)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2823985815048218
    2. ' =' → logprob: -1.4073985815048218
    3. 'points' → logprob: -2.4073987007141113
    4. 's' → logprob: -2.5323987007141113
    5. ' points' → logprob: -2.5323987007141113
    6. 'x' → logprob: -2.7823987007141113
    7. ' all' → logprob: -3.2823987007141113
    8. '_points' → logprob: -3.2823987007141113
    9. '_' → logprob: -4.157398700714111
    10. ' x' → logprob: -4.782398700714111

Token 455: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.6545776724815369
    2. ' points' → logprob: -0.7795776724815369
    3. ' px' → logprob: -4.779577732086182
    4. 'x' → logprob: -5.154577732086182
    5. 'px' → logprob: -5.779577732086182
    6. ' x' → logprob: -6.404577732086182
    7. '           ' → logprob: -7.779577732086182
    8. '(points' → logprob: -7.904577732086182
    9. ' pts' → logprob: -8.029577255249023
    10. '_points' → logprob: -8.029577255249023

Token 456: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1878437995910645
    2. ' onto' → logprob: -1.3128437995910645
    3. ' along' → logprob: -2.4378437995910645
    4. ' on' → logprob: -2.4378437995910645
    5. 'onto' → logprob: -2.6878437995910645
    6. '=' → logprob: -2.8128437995910645
    7. 'along' → logprob: -3.3128437995910645
    8. ' =' → logprob: -3.4378437995910645
    9. 'on' → logprob: -4.9378437995910645
    10. ' projections' → logprob: -5.0628437995910645

Token 457: ' line' (ID: 2543)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08230409026145935
    2. ' a' → logprob: -2.832304000854492
    3. ' (' → logprob: -5.457304000854492
    4. ' line' → logprob: -5.457304000854492
    5. '(a' → logprob: -5.582304000854492
    6. 'line' → logprob: -5.832304000854492
    7. ' the' → logprob: -6.082304000854492
    8. 'the' → logprob: -6.582304000854492
    9. '[a' → logprob: -8.707304000854492
    10. ' vector' → logprob: -8.832304000854492

Token 458: ' normal' (ID: 6078)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10248273611068726
    2. ' =' → logprob: -3.602482795715332
    3. '=' → logprob: -3.977482795715332
    4. ' onto' → logprob: -4.852482795715332
    5. ' along' → logprob: -4.977482795715332
    6. '       ' → logprob: -5.352482795715332
    7. '   ' → logprob: -5.477482795715332
    8. 'a' → logprob: -6.102482795715332
    9. ':' → logprob: -6.102482795715332
    10. '
' → logprob: -6.227482795715332

Token 459: ' vector' (ID: 9727)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04058707132935524
    2. '
' → logprob: -3.9155871868133545
    3. '            
' → logprob: -5.415586948394775
    4. ':' → logprob: -5.540586948394775
    5. ',' → logprob: -6.165586948394775
    6. 'n' → logprob: -6.915586948394775
    7. '.' → logprob: -6.915586948394775
    8. '   ' → logprob: -7.415586948394775
    9. 's' → logprob: -7.415586948394775
    10. ' 
' → logprob: -7.540586948394775

Token 460: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.033114537596702576
    2. '
' → logprob: -4.408114433288574
    3. '            
' → logprob: -4.783114433288574
    4. ':' → logprob: -5.783114433288574
    5. '   ' → logprob: -6.408114433288574
    6. ',' → logprob: -7.033114433288574
    7. ' 
' → logprob: -7.408114433288574
    8. '\n' → logprob: -7.533114433288574
    9. '    
' → logprob: -7.533114433288574
    10. '.' → logprob: -7.533114433288574

Token 461: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.46742120385169983
    2. ')' → logprob: -1.3424211740493774
    3. ' a' → logprob: -2.842421293258667
    4. ')
' → logprob: -3.842421293258667
    5. '           ' → logprob: -4.842421054840088
    6. ' (' → logprob: -5.092421054840088
    7. 'p' → logprob: -5.467421054840088
    8. ' )' → logprob: -6.342421054840088
    9. ',' → logprob: -6.967421054840088
    10. '(a' → logprob: -7.092421054840088

Token 462: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3914201855659485
    2. ')' → logprob: -2.3914201259613037
    3. ' *' → logprob: -2.5164201259613037
    4. '*x' → logprob: -2.6414201259613037
    5. '*' → logprob: -2.7664201259613037
    6. 'x' → logprob: -4.891420364379883
    7. '*p' → logprob: -6.016420364379883
    8. ' ,' → logprob: -6.266420364379883
    9. ')x' → logprob: -6.891420364379883
    10. ',x' → logprob: -7.141420364379883

Token 463: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07109035551548004
    2. ')
' → logprob: -2.6960904598236084
    3. ',' → logprob: -7.321090221405029
    4. '           ' → logprob: -8.446090698242188
    5. ')

' → logprob: -9.321090698242188
    6. '   ' → logprob: -10.321090698242188
    7. '):
' → logprob: -10.321090698242188
    8. '),' → logprob: -10.571090698242188
    9. ')
' → logprob: -11.071090698242188
    10. ' )' → logprob: -11.196090698242188

Token 464: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015802091220393777
    2. '
' → logprob: -7.626580238342285
    3. ',' → logprob: -8.001580238342285
    4. '<|end|>' → logprob: -8.751580238342285
    5. '            
' → logprob: -9.376580238342285
    6. ':' → logprob: -9.376580238342285
    7. '<|end|>' → logprob: -9.501580238342285
    8. ' and' → logprob: -9.876580238342285
    9. '.' → logprob: -10.126580238342285
    10. '=' → logprob: -10.376580238342285

Token 465: ' projections' (ID: 74016)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0568871945142746
    2. ' projections' → logprob: -3.806887149810791
    3. 'proj' → logprob: -4.681887149810791
    4. 'pro' → logprob: -4.681887149810791
    5. 'max' → logprob: -5.681887149810791
    6. '            
' → logprob: -6.681887149810791
    7. 'c' → logprob: -6.931887149810791
    8. '
' → logprob: -7.306887149810791
    9. 'p' → logprob: -7.306887149810791
    10. 'vals' → logprob: -7.431887149810791

Token 466: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141343772411346
    2. ' =' → logprob: -1.7014133930206299
    3. ',' → logprob: -17.201414108276367
    4. '=[]' → logprob: -17.201414108276367
    5. ')' → logprob: -17.576414108276367
    6. '＝' → logprob: -17.701414108276367
    7. '[' → logprob: -17.701414108276367
    8. ' ' → logprob: -17.701414108276367
    9. '=[' → logprob: -17.951414108276367
    10. ' ' → logprob: -18.201414108276367

Token 467: ' [' (ID: 723)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.3170883059501648
    2. '[x' → logprob: -1.3170883655548096
    3. ' [' → logprob: -6.3170881271362305
    4. '[' → logprob: -6.3170881271362305
    5. '[]' → logprob: -9.19208812713623
    6. '[]
' → logprob: -9.81708812713623
    7. '[p' → logprob: -10.19208812713623
    8. '[i' → logprob: -13.06708812713623
    9. '[y' → logprob: -13.31708812713623
    10. '[A' → logprob: -13.31708812713623

Token 468: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004595055361278355
    2. 'x' → logprob: -8.500459671020508
    3. ' a' → logprob: -8.500459671020508
    4. 'p' → logprob: -10.500459671020508
    5. '(a' → logprob: -11.125459671020508
    6. 'point' → logprob: -12.500459671020508
    7. 'px' → logprob: -13.250459671020508
    8. '   ' → logprob: -13.625459671020508
    9. 'ax' → logprob: -14.000459671020508
    10. '[a' → logprob: -14.125459671020508

Token 469: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5774072408676147
    2. '*' → logprob: -0.8274072408676147
    3. '*x' → logprob: -6.577407360076904
    4. '*p' → logprob: -10.327406883239746
    5. ',' → logprob: -10.577406883239746
    6. '*(' → logprob: -12.452406883239746
    7. ')' → logprob: -13.077406883239746
    8. ' ' → logprob: -13.202406883239746
    9. '*
' → logprob: -13.952406883239746
    10. '*,' → logprob: -14.077406883239746

Token 470: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.996708104154095e-05
    2. 'px' → logprob: -9.625100135803223
    3. 'p' → logprob: -10.875100135803223
    4. ' x' → logprob: -11.375100135803223
    5. 'xp' → logprob: -13.625100135803223
    6. 'pt' → logprob: -13.875100135803223
    7. 'points' → logprob: -14.625100135803223
    8. 'point' → logprob: -15.500100135803223
    9. '(x' → logprob: -15.500100135803223
    10. ' px' → logprob: -16.000099182128906

Token 471: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3485014736652374
    2. '+' → logprob: -1.223501443862915
    3. ' ' → logprob: -10.848501205444336
    4. '[' → logprob: -11.848501205444336
    5. ' plus' → logprob: -12.348501205444336
    6. '+y' → logprob: -12.473501205444336
    7. ' +
' → logprob: -12.848501205444336
    8. '+
' → logprob: -12.973501205444336
    9. 'plus' → logprob: -13.223501205444336
    10. '1' → logprob: -13.223501205444336

Token 472: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00015920029545668513
    2. ' b' → logprob: -8.75015926361084
    3. '   ' → logprob: -15.62515926361084
    4. ' ' → logprob: -16.125158309936523
    5. 'a' → logprob: -16.500158309936523
    6. 'y' → logprob: -16.625158309936523
    7. '  ' → logprob: -17.000158309936523
    8. '    ' → logprob: -17.250158309936523
    9. 'x' → logprob: -17.875158309936523
    10. '<|end|>' → logprob: -18.000158309936523

Token 473: ' *' (ID: 425)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.7075096368789673
    2. ' y' → logprob: -0.7075096368789673
    3. '*' → logprob: -4.457509517669678
    4. '*y' → logprob: -6.457509517669678
    5. ' *' → logprob: -7.082509517669678
    6. ' ' → logprob: -8.707509994506836
    7. '   ' → logprob: -10.832509994506836
    8. ',' → logprob: -11.082509994506836
    9. ' for' → logprob: -11.457509994506836
    10. 'for' → logprob: -11.582509994506836

Token 474: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0002964935847558081
    2. ' y' → logprob: -8.125296592712402
    3. '   ' → logprob: -16.000295639038086
    4. ' ' → logprob: -16.250295639038086
    5. '(y' → logprob: -17.250295639038086
    6. '  ' → logprob: -17.375295639038086
    7. '    ' → logprob: -17.500295639038086
    8. '	y' → logprob: -17.500295639038086
    9. 'x' → logprob: -17.750295639038086
    10. '<|end|>' → logprob: -17.750295639038086

Token 475: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.029865030199289322
    2. 'for' → logprob: -3.529865026473999
    3. ' -' → logprob: -10.029865264892578
    4. ' ' → logprob: -10.154865264892578
    5. '-' → logprob: -11.154865264892578
    6. '   ' → logprob: -12.529865264892578
    7. ')' → logprob: -12.529865264892578
    8. '           ' → logprob: -12.529865264892578
    9. '
' → logprob: -13.904865264892578
    10. '	for' → logprob: -13.904865264892578

Token 476: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.19998624920845032
    2. 'x' → logprob: -1.824986219406128
    3. ' (' → logprob: -3.949986219406128
    4. ' x' → logprob: -7.449986457824707
    5. '(points' → logprob: -9.699986457824707
    6. 'points' → logprob: -9.949986457824707
    7. '[x' → logprob: -10.574986457824707
    8. '(' → logprob: -10.949986457824707
    9. '(a' → logprob: -11.574986457824707
    10. '   ' → logprob: -11.699986457824707

Token 477: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.020721493288874626
    2. '(x' → logprob: -3.895721435546875
    3. ' x' → logprob: -9.020721435546875
    4. ' (' → logprob: -9.770721435546875
    5. '   ' → logprob: -14.145721435546875
    6. '[x' → logprob: -15.520721435546875
    7. '  ' → logprob: -15.770721435546875
    8. ' ' → logprob: -15.895721435546875
    9. '	x' → logprob: -15.895721435546875
    10. '(' → logprob: -16.145721435546875

Token 478: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006345203728415072
    2. ',y' → logprob: -7.375634670257568
    3. ' ,' → logprob: -12.75063419342041
    4. ',x' → logprob: -12.87563419342041
    5. ',
' → logprob: -14.25063419342041
    6. ',_' → logprob: -14.62563419342041
    7. 'y' → logprob: -15.25063419342041
    8. '_,' → logprob: -15.37563419342041
    9. ',)' → logprob: -15.62563419342041
    10. 'in' → logprob: -15.87563419342041

Token 479: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.004418486263602972
    2. ' y' → logprob: -5.62941837310791
    3. 'x' → logprob: -7.37941837310791
    4. ',' → logprob: -8.87941837310791
    5. ',y' → logprob: -10.62941837310791
    6. '_,' → logprob: -11.00441837310791
    7. 'points' → logprob: -12.50441837310791
    8. '   ' → logprob: -13.50441837310791
    9. ' ' → logprob: -13.50441837310791
    10. '  ' → logprob: -13.62941837310791

Token 480: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.636475493200123e-05
    2. ',)' → logprob: -10.125076293945312
    3. ',_' → logprob: -10.625076293945312
    4. ')' → logprob: -11.875076293945312
    5. '_,' → logprob: -13.250076293945312
    6. ',c' → logprob: -13.750076293945312
    7. ' ,' → logprob: -14.125076293945312
    8. 'c' → logprob: -14.750076293945312
    9. ' in' → logprob: -15.500076293945312
    10. ',
' → logprob: -16.000076293945312

Token 481: ' _)' (ID: 66309)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.774589478969574
    2. '_)' → logprob: -0.774589478969574
    3. 'c' → logprob: -3.2745895385742188
    4. '_,' → logprob: -3.3995895385742188
    5. ' _)' → logprob: -6.524589538574219
    6. '_c' → logprob: -6.649589538574219
    7. 'points' → logprob: -6.899589538574219
    8. ')' → logprob: -6.899589538574219
    9. ' _' → logprob: -7.649589538574219
    10. '_points' → logprob: -7.899589538574219

Token 482: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.14997947216033936
    2. ' in' → logprob: -2.274979591369629
    3. ']' → logprob: -4.024979591369629
    4. ')' → logprob: -4.024979591369629
    5. ')]' → logprob: -7.399979591369629
    6. ',' → logprob: -9.649979591369629
    7. 'points' → logprob: -10.649979591369629
    8. ' ]' → logprob: -11.274979591369629
    9. ' ' → logprob: -11.399979591369629
    10. '   ' → logprob: -11.649979591369629

Token 483: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -3.547789674485102e-05
    2. ' points' → logprob: -10.250035285949707
    3. '(points' → logprob: -18.250036239624023
    4. '	points' → logprob: -18.500036239624023
    5. ')' → logprob: -19.500036239624023
    6. '   ' → logprob: -19.625036239624023
    7. '[' → logprob: -20.625036239624023
    8. '.points' → logprob: -20.750036239624023
    9. '
' → logprob: -21.250036239624023
    10. 'oints' → logprob: -21.250036239624023

Token 484: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00034237600630149245
    2. ']

' → logprob: -9.00034236907959
    3. ']
' → logprob: -9.37534236907959
    4. '           ' → logprob: -9.62534236907959
    5. ' ]' → logprob: -9.62534236907959
    6. ']
' → logprob: -14.75034236907959
    7. '   ' → logprob: -14.87534236907959
    8. ']

' → logprob: -14.87534236907959
    9. '       ' → logprob: -15.00034236907959
    10. '               ' → logprob: -15.75034236907959

Token 485: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24646687507629395
    2. 'min' → logprob: -2.121466875076294
    3. ' min' → logprob: -2.746466875076294
    4. '
' → logprob: -4.246466636657715
    5. 'max' → logprob: -5.371466636657715
    6. '            
' → logprob: -5.621466636657715
    7. '_min' → logprob: -5.746466636657715
    8. ',' → logprob: -5.996466636657715
    9. '   ' → logprob: -6.496466636657715
    10. '```' → logprob: -6.746466636657715

Token 486: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.15476186573505402
    2. ' min' → logprob: -2.029761791229248
    3. '           ' → logprob: -4.654761791229248
    4. 'max' → logprob: -6.279761791229248
    5. 'proj' → logprob: -8.154762268066406
    6. ' max' → logprob: -8.904762268066406
    7. 'pro' → logprob: -9.904762268066406
    8. 'minimum' → logprob: -10.529762268066406
    9. 'p' → logprob: -10.654762268066406
    10. '   ' → logprob: -10.779762268066406

Token 487: ' The' (ID: 623)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.005369529593735933
    2. 'max' → logprob: -5.380369663238525
    3. 'proj' → logprob: -7.755369663238525
    4. 'offset' → logprob: -8.630369186401367
    5. ' min' → logprob: -9.255369186401367
    6. '   ' → logprob: -11.505369186401367
    7. 'p' → logprob: -11.755369186401367
    8. 'pro' → logprob: -11.880369186401367
    9. 'minimum' → logprob: -12.255369186401367
    10. 'for' → logprob: -12.505369186401367

Token 488: ' projections' (ID: 74016)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.014124487526714802
    2. ' min' → logprob: -4.514124393463135
    3. 'max' → logprob: -6.014124393463135
    4. 'proj' → logprob: -8.014124870300293
    5. 'pro' → logprob: -9.389124870300293
    6. '   ' → logprob: -9.764124870300293
    7. 'p' → logprob: -10.139124870300293
    8. ' max' → logprob: -10.764124870300293
    9. 'm' → logprob: -10.889124870300293
    10. 'mins' → logprob: -11.139124870300293

Token 489: ' of' (ID: 328)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.04263348877429962
    2. '_max' → logprob: -4.042633533477783
    3. 'min' → logprob: -4.542633533477783
    4. '_sorted' → logprob: -5.292633533477783
    5. '.sort' → logprob: -5.542633533477783
    6. '<|end|>' → logprob: -6.292633533477783
    7. 'max' → logprob: -7.167633533477783
    8. '_set' → logprob: -7.667633533477783
    9. '_values' → logprob: -8.542633056640625
    10. '_lower' → logprob: -8.792633056640625

Token 490: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.17825283110141754
    2. ' points' → logprob: -1.9282528162002563
    3. 'i' → logprob: -4.928252696990967
    4. '[i' → logprob: -5.553252696990967
    5. ' [' → logprob: -6.678252696990967
    6. 'x' → logprob: -6.678252696990967
    7. '(points' → logprob: -7.053252696990967
    8. '[' → logprob: -7.428252696990967
    9. '[x' → logprob: -7.428252696990967
    10. 'pro' → logprob: -7.428252696990967

Token 491: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2672129273414612
    2. ' i' → logprob: -2.2672128677368164
    3. '[i' → logprob: -2.7672128677368164
    4. ' are' → logprob: -4.392212867736816
    5. 's' → logprob: -4.517212867736816
    6. ' at' → logprob: -4.892212867736816
    7. '_i' → logprob: -4.892212867736816
    8. ' =' → logprob: -5.017212867736816
    9. ')' → logprob: -5.767212867736816
    10. '_min' → logprob: -6.392212867736816

Token 492: ' and' (ID: 326)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5708301663398743
    2. '[i' → logprob: -1.5708301067352295
    3. '][' → logprob: -2.8208301067352295
    4. '],' → logprob: -2.9458301067352295
    5. 'i' → logprob: -3.0708301067352295
    6. ' and' → logprob: -3.5708301067352295
    7. 'and' → logprob: -4.445830345153809
    8. '[' → logprob: -5.070830345153809
    9. ',' → logprob: -5.195830345153809
    10. '[x' → logprob: -5.320830345153809

Token 493: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12961895763874054
    2. 'j' → logprob: -2.1296188831329346
    3. ' i' → logprob: -6.879619121551514
    4. 'points' → logprob: -7.504619121551514
    5. '[i' → logprob: -7.629619121551514
    6. ' j' → logprob: -8.879618644714355
    7. '[' → logprob: -9.129618644714355
    8. ' points' → logprob: -9.129618644714355
    9. '[j' → logprob: -9.379618644714355
    10. ']' → logprob: -10.254618644714355

Token 494: ' are' (ID: 553)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4410720765590668
    2. ' =' → logprob: -2.1910719871520996
    3. '[i' → logprob: -2.1910719871520996
    4. ' are' → logprob: -2.9410719871520996
    5. ')' → logprob: -4.0660719871521
    6. ']' → logprob: -4.1910719871521
    7. 'are' → logprob: -4.3160719871521
    8. '=' → logprob: -5.0660719871521
    9. ' i' → logprob: -5.0660719871521
    10. '_i' → logprob: -5.3160719871521

Token 495: ':
' (ID: 734)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.1451793760061264
    2. ' projections' → logprob: -2.645179271697998
    3. '[' → logprob: -3.895179271697998
    4. 'min' → logprob: -4.020179271697998
    5. 'max' → logprob: -4.270179271697998
    6. 'a' → logprob: -5.645179271697998
    7. '[min' → logprob: -6.395179271697998
    8. 'proj' → logprob: -6.645179271697998
    9. '[a' → logprob: -7.020179271697998
    10. 'projection' → logprob: -7.270179271697998

Token 496: '           ' (ID: 352)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8078102469444275
    2. 'proj' → logprob: -1.1828103065490723
    3. ' p' → logprob: -1.8078103065490723
    4. ' proj' → logprob: -3.1828103065490723
    5. 'pi' → logprob: -3.4328103065490723
    6. '           ' → logprob: -5.307810306549072
    7. ' pi' → logprob: -6.307810306549072
    8. 'min' → logprob: -6.932810306549072
    9. 'pro' → logprob: -7.182810306549072
    10. 'pj' → logprob: -8.182809829711914

Token 497: ' pi' (ID: 6404)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5591623783111572
    2. 'pi' (adapté à ' pi') → logprob: -1.4341623783111572
    3. 'proj' → logprob: -1.6841623783111572
    4. '   ' → logprob: -5.809162139892578
    5. 'pro' → logprob: -7.809162139892578
    6. ' p' → logprob: -8.184162139892578
    7. 'min' → logprob: -8.309162139892578
    8. ' proj' → logprob: -9.059162139892578
    9. '```' → logprob: -9.309162139892578
    10. ' pi' → logprob: -10.059162139892578

Token 498: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3486238718032837
    2. ' =' → logprob: -1.2236238718032837
    3. ',' → logprob: -9.598624229431152
    4. '1' → logprob: -9.723624229431152
    5. 'x' → logprob: -11.598624229431152
    6. 'i' → logprob: -11.723624229431152
    7. 'c' → logprob: -11.973624229431152
    8. ' ' → logprob: -12.598624229431152
    9. '=i' → logprob: -12.723624229431152
    10. 'v' → logprob: -12.848624229431152

Token 499: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3510938286781311
    2. 'pro' → logprob: -1.2260937690734863
    3. ' projections' → logprob: -6.601093769073486
    4. ' a' → logprob: -6.851093769073486
    5. 'proj' → logprob: -9.601094245910645
    6. 'projects' → logprob: -10.226094245910645
    7. 'points' → logprob: -10.476094245910645
    8. 'projection' → logprob: -10.851094245910645
    9. '   ' → logprob: -10.976094245910645
    10. 'project' → logprob: -10.976094245910645

Token 500: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6423048377037048
    2. '*' → logprob: -0.7673048377037048
    3. '*x' → logprob: -4.64230489730835
    4. '*p' → logprob: -11.267304420471191
    5. 'x' → logprob: -12.892304420471191
    6. '*q' → logprob: -13.767304420471191
    7. ' ' → logprob: -14.017304420471191
    8. '**' → logprob: -14.017304420471191
    9. '*pi' → logprob: -14.017304420471191
    10. '*y' → logprob: -14.267304420471191

Token 501: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0206720617134124e-05
    2. ' x' → logprob: -11.50001049041748
    3. 'points' → logprob: -18.250009536743164
    4. '(x' → logprob: -19.000009536743164
    5. ' points' → logprob: -21.250009536743164
    6. '	x' → logprob: -21.750009536743164
    7. ' ' → logprob: -21.875009536743164
    8. ')x' → logprob: -21.875009536743164
    9. '   ' → logprob: -22.375009536743164
    10. '<|end|>' → logprob: -22.375009536743164

Token 502: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001190225942991674
    2. 'i' → logprob: -6.751190185546875
    3. 'points' → logprob: -11.501190185546875
    4. ' points' → logprob: -12.626190185546875
    5. '[i' → logprob: -12.751190185546875
    6. 'x' → logprob: -13.751190185546875
    7. '[' → logprob: -14.626190185546875
    8. '_points' → logprob: -14.876190185546875
    9. ' i' → logprob: -15.251190185546875
    10. '_i' → logprob: -15.376190185546875

Token 503: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519329786300659
    2. ' +' → logprob: -1.501932978630066
    3. '+y' → logprob: -12.751933097839355
    4. '+
' → logprob: -15.376933097839355
    5. ' ' → logprob: -15.501933097839355
    6. '＋' → logprob: -16.37693214416504
    7. ' ' → logprob: -16.62693214416504
    8. ' plus' → logprob: -16.75193214416504
    9. ' +
' → logprob: -16.75193214416504
    10. '```' → logprob: -16.87693214416504

Token 504: ' b' (ID: 287)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.039041925221681595
    2. ' y' → logprob: -3.2890419960021973
    3. 'b' → logprob: -6.914041996002197
    4. ' b' → logprob: -12.039041519165039
    5. ' ' → logprob: -15.789041519165039
    6. '	y' → logprob: -16.03904151916504
    7. '(y' → logprob: -16.78904151916504
    8. ',y' → logprob: -17.53904151916504
    9. ''y' → logprob: -18.91404151916504
    10. '  ' → logprob: -18.91404151916504

Token 505: ' *' (ID: 425)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03804286941885948
    2. ' y' → logprob: -3.2880427837371826
    3. ' ' → logprob: -14.663043022155762
    4. '	y' → logprob: -14.913043022155762
    5. '(y' → logprob: -15.163043022155762
    6. '*y' → logprob: -15.913043022155762
    7. '<|end|>' → logprob: -16.413042068481445
    8. ''y' → logprob: -17.413042068481445
    9. ',y' → logprob: -17.413042068481445
    10. '  ' → logprob: -17.788042068481445

Token 506: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00023083435371518135
    2. ' y' → logprob: -8.37523078918457
    3. '	y' → logprob: -16.62523078918457
    4. '   ' → logprob: -17.00023078918457
    5. ' ' → logprob: -17.25023078918457
    6. '(y' → logprob: -17.50023078918457
    7. '<|end|>' → logprob: -18.25023078918457
    8. '  ' → logprob: -18.37523078918457
    9. ''y' → logprob: -18.50023078918457
    10. '```' → logprob: -19.12523078918457

Token 507: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. '-' → logprob: -13.62500286102295
    3. ' ' → logprob: -13.87500286102295
    4. '```' → logprob: -16.000001907348633
    5. ' -' → logprob: -16.250001907348633
    6. '<|end|>' → logprob: -16.375001907348633
    7. '_' → logprob: -16.500001907348633
    8. '#' → logprob: -17.500001907348633
    9. '   ' → logprob: -17.500001907348633
    10. '`' → logprob: -17.625001907348633

Token 508: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5383883118629456
    2. '           ' → logprob: -1.6633882522583008
    3. '<|end|>' → logprob: -1.7883882522583008
    4. '<|end|>' → logprob: -3.913388252258301
    5. ' 
' → logprob: -4.538388252258301
    6. '            
' → logprob: -4.788388252258301
    7. 'pj' → logprob: -5.288388252258301
    8. 'p' → logprob: -6.288388252258301
    9. '  
' → logprob: -6.413388252258301
    10. ' pj' → logprob: -6.538388252258301

Token 509: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3937716484069824
    2. 'pj' → logprob: -1.1437716484069824
    3. ' pj' → logprob: -5.018771648406982
    4. 'p' → logprob: -9.64377212524414
    5. '            
' → logprob: -10.26877212524414
    6. '   ' → logprob: -10.64377212524414
    7. '
' → logprob: -10.76877212524414
    8. ' ' → logprob: -11.14377212524414
    9. ',p' → logprob: -11.14377212524414
    10. '       ' → logprob: -11.26877212524414

Token 510: ' pj' (ID: 110041)
  Prédit: 'pj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pj' (adapté à ' pj') → logprob: -3.082895273109898e-05
    2. ' pj' → logprob: -10.500030517578125
    3. '   ' → logprob: -13.250030517578125
    4. '
' → logprob: -14.625030517578125
    5. '           ' → logprob: -14.625030517578125
    6. '       ' → logprob: -15.375030517578125
    7. '     ' → logprob: -16.250030517578125
    8. 'p' → logprob: -16.250030517578125
    9. ' ' → logprob: -17.625030517578125
    10. '```' → logprob: -18.000030517578125

Token 511: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408029437065125
    2. '=' → logprob: -0.9740803241729736
    3. ' ' → logprob: -13.099080085754395
    4. ')' → logprob: -14.349080085754395
    5. ' =
' → logprob: -15.974080085754395
    6. '=
' → logprob: -16.72408103942871
    7. ' ' → logprob: -16.84908103942871
    8. ',' → logprob: -16.84908103942871
    9. '            ' → logprob: -17.09908103942871
    10. '>' → logprob: -17.28658103942871

Token 512: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6326025724411011
    2. 'a' → logprob: -0.7576025724411011
    3. 'pi' → logprob: -14.13260269165039
    4. '	a' → logprob: -14.25760269165039
    5. ' ' → logprob: -14.88260269165039
    6. ' pi' → logprob: -15.13260269165039
    7. '   ' → logprob: -15.63260269165039
    8. 'x' → logprob: -16.00760269165039
    9. '           ' → logprob: -16.00760269165039
    10. '(a' → logprob: -16.13260269165039

Token 513: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0160545464605093
    2. '*' → logprob: -4.141054630279541
    3. ' x' → logprob: -11.641054153442383
    4. ' ' → logprob: -11.766054153442383
    5. 'x' → logprob: -13.266054153442383
    6. '`' → logprob: -14.891054153442383
    7. ' *
' → logprob: -15.141054153442383
    8. ' ' → logprob: -15.266054153442383
    9. ' `' → logprob: -15.516054153442383
    10. '```' → logprob: -15.766054153442383

Token 514: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00861456897109747
    2. ' x' → logprob: -4.758614540100098
    3. 'y' → logprob: -17.883615493774414
    4. '	x' → logprob: -18.633615493774414
    5. '(x' → logprob: -19.508615493774414
    6. '<|end|>' → logprob: -19.508615493774414
    7. ' ' → logprob: -20.133615493774414
    8. '"x' → logprob: -20.633615493774414
    9. ')x' → logprob: -20.883615493774414
    10. ' y' → logprob: -21.133615493774414

Token 515: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.046072497963905334
    2. 'x' → logprob: -3.921072483062744
    3. '+' → logprob: -4.046072483062744
    4. '1' → logprob: -5.546072483062744
    5. 'j' → logprob: -6.171072483062744
    6. ' ' → logprob: -7.046072483062744
    7. ' +' → logprob: -7.921072483062744
    8. '+j' → logprob: -9.171072959899902
    9. '+p' → logprob: -9.546072959899902
    10. ' x' → logprob: -10.046072959899902

Token 516: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5231828689575195
    2. ' +' → logprob: -0.8981828689575195
    3. '+y' → logprob: -10.27318286895752
    4. '+j' → logprob: -11.52318286895752
    5. '+p' → logprob: -11.89818286895752
    6. '+x' → logprob: -12.64818286895752
    7. 'x' → logprob: -13.77318286895752
    8. '+b' → logprob: -14.02318286895752
    9. ' ' → logprob: -14.02318286895752
    10. ' y' → logprob: -14.77318286895752

Token 517: ' b' (ID: 287)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.16216416656970978
    2. ' y' → logprob: -1.9121642112731934
    3. 'b' → logprob: -6.287164211273193
    4. ' b' → logprob: -9.537163734436035
    5. 'x' → logprob: -12.912163734436035
    6. ' ' → logprob: -14.162163734436035
    7. '   ' → logprob: -14.537163734436035
    8. '	y' → logprob: -14.912163734436035
    9. 'yb' → logprob: -15.287163734436035
    10. '    ' → logprob: -15.287163734436035

Token 518: ' *' (ID: 425)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.6327741742134094
    2. 'y' → logprob: -0.7577741742134094
    3. ' +' → logprob: -10.007774353027344
    4. '+' → logprob: -10.007774353027344
    5. '*y' → logprob: -10.132774353027344
    6. ' ' → logprob: -11.257774353027344
    7. '+y' → logprob: -11.757774353027344
    8. '   ' → logprob: -12.007774353027344
    9. '	y' → logprob: -12.132774353027344
    10. '*' → logprob: -13.132774353027344

Token 519: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.002807013690471649
    2. ' y' → logprob: -5.877807140350342
    3. '   ' → logprob: -13.752806663513184
    4. '           ' → logprob: -15.127806663513184
    5. '    ' → logprob: -15.502806663513184
    6. ' ' → logprob: -15.752806663513184
    7. 'x' → logprob: -16.2528076171875
    8. '	y' → logprob: -16.6278076171875
    9. '     ' → logprob: -16.7528076171875
    10. '       ' → logprob: -16.7528076171875

Token 520: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021778582595288754
    2. '2' → logprob: -6.627177715301514
    3. '<|end|>' → logprob: -7.252177715301514
    4. '<|end|>' → logprob: -9.752178192138672
    5. 'j' → logprob: -10.002178192138672
    6. ' ' → logprob: -11.252178192138672
    7. 'p' → logprob: -12.002178192138672
    8. '```' → logprob: -12.002178192138672
    9. '[' → logprob: -12.377178192138672
    10. 'pj' → logprob: -13.377178192138672

Token 521: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45719417929649353
    2. '           ' → logprob: -1.082194209098816
    3. '            
' → logprob: -4.4571943283081055
    4. '<|end|>' → logprob: -4.4571943283081055
    5. '<|end|>' → logprob: -6.0821943283081055
    6. '#' → logprob: -7.5821943283081055
    7. '  
' → logprob: -7.9571943283081055
    8. ',' → logprob: -8.207194328308105
    9. '.' → logprob: -8.207194328308105
    10. '

' → logprob: -8.332194328308105

Token 522: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43551722168922424
    2. '
' → logprob: -1.0605171918869019
    3. '            
' → logprob: -5.310517311096191
    4. '```' → logprob: -7.935517311096191
    5. '#' → logprob: -8.435517311096191
    6. 'min' → logprob: -8.435517311096191
    7. ' min' → logprob: -8.685517311096191
    8. '
' → logprob: -8.685517311096191
    9. ',' → logprob: -9.435517311096191
    10. '\' → logprob: -9.560517311096191

Token 523: ' p' (ID: 275)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4418944716453552
    2. '
' → logprob: -1.81689453125
    3. 'min' → logprob: -1.94189453125
    4. ' min' → logprob: -3.44189453125
    5. '            
' → logprob: -4.31689453125
    6. '#' → logprob: -6.44189453125
    7. '_min' → logprob: -7.06689453125
    8. '[min' → logprob: -7.19189453125
    9. ',' → logprob: -7.81689453125
    10. ',min' → logprob: -8.31689453125

Token 524: '_min' (ID: 15950)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.26198139786720276
    2. '_min' → logprob: -1.5119813680648804
    3. 'max' → logprob: -4.76198148727417
    4. '_max' → logprob: -7.13698148727417
    5. 'i' → logprob: -7.76198148727417
    6. 'ro' → logprob: -10.136981010437012
    7. 'm' → logprob: -10.261981010437012
    8. 'os' → logprob: -10.386981010437012
    9. ' =' → logprob: -10.636981010437012
    10. 'o' → logprob: -10.761981010437012

Token 525: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2521176338195801
    2. ' =' → logprob: -1.50211763381958
    3. ',' → logprob: -8.752117156982422
    4. '=min' → logprob: -10.502117156982422
    5. ' ' → logprob: -14.377117156982422
    6. 's' → logprob: -14.377117156982422
    7. '=max' → logprob: -14.877117156982422
    8. '=int' → logprob: -15.127117156982422
    9. ')' → logprob: -15.502117156982422
    10. '=
' → logprob: -16.002117156982422

Token 526: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.02975870668888092
    2. ' min' → logprob: -3.5297586917877197
    3. 'max' → logprob: -12.40475845336914
    4. '(min' → logprob: -13.52975845336914
    5. '	min' → logprob: -14.27975845336914
    6. ' ' → logprob: -14.52975845336914
    7. '   ' → logprob: -14.90475845336914
    8. 'pi' → logprob: -15.15475845336914
    9. 'minimum' → logprob: -15.27975845336914
    10. '=min' → logprob: -15.65475845336914

Token 527: '(pi' (ID: 128494)
  Prédit: '(pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pi' → logprob: -0.00090061966329813
    2. '(pro' → logprob: -7.375900745391846
    3. 'pi' → logprob: -8.250900268554688
    4. '(p' → logprob: -11.625900268554688
    5. '(' → logprob: -13.625900268554688
    6. 'pro' → logprob: -14.250900268554688
    7. ' pi' → logprob: -14.500900268554688
    8. '(
' → logprob: -14.875900268554688
    9. '(py' → logprob: -15.625900268554688
    10. '_pi' → logprob: -15.625900268554688

Token 528: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11679884046316147
    2. ',p' → logprob: -2.3667988777160645
    3. ' ,' → logprob: -4.1167988777160645
    4. '(p' → logprob: -9.866798400878906
    5. ' -' → logprob: -10.116798400878906
    6. '-' → logprob: -10.741798400878906
    7. 'p' → logprob: -10.991798400878906
    8. ' p' → logprob: -11.616798400878906
    9. '-p' → logprob: -12.616798400878906
    10. ',
' → logprob: -12.991798400878906

Token 529: ' pj' (ID: 110041)
  Prédit: 'pj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pj' → logprob: -0.023246875032782555
    2. ' pj' → logprob: -3.7732467651367188
    3. ' ' → logprob: -14.148246765136719
    4. '   ' → logprob: -14.648246765136719
    5. '  ' → logprob: -16.64824676513672
    6. 'p' → logprob: -16.77324676513672
    7. '
' → logprob: -17.89824676513672
    8. '    ' → logprob: -17.89824676513672
    9. 'pq' → logprob: -17.89824676513672
    10. 'pi' → logprob: -18.02324676513672

Token 530: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18746966123580933
    2. ' -' → logprob: -1.812469720840454
    3. ')
' → logprob: -5.937469482421875
    4. '-' → logprob: -6.187469482421875
    5. '<|end|>' → logprob: -6.437469482421875
    6. '           ' → logprob: -7.437469482421875
    7. ',' → logprob: -7.937469482421875
    8. ' )' → logprob: -8.437469482421875
    9. ' +' → logprob: -9.687469482421875
    10. '<|end|>' → logprob: -9.937469482421875

Token 531: '           ' (ID: 352)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.7451236844062805
    2. '           ' → logprob: -0.7451236844062805
    3. 'p' → logprob: -3.4951236248016357
    4. '<|end|>' → logprob: -4.620123863220215
    5. '<|end|>' → logprob: -5.995123863220215
    6. ',' → logprob: -6.745123863220215
    7. ' +' → logprob: -6.870123863220215
    8. ' ' → logprob: -6.995123863220215
    9. '+' → logprob: -7.120123863220215
    10. ' and' → logprob: -7.245123863220215

Token 532: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.10078421235084534
    2. ' p' → logprob: -2.3507843017578125
    3. '           ' → logprob: -7.4757843017578125
    4. '       ' → logprob: -12.975784301757812
    5. '   ' → logprob: -13.100784301757812
    6. ',' → logprob: -13.600784301757812
    7. ' ' → logprob: -14.100784301757812
    8. ' and' → logprob: -14.725784301757812
    9. '```' → logprob: -14.975784301757812
    10. '          ' → logprob: -15.225784301757812

Token 533: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0017437237547710538
    2. 'max' → logprob: -6.376743793487549
    3. 'ax' → logprob: -10.50174331665039
    4. '_min' → logprob: -11.62674331665039
    5. '_' → logprob: -13.37674331665039
    6. '=' → logprob: -13.87674331665039
    7. '_MAX' → logprob: -14.25174331665039
    8. '+' → logprob: -14.37674331665039
    9. ' _' → logprob: -15.37674331665039
    10. ' max' → logprob: -15.62674331665039

Token 534: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196802109479904
    2. '=' → logprob: -2.8119680881500244
    3. ' ' → logprob: -15.561967849731445
    4. ')' → logprob: -16.686967849731445
    5. ' =
' → logprob: -16.811967849731445
    6. '<|end|>' → logprob: -16.811967849731445
    7. ' p' → logprob: -17.061967849731445
    8. '=p' → logprob: -17.311967849731445
    9. ',' → logprob: -17.311967849731445
    10. ' =)' → logprob: -17.936967849731445

Token 535: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.25193139910697937
    2. ' max' → logprob: -1.5019314289093018
    3. '(max' → logprob: -13.376931190490723
    4. '	max' → logprob: -15.626931190490723
    5. '[max' → logprob: -15.626931190490723
    6. 'p' → logprob: -15.876931190490723
    7. '=max' → logprob: -16.00193214416504
    8. ' ' → logprob: -16.87693214416504
    9. '           ' → logprob: -17.12693214416504
    10. '   ' → logprob: -17.50193214416504

Token 536: '(pi' (ID: 128494)
  Prédit: '(pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pi' → logprob: -0.0001669485354796052
    2. '(p' → logprob: -9.000166893005371
    3. 'pi' → logprob: -10.125166893005371
    4. '(pro' → logprob: -13.125166893005371
    5. ' (' → logprob: -15.125166893005371
    6. '(' → logprob: -15.375166893005371
    7. '/pi' → logprob: -15.500166893005371
    8. ' pi' → logprob: -15.625166893005371
    9. '_pi' → logprob: -15.875166893005371
    10. '(py' → logprob: -16.000167846679688

Token 537: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5388525128364563
    2. '(pi' → logprob: -1.2888524532318115
    3. '(p' → logprob: -2.1638524532318115
    4. ',p' → logprob: -4.663852691650391
    5. 'i' → logprob: -4.663852691650391
    6. ',i' → logprob: -6.413852691650391
    7. 'pi' → logprob: -6.538852691650391
    8. ' ,' → logprob: -6.663852691650391
    9. ')' → logprob: -6.913852691650391
    10. '(' → logprob: -7.163852691650391

Token 538: ' pj' (ID: 110041)
  Prédit: 'pj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pj' → logprob: -0.006436353083699942
    2. 'pi' → logprob: -5.131436347961426
    3. 'p' → logprob: -8.256436347961426
    4. ' pj' → logprob: -8.631436347961426
    5. 'pq' → logprob: -10.006436347961426
    6. 'pm' → logprob: -11.381436347961426
    7. 'pk' → logprob: -12.631436347961426
    8. 'py' → logprob: -13.131436347961426
    9. 'pl' → logprob: -13.131436347961426
    10. 'pn' → logprob: -13.631436347961426

Token 539: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000737442634999752
    2. ')
' → logprob: -7.75073766708374
    3. '           ' → logprob: -9.000737190246582
    4. '+' → logprob: -9.125737190246582
    5. ' +' → logprob: -10.000737190246582
    6. ')+' → logprob: -11.125737190246582
    7. ' )' → logprob: -12.125737190246582
    8. ')

' → logprob: -12.750737190246582
    9. ',' → logprob: -13.500737190246582
    10. '   ' → logprob: -13.875737190246582

Token 540: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030763039365410805
    2. '
' → logprob: -4.405763149261475
    3. '            
' → logprob: -4.655763149261475
    4. ' for' → logprob: -5.030763149261475
    5. 'for' → logprob: -7.905763149261475
    6. '       ' → logprob: -7.905763149261475
    7. '  
' → logprob: -8.280762672424316
    8. ' 
' → logprob: -8.530762672424316
    9. ',' → logprob: -8.780762672424316
    10. '   ' → logprob: -9.030762672424316

Token 541: ' #' (ID: 1069)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.0683351531624794
    2. 'for' → logprob: -4.193335056304932
    3. ' for' → logprob: -4.318335056304932
    4. ' offset' → logprob: -4.318335056304932
    5. '           ' → logprob: -4.443335056304932
    6. ' offsets' → logprob: -4.568335056304932
    7. '#' (adapté à ' #') → logprob: -7.318335056304932
    8. '
' → logprob: -8.06833553314209
    9. 'possible' → logprob: -8.31833553314209
    10. 'offs' → logprob: -8.69333553314209

Token 542: ' Candidate' (ID: 81541)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.06915681064128876
    2. 'for' → logprob: -2.8191568851470947
    3. '#' → logprob: -5.944156646728516
    4. ' for' → logprob: -6.194156646728516
    5. ' offset' → logprob: -7.069156646728516
    6. ' offsets' → logprob: -7.194156646728516
    7. 'offs' → logprob: -8.444156646728516
    8. 'possible' → logprob: -8.694156646728516
    9. 'p' → logprob: -8.944156646728516
    10. 'min' → logprob: -9.819156646728516

Token 543: ' offsets' (ID: 78390)
  Prédit: '_offsets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_offsets' → logprob: -0.011736826971173286
    2. ' offsets' → logprob: -5.011736869812012
    3. 'offset' → logprob: -6.136736869812012
    4. '_lines' → logprob: -6.136736869812012
    5. ' lines' → logprob: -8.511736869812012
    6. '_offset' → logprob: -9.011736869812012
    7. '_sh' → logprob: -10.136736869812012
    8. '_line' → logprob: -10.136736869812012
    9. ' offset' → logprob: -10.136736869812012
    10. '_positions' → logprob: -10.386736869812012

Token 544: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7237642407417297
    2. '_offsets' → logprob: -1.098764181137085
    3. 'offset' → logprob: -2.598764181137085
    4. 'for' → logprob: -2.723764181137085
    5. ' for' → logprob: -4.348764419555664
    6. '_offset' → logprob: -4.973764419555664
    7. '=' → logprob: -5.348764419555664
    8. '           ' → logprob: -5.473764419555664
    9. '   ' → logprob: -5.473764419555664
    10. ' offsets' → logprob: -5.598764419555664

Token 545: ' line' (ID: 2543)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.42331168055534363
    2. 'c' → logprob: -1.298311710357666
    3. ' offset' → logprob: -2.923311710357666
    4. ' c' → logprob: -4.548311710357666
    5. 'p' → logprob: -5.298311710357666
    6. 'line' → logprob: -7.298311710357666
    7. ' p' → logprob: -7.798311710357666
    8. ' separation' → logprob: -8.173311233520508
    9. ' line' → logprob: -8.423311233520508
    10. 'sep' → logprob: -8.423311233520508

Token 546: ' to' (ID: 316)
  Prédit: '_offsets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_offsets' → logprob: -0.17834310233592987
    2. ' =' → logprob: -2.5533430576324463
    3. '_offset' → logprob: -3.8033430576324463
    4. 'offset' → logprob: -4.053343296051025
    5. 's' → logprob: -4.178343296051025
    6. 'for' → logprob: -4.803343296051025
    7. ' for' → logprob: -4.928343296051025
    8. '_candidates' → logprob: -5.428343296051025
    9. '=' → logprob: -6.053343296051025
    10. ' offsets' → logprob: -6.178343296051025

Token 547: ' not' (ID: 625)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.8495420813560486
    2. 'try' → logprob: -1.2245421409606934
    3. 'check' → logprob: -2.0995421409606934
    4. ' test' → logprob: -2.5995421409606934
    5. 'p' → logprob: -3.0995421409606934
    6. 'se' → logprob: -3.8495421409606934
    7. ' try' → logprob: -5.224542140960693
    8. ' p' → logprob: -6.099542140960693
    9. ' check' → logprob: -6.099542140960693
    10. 'pass' → logprob: -6.849542140960693

Token 548: ' cross' (ID: 8088)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.658174991607666
    2. 'pass' → logprob: -0.783174991607666
    3. 'cross' → logprob: -4.533174991607666
    4. ' cross' → logprob: -5.033174991607666
    5. ' be' → logprob: -5.783174991607666
    6. ' equal' → logprob: -6.408174991607666
    7. 'equal' → logprob: -6.908174991607666
    8. 'be' → logprob: -7.283174991607666
    9. ' intersect' → logprob: -7.283174991607666
    10. ' overlap' → logprob: -8.033174514770508

Token 549: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.16711045801639557
    2. ' points' → logprob: -2.6671104431152344
    3. ' the' → logprob: -4.292110443115234
    4. 'pro' → logprob: -4.542110443115234
    5. 'the' → logprob: -4.667110443115234
    6. 'p' → logprob: -4.792110443115234
    7. '=' → logprob: -5.292110443115234
    8. '(points' → logprob: -5.417110443115234
    9. ' =' → logprob: -5.542110443115234
    10. 's' → logprob: -5.542110443115234

Token 550: ' i' (ID: 575)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8665570020675659
    2. 'offset' → logprob: -1.741557002067566
    3. ' =' → logprob: -2.1165571212768555
    4. ' for' → logprob: -2.1165571212768555
    5. '_offsets' → logprob: -2.8665571212768555
    6. 'for' → logprob: -3.3665571212768555
    7. ' offsets' → logprob: -3.3665571212768555
    8. ':' → logprob: -4.4915571212768555
    9. ' offset' → logprob: -4.8665571212768555
    10. 'offs' → logprob: -5.3665571212768555

Token 551: ',j' (ID: 22712)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.4020050764083862
    2. ' and' → logprob: -1.5270050764083862
    3. ' -' → logprob: -2.152005195617676
    4. ' or' → logprob: -2.152005195617676
    5. 'and' → logprob: -2.527005195617676
    6. ',' → logprob: -2.902005195617676
    7. 'points' → logprob: -3.277005195617676
    8. '_min' → logprob: -3.402005195617676
    9. ':' → logprob: -4.027005195617676
    10. ')' → logprob: -4.152005195617676

Token 552: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5762531161308289
    2. ' for' → logprob: -1.4512531757354736
    3. 'offset' → logprob: -2.4512531757354736
    4. '
' → logprob: -3.2012531757354736
    5. ' offsets' → logprob: -3.5762531757354736
    6. 'for' → logprob: -3.7012531757354736
    7. '   ' → logprob: -5.0762529373168945
    8. '_offsets' → logprob: -5.4512529373168945
    9. ' offset' → logprob: -5.7012529373168945
    10. ':' → logprob: -5.9512529373168945

Token 553: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07288327813148499
    2. ' for' → logprob: -3.447883367538452
    3. ' offsets' → logprob: -4.072883129119873
    4. 'offset' → logprob: -4.447883129119873
    5. '
' → logprob: -5.822883129119873
    6. 'for' → logprob: -5.947883129119873
    7. ' offset' → logprob: -6.572883129119873
    8. '_offsets' → logprob: -7.447883129119873
    9. '            
' → logprob: -7.822883129119873
    10. ' possible' → logprob: -8.197883605957031

Token 554: ' #' (ID: 1069)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.9627554416656494
    2. ' offsets' → logprob: -1.3377554416656494
    3. ' for' → logprob: -1.5877554416656494
    4. 'for' → logprob: -2.0877554416656494
    5. '           ' → logprob: -4.58775520324707
    6. ' offset' → logprob: -4.58775520324707
    7. 'candidate' → logprob: -6.08775520324707
    8. 'c' → logprob: -6.58775520324707
    9. ' candidate' → logprob: -6.83775520324707
    10. 'possible' → logprob: -7.58775520324707

Token 555: ' We' (ID: 1416)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.18692369759082794
    2. 'for' → logprob: -1.9369237422943115
    3. '           ' → logprob: -4.811923503875732
    4. ' offsets' → logprob: -4.811923503875732
    5. ' for' → logprob: -5.061923503875732
    6. 'candidate' → logprob: -6.436923503875732
    7. 'c' → logprob: -6.686923503875732
    8. 'possible' → logprob: -7.936923503875732
    9. ' offset' → logprob: -8.31192398071289
    10. 'offs' → logprob: -9.06192398071289

Token 556: ' can' (ID: 665)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2266196012496948
    2. ' =' → logprob: -1.7266196012496948
    3. 'for' → logprob: -1.8516196012496948
    4. '_min' → logprob: -2.4766197204589844
    5. 'continue' → logprob: -2.6016197204589844
    6. ' continue' → logprob: -3.3516197204589844
    7. ' can' → logprob: -3.7266197204589844
    8. ' for' → logprob: -3.8516197204589844
    9. '_offsets' → logprob: -3.9766197204589844
    10. 'min' → logprob: -4.351619720458984

Token 557: ' try' (ID: 2075)
  Prédit: ' try'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.16886146366596222
    2. 'try' → logprob: -1.9188615083694458
    3. ' consider' → logprob: -6.168861389160156
    4. ' continue' → logprob: -6.168861389160156
    5. 'consider' → logprob: -6.543861389160156
    6. ' test' → logprob: -7.043861389160156
    7. 'continue' → logprob: -7.043861389160156
    8. ' check' → logprob: -7.293861389160156
    9. 'check' → logprob: -8.918861389160156
    10. 'test' → logprob: -8.918861389160156

Token 558: ' lines' (ID: 8698)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.1618071049451828
    2. ' offset' → logprob: -2.786807060241699
    3. ' offsets' → logprob: -3.286807060241699
    4. 'p' → logprob: -3.786807060241699
    5. ' p' → logprob: -3.911807060241699
    6. 'for' → logprob: -5.661807060241699
    7. ' for' → logprob: -5.911807060241699
    8. '   ' → logprob: -8.0368070602417
    9. 'c' → logprob: -8.2868070602417
    10. '[offset' → logprob: -8.7868070602417

Token 559: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.1711963713169098
    2. ' =' → logprob: -2.921196460723877
    3. '=' → logprob: -3.796196460723877
    4. '           ' → logprob: -4.171196460723877
    5. ' just' → logprob: -4.171196460723877
    6. 'at' → logprob: -4.171196460723877
    7. ' for' → logprob: -4.921196460723877
    8. 'offset' → logprob: -5.296196460723877
    9. ' below' → logprob: -5.421196460723877
    10. 'for' → logprob: -5.421196460723877

Token 560: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.14335408806800842
    2. ' p' → logprob: -2.0183541774749756
    3. 'offset' → logprob: -7.8933539390563965
    4. ' ' → logprob: -9.518354415893555
    5. 'positions' → logprob: -10.643354415893555
    6. 'pro' → logprob: -10.643354415893555
    7. '   ' → logprob: -10.893354415893555
    8. ' (' → logprob: -10.893354415893555
    9. '(p' → logprob: -10.893354415893555
    10. '[' → logprob: -11.018354415893555

Token 561: ' =' (ID: 314)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.025098346173763275
    2. '_max' → logprob: -3.7750983238220215
    3. 'min' → logprob: -6.5250983238220215
    4. 'max' → logprob: -8.90009880065918
    5. '_candidate' → logprob: -9.15009880065918
    6. '_candidates' → logprob: -10.15009880065918
    7. '_offset' → logprob: -10.40009880065918
    8. ' =' → logprob: -11.15009880065918
    9. '_offsets' → logprob: -12.15009880065918
    10. '=min' → logprob: -12.40009880065918

Token 562: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00020473242329899222
    2. ' p' → logprob: -8.500205039978027
    3. '(p' → logprob: -14.000205039978027
    4. '   ' → logprob: -15.500205039978027
    5. ' ' → logprob: -16.00020408630371
    6. '<p' → logprob: -16.75020408630371
    7. '[p' → logprob: -17.00020408630371
    8. '{' → logprob: -17.75020408630371
    9. ' (' → logprob: -17.87520408630371
    10. '```' → logprob: -17.87520408630371

Token 563: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.07891722023487091
    2. '_max' → logprob: -2.5789172649383545
    3. 'min' → logprob: -10.828917503356934
    4. 'max' → logprob: -11.828917503356934
    5. '_' → logprob: -16.828916549682617
    6. '_m' → logprob: -17.453916549682617
    7. '_MIN' → logprob: -17.578916549682617
    8. '_mid' → logprob: -18.078916549682617
    9. 's' → logprob: -18.203916549682617
    10. 'Min' → logprob: -18.453916549682617

Token 564: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11288343369960785
    2. '-' → logprob: -2.2378833293914795
    3. ' ' → logprob: -9.862883567810059
    4. 'p' → logprob: -13.112883567810059
    5. '   ' → logprob: -13.612883567810059
    6. '1' → logprob: -14.237883567810059
    7. ',' → logprob: -14.237883567810059
    8. '+' → logprob: -14.550383567810059
    9. '
' → logprob: -14.612883567810059
    10. ' p' → logprob: -15.050383567810059

Token 565: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.625009536743164
    3. '0' → logprob: -15.375009536743164
    4. '   ' → logprob: -18.250009536743164
    5. '100' → logprob: -20.500009536743164
    6. '
' → logprob: -20.625009536743164
    7. '           ' → logprob: -20.875009536743164
    8. '.' → logprob: -21.500009536743164
    9. '2' → logprob: -21.500009536743164
    10. '```' → logprob: -21.625009536743164

Token 566: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '0' → logprob: -19.125001907348633
    4. '   ' → logprob: -19.250001907348633
    5. '100' → logprob: -22.500001907348633
    6. '           ' → logprob: -23.375001907348633
    7. '
' → logprob: -23.375001907348633
    8. '=' → logprob: -24.000001907348633
    9. '2' → logprob: -24.125001907348633
    10. '  ' → logprob: -24.375001907348633

Token 567: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.021294066682457924
    2. '1' → logprob: -4.021294116973877
    3. '0' → logprob: -5.771294116973877
    4. ' .' → logprob: -11.771293640136719
    5. '5' → logprob: -11.896293640136719
    6. ' ' → logprob: -12.021293640136719
    7. ',' → logprob: -13.396293640136719
    8. '   ' → logprob: -15.771293640136719
    9. '2' → logprob: -15.896293640136719
    10. '.
' → logprob: -16.02129364013672

Token 568: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.036179836839437485
    2. '1' → logprob: -3.411179780960083
    3. '000' → logprob: -6.161180019378662
    4. '001' → logprob: -8.286179542541504
    5. '01' → logprob: -9.036179542541504
    6. '0' → logprob: -10.411179542541504
    7. '   ' → logprob: -12.536179542541504
    8. '2' → logprob: -12.536179542541504
    9. '500' → logprob: -13.161179542541504
    10. '```' → logprob: -13.786179542541504

Token 569: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8011766076087952
    2. ' and' → logprob: -0.9261766076087952
    3. '           ' → logprob: -2.3011765480041504
    4. ' ,' → logprob: -4.05117654800415
    5. ' or' → logprob: -4.17617654800415
    6. '   ' → logprob: -5.17617654800415
    7. 'and' → logprob: -5.80117654800415
    8. ' ' → logprob: -5.92617654800415
    9. ' -' → logprob: -6.30117654800415
    10. ')' → logprob: -6.42617654800415

Token 570: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.14269673824310303
    2. ' p' → logprob: -2.0176968574523926
    3. ' ' → logprob: -11.517696380615234
    4. '   ' → logprob: -12.392696380615234
    5. '0' → logprob: -12.642696380615234
    6. '(p' → logprob: -13.392696380615234
    7. ' (' → logprob: -14.142696380615234
    8. '    ' → logprob: -14.517696380615234
    9. '  ' → logprob: -14.517696380615234
    10. '
' → logprob: -14.892696380615234

Token 571: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.576504647731781
    2. '=' → logprob: -0.826504647731781
    3. '_max' → logprob: -7.826504707336426
    4. ' p' → logprob: -10.076504707336426
    5. 'p' → logprob: -10.201504707336426
    6. '=p' → logprob: -10.326504707336426
    7. ' ' → logprob: -10.576504707336426
    8. 'max' → logprob: -10.701504707336426
    9. '_' → logprob: -13.451504707336426
    10. '_min' → logprob: -14.076504707336426

Token 572: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.20141470432281494
    2. ' p' → logprob: -1.701414704322815
    3. ' ' → logprob: -14.201415061950684
    4. '   ' → logprob: -15.576415061950684
    5. '(p' → logprob: -15.951415061950684
    6. '           ' → logprob: -16.076414108276367
    7. '  ' → logprob: -16.951414108276367
    8. '	p' → logprob: -16.951414108276367
    9. ' ' → logprob: -17.201414108276367
    10. '    ' → logprob: -17.201414108276367

Token 573: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.008657476864755154
    2. 'max' → logprob: -4.758657455444336
    3. 'Max' → logprob: -10.383657455444336
    4. '_min' → logprob: -11.633657455444336
    5. '_MAX' → logprob: -13.633657455444336
    6. '+' → logprob: -13.758657455444336
    7. 'p' → logprob: -15.383657455444336
    8. 'MAX' → logprob: -15.758657455444336
    9. 's' → logprob: -16.133657455444336
    10. ' max' → logprob: -16.133657455444336

Token 574: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03365953266620636
    2. '+' → logprob: -3.4086594581604004
    3. ' ' → logprob: -11.908659934997559
    4. ' plus' → logprob: -12.283659934997559
    5. '```' → logprob: -14.408659934997559
    6. ' ' → logprob: -15.283659934997559
    7. '   ' → logprob: -15.908659934997559
    8. '.' → logprob: -15.971159934997559
    9. ' +
' → logprob: -15.971159934997559
    10. 'import' → logprob: -16.283658981323242

Token 575: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20141352713108063
    2. ' ' → logprob: -1.7014135122299194
    3. '1' → logprob: -16.326414108276367
    4. '.' → logprob: -16.326414108276367
    5. ' ' → logprob: -16.951414108276367
    6. '```' → logprob: -17.326414108276367
    7. '   ' → logprob: -17.576414108276367
    8. '`' → logprob: -18.701414108276367
    9. ' .' → logprob: -18.826414108276367
    10. '  ' → logprob: -18.888914108276367

Token 576: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '.' → logprob: -17.500123977661133
    4. '   ' → logprob: -18.125123977661133
    5. '```' → logprob: -18.250123977661133
    6. '<|end|>' → logprob: -19.125123977661133
    7. '           ' → logprob: -19.375123977661133
    8. '۰' → logprob: -19.625123977661133
    9. '`' → logprob: -20.250123977661133
    10. '1' → logprob: -20.500123977661133

Token 577: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.811348480870947e-05
    2. ' .' → logprob: -10.00004768371582
    3. '5' → logprob: -13.37504768371582
    4. '1' → logprob: -14.75004768371582
    5. '0' → logprob: -15.00004768371582
    6. ' ' → logprob: -16.12504768371582
    7. '
' → logprob: -17.25004768371582
    8. '2' → logprob: -17.37504768371582
    9. '```' → logprob: -17.50004768371582
    10. '   ' → logprob: -17.75004768371582

Token 578: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.625001907348633
    3. '0' → logprob: -15.500001907348633
    4. '   ' → logprob: -15.750001907348633
    5. '```' → logprob: -15.750001907348633
    6. '1' → logprob: -16.812501907348633
    7. ''' → logprob: -17.062501907348633
    8. '
' → logprob: -17.437501907348633
    9. '"' → logprob: -17.562501907348633
    10. '`' → logprob: -17.562501907348633

Token 579: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11425136029720306
    2. '
' → logprob: -2.4892513751983643
    3. ' for' → logprob: -4.489251136779785
    4. 'for' → logprob: -4.489251136779785
    5. '            
' → logprob: -6.239251136779785
    6. 'offset' → logprob: -8.739251136779785
    7. ',' → logprob: -9.614251136779785
    8. '		' → logprob: -10.114251136779785
    9. '       ' → logprob: -10.489251136779785
    10. ' offsets' → logprob: -10.489251136779785

Token 580: 'offset' (ID: 6680)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5028908848762512
    2. '):' → logprob: -1.1278908252716064
    3. '):
' → logprob: -3.2528908252716064
    4. ' )' → logprob: -4.3778910636901855
    5. ')
' → logprob: -5.0028910636901855
    6. '):

' → logprob: -5.2528910636901855
    7. '0' → logprob: -6.5028910636901855
    8. ':' → logprob: -6.6278910636901855
    9. ' ):' → logprob: -6.7528910636901855
    10. ' ):
' → logprob: -7.2528910636901855

Token 581: ' sufficiently' (ID: 77799)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5258734822273254
    2. ' )' → logprob: -1.6508734226226807
    3. ' -' → logprob: -2.1508734226226807
    4. 's' → logprob: -3.4008734226226807
    5. ' ' → logprob: -4.15087366104126
    6. ' values' → logprob: -4.65087366104126
    7. '-' → logprob: -4.77587366104126
    8. ',' → logprob: -4.77587366104126
    9. 'values' → logprob: -5.40087366104126
    10. '   ' → logprob: -5.40087366104126

Token 582: ' small' (ID: 3291)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6678014993667603
    2. ' )' → logprob: -2.1678013801574707
    3. 'large' → logprob: -2.1678013801574707
    4. 'small' → logprob: -2.5428013801574707
    5. ' away' → logprob: -3.2928013801574707
    6. ' large' → logprob: -3.7928013801574707
    7. 'to' → logprob: -3.9178013801574707
    8. ' small' → logprob: -4.042801380157471
    9. 'far' → logprob: -4.167801380157471
    10. ' to' → logprob: -4.292801380157471

Token 583: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2716960310935974
    2. ')' → logprob: -2.021696090698242
    3. '):' → logprob: -2.896696090698242
    4. ':' → logprob: -3.896696090698242
    5. '):
' → logprob: -4.896696090698242
    6. ' to' → logprob: -5.771696090698242
    7. ']' → logprob: -5.896696090698242
    8. '   ' → logprob: -6.021696090698242
    9. ' )' → logprob: -6.146696090698242
    10. '       ' → logprob: -6.646696090698242

Token 584: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31292158365249634
    2. '
' → logprob: -1.4379215240478516
    3. ' for' → logprob: -4.062921524047852
    4. '            
' → logprob: -4.562921524047852
    5. 'for' → logprob: -6.312921524047852
    6. '  
' → logprob: -7.812921524047852
    7. '<|end|>' → logprob: -8.687921524047852
    8. ' 
' → logprob: -8.687921524047852
    9. ',' → logprob: -8.937921524047852
    10. '
' → logprob: -9.062921524047852

Token 585: ' candidate' (ID: 17098)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8442276120185852
    2. 'for' → logprob: -1.0942275524139404
    3. ' for' → logprob: -1.4692275524139404
    4. '
' → logprob: -5.9692277908325195
    5. 'offset' → logprob: -6.5942277908325195
    6. '            
' → logprob: -7.7192277908325195
    7. '       ' → logprob: -8.59422779083252
    8. ' offsets' → logprob: -8.96922779083252
    9. '   ' → logprob: -9.09422779083252
    10. '            ' → logprob: -9.84422779083252

Token 586: '_ps' (ID: 46309)
  Prédit: '_offsets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_offsets' → logprob: -0.029899979010224342
    2. 's' → logprob: -3.779900074005127
    3. '_lines' → logprob: -5.029900074005127
    4. '_line' → logprob: -10.654899597167969
    5. '_p' → logprob: -11.029899597167969
    6. '_positions' → logprob: -11.279899597167969
    7. '_pro' → logprob: -11.404899597167969
    8. '_' → logprob: -11.529899597167969
    9. '_values' → logprob: -11.779899597167969
    10. '_offset' → logprob: -13.029899597167969

Token 587: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04868149757385254
    2. '=' → logprob: -3.0486814975738525
    3. 's' → logprob: -9.298681259155273
    4. ' =[' → logprob: -13.673681259155273
    5. '=[' → logprob: -14.173681259155273
    6. '[' → logprob: -15.298681259155273
    7. '=[
' → logprob: -15.923681259155273
    8. ' ' → logprob: -16.173681259155273
    9. ' =
' → logprob: -16.673681259155273
    10. ')' → logprob: -16.798681259155273

Token 588: ' [' (ID: 723)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.07907826453447342
    2. ' [' → logprob: -2.579078197479248
    3. '[' → logprob: -8.579078674316406
    4. '[
' → logprob: -15.329078674316406
    5. '   ' → logprob: -16.704078674316406
    6. '[a' → logprob: -17.079078674316406
    7. ' ' → logprob: -17.579078674316406
    8. '[c' → logprob: -17.829078674316406
    9. 'p' → logprob: -18.079078674316406
    10. ' ' → logprob: -18.204078674316406

Token 589: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00018029935017693788
    2. ' p' → logprob: -8.6251802444458
    3. '   ' → logprob: -14.2501802444458
    4. '(p' → logprob: -17.375181198120117
    5. ' ' → logprob: -17.750181198120117
    6. '	p' → logprob: -18.375181198120117
    7. '  ' → logprob: -19.250181198120117
    8. 'pi' → logprob: -19.375181198120117
    9. '           ' → logprob: -19.625181198120117
    10. '     ' → logprob: -20.250181198120117

Token 590: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -8.637786231702194e-05
    2. '_max' → logprob: -9.500086784362793
    3. 'min' → logprob: -11.375086784362793
    4. ' _' → logprob: -17.750085830688477
    5. '_' → logprob: -18.500085830688477
    6. '_MIN' → logprob: -19.000085830688477
    7. '```' → logprob: -19.250085830688477
    8. 'max' → logprob: -19.375085830688477
    9. '_m' → logprob: -19.500085830688477
    10. '_minus' → logprob: -19.875085830688477

Token 591: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.003445641603320837
    2. '-' → logprob: -5.753445625305176
    3. ' ' → logprob: -8.253445625305176
    4. ')' → logprob: -12.503445625305176
    5. '<|end|>' → logprob: -13.878445625305176
    6. ',' → logprob: -14.503445625305176
    7. ' -
' → logprob: -14.503445625305176
    8. ' ' → logprob: -14.878445625305176
    9. '```' → logprob: -15.378445625305176
    10. ']' → logprob: -15.815945625305176

Token 592: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06196802109479904
    2. ' ' → logprob: -2.8119680881500244
    3. '.' → logprob: -15.686967849731445
    4. '1' → logprob: -16.561967849731445
    5. '   ' → logprob: -16.811967849731445
    6. ' ' → logprob: -17.061967849731445
    7. ' .' → logprob: -17.936967849731445
    8. ' 
' → logprob: -18.624467849731445
    9. '  ' → logprob: -18.874467849731445
    10. '```' → logprob: -19.124467849731445

Token 593: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015920029545668513
    2. ' ' → logprob: -8.75015926361084
    3. '.' → logprob: -14.25015926361084
    4. '1' → logprob: -18.500158309936523
    5. '   ' → logprob: -18.500158309936523
    6. ' .' → logprob: -19.375158309936523
    7. '```' → logprob: -20.250158309936523
    8. '
' → logprob: -20.250158309936523
    9. ' 
' → logprob: -20.375158309936523
    10. ',' → logprob: -20.500158309936523

Token 594: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.676292231422849e-05
    2. ' .' → logprob: -11.625017166137695
    3. '0' → logprob: -12.375017166137695
    4. '1' → logprob: -13.500017166137695
    5. '           ' → logprob: -14.625017166137695
    6. '5' → logprob: -15.000017166137695
    7. '```' → logprob: -15.500017166137695
    8. '`.' → logprob: -16.000017166137695
    9. '‌.' → logprob: -16.125017166137695
    10. '.
' → logprob: -16.125017166137695

Token 595: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -16.6875
    4. '   ' → logprob: -16.875
    5. '0' → logprob: -17.375
    6. '٥' → logprob: -17.4375
    7. '500' → logprob: -18.4375
    8. '۵' → logprob: -18.4375
    9. '
' → logprob: -19.0
    10. '৫' → logprob: -19.0625

Token 596: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002641175640746951
    2. ' ,' → logprob: -6.252641201019287
    3. ',p' → logprob: -7.377641201019287
    4. ',
' → logprob: -9.377640724182129
    5. ',c' → logprob: -14.002640724182129
    6. 'p' → logprob: -14.252640724182129
    7. ' ,
' → logprob: -15.627640724182129
    8. ',
' → logprob: -15.877640724182129
    9. ' p' → logprob: -16.127641677856445
    10. ',

' → logprob: -16.502641677856445

Token 597: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01814994215965271
    2. ' p' → logprob: -4.0181498527526855
    3. ' ' → logprob: -18.018150329589844
    4. '   ' → logprob: -18.393150329589844
    5. '	p' → logprob: -19.143150329589844
    6. ' ' → logprob: -19.643150329589844
    7. '  ' → logprob: -20.268150329589844
    8. '    ' → logprob: -20.268150329589844
    9. ''p' → logprob: -21.768150329589844
    10. '_p' → logprob: -21.893150329589844

Token 598: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -3.7385154428193346e-05
    2. 'max' → logprob: -10.25003719329834
    3. '_min' → logprob: -14.12503719329834
    4. 'Max' → logprob: -14.50003719329834
    5. '_MAX' → logprob: -14.75003719329834
    6. '+' → logprob: -15.12503719329834
    7. 'p' → logprob: -16.875038146972656
    8. ' _' → logprob: -17.500038146972656
    9. '_Max' → logprob: -18.000038146972656
    10. '_' → logprob: -18.250038146972656

Token 599: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1602281779050827
    2. '+' → logprob: -1.9102281332015991
    3. ' ' → logprob: -12.78522777557373
    4. ' plus' → logprob: -13.91022777557373
    5. '```' → logprob: -16.660228729248047
    6. ' ' → logprob: -16.785228729248047
    7. ' +
' → logprob: -16.785228729248047
    8. '<|end|>' → logprob: -17.160228729248047
    9. '＋' → logprob: -17.285228729248047
    10. '1' → logprob: -17.410228729248047

Token 600: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005530327325686812
    2. ' ' → logprob: -7.500553131103516
    3. '   ' → logprob: -18.875553131103516
    4. '```' → logprob: -19.250553131103516
    5. '.' → logprob: -19.750553131103516
    6. '۰' → logprob: -20.250553131103516
    7. '  ' → logprob: -20.688053131103516
    8. ' ' → logprob: -20.938053131103516
    9. '`' → logprob: -21.000553131103516
    10. '-' → logprob: -21.063053131103516

Token 601: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -19.625019073486328
    4. '.' → logprob: -19.875019073486328
    5. '1' → logprob: -20.750019073486328
    6. '```' → logprob: -20.875019073486328
    7. '۰' → logprob: -21.187519073486328
    8. '  ' → logprob: -21.312519073486328
    9. '-' → logprob: -21.437519073486328
    10. ' ' → logprob: -22.000019073486328

Token 602: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1472419600977446e-06
    2. '5' → logprob: -14.125000953674316
    3. ' .' → logprob: -16.000001907348633
    4. '`.' → logprob: -16.250001907348633
    5. '```' → logprob: -16.875001907348633
    6. '           ' → logprob: -17.000001907348633
    7. '.
' → logprob: -17.250001907348633
    8. '1' → logprob: -17.625001907348633
    9. '   ' → logprob: -17.875001907348633
    10. '0' → logprob: -18.000001907348633

Token 603: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.375
    3. '0' → logprob: -16.25
    4. '۵' → logprob: -17.625
    5. '
' → logprob: -19.0
    6. '٥' → logprob: -19.125
    7. ' ' → logprob: -19.5625
    8. '4' → logprob: -19.625
    9. '...' → logprob: -19.625
    10. '৫' → logprob: -19.625

Token 604: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004375830467324704
    2. '           ' → logprob: -8.75043773651123
    3. ']

' → logprob: -8.87543773651123
    4. ']
' → logprob: -9.00043773651123
    5. ' ]' → logprob: -11.37543773651123
    6. '       ' → logprob: -13.37543773651123
    7. '   ' → logprob: -13.50043773651123
    8. ']

' → logprob: -14.62543773651123
    9. ')' → logprob: -15.12543773651123
    10. '               ' → logprob: -15.37543773651123

Token 605: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013186928117647767
    2. 'for' → logprob: -7.376318454742432
    3. '       ' → logprob: -7.626318454742432
    4. '```' → logprob: -9.12631893157959
    5. ' for' → logprob: -9.37631893157959
    6. '   ' → logprob: -11.75131893157959
    7. '               ' → logprob: -13.87631893157959
    8. '	       ' → logprob: -14.00131893157959
    9. '            
' → logprob: -15.50131893157959
    10. '          ' → logprob: -15.75131893157959

Token 606: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0027029928751289845
    2. ' for' → logprob: -6.5027031898498535
    3. '           ' → logprob: -6.7527031898498535
    4. '```' → logprob: -10.502702713012695
    5. '       ' → logprob: -12.377702713012695
    6. '   ' → logprob: -15.127702713012695
    7. '``' → logprob: -16.127702713012695
    8. '               ' → logprob: -17.002702713012695
    9. 'found' → logprob: -17.002702713012695
    10. '	for' → logprob: -17.377702713012695

Token 607: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01641872338950634
    2. ' p' → logprob: -4.141418933868408
    3. 'candidate' → logprob: -8.01641845703125
    4. ' candidate' → logprob: -10.01641845703125
    5. 'offset' → logprob: -12.14141845703125
    6. 'c' → logprob: -14.01641845703125
    7. '   ' → logprob: -14.14141845703125
    8. ' ' → logprob: -14.14141845703125
    9. '	p' → logprob: -14.26641845703125
    10. 'pos' → logprob: -15.26641845703125

Token 608: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12692873179912567
    2. 'in' → logprob: -2.1269288063049316
    3. '	in' → logprob: -15.376928329467773
    4. ' ' → logprob: -15.751928329467773
    5. '_in' → logprob: -16.376928329467773
    6. 'n' → logprob: -16.751928329467773
    7. 'i' → logprob: -17.251928329467773
    8. '  ' → logprob: -17.251928329467773
    9. 'p' → logprob: -17.376928329467773
    10. '```' → logprob: -17.626928329467773

Token 609: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.0009115827269852161
    2. ' candidate' → logprob: -7.000911712646484
    3. '(candidate' → logprob: -16.375911712646484
    4. '_candidate' → logprob: -19.750911712646484
    5. 'c' → logprob: -20.000911712646484
    6. 'Candidate' → logprob: -20.875911712646484
    7. 'cand' → logprob: -21.250911712646484
    8. ' candidat' → logprob: -22.250911712646484
    9. 'andidate' → logprob: -22.375911712646484
    10. '   ' → logprob: -22.500911712646484

Token 610: '_ps' (ID: 46309)
  Prédit: '_ps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ps' → logprob: -5.2524021157296374e-05
    2. 's' → logprob: -10.000052452087402
    3. 'ps' → logprob: -12.125052452087402
    4. '_p' → logprob: -13.625052452087402
    5. '_s' → logprob: -15.875052452087402
    6. '```' → logprob: -16.62505340576172
    7. '_ts' → logprob: -17.25005340576172
    8. '_' → logprob: -17.62505340576172
    9. '	ps' → logprob: -17.87505340576172
    10. 'Ps' → logprob: -18.00005340576172

Token 611: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029236819595098495
    2. ':
' → logprob: -3.9042367935180664
    3. '               ' → logprob: -4.779236793518066
    4. '           ' → logprob: -9.654236793518066
    5. ':

' → logprob: -9.904236793518066
    6. ',' → logprob: -10.154236793518066
    7. '       ' → logprob: -10.279236793518066
    8. '<|end|>' → logprob: -11.279236793518066
    9. '):
' → logprob: -11.529236793518066
    10. ' :' → logprob: -12.154236793518066

Token 612: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001297258073464036
    2. ' valid' → logprob: -8.001296997070312
    3. 'valid' → logprob: -8.501296997070312
    4. 'all' → logprob: -9.126296997070312
    5. ' points' → logprob: -9.126296997070312
    6. ' all' → logprob: -9.251296997070312
    7. '```' → logprob: -9.501296997070312
    8. 'points' → logprob: -9.751296997070312
    9. ' if' → logprob: -9.876296997070312
    10. '           ' → logprob: -10.001296997070312

Token 613: ' #' (ID: 1069)
  Prédit: 'black'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'black' → logprob: -0.8272886276245117
    2. '               ' → logprob: -0.9522886276245117
    3. 'colors' → logprob: -2.0772886276245117
    4. 'all' → logprob: -3.9522886276245117
    5. '                   ' → logprob: -4.452288627624512
    6. 'se' → logprob: -5.577288627624512
    7. 'side' → logprob: -5.577288627624512
    8. ' black' → logprob: -5.952288627624512
    9. 'left' → logprob: -6.202288627624512
    10. 'color' → logprob: -6.202288627624512

Token 614: ' For' (ID: 2214)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.5373703241348267
    2. 'black' → logprob: -2.412370204925537
    3. 'colors' → logprob: -2.412370204925537
    4. 's' → logprob: -2.787370204925537
    5. 'pos' → logprob: -2.912370204925537
    6. 'sign' → logprob: -3.162370204925537
    7. 'labels' → logprob: -3.537370204925537
    8. 'color' → logprob: -4.662370204925537
    9. 'left' → logprob: -4.912370204925537
    10. 'se' → logprob: -5.162370204925537

Token 615: ' each' (ID: 2454)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5018598437309265
    2. 'all' → logprob: -2.5018599033355713
    3. 'point' → logprob: -2.5018599033355713
    4. 'sign' → logprob: -2.6268599033355713
    5. '(x' → logprob: -3.6268599033355713
    6. ' x' → logprob: -3.8768599033355713
    7. 'color' → logprob: -3.8768599033355713
    8. 'c' → logprob: -4.126859664916992
    9. 'px' → logprob: -4.501859664916992
    10. ' all' → logprob: -4.501859664916992

Token 616: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.9835648536682129
    2. ' point' → logprob: -1.483564853668213
    3. 'x' → logprob: -1.983564853668213
    4. ' x' → logprob: -2.483564853668213
    5. '(x' → logprob: -2.858564853668213
    6. ' (' → logprob: -2.983564853668213
    7. 'color' → logprob: -4.233564853668213
    8. 'sign' → logprob: -4.233564853668213
    9. '_,' → logprob: -4.358564853668213
    10. ' color' → logprob: -5.358564853668213

Token 617: ' get' (ID: 717)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.6155609488487244
    2. '                   ' → logprob: -1.1155610084533691
    3. ':' → logprob: -2.865561008453369
    4. '_sign' → logprob: -3.615561008453369
    5. ',' → logprob: -3.740561008453369
    6. ' sign' → logprob: -4.740561008453369
    7. '               ' → logprob: -5.115561008453369
    8. ':
' → logprob: -5.615561008453369
    9. '(sign' → logprob: -6.865561008453369
    10. 'color' → logprob: -7.240561008453369

Token 618: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.005015290342271328
    2. ' signs' → logprob: -6.3800153732299805
    3. ' sign' → logprob: -6.8800153732299805
    4. 'side' → logprob: -7.0050153732299805
    5. '_sign' → logprob: -8.13001537322998
    6. 'colors' → logprob: -8.13001537322998
    7. 'color' → logprob: -8.38001537322998
    8. 'pos' → logprob: -8.50501537322998
    9. 's' → logprob: -8.75501537322998
    10. 'x' → logprob: -10.13001537322998

Token 619: ' relative' (ID: 15001)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25259649753570557
    2. ' =' → logprob: -2.752596378326416
    3. '_sign' → logprob: -3.127596378326416
    4. 's' → logprob: -3.627596378326416
    5. '=' → logprob: -3.752596378326416
    6. 'sign' → logprob: -4.252596378326416
    7. '                   ' → logprob: -4.627596378326416
    8. ':' → logprob: -4.752596378326416
    9. ' s' → logprob: -5.127596378326416
    10. '                ' → logprob: -5.127596378326416

Token 620: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.1773432195186615
    2. 'to' → logprob: -1.9273432493209839
    3. '=' → logprob: -4.177343368530273
    4. '               ' → logprob: -6.802343368530273
    5. ' =' → logprob: -8.802343368530273
    6. '_to' → logprob: -8.927343368530273
    7. ' (' → logprob: -9.552343368530273
    8. 'a' → logprob: -10.552343368530273
    9. ':' → logprob: -10.552343368530273
    10. '           ' → logprob: -10.677343368530273

Token 621: ' line' (ID: 2543)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.031124373897910118
    2. ' p' → logprob: -3.9061243534088135
    3. '(p' → logprob: -5.156124591827393
    4. 'projection' → logprob: -6.281124591827393
    5. '(pro' → logprob: -7.156124591827393
    6. ' (' → logprob: -7.281124591827393
    7. 'the' → logprob: -8.031124114990234
    8. 'pro' → logprob: -8.281124114990234
    9. ' its' → logprob: -9.156124114990234
    10. ' the' → logprob: -9.156124114990234

Token 622: ' ax' (ID: 6807)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20036223530769348
    2. ':' → logprob: -1.950362205505371
    3. '                   ' → logprob: -4.075362205505371
    4. ':
' → logprob: -5.325362205505371
    5. '                ' → logprob: -5.825362205505371
    6. '=' → logprob: -5.825362205505371
    7. ',' → logprob: -5.950362205505371
    8. '                
' → logprob: -6.450362205505371
    9. ' =' → logprob: -7.075362205505371
    10. '           ' → logprob: -7.200362205505371

Token 623: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6443256735801697
    2. '+' → logprob: -0.7693256735801697
    3. 'x' → logprob: -4.7693257331848145
    4. '               ' → logprob: -7.0193257331848145
    5. ' x' → logprob: -7.7693257331848145
    6. '*' → logprob: -7.8943257331848145
    7. ' *' → logprob: -8.019325256347656
    8. '*x' → logprob: -8.019325256347656
    9. '```' → logprob: -8.269325256347656
    10. '                   ' → logprob: -8.894325256347656

Token 624: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.00018244501552544534
    2. 'b' → logprob: -8.750182151794434
    3. '(by' → logprob: -11.125182151794434
    4. ' by' → logprob: -12.125182151794434
    5. '(b' → logprob: -13.125182151794434
    6. '(' → logprob: -14.500182151794434
    7. 'bx' → logprob: -14.750182151794434
    8. '   ' → logprob: -14.875182151794434
    9. 'ay' → logprob: -15.250182151794434
    10. ' (' → logprob: -16.37518310546875

Token 625: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2822154462337494
    2. ' +' → logprob: -1.9072154760360718
    3. ' -' → logprob: -3.0322153568267822
    4. '-' → logprob: -3.4072153568267822
    5. '+p' → logprob: -4.407215595245361
    6. '-p' → logprob: -6.157215595245361
    7. '+c' → logprob: -8.032215118408203
    8. '   ' → logprob: -8.032215118408203
    9. 'p' → logprob: -8.157215118408203
    10. '=' → logprob: -9.032215118408203

Token 626: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0006271334132179618
    2. ' p' → logprob: -7.375627040863037
    3. 'c' → logprob: -15.125627517700195
    4. '<p' → logprob: -16.625627517700195
    5. '=p' → logprob: -16.750627517700195
    6. ' ' → logprob: -17.125627517700195
    7. '=' → logprob: -17.125627517700195
    8. '_p' → logprob: -17.375627517700195
    9. '-p' → logprob: -18.125627517700195
    10. ' -' → logprob: -18.375627517700195

Token 627: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0032109846360981464
    2. ':' → logprob: -6.62821102142334
    3. ',' → logprob: -7.37821102142334
    4. ' for' → logprob: -8.25321102142334
    5. '           ' → logprob: -8.87821102142334
    6. '                
' → logprob: -8.87821102142334
    7. '=' → logprob: -9.37821102142334
    8. '                   ' → logprob: -9.62821102142334
    9. 'sign' → logprob: -9.87821102142334
    10. '<|end|>' → logprob: -10.00321102142334

Token 628: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009203340858221054
    2. '<|end|>' → logprob: -6.1342034339904785
    3. ',' → logprob: -6.3842034339904785
    4. '                   ' → logprob: -6.6342034339904785
    5. '       ' → logprob: -7.5092034339904785
    6. '           ' → logprob: -7.5092034339904785
    7. '   ' → logprob: -7.8842034339904785
    8. ':' → logprob: -7.8842034339904785
    9. '                ' → logprob: -8.00920295715332
    10. ')' → logprob: -8.25920295715332

Token 629: ' #' (ID: 1069)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.2490239292383194
    2. 'side' → logprob: -2.874023914337158
    3. 'all' → logprob: -3.124023914337158
    4. ' signs' → logprob: -3.624023914337158
    5. 's' → logprob: -3.749023914337158
    6. 'se' → logprob: -3.874023914337158
    7. '                   ' → logprob: -4.374023914337158
    8. 'positions' → logprob: -4.749023914337158
    9. '               ' → logprob: -4.874023914337158
    10. ' all' → logprob: -4.999023914337158

Token 630: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.6759408116340637
    2. ' signs' → logprob: -1.800940752029419
    3. 's' → logprob: -1.925940752029419
    4. 'side' → logprob: -2.050940752029419
    5. 'pos' → logprob: -3.675940752029419
    6. ' sides' → logprob: -4.675940990447998
    7. 'positions' → logprob: -5.925940990447998
    8. 'labels' → logprob: -6.050940990447998
    9. ' side' → logprob: -6.675940990447998
    10. 'all' → logprob: -6.675940990447998

Token 631: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.003520960221067071
    2. '=' → logprob: -5.753520965576172
    3. ' =' → logprob: -8.003520965576172
    4. ' s' → logprob: -12.878520965576172
    5. '_s' → logprob: -13.128520965576172
    6. '_' → logprob: -13.253520965576172
    7. '=[]' → logprob: -14.503520965576172
    8. '=s' → logprob: -15.128520965576172
    9. ',' → logprob: -15.253520965576172
    10. 'def' → logprob: -15.253520965576172

Token 632: ' (' (ID: 350)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.0250962972640991
    2. '1' → logprob: -1.9000962972640991
    3. '(a' → logprob: -1.9000962972640991
    4. '[a' → logprob: -2.4000964164733887
    5. 'a' → logprob: -3.0250964164733887
    6. '(lambda' → logprob: -3.0250964164733887
    7. '0' → logprob: -3.2750964164733887
    8. '[' → logprob: -3.4000964164733887
    9. '[(' → logprob: -4.150096416473389
    10. '(' → logprob: -4.275096416473389

Token 633: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0008234490524046123
    2. ' a' → logprob: -7.375823497772217
    3. '(a' → logprob: -9.125823020935059
    4. 'sign' → logprob: -10.000823020935059
    5. ')' → logprob: -11.500823020935059
    6. '[a' → logprob: -11.875823020935059
    7. '   ' → logprob: -12.000823020935059
    8. 'lambda' → logprob: -12.750823020935059
    9. 'p' → logprob: -12.875823020935059
    10. '1' → logprob: -13.125823020935059

Token 634: '*x' (ID: 46987)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12793831527233124
    2. '*' → logprob: -2.1279382705688477
    3. '*x' → logprob: -7.127938270568848
    4. '*(' → logprob: -9.252938270568848
    5. ')' → logprob: -9.627938270568848
    6. '*p' → logprob: -11.127938270568848
    7. ' ' → logprob: -11.752938270568848
    8. '*object' → logprob: -12.377938270568848
    9. '*a' → logprob: -12.627938270568848
    10. '*)' → logprob: -12.752938270568848

Token 635: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5807716250419617
    2. '+' → logprob: -0.8307716250419617
    3. '*' → logprob: -5.830771446228027
    4. ' *' → logprob: -6.955771446228027
    5. ')' → logprob: -7.705771446228027
    6. '+y' → logprob: -8.705771446228027
    7. '*x' → logprob: -9.205771446228027
    8. ' ' → logprob: -10.205771446228027
    9. '+x' → logprob: -10.330771446228027
    10. '*y' → logprob: -10.455771446228027

Token 636: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.014534716494381428
    2. ' b' → logprob: -4.264534950256348
    3. 'y' → logprob: -8.889534950256348
    4. ' y' → logprob: -9.889534950256348
    5. 'p' → logprob: -10.139534950256348
    6. ')' → logprob: -10.264534950256348
    7. '1' → logprob: -10.514534950256348
    8. '```' → logprob: -11.514534950256348
    9. ')b' → logprob: -11.639534950256348
    10. ' ' → logprob: -11.889534950256348

Token 637: '*y' (ID: 83575)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2655333876609802
    2. '*' → logprob: -2.265533447265625
    3. '*y' → logprob: -2.640533447265625
    4. ' y' → logprob: -3.390533447265625
    5. ' *' → logprob: -4.390533447265625
    6. ')' → logprob: -4.640533447265625
    7. ' -' → logprob: -6.765533447265625
    8. '-' → logprob: -7.890533447265625
    9. ' ' → logprob: -8.515533447265625
    10. ')y' → logprob: -8.640533447265625

Token 638: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07646454125642776
    2. ' -' → logprob: -2.9514646530151367
    3. '-' → logprob: -3.9514646530151367
    4. '>' → logprob: -6.701464653015137
    5. ' )' → logprob: -7.326464653015137
    6. ')-' → logprob: -10.076464653015137
    7. ')>' → logprob: -10.576464653015137
    8. '<p' → logprob: -10.701464653015137
    9. ' >' → logprob: -10.701464653015137
    10. '-)' → logprob: -10.826464653015137

Token 639: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7011650800704956
    2. ' -' → logprob: -0.7011650800704956
    3. ')' → logprob: -5.701165199279785
    4. '<|end|>' → logprob: -6.076165199279785
    5. '>' → logprob: -7.326165199279785
    6. ',' → logprob: -7.951165199279785
    7. ' <' → logprob: -8.076165199279785
    8. ' ' → logprob: -8.701165199279785
    9. '-p' → logprob: -8.701165199279785
    10. ' >' → logprob: -8.826165199279785

Token 640: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.011047814972698689
    2. ' p' → logprob: -4.511047840118408
    3. '(p' → logprob: -17.51104736328125
    4. ' ' → logprob: -17.63604736328125
    5. '<|end|>' → logprob: -18.63604736328125
    6. '	p' → logprob: -18.88604736328125
    7. ' (' → logprob: -19.76104736328125
    8. '
' → logprob: -20.01104736328125
    9. '<p' → logprob: -20.13604736328125
    10. '```' → logprob: -20.38604736328125

Token 641: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.131384015083313
    2. '<|end|>' → logprob: -2.6313838958740234
    3. '           ' → logprob: -4.381383895874023
    4. '<|end|>' → logprob: -4.881383895874023
    5. ')' → logprob: -5.006383895874023
    6. ' for' → logprob: -5.006383895874023
    7. ' if' → logprob: -5.756383895874023
    8. ' ' → logprob: -6.381383895874023
    9. '=' → logprob: -6.381383895874023
    10. ',' → logprob: -6.756383895874023

Token 642: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0032285754568874836
    2. ' for' → logprob: -5.878228664398193
    3. 'for' → logprob: -8.878228187561035
    4. '           ' → logprob: -9.753228187561035
    5. ',' → logprob: -10.253228187561035
    6. '```' → logprob: -10.378228187561035
    7. '                
' → logprob: -10.753228187561035
    8. '<|end|>' → logprob: -11.003228187561035
    9. ')' → logprob: -11.253228187561035
    10. '                   ' → logprob: -11.253228187561035

Token 643: ' signs' (ID: 17424)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.9892248511314392
    2. 'sign' → logprob: -1.364224910736084
    3. ' all' → logprob: -2.239224910736084
    4. ' signs' → logprob: -2.614224910736084
    5. '               ' → logprob: -2.864224910736084
    6. 'side' → logprob: -3.114224910736084
    7. 'se' → logprob: -3.364224910736084
    8. 's' → logprob: -3.989224910736084
    9. ' side' → logprob: -4.614224910736084
    10. 'counts' → logprob: -5.239224910736084

Token 644: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889099419116974
    2. '=' → logprob: -2.5788910388946533
    3. '[' → logprob: -14.828890800476074
    4. 's' → logprob: -15.328890800476074
    5. '=[]' → logprob: -15.578890800476074
    6. ')' → logprob: -15.953890800476074
    7. ' =[' → logprob: -16.20389175415039
    8. ',' → logprob: -16.70389175415039
    9. '.append' → logprob: -16.95389175415039
    10. '=[' → logprob: -17.45389175415039

Token 645: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.16728252172470093
    2. '[a' → logprob: -1.9172825813293457
    3. '[' → logprob: -5.167282581329346
    4. ' [' → logprob: -7.417282581329346
    5. ' [(' → logprob: -7.417282581329346
    6. '[((' → logprob: -9.042282104492188
    7. '[A' → logprob: -11.417282104492188
    8. '[]' → logprob: -14.042282104492188
    9. '[s' → logprob: -15.042282104492188
    10. '[p' → logprob: -15.292282104492188

Token 646: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5041641592979431
    2. ' for' → logprob: -1.004164218902588
    3. 'for' → logprob: -3.879164218902588
    4. '[' → logprob: -4.879164218902588
    5. ' [' → logprob: -7.754164218902588
    6. ' (' → logprob: -9.00416374206543
    7. '           ' → logprob: -9.00416374206543
    8. '```' → logprob: -9.12916374206543
    9. '[
' → logprob: -9.62916374206543
    10. ' =' → logprob: -9.75416374206543

Token 647: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07199082523584366
    2. ' for' → logprob: -2.821990728378296
    3. '               ' → logprob: -4.696990966796875
    4. '                   ' → logprob: -7.446990966796875
    5. '           ' → logprob: -9.446990966796875
    6. '[' → logprob: -9.571990966796875
    7. '   ' → logprob: -10.071990966796875
    8. '```' → logprob: -10.571990966796875
    9. '       ' → logprob: -11.071990966796875
    10. '                       ' → logprob: -11.821990966796875

Token 648: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.047235261648893356
    2. 'x' → logprob: -3.1722352504730225
    3. ' (' → logprob: -5.922235488891602
    4. '(_,' → logprob: -6.672235488891602
    5. '(' → logprob: -8.922235488891602
    6. ' x' → logprob: -8.922235488891602
    7. '_,' → logprob: -12.047235488891602
    8. ' (_,' → logprob: -12.547235488891602
    9. '(_' → logprob: -13.047235488891602
    10. '_x' → logprob: -13.422235488891602

Token 649: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.320199877838604e-07
    2. '(x' → logprob: -15.625
    3. '_x' → logprob: -16.25
    4. ' x' → logprob: -16.25
    5. '_,' → logprob: -20.375
    6. '	x' → logprob: -21.0
    7. ')x' → logprob: -21.125
    8. '```' → logprob: -21.375
    9. '   ' → logprob: -21.75
    10. ''x' → logprob: -21.875

Token 650: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.249780638725497e-05
    2. ' ,' → logprob: -10.875032424926758
    3. ',x' → logprob: -12.125032424926758
    4. ',y' → logprob: -13.250032424926758
    5. '<|end|>' → logprob: -13.500032424926758
    6. '_,' → logprob: -13.875032424926758
    7. ',
' → logprob: -13.875032424926758
    8. 'x' → logprob: -14.250032424926758
    9. 's' → logprob: -14.375032424926758
    10. '‌,' → logprob: -14.500032424926758

Token 651: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0002613358374219388
    2. ' y' → logprob: -8.250261306762695
    3. ',y' → logprob: -20.625261306762695
    4. '   ' → logprob: -21.375261306762695
    5. '	y' → logprob: -21.750261306762695
    6. ',' → logprob: -22.000261306762695
    7. '    ' → logprob: -22.375261306762695
    8. '  ' → logprob: -23.125261306762695
    9. '_y' → logprob: -23.250261306762695
    10. ' ' → logprob: -23.875261306762695

Token 652: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.641841820150148e-05
    2. ' ,' → logprob: -11.50002670288086
    3. '_,' → logprob: -12.37502670288086
    4. ',c' → logprob: -12.37502670288086
    5. ',x' → logprob: -12.87502670288086
    6. ')' → logprob: -13.25002670288086
    7. ',)' → logprob: -14.25002670288086
    8. ',w' → logprob: -15.37502670288086
    9. '‌,' → logprob: -15.50002670288086
    10. ',p' → logprob: -15.50002670288086

Token 653: ' c' (ID: 274)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.5659648180007935
    2. 'c' → logprob: -1.0659648180007935
    3. '_)' → logprob: -2.565964698791504
    4. '_' → logprob: -4.690964698791504
    5. '_),' → logprob: -6.940964698791504
    6. '_c' → logprob: -8.565964698791504
    7. ')' → logprob: -8.815964698791504
    8. 'color' → logprob: -8.940964698791504
    9. '
' → logprob: -9.690964698791504
    10. '_
' → logprob: -9.940964698791504

Token 654: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20516660809516907
    2. ')' → logprob: -1.7051665782928467
    3. '_,' → logprob: -5.830166816711426
    4. '),' → logprob: -7.955166816711426
    5. ',)' → logprob: -8.830166816711426
    6. '1' → logprob: -9.455166816711426
    7. '_)' → logprob: -9.580166816711426
    8. ',_' → logprob: -9.955166816711426
    9. '_' → logprob: -10.080166816711426
    10. ',x' → logprob: -10.955166816711426

Token 655: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16036254167556763
    2. ' in' → logprob: -1.9103624820709229
    3. ')' → logprob: -9.285362243652344
    4. ',' → logprob: -10.660362243652344
    5. 'points' → logprob: -12.410362243652344
    6. '  ' → logprob: -12.910362243652344
    7. '   ' → logprob: -13.035362243652344
    8. '	in' → logprob: -13.410362243652344
    9. 's' → logprob: -13.535362243652344
    10. '_in' → logprob: -13.910362243652344

Token 656: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -1.306760805164231e-05
    2. ' points' → logprob: -11.25001335144043
    3. 'oints' → logprob: -19.12501335144043
    4. '	points' → logprob: -19.37501335144043
    5. '(points' → logprob: -19.87501335144043
    6. '   ' → logprob: -20.50001335144043
    7. '_points' → logprob: -21.00001335144043
    8. '[' → logprob: -21.50001335144043
    9. '.points' → logprob: -22.00001335144043
    10. '
' → logprob: -22.62501335144043

Token 657: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6672431230545044
    2. ':' → logprob: -1.1672431230545044
    3. '                   ' → logprob: -2.042243003845215
    4. '               ' → logprob: -3.292243003845215
    5. '):
' → logprob: -5.542243003845215
    6. ',' → logprob: -6.667243003845215
    7. '           ' → logprob: -6.792243003845215
    8. '):' → logprob: -7.667243003845215
    9. ')' → logprob: -7.917243003845215
    10. '(sign' → logprob: -8.292243003845215

Token 658: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007586462306790054
    2. '               ' → logprob: -8.750758171081543
    3. '                ' → logprob: -9.125758171081543
    4. '                    
' → logprob: -9.250758171081543
    5. '           ' → logprob: -9.750758171081543
    6. ' signs' → logprob: -9.875758171081543
    7. ' s' → logprob: -10.125758171081543
    8. '
' → logprob: -10.250758171081543
    9. '                    ' → logprob: -10.375758171081543
    10. ' 
' → logprob: -10.625758171081543

Token 659: ' val' (ID: 1459)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.5427672863006592
    2. '                   ' → logprob: -2.292767286300659
    3. ' sign' → logprob: -2.292767286300659
    4. ' val' → logprob: -2.667767286300659
    5. ' s' → logprob: -2.792767286300659
    6. ' signs' → logprob: -3.292767286300659
    7. 's' → logprob: -3.667767286300659
    8. 'val' (adapté à ' val') → logprob: -4.292767524719238
    9. ' value' → logprob: -5.917767524719238
    10. 'value' → logprob: -6.167767524719238

Token 660: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931498050689697
    2. ' =' → logprob: -0.6931498050689697
    3. ')' → logprob: -13.69314956665039
    4. 's' → logprob: -15.06814956665039
    5. '                   ' → logprob: -15.06814956665039
    6. ' ' → logprob: -15.44314956665039
    7. ' =
' → logprob: -15.81814956665039
    8. '=
' → logprob: -15.94314956665039
    9. '<|end|>' → logprob: -16.19314956665039
    10. ',' → logprob: -16.81814956665039

Token 661: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0012134487042203546
    2. '(a' → logprob: -7.001213550567627
    3. ' a' → logprob: -8.126213073730469
    4. ' (' → logprob: -12.501213073730469
    5. '   ' → logprob: -13.251213073730469
    6. '	a' → logprob: -15.001213073730469
    7. 'sign' → logprob: -16.00121307373047
    8. '(' → logprob: -16.37621307373047
    9. ' ' → logprob: -16.37621307373047
    10. '    ' → logprob: -17.62621307373047

Token 662: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10628495365381241
    2. '*' → logprob: -2.3562848567962646
    3. '*x' → logprob: -5.106285095214844
    4. '*object' → logprob: -14.856285095214844
    5. ' ' → logprob: -14.981285095214844
    6. '```' → logprob: -15.731285095214844
    7. '*(' → logprob: -16.231285095214844
    8. 'x' → logprob: -16.356285095214844
    9. ' ' → logprob: -16.606285095214844
    10. '   ' → logprob: -16.981285095214844

Token 663: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.306760805164231e-05
    2. ' x' → logprob: -11.25001335144043
    3. '<|end|>' → logprob: -21.25001335144043
    4. '(x' → logprob: -21.37501335144043
    5. ')x' → logprob: -22.37501335144043
    6. '	x' → logprob: -22.37501335144043
    7. '*x' → logprob: -22.87501335144043
    8. '"x' → logprob: -23.00001335144043
    9. ' ' → logprob: -23.12501335144043
    10. '```' → logprob: -24.12501335144043

Token 664: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.048593614250421524
    2. ' +' → logprob: -3.048593521118164
    3. '+b' → logprob: -12.048593521118164
    4. '+y' → logprob: -16.048593521118164
    5. '＋' → logprob: -16.048593521118164
    6. '+
' → logprob: -16.298593521118164
    7. ' ' → logprob: -17.048593521118164
    8. '()+' → logprob: -17.173593521118164
    9. '[' → logprob: -17.423593521118164
    10. '+B' → logprob: -17.673593521118164

Token 665: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.001170225441455841
    2. ' b' → logprob: -6.7511701583862305
    3. 'y' → logprob: -20.001171112060547
    4. ' ' → logprob: -20.501171112060547
    5. '(b' → logprob: -20.876171112060547
    6. '	b' → logprob: -20.876171112060547
    7. '```' → logprob: -21.001171112060547
    8. ')b' → logprob: -21.251171112060547
    9. '<|end|>' → logprob: -21.251171112060547
    10. '[' → logprob: -21.751171112060547

Token 666: ' *' (ID: 425)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.018179088830947876
    2. ' y' → logprob: -4.018178939819336
    3. '*y' → logprob: -10.768178939819336
    4. '*' → logprob: -12.143178939819336
    5. ' *' → logprob: -13.768178939819336
    6. '	y' → logprob: -14.268178939819336
    7. ' ' → logprob: -14.518178939819336
    8. '_y' → logprob: -15.268178939819336
    9. '(y' → logprob: -16.143178939819336
    10. ',' → logprob: -17.143178939819336

Token 667: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.157039049663581e-05
    2. ' y' → logprob: -9.875051498413086
    3. '	y' → logprob: -18.500051498413086
    4. '*y' → logprob: -19.125051498413086
    5. ' ' → logprob: -19.750051498413086
    6. ''y' → logprob: -20.375051498413086
    7. '   ' → logprob: -20.500051498413086
    8. '(y' → logprob: -20.625051498413086
    9. '```' → logprob: -21.250051498413086
    10. 'y's' → logprob: -21.375051498413086

Token 668: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1315690129995346
    2. '-' → logprob: -2.1315689086914062
    3. '                   ' → logprob: -5.506568908691406
    4. '               ' → logprob: -8.756568908691406
    5. '<|end|>' → logprob: -9.131568908691406
    6. ')' → logprob: -9.381568908691406
    7. ' ' → logprob: -9.631568908691406
    8. '-p' → logprob: -10.756568908691406
    9. '
' → logprob: -11.256568908691406
    10. '                       ' → logprob: -11.381568908691406

Token 669: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0019286326132714748
    2. ' p' → logprob: -6.251928806304932
    3. '	p' → logprob: -23.501928329467773
    4. ' ' → logprob: -23.501928329467773
    5. '   ' → logprob: -24.751928329467773
    6. '<p' → logprob: -25.126928329467773
    7. '_p' → logprob: -25.751928329467773
    8. '$p' → logprob: -25.876928329467773
    9. ')p' → logprob: -26.376928329467773
    10. '```' → logprob: -26.501928329467773

Token 670: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003669913625344634
    2. '               ' → logprob: -6.003669738769531
    3. '
' → logprob: -7.503669738769531
    4. '                    
' → logprob: -8.628669738769531
    5. ',' → logprob: -8.753669738769531
    6. '           ' → logprob: -9.003669738769531
    7. ')' → logprob: -10.003669738769531
    8. '                  ' → logprob: -11.128669738769531
    9. '                       ' → logprob: -11.128669738769531
    10. '       ' → logprob: -11.128669738769531

Token 671: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00024013224174268544
    2. '               ' → logprob: -9.250240325927734
    3. '                    
' → logprob: -9.750240325927734
    4. '           ' → logprob: -10.375240325927734
    5. '       ' → logprob: -11.750240325927734
    6. '                    ' → logprob: -11.875240325927734
    7. '                  ' → logprob: -12.250240325927734
    8. ',' → logprob: -12.375240325927734
    9. '                   
' → logprob: -12.375240325927734
    10. '                       ' → logprob: -12.500240325927734

Token 672: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.49519383907318115
    2. 'if' → logprob: -0.9951938390731812
    3. '                   ' → logprob: -4.120193958282471
    4. 'sign' → logprob: -5.495193958282471
    5. ' signs' → logprob: -8.870193481445312
    6. ' sign' → logprob: -9.620193481445312
    7. '                       ' → logprob: -9.620193481445312
    8. '```' → logprob: -9.620193481445312
    9. '                    ' → logprob: -9.745193481445312
    10. '               ' → logprob: -9.995193481445312

Token 673: ' Since' (ID: 12265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002500748261809349
    2. ' if' → logprob: -6.377500534057617
    3. '                   ' → logprob: -7.627500534057617
    4. 'sign' → logprob: -8.127500534057617
    5. '```' → logprob: -12.002500534057617
    6. '                       ' → logprob: -13.127500534057617
    7. '                    
' → logprob: -13.377500534057617
    8. '               ' → logprob: -13.502500534057617
    9. ' signs' → logprob: -14.127500534057617
    10. '   ' → logprob: -14.127500534057617

Token 674: ' points' (ID: 5571)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.1928139626979828
    2. 'val' → logprob: -1.8178139925003052
    3. 'abs' → logprob: -4.692813873291016
    4. ' abs' → logprob: -5.817813873291016
    5. ' c' → logprob: -7.942813873291016
    6. 'c' → logprob: -8.192813873291016
    7. '                   ' → logprob: -9.442813873291016
    8. ' (' → logprob: -9.817813873291016
    9. '(val' → logprob: -10.192813873291016
    10. ' if' → logprob: -12.067813873291016

Token 675: ' have' (ID: 679)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.8771337866783142
    2. '                   ' → logprob: -1.627133846282959
    3. '==' → logprob: -2.627133846282959
    4. ' if' → logprob: -2.877133846282959
    5. ' ==' → logprob: -3.252133846282959
    6. '               ' → logprob: -3.502133846282959
    7. '<|end|>' → logprob: -3.502133846282959
    8. 'if' → logprob: -3.752133846282959
    9. ' not' → logprob: -3.877133846282959
    10. '                       ' → logprob: -4.252133846282959

Token 676: ' integer' (ID: 16336)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1948310136795044
    2. 'color' → logprob: -2.694830894470215
    3. 'colors' → logprob: -3.694830894470215
    4. '0' → logprob: -3.694830894470215
    5. 'no' → logprob: -4.444830894470215
    6. ' c' → logprob: -4.569830894470215
    7. ' no' → logprob: -4.944830894470215
    8. 'integer' → logprob: -5.194830894470215
    9. 'different' → logprob: -5.444830894470215
    10. 'coordinates' → logprob: -6.069830894470215

Token 677: ' coords' (ID: 53253)
  Prédit: ' coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coordinates' → logprob: -0.3196689188480377
    2. 'coordinates' → logprob: -1.3196688890457153
    3. 'val' → logprob: -5.319668769836426
    4. ' val' → logprob: -7.694668769836426
    5. ' values' → logprob: -7.819668769836426
    6. 'coords' → logprob: -8.444668769836426
    7. ' positions' → logprob: -8.694668769836426
    8. 'values' → logprob: -9.194668769836426
    9. 'positions' → logprob: -9.569668769836426
    10. ' coords' → logprob: -10.444668769836426

Token 678: ' and' (ID: 326)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08474812656641006
    2. ',' → logprob: -2.5847480297088623
    3. '               ' → logprob: -5.709748268127441
    4. '
' → logprob: -7.334748268127441
    5. ' if' → logprob: -7.334748268127441
    6. '                    
' → logprob: -7.709748268127441
    7. ' ,' → logprob: -8.459748268127441
    8. '           ' → logprob: -8.584748268127441
    9. ',
' → logprob: -10.209748268127441
    10. '       ' → logprob: -10.209748268127441

Token 679: ' p' (ID: 275)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.18589861690998077
    2. ' val' → logprob: -1.9358986616134644
    3. 'p' → logprob: -4.935898780822754
    4. 'abs' → logprob: -5.560898780822754
    5. 'c' → logprob: -5.685898780822754
    6. ' p' → logprob: -6.185898780822754
    7. ' points' → logprob: -6.435898780822754
    8. '(val' → logprob: -6.560898780822754
    9. 'a' → logprob: -6.810898780822754
    10. ' abs' → logprob: -6.935898780822754

Token 680: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.12465786188840866
    2. 'is' → logprob: -2.9996578693389893
    3. '=' → logprob: -3.1246578693389893
    4. ' can' → logprob: -5.24965763092041
    5. ' not' → logprob: -5.24965763092041
    6. '!=' → logprob: -5.87465763092041
    7. ' =' → logprob: -6.37465763092041
    8. ')' → logprob: -6.49965763092041
    9. '<|end|>' → logprob: -6.87465763092041
    10. ' !=' → logprob: -7.12465763092041

Token 681: ' offset' (ID: 8985)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.23367838561534882
    2. 'a' → logprob: -2.2336783409118652
    3. '0' → logprob: -2.8586783409118652
    4. ' float' → logprob: -3.3586783409118652
    5. ' a' → logprob: -4.858678340911865
    6. 'floating' → logprob: -7.608678340911865
    7. ' ' → logprob: -8.608678817749023
    8. '```' → logprob: -8.608678817749023
    9. 'offset' → logprob: -8.858678817749023
    10. 'not' → logprob: -8.983678817749023

Token 682: ' by' (ID: 656)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4387310743331909
    2. '                   ' → logprob: -1.438731074333191
    3. '0' → logprob: -2.8137311935424805
    4. '               ' → logprob: -3.6887311935424805
    5. '=' → logprob: -4.3137311935424805
    6. ' ,' → logprob: -5.4387311935424805
    7. ',
' → logprob: -5.8137311935424805
    8. ' ' → logprob: -5.9387311935424805
    9. ' >' → logprob: -6.5637311935424805
    10. ' =' → logprob: -6.8137311935424805

Token 683: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. 'float' → logprob: -17.625036239624023
    4. '.' → logprob: -20.125036239624023
    5. '1' → logprob: -20.375036239624023
    6. '```' → logprob: -20.500036239624023
    7. ' float' → logprob: -20.625036239624023
    8. '+' → logprob: -21.125036239624023
    9. 'floating' → logprob: -21.250036239624023
    10. 'a' → logprob: -21.375036239624023

Token 684: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. 'float' → logprob: -15.125
    3. ' ' → logprob: -15.875
    4. 'a' → logprob: -17.25
    5. 'floating' → logprob: -17.25
    6. '```' → logprob: -18.75
    7. 'half' → logprob: -18.875
    8. '.' → logprob: -19.25
    9. 'decimal' → logprob: -21.0
    10. 'non' → logprob: -21.125

Token 685: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: 0.0
    2. '`.' → logprob: -17.125
    3. ' .' → logprob: -18.375
    4. '.
' → logprob: -18.5
    5. '                   ' → logprob: -18.625
    6. '```' → logprob: -18.875
    7. '‌.' → logprob: -19.5
    8. '}.' → logprob: -19.5
    9. '​.' → logprob: -19.5
    10. '               ' → logprob: -19.5

Token 686: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -9.088346359931165e-07
    2. '500' → logprob: -14.500000953674316
    3. '0' → logprob: -15.750000953674316
    4. '```' → logprob: -16.5
    5. '499' → logprob: -16.625
    6. '4' → logprob: -16.875
    7. '1' → logprob: -17.5
    8. '
' → logprob: -17.625
    9. '05' → logprob: -18.625
    10. '`' → logprob: -18.75

Token 687: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.35401836037635803
    2. ',' → logprob: -1.2290183305740356
    3. '               ' → logprob: -6.604018211364746
    4. ' ,' → logprob: -6.729018211364746
    5. '
' → logprob: -7.229018211364746
    6. '                    
' → logprob: -7.354018211364746
    7. ' if' → logprob: -7.479018211364746
    8. ',
' → logprob: -7.729018211364746
    9. '           ' → logprob: -8.854018211364746
    10. '                    ' → logprob: -9.479018211364746

Token 688: ' val' (ID: 1459)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20634353160858154
    2. 'if' → logprob: -1.8313435316085815
    3. 'sign' → logprob: -4.456343650817871
    4. ' sign' → logprob: -4.581343650817871
    5. '                   ' → logprob: -5.831343650817871
    6. '#' → logprob: -7.081343650817871
    7. ' signs' → logprob: -7.956343650817871
    8. ' #' → logprob: -8.581343650817871
    9. ' s' → logprob: -11.081343650817871
    10. '                       ' → logprob: -11.206343650817871

Token 689: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.8184554576873779
    2. '<' → logprob: -1.818455457687378
    3. '=' → logprob: -1.818455457687378
    4. '!=' → logprob: -1.943455457687378
    5. ' <' → logprob: -4.068455696105957
    6. 's' → logprob: -4.443455696105957
    7. ' >' → logprob: -4.443455696105957
    8. ' !=' → logprob: -4.443455696105957
    9. '*' → logprob: -4.568455696105957
    10. ' cannot' → logprob: -5.818455696105957

Token 690: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009757505729794502
    2. ' ' → logprob: -4.6347575187683105
    3. '=' → logprob: -13.509757041931152
    4. 'int' → logprob: -15.884757041931152
    5. ' ' → logprob: -17.75975799560547
    6. '```' → logprob: -18.50975799560547
    7. '
' → logprob: -19.00975799560547
    8. 'zero' → logprob: -19.13475799560547
    9. '  ' → logprob: -19.25975799560547
    10. '   ' → logprob: -19.50975799560547

Token 691: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010926496179308742
    2. ' ' → logprob: -9.125109672546387
    3. 'int' → logprob: -15.500109672546387
    4. '=' → logprob: -18.25010871887207
    5. 'integer' → logprob: -18.87510871887207
    6. '
' → logprob: -19.12510871887207
    7. 'zero' → logprob: -19.62510871887207
    8. '```' → logprob: -20.62510871887207
    9. ' ' → logprob: -20.75010871887207
    10. '   ' → logprob: -20.87510871887207

Token 692: ' always' (ID: 3324)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001926374970935285
    2. ',' → logprob: -7.376926422119141
    3. '<|end|>' → logprob: -7.876926422119141
    4. '
' → logprob: -8.12692642211914
    5. '               ' → logprob: -8.75192642211914
    6. '                    
' → logprob: -8.87692642211914
    7. '           ' → logprob: -9.62692642211914
    8. '<|end|>' → logprob: -9.87692642211914
    9. '		           ' → logprob: -10.50192642211914
    10. '   ' → logprob: -10.87692642211914

Token 693: ' =>' (ID: 871)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002313453471288085
    2. '               ' → logprob: -6.752313613891602
    3. '           ' → logprob: -8.252313613891602
    4. '                    
' → logprob: -8.377313613891602
    5. ',' → logprob: -8.502313613891602
    6. '<|end|>' → logprob: -9.127313613891602
    7. '   ' → logprob: -9.752313613891602
    8. '
' → logprob: -9.877313613891602
    9. '       ' → logprob: -10.002313613891602
    10. '  
' → logprob: -10.502313613891602

Token 694: ' no' (ID: 860)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.9324688911437988
    2. ' sign' → logprob: -1.3074688911437988
    3. ' if' → logprob: -1.5574688911437988
    4. ' signs' → logprob: -2.557468891143799
    5. 'if' → logprob: -3.307468891143799
    6. '                   ' → logprob: -5.057468891143799
    7. ' s' → logprob: -6.807468891143799
    8. ' signo' → logprob: -7.182468891143799
    9. '(sign' → logprob: -7.682468891143799
    10. 's' → logprob: -7.682468891143799

Token 695: ' point' (ID: 2438)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.26368144154548645
    2. ')' → logprob: -2.263681411743164
    3. 'if' → logprob: -3.388681411743164
    4. 'sign' → logprob: -3.763681411743164
    5. '                   ' → logprob: -4.138681411743164
    6. '               ' → logprob: -4.263681411743164
    7. ' sign' → logprob: -4.763681411743164
    8. '=' → logprob: -5.263681411743164
    9. ' ' → logprob: -5.388681411743164
    10. ' need' → logprob: -6.138681411743164

Token 696: ' on' (ID: 402)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.608200192451477
    2. '                   ' → logprob: -1.608200192451477
    3. '               ' → logprob: -1.858200192451477
    4. '<|end|>' → logprob: -1.858200192451477
    5. ' if' → logprob: -2.3582000732421875
    6. '.' → logprob: -4.3582000732421875
    7. '_sign' → logprob: -4.3582000732421875
    8. ''s' → logprob: -4.4832000732421875
    9. ' in' → logprob: -4.4832000732421875
    10. ' will' → logprob: -4.6082000732421875

Token 697: ' line' (ID: 2543)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.551623523235321
    2. 'line' → logprob: -0.926623523235321
    3. ' the' → logprob: -3.926623582839966
    4. ' line' → logprob: -4.801623344421387
    5. '=line' → logprob: -9.051623344421387
    6. '=' → logprob: -10.801623344421387
    7. 'boundary' → logprob: -12.051623344421387
    8. '[line' → logprob: -12.551623344421387
    9. '(line' → logprob: -12.551623344421387
    10. 'a' → logprob: -12.676623344421387

Token 698: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06942687183618546
    2. '               ' → logprob: -2.8194267749786377
    3. '(sign' → logprob: -6.569427013397217
    4. '                       ' → logprob: -7.069427013397217
    5. ' if' → logprob: -7.194427013397217
    6. 'sign' → logprob: -7.194427013397217
    7. '           ' → logprob: -7.319427013397217
    8. ',' → logprob: -7.569427013397217
    9. '                    
' → logprob: -8.069426536560059
    10. '                ' → logprob: -8.444426536560059

Token 699: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0010774685069918633
    2. '               ' → logprob: -7.376077651977539
    3. '           ' → logprob: -8.251077651977539
    4. '       ' → logprob: -9.876077651977539
    5. ' if' → logprob: -10.126077651977539
    6. '   ' → logprob: -10.751077651977539
    7. '                    
' → logprob: -10.751077651977539
    8. '                       ' → logprob: -11.251077651977539
    9. '```' → logprob: -12.126077651977539
    10. '                  ' → logprob: -12.251077651977539

Token 700: ' s' (ID: 265)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.9560685753822327
    2. ' if' → logprob: -1.206068515777588
    3. 'if' → logprob: -2.206068515777588
    4. '                   ' → logprob: -2.331068515777588
    5. ' signs' → logprob: -2.581068515777588
    6. ' sign' → logprob: -3.581068515777588
    7. ' s' → logprob: -6.456068515777588
    8. 's' (adapté à ' s') → logprob: -6.956068515777588
    9. '               ' → logprob: -7.331068515777588
    10. '```' → logprob: -7.706068515777588

Token 701: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05789470300078392
    2. ' =' → logprob: -2.932894706726074
    3. '.append' → logprob: -6.307894706726074
    4. 'igns' → logprob: -7.182894706726074
    5. 'ign' → logprob: -7.932894706726074
    6. 'if' → logprob: -11.057894706726074
    7. 'gn' → logprob: -11.682894706726074
    8. 'igned' → logprob: -12.057894706726074
    9. 'sign' → logprob: -12.182894706726074
    10. 's' → logprob: -12.432894706726074

Token 702: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00035262384335510433
    2. ' ' → logprob: -8.37535285949707
    3. '-' → logprob: -9.50035285949707
    4. '(' → logprob: -10.00035285949707
    5. ' (' → logprob: -14.50035285949707
    6. 'val' → logprob: -14.75035285949707
    7. 'int' → logprob: -14.87535285949707
    8. '+' → logprob: -15.12535285949707
    9. ' -' → logprob: -15.87535285949707
    10. '
' → logprob: -17.37535285949707

Token 703: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012678056373260915
    2. '(' → logprob: -9.750126838684082
    3. '-' → logprob: -9.750126838684082
    4. 'val' → logprob: -11.875126838684082
    5. ' ' → logprob: -13.750126838684082
    6. '+' → logprob: -13.875126838684082
    7. 'int' → logprob: -13.875126838684082
    8. '(val' → logprob: -16.750125885009766
    9. 'c' → logprob: -16.875125885009766
    10. 'math' → logprob: -17.125125885009766

Token 704: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2519298195838928
    2. 'if' → logprob: -1.501929759979248
    3. '	if' → logprob: -14.501930236816406
    4. '   ' → logprob: -16.751930236816406
    5. '           ' → logprob: -17.001930236816406
    6. '<|end|>' → logprob: -17.501930236816406
    7. ' ' → logprob: -17.751930236816406
    8. 'If' → logprob: -18.126930236816406
    9. '
' → logprob: -19.001930236816406
    10. '       ' → logprob: -19.251930236816406

Token 705: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.5759416818618774
    2. 'val' → logprob: -0.8259416818618774
    3. '(val' → logprob: -13.200942039489746
    4. 'c' → logprob: -15.450942039489746
    5. '	val' → logprob: -15.825942039489746
    6. '[val' → logprob: -16.82594108581543
    7. '_val' → logprob: -17.70094108581543
    8. ' ' → logprob: -18.07594108581543
    9. ',val' → logprob: -18.95094108581543
    10. '   ' → logprob: -19.20094108581543

Token 706: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.004078878089785576
    2. ' >' → logprob: -5.5040788650512695
    3. ' ' → logprob: -15.75407886505127
    4. ' ' → logprob: -16.504079818725586
    5. '()>' → logprob: -16.754079818725586
    6. '&gt' → logprob: -17.629079818725586
    7. '>=' → logprob: -17.629079818725586
    8. '>
' → logprob: -18.629079818725586
    9. ')>' → logprob: -18.754079818725586
    10. '">' → logprob: -18.879079818725586

Token 707: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029750484973192215
    2. ' ' → logprob: -3.5297505855560303
    3. ' ' → logprob: -17.90475082397461
    4. '   ' → logprob: -18.27975082397461
    5. '  ' → logprob: -19.27975082397461
    6. '1' → logprob: -20.02975082397461
    7. '۰' → logprob: -20.15475082397461
    8. '=' → logprob: -21.21725082397461
    9. '```' → logprob: -21.40475082397461
    10. '	' → logprob: -21.46725082397461

Token 708: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -19.125051498413086
    4. '1' → logprob: -19.250051498413086
    5. ' ' → logprob: -19.875051498413086
    6. '۰' → logprob: -20.375051498413086
    7. '  ' → logprob: -20.625051498413086
    8. '```' → logprob: -20.812551498413086
    9. '=' → logprob: -21.062551498413086
    10. '>' → logprob: -21.437551498413086

Token 709: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.00861528143286705
    2. 'else' → logprob: -4.758615493774414
    3. '	else' → logprob: -15.133615493774414
    4. '<|end|>' → logprob: -15.633615493774414
    5. ' elif' → logprob: -16.383615493774414
    6. '           ' → logprob: -16.758615493774414
    7. '               ' → logprob: -17.133615493774414
    8. ' ' → logprob: -17.133615493774414
    9. 'elif' → logprob: -17.383615493774414
    10. '```' → logprob: -17.383615493774414

Token 710: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0006268949946388602
    2. ' -' → logprob: -7.375627040863037
    3. '0' → logprob: -15.250626564025879
    4. ' ' → logprob: -16.625627517700195
    5. '   ' → logprob: -18.500627517700195
    6. '−' → logprob: -19.250627517700195
    7. '  ' → logprob: -19.750627517700195
    8. '1' → logprob: -20.250627517700195
    9. '```' → logprob: -20.375627517700195
    10. '
' → logprob: -21.125627517700195

Token 711: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '```' → logprob: -20.250009536743164
    4. '0' → logprob: -21.000009536743164
    5. '   ' → logprob: -21.562509536743164
    6. '１' → logprob: -22.000009536743164
    7. '-' → logprob: -22.250009536743164
    8. '  ' → logprob: -22.562509536743164
    9. '=' → logprob: -22.562509536743164
    10. 's' → logprob: -22.687509536743164

Token 712: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04617699980735779
    2. '               ' → logprob: -3.1711769104003906
    3. '           ' → logprob: -6.421176910400391
    4. '<|end|>' → logprob: -7.421176910400391
    5. '                       ' → logprob: -7.796176910400391
    6. '       ' → logprob: -9.42117691040039
    7. '   ' → logprob: -9.54617691040039
    8. ',' → logprob: -9.67117691040039
    9. '                           ' → logprob: -9.92117691040039
    10. '                  ' → logprob: -10.29617691040039

Token 713: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004366151988506317
    2. '               ' → logprob: -5.504365921020508
    3. '           ' → logprob: -8.629365921020508
    4. '                       ' → logprob: -10.004365921020508
    5. '   ' → logprob: -10.879365921020508
    6. '<|end|>' → logprob: -11.504365921020508
    7. '       ' → logprob: -11.754365921020508
    8. '                  ' → logprob: -11.879365921020508
    9. '```' → logprob: -12.379365921020508
    10. ',' → logprob: -13.004365921020508

Token 714: ' signs' (ID: 17424)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.12935784459114075
    2. '                   ' → logprob: -2.2543578147888184
    3. '               ' → logprob: -4.504357814788818
    4. ' signs' → logprob: -6.004357814788818
    5. '           ' → logprob: -6.629357814788818
    6. '                       ' → logprob: -7.379357814788818
    7. '   ' → logprob: -7.754357814788818
    8. '       ' → logprob: -8.504358291625977
    9. '                  ' → logprob: -10.004358291625977
    10. 'if' → logprob: -10.379358291625977

Token 715: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00863016489893198
    2. '.' → logprob: -4.758630275726318
    3. '.app' → logprob: -11.88362979888916
    4. '.ap' → logprob: -12.13362979888916
    5. ' .' → logprob: -13.13362979888916
    6. 'append' → logprob: -13.63362979888916
    7. '.Append' → logprob: -16.633630752563477
    8. ',' → logprob: -17.008630752563477
    9. '_append' → logprob: -17.008630752563477
    10. '=' → logprob: -17.133630752563477

Token 716: '((' (ID: 2054)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.6535284519195557
    2. 's' → logprob: -1.0285284519195557
    3. '(c' → logprob: -2.4035284519195557
    4. 'c' → logprob: -3.6535284519195557
    5. '((' → logprob: -5.528528213500977
    6. '(' → logprob: -6.403528213500977
    7. ' (' → logprob: -8.778528213500977
    8. ' s' → logprob: -8.903528213500977
    9. ' c' → logprob: -10.653528213500977
    10. '(
' → logprob: -13.028528213500977

Token 717: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.033687885850667953
    2. 'c' → logprob: -3.4086878299713135
    3. ' s' → logprob: -10.658687591552734
    4. '(s' → logprob: -12.283687591552734
    5. '(c' → logprob: -12.658687591552734
    6. '   ' → logprob: -12.908687591552734
    7. ')' → logprob: -13.408687591552734
    8. 'x' → logprob: -13.408687591552734
    9. 'sign' → logprob: -13.408687591552734
    10. ' c' → logprob: -13.783687591552734

Token 718: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005422650370746851
    2. ',c' → logprob: -5.255422592163086
    3. ' ,' → logprob: -8.630422592163086
    4. ',s' → logprob: -12.255422592163086
    5. ',
' → logprob: -13.255422592163086
    6. ')' → logprob: -14.005422592163086
    7. 'c' → logprob: -14.630422592163086
    8. 's' → logprob: -15.130422592163086
    9. ' c' → logprob: -15.380422592163086
    10. ',color' → logprob: -15.505422592163086

Token 719: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0013263145228847861
    2. ' c' → logprob: -6.626326084136963
    3. ')c' → logprob: -14.751326560974121
    4. '   ' → logprob: -18.126325607299805
    5. '	c' → logprob: -18.501325607299805
    6. ')' → logprob: -18.501325607299805
    7. '(c' → logprob: -18.626325607299805
    8. ' ' → logprob: -18.876325607299805
    9. '_c' → logprob: -19.001325607299805
    10. '$c' → logprob: -19.876325607299805

Token 720: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -8.73314929776825e-05
    2. ')' → logprob: -9.37508773803711
    3. '))
' → logprob: -13.25008773803711
    4. '))

' → logprob: -14.87508773803711
    5. ' ))' → logprob: -15.12508773803711
    6. ')))' → logprob: -16.62508773803711
    7. '));' → logprob: -16.87508773803711
    8. '),' → logprob: -17.37508773803711
    9. '()))' → logprob: -17.37508773803711
    10. '))
' → logprob: -18.62508773803711

Token 721: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03134020417928696
    2. '```' → logprob: -4.5313401222229
    3. '           ' → logprob: -4.6563401222229
    4. '<|end|>' → logprob: -4.9063401222229
    5. '
' → logprob: -6.1563401222229
    6. '                
' → logprob: -8.406340599060059
    7. '            
' → logprob: -8.781340599060059
    8. '                   ' → logprob: -8.781340599060059
    9. '  
' → logprob: -8.906340599060059
    10. '<|end|>' → logprob: -9.281340599060059

Token 722: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9813408851623535
    2. 'black' → logprob: -0.9813408851623535
    3. 'all' → logprob: -1.6063408851623535
    4. 'colors' → logprob: -3.9813408851623535
    5. 'if' → logprob: -5.2313408851623535
    6. ' black' → logprob: -5.3563408851623535
    7. '#' (adapté à ' #') → logprob: -5.4813408851623535
    8. 'left' → logprob: -5.8563408851623535
    9. 'color' → logprob: -6.1063408851623535
    10. ' all' → logprob: -6.2313408851623535

Token 723: ' Check' (ID: 6208)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.8214516043663025
    2. 'black' → logprob: -1.1964516639709473
    3. 'if' → logprob: -1.8214516639709473
    4. '#' → logprob: -3.1964516639709473
    5. 'colors' → logprob: -3.3214516639709473
    6. 'side' → logprob: -4.696451663970947
    7. 'valid' → logprob: -6.196451663970947
    8. 's' → logprob: -6.321451663970947
    9. 'color' → logprob: -6.696451663970947
    10. 'group' → logprob: -6.946451663970947

Token 724: ' if' (ID: 538)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.2888294458389282
    2. 'all' → logprob: -1.4138294458389282
    3. ' if' → logprob: -1.7888294458389282
    4. 'if' → logprob: -1.9138294458389282
    5. '               ' → logprob: -2.9138293266296387
    6. ' black' → logprob: -3.0388293266296387
    7. 'colors' → logprob: -3.7888293266296387
    8. 'black' → logprob: -3.9138293266296387
    9. ' colors' → logprob: -5.538829326629639
    10. ' separated' → logprob: -5.788829326629639

Token 725: ' signs' (ID: 17424)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.058755770325660706
    2. 'len' → logprob: -3.558755874633789
    3. ' all' → logprob: -3.558755874633789
    4. ' len' → logprob: -9.308755874633789
    5. '   ' → logprob: -11.183755874633789
    6. 'any' → logprob: -11.933755874633789
    7. '
' → logprob: -14.058755874633789
    8. '	all' → logprob: -14.558755874633789
    9. '       ' → logprob: -14.933755874633789
    10. ' ' → logprob: -15.308755874633789

Token 726: ' separate' (ID: 13574)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.389046311378479
    2. '=' → logprob: -1.639046311378479
    3. ' all' → logprob: -3.0140461921691895
    4. ' are' → logprob: -3.6390461921691895
    5. 'all' → logprob: -3.7640461921691895
    6. '_all' → logprob: -4.2640461921691895
    7. '_are' → logprob: -5.7640461921691895
    8. 'are' → logprob: -6.2640461921691895
    9. '_black' → logprob: -6.3890461921691895
    10. 'for' → logprob: -6.6390461921691895

Token 727: ' the' (ID: 290)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.4717647135257721
    2. 'all' → logprob: -1.9717646837234497
    3. 'colors' → logprob: -2.4717648029327393
    4. ' black' → logprob: -3.2217648029327393
    5. 'black' → logprob: -3.2217648029327393
    6. 'points' → logprob: -3.4717648029327393
    7. '               ' → logprob: -4.59676456451416
    8. ' points' → logprob: -4.72176456451416
    9. ' colors' → logprob: -4.84676456451416
    10. ' the' → logprob: -5.97176456451416

Token 728: ' colors' (ID: 10803)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.07917530834674835
    2. ' points' → logprob: -2.9541752338409424
    3. 'black' → logprob: -4.5791754722595215
    4. '0' → logprob: -5.5791754722595215
    5. 'set' → logprob: -6.3291754722595215
    6. '[' → logprob: -6.4541754722595215
    7. ' black' → logprob: -6.4541754722595215
    8. 'all' → logprob: -6.7041754722595215
    9. 'colors' → logprob: -7.3291754722595215
    10. 'for' → logprob: -7.7041754722595215

Token 729: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002357571618631482
    2. '           ' → logprob: -7.377357482910156
    3. 'all' → logprob: -7.752357482910156
    4. ' all' → logprob: -8.502357482910156
    5. ',' → logprob: -8.752357482910156
    6. '                
' → logprob: -8.752357482910156
    7. ':' → logprob: -9.127357482910156
    8. ' if' → logprob: -9.377357482910156
    9. '                   ' → logprob: -9.502357482910156
    10. ' black' → logprob: -10.127357482910156

Token 730: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05539514124393463
    2. ' all' → logprob: -3.3053951263427734
    3. ' black' → logprob: -5.305395126342773
    4. 'all' → logprob: -5.555395126342773
    5. ' separated' → logprob: -6.305395126342773
    6. 'black' → logprob: -6.930395126342773
    7. ' if' → logprob: -7.055395126342773
    8. 'colors' → logprob: -7.180395126342773
    9. ' color' → logprob: -7.430395126342773
    10. '```' → logprob: -7.430395126342773

Token 731: ' #' (ID: 1069)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.5334283113479614
    2. 'pos' → logprob: -1.6584283113479614
    3. 'black' → logprob: -2.158428192138672
    4. 'side' → logprob: -2.658428192138672
    5. '               ' → logprob: -4.533428192138672
    6. 'if' → logprob: -4.783428192138672
    7. 's' → logprob: -4.783428192138672
    8. 'positive' → logprob: -5.533428192138672
    9. 'left' → logprob: -6.033428192138672
    10. ' all' → logprob: -6.658428192138672

Token 732: ' One' (ID: 5108)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.5356653928756714
    2. 'black' → logprob: -1.2856653928756714
    3. 'side' → logprob: -3.035665512084961
    4. 'if' → logprob: -3.035665512084961
    5. 'pos' → logprob: -4.160665512084961
    6. '               ' → logprob: -5.160665512084961
    7. 'colors' → logprob: -5.410665512084961
    8. 's' → logprob: -5.535665512084961
    9. ' all' → logprob: -5.785665512084961
    10. 'color' → logprob: -6.160665512084961

Token 733: ' side' (ID: 4307)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.10293527692556381
    2. ' side' → logprob: -2.352935314178467
    3. '
' → logprob: -6.852935314178467
    4. '   ' → logprob: -7.977935314178467
    5. 's' → logprob: -8.227934837341309
    6. '       ' → logprob: -8.227934837341309
    7. '           ' → logprob: -8.977934837341309
    8. 'def' → logprob: -9.727934837341309
    9. '            
' → logprob: -10.102934837341309
    10. '               ' → logprob: -10.102934837341309

Token 734: ' has' (ID: 853)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4264429211616516
    2. ' =' → logprob: -1.9264428615570068
    3. 'side' → logprob: -2.301442861557007
    4. 's' → logprob: -3.051442861557007
    5. 'all' → logprob: -4.426443099975586
    6. ' side' → logprob: -4.926443099975586
    7. '_side' → logprob: -5.051443099975586
    8. 'for' → logprob: -5.551443099975586
    9. 'only' → logprob: -6.051443099975586
    10. '   ' → logprob: -6.051443099975586

Token 735: ' only' (ID: 1606)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.1428966224193573
    2. ' all' → logprob: -2.0178966522216797
    3. 'True' → logprob: -9.51789665222168
    4. '   ' → logprob: -9.64289665222168
    5. ' True' → logprob: -10.76789665222168
    6. 's' → logprob: -10.89289665222168
    7. 'only' → logprob: -11.89289665222168
    8. 'black' → logprob: -11.89289665222168
    9. '       ' → logprob: -12.14289665222168
    10. 'side' → logprob: -12.89289665222168

Token 736: ' color' (ID: 3089)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5811353921890259
    2. 'black' → logprob: -1.9561353921890259
    3. 's' → logprob: -2.3311352729797363
    4. 'sign' → logprob: -2.9561352729797363
    5. '1' → logprob: -3.3311352729797363
    6. '(' → logprob: -3.5811352729797363
    7. 'all' → logprob: -3.7061352729797363
    8. ' black' → logprob: -3.9561352729797363
    9. ' s' → logprob: -4.956135272979736
    10. ' ' → logprob: -5.081135272979736

Token 737: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011748610995709896
    2. '0' → logprob: -5.761748790740967
    3. '1' → logprob: -6.261748790740967
    4. '   ' → logprob: -6.386748790740967
    5. '_s' → logprob: -6.761748790740967
    6. ' s' → logprob: -7.386748790740967
    7. ' =' → logprob: -7.511748790740967
    8. '_set' → logprob: -7.761748790740967
    9. 'side' → logprob: -7.886748790740967
    10. '=' → logprob: -8.261748313903809

Token 738: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06810387223958969
    2. 's' → logprob: -3.568103790283203
    3. '=' → logprob: -4.318103790283203
    4. '1' → logprob: -4.443103790283203
    5. ' ' → logprob: -5.443103790283203
    6. '   ' → logprob: -6.443103790283203
    7. 'black' → logprob: -6.818103790283203
    8. ' =' → logprob: -6.943103790283203
    9. '==' → logprob: -7.443103790283203
    10. ',' → logprob: -7.943103790283203

Token 739: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.025192739441990852
    2. ',' → logprob: -4.400192737579346
    3. ' and' → logprob: -4.900192737579346
    4. '<|end|>' → logprob: -6.775192737579346
    5. 's' → logprob: -7.025192737579346
    6. 'and' → logprob: -7.150192737579346
    7. '           ' → logprob: -7.650192737579346
    8. ' or' → logprob: -8.150193214416504
    9. ' sides' → logprob: -8.525193214416504
    10. ' if' → logprob: -8.525193214416504

Token 740: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.7016319036483765
    2. 'other' → logprob: -0.7016319036483765
    3. '#' → logprob: -5.451632022857666
    4. 'the' → logprob: -6.451632022857666
    5. ' the' → logprob: -6.701632022857666
    6. 'another' → logprob: -7.951632022857666
    7. ' another' → logprob: -8.201631546020508
    8. 'and' → logprob: -8.326631546020508
    9. ' #' → logprob: -8.826631546020508
    10. '               ' → logprob: -8.826631546020508

Token 741: ' side' (ID: 4307)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.05538351461291313
    2. ' side' → logprob: -2.9303834438323975
    3. 'has' → logprob: -8.180383682250977
    4. ' has' → logprob: -8.930383682250977
    5. '_side' → logprob: -11.055383682250977
    6. '=' → logprob: -11.180383682250977
    7. 's' → logprob: -11.430383682250977
    8. '   ' → logprob: -11.555383682250977
    9. '#' → logprob: -11.930383682250977
    10. '	side' → logprob: -12.055383682250977

Token 742: ' has' (ID: 853)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.3270375430583954
    2. ' has' → logprob: -1.3270375728607178
    3. 's' → logprob: -4.577037334442139
    4. 'have' → logprob: -6.952037334442139
    5. '#' → logprob: -7.577037334442139
    6. '==' → logprob: -7.827037334442139
    7. '   ' → logprob: -7.952037334442139
    8. '=' → logprob: -8.577037811279297
    9. '0' → logprob: -8.827037811279297
    10. '	has' → logprob: -9.077037811279297

Token 743: ' only' (ID: 1606)
  Prédit: 'only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'only' → logprob: -0.03897291049361229
    2. ' only' → logprob: -3.413972854614258
    3. '0' → logprob: -5.913972854614258
    4. 'color' → logprob: -6.288972854614258
    5. '1' → logprob: -8.163972854614258
    6. ' ' → logprob: -8.788972854614258
    7. ' color' → logprob: -9.038972854614258
    8. 'at' → logprob: -9.663972854614258
    9. 'both' → logprob: -10.038972854614258
    10. ' at' → logprob: -10.663972854614258

Token 744: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.5402711629867554
    2. '1' → logprob: -0.9152711629867554
    3. ' color' → logprob: -4.540271282196045
    4. '0' → logprob: -5.290271282196045
    5. ' ' → logprob: -6.790271282196045
    6. '   ' → logprob: -9.915270805358887
    7. 'colors' → logprob: -10.540270805358887
    8. '(' → logprob: -10.665270805358887
    9. '```' → logprob: -11.040270805358887
    10. '  ' → logprob: -11.665270805358887

Token 745: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7090531587600708
    2. '0' → logprob: -1.2090531587600708
    3. ' ' → logprob: -1.5840531587600708
    4. 's' → logprob: -5.709053039550781
    5. '   ' → logprob: -7.459053039550781
    6. '  ' → logprob: -9.459053039550781
    7. '=' → logprob: -9.584053039550781
    8. '```' → logprob: -10.334053039550781
    9. '(' → logprob: -10.459053039550781
    10. ' =' → logprob: -11.271553039550781

Token 746: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03383898735046387
    2. '0' → logprob: -3.408838987350464
    3. ' ' → logprob: -8.658839225769043
    4. '{' → logprob: -11.908839225769043
    5. '   ' → logprob: -12.783839225769043
    6. '```' → logprob: -13.158839225769043
    7. '<|end|>' → logprob: -14.033839225769043
    8. '2' → logprob: -14.158839225769043
    9. '=' → logprob: -14.346339225769043
    10. '(' → logprob: -14.471339225769043

Token 747: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009200352360494435
    2. '                
' → logprob: -7.250919818878174
    3. '
' → logprob: -9.625920295715332
    4. ',' → logprob: -10.000920295715332
    5. '           ' → logprob: -11.000920295715332
    6. '                   ' → logprob: -11.125920295715332
    7. '<|end|>' → logprob: -11.375920295715332
    8. '               
' → logprob: -11.750920295715332
    9. '```' → logprob: -12.125920295715332
    10. '                ' → logprob: -12.125920295715332

Token 748: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006280821282416582
    2. '                
' → logprob: -6.756280899047852
    3. ' left' → logprob: -6.881280899047852
    4. ' side' → logprob: -7.006280899047852
    5. 'left' → logprob: -7.381280899047852
    6. '```' → logprob: -7.381280899047852
    7. ' if' → logprob: -7.506280899047852
    8. ' black' → logprob: -9.006280899047852
    9. ' sides' → logprob: -9.131280899047852
    10. '                   ' → logprob: -9.256280899047852

Token 749: ' #' (ID: 1069)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.3000528812408447
    2. 'pos' → logprob: -1.5500528812408447
    3. '               ' → logprob: -3.5500528812408447
    4. 'left' → logprob: -4.300052642822266
    5. ' side' → logprob: -6.300052642822266
    6. 'all' → logprob: -6.925052642822266
    7. 'positive' → logprob: -7.300052642822266
    8. 's' → logprob: -7.550052642822266
    9. '                
' → logprob: -9.425052642822266
    10. 'sign' → logprob: -9.425052642822266

Token 750: ' That' (ID: 4569)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2712835669517517
    2. 'left' → logprob: -2.3962836265563965
    3. 'pos' → logprob: -2.5212836265563965
    4. 'side' → logprob: -3.2712836265563965
    5. 'colors' → logprob: -4.2712836265563965
    6. 'color' → logprob: -5.5212836265563965
    7. 'all' → logprob: -6.1462836265563965
    8. 'positive' → logprob: -6.6462836265563965
    9. 's' → logprob: -7.0212836265563965
    10. '                
' → logprob: -7.1462836265563965

Token 751: ' means' (ID: 4748)
  Prédit: ' side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' side' → logprob: -0.9698480367660522
    2. 'side' → logprob: -1.2198480367660522
    3. ' left' → logprob: -2.594848155975342
    4. 'left' → logprob: -2.719848155975342
    5. '=' → logprob: -3.219848155975342
    6. '_side' → logprob: -3.469848155975342
    7. 's' → logprob: -3.719848155975342
    8. ' =' → logprob: -3.844848155975342
    9. ' sides' → logprob: -3.969848155975342
    10. 'pos' → logprob: -4.469848155975342

Token 752: ' the' (ID: 290)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.24862518906593323
    2. 'pos' → logprob: -1.7486251592636108
    3. ' side' → logprob: -3.2486252784729004
    4. 's' → logprob: -6.4986252784729
    5. 'left' → logprob: -6.4986252784729
    6. 'positive' → logprob: -6.6236252784729
    7. '               ' → logprob: -7.2486252784729
    8. ' sides' → logprob: -7.7486252784729
    9. ' pos' → logprob: -7.8736252784729
    10. '(side' → logprob: -7.9986252784729

Token 753: ' signs' (ID: 17424)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.04139351844787598
    2. ' side' → logprob: -4.041393280029297
    3. 'all' → logprob: -4.791393280029297
    4. 'pos' → logprob: -5.291393280029297
    5. 's' → logprob: -5.791393280029297
    6. 'left' → logprob: -5.916393280029297
    7. 'if' → logprob: -6.541393280029297
    8. 'sign' → logprob: -6.916393280029297
    9. 'set' → logprob: -7.791393280029297
    10. 'positive' → logprob: -8.291393280029297

Token 754: ' must' (ID: 2804)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2833136320114136
    2. '_set' → logprob: -1.9083136320114136
    3. '=' → logprob: -3.033313751220703
    4. 's' → logprob: -4.283313751220703
    5. ' are' → logprob: -4.908313751220703
    6. '_values' → logprob: -5.033313751220703
    7. ' set' → logprob: -5.408313751220703
    8. '=set' → logprob: -5.658313751220703
    9. 'set' → logprob: -5.783313751220703
    10. '_vals' → logprob: -6.283313751220703

Token 755: ' split' (ID: 12648)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.7853167653083801
    2. 'be' → logprob: -1.1603167057037354
    3. 'have' → logprob: -2.1603167057037354
    4. 'contain' → logprob: -3.0353167057037354
    5. ' have' → logprob: -3.6603167057037354
    6. ' contain' → logprob: -3.6603167057037354
    7. 's' → logprob: -5.5353169441223145
    8. 'not' → logprob: -5.9103169441223145
    9. 'cover' → logprob: -6.4103169441223145
    10. '[' → logprob: -7.0353169441223145

Token 756: ' colors' (ID: 10803)
  Prédit: ' into'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' into' → logprob: -0.804379403591156
    2. 'into' → logprob: -1.6793794631958008
    3. 'colors' → logprob: -1.8043794631958008
    4. 'points' → logprob: -2.429379463195801
    5. 'the' → logprob: -3.179379463195801
    6. ' the' → logprob: -3.554379463195801
    7. '0' → logprob: -4.054379463195801
    8. ' points' → logprob: -4.929379463195801
    9. 's' → logprob: -6.304379463195801
    10. ' colors' → logprob: -6.304379463195801

Token 757: ' perfectly' (ID: 18739)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1291244626045227
    2. ' if' → logprob: -2.754124402999878
    3. ' only' → logprob: -4.754124641418457
    4. ' in' → logprob: -4.879124641418457
    5. ',' → logprob: -5.254124641418457
    6. ' into' → logprob: -5.379124641418457
    7. '                
' → logprob: -5.629124641418457
    8. ' correctly' → logprob: -5.629124641418457
    9. '
' → logprob: -5.754124641418457
    10. ':' → logprob: -6.129124641418457

Token 758: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010047998279333115
    2. '                
' → logprob: -5.010047912597656
    3. ',' → logprob: -7.010047912597656
    4. '
' → logprob: -8.010047912597656
    5. ' side' → logprob: -8.260047912597656
    6. ' if' → logprob: -8.385047912597656
    7. 'if' → logprob: -8.760047912597656
    8. ' sides' → logprob: -8.885047912597656
    9. '                ' → logprob: -9.010047912597656
    10. '```' → logprob: -9.010047912597656

Token 759: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00730264512822032
    2. ' if' → logprob: -5.632302761077881
    3. '```' → logprob: -6.882302761077881
    4. 'if' → logprob: -7.007302761077881
    5. ' side' → logprob: -7.882302761077881
    6. '                
' → logprob: -8.507302284240723
    7. 'left' → logprob: -8.632302284240723
    8. ' left' → logprob: -8.757302284240723
    9. 'all' → logprob: -9.382302284240723
    10. 'colors' → logprob: -9.632302284240723

Token 760: ' side' (ID: 4307)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.49880826473236084
    2. '               ' → logprob: -1.3738082647323608
    3. 'side' (adapté à ' side') → logprob: -2.8738083839416504
    4. 'positive' → logprob: -3.7488083839416504
    5. 'all' → logprob: -4.24880838394165
    6. ' pos' → logprob: -4.37380838394165
    7. 'if' → logprob: -4.74880838394165
    8. 'left' → logprob: -4.87380838394165
    9. ' side' → logprob: -5.12380838394165
    10. ' if' → logprob: -6.74880838394165

Token 761: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1812331676483154
    2. 's' → logprob: -1.1812331676483154
    3. '_' → logprob: -1.9312331676483154
    4. '_colors' → logprob: -2.0562331676483154
    5. '_s' → logprob: -3.1812331676483154
    6. '_pos' → logprob: -3.9312331676483154
    7. '_values' → logprob: -3.9312331676483154
    8. '_sets' → logprob: -4.0562334060668945
    9. '_sign' → logprob: -5.5562334060668945
    10. '_vals' → logprob: -5.6812334060668945

Token 762: '_colors' (ID: 79137)
  Prédit: '_colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -0.25613096356391907
    2. ' =' → logprob: -2.2561309337615967
    3. '_' → logprob: -3.0061309337615967
    4. 's' → logprob: -3.6311309337615967
    5. '0' → logprob: -4.131131172180176
    6. '_s' → logprob: -4.381131172180176
    7. '_black' → logprob: -5.006131172180176
    8. '_sign' → logprob: -5.881131172180176
    9. '=' → logprob: -6.381131172180176
    10. ',' → logprob: -6.756131172180176

Token 763: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2824890613555908
    2. '=' → logprob: -1.4074890613555908
    3. '0' → logprob: -7.157488822937012
    4. ',' → logprob: -7.657488822937012
    5. '_' → logprob: -10.407488822937012
    6. '=set' → logprob: -10.657488822937012
    7. '_colors' → logprob: -11.782488822937012
    8. 's' → logprob: -11.907488822937012
    9. '_black' → logprob: -12.657488822937012
    10. '={' → logprob: -12.907488822937012

Token 764: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.2584589421749115
    2. '{' → logprob: -1.6334589719772339
    3. '[' → logprob: -3.6334588527679443
    4. ' set' → logprob: -5.508459091186523
    5. '{s' → logprob: -7.133459091186523
    6. '[s' → logprob: -8.383459091186523
    7. ' {' → logprob: -8.508459091186523
    8. '{
' → logprob: -8.758459091186523
    9. '{}' → logprob: -9.133459091186523
    10. '[]' → logprob: -9.133459091186523

Token 765: '(c' (ID: 2410)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.33638861775398254
    2. '(c' → logprob: -1.7113885879516602
    3. '()' → logprob: -2.83638858795166
    4. '()
' → logprob: -4.08638858795166
    5. '[c' → logprob: -4.33638858795166
    6. '(s' → logprob: -4.46138858795166
    7. '(
' → logprob: -5.96138858795166
    8. '(color' → logprob: -7.08638858795166
    9. '[s' → logprob: -7.96138858795166
    10. '(' → logprob: -8.33638858795166

Token 766: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1433108001947403
    2. 'for' → logprob: -2.018310785293579
    3. '()' → logprob: -7.643311023712158
    4. 's' → logprob: -9.768310546875
    5. ' ' → logprob: -10.768310546875
    6. '[' → logprob: -10.768310546875
    7. 'c' → logprob: -11.143310546875
    8. '
' → logprob: -11.518310546875
    9. '   ' → logprob: -11.893310546875
    10. ' s' → logprob: -12.518310546875

Token 767: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3837207555770874
    2. '(s' → logprob: -2.008720874786377
    3. ' s' → logprob: -2.258720874786377
    4. ' (' → logprob: -3.508720874786377
    5. 'sign' → logprob: -3.633720874786377
    6. '(sign' → logprob: -4.258720874786377
    7. ' sign' → logprob: -5.633720874786377
    8. '(i' → logprob: -6.508720874786377
    9. '(' → logprob: -6.633720874786377
    10. '((' → logprob: -7.008720874786377

Token 768: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6688768863677979
    2. ',' → logprob: -1.0438768863677979
    3. ' in' → logprob: -2.168876886367798
    4. ',s' → logprob: -4.168876647949219
    5. 's' → logprob: -5.543876647949219
    6. ' ,' → logprob: -7.418876647949219
    7. '
' → logprob: -7.918876647949219
    8. 'for' → logprob: -8.168876647949219
    9. ' s' → logprob: -8.418876647949219
    10. ' ' → logprob: -8.543876647949219

Token 769: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.013059170916676521
    2. ' c' → logprob: -5.138059139251709
    3. '(c' → logprob: -5.388059139251709
    4. '(' → logprob: -7.138059139251709
    5. ' (' → logprob: -7.263059139251709
    6. 's' → logprob: -7.388059139251709
    7. '(s' → logprob: -8.638059616088867
    8. '0' → logprob: -9.388059616088867
    9. '(x' → logprob: -10.513059616088867
    10. ' s' → logprob: -10.513059616088867

Token 770: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.08900272101163864
    2. ' in' → logprob: -2.4640026092529297
    3. 's' → logprob: -10.46400260925293
    4. 'if' → logprob: -10.58900260925293
    5. ' ' → logprob: -12.71400260925293
    6. ' if' → logprob: -13.21400260925293
    7. ',' → logprob: -13.58900260925293
    8. '
' → logprob: -13.71400260925293
    9. ' s' → logprob: -13.96400260925293
    10. ')' → logprob: -14.96400260925293

Token 771: ' signs' (ID: 17424)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.5243422389030457
    2. ' signs' → logprob: -0.8993422389030457
    3. '(sign' → logprob: -6.774342060089111
    4. 'zip' → logprob: -10.27434253692627
    5. ' zip' → logprob: -12.02434253692627
    6. '[' → logprob: -12.14934253692627
    7. ' signes' → logprob: -12.27434253692627
    8. 'points' → logprob: -12.64934253692627
    9. ' (' → logprob: -13.02434253692627
    10. '(' → logprob: -13.02434253692627

Token 772: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.313360333442688
    2. 'if' → logprob: -1.313360333442688
    3. '	if' → logprob: -10.438360214233398
    4. ' ' → logprob: -10.563360214233398
    5. '   ' → logprob: -10.688360214233398
    6. '           ' → logprob: -11.563360214233398
    7. '       ' → logprob: -12.813360214233398
    8. 'for' → logprob: -13.688360214233398
    9. '    ' → logprob: -13.813360214233398
    10. '  ' → logprob: -13.938360214233398

Token 773: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.018150877207517624
    2. ' s' → logprob: -4.018150806427002
    3. '(s' → logprob: -14.39315128326416
    4. '   ' → logprob: -16.268150329589844
    5. '	s' → logprob: -16.893150329589844
    6. ' ' → logprob: -17.143150329589844
    7. 'not' → logprob: -17.268150329589844
    8. '  ' → logprob: -17.393150329589844
    9. ' not' → logprob: -17.393150329589844
    10. '    ' → logprob: -17.393150329589844

Token 774: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07908773422241211
    2. ' ==' → logprob: -2.579087734222412
    3. '>' → logprob: -9.32908821105957
    4. '==-' → logprob: -9.82908821105957
    5. '=' → logprob: -10.70408821105957
    6. '==
' → logprob: -11.70408821105957
    7. ')==' → logprob: -11.95408821105957
    8. '0' → logprob: -12.32908821105957
    9. '[' → logprob: -12.82908821105957
    10. ' >' → logprob: -12.95408821105957

Token 775: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008028535172343254
    2. ' ' → logprob: -5.258028507232666
    3. '-' → logprob: -5.883028507232666
    4. ' -' → logprob: -13.008028984069824
    5. 'sign' → logprob: -13.758028984069824
    6. '+' → logprob: -15.008028984069824
    7. '0' → logprob: -15.133028984069824
    8. 'side' → logprob: -16.070528030395508
    9. 's' → logprob: -16.508028030395508
    10. '```' → logprob: -16.633028030395508

Token 776: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003356778062880039
    2. '-' → logprob: -5.87835693359375
    3. ' ' → logprob: -7.50335693359375
    4. ' -' → logprob: -15.62835693359375
    5. '+' → logprob: -16.12835693359375
    6. '0' → logprob: -16.50335693359375
    7. 'sign' → logprob: -16.50335693359375
    8. '   ' → logprob: -18.00335693359375
    9. '```' → logprob: -18.50335693359375
    10. 's' → logprob: -18.50335693359375

Token 777: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.02976784110069275
    2. ')' → logprob: -3.5297677516937256
    3. ')
' → logprob: -11.404767990112305
    4. ')

' → logprob: -12.279767990112305
    5. ' )
' → logprob: -14.029767990112305
    6. '())
' → logprob: -15.029767990112305
    7. '0' → logprob: -15.529767990112305
    8. '           ' → logprob: -17.029767990112305
    9. '       ' → logprob: -17.279767990112305
    10. '   ' → logprob: -17.279767990112305

Token 778: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31812283396720886
    2. '               ' → logprob: -2.1931228637695312
    3. 'side' → logprob: -2.5681228637695312
    4. ' side' → logprob: -2.6931228637695312
    5. '                
' → logprob: -5.943122863769531
    6. ')
' → logprob: -6.068122863769531
    7. '.side' → logprob: -6.068122863769531
    8. '_side' → logprob: -6.568122863769531
    9. '	side' → logprob: -6.568122863769531
    10. '(side' → logprob: -6.568122863769531

Token 779: ' side' (ID: 4307)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' (adapté à ' side') → logprob: -0.011078471317887306
    2. ' side' → logprob: -4.511078357696533
    3. '               ' → logprob: -11.011078834533691
    4. '0' → logprob: -11.261078834533691
    5. '	side' → logprob: -14.386078834533691
    6. '.side' → logprob: -15.511078834533691
    7. '(side' → logprob: -15.761078834533691
    8. ' ' → logprob: -15.886078834533691
    9. '_side' → logprob: -15.886078834533691
    10. 'Side' → logprob: -16.386077880859375

Token 780: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.003510748967528343
    2. '0' → logprob: -6.00351095199585
    3. '=' → logprob: -7.37851095199585
    4. '1' → logprob: -8.628510475158691
    5. ' -' → logprob: -8.628510475158691
    6. '_-' → logprob: -11.378510475158691
    7. '=-' → logprob: -11.503510475158691
    8. ' ' → logprob: -11.753510475158691
    9. '(-' → logprob: -12.128510475158691
    10. '_' → logprob: -12.128510475158691

Token 781: '_colors' (ID: 79137)
  Prédit: '_colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -0.00035143180866725743
    2. '=' → logprob: -8.375351905822754
    3. 'colors' → logprob: -9.250351905822754
    4. ' =' → logprob: -10.750351905822754
    5. 'Colors' → logprob: -13.500351905822754
    6. '=_' → logprob: -14.750351905822754
    7. '_' → logprob: -14.750351905822754
    8. ' colors' → logprob: -15.500351905822754
    9. '_codes' → logprob: -15.750351905822754
    10. '```' → logprob: -15.750351905822754

Token 782: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858805239200592
    2. ' =' → logprob: -3.0485880374908447
    3. '=set' → logprob: -14.298587799072266
    4. ' ' → logprob: -17.548587799072266
    5. '=
' → logprob: -17.673587799072266
    6. '=

' → logprob: -18.548587799072266
    7. '   ' → logprob: -18.923587799072266
    8. '```' → logprob: -19.048587799072266
    9. 'set' → logprob: -19.298587799072266
    10. 's' → logprob: -19.673587799072266

Token 783: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.06197093799710274
    2. ' set' → logprob: -2.8119709491729736
    3. '(set' → logprob: -13.061970710754395
    4. '{' → logprob: -14.061970710754395
    5. '=set' → logprob: -14.811970710754395
    6. '	set' → logprob: -17.43697166442871
    7. 'c' → logprob: -19.06197166442871
    8. 's' → logprob: -19.18697166442871
    9. ')set' → logprob: -19.31197166442871
    10. '   ' → logprob: -19.43697166442871

Token 784: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -3.8889261304575484e-06
    2. 'c' → logprob: -12.500003814697266
    3. '(' → logprob: -16.000003814697266
    4. '([' → logprob: -18.125003814697266
    5. '(
' → logprob: -18.250003814697266
    6. '[c' → logprob: -18.375003814697266
    7. '(s' → logprob: -19.125003814697266
    8. '((' → logprob: -20.000003814697266
    9. ' (' → logprob: -20.375003814697266
    10. '	c' → logprob: -20.375003814697266

Token 785: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47944405674934387
    2. '(c' → logprob: -1.6044440269470215
    3. 'for' → logprob: -1.7294440269470215
    4. '(s' → logprob: -6.1044440269470215
    5. 'c' → logprob: -9.10444450378418
    6. '(' → logprob: -9.60444450378418
    7. '[c' → logprob: -10.97944450378418
    8. 's' → logprob: -11.10444450378418
    9. '(for' → logprob: -11.10444450378418
    10. ' (' → logprob: -12.10444450378418

Token 786: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00016027313540689647
    2. ' s' → logprob: -8.750160217285156
    3. '(s' → logprob: -13.250160217285156
    4. '   ' → logprob: -18.250160217285156
    5. 'sign' → logprob: -18.250160217285156
    6. 'c' → logprob: -18.375160217285156
    7. '[s' → logprob: -18.750160217285156
    8. ' (' → logprob: -19.250160217285156
    9. '	s' → logprob: -19.250160217285156
    10. '-s' → logprob: -19.250160217285156

Token 787: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010044389637187123
    2. ' ,' → logprob: -10.250100135803223
    3. ' in' → logprob: -10.375100135803223
    4. 's' → logprob: -11.375100135803223
    5. ',s' → logprob: -11.375100135803223
    6. 'in' → logprob: -12.125100135803223
    7. ' ' → logprob: -13.750100135803223
    8. '-' → logprob: -14.000100135803223
    9. ',
' → logprob: -14.500100135803223
    10. ' s' → logprob: -14.500100135803223

Token 788: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005040321499109268
    2. 's' → logprob: -5.880040168762207
    3. ' c' → logprob: -6.130040168762207
    4. ' s' → logprob: -10.630040168762207
    5. '-' → logprob: -11.005040168762207
    6. '(s' → logprob: -12.630040168762207
    7. '-c' → logprob: -12.880040168762207
    8. 'sign' → logprob: -13.380040168762207
    9. '0' → logprob: -13.630040168762207
    10. '   ' → logprob: -13.880040168762207

Token 789: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26712650060653687
    2. '==' → logprob: -2.6421265602111816
    3. ' in' → logprob: -2.7671265602111816
    4. '==-' → logprob: -3.1421265602111816
    5. '-' → logprob: -3.2671265602111816
    6. ' ==' → logprob: -4.642126560211182
    7. 'in' → logprob: -5.142126560211182
    8. ' -' → logprob: -6.767126560211182
    9. 's' → logprob: -6.892126560211182
    10. ' ' → logprob: -7.517126560211182

Token 790: ' signs' (ID: 17424)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007827237248420715
    2. ' -' → logprob: -5.007827281951904
    3. 'sign' → logprob: -7.757827281951904
    4. '(-' → logprob: -8.382826805114746
    5. ' signs' → logprob: -8.632826805114746
    6. '[-' → logprob: -8.882826805114746
    7. '-sign' → logprob: -9.507826805114746
    8. ' (-' → logprob: -11.382826805114746
    9. '0' → logprob: -11.632826805114746
    10. '-s' → logprob: -11.882826805114746

Token 791: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2056434452533722
    2. 'if' → logprob: -1.9556434154510498
    3. ' for' → logprob: -3.83064341545105
    4. 'for' → logprob: -4.080643653869629
    5. '==' → logprob: -5.580643653869629
    6. ' in' → logprob: -6.455643653869629
    7. ' ==' → logprob: -7.955643653869629
    8. 'in' → logprob: -10.080643653869629
    9. '==-' → logprob: -10.580643653869629
    10. ' ' → logprob: -11.080643653869629

Token 792: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.326643168926239
    2. '-' → logprob: -1.5766432285308838
    3. ' s' → logprob: -2.701643228530884
    4. ' -' → logprob: -5.326642990112305
    5. '0' → logprob: -10.701642990112305
    6. '   ' → logprob: -12.326642990112305
    7. ' ' → logprob: -13.201642990112305
    8. '-s' → logprob: -13.701642990112305
    9. '1' → logprob: -13.951642990112305
    10. '(s' → logprob: -14.451642990112305

Token 793: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1520298272371292
    2. ' ==' → logprob: -2.6520297527313232
    3. '==-' → logprob: -2.6520297527313232
    4. '-' → logprob: -11.527029991149902
    5. '!=' → logprob: -11.902029991149902
    6. '==
' → logprob: -13.402029991149902
    7. ' !=' → logprob: -14.152029991149902
    8. ' -' → logprob: -14.277029991149902
    9. ' ' → logprob: -14.902029991149902
    10. '=' → logprob: -15.152029991149902

Token 794: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.4391956685576588e-05
    2. ' -' → logprob: -10.625024795532227
    3. '1' → logprob: -17.625024795532227
    4. '0' → logprob: -17.875024795532227
    5. '   ' → logprob: -18.250024795532227
    6. '−' → logprob: -19.500024795532227
    7. ' ' → logprob: -19.625024795532227
    8. '(-' → logprob: -20.250024795532227
    9. '```' → logprob: -20.250024795532227
    10. '--' → logprob: -20.750024795532227

Token 795: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '<|end|>' → logprob: -16.125015258789062
    4. '0' → logprob: -17.250015258789062
    5. '   ' → logprob: -17.625015258789062
    6. '```' → logprob: -17.750015258789062
    7. ')' → logprob: -18.125015258789062
    8. ',' → logprob: -18.875015258789062
    9. '=' → logprob: -19.437515258789062
    10. '2' → logprob: -19.500015258789062

Token 796: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009518369333818555
    2. ')
' → logprob: -7.250951766967773
    3. ')

' → logprob: -8.500951766967773
    4. '               ' → logprob: -10.250951766967773
    5. '           ' → logprob: -13.500951766967773
    6. ' )' → logprob: -14.500951766967773
    7. ')
' → logprob: -14.875951766967773
    8. ')**' → logprob: -15.500951766967773
    9. '       ' → logprob: -15.625951766967773
    10. ').' → logprob: -16.000951766967773

Token 797: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10106654465198517
    2. '           ' → logprob: -2.3510665893554688
    3. '```' → logprob: -7.101066589355469
    4. ' if' → logprob: -11.476066589355469
    5. '<|end|>' → logprob: -11.601066589355469
    6. '                   ' → logprob: -12.476066589355469
    7. '   ' → logprob: -12.976066589355469
    8. '	           ' → logprob: -13.101066589355469
    9. '       ' → logprob: -13.601066589355469
    10. '``' → logprob: -13.726066589355469

Token 798: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5241193771362305
    2. 'if' (adapté à ' if') → logprob: -1.1491193771362305
    3. '               ' → logprob: -2.6491193771362305
    4. ' if' → logprob: -3.8991193771362305
    5. '       ' → logprob: -11.89911937713623
    6. '   ' → logprob: -11.89911937713623
    7. 'If' → logprob: -12.39911937713623
    8. '```' → logprob: -12.39911937713623
    9. '	           ' → logprob: -12.89911937713623
    10. ' ' → logprob: -13.14911937713623

Token 799: ' (' (ID: 350)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.4258445203304291
    2. ' side' → logprob: -1.6758445501327515
    3. '(side' → logprob: -2.300844430923462
    4. ' (' → logprob: -3.300844430923462
    5. ' len' → logprob: -4.925844669342041
    6. '(len' → logprob: -5.050844669342041
    7. 'len' → logprob: -5.425844669342041
    8. '(' → logprob: -5.425844669342041
    9. ' ' → logprob: -9.925844192504883
    10. '   ' → logprob: -10.300844192504883

Token 800: 'side' (ID: 4341)
  Prédit: 'side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.02700568176805973
    2. 'len' → logprob: -3.902005672454834
    3. '(side' → logprob: -6.027005672454834
    4. '(' → logprob: -6.152005672454834
    5. '0' → logprob: -6.402005672454834
    6. '(len' → logprob: -8.527006149291992
    7. ' side' → logprob: -10.652006149291992
    8. ' (' → logprob: -11.027006149291992
    9. ' len' → logprob: -13.152006149291992
    10. ' ' → logprob: -14.277006149291992

Token 801: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -13.375003814697266
    3. '1' → logprob: -14.125003814697266
    4. '_' → logprob: -15.000003814697266
    5. '
' → logprob: -15.125003814697266
    6. '   ' → logprob: -16.000003814697266
    7. '==' → logprob: -16.250003814697266
    8. '=' → logprob: -16.437503814697266
    9. '       ' → logprob: -16.812503814697266
    10. '[' → logprob: -16.812503814697266

Token 802: '_colors' (ID: 79137)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4377727806568146
    2. ' ==' → logprob: -1.1877727508544922
    3. '_colors' → logprob: -3.062772750854492
    4. '<=' → logprob: -6.437772750854492
    5. '.' → logprob: -7.312772750854492
    6. ' <=' → logprob: -8.187772750854492
    7. 'colors' → logprob: -9.062772750854492
    8. ' ' → logprob: -10.062772750854492
    9. 'Colors' → logprob: -10.187772750854492
    10. '|' → logprob: -10.187772750854492

Token 803: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.003040101146325469
    2. ' ==' → logprob: -5.878040313720703
    3. '<=' → logprob: -8.378040313720703
    4. '==
' → logprob: -13.128040313720703
    5. '.' → logprob: -13.378040313720703
    6. 'in' → logprob: -14.128040313720703
    7. ' <=' → logprob: -14.503040313720703
    8. ' in' → logprob: -15.378040313720703
    9. '==(' → logprob: -15.878040313720703
    10. ' ' → logprob: -17.253040313720703

Token 804: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -7.896309739408025e-07
    2. 'set' → logprob: -14.250000953674316
    3. ' {' → logprob: -17.0
    4. '   ' → logprob: -22.625
    5. '{s' → logprob: -23.0
    6. '{
' → logprob: -23.125
    7. '{x' → logprob: -24.0
    8. '{sub' → logprob: -24.375
    9. '
' → logprob: -24.75
    10. '({' → logprob: -24.875

Token 805: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0445127372804563e-05
    2. '1' → logprob: -11.50001049041748
    3. ' ' → logprob: -15.25001049041748
    4. '   ' → logprob: -17.875009536743164
    5. '
' → logprob: -19.250009536743164
    6. '{' → logprob: -19.625009536743164
    7. '۰' → logprob: -20.000009536743164
    8. '  ' → logprob: -20.937509536743164
    9. '

' → logprob: -20.937509536743164
    10. ' ' → logprob: -21.000009536743164

Token 806: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00013762809976469725
    2. ' }' → logprob: -9.250137329101562
    3. ',' → logprob: -10.500137329101562
    4. '})' → logprob: -11.500137329101562
    5. ' or' → logprob: -13.625137329101562
    6. 'or' → logprob: -13.875137329101562
    7. '}
' → logprob: -14.375137329101562
    8. 'and' → logprob: -15.000137329101562
    9. ' and' → logprob: -16.000137329101562
    10. ')' → logprob: -16.000137329101562

Token 807: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08118215203285217
    2. 'and' → logprob: -2.5811822414398193
    3. ' or' → logprob: -6.20618200302124
    4. ')' → logprob: -8.331182479858398
    5. 'or' → logprob: -10.831182479858398
    6. '               ' → logprob: -11.831182479858398
    7. ' ' → logprob: -13.456182479858398
    8. '           ' → logprob: -13.706182479858398
    9. '                   ' → logprob: -13.831182479858398
    10. '            ' → logprob: -14.956182479858398

Token 808: ' side' (ID: 4307)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.1128622367978096
    2. ' side' → logprob: -2.2378623485565186
    3. '(side' → logprob: -11.112862586975098
    4. '   ' → logprob: -11.612862586975098
    5. ' ' → logprob: -12.362862586975098
    6. '  ' → logprob: -12.737862586975098
    7. '           ' → logprob: -12.987862586975098
    8. '	side' → logprob: -13.237862586975098
    9. '       ' → logprob: -13.362862586975098
    10. '               ' → logprob: -13.862862586975098

Token 809: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.747814349073451e-05
    2. ' ' → logprob: -12.375017166137695
    3. '==' → logprob: -12.375017166137695
    4. '0' → logprob: -13.250017166137695
    5. ' ==' → logprob: -13.375017166137695
    6. '   ' → logprob: -13.500017166137695
    7. '-' → logprob: -13.625017166137695
    8. '```' → logprob: -13.625017166137695
    9. '_' → logprob: -15.312517166137695
    10. '==-' → logprob: -15.562517166137695

Token 810: '_colors' (ID: 79137)
  Prédit: '_colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -7.183501293184236e-05
    2. '==' → logprob: -10.00007152557373
    3. ' ==' → logprob: -10.87507152557373
    4. '_' → logprob: -12.37507152557373
    5. 'colors' → logprob: -13.25007152557373
    6. '```' → logprob: -15.25007152557373
    7. '=' → logprob: -15.37507152557373
    8. '_codes' → logprob: -15.75007152557373
    9. 'Colors' → logprob: -15.87507152557373
    10. '_chars' → logprob: -16.000072479248047

Token 811: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.313263863325119
    2. ' ==' → logprob: -1.3132638931274414
    3. '==
' → logprob: -13.688263893127441
    4. ' ' → logprob: -15.313263893127441
    5. '===' → logprob: -15.313263893127441
    6. ')==' → logprob: -15.563263893127441
    7. '=' → logprob: -15.813263893127441
    8. '()==' → logprob: -16.813262939453125
    9. '==(' → logprob: -17.188262939453125
    10. ']==' → logprob: -17.313262939453125

Token 812: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.00020354038861114532
    2. ' {' → logprob: -8.500203132629395
    3. '{
' → logprob: -19.12520408630371
    4. ' ' → logprob: -21.00020408630371
    5. '1' → logprob: -21.50020408630371
    6. 'set' → logprob: -22.00020408630371
    7. '   ' → logprob: -22.37520408630371
    8. '
' → logprob: -22.37520408630371
    9. '  ' → logprob: -23.50020408630371
    10. ' ' → logprob: -23.75020408630371

Token 813: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -17.5
    4. '```' → logprob: -18.5
    5. '
' → logprob: -19.0
    6. '}' → logprob: -19.375
    7. '<|end|>' → logprob: -19.5
    8. '0' → logprob: -19.5
    9. '`' → logprob: -20.0625
    10. '۱' → logprob: -20.375

Token 814: '})' (ID: 9263)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018657641485333443
    2. '})' → logprob: -4.018657684326172
    3. '               ' → logprob: -7.768657684326172
    4. '}' → logprob: -10.143657684326172
    5. ')}' → logprob: -11.143657684326172
    6. '):
' → logprob: -11.518657684326172
    7. '                   ' → logprob: -11.518657684326172
    8. ' })' → logprob: -12.268657684326172
    9. '           ' → logprob: -12.893657684326172
    10. '}')' → logprob: -14.393657684326172

Token 815: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.011115494184195995
    2. '                   ' → logprob: -5.136115550994873
    3. 'or' → logprob: -5.886115550994873
    4. '               ' → logprob: -6.136115550994873
    5. '                       ' → logprob: -8.761115074157715
    6. ':' → logprob: -11.011115074157715
    7. '                  ' → logprob: -11.136115074157715
    8. '                ' → logprob: -11.636115074157715
    9. '              ' → logprob: -12.011115074157715
    10. '                    ' → logprob: -12.261115074157715

Token 816: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.44031471014022827
    2. '(side' → logprob: -1.065314769744873
    3. '(' → logprob: -4.565314769744873
    4. '               ' → logprob: -6.940314769744873
    5. '              ' → logprob: -9.190314292907715
    6. '                   ' → logprob: -11.190314292907715
    7. ' side' → logprob: -11.315314292907715
    8. '(s' → logprob: -11.690314292907715
    9. '                ' → logprob: -12.065314292907715
    10. '                  ' → logprob: -12.065314292907715

Token 817: 'side' (ID: 4341)
  Prédit: 'side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.03143215551972389
    2. ' side' → logprob: -3.6564321517944336
    3. '(side' → logprob: -5.281432151794434
    4. '	side' → logprob: -11.281432151794434
    5. '(' → logprob: -11.531432151794434
    6. ' (' → logprob: -11.906432151794434
    7. '           ' → logprob: -13.656432151794434
    8. '   ' → logprob: -14.156432151794434
    9. '               ' → logprob: -14.156432151794434
    10. '.side' → logprob: -14.156432151794434

Token 818: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17974978685379028
    2. '1' → logprob: -1.8047497272491455
    3. '_' → logprob: -12.929749488830566
    4. ' ' → logprob: -13.304749488830566
    5. '==' → logprob: -15.054749488830566
    6. '```' → logprob: -15.429749488830566
    7. '   ' → logprob: -15.554749488830566
    8. '-' → logprob: -16.054750442504883
    9. ' ==' → logprob: -16.929750442504883
    10. '``' → logprob: -16.992250442504883

Token 819: '_colors' (ID: 79137)
  Prédit: '_colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -3.893480243277736e-05
    2. '0' → logprob: -10.250039100646973
    3. 'colors' → logprob: -12.875039100646973
    4. '_' → logprob: -14.625039100646973
    5. 'Colors' → logprob: -16.125038146972656
    6. '```' → logprob: -16.500038146972656
    7. '
' → logprob: -16.625038146972656
    8. '_col' → logprob: -17.250038146972656
    9. '_codes' → logprob: -18.000038146972656
    10. '_chars' → logprob: -18.250038146972656

Token 820: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20141597092151642
    2. '==' → logprob: -1.701416015625
    3. ' ' → logprob: -13.826416015625
    4. ')==' → logprob: -14.451416015625
    5. '==
' → logprob: -15.201416015625
    6. '==(' → logprob: -15.326416015625
    7. '{' → logprob: -15.701416015625
    8. ' ' → logprob: -15.951416015625
    9. ' ==
' → logprob: -16.326416015625
    10. '()==' → logprob: -16.701416015625

Token 821: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -2.15310683415737e-05
    2. ' {' → logprob: -10.750021934509277
    3. ' ' → logprob: -20.12502098083496
    4. '({' → logprob: -21.12502098083496
    5. '   ' → logprob: -21.62502098083496
    6. '1' → logprob: -22.25002098083496
    7. '
' → logprob: -22.50002098083496
    8. '  ' → logprob: -22.75002098083496
    9. '{
' → logprob: -22.75002098083496
    10. '{{' → logprob: -23.62502098083496

Token 822: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '{' → logprob: -16.75
    4. '0' → logprob: -17.125
    5. '   ' → logprob: -17.875
    6. '
' → logprob: -18.0
    7. '```' → logprob: -19.0
    8. '  ' → logprob: -20.75
    9. '۱' → logprob: -21.0625
    10. '(' → logprob: -21.125

Token 823: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -1.9623810658231378e-05
    2. ' }' → logprob: -10.875020027160645
    3. 'and' → logprob: -14.750020027160645
    4. '}
' → logprob: -15.875020027160645
    5. ' and' → logprob: -16.625019073486328
    6. '   ' → logprob: -17.500019073486328
    7. '})' → logprob: -18.375019073486328
    8. '`}' → logprob: -18.750019073486328
    9. '},' → logprob: -19.000019073486328
    10. '0' → logprob: -19.125019073486328

Token 824: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3869326412677765
    2. 'and' → logprob: -1.136932611465454
    3. ' ' → logprob: -10.386932373046875
    4. '   ' → logprob: -11.136932373046875
    5. ')' → logprob: -11.511932373046875
    6. '    ' → logprob: -13.886932373046875
    7. '}' → logprob: -14.136932373046875
    8. '           ' → logprob: -14.136932373046875
    9. '  ' → logprob: -14.386932373046875
    10. '```' → logprob: -14.511932373046875

Token 825: ' side' (ID: 4307)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.0789182111620903
    2. ' side' → logprob: -2.578918218612671
    3. '{' → logprob: -10.95391845703125
    4. '(side' → logprob: -11.95391845703125
    5. '   ' → logprob: -13.32891845703125
    6. '	side' → logprob: -13.57891845703125
    7. ' ' → logprob: -13.70391845703125
    8. '
' → logprob: -15.95391845703125
    9. ' {' → logprob: -16.20391845703125
    10. '  ' → logprob: -16.57891845703125

Token 826: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.069664333248511e-05
    2. '0' → logprob: -11.000020980834961
    3. '{' → logprob: -12.750020980834961
    4. '_' → logprob: -13.875020980834961
    5. '
' → logprob: -17.50002098083496
    6. '```' → logprob: -17.75002098083496
    7. ' ' → logprob: -18.25002098083496
    8. '{
' → logprob: -18.50002098083496
    9. ')' → logprob: -18.75002098083496
    10. '   ' → logprob: -18.87502098083496

Token 827: '_colors' (ID: 79137)
  Prédit: '_colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -0.31344330310821533
    2. '1' → logprob: -1.3134433031082153
    3. '0' → logprob: -8.688443183898926
    4. '_' → logprob: -12.188443183898926
    5. '_sizes' → logprob: -13.813443183898926
    6. 'colors' → logprob: -13.938443183898926
    7. 'Colors' → logprob: -13.938443183898926
    8. '_col' → logprob: -14.188443183898926
    9. '   ' → logprob: -14.688443183898926
    10. '```' → logprob: -15.188443183898926

Token 828: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47408369183540344
    2. ' ==' → logprob: -0.974083662033081
    3. '{' → logprob: -12.72408390045166
    4. '=' → logprob: -13.59908390045166
    5. ' ' → logprob: -14.22408390045166
    6. '}' → logprob: -14.34908390045166
    7. '==
' → logprob: -15.22408390045166
    8. ')' → logprob: -15.47408390045166
    9. ')==' → logprob: -15.47408390045166
    10. '```' → logprob: -16.349082946777344

Token 829: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -1.7120533811976202e-05
    2. ' {' → logprob: -11.000017166137695
    3. '0' → logprob: -14.875017166137695
    4. '{
' → logprob: -18.250017166137695
    5. ' ' → logprob: -20.125017166137695
    6. '   ' → logprob: -20.375017166137695
    7. 'set' → logprob: -21.000017166137695
    8. '{-' → logprob: -21.250017166137695
    9. '{{' → logprob: -21.500017166137695
    10. '```' → logprob: -21.625017166137695

Token 830: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '   ' → logprob: -18.125
    4. '{' → logprob: -19.0
    5. '۰' → logprob: -20.5
    6. '  ' → logprob: -21.25
    7. '```' → logprob: -21.25
    8. ' ' → logprob: -21.625
    9. '1' → logprob: -21.625
    10. '
' → logprob: -21.875

Token 831: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0005923516000621021
    2. ')}' → logprob: -8.625592231750488
    3. '})' → logprob: -8.750592231750488
    4. '):
' → logprob: -9.000592231750488
    5. '               ' → logprob: -9.500592231750488
    6. '):' → logprob: -11.625592231750488
    7. '           ' → logprob: -11.750592231750488
    8. ' }):' → logprob: -11.750592231750488
    9. '}:' → logprob: -11.875592231750488
    10. '   ' → logprob: -12.125592231750488

Token 832: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20481252670288086
    2. '):' → logprob: -1.7048125267028809
    3. '               ' → logprob: -5.829812526702881
    4. ')' → logprob: -8.954813003540039
    5. '           ' → logprob: -8.954813003540039
    6. ':' → logprob: -9.454813003540039
    7. ':
' → logprob: -9.829813003540039
    8. '                   ' → logprob: -10.454813003540039
    9. '):
' → logprob: -11.079813003540039
    10. '):

' → logprob: -11.704813003540039

Token 833: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00031735055381432176
    2. '               ' → logprob: -8.875317573547363
    3. '                       ' → logprob: -9.250317573547363
    4. 'return' → logprob: -9.500317573547363
    5. ' return' → logprob: -12.375317573547363
    6. '           ' → logprob: -13.625317573547363
    7. '       ' → logprob: -14.125317573547363
    8. '                  ' → logprob: -16.250316619873047
    9. '                           ' → logprob: -16.500316619873047
    10. '   ' → logprob: -16.750316619873047

Token 834: ' return' (ID: 622)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.32295316457748413
    2. 'return' (adapté à ' return') → logprob: -1.322953224182129
    3. '                       ' → logprob: -5.072953224182129
    4. ' return' → logprob: -5.822953224182129
    5. '               ' → logprob: -7.822953224182129
    6. '           ' → logprob: -11.197953224182129
    7. '       ' → logprob: -12.447953224182129
    8. '   ' → logprob: -13.072953224182129
    9. '	return' → logprob: -14.572953224182129
    10. '                           ' → logprob: -15.197953224182129

Token 835: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.5048530030981055e-06
    2. ' True' → logprob: -13.500001907348633
    3. '(True' → logprob: -24.500001907348633
    4. 'true' → logprob: -24.625001907348633
    5. '   ' → logprob: -24.750001907348633
    6. 'False' → logprob: -25.000001907348633
    7. '=True' → logprob: -26.875001907348633
    8. '`' → logprob: -27.500001907348633
    9. ' ' → logprob: -27.750001907348633
    10. '  ' → logprob: -28.000001907348633

Token 836: '

' (ID: 279)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.797145664691925
    2. '   ' → logprob: -0.922145664691925
    3. '        
' → logprob: -2.9221456050872803
    4. '       ' → logprob: -3.2971456050872803
    5. '
' → logprob: -4.172145843505859
    6. '            
' → logprob: -4.672145843505859
    7. '  
' → logprob: -4.922145843505859
    8. '           ' → logprob: -4.922145843505859
    9. 'return' → logprob: -5.172145843505859
    10. '                        
' → logprob: -5.922145843505859

Token 837: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009228924172930419
    2. 'return' → logprob: -7.375922679901123
    3. '    
' → logprob: -9.000923156738281
    4. '       ' → logprob: -9.375923156738281
    5. ' return' → logprob: -10.375923156738281
    6. '
' → logprob: -10.625923156738281
    7. '```' → logprob: -11.000923156738281
    8. '        
' → logprob: -12.250923156738281
    9. '	return' → logprob: -12.500923156738281
    10. '           ' → logprob: -12.875923156738281

Token 838: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.029928438365459442
    2. '   ' → logprob: -3.52992844581604
    3. ' return' → logprob: -8.779928207397461
    4. '```' → logprob: -11.279928207397461
    5. '    
' → logprob: -12.529928207397461
    6. '
' → logprob: -12.779928207397461
    7. 'False' → logprob: -13.029928207397461
    8. '	return' → logprob: -13.154928207397461
    9. 'false' → logprob: -15.029928207397461
    10. '{return' → logprob: -15.404928207397461

Token 839: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.306760805164231e-05
    2. ' False' → logprob: -11.25001335144043
    3. '(False' → logprob: -23.12501335144043
    4. 'True' → logprob: -23.25001335144043
    5. '_false' → logprob: -23.50001335144043
    6. 'false' → logprob: -24.62501335144043
    7. '=False' → logprob: -26.12501335144043
    8. '   ' → logprob: -26.87501335144043
    9. '.False' → logprob: -27.37501335144043
    10. 'FALSE' → logprob: -27.87501335144043

Token 840: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 841: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 842: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.47629493474960327
    2. ' is' → logprob: -1.976294994354248
    3. ' can' → logprob: -2.851294994354248
    4. ' test' → logprob: -3.101294994354248
    5. ' separate' → logprob: -3.851294994354248
    6. ' black' → logprob: -4.101294994354248
    7. ' check' → logprob: -4.101294994354248
    8. ' possible' → logprob: -4.226294994354248
    9. ' points' → logprob: -4.601294994354248
    10. ' convex' → logprob: -4.851294994354248

Token 843: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001959678716957569
    2. '():
' → logprob: -6.251959800720215
    3. ' ():' → logprob: -10.751959800720215
    4. '()' → logprob: -12.626959800720215
    5. '():
' → logprob: -12.876959800720215
    6. '(' → logprob: -13.751959800720215
    7. '_' → logprob: -13.876959800720215
    8. '():

' → logprob: -14.001959800720215
    9. '()>' → logprob: -14.876959800720215
    10. '().' → logprob: -16.5019588470459

Token 844: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0051935515366494656
    2. ' points' → logprob: -5.880193710327148
    3. ' import' → logprob: -6.505193710327148
    4. 'import' → logprob: -7.255193710327148
    5. '(points' → logprob: -9.505193710327148
    6. '```' → logprob: -10.255193710327148
    7. 'points' → logprob: -10.630193710327148
    8. ' if' → logprob: -11.505193710327148
    9. ' n' → logprob: -11.880193710327148
    10. ' input' → logprob: -12.005193710327148

Token 845: ' while' (ID: 2049)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.27305883169174194
    2. 'n' → logprob: -1.7730588912963867
    3. ' import' → logprob: -3.7730588912963867
    4. '   ' → logprob: -4.023058891296387
    5. ' points' → logprob: -4.148058891296387
    6. 'import' → logprob: -4.523058891296387
    7. 'points' → logprob: -7.398058891296387
    8. 't' → logprob: -7.648058891296387
    9. ' t' → logprob: -8.523058891296387
    10. ' T' → logprob: -8.898058891296387

Token 846: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0031880477908998728
    2. ' True' → logprob: -5.753188133239746
    3. '(True' → logprob: -11.503188133239746
    4. '=True' → logprob: -15.878188133239746
    5. '1' → logprob: -16.50318717956543
    6. 'true' → logprob: -17.75318717956543
    7. '   ' → logprob: -19.87818717956543
    8. '_true' → logprob: -21.50318717956543
    9. '  ' → logprob: -21.62818717956543
    10. '(' → logprob: -21.62818717956543

Token 847: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2595936357975006
    2. '():' → logprob: -2.0095937252044678
    3. '   ' → logprob: -3.1345937252044678
    4. '():
' → logprob: -3.6345937252044678
    5. '       ' → logprob: -4.509593486785889
    6. ':
' → logprob: -4.634593486785889
    7. ',' → logprob: -7.134593486785889
    8. '.' → logprob: -7.384593486785889
    9. '(' → logprob: -7.384593486785889
    10. ' :' → logprob: -8.259593963623047

Token 848: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017190889921039343
    2. ' try' → logprob: -7.001718997955322
    3. ' line' → logprob: -7.251718997955322
    4. 'try' → logprob: -9.37671947479248
    5. '       ' → logprob: -11.87671947479248
    6. '   ' → logprob: -12.62671947479248
    7. '```' → logprob: -13.25171947479248
    8. 'line' → logprob: -13.75171947479248
    9. '    
' → logprob: -15.75171947479248
    10. '	try' → logprob: -16.001718521118164

Token 849: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.0716598704457283
    2. 'try' → logprob: -2.821659803390503
    3. ' line' → logprob: -4.821660041809082
    4. '   ' → logprob: -6.821660041809082
    5. ' try' → logprob: -8.196660041809082
    6. 'n' → logprob: -8.446660041809082
    7. 's' → logprob: -11.946660041809082
    8. ' n' → logprob: -12.946660041809082
    9. '	line' → logprob: -13.446660041809082
    10. '```' → logprob: -14.446660041809082

Token 850: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022463142871857
    2. ' =' → logprob: -1.9102246761322021
    3. '=line' → logprob: -15.785224914550781
    4. '=input' → logprob: -15.910224914550781
    5. 's' → logprob: -16.16022491455078
    6. '_' → logprob: -17.41022491455078
    7. '=
' → logprob: -17.66022491455078
    8. '.' → logprob: -17.78522491455078
    9. ' ' → logprob: -18.03522491455078
    10. '_=' → logprob: -18.41022491455078

Token 851: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0001584850688232109
    2. ' input' → logprob: -8.750158309936523
    3. '=input' → logprob: -19.125158309936523
    4. '(input' → logprob: -20.250158309936523
    5. '   ' → logprob: -21.750158309936523
    6. '	input' → logprob: -21.875158309936523
    7. '<input' → logprob: -22.250158309936523
    8. '_input' → logprob: -23.125158309936523
    9. '
' → logprob: -23.875158309936523
    10. '    
' → logprob: -24.500158309936523

Token 852: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00226765894331038
    2. '().' → logprob: -6.127267837524414
    3. '()
' → logprob: -9.502267837524414
    4. '=' → logprob: -13.002267837524414
    5. '(' → logprob: -14.002267837524414
    6. '()>' → logprob: -14.002267837524414
    7. ' =' → logprob: -14.377267837524414
    8. ' ()' → logprob: -14.377267837524414
    9. '()

' → logprob: -14.752267837524414
    10. '()">' → logprob: -15.127267837524414

Token 853: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.8624639324116288e-06
    2. 'rstrip' → logprob: -13.250001907348633
    3. ' strip' → logprob: -18.250001907348633
    4. 'split' → logprob: -18.875001907348633
    5. '.strip' → logprob: -21.250001907348633
    6. '_strip' → logprob: -21.250001907348633
    7. '(strip' → logprob: -21.625001907348633
    8. '-strip' → logprob: -22.500001907348633
    9. 'startswith' → logprob: -23.625001907348633
    10. 'stripe' → logprob: -24.875001907348633

Token 854: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12695321440696716
    2. '()
' → logprob: -2.126953125
    3. '()
' → logprob: -12.001953125
    4. '(' → logprob: -12.251953125
    5. ')' → logprob: -12.751953125
    6. 'def' → logprob: -12.876953125
    7. '()

' → logprob: -13.001953125
    8. '())' → logprob: -13.126953125
    9. '()\' → logprob: -14.126953125
    10. '|()
' → logprob: -14.876953125

Token 855: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6013790965080261
    2. ' if' → logprob: -0.9763790965080261
    3. '   ' → logprob: -3.226379156112671
    4. '       ' → logprob: -3.351379156112671
    5. '<|end|>' → logprob: -8.22637939453125
    6. '```' → logprob: -8.97637939453125
    7. '	if' → logprob: -9.60137939453125
    8. 'If' → logprob: -10.47637939453125
    9. ' ' → logprob: -11.10137939453125
    10. '           ' → logprob: -12.22637939453125

Token 856: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.2664456789934775e-06
    2. ' if' → logprob: -13.750000953674316
    3. '   ' → logprob: -15.750000953674316
    4. '       ' → logprob: -17.625001907348633
    5. 'If' → logprob: -21.250001907348633
    6. '           ' → logprob: -21.375001907348633
    7. '	if' → logprob: -21.625001907348633
    8. '        
' → logprob: -22.500001907348633
    9. '    ' → logprob: -23.500001907348633
    10. '
' → logprob: -23.500001907348633

Token 857: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2020478993654251
    2. 'line' → logprob: -2.202047824859619
    3. ' line' → logprob: -3.202047824859619
    4. 'not' → logprob: -3.452047824859619
    5. '#line' → logprob: -12.702048301696777
    6. '(line' → logprob: -13.577048301696777
    7. '[line' → logprob: -13.702048301696777
    8. '	line' → logprob: -13.702048301696777
    9. ' ' → logprob: -13.952048301696777
    10. '=line' → logprob: -14.202048301696777

Token 858: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.011057846248149872
    2. ' ==' → logprob: -4.5110578536987305
    3. '=' → logprob: -12.38605785369873
    4. '()==' → logprob: -12.76105785369873
    5. '===' → logprob: -13.13605785369873
    6. '=='' → logprob: -15.26105785369873
    7. '=="' → logprob: -15.26105785369873
    8. ')==' → logprob: -15.51105785369873
    9. ']==' → logprob: -15.63605785369873
    10. '==
' → logprob: -15.76105785369873

Token 859: ' '':
' (ID: 125614)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3993203639984131
    2. ''' → logprob: -1.149320363998413
    3. '''' → logprob: -4.649320602416992
    4. '""' → logprob: -6.024320602416992
    5. '"":' → logprob: -8.149320602416992
    6. ''end' → logprob: -10.399320602416992
    7. '0' → logprob: -10.774320602416992
    8. ''ex' → logprob: -11.274320602416992
    9. ''q' → logprob: -11.774320602416992
    10. ' '' → logprob: -11.774320602416992

Token 860: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2829357087612152
    2. '           ' → logprob: -1.4079357385635376
    3. '   ' → logprob: -6.407935619354248
    4. 'break' → logprob: -10.032936096191406
    5. ' break' → logprob: -10.282936096191406
    6. '	break' → logprob: -11.657936096191406
    7. '               ' → logprob: -12.032936096191406
    8. '	   ' → logprob: -12.032936096191406
    9. ' ' → logprob: -12.157936096191406
    10. ',' → logprob: -12.407936096191406

Token 861: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0018091757083311677
    2. '       ' → logprob: -6.501809120178223
    3. 'return' → logprob: -8.501809120178223
    4. ' break' → logprob: -9.501809120178223
    5. '           ' → logprob: -10.751809120178223
    6. '	break' → logprob: -12.001809120178223
    7. '```' → logprob: -14.251809120178223
    8. 'Break' → logprob: -15.001809120178223
    9. '   ' → logprob: -15.501809120178223
    10. 'b' → logprob: -16.62681007385254

Token 862: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017195509281009436
    2. '<|end|>' → logprob: -9.625171661376953
    3. 'if' → logprob: -10.125171661376953
    4. 'try' → logprob: -10.875171661376953
    5. ' if' → logprob: -11.375171661376953
    6. '        
' → logprob: -11.750171661376953
    7. '```' → logprob: -11.875171661376953
    8. '           ' → logprob: -12.125171661376953
    9. '   ' → logprob: -12.625171661376953
    10. ',' → logprob: -12.625171661376953

Token 863: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011990104801952839
    2. 'try' → logprob: -5.511990070343018
    3. 'if' → logprob: -5.636990070343018
    4. ' if' → logprob: -5.636990070343018
    5. '```' → logprob: -8.136990547180176
    6. ' try' → logprob: -8.386990547180176
    7. '   ' → logprob: -8.636990547180176
    8. '           ' → logprob: -10.761990547180176
    9. 'token' → logprob: -11.261990547180176
    10. '<|end|>' → logprob: -12.011990547180176

Token 864: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.037285156548023224
    2. 'if' → logprob: -3.412285089492798
    3. 'try' → logprob: -5.912285327911377
    4. ' n' → logprob: -8.162284851074219
    5. '   ' → logprob: -8.287284851074219
    6. 'N' → logprob: -8.662284851074219
    7. ' if' → logprob: -9.037284851074219
    8. 'num' → logprob: -9.662284851074219
    9. 'parts' → logprob: -11.287284851074219
    10. ' try' → logprob: -12.287284851074219

Token 865: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.281753271818161
    2. '=' → logprob: -1.4067533016204834
    3. ',' → logprob: -7.656753063201904
    4. '=int' → logprob: -9.281753540039062
    5. ')' → logprob: -10.781753540039062
    6. ' ' → logprob: -12.656753540039062
    7. '_' → logprob: -13.281753540039062
    8. ' =
' → logprob: -13.281753540039062
    9. 's' → logprob: -13.531753540039062
    10. 'tokens' → logprob: -13.656753540039062

Token 866: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -5.12127808178775e-05
    2. '*m' → logprob: -10.750051498413086
    3. ' m' → logprob: -10.875051498413086
    4. '=' → logprob: -12.375051498413086
    5. '*' → logprob: -12.500051498413086
    6. 'k' → logprob: -13.625051498413086
    7. '_m' → logprob: -14.500051498413086
    8. 'w' → logprob: -14.750051498413086
    9. ' =' → logprob: -15.250051498413086
    10. 'n' → logprob: -15.625051498413086

Token 867: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04861303046345711
    2. ' =' → logprob: -3.0486130714416504
    3. ',' → logprob: -10.673612594604492
    4. ')' → logprob: -14.173612594604492
    5. '<|end|>' → logprob: -14.423612594604492
    6. '=int' → logprob: -14.673612594604492
    7. '=line' → logprob: -15.423612594604492
    8. ')=' → logprob: -15.798612594604492
    9. '＝' → logprob: -16.173612594604492
    10. '=
' → logprob: -16.423612594604492

Token 868: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.474077433347702
    2. ' map' → logprob: -0.9740774631500244
    3. '(map' → logprob: -15.474077224731445
    4. '	map' → logprob: -16.099077224731445
    5. '[' → logprob: -16.599077224731445
    6. 'line' → logprob: -17.099077224731445
    7. ' line' → logprob: -17.724077224731445
    8. 'list' → logprob: -17.849077224731445
    9. '_map' → logprob: -18.849077224731445
    10. '.map' → logprob: -19.224077224731445

Token 869: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00018458699923940003
    2. '(str' → logprob: -9.000185012817383
    3. 'int' → logprob: -9.750185012817383
    4. '(' → logprob: -13.125185012817383
    5. '[int' → logprob: -14.375185012817383
    6. 'str' → logprob: -16.250185012817383
    7. '<int' → logprob: -16.875185012817383
    8. '=int' → logprob: -17.000185012817383
    9. '(lambda' → logprob: -17.125185012817383
    10. ',int' → logprob: -18.875185012817383

Token 870: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.1237846314907074
    2. ',line' → logprob: -2.4987845420837402
    3. ',' → logprob: -3.4987845420837402
    4. 'line' → logprob: -5.87378454208374
    5. '=line' → logprob: -7.37378454208374
    6. '[line' → logprob: -8.498785018920898
    7. '#line' → logprob: -8.623785018920898
    8. ' line' → logprob: -8.998785018920898
    9. ',input' → logprob: -10.248785018920898
    10. '(input' → logprob: -11.623785018920898

Token 871: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00043102685594931245
    2. ' line' → logprob: -7.750431060791016
    3. '(line' → logprob: -15.000431060791016
    4. '[line' → logprob: -18.000431060791016
    5. '=line' → logprob: -18.125431060791016
    6. 'input' → logprob: -19.375431060791016
    7. 'map' → logprob: -19.625431060791016
    8. 'list' → logprob: -19.875431060791016
    9. '	line' → logprob: -20.250431060791016
    10. '#line' → logprob: -21.625431060791016

Token 872: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0019984657410532236
    2. '.split' → logprob: -6.251998424530029
    3. '()' → logprob: -10.626998901367188
    4. '.' → logprob: -11.001998901367188
    5. '.strip' → logprob: -11.501998901367188
    6. 'split' → logprob: -11.751998901367188
    7. ' .' → logprob: -12.501998901367188
    8. '(split' → logprob: -13.001998901367188
    9. '(' → logprob: -13.751998901367188
    10. ')' → logprob: -14.001998901367188

Token 873: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.009390056133270264
    2. '()' → logprob: -4.759389877319336
    3. '('' → logprob: -7.384389877319336
    4. '())
' → logprob: -9.634389877319336
    5. ')' → logprob: -9.884389877319336
    6. '(' → logprob: -10.259389877319336
    7. '(','' → logprob: -13.884389877319336
    8. ' ())' → logprob: -14.259389877319336
    9. '()))' → logprob: -15.384389877319336
    10. '(),' → logprob: -15.509389877319336

Token 874: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05623076483607292
    2. ' if' → logprob: -3.5562307834625244
    3. 'if' → logprob: -3.6812307834625244
    4. '   ' → logprob: -7.306230545043945
    5. '```' → logprob: -8.556230545043945
    6. '<|end|>' → logprob: -9.681230545043945
    7. 'If' → logprob: -12.806230545043945
    8. '	if' → logprob: -12.931230545043945
    9. '           ' → logprob: -12.931230545043945
    10. '``' → logprob: -13.306230545043945

Token 875: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003393021412193775
    2. '       ' → logprob: -6.003393173217773
    3. 'points' → logprob: -7.628393173217773
    4. ' if' → logprob: -7.753393173217773
    5. '```' → logprob: -14.378393173217773
    6. 'break' → logprob: -15.503393173217773
    7. '	if' → logprob: -15.878393173217773
    8. '   ' → logprob: -16.128393173217773
    9. 'If' → logprob: -16.378393173217773
    10. ' points' → logprob: -17.378393173217773

Token 876: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0004307884373702109
    2. ' n' → logprob: -7.750430583953857
    3. '	n' → logprob: -17.125431060791016
    4. '(n' → logprob: -20.000431060791016
    5. '_n' → logprob: -20.125431060791016
    6. '   ' → logprob: -20.875431060791016
    7. ' ' → logprob: -21.250431060791016
    8. '$n' → logprob: -22.125431060791016
    9. ')n' → logprob: -22.500431060791016
    10. '```' → logprob: -23.000431060791016

Token 877: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16136692464351654
    2. ' ==' → logprob: -1.9113669395446777
    3. '=' → logprob: -6.911366939544678
    4. '0' → logprob: -9.53636646270752
    5. '===' → logprob: -10.78636646270752
    6. '<|end|>' → logprob: -11.16136646270752
    7. 'and' → logprob: -11.66136646270752
    8. ' =' → logprob: -11.66136646270752
    9. '```' → logprob: -12.03636646270752
    10. ' ' → logprob: -12.41136646270752

Token 878: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '۰' → logprob: -21.5
    4. '   ' → logprob: -22.75
    5. '```' → logprob: -22.875
    6. '=' → logprob: -23.75
    7. 'and' → logprob: -23.875
    8. '
' → logprob: -25.0
    9. 'm' → logprob: -25.0
    10. '  ' → logprob: -25.125

Token 879: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. 'm' → logprob: -18.25
    4. '
' → logprob: -21.625
    5. '۰' → logprob: -22.25
    6. 'o' → logprob: -23.375
    7. '```' → logprob: -23.375
    8. '-' → logprob: -24.0
    9. '

' → logprob: -24.125
    10. 'and' → logprob: -24.375

Token 880: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10020947456359863
    2. 'and' → logprob: -2.3502094745635986
    3. '	and' → logprob: -13.60020923614502
    4. ' ' → logprob: -14.10020923614502
    5. '   ' → logprob: -14.72520923614502
    6. '<|end|>' → logprob: -15.97520923614502
    7. ' и' → logprob: -16.475210189819336
    8. '0' → logprob: -16.600210189819336
    9. '       ' → logprob: -17.100210189819336
    10. ' or' → logprob: -17.100210189819336

Token 881: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00020354038861114532
    2. ' m' → logprob: -8.500203132629395
    3. '   ' → logprob: -19.00020408630371
    4. '	m' → logprob: -20.75020408630371
    5. '    ' → logprob: -21.87520408630371
    6. '  ' → logprob: -21.87520408630371
    7. ' ' → logprob: -23.87520408630371
    8. '       ' → logprob: -23.87520408630371
    9. '     ' → logprob: -24.00020408630371
    10. '      ' → logprob: -24.75020408630371

Token 882: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0789182111620903
    2. ' ==' → logprob: -2.578918218612671
    3. '=' → logprob: -10.70391845703125
    4. ')==' → logprob: -13.70391845703125
    5. '===' → logprob: -13.95391845703125
    6. '==
' → logprob: -14.07891845703125
    7. '0' → logprob: -14.07891845703125
    8. ']==' → logprob: -14.32891845703125
    9. '<|end|>' → logprob: -14.32891845703125
    10. '()==' → logprob: -14.82891845703125

Token 883: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '<|end|>' → logprob: -21.500001907348633
    4. '۰' → logprob: -22.000001907348633
    5. '```' → logprob: -24.000001907348633
    6. '   ' → logprob: -24.500001907348633
    7. '=' → logprob: -24.875001907348633
    8. '  ' → logprob: -25.250001907348633
    9. '০' → logprob: -25.375001907348633
    10. '<|end|>' → logprob: -25.625001907348633

Token 884: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '۰' → logprob: -19.875
    4. '<|end|>' → logprob: -20.25
    5. '```' → logprob: -22.0
    6. '   ' → logprob: -22.0
    7. '০' → logprob: -22.25
    8. '=' → logprob: -22.625
    9. '<|end|>' → logprob: -22.625
    10. '०' → logprob: -23.0

Token 885: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3596981167793274
    2. ':
' → logprob: -1.2346980571746826
    3. '           ' → logprob: -4.609698295593262
    4. ':return' → logprob: -6.859698295593262
    5. '       ' → logprob: -8.984698295593262
    6. '   ' → logprob: -10.609698295593262
    7. '():
' → logprob: -11.234698295593262
    8. '):
' → logprob: -12.234698295593262
    9. ':
' → logprob: -12.484698295593262
    10. '<|end|>' → logprob: -12.734698295593262

Token 886: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001290454383706674
    2. '       ' → logprob: -9.000128746032715
    3. '               ' → logprob: -13.250128746032715
    4. '	       ' → logprob: -13.750128746032715
    5. '		' → logprob: -14.000128746032715
    6. '   ' → logprob: -14.125128746032715
    7. '          ' → logprob: -14.875128746032715
    8. '         ' → logprob: -15.375128746032715
    9. 'break' → logprob: -16.00012969970703
    10. ' break' → logprob: -16.12512969970703

Token 887: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.06288424134254456
    2. '           ' → logprob: -3.5628843307495117
    3. 'return' → logprob: -3.5628843307495117
    4. ' break' → logprob: -5.562884330749512
    5. '       ' → logprob: -8.312884330749512
    6. '               ' → logprob: -9.687884330749512
    7. '	break' → logprob: -9.812884330749512
    8. ' return' → logprob: -10.562884330749512
    9. '_break' → logprob: -12.437884330749512
    10. '		' → logprob: -13.437884330749512

Token 888: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09693096578121185
    2. 'points' → logprob: -2.971930980682373
    3. '   ' → logprob: -3.221930980682373
    4. ' points' → logprob: -7.346930980682373
    5. '	points' → logprob: -8.096930503845215
    6. '        
' → logprob: -8.971930503845215
    7. '<|end|>' → logprob: -9.471930503845215
    8. '_points' → logprob: -9.721930503845215
    9. '(points' → logprob: -9.971930503845215
    10. '```' → logprob: -11.346930503845215

Token 889: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2954115569591522
    2. 'points' → logprob: -1.4204115867614746
    3. '   ' → logprob: -5.045411586761475
    4. ' points' → logprob: -5.295411586761475
    5. '```' → logprob: -6.420411586761475
    6. '	points' → logprob: -7.170411586761475
    7. '(points' → logprob: -9.170411109924316
    8. '_points' → logprob: -9.295411109924316
    9. '<|end|>' → logprob: -10.045411109924316
    10. '        
' → logprob: -10.670411109924316

Token 890: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -0.0008216609712690115
    2. ' points' → logprob: -7.500821590423584
    3. '       ' → logprob: -8.250822067260742
    4. 'black' → logprob: -12.750822067260742
    5. '	points' → logprob: -13.125822067260742
    6. '```' → logprob: -13.500822067260742
    7. '_points' → logprob: -14.500822067260742
    8. '   ' → logprob: -14.625822067260742
    9. '(points' → logprob: -15.125822067260742
    10. '.points' → logprob: -16.750822067260742

Token 891: '_black' (ID: 92024)
  Prédit: '_black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_black' → logprob: -5.955703818472102e-05
    2. '_white' → logprob: -9.875059127807617
    3. '_bl' → logprob: -13.125059127807617
    4. '=_' → logprob: -13.125059127807617
    5. '_' → logprob: -13.500059127807617
    6. '=' → logprob: -14.125059127807617
    7. '_b' → logprob: -14.750059127807617
    8. '_blank' → logprob: -15.375059127807617
    9. '_blk' → logprob: -15.500059127807617
    10. ' =' → logprob: -15.625059127807617

Token 892: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08912572264671326
    2. '=' → logprob: -2.464125633239746
    3. ',' → logprob: -8.714125633239746
    4. '=[]' → logprob: -10.839125633239746
    5. '=[]
' → logprob: -14.089125633239746
    6. ')' → logprob: -14.339125633239746
    7. '   ' → logprob: -15.339125633239746
    8. ' ' → logprob: -15.589125633239746
    9. ' ,' → logprob: -15.589125633239746
    10. '=[]
' → logprob: -15.589125633239746

Token 893: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07109423726797104
    2. '[n' → logprob: -3.821094274520874
    3. '[p' → logprob: -4.071094036102295
    4. '[int' → logprob: -4.571094036102295
    5. '[input' → logprob: -5.821094036102295
    6. '[]' → logprob: -6.321094036102295
    7. '[array' → logprob: -6.321094036102295
    8. '[pos' → logprob: -6.571094036102295
    9. '[line' → logprob: -6.696094036102295
    10. '[ip' → logprob: -7.196094036102295

Token 894: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -2.2961512513575144e-05
    2. '(tuple' → logprob: -11.000022888183594
    3. ' tuple' → logprob: -12.000022888183594
    4. '   ' → logprob: -19.875022888183594
    5. '_tuple' → logprob: -20.875022888183594
    6. 'tu' → logprob: -22.250022888183594
    7. 'map' → logprob: -22.250022888183594
    8. 'list' → logprob: -22.375022888183594
    9. 'Tuple' → logprob: -22.625022888183594
    10. '(' → logprob: -22.750022888183594

Token 895: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0001238004770129919
    2. 'map' → logprob: -9.000123977661133
    3. '(int' → logprob: -15.125123977661133
    4. ' map' → logprob: -16.375123977661133
    5. '_map' → logprob: -17.625123977661133
    6. '	map' → logprob: -18.000123977661133
    7. '.map' → logprob: -18.125123977661133
    8. 'Map' → logprob: -19.500123977661133
    9. '(' → logprob: -19.625123977661133
    10. ',map' → logprob: -20.250123977661133

Token 896: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0790703296661377
    2. '(int' → logprob: -2.5790703296661377
    3. '[int' → logprob: -8.954070091247559
    4. 'map' → logprob: -11.079070091247559
    5. 'input' → logprob: -11.704070091247559
    6. '<int' → logprob: -11.954070091247559
    7. 'lambda' → logprob: -12.079070091247559
    8. '=int' → logprob: -12.704070091247559
    9. ',int' → logprob: -12.829070091247559
    10. '   ' → logprob: -12.954070091247559

Token 897: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6880018711090088
    2. '(input' → logprob: -1.6880018711090088
    3. ',input' → logprob: -1.6880018711090088
    4. 'input' → logprob: -2.063001871109009
    5. ' input' → logprob: -8.56300163269043
    6. '[input' → logprob: -9.06300163269043
    7. '   ' → logprob: -9.81300163269043
    8. '(' → logprob: -9.81300163269043
    9. '=input' → logprob: -10.43800163269043
    10. ' ,' → logprob: -10.68800163269043

Token 898: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.0206720617134124e-05
    2. ' input' → logprob: -11.50001049041748
    3. 'line' → logprob: -19.250009536743164
    4. '(input' → logprob: -20.375009536743164
    5. '   ' → logprob: -20.500009536743164
    6. '_input' → logprob: -21.125009536743164
    7. '	input' → logprob: -22.125009536743164
    8. '<input' → logprob: -22.500009536743164
    9. '[input' → logprob: -23.250009536743164
    10. '=input' → logprob: -23.500009536743164

Token 899: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.512236498361744e-07
    2. '.split' → logprob: -15.500000953674316
    3. '.readline' → logprob: -15.625000953674316
    4. '()' → logprob: -15.750000953674316
    5. '(' → logprob: -17.625
    6. '()
' → logprob: -17.75
    7. ' ().' → logprob: -18.375
    8. '.' → logprob: -18.75
    9. '[].' → logprob: -18.875
    10. '()[' → logprob: -19.125

Token 900: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00043138445471413434
    2. 'strip' → logprob: -7.750431537628174
    3. ' split' → logprob: -15.000431060791016
    4. '(split' → logprob: -15.250431060791016
    5. 'rstrip' → logprob: -16.000431060791016
    6. '().' → logprob: -17.125431060791016
    7. '.split' → logprob: -18.375431060791016
    8. 'read' → logprob: -18.875431060791016
    9. '_split' → logprob: -20.625431060791016
    10. 'spl' → logprob: -20.750431060791016

Token 901: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0012907128548249602
    2. '))' → logprob: -6.876290798187256
    3. '()' → logprob: -8.501290321350098
    4. '()))
' → logprob: -9.876290321350098
    5. '().' → logprob: -13.876290321350098
    6. '(' → logprob: -14.251290321350098
    7. '())' → logprob: -14.376290321350098
    8. '()
' → logprob: -15.251290321350098
    9. '())))' → logprob: -15.251290321350098
    10. '())).' → logprob: -16.626291275024414

Token 902: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0024058620911091566
    2. 'for' → logprob: -6.252405643463135
    3. ' for' → logprob: -8.627406120300293
    4. '())' → logprob: -8.752406120300293
    5. '()]' → logprob: -9.252406120300293
    6. ')' → logprob: -10.127406120300293
    7. ']' → logprob: -13.252406120300293
    8. '       ' → logprob: -14.252406120300293
    9. '   ' → logprob: -15.127406120300293
    10. '()
' → logprob: -15.252406120300293

Token 903: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0029760373290628195
    2. 'range' → logprob: -6.127975940704346
    3. ' range' → logprob: -7.252975940704346
    4. '_range' → logprob: -9.627976417541504
    5. '(range' → logprob: -11.627976417541504
    6. ' _' → logprob: -12.002976417541504
    7. ' in' → logprob: -14.877976417541504
    8. 'in' → logprob: -14.877976417541504
    9. '_in' → logprob: -15.002976417541504
    10. '_i' → logprob: -15.627976417541504

Token 904: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12259030342102051
    2. ' in' → logprob: -2.3725903034210205
    3. 'in' → logprob: -3.8725903034210205
    4. ' range' → logprob: -6.622590065002441
    5. ' ' → logprob: -15.497590065002441
    6. '  ' → logprob: -15.872590065002441
    7. '(range' → logprob: -16.497591018676758
    8. '   ' → logprob: -16.747591018676758
    9. '	range' → logprob: -17.747591018676758
    10. 'i' → logprob: -18.122591018676758

Token 905: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0206720617134124e-05
    2. ' range' → logprob: -11.50001049041748
    3. '(range' → logprob: -20.875009536743164
    4. '	range' → logprob: -22.250009536743164
    5. '_range' → logprob: -23.125009536743164
    6. '[' → logprob: -24.250009536743164
    7. '_' → logprob: -24.375009536743164
    8. '
' → logprob: -24.750009536743164
    9. '.range' → logprob: -25.000009536743164
    10. '   ' → logprob: -25.000009536743164

Token 906: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.018151111900806427
    2. 'n' → logprob: -4.01815128326416
    3. ' n' → logprob: -14.01815128326416
    4. '(' → logprob: -15.51815128326416
    5. ' (' → logprob: -15.89315128326416
    6. ')n' → logprob: -16.268150329589844
    7. '	n' → logprob: -16.893150329589844
    8. '_n' → logprob: -18.768150329589844
    9. '<n' → logprob: -19.518150329589844
    10. '[n' → logprob: -19.643150329589844

Token 907: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.046957213431596756
    2. ']' → logprob: -3.29695725440979
    3. ')' → logprob: -4.921957015991211
    4. ')]
' → logprob: -7.296957015991211
    5. ']
' → logprob: -7.421957015991211
    6. '()]' → logprob: -8.296957015991211
    7. ')],' → logprob: -10.671957015991211
    8. '       ' → logprob: -11.296957015991211
    9. '()]
' → logprob: -11.796957015991211
    10. ')
' → logprob: -12.171957015991211

Token 908: '       ' (ID: 309)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.1104096919298172
    2. '       ' → logprob: -2.360409736633301
    3. ' points' → logprob: -4.610409736633301
    4. '	points' → logprob: -8.8604097366333
    5. '(points' → logprob: -10.1104097366333
    6. '```' → logprob: -11.2354097366333
    7. '_points' → logprob: -12.7354097366333
    8. '<|end|>' → logprob: -13.2354097366333
    9. '.points' → logprob: -13.8604097366333
    10. '   ' → logprob: -14.3604097366333

Token 909: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -6.704273118884885e-07
    2. ' points' → logprob: -14.250000953674316
    3. '       ' → logprob: -19.0
    4. '	points' → logprob: -21.5
    5. '(points' → logprob: -23.25
    6. '```' → logprob: -23.375
    7. '.points' → logprob: -24.125
    8. '_points' → logprob: -24.25
    9. 'oints' → logprob: -24.5
    10. '   ' → logprob: -24.875

Token 910: '_white' (ID: 105599)
  Prédit: '_white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_white' → logprob: -2.339278580620885e-06
    2. 'white' → logprob: -13.125001907348633
    3. '_black' → logprob: -16.000001907348633
    4. '_wh' → logprob: -16.375001907348633
    5. 'White' → logprob: -17.000001907348633
    6. '=' → logprob: -17.000001907348633
    7. '_WHITE' → logprob: -17.000001907348633
    8. '_' → logprob: -18.375001907348633
    9. '=_' → logprob: -19.125001907348633
    10. '白' → logprob: -19.250001907348633

Token 911: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196768581867218
    2. ' =' → logprob: -2.811967611312866
    3. '.append' → logprob: -18.061967849731445
    4. '=[' → logprob: -18.436967849731445
    5. '   ' → logprob: -19.686967849731445
    6. '[' → logprob: -19.686967849731445
    7. '＝' → logprob: -19.686967849731445
    8. '=[]' → logprob: -19.811967849731445
    9. ')' → logprob: -20.186967849731445
    10. '=
' → logprob: -20.436967849731445

Token 912: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007106438861228526
    2. ' [' → logprob: -7.250710487365723
    3. '[t' → logprob: -14.125710487365723
    4. '[int' → logprob: -17.75071144104004
    5. '   ' → logprob: -19.25071144104004
    6. ' ' → logprob: -20.37571144104004
    7. '[to' → logprob: -20.37571144104004
    8. '[(' → logprob: -20.50071144104004
    9. '[token' → logprob: -20.62571144104004
    10. '[list' → logprob: -21.50071144104004

Token 913: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -1.1472419600977446e-06
    2. ' tuple' → logprob: -13.750000953674316
    3. '(tuple' → logprob: -19.000001907348633
    4. 'tu' → logprob: -22.000001907348633
    5. '_tuple' → logprob: -24.375001907348633
    6. '       ' → logprob: -25.000001907348633
    7. '   ' → logprob: -25.375001907348633
    8. '           ' → logprob: -26.250001907348633
    9. '
' → logprob: -26.875001907348633
    10. '        ' → logprob: -27.375001907348633

Token 914: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -4.5491004129871726e-05
    2. 'map' → logprob: -10.000045776367188
    3. '(int' → logprob: -18.125045776367188
    4. ' map' → logprob: -18.375045776367188
    5. '.map' → logprob: -19.000045776367188
    6. '	map' → logprob: -19.250045776367188
    7. ',map' → logprob: -20.375045776367188
    8. '_map' → logprob: -20.875045776367188
    9. '(' → logprob: -21.625045776367188
    10. '   ' → logprob: -22.375045776367188

Token 915: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000169332604855299
    2. 'int' → logprob: -8.75016975402832
    3. '=int' → logprob: -11.75016975402832
    4. '[int' → logprob: -13.00016975402832
    5. '<int' → logprob: -15.00016975402832
    6. ',int' → logprob: -15.12516975402832
    7. ']int' → logprob: -17.12516975402832
    8. ':int' → logprob: -17.25016975402832
    9. ' int' → logprob: -18.75016975402832
    10. '```' → logprob: -19.37516975402832

Token 916: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.060993097722530365
    2. 'int' → logprob: -3.310993194580078
    3. ',' → logprob: -4.310993194580078
    4. ',int' → logprob: -4.685993194580078
    5. '[int' → logprob: -10.685993194580078
    6. '=int' → logprob: -11.685993194580078
    7. '   ' → logprob: -11.935993194580078
    8. '<int' → logprob: -12.560993194580078
    9. '       ' → logprob: -14.060993194580078
    10. '           ' → logprob: -14.185993194580078

Token 917: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0011740362970158458
    2. 'input' → logprob: -6.751173973083496
    3. ' int' → logprob: -12.501173973083496
    4. ' input' → logprob: -16.501174926757812
    5. '(int' → logprob: -18.751174926757812
    6. '[int' → logprob: -19.126174926757812
    7. 'map' → logprob: -19.376174926757812
    8. '   ' → logprob: -20.251174926757812
    9. '<int' → logprob: -22.251174926757812
    10. '           ' → logprob: -22.251174926757812

Token 918: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0020114334765821695
    2. '(),' → logprob: -6.377011299133301
    3. '=int' → logprob: -8.7520112991333
    4. '(int' → logprob: -10.5020112991333
    5. ',' → logprob: -10.5020112991333
    6. '.split' → logprob: -10.6270112991333
    7. ',int' → logprob: -10.7520112991333
    8. 'int' → logprob: -11.6270112991333
    9. '   ' → logprob: -11.6270112991333
    10. '=' → logprob: -11.8770112991333

Token 919: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.3458322731312364e-06
    2. 'input' → logprob: -12.125007629394531
    3. '(split' → logprob: -13.750007629394531
    4. ' split' → logprob: -14.375007629394531
    5. 'map' → logprob: -16.62500762939453
    6. '.split' → logprob: -16.75000762939453
    7. 'read' → logprob: -17.25000762939453
    8. 'skip' → logprob: -17.37500762939453
    9. 'strip' → logprob: -17.62500762939453
    10. 'spl' → logprob: -17.75000762939453

Token 920: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0030618496239185333
    2. '))' → logprob: -6.378061771392822
    3. '())' → logprob: -6.628061771392822
    4. '()' → logprob: -10.50306224822998
    5. '()[' → logprob: -13.12806224822998
    6. '(' → logprob: -13.37806224822998
    7. '()))
' → logprob: -14.12806224822998
    8. '       ' → logprob: -14.37806224822998
    9. '())).' → logprob: -14.37806224822998
    10. ' ())' → logprob: -14.37806224822998

Token 921: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0025476007722318172
    2. 'for' → logprob: -6.252547740936279
    3. ' for' → logprob: -7.627547740936279
    4. ')' → logprob: -9.002547264099121
    5. ' ()' → logprob: -12.127547264099121
    6. '())' → logprob: -12.752547264099121
    7. '()
' → logprob: -16.002548217773438
    8. '(' → logprob: -16.377548217773438
    9. '       ' → logprob: -16.502548217773438
    10. '   ' → logprob: -17.127548217773438

Token 922: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1316666156053543
    2. ' range' → logprob: -2.131666660308838
    3. 'range' → logprob: -5.381666660308838
    4. ' in' → logprob: -9.88166618347168
    5. ' _' → logprob: -10.13166618347168
    6. '_range' → logprob: -10.25666618347168
    7. '(range' → logprob: -14.88166618347168
    8. 'm' → logprob: -14.88166618347168
    9. '_m' → logprob: -15.13166618347168
    10. 'in' → logprob: -16.13166618347168

Token 923: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05162797495722771
    2. ' range' → logprob: -3.0516278743743896
    3. '_' → logprob: -5.801628112792969
    4. '_range' → logprob: -11.301628112792969
    5. '(range' → logprob: -15.051628112792969
    6. ' in' → logprob: -15.176628112792969
    7. '	range' → logprob: -15.301628112792969
    8. ' _' → logprob: -16.17662811279297
    9. 'in' → logprob: -17.17662811279297
    10. 'm' → logprob: -17.42662811279297

Token 924: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011918948730453849
    2. ' range' → logprob: -6.751192092895508
    3. 'm' → logprob: -10.751192092895508
    4. '(range' → logprob: -15.251192092895508
    5. '	range' → logprob: -20.626192092895508
    6. '_range' → logprob: -21.251192092895508
    7. '[m' → logprob: -21.626192092895508
    8. '(m' → logprob: -21.626192092895508
    9. 'r' → logprob: -22.001192092895508
    10. ' m' → logprob: -22.501192092895508

Token 925: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.000133098365040496
    2. '(m' → logprob: -9.250133514404297
    3. ' m' → logprob: -10.250133514404297
    4. 'range' → logprob: -13.625133514404297
    5. '[m' → logprob: -15.625133514404297
    6. ' range' → logprob: -15.875133514404297
    7. '   ' → logprob: -16.875133514404297
    8. ' (' → logprob: -17.125133514404297
    9. ')m' → logprob: -17.125133514404297
    10. '(' → logprob: -17.375133514404297

Token 926: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.1269623339176178
    2. ']' → logprob: -2.126962423324585
    3. '()]' → logprob: -11.251962661743164
    4. ']
' → logprob: -11.626962661743164
    5. ')]
' → logprob: -12.501962661743164
    6. ')' → logprob: -13.001962661743164
    7. '])' → logprob: -13.501962661743164
    8. '}]' → logprob: -13.626962661743164
    9. ']}' → logprob: -14.001962661743164
    10. '])]' → logprob: -14.001962661743164

Token 927: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05832841247320175
    2. '   ' → logprob: -3.18332839012146
    3. 'if' → logprob: -4.933328628540039
    4. 'print' → logprob: -5.558328628540039
    5. 'result' → logprob: -5.683328628540039
    6. '        
' → logprob: -8.058328628540039
    7. ' if' → logprob: -8.558328628540039
    8. '    
' → logprob: -9.683328628540039
    9. '```' → logprob: -9.933328628540039
    10. '<|end|>' → logprob: -10.058328628540039

Token 928: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15916869044303894
    2. 'if' → logprob: -2.1591687202453613
    3. 'result' (adapté à ' result') → logprob: -3.6591687202453613
    4. '       ' → logprob: -5.159168720245361
    5. ' if' → logprob: -9.034168243408203
    6. ' print' → logprob: -10.034168243408203
    7. '   ' → logprob: -10.284168243408203
    8. 'res' → logprob: -11.284168243408203
    9. ' result' → logprob: -11.659168243408203
    10. '```' → logprob: -12.534168243408203

Token 929: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12700937688350677
    2. '=' → logprob: -2.127009391784668
    3. '()' → logprob: -10.377009391784668
    4. '(' → logprob: -11.502009391784668
    5. '_' → logprob: -11.627009391784668
    6. '   ' → logprob: -11.877009391784668
    7. ')' → logprob: -11.877009391784668
    8. '.' → logprob: -12.252009391784668
    9. '=True' → logprob: -13.502009391784668
    10. '<|end|>' → logprob: -13.502009391784668

Token 930: ' "' (ID: 392)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.011050531640648842
    2. ' can' → logprob: -4.511050701141357
    3. '"' → logprob: -13.1360502243042
    4. ''' → logprob: -14.2610502243042
    5. '	can' → logprob: -16.386051177978516
    6. '   ' → logprob: -16.886051177978516
    7. '(can' → logprob: -17.011051177978516
    8. '.can' → logprob: -18.886051177978516
    9. ' '' → logprob: -19.011051177978516
    10. '_can' → logprob: -19.136051177978516

Token 931: 'YES' (ID: 31958)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.460251122713089
    2. 'YES' → logprob: -1.0852510929107666
    3. 'Separ' → logprob: -4.335251331329346
    4. '"' → logprob: -4.585251331329346
    5. 'Possible' → logprob: -5.835251331329346
    6. 'S' → logprob: -6.960251331329346
    7. 'possible' → logprob: -6.960251331329346
    8. 'SI' → logprob: -7.210251331329346
    9. ''' → logprob: -8.210250854492188
    10. 'Seg' → logprob: -8.210250854492188

Token 932: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.002858843421563506
    2. ' if' → logprob: -6.002858638763428
    3. 'if' → logprob: -7.877858638763428
    4. ' "' → logprob: -13.377859115600586
    5. '\n' → logprob: -14.127859115600586
    6. ''' → logprob: -14.252859115600586
    7. '```' → logprob: -14.252859115600586
    8. '")' → logprob: -16.377859115600586
    9. 'def' → logprob: -16.752859115600586
    10. '`' → logprob: -16.752859115600586

Token 933: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1272827386856079
    2. 'if' → logprob: -2.1272826194763184
    3. '       ' → logprob: -8.002283096313477
    4. '"' → logprob: -11.127283096313477
    5. '   ' → logprob: -13.002283096313477
    6. '
' → logprob: -13.627283096313477
    7. '	if' → logprob: -14.627283096313477
    8. '           ' → logprob: -14.877283096313477
    9. '```' → logprob: -15.752283096313477
    10. '        
' → logprob: -16.002283096313477

Token 934: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.029751067981123924
    2. 'can' → logprob: -3.5297510623931885
    3. '(can' → logprob: -14.90475082397461
    4. '	can' → logprob: -15.77975082397461
    5. '_can' → logprob: -16.02975082397461
    6. '.can' → logprob: -18.52975082397461
    7. ' not' → logprob: -18.65475082397461
    8. 'Can' → logprob: -20.02975082397461
    9. ' ' → logprob: -20.15475082397461
    10. ' could' → logprob: -20.77975082397461

Token 935: '_se' (ID: 7123)
  Prédit: '_se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_se' → logprob: -1.735893965815194e-05
    2. 'se' → logprob: -11.000017166137695
    3. '_separator' → logprob: -15.625017166137695
    4. 'Separate' → logprob: -16.125017166137695
    5. '_' → logprob: -16.500017166137695
    6. '_s' → logprob: -16.750017166137695
    7. 'Se' → logprob: -16.875017166137695
    8. ' separate' → logprob: -17.250017166137695
    9. '_sep' → logprob: -17.375017166137695
    10. '_can' → logprob: -19.125017166137695

Token 936: 'parate' (ID: 60471)
  Prédit: 'parate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parate' → logprob: -0.000660015270113945
    2. 'perate' → logprob: -7.500659942626953
    3. 'pare' → logprob: -9.375659942626953
    4. 'par' → logprob: -11.125659942626953
    5. 'rate' → logprob: -12.000659942626953
    6. 'ar' → logprob: -15.000659942626953
    7. 'parated' → logprob: -15.000659942626953
    8. 'pr' → logprob: -15.875659942626953
    9. 'p' → logprob: -15.875659942626953
    10. '_par' → logprob: -16.250659942626953

Token 937: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.625
    3. ' (' → logprob: -16.625
    4. ' points' → logprob: -19.0
    5. '(parts' → logprob: -19.0
    6. 'points' → logprob: -19.0
    7. '(
' → logprob: -20.375
    8. '	points' → logprob: -20.375
    9. '(posts' → logprob: -20.875
    10. '_points' → logprob: -21.0

Token 938: '_black' (ID: 92024)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -6.420598219847307e-05
    2. '_black' → logprob: -9.7500638961792
    3. 'points' → logprob: -12.8750638961792
    4. '(' → logprob: -13.3750638961792
    5. 'black' → logprob: -14.2500638961792
    6. ' points' → logprob: -14.8750638961792
    7. ' (' → logprob: -15.2500638961792
    8. ')' → logprob: -15.5000638961792
    9. '_points' → logprob: -15.7500638961792
    10. '	points' → logprob: -16.500064849853516

Token 939: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7014437364414334e-05
    2. '(points' → logprob: -11.00002670288086
    3. ' ,' → logprob: -12.12502670288086
    4. 'points' → logprob: -12.50002670288086
    5. ' points' → logprob: -14.50002670288086
    6. ',
' → logprob: -14.62502670288086
    7. ',p' → logprob: -16.75002670288086
    8. '_points' → logprob: -17.37502670288086
    9. 'Points' → logprob: -17.87502670288086
    10. ',

' → logprob: -17.87502670288086

Token 940: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00861468818038702
    2. ' points' → logprob: -4.758614540100098
    3. '(points' → logprob: -15.758614540100098
    4. '	points' → logprob: -17.383615493774414
    5. '.points' → logprob: -19.133615493774414
    6. '_points' → logprob: -19.258615493774414
    7. ')' → logprob: -19.508615493774414
    8. 'Points' → logprob: -19.633615493774414
    9. 'point' → logprob: -20.133615493774414
    10. '   ' → logprob: -20.133615493774414

Token 941: '_white' (ID: 105599)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.0590548703912646e-05
    2. '_white' → logprob: -11.000030517578125
    3. ' ,' → logprob: -12.500030517578125
    4. ',
' → logprob: -12.875030517578125
    5. '_points' → logprob: -13.000030517578125
    6. 'points' → logprob: -13.375030517578125
    7. '(points' → logprob: -14.250030517578125
    8. 'white' → logprob: -14.500030517578125
    9. ')' → logprob: -14.750030517578125
    10. '_,' → logprob: -15.000030517578125

Token 942: ')' (ID: 8)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.18173587322235107
    2. ')' → logprob: -2.1817359924316406
    3. 'else' → logprob: -2.9317359924316406
    4. '==' → logprob: -11.55673599243164
    5. '   ' → logprob: -11.68173599243164
    6. '()' → logprob: -11.80673599243164
    7. '```' → logprob: -13.80673599243164
    8. ' ' → logprob: -14.68173599243164
    9. ' )' → logprob: -14.80673599243164
    10. '	else' → logprob: -15.05673599243164

Token 943: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.026343610137701035
    2. 'else' → logprob: -3.651343584060669
    3. '==' → logprob: -10.40134334564209
    4. ' ==' → logprob: -12.40134334564209
    5. ')' → logprob: -12.52634334564209
    6. '+' → logprob: -13.52634334564209
    7. '	else' → logprob: -13.90134334564209
    8. '   ' → logprob: -14.02634334564209
    9. '<|end|>' → logprob: -14.40134334564209
    10. ' +' → logprob: -15.27634334564209

Token 944: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0013305948814377189
    2. ' "' → logprob: -6.626330375671387
    3. ''' → logprob: -12.376330375671387
    4. ' ' → logprob: -15.251330375671387
    5. '"No' → logprob: -16.251331329345703
    6. '
' → logprob: -16.876331329345703
    7. '   ' → logprob: -17.376331329345703
    8. '`' → logprob: -17.376331329345703
    9. '"I' → logprob: -17.626331329345703
    10. '```' → logprob: -18.251331329345703

Token 945: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.3869258165359497
    2. '"' → logprob: -1.1369258165359497
    3. '"No' → logprob: -9.88692569732666
    4. ' NO' → logprob: -13.01192569732666
    5. ''' → logprob: -13.63692569732666
    6. 'No' → logprob: -15.76192569732666
    7. ' ' → logprob: -16.011926651000977
    8. '_NO' → logprob: -16.386926651000977
    9. ' "' → logprob: -17.011926651000977
    10. '   ' → logprob: -17.261926651000977

Token 946: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12564419209957123
    2. '")' → logprob: -2.5006442070007324
    3. ')' → logprob: -3.3756442070007324
    4. ')"' → logprob: -6.750644207000732
    5. '"
' → logprob: -8.375643730163574
    6. '```' → logprob: -8.500643730163574
    7. '<|end|>' → logprob: -8.750643730163574
    8. '")
' → logprob: -10.625643730163574
    9. ')
' → logprob: -11.250643730163574
    10. '   ' → logprob: -11.500643730163574

Token 947: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00631115073338151
    2. 'print' → logprob: -5.131310939788818
    3. ' print' → logprob: -7.881310939788818
    4. '```' → logprob: -13.006311416625977
    5. '<|end|>' → logprob: -13.756311416625977
    6. '   ' → logprob: -14.506311416625977
    7. '	print' → logprob: -15.006311416625977
    8. '
' → logprob: -15.631311416625977
    9. '           ' → logprob: -15.881311416625977
    10. '        
' → logprob: -16.631311416625977

Token 948: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.3199920178740285e-05
    2. '       ' → logprob: -11.250022888183594
    3. ' print' → logprob: -11.500022888183594
    4. '	print' → logprob: -19.375022888183594
    5. '   ' → logprob: -21.250022888183594
    6. '```' → logprob: -21.875022888183594
    7. '_print' → logprob: -23.125022888183594
    8. '(print' → logprob: -23.875022888183594
    9. '.print' → logprob: -24.000022888183594
    10. '#print' → logprob: -24.000022888183594

Token 949: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.01416738796979189
    2. '(' → logprob: -4.264167308807373
    3. '(f' → logprob: -13.639167785644531
    4. '("' → logprob: -13.889167785644531
    5. '(results' → logprob: -14.389167785644531
    6. '(res' → logprob: -15.014167785644531
    7. '("("' → logprob: -15.014167785644531
    8. '()' → logprob: -15.264167785644531
    9. '(resultado' → logprob: -16.13916778564453
    10. '('' → logprob: -16.63916778564453

Token 950: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.875000953674316
    3. '()' → logprob: -15.500000953674316
    4. '())' → logprob: -15.500000953674316
    5. '`)' → logprob: -17.0
    6. ' )' → logprob: -17.125
    7. '   ' → logprob: -17.25
    8. ')`' → logprob: -17.375
    9. '")' → logprob: -17.5
    10. '')' → logprob: -17.875

Token 951: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.024012388661503792
    2. 'main' → logprob: -3.774012327194214
    3. '```' → logprob: -7.399012565612793
    4. ' if' → logprob: -9.024012565612793
    5. '#' → logprob: -10.524012565612793
    6. '<|end|>' → logprob: -12.774012565612793
    7. ' main' → logprob: -13.274012565612793
    8. '(main' → logprob: -14.149012565612793
    9. '__' → logprob: -14.524012565612793
    10. '
' → logprob: -15.274012565612793

Token 952: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.22561708092689514
    2. '__' → logprob: -1.6006170511245728
    3. '_' → logprob: -9.225617408752441
    4. '_name' → logprob: -9.725617408752441
    5. 'name' → logprob: -10.850617408752441
    6. '___' → logprob: -10.975617408752441
    7. ' ' → logprob: -12.725617408752441
    8. 'Name' → logprob: -13.475617408752441
    9. ' ' → logprob: -13.850617408752441
    10. ' _' → logprob: -14.475617408752441

Token 953: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.006404250394552946
    2. ' ==' → logprob: -5.756404399871826
    3. '==' → logprob: -6.006404399871826
    4. ' __' → logprob: -7.506404399871826
    5. '__.__' → logprob: -9.256403923034668
    6. '=="' → logprob: -9.881403923034668
    7. '__["' → logprob: -11.756403923034668
    8. 'name' → logprob: -11.756403923034668
    9. '__[' → logprob: -12.006403923034668
    10. '__.' → logprob: -12.131403923034668

Token 954: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -8.196732960641384e-05
    2. '==' → logprob: -9.625082015991211
    3. '__.__' → logprob: -11.250082015991211
    4. '=="' → logprob: -13.500082015991211
    5. ' ==' → logprob: -14.500082015991211
    6. '___' → logprob: -15.250082015991211
    7. '__.' → logprob: -15.375082015991211
    8. '_' → logprob: -16.12508201599121
    9. '____' → logprob: -16.12508201599121
    10. '__('' → logprob: -16.37508201599121

Token 955: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.11639070510864258
    2. '==' → logprob: -2.7413907051086426
    3. ' ==' → logprob: -3.1163907051086426
    4. '=="' → logprob: -7.116390705108643
    5. '=='' → logprob: -8.366390228271484
    6. '__.__' → logprob: -11.116390228271484
    7. '_' → logprob: -12.491390228271484
    8. '=' → logprob: -12.616390228271484
    9. '==
' → logprob: -13.116390228271484
    10. '===' → logprob: -13.991390228271484

Token 956: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16023418307304382
    2. ''' → logprob: -1.9102342128753662
    3. '__' → logprob: -12.285234451293945
    4. ' "__' → logprob: -12.535234451293945
    5. '"user' → logprob: -14.035234451293945
    6. ' '__' → logprob: -15.410234451293945
    7. '"name' → logprob: -15.410234451293945
    8. ''"' → logprob: -16.535234451293945
    9. ''user' → logprob: -16.535234451293945
    10. ''name' → logprob: -16.660234451293945

Token 957: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10090362280607224
    2. 'main' → logprob: -2.3509035110473633
    3. '"' → logprob: -7.350903511047363
    4. ''' → logprob: -10.100903511047363
    5. 'name' → logprob: -12.350903511047363
    6. '__":
' → logprob: -12.350903511047363
    7. '___' → logprob: -13.100903511047363
    8. '__
' → logprob: -13.600903511047363
    9. '____' → logprob: -14.725903511047363
    10. '__':
' → logprob: -14.975903511047363

Token 958: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.05004129558801651
    2. '__' → logprob: -3.0500411987304688
    3. '__':
' → logprob: -6.550041198730469
    4. '__:' → logprob: -11.050041198730469
    5. '__.' → logprob: -12.800041198730469
    6. '__["' → logprob: -14.050041198730469
    7. '__.__' → logprob: -14.175041198730469
    8. '__
' → logprob: -14.300041198730469
    9. '():
' → logprob: -14.800041198730469
    10. '__",' → logprob: -15.050041198730469

Token 959: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.33274295926094055
    2. '__' → logprob: -1.5827429294586182
    3. ''' → logprob: -3.332742929458618
    4. 'main' → logprob: -3.332742929458618
    5. '   ' → logprob: -5.207743167877197
    6. ' main' → logprob: -7.707743167877197
    7. '_main' → logprob: -9.957742691040039
    8. ' ' → logprob: -10.207742691040039
    9. ' "__' → logprob: -10.207742691040039
    10. '    
' → logprob: -10.332742691040039

Token 960: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.25
    3. '	main' → logprob: -20.75
    4. '   ' → logprob: -24.5
    5. '(main' → logprob: -25.375
    6. '_main' → logprob: -25.75
    7. '.main' → logprob: -25.75
    8. 'import' → logprob: -26.0
    9. 'Main' → logprob: -27.25
    10. 'mainwindow' → logprob: -28.5

Token 961: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 959
Tokens correctement prédits (1ère position, stricte): 342
Tokens correctement prédits (1ère position, avec adaptation): 360
Tokens correctement prédits (top 10): 723
Précision stricte (1ère position): 35.66%
Précision adaptée (1ère position): 37.54%
Précision (top 10): 75.39%
================================================================================
