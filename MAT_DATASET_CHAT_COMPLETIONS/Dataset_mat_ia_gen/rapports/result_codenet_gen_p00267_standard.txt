================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:12:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

while True:
    N = int(input())
    if N == 0:
        break
    A = sorted(map(int, input().split()), reverse=True)
    B = sorted(map(int, input().split()), reverse=True)

    def can_win(k):
        wins = 0
        i = 0
        j = 0
        while i < k and j < k:
            if A[i] > B[j]:
                wins += 1
                i += 1
                j += 1
            else:
                j += 1
        return wins > k // 2

    left, right = 1, N-1
    ans = None
    while left <= right:
        mid = (left + right) // 2
        if can_win(mid):
            ans = mid
            right = mid - 1
        else:
            left = mid + 1
    print(ans if ans else "NA")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04891661927103996
    2. '.' → logprob: -3.0489165782928467
    3. ' (' → logprob: -9.298916816711426
    4. '(
' → logprob: -9.298916816711426
    5. ')' → logprob: -10.173916816711426
    6. '()' → logprob: -11.173916816711426
    7. '[' → logprob: -11.298916816711426
    8. ' ' → logprob: -11.423916816711426
    9. ''s' → logprob: -11.548916816711426
    10. '```' → logprob: -11.923916816711426

Token 5: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.03143458068370819
    2. ' sys' → logprob: -3.5314345359802246
    3. 'input' → logprob: -6.406434535980225
    4. ' input' → logprob: -10.781435012817383
    5. '(sys' → logprob: -12.406435012817383
    6. '	sys' → logprob: -12.531435012817383
    7. '=sys' → logprob: -12.781435012817383
    8. 'system' → logprob: -15.906435012817383
    9. 'lambda' → logprob: -16.406435012817383
    10. '_sys' → logprob: -16.406435012817383

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0001370320824207738
    2. ' .' → logprob: -10.250137329101562
    3. '.import' → logprob: -10.625137329101562
    4. '.stdin' → logprob: -11.000137329101562
    5. '.readline' → logprob: -11.125137329101562
    6. '.
' → logprob: -11.375137329101562
    7. '.`' → logprob: -11.875137329101562
    8. '[' → logprob: -12.375137329101562
    9. '.argv' → logprob: -13.000137329101562
    10. 'import' → logprob: -13.250137329101562

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3303499221801758
    2. '.' → logprob: -1.3303499221801758
    3. '.read' → logprob: -4.080349922180176
    4. '.readlines' → logprob: -10.830349922180176
    5. '.Read' → logprob: -12.205349922180176
    6. ' .' → logprob: -12.955349922180176
    7. '.buffer' → logprob: -13.080349922180176
    8. '```' → logprob: -13.205349922180176
    9. 'read' → logprob: -13.330349922180176
    10. '.

' → logprob: -13.705349922180176

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4030750095844269
    2. '(' → logprob: -1.1530749797821045
    3. '()
' → logprob: -5.403075218200684
    4. '(
' → logprob: -5.528075218200684
    5. '
' → logprob: -5.653075218200684
    6. '()\' → logprob: -6.278075218200684
    7. '\n' → logprob: -6.528075218200684
    8. '\' → logprob: -8.653075218200684
    9. '()

' → logprob: -8.903075218200684
    10. '(\' → logprob: -9.528075218200684

Token 9: 'while' (ID: 7032)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4298107922077179
    2. '(' → logprob: -1.0548107624053955
    3. '().' → logprob: -7.679811000823975
    4. '()
' → logprob: -8.804810523986816
    5. '(
' → logprob: -8.804810523986816
    6. 'def' → logprob: -9.554810523986816
    7. ')' → logprob: -9.929810523986816
    8. '()

' → logprob: -10.179810523986816
    9. '()\' → logprob: -10.804810523986816
    10. 'a' → logprob: -10.929810523986816

Token 10: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0101946871727705
    2. ' True' → logprob: -4.635194778442383
    3. '  ' → logprob: -7.885194778442383
    4. ' (' → logprob: -11.135194778442383
    5. 'True' → logprob: -11.510194778442383
    6. ' i' → logprob: -11.885194778442383
    7. '    ' → logprob: -12.385194778442383
    8. ' not' → logprob: -12.385194778442383
    9. '   ' → logprob: -12.885194778442383
    10. ' "' → logprob: -13.010194778442383

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010119688231498003
    2. '():' → logprob: -7.126011848449707
    3. ' :' → logprob: -8.876011848449707
    4. ':**' → logprob: -10.626011848449707
    5. '(:' → logprob: -11.501011848449707
    6. '):' → logprob: -12.251011848449707
    7. '":"' → logprob: -12.251011848449707
    8. ':return' → logprob: -12.376011848449707
    9. '':'' → logprob: -12.626011848449707
    10. ':
' → logprob: -12.626011848449707

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06907404214143753
    2. '    
' → logprob: -3.9440741539001465
    3. ' 
' → logprob: -4.4440741539001465
    4. '  
' → logprob: -4.5690741539001465
    5. ' ' → logprob: -4.9440741539001465
    6. '(' → logprob: -4.9440741539001465
    7. '    ' → logprob: -5.0690741539001465
    8. '  ' → logprob: -7.4440741539001465
    9. ':' → logprob: -7.5690741539001465
    10. ' (' → logprob: -7.5690741539001465

Token 13: ' N' (ID: 478)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.08545901626348495
    2. 'line' → logprob: -3.085458993911743
    3. 'user' → logprob: -4.585459232330322
    4. ' user' → logprob: -4.585459232330322
    5. '   ' → logprob: -4.960459232330322
    6. 'data' → logprob: -5.460459232330322
    7. ' data' → logprob: -6.460459232330322
    8. '    ' → logprob: -7.210459232330322
    9. ' inp' → logprob: -7.210459232330322
    10. ' ' → logprob: -7.710459232330322

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.486402302980423
    2. ' ' → logprob: -1.6114022731781006
    3. ' ==' → logprob: -2.3614022731781006
    4. '=' → logprob: -2.7364022731781006
    5. ' >' → logprob: -5.23640251159668
    6. '   ' → logprob: -5.61140251159668
    7. ' <=' → logprob: -5.73640251159668
    8. '  ' → logprob: -5.86140251159668
    9. '==' → logprob: -6.36140251159668
    10. '>' → logprob: -6.48640251159668

Token 15: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6989927291870117
    2. 'input' → logprob: -1.4489927291870117
    3. ' input' → logprob: -1.9489927291870117
    4. ' int' → logprob: -2.0739927291870117
    5. ' ' → logprob: -12.323992729187012
    6. '=int' → logprob: -14.073992729187012
    7. '=input' → logprob: -15.198992729187012
    8. '(int' → logprob: -15.448992729187012
    9. '<int' → logprob: -15.573992729187012
    10. 'in' → logprob: -15.573992729187012

Token 16: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.018227670341730118
    2. '(' → logprob: -4.018227577209473
    3. 'input' → logprob: -9.518227577209473
    4. '(
' → logprob: -13.768227577209473
    5. ' (' → logprob: -13.893227577209473
    6. '(sys' → logprob: -14.268227577209473
    7. '(in' → logprob: -14.518227577209473
    8. ' input' → logprob: -14.893227577209473
    9. '()' → logprob: -15.018227577209473
    10. '(

' → logprob: -16.14322853088379

Token 17: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00041065402911044657
    2. '()))' → logprob: -8.625411033630371
    3. '()' → logprob: -8.750411033630371
    4. '().' → logprob: -9.750411033630371
    5. '())
' → logprob: -11.875411033630371
    6. ' ())' → logprob: -12.500411033630371
    7. ')' → logprob: -12.750411033630371
    8. '(' → logprob: -14.750411033630371
    9. '())

' → logprob: -16.000410079956055
    10. '()),' → logprob: -16.500410079956055

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08504774421453476
    2. '<|end|>' → logprob: -3.460047721862793
    3. ' if' → logprob: -3.585047721862793
    4. '    ' → logprob: -4.960047721862793
    5. ' ' → logprob: -5.085047721862793
    6. '    
' → logprob: -6.210047721862793
    7. '  ' → logprob: -6.210047721862793
    8. '\n' → logprob: -6.460047721862793
    9. '  
' → logprob: -7.460047721862793
    10. ' 
' → logprob: -7.460047721862793

Token 19: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7173469066619873
    2. ' ' → logprob: -1.7173469066619873
    3. '   ' → logprob: -1.8423469066619873
    4. '<|end|>' → logprob: -2.3423469066619873
    5. '    ' → logprob: -3.5923469066619873
    6. 'if' (adapté à ' if') → logprob: -3.9673469066619873
    7. '\n' → logprob: -4.717347145080566
    8. ' 
' → logprob: -5.092347145080566
    9. '  ' → logprob: -5.467347145080566
    10. ')' → logprob: -5.842347145080566

Token 20: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.09162934869527817
    2. ' not' → logprob: -2.4666292667388916
    3. 'N' → logprob: -5.966629505157471
    4. 'not' → logprob: -9.341629028320312
    5. ' ' → logprob: -10.341629028320312
    6. ' ' → logprob: -12.841629028320312
    7. '	N' → logprob: -15.841629028320312
    8. '!' → logprob: -15.841629028320312
    9. '  ' → logprob: -16.529129028320312
    10. '>N' → logprob: -17.154129028320312

Token 21: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.005257714539766312
    2. '==' → logprob: -5.255257606506348
    3. ' <' → logprob: -11.380257606506348
    4. ' <=' → logprob: -11.630257606506348
    5. ' ' → logprob: -14.130257606506348
    6. ')' → logprob: -14.130257606506348
    7. '<' → logprob: -14.255257606506348
    8. '<=' → logprob: -15.130257606506348
    9. '=' → logprob: -15.255257606506348
    10. ' =' → logprob: -15.630257606506348

Token 22: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0699373260140419
    2. '0' → logprob: -2.694937229156494
    3. ' ' → logprob: -14.194937705993652
    4. '  ' → logprob: -16.444936752319336
    5. ' a' → logprob: -17.319936752319336
    6. '=' → logprob: -17.319936752319336
    7. ' EOF' → logprob: -17.319936752319336
    8. '   ' → logprob: -17.444936752319336
    9. '_' → logprob: -17.569936752319336
    10. 'EOF' → logprob: -17.819936752319336

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003805064770858735
    2. ' ' → logprob: -7.875380516052246
    3. '   ' → logprob: -16.37537956237793
    4. '```' → logprob: -16.37537956237793
    5. ')' → logprob: -16.62537956237793
    6. '  ' → logprob: -17.00037956237793
    7. '    ' → logprob: -17.00037956237793
    8. '-' → logprob: -17.37537956237793
    9. '``' → logprob: -18.25037956237793
    10. '1' → logprob: -18.31287956237793

Token 24: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006718054646626115
    2. ':
' → logprob: -7.375671863555908
    3. '   ' → logprob: -10.12567138671875
    4. ' :' → logprob: -13.37567138671875
    5. '       ' → logprob: -13.37567138671875
    6. '	break' → logprob: -14.37567138671875
    7. ':return' → logprob: -14.37567138671875
    8. ' break' → logprob: -14.87567138671875
    9. '.' → logprob: -16.25067138671875
    10. '    ' → logprob: -16.62567138671875

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002023093169555068
    2. '   ' → logprob: -6.252023220062256
    3. '	break' → logprob: -10.252022743225098
    4. ' break' → logprob: -10.502022743225098
    5. '    ' → logprob: -11.752022743225098
    6. '      ' → logprob: -12.127022743225098
    7. '     ' → logprob: -12.252022743225098
    8. 'break' → logprob: -12.502022743225098
    9. '<|end|>' → logprob: -13.127022743225098
    10. '	' → logprob: -13.627022743225098

Token 26: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1672835350036621
    2. ' break' → logprob: -2.167283535003662
    3. 'break' (adapté à ' break') → logprob: -3.417283535003662
    4. '	break' → logprob: -5.292283535003662
    5. '   ' → logprob: -6.417283535003662
    6. '\n' → logprob: -10.16728401184082
    7. '_break' → logprob: -11.41728401184082
    8. '           ' → logprob: -11.79228401184082
    9. '-break' → logprob: -12.41728401184082
    10. '\t' → logprob: -12.66728401184082

Token 27: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05410290136933327
    2. '<|end|>' → logprob: -3.304102897644043
    3. ')' → logprob: -5.054102897644043
    4. '    
' → logprob: -5.554102897644043
    5. ':' → logprob: -6.304102897644043
    6. '\n' → logprob: -7.179102897644043
    7. ' ' → logprob: -7.554102897644043
    8. '```' → logprob: -7.679102897644043
    9. '<|end|>' → logprob: -7.679102897644043
    10. '  ' → logprob: -7.804102897644043

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0063651627860963345
    2. '<|end|>' → logprob: -6.2563652992248535
    3. '    
' → logprob: -6.7563652992248535
    4. ')' → logprob: -6.8813652992248535
    5. '  ' → logprob: -7.5063652992248535
    6. ':' → logprob: -8.131364822387695
    7. 'print' → logprob: -8.131364822387695
    8. '    ' → logprob: -8.256364822387695
    9. '```' → logprob: -8.631364822387695
    10. '\n' → logprob: -9.006364822387695

Token 29: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05307299643754959
    2. '    ' → logprob: -3.428072929382324
    3. '[' → logprob: -5.053072929382324
    4. ' ' → logprob: -5.553072929382324
    5. ')' → logprob: -5.928072929382324
    6. '    
' → logprob: -6.803072929382324
    7. '[]' → logprob: -7.553072929382324
    8. 's' → logprob: -7.553072929382324
    9. '  ' → logprob: -7.678072929382324
    10. 'a' → logprob: -8.303072929382324

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007667671423405409
    2. 'rr' → logprob: -5.507667541503906
    3. '=' → logprob: -5.882667541503906
    4. 'rray' → logprob: -7.632667541503906
    5. ' ' → logprob: -8.757667541503906
    6. ' =[' → logprob: -10.132667541503906
    7. '_list' → logprob: -10.757667541503906
    8. 'r' → logprob: -10.882667541503906
    9. ' +=' → logprob: -10.882667541503906
    10. ',' → logprob: -11.007667541503906

Token 31: ' sorted' (ID: 20099)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.437619149684906
    2. ' list' → logprob: -1.0626192092895508
    3. '[list' → logprob: -5.687619209289551
    4. ' [' → logprob: -6.187619209289551
    5. '[]' → logprob: -6.562619209289551
    6. '[' → logprob: -6.562619209289551
    7. ' []' → logprob: -7.937619209289551
    8. '[input' → logprob: -9.06261920928955
    9. '[int' → logprob: -9.68761920928955
    10. '[len' → logprob: -11.18761920928955

Token 32: '(map' (ID: 16946)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.03568197786808014
    2. '([' → logprob: -3.535681962966919
    3. '(map' → logprob: -5.410682201385498
    4. '(' → logprob: -6.910682201385498
    5. 'list' → logprob: -8.66068172454834
    6. '(input' → logprob: -8.78568172454834
    7. '(range' → logprob: -10.03568172454834
    8. '(int' → logprob: -10.16068172454834
    9. '[list' → logprob: -11.53568172454834
    10. '([]' → logprob: -11.66068172454834

Token 33: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00014191943046171218
    2. '(' → logprob: -8.875142097473145
    3. '<int' → logprob: -14.375142097473145
    4. ',int' → logprob: -14.500142097473145
    5. '(str' → logprob: -15.125142097473145
    6. '[int' → logprob: -16.000141143798828
    7. '(
' → logprob: -16.125141143798828
    8. 'int' → logprob: -16.500141143798828
    9. '(lambda' → logprob: -16.500141143798828
    10. '=int' → logprob: -16.625141143798828

Token 34: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.016804451122879982
    2. ',input' → logprob: -4.141804218292236
    3. '(' → logprob: -7.766804218292236
    4. ',' → logprob: -8.766804695129395
    5. 'input' → logprob: -9.141804695129395
    6. ' (' → logprob: -9.516804695129395
    7. ' input' → logprob: -12.016804695129395
    8. ')' → logprob: -13.766804695129395
    9. ' ,' → logprob: -14.391804695129395
    10. '=input' → logprob: -14.641804695129395

Token 35: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04528297856450081
    2. ' input' → logprob: -3.170283079147339
    3. 'range' → logprob: -6.17028284072876
    4. ' range' → logprob: -9.045283317565918
    5. '(input' → logprob: -9.920283317565918
    6. '[input' → logprob: -11.545283317565918
    7. ',input' → logprob: -12.420283317565918
    8. ' ' → logprob: -12.545283317565918
    9. 'list' → logprob: -13.420283317565918
    10. '	input' → logprob: -13.920283317565918

Token 36: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.372916686814278e-05
    2. '()' → logprob: -9.7500638961792
    3. ' ().' → logprob: -12.3750638961792
    4. '()))' → logprob: -14.2500638961792
    5. '())' → logprob: -15.5000638961792
    6. '())))' → logprob: -16.375062942504883
    7. '(' → logprob: -16.500062942504883
    8. '()));' → logprob: -17.500062942504883
    9. ')' → logprob: -17.750062942504883
    10. '()
' → logprob: -18.000062942504883

Token 37: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.030076857656240463
    2. 'strip' → logprob: -3.530076742172241
    3. 'rstrip' → logprob: -8.03007698059082
    4. ' split' → logprob: -14.65507698059082
    5. '(split' → logprob: -15.40507698059082
    6. 'spl' → logprob: -16.28007698059082
    7. ' strip' → logprob: -18.40507698059082
    8. ')' → logprob: -18.78007698059082
    9. 's' → logprob: -18.78007698059082
    10. '.split' → logprob: -19.28007698059082

Token 38: '()),' (ID: 24379)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.06090067699551582
    2. '())' → logprob: -3.0609006881713867
    3. '()' → logprob: -4.810900688171387
    4. '))' → logprob: -6.185900688171387
    5. '()),' → logprob: -7.060900688171387
    6. '(' → logprob: -7.185900688171387
    7. '()))
' → logprob: -8.685900688171387
    8. ')' → logprob: -9.310900688171387
    9. '())))' → logprob: -9.560900688171387
    10. '(),' → logprob: -9.810900688171387

Token 39: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.3140328526496887
    2. ' reverse' → logprob: -1.314032793045044
    3. ' key' → logprob: -8.064032554626465
    4. ')' → logprob: -8.189032554626465
    5. 'key' → logprob: -8.814032554626465
    6. 're' → logprob: -11.689032554626465
    7. 'repeat' → logprob: -12.314032554626465
    8. '(reverse' → logprob: -12.814032554626465
    9. ' )' → logprob: -12.939032554626465
    10. ' ' → logprob: -13.064032554626465

Token 40: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.10023234039545059
    2. '=' → logprob: -2.3502323627471924
    3. ')=' → logprob: -11.725232124328613
    4. ')' → logprob: -11.725232124328613
    5. '(True' → logprob: -12.975232124328613
    6. ' =' → logprob: -13.225232124328613
    7. '=False' → logprob: -13.725232124328613
    8. '=
' → logprob: -14.100232124328613
    9. '=T' → logprob: -14.100232124328613
    10. 'True' → logprob: -14.475232124328613

Token 41: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015240935317706317
    2. '   ' → logprob: -9.375152587890625
    3. ')
' → logprob: -9.875152587890625
    4. ' )' → logprob: -11.875152587890625
    5. '))' → logprob: -12.125152587890625
    6. '`)' → logprob: -13.125152587890625
    7. '[' → logprob: -14.625152587890625
    8. ' ' → logprob: -15.000152587890625
    9. ')

' → logprob: -15.875152587890625
    10. ')`' → logprob: -16.250152587890625

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16355401277542114
    2. ':' → logprob: -2.1635539531707764
    3. '    
' → logprob: -4.5385541915893555
    4. ')' → logprob: -4.7885541915893555
    5. '<|end|>' → logprob: -5.6635541915893555
    6. '    ' → logprob: -5.9135541915893555
    7. '```' → logprob: -5.9135541915893555
    8. '[' → logprob: -6.9135541915893555
    9. '\n' → logprob: -6.9135541915893555
    10. '.' → logprob: -6.9135541915893555

Token 43: ' B' (ID: 418)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46151411533355713
    2. ' for' → logprob: -1.9615141153335571
    3. '    ' → logprob: -2.7115139961242676
    4. 'for' → logprob: -2.8365139961242676
    5. ' if' → logprob: -3.5865139961242676
    6. '    
' → logprob: -4.586513996124268
    7. 'count' → logprob: -4.836513996124268
    8. 'if' → logprob: -4.961513996124268
    9. ' count' → logprob: -5.086513996124268
    10. 'print' → logprob: -5.336513996124268

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033655036240816116
    2. '=' → logprob: -3.4086549282073975
    3. ' ' → logprob: -12.783655166625977
    4. ',' → logprob: -13.033655166625977
    5. '.' → logprob: -14.158655166625977
    6. '=[]' → logprob: -14.658655166625977
    7. '[' → logprob: -14.721155166625977
    8. ')' → logprob: -15.096155166625977
    9. '_' → logprob: -15.158655166625977
    10. '＝' → logprob: -15.471155166625977

Token 45: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.053992900997400284
    2. 'sorted' → logprob: -3.928992986679077
    3. ' []' → logprob: -4.428992748260498
    4. ' [' → logprob: -5.053992748260498
    5. ' list' → logprob: -5.303992748260498
    6. ' A' → logprob: -5.553992748260498
    7. '[]' → logprob: -5.678992748260498
    8. '[' → logprob: -6.553992748260498
    9. 'A' → logprob: -7.678992748260498
    10. ' ' → logprob: -9.303993225097656

Token 46: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0012986884685233235
    2. '(A' → logprob: -6.876298904418945
    3. '(' → logprob: -9.001298904418945
    4. '(list' → logprob: -9.501298904418945
    5. 'map' → logprob: -10.501298904418945
    6. '(B' → logprob: -11.126298904418945
    7. ' (' → logprob: -11.501298904418945
    8. 'A' → logprob: -12.001298904418945
    9. '(range' → logprob: -13.126298904418945
    10. ' map' → logprob: -13.876298904418945

Token 47: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -4.35837464465294e-05
    2. '(' → logprob: -10.250043869018555
    3. ' (' → logprob: -12.250043869018555
    4. '<int' → logprob: -13.000043869018555
    5. '=int' → logprob: -14.750043869018555
    6. 'int' → logprob: -15.000043869018555
    7. '[int' → logprob: -15.250043869018555
    8. ',int' → logprob: -15.625043869018555
    9. ']int' → logprob: -17.125043869018555
    10. ' int' → logprob: -17.750043869018555

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18982739746570587
    2. ',int' → logprob: -2.1898274421691895
    3. '(int' → logprob: -2.8148274421691895
    4. 'int' → logprob: -7.4398274421691895
    5. ' ,' → logprob: -9.189826965332031
    6. '[int' → logprob: -9.189826965332031
    7. '=int' → logprob: -9.564826965332031
    8. '<int' → logprob: -9.689826965332031
    9. '(' → logprob: -9.689826965332031
    10. '```' → logprob: -10.814826965332031

Token 49: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16771920025348663
    2. ' int' → logprob: -2.6677191257476807
    3. 'input' → logprob: -3.0427191257476807
    4. ' input' → logprob: -3.2927191257476807
    5. '(int' → logprob: -9.292718887329102
    6. ' ' → logprob: -11.042718887329102
    7. '   ' → logprob: -11.917718887329102
    8. '[int' → logprob: -12.042718887329102
    9. '<int' → logprob: -12.542718887329102
    10. ',int' → logprob: -12.792718887329102

Token 50: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.2664456789934775e-06
    2. '()' → logprob: -13.875000953674316
    3. ' ().' → logprob: -15.750000953674316
    4. '.' → logprob: -17.125001907348633
    5. '(' → logprob: -18.250001907348633
    6. '()).' → logprob: -19.500001907348633
    7. '.split' → logprob: -19.875001907348633
    8. '()))' → logprob: -20.000001907348633
    9. '())' → logprob: -20.250001907348633
    10. '()[' → logprob: -20.500001907348633

Token 51: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.2729995988775045e-06
    2. 'strip' → logprob: -13.375006675720215
    3. ')' → logprob: -13.750006675720215
    4. ' split' → logprob: -13.750006675720215
    5. '(split' → logprob: -14.375006675720215
    6. 'plit' → logprob: -14.500006675720215
    7. 'rstrip' → logprob: -15.000006675720215
    8. '().' → logprob: -15.250006675720215
    9. ').' → logprob: -15.500006675720215
    10. '.split' → logprob: -15.750006675720215

Token 52: '()),' (ID: 24379)
  Prédit: '()),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()),' → logprob: -0.07185658812522888
    2. '())' → logprob: -3.4468564987182617
    3. '()))' → logprob: -3.4468564987182617
    4. '()' → logprob: -5.321856498718262
    5. '(),' → logprob: -7.821856498718262
    6. '),' → logprob: -8.446856498718262
    7. '())))' → logprob: -10.196856498718262
    8. ')' → logprob: -10.571856498718262
    9. '))' → logprob: -10.696856498718262
    10. '()));' → logprob: -11.446856498718262

Token 53: ' reverse' (ID: 18199)
  Prédit: ' reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reverse' → logprob: -0.47414126992225647
    2. 'reverse' → logprob: -0.9741412401199341
    3. '(reverse' → logprob: -10.474141120910645
    4. ' ' → logprob: -11.099141120910645
    5. ')' → logprob: -12.224141120910645
    6. '   ' → logprob: -12.474141120910645
    7. ' key' → logprob: -12.974141120910645
    8. ' True' → logprob: -13.224141120910645
    9. '  ' → logprob: -13.349141120910645
    10. ' )' → logprob: -14.099141120910645

Token 54: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.8976784348487854
    2. '())' → logprob: -1.0226783752441406
    3. ')' → logprob: -1.8976783752441406
    4. '=' → logprob: -3.3976783752441406
    5. '(True' → logprob: -4.397678375244141
    6. '))' → logprob: -4.522678375244141
    7. '()))' → logprob: -4.522678375244141
    8. '(' → logprob: -5.272678375244141
    9. '()' → logprob: -5.647678375244141
    10. '()>' → logprob: -6.022678375244141

Token 55: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6505485773086548
    2. '   ' → logprob: -0.7755485773086548
    3. ')
' → logprob: -4.525548458099365
    4. '
' → logprob: -5.400548458099365
    5. '    
' → logprob: -6.400548458099365
    6. '<|end|>' → logprob: -8.775548934936523
    7. '  
' → logprob: -9.150548934936523
    8. ' )' → logprob: -9.275548934936523
    9. '```' → logprob: -9.275548934936523
    10. 'for' → logprob: -9.525548934936523

Token 56: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.2213276624679565
    2. '   ' → logprob: -1.8463276624679565
    3. 'total' → logprob: -1.8463276624679565
    4. 'score' → logprob: -2.596327781677246
    5. 'sum' → logprob: -2.721327781677246
    6. 'count' → logprob: -2.846327781677246
    7. 'max' → logprob: -3.096327781677246
    8. 'answer' → logprob: -4.096327781677246
    9. 'i' → logprob: -4.221327781677246
    10. 's' → logprob: -4.346327781677246

Token 57: ' def' (ID: 1056)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.4712707996368408
    2. 'answer' → logprob: -1.7212707996368408
    3. 'result' → logprob: -2.096270799636841
    4. 'max' → logprob: -2.346270799636841
    5. 'ans' → logprob: -2.596270799636841
    6. 'C' → logprob: -2.721270799636841
    7. 'score' → logprob: -2.971270799636841
    8. 'res' → logprob: -3.846270799636841
    9. 'cnt' → logprob: -3.846270799636841
    10. 'total' → logprob: -4.221270561218262

Token 58: ' can' (ID: 665)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.2535395622253418
    2. ' solve' → logprob: -1.2535395622253418
    3. ' find' → logprob: -2.253539562225342
    4. ' best' → logprob: -3.253539562225342
    5. ' calculate' → logprob: -3.503539562225342
    6. ' min' → logprob: -3.628539562225342
    7. ' maximize' → logprob: -3.628539562225342
    8. ' solution' → logprob: -3.753539562225342
    9. ' fair' → logprob: -4.003539562225342
    10. ' compare' → logprob: -4.253539562225342

Token 59: '_win' (ID: 63099)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.570614218711853
    2. '_buy' → logprob: -1.070614218711853
    3. '_win' → logprob: -2.9456143379211426
    4. '_take' → logprob: -3.9456143379211426
    5. '_purchase' → logprob: -5.945614337921143
    6. '_choose' → logprob: -6.070614337921143
    7. '_use' → logprob: -6.070614337921143
    8. ' _' → logprob: -6.070614337921143
    9. '_b' → logprob: -6.570614337921143
    10. '_keep' → logprob: -7.070614337921143

Token 60: '(k' (ID: 12125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11692249029874802
    2. '():' → logprob: -2.241922378540039
    3. '(i' → logprob: -6.116922378540039
    4. '(:' → logprob: -7.866922378540039
    5. '()' → logprob: -8.241922378540039
    6. '(`' → logprob: -8.866922378540039
    7. '(n' → logprob: -8.866922378540039
    8. '(a' → logprob: -9.116922378540039
    9. ' ():' → logprob: -9.241922378540039
    10. '(index' → logprob: -9.491922378540039

Token 61: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012824952136725187
    2. ',' → logprob: -7.001282691955566
    3. '):
' → logprob: -8.626282691955566
    4. ')' → logprob: -9.376282691955566
    5. '   ' → logprob: -10.876282691955566
    6. ',k' → logprob: -11.001282691955566
    7. ':' → logprob: -11.251282691955566
    8. '=' → logprob: -11.251282691955566
    9. ' ):' → logprob: -11.751282691955566
    10. '):
' → logprob: -12.251282691955566

Token 62: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.061932049691677094
    2. '():' → logprob: -3.43693208694458
    3. ':' → logprob: -3.81193208694458
    4. '(n' → logprob: -5.93693208694458
    5. '(k' → logprob: -6.68693208694458
    6. '(i' → logprob: -7.68693208694458
    7. '(:' → logprob: -8.311931610107422
    8. '   ' → logprob: -8.436931610107422
    9. '):' → logprob: -8.686931610107422
    10. '(p' → logprob: -8.936931610107422

Token 63: ' wins' (ID: 25327)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09846338629722595
    2. '<|end|>' → logprob: -2.598463296890259
    3. '    ' → logprob: -5.098463535308838
    4. ':' → logprob: -5.473463535308838
    5. ' 
' → logprob: -5.973463535308838
    6. '   ' → logprob: -6.598463535308838
    7. '  ' → logprob: -6.848463535308838
    8. '       ' → logprob: -7.098463535308838
    9. '<|end|>' → logprob: -7.473463535308838
    10. ' for' → logprob: -7.848463535308838

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05526226758956909
    2. '=' → logprob: -2.930262327194214
    3. ' ' → logprob: -8.555262565612793
    4. '   ' → logprob: -9.680262565612793
    5. ' >=' → logprob: -10.430262565612793
    6. ',' → logprob: -10.805262565612793
    7. '  ' → logprob: -10.930262565612793
    8. '_count' → logprob: -11.180262565612793
    9. ' >' → logprob: -11.805262565612793
    10. '    ' → logprob: -11.930262565612793

Token 65: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3247394561767578
    2. ' ' → logprob: -1.3247394561767578
    3. ' k' → logprob: -4.824739456176758
    4. ' sum' → logprob: -6.449739456176758
    5. 'k' → logprob: -6.574739456176758
    6. 'sum' → logprob: -8.199739456176758
    7. '1' → logprob: -9.949739456176758
    8. ' [' → logprob: -10.949739456176758
    9. '   ' → logprob: -11.762239456176758
    10. ' len' → logprob: -11.949739456176758

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0020264238119125366
    2. 'sum' → logprob: -6.877026557922363
    3. ' ' → logprob: -7.127026557922363
    4. 'k' → logprob: -9.002026557922363
    5. '1' → logprob: -10.877026557922363
    6. '[' → logprob: -11.002026557922363
    7. ' sum' → logprob: -11.502026557922363
    8. 'len' → logprob: -12.002026557922363
    9. '[k' → logprob: -12.377026557922363
    10. ' k' → logprob: -13.252026557922363

Token 67: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2911392450332642
    2. '   ' → logprob: -1.7911392450332642
    3. ' for' → logprob: -2.0411391258239746
    4. 'for' → logprob: -2.2911391258239746
    5. '       ' → logprob: -2.5411391258239746
    6. '<|end|>' → logprob: -2.7911391258239746
    7. '    ' → logprob: -3.5411391258239746
    8. ')' → logprob: -3.5411391258239746
    9. ' i' → logprob: -4.291139125823975
    10. ' B' → logprob: -4.541139125823975

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21096321940422058
    2. ',' → logprob: -2.210963249206543
    3. '=' → logprob: -2.710963249206543
    4. 'n' → logprob: -4.460963249206543
    5. ' ,' → logprob: -7.460963249206543
    6. '<|end|>' → logprob: -7.585963249206543
    7. ' ' → logprob: -7.835963249206543
    8. ',j' → logprob: -8.710963249206543
    9. 'f' → logprob: -8.835963249206543
    10. ')' → logprob: -9.210963249206543

Token 71: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0333208292722702
    2. ' ' → logprob: -3.533320903778076
    3. 'j' → logprob: -6.158320903778076
    4. 'k' → logprob: -7.033320903778076
    5. ' j' → logprob: -7.908320903778076
    6. ' k' → logprob: -9.033320426940918
    7. 'i' → logprob: -11.158320426940918
    8. '<|end|>' → logprob: -11.408320426940918
    9. 'B' → logprob: -11.783320426940918
    10. 'len' → logprob: -11.908320426940918

Token 72: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007236333331093192
    2. 'k' → logprob: -7.750723838806152
    3. 'j' → logprob: -8.625723838806152
    4. ' ' → logprob: -9.375723838806152
    5. 'len' → logprob: -11.500723838806152
    6. 'i' → logprob: -12.625723838806152
    7. 'N' → logprob: -13.000723838806152
    8. 'B' → logprob: -13.250723838806152
    9. '1' → logprob: -13.250723838806152
    10. '<|end|>' → logprob: -13.375723838806152

Token 73: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.05613259971141815
    2. ' j' → logprob: -3.0561325550079346
    3. '<|end|>' → logprob: -5.181132793426514
    4. ' ' → logprob: -7.181132793426514
    5. '   ' → logprob: -8.681132316589355
    6. '1' → logprob: -8.681132316589355
    7. ',j' → logprob: -8.806132316589355
    8. 'for' → logprob: -8.931132316589355
    9. '0' → logprob: -9.681132316589355
    10. 'b' → logprob: -9.806132316589355

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01122607197612524
    2. '=' → logprob: -4.511226177215576
    3. '<|end|>' → logprob: -9.261225700378418
    4. ' ' → logprob: -10.011225700378418
    5. ',' → logprob: -11.261225700378418
    6. '<|end|>' → logprob: -11.886225700378418
    7. '0' → logprob: -12.886225700378418
    8. ' +=' → logprob: -13.011225700378418
    9. '1' → logprob: -13.136225700378418
    10. '```' → logprob: -13.261225700378418

Token 77: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05613192915916443
    2. ' ' → logprob: -3.1811318397521973
    3. 'k' → logprob: -4.431131839752197
    4. ' k' → logprob: -6.931131839752197
    5. 'N' → logprob: -9.681132316589355
    6. 'len' → logprob: -10.056132316589355
    7. ' len' → logprob: -10.681132316589355
    8. ' N' → logprob: -10.931132316589355
    9. 'n' → logprob: -11.306132316589355
    10. ' n' → logprob: -13.118632316589355

Token 78: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00608379952609539
    2. 'k' → logprob: -5.131083965301514
    3. ' ' → logprob: -9.506083488464355
    4. 'N' → logprob: -9.881083488464355
    5. 'len' → logprob: -11.131083488464355
    6. 'n' → logprob: -11.881083488464355
    7. ' k' → logprob: -12.631083488464355
    8. 'i' → logprob: -13.131083488464355
    9. '-' → logprob: -14.818583488464355
    10. 'j' → logprob: -15.193583488464355

Token 79: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.1631198674440384
    2. 'while' (adapté à ' while') → logprob: -2.0381197929382324
    3. ' n' → logprob: -5.288119792938232
    4. '<|end|>' → logprob: -5.663119792938232
    5. '	while' → logprob: -6.038119792938232
    6. 'n' → logprob: -6.288119792938232
    7. ' ' → logprob: -6.288119792938232
    8. ' 
' → logprob: -6.663119792938232
    9. '
' → logprob: -7.413119792938232
    10. '       ' → logprob: -7.538119792938232

Token 82: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0637422502040863
    2. 'i' → logprob: -2.813742160797119
    3. ' j' → logprob: -7.063742160797119
    4. 'j' → logprob: -7.438742160797119
    5. ' wins' → logprob: -9.438742637634277
    6. 'wins' → logprob: -10.063742637634277
    7. ' k' → logprob: -10.438742637634277
    8. 'True' → logprob: -10.438742637634277
    9. 'k' → logprob: -10.438742637634277
    10. ' True' → logprob: -10.688742637634277

Token 83: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.024191834032535553
    2. '<' → logprob: -3.7741918563842773
    3. '<len' → logprob: -7.024191856384277
    4. '<n' → logprob: -10.649191856384277
    5. ' ' → logprob: -11.649191856384277
    6. '<|end|>' → logprob: -11.774191856384277
    7. '<size' → logprob: -12.149191856384277
    8. '<N' → logprob: -12.649191856384277
    9. '[' → logprob: -13.649191856384277
    10. '<int' → logprob: -14.149191856384277

Token 84: ' k' (ID: 372)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.02961323969066143
    2. 'k' → logprob: -4.279613018035889
    3. 'len' → logprob: -4.279613018035889
    4. ' N' → logprob: -6.779613018035889
    5. ' len' → logprob: -8.779613494873047
    6. 'n' → logprob: -8.904613494873047
    7. ' k' → logprob: -10.904613494873047
    8. '   ' → logprob: -12.029613494873047
    9. ' ' → logprob: -12.154613494873047
    10. '6' → logprob: -12.529613494873047

Token 85: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011057606898248196
    2. 'and' → logprob: -4.511057376861572
    3. ' ' → logprob: -11.88605785369873
    4. '    ' → logprob: -14.51105785369873
    5. '<|end|>' → logprob: -14.76105785369873
    6. '   ' → logprob: -14.88605785369873
    7. ' or' → logprob: -15.01105785369873
    8. '	and' → logprob: -15.13605785369873
    9. ':' → logprob: -15.63605785369873
    10. '```' → logprob: -16.261056900024414

Token 86: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.015152261592447758
    2. ' j' → logprob: -4.265152454376221
    3. 'i' → logprob: -7.515152454376221
    4. '   ' → logprob: -8.890151977539062
    5. 'wins' → logprob: -8.890151977539062
    6. ' i' → logprob: -9.765151977539062
    7. ' wins' → logprob: -10.015151977539062
    8. 'k' → logprob: -10.390151977539062
    9. '	j' → logprob: -11.765151977539062
    10. 'len' → logprob: -12.265151977539062

Token 87: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.023652229458093643
    2. '<' → logprob: -3.7736523151397705
    3. ' ' → logprob: -8.398652076721191
    4. 'k' → logprob: -10.273652076721191
    5. '<n' → logprob: -10.648652076721191
    6. '<len' → logprob: -11.086152076721191
    7. '<N' → logprob: -11.148652076721191
    8. '<|end|>' → logprob: -11.523652076721191
    9. '<size' → logprob: -11.836152076721191
    10. 's' → logprob: -12.086152076721191

Token 88: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00766884908080101
    2. 'N' → logprob: -5.007668972015381
    3. 'len' → logprob: -7.007668972015381
    4. ' k' → logprob: -11.007668495178223
    5. 'n' → logprob: -11.382668495178223
    6. '   ' → logprob: -12.007668495178223
    7. ' ' → logprob: -13.007668495178223
    8. ' N' → logprob: -13.570168495178223
    9. ' len' → logprob: -13.695168495178223
    10. '2' → logprob: -13.882668495178223

Token 89: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6028295159339905
    2. ':' → logprob: -0.9778295159339905
    3. ' and' → logprob: -2.6028294563293457
    4. '       ' → logprob: -6.977829456329346
    5. '   ' → logprob: -7.352829456329346
    6. 'and' → logprob: -7.602829456329346
    7. ' :
' → logprob: -8.602829933166504
    8. ':
' → logprob: -9.602829933166504
    9. ':

' → logprob: -9.727829933166504
    10. ' :' → logprob: -10.102829933166504

Token 90: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.882243275642395
    2. ' and' → logprob: -1.257243275642395
    3. ':
' → logprob: -2.0072431564331055
    4. '       ' → logprob: -2.1322431564331055
    5. '<|end|>' → logprob: -3.3822431564331055
    6. '   ' → logprob: -5.5072431564331055
    7. '<|end|>' → logprob: -6.0072431564331055
    8. ' :
' → logprob: -6.2572431564331055
    9. ' :' → logprob: -6.5072431564331055
    10. '           ' → logprob: -7.0072431564331055

Token 91: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18333697319030762
    2. ' if' → logprob: -1.9333369731903076
    3. '<|end|>' → logprob: -4.808337211608887
    4. 'if' (adapté à ' if') → logprob: -5.058337211608887
    5. ' ' → logprob: -5.558337211608887
    6. '   ' → logprob: -6.933337211608887
    7. ' 
' → logprob: -7.058337211608887
    8. ' and' → logprob: -7.308337211608887
    9. '               ' → logprob: -8.058337211608887
    10. '
' → logprob: -8.058337211608887

Token 92: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5043557286262512
    2. ' A' → logprob: -1.2543556690216064
    3. 'B' → logprob: -2.6293556690216064
    4. ' B' → logprob: -3.2543556690216064
    5. ' ' → logprob: -10.254355430603027
    6. '   ' → logprob: -10.254355430603027
    7. '	A' → logprob: -10.504355430603027
    8. '	B' → logprob: -12.504355430603027
    9. 'a' → logprob: -12.879355430603027
    10. '  ' → logprob: -13.191855430603027

Token 93: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3870466351509094
    2. '[j' → logprob: -1.1370465755462646
    3. '[' → logprob: -8.887046813964844
    4. '[k' → logprob: -11.887046813964844
    5. 'i' → logprob: -12.137046813964844
    6. ' [' → logprob: -12.262046813964844
    7. '```' → logprob: -12.262046813964844
    8. 'j' → logprob: -13.012046813964844
    9. '[w' → logprob: -13.512046813964844
    10. ']' → logprob: -13.824546813964844

Token 94: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.41886013746261597
    2. ' >' → logprob: -1.6688601970672607
    3. '>' → logprob: -1.9188601970672607
    4. ']>' → logprob: -6.168859958648682
    5. ' ' → logprob: -6.293859958648682
    6. ' ]' → logprob: -6.543859958648682
    7. ']>=' → logprob: -7.543859958648682
    8. ' >=' → logprob: -7.543859958648682
    9. '>=' → logprob: -8.29386043548584
    10. '']' → logprob: -9.54386043548584

Token 95: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.018597854301333427
    2. ' >' → logprob: -4.0185980796813965
    3. '>=' → logprob: -8.768597602844238
    4. '<' → logprob: -9.018597602844238
    5. ' ' → logprob: -9.268597602844238
    6. '<=' → logprob: -10.018597602844238
    7. ' <=' → logprob: -11.893597602844238
    8. ' >=' → logprob: -12.018597602844238
    9. '```' → logprob: -12.393597602844238
    10. ' <' → logprob: -12.643597602844238

Token 96: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.06993988156318665
    2. ' B' → logprob: -2.6949398517608643
    3. ' ' → logprob: -13.194939613342285
    4. '=B' → logprob: -14.819939613342285
    5. '	B' → logprob: -15.069939613342285
    6. '>B' → logprob: -15.194939613342285
    7. '   ' → logprob: -15.319939613342285
    8. '  ' → logprob: -16.3199405670166
    9. ' ' → logprob: -16.3824405670166
    10. '<B' → logprob: -16.7574405670166

Token 97: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.069664333248511e-05
    2. '[i' → logprob: -11.125020980834961
    3. 'j' → logprob: -12.250020980834961
    4. ' [' → logprob: -14.500020980834961
    5. '[' → logprob: -15.750020980834961
    6. '	j' → logprob: -16.37502098083496
    7. '
' → logprob: -16.75002098083496
    8. '   ' → logprob: -16.75002098083496
    9. '[
' → logprob: -17.00002098083496
    10. '```' → logprob: -17.25002098083496

Token 98: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7165064215660095
    2. '):' → logprob: -0.7165064215660095
    3. ']:' → logprob: -4.716506481170654
    4. ':' → logprob: -4.841506481170654
    5. ']:
' → logprob: -5.716506481170654
    6. ':
' → logprob: -6.216506481170654
    7. '):
' → logprob: -7.466506481170654
    8. ')' → logprob: -9.216506004333496
    9. '   ' → logprob: -10.091506004333496
    10. '):

' → logprob: -10.341506004333496

Token 99: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07104849815368652
    2. ' 
' → logprob: -3.4460484981536865
    3. '                
' → logprob: -4.821048736572266
    4. ' ' → logprob: -5.321048736572266
    5. '
' → logprob: -5.446048736572266
    6. '           ' → logprob: -5.446048736572266
    7. ':
' → logprob: -5.571048736572266
    8. '<|end|>' → logprob: -6.196048736572266
    9. '            
' → logprob: -6.446048736572266
    10. '\n' → logprob: -6.696048736572266

Token 100: ' wins' (ID: 25327)
  Prédit: 'wins'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wins' (adapté à ' wins') → logprob: -0.10084477066993713
    2. ' wins' → logprob: -2.4758448600769043
    3. '
' → logprob: -4.475844860076904
    4. '
' → logprob: -8.850844383239746
    5. 'i' → logprob: -9.350844383239746
    6. '           ' → logprob: -9.725844383239746
    7. 'win' → logprob: -9.975844383239746
    8. '               ' → logprob: -10.225844383239746
    9. ' i' → logprob: -10.975844383239746
    10. 'w' → logprob: -10.975844383239746

Token 101: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1602610945701599
    2. '+=' → logprob: -1.9102611541748047
    3. ' =' → logprob: -11.035261154174805
    4. '=' → logprob: -11.160261154174805
    5. '+' → logprob: -13.410261154174805
    6. '           ' → logprob: -13.535261154174805
    7. ' ' → logprob: -13.910261154174805
    8. ']+=' → logprob: -14.785261154174805
    9. '               ' → logprob: -15.035261154174805
    10. ' +' → logprob: -15.160261154174805

Token 102: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '2' → logprob: -17.875709533691406
    4. '<|end|>' → logprob: -18.375709533691406
    5. '   ' → logprob: -19.250709533691406
    6. '  ' → logprob: -19.375709533691406
    7. ' ' → logprob: -20.250709533691406
    8. '１' → logprob: -20.688209533691406
    9. '```' → logprob: -20.813209533691406
    10. '3' → logprob: -21.000709533691406

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '2' → logprob: -16.750019073486328
    4. '   ' → logprob: -18.250019073486328
    5. '0' → logprob: -18.812519073486328
    6. '１' → logprob: -19.125019073486328
    7. '```' → logprob: -19.187519073486328
    8. 'k' → logprob: -19.500019073486328
    9. '100' → logprob: -19.625019073486328
    10. 'i' → logprob: -19.625019073486328

Token 104: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18518179655075073
    2. '
' → logprob: -1.8101818561553955
    3. '           ' → logprob: -6.310181617736816
    4. ' 
' → logprob: -6.435181617736816
    5. '    
' → logprob: -8.185181617736816
    6. '  
' → logprob: -8.435181617736816
    7. '                
' → logprob: -8.435181617736816
    8. '            
' → logprob: -8.560181617736816
    9. '
' → logprob: -8.560181617736816
    10. 'i' → logprob: -8.685181617736816

Token 105: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.40557050704956055
    2. '
' → logprob: -1.2805705070495605
    3. '           ' → logprob: -3.6555705070495605
    4. ' i' → logprob: -5.1555705070495605
    5. '                   ' → logprob: -5.4055705070495605
    6. ' 
' → logprob: -5.6555705070495605
    7. 'i' → logprob: -6.0305705070495605
    8. '            
' → logprob: -6.1555705070495605
    9. '       ' → logprob: -6.4055705070495605
    10. '```' → logprob: -6.4055705070495605

Token 106: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.02067478373646736
    2. 'j' → logprob: -3.895674705505371
    3. '           ' → logprob: -9.895674705505371
    4. ' i' → logprob: -10.270674705505371
    5. '               ' → logprob: -10.520674705505371
    6. '                   ' → logprob: -11.020674705505371
    7. ' j' → logprob: -13.020674705505371
    8. '   ' → logprob: -13.395674705505371
    9. '```' → logprob: -14.645674705505371
    10. 'import' → logprob: -16.020675659179688

Token 107: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.046438317745923996
    2. '+' → logprob: -3.296438217163086
    3. ' +=' → logprob: -4.796438217163086
    4. '1' → logprob: -10.046438217163086
    5. '```' → logprob: -10.796438217163086
    6. '=' → logprob: -11.171438217163086
    7. '+
' → logprob: -11.171438217163086
    8. '<|end|>' → logprob: -13.171438217163086
    9. ' ' → logprob: -13.671438217163086
    10. ' +' → logprob: -14.171438217163086

Token 108: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010950337309623137
    2. ' ' → logprob: -9.125109672546387
    3. '2' → logprob: -15.500109672546387
    4. '
' → logprob: -16.37510871887207
    5. '```' → logprob: -16.43760871887207
    6. '   ' → logprob: -17.43760871887207
    7. '<|end|>' → logprob: -17.81260871887207
    8. '0' → logprob: -17.93760871887207
    9. '１' → logprob: -18.37510871887207
    10. '  ' → logprob: -18.37510871887207

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.729906196298543e-06
    2. ' ' → logprob: -11.625009536743164
    3. '2' → logprob: -14.750009536743164
    4. '0' → logprob: -15.437509536743164
    5. '```' → logprob: -16.187509536743164
    6. '
' → logprob: -17.187509536743164
    7. '3' → logprob: -17.750009536743164
    8. '<|end|>' → logprob: -17.812509536743164
    9. '१' → logprob: -18.125009536743164
    10. '１' → logprob: -18.312509536743164

Token 110: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0050952378660440445
    2. '
' → logprob: -5.8800950050354
    3. ' 
' → logprob: -6.6300950050354
    4. '  
' → logprob: -7.8800950050354
    5. ' ' → logprob: -8.880095481872559
    6. '           ' → logprob: -9.505095481872559
    7. '    
' → logprob: -9.880095481872559
    8. ' j' → logprob: -9.880095481872559
    9. '                
' → logprob: -10.005095481872559
    10. '       ' → logprob: -10.255095481872559

Token 111: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005016815848648548
    2. 'j' → logprob: -7.75050163269043
    3. '           ' → logprob: -10.12550163269043
    4. ' j' → logprob: -11.62550163269043
    5. 'b' → logprob: -11.87550163269043
    6. '   ' → logprob: -12.50050163269043
    7. ' ' → logprob: -12.75050163269043
    8. '
' → logprob: -13.12550163269043
    9. '       ' → logprob: -13.12550163269043
    10. ' 
' → logprob: -14.00050163269043

Token 112: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -5.3954463510308415e-05
    2. ' j' → logprob: -9.875054359436035
    3. 'i' → logprob: -13.625054359436035
    4. '   ' → logprob: -14.250054359436035
    5. '1' → logprob: -14.500054359436035
    6. '	j' → logprob: -16.37505340576172
    7. ' ' → logprob: -18.12505340576172
    8. '           ' → logprob: -18.12505340576172
    9. '```' → logprob: -19.00005340576172
    10. '  ' → logprob: -19.12505340576172

Token 113: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.609016478061676
    2. '+=' → logprob: -1.1090164184570312
    3. '+' → logprob: -2.7340164184570312
    4. '1' → logprob: -3.1090164184570312
    5. '<|end|>' → logprob: -4.734016418457031
    6. '++' → logprob: -5.609016418457031
    7. '<|end|>' → logprob: -6.734016418457031
    8. '```' → logprob: -7.484016418457031
    9. '   ' → logprob: -7.859016418457031
    10. ' +' → logprob: -7.859016418457031

Token 114: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012475410767365247
    2. ' ' → logprob: -9.00012493133545
    3. '```' → logprob: -14.37512493133545
    4. '   ' → logprob: -15.50012493133545
    5. '<|end|>' → logprob: -15.56262493133545
    6. '2' → logprob: -16.625123977661133
    7. '0' → logprob: -16.937623977661133
    8. '<|end|>' → logprob: -17.375123977661133
    9. '  ' → logprob: -18.125123977661133
    10. '
' → logprob: -18.125123977661133

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -16.7500057220459
    4. '0' → logprob: -16.8750057220459
    5. '<|end|>' → logprob: -17.0000057220459
    6. '2' → logprob: -17.5625057220459
    7. '   ' → logprob: -18.3125057220459
    8. '১' → logprob: -18.8125057220459
    9. '
' → logprob: -18.8750057220459
    10. '<|end|>' → logprob: -18.8750057220459

Token 116: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00803006999194622
    2. 'else' → logprob: -4.883029937744141
    3. ' else' → logprob: -7.883029937744141
    4. 'elif' → logprob: -10.38302993774414
    5. '               ' → logprob: -11.50802993774414
    6. '```' → logprob: -13.38302993774414
    7. '
' → logprob: -13.50802993774414
    8. '       ' → logprob: -13.88302993774414
    9. ' elif' → logprob: -14.13302993774414
    10. '          ' → logprob: -14.75802993774414

Token 117: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010279521346092224
    2. 'else' → logprob: -4.760279655456543
    3. ' else' → logprob: -6.510279655456543
    4. '
' → logprob: -9.760279655456543
    5. 'elif' → logprob: -10.010279655456543
    6. '```' → logprob: -10.135279655456543
    7. '               ' → logprob: -10.635279655456543
    8. ' elif' → logprob: -12.510279655456543
    9. '            
' → logprob: -13.635279655456543
    10. '       ' → logprob: -13.760279655456543

Token 118: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.016676200553774834
    2. '       ' → logprob: -4.266676425933838
    3. ' else' → logprob: -6.016676425933838
    4. 'elif' → logprob: -10.26667594909668
    5. '           ' → logprob: -10.89167594909668
    6. '   ' → logprob: -11.64167594909668
    7. '	else' → logprob: -12.26667594909668
    8. '
' → logprob: -12.89167594909668
    9. '```' → logprob: -14.01667594909668
    10. '               ' → logprob: -14.51667594909668

Token 119: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2042270302772522
    2. '               ' → logprob: -2.0792269706726074
    3. ':
' → logprob: -2.8292269706726074
    4. '           ' → logprob: -7.704226970672607
    5. 'j' → logprob: -9.704227447509766
    6. ',' → logprob: -9.704227447509766
    7. '                   ' → logprob: -11.204227447509766
    8. ' :' → logprob: -11.579227447509766
    9. '):
' → logprob: -12.329227447509766
    10. '   ' → logprob: -12.454227447509766

Token 120: '               ' (ID: 506)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.26106852293014526
    2. 'i' → logprob: -1.51106858253479
    3. '               ' → logprob: -4.886068344116211
    4. '           ' → logprob: -6.886068344116211
    5. ' j' → logprob: -8.011068344116211
    6. ' i' → logprob: -9.011068344116211
    7. '   ' → logprob: -10.011068344116211
    8. '	j' → logprob: -11.386068344116211
    9. '                   ' → logprob: -12.511068344116211
    10. '```' → logprob: -12.761068344116211

Token 121: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.016156483441591263
    2. 'i' → logprob: -4.1411566734313965
    3. '           ' → logprob: -9.641156196594238
    4. '   ' → logprob: -10.516156196594238
    5. '               ' → logprob: -11.266156196594238
    6. ' j' → logprob: -11.766156196594238
    7. '	j' → logprob: -12.016156196594238
    8. '```' → logprob: -13.766156196594238
    9. '_j' → logprob: -14.641156196594238
    10. '                   ' → logprob: -14.766156196594238

Token 122: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00118368084076792
    2. ' +=' → logprob: -6.75118350982666
    3. '+' → logprob: -11.62618350982666
    4. '=' → logprob: -12.50118350982666
    5. ']+=' → logprob: -14.62618350982666
    6. '   ' → logprob: -15.62618350982666
    7. '++' → logprob: -16.126184463500977
    8. '```' → logprob: -16.251184463500977
    9. '>' → logprob: -17.001184463500977
    10. '           ' → logprob: -18.251184463500977

Token 123: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -11.625009536743164
    3. '```' → logprob: -14.875009536743164
    4. 'k' → logprob: -17.000009536743164
    5. '   ' → logprob: -17.750009536743164
    6. '-' → logprob: -18.875009536743164
    7. '<|end|>' → logprob: -19.125009536743164
    8. '`' → logprob: -19.312509536743164
    9. '+' → logprob: -19.625009536743164
    10. '  ' → logprob: -19.750009536743164

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '```' → logprob: -16.75000762939453
    4. '   ' → logprob: -17.75000762939453
    5. 'k' → logprob: -17.93750762939453
    6. '2' → logprob: -18.31250762939453
    7. '-' → logprob: -18.68750762939453
    8. '<|end|>' → logprob: -18.87500762939453
    9. '  ' → logprob: -19.00000762939453
    10. '0' → logprob: -19.56250762939453

Token 125: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27932706475257874
    2. '<|end|>' → logprob: -1.9043270349502563
    3. '
' → logprob: -3.404327154159546
    4. '   ' → logprob: -3.654327154159546
    5. 'return' → logprob: -3.779327154159546
    6. '<|end|>' → logprob: -5.529326915740967
    7. '```' → logprob: -5.904326915740967
    8. '	return' → logprob: -6.904326915740967
    9. '           ' → logprob: -7.029326915740967
    10. ' return' → logprob: -7.404326915740967

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.659329354763031
    2. '<|end|>' → logprob: -0.909329354763031
    3. '```' → logprob: -3.159329414367676
    4. '   ' → logprob: -3.909329414367676
    5. '<|end|>' → logprob: -4.909329414367676
    6. 'i' → logprob: -5.909329414367676
    7. '
' → logprob: -6.784329414367676
    8. '#' → logprob: -6.784329414367676
    9. '           ' → logprob: -6.909329414367676
    10. 'return' → logprob: -7.534329414367676

Token 127: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2656779885292053
    2. '       ' → logprob: -1.5156779289245605
    3. 'return' (adapté à ' return') → logprob: -4.5156779289245605
    4. ' return' → logprob: -6.3906779289245605
    5. '
' → logprob: -7.7656779289245605
    6. '        
' → logprob: -9.015678405761719
    7. ' ' → logprob: -9.515678405761719
    8. ' 
' → logprob: -9.515678405761719
    9. '    
' → logprob: -9.515678405761719
    10. '	return' → logprob: -9.640678405761719

Token 128: ' wins' (ID: 25327)
  Prédit: 'wins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wins' → logprob: -0.001960393972694874
    2. ' wins' → logprob: -6.251960277557373
    3. 'w' → logprob: -10.626960754394531
    4. '(w' → logprob: -12.126960754394531
    5. 'win' → logprob: -14.376960754394531
    6. '	w' → logprob: -14.626960754394531
    7. '```' → logprob: -15.001960754394531
    8. '<w' → logprob: -15.876960754394531
    9. '   ' → logprob: -15.876960754394531
    10. 'won' → logprob: -15.876960754394531

Token 129: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.71761155128479
    2. ' >=' → logprob: -0.96761155128479
    3. '==' → logprob: -2.59261155128479
    4. '>=' → logprob: -2.96761155128479
    5. '   ' → logprob: -5.342611312866211
    6. '<|end|>' → logprob: -7.967611312866211
    7. ' ' → logprob: -8.092611312866211
    8. ')>=' → logprob: -9.467611312866211
    9. '    ' → logprob: -9.717611312866211
    10. '=' → logprob: -10.092611312866211

Token 130: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.014947241172194481
    2. ' k' → logprob: -4.389947414398193
    3. '0' → logprob: -6.139947414398193
    4. '(k' → logprob: -8.889946937561035
    5. '(' → logprob: -10.014946937561035
    6. ' ' → logprob: -10.139946937561035
    7. 'N' → logprob: -10.264946937561035
    8. ' (' → logprob: -11.514946937561035
    9. '	k' → logprob: -12.764946937561035
    10. ' N' → logprob: -13.014946937561035

Token 131: ' //' (ID: 602)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1804196685552597
    2. '   ' → logprob: -2.930419683456421
    3. '<|end|>' → logprob: -3.180419683456421
    4. ')' → logprob: -3.555419683456421
    5. '\n' → logprob: -4.555419445037842
    6. ':' → logprob: -4.930419445037842
    7. ' ' → logprob: -5.805419445037842
    8. '    
' → logprob: -5.805419445037842
    9. '  
' → logprob: -6.305419445037842
    10. '  ' → logprob: -6.555419445037842

Token 132: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0683535037969705e-05
    2. ' ' → logprob: -11.50001049041748
    3. '3' → logprob: -14.50001049041748
    4. '```' → logprob: -17.375011444091797
    5. '
' → logprob: -18.125011444091797
    6. '1' → logprob: -18.687511444091797
    7. '２' → logprob: -19.125011444091797
    8. '   ' → logprob: -19.312511444091797
    9. '۲' → logprob: -19.750011444091797
    10. '200' → logprob: -19.812511444091797

Token 133: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.153795766294934e-06
    2. '3' → logprob: -12.125005722045898
    3. '

' → logprob: -15.375005722045898
    4. '1' → logprob: -16.0000057220459
    5. '```' → logprob: -16.1250057220459
    6. ' ' → logprob: -16.3750057220459
    7. '
' → logprob: -16.8750057220459
    8. '``' → logprob: -17.2500057220459
    9. '   ' → logprob: -18.2500057220459
    10. '4' → logprob: -18.5000057220459

Token 134: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03578389063477516
    2. '   ' → logprob: -3.7857840061187744
    3. '    
' → logprob: -4.785783767700195
    4. '  
' → logprob: -6.535783767700195
    5. '\n' → logprob: -7.660783767700195
    6. ' 
' → logprob: -7.660783767700195
    7. '

' → logprob: -7.785783767700195
    8. ')' → logprob: -7.785783767700195
    9. '' → logprob: -8.785783767700195
    10. '   
' → logprob: -8.910783767700195

Token 135: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29300129413604736
    2. '(
' → logprob: -1.9180012941360474
    3. '
' → logprob: -4.168001174926758
    4. '_' → logprob: -4.293001174926758
    5. ')' → logprob: -4.293001174926758
    6. '    
' → logprob: -4.668001174926758
    7. 'k' → logprob: -4.793001174926758
    8. ' 
' → logprob: -5.168001174926758
    9. '(k' → logprob: -5.168001174926758
    10. ':' → logprob: -5.293001174926758

Token 136: ' left' (ID: 3561)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.8903259038925171
    2. 'l' → logprob: -1.140325903892517
    3. 'left' (adapté à ' left') → logprob: -1.390325903892517
    4. 'lo' → logprob: -3.8903260231018066
    5. 'L' → logprob: -9.015325546264648
    6. 'for' → logprob: -9.765325546264648
    7. 'start' → logprob: -10.015325546264648
    8. 'lb' → logprob: -11.140325546264648
    9. ' lo' → logprob: -11.765325546264648
    10. 'k' → logprob: -11.765325546264648

Token 137: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.024741729721426964
    2. '=' → logprob: -3.7747416496276855
    3. ',' → logprob: -6.5247416496276855
    4. ' ,' → logprob: -10.524742126464844
    5. ' ' → logprob: -14.149742126464844
    6. '<|end|>' → logprob: -15.274742126464844
    7. ')' → logprob: -15.774742126464844
    8. ' =
' → logprob: -16.524742126464844
    9. ' =)' → logprob: -16.524742126464844
    10. '<|end|>' → logprob: -16.899742126464844

Token 138: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.38687485456466675
    2. 'right' → logprob: -1.1368749141693115
    3. '=' → logprob: -13.51187515258789
    4. ' ' → logprob: -13.88687515258789
    5. '	right' → logprob: -14.01187515258789
    6. ',right' → logprob: -15.51187515258789
    7. ' =' → logprob: -16.01187515258789
    8. '[right' → logprob: -16.13687515258789
    9. '```' → logprob: -16.38687515258789
    10. '(right' → logprob: -16.88687515258789

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061967797577381134
    2. '=' → logprob: -2.8119678497314453
    3. ',' → logprob: -16.061967849731445
    4. '＝' → logprob: -17.186967849731445
    5. ' ' → logprob: -17.436967849731445
    6. ' =)' → logprob: -18.311967849731445
    7. ' =
' → logprob: -18.561967849731445
    8. '<|end|>' → logprob: -18.936967849731445
    9. ')' → logprob: -19.061967849731445
    10. '=

' → logprob: -19.811967849731445

Token 140: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.07294279336929321
    2. '0' → logprob: -3.3229427337646484
    3. '1' → logprob: -3.6979427337646484
    4. ' N' → logprob: -4.822942733764648
    5. ' ' → logprob: -6.822942733764648
    6. 'len' → logprob: -7.947942733764648
    7. 'k' → logprob: -10.572942733764648
    8. ' len' → logprob: -12.322942733764648
    9. 'n' → logprob: -13.572942733764648
    10. '(N' → logprob: -13.697942733764648

Token 141: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.14908166229724884
    2. '0' → logprob: -2.5240817070007324
    3. '1' → logprob: -3.0240817070007324
    4. 'len' → logprob: -4.649081707000732
    5. ' N' → logprob: -9.149081230163574
    6. ' ' → logprob: -10.274081230163574
    7. 'max' → logprob: -11.524081230163574
    8. 'n' → logprob: -11.524081230163574
    9. 'min' → logprob: -11.649081230163574
    10. 'k' → logprob: -12.024081230163574

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005297990282997489
    2. ' ,' → logprob: -8.500530242919922
    3. ',
' → logprob: -8.625530242919922
    4. ',len' → logprob: -9.625530242919922
    5. '<|end|>' → logprob: -10.250530242919922
    6. '   ' → logprob: -12.125530242919922
    7. '
' → logprob: -12.125530242919922
    8. ',length' → logprob: -12.125530242919922
    9. ',n' → logprob: -12.375530242919922
    10. '<|end|>' → logprob: -12.750530242919922

Token 143: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.416665640543215e-05
    2. ' N' → logprob: -10.37503433227539
    3. 'len' → logprob: -12.75003433227539
    4. 'n' → logprob: -16.87503433227539
    5. 'min' → logprob: -19.12503433227539
    6. ' len' → logprob: -19.37503433227539
    7. ' ' → logprob: -19.37503433227539
    8. '   ' → logprob: -19.62503433227539
    9. '100' → logprob: -20.12503433227539
    10. '	N' → logprob: -20.25003433227539

Token 144: '-' (ID: 12)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4240622818470001
    2. '+' → logprob: -1.1740622520446777
    3. '<|end|>' → logprob: -3.7990622520446777
    4. ' 
' → logprob: -5.424062252044678
    5. '    
' → logprob: -6.049062252044678
    6. '  
' → logprob: -6.424062252044678
    7. '+
' → logprob: -6.799062252044678
    8. '```' → logprob: -6.924062252044678
    9. '\n' → logprob: -7.174062252044678
    10. 'while' → logprob: -7.299062252044678

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00046081675100140274
    2. ' ' → logprob: -8.625460624694824
    3. '0' → logprob: -8.750460624694824
    4. '+' → logprob: -9.375460624694824
    5. '-' → logprob: -10.875460624694824
    6. '```' → logprob: -12.000460624694824
    7. '2' → logprob: -12.500460624694824
    8. 'import' → logprob: -13.562960624694824
    9. ' -' → logprob: -13.625460624694824
    10. '`' → logprob: -13.687960624694824

Token 146: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09196799993515015
    2. '<|end|>' → logprob: -2.841968059539795
    3. ' 
' → logprob: -4.216968059539795
    4. '    
' → logprob: -5.466968059539795
    5. '   ' → logprob: -5.591968059539795
    6. '  
' → logprob: -6.091968059539795
    7. ' while' → logprob: -6.591968059539795
    8. 'while' → logprob: -7.091968059539795
    9. ' ' → logprob: -7.216968059539795
    10. '<|end|>' → logprob: -7.966968059539795

Token 147: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31586867570877075
    2. '<|end|>' → logprob: -1.440868616104126
    3. '   ' → logprob: -4.315868854522705
    4. ' while' → logprob: -5.190868854522705
    5. '    
' → logprob: -5.440868854522705
    6. ' 
' → logprob: -5.565868854522705
    7. '  
' → logprob: -6.065868854522705
    8. 'while' → logprob: -6.440868854522705
    9. '<|end|>' → logprob: -7.190868854522705
    10. ':' → logprob: -7.315868854522705

Token 148: ' ans' (ID: 3345)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6456034183502197
    2. 'while' → logprob: -1.0206034183502197
    3. '
' → logprob: -2.2706034183502197
    4. ' 
' → logprob: -5.895603179931641
    5. 'best' → logprob: -6.270603179931641
    6. ' ans' → logprob: -6.395603179931641
    7. ' best' → logprob: -6.520603179931641
    8. 'result' → logprob: -6.645603179931641
    9. '    
' → logprob: -6.895603179931641
    10. 'answer' → logprob: -7.645603179931641

Token 149: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407931089401245
    2. ' =' → logprob: -0.9740793108940125
    3. ' ' → logprob: -14.099079132080078
    4. ',' → logprob: -14.599079132080078
    5. ')' → logprob: -15.474079132080078
    6. ' =
' → logprob: -15.474079132080078
    7. 's' → logprob: -15.724079132080078
    8. '＝' → logprob: -15.974079132080078
    9. '=

' → logprob: -16.349079132080078
    10. '=
' → logprob: -16.599079132080078

Token 150: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021557189524173737
    2. 'N' → logprob: -4.146557331085205
    3. '1' → logprob: -5.646557331085205
    4. ' ' → logprob: -6.396557331085205
    5. '-' → logprob: -8.271556854248047
    6. ' N' → logprob: -10.146556854248047
    7. ' -' → logprob: -12.271556854248047
    8. '100' → logprob: -13.271556854248047
    9. 'right' → logprob: -13.396556854248047
    10. 'None' → logprob: -13.896556854248047

Token 151: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05332472175359726
    2. ' 
' → logprob: -3.8033246994018555
    3. '    
' → logprob: -4.5533246994018555
    4. '   ' → logprob: -4.9283246994018555
    5. '  
' → logprob: -5.0533246994018555
    6. ' while' → logprob: -6.3033246994018555
    7. '<|end|>' → logprob: -6.3033246994018555
    8. '\n' → logprob: -7.6783246994018555
    9. '```' → logprob: -8.303324699401855
    10. 'while' → logprob: -8.428324699401855

Token 152: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5424696207046509
    2. '   ' → logprob: -1.0424696207046509
    3. ' 
' → logprob: -3.9174695014953613
    4. '    
' → logprob: -4.167469501495361
    5. ' while' → logprob: -4.542469501495361
    6. '<|end|>' → logprob: -4.542469501495361
    7. '  
' → logprob: -5.167469501495361
    8. 'while' → logprob: -6.417469501495361
    9. '   
' → logprob: -8.04246997833252
    10. ' ' → logprob: -8.29246997833252

Token 153: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.31458359956741333
    2. ' while' → logprob: -1.3145835399627686
    3. '   ' → logprob: -6.689583778381348
    4. '
' → logprob: -9.939583778381348
    5. ' 
' → logprob: -11.314583778381348
    6. '	while' → logprob: -12.314583778381348
    7. '    
' → logprob: -12.689583778381348
    8. '```' → logprob: -13.064583778381348
    9. '    ' → logprob: -13.189583778381348
    10. 'While' → logprob: -13.314583778381348

Token 154: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.04859168455004692
    2. 'left' → logprob: -3.0485916137695312
    3. ' lef' → logprob: -13.173591613769531
    4. ' right' → logprob: -13.923591613769531
    5. '	left' → logprob: -14.548591613769531
    6. ' ' → logprob: -14.923591613769531
    7. 'right' → logprob: -15.048591613769531
    8. '(left' → logprob: -15.298591613769531
    9. '_left' → logprob: -17.04859161376953
    10. '[left' → logprob: -17.04859161376953

Token 155: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.014226735569536686
    2. '<=' → logprob: -4.264226913452148
    3. ' <' → logprob: -9.764226913452148
    4. '<' → logprob: -12.514226913452148
    5. ' ≤' → logprob: -13.514226913452148
    6. ')<=' → logprob: -15.514226913452148
    7. ']<=' → logprob: -15.889226913452148
    8. ' <=",' → logprob: -16.51422691345215
    9. ' ' → logprob: -16.51422691345215
    10. '```' → logprob: -16.88922691345215

Token 156: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.023245595395565033
    2. ' right' → logprob: -3.7732455730438232
    3. '	right' → logprob: -16.273244857788086
    4. '[right' → logprob: -17.398244857788086
    5. ' ' → logprob: -18.898244857788086
    6. '(right' → logprob: -19.148244857788086
    7. 'Right' → logprob: -19.148244857788086
    8. ',right' → logprob: -19.148244857788086
    9. '_right' → logprob: -19.273244857788086
    10. 'r' → logprob: -20.023244857788086

Token 157: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25206148624420166
    2. ':
' → logprob: -1.5020614862442017
    3. '       ' → logprob: -9.75206184387207
    4. '   ' → logprob: -10.50206184387207
    5. '<|end|>' → logprob: -11.12706184387207
    6. '):
' → logprob: -11.75206184387207
    7. ',' → logprob: -12.50206184387207
    8. ':

' → logprob: -12.50206184387207
    9. ' :
' → logprob: -12.62706184387207
    10. '<|end|>' → logprob: -12.62706184387207

Token 158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04662719741463661
    2. ' mid' → logprob: -3.2966272830963135
    3. '<|end|>' → logprob: -5.921627044677734
    4. ',' → logprob: -6.546627044677734
    5. 'mid' → logprob: -6.796627044677734
    6. '        
' → logprob: -7.171627044677734
    7. '    ' → logprob: -7.671627044677734
    8. '[mid' → logprob: -7.796627044677734
    9. '```' → logprob: -7.796627044677734
    10. '   ' → logprob: -8.546627044677734

Token 159: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.000730185944121331
    2. 'mid' (adapté à ' mid') → logprob: -7.250730037689209
    3. ' m' → logprob: -11.750730514526367
    4. '[mid' → logprob: -12.250730514526367
    5. ' midpoint' → logprob: -12.875730514526367
    6. ' middle' → logprob: -13.375730514526367
    7. '   ' → logprob: -14.000730514526367
    8. '       ' → logprob: -14.875730514526367
    9. '_mid' → logprob: -15.000730514526367
    10. '    ' → logprob: -15.125730514526367

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023248042911291122
    2. '=' → logprob: -3.7732479572296143
    3. ' =
' → logprob: -13.523247718811035
    4. '=int' → logprob: -15.023247718811035
    5. '<|end|>' → logprob: -15.273247718811035
    6. '=
' → logprob: -15.523247718811035
    7. ' ' → logprob: -15.773247718811035
    8. ')' → logprob: -15.773247718811035
    9. '```' → logprob: -17.52324867248535
    10. 'space' → logprob: -17.77324867248535

Token 161: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3132864534854889
    2. '(left' → logprob: -1.3132864236831665
    3. ' left' → logprob: -10.938286781311035
    4. 'left' → logprob: -12.313286781311035
    5. '[left' → logprob: -13.563286781311035
    6. '   ' → logprob: -14.438286781311035
    7. '(right' → logprob: -14.813286781311035
    8. ' ' → logprob: -16.43828582763672
    9. '       ' → logprob: -17.06328582763672
    10. ',left' → logprob: -17.56328582763672

Token 162: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.00020377879263833165
    2. ' left' → logprob: -8.500204086303711
    3. 'right' → logprob: -15.250204086303711
    4. '   ' → logprob: -17.50020408630371
    5. '	left' → logprob: -17.62520408630371
    6. '[left' → logprob: -17.75020408630371
    7. 'lef' → logprob: -19.37520408630371
    8. '(left' → logprob: -19.37520408630371
    9. ' ' → logprob: -19.75020408630371
    10. ' lef' → logprob: -20.12520408630371

Token 163: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3132619559764862
    2. '+' → logprob: -1.3132619857788086
    3. ' ' → logprob: -16.438261032104492
    4. ' +
' → logprob: -16.938261032104492
    5. '+
' → logprob: -17.438261032104492
    6. ')' → logprob: -17.563261032104492
    7. '```' → logprob: -17.813261032104492
    8. ' ' → logprob: -18.063261032104492
    9. '＋' → logprob: -18.563261032104492
    10. '[' → logprob: -19.438261032104492

Token 164: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.011048054322600365
    2. ' right' → logprob: -4.511047840118408
    3. '   ' → logprob: -16.38604736328125
    4. '	right' → logprob: -17.01104736328125
    5. '(right' → logprob: -17.13604736328125
    6. '
' → logprob: -17.63604736328125
    7. '[right' → logprob: -17.88604736328125
    8. ' ' → logprob: -18.13604736328125
    9. '```' → logprob: -19.76104736328125
    10. '.right' → logprob: -20.01104736328125

Token 165: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.93448489275761e-05
    2. ')//' → logprob: -9.500079154968262
    3. ' )' → logprob: -12.375079154968262
    4. ')>>' → logprob: -15.125079154968262
    5. '）' → logprob: -19.625080108642578
    6. ')
' → logprob: -20.000080108642578
    7. '//' → logprob: -21.000080108642578
    8. ']' → logprob: -21.250080108642578
    9. '   ' → logprob: -21.750080108642578
    10. '```' → logprob: -21.750080108642578

Token 166: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.04343518987298012
    2. '//' → logprob: -3.1684350967407227
    3. ')' → logprob: -8.293435096740723
    4. '>>' → logprob: -8.918435096740723
    5. '```' → logprob: -11.168435096740723
    6. ' >>' → logprob: -11.293435096740723
    7. ')//' → logprob: -11.668435096740723
    8. ' ' → logprob: -11.793435096740723
    9. ' ' → logprob: -12.543435096740723
    10. '   ' → logprob: -13.293435096740723

Token 167: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. '```' → logprob: -17.37537956237793
    4. '   ' → logprob: -18.00037956237793
    5. '
' → logprob: -18.25037956237793
    6. '=' → logprob: -19.00037956237793
    7. '  ' → logprob: -20.00037956237793
    8. '>' → logprob: -20.12537956237793
    9. '۲' → logprob: -20.12537956237793
    10. '1' → logprob: -20.25037956237793

Token 168: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '```' → logprob: -21.125
    4. '۲' → logprob: -21.25
    5. '２' → logprob: -21.5
    6. '२' → logprob: -22.5
    7. '
' → logprob: -22.875
    8. '=' → logprob: -23.25
    9. '   ' → logprob: -23.5
    10. '২' → logprob: -23.625

Token 169: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3405296802520752
    2. '<|end|>' → logprob: -1.8405296802520752
    3. '       ' → logprob: -2.090529680252075
    4. '  
' → logprob: -6.340529441833496
    5. '        
' → logprob: -6.590529441833496
    6. ' 
' → logprob: -7.215529441833496
    7. '<|end|>' → logprob: -7.215529441833496
    8. ' if' → logprob: -7.340529441833496
    9. 'if' → logprob: -8.340529441833496
    10. '```' → logprob: -8.840529441833496

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07261747866868973
    2. '<|end|>' → logprob: -3.072617530822754
    3. '
' → logprob: -3.947617530822754
    4. ' if' → logprob: -6.197617530822754
    5. '        
' → logprob: -7.572617530822754
    6. '   ' → logprob: -7.572617530822754
    7. '<|end|>' → logprob: -7.947617530822754
    8. '```' → logprob: -8.197617530822754
    9. ',' → logprob: -8.572617530822754
    10. ':
' → logprob: -9.322617530822754

Token 171: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6018378138542175
    2. '       ' → logprob: -0.9768378138542175
    3. 'if' (adapté à ' if') → logprob: -2.6018378734588623
    4. '
' → logprob: -6.726837635040283
    5. '<|end|>' → logprob: -9.101838111877441
    6. ' 
' → logprob: -9.726838111877441
    7. '        
' → logprob: -9.726838111877441
    8. '   ' → logprob: -10.476838111877441
    9. '	if' → logprob: -10.601838111877441
    10. '  
' → logprob: -11.101838111877441

Token 172: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.4740813970565796
    2. 'can' → logprob: -0.9740813970565796
    3. '	can' → logprob: -13.099081039428711
    4. '(can' → logprob: -13.224081039428711
    5. '   ' → logprob: -14.849081039428711
    6. ' not' → logprob: -16.59908103942871
    7. '_can' → logprob: -16.97408103942871
    8. '.can' → logprob: -17.47408103942871
    9. ' ' → logprob: -17.84908103942871
    10. ' ' → logprob: -18.97408103942871

Token 173: '_win' (ID: 63099)
  Prédit: '_win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -1.0280383548888494e-06
    2. 'win' → logprob: -14.125000953674316
    3. '_can' → logprob: -15.625000953674316
    4. '_w' → logprob: -17.250001907348633
    5. '_WIN' → logprob: -17.375001907348633
    6. 'Win' → logprob: -18.000001907348633
    7. ' win' → logprob: -19.125001907348633
    8. '_' → logprob: -20.375001907348633
    9. '(win' → logprob: -20.625001907348633
    10. ' Win' → logprob: -21.125001907348633

Token 174: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.250000953674316
    3. ' (' → logprob: -15.625000953674316
    4. '[mid' → logprob: -16.875
    5. 'mid' → logprob: -19.5
    6. ' mid' → logprob: -20.25
    7. '(max' → logprob: -20.25
    8. '(m' → logprob: -20.5
    9. '(min' → logprob: -20.625
    10. '(left' → logprob: -21.125

Token 175: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02329939976334572
    2. '):' → logprob: -3.7732994556427
    3. ' ):
' → logprob: -10.398299217224121
    4. ':
' → logprob: -11.648299217224121
    5. ':' → logprob: -12.273299217224121
    6. ')' → logprob: -12.273299217224121
    7. '):
' → logprob: -12.773299217224121
    8. ' ):' → logprob: -13.398299217224121
    9. '):

' → logprob: -14.648299217224121
    10. '       ' → logprob: -15.148299217224121

Token 176: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0768917128443718
    2. ' left' → logprob: -3.3268916606903076
    3. '
' → logprob: -4.076891899108887
    4. ' right' → logprob: -4.326891899108887
    5. 'right' → logprob: -5.951891899108887
    6. '       ' → logprob: -6.076891899108887
    7. 'left' → logprob: -6.701891899108887
    8. ':
' → logprob: -7.201891899108887
    9. '            
' → logprob: -7.826891899108887
    10. '```' → logprob: -8.826891899108887

Token 177: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.23123672604560852
    2. 'ans' (adapté à ' ans') → logprob: -1.6062366962432861
    3. '
' → logprob: -5.731236934661865
    4. '           ' → logprob: -7.231236934661865
    5. '	ans' → logprob: -7.231236934661865
    6. '   ' → logprob: -7.606236934661865
    7. '       ' → logprob: -8.481236457824707
    8. '(ans' → logprob: -8.981236457824707
    9. 'answer' → logprob: -9.356236457824707
    10. ' left' → logprob: -9.481236457824707

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407716512680054
    2. '=' → logprob: -0.9740771651268005
    3. ')' → logprob: -16.849077224731445
    4. ' ' → logprob: -17.349077224731445
    5. '<|end|>' → logprob: -17.974077224731445
    6. ',' → logprob: -18.224077224731445
    7. '＝' → logprob: -18.474077224731445
    8. '    ' → logprob: -19.099077224731445
    9. '```' → logprob: -19.224077224731445
    10. 's' → logprob: -19.224077224731445

Token 179: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.3132633566856384
    2. 'mid' → logprob: -1.3132634162902832
    3. '(mid' → logprob: -13.938262939453125
    4. '[mid' → logprob: -14.563262939453125
    5. ' midpoint' → logprob: -16.438262939453125
    6. '_mid' → logprob: -16.688262939453125
    7. ' ' → logprob: -16.813262939453125
    8. ' mids' → logprob: -17.188262939453125
    9. '
' → logprob: -17.938262939453125
    10. 'm' → logprob: -18.063262939453125

Token 180: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10069184005260468
    2. '           ' → logprob: -2.350691795349121
    3. '            
' → logprob: -8.600691795349121
    4. '    
' → logprob: -9.600691795349121
    5. '
' → logprob: -9.725691795349121
    6. ' 
' → logprob: -9.725691795349121
    7. '       ' → logprob: -10.225691795349121
    8. '  
' → logprob: -10.350691795349121
    9. '        
' → logprob: -10.600691795349121
    10. ',
' → logprob: -12.600691795349121

Token 181: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38751158118247986
    2. '           ' → logprob: -1.1375116109848022
    3. '       ' → logprob: -8.637511253356934
    4. '            
' → logprob: -8.887511253356934
    5. ' 
' → logprob: -9.512511253356934
    6. '
' → logprob: -9.762511253356934
    7. '    
' → logprob: -10.137511253356934
    8. 'left' → logprob: -10.262511253356934
    9. '```' → logprob: -10.637511253356934
    10. '  
' → logprob: -10.762511253356934

Token 182: ' right' (ID: 1849)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.8355548977851868
    2. 'right' (adapté à ' right') → logprob: -1.210554838180542
    3. ' left' → logprob: -1.710554838180542
    4. ' right' → logprob: -2.460554838180542
    5. '           ' → logprob: -6.210555076599121
    6. '   ' → logprob: -9.460555076599121
    7. '       ' → logprob: -10.710555076599121
    8. '	left' → logprob: -10.710555076599121
    9. '	right' → logprob: -10.960555076599121
    10. '[left' → logprob: -11.710555076599121

Token 183: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931490898132324
    2. ' =' → logprob: -0.6931490898132324
    3. ' -=' → logprob: -13.31814956665039
    4. '-=' → logprob: -16.19314956665039
    5. '＝' → logprob: -16.69314956665039
    6. '<|end|>' → logprob: -16.81814956665039
    7. '.=' → logprob: -17.69314956665039
    8. ')' → logprob: -17.81814956665039
    9. ' =)' → logprob: -18.56814956665039
    10. '=end' → logprob: -18.56814956665039

Token 184: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.07888989895582199
    2. ' mid' → logprob: -2.578889846801758
    3. '[mid' → logprob: -16.828889846801758
    4. '(mid' → logprob: -17.453889846801758
    5. '   ' → logprob: -18.328889846801758
    6. ' ' → logprob: -19.453889846801758
    7. 'm' → logprob: -19.828889846801758
    8. '_mid' → logprob: -20.453889846801758
    9. 'middle' → logprob: -20.578889846801758
    10. ' ' → logprob: -20.703889846801758

Token 185: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.048746559768915176
    2. '-' → logprob: -3.0487465858459473
    3. ' ' → logprob: -9.298746109008789
    4. 'mid' → logprob: -10.173746109008789
    5. '=' → logprob: -10.673746109008789
    6. ' =' → logprob: -12.798746109008789
    7. ' mid' → logprob: -13.048746109008789
    8. '
' → logprob: -15.048746109008789
    9. '[mid' → logprob: -15.048746109008789
    10. ' ' → logprob: -15.548746109008789

Token 186: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -19.8750057220459
    4. '   ' → logprob: -21.2500057220459
    5. '۱' → logprob: -22.5000057220459
    6. '１' → logprob: -22.8750057220459
    7. '0' → logprob: -23.1250057220459
    8. ' ' → logprob: -23.7500057220459
    9. '<|end|>' → logprob: -24.0625057220459
    10. '१' → logprob: -24.2500057220459

Token 187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -18.625001907348633
    4. '   ' → logprob: -20.125001907348633
    5. '
' → logprob: -20.875001907348633
    6. '۱' → logprob: -21.250001907348633
    7. '<|end|>' → logprob: -21.437501907348633
    8. '0' → logprob: -22.312501907348633
    9. '১' → logprob: -22.312501907348633
    10. '१' → logprob: -22.437501907348633

Token 188: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004738063144031912
    2. 'else' → logprob: -8.250473976135254
    3. ' else' → logprob: -8.500473976135254
    4. '   ' → logprob: -12.125473976135254
    5. '	' → logprob: -13.500473976135254
    6. '```' → logprob: -14.125473976135254
    7. '
' → logprob: -14.500473976135254
    8. '      ' → logprob: -15.375473976135254
    9. '<|end|>' → logprob: -15.500473976135254
    10. '	else' → logprob: -15.750473976135254

Token 189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005174466408789158
    2. 'else' → logprob: -5.63017463684082
    3. ' else' → logprob: -6.50517463684082
    4. '```' → logprob: -10.25517463684082
    5. '   ' → logprob: -10.63017463684082
    6. '	' → logprob: -11.38017463684082
    7. '	else' → logprob: -12.50517463684082
    8. '<|end|>' → logprob: -13.50517463684082
    9. '      ' → logprob: -14.63017463684082
    10. '           ' → logprob: -15.38017463684082

Token 190: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.7955888509750366
    2. '       ' → logprob: -1.2955888509750366
    3. 'else' (adapté à ' else') → logprob: -1.2955888509750366
    4. '   ' → logprob: -6.920588970184326
    5. '	else' → logprob: -9.295588493347168
    6. '
' → logprob: -9.545588493347168
    7. '```' → logprob: -10.670588493347168
    8. '	' → logprob: -11.045588493347168
    9. '    ' → logprob: -11.795588493347168
    10. '    
' → logprob: -11.920588493347168

Token 191: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008267740719020367
    2. '       ' → logprob: -5.633267879486084
    3. ':
' → logprob: -6.383267879486084
    4. 'left' → logprob: -7.008267879486084
    5. '   ' → logprob: -7.508267879486084
    6. '```' → logprob: -7.633267879486084
    7. ':' → logprob: -7.758267879486084
    8. '
' → logprob: -8.758267402648926
    9. '[left' → logprob: -9.383267402648926
    10. '	       ' → logprob: -9.633267402648926

Token 192: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5123574733734131
    2. 'left' → logprob: -1.262357473373413
    3. '           ' → logprob: -2.262357473373413
    4. '   ' → logprob: -5.012357711791992
    5. ' left' → logprob: -5.887357711791992
    6. '	left' → logprob: -6.137357711791992
    7. '[left' → logprob: -7.012357711791992
    8. '```' → logprob: -7.512357711791992
    9. '
' → logprob: -7.762357711791992
    10. '	       ' → logprob: -9.387357711791992

Token 193: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.0015030752401798964
    2. ' left' → logprob: -6.501502990722656
    3. '	left' → logprob: -14.376502990722656
    4. '[left' → logprob: -15.876502990722656
    5. ':left' → logprob: -17.251502990722656
    6. '.left' → logprob: -17.751502990722656
    7. '_left' → logprob: -18.001502990722656
    8. 'right' → logprob: -19.126502990722656
    9. ' lef' → logprob: -19.126502990722656
    10. '           ' → logprob: -19.626502990722656

Token 194: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740770161151886
    2. '=' → logprob: -0.9740769863128662
    3. '＝' → logprob: -18.474077224731445
    4. ' ' → logprob: -20.099077224731445
    5. ' +=' → logprob: -20.099077224731445
    6. '+=' → logprob: -20.349077224731445
    7. '.=' → logprob: -20.349077224731445
    8. '```' → logprob: -20.349077224731445
    9. '    ' → logprob: -21.349077224731445
    10. '            ' → logprob: -21.724077224731445

Token 195: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.12693440914154053
    2. ' mid' → logprob: -2.12693452835083
    3. '[mid' → logprob: -12.501934051513672
    4. '(mid' → logprob: -13.126934051513672
    5. '_mid' → logprob: -14.876934051513672
    6. ' midpoint' → logprob: -15.626934051513672
    7. 'middle' → logprob: -17.376934051513672
    8. ' ' → logprob: -17.626934051513672
    9. '.mid' → logprob: -17.876934051513672
    10. ' middle' → logprob: -18.501934051513672

Token 196: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16023458540439606
    2. '+' → logprob: -1.9102345705032349
    3. '=' → logprob: -11.785234451293945
    4. ' =' → logprob: -13.160234451293945
    5. ' +=' → logprob: -15.160234451293945
    6. ' +
' → logprob: -16.160234451293945
    7. ' ' → logprob: -16.160234451293945
    8. '＋' → logprob: -16.160234451293945
    9. ' plus' → logprob: -16.785234451293945
    10. '+
' → logprob: -16.910234451293945

Token 197: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.505351095460355e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -16.50007438659668
    4. '0' → logprob: -18.25007438659668
    5. '           ' → logprob: -18.75007438659668
    6. '=' → logprob: -19.12507438659668
    7. '<|end|>' → logprob: -19.25007438659668
    8. '   ' → logprob: -19.50007438659668
    9. '
' → logprob: -20.12507438659668
    10. '       ' → logprob: -20.75007438659668

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -16.250003814697266
    4. '0' → logprob: -16.750003814697266
    5. '   ' → logprob: -18.000003814697266
    6. '-' → logprob: -19.875003814697266
    7. '2' → logprob: -20.125003814697266
    8. '  ' → logprob: -20.125003814697266
    9. '
' → logprob: -20.250003814697266
    10. '3' → logprob: -20.375003814697266

Token 199: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0752398818731308
    2. '
' → logprob: -2.825239896774292
    3. '   ' → logprob: -4.450239658355713
    4. '    
' → logprob: -6.575239658355713
    5. ' print' → logprob: -9.825240135192871
    6. '  
' → logprob: -10.575240135192871
    7. '
' → logprob: -11.075240135192871
    8. '```' → logprob: -11.700240135192871
    9. '	print' → logprob: -12.825240135192871
    10. '   
' → logprob: -13.700240135192871

Token 200: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16355320811271667
    2. '   ' → logprob: -1.913553237915039
    3. '
' → logprob: -6.163553237915039
    4. '```' → logprob: -6.913553237915039
    5. ' print' → logprob: -9.038553237915039
    6. '    
' → logprob: -9.288553237915039
    7. 'if' → logprob: -12.288553237915039
    8. '  
' → logprob: -12.788553237915039
    9. '`' → logprob: -13.663553237915039
    10. '``' → logprob: -13.913553237915039

Token 201: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.011957831680774689
    2. '
' → logprob: -4.51195764541626
    3. '   ' → logprob: -7.76195764541626
    4. '```' → logprob: -7.88695764541626
    5. ' print' → logprob: -9.636958122253418
    6. 'if' → logprob: -10.761958122253418
    7. '    
' → logprob: -11.136958122253418
    8. '
' → logprob: -12.761958122253418
    9. '``' → logprob: -13.261958122253418
    10. '  
' → logprob: -14.011958122253418

Token 202: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0001596771035110578
    2. '(' → logprob: -9.25015926361084
    3. '()' → logprob: -9.87515926361084
    4. '(f' → logprob: -12.62515926361084
    5. '('' → logprob: -12.75015926361084
    6. 'ans' → logprob: -13.87515926361084
    7. '(len' → logprob: -13.87515926361084
    8. '((' → logprob: -14.00015926361084
    9. '(abs' → logprob: -14.25015926361084
    10. ' (' → logprob: -14.37515926361084

Token 203: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')`' → logprob: -15.250000953674316
    3. '`)' → logprob: -15.500000953674316
    4. ')
' → logprob: -15.625000953674316
    5. ' )' → logprob: -16.000001907348633
    6. '))' → logprob: -16.125001907348633
    7. '())' → logprob: -17.000001907348633
    8. '')' → logprob: -17.375001907348633
    9. ')}' → logprob: -17.750001907348633
    10. '```' → logprob: -17.750001907348633

Token 204: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.008616461418569088
    2. ' ans' → logprob: -4.7586164474487305
    3. '(ans' → logprob: -13.75861644744873
    4. 'else' → logprob: -14.50861644744873
    5. '	ans' → logprob: -15.63361644744873
    6. '   ' → logprob: -15.63361644744873
    7. '    ' → logprob: -18.008617401123047
    8. 'Ans' → logprob: -18.258617401123047
    9. '_ans' → logprob: -19.008617401123047
    10. 'answer' → logprob: -19.508617401123047

Token 205: ' else' (ID: 1203)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1551610678434372
    2. 'is' → logprob: -2.655161142349243
    3. 'else' → logprob: -2.655161142349243
    4. ' else' → logprob: -5.780160903930664
    5. '!=' → logprob: -9.780160903930664
    6. '==' → logprob: -13.905160903930664
    7. ' !=' → logprob: -14.280160903930664
    8. 'in' → logprob: -15.280160903930664
    9. '!==' → logprob: -15.280160903930664
    10. 'not' → logprob: -15.530160903930664

Token 206: ' "' (ID: 392)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.646520733833313
    2. '0' → logprob: -0.771520733833313
    3. ' N' → logprob: -5.021520614624023
    4. ' ' → logprob: -5.146520614624023
    5. '"N' → logprob: -7.396520614624023
    6. '"' → logprob: -8.396520614624023
    7. '-' → logprob: -8.396520614624023
    8. ')' → logprob: -9.521520614624023
    9. ''N' → logprob: -9.521520614624023
    10. ' -' → logprob: -9.771520614624023

Token 207: 'NA' (ID: 9555)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15703792870044708
    2. 'N' → logprob: -2.6570379734039307
    3. '-' → logprob: -2.7820379734039307
    4. '"' → logprob: -5.157037734985352
    5. 'NA' → logprob: -5.532037734985352
    6. '1' → logprob: -6.907037734985352
    7. 'NONE' → logprob: -7.032037734985352
    8. '"N' → logprob: -7.907037734985352
    9. 'none' → logprob: -8.157037734985352
    10. 'None' → logprob: -8.907037734985352

Token 208: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -5.943783253314905e-05
    2. ')")' → logprob: -10.625059127807617
    3. '")
' → logprob: -10.750059127807617
    4. ')' → logprob: -11.375059127807617
    5. '"' → logprob: -14.000059127807617
    6. '0' → logprob: -14.500059127807617
    7. 'N' → logprob: -16.000059127807617
    8. '")

' → logprob: -16.250059127807617
    9. ' ")' → logprob: -16.500059127807617
    10. '')' → logprob: -16.500059127807617


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 206
Tokens correctement prédits (1ère position, stricte): 93
Tokens correctement prédits (1ère position, avec adaptation): 102
Tokens correctement prédits (top 10): 178
Précision stricte (1ère position): 45.15%
Précision adaptée (1ère position): 49.51%
Précision (top 10): 86.41%
================================================================================
