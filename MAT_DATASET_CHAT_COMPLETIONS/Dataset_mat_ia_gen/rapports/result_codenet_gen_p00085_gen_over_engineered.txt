================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Participant:
    def __init__(self, identifier: int):
        self.identifier = identifier

    def __repr__(self):
        return f"Participant({self.identifier})"

class Circle:
    def __init__(self, participants):
        self.participants = participants

    def is_empty(self):
        return len(self.participants) == 0

    def size(self):
        return len(self.participants)

    def remove_at(self, index: int):
        removed = self.participants.pop(index)
        return removed

    def get_at(self, index: int):
        return self.participants[index]

class JosephusGame:
    def __init__(self, n: int, m: int):
        self.n = n
        self.m = m
        self.circle = Circle([Participant(i) for i in range(1, n+1)])

    def play(self):
        # The position from which to start counting (index-based)
        current_index = 0
        while self.circle.size() > 1:
            # Calculate the index of the participant to remove
            current_index = (current_index + self.m - 1) % self.circle.size()
            self.circle.remove_at(current_index)
        # The winner is the last remaining participant
        return self.circle.get_at(0).identifier

class JosephusSolver:
    def __init__(self):
        self.games = []

    def add_game(self, n: int, m: int):
        self.games.append(JosephusGame(n, m))

    def solve_all(self):
        results = []
        for game in self.games:
            results.append(game.play())
        return results

def main():
    import sys
    solver = JosephusSolver()
    for line in sys.stdin:
        line=line.strip()
        if not line:
            continue
        n,m = map(int, line.split())
        if n == 0 and m == 0:
            break
        solver.add_game(n,m)
    results = solver.solve_all()
    for r in results:
        print(r)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Participant' (ID: 120347)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20952048897743225
    2. '```' → logprob: -2.3345205783843994
    3. '(' → logprob: -3.0845205783843994
    4. '   ' → logprob: -3.3345205783843994
    5. ':
' → logprob: -6.08452033996582
    6. '.' → logprob: -6.58452033996582
    7. ''' → logprob: -6.58452033996582
    8. '\' → logprob: -7.20952033996582
    9. '(
' → logprob: -7.33452033996582
    10. '():' → logprob: -7.45952033996582

Token 4: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24572311341762543
    2. '    ' → logprob: -2.245723009109497
    3. '   ' → logprob: -2.620723009109497
    4. '(' → logprob: -4.870723247528076
    5. ' pass' → logprob: -5.120723247528076
    6. '_' → logprob: -5.495723247528076
    7. ' def' → logprob: -5.995723247528076
    8. '`' → logprob: -6.370723247528076
    9. '(space' → logprob: -6.370723247528076
    10. ' (' → logprob: -6.495723247528076

Token 5: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3488450050354004
    2. '__' → logprob: -2.0988450050354004
    3. ' __' → logprob: -2.2238450050354004
    4. ' ' → logprob: -4.2238450050354
    5. '_' → logprob: -4.7238450050354
    6. ' init' → logprob: -4.7238450050354
    7. '<|end|>' → logprob: -5.2238450050354
    8. '    ' → logprob: -5.4738450050354
    9. '_init' → logprob: -6.3488450050354
    10. ' add' → logprob: -6.4738450050354

Token 6: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.054500666621607e-06
    2. ' init' → logprob: -13.00000286102295
    3. '_init' → logprob: -14.25000286102295
    4. 'ini' → logprob: -16.500003814697266
    5. '	init' → logprob: -17.000003814697266
    6. 'i' → logprob: -17.750003814697266
    7. '_' → logprob: -18.875003814697266
    8. 'inite' → logprob: -19.000003814697266
    9. 'in' → logprob: -19.250003814697266
    10. 'innit' → logprob: -19.375003814697266

Token 7: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.20371627807617188
    2. '__' → logprob: -1.7037162780761719
    3. '(' → logprob: -7.078716278076172
    4. '__(
' → logprob: -7.078716278076172
    5. '_' → logprob: -7.703716278076172
    6. '__((' → logprob: -9.453716278076172
    7. '__('' → logprob: -10.203716278076172
    8. '_(' → logprob: -11.328716278076172
    9. '(self' → logprob: -11.578716278076172
    10. '___' → logprob: -11.953716278076172

Token 8: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0053160544484853745
    2. ' self' → logprob: -5.255316257476807
    3. ')' → logprob: -10.255315780639648
    4. '(self' → logprob: -10.755315780639648
    5. ' ' → logprob: -11.505315780639648
    6. '_self' → logprob: -13.005315780639648
    7. ',self' → logprob: -13.255315780639648
    8. 'space' → logprob: -13.255315780639648
    9. ' )' → logprob: -13.380315780639648
    10. '<|end|>' → logprob: -13.880315780639648

Token 9: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06935390830039978
    2. ' )' → logprob: -3.5693538188934326
    3. '(' → logprob: -4.069354057312012
    4. '<|end|>' → logprob: -4.569354057312012
    5. '.' → logprob: -5.194354057312012
    6. ' ' → logprob: -6.444354057312012
    7. '_' → logprob: -6.819354057312012
    8. ',' → logprob: -7.319354057312012
    9. ' (' → logprob: -7.944354057312012
    10. '[' → logprob: -7.944354057312012

Token 10: ' identifier' (ID: 24577)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05466131120920181
    2. 'name' → logprob: -3.679661273956299
    3. ' self' → logprob: -4.054661273956299
    4. ')' → logprob: -5.054661273956299
    5. ' )' → logprob: -6.054661273956299
    6. ' name' → logprob: -6.679661273956299
    7. 'participant' → logprob: -7.679661273956299
    8. 's' → logprob: -10.054661750793457
    9. ' ' → logprob: -10.554661750793457
    10. 'n' → logprob: -10.804661750793457

Token 11: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6080282926559448
    2. '):' → logprob: -0.8580282926559448
    3. ')' → logprob: -3.6080284118652344
    4. ':' → logprob: -5.733028411865234
    5. '.' → logprob: -7.608028411865234
    6. '):
' → logprob: -7.983028411865234
    7. '   ' → logprob: -9.608028411865234
    8. '_' → logprob: -9.733028411865234
    9. ',
' → logprob: -10.108028411865234
    10. '<|end|>' → logprob: -10.483028411865234

Token 12: ' int' (ID: 677)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.13496600091457367
    2. 'str' → logprob: -3.2599658966064453
    3. ' )' → logprob: -3.5099658966064453
    4. ')' → logprob: -3.6349658966064453
    5. 'int' → logprob: -3.7599658966064453
    6. ' int' → logprob: -5.134965896606445
    7. 's' → logprob: -7.384965896606445
    8. ' ' → logprob: -8.009965896606445
    9. '   ' → logprob: -8.259965896606445
    10. ' ,' → logprob: -8.384965896606445

Token 13: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5049679279327393
    2. '):' → logprob: -1.0049679279327393
    3. ')' → logprob: -3.5049679279327393
    4. ':' → logprob: -9.25496768951416
    5. '   ' → logprob: -9.37996768951416
    6. '):
' → logprob: -9.37996768951416
    7. ' ,' → logprob: -10.75496768951416
    8. ',
' → logprob: -11.50496768951416
    9. ' ' → logprob: -11.75496768951416
    10. '),' → logprob: -11.75496768951416

Token 14: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05387136712670326
    2. '    ' → logprob: -3.8038713932037354
    3. '   ' → logprob: -4.178871154785156
    4. ' ' → logprob: -5.428871154785156
    5. '        
' → logprob: -6.178871154785156
    6. '        ' → logprob: -6.303871154785156
    7. '\' → logprob: -6.678871154785156
    8. ' 
' → logprob: -7.303871154785156
    9. '<|end|>' → logprob: -7.303871154785156
    10. '\n' → logprob: -7.428871154785156

Token 15: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4638309180736542
    2. '       ' → logprob: -1.2138309478759766
    3. '   ' → logprob: -4.088830947875977
    4. '        ' → logprob: -4.213830947875977
    5. ' self' → logprob: -4.338830947875977
    6. ' ' → logprob: -4.713830947875977
    7. 's' → logprob: -5.088830947875977
    8. '_' → logprob: -5.463830947875977
    9. '    ' → logprob: -5.838830947875977
    10. '\' → logprob: -6.713830947875977

Token 16: '.identifier' (ID: 84133)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.011264033615589142
    2. '.identifier' → logprob: -4.511263847351074
    3. ' .' → logprob: -9.011263847351074
    4. '.id' → logprob: -9.761263847351074
    5. '.ident' → logprob: -11.511263847351074
    6. '.user' → logprob: -11.636263847351074
    7. '.name' → logprob: -12.761263847351074
    8. '._' → logprob: -13.136263847351074
    9. 'identifier' → logprob: -13.261263847351074
    10. '.identity' → logprob: -13.886263847351074

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31360673904418945
    2. '=' → logprob: -1.3136067390441895
    3. ' ' → logprob: -8.938606262207031
    4. '<|end|>' → logprob: -9.063606262207031
    5. '.' → logprob: -10.438606262207031
    6. ' =
' → logprob: -11.688606262207031
    7. '   ' → logprob: -11.938606262207031
    8. '    ' → logprob: -12.063606262207031
    9. ' ==' → logprob: -12.313606262207031
    10. '  ' → logprob: -12.313606262207031

Token 18: ' identifier' (ID: 24577)
  Prédit: ' identifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' identifier' → logprob: -0.038045283406972885
    2. 'identifier' → logprob: -3.2880451679229736
    3. '(identifier' → logprob: -13.163044929504395
    4. ' ' → logprob: -13.788044929504395
    5. '_identifier' → logprob: -14.538044929504395
    6. '.identifier' → logprob: -15.288044929504395
    7. '0' → logprob: -17.03804588317871
    8. 'Identifier' → logprob: -17.28804588317871
    9. ' ' → logprob: -17.41304588317871
    10. ' Identifier' → logprob: -18.03804588317871

Token 19: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.24045725166797638
    2. '
' → logprob: -2.74045729637146
    3. '<|end|>' → logprob: -2.99045729637146
    4. '\' → logprob: -3.11545729637146
    5. '\n' → logprob: -3.86545729637146
    6. '```' → logprob: -5.115457057952881
    7. '' → logprob: -5.740457057952881
    8. '   ' → logprob: -5.865457057952881
    9. '.
' → logprob: -5.990457057952881
    10. '_' → logprob: -6.115457057952881

Token 20: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3030945360660553
    2. '   ' → logprob: -2.0530946254730225
    3. '\' → logprob: -3.6780946254730225
    4. '
' → logprob: -3.6780946254730225
    5. '\n' → logprob: -3.8030946254730225
    6. '```' → logprob: -4.053094387054443
    7. '    
' → logprob: -4.678094387054443
    8. ' ' → logprob: -5.053094387054443
    9. ':' → logprob: -5.553094387054443
    10. 'n' → logprob: -5.928094387054443

Token 21: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.014411353506147861
    2. 'd' → logprob: -4.389411449432373
    3. '   ' → logprob: -6.764411449432373
    4. '@' → logprob: -8.014410972595215
    5. ' def' → logprob: -8.889410972595215
    6. ' ' → logprob: -9.139410972595215
    7. '```' → logprob: -10.014410972595215
    8. '@property' → logprob: -10.264410972595215
    9. '#' → logprob: -11.139410972595215
    10. '    ' → logprob: -11.139410972595215

Token 22: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007336487527936697
    2. '_' → logprob: -5.632336616516113
    3. ' space' → logprob: -6.757336616516113
    4. 'space' → logprob: -7.382336616516113
    5. '.' → logprob: -7.757336616516113
    6. ' ' → logprob: -8.507336616516113
    7. '_space' → logprob: -8.507336616516113
    8. ' __' → logprob: -8.757336616516113
    9. '  ' → logprob: -9.007336616516113
    10. ' is' → logprob: -9.382336616516113

Token 23: 'repr' (ID: 67002)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6621511578559875
    2. 'repr' → logprob: -1.7871510982513428
    3. 'str' → logprob: -2.2871510982513428
    4. 'init' → logprob: -2.2871510982513428
    5. 'eq' → logprob: -2.2871510982513428
    6. 'i' → logprob: -5.162151336669922
    7. '_eq' → logprob: -5.912151336669922
    8. '_i' → logprob: -7.162151336669922
    9. '_init' → logprob: -7.162151336669922
    10. '_str' → logprob: -7.412151336669922

Token 24: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16261988878250122
    2. '__(' → logprob: -1.9126198291778564
    3. '__(
' → logprob: -6.7876200675964355
    4. '__('' → logprob: -6.9126200675964355
    5. '_' → logprob: -8.787619590759277
    6. '__((' → logprob: -10.412619590759277
    7. '__("' → logprob: -10.787619590759277
    8. '(' → logprob: -11.037619590759277
    9. '(self' → logprob: -11.412619590759277
    10. '___' → logprob: -11.412619590759277

Token 25: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.4021237802808173e-05
    2. ')' → logprob: -11.250014305114746
    3. ' self' → logprob: -14.125014305114746
    4. '
' → logprob: -17.50001335144043
    5. '(self' → logprob: -17.75001335144043
    6. 'Self' → logprob: -17.75001335144043
    7. ' ' → logprob: -17.75001335144043
    8. '   ' → logprob: -18.12501335144043
    9. '_self' → logprob: -18.25001335144043
    10. 'sel' → logprob: -18.50001335144043

Token 26: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5716661810874939
    2. '):' → logprob: -0.9466661810874939
    3. ',' → logprob: -3.0716662406921387
    4. 'self' → logprob: -7.821666240692139
    5. '):
' → logprob: -8.57166576385498
    6. ' ):' → logprob: -9.32166576385498
    7. ' ,' → logprob: -9.57166576385498
    8. ' )' → logprob: -9.69666576385498
    9. '<|end|>' → logprob: -10.07166576385498
    10. '):

' → logprob: -10.44666576385498

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047645095735788345
    2. ''' → logprob: -4.547645092010498
    3. ' f' → logprob: -5.047645092010498
    4. '"' → logprob: -5.172645092010498
    5. ' return' → logprob: -5.172645092010498
    6. '        ' → logprob: -5.297645092010498
    7. '    ' → logprob: -5.422645092010498
    8. '   ' → logprob: -6.047645092010498
    9. 'self' → logprob: -6.672645092010498
    10. 'f' → logprob: -6.922645092010498

Token 28: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.33092084527015686
    2. '       ' → logprob: -1.5809208154678345
    3. ' return' → logprob: -2.580920934677124
    4. '{return' → logprob: -9.330921173095703
    5. 'f' → logprob: -9.955921173095703
    6. ' f' → logprob: -10.205921173095703
    7. '   ' → logprob: -10.580921173095703
    8. '           ' → logprob: -11.580921173095703
    9. '`' → logprob: -11.705921173095703
    10. '```' → logprob: -11.955921173095703

Token 29: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.003905399702489376
    2. 'f' → logprob: -5.878905296325684
    3. ' ' → logprob: -6.878905296325684
    4. ''' → logprob: -10.128905296325684
    5. ' ' → logprob: -11.128905296325684
    6. '"' → logprob: -11.253905296325684
    7. ' repr' → logprob: -14.003905296325684
    8. ' self' → logprob: -14.503905296325684
    9. '`' → logprob: -14.628905296325684
    10. ' F' → logprob: -14.628905296325684

Token 30: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.051388856023550034
    2. ''' → logprob: -3.051388740539551
    3. ''"' → logprob: -6.926388740539551
    4. '"'' → logprob: -7.551388740539551
    5. '"{' → logprob: -8.30138874053955
    6. '"P' → logprob: -8.30138874053955
    7. ''{' → logprob: -8.42638874053955
    8. ''s' → logprob: -8.92638874053955
    9. '"class' → logprob: -9.30138874053955
    10. ''S' → logprob: -9.55138874053955

Token 31: 'Participant' (ID: 67860)
  Prédit: 'Participant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Participant' → logprob: -4.3226136767771095e-05
    2. 'Part' → logprob: -10.625042915344238
    3. '<' → logprob: -11.500042915344238
    4. 'Particip' → logprob: -12.000042915344238
    5. 'Participants' → logprob: -14.000042915344238
    6. '<class' → logprob: -14.625042915344238
    7. 'participant' → logprob: -15.125042915344238
    8. 'P' → logprob: -15.375042915344238
    9. ' Participant' → logprob: -15.625042915344238
    10. 'Particle' → logprob: -16.000043869018555

Token 32: '({' (ID: 3972)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.7042235732078552
    2. '({' → logprob: -0.9542235732078552
    3. '(' → logprob: -2.3292236328125
    4. '(identifier' → logprob: -4.4542236328125
    5. '(id' → logprob: -5.0792236328125
    6. '{id' → logprob: -5.3292236328125
    7. '(ID' → logprob: -8.8292236328125
    8. '(f' → logprob: -9.9542236328125
    9. '("{' → logprob: -10.0792236328125
    10. '('{' → logprob: -10.9542236328125

Token 33: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.2166411478538066e-05
    2. '{' → logprob: -9.875052452087402
    3. ' self' → logprob: -14.500052452087402
    4. 'sel' → logprob: -16.125051498413086
    5. '	self' → logprob: -18.000051498413086
    6. 'repr' → logprob: -18.000051498413086
    7. '{
' → logprob: -18.250051498413086
    8. ')' → logprob: -18.375051498413086
    9. '}' → logprob: -18.625051498413086
    10. '[self' → logprob: -19.125051498413086

Token 34: '.identifier' (ID: 84133)
  Prédit: '.identifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.identifier' → logprob: -0.0017466964200139046
    2. '.' → logprob: -6.501746654510498
    3. '.ident' → logprob: -8.751747131347656
    4. 'identifier' → logprob: -10.501747131347656
    5. ').' → logprob: -11.001747131347656
    6. '.id' → logprob: -11.626747131347656
    7. '}.' → logprob: -11.626747131347656
    8. '.)' → logprob: -11.751747131347656
    9. ')' → logprob: -12.376747131347656
    10. '.identity' → logprob: -12.626747131347656

Token 35: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.0003301016695331782
    2. ')' → logprob: -8.750329971313477
    3. ')}' → logprob: -9.000329971313477
    4. '}' → logprob: -11.250329971313477
    5. ')"' → logprob: -11.375329971313477
    6. '}")' → logprob: -11.625329971313477
    7. '}"' → logprob: -11.750329971313477
    8. ' })' → logprob: -12.375329971313477
    9. '))' → logprob: -14.000329971313477
    10. '"})' → logprob: -14.000329971313477

Token 36: '"

' (ID: 2678)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.648806095123291
    2. '"' → logprob: -1.148806095123291
    3. '<|end|>' → logprob: -2.523806095123291
    4. '```' → logprob: -3.398806095123291
    5. '")' → logprob: -4.023806095123291
    6. '\n' → logprob: -5.148806095123291
    7. '
' → logprob: -5.273806095123291
    8. '`' → logprob: -5.273806095123291
    9. '}' → logprob: -5.898806095123291
    10. '<|end|>' → logprob: -6.023806095123291

Token 37: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6842069625854492
    2. '.' → logprob: -0.9342069625854492
    3. '<|end|>' → logprob: -3.559206962585449
    4. '

' → logprob: -3.809206962585449
    5. ':' → logprob: -4.184206962585449
    6. ',' → logprob: -4.809206962585449
    7. '#' → logprob: -5.434206962585449
    8. ')' → logprob: -5.934206962585449
    9. '```' → logprob: -6.059206962585449
    10. '[' → logprob: -6.309206962585449

Token 38: ' Circle' (ID: 33361)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08380293846130371
    2. ' Participant' → logprob: -4.208803176879883
    3. ' Event' → logprob: -4.708803176879883
    4. ' Meeting' → logprob: -4.833803176879883
    5. ' Conference' → logprob: -5.208803176879883
    6. ' Competition' → logprob: -5.333803176879883
    7. ' Session' → logprob: -5.333803176879883
    8. ' Tournament' → logprob: -5.333803176879883
    9. ' Team' → logprob: -5.458803176879883
    10. ' Space' → logprob: -5.708803176879883

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0033646197989583015
    2. 'Participant' → logprob: -6.628364562988281
    3. 'Participants' → logprob: -6.753364562988281
    4. '():' → logprob: -7.753364562988281
    5. ' :' → logprob: -9.378364562988281
    6. '(' → logprob: -10.003364562988281
    7. ':**' → logprob: -10.128364562988281
    8. '>:' → logprob: -10.128364562988281
    9. ':
' → logprob: -10.753364562988281
    10. '):' → logprob: -10.878364562988281

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0252189002931118
    2. '    ' → logprob: -4.025218963623047
    3. '(' → logprob: -5.275218963623047
    4. ' def' → logprob: -6.775218963623047
    5. '    
' → logprob: -8.400218963623047
    6. 'def' → logprob: -8.775218963623047
    7. '(n' → logprob: -9.150218963623047
    8. ' (' → logprob: -9.400218963623047
    9. ' ' → logprob: -9.525218963623047
    10. '<|end|>' → logprob: -10.275218963623047

Token 41: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.004379685968160629
    2. 'def' (adapté à ' def') → logprob: -6.004379749298096
    3. '   ' → logprob: -6.379379749298096
    4. '    ' → logprob: -8.504379272460938
    5. ' de' → logprob: -13.629379272460938
    6. ' ' → logprob: -14.254379272460938
    7. ' ' → logprob: -15.254379272460938
    8. 'de' → logprob: -15.254379272460938
    9. '	def' → logprob: -15.379379272460938
    10. ' ```' → logprob: -15.504379272460938

Token 42: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.08410261571407318
    2. ' ' → logprob: -2.5841026306152344
    3. ' init' → logprob: -5.584102630615234
    4. ' ' → logprob: -6.834102630615234
    5. ' _' → logprob: -9.334102630615234
    6. '__' → logprob: -10.084102630615234
    7. ' ‌' → logprob: -10.209102630615234
    8. ' def' → logprob: -10.334102630615234
    9. ' add' → logprob: -10.709102630615234
    10. ' ```' → logprob: -10.834102630615234

Token 43: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.988221684878226e-06
    2. 'i' → logprob: -12.250006675720215
    3. 'in' → logprob: -13.625006675720215
    4. 'ini' → logprob: -14.000006675720215
    5. 'int' → logprob: -16.37500762939453
    6. 'innit' → logprob: -17.12500762939453
    7. 'initi' → logprob: -17.87500762939453
    8. 'def' → logprob: -18.00000762939453
    9. '_' → logprob: -18.37500762939453
    10. ' init' → logprob: -18.75000762939453

Token 44: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.044689811766147614
    2. '__' → logprob: -3.169689893722534
    3. '__(
' → logprob: -7.544689655303955
    4. ' (' → logprob: -7.919689655303955
    5. '__((' → logprob: -8.169690132141113
    6. '(self' → logprob: -8.169690132141113
    7. '(' → logprob: -8.669690132141113
    8. '__('' → logprob: -10.919690132141113
    9. '__(*' → logprob: -11.419690132141113
    10. '<|end|>' → logprob: -11.669690132141113

Token 45: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1279245764017105
    2. ' self' → logprob: -2.127924680709839
    3. 'participants' → logprob: -7.62792444229126
    4. ')' → logprob: -8.377924919128418
    5. ' participants' → logprob: -8.752924919128418
    6. 'size' → logprob: -10.377924919128418
    7. ' )' → logprob: -10.627924919128418
    8. ' ' → logprob: -11.252924919128418
    9. 'participant' → logprob: -11.377924919128418
    10. ' size' → logprob: -11.377924919128418

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.039020150899887085
    2. ' ,' → logprob: -3.28902006149292
    3. 'self' → logprob: -7.16402006149292
    4. ')' → logprob: -9.414020538330078
    5. ' ' → logprob: -9.914020538330078
    6. ' self' → logprob: -11.039020538330078
    7. ' )' → logprob: -11.164020538330078
    8. ',self' → logprob: -11.789020538330078
    9. '_,' → logprob: -11.914020538330078
    10. '(self' → logprob: -12.039020538330078

Token 47: ' participants' (ID: 17135)
  Prédit: ' participants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' participants' → logprob: -0.7828147411346436
    2. ' self' → logprob: -1.5328147411346436
    3. 'participants' → logprob: -2.0328147411346436
    4. ' n' → logprob: -2.7828147411346436
    5. 'self' → logprob: -2.7828147411346436
    6. ' size' → logprob: -3.2828147411346436
    7. 'n' → logprob: -5.032814979553223
    8. ' )' → logprob: -5.407814979553223
    9. ' capacity' → logprob: -5.407814979553223
    10. '   ' → logprob: -5.407814979553223

Token 48: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6336078643798828
    2. ':' → logprob: -0.7586078643798828
    3. ' ):' → logprob: -8.133607864379883
    4. ':list' → logprob: -8.633607864379883
    5. '):
' → logprob: -8.883607864379883
    6. ',' → logprob: -9.008607864379883
    7. '=None' → logprob: -9.258607864379883
    8. ')' → logprob: -9.383607864379883
    9. '=' → logprob: -10.258607864379883
    10. '=[]' → logprob: -10.633607864379883

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014244026970118284
    2. '[' → logprob: -7.376424312591553
    3. ' self' → logprob: -8.251424789428711
    4. 'self' → logprob: -8.626424789428711
    5. '   ' → logprob: -9.501424789428711
    6. '    ' → logprob: -9.876424789428711
    7. '<|end|>' → logprob: -10.001424789428711
    8. '        ' → logprob: -10.126424789428711
    9. ' ' → logprob: -10.626424789428711
    10. ')' → logprob: -11.001424789428711

Token 50: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.08038826286792755
    2. 'self' (adapté à ' self') → logprob: -2.705388307571411
    3. '       ' → logprob: -4.580388069152832
    4. ' ' → logprob: -9.580388069152832
    5. ' ' → logprob: -10.330388069152832
    6. '   ' → logprob: -10.955388069152832
    7. '        ' → logprob: -11.080388069152832
    8. '	self' → logprob: -12.205388069152832
    9. '    ' → logprob: -12.580388069152832
    10. '     ' → logprob: -14.330388069152832

Token 51: '.part' (ID: 40615)
  Prédit: '.part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.part' → logprob: -0.043215442448854446
    2. '.' → logprob: -3.16821551322937
    3. ' .' → logprob: -9.41821575164795
    4. 'participants' → logprob: -9.41821575164795
    5. '.parts' → logprob: -10.79321575164795
    6. 'Participants' → logprob: -11.41821575164795
    7. '.players' → logprob: -11.91821575164795
    8. ' ' → logprob: -13.29321575164795
    9. '.Part' → logprob: -13.41821575164795
    10. '.period' → logprob: -13.54321575164795

Token 52: 'icipants' (ID: 163396)
  Prédit: 'icipants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icipants' → logprob: -0.00011236425780225545
    2. 'ip' → logprob: -9.500112533569336
    3. 'icip' → logprob: -10.375112533569336
    4. 'icipant' → logprob: -12.750112533569336
    5. 'cip' → logprob: -13.000112533569336
    6. 'ic' → logprob: -14.750112533569336
    7. '   ' → logprob: -14.750112533569336
    8. 'participants' → logprob: -15.875112533569336
    9. 'ents' → logprob: -17.000112533569336
    10. 'Participants' → logprob: -17.500112533569336

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01110936515033245
    2. '=' → logprob: -4.511109352111816
    3. '.' → logprob: -10.386109352111816
    4. '.append' → logprob: -10.886109352111816
    5. '.extend' → logprob: -12.511109352111816
    6. ' ' → logprob: -13.261109352111816
    7. ' .=' → logprob: -13.886109352111816
    8. '[:]' → logprob: -13.886109352111816
    9. '=[]' → logprob: -14.261109352111816
    10. ')' → logprob: -14.261109352111816

Token 54: ' participants' (ID: 17135)
  Prédit: ' participants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' participants' → logprob: -0.6370434165000916
    2. 'participants' → logprob: -0.7620434165000916
    3. ' list' → logprob: -6.512043476104736
    4. 'list' → logprob: -7.012043476104736
    5. ' []' → logprob: -7.012043476104736
    6. '[]' → logprob: -7.137043476104736
    7. ' ' → logprob: -9.137042999267578
    8. '[' → logprob: -9.512042999267578
    9. ' [' → logprob: -9.762042999267578
    10. '   ' → logprob: -9.762042999267578

Token 55: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10497770458459854
    2. '   ' → logprob: -2.604977607727051
    3. 'def' → logprob: -4.479977607727051
    4. '    
' → logprob: -5.229977607727051
    5. '<|end|>' → logprob: -5.604977607727051
    6. ' def' → logprob: -6.104977607727051
    7. '  
' → logprob: -7.479977607727051
    8. '

' → logprob: -7.854977607727051
    9. '\' → logprob: -8.10497760772705
    10. '\n' → logprob: -8.22997760772705

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013825432397425175
    2. 'def' → logprob: -5.013825416564941
    3. '
' → logprob: -5.388825416564941
    4. '    
' → logprob: -6.138825416564941
    5. ' def' → logprob: -8.763825416564941
    6. '<|end|>' → logprob: -9.763825416564941
    7. '       ' → logprob: -11.013825416564941
    8. '        
' → logprob: -11.138825416564941
    9. ' 
' → logprob: -11.138825416564941
    10. ':' → logprob: -11.263825416564941

Token 57: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.012872529216110706
    2. ' def' → logprob: -4.637872695922852
    3. 'd' → logprob: -5.887872695922852
    4. '   ' → logprob: -8.137872695922852
    5. 'de' → logprob: -10.137872695922852
    6. ' ' → logprob: -12.387872695922852
    7. ' d' → logprob: -13.262872695922852
    8. '  ' → logprob: -15.012872695922852
    9. '       ' → logprob: -16.01287269592285
    10. ' de' → logprob: -16.13787269592285

Token 58: ' is' (ID: 382)
  Prédit: ' remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' remove' → logprob: -0.3918362855911255
    2. ' get' → logprob: -1.8918362855911255
    3. ' __' → logprob: -2.516836166381836
    4. ' eliminate' → logprob: -3.016836166381836
    5. 'remove' → logprob: -4.891836166381836
    6. ' find' → logprob: -4.891836166381836
    7. ' size' → logprob: -5.266836166381836
    8. ' add' → logprob: -5.641836166381836
    9. ' ' → logprob: -5.641836166381836
    10. ' next' → logprob: -5.891836166381836

Token 59: '_empty' (ID: 35051)
  Prédit: '_empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_empty' → logprob: -0.4892827272415161
    2. '_' → logprob: -1.8642827272415161
    3. '_in' → logprob: -1.8642827272415161
    4. '_circle' → logprob: -3.6142826080322266
    5. '_c' → logprob: -4.114282608032227
    6. '_alive' → logprob: -4.739282608032227
    7. '_present' → logprob: -5.364282608032227
    8. '_full' → logprob: -5.989282608032227
    9. '_part' → logprob: -6.114282608032227
    10. '_valid' → logprob: -6.114282608032227

Token 60: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0891641154885292
    2. '(' → logprob: -2.4641640186309814
    3. '()' → logprob: -9.089163780212402
    4. 'self' → logprob: -9.589163780212402
    5. '(s' → logprob: -10.964163780212402
    6. ' (' → logprob: -12.214163780212402
    7. '(
' → logprob: -12.214163780212402
    8. '   ' → logprob: -12.339163780212402
    9. '():' → logprob: -13.464163780212402
    10. '(sel' → logprob: -13.464163780212402

Token 61: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1003887876868248
    2. ')' → logprob: -2.350388765335083
    3. ' ):' → logprob: -9.225388526916504
    4. '):
' → logprob: -10.100388526916504
    5. '()' → logprob: -11.225388526916504
    6. ' )' → logprob: -11.475388526916504
    7. '():' → logprob: -11.975388526916504
    8. 'self' → logprob: -12.600388526916504
    9. ' ' → logprob: -12.725388526916504
    10. '   ' → logprob: -13.475388526916504

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04372779652476311
    2. '()' → logprob: -3.9187278747558594
    3. 'self' → logprob: -4.668727874755859
    4. '(self' → logprob: -5.168727874755859
    5. 'return' → logprob: -5.293727874755859
    6. ' return' → logprob: -6.293727874755859
    7. '   ' → logprob: -8.16872787475586
    8. ' self' → logprob: -8.41872787475586
    9. '(' → logprob: -9.41872787475586
    10. '<|end|>' → logprob: -9.54372787475586

Token 63: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8667702674865723
    2. 'return' (adapté à ' return') → logprob: -0.8667702674865723
    3. '       ' → logprob: -1.8667702674865723
    4. ' not' → logprob: -5.741770267486572
    5. 'not' → logprob: -7.241770267486572
    6. 'len' → logprob: -7.741770267486572
    7. ' len' → logprob: -8.366769790649414
    8. '   ' → logprob: -8.866769790649414
    9. ' ' → logprob: -11.616769790649414
    10. '    ' → logprob: -11.991769790649414

Token 64: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.3140648305416107
    2. ' not' → logprob: -1.314064860343933
    3. 'len' → logprob: -7.439064979553223
    4. 'not' → logprob: -8.939064979553223
    5. ' self' → logprob: -9.564064979553223
    6. ' ' → logprob: -11.564064979553223
    7. ' ' → logprob: -12.939064979553223
    8. 'self' → logprob: -14.689064979553223
    9. '	len' → logprob: -14.814064979553223
    10. '(len' → logprob: -15.189064979553223

Token 65: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4741104245185852
    2. '(' → logprob: -0.9741104245185852
    3. '(
' → logprob: -10.84911060333252
    4. '(s' → logprob: -11.97411060333252
    5. '(

' → logprob: -12.47411060333252
    6. '(this' → logprob: -12.72411060333252
    7. ' (' → logprob: -14.97411060333252
    8. '()' → logprob: -15.47411060333252
    9. 'self' → logprob: -15.84911060333252
    10. '(sel' → logprob: -16.724109649658203

Token 66: '.part' (ID: 40615)
  Prédit: '.part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.part' → logprob: -0.014278093352913857
    2. '.' → logprob: -4.264277935028076
    3. ' .' → logprob: -10.264278411865234
    4. '.parts' → logprob: -10.389278411865234
    5. 'participants' → logprob: -11.139278411865234
    6. ').' → logprob: -11.389278411865234
    7. '.players' → logprob: -11.889278411865234
    8. '.p' → logprob: -12.139278411865234
    9. '.points' → logprob: -13.014278411865234
    10. 'Participants' → logprob: -13.264278411865234

Token 67: 'icipants' (ID: 163396)
  Prédit: 'icipants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icipants' → logprob: -0.00011307948443572968
    2. 'icip' → logprob: -9.125113487243652
    3. 'ip' → logprob: -13.250113487243652
    4. 'ic' → logprob: -13.750113487243652
    5. 'icipant' → logprob: -14.500113487243652
    6. 'i' → logprob: -14.875113487243652
    7. 'cip' → logprob: -15.375113487243652
    8. '   ' → logprob: -16.000112533569336
    9. 'ici' → logprob: -17.250112533569336
    10. 'participants' → logprob: -18.375112533569336

Token 68: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.692145012086257e-05
    2. ')==' → logprob: -10.750046730041504
    3. ' )' → logprob: -11.000046730041504
    4. '()' → logprob: -12.500046730041504
    5. '==' → logprob: -12.750046730041504
    6. ' ==' → logprob: -13.250046730041504
    7. '0' → logprob: -16.37504768371582
    8. '）' → logprob: -17.50004768371582
    9. '')' → logprob: -17.87504768371582
    10. '}' → logprob: -17.87504768371582

Token 69: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04345676302909851
    2. '==' → logprob: -3.168456792831421
    3. '=' → logprob: -8.04345703125
    4. '>' → logprob: -10.41845703125
    5. ' =' → logprob: -10.41845703125
    6. ')' → logprob: -10.54345703125
    7. '()' → logprob: -10.79345703125
    8. ' ' → logprob: -11.16845703125
    9. ' >' → logprob: -12.16845703125
    10. '()==' → logprob: -12.54345703125

Token 70: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16022412478923798
    2. '0' → logprob: -1.9102240800857544
    3. ' ' → logprob: -17.78522491455078
    4. '۰' → logprob: -20.28522491455078
    5. '```' → logprob: -20.41022491455078
    6. '<|end|>' → logprob: -21.03522491455078
    7. '  ' → logprob: -21.28522491455078
    8. ' 

' → logprob: -21.53522491455078
    9. '   ' → logprob: -21.66022491455078
    10. '>' → logprob: -22.22272491455078

Token 71: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '```' → logprob: -19.500019073486328
    4. '۰' → logprob: -19.750019073486328
    5. '   ' → logprob: -21.062519073486328
    6. '  ' → logprob: -21.375019073486328
    7. ' ' → logprob: -21.375019073486328
    8. '`' → logprob: -21.375019073486328
    9. '０' → logprob: -21.750019073486328
    10. '٠' → logprob: -21.875019073486328

Token 72: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23544801771640778
    2. '

' → logprob: -1.8604480028152466
    3. '<|end|>' → logprob: -3.485448122024536
    4. '   ' → logprob: -4.235447883605957
    5. '<|end|>' → logprob: -5.860447883605957
    6. 'def' → logprob: -6.110447883605957
    7. '    
' → logprob: -6.860447883605957
    8. ' def' → logprob: -7.485447883605957
    9. '```' → logprob: -7.610447883605957
    10. 'newline' → logprob: -7.735447883605957

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38785508275032043
    2. '
' → logprob: -1.262855052947998
    3. 'def' → logprob: -3.887855052947998
    4. '<|end|>' → logprob: -5.262855052947998
    5. ' def' → logprob: -5.762855052947998
    6. '    
' → logprob: -5.762855052947998
    7. '```' → logprob: -6.262855052947998
    8. '<|end|>' → logprob: -6.512855052947998
    9. '

' → logprob: -6.887855052947998
    10. ' ' → logprob: -7.387855052947998

Token 74: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0625307708978653
    2. ' def' → logprob: -3.437530755996704
    3. '   ' → logprob: -3.562530755996704
    4. 'd' → logprob: -10.187530517578125
    5. '    
' → logprob: -10.312530517578125
    6. ' ' → logprob: -11.312530517578125
    7. '  ' → logprob: -12.187530517578125
    8. '	def' → logprob: -12.187530517578125
    9. '    ' → logprob: -12.812530517578125
    10. 'de' → logprob: -12.937530517578125

Token 75: ' size' (ID: 2349)
  Prédit: ' remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remove' → logprob: -0.25969552993774414
    2. 'remove' → logprob: -1.8846955299377441
    3. ' size' → logprob: -3.884695529937744
    4. ' eliminate' → logprob: -4.134695529937744
    5. 'size' → logprob: -5.009695529937744
    6. ' get' → logprob: -5.259695529937744
    7. ' __' → logprob: -5.384695529937744
    8. ' add' → logprob: -5.634695529937744
    9. 'count' → logprob: -5.634695529937744
    10. ' count' → logprob: -5.884695529937744

Token 76: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.546346127986908
    2. '()' → logprob: -1.0463461875915527
    3. '(self' → logprob: -2.6713461875915527
    4. '(
' → logprob: -8.671345710754395
    5. '()>' → logprob: -8.671345710754395
    6. '()(' → logprob: -10.046345710754395
    7. '<|end|>' → logprob: -10.046345710754395
    8. ' ()' → logprob: -10.671345710754395
    9. ')' → logprob: -10.921345710754395
    10. 'self' → logprob: -11.296345710754395

Token 77: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002478508511558175
    2. ' )' → logprob: -6.12747859954834
    3. '())' → logprob: -8.50247859954834
    4. '()' → logprob: -9.50247859954834
    5. ' ())' → logprob: -12.12747859954834
    6. ')
' → logprob: -13.37747859954834
    7. ')return' → logprob: -13.50247859954834
    8. ')}}' → logprob: -13.62747859954834
    9. '):' → logprob: -13.87747859954834
    10. ')>' → logprob: -14.12747859954834

Token 78: '       ' (ID: 309)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -1.1348272562026978
    2. ' return' → logprob: -1.2598272562026978
    3. 'return' → logprob: -2.009827136993408
    4. 'len' → logprob: -2.259827136993408
    5. '(len' → logprob: -2.259827136993408
    6. '       ' → logprob: -3.134827136993408
    7. '()' → logprob: -5.634827136993408
    8. '=len' → logprob: -6.509827136993408
    9. 'self' → logprob: -7.134827136993408
    10. ' self' → logprob: -7.259827136993408

Token 79: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3925029933452606
    2. 'return' (adapté à ' return') → logprob: -1.142503023147583
    3. '       ' → logprob: -6.142502784729004
    4. ' len' → logprob: -6.142502784729004
    5. 'len' → logprob: -6.642502784729004
    6. '```' → logprob: -12.392502784729004
    7. '   ' → logprob: -12.517502784729004
    8. ' ' → logprob: -13.017502784729004
    9. ' ' → logprob: -13.892502784729004
    10. '    ' → logprob: -14.392502784729004

Token 80: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0005887754959985614
    2. 'len' → logprob: -7.500588893890381
    3. ' self' → logprob: -10.250588417053223
    4. 'self' → logprob: -15.000588417053223
    5. '(len' → logprob: -16.62558937072754
    6. ' ' → logprob: -17.37558937072754
    7. ' ' → logprob: -17.50058937072754
    8. '	len' → logprob: -18.25058937072754
    9. '[len' → logprob: -19.00058937072754
    10. '=len' → logprob: -19.62558937072754

Token 81: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.023246990516781807
    2. '(' → logprob: -3.773247003555298
    3. '(
' → logprob: -13.898246765136719
    4. '(s' → logprob: -15.398246765136719
    5. '(this' → logprob: -15.898246765136719
    6. '(

' → logprob: -16.27324676513672
    7. ' (' → logprob: -16.64824676513672
    8. 'self' → logprob: -17.02324676513672
    9. '(sel' → logprob: -18.02324676513672
    10. ' self' → logprob: -18.89824676513672

Token 82: '.part' (ID: 40615)
  Prédit: '.part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.part' → logprob: -0.00021093101531732827
    2. '.' → logprob: -8.500210762023926
    3. 'participants' → logprob: -12.875210762023926
    4. '.p' → logprob: -13.375210762023926
    5. ' .' → logprob: -13.625210762023926
    6. '.
' → logprob: -14.250210762023926
    7. '.parts' → logprob: -14.375210762023926
    8. ').' → logprob: -15.125210762023926
    9. 'Participants' → logprob: -15.875210762023926
    10. '.par' → logprob: -16.000211715698242

Token 83: 'icipants' (ID: 163396)
  Prédit: 'icipants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icipants' → logprob: -8.554343366995454e-05
    2. 'icip' → logprob: -10.375085830688477
    3. 'ic' → logprob: -10.875085830688477
    4. 'ip' → logprob: -11.125085830688477
    5. 'cip' → logprob: -12.125085830688477
    6. '   ' → logprob: -12.500085830688477
    7. 'participants' → logprob: -12.875085830688477
    8. 'icipant' → logprob: -13.125085830688477
    9. '```' → logprob: -13.375085830688477
    10. 'i' → logprob: -13.500085830688477

Token 84: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.061054359131958e-06
    2. '()' → logprob: -13.000007629394531
    3. ')
' → logprob: -13.125007629394531
    4. '())' → logprob: -13.125007629394531
    5. ' )' → logprob: -13.375007629394531
    6. '))' → logprob: -16.12500762939453
    7. '}' → logprob: -17.00000762939453
    8. '   ' → logprob: -17.00000762939453
    9. ')

' → logprob: -18.25000762939453
    10. ')return' → logprob: -18.87500762939453

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2846936881542206
    2. 'def' → logprob: -2.034693717956543
    3. '
' → logprob: -2.409693717956543
    4. ' def' → logprob: -3.909693717956543
    5. '    
' → logprob: -6.159693717956543
    6. '```' → logprob: -6.659693717956543
    7. '<|end|>' → logprob: -6.784693717956543
    8. '	def' → logprob: -7.659693717956543
    9. '[' → logprob: -7.784693717956543
    10. '<|end|>' → logprob: -8.284693717956543

Token 86: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.009627754800021648
    2. ' def' → logprob: -5.384627819061279
    3. '   ' → logprob: -5.884627819061279
    4. 'd' → logprob: -6.134627819061279
    5. 'de' → logprob: -10.509627342224121
    6. ' ' → logprob: -11.259627342224121
    7. ' d' → logprob: -13.509627342224121
    8. '  ' → logprob: -13.509627342224121
    9. '    
' → logprob: -13.634627342224121
    10. '	def' → logprob: -13.759627342224121

Token 87: ' remove' (ID: 6234)
  Prédit: ' remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remove' → logprob: -0.0930633470416069
    2. ' get' → logprob: -3.0930633544921875
    3. ' ' → logprob: -3.9680633544921875
    4. ' __' → logprob: -4.9680633544921875
    5. '_' → logprob: -5.5930633544921875
    6. ' add' → logprob: -5.5930633544921875
    7. ' eliminate' → logprob: -6.2180633544921875
    8. ' participants' → logprob: -6.3430633544921875
    9. ' participant' → logprob: -6.8430633544921875
    10. 'remove' → logprob: -7.2180633544921875

Token 88: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.624134361743927
    2. '_' → logprob: -1.1241343021392822
    3. '(' → logprob: -2.6241343021392822
    4. '_first' → logprob: -3.3741343021392822
    5. '_part' → logprob: -3.6241343021392822
    6. '_next' → logprob: -6.374134540557861
    7. '_last' → logprob: -6.874134540557861
    8. '_(' → logprob: -7.124134540557861
    9. '_token' → logprob: -7.499134540557861
    10. '()' → logprob: -8.374134063720703

Token 89: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00015240935317706317
    2. ' (' → logprob: -9.625152587890625
    3. '<|end|>' → logprob: -9.875152587890625
    4. '(
' → logprob: -11.375152587890625
    5. '(self' → logprob: -11.625152587890625
    6. '(index' → logprob: -12.625152587890625
    7. '```' → logprob: -13.125152587890625
    8. '(`' → logprob: -13.625152587890625
    9. '(

' → logprob: -13.750152587890625
    10. '<|end|>' → logprob: -13.750152587890625

Token 90: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05368688702583313
    2. ' )' → logprob: -3.4286868572235107
    3. '(' → logprob: -4.30368709564209
    4. 'index' → logprob: -5.67868709564209
    5. '<|end|>' → logprob: -7.05368709564209
    6. ',' → logprob: -7.30368709564209
    7. ' ' → logprob: -7.80368709564209
    8. '(index' → logprob: -9.17868709564209
    9. '_index' → logprob: -9.30368709564209
    10. ' index' → logprob: -9.42868709564209

Token 91: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.1846289038658142
    2. ' )' → logprob: -2.434628963470459
    3. 'index' → logprob: -3.309628963470459
    4. ')' → logprob: -3.434628963470459
    5. ' ' → logprob: -5.059628963470459
    6. ' idx' → logprob: -5.309628963470459
    7. '<|end|>' → logprob: -7.559628963470459
    8. ' position' → logprob: -8.6846284866333
    9. ' i' → logprob: -10.1846284866333
    10. ' ),' → logprob: -10.9346284866333

Token 92: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05039456859230995
    2. '):' → logprob: -3.0503945350646973
    3. ' )' → logprob: -6.550394535064697
    4. '):
' → logprob: -8.675395011901855
    5. ' ):' → logprob: -9.425395011901855
    6. ':' → logprob: -9.675395011901855
    7. ' ' → logprob: -11.050395011901855
    8. '   ' → logprob: -11.550395011901855
    9. ',' → logprob: -12.050395011901855
    10. '=' → logprob: -12.800395011901855

Token 93: ' int' (ID: 677)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.10434126108884811
    2. ')' → logprob: -2.3543412685394287
    3. ' ' → logprob: -5.60434103012085
    4. '<|end|>' → logprob: -8.479341506958008
    5. ' index' → logprob: -9.354341506958008
    6. 'index' → logprob: -9.854341506958008
    7. ' ),' → logprob: -10.479341506958008
    8. 'int' → logprob: -11.354341506958008
    9. ' ):' → logprob: -11.729341506958008
    10. ' ):
' → logprob: -11.979341506958008

Token 94: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47455859184265137
    2. ')' → logprob: -0.9745585918426514
    3. '):
' → logprob: -7.9745588302612305
    4. ' )' → logprob: -9.59955883026123
    5. ' ):' → logprob: -9.84955883026123
    6. ':' → logprob: -12.59955883026123
    7. ',' → logprob: -12.84955883026123
    8. ' ' → logprob: -12.97455883026123
    9. ')
' → logprob: -13.22455883026123
    10. '   ' → logprob: -13.72455883026123

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05733046680688858
    2. '   ' → logprob: -3.932330369949341
    3. ' return' → logprob: -4.43233060836792
    4. '    ' → logprob: -4.68233060836792
    5. ' 
' → logprob: -4.68233060836792
    6. '    
' → logprob: -6.30733060836792
    7. '        
' → logprob: -7.05733060836792
    8. ' ' → logprob: -7.05733060836792
    9. '```' → logprob: -7.30733060836792
    10. '<|end|>' → logprob: -8.682330131530762

Token 96: ' removed' (ID: 11906)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.014097217470407486
    2. ' self' → logprob: -4.889097213745117
    3. '       ' → logprob: -6.139097213745117
    4. '    ' → logprob: -6.514097213745117
    5. ' del' → logprob: -6.889097213745117
    6. '   ' → logprob: -7.264097213745117
    7. ' if' → logprob: -7.639097213745117
    8. 'return' → logprob: -8.514097213745117
    9. ' removed' → logprob: -9.139097213745117
    10. ' ' → logprob: -9.514097213745117

Token 97: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04600602388381958
    2. '_part' → logprob: -3.296005964279175
    3. ' =' → logprob: -5.296006202697754
    4. ' ' → logprob: -6.171006202697754
    5. ' _' → logprob: -7.546006202697754
    6. '_space' → logprob: -8.796006202697754
    7. '=' → logprob: -10.296006202697754
    8. '_token' → logprob: -11.046006202697754
    9. '_item' → logprob: -11.171006202697754
    10. ')' → logprob: -11.421006202697754

Token 98: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.00023762896307744086
    2. 'self' → logprob: -8.375237464904785
    3. ' ' → logprob: -12.625237464904785
    4. ' ' → logprob: -12.625237464904785
    5. '	self' → logprob: -14.875237464904785
    6. '_self' → logprob: -19.0002384185791
    7. '<|end|>' → logprob: -19.7502384185791
    8. '(self' → logprob: -20.0002384185791
    9. ' sel' → logprob: -20.3752384185791
    10. '[self' → logprob: -20.3752384185791

Token 99: '.part' (ID: 40615)
  Prédit: '.part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.part' → logprob: -0.00010998018842656165
    2. '.' → logprob: -9.125109672546387
    3. 'participants' → logprob: -15.125109672546387
    4. '.parts' → logprob: -15.250109672546387
    5. '.p' → logprob: -15.500109672546387
    6. ' .' → logprob: -15.875109672546387
    7. '.Part' → logprob: -16.375110626220703
    8. '.par' → logprob: -16.875110626220703
    9. '   ' → logprob: -17.375110626220703
    10. '.
' → logprob: -18.000110626220703

Token 100: 'icipants' (ID: 163396)
  Prédit: 'icipants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icipants' → logprob: -0.0007236333331093192
    2. 'icipant' → logprob: -7.875723838806152
    3. 'icip' → logprob: -8.250723838806152
    4. '   ' → logprob: -10.250723838806152
    5. 'ic' → logprob: -10.750723838806152
    6. ' ' → logprob: -11.750723838806152
    7. 'ip' → logprob: -11.750723838806152
    8. '```' → logprob: -13.000723838806152
    9. 'cip' → logprob: -13.875723838806152
    10. '    ' → logprob: -13.875723838806152

Token 101: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -7.97024549683556e-05
    2. '.' → logprob: -9.500080108642578
    3. '[index' → logprob: -12.500080108642578
    4. 'pop' → logprob: -14.500080108642578
    5. '.p' → logprob: -15.000080108642578
    6. ' .' → logprob: -16.375080108642578
    7. ' pop' → logprob: -16.875080108642578
    8. '```' → logprob: -17.000080108642578
    9. '	pop' → logprob: -17.125080108642578
    10. '.po' → logprob: -17.625080108642578

Token 102: '(index' (ID: 13517)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.160243421792984
    2. '(index' → logprob: -1.9102433919906616
    3. '(
' → logprob: -11.785243034362793
    4. '(i' → logprob: -12.410243034362793
    5. ' (' → logprob: -13.035243034362793
    6. '(

' → logprob: -13.785243034362793
    7. '(idx' → logprob: -14.160243034362793
    8. '(ind' → logprob: -14.285243034362793
    9. '```' → logprob: -14.410243034362793
    10. '(in' → logprob: -14.660243034362793

Token 103: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0445127372804563e-05
    2. ')
' → logprob: -11.62501049041748
    3. ' )' → logprob: -13.87501049041748
    4. ')return' → logprob: -14.75001049041748
    5. '       ' → logprob: -17.125009536743164
    6. ')`' → logprob: -17.375009536743164
    7. '<|end|>' → logprob: -17.750009536743164
    8. ')

' → logprob: -17.875009536743164
    9. '),' → logprob: -19.000009536743164
    10. '}' → logprob: -19.000009536743164

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021271906734909862
    2. 'return' → logprob: -8.875212669372559
    3. ' return' → logprob: -9.750212669372559
    4. '   ' → logprob: -12.375212669372559
    5. '<|end|>' → logprob: -12.375212669372559
    6. '           ' → logprob: -14.000212669372559
    7. '               ' → logprob: -14.125212669372559
    8. '```' → logprob: -14.125212669372559
    9. '	' → logprob: -14.500212669372559
    10. '      ' → logprob: -14.625212669372559

Token 105: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.25203806161880493
    2. ' return' → logprob: -1.5020380020141602
    3. '       ' → logprob: -9.12703800201416
    4. '	return' → logprob: -16.377038955688477
    5. '```' → logprob: -16.627038955688477
    6. '
' → logprob: -16.752038955688477
    7. 'eturn' → logprob: -16.877038955688477
    8. '   ' → logprob: -17.377038955688477
    9. ':return' → logprob: -17.877038955688477
    10. '{return' → logprob: -18.377038955688477

Token 106: ' removed' (ID: 11906)
  Prédit: ' removed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' removed' → logprob: -0.0011903452686965466
    2. 'removed' → logprob: -6.876190185546875
    3. ' ' → logprob: -9.376190185546875
    4. ' ' → logprob: -9.876190185546875
    5. ' remove' → logprob: -10.876190185546875
    6. '_removed' → logprob: -14.376190185546875
    7. ' r' → logprob: -14.876190185546875
    8. ' `' → logprob: -15.501190185546875
    9. ' ‌' → logprob: -15.626190185546875
    10. 'Removed' → logprob: -15.626190185546875

Token 107: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2254565805196762
    2. 'def' → logprob: -2.225456476211548
    3. '
' → logprob: -2.850456476211548
    4. ' ' → logprob: -4.850456714630127
    5. ' def' → logprob: -4.975456714630127
    6. '    
' → logprob: -5.100456714630127
    7. '  
' → logprob: -5.600456714630127
    8. '<|end|>' → logprob: -5.725456714630127
    9. ' 
' → logprob: -5.975456714630127
    10. '```' → logprob: -6.600456714630127

Token 109: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03284452483057976
    2. ' def' → logprob: -3.9078445434570312
    3. '   ' → logprob: -4.407844543457031
    4. ' ' → logprob: -10.782844543457031
    5. '	def' → logprob: -11.657844543457031
    6. '  ' → logprob: -12.157844543457031
    7. ')' → logprob: -13.032844543457031
    8. 'd' → logprob: -13.157844543457031
    9. '    ' → logprob: -13.282844543457031
    10. 'class' → logprob: -13.657844543457031

Token 110: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.37882140278816223
    2. ' add' → logprob: -2.25382137298584
    3. ' __' → logprob: -2.50382137298584
    4. ' rotate' → logprob: -2.50382137298584
    5. ' find' → logprob: -4.37882137298584
    6. ' insert' → logprob: -5.00382137298584
    7. ' current' → logprob: -5.50382137298584
    8. '__' → logprob: -5.62882137298584
    9. ' ' → logprob: -5.87882137298584
    10. ' next' → logprob: -6.00382137298584

Token 111: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.03274519369006157
    2. '_part' → logprob: -3.782745122909546
    3. '(' → logprob: -5.282745361328125
    4. '_' → logprob: -5.532745361328125
    5. '_next' → logprob: -8.407745361328125
    6. '_current' → logprob: -10.032745361328125
    7. '_last' → logprob: -10.907745361328125
    8. '_size' → logprob: -11.157745361328125
    9. '_(' → logprob: -11.532745361328125
    10. '_all' → logprob: -11.657745361328125

Token 112: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005257833749055862
    2. '(self' → logprob: -5.255257606506348
    3. '(
' → logprob: -11.880257606506348
    4. ' (' → logprob: -11.880257606506348
    5. '(index' → logprob: -12.255257606506348
    6. '<|end|>' → logprob: -13.005257606506348
    7. 'self' → logprob: -14.505257606506348
    8. '(

' → logprob: -14.880257606506348
    9. 'index' → logprob: -14.880257606506348
    10. ')' → logprob: -14.880257606506348

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17302031815052032
    2. ')' → logprob: -3.048020362854004
    3. ' ,' → logprob: -3.048020362854004
    4. '(' → logprob: -3.798020362854004
    5. 'index' → logprob: -3.923020362854004
    6. '[' → logprob: -4.673020362854004
    7. '(index' → logprob: -5.423020362854004
    8. ',index' → logprob: -5.923020362854004
    9. ' (' → logprob: -6.173020362854004
    10. ' )' → logprob: -6.673020362854004

Token 114: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.0485910028219223
    2. 'index' → logprob: -3.048590898513794
    3. '_index' → logprob: -13.798590660095215
    4. ' ' → logprob: -14.048590660095215
    5. '<|end|>' → logprob: -14.298590660095215
    6. ' self' → logprob: -14.673590660095215
    7. ' )' → logprob: -15.298590660095215
    8. ')' → logprob: -16.04859161376953
    9. '	index' → logprob: -16.17359161376953
    10. 'Index' → logprob: -16.67359161376953

Token 115: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012195244198665023
    2. '):' → logprob: -6.876219749450684
    3. ' )' → logprob: -9.251219749450684
    4. '):
' → logprob: -9.751219749450684
    5. '   ' → logprob: -11.501219749450684
    6. ':' → logprob: -12.001219749450684
    7. ')=' → logprob: -12.626219749450684
    8. '):

' → logprob: -12.876219749450684
    9. '=' → logprob: -13.251219749450684
    10. ' ' → logprob: -13.876219749450684

Token 116: ' int' (ID: 677)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.29445987939834595
    2. ')' → logprob: -2.294459819793701
    3. ' ' → logprob: -2.544459819793701
    4. ' int' → logprob: -2.794459819793701
    5. 'int' → logprob: -4.294459819793701
    6. '    ' → logprob: -8.16946029663086
    7. ' index' → logprob: -8.41946029663086
    8. 'index' → logprob: -9.16946029663086
    9. ' ),' → logprob: -9.66946029663086
    10. '   ' → logprob: -10.04446029663086

Token 117: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007313646376132965
    2. ')' → logprob: -5.0073137283325195
    3. '):
' → logprob: -7.7573137283325195
    4. ' ):' → logprob: -8.75731372833252
    5. '   ' → logprob: -12.13231372833252
    6. ' )' → logprob: -12.25731372833252
    7. ' ' → logprob: -13.88231372833252
    8. ':' → logprob: -14.50731372833252
    9. '       ' → logprob: -14.88231372833252
    10. '):
' → logprob: -14.88231372833252

Token 118: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2297416776418686
    2. '       ' → logprob: -1.6047416925430298
    3. 'return' → logprob: -6.47974157333374
    4. '    ' → logprob: -6.85474157333374
    5. '   ' → logprob: -6.97974157333374
    6. ' ' → logprob: -7.97974157333374
    7. ' 
' → logprob: -8.104742050170898
    8. ' ' → logprob: -9.729742050170898
    9. '        
' → logprob: -10.604742050170898
    10. '    
' → logprob: -11.354742050170898

Token 119: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0007747277268208563
    2. 'return' (adapté à ' return') → logprob: -7.25077486038208
    3. '       ' → logprob: -10.000774383544922
    4. '   ' → logprob: -11.625774383544922
    5. ' participants' → logprob: -12.375774383544922
    6. ' if' → logprob: -13.375774383544922
    7. ' participant' → logprob: -13.625774383544922
    8. '    ' → logprob: -13.875774383544922
    9. ' 
' → logprob: -14.000774383544922
    10. ' ' → logprob: -14.250774383544922

Token 120: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0001105762057704851
    2. 'self' → logprob: -9.250110626220703
    3. ' ' → logprob: -11.250110626220703
    4. ' ' → logprob: -13.500110626220703
    5. '	self' → logprob: -17.125110626220703
    6. ' sel' → logprob: -20.000110626220703
    7. '  ' → logprob: -20.125110626220703
    8. '   ' → logprob: -20.500110626220703
    9. ' 
' → logprob: -21.375110626220703
    10. ' participants' → logprob: -21.500110626220703

Token 121: '.part' (ID: 40615)
  Prédit: '.part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.part' → logprob: -0.03825940191745758
    2. '.' → logprob: -3.288259506225586
    3. '.parts' → logprob: -9.038259506225586
    4. ' .' → logprob: -10.038259506225586
    5. '.p' → logprob: -10.913259506225586
    6. '.period' → logprob: -11.413259506225586
    7. 'participants' → logprob: -11.663259506225586
    8. '.points' → logprob: -11.913259506225586
    9. '.Part' → logprob: -12.663259506225586
    10. '.par' → logprob: -13.413259506225586

Token 122: 'icipants' (ID: 163396)
  Prédit: 'icipant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icipant' → logprob: -0.48315170407295227
    2. 'icipants' → logprob: -0.9831516742706299
    3. 'ip' → logprob: -5.358151912689209
    4. 'icip' → logprob: -5.733151912689209
    5. 'cip' → logprob: -7.358151912689209
    6. 'ic' → logprob: -7.733151912689209
    7. '   ' → logprob: -12.35815143585205
    8. '**' → logprob: -13.73315143585205
    9. 'icap' → logprob: -13.73315143585205
    10. ' ' → logprob: -14.35815143585205

Token 123: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -9.949026571121067e-05
    2. '[' → logprob: -9.250099182128906
    3. '[ind' → logprob: -13.625099182128906
    4. '[
' → logprob: -13.875099182128906
    5. 'index' → logprob: -14.500099182128906
    6. '[Index' → logprob: -15.000099182128906
    7. '[in' → logprob: -15.250099182128906
    8. '[idx' → logprob: -16.875099182128906
    9. '```' → logprob: -16.875099182128906
    10. '[i' → logprob: -17.125099182128906

Token 124: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8087270038668066e-05
    2. ']' → logprob: -10.875027656555176
    3. ' )' → logprob: -11.875027656555176
    4. '}' → logprob: -13.625027656555176
    5. ')
' → logprob: -15.125027656555176
    6. '[' → logprob: -15.125027656555176
    7. '<|end|>' → logprob: -16.000028610229492
    8. '）' → logprob: -16.125028610229492
    9. '   ' → logprob: -17.250028610229492
    10. ' ' → logprob: -17.375028610229492

Token 125: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4861404001712799
    2. '
' → logprob: -1.6111403703689575
    3. 'def' → logprob: -1.9861403703689575
    4. '<|end|>' → logprob: -4.486140251159668
    5. '    
' → logprob: -5.111140251159668
    6. ' def' → logprob: -5.236140251159668
    7. '```' → logprob: -5.361140251159668
    8. ' 
' → logprob: -5.361140251159668
    9. 'class' → logprob: -5.486140251159668
    10. '\n' → logprob: -5.736140251159668

Token 126: ' Joseph' (ID: 26122)
  Prédit: ' Joseph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Joseph' → logprob: -1.044146180152893
    2. ' ' → logprob: -1.169146180152893
    3. ' J' → logprob: -1.794146180152893
    4. ' ' → logprob: -2.5441460609436035
    5. ' Participant' → logprob: -3.1691460609436035
    6. ' Circle' → logprob: -4.4191460609436035
    7. ' Space' → logprob: -4.7941460609436035
    8. ' Game' → logprob: -5.1691460609436035
    9. ' Python' → logprob: -6.1691460609436035
    10. ' Token' → logprob: -6.5441460609436035

Token 127: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.07347126305103302
    2. 'Problem' → logprob: -3.0734713077545166
    3. 'Circle' → logprob: -4.0734710693359375
    4. 'ic' → logprob: -6.5734710693359375
    5. '```' → logprob: -6.6984710693359375
    6. 'ian' → logprob: -6.9484710693359375
    7. 'Game' → logprob: -7.0734710693359375
    8. '(' → logprob: -8.073471069335938
    9. 'er' → logprob: -8.573471069335938
    10. ' ' → logprob: -8.573471069335938

Token 128: 'Game' (ID: 6627)
  Prédit: 'Problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Problem' → logprob: -0.37375009059906006
    2. ':' → logprob: -1.37375009059906
    3. '(' → logprob: -3.3737502098083496
    4. 'Solver' → logprob: -3.9987502098083496
    5. 'Circle' → logprob: -5.87375020980835
    6. '():' → logprob: -6.87375020980835
    7. '(C' → logprob: -7.24875020980835
    8. 'Cycle' → logprob: -8.373749732971191
    9. 'Game' → logprob: -8.623749732971191
    10. 'Solution' → logprob: -8.748749732971191

Token 129: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008129627676680684
    2. ' :' → logprob: -7.750813007354736
    3. ':
' → logprob: -8.625812530517578
    4. '(' → logprob: -8.625812530517578
    5. '():' → logprob: -11.250812530517578
    6. '):' → logprob: -12.625812530517578
    7. '(object' → logprob: -13.125812530517578
    8. ' :
' → logprob: -14.000812530517578
    9. ':**' → logprob: -14.500812530517578
    10. '>:' → logprob: -14.625812530517578

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007889339700341225
    2. ' def' → logprob: -4.882889270782471
    3. 'def' → logprob: -9.382889747619629
    4. '    
' → logprob: -9.882889747619629
    5. '(' → logprob: -10.007889747619629
    6. ':' → logprob: -10.132889747619629
    7. '
' → logprob: -10.757889747619629
    8. ':
' → logprob: -11.382889747619629
    9. '   ' → logprob: -12.257889747619629
    10. '(
' → logprob: -12.507889747619629

Token 131: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.1805211752653122
    2. 'def' (adapté à ' def') → logprob: -2.055521249771118
    3. '   ' → logprob: -3.305521249771118
    4. '    ' → logprob: -8.930521011352539
    5. ' __' → logprob: -8.930521011352539
    6. ' ' → logprob: -9.680521011352539
    7. '  ' → logprob: -10.805521011352539
    8. ' ' → logprob: -10.930521011352539
    9. '	def' → logprob: -11.055521011352539
    10. '   ' → logprob: -11.055521011352539

Token 132: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.002527745207771659
    2. ' ' → logprob: -6.002527713775635
    3. ' _' → logprob: -10.002528190612793
    4. ' ' → logprob: -12.502528190612793
    5. '__' → logprob: -14.002528190612793
    6. ' def' → logprob: -14.627528190612793
    7. '_init' → logprob: -14.627528190612793
    8. ' init' → logprob: -15.127528190612793
    9. ' ‌' → logprob: -15.127528190612793
    10. '_' → logprob: -15.252528190612793

Token 133: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0010718696285039186
    2. 'i' → logprob: -6.876071929931641
    3. ' init' → logprob: -10.87607192993164
    4. 'in' → logprob: -11.50107192993164
    5. 'ini' → logprob: -12.75107192993164
    6. '   ' → logprob: -13.12607192993164
    7. ' i' → logprob: -13.37607192993164
    8. 'def' → logprob: -14.12607192993164
    9. '_init' → logprob: -14.12607192993164
    10. '```' → logprob: -14.25107192993164

Token 134: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.012229661457240582
    2. '(self' → logprob: -4.7622294425964355
    3. '(' → logprob: -5.8872294425964355
    4. '__(
' → logprob: -7.8872294425964355
    5. '_(' → logprob: -8.637229919433594
    6. '__' → logprob: -8.762229919433594
    7. ' (' → logprob: -9.512229919433594
    8. ')(' → logprob: -11.262229919433594
    9. 'self' → logprob: -11.637229919433594
    10. '_' → logprob: -11.887229919433594

Token 135: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06202089786529541
    2. ' self' → logprob: -2.812020778656006
    3. ' ' → logprob: -10.562021255493164
    4. ',' → logprob: -11.062021255493164
    5. '
' → logprob: -13.062021255493164
    6. '   ' → logprob: -13.062021255493164
    7. ')' → logprob: -13.062021255493164
    8. '(self' → logprob: -13.312021255493164
    9. '    ' → logprob: -14.062021255493164
    10. '	self' → logprob: -14.562021255493164

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0048466152511537075
    2. ' ,' → logprob: -5.504846572875977
    3. 'self' → logprob: -7.254846572875977
    4. '(self' → logprob: -10.879846572875977
    5. ' self' → logprob: -11.254846572875977
    6. ' ' → logprob: -11.504846572875977
    7. ',self' → logprob: -11.504846572875977
    8. ' (' → logprob: -12.504846572875977
    9. '_,' → logprob: -13.629846572875977
    10. ')' → logprob: -14.004846572875977

Token 137: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7821562886238098
    2. 'self' → logprob: -1.657156229019165
    3. ' self' → logprob: -2.032156229019165
    4. 'n' → logprob: -2.407156229019165
    5. ' num' → logprob: -3.032156229019165
    6. 'num' → logprob: -3.032156229019165
    7. ' participants' → logprob: -3.907156229019165
    8. 'participants' → logprob: -4.782156467437744
    9. '   ' → logprob: -6.407156467437744
    10. ' ' → logprob: -7.282156467437744

Token 138: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007763965986669064
    2. ':' → logprob: -7.250776290893555
    3. ' ,' → logprob: -10.125776290893555
    4. '):' → logprob: -10.750776290893555
    5. ':int' → logprob: -13.500776290893555
    6. ',n' → logprob: -13.875776290893555
    7. ',
' → logprob: -14.125776290893555
    8. ')' → logprob: -14.250776290893555
    9. '‌,' → logprob: -15.250776290893555
    10. '<|end|>' → logprob: -15.750776290893555

Token 139: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.38792285323143005
    2. 'int' → logprob: -1.1379228830337524
    3. ' n' → logprob: -7.387922763824463
    4. 'n' → logprob: -8.637923240661621
    5. ' ' → logprob: -9.762923240661621
    6. ',int' → logprob: -10.012923240661621
    7. ':int' → logprob: -10.012923240661621
    8. ',' → logprob: -10.137923240661621
    9. ' 
' → logprob: -10.887923240661621
    10. ' ,' → logprob: -11.012923240661621

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.723973582556937e-05
    2. ' ,' → logprob: -11.375017166137695
    3. '):' → logprob: -12.250017166137695
    4. ')' → logprob: -15.000017166137695
    5. ',n' → logprob: -15.625017166137695
    6. '   ' → logprob: -16.375017166137695
    7. '‌,' → logprob: -16.500017166137695
    8. ',
' → logprob: -17.000017166137695
    9. ',k' → logprob: -17.000017166137695
    10. '):
' → logprob: -17.125017166137695

Token 141: ' m' (ID: 284)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.08938215672969818
    2. 'k' → logprob: -2.4643821716308594
    3. ' m' → logprob: -8.46438217163086
    4. ' ' → logprob: -8.96438217163086
    5. 'm' → logprob: -10.33938217163086
    6. ' 
' → logprob: -10.83938217163086
    7. '   ' → logprob: -11.33938217163086
    8. '```' → logprob: -11.33938217163086
    9. ' step' → logprob: -11.96438217163086
    10. ')' → logprob: -12.21438217163086

Token 142: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1213797926902771
    2. ':' → logprob: -2.246379852294922
    3. '):
' → logprob: -5.246379852294922
    4. ')' → logprob: -6.121379852294922
    5. ' ):' → logprob: -7.371379852294922
    6. ',' → logprob: -8.121379852294922
    7. ':int' → logprob: -10.371379852294922
    8. '**' → logprob: -10.746379852294922
    9. '):
' → logprob: -10.996379852294922
    10. ' :' → logprob: -11.121379852294922

Token 143: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.8178494572639465
    2. ' )' → logprob: -1.3178493976593018
    3. ')' → logprob: -2.4428493976593018
    4. ' ' → logprob: -2.5678493976593018
    5. 'int' → logprob: -2.6928493976593018
    6. ' ):' → logprob: -3.5678493976593018
    7. ' ):
' → logprob: -4.067849636077881
    8. '):
' → logprob: -5.192849636077881
    9. ' n' → logprob: -5.567849636077881
    10. '):' → logprob: -6.067849636077881

Token 144: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00044127836008556187
    2. ')' → logprob: -8.750441551208496
    3. '):
' → logprob: -8.875441551208496
    4. ' ):' → logprob: -9.375441551208496
    5. ',' → logprob: -9.875441551208496
    6. ':' → logprob: -12.250441551208496
    7. '   ' → logprob: -13.875441551208496
    8. '):
' → logprob: -15.125441551208496
    9. ' ' → logprob: -15.625441551208496
    10. ' )' → logprob: -16.12544059753418

Token 145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00038717821007594466
    2. ' self' → logprob: -8.250387191772461
    3. '   ' → logprob: -10.125387191772461
    4. 'self' → logprob: -10.625387191772461
    5. '
' → logprob: -11.125387191772461
    6. ',' → logprob: -11.125387191772461
    7. '):
' → logprob: -12.250387191772461
    8. ' ' → logprob: -12.375387191772461
    9. '      ' → logprob: -12.625387191772461
    10. '        
' → logprob: -12.625387191772461

Token 146: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.10160396248102188
    2. 'self' (adapté à ' self') → logprob: -2.3516039848327637
    3. '       ' → logprob: -6.726603984832764
    4. ' participants' → logprob: -8.976603507995605
    5. ' ' → logprob: -10.226603507995605
    6. 'participants' → logprob: -11.101603507995605
    7. '        ' → logprob: -11.601603507995605
    8. ' ' → logprob: -12.976603507995605
    9. '   ' → logprob: -13.476603507995605
    10. ' players' → logprob: -13.726603507995605

Token 147: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.018564613536000252
    2. '.' → logprob: -4.518564701080322
    3. ' .' → logprob: -6.018564701080322
    4. 'n' → logprob: -6.143564701080322
    5. '.part' → logprob: -6.518564701080322
    6. ' n' → logprob: -7.018564701080322
    7. '.circle' → logprob: -9.143564224243164
    8. '.players' → logprob: -9.393564224243164
    9. '.initial' → logprob: -9.893564224243164
    10. 'participants' → logprob: -9.893564224243164

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13109903037548065
    2. '=' → logprob: -2.131098985671997
    3. ' ' → logprob: -5.756099224090576
    4. ',' → logprob: -7.256099224090576
    5. ' ,' → logprob: -8.506098747253418
    6. '    ' → logprob: -10.006098747253418
    7. ')' → logprob: -10.881098747253418
    8. ' =
' → logprob: -11.881098747253418
    9. '<|end|>' → logprob: -12.131098747253418
    10. '  ' → logprob: -13.131098747253418

Token 149: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.01815907657146454
    2. 'n' → logprob: -4.018158912658691
    3. ' ' → logprob: -12.018158912658691
    4. ' 
' → logprob: -13.393158912658691
    5. ' ' → logprob: -13.893158912658691
    6. '	n' → logprob: -14.393158912658691
    7. '_n' → logprob: -17.393159866333008
    8. '
' → logprob: -17.518159866333008
    9. '    ' → logprob: -17.768159866333008
    10. ')n' → logprob: -17.768159866333008

Token 150: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35619622468948364
    2. ' 
' → logprob: -1.9811961650848389
    3. '       ' → logprob: -2.731196165084839
    4. ',' → logprob: -3.231196165084839
    5. ' ' → logprob: -3.606196165084839
    6. '<|end|>' → logprob: -4.106196403503418
    7. '        
' → logprob: -5.106196403503418
    8. '  
' → logprob: -5.856196403503418
    9. '        ' → logprob: -6.856196403503418
    10. '    
' → logprob: -6.981196403503418

Token 151: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9170070886611938
    2. '       ' → logprob: -1.5420070886611938
    3. '
' → logprob: -1.7920070886611938
    4. ' ' → logprob: -2.6670069694519043
    5. ' 
' → logprob: -2.7920069694519043
    6. '<|end|>' → logprob: -3.4170069694519043
    7. 'self' → logprob: -3.7920069694519043
    8. '        
' → logprob: -4.292006969451904
    9. ' self' → logprob: -4.792006969451904
    10. '        ' → logprob: -5.917006969451904

Token 152: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.22554610669612885
    2. ' self' → logprob: -1.60054612159729
    3. 'm' → logprob: -9.100545883178711
    4. ' m' → logprob: -11.850545883178711
    5. '       ' → logprob: -11.975545883178711
    6. '
' → logprob: -12.475545883178711
    7. ' ' → logprob: -13.600545883178711
    8. ' 
' → logprob: -13.725545883178711
    9. '   ' → logprob: -13.850545883178711
    10. 's' → logprob: -15.225545883178711

Token 153: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.9082177877426147
    2. 'm' → logprob: -1.0332177877426147
    3. '.' → logprob: -2.1582179069519043
    4. ' m' → logprob: -2.5332179069519043
    5. ' =' → logprob: -3.4082179069519043
    6. ',' → logprob: -5.283217906951904
    7. '=' → logprob: -5.783217906951904
    8. ' ' → logprob: -6.283217906951904
    9. '.n' → logprob: -7.658217906951904
    10. '   ' → logprob: -7.908217906951904

Token 154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5310606360435486
    2. ' ' → logprob: -1.0310606956481934
    3. '=' → logprob: -2.9060606956481934
    4. '<|end|>' → logprob: -7.406060695648193
    5. '  ' → logprob: -11.281060218811035
    6. '    ' → logprob: -11.406060218811035
    7. ')' → logprob: -11.656060218811035
    8. ' ' → logprob: -11.656060218811035
    9. '<|end|>' → logprob: -11.781060218811035
    10. ',' → logprob: -11.781060218811035

Token 155: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.029764730483293533
    2. 'm' → logprob: -3.5297646522521973
    3. ' ' → logprob: -11.904765129089355
    4. ' ' → logprob: -11.904765129089355
    5. ' 
' → logprob: -14.904765129089355
    6. '	m' → logprob: -15.404765129089355
    7. '<|end|>' → logprob: -17.65476417541504
    8. ' n' → logprob: -17.90476417541504
    9. ' м' → logprob: -17.90476417541504
    10. ' ‌' → logprob: -18.02976417541504

Token 156: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06327439844608307
    2. '       ' → logprob: -2.813274383544922
    3. '  
' → logprob: -8.188274383544922
    4. '        
' → logprob: -8.313274383544922
    5. ' 
' → logprob: -8.563274383544922
    6. '    
' → logprob: -8.813274383544922
    7. 'self' → logprob: -9.063274383544922
    8. '<|end|>' → logprob: -9.313274383544922
    9. '        ' → logprob: -9.688274383544922
    10. '
' → logprob: -10.438274383544922

Token 157: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00841386616230011
    2. ' self' → logprob: -5.508413791656494
    3. '
' → logprob: -5.883413791656494
    4. 'self' → logprob: -6.883413791656494
    5. '   ' → logprob: -8.258414268493652
    6. ' ' → logprob: -9.758414268493652
    7. '        
' → logprob: -10.133414268493652
    8. ',' → logprob: -10.258414268493652
    9. ' 
' → logprob: -10.258414268493652
    10. '  
' → logprob: -10.383414268493652

Token 158: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3050115406513214
    2. 'self' (adapté à ' self') → logprob: -1.430011510848999
    3. '       ' → logprob: -3.805011510848999
    4. '        ' → logprob: -7.680011749267578
    5. ' ' → logprob: -8.180011749267578
    6. ' participants' → logprob: -8.555011749267578
    7. ' 
' → logprob: -9.430011749267578
    8. 'participants' → logprob: -9.555011749267578
    9. '   ' → logprob: -10.180011749267578
    10. '        
' → logprob: -10.680011749267578

Token 159: '.circle' (ID: 82666)
  Prédit: '.circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.circle' → logprob: -0.02725628763437271
    2. ' .' → logprob: -4.152256488800049
    3. '.' → logprob: -5.277256488800049
    4. '.part' → logprob: -5.902256488800049
    5. '.c' → logprob: -6.652256488800049
    6. 'participants' → logprob: -8.02725601196289
    7. '   ' → logprob: -8.15225601196289
    8. '.current' → logprob: -8.15225601196289
    9. '.players' → logprob: -8.15225601196289
    10. 'circle' → logprob: -9.02725601196289

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016039999201893806
    2. '=' → logprob: -4.141039848327637
    3. '.' → logprob: -12.516039848327637
    4. ' ' → logprob: -13.766039848327637
    5. ' =
' → logprob: -15.016039848327637
    6. 's' → logprob: -15.516039848327637
    7. '_' → logprob: -16.141040802001953
    8. '=[]' → logprob: -16.266040802001953
    9. ')' → logprob: -16.766040802001953
    10. ' ' → logprob: -16.891040802001953

Token 161: ' Circle' (ID: 33361)
  Prédit: ' Circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Circle' → logprob: -0.011054190807044506
    2. 'Circle' → logprob: -4.511054039001465
    3. ' Cir' → logprob: -13.511054039001465
    4. ' C' → logprob: -14.011054039001465
    5. ' ' → logprob: -14.386054039001465
    6. ' ' → logprob: -14.386054039001465
    7. '	C' → logprob: -14.386054039001465
    8. ' Circular' → logprob: -14.386054039001465
    9. ' [' → logprob: -14.511054039001465
    10. ' Circuit' → logprob: -14.761054039001465

Token 162: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -3.9650025428272784e-05
    2. '[' → logprob: -11.125040054321289
    3. '(' → logprob: -11.375040054321289
    4. '([
' → logprob: -11.750040054321289
    5. '([(' → logprob: -12.875040054321289
    6. '(
' → logprob: -13.375040054321289
    7. '(list' → logprob: -15.250040054321289
    8. '[list' → logprob: -15.500040054321289
    9. ' ([' → logprob: -15.625040054321289
    10. '([...' → logprob: -15.875040054321289

Token 163: 'Participant' (ID: 67860)
  Prédit: 'Participant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Participant' → logprob: -1.700132997939363e-05
    2. ' Participant' → logprob: -11.000017166137695
    3. 'Participants' → logprob: -16.125017166137695
    4. '   ' → logprob: -16.625017166137695
    5. 'Particip' → logprob: -17.750017166137695
    6. 'participant' → logprob: -18.125017166137695
    7. 'Part' → logprob: -19.000017166137695
    8. '
' → logprob: -19.250017166137695
    9. '       ' → logprob: -19.750017166137695
    10. 'Particle' → logprob: -19.875017166137695

Token 164: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -7.93448489275761e-05
    2. '(' → logprob: -9.500079154968262
    3. 'i' → logprob: -12.375079154968262
    4. ' (' → logprob: -16.500080108642578
    5. '((' → logprob: -16.500080108642578
    6. '(x' → logprob: -16.875080108642578
    7. '(id' → logprob: -17.500080108642578
    8. ' i' → logprob: -18.250080108642578
    9. '(j' → logprob: -18.375080108642578
    10. '(
' → logprob: -18.375080108642578

Token 165: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023924170061945915
    2. '+' → logprob: -4.523924350738525
    3. ' +' → logprob: -4.898924350738525
    4. ' ' → logprob: -6.023924350738525
    5. ' )' → logprob: -6.023924350738525
    6. ' for' → logprob: -7.648924350738525
    7. 'for' → logprob: -12.023923873901367
    8. '   ' → logprob: -12.523923873901367
    9. '    ' → logprob: -12.773923873901367
    10. ' i' → logprob: -13.648923873901367

Token 166: ' for' (ID: 395)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.7872244119644165
    2. '(' → logprob: -1.1622244119644165
    3. ' for' → logprob: -1.5372244119644165
    4. ' (' → logprob: -4.287224292755127
    5. 'for' → logprob: -6.662224292755127
    6. '(range' → logprob: -7.287224292755127
    7. ')' → logprob: -7.912224292755127
    8. ' ' → logprob: -7.912224292755127
    9. ' i' → logprob: -8.162224769592285
    10. '+' → logprob: -9.537224769592285

Token 167: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.28713417053222656
    2. ' i' → logprob: -1.4121341705322266
    3. ' ' → logprob: -5.162134170532227
    4. 'range' → logprob: -8.912134170532227
    5. '	range' → logprob: -9.912134170532227
    6. 'i' → logprob: -11.162134170532227
    7. '	i' → logprob: -11.162134170532227
    8. '<|end|>' → logprob: -12.037134170532227
    9. '  ' → logprob: -12.287134170532227
    10. '<|end|>' → logprob: -12.787134170532227

Token 168: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0005100222188048065
    2. ' ' → logprob: -8.500510215759277
    3. '(range' → logprob: -8.500510215759277
    4. 'range' → logprob: -9.625510215759277
    5. '	range' → logprob: -10.375510215759277
    6. ' in' → logprob: -12.625510215759277
    7. ' xrange' → logprob: -13.375510215759277
    8. '_range' → logprob: -14.625510215759277
    9. ' space' → logprob: -15.500510215759277
    10. '<|end|>' → logprob: -16.37550926208496

Token 169: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07889397442340851
    2. 'range' → logprob: -2.5788938999176025
    3. '	range' → logprob: -12.703893661499023
    4. ' ' → logprob: -14.703893661499023
    5. '(range' → logprob: -14.828893661499023
    6. '   ' → logprob: -15.828893661499023
    7. ' rang' → logprob: -16.828893661499023
    8. ' ran' → logprob: -16.953893661499023
    9. 'rang' → logprob: -17.078893661499023
    10. '_range' → logprob: -18.078893661499023

Token 170: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018246285617351532
    2. '(n' → logprob: -4.018246173858643
    3. '(self' → logprob: -9.2682466506958
    4. '(
' → logprob: -13.3932466506958
    5. ' (' → logprob: -14.7682466506958
    6. '1' → logprob: -16.018245697021484
    7. '(

' → logprob: -17.143245697021484
    8. '(s' → logprob: -19.143245697021484
    9. '(N' → logprob: -19.518245697021484
    10. '(nn' → logprob: -19.643245697021484

Token 171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10041790455579758
    2. 'n' → logprob: -2.3504178524017334
    3. ' n' → logprob: -8.725418090820312
    4. ' ' → logprob: -10.475418090820312
    5. '(n' → logprob: -11.350418090820312
    6. '(' → logprob: -12.100418090820312
    7. 'self' → logprob: -13.475418090820312
    8. '	n' → logprob: -14.350418090820312
    9. '   ' → logprob: -14.850418090820312
    10. ')n' → logprob: -14.850418090820312

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004558175278361887
    2. ' ,' → logprob: -8.500455856323242
    3. '(' → logprob: -8.625455856323242
    4. ',n' → logprob: -10.500455856323242
    5. ',
' → logprob: -10.625455856323242
    6. '1' → logprob: -11.500455856323242
    7. '(n' → logprob: -11.750455856323242
    8. ',self' → logprob: -13.500455856323242
    9. '(self' → logprob: -15.000455856323242
    10. ' ' → logprob: -15.000455856323242

Token 173: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16038072109222412
    2. 'n' → logprob: -1.9103807210922241
    3. ' self' → logprob: -9.160380363464355
    4. 'self' → logprob: -10.035380363464355
    5. '	n' → logprob: -12.160380363464355
    6. ' ' → logprob: -14.035380363464355
    7. ' 
' → logprob: -15.160380363464355
    8. '_n' → logprob: -15.285380363464355
    9. ')n' → logprob: -15.285380363464355
    10. '<|end|>' → logprob: -15.285380363464355

Token 174: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759566426277161
    2. ' +' → logprob: -0.8259566426277161
    3. ' ' → logprob: -11.825956344604492
    4. ' +
' → logprob: -11.950956344604492
    5. '+
' → logprob: -12.825956344604492
    6. '
' → logprob: -15.825956344604492
    7. '1' → logprob: -15.950956344604492
    8. '＋' → logprob: -16.700956344604492
    9. ' ' → logprob: -16.825956344604492
    10. '```' → logprob: -16.950956344604492

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.166338137816638e-05
    2. ' ' → logprob: -10.375031471252441
    3. '
' → logprob: -16.000032424926758
    4. ')' → logprob: -16.500032424926758
    5. '   ' → logprob: -17.000032424926758
    6. '```' → logprob: -17.125032424926758
    7. '

' → logprob: -18.250032424926758
    8. '  ' → logprob: -18.750032424926758
    9. '2' → logprob: -19.125032424926758
    10. '۱' → logprob: -19.875032424926758

Token 176: ')])

' (ID: 182226)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.010609379969537258
    2. ')' → logprob: -4.635609149932861
    3. ')]' → logprob: -7.135609149932861
    4. ' )' → logprob: -10.13560962677002
    5. ')])
' → logprob: -11.51060962677002
    6. '])' → logprob: -13.51060962677002
    7. ')])

' → logprob: -13.63560962677002
    8. '))' → logprob: -13.63560962677002
    9. ')],' → logprob: -14.01060962677002
    10. ' ' → logprob: -14.26060962677002

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1977870613336563
    2. '
' → logprob: -1.9477870464324951
    3. 'def' → logprob: -3.697787046432495
    4. ' def' → logprob: -4.947787284851074
    5. '<|end|>' → logprob: -5.572787284851074
    6. '    
' → logprob: -7.572787284851074
    7. '	def' → logprob: -8.572787284851074
    8. '

' → logprob: -9.072787284851074
    9. '       ' → logprob: -9.197787284851074
    10. '<|end|>' → logprob: -9.197787284851074

Token 178: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.006556094624102116
    2. ' def' → logprob: -5.381556034088135
    3. 'current' → logprob: -6.381556034088135
    4. 'd' → logprob: -8.756556510925293
    5. ' current' → logprob: -9.631556510925293
    6. 'position' → logprob: -12.756556510925293
    7. '   ' → logprob: -12.881556510925293
    8. 'de' → logprob: -13.131556510925293
    9. 'index' → logprob: -13.131556510925293
    10. 'next' → logprob: -13.256556510925293

Token 179: ' play' (ID: 2107)
  Prédit: ' play'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' play' → logprob: -0.1612612009048462
    2. ' run' → logprob: -2.1612610816955566
    3. ' solve' → logprob: -4.161261081695557
    4. ' simulate' → logprob: -5.036261081695557
    5. 'play' → logprob: -5.161261081695557
    6. ' start' → logprob: -6.161261081695557
    7. ' get' → logprob: -6.786261081695557
    8. 'run' → logprob: -7.161261081695557
    9. ' ' → logprob: -7.286261081695557
    10. ' find' → logprob: -8.286261558532715

Token 180: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0036080284044146538
    2. '(' → logprob: -5.628608226776123
    3. '():' → logprob: -13.253607749938965
    4. '   ' → logprob: -13.753607749938965
    5. '(
' → logprob: -14.128607749938965
    6. '_(' → logprob: -14.128607749938965
    7. '()' → logprob: -14.253607749938965
    8. 'self' → logprob: -14.378607749938965
    9. '(s' → logprob: -14.753607749938965
    10. '_' → logprob: -14.878607749938965

Token 181: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.022303007543087006
    2. 'self' → logprob: -4.522303104400635
    3. ')' → logprob: -5.522303104400635
    4. '):
' → logprob: -5.647303104400635
    5. ' ):' → logprob: -6.147303104400635
    6. '_' → logprob: -7.647303104400635
    7. '(self' → logprob: -8.272302627563477
    8. ',' → logprob: -8.897302627563477
    9. '():' → logprob: -9.022302627563477
    10. ':' → logprob: -9.022302627563477

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.781967043876648
    2. ' current' → logprob: -1.281967043876648
    3. 'current' → logprob: -1.781967043876648
    4. 'index' → logprob: -2.7819671630859375
    5. ' index' → logprob: -3.4069671630859375
    6. '   ' → logprob: -6.7819671630859375
    7. '        
' → logprob: -9.781967163085938
    8. ' i' → logprob: -9.906967163085938
    9. 'idx' → logprob: -10.031967163085938
    10. '```' → logprob: -10.031967163085938

Token 183: ' #' (ID: 1069)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.7076098918914795
    2. 'result' → logprob: -0.9576098918914795
    3. 'current' → logprob: -2.3326098918914795
    4. 'results' → logprob: -4.707610130310059
    5. ' index' → logprob: -5.082610130310059
    6. 'idx' → logprob: -5.832610130310059
    7. ' result' → logprob: -6.082610130310059
    8. ' current' → logprob: -6.207610130310059
    9. 'el' → logprob: -6.457610130310059
    10. ' eliminated' → logprob: -7.082610130310059

Token 184: ' The' (ID: 623)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.6637898683547974
    2. 'current' → logprob: -1.0387898683547974
    3. ' current' → logprob: -2.413789749145508
    4. ' index' → logprob: -3.413789749145508
    5. 'result' → logprob: -5.038789749145508
    6. 'idx' → logprob: -6.913789749145508
    7. ' result' → logprob: -7.413789749145508
    8. 'if' → logprob: -8.538789749145508
    9. ' idx' → logprob: -8.913789749145508
    10. ' if' → logprob: -9.663789749145508

Token 185: ' position' (ID: 4010)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -1.03866708278656
    2. 'index' → logprob: -1.03866708278656
    3. ' index' → logprob: -1.66366708278656
    4. 'current' → logprob: -2.2886672019958496
    5. 'result' → logprob: -8.163666725158691
    6. ' result' → logprob: -8.413666725158691
    7. '   ' → logprob: -8.913666725158691
    8. 'idx' → logprob: -8.913666725158691
    9. ' idx' → logprob: -9.163666725158691
    10. ' start' → logprob: -9.163666725158691

Token 186: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018264319747686386
    2. '=' → logprob: -4.018264293670654
    3. '_to' → logprob: -9.143264770507812
    4. ' ' → logprob: -12.143264770507812
    5. ' to' → logprob: -14.018264770507812
    6. '_' → logprob: -14.893264770507812
    7. 'to' → logprob: -15.268264770507812
    8. 'To' → logprob: -16.018264770507812
    9. '_index' → logprob: -16.018264770507812
    10. ' is' → logprob: -16.518264770507812

Token 187: ' which' (ID: 1118)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5643507242202759
    2. 'which' → logprob: -1.5643507242202759
    3. 'self' → logprob: -1.6893507242202759
    4. ' which' → logprob: -3.8143506050109863
    5. '(self' → logprob: -4.564350605010986
    6. '-' → logprob: -6.189350605010986
    7. ' self' → logprob: -6.939350605010986
    8. ' ' → logprob: -7.189350605010986
    9. 'where' → logprob: -7.314350605010986
    10. '(which' → logprob: -9.064351081848145

Token 188: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.4251265525817871
    2. ' to' → logprob: -1.925126552581787
    3. 'the' → logprob: -3.050126552581787
    4. 'count' → logprob: -3.550126552581787
    5. 'we' → logprob: -3.675126552581787
    6. ' the' → logprob: -3.675126552581787
    7. 'self' → logprob: -3.925126552581787
    8. 'index' → logprob: -4.800126552581787
    9. ' counting' → logprob: -4.800126552581787
    10. 'rem' → logprob: -4.925126552581787

Token 189: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.842299222946167
    2. 'start' → logprob: -0.842299222946167
    3. 'remove' → logprob: -2.217299222946167
    4. ' remove' → logprob: -3.842299222946167
    5. 'count' → logprob: -5.467299461364746
    6. ' eliminate' → logprob: -6.092299461364746
    7. ' count' → logprob: -7.717299461364746
    8. 'continue' → logprob: -7.967299461364746
    9. ' ' → logprob: -8.467299461364746
    10. ' continue' → logprob: -8.592299461364746

Token 190: ' counting' (ID: 43276)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.234556645154953
    2. '_index' → logprob: -1.8595566749572754
    3. '=' → logprob: -3.6095566749572754
    4. 'index' → logprob: -4.859556674957275
    5. ' index' → logprob: -5.609556674957275
    6. '_' → logprob: -5.734556674957275
    7. 'current' → logprob: -5.984556674957275
    8. ' current' → logprob: -5.984556674957275
    9. '_idx' → logprob: -5.984556674957275
    10. '_current' → logprob: -6.484556674957275

Token 191: ' (' (ID: 350)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -1.1820387840270996
    2. 'current' → logprob: -1.1820387840270996
    3. ' =' → logprob: -1.4320387840270996
    4. '=' → logprob: -2.3070387840270996
    5. 'index' → logprob: -4.1820387840271
    6. ' index' → logprob: -4.4320387840271
    7. '0' → logprob: -5.0570387840271
    8. ' i' → logprob: -6.1820387840271
    9. 'count' → logprob: -6.6820387840271
    10. 'pos' → logprob: -6.6820387840271

Token 192: 'index' (ID: 2257)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03981171175837517
    2. 'current' → logprob: -4.289811611175537
    3. ' ' → logprob: -4.539811611175537
    4. ' current' → logprob: -4.914811611175537
    5. 'index' → logprob: -5.289811611175537
    6. ' index' → logprob: -6.664811611175537
    7. 'start' → logprob: -7.914811611175537
    8. ' start' → logprob: -8.914812088012695
    9. 'self' → logprob: -9.164812088012695
    10. 'm' → logprob: -9.664812088012695

Token 193: '-based' (ID: 8235)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5328158736228943
    2. '=' → logprob: -0.9078158736228943
    3. ')' → logprob: -4.782815933227539
    4. '_to' → logprob: -8.282815933227539
    5. '_start' → logprob: -8.532815933227539
    6. '0' → logprob: -8.782815933227539
    7. ' ' → logprob: -8.907815933227539
    8. '_current' → logprob: -9.282815933227539
    9. '       ' → logprob: -9.657815933227539
    10. ' is' → logprob: -9.907815933227539

Token 194: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007386347278952599
    2. ' )' → logprob: -7.500738620758057
    3. ')
' → logprob: -9.750739097595215
    4. '0' → logprob: -10.000739097595215
    5. ',' → logprob: -10.125739097595215
    6. ' is' → logprob: -12.000739097595215
    7. 'current' → logprob: -12.000739097595215
    8. 'index' → logprob: -12.375739097595215
    9. '=' → logprob: -12.375739097595215
    10. '   ' → logprob: -12.625739097595215

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8521826267242432
    2. 'current' → logprob: -0.9771826267242432
    3. ' current' → logprob: -1.7271826267242432
    4. 'index' → logprob: -4.977182388305664
    5. 'position' → logprob: -5.602182388305664
    6. ' index' → logprob: -6.227182388305664
    7. 'pos' → logprob: -6.352182388305664
    8. '   ' → logprob: -6.977182388305664
    9. ' position' → logprob: -6.977182388305664
    10. '0' → logprob: -7.102182388305664

Token 196: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.40909141302108765
    2. 'index' → logprob: -1.4090914726257324
    3. ' current' → logprob: -2.7840914726257324
    4. 'pos' → logprob: -4.659091472625732
    5. ' index' → logprob: -5.034091472625732
    6. 'position' → logprob: -5.284091472625732
    7. 'idx' → logprob: -5.909091472625732
    8. '0' → logprob: -6.034091472625732
    9. 'start' → logprob: -6.159091472625732
    10. 'curr' → logprob: -8.284090995788574

Token 197: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.3210616409778595
    2. '_' → logprob: -1.321061611175537
    3. '_position' → logprob: -5.446061611175537
    4. '_pos' → logprob: -5.821061611175537
    5. ' _' → logprob: -8.196062088012695
    6. '_idx' → logprob: -9.071062088012695
    7. ' =' → logprob: -10.196062088012695
    8. '=' → logprob: -11.196062088012695
    9. '_i' → logprob: -11.446062088012695
    10. ' ' → logprob: -11.821062088012695

Token 198: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008617527782917023
    2. '=' → logprob: -4.758617401123047
    3. ' ' → logprob: -12.758617401123047
    4. ' =
' → logprob: -17.008617401123047
    5. ' ' → logprob: -18.008617401123047
    6. ',' → logprob: -18.383617401123047
    7. '0' → logprob: -18.383617401123047
    8. ' +=' → logprob: -19.508617401123047
    9. '.' → logprob: -19.633617401123047
    10. ' =)' → logprob: -19.633617401123047

Token 199: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003837213444057852
    2. ' ' → logprob: -7.8753838539123535
    3. 'self' → logprob: -12.625383377075195
    4. ' self' → logprob: -15.500383377075195
    5. 'm' → logprob: -15.875383377075195
    6. '-' → logprob: -17.875383377075195
    7. '(self' → logprob: -18.000383377075195
    8. '   ' → logprob: -18.250383377075195
    9. '۰' → logprob: -18.250383377075195
    10. ' 
' → logprob: -18.375383377075195

Token 200: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8325677703833207e-05
    2. ' ' → logprob: -10.500028610229492
    3. 'self' → logprob: -14.625028610229492
    4. '-' → logprob: -16.500028610229492
    5. '۰' → logprob: -17.187528610229492
    6. '
' → logprob: -17.312528610229492
    7. '   ' → logprob: -17.750028610229492
    8. 'm' → logprob: -17.875028610229492
    9. '```' → logprob: -18.250028610229492
    10. ' self' → logprob: -18.500028610229492

Token 201: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0010378103470429778
    2. '<|end|>' → logprob: -7.25103759765625
    3. '

' → logprob: -9.50103759765625
    4. '       ' → logprob: -9.87603759765625
    5. '        
' → logprob: -10.50103759765625
    6. '
' → logprob: -10.62603759765625
    7. ' 
' → logprob: -10.62603759765625
    8. '    
' → logprob: -10.75103759765625
    9. '<|end|>' → logprob: -10.75103759765625
    10. ' while' → logprob: -10.87603759765625

Token 202: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004427624400705099
    2. '       ' → logprob: -6.004427433013916
    3. '<|end|>' → logprob: -7.629427433013916
    4. '        
' → logprob: -7.879427433013916
    5. 'while' → logprob: -7.879427433013916
    6. ' while' → logprob: -8.504427909851074
    7. '    
' → logprob: -9.004427909851074
    8. '  
' → logprob: -9.004427909851074
    9. '```' → logprob: -9.504427909851074
    10. '<|end|>' → logprob: -10.254427909851074

Token 203: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.20447717607021332
    2. 'while' (adapté à ' while') → logprob: -2.329477071762085
    3. '       ' → logprob: -2.454477071762085
    4. '        
' → logprob: -7.829477310180664
    5. '	while' → logprob: -7.954477310180664
    6. 'w' → logprob: -8.329477310180664
    7. '   ' → logprob: -8.704477310180664
    8. '
' → logprob: -8.829477310180664
    9. 'wh' → logprob: -9.829477310180664
    10. '    ' → logprob: -10.079477310180664

Token 204: ' self' (ID: 1051)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.25194457173347473
    2. 'not' → logprob: -1.5019445419311523
    3. 'n' → logprob: -12.126944541931152
    4. '
' → logprob: -13.376944541931152
    5. '	not' → logprob: -13.376944541931152
    6. 'self' → logprob: -13.751944541931152
    7. '(not' → logprob: -13.876944541931152
    8. 'len' → logprob: -14.126944541931152
    9. '   ' → logprob: -14.251944541931152
    10. '!' → logprob: -14.251944541931152

Token 205: '.circle' (ID: 82666)
  Prédit: '.circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.circle' → logprob: -0.0002390594017924741
    2. '.' → logprob: -9.000239372253418
    3. 'circle' → logprob: -10.125239372253418
    4. '.n' → logprob: -11.000239372253418
    5. '.m' → logprob: -11.250239372253418
    6. '.c' → logprob: -11.375239372253418
    7. '.circular' → logprob: -12.625239372253418
    8. '.not' → logprob: -12.625239372253418
    9. '!' → logprob: -12.750239372253418
    10. '   ' → logprob: -12.875239372253418

Token 206: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.03266824036836624
    2. '.' → logprob: -4.032668113708496
    3. '.is' → logprob: -4.282668113708496
    4. ' .' → logprob: -7.532668113708496
    5. 'size' → logprob: -10.907668113708496
    6. '().' → logprob: -11.907668113708496
    7. ' size' → logprob: -12.157668113708496
    8. '   ' → logprob: -12.282668113708496
    9. '.not' → logprob: -12.282668113708496
    10. ' is' → logprob: -12.407668113708496

Token 207: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0022939443588256836
    2. '()>' → logprob: -6.127294063568115
    3. ' ()' → logprob: -9.752293586730957
    4. ' >' → logprob: -10.502293586730957
    5. '>' → logprob: -11.252293586730957
    6. '(' → logprob: -11.627293586730957
    7. ')' → logprob: -14.002293586730957
    8. '>()' → logprob: -15.502293586730957
    9. ' (' → logprob: -16.252294540405273
    10. '   ' → logprob: -16.502294540405273

Token 208: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.034989021718502045
    2. '>' → logprob: -3.53498911857605
    3. '()' → logprob: -5.909988880157471
    4. '()>' → logprob: -6.034988880157471
    5. ')' → logprob: -10.034989356994629
    6. ' ' → logprob: -10.284989356994629
    7. '(' → logprob: -11.159989356994629
    8. '   ' → logprob: -11.909989356994629
    9. ' ()' → logprob: -12.409989356994629
    10. ')>' → logprob: -12.784989356994629

Token 209: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28951025009155273
    2. '0' → logprob: -1.4145102500915527
    3. ' ' → logprob: -4.789510250091553
    4. '   ' → logprob: -12.914510726928711
    5. '```' → logprob: -13.727010726928711
    6. '<|end|>' → logprob: -13.852010726928711
    7. '>' → logprob: -13.977010726928711
    8. '  ' → logprob: -14.164510726928711
    9. '=' → logprob: -14.852010726928711
    10. ' ' → logprob: -15.164510726928711

Token 210: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05510072037577629
    2. '1' → logprob: -2.930100679397583
    3. ' ' → logprob: -8.430100440979004
    4. '   ' → logprob: -16.18010139465332
    5. '```' → logprob: -16.18010139465332
    6. '  ' → logprob: -17.30510139465332
    7. '>' → logprob: -17.74260139465332
    8. '۰' → logprob: -17.93010139465332
    9. '
' → logprob: -17.99260139465332
    10. '    ' → logprob: -18.99260139465332

Token 211: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04862472042441368
    2. ':
' → logprob: -3.0486247539520264
    3. '       ' → logprob: -11.298624992370605
    4. ' and' → logprob: -11.673624992370605
    5. ':

' → logprob: -12.423624992370605
    6. ',' → logprob: -12.798624992370605
    7. ' :' → logprob: -13.048624992370605
    8. ':
' → logprob: -13.423624992370605
    9. '   ' → logprob: -13.548624992370605
    10. ' :
' → logprob: -13.673624992370605

Token 212: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.053183212876319885
    2. '
' → logprob: -3.1781833171844482
    3. '            
' → logprob: -4.928183078765869
    4. '\' → logprob: -7.303183078765869
    5. '  
' → logprob: -7.928183078765869
    6. '\n' → logprob: -8.178183555603027
    7. ' 
' → logprob: -8.678183555603027
    8. '    
' → logprob: -8.678183555603027
    9. '#' → logprob: -8.678183555603027
    10. ' current' → logprob: -8.803183555603027

Token 213: ' #' (ID: 1069)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.12406118214130402
    2. ' current' → logprob: -2.374061107635498
    3. 'count' → logprob: -4.374061107635498
    4. '           ' → logprob: -5.249061107635498
    5. 'remove' → logprob: -6.124061107635498
    6. 'step' → logprob: -6.249061107635498
    7. 'next' → logprob: -7.999061107635498
    8. ' step' → logprob: -7.999061107635498
    9. 'skip' → logprob: -8.999061584472656
    10. '
' → logprob: -9.124061584472656

Token 214: ' Calculate' (ID: 38942)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.11929447948932648
    2. ' current' → logprob: -2.4942944049835205
    3. 'count' → logprob: -3.7442944049835205
    4. 'step' → logprob: -5.9942946434021
    5. '           ' → logprob: -6.7442946434021
    6. 'next' → logprob: -7.3692946434021
    7. ' step' → logprob: -7.7442946434021
    8. 'skip' → logprob: -7.9942946434021
    9. ' count' → logprob: -8.369294166564941
    10. '#' → logprob: -8.369294166564941

Token 215: ' the' (ID: 290)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5662117600440979
    2. '(current' → logprob: -1.0662117004394531
    3. ' current' → logprob: -2.566211700439453
    4. ' (' → logprob: -5.066211700439453
    5. 'next' → logprob: -6.441211700439453
    6. 'remove' → logprob: -6.816211700439453
    7. ' the' → logprob: -7.316211700439453
    8. 'the' → logprob: -7.566211700439453
    9. ' next' → logprob: -8.316211700439453
    10. '           ' → logprob: -8.441211700439453

Token 216: ' index' (ID: 3472)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.16392774879932404
    2. 'remove' → logprob: -2.7889277935028076
    3. 'current' → logprob: -3.0389277935028076
    4. 'next' → logprob: -3.2889277935028076
    5. '(next' → logprob: -6.7889275550842285
    6. 'el' → logprob: -7.1639275550842285
    7. ' next' → logprob: -7.1639275550842285
    8. 'index' → logprob: -7.4139275550842285
    9. ' current' → logprob: -7.9139275550842285
    10. ' (' → logprob: -8.413928031921387

Token 217: ' of' (ID: 328)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(current' → logprob: -1.2081249952316284
    2. '+' → logprob: -1.5831249952316284
    3. ' =' → logprob: -1.8331249952316284
    4. 'current' → logprob: -2.208125114440918
    5. ' +' → logprob: -2.708125114440918
    6. ' +=' → logprob: -3.083125114440918
    7. ' (' → logprob: -3.333125114440918
    8. ' to' → logprob: -3.708125114440918
    9. ' current' → logprob: -4.208125114440918
    10. '=' → logprob: -4.583125114440918

Token 218: ' the' (ID: 290)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.022844389081001282
    2. ' (' → logprob: -3.8978443145751953
    3. 'current' → logprob: -6.647844314575195
    4. 'the' → logprob: -7.772844314575195
    5. ' the' → logprob: -8.397844314575195
    6. '(next' → logprob: -8.522844314575195
    7. ' current' → logprob: -9.272844314575195
    8. 'next' → logprob: -10.647844314575195
    9. '(self' → logprob: -11.647844314575195
    10. '(' → logprob: -11.772844314575195

Token 219: ' participant' (ID: 34893)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.8868497014045715
    2. '(current' → logprob: -1.5118496417999268
    3. 'to' → logprob: -2.2618496417999268
    4. ' next' → logprob: -2.2618496417999268
    5. 'participant' → logprob: -2.6368496417999268
    6. 'current' → logprob: -3.1368496417999268
    7. '(next' → logprob: -4.386849880218506
    8. ' participant' → logprob: -4.636849880218506
    9. 'remove' → logprob: -4.886849880218506
    10. ' current' → logprob: -5.636849880218506

Token 220: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.599209725856781
    2. 'to' → logprob: -0.849209725856781
    3. '+' → logprob: -4.849209785461426
    4. ' =' → logprob: -5.474209785461426
    5. '_to' → logprob: -5.599209785461426
    6. '(current' → logprob: -6.224209785461426
    7. '=' → logprob: -6.974209785461426
    8. '+=' → logprob: -6.974209785461426
    9. ' +=' → logprob: -7.224209785461426
    10. ' (' → logprob: -7.224209785461426

Token 221: ' remove' (ID: 6234)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.11014726758003235
    2. ' remove' → logprob: -2.36014723777771
    3. ' be' → logprob: -5.360147476196289
    4. ' eliminate' → logprob: -6.110147476196289
    5. 'el' → logprob: -6.485147476196289
    6. 'be' → logprob: -6.985147476196289
    7. '_remove' → logprob: -7.735147476196289
    8. ' eliminar' → logprob: -10.860147476196289
    9. '	remove' → logprob: -10.985147476196289
    10. ' ' → logprob: -12.360147476196289

Token 222: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18487140536308289
    2. '(current' → logprob: -2.8098714351654053
    3. ' (' → logprob: -2.9348714351654053
    4. 'current' → logprob: -3.5598714351654053
    5. '=' → logprob: -4.059871196746826
    6. ' current' → logprob: -6.309871196746826
    7. ' ' → logprob: -6.434871196746826
    8. ' +=' → logprob: -6.559871196746826
    9. '=(' → logprob: -6.684871196746826
    10. '           ' → logprob: -6.934871196746826

Token 223: '           ' (ID: 352)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.8882315158843994
    2. ' current' → logprob: -1.6382315158843994
    3. 'current' → logprob: -1.6382315158843994
    4. '           ' → logprob: -2.1382315158843994
    5. ' =' → logprob: -2.8882315158843994
    6. ' (' → logprob: -4.13823127746582
    7. '=current' → logprob: -5.38823127746582
    8. '=' → logprob: -5.63823127746582
    9. '=(' → logprob: -7.26323127746582
    10. '            
' → logprob: -7.26323127746582

Token 224: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.026546312496066093
    2. ' current' → logprob: -3.6515462398529053
    3. 'remove' → logprob: -8.651546478271484
    4. '(current' → logprob: -10.901546478271484
    5. 'next' → logprob: -10.901546478271484
    6. 'to' → logprob: -11.276546478271484
    7. '           ' → logprob: -12.026546478271484
    8. 'count' → logprob: -12.526546478271484
    9. ' remove' → logprob: -12.776546478271484
    10. 'index' → logprob: -13.526546478271484

Token 225: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -4.60414821645827e-06
    2. '_' → logprob: -12.750004768371582
    3. 'index' → logprob: -14.000004768371582
    4. '_token' → logprob: -15.875004768371582
    5. 'Index' → logprob: -16.125003814697266
    6. '_
' → logprob: -16.625003814697266
    7. '_ind' → logprob: -16.875003814697266
    8. ' _' → logprob: -17.125003814697266
    9. '_position' → logprob: -17.125003814697266
    10. '```' → logprob: -17.125003814697266

Token 226: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014070292934775352
    2. '=' → logprob: -4.389070510864258
    3. ' +=' → logprob: -6.514070510864258
    4. '+=' → logprob: -10.139070510864258
    5. ' =(' → logprob: -11.014070510864258
    6. ' ' → logprob: -11.139070510864258
    7. '+' → logprob: -12.889070510864258
    8. '=(' → logprob: -12.889070510864258
    9. ' +' → logprob: -13.764070510864258
    10. ' ' → logprob: -16.389070510864258

Token 227: ' (' (ID: 350)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.014286447316408157
    2. ' (' → logprob: -4.264286518096924
    3. '(next' → logprob: -10.264286041259766
    4. '(self' → logprob: -10.264286041259766
    5. '(cur' → logprob: -10.889286041259766
    6. '(curr' → logprob: -11.014286041259766
    7. '(previous' → logprob: -11.764286041259766
    8. '(prev' → logprob: -13.139286041259766
    9. '(' → logprob: -13.764286041259766
    10. '(last' → logprob: -13.889286041259766

Token 228: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0005893715424463153
    2. ' current' → logprob: -7.500589370727539
    3. '(current' → logprob: -10.250589370727539
    4. '
' → logprob: -15.000589370727539
    5. '[current' → logprob: -15.375589370727539
    6. '$current' → logprob: -15.750589370727539
    7. '	current' → logprob: -16.62558937072754
    8. 'cur' → logprob: -16.75058937072754
    9. 'curr' → logprob: -17.00058937072754
    10. '   ' → logprob: -17.00058937072754

Token 229: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0018198858015239239
    2. 'nd' → logprob: -6.876820087432861
    3. 'index' → logprob: -7.251820087432861
    4. 'dex' → logprob: -10.751819610595703
    5. 'Index' → logprob: -10.876819610595703
    6. 'ex' → logprob: -11.126819610595703
    7. 'x' → logprob: -11.376819610595703
    8. '_nd' → logprob: -13.501819610595703
    9. '_INDEX' → logprob: -13.751819610595703
    10. ' index' → logprob: -13.876819610595703

Token 230: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.014468807727098465
    2. '+' → logprob: -4.264468669891357
    3. ' ' → logprob: -8.139469146728516
    4. '+m' → logprob: -11.764469146728516
    5. '+self' → logprob: -12.764469146728516
    6. ' +
' → logprob: -13.639469146728516
    7. '<|end|>' → logprob: -15.014469146728516
    8. '  ' → logprob: -15.264469146728516
    9. 'current' → logprob: -15.389469146728516
    10. ' ' → logprob: -15.639469146728516

Token 231: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6945643424987793
    2. 'self' → logprob: -0.6945643424987793
    3. '(self' → logprob: -6.569564342498779
    4. '[self' → logprob: -11.819564819335938
    5. '
' → logprob: -13.319564819335938
    6. ' (' → logprob: -13.319564819335938
    7. '=self' → logprob: -13.694564819335938
    8. '	self' → logprob: -14.194564819335938
    9. '<|end|>' → logprob: -14.819564819335938
    10. 'm' → logprob: -15.194564819335938

Token 232: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.0001705246395431459
    2. 'm' → logprob: -8.750170707702637
    3. '.' → logprob: -11.625170707702637
    4. '_m' → logprob: -13.250170707702637
    5. ' m' → logprob: -15.250170707702637
    6. ' .' → logprob: -15.375170707702637
    7. '-' → logprob: -15.750170707702637
    8. '.
' → logprob: -16.00016975402832
    9. '	m' → logprob: -16.87516975402832
    10. '```' → logprob: -16.87516975402832

Token 233: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04861597716808319
    2. '-' → logprob: -3.0486159324645996
    3. ' ' → logprob: -10.673616409301758
    4. ')' → logprob: -12.673616409301758
    5. '  ' → logprob: -14.798616409301758
    6. '1' → logprob: -14.798616409301758
    7. ' )' → logprob: -15.298616409301758
    8. '_minus' → logprob: -15.298616409301758
    9. ' ' → logprob: -15.548616409301758
    10. '   ' → logprob: -15.548616409301758

Token 234: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016034603118896484
    2. ' ' → logprob: -4.1410346031188965
    3. ')' → logprob: -15.641035079956055
    4. '   ' → logprob: -16.016035079956055
    5. '```' → logprob: -16.891035079956055
    6. '<|end|>' → logprob: -17.016035079956055
    7. '    ' → logprob: -18.016035079956055
    8. ' ' → logprob: -18.266035079956055
    9. '  ' → logprob: -18.703535079956055
    10. '
' → logprob: -18.766035079956055

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033581978641450405
    2. ' ' → logprob: -8.000335693359375
    3. ')' → logprob: -15.125335693359375
    4. '   ' → logprob: -17.000335693359375
    5. '```' → logprob: -17.000335693359375
    6. '<|end|>' → logprob: -17.812835693359375
    7. '
' → logprob: -18.062835693359375
    8. '۱' → logprob: -18.875335693359375
    9. '  ' → logprob: -19.125335693359375
    10. '0' → logprob: -19.625335693359375

Token 236: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001616034540347755
    2. ' )' → logprob: -6.50161600112915
    3. ')%' → logprob: -9.126616477966309
    4. ')
' → logprob: -12.376616477966309
    5. ' )
' → logprob: -16.376615524291992
    6. '%' → logprob: -16.376615524291992
    7. ')`' → logprob: -16.501615524291992
    8. ' ' → logprob: -16.626615524291992
    9. ']' → logprob: -16.626615524291992
    10. '   ' → logprob: -16.626615524291992

Token 237: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.011711960658431053
    2. '%' → logprob: -4.511712074279785
    3. ')' → logprob: -7.636712074279785
    4. ' ' → logprob: -9.011712074279785
    5. ')%' → logprob: -10.261712074279785
    6. ' %
' → logprob: -11.761712074279785
    7. '<|end|>' → logprob: -11.886712074279785
    8. ' )' → logprob: -12.261712074279785
    9. ' ' → logprob: -13.886712074279785
    10. ']' → logprob: -14.136712074279785

Token 238: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5759450793266296
    2. ' self' → logprob: -0.8259450793266296
    3. '(self' → logprob: -12.325944900512695
    4. '	self' → logprob: -14.825944900512695
    5. ' ' → logprob: -15.075944900512695
    6. '[self' → logprob: -15.200944900512695
    7. ' ' → logprob: -16.325944900512695
    8. 's' → logprob: -17.200944900512695
    9. '
' → logprob: -17.325944900512695
    10. ' (' → logprob: -17.450944900512695

Token 239: '.circle' (ID: 82666)
  Prédit: '.circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.circle' → logprob: -0.0002636006975080818
    2. 'circle' → logprob: -8.875263214111328
    3. '.c' → logprob: -9.875263214111328
    4. ' .' → logprob: -10.125263214111328
    5. '.' → logprob: -10.750263214111328
    6. ').' → logprob: -13.125263214111328
    7. '(circle' → logprob: -13.625263214111328
    8. '   ' → logprob: -13.875263214111328
    9. 'ircle' → logprob: -14.125263214111328
    10. '_circle' → logprob: -14.250263214111328

Token 240: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -1.1875571544806007e-05
    2. '.' → logprob: -11.750011444091797
    3. ' .' → logprob: -12.875011444091797
    4. '.s' → logprob: -14.250011444091797
    5. ').' → logprob: -16.125011444091797
    6. '.status' → logprob: -16.625011444091797
    7. '.length' → logprob: -16.750011444091797
    8. '   ' → logprob: -16.750011444091797
    9. '.count' → logprob: -16.750011444091797
    10. 'size' → logprob: -16.875011444091797

Token 241: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0025303566362708807
    2. '()
' → logprob: -6.002530574798584
    3. ')' → logprob: -10.752530097961426
    4. '())' → logprob: -10.752530097961426
    5. '()

' → logprob: -12.127530097961426
    6. '(' → logprob: -12.627530097961426
    7. '()`' → logprob: -13.377530097961426
    8. '()
' → logprob: -13.627530097961426
    9. '       ' → logprob: -15.752530097961426
    10. '()]' → logprob: -16.502531051635742

Token 242: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005303720012307167
    2. 'removed' → logprob: -5.755303859710693
    3. ' removed' → logprob: -6.380303859710693
    4. '            
' → logprob: -8.505303382873535
    5. '
' → logprob: -8.630303382873535
    6. '```' → logprob: -11.005303382873535
    7. '_removed' → logprob: -12.380303382873535
    8. '       ' → logprob: -12.505303382873535
    9. ' self' → logprob: -12.630303382873535
    10. '           
' → logprob: -12.630303382873535

Token 243: ' self' (ID: 1051)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.823103129863739
    2. '           ' → logprob: -0.948103129863739
    3. 'self' (adapté à ' self') → logprob: -2.073103189468384
    4. ' self' → logprob: -3.698103189468384
    5. ' removed' → logprob: -3.823103189468384
    6. '       ' → logprob: -8.323102951049805
    7. 'participant' → logprob: -8.323102951049805
    8. 'yield' → logprob: -8.698102951049805
    9. '```' → logprob: -8.823102951049805
    10. '            
' → logprob: -10.198102951049805

Token 244: '.circle' (ID: 82666)
  Prédit: '.circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.circle' → logprob: -0.36562004685401917
    2. '.remove' → logprob: -1.3656200170516968
    3. '.' → logprob: -3.2406201362609863
    4. ' .' → logprob: -4.740620136260986
    5. 'circle' → logprob: -5.990620136260986
    6. '.rem' → logprob: -8.365619659423828
    7. '   ' → logprob: -9.615619659423828
    8. 'remove' → logprob: -9.990619659423828
    9. ' circle' → logprob: -10.115619659423828
    10. '`.' → logprob: -10.490619659423828

Token 245: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -9.85366350505501e-05
    2. '.' → logprob: -9.25009822845459
    3. 'remove' → logprob: -13.12509822845459
    4. ' .' → logprob: -15.25009822845459
    5. '.pop' → logprob: -17.625099182128906
    6. '   ' → logprob: -17.875099182128906
    7. '.delete' → logprob: -18.375099182128906
    8. '.rem' → logprob: -18.625099182128906
    9. '	remove' → logprob: -18.875099182128906
    10. '.Remove' → logprob: -19.000099182128906

Token 246: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.25
    3. ' _' → logprob: -18.125
    4. '```' → logprob: -18.25
    5. 'at' → logprob: -18.375
    6. '_a' → logprob: -18.5
    7. '(_' → logprob: -18.5
    8. ')_' → logprob: -19.0
    9. '`' → logprob: -19.25
    10. '	at' → logprob: -19.75

Token 247: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.006718925200402737
    2. '(' → logprob: -5.00671911239624
    3. '(
' → logprob: -12.881718635559082
    4. 'current' → logprob: -14.256718635559082
    5. '(curr' → logprob: -16.2567195892334
    6. ' (' → logprob: -16.2567195892334
    7. '(cur' → logprob: -16.8817195892334
    8. '(c' → logprob: -17.7567195892334
    9. '(

' → logprob: -18.0067195892334
    10. ' current' → logprob: -18.0067195892334

Token 248: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0001278534036828205
    2. 'index' → logprob: -9.000127792358398
    3. 'ex' → logprob: -13.625127792358398
    4. '_' → logprob: -13.750127792358398
    5. '_idx' → logprob: -14.125127792358398
    6. 'Index' → logprob: -14.750127792358398
    7. 'nd' → logprob: -15.250127792358398
    8. 'x' → logprob: -15.250127792358398
    9. 'dex' → logprob: -15.875127792358398
    10. '_INDEX' → logprob: -16.2501277923584

Token 249: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012832103529945016
    2. ')
' → logprob: -6.751283168792725
    3. ' )' → logprob: -10.376283645629883
    4. '       ' → logprob: -10.626283645629883
    5. ')return' → logprob: -10.751283645629883
    6. '<|end|>' → logprob: -11.376283645629883
    7. '()' → logprob: -11.751283645629883
    8. '())' → logprob: -11.876283645629883
    9. ')

' → logprob: -12.376283645629883
    10. ')
' → logprob: -14.126283645629883

Token 250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010036318562924862
    2. '        
' → logprob: -7.876003742218018
    3. '
' → logprob: -8.25100326538086
    4. ' return' → logprob: -8.87600326538086
    5. 'return' → logprob: -9.37600326538086
    6. '```' → logprob: -10.25100326538086
    7. '           ' → logprob: -10.37600326538086
    8. '<|end|>' → logprob: -10.62600326538086
    9. 'participant' → logprob: -11.87600326538086
    10. '    
' → logprob: -12.00100326538086

Token 251: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.21332958340644836
    2. '       ' → logprob: -1.963329553604126
    3. ' return' → logprob: -2.963329553604126
    4. '        
' → logprob: -10.588329315185547
    5. '
' → logprob: -11.088329315185547
    6. '```' → logprob: -11.588329315185547
    7. '   ' → logprob: -11.963329315185547
    8. '	return' → logprob: -12.838329315185547
    9. '{return' → logprob: -13.213329315185547
    10. ':return' → logprob: -13.338329315185547

Token 252: ' The' (ID: 623)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16057951748371124
    2. ' return' → logprob: -1.9105795621871948
    3. 'Return' → logprob: -8.035579681396484
    4. '       ' → logprob: -11.285579681396484
    5. ' Return' → logprob: -11.660579681396484
    6. '   ' → logprob: -11.910579681396484
    7. 'def' → logprob: -14.160579681396484
    8. '#' → logprob: -14.535579681396484
    9. 'eturn' → logprob: -14.910579681396484
    10. 'ret' → logprob: -14.910579681396484

Token 253: ' winner' (ID: 19499)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5331057906150818
    2. ' return' → logprob: -2.0331058502197266
    3. ' remaining' → logprob: -2.0331058502197266
    4. 'remaining' → logprob: -2.4081058502197266
    5. 'winner' → logprob: -4.283105850219727
    6. ' last' → logprob: -4.658105850219727
    7. ' ' → logprob: -4.783105850219727
    8. ' surviving' → logprob: -4.908105850219727
    9. ' winner' → logprob: -4.908105850219727
    10. ' survivor' → logprob: -5.158105850219727

Token 254: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04914930462837219
    2. ' is' → logprob: -3.92414927482605
    3. '=' → logprob: -4.174149513244629
    4. ' return' → logprob: -4.674149513244629
    5. 'return' → logprob: -5.799149513244629
    6. '   ' → logprob: -9.049149513244629
    7. ' ' → logprob: -9.049149513244629
    8. '       ' → logprob: -9.799149513244629
    9. ',' → logprob: -10.049149513244629
    10. ':' → logprob: -11.299149513244629

Token 255: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1602250337600708
    2. ' self' → logprob: -1.9102250337600708
    3. ' ' → logprob: -14.410224914550781
    4. '	self' → logprob: -16.03522491455078
    5. '(self' → logprob: -16.28522491455078
    6. '   ' → logprob: -16.28522491455078
    7. ' ' → logprob: -17.41022491455078
    8. ' the' → logprob: -18.16022491455078
    9. '[self' → logprob: -18.41022491455078
    10. '  ' → logprob: -19.03522491455078

Token 256: ' last' (ID: 2174)
  Prédit: '.circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.circle' → logprob: -0.09653229266405106
    2. 'self' → logprob: -3.3465323448181152
    3. 'circle' → logprob: -3.4715323448181152
    4. ' circle' → logprob: -4.221532344818115
    5. ' self' → logprob: -4.596532344818115
    6. ' ' → logprob: -7.971532344818115
    7. '0' → logprob: -9.471531867980957
    8. '.c' → logprob: -9.471531867980957
    9. ' participants' → logprob: -9.721531867980957
    10. '.part' → logprob: -9.721531867980957

Token 257: ' remaining' (ID: 15448)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5710703134536743
    2. ' participant' → logprob: -1.4460703134536743
    3. ' remaining' → logprob: -1.9460703134536743
    4. 'participant' → logprob: -3.8210701942443848
    5. 'self' → logprob: -3.9460701942443848
    6. 'Participant' → logprob: -5.321070194244385
    7. 'remaining' → logprob: -5.571070194244385
    8. '(self' → logprob: -5.821070194244385
    9. '   ' → logprob: -5.946070194244385
    10. ' ' → logprob: -8.196070671081543

Token 258: ' participant' (ID: 34893)
  Prédit: ' participant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' participant' → logprob: -0.4881647229194641
    2. 'participant' → logprob: -1.2381646633148193
    3. ' self' → logprob: -2.7381646633148193
    4. 'self' → logprob: -3.4881646633148193
    5. 'Participant' → logprob: -7.613164901733398
    6. '(self' → logprob: -8.113164901733398
    7. '   ' → logprob: -8.863164901733398
    8. ' participante' → logprob: -10.113164901733398
    9. ' ' → logprob: -10.363164901733398
    10. ' Participant' → logprob: -11.238164901733398

Token 259: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04755496606230736
    2. ' return' → logprob: -3.4225549697875977
    3. 'return' → logprob: -4.297554969787598
    4. '        
' → logprob: -9.172554969787598
    5. ',' → logprob: -10.422554969787598
    6. '.return' → logprob: -11.172554969787598
    7. '   ' → logprob: -11.797554969787598
    8. '
' → logprob: -11.797554969787598
    9. '.' → logprob: -12.047554969787598
    10. '        ' → logprob: -12.172554969787598

Token 260: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025094281882047653
    2. 'return' → logprob: -6.627509593963623
    3. ' return' → logprob: -6.752509593963623
    4. '   ' → logprob: -11.252509117126465
    5. '           ' → logprob: -14.752509117126465
    6. '      ' → logprob: -15.127509117126465
    7. '	' → logprob: -15.252509117126465
    8. '        
' → logprob: -15.377509117126465
    9. '```' → logprob: -15.377509117126465
    10. '	return' → logprob: -15.627509117126465

Token 261: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005368698853999376
    2. ' return' → logprob: -5.380368709564209
    3. '       ' → logprob: -7.255368709564209
    4. 'winner' → logprob: -10.13036823272705
    5. ' winner' → logprob: -13.88036823272705
    6. '   ' → logprob: -14.75536823272705
    7. '```' → logprob: -15.75536823272705
    8. ' ' → logprob: -16.005369186401367
    9. '	return' → logprob: -16.130369186401367
    10. 'remaining' → logprob: -16.880369186401367

Token 262: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3868740200996399
    2. 'self' → logprob: -1.1368739604949951
    3. ' ' → logprob: -13.761874198913574
    4. '(self' → logprob: -14.386874198913574
    5. ' ' → logprob: -14.761874198913574
    6. '	self' → logprob: -14.886874198913574
    7. 'elf' → logprob: -15.136874198913574
    8. '   ' → logprob: -15.886874198913574
    9. 's' → logprob: -16.636873245239258
    10. '_self' → logprob: -17.261873245239258

Token 263: '.circle' (ID: 82666)
  Prédit: '.circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.circle' → logprob: -0.00022880789765622467
    2. '.c' → logprob: -8.625228881835938
    3. '.' → logprob: -10.375228881835938
    4. ' .' → logprob: -11.125228881835938
    5. '`.' → logprob: -14.250228881835938
    6. '.current' → logprob: -14.500228881835938
    7. '.circular' → logprob: -15.000228881835938
    8. '.cur' → logprob: -15.500228881835938
    9. 'circle' → logprob: -15.750228881835938
    10. '.square' → logprob: -15.875228881835938

Token 264: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.018172185868024826
    2. '.part' → logprob: -4.018172264099121
    3. '.' → logprob: -11.143172264099121
    4. ' .' → logprob: -12.768172264099121
    5. '.parts' → logprob: -13.393172264099121
    6. 'participants' → logprob: -13.893172264099121
    7. '.remove' → logprob: -14.393172264099121
    8. '.ge' → logprob: -14.643172264099121
    9. '.p' → logprob: -15.018172264099121
    10. '   ' → logprob: -16.018171310424805

Token 265: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -6.704273118884885e-07
    2. '_a' → logprob: -14.625000953674316
    3. '_' → logprob: -17.25
    4. '_att' → logprob: -17.75
    5. ')_' → logprob: -17.75
    6. '_as' → logprob: -18.5
    7. '_part' → logprob: -19.0
    8. '._' → logprob: -19.125
    9. '__' → logprob: -19.125
    10. '_all' → logprob: -19.25

Token 266: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.939851037808694e-05
    2. '0' → logprob: -10.625029563903809
    3. '(
' → logprob: -12.875029563903809
    4. ' (' → logprob: -14.000029563903809
    5. 'current' → logprob: -14.125029563903809
    6. '(current' → logprob: -14.250029563903809
    7. '```' → logprob: -16.125028610229492
    8. '()(' → logprob: -16.875028610229492
    9. '("("' → logprob: -17.500028610229492
    10. ''(' → logprob: -17.875028610229492

Token 267: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. 'current' → logprob: -17.375003814697266
    4. '
' → logprob: -18.250003814697266
    5. '   ' → logprob: -18.500003814697266
    6. ')' → logprob: -18.750003814697266
    7. '(' → logprob: -19.125003814697266
    8. '۰' → logprob: -19.750003814697266
    9. '  ' → logprob: -20.000003814697266
    10. '```' → logprob: -20.750003814697266

Token 268: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007133854669518769
    2. ').' → logprob: -7.375713348388672
    3. ' )' → logprob: -9.875713348388672
    4. '())' → logprob: -10.375713348388672
    5. '()' → logprob: -13.125713348388672
    6. ')
' → logprob: -14.500713348388672
    7. '))' → logprob: -14.625713348388672
    8. ')`' → logprob: -15.250713348388672
    9. '<|end|>' → logprob: -15.375713348388672
    10. ')return' → logprob: -15.750713348388672

Token 269: 'identifier' (ID: 32535)
  Prédit: 'identifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'identifier' → logprob: -1.9361264946837764e-07
    2. ' identifier' → logprob: -17.0
    3. 'identi' → logprob: -17.0
    4. '.identifier' → logprob: -17.25
    5. 'participant' → logprob: -17.25
    6. 'identity' → logprob: -17.5
    7. 'iden' → logprob: -18.0
    8. 'ident' → logprob: -18.125
    9. 'id' → logprob: -18.25
    10. '_identifier' → logprob: -18.625

Token 270: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 271: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 272: ' Joseph' (ID: 26122)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.5086987614631653
    2. ' Test' → logprob: -2.1336987018585205
    3. ' Joseph' → logprob: -2.3836987018585205
    4. ' ' → logprob: -3.2586987018585205
    5. ' Game' → logprob: -3.3836987018585205
    6. ' Tournament' → logprob: -3.5086987018585205
    7. ' J' → logprob: -4.0086989402771
    8. ' Solver' → logprob: -4.3836989402771
    9. 'Solution' → logprob: -4.8836989402771
    10. ' Simulator' → logprob: -5.1336989402771

Token 273: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.00524098752066493
    2. 'Game' → logprob: -5.5052409172058105
    3. 'uc' → logprob: -8.755241394042969
    4. 'Runner' → logprob: -9.005241394042969
    5. 'os' → logprob: -9.130241394042969
    6. 'User' → logprob: -9.880241394042969
    7. 'Tester' → logprob: -10.130241394042969
    8. 'Test' → logprob: -10.130241394042969
    9. 'usi' → logprob: -10.505241394042969
    10. 'US' → logprob: -10.505241394042969

Token 274: 'Solver' (ID: 70484)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.6337956190109253
    2. 'Solver' → logprob: -0.8837956190109253
    3. 'Simulator' → logprob: -4.008795738220215
    4. 'Variant' → logprob: -4.258795738220215
    5. 'Problem' → logprob: -4.508795738220215
    6. 'Test' → logprob: -5.633795738220215
    7. 'Solution' → logprob: -5.758795738220215
    8. 'Simulation' → logprob: -5.883795738220215
    9. 'Result' → logprob: -7.758795738220215
    10. 'Permutation' → logprob: -7.758795738220215

Token 275: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015353354392573237
    2. ':
' → logprob: -6.751535415649414
    3. ' :' → logprob: -8.001535415649414
    4. '(' → logprob: -10.876535415649414
    5. '(object' → logprob: -13.126535415649414
    6. ':

' → logprob: -13.501535415649414
    7. ' :
' → logprob: -13.501535415649414
    8. '(J' → logprob: -13.626535415649414
    9. '<|end|>' → logprob: -13.876535415649414
    10. '   ' → logprob: -14.501535415649414

Token 276: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09266442805528641
    2. ' def' → logprob: -2.4676644802093506
    3. 'def' → logprob: -5.8426642417907715
    4. '	def' → logprob: -8.34266471862793
    5. ' ' → logprob: -8.84266471862793
    6. '
' → logprob: -8.84266471862793
    7. '    
' → logprob: -9.21766471862793
    8. '<|end|>' → logprob: -9.96766471862793
    9. ':' → logprob: -10.34266471862793
    10. ':
' → logprob: -10.46766471862793

Token 277: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.12738800048828125
    2. 'def' (adapté à ' def') → logprob: -2.1273880004882812
    3. '@' → logprob: -8.502388000488281
    4. ' @' → logprob: -8.752388000488281
    5. '   ' → logprob: -9.252388000488281
    6. ' ' → logprob: -13.502388000488281
    7. 'staticmethod' → logprob: -13.877388000488281
    8. ' static' → logprob: -15.502388000488281
    9. 'static' → logprob: -16.12738800048828
    10. '	def' → logprob: -16.12738800048828

Token 278: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.7552381753921509
    2. ' def' → logprob: -0.8802381753921509
    3. 'def' → logprob: -2.5052380561828613
    4. ' __' → logprob: -3.7552380561828613
    5. '__' → logprob: -4.880238056182861
    6. ' init' → logprob: -6.380238056182861
    7. '_init' → logprob: -7.505238056182861
    8. 'staticmethod' → logprob: -8.00523853302002
    9. 'static' → logprob: -10.25523853302002
    10. ' ' → logprob: -10.38023853302002

Token 279: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.0921942703134846e-05
    2. ' init' → logprob: -12.50001049041748
    3. 'int' → logprob: -12.62501049041748
    4. '```' → logprob: -13.87501049041748
    5. 'def' → logprob: -14.37501049041748
    6. 'new' → logprob: -14.50001049041748
    7. 'i' → logprob: -14.62501049041748
    8. '__' → logprob: -14.87501049041748
    9. '_init' → logprob: -15.12501049041748
    10. 'ini' → logprob: -15.87501049041748

Token 280: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03543969243764877
    2. '__(' → logprob: -3.4104397296905518
    3. '(' → logprob: -7.035439491271973
    4. ' (' → logprob: -7.285439491271973
    5. '   ' → logprob: -9.535439491271973
    6. 'self' → logprob: -9.910439491271973
    7. '_(' → logprob: -10.035439491271973
    8. ')(' → logprob: -11.160439491271973
    9. ' ' → logprob: -11.285439491271973
    10. '__(
' → logprob: -11.910439491271973

Token 281: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009292102768085897
    2. ' self' → logprob: -7.000929355621338
    3. '
' → logprob: -11.50092887878418
    4. '   ' → logprob: -12.25092887878418
    5. '  ' → logprob: -14.37592887878418
    6. '       ' → logprob: -14.62592887878418
    7. ',' → logprob: -14.87592887878418
    8. ' ' → logprob: -15.00092887878418
    9. '(self' → logprob: -15.00092887878418
    10. ')' → logprob: -15.50092887878418

Token 282: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04748334735631943
    2. 'self' → logprob: -3.172483444213867
    3. '(self' → logprob: -5.922483444213867
    4. ' ,' → logprob: -7.297483444213867
    5. ' self' → logprob: -7.422483444213867
    6. ' (' → logprob: -7.922483444213867
    7. ',self' → logprob: -9.547483444213867
    8. '   ' → logprob: -9.797483444213867
    9. ')' → logprob: -11.422483444213867
    10. '(' → logprob: -12.797483444213867

Token 283: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005333751323632896
    2. 'n' → logprob: -8.250533103942871
    3. ' self' → logprob: -8.250533103942871
    4. '       ' → logprob: -12.250533103942871
    5. '(self' → logprob: -13.000533103942871
    6. '   ' → logprob: -13.125533103942871
    7. ' ' → logprob: -14.625533103942871
    8. '1' → logprob: -15.125533103942871
    9. '0' → logprob: -15.250533103942871
    10. ' n' → logprob: -15.375533103942871

Token 284: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33811450004577637
    2. ' pass' → logprob: -1.8381145000457764
    3. 'pass' → logprob: -2.3381145000457764
    4. 'self' (adapté à ' self') → logprob: -3.5881145000457764
    5. ' self' → logprob: -5.7131147384643555
    6. '   ' → logprob: -8.588114738464355
    7. 'def' → logprob: -9.963114738464355
    8. '	pass' → logprob: -10.463114738464355
    9. ' None' → logprob: -11.338114738464355
    10. 'None' → logprob: -12.088114738464355

Token 285: '.games' (ID: 84489)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4666764736175537
    2. '.n' → logprob: -1.4666764736175537
    3. '.results' → logprob: -3.5916764736175537
    4. ' .' → logprob: -4.091676712036133
    5. '.game' → logprob: -4.216676712036133
    6. 'def' → logprob: -4.341676712036133
    7. '.games' → logprob: -4.466676712036133
    8. '.j' → logprob: -4.466676712036133
    9. 'n' → logprob: -4.841676712036133
    10. '.def' → logprob: -5.216676712036133

Token 286: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03853277117013931
    2. '=' → logprob: -3.2885327339172363
    3. '=[]' → logprob: -7.663532733917236
    4. ' ' → logprob: -11.413533210754395
    5. '<|end|>' → logprob: -12.538533210754395
    6. '={}' → logprob: -13.288533210754395
    7. '[' → logprob: -13.538533210754395
    8. '[]' → logprob: -14.288533210754395
    9. '=[]
' → logprob: -14.413533210754395
    10. ' =[' → logprob: -14.788533210754395

Token 287: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1602477878332138
    2. ' []' → logprob: -1.910247802734375
    3. '[' → logprob: -11.160247802734375
    4. '[]
' → logprob: -12.160247802734375
    5. '[]}' → logprob: -13.285247802734375
    6. '{}' → logprob: -13.535247802734375
    7. '[]>' → logprob: -14.910247802734375
    8. ' []
' → logprob: -15.785247802734375
    9. '[]

' → logprob: -15.785247802734375
    10. ' {}' → logprob: -15.910247802734375

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031316096428781748
    2. ' def' → logprob: -6.37813138961792
    3. '    
' → logprob: -7.62813138961792
    4. 'def' → logprob: -7.62813138961792
    5. '
' → logprob: -8.128131866455078
    6. '<|end|>' → logprob: -9.003131866455078
    7. ' 
' → logprob: -11.128131866455078
    8. '        
' → logprob: -12.128131866455078
    9. '<|end|>' → logprob: -12.128131866455078
    10. '	def' → logprob: -12.253131866455078

Token 289: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.008690676651895046
    2. ' def' → logprob: -4.75869083404541
    3. '   ' → logprob: -9.50869083404541
    4. 'd' → logprob: -14.00869083404541
    5. 'de' → logprob: -14.50869083404541
    6. ' ' → logprob: -15.00869083404541
    7. '
' → logprob: -15.25869083404541
    8. '	def' → logprob: -16.508689880371094
    9. '    
' → logprob: -17.508689880371094
    10. '  ' → logprob: -18.258689880371094

Token 290: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.049090176820755005
    2. ' add' → logprob: -3.0490901470184326
    3. 'solve' → logprob: -8.174090385437012
    4. 'create' → logprob: -8.799090385437012
    5. ' solve' → logprob: -10.549090385437012
    6. 'adde' → logprob: -11.549090385437012
    7. ' create' → logprob: -11.674090385437012
    8. 'run' → logprob: -11.924090385437012
    9. 'a' → logprob: -12.674090385437012
    10. 'play' → logprob: -13.299090385437012

Token 291: '_game' (ID: 41386)
  Prédit: '_game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_game' → logprob: -0.05791270360350609
    2. '(' → logprob: -2.932912588119507
    3. '(game' → logprob: -6.432912826538086
    4. '(self' → logprob: -6.682912826538086
    5. '(
' → logprob: -10.307912826538086
    6. 'game' → logprob: -10.307912826538086
    7. '_' → logprob: -10.557912826538086
    8. 'Game' → logprob: -10.932912826538086
    9. '(Game' → logprob: -11.057912826538086
    10. ' (' → logprob: -11.182912826538086

Token 292: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0019442226039245725
    2. '(' → logprob: -6.251944065093994
    3. '(
' → logprob: -11.376944541931152
    4. '(s' → logprob: -13.126944541931152
    5. 'self' → logprob: -14.001944541931152
    6. ' (' → logprob: -14.251944541931152
    7. '(sel' → logprob: -15.251944541931152
    8. '(n' → logprob: -15.626944541931152
    9. '<|end|>' → logprob: -17.251943588256836
    10. '	self' → logprob: -17.501943588256836

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011403702199459076
    2. ' ,' → logprob: -4.886403560638428
    3. ',n' → logprob: -5.636403560638428
    4. '(n' → logprob: -9.511404037475586
    5. 'self' → logprob: -10.011404037475586
    6. ',self' → logprob: -10.386404037475586
    7. '(self' → logprob: -10.511404037475586
    8. '(' → logprob: -11.636404037475586
    9. ',s' → logprob: -11.636404037475586
    10. ')' → logprob: -12.511404037475586

Token 294: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.016779717057943344
    2. 'self' → logprob: -4.391779899597168
    3. ' n' → logprob: -5.516779899597168
    4. ' self' → logprob: -8.391779899597168
    5. ',' → logprob: -12.391779899597168
    6. ',n' → logprob: -12.766779899597168
    7. '<|end|>' → logprob: -13.141779899597168
    8. ')n' → logprob: -13.766779899597168
    9. '	n' → logprob: -14.016779899597168
    10. '   ' → logprob: -14.016779899597168

Token 295: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001005630983854644
    2. ' ,' → logprob: -9.375100135803223
    3. '‌,' → logprob: -12.250100135803223
    4. ',n' → logprob: -12.750100135803223
    5. ',m' → logprob: -12.875100135803223
    6. '=' → logprob: -13.500100135803223
    7. '<|end|>' → logprob: -13.875100135803223
    8. ':' → logprob: -14.500100135803223
    9. ',
' → logprob: -14.500100135803223
    10. ',int' → logprob: -14.875100135803223

Token 296: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.11899606883525848
    2. ' int' → logprob: -2.3689961433410645
    3. ',' → logprob: -4.2439961433410645
    4. ',int' → logprob: -6.1189961433410645
    5. '<|end|>' → logprob: -6.9939961433410645
    6. ' ,' → logprob: -7.1189961433410645
    7. ' ' → logprob: -8.493995666503906
    8. ':int' → logprob: -10.118995666503906
    9. 'n' → logprob: -10.368995666503906
    10. ' n' → logprob: -11.243995666503906

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.41866585687967e-06
    2. ' ,' → logprob: -12.125008583068848
    3. '‌,' → logprob: -13.500008583068848
    4. ',m' → logprob: -13.625008583068848
    5. ',n' → logprob: -15.750008583068848
    6. ',
' → logprob: -16.50000762939453
    7. 'm' → logprob: -16.62500762939453
    8. ')' → logprob: -17.25000762939453
    9. '‍,' → logprob: -17.37500762939453
    10. '   ' → logprob: -18.12500762939453

Token 298: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.16022889316082
    2. 'm' → logprob: -1.9102288484573364
    3. ' ' → logprob: -12.785228729248047
    4. '    ' → logprob: -13.535228729248047
    5. '   ' → logprob: -15.660228729248047
    6. '	m' → logprob: -15.910228729248047
    7. ' 
' → logprob: -16.160228729248047
    8. ' ' → logprob: -16.785228729248047
    9. '     ' → logprob: -17.160228729248047
    10. '  ' → logprob: -17.347728729248047

Token 299: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01167214009910822
    2. '):
' → logprob: -4.761672019958496
    3. ')' → logprob: -6.011672019958496
    4. ',' → logprob: -8.011672019958496
    5. ':' → logprob: -8.386672019958496
    6. '):
' → logprob: -11.136672019958496
    7. ' ):' → logprob: -11.136672019958496
    8. '):

' → logprob: -12.386672019958496
    9. ' ' → logprob: -12.761672019958496
    10. '   ' → logprob: -13.136672019958496

Token 300: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6617261171340942
    2. ')' → logprob: -1.6617261171340942
    3. ' int' → logprob: -1.7867261171340942
    4. '):
' → logprob: -2.6617259979248047
    5. ' )' → logprob: -3.7867259979248047
    6. ' ' → logprob: -4.536725997924805
    7. '1' → logprob: -4.661725997924805
    8. ' ):
' → logprob: -4.911725997924805
    9. '<|end|>' → logprob: -5.661725997924805
    10. '):' → logprob: -6.661725997924805

Token 301: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.577830970287323
    2. '):
' → logprob: -0.827830970287323
    3. ')' → logprob: -6.327830791473389
    4. '):
' → logprob: -9.452831268310547
    5. '   ' → logprob: -11.577831268310547
    6. '):

' → logprob: -12.202831268310547
    7. ' ):' → logprob: -12.577831268310547
    8. ' ):
' → logprob: -12.827831268310547
    9. '       ' → logprob: -13.202831268310547
    10. ' ' → logprob: -13.952831268310547

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00035083942930214107
    2. 'self' → logprob: -8.250350952148438
    3. ' self' → logprob: -9.750350952148438
    4. ',' → logprob: -11.500350952148438
    5. '
' → logprob: -12.125350952148438
    6. '```' → logprob: -12.250350952148438
    7. '        
' → logprob: -12.500350952148438
    8. '   ' → logprob: -12.875350952148438
    9. ')' → logprob: -13.875350952148438
    10. '):
' → logprob: -14.500350952148438

Token 303: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.23310086131095886
    2. ' self' → logprob: -1.9831008911132812
    3. 'game' → logprob: -3.1081008911132812
    4. '       ' → logprob: -3.9831008911132812
    5. ' game' → logprob: -4.983100891113281
    6. 'new' → logprob: -9.733100891113281
    7. ' new' → logprob: -10.483100891113281
    8. '   ' → logprob: -11.858100891113281
    9. '	self' → logprob: -12.233100891113281
    10. ' ' → logprob: -12.483100891113281

Token 304: '.games' (ID: 84489)
  Prédit: '.games'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.games' → logprob: -3.0948158382670954e-05
    2. ' .' → logprob: -11.375030517578125
    3. '.' → logprob: -11.750030517578125
    4. '.game' → logprob: -12.375030517578125
    5. '.g' → logprob: -12.875030517578125
    6. 'games' → logprob: -13.750030517578125
    7. '   ' → logprob: -13.875030517578125
    8. '.gameserver' → logprob: -14.500030517578125
    9. '.jobs' → logprob: -14.625030517578125
    10. '
' → logprob: -15.625030517578125

Token 305: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005604196921922266
    2. '.' → logprob: -7.500560283660889
    3. '.app' → logprob: -12.875560760498047
    4. ' .' → logprob: -12.875560760498047
    5. '.ap' → logprob: -13.500560760498047
    6. '.push' → logprob: -15.500560760498047
    7. ' =' → logprob: -15.500560760498047
    8. '=' → logprob: -15.750560760498047
    9. '.add' → logprob: -15.875560760498047
    10. '.extend' → logprob: -15.875560760498047

Token 306: '(J' (ID: 25268)
  Prédit: '(J'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(J' → logprob: -0.0036898592952638865
    2. '(' → logprob: -5.628689765930176
    3. '((' → logprob: -9.503689765930176
    4. '(
' → logprob: -11.378689765930176
    5. '(j' → logprob: -13.003689765930176
    6. ' (' → logprob: -14.753689765930176
    7. '(

' → logprob: -15.378689765930176
    8. 'Joseph' → logprob: -15.753689765930176
    9. '(C' → logprob: -16.253690719604492
    10. '(JS' → logprob: -16.378690719604492

Token 307: 'ose' (ID: 918)
  Prédit: 'ose'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ose' → logprob: -0.0013717879774048924
    2. 'Joseph' → logprob: -7.12637186050415
    3. 'osph' → logprob: -8.376371383666992
    4. '(' → logprob: -8.751371383666992
    5. '   ' → logprob: -9.876371383666992
    6. 'os' → logprob: -10.251371383666992
    7. '```' → logprob: -10.501371383666992
    8. '[' → logprob: -11.251371383666992
    9. 'OSE' → logprob: -11.501371383666992
    10. 'O' → logprob: -12.376371383666992

Token 308: 'ph' (ID: 961)
  Prédit: 'ph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ph' → logprob: -0.803220272064209
    2. 'us' → logprob: -1.678220272064209
    3. 'bus' → logprob: -1.678220272064209
    4. 'sus' → logprob: -2.178220272064209
    5. 'pus' → logprob: -2.928220272064209
    6. 'hus' → logprob: -5.678220272064209
    7. 'vus' → logprob: -6.428220272064209
    8. 'fus' → logprob: -6.428220272064209
    9. 'Bus' → logprob: -7.053220272064209
    10. 'Game' → logprob: -7.303220272064209

Token 309: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.0004733294772449881
    2. 'Game' → logprob: -7.750473499298096
    3. 'uc' → logprob: -11.375473022460938
    4. 'u' → logprob: -11.625473022460938
    5. 'os' → logprob: -12.625473022460938
    6. 'Bus' → logprob: -12.750473022460938
    7. 'uz' → logprob: -13.125473022460938
    8. 'Us' → logprob: -13.125473022460938
    9. '   ' → logprob: -13.250473022460938
    10. 'usz' → logprob: -13.250473022460938

Token 310: 'Game' (ID: 6627)
  Prédit: 'Game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -3.054500666621607e-06
    2. 'Gam' → logprob: -13.00000286102295
    3. 'G' → logprob: -15.12500286102295
    4. '(Game' → logprob: -15.25000286102295
    5. ' Game' → logprob: -16.750003814697266
    6. 'Games' → logprob: -17.000003814697266
    7. 'Ga' → logprob: -17.250003814697266
    8. 'game' → logprob: -17.875003814697266
    9. '(' → logprob: -18.000003814697266
    10. '<Game' → logprob: -18.000003814697266

Token 311: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0622255802154541
    2. '(' → logprob: -2.812225580215454
    3. '(
' → logprob: -8.312225341796875
    4. ' (' → logprob: -11.562225341796875
    5. ')(' → logprob: -13.312225341796875
    6. ')' → logprob: -14.687225341796875
    7. '((' → logprob: -14.687225341796875
    8. '(

' → logprob: -15.562225341796875
    9. '(
' → logprob: -16.812225341796875
    10. ')(
' → logprob: -16.812225341796875

Token 312: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012528955936431885
    2. ',m' → logprob: -4.387528896331787
    3. ' ,' → logprob: -11.262529373168945
    4. ',
' → logprob: -12.262529373168945
    5. '‌,' → logprob: -14.262529373168945
    6. 'm' → logprob: -15.512529373168945
    7. ',n' → logprob: -15.887529373168945
    8. ',M' → logprob: -15.887529373168945
    9. '       ' → logprob: -16.137529373168945
    10. ',\
' → logprob: -16.512529373168945

Token 313: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.10021809488534927
    2. 'm' → logprob: -2.3502180576324463
    3. ' 
' → logprob: -11.600217819213867
    4. ' ' → logprob: -13.850217819213867
    5. ' ' → logprob: -14.475217819213867
    6. '
' → logprob: -14.600217819213867
    7. ')m' → logprob: -15.850217819213867
    8. '<|end|>' → logprob: -17.225217819213867
    9. '' → logprob: -17.475217819213867
    10. ' ' → logprob: -17.600217819213867

Token 314: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931559443473816
    2. '))' → logprob: -0.6931559443473816
    3. '))
' → logprob: -12.193156242370605
    4. ')
' → logprob: -12.943156242370605
    5. ')))' → logprob: -14.318156242370605
    6. ' ))' → logprob: -15.193156242370605
    7. ' )' → logprob: -15.693156242370605
    8. '))

' → logprob: -16.69315528869629
    9. '),' → logprob: -16.69315528869629
    10. ').' → logprob: -17.81815528869629

Token 315: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5052216649055481
    2. 'def' → logprob: -1.0052216053009033
    3. ' def' → logprob: -3.5052216053009033
    4. '
' → logprob: -7.880221843719482
    5. '```' → logprob: -9.005221366882324
    6. '	def' → logprob: -10.130221366882324
    7. '    
' → logprob: -10.255221366882324
    8. ' ' → logprob: -10.380221366882324
    9. '  ' → logprob: -11.880221366882324
    10. '<|end|>' → logprob: -12.255221366882324

Token 316: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.8624639324116288e-06
    2. ' def' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.125001907348633
    4. '	def' → logprob: -21.875001907348633
    5. 'de' → logprob: -23.000001907348633
    6. ' ' → logprob: -23.125001907348633
    7. '```' → logprob: -23.375001907348633
    8. '
' → logprob: -24.000001907348633
    9. '    
' → logprob: -24.750001907348633
    10. ':def' → logprob: -25.250001907348633

Token 317: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.7028235197067261
    2. ' solve' → logprob: -0.8278235197067261
    3. ' play' → logprob: -3.4528236389160156
    4. 'play' → logprob: -3.5778236389160156
    5. ' run' → logprob: -5.202823638916016
    6. 'run' → logprob: -5.952823638916016
    7. 'def' → logprob: -10.077823638916016
    8. ' get' → logprob: -10.577823638916016
    9. 'get' → logprob: -11.577823638916016
    10. ' def' → logprob: -11.577823638916016

Token 318: '_all' (ID: 13305)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00248719216324389
    2. '(' → logprob: -6.0024871826171875
    3. 'self' → logprob: -12.127487182617188
    4. '(s' → logprob: -12.377487182617188
    5. '(
' → logprob: -15.002487182617188
    6. ' (' → logprob: -15.127487182617188
    7. 's' → logprob: -15.502487182617188
    8. '   ' → logprob: -15.627487182617188
    9. '(sel' → logprob: -15.627487182617188
    10. '	self' → logprob: -15.752487182617188

Token 319: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.5577775128767826e-06
    2. '(' → logprob: -12.125005722045898
    3. 'self' → logprob: -17.1250057220459
    4. '(s' → logprob: -17.1250057220459
    5. ' (' → logprob: -17.6250057220459
    6. '   ' → logprob: -17.7500057220459
    7. '(
' → logprob: -18.2500057220459
    8. '(sel' → logprob: -18.2500057220459
    9. '(Self' → logprob: -19.3750057220459
    10. '():
' → logprob: -19.8750057220459

Token 320: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07930811494588852
    2. '):
' → logprob: -2.579308032989502
    3. 'self' → logprob: -8.32930850982666
    4. ')' → logprob: -8.95430850982666
    5. '(self' → logprob: -10.95430850982666
    6. '):
' → logprob: -11.07930850982666
    7. ',' → logprob: -12.20430850982666
    8. ' ):' → logprob: -12.45430850982666
    9. '   ' → logprob: -13.20430850982666
    10. '):

' → logprob: -13.45430850982666

Token 321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006472236942499876
    2. 'results' → logprob: -5.381472110748291
    3. ' results' → logprob: -7.256472110748291
    4. 'result' → logprob: -7.256472110748291
    5. ' for' → logprob: -8.88147258758545
    6. 'for' → logprob: -9.25647258758545
    7. '[]' → logprob: -10.25647258758545
    8. ' result' → logprob: -10.38147258758545
    9. '```' → logprob: -10.38147258758545
    10. 'return' → logprob: -10.75647258758545

Token 322: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.11168975383043289
    2. ' results' → logprob: -2.361689805984497
    3. '       ' → logprob: -4.861689567565918
    4. 'return' → logprob: -5.861689567565918
    5. 'result' → logprob: -7.861689567565918
    6. ' return' → logprob: -7.986689567565918
    7. 'for' → logprob: -9.986689567565918
    8. ' for' → logprob: -10.861689567565918
    9. ' result' → logprob: -11.361689567565918
    10. 'res' → logprob: -12.111689567565918

Token 323: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07000390440225601
    2. '=' → logprob: -2.6950039863586426
    3. '=[]' → logprob: -10.820003509521484
    4. '()' → logprob: -11.070003509521484
    5. '(' → logprob: -11.445003509521484
    6. '[]' → logprob: -11.570003509521484
    7. '=[]
' → logprob: -12.820003509521484
    8. ' ' → logprob: -12.945003509521484
    9. '   ' → logprob: -13.070003509521484
    10. '_' → logprob: -13.945003509521484

Token 324: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.5811899900436401
    2. '[]' → logprob: -0.8311899900436401
    3. ' []
' → logprob: -5.83119010925293
    4. ' []' → logprob: -6.08119010925293
    5. '[' → logprob: -11.08119010925293
    6. '[]

' → logprob: -13.83119010925293
    7. ' [' → logprob: -16.08119010925293
    8. '[
' → logprob: -16.58119010925293
    9. '   ' → logprob: -16.70619010925293
    10. '[]"' → logprob: -17.33119010925293

Token 325: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01372584793716669
    2. ' for' → logprob: -4.513725757598877
    3. 'for' → logprob: -6.888725757598877
    4. '
' → logprob: -7.388725757598877
    5. '	for' → logprob: -7.638725757598877
    6. '	' → logprob: -8.263726234436035
    7. '   ' → logprob: -8.638726234436035
    8. '        
' → logprob: -9.763726234436035
    9. '    
' → logprob: -11.013726234436035
    10. '	   ' → logprob: -11.388726234436035

Token 326: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0008367887930944562
    2. ' for' → logprob: -7.2508368492126465
    3. '       ' → logprob: -9.000836372375488
    4. '	for' → logprob: -12.875836372375488
    5. '   ' → logprob: -13.875836372375488
    6. '
' → logprob: -17.375837326049805
    7. ' ' → logprob: -17.750837326049805
    8. '	' → logprob: -19.375837326049805
    9. '```' → logprob: -21.000837326049805
    10. '        
' → logprob: -21.125837326049805

Token 327: ' game' (ID: 2813)
  Prédit: ' game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' game' → logprob: -0.02975870668888092
    2. 'game' → logprob: -3.5297586917877197
    3. '	game' → logprob: -11.90475845336914
    4. '   ' → logprob: -14.02975845336914
    5. '(game' → logprob: -15.27975845336914
    6. 'g' → logprob: -16.15475845336914
    7. '       ' → logprob: -16.77975845336914
    8. ' ' → logprob: -16.77975845336914
    9. '_game' → logprob: -17.02975845336914
    10. 'Game' → logprob: -17.40475845336914

Token 328: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00044092073221690953
    2. 'in' → logprob: -7.750441074371338
    3. '	in' → logprob: -12.37544059753418
    4. ' ' → logprob: -13.00044059753418
    5. '   ' → logprob: -13.75044059753418
    6. '       ' → logprob: -14.12544059753418
    7. ',' → logprob: -15.00044059753418
    8. '        ' → logprob: -15.25044059753418
    9. ' i' → logprob: -15.75044059753418
    10. '    ' → logprob: -15.81294059753418

Token 329: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31326597929000854
    2. ' self' → logprob: -1.3132660388946533
    3. '       ' → logprob: -13.188265800476074
    4. '(self' → logprob: -13.813265800476074
    5. '	self' → logprob: -14.313265800476074
    6. '   ' → logprob: -15.563265800476074
    7. '[self' → logprob: -15.563265800476074
    8. '
' → logprob: -15.813265800476074
    9. ':self' → logprob: -17.06326675415039
    10. '        
' → logprob: -17.43826675415039

Token 330: '.games' (ID: 84489)
  Prédit: '.games'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.games' → logprob: -3.297462171758525e-05
    2. '.' → logprob: -10.750033378601074
    3. ' .' → logprob: -12.125033378601074
    4. '.game' → logprob: -12.500033378601074
    5. 'games' → logprob: -14.000033378601074
    6. '.sol' → logprob: -14.750033378601074
    7. '.g' → logprob: -15.125033378601074
    8. '.s' → logprob: -15.750033378601074
    9. '.jobs' → logprob: -15.750033378601074
    10. ' games' → logprob: -16.250032424926758

Token 331: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4293447732925415
    2. ':
' → logprob: -1.0543447732925415
    3. '           ' → logprob: -8.05434513092041
    4. '):
' → logprob: -9.17934513092041
    5. ',' → logprob: -9.55434513092041
    6. '.' → logprob: -10.05434513092041
    7. '       ' → logprob: -10.67934513092041
    8. ':
' → logprob: -10.80434513092041
    9. '<|end|>' → logprob: -11.30434513092041
    10. '():
' → logprob: -11.55434513092041

Token 332: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0029956509824842215
    2. 'results' → logprob: -5.877995491027832
    3. ' results' → logprob: -9.002995491027832
    4. '
' → logprob: -10.502995491027832
    5. '```' → logprob: -11.252995491027832
    6. '            
' → logprob: -11.502995491027832
    7. '(results' → logprob: -12.002995491027832
    8. '       ' → logprob: -12.627995491027832
    9. '	results' → logprob: -12.627995491027832
    10. 'result' → logprob: -13.877995491027832

Token 333: ' results' (ID: 4376)
  Prédit: ' results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.4764346182346344
    2. 'results' (adapté à ' results') → logprob: -0.976434588432312
    3. '           ' → logprob: -6.101434707641602
    4. '	results' → logprob: -9.726434707641602
    5. 'result' → logprob: -10.226434707641602
    6. ' result' → logprob: -12.351434707641602
    7. '               ' → logprob: -12.601434707641602
    8. '(results' → logprob: -12.601434707641602
    9. '       ' → logprob: -12.601434707641602
    10. '.results' → logprob: -13.851434707641602

Token 334: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0015031944494694471
    2. '.' → logprob: -6.501502990722656
    3. '.extend' → logprob: -14.376502990722656
    4. '.push' → logprob: -16.251502990722656
    5. '.ap' → logprob: -16.501502990722656
    6. '.app' → logprob: -16.751502990722656
    7. ' .' → logprob: -16.876502990722656
    8. 'append' → logprob: -17.626502990722656
    9. '.Append' → logprob: -18.251502990722656
    10. '.=' → logprob: -18.751502990722656

Token 335: '(game' (ID: 29509)
  Prédit: '(game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(game' → logprob: -6.0033853515051305e-05
    2. '(' → logprob: -9.750060081481934
    3. ' (' → logprob: -14.250060081481934
    4. '(
' → logprob: -14.375060081481934
    5. 'game' → logprob: -14.625060081481934
    6. ' game' → logprob: -17.000059127807617
    7. '(g' → logprob: -17.750059127807617
    8. '(Game' → logprob: -17.750059127807617
    9. '	game' → logprob: -18.875059127807617
    10. '(

' → logprob: -19.375059127807617

Token 336: '.play' (ID: 23389)
  Prédit: '.play'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.play' → logprob: -3.2855416066013277e-05
    2. '.' → logprob: -10.375032424926758
    3. ' .' → logprob: -14.000032424926758
    4. '.solve' → logprob: -15.000032424926758
    5. ').' → logprob: -15.875032424926758
    6. '	play' → logprob: -16.375032424926758
    7. 'play' → logprob: -16.500032424926758
    8. '.perform' → logprob: -17.125032424926758
    9. '.run' → logprob: -17.250032424926758
    10. '.Play' → logprob: -17.625032424926758

Token 337: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005249768029898405
    2. '()' → logprob: -5.255249977111816
    3. '())
' → logprob: -11.255249977111816
    4. '()
' → logprob: -13.755249977111816
    5. ' ())' → logprob: -14.130249977111816
    6. ')' → logprob: -14.255249977111816
    7. '())

' → logprob: -15.380249977111816
    8. '();)' → logprob: -16.0052490234375
    9. '(' → logprob: -16.2552490234375
    10. '()]' → logprob: -16.3802490234375

Token 338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008824095129966736
    2. '
' → logprob: -4.758823871612549
    3. 'return' → logprob: -9.508824348449707
    4. ' return' → logprob: -9.758824348449707
    5. '   ' → logprob: -10.883824348449707
    6. '        
' → logprob: -11.133824348449707
    7. '	return' → logprob: -11.258824348449707
    8. '	' → logprob: -11.258824348449707
    9. '```' → logprob: -11.758824348449707
    10. '
' → logprob: -12.508824348449707

Token 339: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.052375808358192444
    2. '       ' → logprob: -3.5523757934570312
    3. ' return' → logprob: -3.8023757934570312
    4. '   ' → logprob: -10.177375793457031
    5. '	return' → logprob: -11.177375793457031
    6. '
' → logprob: -13.677375793457031
    7. '	' → logprob: -15.552375793457031
    8. ' ' → logprob: -15.802375793457031
    9. '{return' → logprob: -16.67737579345703
    10. '           ' → logprob: -17.30237579345703

Token 340: ' results' (ID: 4376)
  Prédit: ' results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.20141343772411346
    2. 'results' → logprob: -1.7014133930206299
    3. '	results' → logprob: -16.701414108276367
    4. '(results' → logprob: -16.951414108276367
    5. '.results' → logprob: -20.701414108276367
    6. ' ' → logprob: -20.951414108276367
    7. ' ' → logprob: -21.326414108276367
    8. '[' → logprob: -21.451414108276367
    9. 'result' → logprob: -21.451414108276367
    10. '_results' → logprob: -21.701414108276367

Token 341: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 342: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16131427884101868
    2. 'if' → logprob: -2.4113142490386963
    3. 'def' → logprob: -3.5363142490386963
    4. 'n' → logprob: -3.9113142490386963
    5. '```' → logprob: -5.536314487457275
    6. 'j' → logprob: -6.286314487457275
    7. 'p' → logprob: -6.411314487457275
    8. 's' → logprob: -6.911314487457275
    9. 'solver' → logprob: -7.786314487457275
    10. 'g' → logprob: -8.161314010620117

Token 343: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0041435761377215385
    2. ' run' → logprob: -5.629143714904785
    3. ' solve' → logprob: -8.004143714904785
    4. '_' → logprob: -8.879143714904785
    5. ' test' → logprob: -10.004143714904785
    6. ' example' → logprob: -11.754143714904785
    7. '_main' → logprob: -12.754143714904785
    8. ' create' → logprob: -13.129143714904785
    9. ' _' → logprob: -13.254143714904785
    10. ' sample' → logprob: -13.504143714904785

Token 344: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0001029471677611582
    2. '():
' → logprob: -9.750102996826172
    3. '()' → logprob: -10.250102996826172
    4. ' ():' → logprob: -11.875102996826172
    5. '(' → logprob: -13.375102996826172
    6. '():
' → logprob: -15.250102996826172
    7. ':' → logprob: -15.750102996826172
    8. '()>' → logprob: -16.750102996826172
    9. '():

' → logprob: -17.000102996826172
    10. '_' → logprob: -17.125102996826172

Token 345: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059973012655973434
    2. ' solver' → logprob: -3.4349730014801025
    3. 'solver' → logprob: -3.6849730014801025
    4. 'import' → logprob: -7.934973239898682
    5. ' import' → logprob: -8.809972763061523
    6. 'n' → logprob: -9.184972763061523
    7. ' n' → logprob: -9.684972763061523
    8. ' js' → logprob: -10.059972763061523
    9. 'js' → logprob: -10.434972763061523
    10. '   ' → logprob: -10.434972763061523

Token 346: ' import' (ID: 1588)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.03690161556005478
    2. ' solver' → logprob: -3.5369017124176025
    3. '   ' → logprob: -5.036901473999023
    4. 'import' (adapté à ' import') → logprob: -7.911901473999023
    5. 'n' → logprob: -9.286901473999023
    6. ' n' → logprob: -9.786901473999023
    7. ' import' → logprob: -10.036901473999023
    8. 'sol' → logprob: -10.536901473999023
    9. 'num' → logprob: -11.286901473999023
    10. 'j' → logprob: -11.786901473999023

Token 347: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.018151817843317986
    2. 'sys' → logprob: -4.018151760101318
    3. '=sys' → logprob: -13.768152236938477
    4. '	sys' → logprob: -14.518152236938477
    5. '(sys' → logprob: -15.143152236938477
    6. ' argparse' → logprob: -16.143152236938477
    7. '_sys' → logprob: -17.143152236938477
    8. ' ' → logprob: -17.393152236938477
    9. 'random' → logprob: -18.643152236938477
    10. ' random' → logprob: -18.893152236938477

Token 348: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07966682314872742
    2. '    
' → logprob: -2.82966685295105
    3. '
' → logprob: -4.079666614532471
    4. 'import' → logprob: -9.204667091369629
    5. ' if' → logprob: -9.454667091369629
    6. '   
' → logprob: -9.454667091369629
    7. 'n' → logprob: -9.829667091369629
    8. '    ' → logprob: -9.954667091369629
    9. ' 
' → logprob: -10.454667091369629
    10. '     
' → logprob: -10.579667091369629

Token 349: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019576558843255043
    2. '    
' → logprob: -6.626957893371582
    3. ' lines' → logprob: -8.251957893371582
    4. ' if' → logprob: -8.876957893371582
    5. '
' → logprob: -9.626957893371582
    6. 'if' → logprob: -10.126957893371582
    7. 'n' → logprob: -10.376957893371582
    8. 'for' → logprob: -11.001957893371582
    9. ' n' → logprob: -11.251957893371582
    10. '    ' → logprob: -11.376957893371582

Token 350: ' solver' (ID: 63271)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1175864934921265
    2. ' input' → logprob: -1.1175864934921265
    3. ' lines' → logprob: -1.2425864934921265
    4. ' for' → logprob: -3.742586612701416
    5. ' if' → logprob: -4.617586612701416
    6. 'input' → logprob: -4.867586612701416
    7. ' args' → logprob: -5.367586612701416
    8. 'for' → logprob: -5.867586612701416
    9. 'args' → logprob: -5.867586612701416
    10. ' n' → logprob: -6.867586612701416

Token 351: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1635449081659317
    2. '.' → logprob: -2.2885448932647705
    3. '=' → logprob: -3.0385448932647705
    4. '.=' → logprob: -6.66354513168335
    5. '.add' → logprob: -8.663544654846191
    6. ' ' → logprob: -9.663544654846191
    7. '   ' → logprob: -11.663544654846191
    8. '.py' → logprob: -11.788544654846191
    9. ' .=' → logprob: -12.413544654846191
    10. '.solve' → logprob: -13.538544654846191

Token 352: ' Joseph' (ID: 26122)
  Prédit: ' Joseph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Joseph' → logprob: -0.5759401321411133
    2. 'Joseph' → logprob: -0.8259401321411133
    3. 'Jose' → logprob: -14.950940132141113
    4. 'Jos' → logprob: -15.450940132141113
    5. ' ' → logprob: -16.700939178466797
    6. ' jose' → logprob: -16.950939178466797
    7. ' ' → logprob: -17.325939178466797
    8. 'J' → logprob: -17.575939178466797
    9. ' Jos' → logprob: -17.950939178466797
    10. 'Joe' → logprob: -18.450939178466797

Token 353: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -2.45848218582978e-06
    2. 'os' → logprob: -13.37500286102295
    3. 'uz' → logprob: -15.37500286102295
    4. 'usz' → logprob: -15.75000286102295
    5. 'ус' → logprob: -16.250001907348633
    6. 'hus' → logprob: -16.250001907348633
    7. 'u' → logprob: -16.375001907348633
    8. '   ' → logprob: -16.500001907348633
    9. 'bus' → logprob: -17.375001907348633
    10. 'Solver' → logprob: -17.375001907348633

Token 354: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -0.00021915239631198347
    2. 'Game' → logprob: -8.500219345092773
    3. 'solver' → logprob: -11.625219345092773
    4. 'Solve' → logprob: -12.625219345092773
    5. 'Sol' → logprob: -13.250219345092773
    6. '_solver' → logprob: -14.250219345092773
    7. ' Solver' → logprob: -15.000219345092773
    8. ' solver' → logprob: -15.250219345092773
    9. 'S' → logprob: -16.000219345092773
    10. 'So' → logprob: -16.625219345092773

Token 355: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015805119648575783
    2. 'for' → logprob: -5.265805244445801
    3. '()' → logprob: -5.390805244445801
    4. '<|end|>' → logprob: -6.390805244445801
    5. '    
' → logprob: -6.640805244445801
    6. '
' → logprob: -6.765805244445801
    7. '()
' → logprob: -6.890805244445801
    8. ' for' → logprob: -8.1408052444458
    9. '<|end|>' → logprob: -8.6408052444458
    10. '(' → logprob: -9.0158052444458

Token 356: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007469143718481064
    2. ' for' → logprob: -5.382469177246094
    3. 'for' → logprob: -5.882469177246094
    4. '    
' → logprob: -10.257469177246094
    5. ' lines' → logprob: -11.382469177246094
    6. '
' → logprob: -13.007469177246094
    7. 'import' → logprob: -13.257469177246094
    8. 'n' → logprob: -13.757469177246094
    9. '	for' → logprob: -13.882469177246094
    10. '' → logprob: -14.132469177246094

Token 357: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.165775328874588
    2. ' for' → logprob: -2.1657752990722656
    3. '   ' → logprob: -3.2907752990722656
    4. ' lines' → logprob: -7.290775299072266
    5. 'lines' → logprob: -8.665775299072266
    6. 'input' → logprob: -11.915775299072266
    7. 'n' → logprob: -12.290775299072266
    8. '```' → logprob: -13.165775299072266
    9. 'data' → logprob: -13.290775299072266
    10. ' input' → logprob: -13.415775299072266

Token 358: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0008160584256984293
    2. 'line' → logprob: -7.1258158683776855
    3. '	line' → logprob: -12.000816345214844
    4. ' lin' → logprob: -13.375816345214844
    5. ' ' → logprob: -13.750816345214844
    6. ' linen' → logprob: -13.875816345214844
    7. ' _' → logprob: -14.625816345214844
    8. ' arg' → logprob: -14.625816345214844
    9. ' l' → logprob: -15.000816345214844
    10. '_line' → logprob: -15.750816345214844

Token 359: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002487787976861
    2. 'in' → logprob: -6.002487659454346
    3. '	in' → logprob: -12.752488136291504
    4. ' ' → logprob: -12.877488136291504
    5. ' i' → logprob: -13.252488136291504
    6. 's' → logprob: -14.002488136291504
    7. '_in' → logprob: -14.127488136291504
    8. 'line' → logprob: -14.877488136291504
    9. '_' → logprob: -14.877488136291504
    10. 'n' → logprob: -15.002488136291504

Token 360: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.07891688495874405
    2. 'sys' → logprob: -2.5789167881011963
    3. '=sys' → logprob: -11.203916549682617
    4. '	sys' → logprob: -11.578916549682617
    5. '(sys' → logprob: -12.578916549682617
    6. '   ' → logprob: -15.328916549682617
    7. 'import' → logprob: -15.578916549682617
    8. 'stdin' → logprob: -15.578916549682617
    9. ' ' → logprob: -17.328916549682617
    10. '_sys' → logprob: -17.578916549682617

Token 361: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00012332366895861924
    2. '.' → logprob: -9.125123023986816
    3. 'stdin' → logprob: -12.000123023986816
    4. '.argv' → logprob: -12.000123023986816
    5. '.stdout' → logprob: -14.500123023986816
    6. ' stdin' → logprob: -14.750123023986816
    7. '.std' → logprob: -14.875123023986816
    8. '(stdin' → logprob: -15.000123023986816
    9. ' .' → logprob: -15.625123023986816
    10. '.st' → logprob: -16.125123977661133

Token 362: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7333711981773376
    2. '.strip' → logprob: -0.8583711981773376
    3. ':
' → logprob: -3.3583712577819824
    4. '.readline' → logprob: -3.8583712577819824
    5. '.' → logprob: -3.9833712577819824
    6. '.rstrip' → logprob: -4.483371257781982
    7. '.readlines' → logprob: -4.983371257781982
    8. '.split' → logprob: -6.108371257781982
    9. ' in' → logprob: -7.983371257781982
    10. '   ' → logprob: -8.858370780944824

Token 363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011331788846291602
    2. '        
' → logprob: -10.125113487243652
    3. ' if' → logprob: -10.250113487243652
    4. '   ' → logprob: -11.625113487243652
    5. '    ' → logprob: -12.125113487243652
    6. ',' → logprob: -12.375113487243652
    7. ' ' → logprob: -12.625113487243652
    8. '  ' → logprob: -12.875113487243652
    9. '      ' → logprob: -12.875113487243652
    10. '<|end|>' → logprob: -13.000113487243652

Token 364: ' line' (ID: 2543)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7248825430870056
    2. ' line' → logprob: -0.8498825430870056
    3. ' if' → logprob: -2.7248826026916504
    4. ' stripped' → logprob: -4.34988260269165
    5. 'line' (adapté à ' line') → logprob: -5.22488260269165
    6. ' parts' → logprob: -6.84988260269165
    7. '   ' → logprob: -6.97488260269165
    8. ' n' → logprob: -7.97488260269165
    9. '	line' → logprob: -8.099882125854492
    10. ' tokens' → logprob: -8.224882125854492

Token 365: '=line' (ID: 192488)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10472620278596878
    2. ' =' → logprob: -2.3547263145446777
    3. '.strip' → logprob: -5.479726314544678
    4. '=line' → logprob: -8.35472583770752
    5. '.' → logprob: -9.60472583770752
    6. 'strip' → logprob: -11.47972583770752
    7. '.rstrip' → logprob: -11.60472583770752
    8. '_strip' → logprob: -11.85472583770752
    9. '.=' → logprob: -12.10472583770752
    10. '=
' → logprob: -13.22972583770752

Token 366: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.00122379744425416
    2. '.' → logprob: -6.751223564147949
    3. '.rstrip' → logprob: -9.87622356414795
    4. ' .' → logprob: -13.87622356414795
    5. '().' → logprob: -14.62622356414795
    6. 'strip' → logprob: -15.00122356414795
    7. '.split' → logprob: -15.37622356414795
    8. '.replace' → logprob: -15.62622356414795
    9. '.trim' → logprob: -15.87622356414795
    10. '.lower' → logprob: -18.501224517822266

Token 367: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03372730314731598
    2. '()
' → logprob: -3.4087274074554443
    3. '()\' → logprob: -10.158727645874023
    4. '()
' → logprob: -10.658727645874023
    5. '()

' → logprob: -11.533727645874023
    6. '();' → logprob: -13.908727645874023
    7. ' ()' → logprob: -13.908727645874023
    8. '()<' → logprob: -13.908727645874023
    9. '<|end|>' → logprob: -13.908727645874023
    10. '().' → logprob: -14.283727645874023

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02034788951277733
    2. ' if' → logprob: -4.270348072052002
    3. 'if' → logprob: -5.645348072052002
    4. '<|end|>' → logprob: -6.145348072052002
    5. ',' → logprob: -8.770347595214844
    6. '        
' → logprob: -9.270347595214844
    7. '   ' → logprob: -9.770347595214844
    8. '	' → logprob: -10.020347595214844
    9. '	if' → logprob: -10.145347595214844
    10. '<|end|>' → logprob: -10.270347595214844

Token 369: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011597906239330769
    2. ' if' → logprob: -4.511598110198975
    3. '       ' → logprob: -7.511598110198975
    4. '   ' → logprob: -13.261597633361816
    5. '	if' → logprob: -13.761597633361816
    6. 'If' → logprob: -16.011598587036133
    7. ' ' → logprob: -16.011598587036133
    8. ';if' → logprob: -16.511598587036133
    9. '        
' → logprob: -17.011598587036133
    10. '
' → logprob: -17.136598587036133

Token 370: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03408683463931084
    2. 'not' → logprob: -3.7840869426727295
    3. ' line' → logprob: -4.65908670425415
    4. 'line' → logprob: -6.65908670425415
    5. ' no' → logprob: -11.409087181091309
    6. ' ' → logprob: -11.659087181091309
    7. 'no' → logprob: -13.034087181091309
    8. ' n' → logprob: -14.534087181091309
    9. '	not' → logprob: -14.534087181091309
    10. 'n' → logprob: -14.659087181091309

Token 371: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.31326285004615784
    2. ' line' → logprob: -1.3132628202438354
    3. ' ' → logprob: -14.438262939453125
    4. '	line' → logprob: -15.438262939453125
    5. '(line' → logprob: -15.938262939453125
    6. '
' → logprob: -16.688262939453125
    7. 'lin' → logprob: -17.313262939453125
    8. 'li' → logprob: -17.688262939453125
    9. '#line' → logprob: -18.188262939453125
    10. '[line' → logprob: -18.313262939453125

Token 372: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47945013642311096
    2. ' or' → logprob: -0.9794501066207886
    3. ':
' → logprob: -5.354450225830078
    4. 'or' → logprob: -7.979450225830078
    5. '<|end|>' → logprob: -9.354450225830078
    6. ' :' → logprob: -9.604450225830078
    7. '.startswith' → logprob: -10.479450225830078
    8. ':return' → logprob: -10.604450225830078
    9. '	or' → logprob: -11.604450225830078
    10. '.' → logprob: -11.604450225830078

Token 373: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7018474340438843
    2. '           ' → logprob: -0.7018474340438843
    3. ':' → logprob: -4.951847553253174
    4. ':
' → logprob: -7.201847553253174
    5. '   ' → logprob: -7.826847553253174
    6. ',' → logprob: -8.701847076416016
    7. '          ' → logprob: -10.201847076416016
    8. '               ' → logprob: -10.326847076416016
    9. '<|end|>' → logprob: -10.451847076416016
    10. ' or' → logprob: -10.576847076416016

Token 374: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.17944538593292236
    2. ' break' → logprob: -1.9294453859329224
    3. '           ' → logprob: -4.054445266723633
    4. '       ' → logprob: -6.929445266723633
    5. '	break' → logprob: -7.929445266723633
    6. 'continue' (adapté à ' continue') → logprob: -8.429445266723633
    7. '               ' → logprob: -9.429445266723633
    8. '   ' → logprob: -10.929445266723633
    9. ' continue' → logprob: -11.304445266723633
    10. '
' → logprob: -11.304445266723633

Token 375: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000555416801944375
    2. '        
' → logprob: -7.875555515289307
    3. '   ' → logprob: -9.750555038452148
    4. '<|end|>' → logprob: -9.875555038452148
    5. '
' → logprob: -10.500555038452148
    6. '  
' → logprob: -11.875555038452148
    7. '    
' → logprob: -11.875555038452148
    8. '           ' → logprob: -12.375555038452148
    9. ',' → logprob: -12.375555038452148
    10. '      ' → logprob: -13.250555038452148

Token 376: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011272405972704291
    2. 'n' → logprob: -8.251127243041992
    3. '   ' → logprob: -8.251127243041992
    4. 'tokens' → logprob: -8.376127243041992
    5. ' n' → logprob: -9.376127243041992
    6. '        
' → logprob: -10.001127243041992
    7. ' parts' → logprob: -10.001127243041992
    8. ' if' → logprob: -10.126127243041992
    9. 'parts' → logprob: -10.251127243041992
    10. 'if' → logprob: -10.751127243041992

Token 377: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.07647369801998138
    2. 'parts' → logprob: -2.8264737129211426
    3. '       ' → logprob: -4.951473712921143
    4. ' n' → logprob: -5.576473712921143
    5. ' parts' → logprob: -6.076473712921143
    6. 'try' → logprob: -7.701473712921143
    7. 'nums' → logprob: -8.201473236083984
    8. 'tokens' → logprob: -8.826473236083984
    9. 'numbers' → logprob: -8.951473236083984
    10. '   ' → logprob: -9.826473236083984

Token 378: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020556485280394554
    2. ',m' → logprob: -3.8955564498901367
    3. ' ,' → logprob: -11.770556449890137
    4. 'm' → logprob: -13.520556449890137
    5. ',\
' → logprob: -13.895556449890137
    6. ',M' → logprob: -14.020556449890137
    7. '‌,' → logprob: -14.145556449890137
    8. ',int' → logprob: -14.395556449890137
    9. ',
' → logprob: -14.645556449890137
    10. ',",' → logprob: -15.020556449890137

Token 379: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.251949667930603
    2. ' =' → logprob: -1.501949667930603
    3. '=line' → logprob: -11.126949310302734
    4. ',' → logprob: -12.751949310302734
    5. '=int' → logprob: -13.376949310302734
    6. '=input' → logprob: -14.751949310302734
    7. '＝' → logprob: -15.251949310302734
    8. '=n' → logprob: -16.251949310302734
    9. '=

' → logprob: -16.376949310302734
    10. '=parse' → logprob: -16.376949310302734

Token 380: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.5848336219787598
    2. 'map' → logprob: -0.8348336219787598
    3. ' line' → logprob: -5.33483362197876
    4. 'line' → logprob: -5.58483362197876
    5. '[line' → logprob: -8.334833145141602
    6. ' [' → logprob: -11.084833145141602
    7. '[' → logprob: -11.584833145141602
    8. '(map' → logprob: -12.334833145141602
    9. '	map' → logprob: -12.584833145141602
    10. ' ' → logprob: -13.334833145141602

Token 381: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0017822833033278584
    2. '(' → logprob: -7.001782417297363
    3. '(str' → logprob: -7.126782417297363
    4. '(lambda' → logprob: -10.001782417297363
    5. 'int' → logprob: -11.126782417297363
    6. '(in' → logprob: -13.001782417297363
    7. '(eval' → logprob: -13.501782417297363
    8. '(line' → logprob: -13.751782417297363
    9. '[int' → logprob: -14.501782417297363
    10. '(tuple' → logprob: -14.501782417297363

Token 382: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.000217006730963476
    2. '(' → logprob: -9.50021743774414
    3. ')' → logprob: -9.50021743774414
    4. ',line' → logprob: -10.12521743774414
    5. ' line' → logprob: -11.37521743774414
    6. '=line' → logprob: -12.00021743774414
    7. '[line' → logprob: -12.50021743774414
    8. 'line' → logprob: -12.75021743774414
    9. ',' → logprob: -14.37521743774414
    10. '#line' → logprob: -14.37521743774414

Token 383: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.018150296062231064
    2. ' line' → logprob: -4.018150329589844
    3. '	line' → logprob: -15.893150329589844
    4. '(line' → logprob: -16.143150329589844
    5. '[line' → logprob: -16.643150329589844
    6. '=line' → logprob: -18.143150329589844
    7. ',line' → logprob: -18.768150329589844
    8. '#line' → logprob: -19.018150329589844
    9. '   ' → logprob: -19.393150329589844
    10. '_line' → logprob: -19.893150329589844

Token 384: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.41180410981178284
    2. '().' → logprob: -1.1618040800094604
    3. '.' → logprob: -4.28680419921875
    4. '.strip' → logprob: -4.53680419921875
    5. ' .' → logprob: -9.28680419921875
    6. '.readline' → logprob: -10.53680419921875
    7. '.rstrip' → logprob: -10.66180419921875
    8. '   ' → logprob: -11.16180419921875
    9. '.replace' → logprob: -12.91180419921875
    10. '('').' → logprob: -13.16180419921875

Token 385: '())
' (ID: 4574)
  Prédit: '(',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(','' → logprob: -0.022946922108530998
    2. '(',' → logprob: -3.897946834564209
    3. '(' → logprob: -7.397946834564209
    4. '())' → logprob: -7.522946834564209
    5. '(","' → logprob: -7.647946834564209
    6. '('' → logprob: -7.772946834564209
    7. '(",' → logprob: -8.147947311401367
    8. '(',',' → logprob: -10.522947311401367
    9. '()' → logprob: -11.022947311401367
    10. '(',')
' → logprob: -11.147947311401367

Token 386: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.990154047845863e-05
    2. '   ' → logprob: -10.125049591064453
    3. '<|end|>' → logprob: -12.500049591064453
    4. '        
' → logprob: -12.875049591064453
    5. 'solver' → logprob: -13.000049591064453
    6. ' solver' → logprob: -15.125049591064453
    7. '           ' → logprob: -15.625049591064453
    8. '
' → logprob: -16.125049591064453
    9. '<|end|>' → logprob: -16.250049591064453
    10. '```' → logprob: -16.500049591064453

Token 387: ' if' (ID: 538)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.37930452823638916
    2. '       ' → logprob: -1.3793045282363892
    3. ' solver' → logprob: -2.7543044090270996
    4. '   ' → logprob: -8.879304885864258
    5. ' if' → logprob: -10.379304885864258
    6. '        
' → logprob: -10.379304885864258
    7. '_solver' → logprob: -10.504304885864258
    8. 'if' (adapté à ' if') → logprob: -11.629304885864258
    9. '           ' → logprob: -12.504304885864258
    10. 's' → logprob: -13.004304885864258

Token 388: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6931933760643005
    2. ' n' → logprob: -0.6931933760643005
    3. '(n' → logprob: -10.443193435668945
    4. ' (' → logprob: -11.693193435668945
    5. '(' → logprob: -12.318193435668945
    6. '	n' → logprob: -12.693193435668945
    7. ' ' → logprob: -14.318193435668945
    8. ' ' → logprob: -15.193193435668945
    9. '   ' → logprob: -16.443193435668945
    10. ')n' → logprob: -16.818193435668945

Token 389: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05525493249297142
    2. ' ==' → logprob: -2.9302549362182617
    3. '=' → logprob: -7.930254936218262
    4. '<=' → logprob: -12.430254936218262
    5. '==
' → logprob: -12.430254936218262
    6. ' ' → logprob: -13.305254936218262
    7. ' =' → logprob: -14.180254936218262
    8. ')==' → logprob: -14.680254936218262
    9. '===' → logprob: -14.805254936218262
    10. '0' → logprob: -14.805254936218262

Token 390: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005535095697268844
    2. ' ' → logprob: -7.500553607940674
    3. '<|end|>' → logprob: -15.875553131103516
    4. '۰' → logprob: -16.375553131103516
    5. '   ' → logprob: -16.563053131103516
    6. '```' → logprob: -17.250553131103516
    7. ' ' → logprob: -17.438053131103516
    8. '  ' → logprob: -17.500553131103516
    9. '=' → logprob: -17.875553131103516
    10. '٠' → logprob: -18.188053131103516

Token 391: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.64708495605737e-05
    2. ' ' → logprob: -9.625066757202148
    3. '۰' → logprob: -17.00006675720215
    4. '```' → logprob: -17.00006675720215
    5. 'm' → logprob: -17.25006675720215
    6. 'and' → logprob: -17.43756675720215
    7. '   ' → logprob: -17.75006675720215
    8. '=' → logprob: -17.93756675720215
    9. '  ' → logprob: -18.31256675720215
    10. ' ' → logprob: -18.50006675720215

Token 392: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16038213670253754
    2. 'and' → logprob: -1.9103821516036987
    3. ' or' → logprob: -8.785382270812988
    4. ' ' → logprob: -13.160382270812988
    5. '	and' → logprob: -13.535382270812988
    6. '   ' → logprob: -14.160382270812988
    7. ':' → logprob: -15.160382270812988
    8. ' an' → logprob: -15.410382270812988
    9. 'or' → logprob: -15.660382270812988
    10. '<|end|>' → logprob: -16.035381317138672

Token 393: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.31326285004615784
    2. 'm' → logprob: -1.3132628202438354
    3. '	m' → logprob: -14.688262939453125
    4. '   ' → logprob: -14.813262939453125
    5. ' ' → logprob: -15.688262939453125
    6. ' ' → logprob: -16.688262939453125
    7. '    ' → logprob: -16.813262939453125
    8. '  ' → logprob: -18.688262939453125
    9. '&m' → logprob: -19.875762939453125
    10. ',m' → logprob: -20.125762939453125

Token 394: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3868998885154724
    2. ' ==' → logprob: -1.1368999481201172
    3. '0' → logprob: -11.386899948120117
    4. '<|end|>' → logprob: -11.636899948120117
    5. ' ' → logprob: -12.886899948120117
    6. '=' → logprob: -13.136899948120117
    7. ')==' → logprob: -13.511899948120117
    8. '==
' → logprob: -14.636899948120117
    9. '<|end|>' → logprob: -14.636899948120117
    10. '()==' → logprob: -14.886899948120117

Token 395: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026300758123397827
    2. ' ' → logprob: -3.6513006687164307
    3. '  ' → logprob: -15.276300430297852
    4. ' ' → logprob: -16.40130043029785
    5. '   ' → logprob: -16.65130043029785
    6. '<|end|>' → logprob: -17.27630043029785
    7. '۰' → logprob: -18.46380043029785
    8. ' 
' → logprob: -18.65130043029785
    9. '  
' → logprob: -18.83880043029785
    10. '=' → logprob: -19.15130043029785

Token 396: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007114782347343862
    2. ' ' → logprob: -7.250711441040039
    3. '  ' → logprob: -14.500711441040039
    4. '   ' → logprob: -14.875711441040039
    5. '    ' → logprob: -16.12571144104004
    6. '<|end|>' → logprob: -16.43821144104004
    7. ' ' → logprob: -16.68821144104004
    8. '۰' → logprob: -17.12571144104004
    9. '     ' → logprob: -17.18821144104004
    10. '       ' → logprob: -17.50071144104004

Token 397: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10041940957307816
    2. ':
' → logprob: -2.350419521331787
    3. '       ' → logprob: -9.100419044494629
    4. '           ' → logprob: -9.350419044494629
    5. '   ' → logprob: -11.725419044494629
    6. ':
' → logprob: -13.350419044494629
    7. ':

' → logprob: -13.475419044494629
    8. ':return' → logprob: -13.600419044494629
    9. ',' → logprob: -14.600419044494629
    10. '):
' → logprob: -14.975419044494629

Token 398: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013119110371917486
    2. '       ' → logprob: -9.000131607055664
    3. '               ' → logprob: -13.125131607055664
    4. '   ' → logprob: -14.000131607055664
    5. '		' → logprob: -14.000131607055664
    6. '          ' → logprob: -14.000131607055664
    7. ' break' → logprob: -14.000131607055664
    8. 'break' → logprob: -14.000131607055664
    9. '	       ' → logprob: -14.750131607055664
    10. '
' → logprob: -15.000131607055664

Token 399: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.06774032860994339
    2. ' break' → logprob: -3.3177404403686523
    3. '           ' → logprob: -3.5677404403686523
    4. '       ' → logprob: -7.317740440368652
    5. 'return' → logprob: -8.192740440368652
    6. '	break' → logprob: -9.567740440368652
    7. '               ' → logprob: -10.692740440368652
    8. '
' → logprob: -12.442740440368652
    9. '_break' → logprob: -13.192740440368652
    10. '   ' → logprob: -13.442740440368652

Token 400: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006120019243098795
    2. '<|end|>' → logprob: -8.125612258911133
    3. '   ' → logprob: -8.625612258911133
    4. '
' → logprob: -9.500612258911133
    5. '        
' → logprob: -10.000612258911133
    6. '           ' → logprob: -12.500612258911133
    7. '<|end|>' → logprob: -12.500612258911133
    8. '  
' → logprob: -13.250612258911133
    9. '    
' → logprob: -13.500612258911133
    10. '```' → logprob: -14.250612258911133

Token 401: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017684244085103273
    2. '   ' → logprob: -8.750176429748535
    3. '<|end|>' → logprob: -11.500176429748535
    4. '        
' → logprob: -12.750176429748535
    5. '
' → logprob: -13.625176429748535
    6. '           ' → logprob: -13.750176429748535
    7. '```' → logprob: -14.000176429748535
    8. 'solver' → logprob: -14.625176429748535
    9. 's' → logprob: -15.125176429748535
    10. '      ' → logprob: -15.500176429748535

Token 402: ' solver' (ID: 63271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0942666307091713
    2. 'solver' (adapté à ' solver') → logprob: -2.844266653060913
    3. '   ' → logprob: -3.469266653060913
    4. ' solver' → logprob: -7.469266414642334
    5. '        
' → logprob: -11.344266891479492
    6. ' ' → logprob: -11.594266891479492
    7. '	s' → logprob: -11.594266891479492
    8. 's' → logprob: -11.719266891479492
    9. '_solver' → logprob: -11.844266891479492
    10. '```' → logprob: -12.219266891479492

Token 403: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -5.073596548754722e-05
    2. '.' → logprob: -10.00005054473877
    3. '.append' → logprob: -12.50005054473877
    4. '.setdefault' → logprob: -14.75005054473877
    5. '.enqueue' → logprob: -15.12505054473877
    6. '.Add' → logprob: -16.125051498413086
    7. '   ' → logprob: -16.250051498413086
    8. '.writerow' → logprob: -16.250051498413086
    9. ' .' → logprob: -16.375051498413086
    10. '.ad' → logprob: -17.000051498413086

Token 404: '_game' (ID: 41386)
  Prédit: '_game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_game' → logprob: -4.60414821645827e-06
    2. '_' → logprob: -12.500004768371582
    3. '_g' → logprob: -15.500004768371582
    4. '_games' → logprob: -15.625004768371582
    5. '```' → logprob: -16.625003814697266
    6. ' _' → logprob: -16.750003814697266
    7. '
' → logprob: -17.125003814697266
    8. '(game' → logprob: -17.250003814697266
    9. '_Game' → logprob: -17.375003814697266
    10. 'game' → logprob: -17.500003814697266

Token 405: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.660315895918757e-05
    2. '(' → logprob: -9.500076293945312
    3. '(
' → logprob: -13.375076293945312
    4. '(m' → logprob: -16.500076293945312
    5. ' (' → logprob: -16.750076293945312
    6. '((' → logprob: -17.000076293945312
    7. 'n' → logprob: -17.000076293945312
    8. '(
' → logprob: -20.875076293945312
    9. 'm' → logprob: -21.125076293945312
    10. '(

' → logprob: -21.125076293945312

Token 406: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01610112003982067
    2. ',m' → logprob: -4.141100883483887
    3. ' ,' → logprob: -10.016100883483887
    4. ',
' → logprob: -11.016100883483887
    5. 'm' → logprob: -13.391100883483887
    6. ',

' → logprob: -13.516100883483887
    7. '‌,' → logprob: -14.391100883483887
    8. ',n' → logprob: -14.891100883483887
    9. '   ' → logprob: -15.141100883483887
    10. ',",' → logprob: -15.266100883483887

Token 407: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03811493143439293
    2. ')
' → logprob: -3.2881150245666504
    3. '   ' → logprob: -9.663114547729492
    4. ')
' → logprob: -12.288114547729492
    5. ')

' → logprob: -12.913114547729492
    6. '       ' → logprob: -13.788114547729492
    7. ')\
' → logprob: -14.913114547729492
    8. ' ' → logprob: -15.038114547729492
    9. ' )' → logprob: -15.288114547729492
    10. ')add' → logprob: -15.538114547729492

Token 408: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01008446142077446
    2. 'results' → logprob: -5.260084629058838
    3. ' results' → logprob: -6.010084629058838
    4. '
' → logprob: -6.760084629058838
    5. '    
' → logprob: -6.885084629058838
    6. 'result' → logprob: -9.76008415222168
    7. '```' → logprob: -9.88508415222168
    8. '	results' → logprob: -10.88508415222168
    9. 'print' → logprob: -11.38508415222168
    10. '        
' → logprob: -11.51008415222168

Token 409: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.23978319764137268
    2. ' results' → logprob: -1.9897831678390503
    3. '   ' → logprob: -2.61478328704834
    4. 'for' → logprob: -6.11478328704834
    5. ' for' → logprob: -7.48978328704834
    6. 'result' → logprob: -8.23978328704834
    7. '	results' → logprob: -8.98978328704834
    8. 'print' → logprob: -9.98978328704834
    9. 'outputs' → logprob: -10.61478328704834
    10. '```' → logprob: -11.11478328704834

Token 410: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11286873370409012
    2. '=' → logprob: -2.2378687858581543
    3. '_' → logprob: -10.987868309020996
    4. ' ' → logprob: -10.987868309020996
    5. '.' → logprob: -11.862868309020996
    6. ' =
' → logprob: -13.362868309020996
    7. '[:]' → logprob: -14.237868309020996
    8. '	' → logprob: -14.737868309020996
    9. '.extend' → logprob: -14.737868309020996
    10. ',' → logprob: -14.987868309020996

Token 411: ' solver' (ID: 63271)
  Prédit: ' solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solver' → logprob: -0.4740775227546692
    2. 'solver' → logprob: -0.9740775227546692
    3. 'sol' → logprob: -15.099077224731445
    4. '_solver' → logprob: -15.349077224731445
    5. 'Solver' → logprob: -17.849077224731445
    6. ' sol' → logprob: -17.849077224731445
    7. ' Solver' → logprob: -18.474077224731445
    8. 's' → logprob: -19.474077224731445
    9. '   ' → logprob: -20.224077224731445
    10. '	s' → logprob: -20.599077224731445

Token 412: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -1.9266199160483666e-05
    2. '.' → logprob: -10.875019073486328
    3. '.sol' → logprob: -15.375019073486328
    4. ' .' → logprob: -17.250019073486328
    5. '.s' → logprob: -17.875019073486328
    6. '.resolve' → logprob: -17.875019073486328
    7. '.execute' → logprob: -18.750019073486328
    8. '.findall' → logprob: -18.875019073486328
    9. '.save' → logprob: -19.125019073486328
    10. '.run' → logprob: -19.250019073486328

Token 413: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: 0.0
    2. '_' → logprob: -18.375
    3. '_ALL' → logprob: -19.75
    4. 'All' → logprob: -20.375
    5. '_All' → logprob: -20.375
    6. ' _' → logprob: -20.75
    7. '_a' → logprob: -21.5
    8. '_al' → logprob: -21.625
    9. '_
' → logprob: -22.0
    10. '__' → logprob: -22.0

Token 414: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4743249714374542
    2. '()
' → logprob: -0.9743249416351318
    3. '   ' → logprob: -8.599325180053711
    4. 'for' → logprob: -10.349325180053711
    5. ' for' → logprob: -11.099325180053711
    6. '()
' → logprob: -11.599325180053711
    7. '()

' → logprob: -12.224325180053711
    8. 'print' → logprob: -14.349325180053711
    9. '()\' → logprob: -14.599325180053711
    10. '
' → logprob: -15.224325180053711

Token 415: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007954508764669299
    2. 'for' → logprob: -7.250795364379883
    3. ' for' → logprob: -9.375795364379883
    4. '	for' → logprob: -14.500795364379883
    5. '
' → logprob: -16.750795364379883
    6. '    
' → logprob: -17.625795364379883
    7. '```' → logprob: -17.750795364379883
    8. '   ' → logprob: -18.125795364379883
    9. '       ' → logprob: -20.250795364379883
    10. '<|end|>' → logprob: -20.375795364379883

Token 416: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0021322984248399734
    2. '   ' → logprob: -6.252132415771484
    3. ' for' → logprob: -8.502132415771484
    4. '
' → logprob: -15.127132415771484
    5. '	for' → logprob: -15.127132415771484
    6. 'print' → logprob: -16.627132415771484
    7. '```' → logprob: -17.877132415771484
    8. '    
' → logprob: -18.377132415771484
    9. ' ' → logprob: -20.002132415771484
    10. '  ' → logprob: -21.002132415771484

Token 417: ' r' (ID: 428)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.04264845699071884
    2. ' result' → logprob: -3.2926485538482666
    3. 'res' → logprob: -5.5426483154296875
    4. 'r' → logprob: -7.4176483154296875
    5. ' res' → logprob: -9.917648315429688
    6. ' r' → logprob: -10.542648315429688
    7. 'winner' → logprob: -13.292648315429688
    8. '   ' → logprob: -13.542648315429688
    9. '	result' → logprob: -14.792648315429688
    10. ' winner' → logprob: -15.167648315429688

Token 418: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08030124008655548
    2. 'es' → logprob: -2.580301284790039
    3. 'in' → logprob: -6.705301284790039
    4. 'e' → logprob: -9.080301284790039
    5. ' ' → logprob: -10.080301284790039
    6. ' i' → logprob: -11.830301284790039
    7. ' es' → logprob: -11.955301284790039
    8. 'i' → logprob: -12.205301284790039
    9. '	in' → logprob: -12.580301284790039
    10. ' ' → logprob: -12.955301284790039

Token 419: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.029750484973192215
    2. ' results' → logprob: -3.5297505855560303
    3. '(results' → logprob: -17.65475082397461
    4. '	results' → logprob: -17.77975082397461
    5. '_results' → logprob: -18.90475082397461
    6. 'result' → logprob: -19.02975082397461
    7. 'Results' → logprob: -19.27975082397461
    8. '
' → logprob: -19.77975082397461
    9. '.results' → logprob: -19.90475082397461
    10. ' ' → logprob: -22.15475082397461

Token 420: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007616263465024531
    2. ':
' → logprob: -7.87576150894165
    3. 'print' → logprob: -8.000761985778809
    4. ' print' → logprob: -11.000761985778809
    5. '.print' → logprob: -11.500761985778809
    6. '   ' → logprob: -12.750761985778809
    7. ',' → logprob: -13.125761985778809
    8. '	print' → logprob: -13.250761985778809
    9. '.' → logprob: -13.375761985778809
    10. '.println' → logprob: -13.375761985778809

Token 421: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031117575708776712
    2. 'print' → logprob: -6.128111839294434
    3. ' print' → logprob: -7.003111839294434
    4. '   ' → logprob: -11.128111839294434
    5. '```' → logprob: -14.503111839294434
    6. '        
' → logprob: -15.003111839294434
    7. '	print' → logprob: -15.003111839294434
    8. '(print' → logprob: -15.003111839294434
    9. '           ' → logprob: -15.128111839294434
    10. '    
' → logprob: -15.753111839294434

Token 422: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.3856492842023727e-06
    2. '   ' → logprob: -14.000000953674316
    3. ' print' → logprob: -14.500000953674316
    4. '       ' → logprob: -19.000001907348633
    5. '	print' → logprob: -20.625001907348633
    6. 'pr' → logprob: -21.250001907348633
    7. '```' → logprob: -21.625001907348633
    8. 'println' → logprob: -22.750001907348633
    9. 'printf' → logprob: -22.875001907348633
    10. 'prin' → logprob: -23.500001907348633

Token 423: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -7.541112427134067e-05
    2. '(' → logprob: -9.500075340270996
    3. '(f' → logprob: -14.500075340270996
    4. 'r' → logprob: -18.125076293945312
    5. '(
' → logprob: -18.750076293945312
    6. '((' → logprob: -20.000076293945312
    7. '()' → logprob: -20.625076293945312
    8. ' (' → logprob: -21.250076293945312
    9. '(int' → logprob: -21.375076293945312
    10. ' r' → logprob: -21.625076293945312

Token 424: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.375000953674316
    3. '()' → logprob: -15.500000953674316
    4. ')
' → logprob: -15.875000953674316
    5. '())' → logprob: -16.625
    6. ')`' → logprob: -17.375
    7. '))' → logprob: -19.0
    8. ')}' → logprob: -19.125
    9. '),' → logprob: -20.25
    10. '}' → logprob: -20.25

Token 425: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.511406809295295e-06
    2. '```' → logprob: -12.375006675720215
    3. ' if' → logprob: -13.625006675720215
    4. 'main' → logprob: -15.000006675720215
    5. '
' → logprob: -15.125006675720215
    6. '#' → logprob: -15.750006675720215
    7. '#if' → logprob: -16.3750057220459
    8. '\' → logprob: -16.5000057220459
    9. 'i' → logprob: -16.6250057220459
    10. '<|end|>' → logprob: -16.8750057220459

Token 426: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.10155829787254333
    2. '__' → logprob: -2.601558208465576
    3. '_' → logprob: -3.851558208465576
    4. ' ' → logprob: -7.351558208465576
    5. '_name' → logprob: -7.976558208465576
    6. ' _' → logprob: -9.851558685302734
    7. ' ' → logprob: -10.351558685302734
    8. ' ' → logprob: -10.476558685302734
    9. '___' → logprob: -11.351558685302734
    10. '_space' → logprob: -11.726558685302734

Token 427: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0009657727787271142
    2. '==' → logprob: -8.00096607208252
    3. '__.__' → logprob: -8.37596607208252
    4. ' __' → logprob: -9.00096607208252
    5. ' ==' → logprob: -9.12596607208252
    6. '__.' → logprob: -9.62596607208252
    7. '.__' → logprob: -9.87596607208252
    8. '___' → logprob: -11.00096607208252
    9. '_' → logprob: -11.25096607208252
    10. '[' → logprob: -12.75096607208252

Token 428: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.630610641877865e-06
    2. '==' → logprob: -12.375006675720215
    3. '__.__' → logprob: -14.000006675720215
    4. ' ==' → logprob: -14.125006675720215
    5. '___' → logprob: -15.375006675720215
    6. '_' → logprob: -16.0000057220459
    7. '____' → logprob: -16.2500057220459
    8. '=="' → logprob: -16.3750057220459
    9. ' __' → logprob: -16.6250057220459
    10. '__.' → logprob: -16.8750057220459

Token 429: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12629476189613342
    2. ' ==' → logprob: -2.2512948513031006
    3. '==' → logprob: -4.8762946128845215
    4. '=="' → logprob: -5.2512946128845215
    5. '_' → logprob: -8.62629508972168
    6. '=='' → logprob: -9.00129508972168
    7. '___' → logprob: -9.25129508972168
    8. '__.__' → logprob: -10.37629508972168
    9. ' =="' → logprob: -11.00129508972168
    10. '.__' → logprob: -11.25129508972168

Token 430: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0032122957054525614
    2. ''' → logprob: -5.7532124519348145
    3. ' "__' → logprob: -10.378211975097656
    4. '__' → logprob: -12.753211975097656
    5. '"_' → logprob: -15.503211975097656
    6. ' '__' → logprob: -15.878211975097656
    7. '"user' → logprob: -16.253211975097656
    8. ' "' → logprob: -16.753211975097656
    9. ''"' → logprob: -17.128211975097656
    10. '"name' → logprob: -17.503211975097656

Token 431: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0031876976136118174
    2. '__' → logprob: -5.753187656402588
    3. '"' → logprob: -12.128188133239746
    4. 'name' → logprob: -12.878188133239746
    5. '_main' → logprob: -13.628188133239746
    6. ' main' → logprob: -14.878188133239746
    7. '__":
' → logprob: -15.878188133239746
    8. 'm' → logprob: -16.00318717956543
    9. ''' → logprob: -16.62818717956543
    10. 'built' → logprob: -17.00318717956543

Token 432: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.694314181804657
    2. '__":
' → logprob: -0.694314181804657
    3. '__:' → logprob: -7.319314002990723
    4. '__':
' → logprob: -7.944314002990723
    5. '__.' → logprob: -9.444314002990723
    6. '__["' → logprob: -10.319314002990723
    7. '__.__' → logprob: -10.694314002990723
    8. '__
' → logprob: -12.319314002990723
    9. '__",' → logprob: -12.944314002990723
    10. '__[' → logprob: -13.444314002990723

Token 433: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.003354639746248722
    2. ''' → logprob: -5.878354549407959
    3. '__' → logprob: -8.878355026245117
    4. '   ' → logprob: -9.003355026245117
    5. ' main' → logprob: -9.503355026245117
    6. ' "' → logprob: -9.628355026245117
    7. 'main' → logprob: -9.878355026245117
    8. ' __' → logprob: -10.503355026245117
    9. ' "__' → logprob: -10.878355026245117
    10. ' 
' → logprob: -11.253355026245117

Token 434: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0019941816572099924
    2. 'main' (adapté à ' main') → logprob: -6.2519941329956055
    3. '	main' → logprob: -9.751994132995605
    4. ' ' → logprob: -12.001994132995605
    5. '(main' → logprob: -15.001994132995605
    6. ' m' → logprob: -15.001994132995605
    7. ' ma' → logprob: -15.126994132995605
    8. '_main' → logprob: -15.626994132995605
    9. ' mains' → logprob: -16.751995086669922
    10. ' 
' → logprob: -17.251995086669922

Token 435: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4672555923461914
    2. '<|end|>' → logprob: -1.2172555923461914
    3. '
' → logprob: -3.4672555923461914
    4. '(' → logprob: -3.5922555923461914
    5. '\n' → logprob: -4.592255592346191
    6. '```' → logprob: -5.592255592346191
    7. '()
' → logprob: -6.842255592346191
    8. ')' → logprob: -6.967255592346191
    9. '#' → logprob: -7.342255592346191
    10. '\' → logprob: -7.717255592346191


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 433
Tokens correctement prédits (1ère position, stricte): 236
Tokens correctement prédits (1ère position, avec adaptation): 262
Tokens correctement prédits (top 10): 397
Précision stricte (1ère position): 54.50%
Précision adaptée (1ère position): 60.51%
Précision (top 10): 91.69%
================================================================================
