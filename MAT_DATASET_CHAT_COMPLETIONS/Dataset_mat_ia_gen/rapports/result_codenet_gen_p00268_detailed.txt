================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:21:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
from collections import deque, defaultdict

sys.setrecursionlimit(10**7)

def ccw(a, b, c):
    """Calculate the cross product sign to determine the orientation of three points"""
    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0])

def intersect(a1, a2, b1, b2):
    """Check whether two line segments a1a2 and b1b2 intersect"""
    c1 = ccw(a1, a2, b1)
    c2 = ccw(a1, a2, b2)
    c3 = ccw(b1, b2, a1)
    c4 = ccw(b1, b2, a2)
    return c1 * c2 < 0 and c3 * c4 < 0

def inside_polygon(poly, p):
    """Check if point p is inside polygon poly (convex polygon) using ray casting method"""
    x, y = p
    inside = False
    n = len(poly)
    px, py = poly[0]
    for i in range(n+1):
        nx, ny = poly[i % n]
        if ((ny > y) != (py > y)) and (x < (px - nx) * (y - ny) / (py - ny) + nx):
            inside = not inside
        px, py = nx, ny
    return inside

def build_faces(C, W, pillars, walls):
    """
    - Construct the graph of edges (walls).
    - Find all faces (rooms and the outside) of the planar graph.
    - The polygon is convex, so outer face is well defined.
    We find faces by traversing edges in order. 
    Return: list of faces, each face is a list of vertex indices in CCW order.
    """

    # Build adjacency list with sorted edges in CCW order for each vertex.
    # Sorting edges in CCW order allows us to walk faces by following next edge in order.
    adj = [[] for _ in range(C)]
    # Store edges as tuples (from, to)
    for s, t in walls:
        adj[s-1].append(t-1)
        adj[t-1].append(s-1)
    
    # Sort adjacency according to angle to vertex
    def angle(i, j):
        x1, y1 = pillars[i]
        x2, y2 = pillars[j]
        return math.atan2(y2 - y1, x2 - x1)
    for i in range(C):
        adj[i].sort(key=lambda x: angle(i, x))
    
    # To find faces, use the planar graph face walking technique:
    # For each directed edge, if not visited, walk around the face on left side.
    visited_edge = set()
    faces = []

    for u in range(C):
        for vi in adj[u]:
            if (u, vi) in visited_edge:
                continue
            face = []
            cur = u
            nxt = vi
            while True:
                visited_edge.add((cur, nxt))
                face.append(cur)
                # At nxt vertex, find the edge (nxt -> next_w) which is next CCW edge from edge (nxt->cur)
                # get adjacency list of nxt
                neighbors = adj[nxt]
                index = neighbors.index(cur)
                # Next edge is the one before 'cur' in CCW order (in the sorted list, CCW order is ascending)
                # so the next edge after (cur->nxt) is the next edge in CCW order from (nxt->cur), it is next after index
                next_index = (index - 1) % len(neighbors)
                prev = nxt
                nxt = neighbors[next_index]
                cur = prev
                if cur == u and nxt == vi:
                    break
            faces.append(face)
    return faces

def point_in_polygon(p, polygon):
    # Ray casting method (works for convex or not)
    x, y = p
    inside = False
    n = len(polygon)
    for i in range(n):
        x1, y1 = polygon[i]
        x2, y2 = polygon[(i+1) % n]
        if ((y1 > y) != (y2 > y)) and (x < (x2 - x1) * (y - y1) / (y2 - y1) + x1):
            inside = not inside
    return inside

def main():
    input = sys.stdin.readline
    while True:
        C, W = map(int, input().split())
        if C == 0 and W == 0:
            break
        pillars = [tuple(map(int, (input().split()))) for _ in range(C)]
        walls = [tuple(map(int, (input().split()))) for _ in range(W)]

        # Step 1: Find all faces (rooms + outside) in the graph formed by pillars and walls
        faces = build_faces(C, W, pillars, walls)

        # Step 2: Identify which face is outside face
        # The outside face is the face with the largest area (since polygon is convex, so outside is unbounded)
        def polygon_area(face):
            pts = [pillars[v] for v in face]
            area = 0
            n = len(pts)
            for i in range(n):
                x1, y1 = pts[i]
                x2, y2 = pts[(i+1) % n]
                area += x1 * y2 - y1 * x2
            return abs(area) / 2
        areas = [polygon_area(face) for face in faces]
        outside_index = areas.index(max(areas))

        # Step 3: Build dual graph of the faces
        # Each wall is shared by exactly two faces (or one face and outside)
        # Construct a map from edges (smaller_index, larger_index) to faces
        edge_to_faces = defaultdict(list)
        for fi, face in enumerate(faces):
            n = len(face)
            for i in range(n):
                a = face[i]
                b = face[(i+1) % n]
                edge = (min(a,b), max(a,b))
                edge_to_faces[edge].append(fi)

        # Step 4: Build adjacency list of faces
        face_graph = [[] for _ in range(len(faces))]
        for edge, f_list in edge_to_faces.items():
            if len(f_list) == 2:
                f1, f2 = f_list
                face_graph[f1].append(f2)
                face_graph[f2].append(f1)
            # else touching outside only on one face (outside), handled below

        # Step 5: From outside face, BFS to get minimum distance (#holes) to go outside for each face
        dist = [-1] * len(faces)
        dist[outside_index] = 0
        queue = deque()
        queue.append(outside_index)

        while queue:
            cur = queue.popleft()
            for nxt in face_graph[cur]:
                if dist[nxt] == -1:
                    dist[nxt] = dist[cur] + 1
                    queue.append(nxt)

        # The rooms are faces other than outside (outside face index)
        # For any room (face), the minimal holes passed to go outside is dist[face]
        # We want the maximum of dist over all rooms
        max_dist = max([dist[i] for i in range(len(faces)) if i != outside_index])
        print(max_dist)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00043126524542458355
    2. 'os' → logprob: -7.750431060791016
    3. '"os' → logprob: -15.125431060791016
    4. ' re' → logprob: -16.375431060791016
    5. ' math' → logprob: -16.625431060791016
    6. '	os' → logprob: -17.125431060791016
    7. '_os' → logprob: -17.250431060791016
    8. ' o' → logprob: -17.375431060791016
    9. ' json' → logprob: -18.000431060791016
    10. ' ' → logprob: -18.250431060791016

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.17768041789531708
    2. '\n' → logprob: -2.802680492401123
    3. '
' → logprob: -3.802680492401123
    4. 'import' → logprob: -3.927680492401123
    5. '<|end|>' → logprob: -3.927680492401123
    6. '\' → logprob: -4.552680492401123
    7. '```' → logprob: -4.927680492401123
    8. '

' → logprob: -4.927680492401123
    9. '<|end|>' → logprob: -5.052680492401123
    10. ',' → logprob: -5.802680492401123

Token 6: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.458339810371399
    2. '\n' → logprob: -1.458339810371399
    3. '.' → logprob: -1.583339810371399
    4. 'import' → logprob: -2.2083396911621094
    5. '

' → logprob: -2.3333396911621094
    6. '\' → logprob: -2.9583396911621094
    7. '```' → logprob: -3.2083396911621094
    8. '<|end|>' → logprob: -5.083339691162109
    9. ',' → logprob: -5.458339691162109
    10. '' → logprob: -5.583339691162109

Token 7: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.5595126152038574
    2. ' os' → logprob: -1.0595126152038574
    3. 'collections' → logprob: -2.8095126152038574
    4. 'os' → logprob: -4.684512615203857
    5. ' datetime' → logprob: -5.309512615203857
    6. ' itertools' → logprob: -6.059512615203857
    7. ' typing' → logprob: -6.184512615203857
    8. 'datetime' → logprob: -7.934512615203857
    9. ' pathlib' → logprob: -8.059513092041016
    10. ' numpy' → logprob: -8.059513092041016

Token 8: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.31900933384895325
    2. 'import' → logprob: -1.3190093040466309
    3. '.' → logprob: -5.319009304046631
    4. '<|end|>' → logprob: -7.944009304046631
    5. ' ' → logprob: -8.444009780883789
    6. '```' → logprob: -9.319009780883789
    7. ' defaultdict' → logprob: -10.194009780883789
    8. '_' → logprob: -10.819009780883789
    9. '	import' → logprob: -11.069009780883789
    10. ' ```' → logprob: -11.069009780883789

Token 9: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.22469760477542877
    2. ' deque' → logprob: -1.7246975898742676
    3. 'deque' → logprob: -4.474697589874268
    4. ' abc' → logprob: -4.599697589874268
    5. ' named' → logprob: -7.224697589874268
    6. ' Counter' → logprob: -7.849697589874268
    7. 'abc' → logprob: -8.349698066711426
    8. 'default' → logprob: -9.599698066711426
    9. 'named' → logprob: -9.724698066711426
    10. ' import' → logprob: -10.474698066711426

Token 10: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.645038366317749
    2. '\n' → logprob: -0.895038366317749
    3. ',' → logprob: -4.270038604736328
    4. '

' → logprob: -4.270038604736328
    5. '\' → logprob: -4.645038604736328
    6. '
' → logprob: -4.645038604736328
    7. '<|end|>' → logprob: -4.645038604736328
    8. '```' → logprob: -5.520038604736328
    9. '.' → logprob: -6.645038604736328
    10. 'newline' → logprob: -7.145038604736328

Token 11: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.4361170530319214
    2. 'default' → logprob: -1.1861170530319214
    3. 'named' → logprob: -3.311117172241211
    4. 'Counter' → logprob: -5.436117172241211
    5. ' named' → logprob: -5.561117172241211
    6. 'Ordered' → logprob: -5.811117172241211
    7. ' Counter' → logprob: -8.311117172241211
    8. ' Ordered' → logprob: -9.561117172241211
    9. 'deque' → logprob: -10.686117172241211
    10. 'Named' → logprob: -11.561117172241211

Token 12: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 13: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2645765542984009
    2. 'import' → logprob: -1.3895765542984009
    3. '```' → logprob: -2.1395764350891113
    4. 'd' → logprob: -2.3895764350891113
    5. '`' → logprob: -2.7645764350891113
    6. '\' → logprob: -3.2645764350891113
    7. ',' → logprob: -3.5145764350891113
    8. '#' → logprob: -3.6395764350891113
    9. '\n' → logprob: -3.6395764350891113
    10. '
' → logprob: -4.014576435089111

Token 14: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0683535037969705e-05
    2. ' .' → logprob: -12.62501049041748
    3. '.`' → logprob: -13.62501049041748
    4. '.import' → logprob: -14.00001049041748
    5. '.readline' → logprob: -14.25001049041748
    6. '."""' → logprob: -14.50001049041748
    7. '.​' → logprob: -14.50001049041748
    8. '.user' → logprob: -14.62501049041748
    9. '.stdout' → logprob: -15.00001049041748
    10. '.)' → logprob: -15.00001049041748

Token 15: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.5645880103111267
    2. '_' → logprob: -1.4395880699157715
    3. '_limit' → logprob: -3.3145880699157715
    4. 'limit' → logprob: -3.4395880699157715
    5. 'trace' → logprob: -3.4395880699157715
    6. '_trace' → logprob: -3.8145880699157715
    7. '_version' → logprob: -4.6895880699157715
    8. '_set' → logprob: -5.3145880699157715
    9. '_exc' → logprob: -5.4395880699157715
    10. 'set' → logprob: -5.5645880699157715

Token 16: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.004704119171947241
    2. 'ur' → logprob: -6.379703998565674
    3. 'limit' → logprob: -6.629703998565674
    4. 'urs' → logprob: -6.754703998565674
    5. 'ursive' → logprob: -8.504704475402832
    6. 'urse' → logprob: -9.004704475402832
    7. 'urf' → logprob: -9.629704475402832
    8. '_limit' → logprob: -10.379704475402832
    9. 'utf' → logprob: -10.754704475402832
    10. 't' → logprob: -10.879704475402832

Token 17: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.07900578528642654
    2. '_limit' → logprob: -2.579005718231201
    3. ' limit' → logprob: -9.70400619506836
    4. '_depth' → logprob: -10.32900619506836
    5. 'depth' → logprob: -11.45400619506836
    6. 'lim' → logprob: -12.07900619506836
    7. '_LIMIT' → logprob: -12.95400619506836
    8. 'Limit' → logprob: -14.20400619506836
    9. '.limit' → logprob: -14.57900619506836
    10. '-limit' → logprob: -14.70400619506836

Token 18: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0564331205387134e-05
    2. ' (' → logprob: -12.37501049041748
    3. '(
' → logprob: -12.50001049041748
    4. '(

' → logprob: -13.37501049041748
    5. '((' → logprob: -15.37501049041748
    6. '("("' → logprob: -15.37501049041748
    7. '```' → logprob: -15.75001049041748
    8. '(**' → logprob: -16.875011444091797
    9. '()' → logprob: -17.000011444091797
    10. '(~' → logprob: -17.125011444091797

Token 19: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.014166327193379402
    2. '100' → logprob: -4.264166355133057
    3. ' ' → logprob: -13.264165878295898
    4. '300' → logprob: -14.889165878295898
    5. '500' → logprob: -15.014165878295898
    6. '200' → logprob: -15.764165878295898
    7. '1' → logprob: -16.6391658782959
    8. '999' → logprob: -16.6391658782959
    9. '(' → logprob: -17.3891658782959
    10. 'int' → logprob: -17.5141658782959

Token 20: '**' (ID: 410)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.6244608163833618
    2. '000' → logprob: -1.1244608163833618
    3. '6' → logprob: -2.6244606971740723
    4. '0' → logprob: -3.6244606971740723
    5. '00' → logprob: -3.6244606971740723
    6. '5' → logprob: -4.624460697174072
    7. '07' → logprob: -5.999460697174072
    8. '4' → logprob: -6.874460697174072
    9. '**' → logprob: -8.12446117401123
    10. '007' → logprob: -9.24946117401123

Token 21: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0003045994380954653
    2. '9' → logprob: -8.125304222106934
    3. '8' → logprob: -12.250304222106934
    4. '6' → logprob: -12.500304222106934
    5. '**' → logprob: -18.25030517578125
    6. '```' → logprob: -19.50030517578125
    7. ' ' → logprob: -21.25030517578125
    8. '``' → logprob: -21.50030517578125
    9. '

' → logprob: -22.00030517578125
    10. '10' → logprob: -22.62530517578125

Token 22: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '))' → logprob: -15.375000953674316
    3. ' )' → logprob: -15.750000953674316
    4. ')
' → logprob: -16.375
    5. '),' → logprob: -17.875
    6. ')))' → logprob: -18.25
    7. '）' → logprob: -19.25
    8. '```' → logprob: -19.375
    9. '`)' → logprob: -19.5
    10. ')

' → logprob: -19.5

Token 23: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16440697014331818
    2. 'class' → logprob: -1.9144070148468018
    3. 'n' → logprob: -5.539406776428223
    4. 'input' → logprob: -8.664406776428223
    5. 'N' → logprob: -10.039406776428223
    6. 'MOD' → logprob: -11.914406776428223
    7. '```' → logprob: -11.914406776428223
    8. 'INF' → logprob: -11.914406776428223
    9. ' class' → logprob: -13.164406776428223
    10. '#' → logprob: -13.289406776428223

Token 24: ' cc' (ID: 22988)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.6171548962593079
    2. ' main' → logprob: -1.367154836654663
    3. ' ' → logprob: -2.117154836654663
    4. ' bfs' → logprob: -2.742154836654663
    5. ' _' → logprob: -5.117155075073242
    6. ' factorial' → logprob: -5.367155075073242
    7. ' solve' → logprob: -5.492155075073242
    8. '_' → logprob: -6.367155075073242
    9. ' factor' → logprob: -6.867155075073242
    10. ' f' → logprob: -7.117155075073242

Token 25: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00022833107504993677
    2. '_' → logprob: -9.375227928161621
    3. 't' → logprob: -10.125227928161621
    4. 'd' → logprob: -10.875227928161621
    5. 'ｗ' → logprob: -10.875227928161621
    6. 'c' → logprob: -11.375227928161621
    7. 'v' → logprob: -11.875227928161621
    8. 's' → logprob: -12.250227928161621
    9. '_w' → logprob: -12.500227928161621
    10. 'dfs' → logprob: -12.625227928161621

Token 26: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011003263061866164
    2. ' (' → logprob: -7.126100540161133
    3. '(a' → logprob: -8.751100540161133
    4. '(x' → logprob: -9.251100540161133
    5. '_' → logprob: -11.626100540161133
    6. '((' → logprob: -12.251100540161133
    7. '("("' → logprob: -12.501100540161133
    8. '(n' → logprob: -12.876100540161133
    9. '(p' → logprob: -13.126100540161133
    10. '('' → logprob: -13.501100540161133

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043233807082287967
    2. ' ,' → logprob: -8.500432014465332
    3. ',b' → logprob: -8.625432014465332
    4. ')' → logprob: -10.750432014465332
    5. ',a' → logprob: -11.000432014465332
    6. '):' → logprob: -12.625432014465332
    7. ',p' → logprob: -13.500432014465332
    8. '(' → logprob: -13.750432014465332
    9. ',)' → logprob: -13.875432014465332
    10. '_,' → logprob: -14.000432014465332

Token 28: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01815064437687397
    2. ' b' → logprob: -4.018150806427002
    3. '	b' → logprob: -15.143150329589844
    4. 'p' → logprob: -15.393150329589844
    5. '```' → logprob: -15.768150329589844
    6. ' ' → logprob: -16.393150329589844
    7. 'a' → logprob: -17.018150329589844
    8. ',b' → logprob: -17.643150329589844
    9. ',' → logprob: -18.393150329589844
    10. '   ' → logprob: -18.518150329589844

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.028536492725834e-05
    2. ' ,' → logprob: -9.750070571899414
    3. '):' → logprob: -11.500070571899414
    4. ',c' → logprob: -14.125070571899414
    5. ')' → logprob: -14.875070571899414
    6. ',a' → logprob: -15.500070571899414
    7. ',
' → logprob: -16.375070571899414
    8. ',b' → logprob: -16.500070571899414
    9. '_,' → logprob: -17.375070571899414
    10. '):
' → logprob: -17.500070571899414

Token 30: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16030403971672058
    2. ' c' → logprob: -1.910304069519043
    3. ' ' → logprob: -10.160304069519043
    4. ')' → logprob: -10.785304069519043
    5. '	c' → logprob: -11.785304069519043
    6. ')c' → logprob: -12.660304069519043
    7. '  ' → logprob: -12.910304069519043
    8. 'p' → logprob: -12.910304069519043
    9. '<|end|>' → logprob: -14.160304069519043
    10. '   ' → logprob: -14.160304069519043

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00010080150241265073
    2. ')' → logprob: -9.375101089477539
    3. '):
' → logprob: -11.625101089477539
    4. ' ):' → logprob: -12.250101089477539
    5. ':' → logprob: -13.250101089477539
    6. '):
' → logprob: -15.625101089477539
    7. ',' → logprob: -16.50010108947754
    8. ' ' → logprob: -16.87510108947754
    9. '   ' → logprob: -17.12510108947754
    10. ')):' → logprob: -17.12510108947754

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3590930998325348
    2. ':' → logprob: -1.2340930700302124
    3. '):' → logprob: -4.734093189239502
    4. ':
' → logprob: -6.984093189239502
    5. '():' → logprob: -7.859093189239502
    6. ' :' → logprob: -9.109092712402344
    7. '    ' → logprob: -9.609092712402344
    8. '):
' → logprob: -9.609092712402344
    9. '(' → logprob: -10.109092712402344
    10. '    
' → logprob: -10.234092712402344

Token 33: ' """' (ID: 9280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7936897277832031
    2. 'return' → logprob: -1.0436897277832031
    3. ' return' → logprob: -1.7936897277832031
    4. ' ' → logprob: -4.293689727783203
    5. ' x' → logprob: -4.918689727783203
    6. 'x' → logprob: -5.793689727783203
    7. ' cross' → logprob: -6.043689727783203
    8. '  ' → logprob: -7.543689727783203
    9. '	return' → logprob: -7.918689727783203
    10. '    ' → logprob: -7.918689727783203

Token 34: 'Calculate' (ID: 65570)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13798454403877258
    2. ' return' → logprob: -2.63798451423645
    3. 'return' → logprob: -3.13798451423645
    4. '    ' → logprob: -5.762984752655029
    5. ':' → logprob: -6.137984752655029
    6. '"""' → logprob: -6.262984752655029
    7. '    
' → logprob: -6.512984752655029
    8. '"""
' → logprob: -6.637984752655029
    9. ' ' → logprob: -7.637984752655029
    10. ' """' → logprob: -7.762984752655029

Token 35: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2740243077278137
    2. ' cross' → logprob: -1.774024248123169
    3. ' ' → logprob: -3.899024248123169
    4. ' area' → logprob: -4.524024486541748
    5. ' orientation' → logprob: -5.024024486541748
    6. ' counter' → logprob: -5.149024486541748
    7. '<|end|>' → logprob: -5.399024486541748
    8. ' (' → logprob: -5.774024486541748
    9. ' a' → logprob: -6.024024486541748
    10. '  ' → logprob: -6.149024486541748

Token 36: ' cross' (ID: 8088)
  Prédit: ' cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.125968798995018
    2. 'cross' → logprob: -2.3759686946868896
    3. 'cc' → logprob: -3.7509686946868896
    4. ' cc' → logprob: -7.750968933105469
    5. 'return' → logprob: -7.750968933105469
    6. ' ' → logprob: -8.125968933105469
    7. '   ' → logprob: -8.625968933105469
    8. ' return' → logprob: -8.625968933105469
    9. ' orientation' → logprob: -9.125968933105469
    10. ' area' → logprob: -9.750968933105469

Token 37: ' product' (ID: 1888)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.046196460723877
    2. ' product' → logprob: -1.046196460723877
    3. '_product' → logprob: -2.546196460723877
    4. '<|end|>' → logprob: -2.921196460723877
    5. ' ' → logprob: -3.046196460723877
    6. 'product' → logprob: -3.296196460723877
    7. '<|end|>' → logprob: -3.296196460723877
    8. '-product' → logprob: -4.296196460723877
    9. '-' → logprob: -4.421196460723877
    10. ' _' → logprob: -5.046196460723877

Token 38: ' sign' (ID: 2232)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38269510865211487
    2. '<|end|>' → logprob: -2.132695198059082
    3. '(' → logprob: -2.632695198059082
    4. ' of' → logprob: -3.257695198059082
    5. '<|end|>' → logprob: -3.632695198059082
    6. ' (' → logprob: -3.882695198059082
    7. '(a' → logprob: -4.382695198059082
    8. ')' → logprob: -4.507695198059082
    9. ',' → logprob: -5.882695198059082
    10. '  ' → logprob: -6.257695198059082

Token 39: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04283840209245682
    2. ' of' → logprob: -4.1678385734558105
    3. '(a' → logprob: -4.5428385734558105
    4. ' (' → logprob: -5.5428385734558105
    5. '```' → logprob: -5.9178385734558105
    6. ':' → logprob: -5.9178385734558105
    7. ' for' → logprob: -6.6678385734558105
    8. '(' → logprob: -6.7928385734558105
    9. 'def' → logprob: -7.4178385734558105
    10. '       ' → logprob: -7.5428385734558105

Token 40: ' determine' (ID: 11433)
  Prédit: ' determine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' determine' → logprob: -0.07981739938259125
    2. 'det' → logprob: -2.579817295074463
    3. ' check' → logprob: -7.204817295074463
    4. '   ' → logprob: -10.204817771911621
    5. ' return' → logprob: -10.454817771911621
    6. ' ' → logprob: -10.454817771911621
    7. 'check' → logprob: -10.829817771911621
    8. ' decide' → logprob: -11.079817771911621
    9. 'def' → logprob: -11.579817771911621
    10. 'return' → logprob: -11.704817771911621

Token 41: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.012374484911561012
    2. ' orientation' → logprob: -4.637374401092529
    3. ' whether' → logprob: -7.512374401092529
    4. 'the' → logprob: -7.762374401092529
    5. ' direction' → logprob: -7.762374401092529
    6. ' counter' → logprob: -8.137374877929688
    7. ' ' → logprob: -8.637374877929688
    8. '  ' → logprob: -8.637374877929688
    9. 'orientation' → logprob: -8.762374877929688
    10. ' turn' → logprob: -9.262374877929688

Token 42: ' orientation' (ID: 29546)
  Prédit: ' orientation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' orientation' → logprob: -0.03159225732088089
    2. ' direction' → logprob: -3.78159236907959
    3. 'orientation' → logprob: -5.03159236907959
    4. ' turn' → logprob: -7.15659236907959
    5. ' position' → logprob: -8.40659236907959
    6. 'direction' → logprob: -8.53159236907959
    7. ' counter' → logprob: -8.53159236907959
    8. ' return' → logprob: -8.78159236907959
    9. ' relative' → logprob: -9.65659236907959
    10. ' ' → logprob: -9.65659236907959

Token 43: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5791971683502197
    2. ' of' → logprob: -1.5791971683502197
    3. ')' → logprob: -2.7041971683502197
    4. '):' → logprob: -2.9541971683502197
    5. '(' → logprob: -3.3291971683502197
    6. '(a' → logprob: -3.3291971683502197
    7. ':' → logprob: -4.079196929931641
    8. 'def' → logprob: -5.329196929931641
    9. '```' → logprob: -5.579196929931641
    10. ' (' → logprob: -5.829196929931641

Token 44: ' three' (ID: 3407)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7471211552619934
    2. ' three' → logprob: -1.1221210956573486
    3. ' points' → logprob: -1.9971210956573486
    4. ' ' → logprob: -3.3721210956573486
    5. 'the' → logprob: -4.622121334075928
    6. ' a' → logprob: -4.997121334075928
    7. ' vectors' → logprob: -4.997121334075928
    8. 'three' → logprob: -6.247121334075928
    9. ' trip' → logprob: -7.122121334075928
    10. 'a' → logprob: -7.247121334075928

Token 45: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.004129338078200817
    2. 'points' → logprob: -5.504129409790039
    3. ' ' → logprob: -10.004129409790039
    4. '_points' → logprob: -13.379129409790039
    5. '(points' → logprob: -13.629129409790039
    6. ' point' → logprob: -14.754129409790039
    7. '```' → logprob: -14.879129409790039
    8. '   ' → logprob: -14.879129409790039
    9. '  ' → logprob: -15.004129409790039
    10. '2' → logprob: -15.254129409790039

Token 46: '"""
' (ID: 15611)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.659001350402832
    2. ')' → logprob: -1.409001350402832
    3. '   ' → logprob: -1.659001350402832
    4. '):
' → logprob: -3.784001350402832
    5. ':' → logprob: -4.534001350402832
    6. '(a' → logprob: -5.034001350402832
    7. '```' → logprob: -5.659001350402832
    8. '(' → logprob: -7.034001350402832
    9. 'def' → logprob: -7.909001350402832
    10. '
' → logprob: -8.034001350402832

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007292000576853752
    2. '    
' → logprob: -5.132291793823242
    3. '
' → logprob: -8.007291793823242
    4. ':' → logprob: -8.007291793823242
    5. '\n' → logprob: -8.632291793823242
    6. 'return' → logprob: -9.257291793823242
    7. '    ' → logprob: -9.382291793823242
    8. ' return' → logprob: -9.882291793823242
    9. '  
' → logprob: -10.257291793823242
    10. '\' → logprob: -10.507291793823242

Token 48: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021989934146404266
    2. 'return' (adapté à ' return') → logprob: -4.271989822387695
    3. ' return' → logprob: -5.146989822387695
    4. '    ' → logprob: -7.271989822387695
    5. '    
' → logprob: -8.271989822387695
    6. ' cross' → logprob: -8.646989822387695
    7. '
' → logprob: -8.771989822387695
    8. 'cross' → logprob: -9.146989822387695
    9. 'x' → logprob: -9.271989822387695
    10. ' ' → logprob: -9.396989822387695

Token 49: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.11557704210281372
    2. ' (' → logprob: -2.490576982498169
    3. '(b' → logprob: -3.740576982498169
    4. '(math' → logprob: -6.740577220916748
    5. '(' → logprob: -6.990577220916748
    6. '(c' → logprob: -8.49057674407959
    7. '   ' → logprob: -9.11557674407959
    8. 'math' → logprob: -10.61557674407959
    9. '(ab' → logprob: -10.99057674407959
    10. '((' → logprob: -11.11557674407959

Token 50: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00030590701499022543
    2. '(b' → logprob: -8.375306129455566
    3. 'a' → logprob: -9.875306129455566
    4. ' b' → logprob: -11.250306129455566
    5. 'c' → logprob: -11.750306129455566
    6. ' (' → logprob: -13.750306129455566
    7. '(a' → logprob: -14.500306129455566
    8. '   ' → logprob: -14.625306129455566
    9. '	b' → logprob: -15.000306129455566
    10. ')b' → logprob: -15.750306129455566

Token 51: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10626158863306046
    2. '.x' → logprob: -2.3562614917755127
    3. '.' → logprob: -5.606261730194092
    4. '.y' → logprob: -6.606261730194092
    5. 'x' → logprob: -7.231261730194092
    6. ' -' → logprob: -9.481261253356934
    7. '-' → logprob: -9.856261253356934
    8. 'y' → logprob: -9.981261253356934
    9. ' [' → logprob: -10.856261253356934
    10. '[x' → logprob: -10.856261253356934

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.688212614681106e-05
    2. '1' → logprob: -11.000017166137695
    3. ' ' → logprob: -16.250017166137695
    4. 'x' → logprob: -17.875017166137695
    5. '
' → logprob: -18.187517166137695
    6. '

' → logprob: -18.312517166137695
    7. '```' → logprob: -18.312517166137695
    8. '   ' → logprob: -18.375017166137695
    9. '۰' → logprob: -19.312517166137695
    10. '[' → logprob: -19.437517166137695

Token 53: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06198213994503021
    2. '-' → logprob: -2.8119821548461914
    3. ' ' → logprob: -12.061982154846191
    4. '[' → logprob: -12.186982154846191
    5. '-a' → logprob: -13.561982154846191
    6. ' ' → logprob: -14.186982154846191
    7. '   ' → logprob: -14.311982154846191
    8. 'a' → logprob: -14.436982154846191
    9. ']-' → logprob: -16.311981201171875
    10. '  ' → logprob: -16.561981201171875

Token 54: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1602388471364975
    2. '-' → logprob: -1.9102388620376587
    3. '-a' → logprob: -11.535239219665527
    4. '[' → logprob: -12.785239219665527
    5. ' ' → logprob: -13.785239219665527
    6. ' ' → logprob: -14.910239219665527
    7. '-b' → logprob: -15.285239219665527
    8. '   ' → logprob: -16.28523826599121
    9. 'a' → logprob: -16.78523826599121
    10. '-A' → logprob: -16.78523826599121

Token 55: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03364696726202965
    2. ' a' → logprob: -3.408647060394287
    3. '	a' → logprob: -14.408646583557129
    4. ' ' → logprob: -15.033646583557129
    5. ')a' → logprob: -16.033647537231445
    6. '<|end|>' → logprob: -16.783647537231445
    7. '  ' → logprob: -16.908647537231445
    8. '   ' → logprob: -16.908647537231445
    9. ')' → logprob: -17.533647537231445
    10. ''a' → logprob: -17.908647537231445

Token 56: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.643152740551159e-05
    2. '0' → logprob: -10.250036239624023
    3. ' [' → logprob: -15.000036239624023
    4. '][' → logprob: -15.250036239624023
    5. '```' → logprob: -15.750036239624023
    6. ')' → logprob: -16.375036239624023
    7. '   ' → logprob: -17.125036239624023
    8. ' ' → logprob: -17.625036239624023
    9. 'x' → logprob: -18.000036239624023
    10. ')[' → logprob: -18.625036239624023

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0484450437361374e-05
    2. ' ' → logprob: -10.125040054321289
    3. '[' → logprob: -15.750040054321289
    4. '1' → logprob: -16.75004005432129
    5. '۰' → logprob: -17.12504005432129
    6. '```' → logprob: -17.31254005432129
    7. '   ' → logprob: -18.12504005432129
    8. ' ' → logprob: -18.81254005432129
    9. '  ' → logprob: -18.81254005432129
    10. ')' → logprob: -18.87504005432129

Token 58: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006483370088972151
    2. ')*(' → logprob: -7.500648498535156
    3. ')*' → logprob: -9.625648498535156
    4. ' )' → logprob: -10.500648498535156
    5. '*)' → logprob: -15.125648498535156
    6. ')(' → logprob: -15.125648498535156
    7. '))' → logprob: -15.375648498535156
    8. ')**' → logprob: -15.375648498535156
    9. '`)' → logprob: -15.375648498535156
    10. '   ' → logprob: -16.125648498535156

Token 59: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16206887364387512
    2. ')*(' → logprob: -1.9120688438415527
    3. ')*' → logprob: -6.662068843841553
    4. '*(' → logprob: -7.912068843841553
    5. ' *' → logprob: -8.912069320678711
    6. ' )' → logprob: -10.162069320678711
    7. '*' → logprob: -11.037069320678711
    8. ']*(' → logprob: -12.787069320678711
    9. '```' → logprob: -12.912069320678711
    10. '*)' → logprob: -13.537069320678711

Token 60: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5773903727531433
    2. '(c' → logprob: -0.8273903727531433
    3. '(b' → logprob: -6.577390193939209
    4. '(' → logprob: -9.827390670776367
    5. '<|end|>' → logprob: -13.452390670776367
    6. '(a' → logprob: -13.827390670776367
    7. 'c' → logprob: -14.577390670776367
    8. ' ' → logprob: -14.577390670776367
    9. ' c' → logprob: -15.327390670776367
    10. '(s' → logprob: -15.577390670776367

Token 61: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07924479246139526
    2. '(c' → logprob: -2.57924485206604
    3. ' c' → logprob: -8.079244613647461
    4. ')c' → logprob: -10.579244613647461
    5. ' (' → logprob: -11.329244613647461
    6. '	c' → logprob: -12.704244613647461
    7. '(' → logprob: -13.079244613647461
    8. '   ' → logprob: -14.079244613647461
    9. ')(' → logprob: -14.579244613647461
    10. ')' → logprob: -14.704244613647461

Token 62: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.13388703338569e-06
    2. '1' → logprob: -11.750009536743164
    3. 'y' → logprob: -14.625009536743164
    4. '```' → logprob: -15.125009536743164
    5. '<|end|>' → logprob: -15.875009536743164
    6. 'def' → logprob: -16.875009536743164
    7. ' [' → logprob: -16.875009536743164
    8. '0' → logprob: -17.000009536743164
    9. '][' → logprob: -17.500009536743164
    10. 'import' → logprob: -17.750009536743164

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2233183042553719e-05
    2. '[' → logprob: -11.375012397766113
    3. '```' → logprob: -14.625012397766113
    4. ' ' → logprob: -16.000011444091797
    5. '0' → logprob: -17.000011444091797
    6. '
' → logprob: -18.125011444091797
    7. '   ' → logprob: -18.312511444091797
    8. '(' → logprob: -18.375011444091797
    9. '...' → logprob: -18.500011444091797
    10. '{' → logprob: -19.062511444091797

Token 64: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08066783845424652
    2. '-' → logprob: -2.580667734146118
    3. '<|end|>' → logprob: -6.955667972564697
    4. ')' → logprob: -7.955667972564697
    5. ' ' → logprob: -8.330667495727539
    6. '[' → logprob: -9.080667495727539
    7. ']' → logprob: -9.830667495727539
    8. '```' → logprob: -10.830667495727539
    9. ' ' → logprob: -11.455667495727539
    10. '>' → logprob: -11.705667495727539

Token 65: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0009136092266999185
    2. '-' → logprob: -7.000913619995117
    3. ' ' → logprob: -13.875913619995117
    4. ')' → logprob: -14.625913619995117
    5. '[' → logprob: -15.250913619995117
    6. '<|end|>' → logprob: -15.375913619995117
    7. ' –' → logprob: -16.250913619995117
    8. ' ' → logprob: -16.375913619995117
    9. ',' → logprob: -18.000913619995117
    10. ' —' → logprob: -18.000913619995117

Token 66: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001930420519784093
    2. ' a' → logprob: -6.251930236816406
    3. 'b' → logprob: -14.126930236816406
    4. '<|end|>' → logprob: -14.751930236816406
    5. '	a' → logprob: -15.126930236816406
    6. ' ' → logprob: -15.501930236816406
    7. ')a' → logprob: -16.251930236816406
    8. '  ' → logprob: -16.876930236816406
    9. '>a' → logprob: -18.001930236816406
    10. ')' → logprob: -18.001930236816406

Token 67: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0032316597644239664
    2. '0' → logprob: -5.753231525421143
    3. '][' → logprob: -10.2532320022583
    4. '1' → logprob: -11.1282320022583
    5. '<|end|>' → logprob: -13.5032320022583
    6. '<|end|>' → logprob: -14.7532320022583
    7. ')' → logprob: -14.8782320022583
    8. '```' → logprob: -15.0032320022583
    9. ' ' → logprob: -15.1282320022583
    10. ']' → logprob: -15.2532320022583

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38689592480659485
    2. '0' → logprob: -1.1368958950042725
    3. '[' → logprob: -11.011896133422852
    4. '<|end|>' → logprob: -12.386896133422852
    5. ']' → logprob: -13.386896133422852
    6. ' ' → logprob: -14.261896133422852
    7. '```' → logprob: -14.636896133422852
    8. '   ' → logprob: -14.636896133422852
    9. '<|end|>' → logprob: -15.324396133422852
    10. '])' → logprob: -15.636896133422852

Token 69: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00407923199236393
    2. ' )' → logprob: -5.504079341888428
    3. '```' → logprob: -15.62907886505127
    4. '）' → logprob: -16.254079818725586
    5. '}' → logprob: -16.254079818725586
    6. ']' → logprob: -16.629079818725586
    7. '')' → logprob: -16.754079818725586
    8. '-' → logprob: -17.004079818725586
    9. ')-(' → logprob: -17.004079818725586
    10. ' ' → logprob: -17.129079818725586

Token 70: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.016139941290020943
    2. '-' → logprob: -4.141139984130859
    3. ' -
' → logprob: -9.64113998413086
    4. ')' → logprob: -11.39113998413086
    5. ' ' → logprob: -11.51613998413086
    6. '    ' → logprob: -12.26613998413086
    7. '```' → logprob: -13.01613998413086
    8. '>' → logprob: -13.14113998413086
    9. ' )' → logprob: -13.26613998413086
    10. '-
' → logprob: -13.51613998413086

Token 71: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0382232591509819
    2. '(b' → logprob: -3.2882232666015625
    3. '(' → logprob: -9.038223266601562
    4. '<|end|>' → logprob: -10.538223266601562
    5. '   ' → logprob: -11.413223266601562
    6. ' ' → logprob: -11.413223266601562
    7. '(B' → logprob: -12.663223266601562
    8. '((' → logprob: -13.288223266601562
    9. '(c' → logprob: -13.538223266601562
    10. ' ((' → logprob: -13.663223266601562

Token 72: 'b' (ID: 65)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.16270357370376587
    2. 'b' → logprob: -2.162703514099121
    3. ' b' → logprob: -3.787703514099121
    4. ' (' → logprob: -4.412703514099121
    5. '<|end|>' → logprob: -8.912703514099121
    6. '	b' → logprob: -9.537703514099121
    7. ' ' → logprob: -9.662703514099121
    8. ')b' → logprob: -10.412703514099121
    9. '(' → logprob: -10.662703514099121
    10. ')' → logprob: -10.787703514099121

Token 73: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.4153549020411447e-05
    2. '<|end|>' → logprob: -10.75002384185791
    3. '<|end|>' → logprob: -13.37502384185791
    4. '][' → logprob: -15.12502384185791
    5. '[
' → logprob: -15.37502384185791
    6. ')' → logprob: -16.125024795532227
    7. '```' → logprob: -16.125024795532227
    8. ')[' → logprob: -16.750024795532227
    9. '>[' → logprob: -17.125024795532227
    10. '0' → logprob: -17.125024795532227

Token 74: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.693414568901062
    2. '1' → logprob: -0.693414568901062
    3. '[' → logprob: -8.318414688110352
    4. '<|end|>' → logprob: -11.568414688110352
    5. '```' → logprob: -12.318414688110352
    6. '<|end|>' → logprob: -12.693414688110352
    7. ' ' → logprob: -13.443414688110352
    8. ']' → logprob: -13.818414688110352
    9. ')' → logprob: -14.255914688110352
    10. '(' → logprob: -14.693414688110352

Token 75: ']' (ID: 60)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.038044363260269165
    2. ' a' → logprob: -3.2880444526672363
    3. '<|end|>' → logprob: -13.413043975830078
    4. '	a' → logprob: -14.038043975830078
    5. ')a' → logprob: -15.663043975830078
    6. '[' → logprob: -16.288043975830078
    7. ' ' → logprob: -16.413043975830078
    8. '#a' → logprob: -16.788043975830078
    9. '>a' → logprob: -16.788043975830078
    10. '[a' → logprob: -16.913043975830078

Token 78: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.043323665857315063
    2. '0' → logprob: -3.1683237552642822
    3. '][' → logprob: -8.293323516845703
    4. ' ' → logprob: -11.043323516845703
    5. ']' → logprob: -11.168323516845703
    6. ')' → logprob: -11.668323516845703
    7. '```' → logprob: -11.668323516845703
    8. '<|end|>' → logprob: -11.668323516845703
    9. ''s' → logprob: -12.793323516845703
    10. '-' → logprob: -13.043323516845703

Token 79: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.153795766294934e-06
    2. '[' → logprob: -12.125005722045898
    3. '1' → logprob: -15.125005722045898
    4. ' ' → logprob: -15.375005722045898
    5. '])' → logprob: -15.875005722045898
    6. '   ' → logprob: -17.5000057220459
    7. ']' → logprob: -17.6250057220459
    8. '-' → logprob: -17.7500057220459
    9. '```' → logprob: -18.0000057220459
    10. '۰' → logprob: -18.0625057220459

Token 80: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.8781142234802246
    2. ')' → logprob: -1.1281142234802246
    3. ']' → logprob: -1.3781142234802246
    4. '[' → logprob: -4.878114223480225
    5. '][' → logprob: -7.503114223480225
    6. ')]' → logprob: -8.253114700317383
    7. ')[' → logprob: -9.753114700317383
    8. '])[' → logprob: -9.878114700317383
    9. ')])' → logprob: -10.003114700317383
    10. '])]' → logprob: -10.128114700317383

Token 81: ' *' (ID: 425)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9075276255607605
    2. '*' → logprob: -1.1575276851654053
    3. '*(' → logprob: -1.5325276851654053
    4. ' *' → logprob: -3.5325276851654053
    5. '(c' → logprob: -3.7825276851654053
    6. ')' → logprob: -4.657527446746826
    7. ' (' → logprob: -6.032527446746826
    8. '[' → logprob: -7.032527446746826
    9. '(x' → logprob: -7.407527446746826
    10. '(a' → logprob: -8.157527923583984

Token 82: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00162221840582788
    2. ' (' → logprob: -6.751622200012207
    3. '(' → logprob: -7.751622200012207
    4. '(b' → logprob: -11.001622200012207
    5. 'c' → logprob: -13.001622200012207
    6. '(
' → logprob: -13.751622200012207
    7. '(a' → logprob: -14.626622200012207
    8. '(cx' → logprob: -15.501622200012207
    9. '(s' → logprob: -15.876622200012207
    10. '(C' → logprob: -16.251623153686523

Token 83: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001339527778327465
    2. ' c' → logprob: -6.626339435577393
    3. ')c' → logprob: -11.25133991241455
    4. '	c' → logprob: -15.37633991241455
    5. '(c' → logprob: -15.37633991241455
    6. 'b' → logprob: -17.126338958740234
    7. 'a' → logprob: -17.751338958740234
    8. ')' → logprob: -17.876338958740234
    9. '   ' → logprob: -18.001338958740234
    10. 'с' → logprob: -18.751338958740234

Token 84: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00046975704026408494
    2. '][' → logprob: -7.87546968460083
    3. ']' → logprob: -9.750470161437988
    4. ')[' → logprob: -11.875470161437988
    5. '[
' → logprob: -12.375470161437988
    6. '```' → logprob: -12.375470161437988
    7. '<|end|>' → logprob: -12.375470161437988
    8. '}[' → logprob: -13.000470161437988
    9. ''[' → logprob: -13.125470161437988
    10. ')' → logprob: -13.250470161437988

Token 85: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -13.12500286102295
    3. '۰' → logprob: -14.62500286102295
    4. ' ' → logprob: -16.250003814697266
    5. ']' → logprob: -16.687503814697266
    6. ')' → logprob: -17.187503814697266
    7. '০' → logprob: -17.500003814697266
    8. '1' → logprob: -17.500003814697266
    9. '٠' → logprob: -17.625003814697266
    10. '
' → logprob: -17.812503814697266

Token 86: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.39027464389801025
    2. '])' → logprob: -1.1402746438980103
    3. ')' → logprob: -6.015274524688721
    4. '[' → logprob: -7.265274524688721
    5. '][' → logprob: -8.890275001525879
    6. '0' → logprob: -9.890275001525879
    7. '])[' → logprob: -10.515275001525879
    8. '])]' → logprob: -12.265275001525879
    9. ']])' → logprob: -12.265275001525879
    10. '<|end|>' → logprob: -12.265275001525879

Token 87: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23684881627559662
    2. '[' → logprob: -1.6118488311767578
    3. ']' → logprob: -4.736848831176758
    4. '])' → logprob: -6.236848831176758
    5. '<|end|>' → logprob: -8.236848831176758
    6. ')[' → logprob: -8.986848831176758
    7. ' )' → logprob: -9.736848831176758
    8. '0' → logprob: -10.486848831176758
    9. '```' → logprob: -10.611848831176758
    10. 'a' → logprob: -10.986848831176758

Token 88: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002476016292348504
    2. ' a' → logprob: -6.002476215362549
    3. '	a' → logprob: -15.62747573852539
    4. 'b' → logprob: -16.00247573852539
    5. ')a' → logprob: -16.25247573852539
    6. 'c' → logprob: -17.62747573852539
    7. ' ' → logprob: -17.87747573852539
    8. ')' → logprob: -18.87747573852539
    9. '>a' → logprob: -19.00247573852539
    10. '1' → logprob: -19.37747573852539

Token 89: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012094692647224292
    2. '0' → logprob: -9.250121116638184
    3. '][' → logprob: -11.125121116638184
    4. ']' → logprob: -12.500121116638184
    5. ')' → logprob: -12.500121116638184
    6. '])' → logprob: -13.875121116638184
    7. '[
' → logprob: -14.625121116638184
    8. '```' → logprob: -15.000121116638184
    9. ')[' → logprob: -15.375121116638184
    10. ' ' → logprob: -15.375121116638184

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '[' → logprob: -17.0
    3. '۰' → logprob: -17.125
    4. '1' → logprob: -17.5
    5. '０' → logprob: -19.375
    6. ' ' → logprob: -19.5
    7. '{' → logprob: -20.0
    8. '])' → logprob: -20.1875
    9. '```' → logprob: -20.1875
    10. '2' → logprob: -20.4375

Token 91: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ' )' → logprob: -14.25000286102295
    3. '))' → logprob: -14.50000286102295
    4. ')`' → logprob: -14.50000286102295
    5. ')}' → logprob: -15.37500286102295
    6. ')
' → logprob: -15.50000286102295
    7. ']' → logprob: -15.50000286102295
    8. '}' → logprob: -16.000003814697266
    9. '),' → logprob: -16.250003814697266
    10. ')**' → logprob: -16.875003814697266

Token 92: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10478127002716064
    2. 'def' → logprob: -2.729781150817871
    3. '\' → logprob: -4.354781150817871
    4. '```' → logprob: -4.854781150817871
    5. '\n' → logprob: -5.229781150817871
    6. ':' → logprob: -5.979781150817871
    7. '

' → logprob: -6.354781150817871
    8. 'newline' → logprob: -6.729781150817871
    9. '
' → logprob: -7.729781150817871
    10. '' → logprob: -7.854781150817871

Token 93: ' intersect' (ID: 64353)
  Prédit: ' convex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convex' → logprob: -0.5736388564109802
    2. ' is' → logprob: -1.948638916015625
    3. ' main' → logprob: -2.448638916015625
    4. ' intersect' → logprob: -2.698638916015625
    5. ' solve' → logprob: -3.073638916015625
    6. ' line' → logprob: -3.698638916015625
    7. ' gra' → logprob: -3.823638916015625
    8. ' intersection' → logprob: -3.948638916015625
    9. ' intersects' → logprob: -5.573638916015625
    10. ' polygon' → logprob: -5.698638916015625

Token 94: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4747437536716461
    2. '(a' → logprob: -0.9747437238693237
    3. '(A' → logprob: -7.599743843078613
    4. ' (' → logprob: -9.599743843078613
    5. '_' → logprob: -10.099743843078613
    6. '(_' → logprob: -11.224743843078613
    7. '```' → logprob: -11.849743843078613
    8. '(`' → logprob: -11.974743843078613
    9. '((' → logprob: -11.974743843078613
    10. '("("' → logprob: -12.474743843078613

Token 95: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012439649435691535
    2. '_,' → logprob: -10.000123977661133
    3. ' ,' → logprob: -10.375123977661133
    4. ',b' → logprob: -11.125123977661133
    5. '):' → logprob: -11.625123977661133
    6. ',a' → logprob: -11.750123977661133
    7. ',p' → logprob: -12.250123977661133
    8. ')' → logprob: -13.250123977661133
    9. '<|end|>' → logprob: -13.250123977661133
    10. ',_' → logprob: -13.625123977661133

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005426656571216881
    2. ',a' → logprob: -7.625542640686035
    3. '_,' → logprob: -10.750542640686035
    4. ' ,' → logprob: -10.750542640686035
    5. 'a' → logprob: -12.125542640686035
    6. '):' → logprob: -13.000542640686035
    7. '‌,' → logprob: -14.125542640686035
    8. '_' → logprob: -14.375542640686035
    9. ',_' → logprob: -14.625542640686035
    10. '(a' → logprob: -14.750542640686035

Token 97: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0015042672166600823
    2. ' a' → logprob: -6.501504421234131
    3. 'b' → logprob: -13.376503944396973
    4. '	a' → logprob: -14.751503944396973
    5. ',a' → logprob: -17.87650489807129
    6. ')a' → logprob: -18.00150489807129
    7. '<|end|>' → logprob: -18.12650489807129
    8. ' ' → logprob: -18.62650489807129
    9. '```' → logprob: -19.25150489807129
    10. ' b' → logprob: -19.25150489807129

Token 98: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01431417278945446
    2. ',' → logprob: -4.5143141746521
    3. '2' → logprob: -5.8893141746521
    4. ',a' → logprob: -8.389313697814941
    5. 'a' → logprob: -8.889313697814941
    6. ',b' → logprob: -9.889313697814941
    7. 'b' → logprob: -10.389313697814941
    8. '_,' → logprob: -11.014313697814941
    9. ' ,' → logprob: -11.764313697814941
    10. '```' → logprob: -12.514313697814941

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.008129963040119e-06
    2. ' ,' → logprob: -13.125003814697266
    3. '):' → logprob: -13.750003814697266
    4. ',a' → logprob: -14.125003814697266
    5. 'a' → logprob: -17.000003814697266
    6. ')' → logprob: -17.000003814697266
    7. ',
' → logprob: -17.625003814697266
    8. '‌,' → logprob: -18.000003814697266
    9. '),' → logprob: -18.750003814697266
    10. ',b' → logprob: -19.000003814697266

Token 100: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11475696414709091
    2. 'b' → logprob: -2.9897570610046387
    3. ' a' → logprob: -2.9897570610046387
    4. ' b' → logprob: -4.864757061004639
    5. '<|end|>' → logprob: -9.36475658416748
    6. ' ' → logprob: -11.61475658416748
    7. ')' → logprob: -12.23975658416748
    8. '<|end|>' → logprob: -13.98975658416748
    9. ')a' → logprob: -14.36475658416748
    10. '	a' → logprob: -14.61475658416748

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ',' → logprob: -13.750001907348633
    3. ')' → logprob: -14.125001907348633
    4. '_' → logprob: -15.875001907348633
    5. '[' → logprob: -16.000001907348633
    6. '<|end|>' → logprob: -16.000001907348633
    7. ' ' → logprob: -17.000001907348633
    8. '<|end|>' → logprob: -17.750001907348633
    9. '0' → logprob: -18.250001907348633
    10. '```' → logprob: -18.500001907348633

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3880811929702759
    2. '):' → logprob: -1.1380811929702759
    3. ')' → logprob: -6.763081073760986
    4. ' ):' → logprob: -10.888081550598145
    5. ' ,' → logprob: -11.138081550598145
    6. ',b' → logprob: -11.888081550598145
    7. '),' → logprob: -12.263081550598145
    8. '):
' → logprob: -12.513081550598145
    9. ',a' → logprob: -13.513081550598145
    10. ':' → logprob: -14.763081550598145

Token 103: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12714186310768127
    2. ' b' → logprob: -2.1271419525146484
    3. '<|end|>' → logprob: -8.752141952514648
    4. ' ' → logprob: -10.127141952514648
    5. ')' → logprob: -11.377141952514648
    6. ')b' → logprob: -12.627141952514648
    7. '```' → logprob: -15.252141952514648
    8. ' )' → logprob: -15.752141952514648
    9. '<|end|>' → logprob: -16.00214195251465
    10. '1' → logprob: -16.12714195251465

Token 104: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005811501177959144
    2. ')' → logprob: -7.50058126449585
    3. '):' → logprob: -10.750580787658691
    4. '1' → logprob: -12.750580787658691
    5. '₂' → logprob: -13.375580787658691
    6. ' ' → logprob: -14.500580787658691
    7. '):
' → logprob: -15.375580787658691
    8. '۲' → logprob: -15.500580787658691
    9. '<|end|>' → logprob: -15.500580787658691
    10. ',' → logprob: -15.625580787658691

Token 105: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00018577903392724693
    2. ')' → logprob: -8.7501859664917
    3. ':' → logprob: -11.0001859664917
    4. '):
' → logprob: -12.0001859664917
    5. ' ):' → logprob: -12.3751859664917
    6. ')：' → logprob: -17.375185012817383
    7. ']:' → logprob: -17.625185012817383
    8. ''):' → logprob: -17.625185012817383
    9. '）：' → logprob: -17.750185012817383
    10. ':**' → logprob: -17.875185012817383

Token 106: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5785354375839233
    2. '   ' → logprob: -0.8285354375839233
    3. ':
' → logprob: -7.078535556793213
    4. ' ' → logprob: -7.953535556793213
    5. ' :' → logprob: -8.328535079956055
    6. '    ' → logprob: -8.328535079956055
    7. ')' → logprob: -8.703535079956055
    8. ':return' → logprob: -8.703535079956055
    9. '):' → logprob: -8.828535079956055
    10. '<|end|>' → logprob: -8.953535079956055

Token 107: ' """' (ID: 9280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9466277956962585
    2. ' ' → logprob: -1.0716278553009033
    3. '    ' → logprob: -1.4466278553009033
    4. ' return' → logprob: -3.9466278553009033
    5. '  ' → logprob: -5.321627616882324
    6. ' 
' → logprob: -6.196627616882324
    7. 'return' → logprob: -6.321627616882324
    8. '       ' → logprob: -6.946627616882324
    9. ')' → logprob: -7.071627616882324
    10. ' (' → logprob: -7.196627616882324

Token 108: 'Check' (ID: 4383)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4064099192619324
    2. 'return' → logprob: -2.031409978866577
    3. '   ' → logprob: -2.781409978866577
    4. ' if' → logprob: -3.031409978866577
    5. ' return' → logprob: -3.406409978866577
    6. '#' → logprob: -4.156409740447998
    7. ' ' → logprob: -4.406409740447998
    8. ')' → logprob: -4.531409740447998
    9. 'a' → logprob: -6.281409740447998
    10. ' #' → logprob: -6.281409740447998

Token 109: ' whether' (ID: 5588)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.11814863234758377
    2. ' ' → logprob: -2.9931485652923584
    3. ' ((' → logprob: -3.4931485652923584
    4. '(' → logprob: -3.9931485652923584
    5. '(cc' → logprob: -5.7431488037109375
    6. '((' → logprob: -6.2431488037109375
    7. ')' → logprob: -6.2431488037109375
    8. ' (
' → logprob: -6.6181488037109375
    9. '(inter' → logprob: -7.1181488037109375
    10. ' (((' → logprob: -7.8681488037109375

Token 110: ' two' (ID: 1920)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.1310499906539917
    2. ' cc' → logprob: -2.1310501098632812
    3. '(cc' → logprob: -5.506050109863281
    4. 'max' → logprob: -11.006050109863281
    5. ' (' → logprob: -11.131050109863281
    6. ' ' → logprob: -11.881050109863281
    7. ' max' → logprob: -12.256050109863281
    8. '	cc' → logprob: -12.631050109863281
    9. '(' → logprob: -12.881050109863281
    10. '```' → logprob: -14.006050109863281

Token 111: ' line' (ID: 2543)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.3629968762397766
    2. ' segments' → logprob: -2.112996816635132
    3. ' line' → logprob: -2.112996816635132
    4. 'segments' → logprob: -3.362996816635132
    5. 'lines' → logprob: -3.987996816635132
    6. ' ' → logprob: -5.362997055053711
    7. ')' → logprob: -6.862997055053711
    8. 'line' → logprob: -7.737997055053711
    9. ' vectors' → logprob: -8.362997055053711
    10. '_lines' → logprob: -8.362997055053711

Token 112: ' segments' (ID: 33749)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.32175126671791077
    2. '<|end|>' → logprob: -2.071751356124878
    3. ' segments' → logprob: -2.696751356124878
    4. ' ' → logprob: -2.696751356124878
    5. ')' → logprob: -5.696751117706299
    6. '_segments' → logprob: -5.946751117706299
    7. 'segments' → logprob: -5.946751117706299
    8. ' s' → logprob: -6.571751117706299
    9. '  ' → logprob: -6.821751117706299
    10. '   ' → logprob: -6.821751117706299

Token 113: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8858505487442017
    2. ' intersect' → logprob: -1.2608505487442017
    3. '   ' → logprob: -1.8858505487442017
    4. ' overlap' → logprob: -3.010850429534912
    5. ')' → logprob: -3.260850429534912
    6. ' have' → logprob: -4.010850429534912
    7. ' )' → logprob: -4.635850429534912
    8. ' a' → logprob: -4.760850429534912
    9. '  ' → logprob: -5.385850429534912
    10. ' do' → logprob: -5.385850429534912

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2654837369918823
    2. '2' → logprob: -1.7654837369918823
    3. '[' → logprob: -3.390483856201172
    4. ',' → logprob: -4.140483856201172
    5. ' ' → logprob: -5.765483856201172
    6. ')' → logprob: -5.890483856201172
    7. '   ' → logprob: -6.015483856201172
    8. '_' → logprob: -6.515483856201172
    9. '-' → logprob: -7.390483856201172
    10. '  ' → logprob: -7.640483856201172

Token 115: 'a' (ID: 64)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027503803372383118
    2. ' and' → logprob: -4.277503967285156
    3. ')' → logprob: -5.277503967285156
    4. '<|end|>' → logprob: -5.527503967285156
    5. ' ,' → logprob: -6.402503967285156
    6. ' ' → logprob: -7.277503967285156
    7. '   ' → logprob: -7.402503967285156
    8. '[' → logprob: -7.527503967285156
    9. 'and' → logprob: -8.402503967285156
    10. 'a' → logprob: -8.652503967285156

Token 116: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.34470149874687195
    2. ',' → logprob: -1.8447015285491943
    3. '1' → logprob: -2.7197015285491943
    4. '[' → logprob: -3.7197015285491943
    5. ' ' → logprob: -4.094701290130615
    6. ')' → logprob: -4.719701290130615
    7. '-' → logprob: -5.719701290130615
    8. ']' → logprob: -6.219701290130615
    9. '   ' → logprob: -6.344701290130615
    10. '```' → logprob: -6.469701290130615

Token 117: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12657135725021362
    2. ',' → logprob: -3.0015714168548584
    3. ' ' → logprob: -3.2515714168548584
    4. ')' → logprob: -3.8765714168548584
    5. 'and' → logprob: -5.751571178436279
    6. '   ' → logprob: -5.751571178436279
    7. ' ,' → logprob: -6.126571178436279
    8. '```' → logprob: -8.626571655273438
    9. ' intersects' → logprob: -9.001571655273438
    10. '  ' → logprob: -9.126571655273438

Token 118: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.05491117015480995
    2. 'b' → logprob: -2.9299111366271973
    3. '<|end|>' → logprob: -11.054911613464355
    4. ' ' → logprob: -11.429911613464355
    5. ' a' → logprob: -14.429911613464355
    6. '	b' → logprob: -14.679911613464355
    7. '<|end|>' → logprob: -14.804911613464355
    8. 'a' → logprob: -15.054911613464355
    9. ' б' → logprob: -15.679911613464355
    10. '  ' → logprob: -16.30491065979004

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.514650183613412e-05
    2. '<|end|>' → logprob: -11.000055313110352
    3. '[' → logprob: -11.375055313110352
    4. '2' → logprob: -11.750055313110352
    5. ')' → logprob: -11.750055313110352
    6. ' ' → logprob: -12.500055313110352
    7. '```' → logprob: -12.875055313110352
    8. ']' → logprob: -14.000055313110352
    9. '<|end|>' → logprob: -14.125055313110352
    10. '.' → logprob: -14.375055313110352

Token 120: 'b' (ID: 65)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0402984619140625
    2. ')' → logprob: -3.7902984619140625
    3. ' and' → logprob: -4.7902984619140625
    4. ' ' → logprob: -5.4152984619140625
    5. ' ,' → logprob: -6.0402984619140625
    6. ' have' → logprob: -7.6652984619140625
    7. '   ' → logprob: -8.290298461914062
    8. ' are' → logprob: -8.540298461914062
    9. '2' → logprob: -8.790298461914062
    10. '<|end|>' → logprob: -8.915298461914062

Token 121: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0037351183127611876
    2. '1' → logprob: -6.503735065460205
    3. '.' → logprob: -7.253735065460205
    4. '<|end|>' → logprob: -7.753735065460205
    5. ' ' → logprob: -8.003735542297363
    6. '[' → logprob: -8.378735542297363
    7. ')' → logprob: -8.378735542297363
    8. '```' → logprob: -8.878735542297363
    9. ' are' → logprob: -10.253735542297363
    10. ' have' → logprob: -10.753735542297363

Token 122: ' intersect' (ID: 64353)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40593233704566956
    2. '):' → logprob: -1.5309323072433472
    3. ' ' → logprob: -2.6559324264526367
    4. ' )' → logprob: -4.155932426452637
    5. ' ):' → logprob: -4.280932426452637
    6. ':' → logprob: -4.655932426452637
    7. ' are' → logprob: -5.030932426452637
    8. '   ' → logprob: -8.030932426452637
    9. ' have' → logprob: -8.280932426452637
    10. ' :' → logprob: -8.280932426452637

Token 123: '"""
' (ID: 15611)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007109133061021566
    2. ')' → logprob: -5.38210916519165
    3. '):
' → logprob: -6.13210916519165
    4. ':' → logprob: -8.257108688354492
    5. '   ' → logprob: -10.257108688354492
    6. ' ):' → logprob: -11.507108688354492
    7. ',' → logprob: -12.382108688354492
    8. '):

' → logprob: -13.882108688354492
    9. ' ' → logprob: -14.132108688354492
    10. '):
' → logprob: -14.757108688354492

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41953766345977783
    2. ':' → logprob: -1.1695376634597778
    3. '
' → logprob: -4.294537544250488
    4. '    
' → logprob: -5.544537544250488
    5. ' ' → logprob: -5.794537544250488
    6. ':
' → logprob: -5.794537544250488
    7. '\n' → logprob: -6.794537544250488
    8. ' 
' → logprob: -6.794537544250488
    9. ' return' → logprob: -6.919537544250488
    10. '    ' → logprob: -7.169537544250488

Token 125: ' c' (ID: 274)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4596311151981354
    2. 'return' → logprob: -1.334631085395813
    3. ' d' → logprob: -2.9596312046051025
    4. ' return' → logprob: -3.7096312046051025
    5. '   ' → logprob: -4.209630966186523
    6. 's' → logprob: -5.709630966186523
    7. 'o' → logprob: -5.959630966186523
    8. ' ' → logprob: -6.334630966186523
    9. 'ab' → logprob: -6.459630966186523
    10. ' ab' → logprob: -6.834630966186523

Token 126: '1' (ID: 16)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.30237746238708496
    2. '1' → logprob: -1.427377462387085
    3. 'cw' → logprob: -3.927377462387085
    4. 'd' → logprob: -7.177377700805664
    5. 'c' → logprob: -7.927377700805664
    6. 'a' → logprob: -10.052377700805664
    7. '=' → logprob: -10.052377700805664
    8. ' =' → logprob: -10.677377700805664
    9. '_w' → logprob: -10.677377700805664
    10. 'wd' → logprob: -11.927377700805664

Token 127: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3485058546066284
    2. ' =' → logprob: -1.2235058546066284
    3. ')' → logprob: -10.723505973815918
    4. ',' → logprob: -11.098505973815918
    5. '=c' → logprob: -11.348505973815918
    6. 'c' → logprob: -12.473505973815918
    7. ' c' → logprob: -13.723505973815918
    8. '1' → logprob: -13.848505973815918
    9. ' ' → logprob: -13.848505973815918
    10. '=}' → logprob: -14.223505973815918

Token 128: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.00011105302110081539
    2. ' cc' → logprob: -9.125110626220703
    3. '	cc' → logprob: -13.625110626220703
    4. '(cc' → logprob: -14.125110626220703
    5. '_cc' → logprob: -15.875110626220703
    6. 'ccc' → logprob: -18.250110626220703
    7. ' ' → logprob: -18.500110626220703
    8. '   ' → logprob: -18.875110626220703
    9. 'cccc' → logprob: -19.000110626220703
    10. '0' → logprob: -19.000110626220703

Token 129: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: 0.0
    2. 'W' → logprob: -18.875
    3. '(a' → logprob: -20.25
    4. '(w' → logprob: -20.625
    5. '	w' → logprob: -20.875
    6. ' w' → logprob: -20.875
    7. 'wx' → logprob: -21.5
    8. '<w' → logprob: -21.5
    9. '```' → logprob: -21.5
    10. 'ｗ' → logprob: -22.0

Token 130: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.057743949990254e-05
    2. '(' → logprob: -10.875020980834961
    3. 'a' → logprob: -13.875020980834961
    4. '(
' → logprob: -14.875020980834961
    5. '(b' → logprob: -15.125020980834961
    6. '((' → logprob: -17.37502098083496
    7. ' (' → logprob: -18.25002098083496
    8. 'b' → logprob: -18.50002098083496
    9. '(c' → logprob: -18.62502098083496
    10. '(A' → logprob: -18.75002098083496

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.741137283621356e-05
    2. '(' → logprob: -10.250057220458984
    3. ',' → logprob: -12.000057220458984
    4. ')' → logprob: -12.250057220458984
    5. '
' → logprob: -13.250057220458984
    6. ' ' → logprob: -13.500057220458984
    7. '(a' → logprob: -13.500057220458984
    8. '2' → logprob: -13.625057220458984
    9. '[' → logprob: -13.625057220458984
    10. '```' → logprob: -13.687557220458984

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00931447371840477
    2. '(a' → logprob: -5.38431453704834
    3. '(' → logprob: -5.50931453704834
    4. ',a' → logprob: -7.63431453704834
    5. ' ,' → logprob: -10.00931453704834
    6. 'a' → logprob: -10.13431453704834
    7. ',b' → logprob: -10.75931453704834
    8. ')' → logprob: -10.88431453704834
    9. ',
' → logprob: -12.25931453704834
    10. ',(' → logprob: -12.63431453704834

Token 133: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009883344173431396
    2. ' a' → logprob: -4.634883403778076
    3. '<|end|>' → logprob: -9.009882926940918
    4. '	a' → logprob: -13.884882926940918
    5. ')a' → logprob: -13.884882926940918
    6. ' ' → logprob: -14.009882926940918
    7. 'b' → logprob: -14.509882926940918
    8. '#a' → logprob: -14.634882926940918
    9. '<|end|>' → logprob: -15.384882926940918
    10. ')' → logprob: -15.509882926940918

Token 134: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.575563020305708e-05
    2. 'a' → logprob: -10.750065803527832
    3. '[' → logprob: -11.375065803527832
    4. 's' → logprob: -11.750065803527832
    5. ')' → logprob: -11.875065803527832
    6. ',' → logprob: -12.125065803527832
    7. ' ' → logprob: -12.375065803527832
    8. '1' → logprob: -13.625065803527832
    9. '<|end|>' → logprob: -13.812565803527832
    10. '   ' → logprob: -14.000065803527832

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007688904879614711
    2. ',b' → logprob: -7.250768661499023
    3. ' ,' → logprob: -10.125768661499023
    4. 'b' → logprob: -11.000768661499023
    5. ')' → logprob: -14.125768661499023
    6. ' b' → logprob: -14.125768661499023
    7. 'a' → logprob: -14.875768661499023
    8. ',
' → logprob: -15.500768661499023
    9. '),' → logprob: -17.000768661499023
    10. ',a' → logprob: -17.125768661499023

Token 136: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002808798337355256
    2. ' b' → logprob: -5.877808570861816
    3. '<|end|>' → logprob: -12.627808570861816
    4. ')b' → logprob: -15.127808570861816
    5. '	b' → logprob: -16.127809524536133
    6. ')' → logprob: -16.127809524536133
    7. 'a' → logprob: -16.502809524536133
    8. ' ' → logprob: -17.252809524536133
    9. '>b' → logprob: -17.627809524536133
    10. '[b' → logprob: -18.627809524536133

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '2' → logprob: -14.500000953674316
    3. '[' → logprob: -16.0
    4. ')' → logprob: -16.5625
    5. '```' → logprob: -16.625
    6. '<|end|>' → logprob: -16.625
    7. 'b' → logprob: -17.0625
    8. '۱' → logprob: -17.5
    9. '
' → logprob: -18.125
    10. '१' → logprob: -18.1875

Token 138: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012741618556901813
    2. ' )' → logprob: -6.751274108886719
    3. ')*' → logprob: -9.376274108886719
    4. ')
' → logprob: -11.001274108886719
    5. ')c' → logprob: -13.751274108886719
    6. ' )
' → logprob: -14.876274108886719
    7. ')<' → logprob: -15.126274108886719
    8. ')

' → logprob: -15.376274108886719
    9. ')`' → logprob: -15.751274108886719
    10. '   ' → logprob: -16.00127410888672

Token 139: '   ' (ID: 271)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5204134583473206
    2. ' *' → logprob: -1.5204133987426758
    3. '*c' → logprob: -1.8954133987426758
    4. 'c' → logprob: -3.645413398742676
    5. ' c' → logprob: -5.395413398742676
    6. ' ' → logprob: -5.895413398742676
    7. '   ' → logprob: -6.770413398742676
    8. ',' → logprob: -7.145413398742676
    9. '>' → logprob: -8.770413398742676
    10. ',c' → logprob: -9.020413398742676

Token 140: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.10301819443702698
    2. ' c' → logprob: -2.353018283843994
    3. ' ' → logprob: -6.103018283843994
    4. ',' → logprob: -8.478017807006836
    5. '<|end|>' → logprob: -8.978017807006836
    6. '   ' → logprob: -9.478017807006836
    7. '	c' → logprob: -9.853017807006836
    8. '  ' → logprob: -10.603017807006836
    9. ' ,' → logprob: -11.353017807006836
    10. '.' → logprob: -11.353017807006836

Token 141: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.856408536899835e-05
    2. '1' → logprob: -11.250028610229492
    3. ' ' → logprob: -11.875028610229492
    4. '_' → logprob: -12.875028610229492
    5. '=' → logprob: -13.125028610229492
    6. '₂' → logprob: -13.875028610229492
    7. '0' → logprob: -14.125028610229492
    8. '<|end|>' → logprob: -14.875028610229492
    9. ' =' → logprob: -15.000028610229492
    10. ',' → logprob: -15.375028610229492

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018225563690066338
    2. '=' → logprob: -4.01822566986084
    3. ' ' → logprob: -9.89322566986084
    4. '<|end|>' → logprob: -10.64322566986084
    5. ' =)' → logprob: -15.01822566986084
    6. ')' → logprob: -15.76822566986084
    7. ' =
' → logprob: -15.89322566986084
    8. ' ' → logprob: -16.018224716186523
    9. ',' → logprob: -16.268224716186523
    10. ' ,' → logprob: -16.393224716186523

Token 143: ' cc' (ID: 22988)
  Prédit: ' cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cc' → logprob: -0.003017399227246642
    2. 'cc' → logprob: -5.878017425537109
    3. '(cc' → logprob: -8.62801742553711
    4. '	cc' → logprob: -10.62801742553711
    5. '_cc' → logprob: -12.62801742553711
    6. ' ' → logprob: -12.62801742553711
    7. ' ' → logprob: -13.87801742553711
    8. '0' → logprob: -14.62801742553711
    9. ' c' → logprob: -15.25301742553711
    10. ' CC' → logprob: -15.75301742553711

Token 144: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.696889623621246e-06
    2. ' w' → logprob: -13.87500286102295
    3. 'c' → logprob: -15.25000286102295
    4. '	w' → logprob: -15.50000286102295
    5. '1' → logprob: -15.62500286102295
    6. '[w' → logprob: -15.75000286102295
    7. 'W' → logprob: -16.000001907348633
    8. '>w' → logprob: -16.250001907348633
    9. 'cw' → logprob: -16.250001907348633
    10. '<w' → logprob: -16.375001907348633

Token 145: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -5.455048449221067e-05
    2. '(' → logprob: -9.875054359436035
    3. '(
' → logprob: -13.875054359436035
    4. 'a' → logprob: -13.875054359436035
    5. '(b' → logprob: -14.375054359436035
    6. ' (' → logprob: -14.875054359436035
    7. ' a' → logprob: -17.12505531311035
    8. '<|end|>' → logprob: -17.12505531311035
    9. '(ai' → logprob: -18.37505531311035
    10. '```' → logprob: -18.75005531311035

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06209731101989746
    2. '2' → logprob: -2.8120973110198975
    3. '[' → logprob: -9.937097549438477
    4. '<|end|>' → logprob: -10.312097549438477
    5. ',' → logprob: -10.937097549438477
    6. 'a' → logprob: -11.562097549438477
    7. ')' → logprob: -11.999597549438477
    8. '<|end|>' → logprob: -13.312097549438477
    9. 's' → logprob: -13.562097549438477
    10. '```' → logprob: -13.999597549438477

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010226861340925097
    2. ',a' → logprob: -7.876022815704346
    3. ' ,' → logprob: -8.001022338867188
    4. '<|end|>' → logprob: -8.251022338867188
    5. ')' → logprob: -11.001022338867188
    6. 'a' → logprob: -11.376022338867188
    7. ' ' → logprob: -12.376022338867188
    8. '[' → logprob: -12.751022338867188
    9. ',b' → logprob: -12.876022338867188
    10. '(' → logprob: -13.626022338867188

Token 148: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20143741369247437
    2. ' a' → logprob: -1.7014374732971191
    3. ' ' → logprob: -11.576436996459961
    4. 'b' → logprob: -11.951436996459961
    5. '	a' → logprob: -13.451436996459961
    6. '<|end|>' → logprob: -13.576436996459961
    7. ' b' → logprob: -13.701436996459961
    8. ')' → logprob: -14.076436996459961
    9. ')a' → logprob: -14.326436996459961
    10. '(a' → logprob: -14.451436996459961

Token 149: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.9650025428272784e-05
    2. '[' → logprob: -10.500040054321289
    3. ',' → logprob: -12.125040054321289
    4. ' ' → logprob: -13.250040054321289
    5. '₂' → logprob: -13.937540054321289
    6. '   ' → logprob: -14.312540054321289
    7. ')' → logprob: -14.375040054321289
    8. '<|end|>' → logprob: -14.562540054321289
    9. 's' → logprob: -14.687540054321289
    10. '1' → logprob: -15.250040054321289

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.943783253314905e-05
    2. ',b' → logprob: -9.875059127807617
    3. ' ,' → logprob: -12.000059127807617
    4. 'b' → logprob: -14.000059127807617
    5. ')' → logprob: -14.500059127807617
    6. 'a' → logprob: -16.000059127807617
    7. ' b' → logprob: -16.125059127807617
    8. ' ' → logprob: -16.500059127807617
    9. ',
' → logprob: -16.750059127807617
    10. ',a' → logprob: -16.875059127807617

Token 151: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5759422183036804
    2. 'b' → logprob: -0.8259422183036804
    3. '(b' → logprob: -14.325942039489746
    4. ' ' → logprob: -14.450942039489746
    5. ')' → logprob: -14.575942039489746
    6. ')b' → logprob: -14.950942039489746
    7. '	b' → logprob: -15.700942039489746
    8. ' ' → logprob: -16.200942993164062
    9. ' б' → logprob: -16.575942993164062
    10. 'a' → logprob: -16.575942993164062

Token 152: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00613058777526021
    2. '[' → logprob: -5.756130695343018
    3. '1' → logprob: -6.006130695343018
    4. ')' → logprob: -8.00613021850586
    5. ',' → logprob: -9.50613021850586
    6. '```' → logprob: -10.63113021850586
    7. ' ' → logprob: -10.88113021850586
    8. ']' → logprob: -11.94363021850586
    9. '-' → logprob: -12.63113021850586
    10. '])' → logprob: -13.13113021850586

Token 153: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004982246900908649
    2. '<|end|>' → logprob: -7.875498294830322
    3. ' )' → logprob: -9.375497817993164
    4. ')
' → logprob: -11.125497817993164
    5. '   ' → logprob: -12.125497817993164
    6. ')>' → logprob: -12.500497817993164
    7. ',' → logprob: -13.000497817993164
    8. '<|end|>' → logprob: -13.375497817993164
    9. ' ' → logprob: -13.500497817993164
    10. ')>=' → logprob: -14.500497817993164

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02150561846792698
    2. '<|end|>' → logprob: -4.396505832672119
    3. ',' → logprob: -6.271505832672119
    4. '*' → logprob: -6.771505832672119
    5. 'c' → logprob: -6.896505832672119
    6. ' ' → logprob: -7.021505832672119
    7. ' and' → logprob: -7.271505832672119
    8. ' *' → logprob: -7.521505832672119
    9. '*c' → logprob: -7.646505832672119
    10. ' c' → logprob: -8.146505355834961

Token 155: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5644091963768005
    2. 'c' (adapté à ' c') → logprob: -1.1894092559814453
    3. ' c' → logprob: -2.4394092559814453
    4. ' ' → logprob: -3.8144092559814453
    5. '*' → logprob: -6.064409255981445
    6. ' if' → logprob: -6.189409255981445
    7. '  ' → logprob: -6.439409255981445
    8. ')' → logprob: -6.439409255981445
    9. '<|end|>' → logprob: -6.439409255981445
    10. ',' → logprob: -6.564409255981445

Token 156: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2738264203071594
    2. '3' → logprob: -1.6488263607025146
    3. '2' → logprob: -3.5238263607025146
    4. '*' → logprob: -5.148826599121094
    5. '#' → logprob: -5.648826599121094
    6. '<|end|>' → logprob: -6.023826599121094
    7. ' ' → logprob: -6.523826599121094
    8. '[' → logprob: -6.648826599121094
    9. 'o' → logprob: -7.398826599121094
    10. '.' → logprob: -7.523826599121094

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002476016292348504
    2. '=' → logprob: -6.002476215362549
    3. ' ' → logprob: -15.62747573852539
    4. ' =
' → logprob: -16.37747573852539
    5. ' =)' → logprob: -18.00247573852539
    6. '<|end|>' → logprob: -18.12747573852539
    7. ')' → logprob: -18.37747573852539
    8. ' ' → logprob: -19.37747573852539
    9. '   ' → logprob: -19.62747573852539
    10. 's' → logprob: -19.62747573852539

Token 158: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.04691501706838608
    2. ' cc' → logprob: -3.171915054321289
    3. '(cc' → logprob: -5.546915054321289
    4. '	cc' → logprob: -12.296915054321289
    5. '(' → logprob: -13.796915054321289
    6. '_cc' → logprob: -13.921915054321289
    7. ' ' → logprob: -14.046915054321289
    8. 'c' → logprob: -15.296915054321289
    9. '0' → logprob: -15.546915054321289
    10. '
' → logprob: -15.796915054321289

Token 159: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.45848218582978e-06
    2. '1' → logprob: -14.62500286102295
    3. ' w' → logprob: -15.12500286102295
    4. 'W' → logprob: -15.12500286102295
    5. 'cw' → logprob: -15.37500286102295
    6. 'c' → logprob: -15.87500286102295
    7. '(w' → logprob: -16.000001907348633
    8. '(' → logprob: -16.375001907348633
    9. '<w' → logprob: -16.500001907348633
    10. '```' → logprob: -16.500001907348633

Token 160: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -1.771655115589965e-05
    2. '(' → logprob: -11.250018119812012
    3. 'b' → logprob: -12.375018119812012
    4. '(a' → logprob: -15.375018119812012
    5. '(
' → logprob: -16.000017166137695
    6. ' (' → logprob: -16.125017166137695
    7. '<|end|>' → logprob: -18.250017166137695
    8. ' b' → logprob: -18.875017166137695
    9. '((' → logprob: -18.875017166137695
    10. '(B' → logprob: -19.625017166137695

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3915141355246305e-05
    2. '(' → logprob: -11.25002384185791
    3. '[' → logprob: -12.00002384185791
    4. '<|end|>' → logprob: -12.87502384185791
    5. '3' → logprob: -13.75002384185791
    6. '2' → logprob: -14.50002384185791
    7. ' ' → logprob: -16.375024795532227
    8. ')' → logprob: -16.437524795532227
    9. '(
' → logprob: -16.625024795532227
    10. ' (' → logprob: -16.937524795532227

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001305950863752514
    2. ' ,' → logprob: -9.125130653381348
    3. ',b' → logprob: -10.875130653381348
    4. ')' → logprob: -13.875130653381348
    5. ',
' → logprob: -14.750130653381348
    6. '<|end|>' → logprob: -14.875130653381348
    7. '‌,' → logprob: -15.250130653381348
    8. '[' → logprob: -15.625130653381348
    9. ' ' → logprob: -16.00012969970703
    10. ',a' → logprob: -16.12512969970703

Token 163: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011067037470638752
    2. ' b' → logprob: -4.511066913604736
    3. '<|end|>' → logprob: -11.011067390441895
    4. ' ' → logprob: -13.386067390441895
    5. '	b' → logprob: -15.011067390441895
    6. '[' → logprob: -16.011066436767578
    7. ',' → logprob: -16.386066436767578
    8. '   ' → logprob: -16.511066436767578
    9. ')b' → logprob: -16.636066436767578
    10. '```' → logprob: -16.636066436767578

Token 164: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47628018260002136
    2. ',' → logprob: -1.6012802124023438
    3. '2' → logprob: -1.8512802124023438
    4. '<|end|>' → logprob: -4.726280212402344
    5. '[' → logprob: -4.851280212402344
    6. ',b' → logprob: -6.601280212402344
    7. ')' → logprob: -7.476280212402344
    8. ' ,' → logprob: -8.351280212402344
    9. 's' → logprob: -8.351280212402344
    10. ' ' → logprob: -8.351280212402344

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008315741084516048
    2. '(a' → logprob: -5.008315563201904
    3. ',a' → logprob: -7.883315563201904
    4. 'a' → logprob: -8.133316040039062
    5. '(' → logprob: -8.133316040039062
    6. '<|end|>' → logprob: -8.258316040039062
    7. ' ,' → logprob: -8.508316040039062
    8. ')' → logprob: -9.008316040039062
    9. ' a' → logprob: -10.758316040039062
    10. ' (' → logprob: -11.258316040039062

Token 166: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00020401719666551799
    2. ' a' → logprob: -8.500204086303711
    3. '<|end|>' → logprob: -15.500204086303711
    4. ' ' → logprob: -15.625204086303711
    5. '   ' → logprob: -15.750204086303711
    6. '	a' → logprob: -16.75020408630371
    7. ')' → logprob: -16.87520408630371
    8. '  ' → logprob: -17.37520408630371
    9. '
' → logprob: -18.12520408630371
    10. ')a' → logprob: -18.25020408630371

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.500000953674316
    3. ')' → logprob: -16.375
    4. ' ' → logprob: -16.75
    5. '<|end|>' → logprob: -17.5
    6. '2' → logprob: -18.6875
    7. '۱' → logprob: -19.75
    8. '(' → logprob: -19.9375
    9. '১' → logprob: -20.0625
    10. 'a' → logprob: -20.0625

Token 168: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003635945962741971
    2. ')
' → logprob: -5.628635883331299
    3. ' )' → logprob: -10.503636360168457
    4. '   ' → logprob: -11.878636360168457
    5. ' )
' → logprob: -14.253636360168457
    6. ')

' → logprob: -15.253636360168457
    7. '<|end|>' → logprob: -15.878636360168457
    8. ' ' → logprob: -16.00363540649414
    9. '),' → logprob: -17.00363540649414
    10. ')
' → logprob: -17.00363540649414

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009537404985167086
    2. ' ' → logprob: -7.875953674316406
    3. '<|end|>' → logprob: -8.500953674316406
    4. '    
' → logprob: -9.125953674316406
    5. ')' → logprob: -9.875953674316406
    6. ' c' → logprob: -10.000953674316406
    7. '  ' → logprob: -10.125953674316406
    8. '  
' → logprob: -10.500953674316406
    9. '   
' → logprob: -11.125953674316406
    10. '
' → logprob: -11.125953674316406

Token 170: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.5792280435562134
    2. ' c' → logprob: -0.8292280435562134
    3. '   ' → logprob: -6.454227924346924
    4. ' ' → logprob: -6.579227924346924
    5. '	c' → logprob: -8.204228401184082
    6. '  ' → logprob: -10.704228401184082
    7. '    ' → logprob: -12.079228401184082
    8. ' ' → logprob: -12.329228401184082
    9. ' 
' → logprob: -12.829228401184082
    10. '0' → logprob: -13.829228401184082

Token 171: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.12724432349205017
    2. '3' → logprob: -2.127244234085083
    3. '2' → logprob: -8.127243995666504
    4. '1' → logprob: -11.002243995666504
    5. '_' → logprob: -13.502243995666504
    6. '<|end|>' → logprob: -13.752243995666504
    7. ' ' → logprob: -14.252243995666504
    8. '[' → logprob: -15.377243995666504
    9. '```' → logprob: -15.377243995666504
    10. '0' → logprob: -16.06474494934082

Token 172: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759409070014954
    2. '=' → logprob: -0.8259409070014954
    3. ' ' → logprob: -14.20094108581543
    4. ')' → logprob: -15.07594108581543
    5. ',' → logprob: -16.32594108581543
    6. '<|end|>' → logprob: -16.32594108581543
    7. '>' → logprob: -17.07594108581543
    8. ' =[' → logprob: -17.20094108581543
    9. '.' → logprob: -17.32594108581543
    10. ' =)' → logprob: -17.32594108581543

Token 173: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.7470039129257202
    2. ' cc' → logprob: -0.7470039129257202
    3. '(cc' → logprob: -3.4970040321350098
    4. 'b' → logprob: -4.37200403213501
    5. '(b' → logprob: -4.74700403213501
    6. 'c' → logprob: -8.497003555297852
    7. ' b' → logprob: -8.747003555297852
    8. '(' → logprob: -8.747003555297852
    9. ' (' → logprob: -8.997003555297852
    10. ' bb' → logprob: -10.247003555297852

Token 174: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00029112942866049707
    2. '(b' → logprob: -8.250290870666504
    3. 'W' → logprob: -11.875290870666504
    4. 'b' → logprob: -12.500290870666504
    5. '(' → logprob: -12.500290870666504
    6. '1' → logprob: -12.625290870666504
    7. 'wb' → logprob: -12.875290870666504
    8. '(w' → logprob: -13.000290870666504
    9. '[b' → logprob: -13.250290870666504
    10. ' w' → logprob: -14.125290870666504

Token 175: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -8.180258191714529e-06
    2. 'b' → logprob: -12.125008583068848
    3. '(' → logprob: -13.125008583068848
    4. '<|end|>' → logprob: -14.750008583068848
    5. ' (' → logprob: -14.875008583068848
    6. '(
' → logprob: -17.37500762939453
    7. '```' → logprob: -18.37500762939453
    8. ')b' → logprob: -19.12500762939453
    9. '[b' → logprob: -19.75000762939453
    10. '=b' → logprob: -19.75000762939453

Token 176: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002531310310587287
    2. '[' → logprob: -6.6275315284729
    3. '2' → logprob: -7.6275315284729
    4. '(' → logprob: -7.7525315284729
    5. 'b' → logprob: -8.502531051635742
    6. '(b' → logprob: -10.002531051635742
    7. '<|end|>' → logprob: -11.252531051635742
    8. ')' → logprob: -12.502531051635742
    9. ' b' → logprob: -12.627531051635742
    10. ' ' → logprob: -12.752531051635742

Token 177: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023718432057648897
    2. ',b' → logprob: -6.127371788024902
    3. ' ,' → logprob: -9.002371788024902
    4. '<|end|>' → logprob: -10.377371788024902
    5. '[' → logprob: -11.377371788024902
    6. ' ' → logprob: -11.627371788024902
    7. 'b' → logprob: -12.252371788024902
    8. ')' → logprob: -13.002371788024902
    9. ' b' → logprob: -13.252371788024902
    10. '   ' → logprob: -14.627371788024902

Token 178: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12693114578723907
    2. ' b' → logprob: -2.1269311904907227
    3. ' ' → logprob: -13.376931190490723
    4. '   ' → logprob: -14.376931190490723
    5. '<|end|>' → logprob: -14.876931190490723
    6. '	b' → logprob: -15.376931190490723
    7. '  ' → logprob: -16.376930236816406
    8. '    ' → logprob: -16.501930236816406
    9. ')b' → logprob: -17.064430236816406
    10. '(b' → logprob: -17.064430236816406

Token 179: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007106290198862553
    2. '[' → logprob: -5.132106304168701
    3. ',' → logprob: -7.257106304168701
    4. ' ' → logprob: -8.257105827331543
    5. 'b' → logprob: -9.507105827331543
    6. '(' → logprob: -9.882105827331543
    7. '<|end|>' → logprob: -10.882105827331543
    8. '-' → logprob: -11.507105827331543
    9. '_' → logprob: -11.632105827331543
    10. ')' → logprob: -11.757105827331543

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019781860464718193
    2. ' ,' → logprob: -8.750197410583496
    3. '<|end|>' → logprob: -11.250197410583496
    4. ',a' → logprob: -11.500197410583496
    5. ',b' → logprob: -12.375197410583496
    6. 'a' → logprob: -12.625197410583496
    7. ')' → logprob: -12.875197410583496
    8. ' ' → logprob: -13.000197410583496
    9. '[' → logprob: -13.625197410583496
    10. 'b' → logprob: -14.125197410583496

Token 181: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04858918860554695
    2. ' a' → logprob: -3.0485892295837402
    3. ' ' → logprob: -13.923588752746582
    4. '	a' → logprob: -14.548588752746582
    5. '   ' → logprob: -14.923588752746582
    6. '  ' → logprob: -17.5485897064209
    7. '[a' → logprob: -18.2985897064209
    8. ')' → logprob: -18.4235897064209
    9. ')a' → logprob: -18.4235897064209
    10. '    ' → logprob: -18.6735897064209

Token 182: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006423805025406182
    2. '[' → logprob: -8.000642776489258
    3. '1' → logprob: -8.125642776489258
    4. '0' → logprob: -12.125642776489258
    5. ' ' → logprob: -12.625642776489258
    6. ')' → logprob: -14.000642776489258
    7. ']' → logprob: -14.500642776489258
    8. 'a' → logprob: -14.625642776489258
    9. '4' → logprob: -16.000642776489258
    10. '(' → logprob: -16.125642776489258

Token 183: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7372048862162046e-05
    2. '   ' → logprob: -11.250027656555176
    3. ')
' → logprob: -11.625027656555176
    4. ' )' → logprob: -12.375027656555176
    5. ')<' → logprob: -15.625027656555176
    6. ')`' → logprob: -15.875027656555176
    7. ')>' → logprob: -16.00002670288086
    8. ')

' → logprob: -16.12502670288086
    9. ')return' → logprob: -16.12502670288086
    10. ' ' → logprob: -16.75002670288086

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035415017046034336
    2. '    
' → logprob: -6.128541469573975
    3. '
' → logprob: -7.378541469573975
    4. ' if' → logprob: -8.253541946411133
    5. 'if' → logprob: -9.003541946411133
    6. ' return' → logprob: -9.503541946411133
    7. ' 
' → logprob: -9.628541946411133
    8. 'return' → logprob: -9.878541946411133
    9. ')' → logprob: -10.753541946411133
    10. '   
' → logprob: -10.753541946411133

Token 185: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.283574640750885
    2. 'return' (adapté à ' return') → logprob: -2.4085745811462402
    3. ' if' → logprob: -2.4085745811462402
    4. ' return' → logprob: -3.2835745811462402
    5. '   ' → logprob: -3.5335745811462402
    6. '
' → logprob: -9.158575057983398
    7. '    
' → logprob: -9.158575057983398
    8. ' ' → logprob: -9.783575057983398
    9. '	return' → logprob: -11.408575057983398
    10. ' 
' → logprob: -11.408575057983398

Token 186: ' c' (ID: 274)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.14084090292453766
    2. 'c' → logprob: -2.265841007232666
    3. ' (' → logprob: -4.015841007232666
    4. ' c' → logprob: -4.890841007232666
    5. '(' → logprob: -6.390841007232666
    6. '((' → logprob: -7.890841007232666
    7. '(
' → logprob: -11.890840530395508
    8. ' ((' → logprob: -12.140840530395508
    9. '   ' → logprob: -12.390840530395508
    10. '
' → logprob: -12.640840530395508

Token 187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.310693111619912e-05
    2. '(' → logprob: -10.375042915344238
    3. '[' → logprob: -13.000042915344238
    4. '*(' → logprob: -13.625042915344238
    5. '*' → logprob: -13.750042915344238
    6. '4' → logprob: -13.875042915344238
    7. '   ' → logprob: -14.250042915344238
    8. '_' → logprob: -14.375042915344238
    9. '**' → logprob: -14.625042915344238
    10. '2' → logprob: -14.625042915344238

Token 188: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.010021437890827656
    2. ' *' → logprob: -4.635021209716797
    3. '<=' → logprob: -8.385021209716797
    4. '*c' → logprob: -10.760021209716797
    5. ' <=' → logprob: -12.385021209716797
    6. '==' → logprob: -12.885021209716797
    7. '<' → logprob: -12.885021209716797
    8. '*=' → logprob: -13.260021209716797
    9. '**' → logprob: -13.760021209716797
    10. '[' → logprob: -14.010021209716797

Token 189: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002815217012539506
    2. ' c' → logprob: -5.877815246582031
    3. '<' → logprob: -12.752815246582031
    4. '```' → logprob: -13.127815246582031
    5. ' ' → logprob: -13.627815246582031
    6. '4' → logprob: -13.877815246582031
    7. '<|end|>' → logprob: -13.877815246582031
    8. '2' → logprob: -14.502815246582031
    9. '	c' → logprob: -14.752815246582031
    10. '<=' → logprob: -15.377815246582031

Token 190: '2' (ID: 17)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.16060307621955872
    2. '2' → logprob: -1.9106030464172363
    3. '3' → logprob: -8.285603523254395
    4. '1' → logprob: -9.785603523254395
    5. '```' → logprob: -10.160603523254395
    6. '<' → logprob: -12.035603523254395
    7. 'w' → logprob: -12.535603523254395
    8. ' ' → logprob: -12.535603523254395
    9. 'c' → logprob: -12.910603523254395
    10. '42' → logprob: -13.035603523254395

Token 191: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4295523166656494
    2. '<=' → logprob: -1.0545523166656494
    3. '<' → logprob: -7.67955207824707
    4. ' <' → logprob: -7.92955207824707
    5. '[' → logprob: -11.55455207824707
    6. '0' → logprob: -11.67955207824707
    7. ' ' → logprob: -12.55455207824707
    8. ')<=' → logprob: -12.80455207824707
    9. ']<=' → logprob: -13.67955207824707
    10. '1' → logprob: -14.17955207824707

Token 192: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5124455094337463
    2. '=' → logprob: -1.2624454498291016
    3. ' ' → logprob: -2.1374454498291016
    4. ' =' → logprob: -9.887445449829102
    5. '<|end|>' → logprob: -14.137445449829102
    6. '1' → logprob: -14.512445449829102
    7. '==' → logprob: -15.324945449829102
    8. '=
' → logprob: -15.449945449829102
    9. '000' → logprob: -15.762445449829102
    10. ' ' → logprob: -16.0124454498291

Token 193: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03818470984697342
    2. '=' → logprob: -3.288184642791748
    3. ' ' → logprob: -8.913185119628906
    4. ' =' → logprob: -11.788185119628906
    5. '1' → logprob: -15.288185119628906
    6. '۰' → logprob: -15.663185119628906
    7. '<|end|>' → logprob: -16.038185119628906
    8. '==' → logprob: -16.413185119628906
    9. '[' → logprob: -16.663185119628906
    10. 'or' → logprob: -16.788185119628906

Token 194: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011049113236367702
    2. 'and' → logprob: -4.511049270629883
    3. ' ' → logprob: -13.761049270629883
    4. '	and' → logprob: -16.261049270629883
    5. ' or' → logprob: -16.386049270629883
    6. ' a' → logprob: -17.511049270629883
    7. ' ' → logprob: -17.761049270629883
    8. '   ' → logprob: -17.886049270629883
    9. 'a' → logprob: -18.761049270629883
    10. '0' → logprob: -18.886049270629883

Token 195: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20141392946243286
    2. ' c' → logprob: -1.701413869857788
    3. '	c' → logprob: -14.951414108276367
    4. ' ' → logprob: -15.576414108276367
    5. '   ' → logprob: -15.826414108276367
    6. ' ' → logprob: -17.201414108276367
    7. '  ' → logprob: -17.701414108276367
    8. '
' → logprob: -17.951414108276367
    9. '\' → logprob: -18.826414108276367
    10. '```' → logprob: -19.076414108276367

Token 196: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0003322473494336009
    2. '1' → logprob: -8.12533187866211
    3. '4' → logprob: -10.50033187866211
    4. '```' → logprob: -12.75033187866211
    5. '_' → logprob: -13.37533187866211
    6. '*' → logprob: -13.50033187866211
    7. '`' → logprob: -14.12533187866211
    8. ' ' → logprob: -14.75033187866211
    9. '**' → logprob: -14.87533187866211
    10. 'c' → logprob: -15.37533187866211

Token 197: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.004085758700966835
    2. '*' → logprob: -5.504085540771484
    3. '<|end|>' → logprob: -12.254085540771484
    4. '<' → logprob: -13.754085540771484
    5. ' <' → logprob: -14.629085540771484
    6. ' ' → logprob: -14.754085540771484
    7. ' ' → logprob: -15.004085540771484
    8. '**' → logprob: -16.629085540771484
    9. ' *
' → logprob: -17.129085540771484
    10. ' **' → logprob: -17.379085540771484

Token 198: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2826007604598999
    2. ' c' → logprob: -1.4076007604599
    3. '0' → logprob: -7.1576008796691895
    4. ' ' → logprob: -7.6576008796691895
    5. '4' → logprob: -8.657600402832031
    6. '<|end|>' → logprob: -10.782600402832031
    7. '	c' → logprob: -14.032600402832031
    8. '
' → logprob: -14.282600402832031
    9. '```' → logprob: -14.282600402832031
    10. ')c' → logprob: -14.907600402832031

Token 199: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.05489424243569374
    2. '3' → logprob: -2.929894208908081
    3. '<|end|>' → logprob: -12.17989444732666
    4. ' ' → logprob: -12.55489444732666
    5. '```' → logprob: -13.92989444732666
    6. '1' → logprob: -14.17989444732666
    7. '0' → logprob: -14.42989444732666
    8. '_' → logprob: -14.80489444732666
    9. '<' → logprob: -15.80489444732666
    10. '2' → logprob: -15.92989444732666

Token 200: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3132663369178772
    2. ' <' → logprob: -1.3132662773132324
    3. ' ' → logprob: -13.18826675415039
    4. '0' → logprob: -13.43826675415039
    5. ')<' → logprob: -14.93826675415039
    6. '[' → logprob: -15.06326675415039
    7. '()<' → logprob: -15.81326675415039
    8. '<|end|>' → logprob: -16.06326675415039
    9. '1' → logprob: -16.56326675415039
    10. '4' → logprob: -17.06326675415039

Token 201: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017036291537806392
    2. ' ' → logprob: -6.37670373916626
    3. '<|end|>' → logprob: -14.001703262329102
    4. '=' → logprob: -15.001703262329102
    5. '```' → logprob: -16.6267032623291
    6. '[' → logprob: -17.1267032623291
    7. '1' → logprob: -17.1892032623291
    8. '(' → logprob: -17.3142032623291
    9. '۰' → logprob: -17.3142032623291
    10. ' ' → logprob: -17.4392032623291

Token 202: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.662937372922897e-05
    2. ' ' → logprob: -9.250096321105957
    3. '```' → logprob: -15.500096321105957
    4. '<|end|>' → logprob: -16.375097274780273
    5. '   ' → logprob: -17.062597274780273
    6. '1' → logprob: -17.187597274780273
    7. '[' → logprob: -17.250097274780273
    8. '=' → logprob: -17.375097274780273
    9. '
' → logprob: -17.625097274780273
    10. '۰' → logprob: -17.875097274780273

Token 203: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7295657396316528
    2. '<|end|>' → logprob: -0.7295657396316528
    3. '\n' → logprob: -3.6045656204223633
    4. ' or' → logprob: -5.604565620422363
    5. '

' → logprob: -6.479565620422363
    6. '#' → logprob: -7.604565620422363
    7. 'def' → logprob: -7.729565620422363
    8. '\' → logprob: -7.979565620422363
    9. 'or' → logprob: -8.104565620422363
    10. ' and' → logprob: -8.229565620422363

Token 204: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000755427754484117
    2. '#' → logprob: -7.500755310058594
    3. '
' → logprob: -9.500755310058594
    4. 'class' → logprob: -10.250755310058594
    5. '```' → logprob: -10.875755310058594
    6. 'for' → logprob: -11.750755310058594
    7. '<|end|>' → logprob: -11.875755310058594
    8. 'a' → logprob: -12.000755310058594
    9. 'n' → logprob: -12.000755310058594
    10. 'graph' → logprob: -12.125755310058594

Token 205: ' inside' (ID: 6772)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.088865727186203
    2. ' solve' → logprob: -3.2138657569885254
    3. ' is' → logprob: -4.463865756988525
    4. ' find' → logprob: -4.838865756988525
    5. ' build' → logprob: -5.713865756988525
    6. ' bfs' → logprob: -5.713865756988525
    7. ' convex' → logprob: -6.088865756988525
    8. ' can' → logprob: -6.088865756988525
    9. 'main' → logprob: -6.338865756988525
    10. ' connected' → logprob: -6.588865756988525

Token 206: '_polygon' (ID: 195427)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.5897905826568604
    2. '(point' → logprob: -0.8397905826568604
    3. '(' → logprob: -5.089790344238281
    4. '(poly' → logprob: -5.214790344238281
    5. '(points' → logprob: -7.339790344238281
    6. '(a' → logprob: -7.589790344238281
    7. '(pol' → logprob: -7.964790344238281
    8. '(x' → logprob: -8.464790344238281
    9. '(circle' → logprob: -9.089790344238281
    10. '(rect' → logprob: -9.089790344238281

Token 207: '(poly' (ID: 175644)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.3212907612323761
    2. '(point' → logprob: -1.3212907314300537
    3. '(points' → logprob: -5.196290969848633
    4. '(poly' → logprob: -6.571290969848633
    5. '(' → logprob: -6.946290969848633
    6. '(pol' → logprob: -9.571290969848633
    7. '(P' → logprob: -11.696290969848633
    8. '(Point' → logprob: -11.696290969848633
    9. '(pt' → logprob: -12.696290969848633
    10. '(vertices' → logprob: -13.196290969848633

Token 208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05965491384267807
    2. '):' → logprob: -2.934654951095581
    3. '):
' → logprob: -5.434654712677002
    4. ',p' → logprob: -8.43465518951416
    5. ')' → logprob: -10.05965518951416
    6. '(p' → logprob: -11.05965518951416
    7. 'p' → logprob: -11.18465518951416
    8. '(poly' → logprob: -11.18465518951416
    9. ' ,' → logprob: -11.55965518951416
    10. '):
' → logprob: -11.55965518951416

Token 209: ' p' (ID: 275)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.1480642408132553
    2. 'p' → logprob: -2.148064136505127
    3. ' point' → logprob: -3.898064136505127
    4. 'pt' → logprob: -7.898064136505127
    5. ' p' → logprob: -8.273064613342285
    6. ' pt' → logprob: -13.023064613342285
    7. 'x' → logprob: -13.273064613342285
    8. '	point' → logprob: -14.148064613342285
    9. '_point' → logprob: -14.398064613342285
    10. '(point' → logprob: -14.648064613342285

Token 210: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10029357671737671
    2. '):
' → logprob: -2.3502936363220215
    3. ')' → logprob: -9.475293159484863
    4. '):
' → logprob: -11.975293159484863
    5. '):

' → logprob: -12.850293159484863
    6. ' ):' → logprob: -15.100293159484863
    7. 'oint' → logprob: -15.475293159484863
    8. ',' → logprob: -15.975293159484863
    9. 'oints' → logprob: -16.60029411315918
    10. 't' → logprob: -16.60029411315918

Token 211: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00043555660522542894
    2. '<|end|>' → logprob: -8.375435829162598
    3. '    
' → logprob: -9.375435829162598
    4. ' return' → logprob: -10.375435829162598
    5. '    ' → logprob: -10.750435829162598
    6. ':' → logprob: -10.875435829162598
    7. '       ' → logprob: -11.500435829162598
    8. '(' → logprob: -12.250435829162598
    9. '   ' → logprob: -12.250435829162598
    10. ')' → logprob: -12.500435829162598

Token 212: ' """' (ID: 9280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09548158943653107
    2. 'n' → logprob: -2.8454816341400146
    3. 'def' → logprob: -3.9704816341400146
    4. 'cnt' → logprob: -4.8454813957214355
    5. 'x' → logprob: -5.9704813957214355
    6. ' n' → logprob: -6.8454813957214355
    7. 'count' → logprob: -7.3454813957214355
    8. 'inside' → logprob: -7.8454813957214355
    9. 'cross' → logprob: -7.8454813957214355
    10. '"""
' → logprob: -9.095481872558594

Token 213: 'Check' (ID: 4383)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12393449991941452
    2. 'n' → logprob: -2.873934507369995
    3. 'for' → logprob: -3.623934507369995
    4. 'x' → logprob: -4.873934268951416
    5. '   ' → logprob: -4.873934268951416
    6. '#' → logprob: -5.248934268951416
    7. ' def' → logprob: -5.498934268951416
    8. 'if' → logprob: -5.998934268951416
    9. ' n' → logprob: -6.748934268951416
    10. 'inside' → logprob: -7.248934268951416

Token 214: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.003351782448589802
    2. '   ' → logprob: -6.25335168838501
    3. ' whether' → logprob: -6.75335168838501
    4. 'if' → logprob: -9.378352165222168
    5. '(' → logprob: -10.128352165222168
    6. ' ' → logprob: -10.503352165222168
    7. '  ' → logprob: -10.878352165222168
    8. 'def' → logprob: -11.128352165222168
    9. ' return' → logprob: -11.378352165222168
    10. '    ' → logprob: -11.503352165222168

Token 215: ' point' (ID: 2438)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.2779584527015686
    2. ' poly' → logprob: -2.027958393096924
    3. 'p' → logprob: -2.777958393096924
    4. 'poly' → logprob: -3.402958393096924
    5. ' any' → logprob: -4.402958393096924
    6. ' all' → logprob: -6.152958393096924
    7. ' the' → logprob: -8.027958869934082
    8. ' not' → logprob: -8.402958869934082
    9. 'point' → logprob: -8.527958869934082
    10. ' point' → logprob: -9.027958869934082

Token 216: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.3725354075431824
    2. ' ' → logprob: -1.9975354671478271
    3. ' is' → logprob: -2.497535467147827
    4. ')' → logprob: -2.872535467147827
    5. 's' → logprob: -4.747535228729248
    6. ' inside' → logprob: -5.122535228729248
    7. 'p' → logprob: -5.372535228729248
    8. '_' → logprob: -5.497535228729248
    9. ' a' → logprob: -5.497535228729248
    10. ' in' → logprob: -5.622535228729248

Token 217: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07847658544778824
    2. ' in' → logprob: -2.828476667404175
    3. ')' → logprob: -5.203476428985596
    4. ' ' → logprob: -5.578476428985596
    5. 'in' → logprob: -5.578476428985596
    6. ' inside' → logprob: -6.078476428985596
    7. 'inside' → logprob: -7.703476428985596
    8. 'is' → logprob: -8.453476905822754
    9. ' )' → logprob: -9.453476905822754
    10. ',' → logprob: -9.453476905822754

Token 218: ' inside' (ID: 6772)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.25312140583992004
    2. ' inside' → logprob: -1.5031213760375977
    3. 'in' → logprob: -6.878121376037598
    4. ' in' → logprob: -9.503121376037598
    5. ' strictly' → logprob: -9.878121376037598
    6. 'on' → logprob: -12.003121376037598
    7. 'strict' → logprob: -12.253121376037598
    8. 'None' → logprob: -12.378121376037598
    9. '_inside' → logprob: -12.378121376037598
    10. ' None' → logprob: -12.503121376037598

Token 219: ' polygon' (ID: 65081)
  Prédit: ' poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' poly' → logprob: -0.3137963116168976
    2. 'poly' → logprob: -1.3137962818145752
    3. '(poly' → logprob: -7.688796520233154
    4. ' polygon' → logprob: -9.688796043395996
    5. 'polygon' → logprob: -12.063796043395996
    6. ' the' → logprob: -12.188796043395996
    7. 'the' → logprob: -13.563796043395996
    8. '_poly' → logprob: -14.313796043395996
    9. ')' → logprob: -14.688796043395996
    10. '   ' → logprob: -14.813796043395996

Token 220: ' poly' (ID: 14600)
  Prédit: '(poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -0.013455375097692013
    2. '):' → logprob: -4.763455390930176
    3. '(p' → logprob: -6.138455390930176
    4. ')' → logprob: -7.138455390930176
    5. '(pol' → logprob: -7.388455390930176
    6. '):
' → logprob: -7.763455390930176
    7. ',' → logprob: -8.138455390930176
    8. 'poly' → logprob: -8.638455390930176
    9. ' poly' → logprob: -8.638455390930176
    10. ' (' → logprob: -9.888455390930176

Token 221: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4489975571632385
    2. '):
' → logprob: -1.0739974975585938
    3. '   ' → logprob: -3.9489974975585938
    4. 'def' → logprob: -8.323997497558594
    5. ',' → logprob: -8.448997497558594
    6. ')' → logprob: -9.073997497558594
    7. '(p' → logprob: -9.198997497558594
    8. ':' → logprob: -9.823997497558594
    9. ':
' → logprob: -10.823997497558594
    10. '):
' → logprob: -10.948997497558594

Token 222: 'conv' (ID: 26093)
  Prédit: ' poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' poly' → logprob: -0.9817335605621338
    2. 'poly' → logprob: -1.1067335605621338
    3. '   ' → logprob: -1.3567335605621338
    4. 'def' → logprob: -4.106733322143555
    5. ')' → logprob: -4.731733322143555
    6. '(poly' → logprob: -5.356733322143555
    7. ' polygon' → logprob: -6.481733322143555
    8. 'polygon' → logprob: -6.856733322143555
    9. 'ray' → logprob: -7.231733322143555
    10. ' def' → logprob: -7.606733322143555

Token 223: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0005635190173052251
    2. ')' → logprob: -8.750563621520996
    3. '   ' → logprob: -8.750563621520996
    4. 'exp' → logprob: -9.250563621520996
    5. '```' → logprob: -10.250563621520996
    6. ')
' → logprob: -11.250563621520996
    7. '=' → logprob: -11.500563621520996
    8. 'p' → logprob: -11.625563621520996
    9. '(' → logprob: -11.625563621520996
    10. 'er' → logprob: -11.750563621520996

Token 224: ' polygon' (ID: 65081)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1653498262166977
    2. ' or' → logprob: -1.9153498411178589
    3. ' polygon' → logprob: -5.540349960327148
    4. 'or' → logprob: -7.665349960327148
    5. ')
' → logprob: -8.290349960327148
    6. '_polygon' → logprob: -9.040349960327148
    7. ' and' → logprob: -9.165349960327148
    8. 'polygon' → logprob: -9.540349960327148
    9. ' )' → logprob: -9.665349960327148
    10. ')**' → logprob: -10.790349960327148

Token 225: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3327805697917938
    2. ')' → logprob: -1.3327805995941162
    3. '):
' → logprob: -3.957780599594116
    4. '   ' → logprob: -8.957780838012695
    5. '):

' → logprob: -10.582780838012695
    6. 'def' → logprob: -10.707780838012695
    7. ',' → logprob: -10.957780838012695
    8. ')
' → logprob: -11.082780838012695
    9. '):
' → logprob: -12.457780838012695
    10. ')**' → logprob: -12.457780838012695

Token 226: ' using' (ID: 2360)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008137213997542858
    2. '):
' → logprob: -5.258137226104736
    3. '   ' → logprob: -6.008137226104736
    4. ',' → logprob: -8.508136749267578
    5. ':' → logprob: -8.758136749267578
    6. ')' → logprob: -10.008136749267578
    7. 'def' → logprob: -10.508136749267578
    8. '(p' → logprob: -12.633136749267578
    9. ':
' → logprob: -13.883136749267578
    10. ' ):' → logprob: -14.008136749267578

Token 227: ' ray' (ID: 22420)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -1.1612718105316162
    2. ' poly' → logprob: -1.5362718105316162
    3. ' ray' → logprob: -2.411271810531616
    4. 'ray' → logprob: -2.536271810531616
    5. 'cross' → logprob: -2.661271810531616
    6. 'cc' → logprob: -2.661271810531616
    7. ' cross' → logprob: -2.786271810531616
    8. 'def' → logprob: -3.286271810531616
    9. 'inter' → logprob: -4.536272048950195
    10. 'binary' → logprob: -4.911272048950195

Token 228: ' casting' (ID: 46889)
  Prédit: '_cast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cast' → logprob: -0.037000641226768494
    2. 'casting' → logprob: -3.5370006561279297
    3. '-c' → logprob: -5.53700065612793
    4. 'cast' → logprob: -6.16200065612793
    5. ' casting' → logprob: -7.41200065612793
    6. '   ' → logprob: -8.03700065612793
    7. '_inter' → logprob: -9.66200065612793
    8. 'casts' → logprob: -9.66200065612793
    9. '_' → logprob: -10.66200065612793
    10. '-' → logprob: -11.28700065612793

Token 229: ' method' (ID: 2595)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.0301778316497803
    2. '(p' → logprob: -1.1551778316497803
    3. '):
' → logprob: -1.5301778316497803
    4. ')' → logprob: -2.7801778316497803
    5. '   ' → logprob: -3.2801778316497803
    6. 'def' → logprob: -5.655178070068359
    7. '(poly' → logprob: -5.780178070068359
    8. ':
' → logprob: -6.780178070068359
    9. ':' → logprob: -7.030178070068359
    10. '"""
' → logprob: -7.280178070068359

Token 230: '"""
' (ID: 15611)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3703051507472992
    2. '):' → logprob: -1.6203051805496216
    3. '):
' → logprob: -2.745305061340332
    4. ')' → logprob: -3.370305061340332
    5. '(p' → logprob: -4.745305061340332
    6. ':' → logprob: -6.120305061340332
    7. ',' → logprob: -7.120305061340332
    8. 'def' → logprob: -7.745305061340332
    9. ':
' → logprob: -7.870305061340332
    10. ')
' → logprob: -8.620305061340332

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010883099399507046
    2. 'n' → logprob: -4.885883331298828
    3. ' n' → logprob: -6.010883331298828
    4. 'def' → logprob: -8.260883331298828
    5. 'count' → logprob: -8.635883331298828
    6. ' count' → logprob: -9.010883331298828
    7. ' cnt' → logprob: -9.510883331298828
    8. 'cnt' → logprob: -9.510883331298828
    9. ' inside' → logprob: -10.635883331298828
    10. ' def' → logprob: -11.010883331298828

Token 232: ' x' (ID: 1215)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.3440525233745575
    2. 'count' → logprob: -1.8440525531768799
    3. 'n' → logprob: -2.34405255317688
    4. 'x' (adapté à ' x') → logprob: -4.094052314758301
    5. 'inside' → logprob: -4.219052314758301
    6. 'cross' → logprob: -6.094052314758301
    7. '   ' → logprob: -6.719052314758301
    8. 'INF' → logprob: -6.969052314758301
    9. 'inter' → logprob: -7.594052314758301
    10. ' cnt' → logprob: -7.969052314758301

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009306333377026021
    2. ',y' → logprob: -7.7509307861328125
    3. '=' → logprob: -8.500930786132812
    4. ' =' → logprob: -8.625930786132812
    5. ',p' → logprob: -9.250930786132812
    6. ' ,' → logprob: -12.250930786132812
    7. 'p' → logprob: -12.750930786132812
    8. '=p' → logprob: -12.875930786132812
    9. '_,' → logprob: -13.000930786132812
    10. ',
' → logprob: -13.375930786132812

Token 234: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07888978719711304
    2. ' y' → logprob: -2.578889846801758
    3. 'p' → logprob: -16.828889846801758
    4. '	y' → logprob: -17.203889846801758
    5. ' ' → logprob: -17.578889846801758
    6. '   ' → logprob: -18.953889846801758
    7. '  ' → logprob: -19.078889846801758
    8. ' p' → logprob: -19.078889846801758
    9. '0' → logprob: -20.203889846801758
    10. ',y' → logprob: -21.328889846801758

Token 235: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5765306353569031
    2. ' =' → logprob: -0.8265306353569031
    3. ',' → logprob: -7.451530456542969
    4. ')' → logprob: -11.951530456542969
    5. ' ' → logprob: -13.326530456542969
    6. '=p' → logprob: -14.326530456542969
    7. ' ,' → logprob: -14.826530456542969
    8. ' =
' → logprob: -15.326530456542969
    9. ')=' → logprob: -15.451530456542969
    10. '=int' → logprob: -15.826530456542969

Token 236: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0009118211455643177
    2. ' p' → logprob: -7.000911712646484
    3. '0' → logprob: -15.250911712646484
    4. '[p' → logprob: -17.500911712646484
    5. '	p' → logprob: -17.875911712646484
    6. ' ' → logprob: -18.125911712646484
    7. 'poly' → logprob: -18.125911712646484
    8. '[' → logprob: -18.250911712646484
    9. '   ' → logprob: -18.625911712646484
    10. '
' → logprob: -18.875911712646484

Token 237: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20454655587673187
    2. ' =' → logprob: -1.704546570777893
    3. ',' → logprob: -5.8295464515686035
    4. '   ' → logprob: -9.079546928405762
    5. ' ' → logprob: -11.204546928405762
    6. '
' → logprob: -11.579546928405762
    7. '=
' → logprob: -11.829546928405762
    8. 'import' → logprob: -12.204546928405762
    9. '    ' → logprob: -12.204546928405762
    10. 'def' → logprob: -12.204546928405762

Token 238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28489693999290466
    2. 'n' → logprob: -1.909896969795227
    3. ' n' → logprob: -2.4098968505859375
    4. ' cnt' → logprob: -5.7848968505859375
    5. 'cnt' → logprob: -6.1598968505859375
    6. 'count' → logprob: -6.6598968505859375
    7. ' inside' → logprob: -6.7848968505859375
    8. ' count' → logprob: -6.7848968505859375
    9. 'inside' → logprob: -7.5348968505859375
    10. '    
' → logprob: -9.034896850585938

Token 239: ' inside' (ID: 6772)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.9054715633392334
    2. 'count' → logprob: -1.1554715633392334
    3. 'inside' (adapté à ' inside') → logprob: -1.4054715633392334
    4. 'n' → logprob: -3.4054715633392334
    5. 'inter' → logprob: -6.9054718017578125
    6. '   ' → logprob: -7.0304718017578125
    7. ' cnt' → logprob: -8.905471801757812
    8. 'in' → logprob: -9.905471801757812
    9. 'cross' → logprob: -9.905471801757812
    10. 'num' → logprob: -10.030471801757812

Token 240: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889342308044434
    2. ' =' → logprob: -2.5788934230804443
    3. '_' → logprob: -13.828893661499023
    4. ',' → logprob: -13.953893661499023
    5. '=True' → logprob: -14.453893661499023
    6. '=False' → logprob: -14.578893661499023
    7. '_=' → logprob: -14.578893661499023
    8. ' ' → logprob: -15.703893661499023
    9. '=
' → logprob: -16.703893661499023
    10. ')' → logprob: -17.203893661499023

Token 241: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0019287518225610256
    2. ' False' → logprob: -6.251928806304932
    3. '0' → logprob: -16.251928329467773
    4. '(False' → logprob: -18.501928329467773
    5. '=False' → logprob: -19.501928329467773
    6. 'false' → logprob: -20.126928329467773
    7. ' ' → logprob: -20.626928329467773
    8. '```' → logprob: -21.001928329467773
    9. 'F' → logprob: -21.126928329467773
    10. '   ' → logprob: -21.126928329467773

Token 242: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033580344170331955
    2. '
' → logprob: -3.5335803031921387
    3. '    
' → logprob: -5.658580303192139
    4. 'for' → logprob: -9.158580780029297
    5. '\n' → logprob: -9.908580780029297
    6. ',' → logprob: -10.158580780029297
    7. ' for' → logprob: -10.783580780029297
    8. '  
' → logprob: -10.908580780029297
    9. '' → logprob: -11.033580780029297
    10. '   
' → logprob: -11.408580780029297

Token 243: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013793922029435635
    2. 'for' → logprob: -5.2637939453125
    3. ' for' → logprob: -5.5137939453125
    4. 'n' → logprob: -5.7637939453125
    5. ' n' → logprob: -7.3887939453125
    6. 'j' → logprob: -7.8887939453125
    7. '
' → logprob: -9.3887939453125
    8. '    
' → logprob: -9.3887939453125
    9. ' j' → logprob: -9.8887939453125
    10. 'i' → logprob: -9.8887939453125

Token 244: ' n' (ID: 297)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.010006449185311794
    2. 'n' (adapté à ' n') → logprob: -4.760006427764893
    3. 'for' → logprob: -7.260006427764893
    4. ' j' → logprob: -7.635006427764893
    5. '   ' → logprob: -8.63500690460205
    6. 'i' → logprob: -11.26000690460205
    7. ' n' → logprob: -12.51000690460205
    8. 'jx' → logprob: -12.76000690460205
    9. 'px' → logprob: -12.88500690460205
    10. '    
' → logprob: -13.38500690460205

Token 245: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026370087638497353
    2. '=' → logprob: -3.651370048522949
    3. '=len' → logprob: -9.90137004852295
    4. '   ' → logprob: -11.27637004852295
    5. ',' → logprob: -12.90137004852295
    6. ' ' → logprob: -13.02637004852295
    7. '=int' → logprob: -14.40137004852295
    8. 'poly' → logprob: -15.40137004852295
    9. 'for' → logprob: -15.52637004852295
    10. '  ' → logprob: -15.77637004852295

Token 246: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10020732134580612
    2. ' len' → logprob: -2.3502073287963867
    3. '(len' → logprob: -14.600207328796387
    4. '[len' → logprob: -16.47520637512207
    5. '	len' → logprob: -16.72520637512207
    6. '=len' → logprob: -16.72520637512207
    7. '   ' → logprob: -18.97520637512207
    8. ' ' → logprob: -19.22520637512207
    9. '```' → logprob: -20.10020637512207
    10. '<len' → logprob: -20.22520637512207

Token 247: '(poly' (ID: 175644)
  Prédit: '(poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -0.00018149138486478478
    2. 'poly' → logprob: -8.625181198120117
    3. ' poly' → logprob: -13.750181198120117
    4. '(' → logprob: -14.375181198120117
    5. '(pol' → logprob: -15.500181198120117
    6. '_poly' → logprob: -18.625181198120117
    7. '/poly' → logprob: -19.125181198120117
    8. '(py' → logprob: -19.125181198120117
    9. '(p' → logprob: -19.250181198120117
    10. '(
' → logprob: -19.500181198120117

Token 248: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008635961450636387
    2. ')
' → logprob: -4.758635997772217
    3. '   ' → logprob: -11.508635520935059
    4. ' )' → logprob: -11.633635520935059
    5. ')

' → logprob: -14.383635520935059
    6. 'def' → logprob: -15.133635520935059
    7. '<|end|>' → logprob: -15.258635520935059
    8. ' ' → logprob: -15.383635520935059
    9. ' )
' → logprob: -15.633635520935059
    10. ',' → logprob: -15.633635520935059

Token 249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02958119474351406
    2. 'j' → logprob: -4.029581069946289
    3. ' j' → logprob: -5.404581069946289
    4. ' for' → logprob: -6.029581069946289
    5. 'for' → logprob: -6.279581069946289
    6. 'i' → logprob: -6.529581069946289
    7. ' i' → logprob: -6.904581069946289
    8. '    
' → logprob: -9.529581069946289
    9. '
' → logprob: -10.904581069946289
    10. '	j' → logprob: -12.154581069946289

Token 250: ' px' (ID: 27003)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00043567578541114926
    2. ' j' → logprob: -8.000435829162598
    3. 'for' → logprob: -9.250435829162598
    4. '   ' → logprob: -13.375435829162598
    5. 'i' → logprob: -13.750435829162598
    6. 'jx' → logprob: -14.375435829162598
    7. ' for' → logprob: -14.500435829162598
    8. '	j' → logprob: -14.750435829162598
    9. '    
' → logprob: -16.87543487548828
    10. 'px' (adapté à ' px') → logprob: -18.00043487548828

Token 251: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47563636302948
    2. ' =' → logprob: -0.97563636302948
    3. 'oly' → logprob: -7.3506364822387695
    4. '   ' → logprob: -8.22563648223877
    5. 'oints' → logprob: -8.60063648223877
    6. '0' → logprob: -9.35063648223877
    7. ' ' → logprob: -9.60063648223877
    8. ',' → logprob: -9.85063648223877
    9. 'rev' → logprob: -9.85063648223877
    10. 'y' → logprob: -10.10063648223877

Token 252: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.00012833021173719317
    2. ' py' → logprob: -9.000128746032715
    3. '   ' → logprob: -13.250128746032715
    4. 'prev' → logprob: -13.625128746032715
    5. '0' → logprob: -14.375128746032715
    6. '_py' → logprob: -15.000128746032715
    7. '.py' → logprob: -15.125128746032715
    8. '```' → logprob: -15.750128746032715
    9. '(py' → logprob: -16.6251277923584
    10. 'p' → logprob: -16.6251277923584

Token 253: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10027589648962021
    2. ' =' → logprob: -2.350275993347168
    3. ',' → logprob: -9.600275993347168
    4. ' ' → logprob: -14.475275993347168
    5. '=p' → logprob: -14.600275993347168
    6. ')' → logprob: -16.35027503967285
    7. ' ,' → logprob: -16.47527503967285
    8. '=int' → logprob: -17.10027503967285
    9. '＝' → logprob: -17.22527503967285
    10. '=line' → logprob: -17.22527503967285

Token 254: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.027904314920306206
    2. ' poly' → logprob: -3.6529042720794678
    3. 'x' → logprob: -7.277904510498047
    4. '0' → logprob: -7.777904510498047
    5. 'p' → logprob: -8.027904510498047
    6. 'py' → logprob: -9.652904510498047
    7. ' x' → logprob: -9.902904510498047
    8. ' p' → logprob: -11.152904510498047
    9. 'px' → logprob: -11.652904510498047
    10. ' ' → logprob: -11.902904510498047

Token 255: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.525187611579895
    2. '0' → logprob: -0.900187611579895
    3. '[-' → logprob: -6.7751874923706055
    4. '-' → logprob: -7.0251874923706055
    5. '(' → logprob: -12.150187492370605
    6. '[n' → logprob: -12.525187492370605
    7. ' ' → logprob: -12.650187492370605
    8. 's' → logprob: -12.775187492370605
    9. 'n' → logprob: -12.900187492370605
    10. '
' → logprob: -13.400187492370605

Token 256: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018198171630501747
    2. '-' → logprob: -4.018198013305664
    3. 'n' → logprob: -11.143198013305664
    4. ' ' → logprob: -11.268198013305664
    5. '(' → logprob: -12.080698013305664
    6. ' -' → logprob: -12.643198013305664
    7. '   ' → logprob: -12.643198013305664
    8. '-n' → logprob: -13.455698013305664
    9. '[' → logprob: -14.018198013305664
    10. '(-' → logprob: -14.018198013305664

Token 257: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012349298223853111
    2. '][' → logprob: -4.7623491287231445
    3. ']
' → logprob: -5.6373491287231445
    4. ' ]' → logprob: -9.262349128723145
    5. '<|end|>' → logprob: -10.762349128723145
    6. '[' → logprob: -11.012349128723145
    7. '])' → logprob: -11.762349128723145
    8. ']

' → logprob: -12.512349128723145
    9. '   ' → logprob: -12.762349128723145
    10. ')' → logprob: -12.762349128723145

Token 258: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5091131925582886
    2. 'for' → logprob: -1.6341131925582886
    3. ' for' → logprob: -1.6341131925582886
    4. '
' → logprob: -4.884113311767578
    5. ' ' → logprob: -7.634113311767578
    6. '    
' → logprob: -8.509113311767578
    7. '	for' → logprob: -8.634113311767578
    8. '  ' → logprob: -8.759113311767578
    9. '```' → logprob: -10.634113311767578
    10. '  
' → logprob: -10.759113311767578

Token 259: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10259968787431717
    2. ' for' → logprob: -2.352599620819092
    3. '   ' → logprob: -6.352599620819092
    4. '
' → logprob: -7.477599620819092
    5. 'i' → logprob: -10.10260009765625
    6. ' i' → logprob: -11.60260009765625
    7. ' ' → logprob: -11.60260009765625
    8. 'j' → logprob: -11.72760009765625
    9. '	for' → logprob: -12.35260009765625
    10. '    
' → logprob: -12.72760009765625

Token 260: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3133508563041687
    2. ' i' → logprob: -1.3133509159088135
    3. '	i' → logprob: -9.438350677490234
    4. '_i' → logprob: -12.688350677490234
    5. '(i' → logprob: -13.563350677490234
    6. ' ' → logprob: -13.563350677490234
    7. '   ' → logprob: -13.813350677490234
    8. ' ' → logprob: -14.313350677490234
    9. '
' → logprob: -14.813350677490234
    10. '```' → logprob: -15.188350677490234

Token 261: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012555442750453949
    2. 'in' → logprob: -4.3875555992126465
    3. '1' → logprob: -10.887555122375488
    4. ' ' → logprob: -11.137555122375488
    5. '   ' → logprob: -12.512555122375488
    6. '	in' → logprob: -12.887555122375488
    7. 'range' → logprob: -13.887555122375488
    8. ',' → logprob: -13.887555122375488
    9. '  ' → logprob: -14.137555122375488
    10. '=' → logprob: -14.637555122375488

Token 262: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2057735025882721
    2. 'range' → logprob: -1.7057734727859497
    3. '1' → logprob: -5.58077335357666
    4. ' ' → logprob: -7.45577335357666
    5. '   ' → logprob: -14.45577335357666
    6. ' xrange' → logprob: -14.70577335357666
    7. '(range' → logprob: -14.83077335357666
    8. '0' → logprob: -14.95577335357666
    9. '	range' → logprob: -15.20577335357666
    10. '  ' → logprob: -15.45577335357666

Token 263: '(n' (ID: 2406)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014581941068172455
    2. '(' → logprob: -4.26458215713501
    3. ' ' → logprob: -7.88958215713501
    4. ' (' → logprob: -10.639581680297852
    5. 'n' → logprob: -11.514581680297852
    6. '   ' → logprob: -12.014581680297852
    7. ' n' → logprob: -13.014581680297852
    8. '(n' → logprob: -13.514581680297852
    9. '
' → logprob: -16.13958168029785
    10. ',' → logprob: -18.26458168029785

Token 264: '+' (ID: 10)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.40242722630500793
    2. '):
' → logprob: -1.1524271965026855
    3. ' ):' → logprob: -4.6524271965026855
    4. '1' → logprob: -5.7774271965026855
    5. ' ):
' → logprob: -6.2774271965026855
    6. ')' → logprob: -7.5274271965026855
    7. ' ' → logprob: -9.152427673339844
    8. '   ' → logprob: -9.402427673339844
    9. '-' → logprob: -9.402427673339844
    10. ' -' → logprob: -10.277427673339844

Token 265: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.029847231227905e-05
    2. ' ' → logprob: -9.500080108642578
    3. '0' → logprob: -12.625080108642578
    4. '
' → logprob: -13.500080108642578
    5. '-' → logprob: -15.000080108642578
    6. '   ' → logprob: -15.375080108642578
    7. '  ' → logprob: -17.187580108642578
    8. '

' → logprob: -17.250080108642578
    9. '(' → logprob: -18.000080108642578
    10. 'i' → logprob: -18.062580108642578

Token 266: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06287181377410889
    2. '):
' → logprob: -2.8128719329833984
    3. ' ):' → logprob: -7.312871932983398
    4. ')' → logprob: -8.937871932983398
    5. ' ):
' → logprob: -9.562871932983398
    6. '   ' → logprob: -11.312871932983398
    7. '):
' → logprob: -11.312871932983398
    8. ':' → logprob: -12.187871932983398
    9. '):

' → logprob: -13.062871932983398
    10. ' )' → logprob: -14.312871932983398

Token 267: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12031453102827072
    2. '   ' → logprob: -2.245314598083496
    3. ' x' → logprob: -6.245314598083496
    4. '    ' → logprob: -6.245314598083496
    5. '
' → logprob: -7.120314598083496
    6. '<|end|>' → logprob: -7.120314598083496
    7. ' if' → logprob: -7.745314598083496
    8. '    
' → logprob: -7.870314598083496
    9. ' ' → logprob: -8.245314598083496
    10. ' px' → logprob: -8.620314598083496

Token 268: ' nx' (ID: 50118)
  Prédit: 'qx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qx' → logprob: -0.8201566338539124
    2. ' q' → logprob: -1.4451565742492676
    3. ' j' → logprob: -1.8201565742492676
    4. '   ' → logprob: -3.5701565742492676
    5. 'q' → logprob: -3.5701565742492676
    6. 'x' → logprob: -3.8201565742492676
    7. 'jx' → logprob: -3.9451565742492676
    8. 'nx' (adapté à ' nx') → logprob: -4.195156574249268
    9. ' nx' → logprob: -4.320156574249268
    10. 'j' → logprob: -4.445156574249268

Token 269: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6663064360618591
    2. ',' → logprob: -1.166306495666504
    3. '=' → logprob: -1.791306495666504
    4. '=i' → logprob: -5.916306495666504
    5. ',i' → logprob: -5.916306495666504
    6. '   ' → logprob: -7.041306495666504
    7. ' ,' → logprob: -7.041306495666504
    8. 'x' → logprob: -7.291306495666504
    9. 'i' → logprob: -8.666306495666504
    10. ' i' → logprob: -9.791306495666504

Token 270: ' ny' (ID: 4423)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.547569990158081
    2. ' py' → logprob: -1.297569990158081
    3. 'poly' → logprob: -2.172569990158081
    4. ' poly' → logprob: -3.422569990158081
    5. 'ny' → logprob: -6.92257022857666
    6. '(py' → logprob: -8.17257022857666
    7. ' ny' → logprob: -8.42257022857666
    8. 'y' → logprob: -8.67257022857666
    9. '0' → logprob: -9.54757022857666
    10. ' ' → logprob: -10.29757022857666

Token 271: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519381642341614
    2. ' =' → logprob: -1.5019381046295166
    3. '   ' → logprob: -11.751937866210938
    4. ' ' → logprob: -14.876937866210938
    5. '=line' → logprob: -15.251937866210938
    6. '=i' → logprob: -15.626937866210938
    7. '       ' → logprob: -16.376937866210938
    8. '    ' → logprob: -16.626937866210938
    9. ',' → logprob: -17.001937866210938
    10. '=p' → logprob: -17.251937866210938

Token 272: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.01418572012335062
    2. ' poly' → logprob: -4.264185905456543
    3. 'py' → logprob: -11.014185905456543
    4. '(poly' → logprob: -12.889185905456543
    5. '   ' → logprob: -13.389185905456543
    6. 'px' → logprob: -13.889185905456543
    7. '
' → logprob: -15.639185905456543
    8. '0' → logprob: -15.764185905456543
    9. ' ' → logprob: -16.389184951782227
    10. ' py' → logprob: -17.139184951782227

Token 273: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7120533811976202e-05
    2. '[(' → logprob: -11.125017166137695
    3. '[' → logprob: -13.500017166137695
    4. 'i' → logprob: -14.750017166137695
    5. '   ' → logprob: -15.250017166137695
    6. '[min' → logprob: -16.125017166137695
    7. '[
' → logprob: -17.125017166137695
    8. '(i' → logprob: -17.875017166137695
    9. ' [' → logprob: -18.375017166137695
    10. '0' → logprob: -19.000017166137695

Token 274: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.015122679993510246
    2. '%n' → logprob: -4.265122890472412
    3. '%' → logprob: -7.140122890472412
    4. '%i' → logprob: -8.765122413635254
    5. ' ' → logprob: -12.640122413635254
    6. '%d' → logprob: -12.765122413635254
    7. ' ' → logprob: -13.890122413635254
    8. '%s' → logprob: -14.515122413635254
    9. '%x' → logprob: -14.640122413635254
    10. ']' → logprob: -14.640122413635254

Token 275: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1756367712223437e-05
    2. ' n' → logprob: -11.375011444091797
    3. 'len' → logprob: -15.875011444091797
    4. '   ' → logprob: -17.125011444091797
    5. ' ' → logprob: -18.500011444091797
    6. '```' → logprob: -19.000011444091797
    7. '	n' → logprob: -19.500011444091797
    8. ')n' → logprob: -19.625011444091797
    9. '(n' → logprob: -19.750011444091797
    10. '  ' → logprob: -20.125011444091797

Token 276: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14527928829193115
    2. ']
' → logprob: -2.0202794075012207
    3. ')' → logprob: -6.270279407501221
    4. ')
' → logprob: -8.020278930664062
    5. '   ' → logprob: -8.395278930664062
    6. ' ]' → logprob: -10.020278930664062
    7. ']
' → logprob: -10.520278930664062
    8. '])' → logprob: -10.770278930664062
    9. '       ' → logprob: -10.895278930664062
    10. ' ]
' → logprob: -11.395278930664062

Token 277: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0073599256575107574
    2. '   ' → logprob: -5.507359981536865
    3. '
' → logprob: -6.632359981536865
    4. ' if' → logprob: -6.882359981536865
    5. '        
' → logprob: -8.132359504699707
    6. '<|end|>' → logprob: -8.382359504699707
    7. 'if' → logprob: -8.507359504699707
    8. ',' → logprob: -9.882359504699707
    9. '    
' → logprob: -9.882359504699707
    10. '  
' → logprob: -10.507359504699707

Token 278: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5082067847251892
    2. 'if' (adapté à ' if') → logprob: -1.008206844329834
    3. '       ' → logprob: -3.508206844329834
    4. '   ' → logprob: -5.633206844329834
    5. '	if' → logprob: -11.383206367492676
    6. ' ' → logprob: -12.383206367492676
    7. '    ' → logprob: -12.383206367492676
    8. '     ' → logprob: -13.008206367492676
    9. '  ' → logprob: -13.758206367492676
    10. 'If' → logprob: -13.883206367492676

Token 279: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.5036059617996216
    2. ' ((' → logprob: -1.1286059617996216
    3. ' (' → logprob: -3.003605842590332
    4. '(py' → logprob: -4.628605842590332
    5. '(y' → logprob: -6.003605842590332
    6. '(((' → logprob: -6.128605842590332
    7. '(' → logprob: -6.253605842590332
    8. ' y' → logprob: -6.503605842590332
    9. ' py' → logprob: -6.628605842590332
    10. ' min' → logprob: -6.628605842590332

Token 280: 'ny' (ID: 3008)
  Prédit: '(py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(py' → logprob: -0.32678014039993286
    2. 'py' → logprob: -1.326780080795288
    3. 'ny' → logprob: -4.951780319213867
    4. '(y' → logprob: -5.701780319213867
    5. ' (' → logprob: -6.951780319213867
    6. '(' → logprob: -7.076780319213867
    7. '((' → logprob: -7.451780319213867
    8. 'y' → logprob: -8.201780319213867
    9. '(n' → logprob: -8.451780319213867
    10. ' py' → logprob: -9.326780319213867

Token 281: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6335264444351196
    2. '>' → logprob: -0.7585264444351196
    3. ' <=' → logprob: -7.88352632522583
    4. '<=' → logprob: -8.383526802062988
    5. ' ==' → logprob: -8.758526802062988
    6. '==' → logprob: -9.883526802062988
    7. ' ' → logprob: -10.133526802062988
    8. ' y' → logprob: -10.883526802062988
    9. ' py' → logprob: -11.133526802062988
    10. '<' → logprob: -11.508526802062988

Token 282: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12693440914154053
    2. ' y' → logprob: -2.12693452835083
    3. 'py' → logprob: -13.001934051513672
    4. ' py' → logprob: -13.001934051513672
    5. '	y' → logprob: -14.001934051513672
    6. '=y' → logprob: -15.001934051513672
    7. '=' → logprob: -15.126934051513672
    8. 'p' → logprob: -15.376934051513672
    9. ')y' → logprob: -15.876934051513672
    10. '(y' → logprob: -17.251934051513672

Token 283: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.629921436891891e-05
    2. ')!=' → logprob: -10.87502670288086
    3. ' )' → logprob: -11.87502670288086
    4. 'and' → logprob: -15.25002670288086
    5. ')!' → logprob: -16.62502670288086
    6. '!=' → logprob: -17.00002670288086
    7. 'is' → logprob: -17.75002670288086
    8. ')
' → logprob: -17.75002670288086
    9. '）' → logprob: -18.00002670288086
    10. ')>' → logprob: -18.12502670288086

Token 284: ' !=' (ID: 1666)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000204851632588543
    2. ')!=' → logprob: -8.625205039978027
    3. '!=' → logprob: -10.875205039978027
    4. ' )' → logprob: -12.250205039978027
    5. 'and' → logprob: -13.750205039978027
    6. ')!' → logprob: -16.25020408630371
    7. ' !=' → logprob: -16.25020408630371
    8. 'is' → logprob: -16.62520408630371
    9. 'neq' → logprob: -16.62520408630371
    10. ')
' → logprob: -17.25020408630371

Token 285: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.48919886350631714
    2. '(py' → logprob: -0.9891988635063171
    3. '(n' → logprob: -4.364198684692383
    4. '(nx' → logprob: -6.739198684692383
    5. '(px' → logprob: -7.114198684692383
    6. '(Py' → logprob: -8.739198684692383
    7. '(' → logprob: -9.614198684692383
    8. '(True' → logprob: -10.989198684692383
    9. ' ' → logprob: -11.739198684692383
    10. '(N' → logprob: -12.114198684692383

Token 286: 'py' (ID: 5823)
  Prédit: 'py'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.169890359044075
    2. ' py' → logprob: -2.1698904037475586
    3. '(py' → logprob: -3.1698904037475586
    4. '_py' → logprob: -10.794890403747559
    5. ' (' → logprob: -11.044890403747559
    6. '(Py' → logprob: -13.794890403747559
    7. '.py' → logprob: -13.794890403747559
    8. 'Py' → logprob: -14.044890403747559
    9. ' ' → logprob: -14.169890403747559
    10. 'ply' → logprob: -14.294890403747559

Token 287: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.20143096148967743
    2. '>' → logprob: -1.7014309167861938
    3. 'y' → logprob: -11.576431274414062
    4. ' ' → logprob: -11.951431274414062
    5. '>x' → logprob: -14.076431274414062
    6. ' y' → logprob: -14.826431274414062
    7. '>end' → logprob: -15.951431274414062
    8. '   ' → logprob: -16.076431274414062
    9. '>w' → logprob: -16.451431274414062
    10. ')>' → logprob: -16.451431274414062

Token 288: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.20141352713108063
    2. ' y' → logprob: -1.7014135122299194
    3. '	y' → logprob: -16.076414108276367
    4. ' ' → logprob: -16.326414108276367
    5. ')y' → logprob: -17.701414108276367
    6. '```' → logprob: -19.451414108276367
    7. '   ' → logprob: -19.451414108276367
    8. ')' → logprob: -19.576414108276367
    9. '(y' → logprob: -20.201414108276367
    10. ',' → logprob: -20.451414108276367

Token 289: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004801768809556961
    2. ' )' → logprob: -5.3798017501831055
    3. '):' → logprob: -9.004801750183105
    4. ' and' → logprob: -10.379801750183105
    5. '):
' → logprob: -10.629801750183105
    6. ' ):' → logprob: -13.629801750183105
    7. ' ):
' → logprob: -14.004801750183105
    8. '))' → logprob: -14.379801750183105
    9. 'and' → logprob: -15.129801750183105
    10. ':' → logprob: -15.879801750183105

Token 290: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023279840126633644
    2. 'and' → logprob: -3.773279905319214
    3. ' ' → logprob: -10.648280143737793
    4. ':' → logprob: -12.523280143737793
    5. '   ' → logprob: -13.648280143737793
    6. '       ' → logprob: -13.648280143737793
    7. ':
' → logprob: -13.773280143737793
    8. '        ' → logprob: -14.148280143737793
    9. '           ' → logprob: -14.273280143737793
    10. '  ' → logprob: -14.398280143737793

Token 291: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.12434324622154236
    2. '(x' → logprob: -2.249343156814575
    3. ' x' → logprob: -4.499343395233154
    4. 'x' → logprob: -8.374342918395996
    5. '(' → logprob: -9.749342918395996
    6. '(p' → logprob: -10.374342918395996
    7. '   ' → logprob: -12.374342918395996
    8. '    ' → logprob: -13.124342918395996
    9. '(px' → logprob: -13.124342918395996
    10. ' ((' → logprob: -13.624342918395996

Token 292: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006847030483186245
    2. ' x' → logprob: -5.006846904754639
    3. '(x' → logprob: -9.006847381591797
    4. ' (' → logprob: -12.506847381591797
    5. '   ' → logprob: -12.881847381591797
    6. '	x' → logprob: -13.506847381591797
    7. '(' → logprob: -14.131847381591797
    8. ')x' → logprob: -14.756847381591797
    9. ' ' → logprob: -16.631847381591797
    10. '           ' → logprob: -16.756847381591797

Token 293: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5759525299072266
    2. '<' → logprob: -0.8259525299072266
    3. '<=' → logprob: -12.575952529907227
    4. ' ' → logprob: -12.950952529907227
    5. ' <=' → logprob: -13.200952529907227
    6. '<(' → logprob: -14.075952529907227
    7. '<n' → logprob: -14.200952529907227
    8. '<p' → logprob: -14.700952529907227
    9. '<num' → logprob: -15.075952529907227
    10. '<class' → logprob: -15.200952529907227

Token 294: ' (' (ID: 350)
  Prédit: '(px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.06472502648830414
    2. ' (' → logprob: -3.064724922180176
    3. '(py' → logprob: -4.564724922180176
    4. '(nx' → logprob: -5.439724922180176
    5. '(' → logprob: -7.064724922180176
    6. ' px' → logprob: -8.689724922180176
    7. 'px' → logprob: -9.564724922180176
    8. '((' → logprob: -9.689724922180176
    9. '(n' → logprob: -9.814724922180176
    10. '(p' → logprob: -10.564724922180176

Token 295: 'px' (ID: 3207)
  Prédit: '(px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.10227581113576889
    2. 'px' → logprob: -2.352275848388672
    3. '(nx' → logprob: -6.602275848388672
    4. ' px' → logprob: -7.727275848388672
    5. '(py' → logprob: -8.977275848388672
    6. ' (' → logprob: -9.852275848388672
    7. 'nx' → logprob: -10.227275848388672
    8. '(' → logprob: -10.602275848388672
    9. 'py' → logprob: -10.852275848388672
    10. '(p' → logprob: -12.352275848388672

Token 296: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0620325542986393
    2. ' -' → logprob: -2.812032461166382
    3. '*' → logprob: -10.187032699584961
    4. ' ' → logprob: -11.312032699584961
    5. '*(' → logprob: -12.437032699584961
    6. 'y' → logprob: -12.687032699584961
    7. '-y' → logprob: -13.437032699584961
    8. '   ' → logprob: -13.562032699584961
    9. 'py' → logprob: -13.812032699584961
    10. '(py' → logprob: -14.187032699584961

Token 297: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.8101287484169006
    2. '(nx' → logprob: -0.9351287484169006
    3. ' nx' → logprob: -2.185128688812256
    4. '((' → logprob: -4.310128688812256
    5. 'x' → logprob: -4.560128688812256
    6. ' (' → logprob: -4.935128688812256
    7. ' ((' → logprob: -5.185128688812256
    8. ' ny' → logprob: -5.560128688812256
    9. 'py' → logprob: -5.935128688812256
    10. ' py' → logprob: -6.310128688812256

Token 298: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018314191838726401
    2. ')*(' → logprob: -6.626831531524658
    3. ')*' → logprob: -7.876831531524658
    4. ' )' → logprob: -9.0018310546875
    5. ' ' → logprob: -13.6268310546875
    6. ')/(' → logprob: -15.5018310546875
    7. ')
' → logprob: -15.6268310546875
    8. ')(' → logprob: -16.0018310546875
    9. ')((' → logprob: -16.1268310546875
    10. '```' → logprob: -16.2518310546875

Token 299: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007560486905276775
    2. ')*(' → logprob: -5.7575602531433105
    3. ')*' → logprob: -6.1325602531433105
    4. ' )' → logprob: -6.3825602531433105
    5. '*' → logprob: -8.257560729980469
    6. ' ' → logprob: -9.257560729980469
    7. '>' → logprob: -10.007560729980469
    8. '*(' → logprob: -10.132560729980469
    9. ' *' → logprob: -10.257560729980469
    10. '```' → logprob: -11.257560729980469

Token 300: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.011484894901514053
    2. ' (' → logprob: -4.6364850997924805
    3. '(py' → logprob: -6.3864850997924805
    4. '(' → logprob: -10.13648509979248
    5. '   ' → logprob: -13.51148509979248
    6. '(Py' → logprob: -14.01148509979248
    7. '(n' → logprob: -14.63648509979248
    8. ' ' → logprob: -15.38648509979248
    9. '((' → logprob: -15.51148509979248
    10. 'py' → logprob: -16.136484146118164

Token 301: 'y' (ID: 88)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0035263022873550653
    2. 'y' → logprob: -5.753526210784912
    3. ' (' → logprob: -8.12852668762207
    4. '(py' → logprob: -10.37852668762207
    5. '(' → logprob: -11.25352668762207
    6. ' y' → logprob: -12.12852668762207
    7. 'py' → logprob: -13.87852668762207
    8. '[y' → logprob: -14.12852668762207
    9. '
' → logprob: -14.50352668762207
    10. '	y' → logprob: -14.75352668762207

Token 302: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3497300148010254
    2. '-' → logprob: -1.2247300148010254
    3. ' /' → logprob: -7.224730014801025
    4. ' ' → logprob: -8.349729537963867
    5. ')/(' → logprob: -9.224729537963867
    6. '/' → logprob: -9.349729537963867
    7. ')' → logprob: -10.349729537963867
    8. '/(' → logprob: -10.474729537963867
    9. '<|end|>' → logprob: -11.224729537963867
    10. ' py' → logprob: -11.474729537963867

Token 303: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.06760552525520325
    2. 'py' → logprob: -3.442605495452881
    3. ' ny' → logprob: -3.442605495452881
    4. ' py' → logprob: -6.942605495452881
    5. '(py' → logprob: -8.067605972290039
    6. '   ' → logprob: -11.192605972290039
    7. '(n' → logprob: -11.192605972290039
    8. ')' → logprob: -11.317605972290039
    9. 'n' → logprob: -11.442605972290039
    10. '```' → logprob: -11.567605972290039

Token 304: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03035559318959713
    2. ')/(' → logprob: -3.78035569190979
    3. '/' → logprob: -5.905355453491211
    4. ' /' → logprob: -6.030355453491211
    5. ' )' → logprob: -6.655355453491211
    6. ')/' → logprob: -7.780355453491211
    7. '/(' → logprob: -8.405355453491211
    8. '/)' → logprob: -11.905355453491211
    9. '/
' → logprob: -12.155355453491211
    10. ' /(' → logprob: -12.155355453491211

Token 305: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.21472950279712677
    2. '/' → logprob: -1.7147295475006104
    3. '/(' → logprob: -4.839729309082031
    4. ')' → logprob: -5.464729309082031
    5. ')/(' → logprob: -7.464729309082031
    6. ' /(' → logprob: -8.089729309082031
    7. ' /
' → logprob: -9.714729309082031
    8. '/
' → logprob: -9.714729309082031
    9. ' )' → logprob: -9.839729309082031
    10. ' ' → logprob: -11.714729309082031

Token 306: ' (' (ID: 350)
  Prédit: '(py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(py' → logprob: -4.704065213445574e-05
    2. '(Py' → logprob: -10.250046730041504
    3. ' (' → logprob: -12.000046730041504
    4. '(px' → logprob: -12.375046730041504
    5. '(' → logprob: -14.500046730041504
    6. '(p' → logprob: -14.875046730041504
    7. '   ' → logprob: -15.875046730041504
    8. '(ps' → logprob: -16.12504768371582
    9. '(pp' → logprob: -17.50004768371582
    10. ' ' → logprob: -17.87504768371582

Token 307: 'py' (ID: 5823)
  Prédit: '(py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(py' → logprob: -5.4192871175473556e-05
    2. '(Py' → logprob: -10.000054359436035
    3. ' (' → logprob: -12.375054359436035
    4. 'py' → logprob: -13.625054359436035
    5. '(' → logprob: -13.750054359436035
    6. '(p' → logprob: -13.875054359436035
    7. '(px' → logprob: -14.375054359436035
    8. '_py' → logprob: -15.375054359436035
    9. '   ' → logprob: -15.875054359436035
    10. ' py' → logprob: -16.37505340576172

Token 308: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.47409215569496155
    2. ' -' → logprob: -0.9740921258926392
    3. ' ' → logprob: -11.474092483520508
    4. '-n' → logprob: -13.599092483520508
    5. '-y' → logprob: -14.349092483520508
    6. '-p' → logprob: -14.599092483520508
    7. '-python' → logprob: -14.849092483520508
    8. '<|end|>' → logprob: -14.849092483520508
    9. '-
' → logprob: -15.474092483520508
    10. '_py' → logprob: -15.724092483520508

Token 309: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.09409433603286743
    2. 'y' → logprob: -2.4690942764282227
    3. ' ny' → logprob: -5.844094276428223
    4. 'nx' → logprob: -6.469094276428223
    5. ' y' → logprob: -7.844094276428223
    6. '   ' → logprob: -9.469094276428223
    7. 'py' → logprob: -9.969094276428223
    8. 'x' → logprob: -10.594094276428223
    9. '       ' → logprob: -10.719094276428223
    10. 'n' → logprob: -10.969094276428223

Token 310: ')' (ID: 8)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3250943720340729
    2. '+' → logprob: -1.3250943422317505
    3. ')' → logprob: -4.450094223022461
    4. ')+' → logprob: -9.825094223022461
    5. ' ' → logprob: -11.075094223022461
    6. ' )' → logprob: -11.575094223022461
    7. '+x' → logprob: -13.450094223022461
    8. '>' → logprob: -13.950094223022461
    9. ' plus' → logprob: -14.325094223022461
    10. '+)' → logprob: -14.450094223022461

Token 311: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20147377252578735
    2. '+' → logprob: -1.7014737129211426
    3. ')' → logprob: -10.2014741897583
    4. ' ' → logprob: -11.5764741897583
    5. ' plus' → logprob: -12.0764741897583
    6. ')+' → logprob: -13.2014741897583
    7. '+
' → logprob: -13.4514741897583
    8. ' +
' → logprob: -13.4514741897583
    9. '+x' → logprob: -13.5764741897583
    10. ' )' → logprob: -14.0764741897583

Token 312: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.05362892523407936
    2. 'nx' → logprob: -3.053628921508789
    3. '(nx' → logprob: -5.678628921508789
    4. ' px' → logprob: -6.553628921508789
    5. 'px' → logprob: -8.803628921508789
    6. ' ny' → logprob: -11.178628921508789
    7. ' (' → logprob: -12.178628921508789
    8. '(px' → logprob: -12.303628921508789
    9. '(n' → logprob: -12.803628921508789
    10. 'n' → logprob: -13.678628921508789

Token 313: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4494237005710602
    2. '):
' → logprob: -1.4494236707687378
    3. ' ):
' → logprob: -2.6994237899780273
    4. ' ):' → logprob: -2.8244237899780273
    5. ')' → logprob: -7.824423789978027
    6. ' )' → logprob: -9.199423789978027
    7. ':' → logprob: -9.449423789978027
    8. '):

' → logprob: -10.074423789978027
    9. ' +' → logprob: -10.449423789978027
    10. ' ' → logprob: -11.199423789978027

Token 314: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2750440835952759
    2. ' px' → logprob: -1.2750440835952759
    3. ' :' → logprob: -1.9000440835952759
    4. ':' → logprob: -1.9000440835952759
    5. '):' → logprob: -3.7750439643859863
    6. ' py' → logprob: -3.9000439643859863
    7. ' ):
' → logprob: -3.9000439643859863
    8. '):
' → logprob: -4.150043964385986
    9. ')' → logprob: -4.650043964385986
    10. '(px' → logprob: -4.775043964385986

Token 315: ' inside' (ID: 6772)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' (adapté à ' inside') → logprob: -0.03812514618039131
    2. ' inside' → logprob: -3.2881250381469727
    3. '           ' → logprob: -9.538125038146973
    4. '       ' → logprob: -12.038125038146973
    5. 'ins' → logprob: -13.163125038146973
    6. '   ' → logprob: -13.413125038146973
    7. 'Inside' → logprob: -14.538125038146973
    8. '               ' → logprob: -14.663125038146973
    9. '
' → logprob: -14.663125038146973
    10. '_inside' → logprob: -14.663125038146973

Token 316: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003611355321481824
    2. ' =' → logprob: -5.6286115646362305
    3. '=True' → logprob: -11.62861156463623
    4. ' ^=' → logprob: -13.37861156463623
    5. '=False' → logprob: -14.87861156463623
    6. '=
' → logprob: -15.62861156463623
    7. '^' → logprob: -15.87861156463623
    8. ' ' → logprob: -16.128610610961914
    9. ' ' → logprob: -17.003610610961914
    10. ')=' → logprob: -17.253610610961914

Token 317: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.38689184188842773
    2. ' not' → logprob: -1.1368918418884277
    3. '!' → logprob: -11.511892318725586
    4. '   ' → logprob: -11.636892318725586
    5. '(not' → logprob: -14.511892318725586
    6. ' ' → logprob: -14.886892318725586
    7. '	not' → logprob: -14.886892318725586
    8. '    ' → logprob: -15.261892318725586
    9. '       ' → logprob: -15.636892318725586
    10. '
' → logprob: -16.511892318725586

Token 318: ' inside' (ID: 6772)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.006715370807796717
    2. ' inside' → logprob: -5.006715297698975
    3. 'ins' → logprob: -18.631715774536133
    4. 'Inside' → logprob: -18.631715774536133
    5. ' ' → logprob: -18.756715774536133
    6. '_inside' → logprob: -19.256715774536133
    7. 'in' → logprob: -19.631715774536133
    8. '   ' → logprob: -20.006715774536133
    9. 'inner' → logprob: -20.006715774536133
    10. '(' → logprob: -20.256715774536133

Token 319: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029514357447624207
    2. '
' → logprob: -6.252951622009277
    3. '[' → logprob: -8.127951622009277
    4. '   ' → logprob: -8.502951622009277
    5. '\
' → logprob: -9.252951622009277
    6. ',' → logprob: -9.377951622009277
    7. ')
' → logprob: -9.752951622009277
    8. ',
' → logprob: -9.877951622009277
    9. '\n' → logprob: -10.502951622009277
    10. ':
' → logprob: -10.752951622009277

Token 320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.4418171455617994e-05
    2. '   ' → logprob: -11.000044822692871
    3. '[' → logprob: -11.375044822692871
    4. ',' → logprob: -12.625044822692871
    5. '           ' → logprob: -13.000044822692871
    6. '        
' → logprob: -13.125044822692871
    7. '
' → logprob: -13.500044822692871
    8. ' ' → logprob: -13.875044822692871
    9. '      ' → logprob: -14.125044822692871
    10. '	' → logprob: -14.125044822692871

Token 321: ' px' (ID: 27003)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.37851682305336
    2. ' py' → logprob: -2.003516912460327
    3. 'px' (adapté à ' px') → logprob: -2.128516912460327
    4. ' px' → logprob: -3.878516912460327
    5. '(py' → logprob: -4.253516674041748
    6. '       ' → logprob: -4.378516674041748
    7. '   ' → logprob: -5.003516674041748
    8. '(px' → logprob: -5.628516674041748
    9. 'x' → logprob: -7.378516674041748
    10. '_py' → logprob: -7.503516674041748

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006923011387698352
    2. '=' → logprob: -7.375692367553711
    3. ' ,' → logprob: -9.875692367553711
    4. ' =' → logprob: -11.250692367553711
    5. ',n' → logprob: -14.625692367553711
    6. ',y' → logprob: -14.750692367553711
    7. ',p' → logprob: -15.625692367553711
    8. ',
' → logprob: -16.12569236755371
    9. ',x' → logprob: -16.62569236755371
    10. '<|end|>' → logprob: -17.50069236755371

Token 323: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.5311927199363708
    2. 'ny' → logprob: -1.0311927795410156
    3. ' py' → logprob: -3.2811927795410156
    4. ' ny' → logprob: -4.031192779541016
    5. 'x' → logprob: -9.406192779541016
    6. 'poly' → logprob: -10.406192779541016
    7. ' x' → logprob: -10.656192779541016
    8. 'nx' → logprob: -11.156192779541016
    9. 'p' → logprob: -11.406192779541016
    10. '(py' → logprob: -12.156192779541016

Token 324: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004153549205511808
    2. ' =' → logprob: -5.504153728485107
    3. ',' → logprob: -9.50415325164795
    4. '=n' → logprob: -14.75415325164795
    5. ',n' → logprob: -16.379154205322266
    6. ' ,' → logprob: -17.629154205322266
    7. '＝' → logprob: -18.379154205322266
    8. '=
' → logprob: -18.504154205322266
    9. '=

' → logprob: -18.629154205322266
    10. '=x' → logprob: -19.004154205322266

Token 325: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.00015038289711810648
    2. ' nx' → logprob: -9.000150680541992
    3. '(nx' → logprob: -11.250150680541992
    4. 'ny' → logprob: -11.375150680541992
    5. 'n' → logprob: -13.000150680541992
    6. '   ' → logprob: -16.250150680541992
    7. '[n' → logprob: -17.750150680541992
    8. 'nv' → logprob: -18.250150680541992
    9. 'np' → logprob: -18.375150680541992
    10. 'poly' → logprob: -18.375150680541992

Token 326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0206720617134124e-05
    2. ' ,' → logprob: -12.12501049041748
    3. ',n' → logprob: -12.50001049041748
    4. '<|end|>' → logprob: -14.87501049041748
    5. ',
' → logprob: -15.00001049041748
    6. ',y' → logprob: -16.500009536743164
    7. ',p' → logprob: -16.750009536743164
    8. '_,' → logprob: -17.000009536743164
    9. ',None' → logprob: -17.500009536743164
    10. ',\
' → logprob: -18.000009536743164

Token 327: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.0024763736873865128
    2. ' ny' → logprob: -6.002476215362549
    3. 'nyi' → logprob: -14.502476692199707
    4. 'py' → logprob: -17.25247573852539
    5. 'nyt' → logprob: -17.25247573852539
    6. 'ni' → logprob: -17.50247573852539
    7. 'nym' → logprob: -17.50247573852539
    8. 'n' → logprob: -17.87747573852539
    9. ' ' → logprob: -18.12747573852539
    10. 'ney' → logprob: -18.12747573852539

Token 328: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 329: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004572292324155569
    2. ')' → logprob: -6.37957239151001
    3. ' return' → logprob: -6.62957239151001
    4. ' ' → logprob: -7.62957239151001
    5. '       ' → logprob: -8.004571914672852
    6. '<|end|>' → logprob: -8.129571914672852
    7. '  ' → logprob: -9.129571914672852
    8. ':' → logprob: -9.629571914672852
    9. ':return' → logprob: -10.004571914672852
    10. ' )' → logprob: -10.129571914672852

Token 330: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07731416821479797
    2. ' ' → logprob: -2.8273141384124756
    3. ' return' → logprob: -4.702314376831055
    4. ')' → logprob: -6.327314376831055
    5. '  ' → logprob: -7.202314376831055
    6. '       ' → logprob: -7.327314376831055
    7. '    ' → logprob: -7.452314376831055
    8. 'return' (adapté à ' return') → logprob: -7.452314376831055
    9. ':return' → logprob: -7.952314376831055
    10. ':' → logprob: -8.077314376831055

Token 331: ' inside' (ID: 6772)
  Prédit: ' inside'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inside' → logprob: -0.0789058730006218
    2. 'inside' → logprob: -2.5789058208465576
    3. ' not' → logprob: -11.328906059265137
    4. ' ' → logprob: -12.703906059265137
    5. 'not' → logprob: -14.328906059265137
    6. 'ins' → logprob: -15.953906059265137
    7. ' ' → logprob: -16.07890510559082
    8. '	' → logprob: -16.32890510559082
    9. '   ' → logprob: -16.82890510559082
    10. ' in' → logprob: -17.07890510559082

Token 332: '

' (ID: 279)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9488548636436462
    2. '<|end|>' → logprob: -1.323854923248291
    3. ')' → logprob: -1.698854923248291
    4. '   ' → logprob: -2.698854923248291
    5. ':' → logprob: -3.948854923248291
    6. ',' → logprob: -4.323854923248291
    7. '  ' → logprob: -4.698854923248291
    8. '[' → logprob: -4.823854923248291
    9. ' if' → logprob: -4.948854923248291
    10. '=' → logprob: -4.948854923248291

Token 333: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6477767825126648
    2. ')' → logprob: -1.8977768421173096
    3. ' ' → logprob: -2.2727768421173096
    4. 'def' → logprob: -2.3977768421173096
    5. '    ' → logprob: -3.6477768421173096
    6. ' def' → logprob: -4.1477766036987305
    7. ',' → logprob: -4.6477766036987305
    8. ' )' → logprob: -4.6477766036987305
    9. ' if' → logprob: -4.7727766036987305
    10. '       ' → logprob: -4.7727766036987305

Token 334: ' build' (ID: 3024)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3345111906528473
    2. ' solve' → logprob: -2.8345112800598145
    3. ' find' → logprob: -3.2095112800598145
    4. ' bfs' → logprob: -3.2095112800598145
    5. ' shortest' → logprob: -3.4595112800598145
    6. 'main' → logprob: -4.2095112800598145
    7. ' is' → logprob: -4.4595112800598145
    8. ' build' → logprob: -4.5845112800598145
    9. ' convex' → logprob: -4.8345112800598145
    10. 'solve' → logprob: -4.9595112800598145

Token 335: '_faces' (ID: 158689)
  Prédit: '_graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.3067501485347748
    2. ' graph' → logprob: -1.5567501783370972
    3. '_polygon' → logprob: -4.306750297546387
    4. '_visibility' → logprob: -4.931750297546387
    5. '(graph' → logprob: -5.181750297546387
    6. 'graph' → logprob: -5.181750297546387
    7. '_' → logprob: -5.431750297546387
    8. '_edges' → logprob: -5.931750297546387
    9. ' adjacency' → logprob: -6.056750297546387
    10. '_bridge' → logprob: -6.556750297546387

Token 336: '(C' (ID: 5559)
  Prédit: '(poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(poly' → logprob: -1.1431233882904053
    2. '(graph' → logprob: -1.2681233882904053
    3. '(pol' → logprob: -1.7681233882904053
    4. '(' → logprob: -1.8931233882904053
    5. '(p' → logprob: -3.5181233882904053
    6. '(edges' → logprob: -3.5181233882904053
    7. '(points' → logprob: -4.893123626708984
    8. '(vertices' → logprob: -5.143123626708984
    9. '(nodes' → logprob: -6.268123626708984
    10. '(lines' → logprob: -6.893123626708984

Token 337: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17394167184829712
    2. '):
' → logprob: -2.1739416122436523
    3. 'C' → logprob: -3.7989416122436523
    4. ',' → logprob: -5.423941612243652
    5. '):

' → logprob: -6.048941612243652
    6. 'ycles' → logprob: -6.173941612243652
    7. ':' → logprob: -6.548941612243652
    8. '):
' → logprob: -6.673941612243652
    9. 'S' → logprob: -6.798941612243652
    10. 'h' → logprob: -7.048941612243652

Token 338: ' W' (ID: 486)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.7352137565612793
    2. 'edges' → logprob: -1.6102137565612793
    3. 'E' → logprob: -2.1102137565612793
    4. ' E' → logprob: -2.9852137565612793
    5. 'G' → logprob: -4.110213756561279
    6. ' G' → logprob: -4.485213756561279
    7. 'L' → logprob: -4.985213756561279
    8. ' segments' → logprob: -5.047713756561279
    9. ' graph' → logprob: -5.110213756561279
    10. 'P' → logprob: -5.172713756561279

Token 339: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1630808711051941
    2. ',' → logprob: -1.9130809307098389
    3. '):
' → logprob: -6.28808069229126
    4. ')' → logprob: -7.53808069229126
    5. ' ):' → logprob: -9.038081169128418
    6. '_' → logprob: -10.038081169128418
    7. ' ,' → logprob: -10.288081169128418
    8. '):
' → logprob: -10.788081169128418
    9. '_list' → logprob: -10.913081169128418
    10. '1' → logprob: -11.038081169128418

Token 340: ' pillars' (ID: 105506)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.762494683265686
    2. 'H' → logprob: -1.887494683265686
    3. 'edges' → logprob: -1.887494683265686
    4. 'P' → logprob: -2.5124945640563965
    5. 'L' → logprob: -2.7624945640563965
    6. 'F' → logprob: -3.2624945640563965
    7. 'G' → logprob: -3.2624945640563965
    8. 'S' → logprob: -3.6374945640563965
    9. 'R' → logprob: -3.7624945640563965
    10. 'V' → logprob: -3.8874945640563965

Token 341: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021129047498106956
    2. ',' → logprob: -4.396129131317139
    3. '):
' → logprob: -4.771129131317139
    4. ')' → logprob: -10.02112865447998
    5. ' ):' → logprob: -10.77112865447998
    6. '):

' → logprob: -11.77112865447998
    7. 's' → logprob: -12.02112865447998
    8. '):
' → logprob: -12.02112865447998
    9. '_list' → logprob: -12.27112865447998
    10. ':' → logprob: -12.52112865447998

Token 342: ' walls' (ID: 20562)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.2112605571746826
    2. ' edges' → logprob: -1.4612605571746826
    3. 'walls' → logprob: -2.8362605571746826
    4. 'segments' → logprob: -3.4612605571746826
    5. 'roads' → logprob: -3.8987605571746826
    6. 'connections' → logprob: -3.8987605571746826
    7. ' walls' → logprob: -4.023760795593262
    8. ' segments' → logprob: -4.148760795593262
    9. 'adj' → logprob: -4.148760795593262
    10. ' connections' → logprob: -4.336260795593262

Token 343: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006023125723004341
    2. ',' → logprob: -5.756022930145264
    3. '):
' → logprob: -5.881022930145264
    4. ')' → logprob: -10.381023406982422
    5. '):
' → logprob: -11.631023406982422
    6. ' ):' → logprob: -12.256023406982422
    7. '):

' → logprob: -13.756023406982422
    8. '   ' → logprob: -14.006023406982422
    9. ':' → logprob: -14.131023406982422
    10. 'def' → logprob: -14.381023406982422

Token 344: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016643505077809095
    2. '():' → logprob: -6.876664161682129
    3. ':
' → logprob: -7.751664161682129
    4. '   ' → logprob: -9.001664161682129
    5. '):' → logprob: -10.001664161682129
    6. ' :' → logprob: -10.751664161682129
    7. '():
' → logprob: -12.626664161682129
    8. '(' → logprob: -13.126664161682129
    9. ':**' → logprob: -14.501664161682129
    10. ':def' → logprob: -14.501664161682129

Token 345: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8039847612380981
    2. ' faces' → logprob: -0.8039847612380981
    3. ' graph' → logprob: -2.4289846420288086
    4. 'faces' → logprob: -5.178984642028809
    5. ' n' → logprob: -5.553984642028809
    6. 'graph' → logprob: -6.178984642028809
    7. ' adjacency' → logprob: -6.303984642028809
    8. ' face' → logprob: -7.053984642028809
    9. ' #' → logprob: -7.553984642028809
    10. 'n' → logprob: -8.303984642028809

Token 346: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5385470390319824
    2. '    ' → logprob: -1.9135470390319824
    3. ' """' → logprob: -2.4135470390319824
    4. ' #' → logprob: -2.7885470390319824
    5. ' lines' → logprob: -3.6635470390319824
    6. ' """
' → logprob: -3.9135470390319824
    7. ' Build' → logprob: -4.163547039031982
    8. ' n' → logprob: -5.038547039031982
    9. ' ' → logprob: -5.038547039031982
    10. ' faces' → logprob: -5.038547039031982

Token 347: ' -' (ID: 533)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.795691967010498
    2. ' faces' → logprob: -0.920691967010498
    3. '#' → logprob: -2.295691967010498
    4. ' #' → logprob: -3.795691967010498
    5. '   ' → logprob: -4.545691967010498
    6. ' """' → logprob: -6.045691967010498
    7. ' """
' → logprob: -6.545691967010498
    8. ' n' → logprob: -6.795691967010498
    9. '"""' → logprob: -6.795691967010498
    10. 'Faces' → logprob: -6.795691967010498

Token 348: ' Construct' (ID: 36230)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.5378410220146179
    2. ' faces' → logprob: -1.0378410816192627
    3. 'graph' → logprob: -3.9128410816192627
    4. ' graph' → logprob: -4.162840843200684
    5. '#' → logprob: -5.162840843200684
    6. '   ' → logprob: -5.287840843200684
    7. 'face' → logprob: -5.787840843200684
    8. 'vertices' → logprob: -6.287840843200684
    9. 'adj' → logprob: -6.537840843200684
    10. ' vertices' → logprob: -6.662840843200684

Token 349: ' the' (ID: 290)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.1174999475479126
    2. ' faces' → logprob: -1.3674999475479126
    3. ' an' → logprob: -1.6174999475479126
    4. ' graph' → logprob: -2.242499828338623
    5. ' the' → logprob: -2.742499828338623
    6. ' adjacency' → logprob: -3.367499828338623
    7. '_faces' → logprob: -5.242499828338623
    8. '   ' → logprob: -5.992499828338623
    9. ' edges' → logprob: -6.617499828338623
    10. 'faces' → logprob: -6.742499828338623

Token 350: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.056856777518987656
    2. 'faces' → logprob: -3.556856870651245
    3. ' graph' → logprob: -4.306856632232666
    4. 'adj' → logprob: -4.681856632232666
    5. 'from' → logprob: -6.806856632232666
    6. '#' → logprob: -6.806856632232666
    7. 'face' → logprob: -7.556856632232666
    8. 'n' → logprob: -8.306857109069824
    9. 'edges' → logprob: -8.431857109069824
    10. 'import' → logprob: -8.431857109069824

Token 351: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9791237115859985
    2. ' =' → logprob: -1.6041237115859985
    3. ' from' → logprob: -1.9791237115859985
    4. ':' → logprob: -2.354123592376709
    5. ' with' → logprob: -3.354123592376709
    6. ' and' → logprob: -3.604123592376709
    7. '=' → logprob: -3.729123592376709
    8. ',' → logprob: -3.979123592376709
    9. 'from' → logprob: -4.229123592376709
    10. ' of' → logprob: -4.354123592376709

Token 352: ' edges' (ID: 22569)
  Prédit: ' faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faces' → logprob: -0.3815169036388397
    2. ' edges' → logprob: -2.381516933441162
    3. ' vertices' → logprob: -2.881516933441162
    4. ' adjacency' → logprob: -3.131516933441162
    5. ' walls' → logprob: -3.506516933441162
    6. 'faces' → logprob: -3.756516933441162
    7. ' pillars' → logprob: -4.006516933441162
    8. 'adj' → logprob: -4.506516933441162
    9. ' connections' → logprob: -4.756516933441162
    10. 'vertices' → logprob: -4.881516933441162

Token 353: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2367794513702393
    2. ' and' → logprob: -1.4867794513702393
    3. '   ' → logprob: -1.4867794513702393
    4. ',' → logprob: -2.6117794513702393
    5. ' from' → logprob: -2.6117794513702393
    6. '=' → logprob: -3.4867794513702393
    7. ':' → logprob: -3.7367794513702393
    8. '.' → logprob: -4.11177921295166
    9. ' with' → logprob: -4.11177921295166
    10. ' based' → logprob: -5.11177921295166

Token 354: 'walls' (ID: 117028)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2539218664169312
    2. ' faces' → logprob: -1.3789218664169312
    3. 'faces' → logprob: -1.5039218664169312
    4. 'C' → logprob: -3.1289219856262207
    5. ' pillars' → logprob: -3.1289219856262207
    6. ' C' → logprob: -4.003921985626221
    7. '   ' → logprob: -4.128921985626221
    8. 'vertices' → logprob: -4.128921985626221
    9. ')
' → logprob: -4.628921985626221
    10. 'edges' → logprob: -4.753921985626221

Token 355: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33757442235946655
    2. ' and' → logprob: -1.4625744819641113
    3. ',' → logprob: -3.5875744819641113
    4. 'and' → logprob: -4.212574481964111
    5. ')
' → logprob: -4.837574481964111
    6. '),' → logprob: -6.587574481964111
    7. ' )' → logprob: -6.837574481964111
    8. '   ' → logprob: -6.962574481964111
    9. ').' → logprob: -7.837574481964111
    10. 'def' → logprob: -9.337574005126953

Token 356: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018688879907131195
    2. ' graph' → logprob: -4.893688678741455
    3. '    
' → logprob: -5.768688678741455
    4. ' edges' → logprob: -5.893688678741455
    5. '
' → logprob: -6.143688678741455
    6. ' faces' → logprob: -7.268688678741455
    7. ')' → logprob: -7.393688678741455
    8. 'graph' → logprob: -7.643688678741455
    9. '```' → logprob: -8.268689155578613
    10. 'edges' → logprob: -9.018689155578613

Token 357: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0390399768948555
    2. '
' → logprob: -4.5390400886535645
    3. ' graph' → logprob: -4.5390400886535645
    4. ')' → logprob: -4.6640400886535645
    5. ' edges' → logprob: -6.0390400886535645
    6. 'graph' → logprob: -6.4140400886535645
    7. '    
' → logprob: -6.6640400886535645
    8. '```' → logprob: -7.7890400886535645
    9. 'edges' → logprob: -8.164039611816406
    10. ' faces' → logprob: -8.914039611816406

Token 358: ' Find' (ID: 9764)
  Prédit: ' adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adj' → logprob: -1.3957772254943848
    2. 'adj' → logprob: -1.3957772254943848
    3. ' graph' → logprob: -1.5207772254943848
    4. 'graph' → logprob: -1.6457772254943848
    5. ' edges' → logprob: -3.0207772254943848
    6. 'edges' → logprob: -4.395777225494385
    7. ' nodes' → logprob: -5.270777225494385
    8. ' vertices' → logprob: -5.395777225494385
    9. ' adjacency' → logprob: -5.395777225494385
    10. ' faces' → logprob: -5.770777225494385

Token 359: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.0533716194331646
    2. ' faces' → logprob: -3.4283716678619385
    3. ' the' → logprob: -4.803371429443359
    4. ' connected' → logprob: -5.053371429443359
    5. ' cycles' → logprob: -5.928371429443359
    6. 'all' → logprob: -6.178371429443359
    7. 'faces' → logprob: -9.80337142944336
    8. ' and' → logprob: -10.67837142944336
    9. ' a' → logprob: -10.92837142944336
    10. ' strongly' → logprob: -11.17837142944336

Token 360: ' faces' (ID: 22060)
  Prédit: ' faces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faces' → logprob: -0.15563009679317474
    2. ' connected' → logprob: -2.655630111694336
    3. ' the' → logprob: -3.030630111694336
    4. ' cycles' → logprob: -4.655630111694336
    5. 'faces' → logprob: -5.030630111694336
    6. '_faces' → logprob: -5.530630111694336
    7. ' vertices' → logprob: -6.655630111694336
    8. 'connected' → logprob: -6.905630111694336
    9. ' edges' → logprob: -7.280630111694336
    10. 'cycles' → logprob: -7.405630111694336

Token 361: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5162614583969116
    2. '(C' → logprob: -1.8912614583969116
    3. '(' → logprob: -2.516261577606201
    4. '   ' → logprob: -2.516261577606201
    5. ',' → logprob: -3.891261577606201
    6. ' by' → logprob: -4.141261577606201
    7. ':' → logprob: -4.391261577606201
    8. 's' → logprob: -4.766261577606201
    9. '(graph' → logprob: -5.141261577606201
    10. '.' → logprob: -5.516261577606201

Token 362: 'rooms' (ID: 10240)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5971215963363647
    2. ' )' → logprob: -1.5971215963363647
    3. ' polygons' → logprob: -2.2221217155456543
    4. ' the' → logprob: -2.8471217155456543
    5. ' connected' → logprob: -3.3471217155456543
    6. ' cycles' → logprob: -4.347121715545654
    7. ' components' → logprob: -5.472121715545654
    8. ' loops' → logprob: -5.472121715545654
    9. ')
' → logprob: -5.472121715545654
    10. 'the' → logprob: -5.847121715545654

Token 363: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008706060471013188
    2. ').' → logprob: -7.625870704650879
    3. ')
' → logprob: -8.750870704650879
    4. ',' → logprob: -9.000870704650879
    5. '):' → logprob: -9.875870704650879
    6. '):
' → logprob: -10.875870704650879
    7. '   ' → logprob: -11.500870704650879
    8. '),' → logprob: -11.750870704650879
    9. 'def' → logprob: -13.000870704650879
    10. ').
' → logprob: -13.250870704650879

Token 364: ' the' (ID: 290)
  Prédit: ' corridors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' corridors' → logprob: -0.4414095878601074
    2. ' passages' → logprob: -2.3164095878601074
    3. 'ex' → logprob: -2.8164095878601074
    4. ' exterior' → logprob: -3.1914095878601074
    5. ' spaces' → logprob: -3.3164095878601074
    6. ' external' → logprob: -3.4414095878601074
    7. 'holes' → logprob: -4.566409587860107
    8. 'corr' → logprob: -4.691409587860107
    9. 'external' → logprob: -4.816409587860107
    10. ' holes' → logprob: -4.941409587860107

Token 365: ' outside' (ID: 7539)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.8211921453475952
    2. ' exterior' → logprob: -2.0711922645568848
    3. ' external' → logprob: -2.4461922645568848
    4. ' outer' → logprob: -2.5711922645568848
    5. ' ex' → logprob: -2.9461922645568848
    6. ' spaces' → logprob: -3.0711922645568848
    7. ' outside' → logprob: -3.4461922645568848
    8. 'ir' → logprob: -3.5711922645568848
    9. ' boundaries' → logprob: -4.571192264556885
    10. ' passages' → logprob: -4.696192264556885

Token 366: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04151109233498573
    2. ').' → logprob: -4.541511058807373
    3. ')
' → logprob: -4.916511058807373
    4. ' area' → logprob: -4.916511058807373
    5. ' areas' → logprob: -5.041511058807373
    6. ' spaces' → logprob: -6.416511058807373
    7. ' faces' → logprob: -6.541511058807373
    8. 'areas' → logprob: -6.916511058807373
    9. ' )' → logprob: -7.041511058807373
    10. 'area' → logprob: -7.166511058807373

Token 367: ' of' (ID: 328)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.7622119784355164
    2. '   ' → logprob: -1.1372120380401611
    3. '.' → logprob: -2.512212038040161
    4. ')' → logprob: -3.762212038040161
    5. ',' → logprob: -3.887212038040161
    6. '
' → logprob: -4.387211799621582
    7. '.
' → logprob: -4.387211799621582
    8. ' using' → logprob: -4.512211799621582
    9. ' in' → logprob: -4.762211799621582
    10. ' of' → logprob: -4.887211799621582

Token 368: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3485167920589447
    2. 'the' → logprob: -1.223516821861267
    3. ' this' → logprob: -10.348516464233398
    4. ' a' → logprob: -11.223516464233398
    5. ' C' → logprob: -11.973516464233398
    6. 'a' → logprob: -12.098516464233398
    7. 'C' → logprob: -12.223516464233398
    8. 'this' → logprob: -13.098516464233398
    9. ' graph' → logprob: -13.098516464233398
    10. 'graph' → logprob: -13.848516464233398

Token 369: ' planar' (ID: 175798)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.3533119559288025
    2. ' graph' → logprob: -1.4783120155334473
    3. ' planar' → logprob: -3.2283120155334473
    4. 'plan' → logprob: -3.9783120155334473
    5. 'polygon' → logprob: -5.353312015533447
    6. ' polygon' → logprob: -5.853312015533447
    7. 'embedding' → logprob: -6.478312015533447
    8. ' embedding' → logprob: -7.478312015533447
    9. ' given' → logprob: -7.853312015533447
    10. 'plane' → logprob: -7.978312015533447

Token 370: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.03009432926774025
    2. 'graph' → logprob: -3.5300943851470947
    3. ' embedding' → logprob: -8.030094146728516
    4. '_graph' → logprob: -11.655094146728516
    5. 'embedding' → logprob: -12.155094146728516
    6. ' embedded' → logprob: -13.280094146728516
    7. '	graph' → logprob: -14.030094146728516
    8. ' ' → logprob: -14.405094146728516
    9. 'raph' → logprob: -14.405094146728516
    10. '_' → logprob: -15.030094146728516

Token 371: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6966320872306824
    2. '.' → logprob: -1.3216321468353271
    3. ':' → logprob: -2.071632146835327
    4. '
' → logprob: -3.446632146835327
    5. '#' → logprob: -3.821632146835327
    6. 'def' → logprob: -3.821632146835327
    7. ',' → logprob: -4.446631908416748
    8. '.
' → logprob: -5.571631908416748
    9. ')' → logprob: -5.696631908416748
    10. ':
' → logprob: -5.946631908416748

Token 372: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02323010191321373
    2. ')' → logprob: -4.523230075836182
    3. '
' → logprob: -4.898230075836182
    4. '"""' → logprob: -5.898230075836182
    5. '"""
' → logprob: -7.523230075836182
    6. '```' → logprob: -8.02323055267334
    7. ')
' → logprob: -8.27323055267334
    8. '#' → logprob: -8.64823055267334
    9. '    
' → logprob: -8.64823055267334
    10. '<|end|>' → logprob: -9.27323055267334

Token 373: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025597430765628815
    2. '"""' → logprob: -4.40059757232666
    3. ')' → logprob: -5.40059757232666
    4. '
' → logprob: -5.65059757232666
    5. '"""
' → logprob: -5.65059757232666
    6. '```' → logprob: -7.40059757232666
    7. ' """
' → logprob: -8.65059757232666
    8. ' """' → logprob: -8.90059757232666
    9. ')
' → logprob: -9.02559757232666
    10. '#' → logprob: -9.40059757232666

Token 374: ' The' (ID: 623)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.8488881587982178
    2. ' faces' → logprob: -1.9738881587982178
    3. '#' → logprob: -2.0988881587982178
    4. 'return' → logprob: -2.2238881587982178
    5. 'Return' → logprob: -2.4738881587982178
    6. 'faces' → logprob: -2.7238881587982178
    7. ' edges' → logprob: -3.2238881587982178
    8. 'def' → logprob: -3.2238881587982178
    9. 'Use' → logprob: -3.3488881587982178
    10. 'import' → logprob: -3.4738881587982178

Token 375: ' polygon' (ID: 65081)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -1.5820032358169556
    2. ' faces' → logprob: -1.8320032358169556
    3. ' remaining' → logprob: -2.457003116607666
    4. ' code' → logprob: -2.457003116607666
    5. ' next' → logprob: -2.582003116607666
    6. ' edges' → logprob: -2.957003116607666
    7. ' visited' → logprob: -3.582003116607666
    8. 'n' → logprob: -3.832003116607666
    9. 'def' → logprob: -3.832003116607666
    10. '   ' → logprob: -3.832003116607666

Token 376: ' is' (ID: 382)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.000969583576079458
    2. ' s' → logprob: -7.875969409942627
    3. ' edges' → logprob: -8.250969886779785
    4. 'al' → logprob: -9.250969886779785
    5. '_edges' → logprob: -10.000969886779785
    6. ' faces' → logprob: -10.750969886779785
    7. ' is' → logprob: -10.750969886779785
    8. '(s' → logprob: -10.750969886779785
    9. '   ' → logprob: -11.000969886779785
    10. '_list' → logprob: -11.250969886779785

Token 377: ' convex' (ID: 142423)
  Prédit: ' represented'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' represented' → logprob: -1.0099033117294312
    2. ' defined' → logprob: -1.7599033117294312
    3. ' not' → logprob: -2.2599034309387207
    4. ' formed' → logprob: -2.6349034309387207
    5. '[]' → logprob: -3.2599034309387207
    6. ' assumed' → logprob: -3.3849034309387207
    7. ' given' → logprob: -3.5099034309387207
    8. ' the' → logprob: -3.6349034309387207
    9. ' C' → logprob: -4.134903430938721
    10. 'defined' → logprob: -4.384903430938721

Token 378: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8438263535499573
    2. '   ' → logprob: -0.8438263535499573
    3. '
' → logprob: -2.8438262939453125
    4. ':
' → logprob: -3.3438262939453125
    5. 'def' → logprob: -3.8438262939453125
    6. '):' → logprob: -5.0938262939453125
    7. '.' → logprob: -5.3438262939453125
    8. ')' → logprob: -5.5938262939453125
    9. ',' → logprob: -5.8438262939453125
    10. '):
' → logprob: -6.2188262939453125

Token 379: ' so' (ID: 813)
  Prédit: ' so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.019975898787379265
    2. ' and' → logprob: -4.769975662231445
    3. ' but' → logprob: -6.019975662231445
    4. '<|end|>' → logprob: -6.019975662231445
    5. '   ' → logprob: -6.144975662231445
    6. ' continue' → logprob: -7.394975662231445
    7. '    
' → logprob: -7.519975662231445
    8. 'so' → logprob: -7.644975662231445
    9. ',' → logprob: -8.269975662231445
    10. ')' → logprob: -8.394975662231445

Token 380: ' outer' (ID: 25982)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' each' → logprob: -1.0282939672470093
    2. ' the' → logprob: -1.4032939672470093
    3. ' all' → logprob: -1.5282939672470093
    4. ' we' → logprob: -2.528294086456299
    5. ' edges' → logprob: -3.028294086456299
    6. ' faces' → logprob: -4.528294086456299
    7. '   ' → logprob: -5.028294086456299
    8. ' for' → logprob: -5.153294086456299
    9. ' return' → logprob: -5.403294086456299
    10. 'the' → logprob: -5.778294086456299

Token 381: ' face' (ID: 4950)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5255251526832581
    2. '_faces' → logprob: -2.7755250930786133
    3. '_' → logprob: -2.9005250930786133
    4. 't' → logprob: -3.5255250930786133
    5. ' =' → logprob: -3.6505250930786133
    6. ' )' → logprob: -3.7755250930786133
    7. '_edges' → logprob: -3.9005250930786133
    8. '_points' → logprob: -3.9005250930786133
    9. 'e' → logprob: -4.150525093078613
    10. '   ' → logprob: -4.275525093078613

Token 382: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0817522406578064
    2. ' can' → logprob: -3.706752300262451
    3. ' will' → logprob: -4.081752300262451
    4. ' =' → logprob: -4.706752300262451
    5. '=' → logprob: -5.706752300262451
    6. ',' → logprob: -5.956752300262451
    7. ')' → logprob: -6.206752300262451
    8. 's' → logprob: -6.331752300262451
    9. ' consists' → logprob: -6.456752300262451
    10. ' has' → logprob: -6.581752300262451

Token 383: ' well' (ID: 1775)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.21191102266311646
    2. ' not' → logprob: -2.8369109630584717
    3. ' outside' → logprob: -3.4619109630584717
    4. ' guaranteed' → logprob: -4.336911201477051
    5. 'the' → logprob: -4.336911201477051
    6. ' always' → logprob: -4.336911201477051
    7. ' also' → logprob: -4.711911201477051
    8. ' all' → logprob: -4.836911201477051
    9. ' everything' → logprob: -5.086911201477051
    10. ' represented' → logprob: -5.461911201477051

Token 384: ' defined' (ID: 9113)
  Prédit: '-defined'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-defined' → logprob: -0.00040123690268956125
    2. 'defined' → logprob: -8.625401496887207
    3. ' defined' → logprob: -8.875401496887207
    4. '   ' → logprob: -10.625401496887207
    5. '-separated' → logprob: -10.625401496887207
    6. '_defined' → logprob: -10.875401496887207
    7. '-' → logprob: -11.625401496887207
    8. '```' → logprob: -13.000401496887207
    9. '-known' → logprob: -13.500401496887207
    10. '-connected' → logprob: -14.750401496887207

Token 385: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5022503137588501
    2. '   ' → logprob: -1.50225031375885
    3. '"""' → logprob: -1.87725031375885
    4. '.' → logprob: -4.7522501945495605
    5. '```' → logprob: -5.3772501945495605
    6. '"""
' → logprob: -6.2522501945495605
    7. ')
' → logprob: -6.7522501945495605
    8. 'def' → logprob: -6.8772501945495605
    9. ',' → logprob: -7.6272501945495605
    10. '):' → logprob: -8.377250671386719

Token 386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10997416079044342
    2. ')' → logprob: -2.4849741458892822
    3. '"""' → logprob: -4.109974384307861
    4. '"""
' → logprob: -5.984974384307861
    5. '
' → logprob: -7.484974384307861
    6. '```' → logprob: -7.609974384307861
    7. ')
' → logprob: -7.734974384307861
    8. ' """
' → logprob: -9.359973907470703
    9. ' """' → logprob: -9.484973907470703
    10. '"' → logprob: -9.734973907470703

Token 387: ' We' (ID: 1416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.509779691696167
    2. '"""' → logprob: -1.009779691696167
    3. ')' → logprob: -3.759779691696167
    4. ' """' → logprob: -5.134779930114746
    5. '"""
' → logprob: -5.509779930114746
    6. '```' → logprob: -7.134779930114746
    7. ' """
' → logprob: -7.259779930114746
    8. ')
' → logprob: -9.634779930114746
    9. '#' → logprob: -10.134779930114746
    10. '
' → logprob: -10.259779930114746

Token 388: ' find' (ID: 1646)
  Prédit: ''ll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''ll' → logprob: -0.6203547120094299
    2. ' ' → logprob: -1.6203546524047852
    3. ' continue' → logprob: -2.495354652404785
    4. ''' → logprob: -3.245354652404785
    5. ''re' → logprob: -3.745354652404785
    6. ' need' → logprob: -3.870354652404785
    7. '   ' → logprob: -4.120354652404785
    8. ' want' → logprob: -4.495354652404785
    9. 're' → logprob: -4.745354652404785
    10. 'n' → logprob: -4.745354652404785

Token 389: ' faces' (ID: 22060)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.3413347601890564
    2. ' faces' → logprob: -1.9663348197937012
    3. ' cycles' → logprob: -2.341334819793701
    4. ' the' → logprob: -3.091334819793701
    5. ' edges' → logprob: -5.716334819793701
    6. 'all' → logprob: -6.591334819793701
    7. ' a' → logprob: -6.716334819793701
    8. 'cycles' → logprob: -7.841334819793701
    9. ' next' → logprob: -8.216334342956543
    10. 'faces' → logprob: -8.341334342956543

Token 390: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.008871365338563919
    2. '.' → logprob: -5.883871555328369
    3. ' using' → logprob: -6.133871555328369
    4. 'by' → logprob: -6.133871555328369
    5. ' via' → logprob: -7.633871555328369
    6. ',' → logprob: -8.008871078491211
    7. '   ' → logprob: -8.133871078491211
    8. ' as' → logprob: -10.133871078491211
    9. ' =' → logprob: -10.133871078491211
    10. ' that' → logprob: -10.258871078491211

Token 391: ' travers' (ID: 26957)
  Prédit: ' travers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' travers' → logprob: -0.0804467722773552
    2. ' iter' → logprob: -3.455446720123291
    3. ' walking' → logprob: -3.705446720123291
    4. ' following' → logprob: -5.205446720123291
    5. 'tr' → logprob: -5.455446720123291
    6. ' tracing' → logprob: -6.455446720123291
    7. ' dfs' → logprob: -6.705446720123291
    8. 'following' → logprob: -6.830446720123291
    9. ' sorting' → logprob: -6.830446720123291
    10. 'dfs' → logprob: -7.080446720123291

Token 392: 'ing' (ID: 289)
  Prédit: 'sing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sing' → logprob: -0.06994843482971191
    2. 'ing' → logprob: -3.319948434829712
    3. 'sal' → logprob: -4.319948196411133
    4. 's' → logprob: -4.569948196411133
    5. 'al' → logprob: -5.694948196411133
    6. '```' → logprob: -6.319948196411133
    7. 'se' → logprob: -6.694948196411133
    8. 'aling' → logprob: -7.944948196411133
    9. '
' → logprob: -8.069948196411133
    10. '#' → logprob: -9.694948196411133

Token 393: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.10662811994552612
    2. ' all' → logprob: -3.231628179550171
    3. ' the' → logprob: -3.356628179550171
    4. ' each' → logprob: -4.106627941131592
    5. ' around' → logprob: -5.481627941131592
    6. 'edges' → logprob: -6.106627941131592
    7. ' un' → logprob: -6.731627941131592
    8. ' unseen' → logprob: -7.481627941131592
    9. ' unexpl' → logprob: -7.731627941131592
    10. ' unfinished' → logprob: -7.981627941131592

Token 394: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7885927557945251
    2. ',' → logprob: -0.9135927557945251
    3. '.' → logprob: -2.41359281539917
    4. ' counter' → logprob: -4.91359281539917
    5. ' around' → logprob: -5.16359281539917
    6. ' using' → logprob: -5.16359281539917
    7. ' with' → logprob: -5.16359281539917
    8. ' to' → logprob: -5.28859281539917
    9. ' starting' → logprob: -5.91359281539917
    10. 'in' → logprob: -6.28859281539917

Token 395: ' order' (ID: 2569)
  Prédit: ' counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counter' → logprob: -0.2514115273952484
    2. 'counter' → logprob: -2.2514114379882812
    3. ' a' → logprob: -2.8764114379882812
    4. ' clockwise' → logprob: -3.6264114379882812
    5. ' the' → logprob: -4.876411437988281
    6. 'a' → logprob: -5.126411437988281
    7. ' order' → logprob: -5.251411437988281
    8. ' CC' → logprob: -5.626411437988281
    9. ' sorted' → logprob: -5.876411437988281
    10. 'clock' → logprob: -6.501411437988281

Token 396: '.' (ID: 13)
  Prédit: ' around'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' around' → logprob: -0.7468903660774231
    2. ' to' → logprob: -0.8718903660774231
    3. ',' → logprob: -2.8718903064727783
    4. 'def' → logprob: -3.7468903064727783
    5. '   ' → logprob: -4.246890544891357
    6. 'to' → logprob: -4.621890544891357
    7. 'around' → logprob: -6.121890544891357
    8. ' of' → logprob: -7.621890544891357
    9. '.' → logprob: -8.2468900680542
    10. 'counter' → logprob: -9.1218900680542

Token 397: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01203450933098793
    2. 'def' → logprob: -4.7620344161987305
    3. '
' → logprob: -6.6370344161987305
    4. ')' → logprob: -7.5120344161987305
    5. '```' → logprob: -7.7620344161987305
    6. '#' → logprob: -8.26203441619873
    7. '<|end|>' → logprob: -8.76203441619873
    8. 'n' → logprob: -9.01203441619873
    9. '"""' → logprob: -9.13703441619873
    10. ' def' → logprob: -9.13703441619873

Token 398: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02551807276904583
    2. ')' → logprob: -4.15051794052124
    3. 'def' → logprob: -5.15051794052124
    4. '"""' → logprob: -6.77551794052124
    5. ' """' → logprob: -7.15051794052124
    6. ' def' → logprob: -7.40051794052124
    7. '<|end|>' → logprob: -8.525518417358398
    8. ' The' → logprob: -8.900518417358398
    9. ' )' → logprob: -9.150518417358398
    10. '```' → logprob: -9.275518417358398

Token 399: ' Return' (ID: 6318)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015561266802251339
    2. ' edges' → logprob: -5.640561103820801
    3. '"""' → logprob: -5.640561103820801
    4. ' graph' → logprob: -5.890561103820801
    5. ')' → logprob: -6.515561103820801
    6. '```' → logprob: -7.140561103820801
    7. ' """' → logprob: -7.390561103820801
    8. 'def' → logprob: -7.515561103820801
    9. ' faces' → logprob: -7.640561103820801
    10. ' """
' → logprob: -8.3905611038208

Token 400: ':' (ID: 25)
  Prédit: ' faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' faces' → logprob: -0.366812139749527
    2. ' []' → logprob: -1.6168121099472046
    3. 'faces' → logprob: -3.241812229156494
    4. '[]' → logprob: -3.366812229156494
    5. ' all' → logprob: -4.116812229156494
    6. ' a' → logprob: -4.366812229156494
    7. '_faces' → logprob: -6.491812229156494
    8. ' list' → logprob: -6.866812229156494
    9. ' the' → logprob: -7.241812229156494
    10. ' [' → logprob: -7.491812229156494

Token 401: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.5197917819023132
    2. ' faces' → logprob: -1.019791841506958
    3. '[]' → logprob: -3.644791841506958
    4. ' [],' → logprob: -4.894791603088379
    5. 'faces' → logprob: -5.144791603088379
    6. ' defaultdict' → logprob: -6.769791603088379
    7. ' [' → logprob: -7.519791603088379
    8. '[],' → logprob: -7.769791603088379
    9. '_faces' → logprob: -7.894791603088379
    10. ' []
' → logprob: -7.894791603088379

Token 402: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7059513926506042
    2. ' of' → logprob: -0.7059513926506042
    3. '[]' → logprob: -4.58095121383667
    4. '(' → logprob: -7.08095121383667
    5. '[
' → logprob: -7.70595121383667
    6. 'of' → logprob: -7.83095121383667
    7. ' []' → logprob: -8.580951690673828
    8. '<|end|>' → logprob: -8.830951690673828
    9. '()' → logprob: -9.455951690673828
    10. ' [' → logprob: -9.580951690673828

Token 403: ' faces' (ID: 22060)
  Prédit: ' lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lists' → logprob: -0.14203804731369019
    2. ' faces' → logprob: -2.767038106918335
    3. 'faces' → logprob: -3.767038106918335
    4. ' list' → logprob: -4.142037868499756
    5. 'list' → logprob: -4.267037868499756
    6. 'lists' → logprob: -5.142037868499756
    7. ' polygons' → logprob: -5.267037868499756
    8. '[]' → logprob: -6.017037868499756
    9. 'pol' → logprob: -6.267037868499756
    10. '[' → logprob: -8.267038345336914

Token 404: ',' (ID: 11)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.8413055539131165
    2. '   ' → logprob: -1.2163054943084717
    3. 'def' → logprob: -1.9663054943084717
    4. ':' → logprob: -2.9663054943084717
    5. '(' → logprob: -4.091305732727051
    6. ':
' → logprob: -4.216305732727051
    7. ',' → logprob: -4.466305732727051
    8. '
' → logprob: -4.591305732727051
    9. '(poly' → logprob: -4.841305732727051
    10. '(
' → logprob: -5.341305732727051

Token 405: ' each' (ID: 2454)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.687945544719696
    2. 'edges' → logprob: -2.312945604324341
    3. ' edges' → logprob: -2.312945604324341
    4. '[]' → logprob: -2.687945604324341
    5. ' faces' → logprob: -3.187945604324341
    6. 'adj' → logprob: -3.312945604324341
    7. ' each' → logprob: -3.437945604324341
    8. 'each' → logprob: -3.437945604324341
    9. ' list' → logprob: -3.562945604324341
    10. '   ' → logprob: -4.312945365905762

Token 406: ' face' (ID: 4950)
  Prédit: ' face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' face' → logprob: -0.029654676094651222
    2. ' is' → logprob: -3.7796547412872314
    3. ' as' → logprob: -5.404654502868652
    4. 'face' → logprob: -6.904654502868652
    5. ' a' → logprob: -8.029654502868652
    6. ' of' → logprob: -8.654654502868652
    7. ' represented' → logprob: -8.779654502868652
    8. ' being' → logprob: -9.779654502868652
    9. '_face' → logprob: -10.029654502868652
    10. '[]' → logprob: -10.404654502868652

Token 407: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.26506662368774414
    2. ' as' → logprob: -1.6400666236877441
    3. 'is' → logprob: -4.140066623687744
    4. 'as' → logprob: -5.140066623687744
    5. ' =' → logprob: -5.265066623687744
    6. '=' → logprob: -5.265066623687744
    7. ':' → logprob: -6.015066623687744
    8. ' represented' → logprob: -6.265066623687744
    9. '_vertices' → logprob: -7.765066623687744
    10. 'def' → logprob: -8.140066146850586

Token 408: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.647013783454895
    2. ' a' → logprob: -1.647013783454895
    3. '[]' → logprob: -1.647013783454895
    4. '[' → logprob: -3.2720136642456055
    5. ' []' → logprob: -3.7720136642456055
    6. '[a' → logprob: -4.0220136642456055
    7. '[List' → logprob: -5.2720136642456055
    8. ' [' → logprob: -6.0220136642456055
    9. 'list' → logprob: -6.5220136642456055
    10. ' list' → logprob: -6.5220136642456055

Token 409: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.009054489433765411
    2. 'list' → logprob: -4.759054660797119
    3. ' [' → logprob: -8.384054183959961
    4. '[]' → logprob: -9.384054183959961
    5. '[' → logprob: -9.759054183959961
    6. ' []' → logprob: -9.759054183959961
    7. '[list' → logprob: -12.134054183959961
    8. ' List' → logprob: -13.384054183959961
    9. '   ' → logprob: -14.009054183959961
    10. '[List' → logprob: -14.134054183959961

Token 410: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.011418077163398266
    2. '[' → logprob: -4.636417865753174
    3. 'of' → logprob: -6.636417865753174
    4. '[
' → logprob: -8.761418342590332
    5. '[int' → logprob: -10.261418342590332
    6. '[]' → logprob: -10.761418342590332
    7. '<|end|>' → logprob: -10.761418342590332
    8. ')' → logprob: -10.886418342590332
    9. '[List' → logprob: -11.011418342590332
    10. '   ' → logprob: -11.011418342590332

Token 411: ' vertex' (ID: 25363)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.27884966135025024
    2. 'vertices' → logprob: -1.7788496017456055
    3. ' points' → logprob: -3.0288496017456055
    4. ' vertices' → logprob: -3.9038496017456055
    5. 'point' → logprob: -6.9038496017456055
    6. 'int' → logprob: -7.0288496017456055
    7. '(int' → logprob: -7.1538496017456055
    8. 'vertex' → logprob: -7.1538496017456055
    9. 'ints' → logprob: -7.2788496017456055
    10. ' int' → logprob: -8.028849601745605

Token 412: ' indices' (ID: 30378)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00011760921915993094
    2. ']' → logprob: -9.250117301940918
    3. 'es' → logprob: -11.625117301940918
    4. '[]' → logprob: -11.875117301940918
    5. ' s' → logprob: -12.375117301940918
    6. '_s' → logprob: -14.500117301940918
    7. 'indices' → logprob: -15.500117301940918
    8. '_indices' → logprob: -15.875117301940918
    9. '_list' → logprob: -16.125118255615234
    10. ')' → logprob: -16.250118255615234

Token 413: ' in' (ID: 306)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8297951221466064
    2. 'def' → logprob: -1.3297951221466064
    3. '   ' → logprob: -1.5797951221466064
    4. ':
' → logprob: -2.7047951221466064
    5. ',' → logprob: -4.454794883728027
    6. '
' → logprob: -5.329794883728027
    7. '):
' → logprob: -5.954794883728027
    8. '):' → logprob: -6.079794883728027
    9. '```' → logprob: -6.329794883728027
    10. '.' → logprob: -8.079794883728027

Token 414: ' CC' (ID: 21547)
  Prédit: ' order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.8590166568756104
    2. ' counter' → logprob: -1.4840166568756104
    3. 'order' → logprob: -2.2340166568756104
    4. 'counter' → logprob: -2.3590166568756104
    5. ' clockwise' → logprob: -2.6090166568756104
    6. '[]' → logprob: -3.8590166568756104
    7. ' CC' → logprob: -3.8590166568756104
    8. '[' → logprob: -4.359016418457031
    9. 'clock' → logprob: -4.484016418457031
    10. 'the' → logprob: -6.109016418457031

Token 415: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -1.5928495486150496e-05
    2. 'w' → logprob: -11.125016212463379
    3. ' W' → logprob: -14.625016212463379
    4. 'CW' → logprob: -15.375016212463379
    5. 'WL' → logprob: -15.500016212463379
    6. '```' → logprob: -16.000015258789062
    7. '`' → logprob: -17.750015258789062
    8. 'WV' → logprob: -17.750015258789062
    9. '[::-' → logprob: -18.125015258789062
    10. '[' → logprob: -18.250015258789062

Token 416: ' order' (ID: 2569)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4391659498214722
    2. 'def' → logprob: -1.4391659498214722
    3. '):' → logprob: -1.5641659498214722
    4. ']' → logprob: -1.9391659498214722
    5. '_faces' → logprob: -2.8141660690307617
    6. ':' → logprob: -3.0641660690307617
    7. ']:' → logprob: -3.9391660690307617
    8. '):
' → logprob: -4.814166069030762
    9. '_list' → logprob: -4.939166069030762
    10. '_vertices' → logprob: -5.189166069030762

Token 417: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4575079679489136
    2. '):' → logprob: -1.4575079679489136
    3. '):
' → logprob: -1.7075079679489136
    4. 'def' → logprob: -2.207508087158203
    5. ':' → logprob: -2.457508087158203
    6. '
' → logprob: -2.707508087158203
    7. ')' → logprob: -2.957508087158203
    8. ':
' → logprob: -3.707508087158203
    9. ')
' → logprob: -4.957508087158203
    10. '```' → logprob: -5.582508087158203

Token 418: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39882197976112366
    2. '"""' → logprob: -1.6488219499588013
    3. ')' → logprob: -2.648822069168091
    4. '"""
' → logprob: -2.773822069168091
    5. '```' → logprob: -6.773821830749512
    6. 'def' → logprob: -7.148821830749512
    7. '""' → logprob: -7.273821830749512
    8. '")' → logprob: -8.273821830749512
    9. '"' → logprob: -9.148821830749512
    10. ' """
' → logprob: -9.273821830749512

Token 419: ' """

' (ID: 28800)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.37058520317077637
    2. '"""' → logprob: -1.7455852031707764
    3. ')' → logprob: -2.6205852031707764
    4. '   ' → logprob: -2.8705852031707764
    5. ')
' → logprob: -5.9955854415893555
    6. 'def' → logprob: -6.3705854415893555
    7. ' """
' → logprob: -7.3705854415893555
    8. '```' → logprob: -7.9955854415893555
    9. '"' → logprob: -9.370585441589355
    10. '""' → logprob: -9.370585441589355

Token 420: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2188398689031601
    2. ' n' → logprob: -2.3438398838043213
    3. ' graph' → logprob: -2.8438398838043213
    4. ' edges' → logprob: -4.593839645385742
    5. 'graph' → logprob: -5.093839645385742
    6. 'n' → logprob: -5.218839645385742
    7. ' faces' → logprob: -5.468839645385742
    8. ' def' → logprob: -5.718839645385742
    9. ' vertices' → logprob: -5.843839645385742
    10. ' #' → logprob: -6.093839645385742

Token 421: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.22481755912303925
    2. '#' (adapté à ' #') → logprob: -2.5998175144195557
    3. 'adj' → logprob: -2.7248175144195557
    4. 'n' → logprob: -4.099817752838135
    5. 'edges' → logprob: -4.474817752838135
    6. 'from' → logprob: -4.849817752838135
    7. '   ' → logprob: -4.974817752838135
    8. 'faces' → logprob: -5.599817752838135
    9. 'def' → logprob: -6.099817752838135
    10. 'face' → logprob: -6.224817752838135

Token 422: ' Build' (ID: 10885)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.546977698802948
    2. 'adj' → logprob: -0.921977698802948
    3. '#' → logprob: -5.296977519989014
    4. 'edges' → logprob: -5.546977519989014
    5. 'edge' → logprob: -5.671977519989014
    6. 'from' → logprob: -5.796977519989014
    7. 'n' → logprob: -6.046977519989014
    8. 'vertex' → logprob: -6.671977519989014
    9. 'pos' → logprob: -7.296977519989014
    10. 'visited' → logprob: -7.296977519989014

Token 423: ' adjacency' (ID: 177015)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.05214782804250717
    2. 'adj' → logprob: -3.30214786529541
    3. ' graph' → logprob: -4.30214786529541
    4. ' adj' → logprob: -8.05214786529541
    5. 'G' → logprob: -9.80214786529541
    6. 'edge' → logprob: -10.30214786529541
    7. 'g' → logprob: -11.05214786529541
    8. '   ' → logprob: -11.17714786529541
    9. 'edges' → logprob: -11.30214786529541
    10. '#' → logprob: -11.80214786529541

Token 424: ' list' (ID: 1562)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6512840986251831
    2. ' =' → logprob: -0.7762840986251831
    3. '_list' → logprob: -4.151284217834473
    4. 'list' → logprob: -6.026284217834473
    5. 'List' → logprob: -8.276284217834473
    6. '_lists' → logprob: -9.901284217834473
    7. 'graph' → logprob: -11.901284217834473
    8. '=list' → logprob: -12.151284217834473
    9. '[' → logprob: -12.276284217834473
    10. 'lists' → logprob: -12.651284217834473

Token 425: ' with' (ID: 483)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.031897928565740585
    2. 'graph' → logprob: -4.406898021697998
    3. ' adj' → logprob: -4.656898021697998
    4. '   ' → logprob: -5.406898021697998
    5. ' =' → logprob: -5.531898021697998
    6. ' graph' → logprob: -7.531898021697998
    7. '=' → logprob: -7.656898021697998
    8. ' adjacency' → logprob: -9.28189754486084
    9. 'G' → logprob: -9.78189754486084
    10. ':' → logprob: -10.40689754486084

Token 426: ' sorted' (ID: 20099)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.06550075113773346
    2. ' defaultdict' → logprob: -2.9405007362365723
    3. '[]' → logprob: -5.065500736236572
    4. 'sorted' → logprob: -6.190500736236572
    5. ' default' → logprob: -7.065500736236572
    6. 'angles' → logprob: -7.440500736236572
    7. '[' → logprob: -8.81550121307373
    8. '{}' → logprob: -8.94050121307373
    9. 'dict' → logprob: -9.06550121307373
    10. ' angles' → logprob: -9.56550121307373

Token 427: ' edges' (ID: 22569)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.9581584334373474
    2. ' edges' → logprob: -2.083158493041992
    3. 'edges' → logprob: -2.083158493041992
    4. ' neighbors' → logprob: -2.833158493041992
    5. ' lists' → logprob: -3.333158493041992
    6. '(W' → logprob: -3.333158493041992
    7. 'angles' → logprob: -3.333158493041992
    8. 'vertices' → logprob: -3.458158493041992
    9. ' adjacency' → logprob: -3.583158493041992
    10. ' keys' → logprob: -3.833158493041992

Token 428: ' in' (ID: 306)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.5078268051147461
    2. ' adj' → logprob: -1.382826805114746
    3. ' =' → logprob: -2.257826805114746
    4. '   ' → logprob: -4.007826805114746
    5. ':' → logprob: -4.632826805114746
    6. 'graph' → logprob: -5.507826805114746
    7. ' adjacency' → logprob: -5.507826805114746
    8. ' graph' → logprob: -5.632826805114746
    9. '=' → logprob: -6.257826805114746
    10. '_adj' → logprob: -7.757826805114746

Token 429: ' CC' (ID: 21547)
  Prédit: 'CC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CC' → logprob: -0.41578909754753113
    2. 'counter' → logprob: -1.2907891273498535
    3. 'angle' → logprob: -4.0407891273498535
    4. 'cc' → logprob: -4.1657891273498535
    5. 'clock' → logprob: -4.4157891273498535
    6. ' CC' → logprob: -4.7907891273498535
    7. ' clockwise' → logprob: -5.4157891273498535
    8. ' counter' → logprob: -5.7907891273498535
    9. 'angular' → logprob: -6.1657891273498535
    10. 'CW' → logprob: -7.9157891273498535

Token 430: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.011080952361226082
    2. 'w' → logprob: -4.511080741882324
    3. '
' → logprob: -11.761080741882324
    4. ' W' → logprob: -12.261080741882324
    5. '

' → logprob: -12.761080741882324
    6. 'wise' → logprob: -13.573580741882324
    7. 'wind' → logprob: -14.011080741882324
    8. '[' → logprob: -14.073580741882324
    9. '_w' → logprob: -14.136080741882324
    10. '```' → logprob: -14.136080741882324

Token 431: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.352254182100296
    2. ' order' → logprob: -1.2272541522979736
    3. ')' → logprob: -6.227254390716553
    4. '_order' → logprob: -7.227254390716553
    5. 'direction' → logprob: -8.352253913879395
    6. 'angle' → logprob: -8.352253913879395
    7. ']' → logprob: -9.352253913879395
    8. '(order' → logprob: -9.727253913879395
    9. ' around' → logprob: -10.352253913879395
    10. '<|end|>' → logprob: -10.477253913879395

Token 432: ' for' (ID: 395)
  Prédit: ' adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adj' → logprob: -1.0363118648529053
    2. 'adj' → logprob: -1.0363118648529053
    3. '   ' → logprob: -1.6613118648529053
    4. ':' → logprob: -2.5363118648529053
    5. ' adjacency' → logprob: -4.411312103271484
    6. ' graph' → logprob: -5.911312103271484
    7. ' =' → logprob: -6.036312103271484
    8. 'graph' → logprob: -6.536312103271484
    9. ' adjacent' → logprob: -7.286312103271484
    10. '_adj' → logprob: -7.661312103271484

Token 433: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.05887703225016594
    2. ' each' → logprob: -2.9338769912719727
    3. 'v' → logprob: -5.933876991271973
    4. 'C' → logprob: -7.558876991271973
    5. 'vertex' → logprob: -7.683876991271973
    6. 'range' → logprob: -9.183876991271973
    7. ' v' → logprob: -9.558876991271973
    8. ' C' → logprob: -9.933876991271973
    9. ' vertex' → logprob: -10.058876991271973
    10. 'i' → logprob: -10.308876991271973

Token 434: ' vertex' (ID: 25363)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.15947017073631287
    2. ' vertex' → logprob: -2.1594700813293457
    3. 'node' → logprob: -3.9094700813293457
    4. ' node' → logprob: -4.659470081329346
    5. 'v' → logprob: -7.034470081329346
    6. 'pillar' → logprob: -7.034470081329346
    7. 'corner' → logprob: -8.284470558166504
    8. 'C' → logprob: -8.784470558166504
    9. ' pillar' → logprob: -10.159470558166504
    10. '	vertex' → logprob: -10.159470558166504

Token 435: '.
' (ID: 558)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.42947518825531006
    2. ' adj' → logprob: -1.67947518825531
    3. '   ' → logprob: -1.92947518825531
    4. ' adjacency' → logprob: -4.5544753074646
    5. ':' → logprob: -5.8044753074646
    6. 'graph' → logprob: -6.5544753074646
    7. ' graph' → logprob: -6.8044753074646
    8. ' =' → logprob: -7.9294753074646
    9. '_adj' → logprob: -8.179474830627441
    10. '
' → logprob: -8.804474830627441

Token 436: '   ' (ID: 271)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.23752427101135254
    2. '   ' → logprob: -2.1125242710113525
    3. ' adj' → logprob: -2.4875242710113525
    4. 'graph' → logprob: -5.487524032592773
    5. ' graph' → logprob: -6.112524032592773
    6. ' adjacency' → logprob: -6.987524032592773
    7. '```' → logprob: -10.487524032592773
    8. ' adjacent' → logprob: -11.362524032592773
    9. '    
' → logprob: -11.737524032592773
    10. ' ' → logprob: -11.987524032592773

Token 437: ' #' (ID: 1069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.03360525146126747
    2. ' adj' → logprob: -3.5336053371429443
    3. 'graph' → logprob: -6.533605098724365
    4. '   ' → logprob: -6.658605098724365
    5. ' adjacency' → logprob: -7.158605098724365
    6. ' graph' → logprob: -8.158605575561523
    7. 'for' → logprob: -11.783605575561523
    8. '```' → logprob: -12.158605575561523
    9. '#' (adapté à ' #') → logprob: -12.783605575561523
    10. 'vertex' → logprob: -12.783605575561523

Token 438: ' Sorting' (ID: 152134)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.013894917443394661
    2. ' adj' → logprob: -4.513895034790039
    3. 'graph' → logprob: -6.263895034790039
    4. ' adjacency' → logprob: -7.888895034790039
    5. '   ' → logprob: -8.638895034790039
    6. 'for' → logprob: -9.013895034790039
    7. ' graph' → logprob: -9.013895034790039
    8. 'vertex' → logprob: -10.888895034790039
    9. '#' → logprob: -10.888895034790039
    10. 'pos' → logprob: -11.013895034790039

Token 439: ' edges' (ID: 22569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1743359565734863
    2. 'adj' → logprob: -2.2993359565734863
    3. 'edges' → logprob: -2.5493359565734863
    4. 'by' → logprob: -2.6743359565734863
    5. 'neighbors' → logprob: -3.0493359565734863
    6. ' for' → logprob: -3.1743359565734863
    7. 'the' → logprob: -3.1743359565734863
    8. ' =' → logprob: -3.2993359565734863
    9. ' by' → logprob: -3.4243359565734863
    10. '=' → logprob: -3.4243359565734863

Token 440: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28604793548583984
    2. 'for' → logprob: -2.28604793548584
    3. '[' → logprob: -3.28604793548584
    4. ' =' → logprob: -3.66104793548584
    5. ' for' → logprob: -3.91104793548584
    6. ' by' → logprob: -4.28604793548584
    7. ',' → logprob: -4.41104793548584
    8. 's' → logprob: -5.03604793548584
    9. 'from' → logprob: -5.41104793548584
    10. 'by' → logprob: -5.53604793548584

Token 441: ' CC' (ID: 21547)
  Prédit: 'CC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'CC' → logprob: -1.080098271369934
    2. 'lambda' → logprob: -1.455098271369934
    3. 'each' → logprob: -2.3300981521606445
    4. 'counter' → logprob: -2.5800981521606445
    5. 'angle' → logprob: -3.3300981521606445
    6. 'C' → logprob: -3.3300981521606445
    7. 'key' → logprob: -3.3300981521606445
    8. 'clock' → logprob: -3.4550981521606445
    9. ' clockwise' → logprob: -3.8300981521606445
    10. ' each' → logprob: -4.5800981521606445

Token 442: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -8.947715832618997e-05
    2. 'w' → logprob: -10.500089645385742
    3. 'order' → logprob: -10.750089645385742
    4. '_order' → logprob: -11.625089645385742
    5. '#' → logprob: -12.062589645385742
    6. ' W' → logprob: -12.437589645385742
    7. ' order' → logprob: -12.562589645385742
    8. 'Order' → logprob: -12.937589645385742
    9. '
' → logprob: -13.437589645385742
    10. 'V' → logprob: -13.750089645385742

Token 443: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.05205549672245979
    2. 'order' → logprob: -3.302055597305298
    3. '_order' → logprob: -5.052055358886719
    4. ')' → logprob: -5.427055358886719
    5. ' around' → logprob: -7.302055358886719
    6. '<|end|>' → logprob: -7.677055358886719
    7. ',' → logprob: -7.927055358886719
    8. '(order' → logprob: -8.552055358886719
    9. ' for' → logprob: -8.677055358886719
    10. ' direction' → logprob: -8.927055358886719

Token 444: ' allows' (ID: 7927)
  Prédit: ' around'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' around' → logprob: -1.365211009979248
    2. ':' → logprob: -1.490211009979248
    3. ',' → logprob: -1.740211009979248
    4. ' for' → logprob: -1.865211009979248
    5. ' at' → logprob: -2.740211009979248
    6. 'for' → logprob: -3.365211009979248
    7. '.' → logprob: -3.990211009979248
    8. ' =' → logprob: -4.240211009979248
    9. 'def' → logprob: -4.740211009979248
    10. ')' → logprob: -4.740211009979248

Token 445: ' us' (ID: 765)
  Prédit: ' us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' us' → logprob: -0.011033322662115097
    2. ' for' → logprob: -5.636033535003662
    3. ' to' → logprob: -6.011033535003662
    4. 'for' → logprob: -6.261033535003662
    5. 'us' → logprob: -6.761033535003662
    6. ' each' → logprob: -7.636033535003662
    7. 'def' → logprob: -8.261033058166504
    8. 'to' → logprob: -8.386033058166504
    9. ' correct' → logprob: -8.636033058166504
    10. ' proper' → logprob: -8.636033058166504

Token 446: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.04892422631382942
    2. 'to' → logprob: -3.048924207687378
    3. '   ' → logprob: -8.923924446105957
    4. ' ' → logprob: -9.548924446105957
    5. ')' → logprob: -9.923924446105957
    6. '    ' → logprob: -10.923924446105957
    7. ',' → logprob: -11.048924446105957
    8. ' )' → logprob: -11.423924446105957
    9. '	to' → logprob: -11.923924446105957
    10. '  ' → logprob: -11.923924446105957

Token 447: ' walk' (ID: 5229)
  Prédit: ' traverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' traverse' → logprob: -0.5712382793426514
    2. 'tr' → logprob: -1.4462382793426514
    3. 'walk' → logprob: -2.5712382793426514
    4. 'find' → logprob: -3.1962382793426514
    5. ' find' → logprob: -3.5712382793426514
    6. 'navigate' → logprob: -4.6962385177612305
    7. ' walk' → logprob: -5.0712385177612305
    8. 'turn' → logprob: -5.4462385177612305
    9. ' follow' → logprob: -5.5712385177612305
    10. 'trace' → logprob: -5.9462385177612305

Token 448: ' faces' (ID: 22060)
  Prédit: ' around'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' around' → logprob: -0.29312098026275635
    2. 'around' → logprob: -1.5431209802627563
    3. ' the' → logprob: -3.918120861053467
    4. 'the' → logprob: -4.918120861053467
    5. 'from' → logprob: -5.543120861053467
    6. ' edges' → logprob: -6.043120861053467
    7. ' each' → logprob: -6.668120861053467
    8. ' from' → logprob: -6.793120861053467
    9. ' through' → logprob: -7.043120861053467
    10. 'edges' → logprob: -7.293120861053467

Token 449: ' by' (ID: 656)
  Prédit: ' around'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' around' → logprob: -0.2858692407608032
    2. 'around' → logprob: -1.4108692407608032
    3. ',' → logprob: -6.160869121551514
    4. '.' → logprob: -6.910869121551514
    5. 'from' → logprob: -7.160869121551514
    6. ' at' → logprob: -7.910869121551514
    7. 'at' → logprob: -9.160869598388672
    8. ' from' → logprob: -9.535869598388672
    9. ' by' → logprob: -9.785869598388672
    10. ')' → logprob: -10.285869598388672

Token 450: ' following' (ID: 3992)
  Prédit: 'rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rot' → logprob: -1.1826350688934326
    2. 'turn' → logprob: -1.4326350688934326
    3. 'angle' → logprob: -1.8076350688934326
    4. 'following' → logprob: -2.5576350688934326
    5. 'going' → logprob: -3.1826350688934326
    6. ' rotating' → logprob: -3.4326350688934326
    7. ' turning' → logprob: -3.4326350688934326
    8. 'angles' → logprob: -3.6826350688934326
    9. 'finding' → logprob: -4.057635307312012
    10. ' going' → logprob: -4.807635307312012

Token 451: ' next' (ID: 2613)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.46476149559020996
    2. ' the' → logprob: -1.71476149559021
    3. 'edges' → logprob: -2.33976149559021
    4. 'the' → logprob: -2.83976149559021
    5. ' vectors' → logprob: -5.214761734008789
    6. ' adjacent' → logprob: -5.339761734008789
    7. ' each' → logprob: -6.089761734008789
    8. 'adj' → logprob: -6.214761734008789
    9. 'vectors' → logprob: -6.214761734008789
    10. ' angles' → logprob: -6.464761734008789

Token 452: ' edge' (ID: 11165)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.524370014667511
    2. ' edge' → logprob: -1.7743699550628662
    3. 'edges' → logprob: -1.7743699550628662
    4. 'edge' → logprob: -2.899369955062866
    5. '_edges' → logprob: -5.774370193481445
    6. '_edge' → logprob: -6.149370193481445
    7. 'counter' → logprob: -6.649370193481445
    8. ' vectors' → logprob: -6.899370193481445
    9. ' vertices' → logprob: -7.024370193481445
    10. ' counter' → logprob: -7.024370193481445

Token 453: ' in' (ID: 306)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.48870348930358887
    2. ' around' → logprob: -1.1137034893035889
    3. 'from' → logprob: -4.613703727722168
    4. ',' → logprob: -4.613703727722168
    5. '.' → logprob: -4.863703727722168
    6. 'around' → logprob: -4.863703727722168
    7. ' in' → logprob: -5.363703727722168
    8. ' at' → logprob: -5.363703727722168
    9. ' from' → logprob: -5.488703727722168
    10. '[' → logprob: -6.613703727722168

Token 454: ' order' (ID: 2569)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.5052728056907654
    2. ' counter' → logprob: -2.50527286529541
    3. ' clockwise' → logprob: -2.63027286529541
    4. 'adj' → logprob: -2.75527286529541
    5. 'CC' → logprob: -3.50527286529541
    6. 'clock' → logprob: -3.50527286529541
    7. 'the' → logprob: -3.63027286529541
    8. 'cc' → logprob: -4.13027286529541
    9. 'graph' → logprob: -4.13027286529541
    10. ' CC' → logprob: -4.50527286529541

Token 455: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8900848627090454
    2. '.' → logprob: -1.3900848627090454
    3. ' for' → logprob: -2.640084743499756
    4. ',' → logprob: -2.765084743499756
    5. ' at' → logprob: -2.890084743499756
    6. 'for' → logprob: -3.265084743499756
    7. ':' → logprob: -3.515084743499756
    8. ' around' → logprob: -4.015084743499756
    9. 'def' → logprob: -4.390084743499756
    10. ')' → logprob: -4.640084743499756

Token 456: '   ' (ID: 271)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.5567023158073425
    2. ' adj' → logprob: -1.3067023754119873
    3. '   ' → logprob: -2.3067023754119873
    4. ' adjacency' → logprob: -3.3067023754119873
    5. ' for' → logprob: -5.181702136993408
    6. ' graph' → logprob: -5.431702136993408
    7. 'graph' → logprob: -5.556702136993408
    8. 'for' → logprob: -6.806702136993408
    9. 'neighbors' → logprob: -7.181702136993408
    10. ' adjacent' → logprob: -7.306702136993408

Token 457: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -1.126848578453064
    2. ' adj' → logprob: -1.376848578453064
    3. '   ' → logprob: -1.626848578453064
    4. ' adjacency' → logprob: -1.876848578453064
    5. ' graph' → logprob: -3.6268486976623535
    6. ' for' → logprob: -4.5018486976623535
    7. 'graph' → logprob: -4.6268486976623535
    8. '
' → logprob: -5.5018486976623535
    9. ' 
' → logprob: -5.5018486976623535
    10. ' vertices' → logprob: -5.7518486976623535

Token 458: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20158104598522186
    2. '=' → logprob: -1.7015810012817383
    3. 'acency' → logprob: -9.201581001281738
    4. '[' → logprob: -10.326581001281738
    5. ',' → logprob: -11.201581001281738
    6. 's' → logprob: -12.451581001281738
    7. '_list' → logprob: -12.576581001281738
    8. ' ' → logprob: -12.951581001281738
    9. '   ' → logprob: -13.201581001281738
    10. 'acent' → logprob: -13.451581001281738

Token 459: ' [[]' (ID: 182908)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.000205566844670102
    2. '[' → logprob: -8.500205993652344
    3. ' defaultdict' → logprob: -13.500205993652344
    4. '{' → logprob: -14.875205993652344
    5. '.default' → logprob: -15.875205993652344
    6. '(default' → logprob: -16.375205993652344
    7. '"default' → logprob: -16.625205993652344
    8. ' [[]' → logprob: -17.500205993652344
    9. ''default' → logprob: -18.250205993652344
    10. 'Default' → logprob: -19.000205993652344

Token 460: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2565314471721649
    2. ' for' → logprob: -1.5065314769744873
    3. '(C' → logprob: -5.756531238555908
    4. ',' → logprob: -7.256531238555908
    5. ']' → logprob: -7.756531238555908
    6. ')' → logprob: -8.756531715393066
    7. '   ' → logprob: -9.881531715393066
    8. '[C' → logprob: -10.881531715393066
    9. ' ' → logprob: -11.006531715393066
    10. '(' → logprob: -11.381531715393066

Token 461: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23804868757724762
    2. ' range' → logprob: -1.7380486726760864
    3. 'range' → logprob: -3.363048791885376
    4. '_range' → logprob: -6.738048553466797
    5. ' _' → logprob: -9.613048553466797
    6. '(range' → logprob: -9.613048553466797
    7. ' in' → logprob: -11.613048553466797
    8. 'in' → logprob: -12.363048553466797
    9. '_p' → logprob: -12.863048553466797
    10. '_
' → logprob: -13.738048553466797

Token 462: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018503068014979362
    2. ' range' → logprob: -4.018503189086914
    3. ' in' → logprob: -8.643503189086914
    4. 'in' → logprob: -8.768503189086914
    5. '(range' → logprob: -11.143503189086914
    6. 'C' → logprob: -13.143503189086914
    7. 'ange' → logprob: -13.393503189086914
    8. ')' → logprob: -14.768503189086914
    9. 'i' → logprob: -14.768503189086914
    10. 'r' → logprob: -14.893503189086914

Token 463: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001234428636962548
    2. ' range' → logprob: -9.000123023986816
    3. '(range' → logprob: -18.125123977661133
    4. 'rang' → logprob: -21.375123977661133
    5. '	range' → logprob: -21.625123977661133
    6. 'r' → logprob: -21.750123977661133
    7. '   ' → logprob: -22.000123977661133
    8. '
' → logprob: -22.500123977661133
    9. 'C' → logprob: -22.750123977661133
    10. 'ran' → logprob: -23.125123977661133

Token 464: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.009858791716396809
    2. 'C' → logprob: -4.63485860824585
    3. '(len' → logprob: -9.884859085083008
    4. 'len' → logprob: -10.259859085083008
    5. '(W' → logprob: -11.759859085083008
    6. 'W' → logprob: -12.134859085083008
    7. '(' → logprob: -13.134859085083008
    8. '	C' → logprob: -14.259859085083008
    9. '[C' → logprob: -14.884859085083008
    10. 'CW' → logprob: -16.384859085083008

Token 465: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00385957770049572
    2. ')]
' → logprob: -5.753859519958496
    3. ' )' → logprob: -7.628859519958496
    4. '+' → logprob: -9.503859519958496
    5. ')]
' → logprob: -9.878859519958496
    6. ')' → logprob: -10.128859519958496
    7. ')]

' → logprob: -11.503859519958496
    8. ')][' → logprob: -12.253859519958496
    9. ' +' → logprob: -13.378859519958496
    10. ')])' → logprob: -13.378859519958496

Token 466: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.56894850730896
    2. 'for' → logprob: -0.94394850730896
    3. '   ' → logprob: -3.19394850730896
    4. '
' → logprob: -6.318948745727539
    5. '	for' → logprob: -7.068948745727539
    6. '<|end|>' → logprob: -7.568948745727539
    7. '    
' → logprob: -8.693948745727539
    8. ' ' → logprob: -9.693948745727539
    9. '.' → logprob: -9.693948745727539
    10. ',' → logprob: -9.818948745727539

Token 467: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06200153008103371
    2. ' for' → logprob: -2.8120014667510986
    3. '   ' → logprob: -10.56200122833252
    4. 'import' → logprob: -13.18700122833252
    5. '
' → logprob: -13.68700122833252
    6. '	for' → logprob: -13.68700122833252
    7. 'from' → logprob: -14.18700122833252
    8. '#' (adapté à ' #') → logprob: -14.56200122833252
    9. '    
' → logprob: -14.81200122833252
    10. ' 
' → logprob: -15.68700122833252

Token 468: ' Store' (ID: 12600)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005504102446138859
    2. ' for' → logprob: -7.750550270080566
    3. 'edge' → logprob: -10.125550270080566
    4. 'edges' → logprob: -10.875550270080566
    5. '#' → logprob: -11.250550270080566
    6. 'from' → logprob: -11.375550270080566
    7. 'point' → logprob: -12.125550270080566
    8. 'For' → logprob: -12.250550270080566
    9. 'import' → logprob: -12.625550270080566
    10. 'def' → logprob: -12.625550270080566

Token 469: ' edges' (ID: 22569)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -1.1581766605377197
    2. ' for' → logprob: -1.2831766605377197
    3. 'for' → logprob: -1.4081766605377197
    4. ' edge' → logprob: -2.7831766605377197
    5. 'edges' → logprob: -3.0331766605377197
    6. ' edges' → logprob: -4.033176422119141
    7. 'wall' → logprob: -4.783176422119141
    8. 'positions' → logprob: -5.283176422119141
    9. ' wall' → logprob: -5.908176422119141
    10. 'pos' → logprob: -6.033176422119141

Token 470: ' as' (ID: 472)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.045874860137701035
    2. '=' → logprob: -3.170874834060669
    3. '_set' → logprob: -6.670875072479248
    4. 'set' → logprob: -7.295875072479248
    5. 'as' → logprob: -8.29587459564209
    6. ' as' → logprob: -8.29587459564209
    7. 'with' → logprob: -9.29587459564209
    8. '=set' → logprob: -9.29587459564209
    9. 'for' → logprob: -9.79587459564209
    10. '   ' → logprob: -10.42087459564209

Token 471: ' tuples' (ID: 112464)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1838985681533813
    2. ' tuples' → logprob: -1.5588985681533813
    3. '(u' → logprob: -1.9338985681533813
    4. ' (' → logprob: -2.308898448944092
    5. 'default' → logprob: -2.558898448944092
    6. 'set' → logprob: -2.683898448944092
    7. '(a' → logprob: -3.808898448944092
    8. 'pairs' → logprob: -3.933898448944092
    9. '(default' → logprob: -4.808898448944092
    10. 'sets' → logprob: -4.933898448944092

Token 472: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1506398469209671
    2. '(u' → logprob: -3.650639772415161
    3. '(w' → logprob: -3.775639772415161
    4. '(edges' → logprob: -3.775639772415161
    5. ' of' → logprob: -4.15064001083374
    6. '(' → logprob: -4.40064001083374
    7. '   ' → logprob: -5.02564001083374
    8. ' for' → logprob: -5.40064001083374
    9. '[]' → logprob: -5.77564001083374
    10. '(v' → logprob: -5.77564001083374

Token 473: 'from' (ID: 2845)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.27567487955093384
    2. '(u' → logprob: -2.400674819946289
    3. 'w' → logprob: -3.400674819946289
    4. 'pillar' → logprob: -3.650674819946289
    5. 'v' → logprob: -3.775674819946289
    6. 'a' → logprob: -4.150674819946289
    7. 'start' → logprob: -4.400674819946289
    8. 'from' → logprob: -4.650674819946289
    9. 'neighbor' → logprob: -5.525674819946289
    10. '(w' → logprob: -5.650674819946289

Token 474: ',' (ID: 11)
  Prédit: '_vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vertex' → logprob: -0.2628462612628937
    2. ',' → logprob: -1.7628462314605713
    3. '_node' → logprob: -2.8878462314605713
    4. '_,' → logprob: -6.38784646987915
    5. 'node' → logprob: -7.76284646987915
    6. 'vertex' → logprob: -7.76284646987915
    7. '_v' → logprob: -8.137845993041992
    8. 'v' → logprob: -8.262845993041992
    9. '_vert' → logprob: -8.262845993041992
    10. '_idx' → logprob: -9.012845993041992

Token 475: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.03804447129368782
    2. ' to' → logprob: -3.2880444526672363
    3. ' ' → logprob: -14.038044929504395
    4. ')' → logprob: -14.163044929504395
    5. ',' → logprob: -15.163044929504395
    6. '   ' → logprob: -15.288044929504395
    7. '	to' → logprob: -15.538044929504395
    8. ',to' → logprob: -15.538044929504395
    9. '  ' → logprob: -15.663044929504395
    10. 't' → logprob: -16.038043975830078

Token 476: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037844041362404823
    2. ',' → logprob: -5.6287841796875
    3. '),' → logprob: -8.8787841796875
    4. ')
' → logprob: -11.2537841796875
    5. ',)' → logprob: -11.5037841796875
    6. ').' → logprob: -11.6287841796875
    7. ' )' → logprob: -12.0037841796875
    8. '):' → logprob: -13.7537841796875
    9. ')...' → logprob: -14.3787841796875
    10. '):
' → logprob: -14.5037841796875

Token 477: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5332188010215759
    2. ' for' → logprob: -1.0332188606262207
    3. '   ' → logprob: -3.4082188606262207
    4. '
' → logprob: -3.7832188606262207
    5. ',' → logprob: -8.033218383789062
    6. ')' → logprob: -8.283218383789062
    7. '```' → logprob: -8.658218383789062
    8. '	for' → logprob: -8.908218383789062
    9. ':' → logprob: -9.158218383789062
    10. '    
' → logprob: -9.158218383789062

Token 478: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2256520688533783
    2. ' for' → logprob: -1.6006520986557007
    3. 'edges' → logprob: -9.100651741027832
    4. '   ' → logprob: -9.475651741027832
    5. ')' → logprob: -10.975651741027832
    6. ' edges' → logprob: -11.350651741027832
    7. '	for' → logprob: -12.600651741027832
    8. 'w' → logprob: -12.850651741027832
    9. '#' → logprob: -13.475651741027832
    10. '
' → logprob: -13.475651741027832

Token 479: ' s' (ID: 265)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5403802990913391
    2. 'w' → logprob: -1.0403802394866943
    3. 'i' → logprob: -3.2903802394866943
    4. '(u' → logprob: -4.540380477905273
    5. 'a' → logprob: -4.915380477905273
    6. '(w' → logprob: -5.790380477905273
    7. 'c' → logprob: -6.790380477905273
    8. ' u' → logprob: -7.415380477905273
    9. 'f' → logprob: -7.665380477905273
    10. ' w' → logprob: -7.665380477905273

Token 480: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025023367255926132
    2. ' ,' → logprob: -3.9000234603881836
    3. ' in' → logprob: -6.275023460388184
    4. 't' → logprob: -7.525023460388184
    5. 'in' → logprob: -7.900023460388184
    6. 'i' → logprob: -7.900023460388184
    7. ',i' → logprob: -8.275023460388184
    8. ',w' → logprob: -8.650023460388184
    9. 'e' → logprob: -8.900023460388184
    10. ',e' → logprob: -9.025023460388184

Token 481: ' t' (ID: 260)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03381546959280968
    2. 't' → logprob: -3.533815383911133
    3. 'd' → logprob: -5.533815383911133
    4. ' e' → logprob: -9.283815383911133
    5. ' t' → logprob: -12.283815383911133
    6. 'f' → logprob: -12.783815383911133
    7. 'g' → logprob: -13.408815383911133
    8. '_e' → logprob: -13.908815383911133
    9. ' d' → logprob: -14.033815383911133
    10. '	e' → logprob: -14.158815383911133

Token 482: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0894109308719635
    2. 'in' → logprob: -2.4644110202789307
    3. ',' → logprob: -7.714410781860352
    4. 's' → logprob: -11.589410781860352
    5. ' ' → logprob: -12.714410781860352
    6. '	in' → logprob: -12.714410781860352
    7. ')' → logprob: -12.964410781860352
    8. '   ' → logprob: -13.089410781860352
    9. ' ,' → logprob: -13.464410781860352
    10. 'import' → logprob: -14.214410781860352

Token 483: ' walls' (ID: 20562)
  Prédit: 'walls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'walls' → logprob: -0.0005537479883059859
    2. ' walls' → logprob: -7.625553607940674
    3. 'w' → logprob: -10.000554084777832
    4. 'range' → logprob: -11.500554084777832
    5. 'wall' → logprob: -11.750554084777832
    6. 'wal' → logprob: -14.375554084777832
    7. 'enumer' → logprob: -15.125554084777832
    8. '[(' → logprob: -15.625554084777832
    9. 'edges' → logprob: -15.625554084777832
    10. '(w' → logprob: -15.625554084777832

Token 484: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009256341145373881
    2. ':
' → logprob: -7.000925540924072
    3. '):' → logprob: -12.37592601776123
    4. '   ' → logprob: -12.37592601776123
    5. ' :' → logprob: -13.12592601776123
    6. ':
' → logprob: -13.50092601776123
    7. ',' → logprob: -13.62592601776123
    8. '.append' → logprob: -15.00092601776123
    9. '.' → logprob: -15.75092601776123
    10. '=' → logprob: -16.125925064086914

Token 485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1625155210494995
    2. '   ' → logprob: -1.9125155210494995
    3. ':' → logprob: -6.537515640258789
    4. ',' → logprob: -7.912515640258789
    5. ':
' → logprob: -8.662515640258789
    6. '):
' → logprob: -9.662515640258789
    7. '    ' → logprob: -10.162515640258789
    8. '):' → logprob: -10.162515640258789
    9. ' adj' → logprob: -10.537515640258789
    10. '
' → logprob: -11.037515640258789

Token 486: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.8696267604827881
    2. '   ' → logprob: -1.119626760482788
    3. ' adj' → logprob: -1.369626760482788
    4. '       ' → logprob: -8.244626998901367
    5. 'ad' → logprob: -11.744626998901367
    6. ' adjacency' → logprob: -12.119626998901367
    7. '  ' → logprob: -12.994626998901367
    8. ' ' → logprob: -13.244626998901367
    9. '(adj' → logprob: -13.244626998901367
    10. '    ' → logprob: -13.494626998901367

Token 487: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -14.000001907348633
    3. 's' → logprob: -14.000001907348633
    4. ' [' → logprob: -17.250001907348633
    5. '[t' → logprob: -17.500001907348633
    6. '[S' → logprob: -18.750001907348633
    7. '   ' → logprob: -18.750001907348633
    8. '```' → logprob: -19.125001907348633
    9. '=s' → logprob: -19.750001907348633
    10. '[int' → logprob: -19.875001907348633

Token 488: '-' (ID: 12)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00014072739577386528
    2. '.append' → logprob: -9.500141143798828
    3. '.' → logprob: -9.750141143798828
    4. ' ].' → logprob: -12.500141143798828
    5. ']' → logprob: -12.875141143798828
    6. ').' → logprob: -13.875141143798828
    7. '   ' → logprob: -16.125141143798828
    8. ' ' → logprob: -17.250141143798828
    9. 'append' → logprob: -17.250141143798828
    10. '[' → logprob: -17.375141143798828

Token 489: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '0' → logprob: -15.750005722045898
    4. '2' → logprob: -17.8750057220459
    5. ',' → logprob: -18.0000057220459
    6. '```' → logprob: -18.6875057220459
    7. '１' → logprob: -18.8125057220459
    8. '   ' → logprob: -18.8125057220459
    9. ')' → logprob: -18.8750057220459
    10. '=' → logprob: -19.1875057220459

Token 490: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00015717383939772844
    2. ').' → logprob: -9.750157356262207
    3. '.' → logprob: -10.375157356262207
    4. '.append' → logprob: -10.375157356262207
    5. ']' → logprob: -10.500157356262207
    6. ' ].' → logprob: -11.875157356262207
    7. '   ' → logprob: -13.750157356262207
    8. ',' → logprob: -14.875157356262207
    9. ')].' → logprob: -16.25015640258789
    10. ')' → logprob: -16.62515640258789

Token 491: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. ' append' → logprob: -15.0
    3. '.append' → logprob: -16.25
    4. 'appen' → logprob: -20.75
    5. 'app' → logprob: -21.0
    6. '	append' → logprob: -21.125
    7. '_append' → logprob: -21.75
    8. 'Append' → logprob: -22.0
    9. 'insert' → logprob: -22.75
    10. 'add' → logprob: -23.875

Token 492: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0014247603248804808
    2. 't' → logprob: -7.001424789428711
    3. '((' → logprob: -7.626424789428711
    4. '(' → logprob: -10.626424789428711
    5. ' (' → logprob: -13.626424789428711
    6. ' t' → logprob: -15.126424789428711
    7. '(
' → logprob: -17.37642478942871
    8. '	t' → logprob: -18.12642478942871
    9. '   ' → logprob: -19.37642478942871
    10. '(s' → logprob: -20.25142478942871

Token 493: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00014597235713154078
    2. ' -' → logprob: -8.87514591217041
    3. ')' → logprob: -12.12514591217041
    4. '[' → logprob: -15.00014591217041
    5. '-
' → logprob: -16.625146865844727
    6. '1' → logprob: -16.875146865844727
    7. ')-' → logprob: -17.000146865844727
    8. '<|end|>' → logprob: -17.312646865844727
    9. '-)' → logprob: -17.375146865844727
    10. ' ' → logprob: -17.750146865844727

Token 494: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -11.625009536743164
    3. '2' → logprob: -15.000009536743164
    4. '   ' → logprob: -17.750009536743164
    5. '0' → logprob: -18.875009536743164
    6. '```' → logprob: -19.000009536743164
    7. '１' → logprob: -19.062509536743164
    8. ')' → logprob: -19.500009536743164
    9. '  ' → logprob: -20.187509536743164
    10. '11' → logprob: -20.312509536743164

Token 495: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00041398804751224816
    2. ')
' → logprob: -8.00041389465332
    3. ' )' → logprob: -9.75041389465332
    4. '       ' → logprob: -11.25041389465332
    5. '   ' → logprob: -12.25041389465332
    6. '),' → logprob: -14.62541389465332
    7. ',' → logprob: -15.12541389465332
    8. ')

' → logprob: -15.12541389465332
    9. '<|end|>' → logprob: -15.25041389465332
    10. ')#' → logprob: -15.37541389465332

Token 496: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018115289509296417
    2. '       ' → logprob: -4.143115520477295
    3. ' adj' → logprob: -6.768115520477295
    4. 'adj' → logprob: -7.143115520477295
    5. ' for' → logprob: -9.768115043640137
    6. ' ' → logprob: -10.393115043640137
    7. 'for' → logprob: -11.268115043640137
    8. '  ' → logprob: -11.518115043640137
    9. '    ' → logprob: -11.893115043640137
    10. ',' → logprob: -12.518115043640137

Token 497: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.0015274790348485112
    2. ' adj' → logprob: -6.501527309417725
    3. '   ' → logprob: -11.251527786254883
    4. '       ' → logprob: -11.376527786254883
    5. '(adj' → logprob: -15.501527786254883
    6. '           ' → logprob: -15.876527786254883
    7. 'ad' → logprob: -16.126527786254883
    8. '    ' → logprob: -16.626527786254883
    9. ' ' → logprob: -16.751527786254883
    10. '_adj' → logprob: -17.251527786254883

Token 498: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -5.514650183613412e-05
    2. '[s' → logprob: -10.125055313110352
    3. 't' → logprob: -11.500055313110352
    4. '[' → logprob: -12.500055313110352
    5. '=t' → logprob: -14.750055313110352
    6. '   ' → logprob: -16.00005531311035
    7. ' [' → logprob: -16.62505531311035
    8. '=' → logprob: -16.75005531311035
    9. '[u' → logprob: -16.87505531311035
    10. '[T' → logprob: -17.25005531311035

Token 499: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.664371848164592e-05
    2. ' -' → logprob: -11.500016212463379
    3. '[' → logprob: -12.125016212463379
    4. '<|end|>' → logprob: -14.750016212463379
    5. '[-' → logprob: -15.250016212463379
    6. '<|end|>' → logprob: -15.875016212463379
    7. '.' → logprob: -17.000017166137695
    8. '1' → logprob: -17.250017166137695
    9. '()-' → logprob: -17.500017166137695
    10. 's' → logprob: -17.500017166137695

Token 500: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.061676347395405e-05
    2. ' ' → logprob: -10.25005054473877
    3. 's' → logprob: -12.25005054473877
    4. '<|end|>' → logprob: -12.37505054473877
    5. 'import' → logprob: -13.18755054473877
    6. '```' → logprob: -13.87505054473877
    7. 'user' → logprob: -14.62505054473877
    8. '<|end|>' → logprob: -15.12505054473877
    9. 'for' → logprob: -15.31255054473877
    10. 'from' → logprob: -15.56255054473877

Token 501: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.19902890920639038
    2. '.append' → logprob: -2.324028968811035
    3. ').' → logprob: -2.574028968811035
    4. '.' → logprob: -5.074028968811035
    5. ' .' → logprob: -10.199028968811035
    6. '}.' → logprob: -10.824028968811035
    7. '   ' → logprob: -11.574028968811035
    8. '.add' → logprob: -11.574028968811035
    9. ']' → logprob: -11.824028968811035
    10. '>.' → logprob: -12.324028968811035

Token 502: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. '.append' → logprob: -15.625
    3. 'appen' → logprob: -16.5
    4. 'add' → logprob: -16.875
    5. ' append' → logprob: -17.0
    6. 'adj' → logprob: -18.0
    7. 'app' → logprob: -18.125
    8. '	append' → logprob: -19.125
    9. '```' → logprob: -21.0
    10. 'Append' → logprob: -21.0

Token 503: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.014164566993713379
    2. 's' → logprob: -4.264164447784424
    3. ' s' → logprob: -14.389164924621582
    4. ' (' → logprob: -15.514164924621582
    5. '[s' → logprob: -16.389163970947266
    6. '(' → logprob: -16.514163970947266
    7. '{s' → logprob: -17.014163970947266
    8. '   ' → logprob: -17.764163970947266
    9. '	s' → logprob: -19.014163970947266
    10. '(
' → logprob: -19.014163970947266

Token 504: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.2842308680992573e-05
    2. ' -' → logprob: -10.750022888183594
    3. ')' → logprob: -14.875022888183594
    4. '[' → logprob: -14.875022888183594
    5. '[-' → logprob: -14.875022888183594
    6. '   ' → logprob: -16.750022888183594
    7. ')-' → logprob: -17.125022888183594
    8. '<|end|>' → logprob: -17.750022888183594
    9. '<|end|>' → logprob: -17.750022888183594
    10. '```' → logprob: -17.875022888183594

Token 505: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '```' → logprob: -17.00000762939453
    4. '<|end|>' → logprob: -17.43750762939453
    5. '.' → logprob: -17.62500762939453
    6. '-' → logprob: -18.25000762939453
    7. '0' → logprob: -18.31250762939453
    8. '...' → logprob: -18.37500762939453
    9. '
' → logprob: -18.62500762939453
    10. '   ' → logprob: -18.62500762939453

Token 506: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005189551156945527
    2. ' )' → logprob: -8.000518798828125
    3. '   ' → logprob: -9.000518798828125
    4. ')
' → logprob: -10.375518798828125
    5. '<|end|>' → logprob: -11.125518798828125
    6. '       ' → logprob: -11.750518798828125
    7. '[' → logprob: -13.500518798828125
    8. ',' → logprob: -14.625518798828125
    9. '<|end|>' → logprob: -15.000518798828125
    10. '),' → logprob: -15.000518798828125

Token 507: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23305442929267883
    2. 'for' → logprob: -2.1080543994903564
    3. ' for' → logprob: -2.6080543994903564
    4. '
' → logprob: -4.6080546379089355
    5. '```' → logprob: -6.3580546379089355
    6. '    
' → logprob: -7.7330546379089355
    7. 'import' → logprob: -8.358054161071777
    8. '  
' → logprob: -9.733054161071777
    9. 'def' → logprob: -9.858054161071777
    10. ' ' → logprob: -9.983054161071777

Token 508: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10043525695800781
    2. ' for' → logprob: -2.475435256958008
    3. '   ' → logprob: -4.475435256958008
    4. '#' → logprob: -11.225435256958008
    5. '
' → logprob: -11.475435256958008
    6. ' ' → logprob: -11.975435256958008
    7. '```' → logprob: -12.100435256958008
    8. 'import' → logprob: -12.350435256958008
    9. '    
' → logprob: -13.975435256958008
    10. ' 
' → logprob: -14.350435256958008

Token 509: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00120475422590971
    2. ' for' → logprob: -7.001204967498779
    3. '#' (adapté à ' #') → logprob: -8.251204490661621
    4. 'from' → logprob: -11.626204490661621
    5. 'def' → logprob: -11.751204490661621
    6. '   ' → logprob: -12.126204490661621
    7. 'import' → logprob: -12.501204490661621
    8. '
' → logprob: -13.001204490661621
    9. 'faces' → logprob: -13.376204490661621
    10. 'face' → logprob: -14.251204490661621

Token 510: ' Sort' (ID: 25945)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001438684994354844
    2. ' for' → logprob: -6.626438617706299
    3. '#' → logprob: -10.001439094543457
    4. 'def' → logprob: -10.376439094543457
    5. 'import' → logprob: -11.376439094543457
    6. '   ' → logprob: -11.376439094543457
    7. '
' → logprob: -12.001439094543457
    8. 'from' → logprob: -12.876439094543457
    9. 'For' → logprob: -13.126439094543457
    10. '```' → logprob: -15.001439094543457

Token 511: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.3028406798839569
    2. 'each' → logprob: -2.4278407096862793
    3. ' each' → logprob: -2.6778407096862793
    4. ' adj' → logprob: -2.9278407096862793
    5. '(adj' → logprob: -3.3028407096862793
    6. 'for' → logprob: -5.052840709686279
    7. ' for' → logprob: -6.802840709686279
    8. 'the' → logprob: -6.927840709686279
    9. ' the' → logprob: -7.177840709686279
    10. 's' → logprob: -7.177840709686279

Token 512: ' according' (ID: 7065)
  Prédit: 'lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lists' → logprob: -0.10567186772823334
    2. ' lists' → logprob: -2.8556718826293945
    3. 'for' → logprob: -3.6056718826293945
    4. 'list' → logprob: -4.7306718826293945
    5. 's' → logprob: -5.7306718826293945
    6. '[i' → logprob: -6.4806718826293945
    7. '[s' → logprob: -6.8556718826293945
    8. '[u' → logprob: -8.355671882629395
    9. '_lists' → logprob: -8.480671882629395
    10. ' for' → logprob: -8.605671882629395

Token 513: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5765249133110046
    2. ' to' → logprob: -0.8265249133110046
    3. '<|end|>' → logprob: -9.32652473449707
    4. 'for' → logprob: -9.45152473449707
    5. 's' → logprob: -9.57652473449707
    6. ')' → logprob: -9.70152473449707
    7. '=lambda' → logprob: -9.70152473449707
    8. '[' → logprob: -9.82652473449707
    9. '_to' → logprob: -10.82652473449707
    10. '=' → logprob: -11.32652473449707

Token 514: ' angle' (ID: 16538)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.05140888690948486
    2. 'math' → logprob: -3.0514087677001953
    3. ' lambda' → logprob: -7.176408767700195
    4. 'def' → logprob: -7.801408767700195
    5. 'y' → logprob: -7.926408767700195
    6. '(lambda' → logprob: -8.051408767700195
    7. '=lambda' → logprob: -8.176408767700195
    8. 'angle' → logprob: -8.426408767700195
    9. 'the' → logprob: -9.301408767700195
    10. 'cmath' → logprob: -9.301408767700195

Token 515: ' to' (ID: 316)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6945950388908386
    2. '   ' → logprob: -0.9445950388908386
    3. 'for' → logprob: -2.4445950984954834
    4. ' at' → logprob: -4.819594860076904
    5. 'from' → logprob: -5.069594860076904
    6. ' from' → logprob: -5.194594860076904
    7. ' around' → logprob: -6.069594860076904
    8. 's' → logprob: -6.569594860076904
    9. 'def' → logprob: -8.194595336914062
    10. ',' → logprob: -8.569595336914062

Token 516: ' vertex' (ID: 25363)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8693417906761169
    2. 'the' → logprob: -1.8693418502807617
    3. 'pillar' → logprob: -2.1193418502807617
    4. 'p' → logprob: -3.4943418502807617
    5. 'pill' → logprob: -3.4943418502807617
    6. 'each' → logprob: -3.4943418502807617
    7. '(' → logprob: -3.6193418502807617
    8. 'points' → logprob: -4.119341850280762
    9. 'adj' → logprob: -4.119341850280762
    10. 'vertices' → logprob: -4.244341850280762

Token 517: '
' (ID: 198)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.9096455574035645
    2. 's' → logprob: -2.0346455574035645
    3. '[i' → logprob: -2.0346455574035645
    4. '   ' → logprob: -2.5346455574035645
    5. ' from' → logprob: -2.5346455574035645
    6. ',' → logprob: -2.5346455574035645
    7. '[v' → logprob: -2.5346455574035645
    8. 'v' → logprob: -2.9096455574035645
    9. 'from' → logprob: -3.0346455574035645
    10. ' for' → logprob: -3.2846455574035645

Token 518: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6353915929794312
    2. ' for' → logprob: -1.8853915929794312
    3. ' from' → logprob: -2.6353917121887207
    4. 'from' → logprob: -2.6353917121887207
    5. 'for' → logprob: -3.2603917121887207
    6. '[u' → logprob: -3.5103917121887207
    7. '[v' → logprob: -3.6353917121887207
    8. ' at' → logprob: -4.010391712188721
    9. 's' → logprob: -4.510391712188721
    10. ',' → logprob: -4.635391712188721

Token 519: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10148108005523682
    2. ' for' → logprob: -2.9764809608459473
    3. '   ' → logprob: -3.2264809608459473
    4. 'center' → logprob: -5.351480960845947
    5. 'import' → logprob: -7.351480960845947
    6. 'def' (adapté à ' def') → logprob: -9.351481437683105
    7. 'from' → logprob: -9.351481437683105
    8. 'cx' → logprob: -9.476481437683105
    9. ' center' → logprob: -9.851481437683105
    10. 'origin' → logprob: -10.601481437683105

Token 520: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.3139513432979584
    2. ' angle' → logprob: -1.3139513731002808
    3. '_angle' → logprob: -7.68895149230957
    4. ' get' → logprob: -8.93895149230957
    5. 'get' → logprob: -9.93895149230957
    6. ' ang' → logprob: -11.06395149230957
    7. 'atan' → logprob: -11.81395149230957
    8. 'sort' → logprob: -12.06395149230957
    9. 'ang' → logprob: -12.31395149230957
    10. 'polar' → logprob: -12.81395149230957

Token 521: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4218592643737793
    2. '(u' → logprob: -1.5468592643737793
    3. '(p' → logprob: -1.7968592643737793
    4. '(v' → logprob: -1.9218592643737793
    5. '(a' → logprob: -2.4218592643737793
    6. '(origin' → logprob: -3.1718592643737793
    7. '(from' → logprob: -3.6718592643737793
    8. '(i' → logprob: -4.296859264373779
    9. '(vertex' → logprob: -4.296859264373779
    10. '(center' → logprob: -4.796859264373779

Token 522: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003842232981696725
    2. '):' → logprob: -5.878842353820801
    3. ' ,' → logprob: -7.878842353820801
    4. '):
' → logprob: -8.5038423538208
    5. '   ' → logprob: -9.0038423538208
    6. ',v' → logprob: -10.0038423538208
    7. 'a' → logprob: -10.1288423538208
    8. '(vertex' → logprob: -10.1288423538208
    9. '(i' → logprob: -11.0038423538208
    10. ',p' → logprob: -11.1288423538208

Token 523: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.011798794381320477
    2. 'v' → logprob: -5.011798858642578
    3. ' j' → logprob: -6.386798858642578
    4. 'p' → logprob: -6.636798858642578
    5. 'to' → logprob: -7.261798858642578
    6. 'neighbor' → logprob: -7.886798858642578
    7. 'x' → logprob: -8.011798858642578
    8. '   ' → logprob: -8.011798858642578
    9. 'vj' → logprob: -10.261798858642578
    10. 'jx' → logprob: -10.636798858642578

Token 524: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20214228332042694
    2. '):
' → logprob: -1.7021422386169434
    3. ',' → logprob: -7.952142238616943
    4. '):
' → logprob: -8.202142715454102
    5. ' ):' → logprob: -9.952142715454102
    6. '   ' → logprob: -10.452142715454102
    7. ' ):
' → logprob: -11.452142715454102
    8. '):

' → logprob: -12.077142715454102
    9. ')' → logprob: -12.577142715454102
    10. ':' → logprob: -12.952142715454102

Token 525: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0749891921877861
    2. ':' → logprob: -3.199989080429077
    3. '   ' → logprob: -3.574989080429077
    4. '):' → logprob: -6.199989318847656
    5. ',' → logprob: -8.074989318847656
    6. ' :' → logprob: -8.449989318847656
    7. '    ' → logprob: -9.074989318847656
    8. '):
' → logprob: -9.199989318847656
    9. '{' → logprob: -9.324989318847656
    10. ':
' → logprob: -9.324989318847656

Token 526: ' x' (ID: 1215)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.4962798058986664
    2. 'x' (adapté à ' x') → logprob: -1.8712798357009888
    3. 'import' → logprob: -2.371279716491699
    4. '       ' → logprob: -2.371279716491699
    5. ' dx' → logprob: -3.621279716491699
    6. '           ' → logprob: -4.996279716491699
    7. 'vx' → logprob: -5.621279716491699
    8. 'from' → logprob: -5.871279716491699
    9. ' x' → logprob: -5.996279716491699
    10. '   ' → logprob: -6.121279716491699

Token 527: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1170461177825928
    2. 'j' → logprob: -1.1170461177825928
    3. '=' → logprob: -1.8670461177825928
    4. ' =' → logprob: -2.7420461177825928
    5. ',' → logprob: -3.2420461177825928
    6. '_j' → logprob: -3.4920461177825928
    7. '2' → logprob: -3.8670461177825928
    8. 'y' → logprob: -4.367046356201172
    9. '0' → logprob: -4.617046356201172
    10. ',y' → logprob: -5.242046356201172

Token 528: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27806514501571655
    2. '=' → logprob: -2.0280652046203613
    3. ' =' → logprob: -2.2780652046203613
    4. ',y' → logprob: -5.278065204620361
    5. 'y' → logprob: -6.528065204620361
    6. '   ' → logprob: -7.278065204620361
    7. '1' → logprob: -7.653065204620361
    8. '0' → logprob: -7.778065204620361
    9. 'p' → logprob: -9.528064727783203
    10. '_,' → logprob: -9.653064727783203

Token 529: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0067536174319684505
    2. ' y' → logprob: -5.006753444671631
    3. '   ' → logprob: -11.131753921508789
    4. 'pill' → logprob: -11.631753921508789
    5. '       ' → logprob: -12.256753921508789
    6. '	y' → logprob: -12.881753921508789
    7. 'yj' → logprob: -12.881753921508789
    8. 'yp' → logprob: -14.381753921508789
    9. '           ' → logprob: -14.756753921508789
    10. '    ' → logprob: -14.881753921508789

Token 530: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16617409884929657
    2. ' =' → logprob: -2.0411741733551025
    3. '1' → logprob: -3.7911741733551025
    4. '=i' → logprob: -8.291173934936523
    5. '0' → logprob: -9.166173934936523
    6. 'i' → logprob: -9.291173934936523
    7. '=C' → logprob: -9.541173934936523
    8. '   ' → logprob: -9.916173934936523
    9. 'a' → logprob: -11.541173934936523
    10. '_i' → logprob: -11.666173934936523

Token 531: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11284977197647095
    2. ' =' → logprob: -2.237849712371826
    3. '   ' → logprob: -11.112850189208984
    4. ')' → logprob: -12.862850189208984
    5. ',' → logprob: -12.862850189208984
    6. ')=' → logprob: -12.987850189208984
    7. '    ' → logprob: -13.987850189208984
    8. '=C' → logprob: -14.237850189208984
    9. ' ' → logprob: -14.487850189208984
    10. '=
' → logprob: -14.862850189208984

Token 532: ' pillars' (ID: 105506)
  Prédit: 'pill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pill' → logprob: -0.0002453662164043635
    2. ' pillars' → logprob: -9.125245094299316
    3. 'pillar' → logprob: -9.125245094299316
    4. 'pil' → logprob: -10.750245094299316
    5. '   ' → logprob: -13.000245094299316
    6. 'C' → logprob: -13.750245094299316
    7. '-pill' → logprob: -14.125245094299316
    8. 'p' → logprob: -15.000245094299316
    9. 'pit' → logprob: -15.625245094299316
    10. 'pi' → logprob: -15.750245094299316

Token 533: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.368984107510187e-05
    2. '[j' → logprob: -11.125033378601074
    3. '[' → logprob: -11.625033378601074
    4. 'i' → logprob: -12.000033378601074
    5. '   ' → logprob: -13.750033378601074
    6. '       ' → logprob: -14.125033378601074
    7. ',i' → logprob: -14.250033378601074
    8. 's' → logprob: -15.250033378601074
    9. ' [' → logprob: -15.750033378601074
    10. ',' → logprob: -15.875033378601074

Token 534: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.008663851767778397
    2. ']' → logprob: -4.758663654327393
    3. ']
' → logprob: -10.50866413116455
    4. '       ' → logprob: -11.63366413116455
    5. '   ' → logprob: -11.75866413116455
    6. ' ]
' → logprob: -13.13366413116455
    7. '];' → logprob: -13.50866413116455
    8. ']

' → logprob: -14.25866413116455
    9. '],' → logprob: -14.63366413116455
    10. ')
' → logprob: -15.38366413116455

Token 535: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019775478169322014
    2. '
' → logprob: -4.769775390625
    3. '   ' → logprob: -5.519775390625
    4. ',' → logprob: -6.144775390625
    5. '-' → logprob: -6.144775390625
    6. ' -' → logprob: -6.269775390625
    7. '<|end|>' → logprob: -8.519775390625
    8. 'import' → logprob: -9.644775390625
    9. '           ' → logprob: -9.644775390625
    10. ',
' → logprob: -9.894775390625

Token 536: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0026175130624324083
    2. '       ' → logprob: -6.377617359161377
    3. ' x' → logprob: -7.002617359161377
    4. '	x' → logprob: -13.002617835998535
    5. '   ' → logprob: -13.127617835998535
    6. 'y' → logprob: -14.127617835998535
    7. 'import' → logprob: -15.877617835998535
    8. ' ' → logprob: -16.87761688232422
    9. '_x' → logprob: -17.37761688232422
    10. '      ' → logprob: -17.87761688232422

Token 537: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47965431213378906
    2. '0' → logprob: -1.354654312133789
    3. ',' → logprob: -2.354654312133789
    4. '2' → logprob: -3.854654312133789
    5. 'j' → logprob: -5.104654312133789
    6. ' =' → logprob: -8.354654312133789
    7. ',j' → logprob: -8.354654312133789
    8. '=' → logprob: -9.354654312133789
    9. '_j' → logprob: -9.854654312133789
    10. '_,' → logprob: -10.354654312133789

Token 538: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007603150443173945
    2. ',y' → logprob: -7.875760078430176
    3. ' ,' → logprob: -8.750760078430176
    4. '=' → logprob: -9.375760078430176
    5. ',j' → logprob: -10.000760078430176
    6. ' =' → logprob: -10.750760078430176
    7. '<|end|>' → logprob: -11.000760078430176
    8. ',x' → logprob: -11.500760078430176
    9. '[' → logprob: -12.000760078430176
    10. '0' → logprob: -12.125760078430176

Token 539: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.34864214062690735
    2. 'y' → logprob: -1.223642110824585
    3. ' pillars' → logprob: -9.223642349243164
    4. 'pill' → logprob: -9.598642349243164
    5. '	y' → logprob: -11.848642349243164
    6. '   ' → logprob: -12.223642349243164
    7. '    ' → logprob: -12.723642349243164
    8. ' ' → logprob: -13.098642349243164
    9. ' ' → logprob: -13.098642349243164
    10. ',y' → logprob: -13.598642349243164

Token 540: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3347513973712921
    2. 'j' → logprob: -1.3347513675689697
    3. '1' → logprob: -4.209751605987549
    4. ' j' → logprob: -5.209751605987549
    5. '[j' → logprob: -8.20975112915039
    6. ' ' → logprob: -8.70975112915039
    7. ',' → logprob: -8.95975112915039
    8. '0' → logprob: -9.58475112915039
    9. '   ' → logprob: -9.58475112915039
    10. ',j' → logprob: -9.95975112915039

Token 541: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28174924850463867
    2. ' =' → logprob: -1.4067492485046387
    3. '       ' → logprob: -8.281749725341797
    4. '   ' → logprob: -8.406749725341797
    5. ')' → logprob: -10.156749725341797
    6. ' ' → logprob: -10.531749725341797
    7. '    ' → logprob: -10.781749725341797
    8. 'import' → logprob: -12.156749725341797
    9. '=
' → logprob: -12.156749725341797
    10. '  ' → logprob: -12.656749725341797

Token 542: ' pillars' (ID: 105506)
  Prédit: 'pill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pill' → logprob: -0.4748849868774414
    2. ' pillars' → logprob: -0.9748849868774414
    3. 'pillar' → logprob: -7.349884986877441
    4. 'pil' → logprob: -9.099884986877441
    5. ' pillar' → logprob: -11.224884986877441
    6. 'p' → logprob: -11.224884986877441
    7. ' pilares' → logprob: -11.599884986877441
    8. 'pi' → logprob: -12.349884986877441
    9. '-pill' → logprob: -13.349884986877441
    10. 'pit' → logprob: -13.849884986877441

Token 543: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0015449762577190995
    2. '       ' → logprob: -7.251544952392578
    3. 'j' → logprob: -8.501544952392578
    4. '[' → logprob: -8.626544952392578
    5. '[i' → logprob: -8.876544952392578
    6. '           ' → logprob: -9.001544952392578
    7. '[s' → logprob: -10.126544952392578
    8. '   ' → logprob: -10.251544952392578
    9. '
' → logprob: -11.001544952392578
    10. '[t' → logprob: -11.126544952392578

Token 544: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.762840211391449
    2. ')' → logprob: -1.3878402709960938
    3. ']
' → logprob: -1.7628402709960938
    4. '       ' → logprob: -3.0128402709960938
    5. ')
' → logprob: -3.0128402709960938
    6. '   ' → logprob: -4.762840270996094
    7. '])' → logprob: -5.762840270996094
    8. '])
' → logprob: -7.387840270996094
    9. ')]' → logprob: -8.262840270996094
    10. '
' → logprob: -8.637840270996094

Token 545: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014910540776327252
    2. 'import' → logprob: -7.501491069793701
    3. '   ' → logprob: -7.626491069793701
    4. ' return' → logprob: -8.251490592956543
    5. 'return' → logprob: -8.876490592956543
    6. '
' → logprob: -11.001490592956543
    7. '	' → logprob: -12.001490592956543
    8. '           ' → logprob: -12.251490592956543
    9. '	   ' → logprob: -12.251490592956543
    10. '	return' → logprob: -12.626490592956543

Token 546: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7736263275146484
    2. 'return' (adapté à ' return') → logprob: -1.2736263275146484
    3. 'import' → logprob: -1.3986263275146484
    4. ' return' → logprob: -4.523626327514648
    5. 'from' → logprob: -7.398626327514648
    6. ' import' → logprob: -7.898626327514648
    7. 'dx' → logprob: -10.773626327514648
    8. ' from' → logprob: -11.023626327514648
    9. '	return' → logprob: -11.273626327514648
    10. '```' → logprob: -12.398626327514648

Token 547: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.015071362257003784
    2. ' math' → logprob: -4.265071392059326
    3. '(math' → logprob: -7.015071392059326
    4. '-m' → logprob: -12.015070915222168
    5. ' (' → logprob: -13.640070915222168
    6. ' -' → logprob: -14.265070915222168
    7. '-' → logprob: -14.390070915222168
    8. '(' → logprob: -15.265070915222168
    9. '.math' → logprob: -15.640070915222168
    10. '(-' → logprob: -16.265071868896484

Token 548: '.atan' (ID: 157113)
  Prédit: '.atan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.atan' → logprob: -1.4974866644479334e-05
    2. '.' → logprob: -11.125015258789062
    3. '.ac' → logprob: -16.250015258789062
    4. ' .' → logprob: -17.625015258789062
    5. '.at' → logprob: -17.875015258789062
    6. '.pi' → logprob: -17.875015258789062
    7. '```' → logprob: -18.125015258789062
    8. '.de' → logprob: -18.375015258789062
    9. 'atan' → logprob: -18.500015258789062
    10. '
' → logprob: -19.250015258789062

Token 549: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '２' → logprob: -20.75
    4. '22' → logprob: -21.25
    5. '3' → logprob: -21.875
    6. '{' → logprob: -22.375
    7. '۲' → logprob: -22.5
    8. '₂' → logprob: -22.625
    9. '((' → logprob: -23.25
    10. '
' → logprob: -23.25

Token 550: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -2.939851037808694e-05
    2. 'y' → logprob: -11.250029563903809
    3. '((' → logprob: -11.375029563903809
    4. '(' → logprob: -12.375029563903809
    5. '(
' → logprob: -14.375029563903809
    6. '(-(' → logprob: -17.000028610229492
    7. ' (' → logprob: -17.500028610229492
    8. '   ' → logprob: -20.125028610229492
    9. '[(' → logprob: -20.375028610229492
    10. '	y' → logprob: -20.375028610229492

Token 551: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4498052223643754e-05
    2. '[' → logprob: -11.875014305114746
    3. '[y' → logprob: -13.000014305114746
    4. '[j' → logprob: -13.500014305114746
    5. '
' → logprob: -13.875014305114746
    6. ' ' → logprob: -14.500014305114746
    7. '[p' → logprob: -15.375014305114746
    8. '

' → logprob: -15.625014305114746
    9. '[x' → logprob: -15.625014305114746
    10. '```' → logprob: -15.625014305114746

Token 552: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4742431640625
    2. '-' → logprob: -0.9742431640625
    3. '-y' → logprob: -8.7242431640625
    4. 'y' → logprob: -12.9742431640625
    5. ' ' → logprob: -15.2242431640625
    6. '(y' → logprob: -15.4742431640625
    7. '[' → logprob: -15.8492431640625
    8. ',' → logprob: -15.9742431640625
    9. '-x' → logprob: -16.3492431640625
    10. '   ' → logprob: -16.3492431640625

Token 553: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.007608278188854456
    2. ' y' → logprob: -4.882608413696289
    3. '	y' → logprob: -14.132608413696289
    4. '   ' → logprob: -14.507608413696289
    5. '       ' → logprob: -14.757608413696289
    6. ' ' → logprob: -15.632608413696289
    7. ',' → logprob: -16.00760841369629
    8. ')y' → logprob: -16.88260841369629
    9. ')' → logprob: -17.00760841369629
    10. 'x' → logprob: -17.00760841369629

Token 554: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '[y' → logprob: -17.125
    3. '[' → logprob: -17.25
    4. '[i' → logprob: -18.375
    5. ')' → logprob: -19.125
    6. ' y' → logprob: -19.1875
    7. 'y' → logprob: -19.3125
    8. ',' → logprob: -19.875
    9. ' ' → logprob: -20.0
    10. '_' → logprob: -20.1875

Token 555: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008633419638499618
    2. ',x' → logprob: -7.125863552093506
    3. ' ,' → logprob: -9.750863075256348
    4. ',
' → logprob: -15.000863075256348
    5. ',j' → logprob: -16.125864028930664
    6. ',y' → logprob: -16.250864028930664
    7. '   ' → logprob: -17.000864028930664
    8. 'x' → logprob: -17.250864028930664
    9. ',i' → logprob: -17.875864028930664
    10. ',index' → logprob: -18.500864028930664

Token 556: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00861468818038702
    2. ' x' → logprob: -4.758614540100098
    3. '	x' → logprob: -16.133615493774414
    4. '(x' → logprob: -17.883615493774414
    5. '   ' → logprob: -18.383615493774414
    6. ')x' → logprob: -19.758615493774414
    7. '"x' → logprob: -20.258615493774414
    8. '    ' → logprob: -21.133615493774414
    9. ' ' → logprob: -21.383615493774414
    10. '$x' → logprob: -21.508615493774414

Token 557: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '[' → logprob: -20.75
    3. '۲' → logprob: -21.875
    4. '1' → logprob: -22.0
    5. ' ' → logprob: -22.0
    6. '```' → logprob: -22.5
    7. ')' → logprob: -23.125
    8. '২' → logprob: -23.1875
    9. '
' → logprob: -23.1875
    10. '₂' → logprob: -24.0625

Token 558: ' -' (ID: 533)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0031327977776527405
    2. '[' → logprob: -6.0031328201293945
    3. '1' → logprob: -7.6281328201293945
    4. 'x' → logprob: -9.128132820129395
    5. ' x' → logprob: -11.003132820129395
    6. ' ' → logprob: -11.253132820129395
    7. '[x' → logprob: -11.753132820129395
    8. ',' → logprob: -11.878132820129395
    9. ')' → logprob: -12.128132820129395
    10. '[
' → logprob: -12.753132820129395

Token 559: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.049886733293533325
    2. '(x' → logprob: -3.049886703491211
    3. ' x' → logprob: -6.924886703491211
    4. ' (' → logprob: -8.174886703491211
    5. '(' → logprob: -10.424886703491211
    6. ')' → logprob: -13.924886703491211
    7. '	x' → logprob: -14.049886703491211
    8. '[x' → logprob: -14.424886703491211
    9. '{x' → logprob: -14.799886703491211
    10. ')x' → logprob: -14.924886703491211

Token 560: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.021997634321451187
    2. '2' → logprob: -4.021997451782227
    3. '[i' → logprob: -5.896997451782227
    4. ')' → logprob: -6.896997451782227
    5. '[' → logprob: -10.021997451782227
    6. 'i' → logprob: -11.646997451782227
    7. '(i' → logprob: -12.271997451782227
    8. ')**' → logprob: -12.646997451782227
    9. ')i' → logprob: -12.771997451782227
    10. '```' → logprob: -12.896997451782227

Token 561: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012415809032972902
    2. '   ' → logprob: -9.250123977661133
    3. ' )' → logprob: -10.625123977661133
    4. ')
' → logprob: -12.625123977661133
    5. '       ' → logprob: -15.750123977661133
    6. '))' → logprob: -16.125123977661133
    7. ')

' → logprob: -17.375123977661133
    8. ' ' → logprob: -17.500123977661133
    9. ')#' → logprob: -17.750123977661133
    10. ')return' → logprob: -17.875123977661133

Token 562: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038149937987327576
    2. ' for' → logprob: -4.163149833679199
    3. 'for' → logprob: -4.413149833679199
    4. '<|end|>' → logprob: -5.788149833679199
    5. ')' → logprob: -6.288149833679199
    6. '
' → logprob: -6.413149833679199
    7. '    
' → logprob: -6.913149833679199
    8. '```' → logprob: -7.038149833679199
    9. '.' → logprob: -7.788149833679199
    10. '<|end|>' → logprob: -9.2881498336792

Token 563: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3887549936771393
    2. 'for' (adapté à ' for') → logprob: -1.513754963874817
    3. ' for' → logprob: -2.5137550830841064
    4. '
' → logprob: -3.8887550830841064
    5. '    
' → logprob: -7.888754844665527
    6. ' 
' → logprob: -10.138754844665527
    7. ')' → logprob: -10.138754844665527
    8. '       ' → logprob: -10.763754844665527
    9. '

' → logprob: -10.888754844665527
    10. '```' → logprob: -11.013754844665527

Token 564: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03141436725854874
    2. 'u' → logprob: -4.03141450881958
    3. 'v' → logprob: -5.03141450881958
    4. ' i' → logprob: -5.03141450881958
    5. ' u' → logprob: -9.406414031982422
    6. ' v' → logprob: -10.281414031982422
    7. 'idx' → logprob: -14.531414031982422
    8. 's' → logprob: -15.656414031982422
    9. '_i' → logprob: -15.906414031982422
    10. '```' → logprob: -16.281414031982422

Token 565: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007668267469853163
    2. 'in' → logprob: -4.882668495178223
    3. ',' → logprob: -9.882668495178223
    4. ' ' → logprob: -11.757668495178223
    5. '	in' → logprob: -14.382668495178223
    6. 'import' → logprob: -14.507668495178223
    7. '   ' → logprob: -14.507668495178223
    8. ' ,' → logprob: -15.132668495178223
    9. '_in' → logprob: -15.257668495178223
    10. '_' → logprob: -15.257668495178223

Token 566: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002613358374219388
    2. ' range' → logprob: -8.250261306762695
    3. '(range' → logprob: -18.250261306762695
    4. '	range' → logprob: -19.875261306762695
    5. '   ' → logprob: -20.000261306762695
    6. 'rang' → logprob: -20.125261306762695
    7. ' ' → logprob: -20.375261306762695
    8. '```' → logprob: -20.500261306762695
    9. '
' → logprob: -20.750261306762695
    10. 'r' → logprob: -20.750261306762695

Token 567: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.12696443498134613
    2. 'C' → logprob: -2.1269643306732178
    3. ' C' → logprob: -11.001964569091797
    4. '(' → logprob: -11.876964569091797
    5. '   ' → logprob: -12.126964569091797
    6. '	C' → logprob: -13.001964569091797
    7. 'len' → logprob: -13.501964569091797
    8. '(len' → logprob: -13.501964569091797
    9. '(
' → logprob: -13.626964569091797
    10. '
' → logprob: -14.751964569091797

Token 568: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47449955344200134
    2. '):
' → logprob: -0.9744995832443237
    3. '):
' → logprob: -7.974499702453613
    4. '   ' → logprob: -10.224499702453613
    5. ' ):' → logprob: -10.849499702453613
    6. ' ):
' → logprob: -11.474499702453613
    7. ')' → logprob: -12.599499702453613
    8. ':' → logprob: -12.599499702453613
    9. '):

' → logprob: -13.599499702453613
    10. ',' → logprob: -13.849499702453613

Token 569: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035717925056815147
    2. '       ' → logprob: -5.7535719871521
    3. ' adj' → logprob: -8.003571510314941
    4. 'adj' → logprob: -9.753571510314941
    5. '   ' → logprob: -14.628571510314941
    6. '    
' → logprob: -15.503571510314941
    7. 'ad' → logprob: -15.628571510314941
    8. '```' → logprob: -15.753571510314941
    9. '    ' → logprob: -15.878571510314941
    10. '(adj' → logprob: -15.878571510314941

Token 570: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -3.4121114822482923e-06
    2. '   ' → logprob: -12.750003814697266
    3. ' adj' → logprob: -14.750003814697266
    4. '       ' → logprob: -20.250003814697266
    5. 'adm' → logprob: -22.875003814697266
    6. '(adj' → logprob: -23.125003814697266
    7. ' ' → logprob: -23.375003814697266
    8. 'Adj' → logprob: -23.500003814697266
    9. '_adj' → logprob: -23.750003814697266
    10. '  ' → logprob: -23.875003814697266

Token 571: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.75
    3. '[I' → logprob: -17.375
    4. 'i' → logprob: -17.75
    5. '
' → logprob: -18.25
    6. ' [' → logprob: -18.625
    7. 's' → logprob: -18.625
    8. '[s' → logprob: -19.375
    9. '[
' → logprob: -19.75
    10. '```' → logprob: -20.125

Token 572: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00024132427643053234
    2. '.sort' → logprob: -9.25024127960205
    3. ']' → logprob: -9.50024127960205
    4. ').' → logprob: -10.25024127960205
    5. ']=' → logprob: -11.00024127960205
    6. '.' → logprob: -11.12524127960205
    7. ' ].' → logprob: -13.12524127960205
    8. 'sort' → logprob: -14.00024127960205
    9. '=' → logprob: -15.25024127960205
    10. ')].' → logprob: -16.250242233276367

Token 573: 'sort' (ID: 13373)
  Prédit: 'sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -3.292907877039397e-06
    2. ' sort' → logprob: -12.87500286102295
    3. '.sort' → logprob: -14.25000286102295
    4. '	sort' → logprob: -19.250003814697266
    5. '=' → logprob: -20.000003814697266
    6. '   ' → logprob: -20.250003814697266
    7. ' ' → logprob: -20.875003814697266
    8. '(sort' → logprob: -21.125003814697266
    9. 's' → logprob: -21.250003814697266
    10. '...' → logprob: -21.500003814697266

Token 574: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -2.4034345187828876e-05
    2. 'key' → logprob: -10.75002384185791
    3. '()' → logprob: -13.87502384185791
    4. '(' → logprob: -14.12502384185791
    5. '(reverse' → logprob: -14.37502384185791
    6. '(
' → logprob: -16.125024795532227
    7. ' key' → logprob: -16.250024795532227
    8. ',key' → logprob: -17.250024795532227
    9. '	key' → logprob: -18.125024795532227
    10. '[key' → logprob: -18.375024795532227

Token 575: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.251953661441803
    2. '=' → logprob: -1.5019536018371582
    3. ' =' → logprob: -10.876954078674316
    4. '(lambda' → logprob: -12.751954078674316
    5. '=
' → logprob: -13.876954078674316
    6. 'lambda' → logprob: -13.876954078674316
    7. ' lambda' → logprob: -15.251954078674316
    8. '=function' → logprob: -16.126953125
    9. '=

' → logprob: -16.501953125
    10. '=}' → logprob: -16.501953125

Token 576: ' x' (ID: 1215)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.005282730795443058
    2. ' j' → logprob: -5.255282878875732
    3. 'x' → logprob: -10.005282402038574
    4. '   ' → logprob: -13.005282402038574
    5. '	j' → logprob: -14.130282402038574
    6. ' x' → logprob: -15.005282402038574
    7. '(j' → logprob: -16.25528335571289
    8. 'k' → logprob: -16.75528335571289
    9. ':j' → logprob: -16.75528335571289
    10. 'v' → logprob: -16.88028335571289

Token 577: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.541112427134067e-05
    2. ' :' → logprob: -9.500075340270996
    3. '=' → logprob: -15.500075340270996
    4. 'angle' → logprob: -15.875075340270996
    5. ':(' → logprob: -17.000076293945312
    6. ':
' → logprob: -17.500076293945312
    7. ':x' → logprob: -18.125076293945312
    8. ':return' → logprob: -18.625076293945312
    9. ',' → logprob: -18.750076293945312
    10. '   ' → logprob: -19.000076293945312

Token 578: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -9.543733904138207e-05
    2. ' angle' → logprob: -9.37509536743164
    3. '(angle' → logprob: -12.12509536743164
    4. 'math' → logprob: -12.62509536743164
    5. 'lambda' → logprob: -13.87509536743164
    6. '   ' → logprob: -14.87509536743164
    7. '.angle' → logprob: -16.62509536743164
    8. ' ' → logprob: -16.87509536743164
    9. ')' → logprob: -17.00009536743164
    10. 'x' → logprob: -17.50009536743164

Token 579: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -7.703443770878948e-06
    2. '(' → logprob: -11.875007629394531
    3. ' (' → logprob: -14.375007629394531
    4. '(
' → logprob: -16.75000762939453
    5. '((' → logprob: -18.00000762939453
    6. ')' → logprob: -18.25000762939453
    7. '(ii' → logprob: -18.37500762939453
    8. ')(' → logprob: -18.75000762939453
    9. ',i' → logprob: -19.00000762939453
    10. '
' → logprob: -19.62500762939453

Token 580: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004811253864318132
    2. ',x' → logprob: -5.3798112869262695
    3. ',i' → logprob: -8.75481128692627
    4. ' ,' → logprob: -10.37981128692627
    5. 'x' → logprob: -14.12981128692627
    6. ',
' → logprob: -14.62981128692627
    7. 'i' → logprob: -15.37981128692627
    8. ' x' → logprob: -15.50481128692627
    9. '(x' → logprob: -15.87981128692627
    10. ')' → logprob: -16.129810333251953

Token 581: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.627176768844947e-05
    2. ' x' → logprob: -9.250096321105957
    3. ')' → logprob: -17.00009536743164
    4. ')x' → logprob: -17.50009536743164
    5. 'i' → logprob: -18.00009536743164
    6. '	x' → logprob: -19.00009536743164
    7. '   ' → logprob: -19.12509536743164
    8. '(x' → logprob: -19.50009536743164
    9. ' ' → logprob: -19.50009536743164
    10. '
' → logprob: -20.12509536743164

Token 582: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.000649529043585062
    2. ')' → logprob: -8.000649452209473
    3. ')))' → logprob: -8.125649452209473
    4. '),' → logprob: -11.625649452209473
    5. ' ))' → logprob: -12.500649452209473
    6. '))
' → logprob: -13.375649452209473
    7. ')),' → logprob: -13.500649452209473
    8. ')+' → logprob: -14.125649452209473
    9. '))+' → logprob: -15.250649452209473
    10. '))))' → logprob: -15.375649452209473

Token 583: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2883688807487488
    2. '<|end|>' → logprob: -1.9133689403533936
    3. '
' → logprob: -3.2883689403533936
    4. ' for' → logprob: -4.2883687019348145
    5. 'def' → logprob: -4.4133687019348145
    6. '```' → logprob: -4.5383687019348145
    7. ' faces' → logprob: -5.1633687019348145
    8. ')' → logprob: -5.4133687019348145
    9. ' next' → logprob: -5.6633687019348145
    10. ':' → logprob: -5.9133687019348145

Token 584: '   ' (ID: 271)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.03387009724974632
    2. '   ' → logprob: -4.408870220184326
    3. 'face' → logprob: -4.658870220184326
    4. 'used' → logprob: -5.533870220184326
    5. '#' → logprob: -6.158870220184326
    6. 'faces' → logprob: -6.158870220184326
    7. 'seen' → logprob: -6.658870220184326
    8. 'vis' → logprob: -7.533870220184326
    9. 'next' → logprob: -7.658870220184326
    10. 'edge' → logprob: -7.908870220184326

Token 585: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.026160135865211487
    2. 'face' → logprob: -4.90116024017334
    3. 'used' → logprob: -5.15116024017334
    4. 'edge' → logprob: -5.52616024017334
    5. '#' (adapté à ' #') → logprob: -5.65116024017334
    6. 'seen' → logprob: -6.40116024017334
    7. 'edges' → logprob: -6.90116024017334
    8. 'vis' → logprob: -7.02616024017334
    9. 'faces' → logprob: -7.15116024017334
    10. 'visit' → logprob: -8.02616024017334

Token 586: ' To' (ID: 2514)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.06935112923383713
    2. 'used' → logprob: -2.9443511962890625
    3. 'face' → logprob: -4.8193511962890625
    4. 'faces' → logprob: -6.4443511962890625
    5. 'seen' → logprob: -6.6943511962890625
    6. '#' → logprob: -6.6943511962890625
    7. 'edge' → logprob: -7.0693511962890625
    8. 'def' → logprob: -8.319351196289062
    9. 'Used' → logprob: -8.319351196289062
    10. ' visited' → logprob: -8.444351196289062

Token 587: ' find' (ID: 1646)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.05549134314060211
    2. 'visit' → logprob: -4.1804914474487305
    3. '_visit' → logprob: -4.8054914474487305
    4. 'def' → logprob: -4.9304914474487305
    5. 'seen' → logprob: -5.1804914474487305
    6. ' visited' → logprob: -5.5554914474487305
    7. '_seen' → logprob: -5.6804914474487305
    8. 'find' → logprob: -6.3054914474487305
    9. 'used' → logprob: -7.1804914474487305
    10. '#' → logprob: -7.1804914474487305

Token 588: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.26116427779197693
    2. 'all' → logprob: -2.0111641883850098
    3. 'next' → logprob: -3.2611641883850098
    4. 'the' → logprob: -4.38616418838501
    5. ' next' → logprob: -4.38616418838501
    6. ' faces' → logprob: -4.63616418838501
    7. ' all' → logprob: -4.63616418838501
    8. ' the' → logprob: -5.76116418838501
    9. 'edges' → logprob: -6.38616418838501
    10. 'each' → logprob: -6.63616418838501

Token 589: ',' (ID: 11)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.022573208436369896
    2. ' visited' → logprob: -4.147572994232178
    3. '   ' → logprob: -5.647572994232178
    4. 'seen' → logprob: -7.022572994232178
    5. 'used' → logprob: -7.022572994232178
    6. '
' → logprob: -8.022573471069336
    7. '#' → logprob: -8.397573471069336
    8. 'vis' → logprob: -8.522573471069336
    9. 'visit' → logprob: -9.022573471069336
    10. 'edges' → logprob: -9.647573471069336

Token 590: ' use' (ID: 1199)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.036754075437784195
    2. 'used' → logprob: -3.4117541313171387
    3. ' visited' → logprob: -6.036754131317139
    4. 'seen' → logprob: -8.41175365447998
    5. 'vis' → logprob: -8.41175365447998
    6. 'visit' → logprob: -9.41175365447998
    7. ' used' → logprob: -9.66175365447998
    8. 'done' → logprob: -10.16175365447998
    9. 'edge' → logprob: -10.28675365447998
    10. '#' → logprob: -11.03675365447998

Token 591: ' the' (ID: 290)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.23707784712314606
    2. ' visited' → logprob: -2.4870779514312744
    3. ' a' → logprob: -2.9870779514312744
    4. 'a' → logprob: -2.9870779514312744
    5. ' an' → logprob: -4.237077713012695
    6. 'next' → logprob: -6.612077713012695
    7. ' defaultdict' → logprob: -6.737077713012695
    8. 'the' → logprob: -6.987077713012695
    9. 'set' → logprob: -6.987077713012695
    10. 'seen' → logprob: -7.237077713012695

Token 592: ' planar' (ID: 175798)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.11207849532365799
    2. 'next' → logprob: -2.9870784282684326
    3. 'following' → logprob: -3.1120784282684326
    4. 'used' → logprob: -5.862078666687012
    5. 'edges' → logprob: -5.987078666687012
    6. ' visited' → logprob: -6.612078666687012
    7. ' following' → logprob: -6.987078666687012
    8. ' next' → logprob: -7.237078666687012
    9. 'edge' → logprob: -7.487078666687012
    10. 'seen' → logprob: -7.487078666687012

Token 593: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.9914847612380981
    2. 'edge' → logprob: -1.2414847612380981
    3. 'embedding' → logprob: -1.7414847612380981
    4. 'walk' → logprob: -1.9914847612380981
    5. ' embedding' → logprob: -5.241484642028809
    6. 'face' → logprob: -5.366484642028809
    7. ' graph' → logprob: -5.366484642028809
    8. 'walker' → logprob: -6.116484642028809
    9. 'edges' → logprob: -6.241484642028809
    10. '```' → logprob: -6.366484642028809

Token 594: ' face' (ID: 4950)
  Prédit: ' traversal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' traversal' → logprob: -0.014739706180989742
    2. 'walk' → logprob: -5.389739513397217
    3. 'dfs' → logprob: -6.264739513397217
    4. ' edges' → logprob: -6.639739513397217
    5. '_walk' → logprob: -6.639739513397217
    6. 'edges' → logprob: -7.139739513397217
    7. 'tr' → logprob: -7.389739513397217
    8. 'def' → logprob: -7.389739513397217
    9. ' embedding' → logprob: -7.389739513397217
    10. 'embedding' → logprob: -7.389739513397217

Token 595: ' walking' (ID: 15015)
  Prédit: 'walk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'walk' → logprob: -0.30414968729019165
    2. 'tr' → logprob: -2.054149627685547
    3. ' traversal' → logprob: -2.304149627685547
    4. '-w' → logprob: -4.304149627685547
    5. 'walking' → logprob: -4.554149627685547
    6. '-tr' → logprob: -5.429149627685547
    7. '_tr' → logprob: -6.429149627685547
    8. 'iterator' → logprob: -6.554149627685547
    9. ' walk' → logprob: -7.179149627685547
    10. 'walker' → logprob: -7.554149627685547

Token 596: ' technique' (ID: 16410)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.31960728764533997
    2. ' visited' → logprob: -1.4446072578430176
    3. '   ' → logprob: -4.444607257843018
    4. 'edges' → logprob: -5.069607257843018
    5. ' edges' → logprob: -5.444607257843018
    6. '#' → logprob: -5.444607257843018
    7. 'def' → logprob: -5.819607257843018
    8. ' algorithm' → logprob: -6.319607257843018
    9. ',' → logprob: -6.944607257843018
    10. ' technique' → logprob: -7.069607257843018

Token 597: ':
' (ID: 734)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.3058188557624817
    2. '   ' → logprob: -1.680818796157837
    3. ' visited' → logprob: -3.180818796157837
    4. '
' → logprob: -3.430818796157837
    5. '    
' → logprob: -6.305819034576416
    6. 'seen' → logprob: -7.930819034576416
    7. 'used' → logprob: -8.680818557739258
    8. ' seen' → logprob: -8.805818557739258
    9. '  
' → logprob: -9.055818557739258
    10. '#' → logprob: -9.055818557739258

Token 598: '   ' (ID: 271)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.2733269929885864
    2. 'visited' → logprob: -1.7733269929885864
    3. '   ' → logprob: -2.898326873779297
    4. ' used' → logprob: -4.648326873779297
    5. ' seen' → logprob: -6.023326873779297
    6. ' vis' → logprob: -7.648326873779297
    7. 'used' → logprob: -7.773326873779297
    8. 'seen' → logprob: -8.023326873779297
    9. ' edges' → logprob: -8.273326873779297
    10. ' edge' → logprob: -8.773326873779297

Token 599: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.051164381206035614
    2. 'used' → logprob: -3.176164388656616
    3. ' visited' → logprob: -5.926164150238037
    4. 'seen' → logprob: -6.301164150238037
    5. 'vis' → logprob: -6.926164150238037
    6. 'face' → logprob: -6.926164150238037
    7. ' used' → logprob: -7.801164150238037
    8. 'edge' → logprob: -7.801164150238037
    9. 'visit' → logprob: -8.551164627075195
    10. '#' (adapté à ' #') → logprob: -8.676164627075195

Token 600: ' For' (ID: 2214)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0543028861284256
    2. 'used' → logprob: -3.054302930831909
    3. 'seen' → logprob: -5.80430269241333
    4. 'vis' → logprob: -6.80430269241333
    5. 'face' → logprob: -7.92930269241333
    6. '#' → logprob: -8.304303169250488
    7. ' visited' → logprob: -8.429303169250488
    8. 'edge' → logprob: -8.679303169250488
    9. 'visit' → logprob: -8.679303169250488
    10. 'done' → logprob: -9.054303169250488

Token 601: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -1.0888878107070923
    2. ' each' → logprob: -1.2138878107070923
    3. 'i' → logprob: -1.7138878107070923
    4. ' i' → logprob: -1.7138878107070923
    5. ' v' → logprob: -5.838887691497803
    6. 'v' → logprob: -6.213887691497803
    7. ' all' → logprob: -8.338888168334961
    8. ' every' → logprob: -8.463888168334961
    9. ' vertex' → logprob: -8.838888168334961
    10. '_each' → logprob: -9.588888168334961

Token 602: ' directed' (ID: 23699)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.8193557858467102
    2. ' vertex' → logprob: -0.9443557858467102
    3. 'i' → logprob: -2.8193557262420654
    4. 'edge' → logprob: -3.6943557262420654
    5. ' edge' → logprob: -3.6943557262420654
    6. 'u' → logprob: -4.0693559646606445
    7. ' i' → logprob: -4.0693559646606445
    8. 'v' → logprob: -4.8193559646606445
    9. ' u' → logprob: -4.9443559646606445
    10. 'node' → logprob: -5.0693559646606445

Token 603: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.38691946864128113
    2. ' edge' → logprob: -1.1369194984436035
    3. '(edge' → logprob: -10.761919021606445
    4. '_edge' → logprob: -12.136919021606445
    5. ' ' → logprob: -12.386919021606445
    6. '#' → logprob: -12.511919021606445
    7. ')' → logprob: -12.886919021606445
    8. '   ' → logprob: -13.136919021606445
    9. 'edges' → logprob: -13.386919021606445
    10. 'e' → logprob: -13.386919021606445

Token 604: ',' (ID: 11)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.17741121351718903
    2. ' (' → logprob: -2.0524113178253174
    3. '(i' → logprob: -4.302411079406738
    4. '(s' → logprob: -4.677411079406738
    5. ' from' → logprob: -5.427411079406738
    6. 'from' → logprob: -5.802411079406738
    7. '(v' → logprob: -6.802411079406738
    8. ',' → logprob: -6.927411079406738
    9. ' in' → logprob: -7.677411079406738
    10. ' u' → logprob: -7.802411079406738

Token 605: ' if' (ID: 538)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.6906813383102417
    2. ' if' → logprob: -1.4406813383102417
    3. 'visited' → logprob: -1.9406813383102417
    4. 'if' → logprob: -2.6906814575195312
    5. ' used' → logprob: -3.5656814575195312
    6. '   ' → logprob: -4.815681457519531
    7. ' visit' → logprob: -5.940681457519531
    8. ' for' → logprob: -6.065681457519531
    9. '#' → logprob: -6.440681457519531
    10. ' mark' → logprob: -6.440681457519531

Token 606: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.2113160938024521
    2. ' not' → logprob: -2.2113161087036133
    3. '(not' → logprob: -2.5863161087036133
    4. 'it' → logprob: -5.461316108703613
    5. ' it' → logprob: -7.336316108703613
    6. '(' → logprob: -7.711316108703613
    7. 'visited' → logprob: -9.336316108703613
    8. '(it' → logprob: -10.086316108703613
    9. '(edge' → logprob: -10.461316108703613
    10. 'edge' → logprob: -10.586316108703613

Token 607: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.053526896983385086
    2. ' visited' → logprob: -3.3035268783569336
    3. 'used' → logprob: -4.303526878356934
    4. ' used' → logprob: -6.303526878356934
    5. 'vis' → logprob: -12.053526878356934
    6. 'seen' → logprob: -13.053526878356934
    7. '_used' → logprob: -13.303526878356934
    8. ' yet' → logprob: -13.303526878356934
    9. 'done' → logprob: -13.678526878356934
    10. 'marked' → logprob: -14.053526878356934

Token 608: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03968913108110428
    2. '[(' → logprob: -3.539689064025879
    3. '[' → logprob: -5.539689064025879
    4. ':' → logprob: -5.539689064025879
    5. ' =' → logprob: -8.289689064025879
    6. ' ,' → logprob: -8.414689064025879
    7. '_edges' → logprob: -8.539689064025879
    8. '=' → logprob: -8.664689064025879
    9. '[u' → logprob: -8.664689064025879
    10. ':
' → logprob: -8.789689064025879

Token 609: ' walk' (ID: 5229)
  Prédit: ' mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mark' → logprob: -0.2763769030570984
    2. ' visited' → logprob: -2.276376962661743
    3. ' visit' → logprob: -2.776376962661743
    4. '   ' → logprob: -3.526376962661743
    5. 'mark' → logprob: -3.901376962661743
    6. 'visited' → logprob: -4.026376724243164
    7. ' start' → logprob: -5.901376724243164
    8. 'visit' → logprob: -6.026376724243164
    9. ' stack' → logprob: -7.151376724243164
    10. ' go' → logprob: -7.526376724243164

Token 610: ' around' (ID: 2846)
  Prédit: 'along'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'along' → logprob: -0.6489425897598267
    2. ' along' → logprob: -1.5239425897598267
    3. 'around' → logprob: -1.7739425897598267
    4. ' around' → logprob: -2.648942470550537
    5. 'the' → logprob: -4.523942470550537
    6. ' the' → logprob: -6.023942470550537
    7. 'it' → logprob: -7.023942470550537
    8. 'from' → logprob: -7.148942470550537
    9. 'through' → logprob: -7.398942470550537
    10. 'counter' → logprob: -7.398942470550537

Token 611: ' the' (ID: 290)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -1.151345133781433
    2. ' that' → logprob: -1.276345133781433
    3. 'the' → logprob: -1.276345133781433
    4. ' the' → logprob: -2.4013452529907227
    5. ' it' → logprob: -3.6513452529907227
    6. 'it' → logprob: -5.901345252990723
    7. 'face' → logprob: -6.401345252990723
    8. '(i' → logprob: -6.901345252990723
    9. ' face' → logprob: -7.401345252990723
    10. 'a' → logprob: -7.526345252990723

Token 612: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.9308780431747437
    2. ' face' → logprob: -0.9308780431747437
    3. 'adj' → logprob: -2.180878162384033
    4. 'edge' → logprob: -3.555878162384033
    5. 'vertex' → logprob: -4.430878162384033
    6. 'i' → logprob: -4.430878162384033
    7. '(face' → logprob: -4.555878162384033
    8. ' edge' → logprob: -5.555878162384033
    9. 'u' → logprob: -5.805878162384033
    10. '(edge' → logprob: -5.930878162384033

Token 613: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28823038935661316
    2. ' to' → logprob: -2.9132304191589355
    3. ' and' → logprob: -3.1632304191589355
    4. ' in' → logprob: -3.1632304191589355
    5. 'and' → logprob: -3.4132304191589355
    6. ' starting' → logprob: -4.4132304191589355
    7. ' around' → logprob: -4.6632304191589355
    8. ',' → logprob: -4.7882304191589355
    9. ' by' → logprob: -4.9132304191589355
    10. 'in' → logprob: -5.1632304191589355

Token 614: ' left' (ID: 3561)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.5939416289329529
    2. ' that' → logprob: -1.4689416885375977
    3. 'the' → logprob: -1.8439416885375977
    4. ' the' → logprob: -3.0939416885375977
    5. 'adj' → logprob: -5.343941688537598
    6. 'this' → logprob: -5.843941688537598
    7. 'it' → logprob: -6.718941688537598
    8. ' this' → logprob: -6.968941688537598
    9. 'each' → logprob: -6.968941688537598
    10. ' each' → logprob: -7.593941688537598

Token 615: ' side' (ID: 4307)
  Prédit: ' side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' side' → logprob: -0.14681872725486755
    2. ' of' → logprob: -2.7718186378479004
    3. 'side' → logprob: -3.5218186378479004
    4. ' edge' → logprob: -4.0218186378479
    5. 'edge' → logprob: -4.3968186378479
    6. 'of' → logprob: -4.6468186378479
    7. ',' → logprob: -6.3968186378479
    8. '```' → logprob: -8.021819114685059
    9. '   ' → logprob: -8.271819114685059
    10. ' hand' → logprob: -8.271819114685059

Token 616: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2305116504430771
    2. ' of' → logprob: -1.8555116653442383
    3. '.' → logprob: -4.230511665344238
    4. ',' → logprob: -4.480511665344238
    5. ':' → logprob: -4.855511665344238
    6. ' and' → logprob: -5.355511665344238
    7. 'of' → logprob: -5.605511665344238
    8. 'edges' → logprob: -6.230511665344238
    9. ' edges' → logprob: -6.980511665344238
    10. ' to' → logprob: -7.105511665344238

Token 617: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5817906856536865
    2. 'visited' → logprob: -1.2067906856536865
    3. ' visited' → logprob: -1.9567906856536865
    4. ' for' → logprob: -9.081790924072266
    5. 'for' → logprob: -9.331790924072266
    6. '```' → logprob: -9.706790924072266
    7. '
' → logprob: -9.831790924072266
    8. 'vis' → logprob: -10.081790924072266
    9. 'edges' → logprob: -10.206790924072266
    10. '    
' → logprob: -10.706790924072266

Token 618: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.07264740765094757
    2. ' visited' → logprob: -2.8226473331451416
    3. '   ' → logprob: -4.572647571563721
    4. 'vis' → logprob: -8.822647094726562
    5. 'seen' → logprob: -10.197647094726562
    6. 'visit' → logprob: -10.322647094726562
    7. 'face' → logprob: -11.072647094726562
    8. 'faces' → logprob: -11.322647094726562
    9. '
' → logprob: -11.572647094726562
    10. 'used' → logprob: -11.822647094726562

Token 619: '_edge' (ID: 43226)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014772593975067
    2. ' =' → logprob: -1.701477289199829
    3. '_edges' → logprob: -10.32647705078125
    4. 'edges' → logprob: -11.57647705078125
    5. '[' → logprob: -11.95147705078125
    6. '=set' → logprob: -12.57647705078125
    7. '={}' → logprob: -12.57647705078125
    8. '_' → logprob: -13.07647705078125
    9. '=edge' → logprob: -13.95147705078125
    10. '_edge' → logprob: -14.07647705078125

Token 620: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1826927214860916
    2. ' =' → logprob: -1.9326927661895752
    3. 's' → logprob: -3.807692766189575
    4. ']' → logprob: -12.557692527770996
    5. '[' → logprob: -12.557692527770996
    6. '=set' → logprob: -12.557692527770996
    7. '[s' → logprob: -13.182692527770996
    8. ')' → logprob: -13.307692527770996
    9. '=s' → logprob: -14.307692527770996
    10. 'd' → logprob: -14.432692527770996

Token 621: ' set' (ID: 920)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.31658005714416504
    2. 'set' → logprob: -1.316580057144165
    3. '[' → logprob: -5.816579818725586
    4. '[[' → logprob: -8.191579818725586
    5. ' set' → logprob: -10.441579818725586
    6. ' defaultdict' → logprob: -10.691579818725586
    7. '{' → logprob: -12.691579818725586
    8. ' [' → logprob: -13.566579818725586
    9. '(default' → logprob: -14.316579818725586
    10. '{}' → logprob: -14.691579818725586

Token 622: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009090050123631954
    2. '(' → logprob: -5.634089946746826
    3. '((' → logprob: -6.259089946746826
    4. '()
' → logprob: -6.384089946746826
    5. '<|end|>' → logprob: -6.884089946746826
    6. ',' → logprob: -8.509090423583984
    7. ')' → logprob: -8.759090423583984
    8. '([(' → logprob: -8.884090423583984
    9. '   ' → logprob: -9.259090423583984
    10. '<|end|>' → logprob: -9.759090423583984

Token 623: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12386088073253632
    2. ' for' → logprob: -2.4988608360290527
    3. 'for' → logprob: -4.373860836029053
    4. 'def' → logprob: -4.623860836029053
    5. '
' → logprob: -4.748860836029053
    6. '    
' → logprob: -6.498860836029053
    7. ' next' → logprob: -7.748860836029053
    8. ' def' → logprob: -7.748860836029053
    9. '  
' → logprob: -8.998861312866211
    10. '```' → logprob: -9.373861312866211

Token 624: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' (adapté à ' faces') → logprob: -0.002307623391970992
    2. 'def' → logprob: -6.627307415008545
    3. '   ' → logprob: -7.502307415008545
    4. ' faces' → logprob: -7.877307415008545
    5. 'face' → logprob: -10.752307891845703
    6. 'res' → logprob: -11.377307891845703
    7. ' def' → logprob: -11.627307891845703
    8. 'result' → logprob: -13.002307891845703
    9. '_faces' → logprob: -13.502307891845703
    10. '
' → logprob: -13.877307891845703

Token 625: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760418176651001
    2. '=' → logprob: -0.8260418176651001
    3. '=[]' → logprob: -9.201042175292969
    4. '[]' → logprob: -15.201042175292969
    5. '=[]
' → logprob: -15.201042175292969
    6. ')' → logprob: -15.826042175292969
    7. '[' → logprob: -15.951042175292969
    8. ',' → logprob: -16.70104217529297
    9. 's' → logprob: -16.82604217529297
    10. '   ' → logprob: -16.82604217529297

Token 626: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00012475410767365247
    2. ' []' → logprob: -9.00012493133545
    3. '[]
' → logprob: -14.62512493133545
    4. '[' → logprob: -14.75012493133545
    5. 'deque' → logprob: -15.62512493133545
    6. '[]}' → logprob: -16.000123977661133
    7. '[]"' → logprob: -16.625123977661133
    8. '[]>' → logprob: -17.000123977661133
    9. '[]

' → logprob: -18.125123977661133
    10. '[])' → logprob: -19.125123977661133

Token 627: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11918327957391739
    2. ' for' → logprob: -2.369183301925659
    3. 'for' → logprob: -4.61918306350708
    4. '
' → logprob: -4.86918306350708
    5. '    
' → logprob: -6.74418306350708
    6. 'def' → logprob: -10.244183540344238
    7. ' 
' → logprob: -11.119183540344238
    8. ' def' → logprob: -12.119183540344238
    9. '	for' → logprob: -12.244183540344238
    10. '```' → logprob: -12.494183540344238

Token 628: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06584480404853821
    2. ' for' → logprob: -2.815844774246216
    3. '   ' → logprob: -5.565845012664795
    4. 'def' → logprob: -10.190844535827637
    5. '
' → logprob: -12.440844535827637
    6. '	for' → logprob: -13.815844535827637
    7. '    
' → logprob: -15.190844535827637
    8. ' def' → logprob: -15.190844535827637
    9. '```' → logprob: -15.315844535827637
    10. ' ' → logprob: -15.690844535827637

Token 629: ' u' (ID: 337)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20024074614048004
    2. 'u' → logprob: -2.2002408504486084
    3. ' i' → logprob: -3.2002408504486084
    4. 'v' → logprob: -4.075240612030029
    5. ' u' → logprob: -4.450240612030029
    6. ' v' → logprob: -6.825240612030029
    7. 's' → logprob: -8.950241088867188
    8. '   ' → logprob: -10.200241088867188
    9. ' s' → logprob: -10.950241088867188
    10. 'vertex' → logprob: -14.700241088867188

Token 630: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.37243929505348206
    2. 'in' → logprob: -1.7474392652511597
    3. ',' → logprob: -1.9974392652511597
    4. ' ,' → logprob: -6.997439384460449
    5. ',in' → logprob: -10.49743938446045
    6. ')' → logprob: -10.62243938446045
    7. ' ' → logprob: -11.12243938446045
    8. '_in' → logprob: -11.12243938446045
    9. 's' → logprob: -11.74743938446045
    10. '0' → logprob: -11.99743938446045

Token 631: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.941850526549388e-06
    2. ' range' → logprob: -11.750007629394531
    3. '(range' → logprob: -18.50000762939453
    4. '	range' → logprob: -20.87500762939453
    5. 'r' → logprob: -21.25000762939453
    6. 'ange' → logprob: -21.62500762939453
    7. '0' → logprob: -22.00000762939453
    8. '   ' → logprob: -22.12500762939453
    9. '
' → logprob: -22.25000762939453
    10. ')' → logprob: -22.37500762939453

Token 632: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.011050177738070488
    2. 'C' → logprob: -4.511050224304199
    3. '(' → logprob: -13.6360502243042
    4. '   ' → logprob: -14.5110502243042
    5. '(
' → logprob: -15.5110502243042
    6. '	C' → logprob: -15.8860502243042
    7. '
' → logprob: -15.8860502243042
    8. ' C' → logprob: -16.386049270629883
    9. '(len' → logprob: -16.511049270629883
    10. ')' → logprob: -17.136049270629883

Token 633: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.062057312577962875
    2. '):' → logprob: -2.8120572566986084
    3. ' ):
' → logprob: -10.312057495117188
    4. '   ' → logprob: -10.562057495117188
    5. '):
' → logprob: -10.937057495117188
    6. ')' → logprob: -12.062057495117188
    7. ' ):' → logprob: -12.187057495117188
    8. ':' → logprob: -14.437057495117188
    9. '):

' → logprob: -14.562057495117188
    10. ':
' → logprob: -15.187057495117188

Token 634: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11677699536085129
    2. '   ' → logprob: -2.366776943206787
    3. ' for' → logprob: -4.116776943206787
    4. '	for' → logprob: -9.866777420043945
    5. '	   ' → logprob: -10.366777420043945
    6. 'for' → logprob: -10.866777420043945
    7. ',' → logprob: -11.991777420043945
    8. '    ' → logprob: -12.116777420043945
    9. '   ' → logprob: -12.116777420043945
    10. ' ' → logprob: -12.491777420043945

Token 635: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.392824874026701e-05
    2. ' for' → logprob: -10.50003433227539
    3. '   ' → logprob: -12.00003433227539
    4. '	for' → logprob: -16.00003433227539
    5. '       ' → logprob: -17.00003433227539
    6. 'deg' → logprob: -17.00003433227539
    7. ' ' → logprob: -18.25003433227539
    8. 'v' → logprob: -18.25003433227539
    9. 'adj' → logprob: -19.75003433227539
    10. '    
' → logprob: -19.75003433227539

Token 636: ' vi' (ID: 2640)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.5048530030981055e-06
    2. ' v' → logprob: -13.875001907348633
    3. 'w' → logprob: -15.000001907348633
    4. 'idx' → logprob: -16.625001907348633
    5. 'i' → logprob: -17.875001907348633
    6. '_v' → logprob: -18.625001907348633
    7. '	v' → logprob: -19.750001907348633
    8. 'vv' → logprob: -20.500001907348633
    9. 'vt' → logprob: -20.875001907348633
    10. '   ' → logprob: -21.125001907348633

Token 637: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38942521810531616
    2. 's' → logprob: -1.139425277709961
    3. 'n' → logprob: -6.639425277709961
    4. 't' → logprob: -7.639425277709961
    5. 'd' → logprob: -8.764425277709961
    6. 'sit' → logprob: -8.764425277709961
    7. 'dx' → logprob: -8.889425277709961
    8. 'st' → logprob: -10.014425277709961
    9. 'rt' → logprob: -10.264425277709961
    10. 'r' → logprob: -10.514425277709961

Token 638: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.38734108209609985
    2. 'range' → logprob: -1.137341022491455
    3. ' range' → logprob: -8.137341499328613
    4. ' adj' → logprob: -8.762341499328613
    5. 'ad' → logprob: -11.262341499328613
    6. '(adj' → logprob: -12.637341499328613
    7. 'Adj' → logprob: -14.137341499328613
    8. 'aj' → logprob: -14.387341499328613
    9. '[' → logprob: -14.887341499328613
    10. 'adm' → logprob: -15.137341499328613

Token 639: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.8193366486229934e-05
    2. 'u' → logprob: -11.000018119812012
    3. '[' → logprob: -13.750018119812012
    4. '(u' → logprob: -15.000018119812012
    5. '[
' → logprob: -17.375019073486328
    6. '<u' → logprob: -18.000019073486328
    7. '	u' → logprob: -18.125019073486328
    8. '```' → logprob: -18.250019073486328
    9. '[v' → logprob: -19.125019073486328
    10. '
' → logprob: -19.125019073486328

Token 640: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.16744478046894073
    2. '):' → logprob: -1.9174448251724243
    3. ']):' → logprob: -5.042444705963135
    4. '):
' → logprob: -7.917444705963135
    5. ']:
' → logprob: -8.917445182800293
    6. ']' → logprob: -9.167445182800293
    7. ']):
' → logprob: -10.042445182800293
    8. ':' → logprob: -10.292445182800293
    9. '       ' → logprob: -11.417445182800293
    10. ' ):' → logprob: -11.542445182800293

Token 641: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.056684233248233795
    2. '       ' → logprob: -2.9316842555999756
    3. ' if' → logprob: -7.0566840171813965
    4. ':' → logprob: -7.1816840171813965
    5. ',' → logprob: -9.556684494018555
    6. ' :' → logprob: -10.431684494018555
    7. ':
' → logprob: -11.306684494018555
    8. '	       ' → logprob: -11.556684494018555
    9. '#' → logprob: -11.931684494018555
    10. 'if' → logprob: -12.181684494018555

Token 642: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.24835386872291565
    2. '           ' → logprob: -1.9983538389205933
    3. ' if' → logprob: -2.623353958129883
    4. 'edge' → logprob: -5.248353958129883
    5. 'key' → logprob: -5.873353958129883
    6. '   ' → logprob: -6.123353958129883
    7. '               ' → logprob: -7.123353958129883
    8. ' key' → logprob: -7.748353958129883
    9. ' edge' → logprob: -8.623353958129883
    10. 'e' → logprob: -9.498353958129883

Token 643: ' (' (ID: 350)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0012409444898366928
    2. '(' → logprob: -6.7512407302856445
    3. '(f' → logprob: -10.126240730285645
    4. '(v' → logprob: -11.126240730285645
    5. ' (' → logprob: -11.626240730285645
    6. '((' → logprob: -12.251240730285645
    7. '('' → logprob: -14.626240730285645
    8. '   ' → logprob: -15.126240730285645
    9. '(not' → logprob: -15.626240730285645
    10. '(vis' → logprob: -15.626240730285645

Token 644: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00018339496455155313
    2. '(u' → logprob: -8.75018310546875
    3. ' u' → logprob: -10.75018310546875
    4. ',u' → logprob: -13.75018310546875
    5. '	u' → logprob: -14.37518310546875
    6. '   ' → logprob: -14.50018310546875
    7. ')' → logprob: -14.87518310546875
    8. '[u' → logprob: -15.12518310546875
    9. '(' → logprob: -15.62518310546875
    10. ' (' → logprob: -15.87518310546875

Token 645: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.041768160182983e-05
    2. ' ,' → logprob: -10.250080108642578
    3. ',v' → logprob: -10.750080108642578
    4. ',u' → logprob: -11.875080108642578
    5. ',
' → logprob: -12.125080108642578
    6. ',",' → logprob: -13.250080108642578
    7. '‌,' → logprob: -14.000080108642578
    8. ',None' → logprob: -14.375080108642578
    9. ',k' → logprob: -14.625080108642578
    10. '<|end|>' → logprob: -14.750080108642578

Token 646: ' vi' (ID: 2640)
  Prédit: 'vi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vi' → logprob: -2.5776860184123507e-06
    2. ' vi' → logprob: -12.87500286102295
    3. 'v' → logprob: -18.000001907348633
    4. '           ' → logprob: -19.375001907348633
    5. '   ' → logprob: -21.875001907348633
    6. '_vi' → logprob: -22.375001907348633
    7. '               ' → logprob: -22.625001907348633
    8. '     ' → logprob: -22.750001907348633
    9. 'vj' → logprob: -23.125001907348633
    10. '                   ' → logprob: -23.375001907348633

Token 647: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002695608709473163
    2. ' )' → logprob: -8.250269889831543
    3. 'not' → logprob: -12.500269889831543
    4. ' not' → logprob: -12.500269889831543
    5. '   ' → logprob: -15.750269889831543
    6. ' in' → logprob: -15.875269889831543
    7. 'in' → logprob: -15.875269889831543
    8. ']' → logprob: -16.500268936157227
    9. '）' → logprob: -16.625268936157227
    10. ')
' → logprob: -16.750268936157227

Token 648: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2355249673128128
    2. 'not' → logprob: -2.485524892807007
    3. ')' → logprob: -2.860524892807007
    4. ' in' → logprob: -2.985524892807007
    5. 'in' → logprob: -3.985524892807007
    6. ' )' → logprob: -8.610525131225586
    7. ']' → logprob: -11.235525131225586
    8. '	not' → logprob: -11.235525131225586
    9. ' ' → logprob: -12.235525131225586
    10. ' no' → logprob: -13.485525131225586

Token 649: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -7.505351095460355e-05
    2. ' visited' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.00007438659668
    4. '           ' → logprob: -18.87507438659668
    5. '       ' → logprob: -20.25007438659668
    6. ' ' → logprob: -20.87507438659668
    7. '
' → logprob: -21.75007438659668
    8. '	' → logprob: -21.75007438659668
    9. '               ' → logprob: -22.12507438659668
    10. 'visible' → logprob: -22.37507438659668

Token 650: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -9.253090865968261e-06
    2. ')' → logprob: -11.875009536743164
    3. '_edges' → logprob: -14.250009536743164
    4. 'edge' → logprob: -14.250009536743164
    5. '_' → logprob: -15.875009536743164
    6. '{' → logprob: -16.250009536743164
    7. '):
' → logprob: -16.375009536743164
    8. 'Edge' → logprob: -16.500009536743164
    9. '{
' → logprob: -16.750009536743164
    10. '
' → logprob: -16.875009536743164

Token 651: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07077254354953766
    2. ':
' → logprob: -2.695772647857666
    3. '               ' → logprob: -7.570772647857666
    4. ':return' → logprob: -8.945772171020508
    5. '           ' → logprob: -10.070772171020508
    6. '):
' → logprob: -10.445772171020508
    7. '):' → logprob: -10.570772171020508
    8. ' or' → logprob: -10.820772171020508
    9. '==' → logprob: -11.445772171020508
    10. ')' → logprob: -11.820772171020508

Token 652: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000494533043820411
    2. ' continue' → logprob: -8.500494956970215
    3. ':
' → logprob: -8.750494956970215
    4. ':' → logprob: -9.125494956970215
    5. '           ' → logprob: -12.125494956970215
    6. ',' → logprob: -12.125494956970215
    7. ' continues' → logprob: -13.000494956970215
    8. 'continue' → logprob: -13.000494956970215
    9. '                   ' → logprob: -13.125494956970215
    10. '                
' → logprob: -14.000494956970215

Token 653: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6336724758148193
    2. 'continue' (adapté à ' continue') → logprob: -0.8836724758148193
    3. ' continue' → logprob: -2.8836724758148193
    4. '                   ' → logprob: -9.258672714233398
    5. '   ' → logprob: -10.258672714233398
    6. '	continue' → logprob: -10.383672714233398
    7. '           ' → logprob: -12.758672714233398
    8. 'continu' → logprob: -13.383672714233398
    9. '_continue' → logprob: -13.633672714233398
    10. '       ' → logprob: -14.383672714233398

Token 654: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.221884101862088e-05
    2. '            
' → logprob: -9.625092506408691
    3. '               ' → logprob: -11.500092506408691
    4. '
' → logprob: -12.125092506408691
    5. ',' → logprob: -13.500092506408691
    6. '<|end|>' → logprob: -13.625092506408691
    7. '   ' → logprob: -13.750092506408691
    8. '		' → logprob: -14.000092506408691
    9. '       ' → logprob: -14.125092506408691
    10. '    
' → logprob: -14.500092506408691

Token 655: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00017469677550252527
    2. '            
' → logprob: -9.125174522399902
    3. '
' → logprob: -10.625174522399902
    4. '               ' → logprob: -11.000174522399902
    5. 'visited' → logprob: -11.125174522399902
    6. ' visited' → logprob: -13.125174522399902
    7. '       ' → logprob: -13.875174522399902
    8. ',' → logprob: -13.875174522399902
    9. '                   ' → logprob: -14.000174522399902
    10. '   ' → logprob: -14.250174522399902

Token 656: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' (adapté à ' face') → logprob: -0.1129450723528862
    2. 'path' → logprob: -3.237945079803467
    3. '           ' → logprob: -3.362945079803467
    4. 'curr' → logprob: -4.112945079803467
    5. ' face' → logprob: -5.237945079803467
    6. 'cur' → logprob: -5.987945079803467
    7. '   ' → logprob: -5.987945079803467
    8. 'current' → logprob: -6.112945079803467
    9. 'visited' → logprob: -6.487945079803467
    10. 'cycle' → logprob: -6.612945079803467

Token 657: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015110816806554794
    2. '=' → logprob: -4.640110969543457
    3. '=[]' → logprob: -5.640110969543457
    4. '=[]
' → logprob: -7.015110969543457
    5. '_vertices' → logprob: -7.265110969543457
    6. '_edges' → logprob: -10.515110969543457
    7. ',' → logprob: -10.890110969543457
    8. '_tokens' → logprob: -10.890110969543457
    9. '_nodes' → logprob: -10.890110969543457
    10. '_points' → logprob: -10.890110969543457

Token 658: ' []
' (ID: 8911)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.004940089304000139
    2. '[' → logprob: -5.754940032958984
    3. '[]' → logprob: -7.004940032958984
    4. ' [' → logprob: -7.504940032958984
    5. '[]
' → logprob: -8.504940032958984
    6. '[(' → logprob: -9.379940032958984
    7. '[v' → logprob: -11.504940032958984
    8. '[a' → logprob: -13.004940032958984
    9. '[s' → logprob: -14.754940032958984
    10. '[i' → logprob: -14.754940032958984

Token 659: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003192685777321458
    2. '   ' → logprob: -6.503192901611328
    3. 'current' → logprob: -7.128192901611328
    4. 'cur' → logprob: -8.003192901611328
    5. 'curr' → logprob: -8.378192901611328
    6. ' current' → logprob: -8.878192901611328
    7. ' curr' → logprob: -9.128192901611328
    8. ' cur' → logprob: -10.128192901611328
    9. '            
' → logprob: -11.503192901611328
    10. 'u' → logprob: -11.628192901611328

Token 660: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.5029940605163574
    2. 'curr' → logprob: -1.0029940605163574
    3. 'current' → logprob: -3.7529940605163574
    4. 'v' → logprob: -5.502994060516357
    5. 'cu' → logprob: -7.252994060516357
    6. 'start' → logprob: -8.752994537353516
    7. '   ' → logprob: -9.627994537353516
    8. ' curr' → logprob: -10.877994537353516
    9. 'prev' → logprob: -11.002994537353516
    10. 'c' → logprob: -12.127994537353516

Token 661: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07479695230722427
    2. ' =' → logprob: -3.5747969150543213
    3. ',u' → logprob: -3.9497969150543213
    4. '=' → logprob: -4.4497971534729
    5. 'u' → logprob: -4.9497971534729
    6. '=u' → logprob: -5.5747971534729
    7. ' ,' → logprob: -7.8247971534729
    8. '_vertex' → logprob: -7.8247971534729
    9. '_u' → logprob: -7.8247971534729
    10. 'v' → logprob: -8.949796676635742

Token 662: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5499818921089172
    2. 'vi' → logprob: -0.9249818921089172
    3. '(u' → logprob: -3.9249818325042725
    4. '(' → logprob: -5.174982070922852
    5. 'v' → logprob: -7.549982070922852
    6. ' vi' → logprob: -8.674982070922852
    7. '(v' → logprob: -8.799982070922852
    8. ' u' → logprob: -9.049982070922852
    9. ' (' → logprob: -9.174982070922852
    10. '   ' → logprob: -11.424982070922852

Token 663: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012672807089984417
    2. '           ' → logprob: -5.3876729011535645
    3. 'next' → logprob: -5.6376729011535645
    4. 'vi' → logprob: -6.3876729011535645
    5. '
' → logprob: -7.0126729011535645
    6. ';' → logprob: -7.6376729011535645
    7. 'prev' → logprob: -8.137672424316406
    8. ',next' → logprob: -8.262672424316406
    9. 'edge' → logprob: -8.637672424316406
    10. 'while' → logprob: -9.262672424316406

Token 664: '           ' (ID: 352)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14068660140037537
    2. '           ' → logprob: -2.140686511993408
    3. 'next' → logprob: -4.640686511993408
    4. 'prev' → logprob: -6.390686511993408
    5. ',next' → logprob: -6.515686511993408
    6. ' next' → logprob: -8.640686988830566
    7. ' ,' → logprob: -8.640686988830566
    8. ' nxt' → logprob: -9.765686988830566
    9. 'edge' → logprob: -9.890686988830566
    10. 'and' → logprob: -10.265686988830566

Token 665: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.19343258440494537
    2. 'next' → logprob: -2.318432569503784
    3. 'v' → logprob: -2.943432569503784
    4. 'nv' → logprob: -4.568432807922363
    5. 'vi' → logprob: -5.443432807922363
    6. 'nx' → logprob: -5.443432807922363
    7. 'nei' → logprob: -6.568432807922363
    8. ' nxt' → logprob: -6.943432807922363
    9. 'nbr' → logprob: -7.193432807922363
    10. 'ni' → logprob: -7.693432807922363

Token 666: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.055102188140153885
    2. ' =' → logprob: -2.9301021099090576
    3. ',' → logprob: -8.430102348327637
    4. ')' → logprob: -14.305102348327637
    5. '=
' → logprob: -15.180102348327637
    6. ' ' → logprob: -15.430102348327637
    7. 't' → logprob: -16.18010139465332
    8. 'x' → logprob: -16.18010139465332
    9. 's' → logprob: -16.30510139465332
    10. 'n' → logprob: -16.55510139465332

Token 667: ' vi' (ID: 2640)
  Prédit: 'vi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vi' → logprob: -2.451116051815916e-05
    2. ' vi' → logprob: -10.625024795532227
    3. '           ' → logprob: -16.000024795532227
    4. 'v' → logprob: -16.875024795532227
    5. '_vi' → logprob: -17.875024795532227
    6. '   ' → logprob: -19.000024795532227
    7. 'Vi' → logprob: -19.750024795532227
    8. '               ' → logprob: -20.125024795532227
    9. '       ' → logprob: -20.250024795532227
    10. '                   ' → logprob: -20.250024795532227

Token 668: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04427455738186836
    2. '
' → logprob: -3.6692745685577393
    3. 'while' → logprob: -4.29427433013916
    4. ' while' → logprob: -5.54427433013916
    5. '            
' → logprob: -8.79427433013916
    6. '       ' → logprob: -11.16927433013916
    7. '   ' → logprob: -11.29427433013916
    8. '  
' → logprob: -11.54427433013916
    9. ' 
' → logprob: -11.91927433013916
    10. '#' → logprob: -12.04427433013916

Token 669: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006948007503524423
    2. ' while' → logprob: -8.12569522857666
    3. 'while' → logprob: -8.75069522857666
    4. '   ' → logprob: -9.37569522857666
    5. '```' → logprob: -10.12569522857666
    6. '       ' → logprob: -10.37569522857666
    7. ',' → logprob: -11.12569522857666
    8. ' face' → logprob: -11.12569522857666
    9. '<|end|>' → logprob: -11.37569522857666
    10. '            
' → logprob: -11.62569522857666

Token 670: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.00417313352227211
    2. '           ' → logprob: -5.504173278808594
    3. ' while' → logprob: -9.379173278808594
    4. 'face' → logprob: -12.254173278808594
    5. '   ' → logprob: -12.504173278808594
    6. '```' → logprob: -14.004173278808594
    7. '       ' → logprob: -14.879173278808594
    8. '	while' → logprob: -15.254173278808594
    9. '               ' → logprob: -15.379173278808594
    10. 'While' → logprob: -16.379173278808594

Token 671: ' True' (ID: 6432)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.19370990991592407
    2. '(True' → logprob: -2.9437098503112793
    3. 'cur' → logprob: -3.0687098503112793
    4. 'n' → logprob: -3.4437098503112793
    5. 'True' → logprob: -3.8187098503112793
    6. '(cur' → logprob: -3.9437098503112793
    7. ' (' → logprob: -6.818709850311279
    8. '(next' → logprob: -6.818709850311279
    9. ' nxt' → logprob: -7.568709850311279
    10. ' True' → logprob: -7.693709850311279

Token 672: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.36194416880607605
    2. ':' → logprob: -1.3619441986083984
    3. '               ' → logprob: -3.1119441986083984
    4. '):
' → logprob: -6.111944198608398
    5. '           ' → logprob: -7.986944198608398
    6. '):' → logprob: -9.361944198608398
    7. ')' → logprob: -10.236944198608398
    8. ',' → logprob: -10.361944198608398
    9. '       ' → logprob: -10.361944198608398
    10. '<|end|>' → logprob: -10.361944198608398

Token 673: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021317988634109497
    2. '   ' → logprob: -4.396317958831787
    3. 'face' → logprob: -4.896317958831787
    4. ' face' → logprob: -7.146317958831787
    5. '       ' → logprob: -7.896317958831787
    6. '           ' → logprob: -9.021318435668945
    7. ' ' → logprob: -12.771318435668945
    8. '```' → logprob: -12.771318435668945
    9. '	           ' → logprob: -13.521318435668945
    10. 'faces' → logprob: -13.896318435668945

Token 674: ' visited' (ID: 18416)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.020798787474632263
    2. '               ' → logprob: -4.645798683166504
    3. ' face' → logprob: -4.645798683166504
    4. '           ' → logprob: -7.270798683166504
    5. '   ' → logprob: -7.520798683166504
    6. 'visited' (adapté à ' visited') → logprob: -9.020798683166504
    7. ' ' → logprob: -12.020798683166504
    8. '       ' → logprob: -12.270798683166504
    9. '                   ' → logprob: -13.020798683166504
    10. 'faces' → logprob: -13.145798683166504

Token 675: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -4.127333340875339e-06
    2. '_token' → logprob: -13.250003814697266
    3. 'edge' → logprob: -14.000003814697266
    4. '_edges' → logprob: -14.250003814697266
    5. '_' → logprob: -15.875003814697266
    6. '_EDGE' → logprob: -16.500003814697266
    7. ' _' → logprob: -16.625003814697266
    8. '_key' → logprob: -16.625003814697266
    9. '_face' → logprob: -16.625003814697266
    10. '```' → logprob: -16.750003814697266

Token 676: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -2.963691804325208e-05
    2. 'add' → logprob: -10.875029563903809
    3. '.' → logprob: -11.500029563903809
    4. ' .' → logprob: -15.375029563903809
    5. '.ad' → logprob: -16.750030517578125
    6. '
' → logprob: -16.875030517578125
    7. '.Add' → logprob: -17.625030517578125
    8. '_add' → logprob: -17.750030517578125
    9. '(add' → logprob: -17.875030517578125
    10. ')add' → logprob: -18.000030517578125

Token 677: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.01825740374624729
    2. '(' → logprob: -4.0182576179504395
    3. '(cur' → logprob: -9.143257141113281
    4. ' ' → logprob: -15.018257141113281
    5. '(current' → logprob: -16.26825714111328
    6. ' (' → logprob: -16.76825714111328
    7. '(curr' → logprob: -17.26825714111328
    8. ' ((' → logprob: -17.51825714111328
    9. '(n' → logprob: -18.01825714111328
    10. '(tuple' → logprob: -18.14325714111328

Token 678: 'cur' (ID: 3264)
  Prédit: 'cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -2.7610454708337784e-05
    2. ' cur' → logprob: -10.500027656555176
    3. '(cur' → logprob: -19.12502670288086
    4. '	cur' → logprob: -20.50002670288086
    5. '               ' → logprob: -21.12502670288086
    6. '[cur' → logprob: -21.87502670288086
    7. '   ' → logprob: -22.37502670288086
    8. ' ' → logprob: -22.75002670288086
    9. '_cur' → logprob: -23.37502670288086
    10. 'curr' → logprob: -23.37502670288086

Token 679: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038078442215919495
    2. ',n' → logprob: -3.288078546524048
    3. ' ,' → logprob: -10.663078308105469
    4. 'n' → logprob: -12.163078308105469
    5. ',next' → logprob: -12.788078308105469
    6. ',
' → logprob: -13.163078308105469
    7. '(n' → logprob: -13.288078308105469
    8. '),' → logprob: -14.788078308105469
    9. '‌,' → logprob: -15.663078308105469
    10. ' ' → logprob: -15.788078308105469

Token 680: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00011129142512800172
    2. ' nxt' → logprob: -9.12511157989502
    3. 'next' → logprob: -14.25011157989502
    4. '   ' → logprob: -14.25011157989502
    5. '
' → logprob: -15.37511157989502
    6. '(n' → logprob: -15.87511157989502
    7. 'nx' → logprob: -16.000110626220703
    8. '	n' → logprob: -16.250110626220703
    9. '[n' → logprob: -16.500110626220703
    10. ')n' → logprob: -16.875110626220703

Token 681: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.4005768299102783
    2. '))' → logprob: -1.1505768299102783
    3. ')' → logprob: -4.525576591491699
    4. ')
' → logprob: -5.900576591491699
    5. '))
' → logprob: -10.9005765914917
    6. '))

' → logprob: -11.4005765914917
    7. '               ' → logprob: -11.5255765914917
    8. ' ))
' → logprob: -12.6505765914917
    9. '                   ' → logprob: -14.1505765914917
    10. '),' → logprob: -14.6505765914917

Token 682: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00036965898470953107
    2. 'face' → logprob: -8.500370025634766
    3. ' face' → logprob: -10.000370025634766
    4. '   ' → logprob: -10.125370025634766
    5. '			' → logprob: -10.750370025634766
    6. '           ' → logprob: -10.875370025634766
    7. '       ' → logprob: -11.500370025634766
    8. '```' → logprob: -11.625370025634766
    9. '	           ' → logprob: -12.375370025634766
    10. '              ' → logprob: -13.000370025634766

Token 683: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' (adapté à ' face') → logprob: -0.00016623330884613097
    2. '               ' → logprob: -9.000165939331055
    3. '           ' → logprob: -10.125165939331055
    4. ' face' → logprob: -13.375165939331055
    5. '   ' → logprob: -13.875165939331055
    6. '                   ' → logprob: -16.625165939331055
    7. '       ' → logprob: -17.125165939331055
    8. '             ' → logprob: -18.375165939331055
    9. '              ' → logprob: -18.625165939331055
    10. '            ' → logprob: -18.875165939331055

Token 684: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009159822366200387
    2. '.' → logprob: -7.000916004180908
    3. ' .' → logprob: -13.12591552734375
    4. '.app' → logprob: -13.37591552734375
    5. '.ap' → logprob: -14.00091552734375
    6. 'append' → logprob: -16.75091552734375
    7. '​.' → logprob: -17.75091552734375
    8. '].' → logprob: -18.37591552734375
    9. ').' → logprob: -19.00091552734375
    10. '.add' → logprob: -19.12591552734375

Token 685: '(cur' (ID: 34723)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.029751643538475037
    2. '(cur' → logprob: -3.5297515392303467
    3. ' cur' → logprob: -13.779751777648926
    4. '[cur' → logprob: -17.02975082397461
    5. '	cur' → logprob: -17.65475082397461
    6. '(' → logprob: -19.27975082397461
    7. '_cur' → logprob: -19.90475082397461
    8. '(c' → logprob: -20.27975082397461
    9. 'Cur' → logprob: -21.15475082397461
    10. '.cur' → logprob: -21.27975082397461

Token 686: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16024160385131836
    2. ')
' → logprob: -1.9102416038513184
    3. ')

' → logprob: -11.660242080688477
    4. ')
' → logprob: -12.035242080688477
    5. '               ' → logprob: -13.410242080688477
    6. ' )' → logprob: -14.910242080688477
    7. ' )
' → logprob: -15.035242080688477
    8. ')#' → logprob: -16.410242080688477
    9. ')`
' → logprob: -16.785242080688477
    10. '),' → logprob: -16.910242080688477

Token 687: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006621609791181982
    2. ',' → logprob: -8.125661849975586
    3. '                
' → logprob: -8.750661849975586
    4. 'next' → logprob: -9.375661849975586
    5. ' cur' → logprob: -10.125661849975586
    6. 'cur' → logprob: -10.625661849975586
    7. ' next' → logprob: -10.875661849975586
    8. 'n' → logprob: -12.125661849975586
    9. ' ,' → logprob: -12.250661849975586
    10. '```' → logprob: -12.375661849975586

Token 688: ' #' (ID: 1069)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -1.0718063116073608
    2. 'idx' → logprob: -1.1968063116073608
    3. '#' (adapté à ' #') → logprob: -1.4468063116073608
    4. 'next' → logprob: -2.6968064308166504
    5. 'edges' → logprob: -4.69680643081665
    6. 'n' → logprob: -4.94680643081665
    7. 'pos' → logprob: -5.32180643081665
    8. 'index' → logprob: -5.32180643081665
    9. 'ne' → logprob: -5.44680643081665
    10. 'found' → logprob: -5.69680643081665

Token 689: ' At' (ID: 3604)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.16440798342227936
    2. '#' → logprob: -2.539407968521118
    3. 'idx' → logprob: -3.414407968521118
    4. 'adj' → logprob: -4.539408206939697
    5. 'nbr' → logprob: -4.539408206939697
    6. 'ne' → logprob: -4.914408206939697
    7. 'nei' → logprob: -6.039408206939697
    8. 'n' → logprob: -6.164408206939697
    9. 'pos' → logprob: -6.664408206939697
    10. 'edges' → logprob: -6.914408206939697

Token 690: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04301174357533455
    2. 'adj' → logprob: -4.168011665344238
    3. ' nxt' → logprob: -4.543011665344238
    4. 'nx' → logprob: -5.418011665344238
    5. 'next' → logprob: -5.668011665344238
    6. 'idx' → logprob: -5.668011665344238
    7. 'cur' → logprob: -6.418011665344238
    8. 'index' → logprob: -7.543011665344238
    9. 'v' → logprob: -7.918011665344238
    10. 'pos' → logprob: -8.168011665344238

Token 691: ' vertex' (ID: 25363)
  Prédit: '_adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.8483965396881104
    2. '_idx' → logprob: -1.9733965396881104
    3. 'adj' → logprob: -1.9733965396881104
    4. 'idx' → logprob: -2.4733965396881104
    5. ',' → logprob: -2.9733965396881104
    6. '_index' → logprob: -3.0983965396881104
    7. ''s' → logprob: -3.3483965396881104
    8. '_neighbors' → logprob: -3.8483965396881104
    9. 'index' → logprob: -4.348396301269531
    10. 'x' → logprob: -4.973396301269531

Token 692: ',' (ID: 11)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -1.00606107711792
    2. 'idx' → logprob: -1.50606107711792
    3. 'neighbors' → logprob: -2.25606107711792
    4. ',' → logprob: -2.25606107711792
    5. '#' → logprob: -2.38106107711792
    6. 'v' → logprob: -3.63106107711792
    7. '               ' → logprob: -3.63106107711792
    8. ':' → logprob: -4.63106107711792
    9. ' adj' → logprob: -5.00606107711792
    10. '       ' → logprob: -5.25606107711792

Token 693: ' find' (ID: 1646)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.29416003823280334
    2. 'adj' → logprob: -1.919160008430481
    3. 'idx' → logprob: -3.0441601276397705
    4. '#' → logprob: -3.6691601276397705
    5. 'edges' → logprob: -5.044159889221191
    6. 'nbr' → logprob: -5.169159889221191
    7. 'ne' → logprob: -5.669159889221191
    8. 'pos' → logprob: -5.669159889221191
    9. 'nei' → logprob: -5.669159889221191
    10. 'n' → logprob: -6.544159889221191

Token 694: ' the' (ID: 290)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.45114728808403015
    2. 'adj' → logprob: -1.4511473178863525
    3. 'pos' → logprob: -2.9511473178863525
    4. 'index' → logprob: -3.5761473178863525
    5. 'the' → logprob: -3.5761473178863525
    6. '#' → logprob: -4.951147079467773
    7. ' idx' → logprob: -5.826147079467773
    8. 'next' → logprob: -5.951147079467773
    9. 'vi' → logprob: -6.201147079467773
    10. '   ' → logprob: -7.076147079467773

Token 695: ' edge' (ID: 11165)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.3082612156867981
    2. 'idx' → logprob: -1.6832611560821533
    3. 'index' → logprob: -2.5582611560821533
    4. 'pos' → logprob: -7.058261394500732
    5. 'next' → logprob: -7.933261394500732
    6. 'position' → logprob: -8.308260917663574
    7. 'i' → logprob: -8.558260917663574
    8. '#' → logprob: -9.308260917663574
    9. '(adj' → logprob: -9.683260917663574
    10. 'def' → logprob: -10.058260917663574

Token 696: ' (' (ID: 350)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.004541277885437
    2. 'adj' → logprob: -1.504541277885437
    3. 'index' → logprob: -2.0045413970947266
    4. 'after' → logprob: -2.1295413970947266
    5. 'in' → logprob: -2.8795413970947266
    6. 'from' → logprob: -3.3795413970947266
    7. 'to' → logprob: -4.379541397094727
    8. '_idx' → logprob: -4.504541397094727
    9. '_index' → logprob: -4.879541397094727
    10. 'out' → logprob: -5.004541397094727

Token 697: 'n' (ID: 77)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.2535792291164398
    2. 'u' → logprob: -2.6285791397094727
    3. 'cur' → logprob: -2.8785791397094727
    4. '(adj' → logprob: -3.7535791397094727
    5. '[u' → logprob: -4.628579139709473
    6. 'n' → logprob: -4.628579139709473
    7. '(u' → logprob: -4.878579139709473
    8. 'next' → logprob: -5.003579139709473
    9. 'vi' → logprob: -5.128579139709473
    10. 'idx' → logprob: -5.378579139709473

Token 698: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.07481610029935837
    2. 'ext' → logprob: -3.0748159885406494
    3. 'x' → logprob: -3.8248159885406494
    4. 'idx' → logprob: -6.4498162269592285
    5. 'ex' → logprob: -7.1998162269592285
    6. 'xi' → logprob: -7.9498162269592285
    7. 'adj' → logprob: -8.19981575012207
    8. 'e' → logprob: -8.57481575012207
    9. 'n' → logprob: -8.94981575012207
    10. 'vi' → logprob: -9.69981575012207

Token 699: ' ->' (ID: 2747)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008593768812716007
    2. ')' → logprob: -5.758593559265137
    3. ' ,' → logprob: -6.383593559265137
    4. ',n' → logprob: -7.133593559265137
    5. ',next' → logprob: -7.133593559265137
    6. '),' → logprob: -8.008593559265137
    7. ',u' → logprob: -8.383593559265137
    8. 'to' → logprob: -8.633593559265137
    9. 'index' → logprob: -9.133593559265137
    10. 'idx' → logprob: -9.133593559265137

Token 700: ' next' (ID: 2613)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.5764746069908142
    2. 'u' → logprob: -1.326474666595459
    3. 'cur' → logprob: -2.951474666595459
    4. ')' → logprob: -3.576474666595459
    5. '[' → logprob: -3.826474666595459
    6. '[u' → logprob: -4.076474666595459
    7. 'next' → logprob: -4.576474666595459
    8. '[cur' → logprob: -4.951474666595459
    9. ' adj' → logprob: -5.451474666595459
    10. '(adj' → logprob: -5.451474666595459

Token 701: '_w' (ID: 3567)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.5310205221176147
    2. '_index' → logprob: -1.0310205221176147
    3. '_i' → logprob: -3.6560206413269043
    4. ')' → logprob: -4.156020641326904
    5. 'idx' → logprob: -4.781020641326904
    6. 'index' → logprob: -6.406020641326904
    7. '_vertex' → logprob: -6.656020641326904
    8. 'i' → logprob: -6.906020641326904
    9. '_edge' → logprob: -8.406020164489746
    10. '_)' → logprob: -9.031020164489746

Token 702: ')' (ID: 8)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.35855045914649963
    2. ')' → logprob: -2.358550548553467
    3. 'i' → logprob: -2.983550548553467
    4. 'idx' → logprob: -3.108550548553467
    5. '_idx' → logprob: -3.733550548553467
    6. '_adj' → logprob: -3.858550548553467
    7. 'edge' → logprob: -4.358550548553467
    8. 'all' → logprob: -4.483550548553467
    9. 'vi' → logprob: -4.483550548553467
    10. '_index' → logprob: -4.733550548553467

Token 703: ' which' (ID: 1118)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6959584355354309
    2. 'idx' → logprob: -1.5709583759307861
    3. '_index' → logprob: -1.9459583759307861
    4. 'index' → logprob: -2.445958375930786
    5. '_idx' → logprob: -3.195958375930786
    6. ' =' → logprob: -5.070958614349365
    7. 'indices' → logprob: -5.570958614349365
    8. '                   ' → logprob: -6.195958614349365
    9. '_indices' → logprob: -6.195958614349365
    10. ',' → logprob: -6.570958614349365

Token 704: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.46690833568573
    2. 'adj' → logprob: -1.46690833568573
    3. '=' → logprob: -2.9669084548950195
    4. ' is' → logprob: -3.4669084548950195
    5. 'next' → logprob: -4.2169084548950195
    6. 'index' → logprob: -4.4669084548950195
    7. 'idx' → logprob: -4.9669084548950195
    8. '#' → logprob: -5.0919084548950195
    9. ' adj' → logprob: -5.3419084548950195
    10. 'has' → logprob: -6.2169084548950195

Token 705: ' next' (ID: 2613)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.00028815300902351737
    2. 'the' → logprob: -9.250288009643555
    3. 'after' → logprob: -9.625288009643555
    4. 'next' → logprob: -9.875288009643555
    5. ' adj' → logprob: -10.000288009643555
    6. 'vi' → logprob: -11.625288009643555
    7. '(adj' → logprob: -12.000288009643555
    8. '   ' → logprob: -13.000288009643555
    9. 'just' → logprob: -13.375288009643555
    10. 'im' → logprob: -13.375288009643555

Token 706: ' CC' (ID: 21547)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.23725302517414093
    2. ' in' → logprob: -2.737252950668335
    3. 'edge' → logprob: -2.862252950668335
    4. 'w' → logprob: -3.237252950668335
    5. '_w' → logprob: -4.362253189086914
    6. 'index' → logprob: -4.487253189086914
    7. 'adj' → logprob: -4.737253189086914
    8. 'after' → logprob: -4.862253189086914
    9. 'neighbor' → logprob: -5.987253189086914
    10. ' edge' → logprob: -5.987253189086914

Token 707: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.003915614914149046
    2. 'w' → logprob: -5.628915786743164
    3. 'Wind' → logprob: -10.378915786743164
    4. 'Ward' → logprob: -10.378915786743164
    5. 'wind' → logprob: -10.941415786743164
    6. 'Wnd' → logprob: -11.191415786743164
    7. 'ward' → logprob: -11.253915786743164
    8. 'Wise' → logprob: -11.753915786743164
    9. 'Way' → logprob: -11.753915786743164
    10. 'adj' → logprob: -11.816415786743164

Token 708: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.9557158350944519
    2. ' edge' → logprob: -1.3307158946990967
    3. ' neighbor' → logprob: -2.3307158946990967
    4. ' in' → logprob: -2.7057158946990967
    5. 'neighbor' → logprob: -2.7057158946990967
    6. 'adj' → logprob: -2.8307158946990967
    7. 'in' → logprob: -3.8307158946990967
    8. '_neighbor' → logprob: -4.830715656280518
    9. '_edge' → logprob: -4.955715656280518
    10. 'index' → logprob: -5.830715656280518

Token 709: ' from' (ID: 591)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.49481940269470215
    2. 'in' → logprob: -1.7448194026947021
    3. ' after' → logprob: -2.619819402694702
    4. ' around' → logprob: -2.994819402694702
    5. 'after' → logprob: -2.994819402694702
    6. 'around' → logprob: -3.994819402694702
    7. 'index' → logprob: -5.244819641113281
    8. '                   ' → logprob: -5.369819641113281
    9. '               ' → logprob: -5.369819641113281
    10. ',' → logprob: -6.244819641113281

Token 710: ' edge' (ID: 11165)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.45668861269950867
    2. 'n' → logprob: -1.081688642501831
    3. 'cur' → logprob: -4.706688404083252
    4. 'vi' → logprob: -4.706688404083252
    5. ' nxt' → logprob: -5.706688404083252
    6. '(adj' → logprob: -5.831688404083252
    7. 'next' → logprob: -7.081688404083252
    8. '   ' → logprob: -7.581688404083252
    9. ' adj' → logprob: -7.831688404083252
    10. 'the' → logprob: -8.08168888092041

Token 711: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.017272284254431725
    2. ' (' → logprob: -5.392272472381592
    3. 'index' → logprob: -5.767272472381592
    4. '(' → logprob: -5.767272472381592
    5. '               ' → logprob: -6.642272472381592
    6. '           ' → logprob: -7.267272472381592
    7. '(next' → logprob: -7.267272472381592
    8. '_index' → logprob: -7.392272472381592
    9. 'n' → logprob: -7.642272472381592
    10. ' =' → logprob: -7.767272472381592

Token 712: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002390398643910885
    2. ' nxt' → logprob: -6.627390384674072
    3. '   ' → logprob: -8.25239086151123
    4. '           ' → logprob: -8.75239086151123
    5. 'next' → logprob: -9.12739086151123
    6. '
' → logprob: -9.37739086151123
    7. 'cur' → logprob: -9.50239086151123
    8. 'vi' → logprob: -9.75239086151123
    9. '       ' → logprob: -10.00239086151123
    10. ')' → logprob: -10.12739086151123

Token 713: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.00021105022460687906
    2. 'x' → logprob: -8.500210762023926
    3. 'ext' → logprob: -12.250210762023926
    4. '```' → logprob: -13.625210762023926
    5. 't' → logprob: -14.250210762023926
    6. 'n' → logprob: -15.625210762023926
    7. '``' → logprob: -16.000211715698242
    8. '
' → logprob: -16.000211715698242
    9. '   ' → logprob: -16.375211715698242
    10. '`' → logprob: -16.500211715698242

Token 714: '->' (ID: 609)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12106573581695557
    2. ',n' → logprob: -2.496065616607666
    3. '->' → logprob: -4.621065616607666
    4. 'to' → logprob: -4.996065616607666
    5. ')' → logprob: -5.996065616607666
    6. 'n' → logprob: -6.371065616607666
    7. ' ,' → logprob: -6.496065616607666
    8. ' ->' → logprob: -6.621065616607666
    9. ',v' → logprob: -6.621065616607666
    10. 'vi' → logprob: -6.746065616607666

Token 715: 'cur' (ID: 3264)
  Prédit: 'cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0005772201111540198
    2. ' cur' → logprob: -7.500577449798584
    3. 'u' → logprob: -11.125576972961426
    4. 'cu' → logprob: -12.500576972961426
    5. 'c' → logprob: -13.125576972961426
    6. '   ' → logprob: -13.500576972961426
    7. '	cur' → logprob: -14.625576972961426
    8. '
' → logprob: -14.750576972961426
    9. '[cur' → logprob: -14.750576972961426
    10. '(cur' → logprob: -15.250576972961426

Token 716: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00806886050850153
    2. ')
' → logprob: -5.008069038391113
    3. ').' → logprob: -8.258069038391113
    4. '):
' → logprob: -8.633069038391113
    5. ')

' → logprob: -8.758069038391113
    6. '),' → logprob: -8.758069038391113
    7. '               ' → logprob: -9.383069038391113
    8. 'n' → logprob: -9.383069038391113
    9. '):

' → logprob: -9.508069038391113
    10. '           ' → logprob: -9.633069038391113

Token 717: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012996421428397298
    2. 'index' → logprob: -7.501299858093262
    3. '
' → logprob: -8.376299858093262
    4. 'idx' → logprob: -9.126299858093262
    5. '[' → logprob: -9.751299858093262
    6. 'next' → logprob: -10.126299858093262
    7. 'w' → logprob: -10.376299858093262
    8. ' index' → logprob: -10.376299858093262
    9. '                
' → logprob: -10.501299858093262
    10. ',' → logprob: -10.501299858093262

Token 718: ' #' (ID: 1069)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.5624284744262695
    2. 'pos' → logprob: -1.8124284744262695
    3. 'neighbors' → logprob: -2.0624284744262695
    4. 'edges' → logprob: -2.4374284744262695
    5. 'index' → logprob: -3.8124284744262695
    6. 'w' → logprob: -4.6874284744262695
    7. 'adj' → logprob: -5.4374284744262695
    8. 'ne' → logprob: -6.0624284744262695
    9. 'nbr' → logprob: -6.5624284744262695
    10. 'ind' → logprob: -6.5624284744262695

Token 719: ' get' (ID: 717)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.2453380525112152
    2. 'pos' → logprob: -2.245337963104248
    3. ' idx' → logprob: -3.245337963104248
    4. 'index' → logprob: -3.370337963104248
    5. 'neighbors' → logprob: -4.620337963104248
    6. 'edges' → logprob: -4.995337963104248
    7. '               ' → logprob: -5.370337963104248
    8. 'ind' → logprob: -5.745337963104248
    9. '                   ' → logprob: -5.870337963104248
    10. 'adj' → logprob: -6.370337963104248

Token 720: ' adjacency' (ID: 177015)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.25651344656944275
    2. 'index' → logprob: -1.8815134763717651
    3. ' idx' → logprob: -3.0065133571624756
    4. 'pos' → logprob: -4.506513595581055
    5. ' index' → logprob: -5.756513595581055
    6. 'adj' → logprob: -6.006513595581055
    7. 'i' → logprob: -6.256513595581055
    8. '   ' → logprob: -6.756513595581055
    9. '_index' → logprob: -7.006513595581055
    10. 'ind' → logprob: -7.131513595581055

Token 721: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.2333554029464722
    2. '_list' → logprob: -1.3583554029464722
    3. '[n' → logprob: -1.8583554029464722
    4. 'index' → logprob: -2.6083555221557617
    5. '_index' → logprob: -2.8583555221557617
    6. ' =' → logprob: -2.8583555221557617
    7. 'n' → logprob: -3.1083555221557617
    8. '_idx' → logprob: -3.7333555221557617
    9. 'idx' → logprob: -4.608355522155762
    10. '_n' → logprob: -4.608355522155762

Token 722: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10321690887212753
    2. '=' → logprob: -3.1032168865203857
    3. 'idx' → logprob: -4.478217124938965
    4. 'n' → logprob: -4.728217124938965
    5. '_n' → logprob: -4.853217124938965
    6. '_idx' → logprob: -5.103217124938965
    7. '_list' → logprob: -5.478217124938965
    8. 'of' → logprob: -5.478217124938965
    9. '   ' → logprob: -5.978217124938965
    10. 'for' → logprob: -6.728217124938965

Token 723: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005026675295084715
    2. ' nxt' → logprob: -5.380026817321777
    3. '[n' → logprob: -8.630026817321777
    4. 'nth' → logprob: -9.630026817321777
    5. 'next' → logprob: -10.005026817321777
    6. 'nx' → logprob: -10.380026817321777
    7. '[next' → logprob: -11.130026817321777
    8. 'adj' → logprob: -11.380026817321777
    9. '```' → logprob: -11.880026817321777
    10. '(n' → logprob: -12.130026817321777

Token 724: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1943594217300415
    2. 'idx' → logprob: -1.5693594217300415
    3. ',' → logprob: -2.319359302520752
    4. '           ' → logprob: -2.444359302520752
    5. '               ' → logprob: -2.694359302520752
    6. 'index' → logprob: -2.819359302520752
    7. '                   ' → logprob: -3.194359302520752
    8. '   ' → logprob: -3.694359302520752
    9. ' and' → logprob: -4.319359302520752
    10. '_idx' → logprob: -4.319359302520752

Token 725: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5989132523536682
    2. 'idx' → logprob: -1.4739131927490234
    3. 'index' → logprob: -2.3489131927490234
    4. '_idx' → logprob: -3.8489131927490234
    5. '_index' → logprob: -3.9739131927490234
    6. ' =' → logprob: -4.348913192749023
    7. '                   ' → logprob: -4.348913192749023
    8. ',' → logprob: -4.473913192749023
    9. '           ' → logprob: -5.348913192749023
    10. ' and' → logprob: -5.348913192749023

Token 726: ' neighbors' (ID: 31655)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.2623897194862366
    2. 'pos' → logprob: -1.8873896598815918
    3. 'adj' → logprob: -3.762389659881592
    4. 'index' → logprob: -4.012389659881592
    5. 'neighbors' (adapté à ' neighbors') → logprob: -4.137389659881592
    6. 'w' → logprob: -5.262389659881592
    7. 'ind' → logprob: -5.262389659881592
    8. 'edges' → logprob: -6.262389659881592
    9. 'lst' → logprob: -6.512389659881592
    10. 'n' → logprob: -7.137389659881592

Token 727: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740932583808899
    2. '=' → logprob: -0.9740932583808899
    3. ',' → logprob: -11.724093437194824
    4. '=n' → logprob: -12.849093437194824
    5. '   ' → logprob: -13.349093437194824
    6. ':' → logprob: -13.974093437194824
    7. 's' → logprob: -14.099093437194824
    8. ')' → logprob: -14.599093437194824
    9. 'n' → logprob: -15.224093437194824
    10. '[' → logprob: -16.224092483520508

Token 728: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -6.670925358776003e-05
    2. ' adj' → logprob: -9.625066757202148
    3. 'ad' → logprob: -15.250066757202148
    4. '   ' → logprob: -16.00006675720215
    5. '[' → logprob: -16.12506675720215
    6. '(adj' → logprob: -16.50006675720215
    7. 'adm' → logprob: -18.75006675720215
    8. ' ' → logprob: -19.37506675720215
    9. 'aj' → logprob: -19.62506675720215
    10. '           ' → logprob: -20.12506675720215

Token 729: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0025315487291663885
    2. 'n' → logprob: -6.0025315284729
    3. '(n' → logprob: -10.127532005310059
    4. '[next' → logprob: -12.377532005310059
    5. 's' → logprob: -13.502532005310059
    6. '[' → logprob: -13.627532005310059
    7. '```' → logprob: -13.752532005310059
    8. '=n' → logprob: -13.877532005310059
    9. '_n' → logprob: -14.127532005310059
    10. '
' → logprob: -14.252532005310059

Token 730: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.0003613256849348545
    2. 'x' → logprob: -8.500361442565918
    3. 'ext' → logprob: -9.250361442565918
    4. 't' → logprob: -10.000361442565918
    5. '[' → logprob: -12.250361442565918
    6. '[next' → logprob: -12.625361442565918
    7. '```' → logprob: -12.750361442565918
    8. '[n' → logprob: -12.875361442565918
    9. ' nxt' → logprob: -14.000361442565918
    10. '[t' → logprob: -14.375361442565918

Token 731: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.011195892468094826
    2. ']' → logprob: -4.511195659637451
    3. ')
' → logprob: -9.63619613647461
    4. ']

' → logprob: -10.13619613647461
    5. ']
' → logprob: -10.76119613647461
    6. ')' → logprob: -12.26119613647461
    7. '])
' → logprob: -12.63619613647461
    8. '           ' → logprob: -12.76119613647461
    9. '       ' → logprob: -13.13619613647461
    10. ')]
' → logprob: -13.51119613647461

Token 732: '               ' (ID: 506)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.6904048323631287
    2. 'idx' → logprob: -0.8154048323631287
    3. 'i' → logprob: -3.5654048919677734
    4. '               ' → logprob: -4.190404891967773
    5. 'pos' → logprob: -5.940404891967773
    6. 'ind' → logprob: -5.940404891967773
    7. ' idx' → logprob: -6.190404891967773
    8. '```' → logprob: -6.815404891967773
    9. '           ' → logprob: -6.940404891967773
    10. '#' → logprob: -7.565404891967773

Token 733: ' index' (ID: 3472)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.12656694650650024
    2. 'pos' → logprob: -2.7515668869018555
    3. 'index' (adapté à ' index') → logprob: -3.0015668869018555
    4. 'ind' → logprob: -6.0015668869018555
    5. '#' → logprob: -7.0015668869018555
    6. 'k' → logprob: -7.6265668869018555
    7. 'prev' → logprob: -8.001566886901855
    8. 'i' → logprob: -8.501566886901855
    9. 'p' → logprob: -8.501566886901855
    10. 'cur' → logprob: -8.501566886901855

Token 734: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17999130487442017
    2. ' =' → logprob: -1.8049912452697754
    3. 'of' → logprob: -9.054991722106934
    4. '_of' → logprob: -10.179991722106934
    5. '=n' → logprob: -10.804991722106934
    6. '(n' → logprob: -11.679991722106934
    7. '=lambda' → logprob: -12.054991722106934
    8. '_=' → logprob: -12.179991722106934
    9. '(' → logprob: -12.304991722106934
    10. '_n' → logprob: -12.429991722106934

Token 735: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -1.0564331205387134e-05
    2. ' neighbors' → logprob: -11.62501049041748
    3. '0' → logprob: -14.00001049041748
    4. '(ne' → logprob: -15.62501049041748
    5. '[' → logprob: -15.62501049041748
    6. '(' → logprob: -16.375011444091797
    7. 'bis' → logprob: -16.375011444091797
    8. 'neighbor' → logprob: -16.500011444091797
    9. 'next' → logprob: -17.875011444091797
    10. '[(' → logprob: -18.000011444091797

Token 736: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.04035799950361252
    2. ' =' → logprob: -4.415358066558838
    3. '=' → logprob: -4.540358066558838
    4. '(n' → logprob: -5.040358066558838
    5. '[n' → logprob: -5.290358066558838
    6. 'index' → logprob: -6.540358066558838
    7. '=n' → logprob: -6.665358066558838
    8. '.' → logprob: -7.540358066558838
    9. '(ne' → logprob: -8.16535758972168
    10. '=(' → logprob: -8.54035758972168

Token 737: '(cur' (ID: 34723)
  Prédit: '(cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -5.872261317563243e-05
    2. 'cur' → logprob: -9.750059127807617
    3. '(' → logprob: -15.750059127807617
    4. '(c' → logprob: -16.125059127807617
    5. '[cur' → logprob: -16.625059127807617
    6. ' cur' → logprob: -18.375059127807617
    7. '	cur' → logprob: -19.000059127807617
    8. '((' → logprob: -19.500059127807617
    9. '(curr' → logprob: -20.625059127807617
    10. ' (' → logprob: -21.625059127807617

Token 738: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034108434338122606
    2. ')+' → logprob: -5.753410816192627
    3. ')
' → logprob: -8.378411293029785
    4. '+' → logprob: -13.628411293029785
    5. '           ' → logprob: -13.878411293029785
    6. ' )' → logprob: -14.503411293029785
    7. ' +' → logprob: -15.878411293029785
    8. ']' → logprob: -16.00341033935547
    9. ')+(' → logprob: -16.37841033935547
    10. ')
' → logprob: -16.37841033935547

Token 739: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03293484449386597
    2. ' next' → logprob: -3.7829349040985107
    3. 'next' → logprob: -4.782934665679932
    4. 'index' → logprob: -7.782934665679932
    5. '```' → logprob: -7.907934665679932
    6. '                   ' → logprob: -9.15793514251709
    7. ' index' → logprob: -9.65793514251709
    8. ',' → logprob: -10.15793514251709
    9. '           ' → logprob: -10.28293514251709
    10. '                
' → logprob: -10.40793514251709

Token 740: ' #' (ID: 1069)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.013125755824148655
    2. '(next' → logprob: -4.888125896453857
    3. ' next' → logprob: -5.763125896453857
    4. 'index' → logprob: -6.513125896453857
    5. '               ' → logprob: -7.888125896453857
    6. '                   ' → logprob: -8.5131254196167
    7. '```' → logprob: -8.8881254196167
    8. '[next' → logprob: -9.5131254196167
    9. ' (' → logprob: -11.2631254196167
    10. ' nxt' → logprob: -11.2631254196167

Token 741: ' Next' (ID: 13886)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0521126389503479
    2. ' next' → logprob: -3.052112579345703
    3. '               ' → logprob: -6.177112579345703
    4. 'index' → logprob: -7.302112579345703
    5. 'w' → logprob: -7.927112579345703
    6. '```' → logprob: -9.052112579345703
    7. '                   ' → logprob: -9.302112579345703
    8. '``' → logprob: -9.927112579345703
    9. ' index' → logprob: -10.427112579345703
    10. ' nxt' → logprob: -10.552112579345703

Token 742: ' edge' (ID: 11165)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.6490868330001831
    2. 'index' → logprob: -1.399086833000183
    3. 'next' → logprob: -2.1490869522094727
    4. 'w' → logprob: -3.6490869522094727
    5. 'idx' → logprob: -3.7740869522094727
    6. '_index' → logprob: -4.274086952209473
    7. '                   ' → logprob: -5.024086952209473
    8. ' =' → logprob: -5.149086952209473
    9. '_next' → logprob: -5.149086952209473
    10. ' next' → logprob: -5.524086952209473

Token 743: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2053775042295456
    2. '=' → logprob: -1.705377459526062
    3. ' is' → logprob: -7.330377578735352
    4. 'w' → logprob: -7.455377578735352
    5. '_w' → logprob: -7.830377578735352
    6. 'next' → logprob: -7.830377578735352
    7. 'idx' → logprob: -8.080377578735352
    8. 'n' → logprob: -8.330377578735352
    9. '               ' → logprob: -8.455377578735352
    10. 'to' → logprob: -8.955377578735352

Token 744: ' the' (ID: 290)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.016674093902111053
    2. ' neighbors' → logprob: -4.141674041748047
    3. '(ne' → logprob: -7.766674041748047
    4. '   ' → logprob: -10.141674041748047
    5. '(n' → logprob: -10.266674041748047
    6. ' (' → logprob: -10.391674041748047
    7. '               ' → logprob: -10.516674041748047
    8. '(' → logprob: -10.766674041748047
    9. '                   ' → logprob: -11.016674041748047
    10. '           ' → logprob: -11.141674041748047

Token 745: ' one' (ID: 1001)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.0011256909929215908
    2. '(ne' → logprob: -7.376125812530518
    3. ' neighbors' → logprob: -7.876125812530518
    4. 'neighbor' → logprob: -9.87612533569336
    5. '(' → logprob: -10.62612533569336
    6. '(n' → logprob: -11.37612533569336
    7. 'n' → logprob: -11.62612533569336
    8. '   ' → logprob: -11.87612533569336
    9. ' (' → logprob: -11.87612533569336
    10. 'ne' → logprob: -12.12612533569336

Token 746: ' before' (ID: 2254)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.02922304905951023
    2. '                   ' → logprob: -4.6542229652404785
    3. '               ' → logprob: -5.5292229652404785
    4. '[next' → logprob: -5.7792229652404785
    5. ' at' → logprob: -6.2792229652404785
    6. '[' → logprob: -6.2792229652404785
    7. '```' → logprob: -6.2792229652404785
    8. ' (' → logprob: -6.6542229652404785
    9. '((' → logprob: -6.9042229652404785
    10. '           ' → logprob: -7.1542229652404785

Token 747: ' '' (ID: 461)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.19311363995075226
    2. '(index' → logprob: -1.9431136846542358
    3. ' index' → logprob: -3.5681135654449463
    4. ' in' → logprob: -5.943113803863525
    5. 'in' → logprob: -7.943113803863525
    6. '[index' → logprob: -8.318113327026367
    7. ' (' → logprob: -8.443113327026367
    8. 'neighbors' → logprob: -8.693113327026367
    9. '```' → logprob: -9.068113327026367
    10. '               ' → logprob: -9.068113327026367

Token 748: 'cur' (ID: 3264)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.03996554762125015
    2. 'neighbors' → logprob: -3.4149656295776367
    3. 'cur' → logprob: -5.789965629577637
    4. '(index' → logprob: -6.789965629577637
    5. ' index' → logprob: -6.914965629577637
    6. ' neighbors' → logprob: -7.039965629577637
    7. '(' → logprob: -9.539965629577637
    8. '(cur' → logprob: -10.414965629577637
    9. '(ne' → logprob: -10.789965629577637
    10. 'indices' → logprob: -11.164965629577637

Token 749: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9070240259170532
    2. 'in' → logprob: -2.0320239067077637
    3. ']' → logprob: -2.2820239067077637
    4. 'index' → logprob: -2.2820239067077637
    5. ' (' → logprob: -2.5320239067077637
    6. '(index' → logprob: -2.5320239067077637
    7. ',' → logprob: -3.6570239067077637
    8. '               ' → logprob: -3.9070239067077637
    9. '                   ' → logprob: -4.907023906707764
    10. '((' → logprob: -5.157023906707764

Token 750: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.827387273311615
    2. ' (' → logprob: -1.2023873329162598
    3. '(index' → logprob: -2.5773873329162598
    4. '               ' → logprob: -2.7023873329162598
    5. 'in' → logprob: -3.2023873329162598
    6. ',' → logprob: -4.20238733291626
    7. 'index' → logprob: -4.32738733291626
    8. ']' → logprob: -4.82738733291626
    9. '[index' → logprob: -4.82738733291626
    10. '```' → logprob: -4.82738733291626

Token 751: ' CC' (ID: 21547)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.0019446993246674538
    2. ' neighbors' → logprob: -6.251944541931152
    3. '_neighbors' → logprob: -12.376944541931152
    4. 'adj' → logprob: -12.376944541931152
    5. '```' → logprob: -13.251944541931152
    6. 'the' → logprob: -13.376944541931152
    7. '   ' → logprob: -14.001944541931152
    8. 'indices' → logprob: -14.251944541931152
    9. '[' → logprob: -14.251944541931152
    10. 'neighbor' → logprob: -14.376944541931152

Token 752: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0001858982432167977
    2. 'w' → logprob: -8.7501859664917
    3. 'neighbors' → logprob: -12.2501859664917
    4. 'wn' → logprob: -13.1251859664917
    5. '
' → logprob: -13.5001859664917
    6. ' W' → logprob: -13.6876859664917
    7. '   ' → logprob: -13.7501859664917
    8. 'Wind' → logprob: -13.8126859664917
    9. 'Wnd' → logprob: -14.0001859664917
    10. '

' → logprob: -14.1876859664917

Token 753: ' order' (ID: 2569)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.3362424671649933
    2. '               ' → logprob: -1.711242437362671
    3. 'order' → logprob: -3.586242437362671
    4. '           ' → logprob: -3.961242437362671
    5. 'index' → logprob: -4.58624267578125
    6. ' neighbors' → logprob: -4.58624267578125
    7. '_neighbors' → logprob: -4.71124267578125
    8. 'ordering' → logprob: -5.46124267578125
    9. 'adj' → logprob: -5.71124267578125
    10. ')' → logprob: -5.83624267578125

Token 754: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03392656147480011
    2. 'index' → logprob: -3.908926486968994
    3. ' (' → logprob: -5.783926486968994
    4. '(index' → logprob: -6.283926486968994
    5. 'next' → logprob: -6.283926486968994
    6. ',' → logprob: -6.658926486968994
    7. '(next' → logprob: -6.908926486968994
    8. '[next' → logprob: -7.283926486968994
    9. '```' → logprob: -7.658926486968994
    10. ' next' → logprob: -8.033926963806152

Token 755: 'in' (ID: 258)
  Prédit: '(index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(index' → logprob: -0.4984281361103058
    2. ')' → logprob: -2.1234281063079834
    3. ' (' → logprob: -2.4984281063079834
    4. 'neighbors' → logprob: -2.8734281063079834
    5. '(len' → logprob: -3.4984281063079834
    6. 'index' → logprob: -3.6234281063079834
    7. '```' → logprob: -4.1234283447265625
    8. '#' → logprob: -4.3734283447265625
    9. ',' → logprob: -4.6234283447265625
    10. '                   ' → logprob: -5.3734283447265625

Token 756: ' the' (ID: 290)
  Prédit: 'dex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dex' → logprob: -0.6312549114227295
    2. 'neighbors' → logprob: -1.0062549114227295
    3. 'range' → logprob: -3.5062549114227295
    4. ' neighbors' → logprob: -4.006255149841309
    5. ' range' → logprob: -4.756255149841309
    6. 'len' → logprob: -4.756255149841309
    7. 'index' → logprob: -5.631255149841309
    8. '[' → logprob: -5.881255149841309
    9. '(' → logprob: -6.006255149841309
    10. '```' → logprob: -6.006255149841309

Token 757: ' sorted' (ID: 20099)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.0523090697824955
    2. ')' → logprob: -4.052309036254883
    3. 'adj' → logprob: -5.177309036254883
    4. 'len' → logprob: -5.177309036254883
    5. 'index' → logprob: -5.302309036254883
    6. '(' → logprob: -6.052309036254883
    7. '(len' → logprob: -6.177309036254883
    8. '#' → logprob: -6.302309036254883
    9. '```' → logprob: -6.802309036254883
    10. '(index' → logprob: -7.052309036254883

Token 758: ' list' (ID: 1562)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.005085391458123922
    2. '[n' → logprob: -5.880085468292236
    3. 'adj' → logprob: -6.505085468292236
    4. '[' → logprob: -8.380084991455078
    5. 'n' → logprob: -8.755084991455078
    6. ')' → logprob: -9.005084991455078
    7. 'list' → logprob: -9.255084991455078
    8. ' neighbors' → logprob: -9.880084991455078
    9. '_neighbors' → logprob: -10.380084991455078
    10. 'neighbor' → logprob: -10.880084991455078

Token 759: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4678829610347748
    2. '[(' → logprob: -1.9678829908370972
    3. '),' → logprob: -2.4678828716278076
    4. ',' → logprob: -2.7178828716278076
    5. '               ' → logprob: -3.9678828716278076
    6. '[' → logprob: -4.217883110046387
    7. ' (' → logprob: -4.717883110046387
    8. ')
' → logprob: -5.217883110046387
    9. '):' → logprob: -5.342883110046387
    10. ')[' → logprob: -5.717883110046387

Token 760: ' CC' (ID: 21547)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.09956231713294983
    2. '(next' → logprob: -2.849562406539917
    3. ' next' → logprob: -4.099562168121338
    4. 'index' → logprob: -4.224562168121338
    5. '(index' → logprob: -6.849562168121338
    6. 'n' → logprob: -6.974562168121338
    7. ' (' → logprob: -6.974562168121338
    8. '               ' → logprob: -7.099562168121338
    9. '[next' → logprob: -7.724562168121338
    10. '                   ' → logprob: -8.099562644958496

Token 761: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.01124505139887333
    2. 'w' → logprob: -4.511245250701904
    3. 'index' → logprob: -9.886244773864746
    4. '_index' → logprob: -10.636244773864746
    5. '#' → logprob: -11.761244773864746
    6. 'wn' → logprob: -11.761244773864746
    7. '   ' → logprob: -11.886244773864746
    8. '[n' → logprob: -12.011244773864746
    9. '_w' → logprob: -12.261244773864746
    10. ')' → logprob: -12.261244773864746

Token 762: ' order' (ID: 2569)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.9174835085868835
    2. 'index' → logprob: -1.7924835681915283
    3. ')' → logprob: -2.4174835681915283
    4. ' order' → logprob: -2.9174835681915283
    5. ' neighbors' → logprob: -3.1674835681915283
    6. 'neighbors' → logprob: -3.1674835681915283
    7. ' index' → logprob: -3.4174835681915283
    8. 'order' → logprob: -3.5424835681915283
    9. '_neighbors' → logprob: -3.7924835681915283
    10. ' (' → logprob: -3.9174835681915283

Token 763: ' is' (ID: 382)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.40326786041259766
    2. ' is' → logprob: -1.5282678604125977
    3. ')' → logprob: -2.5282678604125977
    4. '[' → logprob: -4.528267860412598
    5. '[next' → logprob: -5.403267860412598
    6. 'is' → logprob: -6.153267860412598
    7. '),' → logprob: -6.153267860412598
    8. ' (' → logprob: -6.278267860412598
    9. 'index' → logprob: -6.278267860412598
    10. ',' → logprob: -6.653267860412598

Token 764: ' ascending' (ID: 75564)
  Prédit: '(index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(index' → logprob: -0.08130954205989838
    2. 'index' → logprob: -2.9563095569610596
    3. 'neighbors' → logprob: -4.3313093185424805
    4. ' (' → logprob: -5.7063093185424805
    5. '(' → logprob: -5.7063093185424805
    6. '(lambda' → logprob: -6.0813093185424805
    7. '[index' → logprob: -7.4563093185424805
    8. '(i' → logprob: -7.8313093185424805
    9. '(next' → logprob: -8.20630931854248
    10. 'lambda' → logprob: -8.33130931854248

Token 765: ')
' (ID: 446)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.6053267121315002
    2. ')' → logprob: -1.7303266525268555
    3. ' index' → logprob: -2.1053266525268555
    4. ',' → logprob: -2.8553266525268555
    5. '(index' → logprob: -2.9803266525268555
    6. ' (' → logprob: -4.3553266525268555
    7. '),' → logprob: -4.4803266525268555
    8. ')
' → logprob: -5.6053266525268555
    9. ',index' → logprob: -5.9803266525268555
    10. ' by' → logprob: -6.1053266525268555

Token 766: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09758913516998291
    2. 'index' → logprob: -3.3475890159606934
    3. 'next' → logprob: -3.4725890159606934
    4. ' next' → logprob: -4.597589015960693
    5. ',' → logprob: -5.347589015960693
    6. 'prev' → logprob: -6.097589015960693
    7. ' =' → logprob: -6.472589015960693
    8. '```' → logprob: -6.847589015960693
    9. ' index' → logprob: -6.972589015960693
    10. 'n' → logprob: -7.597589015960693

Token 767: ' #' (ID: 1069)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.10250469297170639
    2. ' next' → logprob: -2.3525047302246094
    3. '               ' → logprob: -6.602504730224609
    4. 'prev' → logprob: -7.977504730224609
    5. ' nxt' → logprob: -8.60250473022461
    6. '                   ' → logprob: -8.72750473022461
    7. '(next' → logprob: -9.72750473022461
    8. 'index' → logprob: -9.97750473022461
    9. '[next' → logprob: -10.60250473022461
    10. 'n' → logprob: -10.60250473022461

Token 768: ' so' (ID: 813)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.026859473437070847
    2. ' next' → logprob: -3.6518595218658447
    3. '               ' → logprob: -8.651859283447266
    4. 'prev' → logprob: -9.151859283447266
    5. 'index' → logprob: -9.401859283447266
    6. '                   ' → logprob: -9.526859283447266
    7. ' nxt' → logprob: -10.901859283447266
    8. 'n' → logprob: -11.026859283447266
    9. 'w' → logprob: -11.276859283447266
    10. '#' → logprob: -11.401859283447266

Token 769: ' the' (ID: 290)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.7437693476676941
    2. 'next' → logprob: -0.7437693476676941
    3. 'index' → logprob: -3.743769407272339
    4. '               ' → logprob: -3.993769407272339
    5. ' index' → logprob: -5.61876916885376
    6. '                   ' → logprob: -6.86876916885376
    7. ',next' → logprob: -7.86876916885376
    8. '           ' → logprob: -7.99376916885376
    9. 'prev' → logprob: -8.368769645690918
    10. ':' → logprob: -8.368769645690918

Token 770: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.08930660039186478
    2. ' next' → logprob: -2.464306592941284
    3. 'n' → logprob: -9.589306831359863
    4. 'prev' → logprob: -9.589306831359863
    5. 'index' → logprob: -10.464306831359863
    6. '                   ' → logprob: -10.464306831359863
    7. '               ' → logprob: -10.464306831359863
    8. '[next' → logprob: -10.464306831359863
    9. '#' → logprob: -10.589306831359863
    10. '	next' → logprob: -11.339306831359863

Token 771: ' edge' (ID: 11165)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.15837517380714417
    2. 'index' → logprob: -3.1583752632141113
    3. 'idx' → logprob: -3.5333752632141113
    4. '_n' → logprob: -3.6583752632141113
    5. '_index' → logprob: -4.033375263214111
    6. '_edge' → logprob: -4.783375263214111
    7. 'n' → logprob: -5.033375263214111
    8. 'edge' → logprob: -5.408375263214111
    9. '_idx' → logprob: -5.658375263214111
    10. 'next' → logprob: -6.408375263214111

Token 772: ' after' (ID: 1934)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2736508250236511
    2. '=' → logprob: -1.648650884628296
    3. ' is' → logprob: -3.273650884628296
    4. 'is' → logprob: -6.273650646209717
    5. 'idx' → logprob: -6.273650646209717
    6. '_idx' → logprob: -6.273650646209717
    7. '_index' → logprob: -6.648650646209717
    8. 'index' → logprob: -6.773650646209717
    9. 'n' → logprob: -8.273651123046875
    10. ' will' → logprob: -9.023651123046875

Token 773: ' (' (ID: 350)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.6926199197769165
    2. 'neighbors' → logprob: -1.8176199197769165
    3. '(index' → logprob: -1.9426199197769165
    4. '(n' → logprob: -2.942619800567627
    5. ' (' → logprob: -3.192619800567627
    6. '(' → logprob: -3.317619800567627
    7. 'n' → logprob: -3.692619800567627
    8. ' index' → logprob: -4.067619800567627
    9. ' neighbors' → logprob: -4.192619800567627
    10. '(ne' → logprob: -6.442619800567627

Token 774: 'cur' (ID: 3264)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005207431968301535
    2. ' nxt' → logprob: -8.250520706176758
    3. 'neighbors' → logprob: -10.250520706176758
    4. '   ' → logprob: -10.375520706176758
    5. 'index' → logprob: -10.500520706176758
    6. '```' → logprob: -10.750520706176758
    7. 'next' → logprob: -11.000520706176758
    8. 'n't' → logprob: -11.000520706176758
    9. 'nx' → logprob: -11.250520706176758
    10. '(n' → logprob: -11.375520706176758

Token 775: '->' (ID: 609)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.624561071395874
    2. ',' → logprob: -1.624561071395874
    3. 'index' → logprob: -2.999561071395874
    4. 'n' → logprob: -3.124561071395874
    5. '),' → logprob: -3.999561071395874
    6. ' is' → logprob: -4.249561309814453
    7. '   ' → logprob: -4.624561309814453
    8. 'neighbors' → logprob: -4.624561309814453
    9. ')]' → logprob: -4.999561309814453
    10. ' -' → logprob: -5.249561309814453

Token 776: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003661952679976821
    2. 'neighbors' → logprob: -5.753662109375
    3. ' nxt' → logprob: -8.628662109375
    4. '   ' → logprob: -9.503662109375
    5. 'next' → logprob: -10.128662109375
    6. 'index' → logprob: -10.253662109375
    7. 'cur' → logprob: -10.253662109375
    8. '	n' → logprob: -10.878662109375
    9. ' neighbors' → logprob: -11.128662109375
    10. '```' → logprob: -11.253662109375

Token 777: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -9.639096970204264e-05
    2. 'neighbors' → logprob: -10.500096321105957
    3. 'x' → logprob: -10.875096321105957
    4. 'n' → logprob: -11.125096321105957
    5. 'ext' → logprob: -11.250096321105957
    6. 't' → logprob: -11.625096321105957
    7. 'br' → logprob: -13.250096321105957
    8. ' neighbors' → logprob: -13.250096321105957
    9. 'st' → logprob: -13.250096321105957
    10. 'e' → logprob: -13.500096321105957

Token 778: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0048779272474348545
    2. ' is' → logprob: -7.004878044128418
    3. ' )' → logprob: -7.004878044128418
    4. 'index' → logprob: -7.879878044128418
    5. ')`' → logprob: -8.004878044128418
    6. '])' → logprob: -8.254878044128418
    7. 'n' → logprob: -8.379878044128418
    8. '),' → logprob: -8.504878044128418
    9. ')is' → logprob: -8.629878044128418
    10. ']' → logprob: -8.879878044128418

Token 779: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.13467909395694733
    2. 'is' → logprob: -2.384679079055786
    3. ' =' → logprob: -3.884679079055786
    4. '=' → logprob: -5.009679317474365
    5. 'index' → logprob: -6.009679317474365
    6. 'n' → logprob: -6.509679317474365
    7. ')' → logprob: -7.634679317474365
    8. ' will' → logprob: -7.634679317474365
    9. 'idx' → logprob: -8.384678840637207
    10. '               ' → logprob: -8.759678840637207

Token 780: ' the' (ID: 290)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.05560129135847092
    2. ' neighbors' → logprob: -2.9306013584136963
    3. '   ' → logprob: -7.930601119995117
    4. '(ne' → logprob: -8.680601119995117
    5. '(' → logprob: -10.305601119995117
    6. '           ' → logprob: -10.430601119995117
    7. '               ' → logprob: -10.430601119995117
    8. 'n' → logprob: -10.555601119995117
    9. ' (' → logprob: -11.055601119995117
    10. 'ne' → logprob: -11.555601119995117

Token 781: ' next' (ID: 2613)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.0030408164020627737
    2. ' neighbors' → logprob: -6.253040790557861
    3. '(ne' → logprob: -7.003040790557861
    4. '(' → logprob: -9.37804126739502
    5. 'neighbor' → logprob: -10.12804126739502
    6. ' (' → logprob: -10.62804126739502
    7. 'ne' → logprob: -10.87804126739502
    8. '   ' → logprob: -11.37804126739502
    9. '(n' → logprob: -11.50304126739502
    10. 'n' → logprob: -12.25304126739502

Token 782: ' edge' (ID: 11165)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.6711419820785522
    2. 'index' → logprob: -1.6711419820785522
    3. '[(' → logprob: -2.546142101287842
    4. ' neighbor' → logprob: -3.171142101287842
    5. 'token' → logprob: -3.921142101287842
    6. ']' → logprob: -3.921142101287842
    7. ' index' → logprob: -4.046142101287842
    8. 'vertex' → logprob: -4.171142101287842
    9. ')' → logprob: -4.421142101287842
    10. '[' → logprob: -4.796142101287842

Token 783: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31312766671180725
    2. ' (' → logprob: -2.3131277561187744
    3. '[(' → logprob: -3.1881277561187744
    4. '[' → logprob: -3.3131277561187744
    5. 'in' → logprob: -3.9381277561187744
    6. '[n' → logprob: -4.438127517700195
    7. '               ' → logprob: -4.688127517700195
    8. ' =' → logprob: -4.938127517700195
    9. '[next' → logprob: -4.938127517700195
    10. '                   ' → logprob: -5.313127517700195

Token 784: ' CC' (ID: 21547)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.007075159810483456
    2. 'adj' → logprob: -6.007075309753418
    3. 'the' → logprob: -6.382075309753418
    4. ' neighbors' → logprob: -6.632075309753418
    5. '[n' → logprob: -7.757075309753418
    6. 'n' → logprob: -7.882075309753418
    7. '[(' → logprob: -8.757075309753418
    8. '(ne' → logprob: -8.882075309753418
    9. '(n' → logprob: -9.382075309753418
    10. '```' → logprob: -9.507075309753418

Token 785: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.18277175724506378
    2. 'w' → logprob: -1.8077718019485474
    3. '[n' → logprob: -6.182771682739258
    4. 'n' → logprob: -8.432771682739258
    5. '       ' → logprob: -9.682771682739258
    6. '   ' → logprob: -9.807771682739258
    7. 'wt' → logprob: -9.807771682739258
    8. 'neighbors' → logprob: -9.807771682739258
    9. '           ' → logprob: -9.932771682739258
    10. '[next' → logprob: -10.057771682739258

Token 786: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.4130191504955292
    2. 'order' → logprob: -1.2880191802978516
    3. ')' → logprob: -4.038019180297852
    4. '[n' → logprob: -4.788019180297852
    5. '(n' → logprob: -5.413019180297852
    6. '           ' → logprob: -5.413019180297852
    7. '_order' → logprob: -5.663019180297852
    8. 'neighbors' → logprob: -5.913019180297852
    9. '_neighbors' → logprob: -5.913019180297852
    10. ' direction' → logprob: -6.288019180297852

Token 787: ' from' (ID: 591)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.6075193285942078
    2. '               ' → logprob: -1.2325193881988525
    3. '[' → logprob: -2.7325193881988525
    4. '[next' → logprob: -3.3575193881988525
    5. ' (' → logprob: -4.107519149780273
    6. ',' → logprob: -4.607519149780273
    7. '(next' → logprob: -4.982519149780273
    8. '(' → logprob: -5.357519149780273
    9. '(n' → logprob: -5.482519149780273
    10. '(index' → logprob: -5.607519149780273

Token 788: ' (' (ID: 350)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.8006137013435364
    2. 'n' → logprob: -1.1756136417388916
    3. 'neighbors' → logprob: -1.5506136417388916
    4. '(index' → logprob: -4.925613880157471
    5. '(n' → logprob: -5.050613880157471
    6. ' index' → logprob: -5.550613880157471
    7. ' neighbors' → logprob: -6.050613880157471
    8. '(ne' → logprob: -6.175613880157471
    9. 'next' → logprob: -6.925613880157471
    10. 'the' → logprob: -7.050613880157471

Token 789: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09238849580287933
    2. 'index' → logprob: -2.717388391494751
    3. 'neighbors' → logprob: -3.967388391494751
    4. 'cur' → logprob: -7.34238862991333
    5. '(n' → logprob: -7.96738862991333
    6. '   ' → logprob: -8.342388153076172
    7. '(index' → logprob: -8.342388153076172
    8. 'next' → logprob: -8.467388153076172
    9. 'nx' → logprob: -8.717388153076172
    10. '```' → logprob: -8.842388153076172

Token 790: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.1636848896741867
    2. 'x' → logprob: -2.663684844970703
    3. 'index' → logprob: -3.038684844970703
    4. 'ext' → logprob: -4.663684844970703
    5. 'ex' → logprob: -5.288684844970703
    6. '(index' → logprob: -5.788684844970703
    7. '```' → logprob: -5.913684844970703
    8. ')' → logprob: -6.413684844970703
    9. 'neighbors' → logprob: -6.663684844970703
    10. 't' → logprob: -6.663684844970703

Token 791: '->' (ID: 609)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -1.3385523557662964
    2. ')' → logprob: -1.5885523557662964
    3. ',' → logprob: -2.713552474975586
    4. '->' → logprob: -2.838552474975586
    5. ''s' → logprob: -3.213552474975586
    6. '               ' → logprob: -3.213552474975586
    7. '(index' → logprob: -3.213552474975586
    8. '][' → logprob: -3.713552474975586
    9. '),' → logprob: -3.838552474975586
    10. ' (' → logprob: -3.838552474975586

Token 792: 'cur' (ID: 3264)
  Prédit: 'cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.01151283923536539
    2. 'neighbors' → logprob: -5.261512756347656
    3. '(cur' → logprob: -5.636512756347656
    4. 'index' → logprob: -6.261512756347656
    5. '(' → logprob: -8.136512756347656
    6. '(ne' → logprob: -8.761512756347656
    7. ')' → logprob: -9.636512756347656
    8. '(index' → logprob: -9.636512756347656
    9. ' cur' → logprob: -9.886512756347656
    10. ' neighbors' → logprob: -10.386512756347656

Token 793: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.268545925617218
    2. ')+' → logprob: -1.7685458660125732
    3. ')
' → logprob: -3.5185458660125732
    4. ')]' → logprob: -4.643546104431152
    5. '),' → logprob: -5.018546104431152
    6. '])' → logprob: -5.643546104431152
    7. ']' → logprob: -5.768546104431152
    8. ']+' → logprob: -6.268546104431152
    9. ',' → logprob: -6.393546104431152
    10. ')])' → logprob: -6.768546104431152

Token 794: ' it' (ID: 480)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0591002702713013
    2. '(index' → logprob: -1.4341002702713013
    3. '(' → logprob: -1.8091002702713013
    4. 'index' → logprob: -2.4341001510620117
    5. '               ' → logprob: -2.8091001510620117
    6. '(next' → logprob: -2.9341001510620117
    7. '           ' → logprob: -4.559100151062012
    8. '(n' → logprob: -4.684100151062012
    9. ' index' → logprob: -5.434100151062012
    10. '                   ' → logprob: -5.559100151062012

Token 795: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03871307149529457
    2. ' =' → logprob: -3.663712978363037
    3. 's' → logprob: -5.663712978363037
    4. '=index' → logprob: -5.788712978363037
    5. 'index' → logprob: -6.288712978363037
    6. ' is' → logprob: -6.663712978363037
    7. ']=' → logprob: -6.913712978363037
    8. ']' → logprob: -7.663712978363037
    9. '_index' → logprob: -8.913713455200195
    10. ' index' → logprob: -9.288713455200195

Token 796: ' next' (ID: 2613)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.08923312276601791
    2. ' neighbors' → logprob: -2.464233160018921
    3. '   ' → logprob: -8.7142333984375
    4. '(' → logprob: -10.2142333984375
    5. '(ne' → logprob: -10.7142333984375
    6. 'n' → logprob: -11.3392333984375
    7. 'neighbor' → logprob: -11.4642333984375
    8. 'ne' → logprob: -11.4642333984375
    9. ' (' → logprob: -11.7142333984375
    10. '```' → logprob: -11.9642333984375

Token 797: ' after' (ID: 1934)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.9142472743988037
    2. '_index' → logprob: -1.1642472743988037
    3. ' index' → logprob: -2.4142472743988037
    4. '_w' → logprob: -3.5392472743988037
    5. 'neighbor' → logprob: -4.039247512817383
    6. '_idx' → logprob: -4.289247512817383
    7. '((' → logprob: -4.414247512817383
    8. '(' → logprob: -4.539247512817383
    9. '(index' → logprob: -4.664247512817383
    10. '_neighbor' → logprob: -4.789247512817383

Token 798: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.5403180122375488
    2. '(index' → logprob: -0.9153180122375488
    3. ' (' → logprob: -4.665318012237549
    4. ' index' → logprob: -5.540318012237549
    5. '(' → logprob: -6.040318012237549
    6. 'neighbors' → logprob: -8.16531753540039
    7. '```' → logprob: -8.16531753540039
    8. '(i' → logprob: -8.79031753540039
    9. '((' → logprob: -8.79031753540039
    10. '(ne' → logprob: -9.66531753540039

Token 799: '
' (ID: 198)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -1.5272387266159058
    2. '(n' → logprob: -1.9022387266159058
    3. ' (' → logprob: -2.2772388458251953
    4. '(index' → logprob: -2.2772388458251953
    5. '+' → logprob: -2.4022388458251953
    6. ' +' → logprob: -2.5272388458251953
    7. ' =' → logprob: -3.1522388458251953
    8. '(' → logprob: -3.1522388458251953
    9. '[(' → logprob: -3.6522388458251953
    10. ')' → logprob: -3.7772388458251953

Token 800: '               ' (ID: 506)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.8630031943321228
    2. '               ' → logprob: -1.3630032539367676
    3. ' (' → logprob: -1.6130032539367676
    4. '(index' → logprob: -3.6130032539367676
    5. '(' → logprob: -3.9880032539367676
    6. '                   ' → logprob: -4.238003253936768
    7. '           ' → logprob: -4.363003253936768
    8. '(n' → logprob: -4.488003253936768
    9. '((' → logprob: -4.863003253936768
    10. ' =' → logprob: -4.988003253936768

Token 801: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.6912639737129211
    2. ' next' → logprob: -0.8162639737129211
    3. '               ' → logprob: -3.6912639141082764
    4. '(next' → logprob: -4.3162641525268555
    5. ' (' → logprob: -4.5662641525268555
    6. '                   ' → logprob: -6.0662641525268555
    7. 'index' → logprob: -6.4412641525268555
    8. ' nxt' → logprob: -7.1912641525268555
    9. ' index' → logprob: -7.3162641525268555
    10. '(' → logprob: -7.5662641525268555

Token 802: '_index' (ID: 7748)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.025389414280653
    2. '_idx' → logprob: -4.275389194488525
    3. '_index' → logprob: -5.650389194488525
    4. '_edge' → logprob: -6.525389194488525
    5. 'w' → logprob: -6.650389194488525
    6. '_i' → logprob: -7.025389194488525
    7. '_vertex' → logprob: -7.025389194488525
    8. '_neighbor' → logprob: -7.275389194488525
    9. '_n' → logprob: -7.400389194488525
    10. ' =' → logprob: -7.900389194488525

Token 803: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133542537689209
    2. ' =' → logprob: -1.313354253768921
    3. '=(' → logprob: -9.3133544921875
    4. '=((' → logprob: -13.9383544921875
    5. ' =(' → logprob: -13.9383544921875
    6. ' (' → logprob: -16.4383544921875
    7. '＝' → logprob: -16.5633544921875
    8. '=
' → logprob: -16.9383544921875
    9. ' ' → logprob: -16.9383544921875
    10. ',' → logprob: -17.6883544921875

Token 804: ' (' (ID: 350)
  Prédit: '(index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(index' → logprob: -0.0020298731978982687
    2. ' (' → logprob: -6.377029895782471
    3. '(next' → logprob: -8.877029418945312
    4. '(' → logprob: -9.877029418945312
    5. '(idx' → logprob: -10.127029418945312
    6. '   ' → logprob: -11.127029418945312
    7. '(indices' → logprob: -11.377029418945312
    8. '(i' → logprob: -11.627029418945312
    9. '(in' → logprob: -11.627029418945312
    10. '(input' → logprob: -11.752029418945312

Token 805: 'index' (ID: 2257)
  Prédit: '(index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(index' → logprob: -0.6327047348022461
    2. 'index' → logprob: -0.7577047348022461
    3. ' index' → logprob: -10.132704734802246
    4. ' (' → logprob: -10.382704734802246
    5. '(' → logprob: -11.382704734802246
    6. '   ' → logprob: -12.507704734802246
    7. '[index' → logprob: -12.507704734802246
    8. ',index' → logprob: -13.007704734802246
    9. '=index' → logprob: -13.132704734802246
    10. '_index' → logprob: -13.632704734802246

Token 806: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11350244283676147
    2. ' +' → logprob: -2.2385025024414062
    3. '-' → logprob: -7.488502502441406
    4. ' -' → logprob: -9.113502502441406
    5. '1' → logprob: -12.113502502441406
    6. '0' → logprob: -14.363502502441406
    7. '+
' → logprob: -14.363502502441406
    8. '       ' → logprob: -14.488502502441406
    9. '   ' → logprob: -14.613502502441406
    10. '
' → logprob: -14.738502502441406

Token 807: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -20.000001907348633
    4. '-' → logprob: -20.375001907348633
    5. '۱' → logprob: -20.625001907348633
    6. '           ' → logprob: -20.750001907348633
    7. ')' → logprob: -20.875001907348633
    8. '１' → logprob: -21.125001907348633
    9. '```' → logprob: -21.250001907348633
    10. '       ' → logprob: -21.500001907348633

Token 808: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '-' → logprob: -18.25
    4. '۱' → logprob: -19.25
    5. '   ' → logprob: -19.75
    6. '１' → logprob: -19.875
    7. ')' → logprob: -20.1875
    8. '```' → logprob: -20.375
    9. '2' → logprob: -20.875
    10. '(' → logprob: -21.1875

Token 809: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022104429081082344
    2. ')%' → logprob: -6.12721061706543
    3. ')
' → logprob: -11.50221061706543
    4. ' )' → logprob: -11.87721061706543
    5. ']' → logprob: -12.50221061706543
    6. '%n' → logprob: -13.37721061706543
    7. '%' → logprob: -13.62721061706543
    8. ')n' → logprob: -14.25221061706543
    9. ' %' → logprob: -15.50221061706543
    10. '+' → logprob: -15.75221061706543

Token 810: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.14281664788722992
    2. ' %' → logprob: -2.3928165435791016
    3. ')' → logprob: -4.267816543579102
    4. '%n' → logprob: -4.392816543579102
    5. ')%' → logprob: -5.017816543579102
    6. '<|end|>' → logprob: -5.517816543579102
    7. ']' → logprob: -5.767816543579102
    8. ']%' → logprob: -6.642816543579102
    9. '<|end|>' → logprob: -9.142816543579102
    10. '[n' → logprob: -10.142816543579102

Token 811: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -3.650518920039758e-06
    2. '(len' → logprob: -12.750003814697266
    3. ' len' → logprob: -14.250003814697266
    4. '[len' → logprob: -18.750003814697266
    5. '	len' → logprob: -21.625003814697266
    6. '<len' → logprob: -22.125003814697266
    7. '=len' → logprob: -22.625003814697266
    8. ',len' → logprob: -22.750003814697266
    9. 'Len' → logprob: -24.625003814697266
    10. '   ' → logprob: -24.875003814697266

Token 812: '(ne' (ID: 79401)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.06249034032225609
    2. '(ne' → logprob: -2.812490224838257
    3. 'ne' → logprob: -7.562490463256836
    4. 'neighbor' → logprob: -13.687490463256836
    5. ' neighbors' → logprob: -13.937490463256836
    6. 'adj' → logprob: -14.062490463256836
    7. '(' → logprob: -16.312490463256836
    8. '_neighbors' → logprob: -16.812490463256836
    9. 'n' → logprob: -16.937490463256836
    10. '```' → logprob: -18.062490463256836

Token 813: 'ighbors' (ID: 46483)
  Prédit: 'ighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbors' → logprob: -0.0001302374730585143
    2. 'neighbors' → logprob: -9.000130653381348
    3. 'igh' → logprob: -12.000130653381348
    4. 'gh' → logprob: -15.125130653381348
    5. '_neighbors' → logprob: -15.875130653381348
    6. 'ighbor' → logprob: -16.12512969970703
    7. 'ighbours' → logprob: -16.62512969970703
    8. ' neighbors' → logprob: -16.87512969970703
    9. 'bors' → logprob: -17.75012969970703
    10. 'ig' → logprob: -18.50012969970703

Token 814: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07892415672540665
    2. ')
' → logprob: -2.5789241790771484
    3. ')n' → logprob: -11.078924179077148
    4. ')
' → logprob: -11.328924179077148
    5. '           ' → logprob: -12.203924179077148
    6. ')

' → logprob: -14.453924179077148
    7. '               ' → logprob: -14.828924179077148
    8. ' )' → logprob: -14.953924179077148
    9. ' )
' → logprob: -15.578924179077148
    10. ')`
' → logprob: -16.07892417907715

Token 815: '               ' (ID: 506)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.7124292254447937
    2. 'next' → logprob: -0.7124292254447937
    3. '               ' → logprob: -3.9624292850494385
    4. '(next' → logprob: -10.33742904663086
    5. '[next' → logprob: -11.46242904663086
    6. 'new' → logprob: -11.58742904663086
    7. '	next' → logprob: -11.71242904663086
    8. ' new' → logprob: -12.83742904663086
    9. '```' → logprob: -12.96242904663086
    10. '           ' → logprob: -12.96242904663086

Token 816: ' prev' (ID: 10258)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.000533136713784188
    2. '               ' → logprob: -8.375533103942871
    3. ' next' → logprob: -8.500533103942871
    4. '                   ' → logprob: -9.875533103942871
    5. 'w' → logprob: -10.250533103942871
    6. '(next' → logprob: -12.625533103942871
    7. '           ' → logprob: -13.250533103942871
    8. '[next' → logprob: -13.375533103942871
    9. 'new' → logprob: -13.500533103942871
    10. '                ' → logprob: -13.750533103942871

Token 817: ' =' (ID: 314)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.8427747488021851
    2. ' =' → logprob: -1.092774748802185
    3. '_edge' → logprob: -2.4677748680114746
    4. '_neighbor' → logprob: -3.2177748680114746
    5. '_n' → logprob: -3.3427748680114746
    6. '_vertex' → logprob: -3.7177748680114746
    7. 'w' → logprob: -3.9677748680114746
    8. '=' → logprob: -4.592774868011475
    9. '_node' → logprob: -5.342774868011475
    10. 'n' → logprob: -5.592774868011475

Token 818: ' nxt' (ID: 160200)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.0027165452484041452
    2. 'n' → logprob: -6.502716541290283
    3. ' neighbors' → logprob: -7.002716541290283
    4. 'cur' → logprob: -8.252717018127441
    5. 'u' → logprob: -11.002717018127441
    6. 'next' → logprob: -12.002717018127441
    7. '   ' → logprob: -12.127717018127441
    8. 'ne' → logprob: -12.502717018127441
    9. 'adj' → logprob: -13.252717018127441
    10. 'nbr' → logprob: -13.502717018127441

Token 819: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07469895482063293
    2. 'next' → logprob: -3.1996989250183105
    3. '[next' → logprob: -4.4496989250183105
    4. '(next' → logprob: -5.4496989250183105
    5. '                
' → logprob: -5.5746989250183105
    6. ' =' → logprob: -5.6996989250183105
    7. ',next' → logprob: -6.0746989250183105
    8. 'n' → logprob: -6.6996989250183105
    9. '=' → logprob: -6.8246989250183105
    10. ' next' → logprob: -7.1996989250183105

Token 820: '               ' (ID: 506)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.628028392791748
    2. '               ' → logprob: -1.003028392791748
    3. 'n' → logprob: -2.628028392791748
    4. ' next' → logprob: -4.503028392791748
    5. 'cur' → logprob: -5.128028392791748
    6. ' nxt' → logprob: -5.628028392791748
    7. 'prev' → logprob: -6.253028392791748
    8. '           ' → logprob: -6.378028392791748
    9. '[next' → logprob: -6.628028392791748
    10. 'neighbors' → logprob: -8.128028869628906

Token 821: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7016279697418213
    2. 'cur' → logprob: -0.9516279697418213
    3. 'next' → logprob: -2.2016279697418213
    4. '               ' → logprob: -5.201627731323242
    5. ' nxt' → logprob: -6.951627731323242
    6. '           ' → logprob: -8.451627731323242
    7. 'neighbors' → logprob: -8.701627731323242
    8. 'curr' → logprob: -9.076627731323242
    9. '                   ' → logprob: -9.076627731323242
    10. '       ' → logprob: -9.701627731323242

Token 822: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03260813280940056
    2. 'neighbors' → logprob: -3.5326080322265625
    3. ' =' → logprob: -5.9076080322265625
    4. ' neighbors' → logprob: -9.157608032226562
    5. 'return' → logprob: -11.907608032226562
    6. '_neighbors' → logprob: -12.032608032226562
    7. 'n' → logprob: -12.782608032226562
    8. '=
' → logprob: -12.907608032226562
    9. '```' → logprob: -12.907608032226562
    10. 'neighbor' → logprob: -13.407608032226562

Token 823: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -1.5094070477061905e-05
    2. ' neighbors' → logprob: -11.250015258789062
    3. 'adj' → logprob: -13.125015258789062
    4. 'ne' → logprob: -16.500015258789062
    5. 'neighbor' → logprob: -17.250015258789062
    6. 'neur' → logprob: -18.750015258789062
    7. '   ' → logprob: -19.500015258789062
    8. 'n' → logprob: -19.625015258789062
    9. '_neighbors' → logprob: -20.125015258789062
    10. 'next' → logprob: -20.750015258789062

Token 824: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.018228139728307724
    2. 'next' → logprob: -4.018228054046631
    3. '(next' → logprob: -9.518228530883789
    4. ' next' → logprob: -12.643228530883789
    5. '_next' → logprob: -14.518228530883789
    6. '[' → logprob: -14.893228530883789
    7. '```' → logprob: -15.643228530883789
    8. '	next' → logprob: -16.14322853088379
    9. ',next' → logprob: -16.14322853088379
    10. '[(' → logprob: -16.51822853088379

Token 825: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -8.506661833962426e-05
    2. 'index' → logprob: -9.37508487701416
    3. 'Index' → logprob: -16.375085830688477
    4. '_INDEX' → logprob: -17.500085830688477
    5. '[index' → logprob: -17.750085830688477
    6. '_next' → logprob: -18.500085830688477
    7. 'n' → logprob: -18.875085830688477
    8. 'next' → logprob: -18.875085830688477
    9. ' index' → logprob: -19.125085830688477
    10. '[next' → logprob: -19.375085830688477

Token 826: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014402345987036824
    2. ']' → logprob: -7.251440048217773
    3. '<|end|>' → logprob: -8.126440048217773
    4. ' )' → logprob: -8.626440048217773
    5. ')return' → logprob: -10.251440048217773
    6. ')]' → logprob: -10.376440048217773
    7. '(prev' → logprob: -10.376440048217773
    8. '<|end|>' → logprob: -10.501440048217773
    9. ')
' → logprob: -10.751440048217773
    10. '               ' → logprob: -11.376440048217773

Token 827: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003336337162181735
    2. '           ' → logprob: -6.753336429595947
    3. '<|end|>' → logprob: -6.878336429595947
    4. '                ' → logprob: -8.128335952758789
    5. '            ' → logprob: -8.753335952758789
    6. '              ' → logprob: -8.753335952758789
    7. '```' → logprob: -9.003335952758789
    8. '                
' → logprob: -9.503335952758789
    9. ' cur' → logprob: -10.128335952758789
    10. ')' → logprob: -10.128335952758789

Token 828: ' cur' (ID: 4396)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.44343236088752747
    2. 'if' → logprob: -1.193432331085205
    3. ' if' → logprob: -3.068432331085205
    4. '           ' → logprob: -5.068432331085205
    5. '                ' → logprob: -7.443432331085205
    6. '```' → logprob: -7.818432331085205
    7. '   ' → logprob: -8.193432807922363
    8. '              ' → logprob: -8.568432807922363
    9. '            ' → logprob: -8.943432807922363
    10. '       ' → logprob: -8.943432807922363

Token 829: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20186613500118256
    2. ' =' → logprob: -1.7018661499023438
    3. ',' → logprob: -7.701866149902344
    4. ')' → logprob: -15.451866149902344
    5. ' ,' → logprob: -16.076866149902344
    6. ' +=' → logprob: -16.326866149902344
    7. '=
' → logprob: -16.826866149902344
    8. ' =)' → logprob: -16.951866149902344
    9. ':' → logprob: -17.076866149902344
    10. ' ' → logprob: -17.201866149902344

Token 830: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -8.554343366995454e-05
    2. ' prev' → logprob: -9.375085830688477
    3. 'pre' → logprob: -14.875085830688477
    4. '	prev' → logprob: -15.875085830688477
    5. '(prev' → logprob: -16.375085830688477
    6. 'n' → logprob: -17.250085830688477
    7. 'pr' → logprob: -17.625085830688477
    8. 'next' → logprob: -17.750085830688477
    9. 'pred' → logprob: -18.000085830688477
    10. '.prev' → logprob: -18.500085830688477

Token 831: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1514066457748413
    2. '<|end|>' → logprob: -2.151406764984131
    3. '               ' → logprob: -4.401406764984131
    4. '<|end|>' → logprob: -5.276406764984131
    5. ')' → logprob: -6.026406764984131
    6. '
' → logprob: -7.026406764984131
    7. '   ' → logprob: -7.401406764984131
    8. '            ' → logprob: -7.776406764984131
    9. '       ' → logprob: -7.901406764984131
    10. '                           ' → logprob: -8.276406288146973

Token 832: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01446481328457594
    2. '               ' → logprob: -4.889464855194092
    3. '<|end|>' → logprob: -5.264464855194092
    4. '       ' → logprob: -7.514464855194092
    5. '   ' → logprob: -7.889464855194092
    6. '<|end|>' → logprob: -8.264464378356934
    7. '
' → logprob: -9.014464378356934
    8. '                   ' → logprob: -9.389464378356934
    9. '            ' → logprob: -9.889464378356934
    10. '          ' → logprob: -10.139464378356934

Token 833: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002608237089589238
    2. '           ' → logprob: -6.252608299255371
    3. '   ' → logprob: -8.377608299255371
    4. 'if' (adapté à ' if') → logprob: -8.502608299255371
    5. ' if' → logprob: -9.377608299255371
    6. '                   ' → logprob: -9.752608299255371
    7. '       ' → logprob: -9.877608299255371
    8. '	           ' → logprob: -11.627608299255371
    9. '<|end|>' → logprob: -12.002608299255371
    10. '<|end|>' → logprob: -12.127608299255371

Token 834: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0851568952202797
    2. 'face' → logprob: -3.4601569175720215
    3. ' cur' → logprob: -3.7101569175720215
    4. 'n' → logprob: -4.5851569175720215
    5. '(cur' → logprob: -5.2101569175720215
    6. ' face' → logprob: -5.8351569175720215
    7. 'u' → logprob: -6.0851569175720215
    8. ' nxt' → logprob: -6.4601569175720215
    9. '(n' → logprob: -7.2101569175720215
    10. '(u' → logprob: -7.3351569175720215

Token 835: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06996600329875946
    2. ' ==' → logprob: -2.6949660778045654
    3. ')==' → logprob: -11.444966316223145
    4. '==
' → logprob: -11.819966316223145
    5. ',' → logprob: -11.944966316223145
    6. ']==' → logprob: -13.069966316223145
    7. '=' → logprob: -13.819966316223145
    8. ')' → logprob: -14.444966316223145
    9. '<|end|>' → logprob: -14.444966316223145
    10. '()==' → logprob: -14.819966316223145

Token 836: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00024620062322355807
    2. 'face' → logprob: -8.375246047973633
    3. ' u' → logprob: -11.500246047973633
    4. '   ' → logprob: -13.000246047973633
    5. 'vi' → logprob: -13.625246047973633
    6. '           ' → logprob: -15.000246047973633
    7. '     ' → logprob: -15.250246047973633
    8. '    ' → logprob: -15.625246047973633
    9. '(u' → logprob: -15.625246047973633
    10. ' face' → logprob: -15.750246047973633

Token 837: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25197190046310425
    2. 'and' → logprob: -1.501971960067749
    3. '               ' → logprob: -11.126972198486328
    4. '                   ' → logprob: -11.501972198486328
    5. '           ' → logprob: -11.751972198486328
    6. ':' → logprob: -13.251972198486328
    7. '	and' → logprob: -13.376972198486328
    8. '                       ' → logprob: -13.501972198486328
    9. ':
' → logprob: -13.876972198486328
    10. ')' → logprob: -13.876972198486328

Token 838: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00010127831774298102
    2. ' nxt' → logprob: -9.250101089477539
    3. '   ' → logprob: -12.750101089477539
    4. 'next' → logprob: -14.250101089477539
    5. '	n' → logprob: -14.375101089477539
    6. '  ' → logprob: -15.375101089477539
    7. '    ' → logprob: -16.25010108947754
    8. '
' → logprob: -16.25010108947754
    9. ' ' → logprob: -16.50010108947754
    10. '(n' → logprob: -16.87510108947754

Token 839: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6296459436416626
    2. 'vi' → logprob: -0.8796459436416626
    3. ' ==' → logprob: -3.004645824432373
    4. 'u' → logprob: -6.504645824432373
    5. ' vi' → logprob: -7.504645824432373
    6. 's' → logprob: -8.254646301269531
    7. '=' → logprob: -9.254646301269531
    8. 'Vi' → logprob: -9.254646301269531
    9. '           ' → logprob: -10.129646301269531
    10. ')' → logprob: -10.629646301269531

Token 840: ' vi' (ID: 2640)
  Prédit: 'vi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vi' → logprob: -3.7697225252486533e-06
    2. 'v' → logprob: -12.625003814697266
    3. 'u' → logprob: -15.125003814697266
    4. ' vi' → logprob: -16.250003814697266
    5. '   ' → logprob: -17.250003814697266
    6. '           ' → logprob: -18.000003814697266
    7. '     ' → logprob: -19.375003814697266
    8. '`' → logprob: -19.750003814697266
    9. '       ' → logprob: -20.375003814697266
    10. '
' → logprob: -20.500003814697266

Token 841: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2552044093608856
    2. ':' → logprob: -1.505204439163208
    3. '               ' → logprob: -6.005204200744629
    4. '                   ' → logprob: -7.505204200744629
    5. '           ' → logprob: -8.755204200744629
    6. '                       ' → logprob: -10.130204200744629
    7. '):
' → logprob: -11.005204200744629
    8. ':
' → logprob: -11.380204200744629
    9. '       ' → logprob: -11.505204200744629
    10. '   ' → logprob: -12.005204200744629

Token 842: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02388424053788185
    2. '                   ' → logprob: -3.7738842964172363
    3. 'break' → logprob: -7.773884296417236
    4. ' break' → logprob: -9.648883819580078
    5. '                       ' → logprob: -9.898883819580078
    6. '           ' → logprob: -10.523883819580078
    7. '   ' → logprob: -10.648883819580078
    8. '       ' → logprob: -11.398883819580078
    9. '	break' → logprob: -11.398883819580078
    10. '	               ' → logprob: -12.523883819580078

Token 843: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3964481055736542
    2. 'break' (adapté à ' break') → logprob: -1.1464481353759766
    3. ' break' → logprob: -4.896448135375977
    4. '                   ' → logprob: -6.521448135375977
    5. '	break' → logprob: -8.021448135375977
    6. '                       ' → logprob: -9.521448135375977
    7. '           ' → logprob: -9.521448135375977
    8. '       ' → logprob: -9.771448135375977
    9. '   ' → logprob: -10.396448135375977
    10. '			' → logprob: -11.021448135375977

Token 844: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023399563506245613
    2. '
' → logprob: -4.898399353027344
    3. '<|end|>' → logprob: -5.148399353027344
    4. '   ' → logprob: -5.648399353027344
    5. '    
' → logprob: -6.398399353027344
    6. '       ' → logprob: -6.648399353027344
    7. '            
' → logprob: -7.273399353027344
    8. ' face' → logprob: -7.648399353027344
    9. '<|end|>' → logprob: -7.898399353027344
    10. '.' → logprob: -8.398399353027344

Token 845: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11138416081666946
    2. '
' → logprob: -2.736384153366089
    3. '<|end|>' → logprob: -4.486384391784668
    4. '    
' → logprob: -4.611384391784668
    5. '   ' → logprob: -4.736384391784668
    6. '            
' → logprob: -6.361384391784668
    7. ' face' → logprob: -6.361384391784668
    8. '       ' → logprob: -6.611384391784668
    9. 'face' → logprob: -6.861384391784668
    10. '  
' → logprob: -6.986384391784668

Token 846: ' faces' (ID: 22060)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46593838930130005
    2. '   ' → logprob: -1.0909383296966553
    3. '<|end|>' → logprob: -4.090938568115234
    4. '       ' → logprob: -4.215938568115234
    5. 'faces' (adapté à ' faces') → logprob: -5.965938568115234
    6. '<|end|>' → logprob: -7.090938568115234
    7. ' faces' → logprob: -7.715938568115234
    8. ' ' → logprob: -8.715938568115234
    9. '_faces' → logprob: -8.965938568115234
    10. '          ' → logprob: -9.215938568115234

Token 847: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005558936391025782
    2. '.' → logprob: -7.500555992126465
    3. '.app' → logprob: -12.875555992126465
    4. 'append' → logprob: -15.625555992126465
    5. '.ap' → logprob: -16.37555503845215
    6. '.Append' → logprob: -17.62555503845215
    7. '.add' → logprob: -18.25055503845215
    8. '.extend' → logprob: -18.50055503845215
    9. '.push' → logprob: -19.00055503845215
    10. '.insert' → logprob: -19.25055503845215

Token 848: '(face' (ID: 127535)
  Prédit: '(face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(face' → logprob: -1.4378848391061183e-05
    2. '([' → logprob: -11.375014305114746
    3. 'face' → logprob: -13.500014305114746
    4. '(list' → logprob: -14.500014305114746
    5. '(f' → logprob: -14.750014305114746
    6. '(tuple' → logprob: -14.875014305114746
    7. '(' → logprob: -16.375015258789062
    8. '((' → logprob: -17.625015258789062
    9. ' face' → logprob: -18.375015258789062
    10. '([(' → logprob: -19.375015258789062

Token 849: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005608965293504298
    2. ')
' → logprob: -7.500560760498047
    3. '   ' → logprob: -11.875560760498047
    4. ')return' → logprob: -15.375560760498047
    5. '[::-' → logprob: -15.625560760498047
    6. ' )' → logprob: -15.750560760498047
    7. ')

' → logprob: -16.125560760498047
    8. '       ' → logprob: -16.625560760498047
    9. '<|end|>' → logprob: -16.625560760498047
    10. '
' → logprob: -16.625560760498047

Token 850: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036731138825416565
    2. '<|end|>' → logprob: -6.003673076629639
    3. 'return' → logprob: -7.003673076629639
    4. ')' → logprob: -9.753673553466797
    5. '    
' → logprob: -9.878673553466797
    6. '
' → logprob: -9.878673553466797
    7. ' return' → logprob: -10.128673553466797
    8. '	return' → logprob: -10.378673553466797
    9. '```' → logprob: -10.503673553466797
    10. '<|end|>' → logprob: -12.378673553466797

Token 851: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15799027681350708
    2. '
' → logprob: -2.1579902172088623
    3. 'return' (adapté à ' return') → logprob: -4.657990455627441
    4. '    
' → logprob: -4.657990455627441
    5. '<|end|>' → logprob: -4.782990455627441
    6. ' return' → logprob: -6.282990455627441
    7. ')' → logprob: -7.907990455627441
    8. '```' → logprob: -8.032990455627441
    9. '  
' → logprob: -8.907990455627441
    10. '<|end|>' → logprob: -9.032990455627441

Token 852: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -7.755678961984813e-05
    2. ' faces' → logprob: -9.500077247619629
    3. '[' → logprob: -12.875077247619629
    4. 'face' → logprob: -18.250078201293945
    5. '   ' → logprob: -18.375078201293945
    6. '[f' → logprob: -18.375078201293945
    7. '.faces' → logprob: -18.625078201293945
    8. '_faces' → logprob: -19.000078201293945
    9. 'fac' → logprob: -19.250078201293945
    10. '[]' → logprob: -19.625078201293945

Token 853: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 854: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 855: ' point' (ID: 2438)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.19833973050117493
    2. 'main' → logprob: -1.8233397006988525
    3. ' find' → logprob: -5.073339939117432
    4. ' solve' → logprob: -6.073339939117432
    5. ' shortest' → logprob: -6.073339939117432
    6. ' bfs' → logprob: -6.448339939117432
    7. 'solve' → logprob: -7.073339939117432
    8. 'b' → logprob: -7.573339939117432
    9. 'dfs' → logprob: -7.573339939117432
    10. ' dfs' → logprob: -7.573339939117432

Token 856: '_in' (ID: 2267)
  Prédit: '_inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inside' → logprob: -0.5591251254081726
    2. '_in' → logprob: -0.9341251254081726
    3. 's' → logprob: -3.9341251850128174
    4. '_to' → logprob: -5.309124946594238
    5. '_faces' → logprob: -5.434124946594238
    6. '_' → logprob: -6.309124946594238
    7. '_location' → logprob: -6.684124946594238
    8. '<|end|>' → logprob: -7.559124946594238
    9. '_at' → logprob: -7.809124946594238
    10. '_face' → logprob: -8.184124946594238

Token 857: '_polygon' (ID: 195427)
  Prédit: '_polygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_polygon' → logprob: -0.028686286881566048
    2. 'polygon' → logprob: -3.778686285018921
    3. '_poly' → logprob: -5.5286865234375
    4. '_faces' → logprob: -7.2786865234375
    5. 'poly' → logprob: -8.1536865234375
    6. '_face' → logprob: -8.2786865234375
    7. '_pol' → logprob: -9.4036865234375
    8. 'face' → logprob: -9.5286865234375
    9. '_' → logprob: -10.7786865234375
    10. 'faces' → logprob: -11.7786865234375

Token 858: '(p' (ID: 2407)
  Prédit: '(poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -0.10412021726369858
    2. '(p' → logprob: -2.6041202545166016
    3. '(' → logprob: -3.9791202545166016
    4. '(point' → logprob: -5.479120254516602
    5. '(pol' → logprob: -6.479120254516602
    6. '(points' → logprob: -8.229120254516602
    7. 'poly' → logprob: -9.854120254516602
    8. '_poly' → logprob: -10.354120254516602
    9. '(Point' → logprob: -10.354120254516602
    10. '(P' → logprob: -10.729120254516602

Token 859: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9003731608390808
    2. ',' → logprob: -1.0253732204437256
    3. 'olygon' → logprob: -2.4003732204437256
    4. 'oly' → logprob: -2.7753732204437256
    5. ')' → logprob: -3.4003732204437256
    6. 'poly' → logprob: -4.2753729820251465
    7. ',p' → logprob: -4.4003729820251465
    8. '):
' → logprob: -5.2753729820251465
    9. '(poly' → logprob: -5.2753729820251465
    10. 'p' → logprob: -5.4003729820251465

Token 860: ' polygon' (ID: 65081)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.014215926639735699
    2. 'polygon' → logprob: -5.63921594619751
    3. 'p' → logprob: -5.88921594619751
    4. 'pol' → logprob: -6.26421594619751
    5. 'points' → logprob: -6.63921594619751
    6. ' poly' → logprob: -7.01421594619751
    7. 'olygon' → logprob: -7.01421594619751
    8. 'faces' → logprob: -7.01421594619751
    9. ')' → logprob: -7.51421594619751
    10. '<|end|>' → logprob: -8.014215469360352

Token 861: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5909377932548523
    2. '):' → logprob: -0.8409377932548523
    3. '):
' → logprob: -4.215937614440918
    4. ')' → logprob: -9.965937614440918
    5. '   ' → logprob: -10.340937614440918
    6. '):
' → logprob: -10.840937614440918
    7. ',p' → logprob: -10.965937614440918
    8. '):

' → logprob: -12.465937614440918
    9. '[' → logprob: -13.715937614440918
    10. '[]):' → logprob: -13.840937614440918

Token 862: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003896514419466257
    2. '(p' → logprob: -6.253896713256836
    3. '    
' → logprob: -8.128896713256836
    4. '    ' → logprob: -8.128896713256836
    5. ' (' → logprob: -8.253896713256836
    6. ' return' → logprob: -8.378896713256836
    7. '(' → logprob: -8.878896713256836
    8. ' 
' → logprob: -9.128896713256836
    9. ':' → logprob: -9.128896713256836
    10. ' ' → logprob: -9.378896713256836

Token 863: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9071683883666992
    2. ' inside' → logprob: -1.6571683883666992
    3. ' return' → logprob: -2.282168388366699
    4. ' (' → logprob: -2.782168388366699
    5. ' =' → logprob: -2.782168388366699
    6. ':' → logprob: -3.407168388366699
    7. ' ' → logprob: -4.032168388366699
    8. '0' → logprob: -4.282168388366699
    9. '=' → logprob: -4.282168388366699
    10. ')' → logprob: -4.532168388366699

Token 864: ' Ray' (ID: 19781)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7777281403541565
    2. ' x' → logprob: -1.2777280807495117
    3. '   ' → logprob: -1.4027280807495117
    4. 'def' → logprob: -4.652728080749512
    5. ' inside' → logprob: -5.777728080749512
    6. 'inside' → logprob: -6.652728080749512
    7. ' return' → logprob: -7.777728080749512
    8. 'return' → logprob: -8.027728080749512
    9. ' def' → logprob: -8.777728080749512
    10. 'if' → logprob: -8.902728080749512

Token 865: ' casting' (ID: 46889)
  Prédit: '_cast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cast' → logprob: -0.03593432903289795
    2. '   ' → logprob: -3.7859344482421875
    3. '_' → logprob: -5.2859344482421875
    4. 'cast' → logprob: -5.4109344482421875
    5. ' cast' → logprob: -7.0359344482421875
    6. 'casting' → logprob: -7.2859344482421875
    7. ' casting' → logprob: -7.5359344482421875
    8. '_c' → logprob: -8.160934448242188
    9. ' _' → logprob: -8.660934448242188
    10. '    ' → logprob: -9.160934448242188

Token 866: ' method' (ID: 2595)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.7521741390228271
    2. ')' → logprob: -1.0021741390228271
    3. '   ' → logprob: -2.752174139022827
    4. '=' → logprob: -3.127174139022827
    5. ' =' → logprob: -4.127174377441406
    6. '_' → logprob: -4.502174377441406
    7. '(' → logprob: -5.502174377441406
    8. ' ' → logprob: -5.627174377441406
    9. ' (' → logprob: -5.752174377441406
    10. ',' → logprob: -6.627174377441406

Token 867: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13153839111328125
    2. ':' → logprob: -2.7565383911132812
    3. '(p' → logprob: -3.5065383911132812
    4. ' =' → logprob: -4.506538391113281
    5. '=' → logprob: -4.881538391113281
    6. ':
' → logprob: -5.131538391113281
    7. '
' → logprob: -7.131538391113281
    8. ',' → logprob: -7.506538391113281
    9. '(x' → logprob: -7.631538391113281
    10. '<|end|>' → logprob: -7.631538391113281

Token 868: 'works' (ID: 23042)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22329233586788177
    2. ')' → logprob: -2.598292350769043
    3. ' p' → logprob: -2.848292350769043
    4. ' True' → logprob: -4.098292350769043
    5. ' x' → logprob: -4.848292350769043
    6. 'def' → logprob: -4.848292350769043
    7. '    ' → logprob: -5.098292350769043
    8. ' def' → logprob: -5.223292350769043
    9. ' not' → logprob: -5.473292350769043
    10. ' False' → logprob: -5.598292350769043

Token 869: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32863181829452515
    2. ' for' → logprob: -1.82863187789917
    3. '(p' → logprob: -3.20363187789917
    4. 'for' → logprob: -3.95363187789917
    5. ' only' → logprob: -4.07863187789917
    6. '   ' → logprob: -4.82863187789917
    7. ' correctly' → logprob: -5.07863187789917
    8. ' with' → logprob: -5.70363187789917
    9. ' not' → logprob: -5.70363187789917
    10. '<|end|>' → logprob: -5.82863187789917

Token 870: ' convex' (ID: 142423)
  Prédit: ' convex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convex' → logprob: -0.25885286927223206
    2. 'conv' → logprob: -1.6338528394699097
    3. ' polygon' → logprob: -4.008852958679199
    4. 'polygon' → logprob: -5.758852958679199
    5. 'def' → logprob: -5.883852958679199
    6. ' conc' → logprob: -6.008852958679199
    7. 'p' → logprob: -7.133852958679199
    8. 'True' → logprob: -7.258852958679199
    9. 'point' → logprob: -7.258852958679199
    10. ' non' → logprob: -7.258852958679199

Token 871: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08785240352153778
    2. ' and' → logprob: -3.9628524780273438
    3. ' polygon' → logprob: -3.9628524780273438
    4. ' polygons' → logprob: -4.087852478027344
    5. ' or' → logprob: -4.712852478027344
    6. ')
' → logprob: -5.462852478027344
    7. 'polygon' → logprob: -5.587852478027344
    8. ' )' → logprob: -5.587852478027344
    9. '_polygon' → logprob: -5.712852478027344
    10. 'and' → logprob: -6.462852478027344

Token 872: ' not' (ID: 625)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.16434255242347717
    2. 'def' → logprob: -2.9143426418304443
    3. 'non' → logprob: -3.4143426418304443
    4. '#' → logprob: -3.5393426418304443
    5. 'poly' → logprob: -4.414342403411865
    6. ' polygon' → logprob: -4.914342403411865
    7. '   ' → logprob: -5.664342403411865
    8. ')' → logprob: -5.789342403411865
    9. 'complex' → logprob: -6.164342403411865
    10. 'any' → logprob: -6.289342403411865

Token 873: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02955120988190174
    2. '):' → logprob: -4.279551029205322
    3. '):
' → logprob: -4.779551029205322
    4. ')
' → logprob: -5.904551029205322
    5. '   ' → logprob: -6.404551029205322
    6. ' )' → logprob: -6.654551029205322
    7. ' p' → logprob: -7.779551029205322
    8. '(p' → logprob: -8.15455150604248
    9. ')p' → logprob: -9.27955150604248
    10. ' ' → logprob: -9.65455150604248

Token 874: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01884249597787857
    2. ':' → logprob: -4.643842697143555
    3. ')' → logprob: -5.893842697143555
    4. '):
' → logprob: -6.268842697143555
    5. ' x' → logprob: -7.018842697143555
    6. '```' → logprob: -7.393842697143555
    7. ',' → logprob: -7.643842697143555
    8. '):' → logprob: -8.143842697143555
    9. ':
' → logprob: -8.268842697143555
    10. ' ' → logprob: -8.393842697143555

Token 875: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011644463986158371
    2. ' x' → logprob: -4.76164436340332
    3. 'x' (adapté à ' x') → logprob: -5.88664436340332
    4. ' inside' → logprob: -9.51164436340332
    5. '    ' → logprob: -10.26164436340332
    6. 'def' → logprob: -10.51164436340332
    7. 'n' → logprob: -11.01164436340332
    8. '
' → logprob: -11.13664436340332
    9. ' n' → logprob: -11.26164436340332
    10. '	x' → logprob: -11.38664436340332

Token 876: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011815387988463044
    2. ',y' → logprob: -7.251181602478027
    3. '=' → logprob: -7.876181602478027
    4. ' =' → logprob: -10.376181602478027
    5. ' ,' → logprob: -10.501181602478027
    6. ',p' → logprob: -10.876181602478027
    7. 'y' → logprob: -12.126181602478027
    8. '   ' → logprob: -12.876181602478027
    9. ',
' → logprob: -13.126181602478027
    10. ')' → logprob: -13.876181602478027

Token 877: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.20141352713108063
    2. ' y' → logprob: -1.7014135122299194
    3. '	y' → logprob: -16.826414108276367
    4. ' ' → logprob: -16.826414108276367
    5. '  ' → logprob: -17.076414108276367
    6. '   ' → logprob: -17.201414108276367
    7. '    ' → logprob: -17.826414108276367
    8. 'p' → logprob: -18.826414108276367
    9. ' =' → logprob: -18.951414108276367
    10. ',y' → logprob: -19.326414108276367

Token 878: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38983699679374695
    2. '=' → logprob: -1.1398370265960693
    3. ',' → logprob: -5.88983678817749
    4. '=p' → logprob: -9.639837265014648
    5. ',p' → logprob: -9.889837265014648
    6. '   ' → logprob: -10.014837265014648
    7. ')' → logprob: -11.014837265014648
    8. ' ' → logprob: -11.764837265014648
    9. ' ,' → logprob: -12.639837265014648
    10. '  ' → logprob: -13.889837265014648

Token 879: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00023059594968799502
    2. ' p' → logprob: -8.37523078918457
    3. '   ' → logprob: -17.37523078918457
    4. '	p' → logprob: -18.12523078918457
    5. '<p' → logprob: -20.25023078918457
    6. '0' → logprob: -20.62523078918457
    7. '(p' → logprob: -20.62523078918457
    8. ' ' → logprob: -20.75023078918457
    9. ' ' → logprob: -20.87523078918457
    10. '  ' → logprob: -20.87523078918457

Token 880: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15996865928173065
    2. '   ' → logprob: -2.159968614578247
    3. ' =' → logprob: -3.534968614578247
    4. ',' → logprob: -5.909968852996826
    5. '
' → logprob: -7.909968852996826
    6. '    ' → logprob: -10.284968376159668
    7. '0' → logprob: -10.409968376159668
    8. '  ' → logprob: -10.784968376159668
    9. ',
' → logprob: -10.909968376159668
    10. '=
' → logprob: -10.909968376159668

Token 881: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7411076426506042
    2. 'inside' → logprob: -0.7411076426506042
    3. 'cnt' → logprob: -3.616107702255249
    4. 'count' → logprob: -4.11610746383667
    5. 'n' → logprob: -5.86610746383667
    6. ' inside' → logprob: -7.99110746383667
    7. 'in' → logprob: -9.366107940673828
    8. '```' → logprob: -9.616107940673828
    9. '       ' → logprob: -9.741107940673828
    10. 'inter' → logprob: -9.991107940673828

Token 882: ' inside' (ID: 6772)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' (adapté à ' inside') → logprob: -0.026058049872517586
    2. 'count' → logprob: -4.526058197021484
    3. 'cnt' → logprob: -4.526058197021484
    4. '   ' → logprob: -5.526058197021484
    5. ' inside' → logprob: -10.026058197021484
    6. 'n' → logprob: -10.401058197021484
    7. 'cross' → logprob: -12.651058197021484
    8. 'in' → logprob: -12.651058197021484
    9. ' cnt' → logprob: -12.901058197021484
    10. 'num' → logprob: -13.026058197021484

Token 883: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42874670028686523
    2. ' =' → logprob: -1.0537467002868652
    3. '=True' → logprob: -10.928747177124023
    4. '=False' → logprob: -11.803747177124023
    5. ',' → logprob: -12.053747177124023
    6. ' ' → logprob: -12.178747177124023
    7. '<|end|>' → logprob: -13.303747177124023
    8. ' ^=' → logprob: -13.553747177124023
    9. ' |=' → logprob: -13.678747177124023
    10. ')' → logprob: -13.678747177124023

Token 884: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00012415809032972902
    2. ' False' → logprob: -9.000123977661133
    3. 'not' → logprob: -14.125123977661133
    4. '0' → logprob: -17.625123977661133
    5. '(False' → logprob: -18.500123977661133
    6. '=False' → logprob: -18.875123977661133
    7. '   ' → logprob: -19.125123977661133
    8. ' not' → logprob: -19.250123977661133
    9. 'false' → logprob: -19.250123977661133
    10. 'len' → logprob: -19.500123977661133

Token 885: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.2007883671903983e-05
    2. '
' → logprob: -12.000021934509277
    3. 'n' → logprob: -13.125021934509277
    4. '    
' → logprob: -13.250021934509277
    5. 'py' → logprob: -13.500021934509277
    6. 'for' → logprob: -13.500021934509277
    7. '```' → logprob: -13.500021934509277
    8. ',' → logprob: -13.875021934509277
    9. 'poly' → logprob: -13.875021934509277
    10. '<|end|>' → logprob: -13.875021934509277

Token 886: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006334598641842604
    2. 'py' → logprob: -5.6313347816467285
    3. 'n' → logprob: -6.3813347816467285
    4. 'px' → logprob: -7.3813347816467285
    5. 'poly' → logprob: -9.25633430480957
    6. '```' → logprob: -9.25633430480957
    7. '
' → logprob: -9.63133430480957
    8. 'for' → logprob: -9.75633430480957
    9. '    
' → logprob: -10.63133430480957
    10. ' py' → logprob: -10.88133430480957

Token 887: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.013139992952346802
    2. 'j' → logprob: -4.5131402015686035
    3. '   ' → logprob: -6.3881402015686035
    4. 'for' → logprob: -8.263139724731445
    5. 'px' → logprob: -10.013139724731445
    6. 'poly' → logprob: -10.013139724731445
    7. ' n' → logprob: -11.013139724731445
    8. 'py' → logprob: -11.513139724731445
    9. 'jx' → logprob: -11.763139724731445
    10. 'nx' → logprob: -12.013139724731445

Token 888: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1278788447380066
    2. ' =' → logprob: -2.1278789043426514
    3. '   ' → logprob: -7.002878665924072
    4. '=len' → logprob: -10.25287914276123
    5. '=int' → logprob: -13.87787914276123
    6. '    ' → logprob: -14.00287914276123
    7. ' ' → logprob: -14.25287914276123
    8. ',' → logprob: -14.25287914276123
    9. '  ' → logprob: -14.50287914276123
    10. 'for' → logprob: -14.50287914276123

Token 889: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00021140782337170094
    2. ' len' → logprob: -8.500211715698242
    3. '(len' → logprob: -12.000211715698242
    4. '   ' → logprob: -14.125211715698242
    5. 'poly' → logprob: -14.625211715698242
    6. 'polygon' → logprob: -15.875211715698242
    7. '[len' → logprob: -16.000211715698242
    8. '```' → logprob: -17.000211715698242
    9. ' ' → logprob: -17.375211715698242
    10. '=len' → logprob: -17.500211715698242

Token 890: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.05600253492593765
    2. 'polygon' → logprob: -2.931002616882324
    3. 'p' → logprob: -7.431002616882324
    4. 'poly' → logprob: -8.181002616882324
    5. '(poly' → logprob: -9.431002616882324
    6. '(pol' → logprob: -9.556002616882324
    7. ' polygon' → logprob: -9.681002616882324
    8. 'pol' → logprob: -10.681002616882324
    9. '[p' → logprob: -13.181002616882324
    10. '_polygon' → logprob: -13.181002616882324

Token 891: 'olygon' (ID: 80431)
  Prédit: 'olygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olygon' → logprob: -0.004583803471177816
    2. ')' → logprob: -5.879583835601807
    3. 'oly' → logprob: -7.254583835601807
    4. 'polygon' → logprob: -7.379583835601807
    5. 'ol' → logprob: -8.129583358764648
    6. ')
' → logprob: -9.004583358764648
    7. '[' → logprob: -11.754583358764648
    8. ' polygon' → logprob: -12.254583358764648
    9. '   ' → logprob: -12.629583358764648
    10. '(p' → logprob: -13.004583358764648

Token 892: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4743213951587677
    2. ')
' → logprob: -0.9743213653564453
    3. '   ' → logprob: -8.349321365356445
    4. ')
' → logprob: -12.599321365356445
    5. ' )' → logprob: -14.599321365356445
    6. ')x' → logprob: -14.849321365356445
    7. ')\
' → logprob: -15.099321365356445
    8. '):
' → logprob: -15.224321365356445
    9. ' ' → logprob: -15.349321365356445
    10. '```' → logprob: -15.474321365356445

Token 893: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20098499953746796
    2. 'px' → logprob: -2.0759849548339844
    3. 'j' → logprob: -3.0759849548339844
    4. 'py' → logprob: -5.450984954833984
    5. 'jx' → logprob: -5.450984954833984
    6. 'for' → logprob: -7.450984954833984
    7. '```' → logprob: -8.075984954833984
    8. ' px' → logprob: -8.325984954833984
    9. 'pj' → logprob: -8.575984954833984
    10. ' j' → logprob: -8.700984954833984

Token 894: ' for' (ID: 395)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.04862222820520401
    2. 'px' → logprob: -3.2986221313476562
    3. 'jx' → logprob: -4.798622131347656
    4. '   ' → logprob: -6.298622131347656
    5. 'i' → logprob: -8.548622131347656
    6. ' j' → logprob: -8.798622131347656
    7. 'for' (adapté à ' for') → logprob: -10.798622131347656
    8. 'p' → logprob: -11.298622131347656
    9. 'py' → logprob: -11.298622131347656
    10. ' px' → logprob: -11.548622131347656

Token 895: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006303519476205111
    2. ' i' → logprob: -7.3756303787231445
    3. '   ' → logprob: -12.875630378723145
    4. '(i' → logprob: -14.500630378723145
    5. '	i' → logprob: -14.875630378723145
    6. '0' → logprob: -16.125629425048828
    7. ' ' → logprob: -16.500629425048828
    8. '```' → logprob: -16.625629425048828
    9. 'I' → logprob: -16.875629425048828
    10. '_i' → logprob: -17.750629425048828

Token 896: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.062093280255794525
    2. 'in' → logprob: -2.8120932579040527
    3. '0' → logprob: -9.937093734741211
    4. '   ' → logprob: -10.562093734741211
    5. ' ' → logprob: -10.812093734741211
    6. '	in' → logprob: -11.937093734741211
    7. '=' → logprob: -12.062093734741211
    8. ',' → logprob: -12.687093734741211
    9. '(' → logprob: -12.687093734741211
    10. '  ' → logprob: -12.812093734741211

Token 897: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011050531640648842
    2. ' range' → logprob: -4.511050701141357
    3. '(range' → logprob: -13.5110502243042
    4. '0' → logprob: -13.7610502243042
    5. ' ' → logprob: -15.6360502243042
    6. '(' → logprob: -16.636051177978516
    7. '   ' → logprob: -18.011051177978516
    8. 'n' → logprob: -19.511051177978516
    9. '	range' → logprob: -19.511051177978516
    10. 'in' → logprob: -19.886051177978516

Token 898: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006844787858426571
    2. '(n' → logprob: -5.006844997406006
    3. ' n' → logprob: -9.131844520568848
    4. '1' → logprob: -11.381844520568848
    5. '(' → logprob: -12.256844520568848
    6. '0' → logprob: -13.131844520568848
    7. '   ' → logprob: -13.256844520568848
    8. ' (' → logprob: -14.006844520568848
    9. '	n' → logprob: -14.881844520568848
    10. ' ' → logprob: -15.631844520568848

Token 899: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08762845396995544
    2. '):' → logprob: -2.5876283645629883
    3. '+' → logprob: -5.212628364562988
    4. '   ' → logprob: -5.962628364562988
    5. '-' → logprob: -7.962628364562988
    6. ')' → logprob: -9.337628364562988
    7. '):
' → logprob: -10.087628364562988
    8. ',' → logprob: -10.462628364562988
    9. ' +' → logprob: -10.462628364562988
    10. ':' → logprob: -10.712628364562988

Token 900: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023395953699946404
    2. 'j' → logprob: -4.273396015167236
    3. ' j' → logprob: -4.773396015167236
    4. 'jx' → logprob: -7.398396015167236
    5. '```' → logprob: -9.898395538330078
    6. '	j' → logprob: -10.523395538330078
    7. 'px' → logprob: -11.398395538330078
    8. '    ' → logprob: -11.523395538330078
    9. '  ' → logprob: -11.898395538330078
    10. ' ' → logprob: -11.898395538330078

Token 901: ' x' (ID: 1215)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.022512948140501976
    2. 'jx' → logprob: -4.022512912750244
    3. 'x' (adapté à ' x') → logprob: -5.522512912750244
    4. 'px' → logprob: -8.522513389587402
    5. '   ' → logprob: -9.147513389587402
    6. ' j' → logprob: -10.522513389587402
    7. 'xi' → logprob: -11.022513389587402
    8. '(j' → logprob: -12.647513389587402
    9. '	j' → logprob: -12.772513389587402
    10. '(x' → logprob: -14.522513389587402

Token 902: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.34712985157966614
    2. ',' → logprob: -2.3471298217773438
    3. '=' → logprob: -2.8471298217773438
    4. 'i' → logprob: -3.3471298217773438
    5. 'poly' → logprob: -3.9721298217773438
    6. 'p' → logprob: -4.472129821777344
    7. '0' → logprob: -4.597129821777344
    8. 'y' → logprob: -4.847129821777344
    9. ' =' → logprob: -4.847129821777344
    10. '>' → logprob: -5.222129821777344

Token 903: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008490823209285736
    2. ',y' → logprob: -4.883491039276123
    3. ',x' → logprob: -8.133490562438965
    4. ' ,' → logprob: -8.258490562438965
    5. ',i' → logprob: -9.008490562438965
    6. ',p' → logprob: -9.258490562438965
    7. '=' → logprob: -10.133490562438965
    8. ' =' → logprob: -11.258490562438965
    9. ',v' → logprob: -11.883490562438965
    10. '   ' → logprob: -11.883490562438965

Token 904: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.165027217415627e-05
    2. ' y' → logprob: -10.750021934509277
    3. 'polygon' → logprob: -16.25002098083496
    4. '	y' → logprob: -17.75002098083496
    5. 'yj' → logprob: -18.25002098083496
    6. 'x' → logprob: -18.37502098083496
    7. ' polygon' → logprob: -19.25002098083496
    8. ',y' → logprob: -19.87502098083496
    9. 'yp' → logprob: -20.00002098083496
    10. 'yl' → logprob: -20.37502098083496

Token 905: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10175848752260208
    2. '1' → logprob: -3.4767584800720215
    3. 'i' → logprob: -3.4767584800720215
    4. ',' → logprob: -4.3517584800720215
    5. '=i' → logprob: -4.3517584800720215
    6. ' =' → logprob: -5.2267584800720215
    7. ',i' → logprob: -6.1017584800720215
    8. '[i' → logprob: -7.2267584800720215
    9. ')' → logprob: -8.97675895690918
    10. '0' → logprob: -8.97675895690918

Token 906: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04314215108752251
    2. ' =' → logprob: -3.168142080307007
    3. ',' → logprob: -8.918142318725586
    4. '       ' → logprob: -12.168142318725586
    5. '   ' → logprob: -13.668142318725586
    6. '=p' → logprob: -14.043142318725586
    7. '=i' → logprob: -15.043142318725586
    8. '=
' → logprob: -15.293142318725586
    9. ')' → logprob: -15.418142318725586
    10. '=line' → logprob: -15.668142318725586

Token 907: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.0024806505534797907
    2. ' polygon' → logprob: -6.002480506896973
    3. 'poly' → logprob: -12.252480506896973
    4. 'pol' → logprob: -15.502480506896973
    5. '_polygon' → logprob: -17.75248146057129
    6. 'python' → logprob: -19.00248146057129
    7. 'polar' → logprob: -19.37748146057129
    8. 'olygon' → logprob: -19.50248146057129
    9. 'p' → logprob: -20.50248146057129
    10. '   ' → logprob: -21.50248146057129

Token 908: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.650518920039758e-06
    2. '   ' → logprob: -13.250003814697266
    3. 'i' → logprob: -13.625003814697266
    4. '       ' → logprob: -14.750003814697266
    5. '[' → logprob: -15.750003814697266
    6. '(i' → logprob: -17.125003814697266
    7. ' [' → logprob: -17.625003814697266
    8. '[(' → logprob: -17.625003814697266
    9. '[
' → logprob: -18.125003814697266
    10. ',i' → logprob: -18.250003814697266

Token 909: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.04445837810635567
    2. ']' → logprob: -3.6694583892822266
    3. '       ' → logprob: -4.794458389282227
    4. ')
' → logprob: -4.919458389282227
    5. '   ' → logprob: -6.544458389282227
    6. ')' → logprob: -8.544458389282227
    7. '][' → logprob: -9.294458389282227
    8. '<|end|>' → logprob: -9.294458389282227
    9. ']
' → logprob: -9.294458389282227
    10. '],' → logprob: -9.419458389282227

Token 910: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03530276566743851
    2. '   ' → logprob: -3.6603028774261475
    3. 'x' → logprob: -5.910302639007568
    4. ',' → logprob: -6.035302639007568
    5. ' ' → logprob: -6.660302639007568
    6. ' x' → logprob: -7.910302639007568
    7. '<|end|>' → logprob: -7.910302639007568
    8. '0' → logprob: -8.160303115844727
    9. '        
' → logprob: -8.285303115844727
    10. '     ' → logprob: -8.410303115844727

Token 911: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0005426656571216881
    2. ' x' → logprob: -7.625542640686035
    3. '       ' → logprob: -10.375542640686035
    4. '   ' → logprob: -11.250542640686035
    5. '	x' → logprob: -11.875542640686035
    6. ',x' → logprob: -12.750542640686035
    7. ' ' → logprob: -15.625542640686035
    8. ',' → logprob: -15.625542640686035
    9. '0' → logprob: -16.25054359436035
    10. 'j' → logprob: -17.25054359436035

Token 912: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7609925866127014
    2. '       ' → logprob: -1.5109925270080566
    3. '1' → logprob: -2.0109925270080566
    4. ' =' → logprob: -2.7609925270080566
    5. ',' → logprob: -3.2609925270080566
    6. '```' → logprob: -4.010992527008057
    7. '#' → logprob: -4.135992527008057
    8. '   ' → logprob: -4.385992527008057
    9. '2' → logprob: -4.635992527008057
    10. '_next' → logprob: -5.385992527008057

Token 913: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005294414004310966
    2. '=' → logprob: -7.7505292892456055
    3. ' ,' → logprob: -10.250529289245605
    4. ' =' → logprob: -11.000529289245605
    5. ',i' → logprob: -11.625529289245605
    6. '   ' → logprob: -11.750529289245605
    7. '```' → logprob: -11.875529289245605
    8. '0' → logprob: -12.125529289245605
    9. ',
' → logprob: -12.875529289245605
    10. '<|end|>' → logprob: -13.125529289245605

Token 914: ' y' (ID: 342)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.06208767741918564
    2. ' polygon' → logprob: -2.8120877742767334
    3. 'poly' → logprob: -9.062088012695312
    4. 'i' → logprob: -12.687088012695312
    5. 'pol' → logprob: -15.062088012695312
    6. ' i' → logprob: -15.562088012695312
    7. '_polygon' → logprob: -15.937088012695312
    8. 'x' → logprob: -16.812088012695312
    9. '   ' → logprob: -16.937088012695312
    10. 'y' → logprob: -17.312088012695312

Token 915: '2' (ID: 17)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00857036467641592
    2. 'i' → logprob: -4.883570194244385
    3. '[i' → logprob: -7.258570194244385
    4. '1' → logprob: -8.883570671081543
    5. ' (' → logprob: -9.258570671081543
    6. '[(' → logprob: -11.383570671081543
    7. '(' → logprob: -12.258570671081543
    8. '```' → logprob: -13.133570671081543
    9. '+' → logprob: -13.383570671081543
    10. '(x' → logprob: -14.008570671081543

Token 916: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1813669353723526
    2. ' =' → logprob: -1.8063669204711914
    3. '   ' → logprob: -7.056366920471191
    4. '       ' → logprob: -8.056366920471191
    5. ')' → logprob: -8.306366920471191
    6. ',' → logprob: -10.056366920471191
    7. '=
' → logprob: -10.056366920471191
    8. '[' → logprob: -10.681366920471191
    9. ' ' → logprob: -10.931366920471191
    10. ')=' → logprob: -11.431366920471191

Token 917: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.018199928104877472
    2. ' polygon' → logprob: -4.018199920654297
    3. 'poly' → logprob: -10.018199920654297
    4. '   ' → logprob: -13.518199920654297
    5. 'pol' → logprob: -13.643199920654297
    6. 'olygon' → logprob: -13.893199920654297
    7. '_polygon' → logprob: -14.393199920654297
    8. 'polar' → logprob: -14.768199920654297
    9. ' ' → logprob: -15.393199920654297
    10. 'python' → logprob: -15.768199920654297

Token 918: '[(' (ID: 20542)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.48201191425323486
    2. '[(' → logprob: -0.9820119142532349
    3. '(i' → logprob: -4.857011795043945
    4. 'i' → logprob: -9.982011795043945
    5. '[
' → logprob: -10.232011795043945
    6. '[' → logprob: -10.982011795043945
    7. '   ' → logprob: -11.482011795043945
    8. '```' → logprob: -11.857011795043945
    9. '((' → logprob: -12.857011795043945
    10. '1' → logprob: -12.982011795043945

Token 919: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014163863845169544
    2. '(i' → logprob: -4.264163970947266
    3. ' i' → logprob: -15.889163970947266
    4. '{i' → logprob: -16.389163970947266
    5. ' (' → logprob: -16.639163970947266
    6. '```' → logprob: -17.514163970947266
    7. '   ' → logprob: -18.264163970947266
    8. '	i' → logprob: -19.389163970947266
    9. ')i' → logprob: -19.764163970947266
    10. '_i' → logprob: -19.889163970947266

Token 920: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.039287008345127106
    2. ' +' → logprob: -3.9142870903015137
    3. '1' → logprob: -4.539287090301514
    4. 'i' → logprob: -5.164287090301514
    5. '+i' → logprob: -6.664287090301514
    6. '(i' → logprob: -7.164287090301514
    7. '[i' → logprob: -9.914286613464355
    8. '0' → logprob: -10.914286613464355
    9. ' i' → logprob: -11.164286613464355
    10. '{i' → logprob: -11.414286613464355

Token 921: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'i' → logprob: -17.0
    3. ' ' → logprob: -17.625
    4. '```' → logprob: -19.125
    5. '(i' → logprob: -20.125
    6. '   ' → logprob: -20.5
    7. '(' → logprob: -21.125
    8. 'def' → logprob: -21.5
    9. '0' → logprob: -22.125
    10. ')' → logprob: -22.25

Token 922: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006736095994710922
    2. ')%' → logprob: -5.0067362785339355
    3. ')]' → logprob: -12.006735801696777
    4. '%' → logprob: -12.131735801696777
    5. ')
' → logprob: -12.506735801696777
    6. ' )' → logprob: -13.631735801696777
    7. ')i' → logprob: -13.756735801696777
    8. ']' → logprob: -13.881735801696777
    9. ' %' → logprob: -14.256735801696777
    10. '),' → logprob: -15.006735801696777

Token 923: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32993340492248535
    2. '%' → logprob: -1.8299334049224854
    3. ')%' → logprob: -2.5799334049224854
    4. ' %' → logprob: -3.2049334049224854
    5. ']' → logprob: -6.954933166503906
    6. '%n' → logprob: -7.079933166503906
    7. '%i' → logprob: -7.079933166503906
    8. '```' → logprob: -7.579933166503906
    9. ']%' → logprob: -8.079933166503906
    10. ')]' → logprob: -8.454933166503906

Token 924: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.5048530030981055e-06
    2. ' n' → logprob: -13.500001907348633
    3. '```' → logprob: -17.750001907348633
    4. 'poly' → logprob: -18.250001907348633
    5. ')' → logprob: -18.500001907348633
    6. 'polygon' → logprob: -18.625001907348633
    7. ')n' → logprob: -18.625001907348633
    8. '(n' → logprob: -18.750001907348633
    9. '``' → logprob: -19.250001907348633
    10. '	n' → logprob: -20.125001907348633

Token 925: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011095219291746616
    2. ']
' → logprob: -4.51109504699707
    3. ' ]' → logprob: -10.88609504699707
    4. ')]' → logprob: -11.26109504699707
    5. ')' → logprob: -12.26109504699707
    6. '   ' → logprob: -12.38609504699707
    7. ']
' → logprob: -12.76109504699707
    8. '][' → logprob: -14.01109504699707
    9. ']

' → logprob: -14.13609504699707
    10. ' ]
' → logprob: -14.51109504699707

Token 926: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010067274561151862
    2. ' if' → logprob: -7.626006603240967
    3. '   ' → logprob: -8.126007080078125
    4. 'if' → logprob: -8.751007080078125
    5. '```' → logprob: -10.626007080078125
    6. '<|end|>' → logprob: -11.126007080078125
    7. ',' → logprob: -12.126007080078125
    8. '	   ' → logprob: -12.251007080078125
    9. '           ' → logprob: -12.501007080078125
    10. '        
' → logprob: -13.126007080078125

Token 927: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16440889239311218
    2. ' if' → logprob: -2.4144089221954346
    3. '       ' → logprob: -2.7894089221954346
    4. '   ' → logprob: -7.2894086837768555
    5. '	if' → logprob: -10.539408683776855
    6. '```' → logprob: -12.039408683776855
    7. ' ' → logprob: -12.414408683776855
    8. '     ' → logprob: -13.539408683776855
    9. ',' → logprob: -13.664408683776855
    10. '           ' → logprob: -13.789408683776855

Token 928: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0013250032206997275
    2. '(y' → logprob: -6.7513251304626465
    3. '(' → logprob: -9.251324653625488
    4. ' ((' → logprob: -10.001324653625488
    5. '(((' → logprob: -11.501324653625488
    6. 'y' → logprob: -13.501324653625488
    7. '   ' → logprob: -14.001324653625488
    8. ' (' → logprob: -14.751324653625488
    9. '(
' → logprob: -15.251324653625488
    10. '(py' → logprob: -16.001325607299805

Token 929: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0703490749001503
    2. '(y' → logprob: -2.6953489780426025
    3. '((' → logprob: -7.820349216461182
    4. ' y' → logprob: -12.195348739624023
    5. ' (' → logprob: -13.070348739624023
    6. '(' → logprob: -13.070348739624023
    7. '[y' → logprob: -15.195348739624023
    8. '   ' → logprob: -15.570348739624023
    9. 'y's' → logprob: -15.570348739624023
    10. '(((' → logprob: -15.570348739624023

Token 930: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008901018649339676
    2. ' >' → logprob: -5.258901119232178
    3. '>' → logprob: -5.633901119232178
    4. ' ' → logprob: -11.00890064239502
    5. ' y' → logprob: -11.25890064239502
    6. ' -' → logprob: -11.38390064239502
    7. '   ' → logprob: -11.75890064239502
    8. '2' → logprob: -11.88390064239502
    9. '[' → logprob: -12.13390064239502
    10. ' <' → logprob: -12.25890064239502

Token 931: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.10022488981485367
    2. ' >' → logprob: -2.3502249717712402
    3. '<=' → logprob: -11.850224494934082
    4. '   ' → logprob: -12.850224494934082
    5. ' <=' → logprob: -13.225224494934082
    6. '>x' → logprob: -13.350224494934082
    7. '```' → logprob: -13.600224494934082
    8. ')>' → logprob: -13.725224494934082
    9. ' ' → logprob: -14.350224494934082
    10. '
' → logprob: -14.725224494934082

Token 932: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00038598617538809776
    2. ' y' → logprob: -7.875385761260986
    3. 'p' → logprob: -12.125386238098145
    4. '	y' → logprob: -15.500386238098145
    5. ')y' → logprob: -16.500385284423828
    6. ')' → logprob: -18.000385284423828
    7. '_y' → logprob: -18.500385284423828
    8. '   ' → logprob: -18.625385284423828
    9. '```' → logprob: -18.750385284423828
    10. '(y' → logprob: -18.750385284423828

Token 933: ')' (ID: 8)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.06067059934139252
    2. ')' → logprob: -3.0606706142425537
    3. ' y' → logprob: -4.435670375823975
    4. ')y' → logprob: -9.310670852661133
    5. ')!=' → logprob: -10.810670852661133
    6. '!=' → logprob: -11.310670852661133
    7. ')>' → logprob: -11.685670852661133
    8. '(y' → logprob: -11.935670852661133
    9. '   ' → logprob: -12.185670852661133
    10. '	y' → logprob: -12.810670852661133

Token 934: ' !=' (ID: 1666)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16626597940921783
    2. '!=' → logprob: -2.1662659645080566
    3. ')!=' → logprob: -3.4162659645080566
    4. ' !=' → logprob: -5.166265964508057
    5. ' )' → logprob: -10.666266441345215
    6. '!==' → logprob: -12.791266441345215
    7. '!=(' → logprob: -13.291266441345215
    8. ']!=' → logprob: -13.541266441345215
    9. ')!' → logprob: -13.916266441345215
    10. '!' → logprob: -14.166266441345215

Token 935: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.02980337291955948
    2. ' (' → logprob: -3.5298032760620117
    3. '(py' → logprob: -10.529803276062012
    4. '(x' → logprob: -11.779803276062012
    5. '(' → logprob: -11.779803276062012
    6. '((' → logprob: -12.779803276062012
    7. '   ' → logprob: -13.029803276062012
    8. '(True' → logprob: -13.279803276062012
    9. '       ' → logprob: -13.779803276062012
    10. '(user' → logprob: -14.779803276062012

Token 936: 'y' (ID: 88)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.013968978077173233
    2. 'y' → logprob: -4.6389689445495605
    3. ' (' → logprob: -5.5139689445495605
    4. ' y' → logprob: -8.888969421386719
    5. '   ' → logprob: -11.013969421386719
    6. '       ' → logprob: -12.263969421386719
    7. '
' → logprob: -12.638969421386719
    8. '[y' → logprob: -12.638969421386719
    9. '	y' → logprob: -13.513969421386719
    10. ' ' → logprob: -13.513969421386719

Token 937: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12818016111850739
    2. '[' → logprob: -2.2531802654266357
    3. ' ' → logprob: -5.253180027008057
    4. '```' → logprob: -5.878180027008057
    5. '[y' → logprob: -6.003180027008057
    6. '1' → logprob: -6.628180027008057
    7. '[i' → logprob: -6.878180027008057
    8. 'y' → logprob: -6.878180027008057
    9. '>' → logprob: -7.003180027008057
    10. '   ' → logprob: -9.003180503845215

Token 938: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5236368775367737
    2. '>' → logprob: -0.8986368775367737
    3. 'y' → logprob: -8.523636817932129
    4. ' ' → logprob: -8.648636817932129
    5. ' y' → logprob: -9.273636817932129
    6. ')' → logprob: -11.148636817932129
    7. ')>' → logprob: -11.398636817932129
    8. '```' → logprob: -11.523636817932129
    9. '   ' → logprob: -12.648636817932129
    10. '0' → logprob: -12.898636817932129

Token 939: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.47407931089401245
    2. ' y' → logprob: -0.9740793108940125
    3. ' ' → logprob: -13.474079132080078
    4. '	y' → logprob: -14.349079132080078
    5. '   ' → logprob: -16.349079132080078
    6. ' ' → logprob: -16.474079132080078
    7. ')y' → logprob: -16.849079132080078
    8. ')' → logprob: -17.224079132080078
    9. '(y' → logprob: -17.474079132080078
    10. '    ' → logprob: -17.849079132080078

Token 940: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.070975071750581e-05
    2. ' )' → logprob: -10.875030517578125
    3. ' and' → logprob: -11.875030517578125
    4. '):
' → logprob: -12.625030517578125
    5. 'and' → logprob: -14.250030517578125
    6. '):' → logprob: -14.875030517578125
    7. '```' → logprob: -16.375030517578125
    8. '),' → logprob: -16.875030517578125
    9. '   ' → logprob: -17.000030517578125
    10. '))' → logprob: -17.000030517578125

Token 941: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005993501283228397
    2. 'and' → logprob: -5.130993366241455
    3. '           ' → logprob: -10.255993843078613
    4. ':' → logprob: -11.130993843078613
    5. ')' → logprob: -12.255993843078613
    6. '       ' → logprob: -13.005993843078613
    7. ' ' → logprob: -13.380993843078613
    8. '```' → logprob: -13.630993843078613
    9. '          ' → logprob: -14.005993843078613
    10. '        ' → logprob: -14.005993843078613

Token 942: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.11163388937711716
    2. '(x' → logprob: -2.611633777618408
    3. ' x' → logprob: -3.611633777618408
    4. '(' → logprob: -5.486633777618408
    5. 'x' → logprob: -6.861633777618408
    6. '(y' → logprob: -11.736634254455566
    7. ' ' → logprob: -12.861634254455566
    8. '   ' → logprob: -13.486634254455566
    9. '```' → logprob: -13.986634254455566
    10. '((' → logprob: -13.986634254455566

Token 943: 'x' (ID: 87)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.313349187374115
    2. 'x' → logprob: -1.3133492469787598
    3. '(x' → logprob: -9.438348770141602
    4. ' (' → logprob: -11.938348770141602
    5. ' y' → logprob: -14.938348770141602
    6. '	x' → logprob: -15.063348770141602
    7. '(' → logprob: -15.313348770141602
    8. '   ' → logprob: -15.438348770141602
    9. ' ' → logprob: -16.1883487701416
    10. ')x' → logprob: -16.9383487701416

Token 944: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.06199704483151436
    2. '<' → logprob: -2.8119969367980957
    3. '<p' → logprob: -11.186997413635254
    4. '<x' → logprob: -11.811997413635254
    5. '<|end|>' → logprob: -12.936997413635254
    6. '[' → logprob: -13.936997413635254
    7. ')<' → logprob: -14.436997413635254
    8. ' ' → logprob: -14.561997413635254
    9. ')' → logprob: -14.561997413635254
    10. ' <
' → logprob: -14.811997413635254

Token 945: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5645158290863037
    2. 'x' → logprob: -1.1895158290863037
    3. ' (' → logprob: -2.4395158290863037
    4. ' x' → logprob: -3.4395158290863037
    5. '((' → logprob: -5.314516067504883
    6. '(' → logprob: -5.939516067504883
    7. ' ((' → logprob: -9.064516067504883
    8. ' ' → logprob: -11.439516067504883
    9. '   ' → logprob: -12.064516067504883
    10. '```' → logprob: -12.064516067504883

Token 946: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00010270876373397186
    2. '(x' → logprob: -9.625102996826172
    3. ' x' → logprob: -10.250102996826172
    4. '{x' → logprob: -14.750102996826172
    5. ')x' → logprob: -14.875102996826172
    6. '   ' → logprob: -16.250102996826172
    7. ' (' → logprob: -16.500102996826172
    8. '(' → logprob: -16.500102996826172
    9. '```' → logprob: -16.500102996826172
    10. '((' → logprob: -16.750102996826172

Token 947: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25212571024894714
    2. '2' → logprob: -1.5021257400512695
    3. 'x' → logprob: -9.12712574005127
    4. ' -' → logprob: -9.75212574005127
    5. '[' → logprob: -11.37712574005127
    6. '```' → logprob: -11.87712574005127
    7. '-' → logprob: -12.62712574005127
    8. 'y' → logprob: -13.12712574005127
    9. '+' → logprob: -13.87712574005127
    10. ' x' → logprob: -14.12712574005127

Token 948: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10020947456359863
    2. ' -' → logprob: -2.3502094745635986
    3. '-x' → logprob: -13.60020923614502
    4. '[' → logprob: -14.47520923614502
    5. '```' → logprob: -14.97520923614502
    6. '−' → logprob: -15.60020923614502
    7. ')' → logprob: -15.72520923614502
    8. ' ' → logprob: -15.97520923614502
    9. '1' → logprob: -16.475210189819336
    10. 'x' → logprob: -16.725210189819336

Token 949: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00012415809032972902
    2. ' x' → logprob: -9.000123977661133
    3. '(x' → logprob: -14.375123977661133
    4. ')x' → logprob: -16.875123977661133
    5. ' (' → logprob: -18.875123977661133
    6. '	x' → logprob: -19.000123977661133
    7. '{x' → logprob: -19.125123977661133
    8. '   ' → logprob: -19.875123977661133
    9. ' ' → logprob: -20.000123977661133
    10. '<|end|>' → logprob: -20.000123977661133

Token 950: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029841667041182518
    2. 'x' → logprob: -3.529841661453247
    3. ' x' → logprob: -10.029841423034668
    4. ')x' → logprob: -10.654841423034668
    5. ')' → logprob: -11.404841423034668
    6. '0' → logprob: -11.654841423034668
    7. ' ' → logprob: -13.904841423034668
    8. 'i' → logprob: -14.154841423034668
    9. '(x' → logprob: -14.404841423034668
    10. '   ' → logprob: -14.529841423034668

Token 951: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.8590300139039755e-05
    2. ')*' → logprob: -10.375048637390137
    3. ')*(' → logprob: -11.000048637390137
    4. ' )' → logprob: -14.750048637390137
    5. '*' → logprob: -15.625048637390137
    6. '*)' → logprob: -16.87504768371582
    7. ')
' → logprob: -17.25004768371582
    8. '>' → logprob: -19.25004768371582
    9. '[' → logprob: -19.25004768371582
    10. ')(' → logprob: -19.37504768371582

Token 952: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008314246661029756
    2. ')*' → logprob: -7.375831604003906
    3. '*' → logprob: -8.875831604003906
    4. ')*(' → logprob: -9.750831604003906
    5. ' )' → logprob: -12.750831604003906
    6. ' *' → logprob: -13.125831604003906
    7. '*)' → logprob: -13.500831604003906
    8. '*(' → logprob: -14.875831604003906
    9. '>' → logprob: -16.875831604003906
    10. ')
' → logprob: -16.875831604003906

Token 953: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -6.034592388459714e-06
    2. ' (' → logprob: -12.125005722045898
    3. '(x' → logprob: -15.125005722045898
    4. '(' → logprob: -16.1250057220459
    5. '((' → logprob: -16.3750057220459
    6. '(Y' → logprob: -18.0000057220459
    7. '   ' → logprob: -18.8750057220459
    8. '
' → logprob: -19.1250057220459
    9. '\
' → logprob: -19.2500057220459
    10. '(
' → logprob: -20.6250057220459

Token 954: 'y' (ID: 88)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -1.1472419600977446e-06
    2. ' (' → logprob: -14.125000953674316
    3. '(' → logprob: -15.750000953674316
    4. '   ' → logprob: -16.750001907348633
    5. '(Y' → logprob: -17.125001907348633
    6. '((' → logprob: -17.375001907348633
    7. '
' → logprob: -17.375001907348633
    8. '       ' → logprob: -18.625001907348633
    9. '(x' → logprob: -18.625001907348633
    10. 'y' → logprob: -19.000001907348633

Token 955: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2519806921482086
    2. '-' → logprob: -1.5019806623458862
    3. '   ' → logprob: -10.376980781555176
    4. 'y' → logprob: -12.001980781555176
    5. ' ' → logprob: -12.126980781555176
    6. ' y' → logprob: -13.001980781555176
    7. '1' → logprob: -13.751980781555176
    8. 'p' → logprob: -13.876980781555176
    9. 'import' → logprob: -14.376980781555176
    10. '  ' → logprob: -14.501980781555176

Token 956: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.6060808522743173e-05
    2. ' y' → logprob: -10.750025749206543
    3. '(y' → logprob: -12.375025749206543
    4. '	y' → logprob: -16.25002670288086
    5. '   ' → logprob: -16.50002670288086
    6. ')y' → logprob: -16.62502670288086
    7. ')' → logprob: -18.50002670288086
    8. '[y' → logprob: -19.50002670288086
    9. '       ' → logprob: -19.87502670288086
    10. ''y' → logprob: -20.00002670288086

Token 957: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ')' → logprob: -13.500001907348633
    3. '
' → logprob: -16.375001907348633
    4. ' ' → logprob: -16.750001907348633
    5. ')/(' → logprob: -16.750001907348633
    6. '```' → logprob: -16.750001907348633
    7. '[' → logprob: -17.625001907348633
    8. ')/' → logprob: -18.562501907348633
    9. '   ' → logprob: -18.687501907348633
    10. ',' → logprob: -19.125001907348633

Token 958: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023606636095792055
    2. ')/(' → logprob: -6.127360820770264
    3. '/' → logprob: -9.502360343933105
    4. ')/' → logprob: -9.877360343933105
    5. ' )' → logprob: -10.377360343933105
    6. ' /' → logprob: -11.877360343933105
    7. '/(' → logprob: -12.127360343933105
    8. ')
' → logprob: -13.502360343933105
    9. '```' → logprob: -14.377360343933105
    10. '0' → logprob: -14.377360343933105

Token 959: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.044436026364564896
    2. ' /' → logprob: -3.419435977935791
    3. '/(' → logprob: -4.669435977935791
    4. '/
' → logprob: -6.669435977935791
    5. ')' → logprob: -10.79443645477295
    6. ' /(' → logprob: -10.79443645477295
    7. ')/(' → logprob: -11.04443645477295
    8. '/x' → logprob: -11.41943645477295
    9. ' /
' → logprob: -11.54443645477295
    10. '/
' → logprob: -13.29443645477295

Token 960: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.003696754574775696
    2. ' (' → logprob: -5.753696918487549
    3. '(x' → logprob: -7.628696918487549
    4. '(' → logprob: -10.37869644165039
    5. '((' → logprob: -14.00369644165039
    6. '
' → logprob: -15.62869644165039
    7. '   ' → logprob: -15.75369644165039
    8. ' ' → logprob: -16.00369644165039
    9. ',' → logprob: -17.12869644165039
    10. ')' → logprob: -17.37869644165039

Token 961: 'y' (ID: 88)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.000509187753777951
    2. ' (' → logprob: -7.750509262084961
    3. '(' → logprob: -9.875509262084961
    4. '(x' → logprob: -10.750509262084961
    5. '((' → logprob: -12.500509262084961
    6. '   ' → logprob: -13.875509262084961
    7. ')(' → logprob: -15.125509262084961
    8. ')' → logprob: -15.500509262084961
    9. ' ' → logprob: -15.750509262084961
    10. '
' → logprob: -16.50050926208496

Token 962: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01397496834397316
    2. '-' → logprob: -5.013975143432617
    3. ' -' → logprob: -5.138975143432617
    4. '1' → logprob: -7.763975143432617
    5. '(y' → logprob: -8.763975143432617
    6. '(' → logprob: -8.763975143432617
    7. '-y' → logprob: -8.888975143432617
    8. '[' → logprob: -9.013975143432617
    9. '```' → logprob: -9.638975143432617
    10. '
' → logprob: -10.263975143432617

Token 963: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4740903675556183
    2. ' -' → logprob: -0.9740903377532959
    3. '-y' → logprob: -11.599090576171875
    4. ' y' → logprob: -13.474090576171875
    5. ' ' → logprob: -13.724090576171875
    6. '(y' → logprob: -14.724090576171875
    7. 'y' → logprob: -14.974090576171875
    8. '-
' → logprob: -15.349090576171875
    9. '   ' → logprob: -15.474090576171875
    10. '```' → logprob: -16.224090576171875

Token 964: ' y' (ID: 342)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.3167424499988556
    2. 'y' → logprob: -1.3167424201965332
    3. ' (' → logprob: -5.941742420196533
    4. '(' → logprob: -7.691742420196533
    5. ' y' → logprob: -8.066742897033691
    6. '   ' → logprob: -10.816742897033691
    7. '(x' → logprob: -11.316742897033691
    8. '[y' → logprob: -12.129242897033691
    9. ' ' → logprob: -12.316742897033691
    10. '	y' → logprob: -12.504242897033691

Token 965: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ')' → logprob: -14.125001907348633
    3. ' ' → logprob: -14.500001907348633
    4. '```' → logprob: -14.875001907348633
    5. '
' → logprob: -16.125001907348633
    6. ' -' → logprob: -16.437501907348633
    7. '[' → logprob: -16.562501907348633
    8. '...' → logprob: -17.437501907348633
    9. '-' → logprob: -17.500001907348633
    10. 'i' → logprob: -17.625001907348633

Token 966: ')' (ID: 8)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5953555703163147
    2. '+' → logprob: -0.8453555703163147
    3. ')' → logprob: -3.97035551071167
    4. ')+' → logprob: -8.220355987548828
    5. '+x' → logprob: -9.470355987548828
    6. ' ' → logprob: -12.470355987548828
    7. '[' → logprob: -12.720355987548828
    8. ' )' → logprob: -12.970355987548828
    9. '>' → logprob: -13.720355987548828
    10. '+)' → logprob: -14.220355987548828

Token 967: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6935237050056458
    2. ' +' → logprob: -0.6935237050056458
    3. '+x' → logprob: -7.94352388381958
    4. ')' → logprob: -11.068523406982422
    5. ')+' → logprob: -12.943523406982422
    6. '[' → logprob: -13.693523406982422
    7. '+y' → logprob: -14.693523406982422
    8. ' ' → logprob: -14.818523406982422
    9. '+
' → logprob: -14.943523406982422
    10. ' ' → logprob: -15.443523406982422

Token 968: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006715370807796717
    2. ' x' → logprob: -5.006715297698975
    3. '(x' → logprob: -18.256715774536133
    4. ')x' → logprob: -19.381715774536133
    5. '	x' → logprob: -19.756715774536133
    6. '{x' → logprob: -21.381715774536133
    7. '"x' → logprob: -22.631715774536133
    8. '   ' → logprob: -23.006715774536133
    9. ',x' → logprob: -23.256715774536133
    10. '$x' → logprob: -23.256715774536133

Token 969: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9623810658231378e-05
    2. ')' → logprob: -11.750020027160645
    3. '[' → logprob: -11.750020027160645
    4. '<|end|>' → logprob: -13.125020027160645
    5. '_' → logprob: -14.625020027160645
    6. '```' → logprob: -15.000020027160645
    7. '[i' → logprob: -15.250020027160645
    8. ' ' → logprob: -15.875020027160645
    9. ',' → logprob: -16.500019073486328
    10. 'i' → logprob: -16.875019073486328

Token 970: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018622379284352064
    2. '):
' → logprob: -6.376862049102783
    3. ')' → logprob: -8.876862525939941
    4. ':' → logprob: -11.251862525939941
    5. ' ):' → logprob: -12.126862525939941
    6. '):
' → logprob: -14.251862525939941
    7. '   ' → logprob: -15.126862525939941
    8. '):

' → logprob: -15.376862525939941
    9. ''):' → logprob: -15.501862525939941
    10. '**' → logprob: -16.001861572265625

Token 971: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16928637027740479
    2. ':' → logprob: -2.0442862510681152
    3. ':
' → logprob: -4.294286251068115
    4. '           ' → logprob: -4.544286251068115
    5. '):' → logprob: -6.919286251068115
    6. '):
' → logprob: -7.794286251068115
    7. ' :' → logprob: -8.419286727905273
    8. '   ' → logprob: -9.669286727905273
    9. '               ' → logprob: -10.044286727905273
    10. ')' → logprob: -10.169286727905273

Token 972: ' inside' (ID: 6772)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' (adapté à ' inside') → logprob: -0.5759596228599548
    2. ' inside' → logprob: -0.8259596228599548
    3. '   ' → logprob: -11.575959205627441
    4. '       ' → logprob: -11.700959205627441
    5. '           ' → logprob: -14.200959205627441
    6. '
' → logprob: -14.325959205627441
    7. '```' → logprob: -14.950959205627441
    8. 'ins' → logprob: -15.200959205627441
    9. '_inside' → logprob: -15.450959205627441
    10. 'Inside' → logprob: -15.700959205627441

Token 973: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03805331513285637
    2. ' =' → logprob: -3.288053274154663
    3. ' ^=' → logprob: -11.913053512573242
    4. '=True' → logprob: -12.413053512573242
    5. '=!' → logprob: -14.663053512573242
    6. '=False' → logprob: -15.163053512573242
    7. ' ' → logprob: -15.538053512573242
    8. ' ' → logprob: -16.413053512573242
    9. '   ' → logprob: -17.413053512573242
    10. '=
' → logprob: -17.413053512573242

Token 974: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.16026128828525543
    2. ' not' → logprob: -1.9102612733840942
    3. '!' → logprob: -10.285261154174805
    4. '   ' → logprob: -13.660261154174805
    5. ' ' → logprob: -14.160261154174805
    6. '	not' → logprob: -15.035261154174805
    7. '(not' → logprob: -15.035261154174805
    8. '
' → logprob: -15.660261154174805
    9. '       ' → logprob: -16.035261154174805
    10. '           ' → logprob: -16.660261154174805

Token 975: ' inside' (ID: 6772)
  Prédit: ' inside'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inside' → logprob: -0.25199201703071594
    2. 'inside' → logprob: -1.5019919872283936
    3. ' not' → logprob: -10.126992225646973
    4. ' True' → logprob: -10.876992225646973
    5. 'True' → logprob: -13.626992225646973
    6. 'not' → logprob: -13.751992225646973
    7. ' ' → logprob: -13.876992225646973
    8. '_inside' → logprob: -14.751992225646973
    9. ' ' → logprob: -16.376991271972656
    10. 'Inside' → logprob: -16.751991271972656

Token 976: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30389758944511414
    2. '       ' → logprob: -1.6788976192474365
    3. ' ' → logprob: -3.0538976192474365
    4. '           ' → logprob: -5.178897380828857
    5. '<|end|>' → logprob: -5.303897380828857
    6. ' return' → logprob: -6.053897380828857
    7. '  ' → logprob: -6.178897380828857
    8. '    ' → logprob: -6.178897380828857
    9. '  
' → logprob: -6.303897380828857
    10. '\n' → logprob: -6.803897380828857

Token 977: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04428083077073097
    2. '       ' → logprob: -4.544281005859375
    3. ' ' → logprob: -4.794281005859375
    4. '<|end|>' → logprob: -4.919281005859375
    5. ' return' → logprob: -5.419281005859375
    6. ')' → logprob: -5.544281005859375
    7. '    ' → logprob: -6.419281005859375
    8. '  ' → logprob: -6.419281005859375
    9. 'return' → logprob: -7.044281005859375
    10. '  
' → logprob: -7.169281005859375

Token 978: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.23283900320529938
    2. ' return' → logprob: -1.7328389883041382
    3. '   ' → logprob: -3.4828391075134277
    4. ' ' → logprob: -9.10783863067627
    5. '	return' → logprob: -9.73283863067627
    6. ':return' → logprob: -11.23283863067627
    7. '       ' → logprob: -11.48283863067627
    8. '```' → logprob: -11.73283863067627
    9. '{return' → logprob: -12.60783863067627
    10. '<|end|>' → logprob: -12.98283863067627

Token 979: ' inside' (ID: 6772)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.001170225441455841
    2. ' inside' → logprob: -6.7511701583862305
    3. 'not' → logprob: -17.376171112060547
    4. ' ' → logprob: -18.376171112060547
    5. 'ins' → logprob: -19.501171112060547
    6. 'Inside' → logprob: -20.501171112060547
    7. ' ' → logprob: -20.751171112060547
    8. '   ' → logprob: -20.876171112060547
    9. '_inside' → logprob: -21.251171112060547
    10. ' not' → logprob: -22.001171112060547

Token 980: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 981: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007092207670211792
    2. '   ' → logprob: -6.507091999053955
    3. '<|end|>' → logprob: -6.507091999053955
    4. '```' → logprob: -7.007091999053955
    5. 'face' → logprob: -7.632091999053955
    6. ')' → logprob: -7.632091999053955
    7. '#' → logprob: -7.757091999053955
    8. 'return' → logprob: -7.882091999053955
    9. 'import' → logprob: -8.007092475891113
    10. '       ' → logprob: -9.257092475891113

Token 982: ' main' (ID: 2758)
  Prédit: ' shortest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -1.2739520072937012
    2. ' find' → logprob: -1.6489520072937012
    3. ' main' → logprob: -1.8989520072937012
    4. ' build' → logprob: -3.023952007293701
    5. ' assign' → logprob: -3.398952007293701
    6. 'build' → logprob: -3.523952007293701
    7. 'main' → logprob: -3.523952007293701
    8. 'find' → logprob: -3.898952007293701
    9. ' bfs' → logprob: -3.898952007293701
    10. ' solve' → logprob: -4.148952007293701

Token 983: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.372294698550832e-06
    2. '():
' → logprob: -12.375009536743164
    3. '(' → logprob: -12.625009536743164
    4. ' ():' → logprob: -13.625009536743164
    5. '()' → logprob: -14.500009536743164
    6. '(:' → logprob: -17.250009536743164
    7. '(":' → logprob: -18.250009536743164
    8. '():
' → logprob: -18.250009536743164
    9. '_' → logprob: -18.250009536743164
    10. ':' → logprob: -19.250009536743164

Token 984: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0824824795126915
    2. ' C' → logprob: -2.9574825763702393
    3. ' import' → logprob: -4.33248233795166
    4. ' input' → logprob: -4.95748233795166
    5. ' n' → logprob: -5.70748233795166
    6. ' readline' → logprob: -6.58248233795166
    7. 'import' → logprob: -7.20748233795166
    8. 'n' → logprob: -7.45748233795166
    9. ' ' → logprob: -8.45748233795166
    10. ' line' → logprob: -8.83248233795166

Token 985: ' input' (ID: 3422)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7713537812232971
    2. ' C' → logprob: -0.7713537812232971
    3. '   ' → logprob: -2.6463537216186523
    4. ' input' → logprob: -6.396353721618652
    5. 'n' → logprob: -7.146353721618652
    6. 'import' → logprob: -7.396353721618652
    7. 'input' (adapté à ' input') → logprob: -7.896353721618652
    8. ' n' → logprob: -8.271353721618652
    9. ' import' → logprob: -8.396353721618652
    10. 'c' → logprob: -8.896353721618652

Token 986: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15266788005828857
    2. '_line' → logprob: -2.152667999267578
    3. '_data' → logprob: -3.777667999267578
    4. '_' → logprob: -7.402667999267578
    5. ' =' → logprob: -7.777667999267578
    6. '_lines' → logprob: -7.777667999267578
    7. '().' → logprob: -8.027667999267578
    8. '=' → logprob: -8.527667999267578
    9. '_str' → logprob: -8.777667999267578
    10. '_text' → logprob: -9.402667999267578

Token 987: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.20143838226795197
    2. ' sys' → logprob: -1.7014384269714355
    3. 'input' → logprob: -11.701437950134277
    4. 'lambda' → logprob: -11.701437950134277
    5. '=sys' → logprob: -12.451437950134277
    6. '	sys' → logprob: -12.701437950134277
    7. '(sys' → logprob: -14.076437950134277
    8. ' input' → logprob: -15.201437950134277
    9. ' lambda' → logprob: -15.326437950134277
    10. 'open' → logprob: -15.576437950134277

Token 988: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.03977401554584503
    2. '.' → logprob: -3.289773941040039
    3. '.readline' → logprob: -6.414773941040039
    4. '.stdout' → logprob: -9.789773941040039
    5. '.argv' → logprob: -11.039773941040039
    6. '.next' → logprob: -11.914773941040039
    7. '().' → logprob: -12.664773941040039
    8. '.std' → logprob: -12.664773941040039
    9. '.​' → logprob: -13.039773941040039
    10. '.input' → logprob: -13.414773941040039

Token 989: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.007457188330590725
    2. 'read' → logprob: -5.007457256317139
    3. '<|end|>' → logprob: -8.38245677947998
    4. '.read' → logprob: -8.50745677947998
    5. 'rea' → logprob: -9.25745677947998
    6. '.readlines' → logprob: -9.88245677947998
    7. '_read' → logprob: -10.88245677947998
    8. '=' → logprob: -11.00745677947998
    9. '.stdin' → logprob: -11.25745677947998
    10. '().' → logprob: -11.38245677947998

Token 990: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0692984089255333
    2. '().' → logprob: -2.944298505783081
    3. '()
' → logprob: -4.944298267364502
    4. '   ' → logprob: -5.069298267364502
    5. '()\' → logprob: -7.944298267364502
    6. '())' → logprob: -8.81929874420166
    7. '
' → logprob: -9.81929874420166
    8. 'def' → logprob: -10.19429874420166
    9. '<|end|>' → logprob: -10.44429874420166
    10. 'C' → logprob: -10.44429874420166

Token 991: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026924132835119963
    2. 'C' → logprob: -6.002692222595215
    3. '    
' → logprob: -9.377692222595215
    4. '
' → logprob: -10.252692222595215
    5. ' C' → logprob: -10.377692222595215
    6. '   ' → logprob: -11.002692222595215
    7. 'n' → logprob: -11.377692222595215
    8. '	C' → logprob: -11.627692222595215
    9. 'c' → logprob: -12.252692222595215
    10. '()' → logprob: -12.377692222595215

Token 992: ' while' (ID: 2049)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -2.570319702499546e-05
    2. '   ' → logprob: -11.125025749206543
    3. ' C' → logprob: -11.625025749206543
    4. 'c' → logprob: -14.250025749206543
    5. 'N' → logprob: -15.125025749206543
    6. '
' → logprob: -15.625025749206543
    7. 'T' → logprob: -15.750025749206543
    8. '	C' → logprob: -16.250024795532227
    9. 'L' → logprob: -16.375024795532227
    10. '_C' → logprob: -16.750024795532227

Token 993: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5759484171867371
    2. 'True' → logprob: -0.8259484171867371
    3. '(True' → logprob: -11.700948715209961
    4. '1' → logprob: -15.075948715209961
    5. '=True' → logprob: -15.825948715209961
    6. ' ' → logprob: -16.32594871520996
    7. '
' → logprob: -16.82594871520996
    8. ' Tru' → logprob: -17.57594871520996
    9. '   ' → logprob: -17.82594871520996
    10. 'T' → logprob: -17.95094871520996

Token 994: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8080964088439941
    2. '():' → logprob: -0.8080964088439941
    3. '():
' → logprob: -3.183096408843994
    4. '   ' → logprob: -3.308096408843994
    5. ':
' → logprob: -3.808096408843994
    6. '       ' → logprob: -5.308096408843994
    7. ',' → logprob: -7.558096408843994
    8. '(' → logprob: -7.558096408843994
    9. '(line' → logprob: -8.058095932006836
    10. '):' → logprob: -8.183095932006836

Token 995: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06438472121953964
    2. ' line' → logprob: -2.814384698867798
    3. 'line' → logprob: -6.189384937286377
    4. ' n' → logprob: -8.814384460449219
    5. '	line' → logprob: -9.689384460449219
    6. ' try' → logprob: -9.814384460449219
    7. 'n' → logprob: -9.939384460449219
    8. '   ' → logprob: -10.564384460449219
    9. 'try' → logprob: -11.439384460449219
    10. '       ' → logprob: -12.064384460449219

Token 996: ' C' (ID: 363)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0016848169034346938
    2. 'L' → logprob: -7.251684665679932
    3. 'C' (adapté à ' C') → logprob: -7.501684665679932
    4. 'l' → logprob: -8.25168514251709
    5. ' line' → logprob: -8.75168514251709
    6. '   ' → logprob: -14.00168514251709
    7. 'N' → logprob: -14.25168514251709
    8. 'n' → logprob: -15.00168514251709
    9. 's' → logprob: -15.37668514251709
    10. 'raw' → logprob: -15.50168514251709

Token 997: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4413117468357086
    2. '=' → logprob: -1.1913117170333862
    3. ',' → logprob: -2.941311836242676
    4. ' ,' → logprob: -9.191311836242676
    5. '=int' → logprob: -10.066311836242676
    6. ',C' → logprob: -11.441311836242676
    7. '=input' → logprob: -11.566311836242676
    8. '=line' → logprob: -12.691311836242676
    9. ',c' → logprob: -12.941311836242676
    10. ' ' → logprob: -13.066311836242676

Token 998: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.011080834083259106
    2. ' W' → logprob: -4.511080741882324
    3. '=' → logprob: -11.511080741882324
    4. ' ' → logprob: -11.886080741882324
    5. 'D' → logprob: -12.386080741882324
    6. ' =' → logprob: -12.761080741882324
    7. 'C' → logprob: -13.886080741882324
    8. 'M' → logprob: -14.011080741882324
    9. 'P' → logprob: -14.011080741882324
    10. '=W' → logprob: -14.261080741882324

Token 999: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858884960412979
    2. ' =' → logprob: -3.048588752746582
    3. '=input' → logprob: -14.298588752746582
    4. '=line' → logprob: -15.423588752746582
    5. '=
' → logprob: -15.548588752746582
    6. ')' → logprob: -16.5485897064209
    7. ',' → logprob: -16.9235897064209
    8. '=sys' → logprob: -17.2985897064209
    9. '＝' → logprob: -17.2985897064209
    10. '   ' → logprob: -17.5485897064209

Token 1000: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.12697042524814606
    2. ' map' → logprob: -2.1269705295562744
    3. '[' → logprob: -10.876970291137695
    4. 'list' → logprob: -11.001970291137695
    5. ' list' → logprob: -13.501970291137695
    6. 'tuple' → logprob: -13.626970291137695
    7. '(map' → logprob: -13.751970291137695
    8. '	map' → logprob: -13.876970291137695
    9. 'input' → logprob: -14.626970291137695
    10. ' [' → logprob: -14.751970291137695

Token 1001: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004675169009715319
    2. '(input' → logprob: -5.754675388336182
    3. '(str' → logprob: -6.754675388336182
    4. 'int' → logprob: -9.629674911499023
    5. '(lambda' → logprob: -9.629674911499023
    6. '(' → logprob: -9.879674911499023
    7. '(sys' → logprob: -9.879674911499023
    8. '(list' → logprob: -10.379674911499023
    9. '[int' → logprob: -10.629674911499023
    10. '(map' → logprob: -11.629674911499023

Token 1002: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.29474514722824097
    2. '(input' → logprob: -1.6697452068328857
    3. ',' → logprob: -3.5447452068328857
    4. ',input' → logprob: -3.6697452068328857
    5. 'sys' → logprob: -5.294744968414307
    6. '(),' → logprob: -5.544744968414307
    7. 'input' → logprob: -6.169744968414307
    8. '(' → logprob: -7.669744968414307
    9. ')' → logprob: -7.669744968414307
    10. '=sys' → logprob: -8.919745445251465

Token 1003: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -2.7610454708337784e-05
    2. ' input' → logprob: -10.500027656555176
    3. 'sys' → logprob: -17.25002670288086
    4. '(input' → logprob: -17.87502670288086
    5. ')' → logprob: -18.62502670288086
    6. '=input' → logprob: -19.75002670288086
    7. ',input' → logprob: -20.75002670288086
    8. '<input' → logprob: -21.12502670288086
    9. '_input' → logprob: -21.87502670288086
    10. '[input' → logprob: -22.12502670288086

Token 1004: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002483626827597618
    2. '()' → logprob: -6.00248384475708
    3. '()
' → logprob: -12.627483367919922
    4. '())' → logprob: -12.877483367919922
    5. '()[' → logprob: -13.377483367919922
    6. '(' → logprob: -15.252483367919922
    7. '().__' → logprob: -16.377483367919922
    8. '().
' → logprob: -16.502483367919922
    9. '()]' → logprob: -16.877483367919922
    10. '.readline' → logprob: -17.127483367919922

Token 1005: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0032159762922674417
    2. 'strip' → logprob: -5.753215789794922
    3. 'rstrip' → logprob: -10.253215789794922
    4. '(split' → logprob: -14.003215789794922
    5. ' split' → logprob: -14.253215789794922
    6. '().' → logprob: -14.253215789794922
    7. 'read' → logprob: -15.003215789794922
    8. ')' → logprob: -15.128215789794922
    9. 'decode' → logprob: -15.753215789794922
    10. ' strip' → logprob: -17.378215789794922

Token 1006: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2914855182170868
    2. ')' → logprob: -1.7914855480194092
    3. '())
' → logprob: -2.541485548019409
    4. ')
' → logprob: -5.16648530960083
    5. '()' → logprob: -6.41648530960083
    6. '()
' → logprob: -11.041485786437988
    7. '(' → logprob: -11.166485786437988
    8. '())
' → logprob: -12.291485786437988
    9. '))' → logprob: -12.916485786437988
    10. ')`' → logprob: -12.916485786437988

Token 1007: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036687215324491262
    2. '<|end|>' → logprob: -6.253668785095215
    3. ' if' → logprob: -6.878668785095215
    4. '	' → logprob: -8.253668785095215
    5. 'if' → logprob: -8.503668785095215
    6. '   ' → logprob: -9.378668785095215
    7. '<|end|>' → logprob: -10.128668785095215
    8. '	if' → logprob: -10.128668785095215
    9. '	   ' → logprob: -11.253668785095215
    10. '      ' → logprob: -11.503668785095215

Token 1008: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6706013083457947
    2. ' if' → logprob: -0.9206013083457947
    3. 'if' (adapté à ' if') → logprob: -2.4206013679504395
    4. '	if' → logprob: -7.1706013679504395
    5. '<|end|>' → logprob: -8.045600891113281
    6. '	' → logprob: -8.295600891113281
    7. '   ' → logprob: -10.420600891113281
    8. ' ' → logprob: -10.920600891113281
    9. '	   ' → logprob: -11.295600891113281
    10. '        
' → logprob: -12.045600891113281

Token 1009: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.12693703174591064
    2. ' C' → logprob: -2.126936912536621
    3. ' not' → logprob: -11.626936912536621
    4. 'not' → logprob: -17.376937866210938
    5. ' ' → logprob: -17.501937866210938
    6. '   ' → logprob: -17.501937866210938
    7. '	C' → logprob: -18.876937866210938
    8. '(C' → logprob: -20.001937866210938
    9. ' (' → logprob: -20.876937866210938
    10. '_C' → logprob: -21.126937866210938

Token 1010: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38690388202667236
    2. ' ==' → logprob: -1.1369038820266724
    3. '=' → logprob: -10.761903762817383
    4. '0' → logprob: -12.136903762817383
    5. ')==' → logprob: -14.011903762817383
    6. '[' → logprob: -14.136903762817383
    7. ' ' → logprob: -14.386903762817383
    8. '<' → logprob: -14.386903762817383
    9. '()==' → logprob: -14.386903762817383
    10. '<=' → logprob: -14.511903762817383

Token 1011: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '۰' → logprob: -21.000011444091797
    4. '   ' → logprob: -21.250011444091797
    5. '  ' → logprob: -22.250011444091797
    6. '０' → logprob: -22.250011444091797
    7. '
' → logprob: -22.375011444091797
    8. '```' → logprob: -22.875011444091797
    9. '=' → logprob: -23.500011444091797
    10. ' ' → logprob: -23.625011444091797

Token 1012: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '۰' → logprob: -21.125
    4. '```' → logprob: -22.625
    5. '０' → logprob: -23.125
    6. '
' → logprob: -23.5
    7. '=' → logprob: -23.75
    8. '০' → logprob: -23.875
    9. '०' → logprob: -24.625
    10. '-' → logprob: -25.0

Token 1013: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1370472013950348
    2. 'and' → logprob: -2.137047290802002
    3. ':' → logprob: -4.637047290802002
    4. ' or' → logprob: -8.637046813964844
    5. ':
' → logprob: -9.387046813964844
    6. '	and' → logprob: -9.887046813964844
    7. '   ' → logprob: -10.512046813964844
    8. '<|end|>' → logprob: -10.637046813964844
    9. ':return' → logprob: -12.637046813964844
    10. ',' → logprob: -12.762046813964844

Token 1014: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0004306692280806601
    2. ' W' → logprob: -7.750430583953857
    3. '  ' → logprob: -18.750431060791016
    4. ' ' → logprob: -19.375431060791016
    5. '	W' → logprob: -19.500431060791016
    6. '   ' → logprob: -20.625431060791016
    7. ' ' → logprob: -21.625431060791016
    8. '    ' → logprob: -22.125431060791016
    9. '       ' → logprob: -22.875431060791016
    10. '     ' → logprob: -23.625431060791016

Token 1015: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16023540496826172
    2. '==' → logprob: -1.9102354049682617
    3. ')==' → logprob: -12.660235404968262
    4. '=' → logprob: -13.410235404968262
    5. ' ' → logprob: -13.660235404968262
    6. '[' → logprob: -13.910235404968262
    7. '0' → logprob: -13.910235404968262
    8. '<|end|>' → logprob: -14.160235404968262
    9. '()==' → logprob: -14.410235404968262
    10. ')' → logprob: -14.910235404968262

Token 1016: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '۰' → logprob: -21.500003814697266
    4. '<|end|>' → logprob: -22.625003814697266
    5. '=' → logprob: -22.875003814697266
    6. '```' → logprob: -23.750003814697266
    7. ' ' → logprob: -24.000003814697266
    8. '০' → logprob: -24.375003814697266
    9. '  ' → logprob: -24.375003814697266
    10. '   ' → logprob: -24.375003814697266

Token 1017: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '۰' → logprob: -21.625001907348633
    4. '
' → logprob: -23.625001907348633
    5. '   ' → logprob: -24.500001907348633
    6. '```' → logprob: -24.625001907348633
    7. '０' → logprob: -24.750001907348633
    8. '00' → logprob: -24.875001907348633
    9. '০' → logprob: -24.875001907348633
    10. '  ' → logprob: -24.875001907348633

Token 1018: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07043474167585373
    2. ':
' → logprob: -2.695434808731079
    3. '           ' → logprob: -8.1954345703125
    4. '       ' → logprob: -8.6954345703125
    5. ':return' → logprob: -10.4454345703125
    6. '   ' → logprob: -11.1954345703125
    7. '.' → logprob: -13.1954345703125
    8. '	' → logprob: -13.3204345703125
    9. ',' → logprob: -13.4454345703125
    10. ':
' → logprob: -13.5704345703125

Token 1019: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008854585699737072
    2. '       ' → logprob: -4.758854389190674
    3. '		' → logprob: -9.008854866027832
    4. '   ' → logprob: -9.758854866027832
    5. '	       ' → logprob: -11.008854866027832
    6. '               ' → logprob: -11.508854866027832
    7. '     ' → logprob: -11.758854866027832
    8. ' break' → logprob: -12.133854866027832
    9. '	   ' → logprob: -12.758854866027832
    10. '<|end|>' → logprob: -13.008854866027832

Token 1020: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.014801718294620514
    2. 'return' → logprob: -4.264801502227783
    3. ' break' → logprob: -7.764801502227783
    4. '           ' → logprob: -8.514801979064941
    5. '	break' → logprob: -11.889801979064941
    6. ' return' → logprob: -12.889801979064941
    7. '               ' → logprob: -13.014801979064941
    8. '       ' → logprob: -13.639801979064941
    9. '_break' → logprob: -16.014801025390625
    10. '		' → logprob: -16.639801025390625

Token 1021: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013149646110832691
    2. '   ' → logprob: -4.513149738311768
    3. '        
' → logprob: -6.763149738311768
    4. '<|end|>' → logprob: -7.138149738311768
    5. '
' → logprob: -9.76314926147461
    6. '    
' → logprob: -10.38814926147461
    7. ',' → logprob: -11.38814926147461
    8. '	   ' → logprob: -11.76314926147461
    9. '```' → logprob: -12.01314926147461
    10. '           ' → logprob: -12.38814926147461

Token 1022: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031461842358112335
    2. '       ' → logprob: -3.5314619541168213
    3. '    
' → logprob: -7.156461715698242
    4. '        
' → logprob: -7.281461715698242
    5. '```' → logprob: -9.281461715698242
    6. '
' → logprob: -9.531461715698242
    7. '<|end|>' → logprob: -9.781461715698242
    8. '  
' → logprob: -13.156461715698242
    9. ',' → logprob: -13.156461715698242
    10. '   ' → logprob: -13.281461715698242

Token 1023: ' pillars' (ID: 105506)
  Prédit: 'pill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pill' → logprob: -0.004846734460443258
    2. ' pillars' → logprob: -5.379846572875977
    3. '       ' → logprob: -9.129846572875977
    4. 'pillar' → logprob: -9.754846572875977
    5. '   ' → logprob: -10.004846572875977
    6. '-pill' → logprob: -11.754846572875977
    7. 'pil' → logprob: -12.879846572875977
    8. '        
' → logprob: -13.004846572875977
    9. '```' → logprob: -14.629846572875977
    10. '    
' → logprob: -15.129846572875977

Token 1024: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014526128768921
    2. ' =' → logprob: -1.701452612876892
    3. ',' → logprob: -10.326452255249023
    4. '=[]' → logprob: -12.451452255249023
    5. '   ' → logprob: -13.951452255249023
    6. ')' → logprob: -14.951452255249023
    7. '[:]' → logprob: -15.076452255249023
    8. '＝' → logprob: -15.701452255249023
    9. '    ' → logprob: -15.826452255249023
    10. '=[' → logprob: -15.951452255249023

Token 1025: ' [' (ID: 723)
  Prédit: '[C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[C' → logprob: -0.6348644495010376
    2. '[' → logprob: -0.8848644495010376
    3. '[p' → logprob: -2.884864330291748
    4. '[int' → logprob: -8.259864807128906
    5. '[list' → logprob: -8.509864807128906
    6. '[array' → logprob: -8.509864807128906
    7. '[class' → logprob: -8.884864807128906
    8. '[List' → logprob: -8.884864807128906
    9. '[cnt' → logprob: -10.009864807128906
    10. '[ip' → logprob: -10.134864807128906

Token 1026: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -7.588793960167095e-05
    2. ' tuple' → logprob: -9.500076293945312
    3. '(tuple' → logprob: -14.000076293945312
    4. 'list' → logprob: -16.375076293945312
    5. '   ' → logprob: -17.500076293945312
    6. '
' → logprob: -19.875076293945312
    7. 'tu' → logprob: -20.250076293945312
    8. '_tuple' → logprob: -21.500076293945312
    9. 'map' → logprob: -22.625076293945312
    10. '  ' → logprob: -22.750076293945312

Token 1027: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.002475777640938759
    2. 'map' → logprob: -6.002475738525391
    3. '(int' → logprob: -16.37747573852539
    4. ' map' → logprob: -17.12747573852539
    5. '	map' → logprob: -17.75247573852539
    6. '(' → logprob: -17.87747573852539
    7. '_map' → logprob: -18.62747573852539
    8. ',map' → logprob: -19.00247573852539
    9. '(
' → logprob: -19.62747573852539
    10. 'Map' → logprob: -20.00247573852539

Token 1028: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5759498476982117
    2. '(int' → logprob: -0.8259498476982117
    3. '[int' → logprob: -12.700949668884277
    4. 'float' → logprob: -12.950949668884277
    5. '(float' → logprob: -13.325949668884277
    6. 'input' → logprob: -14.075949668884277
    7. '   ' → logprob: -14.325949668884277
    8. ' int' → logprob: -14.575949668884277
    9. '=int' → logprob: -14.575949668884277
    10. 'map' → logprob: -14.950949668884277

Token 1029: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33095380663871765
    2. ',input' → logprob: -1.33095383644104
    3. '(input' → logprob: -4.205953598022461
    4. 'input' → logprob: -5.955953598022461
    5. '(' → logprob: -11.205953598022461
    6. '   ' → logprob: -12.080953598022461
    7. ' ,' → logprob: -12.330953598022461
    8. ' input' → logprob: -12.455953598022461
    9. '(),' → logprob: -13.205953598022461
    10. '
' → logprob: -13.205953598022461

Token 1030: ' (' (ID: 350)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0001584850688232109
    2. ' input' → logprob: -8.750158309936523
    3. '(input' → logprob: -17.875158309936523
    4. '
' → logprob: -19.875158309936523
    5. 'sys' → logprob: -19.875158309936523
    6. '[input' → logprob: -20.000158309936523
    7. ',input' → logprob: -20.375158309936523
    8. ')' → logprob: -20.625158309936523
    9. '=input' → logprob: -21.125158309936523
    10. '	input' → logprob: -21.375158309936523

Token 1031: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.0280383548888494e-06
    2. ' input' → logprob: -14.625000953674316
    3. 'sys' → logprob: -15.250000953674316
    4. '(input' → logprob: -16.250001907348633
    5. '
' → logprob: -16.500001907348633
    6. '[input' → logprob: -17.250001907348633
    7. 'map' → logprob: -18.375001907348633
    8. '   ' → logprob: -18.500001907348633
    9. '[' → logprob: -19.125001907348633
    10. ' ' → logprob: -19.375001907348633

Token 1032: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.661626634420827e-05
    2. '.readline' → logprob: -10.125086784362793
    3. '()).' → logprob: -10.625086784362793
    4. ').' → logprob: -11.375086784362793
    5. '()' → logprob: -11.875086784362793
    6. '()
' → logprob: -13.250086784362793
    7. '())))' → logprob: -14.250086784362793
    8. '()[' → logprob: -15.250086784362793
    9. '   ' → logprob: -15.250086784362793
    10. '()))' → logprob: -15.500086784362793

Token 1033: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.31341803073883057
    2. 'strip' → logprob: -1.3134180307388306
    3. 'rstrip' → logprob: -8.8134183883667
    4. 'read' → logprob: -12.0634183883667
    5. ' strip' → logprob: -14.4384183883667
    6. ' split' → logprob: -14.5634183883667
    7. '
' → logprob: -15.9384183883667
    8. 'sys' → logprob: -16.188417434692383
    9. 'replace' → logprob: -16.313417434692383
    10. ')' → logprob: -16.313417434692383

Token 1034: '())))' (ID: 168342)
  Prédit: '())))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.11556567996740341
    2. ')))' → logprob: -2.615565776824951
    3. '()' → logprob: -3.990565776824951
    4. '()))' → logprob: -4.240565776824951
    5. '())))
' → logprob: -6.490565776824951
    6. '))))' → logprob: -6.740565776824951
    7. '()
' → logprob: -8.740565299987793
    8. '()[' → logprob: -9.240565299987793
    9. '())' → logprob: -9.865565299987793
    10. '   ' → logprob: -10.865565299987793

Token 1035: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2555680572986603
    2. ' for' → logprob: -1.630568027496338
    3. 'for' → logprob: -3.880568027496338
    4. '()' → logprob: -5.005568027496338
    5. ')]' → logprob: -6.630568027496338
    6. '       ' → logprob: -8.255568504333496
    7. ']' → logprob: -8.630568504333496
    8. '   ' → logprob: -8.630568504333496
    9. '           ' → logprob: -9.130568504333496
    10. '	for' → logprob: -9.380568504333496

Token 1036: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00026050140149891376
    2. '_range' → logprob: -8.625260353088379
    3. ' range' → logprob: -10.125260353088379
    4. 'range' → logprob: -10.250260353088379
    5. '_C' → logprob: -13.250260353088379
    6. '_i' → logprob: -13.500260353088379
    7. '_
' → logprob: -13.875260353088379
    8. ' _' → logprob: -15.625260353088379
    9. '_in' → logprob: -15.625260353088379
    10. '_c' → logprob: -15.750260353088379

Token 1037: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007285492494702339
    2. 'in' → logprob: -5.0072855949401855
    3. ' range' → logprob: -7.6322855949401855
    4. ' in' → logprob: -9.632285118103027
    5. '(range' → logprob: -11.007285118103027
    6. 'C' → logprob: -13.007285118103027
    7. '(C' → logprob: -14.507285118103027
    8. '	range' → logprob: -15.882285118103027
    9. '(' → logprob: -16.007286071777344
    10. '
' → logprob: -16.257286071777344

Token 1038: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.7697225252486533e-06
    2. ' range' → logprob: -12.500003814697266
    3. '(range' → logprob: -16.750003814697266
    4. 'C' → logprob: -21.125003814697266
    5. '
' → logprob: -21.125003814697266
    6. '[C' → logprob: -21.625003814697266
    7. '	range' → logprob: -22.250003814697266
    8. '.range' → logprob: -22.875003814697266
    9. '[' → logprob: -23.500003814697266
    10. '(C' → logprob: -24.875003814697266

Token 1039: '(C' (ID: 5559)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.38689807057380676
    2. '(C' → logprob: -1.1368980407714844
    3. ' C' → logprob: -11.011898040771484
    4. '(' → logprob: -12.886898040771484
    5. ')' → logprob: -13.011898040771484
    6. '	C' → logprob: -13.011898040771484
    7. '   ' → logprob: -14.011898040771484
    8. '(
' → logprob: -14.261898040771484
    9. '[C' → logprob: -14.261898040771484
    10. '
' → logprob: -14.386898040771484

Token 1040: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.946405094116926e-05
    2. ')' → logprob: -9.750079154968262
    3. ')]
' → logprob: -11.625079154968262
    4. ']' → logprob: -11.625079154968262
    5. '       ' → logprob: -13.500079154968262
    6. ')])' → logprob: -14.750079154968262
    7. '   ' → logprob: -14.875079154968262
    8. ')],' → logprob: -15.000079154968262
    9. ')]
' → logprob: -15.875079154968262
    10. '))' → logprob: -16.125080108642578

Token 1041: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7943457961082458
    2. ' walls' → logprob: -0.9193457961082458
    3. 'walls' → logprob: -1.9193458557128906
    4. 'w' → logprob: -7.419345855712891
    5. 'wall' → logprob: -7.544345855712891
    6. '```' → logprob: -7.669345855712891
    7. '	w' → logprob: -8.29434585571289
    8. ' wall' → logprob: -8.54434585571289
    9. 'Walls' → logprob: -8.66934585571289
    10. '<|end|>' → logprob: -9.29434585571289

Token 1042: ' walls' (ID: 20562)
  Prédit: 'walls'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'walls' (adapté à ' walls') → logprob: -0.044534653425216675
    2. ' walls' → logprob: -3.169534683227539
    3. '       ' → logprob: -6.544534683227539
    4. 'wall' → logprob: -9.919534683227539
    5. 'w' → logprob: -10.419534683227539
    6. '```' → logprob: -11.919534683227539
    7. 'Walls' → logprob: -13.044534683227539
    8. '   ' → logprob: -13.294534683227539
    9. '
' → logprob: -13.919534683227539
    10. '        
' → logprob: -14.294534683227539

Token 1043: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0913938358426094
    2. ' =' → logprob: -2.4663939476013184
    3. '.extend' → logprob: -6.216393947601318
    4. '.append' → logprob: -8.09139347076416
    5. '.' → logprob: -8.96639347076416
    6. '=[]' → logprob: -12.09139347076416
    7. '+=' → logprob: -12.21639347076416
    8. ' +=' → logprob: -13.46639347076416
    9. '.=' → logprob: -13.46639347076416
    10. '=
' → logprob: -13.59139347076416

Token 1044: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001307617872953415
    2. '[t' → logprob: -7.501307487487793
    3. '[int' → logprob: -7.876307487487793
    4. '[input' → logprob: -8.376307487487793
    5. ' [' → logprob: -9.626307487487793
    6. '[w' → logprob: -11.126307487487793
    7. '[token' → logprob: -11.376307487487793
    8. '[p' → logprob: -12.126307487487793
    9. '[temp' → logprob: -12.501307487487793
    10. '[str' → logprob: -12.501307487487793

Token 1045: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -6.749814019713085e-06
    2. ' tuple' → logprob: -12.000006675720215
    3. '(tuple' → logprob: -14.500006675720215
    4. 'list' → logprob: -17.25000762939453
    5. 'map' → logprob: -17.50000762939453
    6. '   ' → logprob: -19.25000762939453
    7. '
' → logprob: -20.62500762939453
    8. 'tu' → logprob: -21.37500762939453
    9. '       ' → logprob: -21.75000762939453
    10. 'lambda' → logprob: -21.75000762939453

Token 1046: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0005535095697268844
    2. 'map' → logprob: -7.500553607940674
    3. '(input' → logprob: -15.000553131103516
    4. '	map' → logprob: -16.750553131103516
    5. ' map' → logprob: -17.125553131103516
    6. ',map' → logprob: -17.500553131103516
    7. '_map' → logprob: -17.875553131103516
    8. '(int' → logprob: -17.875553131103516
    9. '(' → logprob: -18.250553131103516
    10. '.map' → logprob: -18.625553131103516

Token 1047: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.006832113955169916
    2. 'int' → logprob: -5.006832122802734
    3. '[int' → logprob: -9.631832122802734
    4. ',int' → logprob: -10.506832122802734
    5. '=int' → logprob: -11.131832122802734
    6. ']int' → logprob: -12.881832122802734
    7. '<int' → logprob: -13.006832122802734
    8. ' int' → logprob: -13.131832122802734
    9. ':int' → logprob: -13.256832122802734
    10. '```' → logprob: -15.506832122802734

Token 1048: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.657459557056427
    2. '(input' → logprob: -1.1574594974517822
    3. '(int' → logprob: -2.0324594974517822
    4. ',' → logprob: -3.5324594974517822
    5. ',int' → logprob: -5.532459735870361
    6. 'input' → logprob: -6.032459735870361
    7. 'int' → logprob: -8.032459259033203
    8. '(' → logprob: -8.657459259033203
    9. ' (' → logprob: -8.782459259033203
    10. '=input' → logprob: -9.407459259033203

Token 1049: ' (' (ID: 350)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25270307064056396
    2. '(input' → logprob: -1.502703070640564
    3. ' input' → logprob: -7.2527031898498535
    4. '(int' → logprob: -10.502702713012695
    5. ',input' → logprob: -11.127702713012695
    6. 'int' → logprob: -11.252702713012695
    7. '[input' → logprob: -12.127702713012695
    8. ' (' → logprob: -12.752702713012695
    9. '=input' → logprob: -13.752702713012695
    10. 'map' → logprob: -14.877702713012695

Token 1050: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -2.6895233531831764e-05
    2. '(input' → logprob: -11.00002670288086
    3. ' input' → logprob: -11.50002670288086
    4. 'int' → logprob: -17.37502670288086
    5. '[input' → logprob: -18.00002670288086
    6. ',input' → logprob: -18.25002670288086
    7. '<input' → logprob: -19.87502670288086
    8. '=input' → logprob: -20.12502670288086
    9. '   ' → logprob: -20.37502670288086
    10. '_input' → logprob: -20.62502670288086

Token 1051: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.128163257315464e-07
    2. '()' → logprob: -16.0
    3. ' ().' → logprob: -16.875
    4. '.split' → logprob: -17.75
    5. '.' → logprob: -18.0
    6. '().__' → logprob: -18.375
    7. '   ' → logprob: -18.5
    8. '()[' → logprob: -18.875
    9. '()).' → logprob: -20.375
    10. ').' → logprob: -20.375

Token 1052: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.704273118884885e-07
    2. '.split' → logprob: -15.125000953674316
    3. 'strip' → logprob: -16.0
    4. ' split' → logprob: -16.75
    5. '(split' → logprob: -17.375
    6. '
' → logprob: -18.0
    7. 'read' → logprob: -18.375
    8. 'skip' → logprob: -19.0
    9. 'spl' → logprob: -19.0
    10. '().' → logprob: -19.125

Token 1053: '())))' (ID: 168342)
  Prédit: '())))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.02100905403494835
    2. '()))' → logprob: -4.5210089683532715
    3. '()' → logprob: -4.8960089683532715
    4. ')))' → logprob: -6.1460089683532715
    5. '())))
' → logprob: -9.27100944519043
    6. '()[' → logprob: -9.39600944519043
    7. ' (' → logprob: -10.89600944519043
    8. '())[' → logprob: -10.89600944519043
    9. ' ' → logprob: -11.02100944519043
    10. '())' → logprob: -11.14600944519043

Token 1054: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026182280853390694
    2. ' for' → logprob: -6.252618312835693
    3. '()' → logprob: -7.877618312835693
    4. 'for' → logprob: -8.252617835998535
    5. '())' → logprob: -10.877617835998535
    6. ' )' → logprob: -11.252617835998535
    7. '   ' → logprob: -11.752617835998535
    8. '       ' → logprob: -12.752617835998535
    9. ')]' → logprob: -13.002617835998535
    10. '))' → logprob: -13.877617835998535

Token 1055: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0013273799559101462
    2. ' range' → logprob: -6.7513275146484375
    3. ' in' → logprob: -9.001327514648438
    4. ' _' → logprob: -11.001327514648438
    5. 'range' → logprob: -11.126327514648438
    6. 'in' → logprob: -13.001327514648438
    7. '_range' → logprob: -16.126327514648438
    8. '_RANGE' → logprob: -16.251327514648438
    9. '_W' → logprob: -16.501327514648438
    10. '
' → logprob: -19.626327514648438

Token 1056: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5911790728569031
    2. ' range' → logprob: -1.0911791324615479
    3. '_' → logprob: -2.716179132461548
    4. 'range' → logprob: -3.341179132461548
    5. 'in' → logprob: -4.716178894042969
    6. '_range' → logprob: -10.841178894042969
    7. '(range' → logprob: -12.091178894042969
    8. '_RANGE' → logprob: -13.091178894042969
    9. ' _' → logprob: -13.466178894042969
    10. '(' → logprob: -13.716178894042969

Token 1057: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022484004497528
    2. ' range' → logprob: -1.9102247953414917
    3. '(range' → logprob: -14.410224914550781
    4. 'W' → logprob: -16.91022491455078
    5. '(W' → logprob: -17.28522491455078
    6. '_range' → logprob: -19.03522491455078
    7. ' W' → logprob: -19.78522491455078
    8. '	range' → logprob: -19.78522491455078
    9. 'Range' → logprob: -21.03522491455078
    10. '   ' → logprob: -21.41022491455078

Token 1058: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.17636853456497192
    2. 'range' → logprob: -2.176368474960327
    3. 'W' → logprob: -3.176368474960327
    4. ' range' → logprob: -5.051368713378906
    5. '(range' → logprob: -9.551368713378906
    6. ' W' → logprob: -10.801368713378906
    7. '(' → logprob: -12.801368713378906
    8. 'Range' → logprob: -13.801368713378906
    9. '_W' → logprob: -13.926368713378906
    10. '_range' → logprob: -13.926368713378906

Token 1059: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00044914212776347995
    2. ']' → logprob: -8.625449180603027
    3. ')]
' → logprob: -9.000449180603027
    4. ')' → logprob: -9.125449180603027
    5. '           ' → logprob: -11.125449180603027
    6. '       ' → logprob: -11.500449180603027
    7. '   ' → logprob: -11.875449180603027
    8. ')])' → logprob: -13.375449180603027
    9. ')]
' → logprob: -14.125449180603027
    10. '])]' → logprob: -14.250449180603027

Token 1060: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16428378224372864
    2. '        
' → logprob: -2.6642837524414062
    3. '   ' → logprob: -3.2892837524414062
    4. '
' → logprob: -3.5392837524414062
    5. '    
' → logprob: -4.914283752441406
    6. '<|end|>' → logprob: -5.289283752441406
    7. '```' → logprob: -6.164283752441406
    8. ' faces' → logprob: -8.039283752441406
    9. 'faces' → logprob: -8.039283752441406
    10. '_faces' → logprob: -9.039283752441406

Token 1061: ' #' (ID: 1069)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.0002193908003391698
    2. '       ' → logprob: -9.375219345092773
    3. ' faces' → logprob: -9.375219345092773
    4. '   ' → logprob: -11.875219345092773
    5. '
' → logprob: -12.125219345092773
    6. 'face' → logprob: -12.125219345092773
    7. '#' (adapté à ' #') → logprob: -12.125219345092773
    8. 'for' → logprob: -12.625219345092773
    9. 'edges' → logprob: -12.750219345092773
    10. 'rooms' → logprob: -12.875219345092773

Token 1062: ' Step' (ID: 22291)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.0006149819819256663
    2. '#' → logprob: -8.375615119934082
    3. ' faces' → logprob: -8.625615119934082
    4. '   ' → logprob: -9.250615119934082
    5. '       ' → logprob: -10.625615119934082
    6. 'face' → logprob: -11.125615119934082
    7. 'for' → logprob: -11.625615119934082
    8. 'outside' → logprob: -11.750615119934082
    9. '
' → logprob: -11.875615119934082
    10. 'edges' → logprob: -12.125615119934082

Token 1063: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.29528531432151794
    2. '       ' → logprob: -1.5452853441238403
    3. ' ' → logprob: -3.420285224914551
    4. '   ' → logprob: -5.295285224914551
    5. ' =' → logprob: -6.295285224914551
    6. '#' → logprob: -6.420285224914551
    7. '           ' → logprob: -8.17028522491455
    8. ' #' → logprob: -8.17028522491455
    9. '0' → logprob: -8.79528522491455
    10. 's' → logprob: -9.04528522491455

Token 1064: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2867923676967621
    2. '1' → logprob: -1.5367923974990845
    3. '#' → logprob: -4.286792278289795
    4. '=' → logprob: -4.661792278289795
    5. '(' → logprob: -5.036792278289795
    6. '2' → logprob: -6.786792278289795
    7. '   ' → logprob: -6.786792278289795
    8. ':' → logprob: -7.286792278289795
    9. ' =' → logprob: -7.786792278289795
    10. '       ' → logprob: -7.786792278289795

Token 1065: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3660852015018463
    2. '   ' → logprob: -2.3660852909088135
    3. ':' → logprob: -2.7410852909088135
    4. '#' → logprob: -2.8660852909088135
    5. 'faces' → logprob: -3.1160852909088135
    6. ' =' → logprob: -4.241085052490234
    7. ' faces' → logprob: -4.616085052490234
    8. '_faces' → logprob: -4.741085052490234
    9. '        
' → logprob: -4.866085052490234
    10. ' #' → logprob: -6.116085052490234

Token 1066: ' Find' (ID: 9764)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.001139146275818348
    2. ' faces' → logprob: -6.876139163970947
    3. '       ' → logprob: -9.251138687133789
    4. 'face' → logprob: -12.626138687133789
    5. '.faces' → logprob: -13.126138687133789
    6. '   ' → logprob: -13.376138687133789
    7. 'Faces' → logprob: -14.376138687133789
    8. '#' → logprob: -14.501138687133789
    9. '_faces' → logprob: -14.751138687133789
    10. 'fac' → logprob: -14.751138687133789

Token 1067: ' all' (ID: 722)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.011482547968626022
    2. 'all' → logprob: -5.2614827156066895
    3. ' faces' → logprob: -5.2614827156066895
    4. ' all' → logprob: -7.1364827156066895
    5. 'the' → logprob: -8.761482238769531
    6. '   ' → logprob: -10.386482238769531
    7. ' the' → logprob: -10.511482238769531
    8. '_faces' → logprob: -11.386482238769531
    9. '```' → logprob: -12.136482238769531
    10. '#' → logprob: -12.136482238769531

Token 1068: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.0022481500636786222
    2. ' faces' → logprob: -6.127248287200928
    3. '_faces' → logprob: -10.25224781036377
    4. '       ' → logprob: -11.25224781036377
    5. '   ' → logprob: -11.37724781036377
    6. '.faces' → logprob: -13.37724781036377
    7. 'fac' → logprob: -14.50224781036377
    8. '           ' → logprob: -15.37724781036377
    9. '```' → logprob: -15.37724781036377
    10. '#' → logprob: -15.50224781036377

Token 1069: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024375667795538902
    2. 'faces' → logprob: -4.0243754386901855
    3. ' faces' → logprob: -5.2743754386901855
    4. '_faces' → logprob: -7.5243754386901855
    5. '   ' → logprob: -8.024375915527344
    6. '        
' → logprob: -9.649375915527344
    7. ',' → logprob: -9.899375915527344
    8. '<|end|>' → logprob: -10.399375915527344
    9. '.faces' → logprob: -10.524375915527344
    10. '
' → logprob: -11.649375915527344

Token 1070: 'rooms' (ID: 10240)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faces' → logprob: -4.024604277219623e-05
    2. ')' → logprob: -10.250040054321289
    3. ' faces' → logprob: -13.000040054321289
    4. '   ' → logprob: -13.625040054321289
    5. ')
' → logprob: -14.875040054321289
    6. '```' → logprob: -15.125040054321289
    7. '
' → logprob: -15.750040054321289
    8. '.faces' → logprob: -16.12504005432129
    9. '#' → logprob: -16.37504005432129
    10. 'face' → logprob: -16.37504005432129

Token 1071: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07465150207281113
    2. '       ' → logprob: -2.8246514797210693
    3. ' and' → logprob: -5.324651718139648
    4. ')
' → logprob: -5.824651718139648
    5. ',' → logprob: -6.199651718139648
    6. '<|end|>' → logprob: -6.699651718139648
    7. ').' → logprob: -7.699651718139648
    8. 'and' → logprob: -7.824651718139648
    9. '   ' → logprob: -9.074651718139648
    10. '#' → logprob: -9.199651718139648

Token 1072: ' outside' (ID: 7539)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outside' → logprob: -0.008661724627017975
    2. '[' → logprob: -5.63366174697876
    3. ' outside' → logprob: -5.63366174697876
    4. 'outer' → logprob: -7.25866174697876
    5. '[out' → logprob: -8.508661270141602
    6. '1' → logprob: -8.758661270141602
    7. 'the' → logprob: -8.883661270141602
    8. '[(' → logprob: -8.883661270141602
    9. 'out' → logprob: -10.758661270141602
    10. ')' → logprob: -10.883661270141602

Token 1073: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2865969240665436
    2. ')
' → logprob: -1.4115968942642212
    3. 'faces' → logprob: -5.411596775054932
    4. ' faces' → logprob: -8.03659725189209
    5. '   ' → logprob: -8.91159725189209
    6. ')
' → logprob: -8.91159725189209
    7. ')

' → logprob: -9.16159725189209
    8. '_faces' → logprob: -9.28659725189209
    9. ').' → logprob: -10.16159725189209
    10. '):
' → logprob: -10.28659725189209

Token 1074: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0902382880449295
    2. 'faces' → logprob: -2.465238332748413
    3. '   ' → logprob: -7.215238094329834
    4. ' faces' → logprob: -7.715238094329834
    5. '_faces' → logprob: -9.965238571166992
    6. '        
' → logprob: -10.215238571166992
    7. '<|end|>' → logprob: -11.965238571166992
    8. '.faces' → logprob: -11.965238571166992
    9. 'f' → logprob: -12.340238571166992
    10. 'face' → logprob: -12.465238571166992

Token 1075: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5206447243690491
    2. 'faces' → logprob: -1.6456446647644043
    3. 'build' → logprob: -1.6456446647644043
    4. ' the' → logprob: -4.645644664764404
    5. 'graph' → logprob: -4.895644664764404
    6. ' build' → logprob: -6.395644664764404
    7. ' faces' → logprob: -7.020644664764404
    8. ' graph' → logprob: -9.270645141601562
    9. 'C' → logprob: -9.395645141601562
    10. 'walls' → logprob: -9.770645141601562

Token 1076: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.005887079518288374
    2. 'plan' → logprob: -5.755887031555176
    3. 'faces' → logprob: -6.630887031555176
    4. ' graph' → logprob: -6.880887031555176
    5. 'plane' → logprob: -8.755887031555176
    6. 'polygon' → logprob: -9.255887031555176
    7. '```' → logprob: -10.255887031555176
    8. '#' → logprob: -11.005887031555176
    9. '``' → logprob: -11.130887031555176
    10. ' planar' → logprob: -11.380887031555176

Token 1077: ' formed' (ID: 20680)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0157913900911808
    2. 'faces' → logprob: -4.265791416168213
    3. ' faces' → logprob: -6.515791416168213
    4. '   ' → logprob: -9.890790939331055
    5. '_faces' → logprob: -10.015790939331055
    6. '        
' → logprob: -11.015790939331055
    7. '
' → logprob: -11.265790939331055
    8. '<|end|>' → logprob: -11.765790939331055
    9. '.faces' → logprob: -12.640790939331055
    10. ',' → logprob: -12.890790939331055

Token 1078: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.39258983731269836
    2. '       ' → logprob: -1.267589807510376
    3. ' by' → logprob: -3.142589807510376
    4. '   ' → logprob: -12.517589569091797
    5. '```' → logprob: -12.892589569091797
    6. '#' → logprob: -13.017589569091797
    7. ',' → logprob: -13.892589569091797
    8. '        
' → logprob: -13.892589569091797
    9. 'from' → logprob: -14.142589569091797
    10. '=' → logprob: -14.142589569091797

Token 1079: ' pillars' (ID: 105506)
  Prédit: 'walls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'walls' → logprob: -0.1679214984178543
    2. 'the' → logprob: -2.042921543121338
    3. ' the' → logprob: -4.542921543121338
    4. ' walls' → logprob: -4.917921543121338
    5. 'pill' → logprob: -5.292921543121338
    6. '       ' → logprob: -7.417921543121338
    7. '#' → logprob: -7.792921543121338
    8. ' pillars' → logprob: -7.792921543121338
    9. 'build' → logprob: -8.16792106628418
    10. '   ' → logprob: -9.16792106628418

Token 1080: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00847533904016018
    2. 'faces' → logprob: -5.633475303649902
    3. '<|end|>' → logprob: -5.758475303649902
    4. ',' → logprob: -7.508475303649902
    5. ' faces' → logprob: -7.633475303649902
    6. '_faces' → logprob: -8.383475303649902
    7. '        
' → logprob: -8.883475303649902
    8. '<|end|>' → logprob: -8.883475303649902
    9. ' and' → logprob: -9.633475303649902
    10. ')' → logprob: -11.133475303649902

Token 1081: ' walls' (ID: 20562)
  Prédit: 'walls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'walls' → logprob: -0.03805319964885712
    2. ' walls' → logprob: -3.288053274154663
    3. 'wall' → logprob: -12.038053512573242
    4. 'w' → logprob: -13.413053512573242
    5. 'the' → logprob: -14.163053512573242
    6. '   ' → logprob: -14.413053512573242
    7. '#' → logprob: -14.538053512573242
    8. '       ' → logprob: -14.538053512573242
    9. '```' → logprob: -14.538053512573242
    10. 'edges' → logprob: -14.663053512573242

Token 1082: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005300042685121298
    2. 'faces' → logprob: -5.505300045013428
    3. ' faces' → logprob: -7.005300045013428
    4. '_faces' → logprob: -8.88029956817627
    5. '        
' → logprob: -9.25529956817627
    6. '   ' → logprob: -10.63029956817627
    7. '<|end|>' → logprob: -10.63029956817627
    8. '
' → logprob: -11.25529956817627
    9. '.faces' → logprob: -12.13029956817627
    10. 'Faces' → logprob: -12.88029956817627

Token 1083: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01626415178179741
    2. 'faces' → logprob: -4.141263961791992
    3. ' faces' → logprob: -8.766263961791992
    4. '<|end|>' → logprob: -10.266263961791992
    5. '        
' → logprob: -10.766263961791992
    6. '   ' → logprob: -11.891263961791992
    7. '_faces' → logprob: -12.266263961791992
    8. 'face' → logprob: -13.016263961791992
    9. '```' → logprob: -14.266263961791992
    10. '#' → logprob: -14.641263961791992

Token 1084: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' (adapté à ' faces') → logprob: -0.004816361237317324
    2. '       ' → logprob: -5.37981653213501
    3. ' faces' → logprob: -8.629816055297852
    4. '   ' → logprob: -11.379816055297852
    5. 'face' → logprob: -13.379816055297852
    6. '_faces' → logprob: -13.504816055297852
    7. '.faces' → logprob: -13.629816055297852
    8. 'fac' → logprob: -13.879816055297852
    9. '```' → logprob: -14.754816055297852
    10. '        
' → logprob: -15.504816055297852

Token 1085: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474077969789505
    2. ' =' → logprob: -0.9740779399871826
    3. '＝' → logprob: -14.474078178405762
    4. '=f' → logprob: -16.099077224731445
    5. '.extend' → logprob: -16.224077224731445
    6. ',' → logprob: -16.974077224731445
    7. '.=' → logprob: -17.224077224731445
    8. '+=' → logprob: -17.224077224731445
    9. '.' → logprob: -17.349077224731445
    10. 's' → logprob: -17.349077224731445

Token 1086: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.005233763717114925
    2. ' build' → logprob: -5.2552337646484375
    3. '(build' → logprob: -17.505233764648438
    4. '	build' → logprob: -19.630233764648438
    5. '   ' → logprob: -20.630233764648438
    6. 'list' → logprob: -22.005233764648438
    7. '_build' → logprob: -22.005233764648438
    8. '.build' → logprob: -22.255233764648438
    9. 'Build' → logprob: -22.380233764648438
    10. 'built' → logprob: -23.130233764648438

Token 1087: '_faces' (ID: 158689)
  Prédit: '_faces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_faces' → logprob: -2.1888679839321412e-05
    2. 'faces' → logprob: -10.750021934509277
    3. '_f' → logprob: -16.00002098083496
    4. 'Faces' → logprob: -16.37502098083496
    5. '(f' → logprob: -16.87502098083496
    6. '_edges' → logprob: -17.75002098083496
    7. '_fac' → logprob: -18.25002098083496
    8. '.faces' → logprob: -18.62502098083496
    9. '_' → logprob: -18.87502098083496
    10. '```' → logprob: -19.00002098083496

Token 1088: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.0002779014757834375
    2. '(' → logprob: -8.250277519226074
    3. '(
' → logprob: -11.375277519226074
    4. '```' → logprob: -13.000277519226074
    5. ')' → logprob: -13.625277519226074
    6. ' (' → logprob: -14.125277519226074
    7. '((' → logprob: -15.125277519226074
    8. '   ' → logprob: -16.87527847290039
    9. '[C' → logprob: -16.87527847290039
    10. '       ' → logprob: -16.87527847290039

Token 1089: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019781860464718193
    2. ',W' → logprob: -8.750197410583496
    3. ' ,' → logprob: -10.750197410583496
    4. ',C' → logprob: -11.750197410583496
    5. ',
' → logprob: -11.875197410583496
    6. '       ' → logprob: -13.750197410583496
    7. '   ' → logprob: -14.000197410583496
    8. '‌,' → logprob: -15.875197410583496
    9. ',w' → logprob: -15.875197410583496
    10. ')' → logprob: -16.500198364257812

Token 1090: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0005530327325686812
    2. ' W' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.750553131103516
    4. '```' → logprob: -19.000553131103516
    5. '       ' → logprob: -19.375553131103516
    6. '	W' → logprob: -19.375553131103516
    7. '
' → logprob: -20.500553131103516
    8. ' ' → logprob: -20.500553131103516
    9. '(W' → logprob: -21.000553131103516
    10. ',W' → logprob: -21.125553131103516

Token 1091: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004809961188584566
    2. ',p' → logprob: -5.379809856414795
    3. ',w' → logprob: -9.004810333251953
    4. ')' → logprob: -10.504810333251953
    5. ' ,' → logprob: -10.629810333251953
    6. ',
' → logprob: -12.379810333251953
    7. ',W' → logprob: -12.629810333251953
    8. '(p' → logprob: -13.004810333251953
    9. ',C' → logprob: -13.629810333251953
    10. ',P' → logprob: -13.754810333251953

Token 1092: ' pillars' (ID: 105506)
  Prédit: 'pill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pill' → logprob: -0.00011212585377506912
    2. ' pillars' → logprob: -9.375112533569336
    3. 'pillar' → logprob: -10.625112533569336
    4. 'pil' → logprob: -12.875112533569336
    5. '```' → logprob: -15.625112533569336
    6. '-pill' → logprob: -16.125112533569336
    7. '
' → logprob: -17.250112533569336
    8. 'pit' → logprob: -17.375112533569336
    9. 'walls' → logprob: -17.750112533569336
    10. 'pi' → logprob: -18.750112533569336

Token 1093: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020926215802319348
    2. ',w' → logprob: -8.625208854675293
    3. ' ,' → logprob: -11.125208854675293
    4. ',
' → logprob: -11.375208854675293
    5. '       ' → logprob: -13.500208854675293
    6. ',W' → logprob: -13.750208854675293
    7. '   ' → logprob: -15.000208854675293
    8. ')' → logprob: -15.375208854675293
    9. '<|end|>' → logprob: -16.50020980834961
    10. '[' → logprob: -16.62520980834961

Token 1094: ' walls' (ID: 20562)
  Prédit: 'walls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'walls' → logprob: -0.0011717714369297028
    2. ' walls' → logprob: -6.751171588897705
    3. 'wall' → logprob: -14.126172065734863
    4. 'w' → logprob: -14.626172065734863
    5. 'Walls' → logprob: -16.376171112060547
    6. 'faces' → logprob: -16.876171112060547
    7. 'pill' → logprob: -17.251171112060547
    8. '   ' → logprob: -17.251171112060547
    9. '
' → logprob: -18.126171112060547
    10. '```' → logprob: -18.251171112060547

Token 1095: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010950337309623137
    2. '       ' → logprob: -9.250109672546387
    3. ')
' → logprob: -11.500109672546387
    4. '<|end|>' → logprob: -13.000109672546387
    5. '   ' → logprob: -15.125109672546387
    6. ')

' → logprob: -15.500109672546387
    7. '),' → logprob: -16.62510871887207
    8. ' )' → logprob: -16.75010871887207
    9. '#' → logprob: -17.12510871887207
    10. '<|end|>' → logprob: -17.25010871887207

Token 1096: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004932258743792772
    2. '
' → logprob: -6.129932403564453
    3. '        
' → logprob: -6.629932403564453
    4. '```' → logprob: -7.379932403564453
    5. '   ' → logprob: -8.254932403564453
    6. '<|end|>' → logprob: -9.004932403564453
    7. '#' → logprob: -9.504932403564453
    8. 'faces' → logprob: -10.004932403564453
    9. ' faces' → logprob: -10.379932403564453
    10. ',' → logprob: -10.504932403564453

Token 1097: ' #' (ID: 1069)
  Prédit: 'room'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'room' → logprob: -0.7104626297950745
    2. '#' (adapté à ' #') → logprob: -1.4604625701904297
    3. '       ' → logprob: -2.3354625701904297
    4. 'inside' → logprob: -2.4604625701904297
    5. 'face' → logprob: -3.5854625701904297
    6. 'rooms' → logprob: -4.21046257019043
    7. 'point' → logprob: -4.33546257019043
    8. 'outside' → logprob: -5.08546257019043
    9. 'counts' → logprob: -5.33546257019043
    10. 'area' → logprob: -5.71046257019043

Token 1098: ' Step' (ID: 22291)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7781270146369934
    2. 'room' → logprob: -1.2781269550323486
    3. '       ' → logprob: -2.5281269550323486
    4. 'inside' → logprob: -3.0281269550323486
    5. 'outside' → logprob: -3.1531269550323486
    6. 'face' → logprob: -3.4031269550323486
    7. 'rooms' → logprob: -3.9031269550323486
    8. 'area' → logprob: -4.653127193450928
    9. 'areas' → logprob: -5.403127193450928
    10. 'faces' → logprob: -5.653127193450928

Token 1099: ' ' (ID: 220)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0728983879089355
    2. '       ' → logprob: -1.3228983879089355
    3. ' ' → logprob: -2.1978983879089355
    4. '1' → logprob: -2.3228983879089355
    5. '2' → logprob: -2.8228983879089355
    6. '   ' → logprob: -3.4478983879089355
    7. '()
' → logprob: -3.5728983879089355
    8. ' =' → logprob: -4.0728983879089355
    9. '(' → logprob: -4.0728983879089355
    10. '0' → logprob: -4.9478983879089355

Token 1100: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5142417550086975
    2. '2' → logprob: -1.5142416954040527
    3. '3' → logprob: -1.7642416954040527
    4. '#' → logprob: -5.764241695404053
    5. '       ' → logprob: -5.889241695404053
    6. '   ' → logprob: -6.514241695404053
    7. '4' → logprob: -6.889241695404053
    8. '5' → logprob: -7.014241695404053
    9. '6' → logprob: -7.639241695404053
    10. '0' → logprob: -7.889241695404053

Token 1101: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015753019601106644
    2. '
' → logprob: -4.640752792358398
    3. '   ' → logprob: -6.265752792358398
    4. ':' → logprob: -6.515752792358398
    5. '        
' → logprob: -6.515752792358398
    6. '#' → logprob: -7.765752792358398
    7. ' =' → logprob: -8.140752792358398
    8. ' #' → logprob: -9.515752792358398
    9. ',' → logprob: -9.890752792358398
    10. '      ' → logprob: -10.390752792358398

Token 1102: ' Identify' (ID: 88495)
  Prédit: 'room'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'room' → logprob: -0.6539322733879089
    2. '#' → logprob: -1.6539323329925537
    3. 'face' → logprob: -1.7789323329925537
    4. 'rooms' → logprob: -3.4039323329925537
    5. 'area' → logprob: -4.403932094573975
    6. 'outside' → logprob: -4.403932094573975
    7. ' room' → logprob: -4.528932094573975
    8. 'faces' → logprob: -4.778932094573975
    9. 'areas' → logprob: -5.028932094573975
    10. 'point' → logprob: -5.403932094573975

Token 1103: ' which' (ID: 1118)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'outside' → logprob: -0.8360094428062439
    2. 'room' → logprob: -1.2110095024108887
    3. 'inside' → logprob: -1.9610095024108887
    4. '#' → logprob: -3.2110095024108887
    5. 'outer' → logprob: -3.3360095024108887
    6. '       ' → logprob: -4.461009502410889
    7. '   ' → logprob: -4.711009502410889
    8. 'the' → logprob: -4.711009502410889
    9. 'rooms' → logprob: -4.836009502410889
    10. 'inner' → logprob: -5.461009502410889

Token 1104: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.13317622244358063
    2. 'faces' → logprob: -2.133176326751709
    3. ' face' → logprob: -5.133176326751709
    4. ' faces' → logprob: -8.50817584991455
    5. '
' → logprob: -10.75817584991455
    6. 'for' → logprob: -11.00817584991455
    7. '(face' → logprob: -11.00817584991455
    8. '```' → logprob: -11.50817584991455
    9. '#' → logprob: -11.75817584991455
    10. '_face' → logprob: -11.75817584991455

Token 1105: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5574090480804443
    2. ' is' → logprob: -1.3074090480804443
    3. 'contains' → logprob: -2.0574090480804443
    4. ' contains' → logprob: -4.307409286499023
    5. 's' → logprob: -5.807409286499023
    6. '```' → logprob: -6.057409286499023
    7. '_is' → logprob: -6.182409286499023
    8. '       ' → logprob: -6.307409286499023
    9. '_contains' → logprob: -6.807409286499023
    10. '#' → logprob: -7.807409286499023

Token 1106: ' outside' (ID: 7539)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.29023832082748413
    2. 'outside' → logprob: -1.790238380432129
    3. ' the' → logprob: -3.415238380432129
    4. 'outer' → logprob: -3.915238380432129
    5. 'inside' → logprob: -4.290238380432129
    6. 'faces' → logprob: -4.915238380432129
    7. ' outside' → logprob: -5.165238380432129
    8. 'not' → logprob: -6.665238380432129
    9. 'external' → logprob: -6.915238380432129
    10. ' outer' → logprob: -7.290238380432129

Token 1107: ' face' (ID: 4950)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04416998103260994
    2. 'outside' → logprob: -4.044169902801514
    3. ' outside' → logprob: -4.169169902801514
    4. '
' → logprob: -5.044169902801514
    5. '   ' → logprob: -7.044169902801514
    6. ' outer' → logprob: -7.169169902801514
    7. '#' → logprob: -7.669169902801514
    8. ',' → logprob: -7.669169902801514
    9. '        
' → logprob: -8.544170379638672
    10. 'outer' → logprob: -8.544170379638672

Token 1108: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030671820044517517
    2. '
' → logprob: -3.7806718349456787
    3. ' outside' → logprob: -5.5306715965271
    4. 'outside' → logprob: -6.2806715965271
    5. '   ' → logprob: -7.9056715965271
    6. ',' → logprob: -8.030672073364258
    7. '#' → logprob: -8.405672073364258
    8. '        
' → logprob: -8.905672073364258
    9. ' outer' → logprob: -9.155672073364258
    10. 'Outside' → logprob: -9.280672073364258

Token 1109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00027325618430040777
    2. '
' → logprob: -9.375273704528809
    3. ' outside' → logprob: -9.875273704528809
    4. '        
' → logprob: -10.375273704528809
    5. '```' → logprob: -10.500273704528809
    6. 'outside' → logprob: -10.625273704528809
    7. ' outer' → logprob: -11.125273704528809
    8. '   ' → logprob: -11.375273704528809
    9. '#' → logprob: -11.375273704528809
    10. ',' → logprob: -12.875273704528809

Token 1110: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8521741628646851
    2. 'outside' → logprob: -0.8521741628646851
    3. 'outer' → logprob: -2.9771742820739746
    4. '#' (adapté à ' #') → logprob: -3.1021742820739746
    5. '       ' → logprob: -3.6021742820739746
    6. ' min' → logprob: -4.102174282073975
    7. ' outside' → logprob: -6.102174282073975
    8. 'max' → logprob: -6.602174282073975
    9. 'ext' → logprob: -7.102174282073975
    10. '   ' → logprob: -7.102174282073975

Token 1111: ' The' (ID: 623)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8778181672096252
    2. '       ' → logprob: -1.3778181076049805
    3. 'outside' → logprob: -1.3778181076049805
    4. '#' → logprob: -3.1278181076049805
    5. 'outer' → logprob: -3.7528181076049805
    6. 'max' → logprob: -5.7528181076049805
    7. ' min' → logprob: -6.2528181076049805
    8. '   ' → logprob: -6.3778181076049805
    9. 'lowest' → logprob: -7.0028181076049805
    10. ' outside' → logprob: -7.5028181076049805

Token 1112: ' outside' (ID: 7539)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outside' → logprob: -0.06089170277118683
    2. 'min' → logprob: -3.310891628265381
    3. '#' → logprob: -4.310891628265381
    4. 'outer' → logprob: -5.060891628265381
    5. 'def' → logprob: -6.810891628265381
    6. ' outside' → logprob: -7.810891628265381
    7. 'max' → logprob: -8.060892105102539
    8. 'area' → logprob: -8.060892105102539
    9. 'areas' → logprob: -8.185892105102539
    10. ' min' → logprob: -9.060892105102539

Token 1113: ' face' (ID: 4950)
  Prédit: '_face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_face' → logprob: -0.43342509865760803
    2. 'face' → logprob: -1.0584250688552856
    3. ' =' → logprob: -6.933424949645996
    4. '_faces' → logprob: -6.933424949645996
    5. 'faces' → logprob: -7.558424949645996
    6. '=' → logprob: -7.558424949645996
    7. '_points' → logprob: -7.808424949645996
    8. '_point' → logprob: -8.433424949645996
    9. 'poly' → logprob: -9.058424949645996
    10. 'point' → logprob: -9.058424949645996

Token 1114: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007084991782903671
    2. ' =' → logprob: -5.007084846496582
    3. ' is' → logprob: -9.257084846496582
    4. 'is' → logprob: -9.632084846496582
    5. '=min' → logprob: -9.882084846496582
    6. '_points' → logprob: -10.257084846496582
    7. 'points' → logprob: -10.507084846496582
    8. '_vertices' → logprob: -10.757084846496582
    9. '=is' → logprob: -11.382084846496582
    10. '=find' → logprob: -11.507084846496582

Token 1115: ' the' (ID: 290)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.03127018362283707
    2. ' max' → logprob: -3.5312702655792236
    3. 'faces' → logprob: -6.9062700271606445
    4. 'the' → logprob: -8.031270027160645
    5. 'min' → logprob: -9.656270027160645
    6. '[max' → logprob: -9.906270027160645
    7. '(max' → logprob: -10.781270027160645
    8. ' ' → logprob: -11.031270027160645
    9. ' faces' → logprob: -11.406270027160645
    10. 'largest' → logprob: -11.531270027160645

Token 1116: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.040953535586595535
    2. 'one' → logprob: -3.7909536361694336
    3. 'max' → logprob: -4.415953636169434
    4. 'largest' → logprob: -5.290953636169434
    5. '#' → logprob: -8.540953636169434
    6. ' face' → logprob: -8.665953636169434
    7. ' one' → logprob: -10.290953636169434
    8. 'maximum' → logprob: -11.915953636169434
    9. 'long' → logprob: -12.040953636169434
    10. 'faces' → logprob: -12.415953636169434

Token 1117: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.20164409279823303
    2. 'with' → logprob: -1.7016440629959106
    3. '   ' → logprob: -9.451643943786621
    4. ' that' → logprob: -10.201643943786621
    5. ' having' → logprob: -10.576643943786621
    6. '	with' → logprob: -10.701643943786621
    7. '#' → logprob: -11.326643943786621
    8. 'having' → logprob: -11.451643943786621
    9. '       ' → logprob: -11.576643943786621
    10. 's' → logprob: -11.701643943786621

Token 1118: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.059193357825279236
    2. 'max' → logprob: -3.5591933727264404
    3. 'maximum' → logprob: -4.059193134307861
    4. 'largest' → logprob: -4.684193134307861
    5. ' the' → logprob: -6.059193134307861
    6. ' maximum' → logprob: -9.18419361114502
    7. 'len' → logprob: -10.80919361114502
    8. ' largest' → logprob: -11.05919361114502
    9. ' max' → logprob: -11.55919361114502
    10. ' maximal' → logprob: -11.93419361114502

Token 1119: ' largest' (ID: 10574)
  Prédit: 'largest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'largest' → logprob: -0.01213050540536642
    2. 'maximum' → logprob: -5.0121307373046875
    3. ' largest' → logprob: -6.0121307373046875
    4. 'long' → logprob: -6.1371307373046875
    5. 'max' → logprob: -8.512130737304688
    6. 'lowest' → logprob: -8.762130737304688
    7. 'few' → logprob: -9.387130737304688
    8. 'minimum' → logprob: -9.387130737304688
    9. '
' → logprob: -9.512130737304688
    10. ' longest' → logprob: -9.762130737304688

Token 1120: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.19172728061676025
    2. ' area' → logprob: -1.8167272806167603
    3. ' perimeter' → logprob: -5.066727161407471
    4. 'per' → logprob: -5.691727161407471
    5. '_area' → logprob: -7.066727161407471
    6. 'len' → logprob: -7.566727161407471
    7. 'sum' → logprob: -7.941727161407471
    8. 'length' → logprob: -8.941727638244629
    9. 'polygon' → logprob: -9.691727638244629
    10. '-area' → logprob: -10.191727638244629

Token 1121: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4795162081718445
    2. 'def' → logprob: -1.1045162677764893
    3. '       ' → logprob: -3.6045162677764893
    4. 'import' → logprob: -3.9795162677764893
    5. '   ' → logprob: -5.97951602935791
    6. '        
' → logprob: -7.97951602935791
    7. '```' → logprob: -8.85451602935791
    8. ' def' → logprob: -8.97951602935791
    9. 'from' → logprob: -9.10451602935791
    10. ',' → logprob: -9.47951602935791

Token 1122: 'since' (ID: 21910)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07295044511556625
    2. 'def' → logprob: -3.3229503631591797
    3. ' max' → logprob: -3.4479503631591797
    4. ' def' → logprob: -7.19795036315918
    5. 'import' → logprob: -7.57295036315918
    6. 'largest' → logprob: -8.19795036315918
    7. '#' → logprob: -8.32295036315918
    8. 'face' → logprob: -8.44795036315918
    9. 'faces' → logprob: -8.94795036315918
    10. 'f' → logprob: -9.32295036315918

Token 1123: ' polygon' (ID: 65081)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9692531824111938
    2. 'import' → logprob: -1.8442531824111938
    3. 'the' → logprob: -2.4692530632019043
    4. 'min' → logprob: -2.8442530632019043
    5. 'faces' → logprob: -2.9692530632019043
    6. 'outside' → logprob: -2.9692530632019043
    7. 'pill' → logprob: -3.2192530632019043
    8. 'all' → logprob: -3.3442530632019043
    9. 'poly' → logprob: -3.4692530632019043
    10. 'def' → logprob: -3.5942530632019043

Token 1124: ' is' (ID: 382)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2665674388408661
    2. 'points' → logprob: -2.5165674686431885
    3. 'is' → logprob: -3.0165674686431885
    4. '=' → logprob: -3.3915674686431885
    5. ' is' → logprob: -3.8915674686431885
    6. 'with' → logprob: -4.141567230224609
    7. ')' → logprob: -4.766567230224609
    8. '(points' → logprob: -5.516567230224609
    9. ' with' → logprob: -5.641567230224609
    10. 'vertices' → logprob: -5.766567230224609

Token 1125: ' convex' (ID: 142423)
  Prédit: 'conv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conv' → logprob: -0.039325863122940063
    2. ' convex' → logprob: -3.2893259525299072
    3. 'not' → logprob: -7.414325714111328
    4. 'conc' → logprob: -7.664325714111328
    5. '#' → logprob: -9.664325714111328
    6. ' conc' → logprob: -10.289325714111328
    7. 'outside' → logprob: -10.539325714111328
    8. 'a' → logprob: -11.039325714111328
    9. '   ' → logprob: -11.039325714111328
    10. ' not' → logprob: -11.039325714111328

Token 1126: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020495757460594177
    2. ')
' → logprob: -4.895495891571045
    3. ',' → logprob: -5.395495891571045
    4. '),' → logprob: -6.145495891571045
    5. ' and' → logprob: -6.270495891571045
    6. ').' → logprob: -6.645495891571045
    7. 'and' → logprob: -6.895495891571045
    8. '...' → logprob: -7.770495891571045
    9. ')...' → logprob: -7.895495891571045
    10. ' )' → logprob: -8.520495414733887

Token 1127: ' so' (ID: 813)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5654352903366089
    2. '       ' → logprob: -1.3154352903366089
    3. 'def' → logprob: -2.0654354095458984
    4. 'import' → logprob: -4.440435409545898
    5. '
' → logprob: -5.315435409545898
    6. 'outside' → logprob: -5.940435409545898
    7. ' #' → logprob: -6.065435409545898
    8. 'the' → logprob: -6.065435409545898
    9. 'we' → logprob: -6.315435409545898
    10. 'face' → logprob: -6.440435409545898

Token 1128: ' outside' (ID: 7539)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4199165999889374
    2. '       ' → logprob: -1.2949166297912598
    3. 'it' → logprob: -4.04491662979126
    4. 'import' → logprob: -4.54491662979126
    5. ' it' → logprob: -4.66991662979126
    6. 'the' → logprob: -5.29491662979126
    7. 'def' → logprob: -5.41991662979126
    8. ' #' → logprob: -5.41991662979126
    9. 'we' → logprob: -5.66991662979126
    10. '
' → logprob: -5.66991662979126

Token 1129: ' is' (ID: 382)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.16899344325065613
    2. '_face' → logprob: -1.9189934730529785
    3. ' face' → logprob: -5.2939934730529785
    4. ')' → logprob: -7.2939934730529785
    5. ' is' → logprob: -7.4189934730529785
    6. 'is' → logprob: -7.4189934730529785
    7. '   ' → logprob: -7.6689934730529785
    8. '_polygon' → logprob: -7.9189934730529785
    9. '_faces' → logprob: -8.66899299621582
    10. '(face' → logprob: -8.91899299621582

Token 1130: ' un' (ID: 537)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.2095474004745483
    2. 'likely' → logprob: -1.3345474004745483
    3. 'not' → logprob: -1.8345474004745483
    4. 'always' → logprob: -2.834547519683838
    5. 'outside' → logprob: -2.959547519683838
    6. 'gu' → logprob: -3.459547519683838
    7. 'expected' → logprob: -3.959547519683838
    8. ' likely' → logprob: -4.209547519683838
    9. 'usually' → logprob: -4.584547519683838
    10. 'probably' → logprob: -4.584547519683838

Token 1131: 'bounded' (ID: 135171)
  Prédit: 'bounded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bounded' → logprob: -0.021768221631646156
    2. 'def' → logprob: -5.146768093109131
    3. 'der' → logprob: -5.396768093109131
    4. ' bounded' → logprob: -6.021768093109131
    5. '_' → logprob: -6.146768093109131
    6. 'used' → logprob: -7.021768093109131
    7. '
' → logprob: -7.396768093109131
    8. '```' → logprob: -7.396768093109131
    9. 'defined' → logprob: -7.521768093109131
    10. 'bound' → logprob: -7.521768093109131

Token 1132: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12250678241252899
    2. ')
' → logprob: -2.747506856918335
    3. 'face' → logprob: -3.247506856918335
    4. ' face' → logprob: -5.122506618499756
    5. ').' → logprob: -6.872506618499756
    6. ',' → logprob: -6.872506618499756
    7. '   ' → logprob: -6.872506618499756
    8. '
' → logprob: -7.497506618499756
    9. ' and' → logprob: -7.622506618499756
    10. '),' → logprob: -7.872506618499756

Token 1133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0070400056429207325
    2. '
' → logprob: -5.257040023803711
    3. 'def' → logprob: -7.382040023803711
    4. '   ' → logprob: -7.507040023803711
    5. 'import' → logprob: -8.257040023803711
    6. '        
' → logprob: -8.257040023803711
    7. '```' → logprob: -10.757040023803711
    8. 'from' → logprob: -11.007040023803711
    9. ' def' → logprob: -11.132040023803711
    10. '    
' → logprob: -11.257040023803711

Token 1134: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.12379589676856995
    2. '       ' → logprob: -2.623795986175537
    3. 'face' → logprob: -3.748795986175537
    4. 'import' → logprob: -4.998795986175537
    5. 'areas' → logprob: -5.248795986175537
    6. '   ' → logprob: -5.623795986175537
    7. '
' → logprob: -6.123795986175537
    8. 'faces' → logprob: -6.998795986175537
    9. 'area' → logprob: -7.873795986175537
    10. '#' → logprob: -7.873795986175537

Token 1135: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.38578000664711
    2. 'area' → logprob: -1.5107799768447876
    3. 'face' → logprob: -3.010780096054077
    4. 'poly' → logprob: -3.385780096054077
    5. 'lambda' → logprob: -5.260779857635498
    6. 'cross' → logprob: -5.385779857635498
    7. ' polygon' → logprob: -6.260779857635498
    8. 'get' → logprob: -7.135779857635498
    9. 'calc' → logprob: -7.260779857635498
    10. 'def' → logprob: -7.760779857635498

Token 1136: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.0036472335923463106
    2. 'area' → logprob: -5.753647327423096
    3. '_points' → logprob: -8.128646850585938
    4. '(points' → logprob: -9.753646850585938
    5. 'def' → logprob: -10.253646850585938
    6. '_vertices' → logprob: -10.253646850585938
    7. '(vertices' → logprob: -11.503646850585938
    8. '(p' → logprob: -11.753646850585938
    9. 'Area' → logprob: -12.253646850585938
    10. '(area' → logprob: -12.378646850585938

Token 1137: '(face' (ID: 127535)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.5062841176986694
    2. '(poly' → logprob: -1.0062841176986694
    3. '(points' → logprob: -3.631284236907959
    4. '(vertices' → logprob: -6.381284236907959
    5. '(face' → logprob: -6.631284236907959
    6. '(f' → logprob: -7.131284236907959
    7. '(' → logprob: -7.506284236907959
    8. '(pol' → logprob: -7.506284236907959
    9. 'def' → logprob: -9.3812837600708
    10. '(
' → logprob: -9.3812837600708

Token 1138: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.49525144696235657
    2. '):
' → logprob: -1.6202514171600342
    3. '(p' → logprob: -2.745251417160034
    4. '(face' → logprob: -2.995251417160034
    5. '(points' → logprob: -3.120251417160034
    6. '(poly' → logprob: -4.245251655578613
    7. '(vertices' → logprob: -4.495251655578613
    8. '   ' → logprob: -5.745251655578613
    9. '(f' → logprob: -6.495251655578613
    10. '(' → logprob: -6.745251655578613

Token 1139: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48411673307418823
    2. '       ' → logprob: -0.9841167330741882
    3. ' points' → logprob: -5.734116554260254
    4. 'points' → logprob: -6.234116554260254
    5. ' polygon' → logprob: -6.609116554260254
    6. 'poly' → logprob: -7.609116554260254
    7. ' poly' → logprob: -7.859116554260254
    8. '    ' → logprob: -7.984116554260254
    9. '	points' → logprob: -7.984116554260254
    10. 'polygon' → logprob: -7.984116554260254

Token 1140: ' pts' (ID: 66515)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.08792479336261749
    2. '   ' → logprob: -3.2129247188568115
    3. 'res' → logprob: -3.2129247188568115
    4. 'ans' → logprob: -6.962924957275391
    5. ' area' → logprob: -7.462924957275391
    6. 'total' → logprob: -7.712924957275391
    7. 's' → logprob: -7.712924957275391
    8. '       ' → logprob: -7.962924957275391
    9. ' res' → logprob: -8.08792495727539
    10. 'poly' → logprob: -8.08792495727539

Token 1141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18930141627788544
    2. '=' → logprob: -1.9393013715744019
    3. '   ' → logprob: -5.064301490783691
    4. '<|end|>' → logprob: -5.064301490783691
    5. '[' → logprob: -6.064301490783691
    6. '[token' → logprob: -6.439301490783691
    7. ')' → logprob: -6.689301490783691
    8. '=[' → logprob: -6.814301490783691
    9. '<|end|>' → logprob: -6.814301490783691
    10. '=[]' → logprob: -6.814301490783691

Token 1142: ' [' (ID: 723)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0052373106591403484
    2. '[' → logprob: -5.255237102508545
    3. ' [' → logprob: -12.880237579345703
    4. '[(' → logprob: -14.505237579345703
    5. '   ' → logprob: -16.505237579345703
    6. 'p' → logprob: -16.755237579345703
    7. '[np' → logprob: -16.755237579345703
    8. '[len' → logprob: -17.880237579345703
    9. '[int' → logprob: -18.005237579345703
    10. 'pill' → logprob: -18.005237579345703

Token 1143: 'pill' (ID: 124596)
  Prédit: 'pill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pill' → logprob: -2.463036435074173e-05
    2. ' pillars' → logprob: -10.875024795532227
    3. 'pillar' → logprob: -12.125024795532227
    4. 'pit' → logprob: -16.750024795532227
    5. 'pil' → logprob: -17.000024795532227
    6. '   ' → logprob: -17.625024795532227
    7. '-pill' → logprob: -18.625024795532227
    8. '(' → logprob: -19.875024795532227
    9. 'points' → logprob: -20.250024795532227
    10. 'pan' → logprob: -20.375024795532227

Token 1144: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -2.0100624169572257e-05
    2. '[' → logprob: -10.875020027160645
    3. 'ar' → logprob: -14.000020027160645
    4. '[
' → logprob: -15.875020027160645
    5. '[i' → logprob: -16.87502098083496
    6. '[(' → logprob: -17.25002098083496
    7. 'ers' → logprob: -17.37502098083496
    8. '[]' → logprob: -17.37502098083496
    9. '{' → logprob: -17.62502098083496
    10. 'i' → logprob: -17.75002098083496

Token 1145: '[v' (ID: 36561)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02405603602528572
    2. '[v' → logprob: -4.5240559577941895
    3. '[' → logprob: -5.0240559577941895
    4. '[idx' → logprob: -5.2740559577941895
    5. '[p' → logprob: -6.8990559577941895
    6. '[index' → logprob: -9.399056434631348
    7. '[f' → logprob: -9.649056434631348
    8. '[j' → logprob: -10.774056434631348
    9. 'i' → logprob: -11.024056434631348
    10. '[x' → logprob: -11.274056434631348

Token 1146: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.36443325877189636
    2. '[v' → logprob: -1.2394332885742188
    3. ']' → logprob: -4.989433288574219
    4. '[' → logprob: -5.364433288574219
    5. '[x' → logprob: -6.489433288574219
    6. '[p' → logprob: -7.364433288574219
    7. '[idx' → logprob: -7.614433288574219
    8. '][' → logprob: -7.739433288574219
    9. 'i' → logprob: -8.239433288574219
    10. 'idx' → logprob: -8.489433288574219

Token 1147: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24313884973526
    2. ' for' → logprob: -1.9931387901306152
    3. '[v' → logprob: -2.6181387901306152
    4. '[i' → logprob: -5.243138790130615
    5. '[' → logprob: -6.743138790130615
    6. '[p' → logprob: -9.618139266967773
    7. '(v' → logprob: -10.993139266967773
    8. '[f' → logprob: -11.118139266967773
    9. ']' → logprob: -11.243139266967773
    10. '	for' → logprob: -11.368139266967773

Token 1148: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -9.627176768844947e-05
    2. ' v' → logprob: -9.250096321105957
    3. '	v' → logprob: -16.62509536743164
    4. '
' → logprob: -19.87509536743164
    5. 'face' → logprob: -20.87509536743164
    6. '_v' → logprob: -21.00009536743164
    7. '(v' → logprob: -21.00009536743164
    8. '[v' → logprob: -21.25009536743164
    9. ' ' → logprob: -21.62509536743164
    10. '   ' → logprob: -21.62509536743164

Token 1149: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4299814999103546
    2. 'v' → logprob: -1.3049814701080322
    3. ' in' → logprob: -2.5549814701080322
    4. ' v' → logprob: -7.554981708526611
    5. 'face' → logprob: -9.554981231689453
    6. ' ' → logprob: -13.179981231689453
    7. ',v' → logprob: -13.304981231689453
    8. 'f' → logprob: -13.554981231689453
    9. '_v' → logprob: -13.804981231689453
    10. 'i' → logprob: -13.804981231689453

Token 1150: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -5.1689596148207784e-05
    2. ' face' → logprob: -9.875051498413086
    3. '
' → logprob: -16.750051498413086
    4. '(face' → logprob: -16.875051498413086
    5. '[' → logprob: -17.750051498413086
    6. '   ' → logprob: -19.125051498413086
    7. '_face' → logprob: -19.500051498413086
    8. 'faces' → logprob: -20.000051498413086
    9. '.face' → logprob: -20.250051498413086
    10. 'f' → logprob: -20.375051498413086

Token 1151: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.10735831409692764
    2. ']' → logprob: -2.35735821723938
    3. '           ' → logprob: -4.982358455657959
    4. ']+' → logprob: -9.1073579788208
    5. '       ' → logprob: -9.7323579788208
    6. '+' → logprob: -10.9823579788208
    7. ']
' → logprob: -11.1073579788208
    8. ' ]
' → logprob: -11.4823579788208
    9. '               ' → logprob: -12.1073579788208
    10. '         ' → logprob: -12.1073579788208

Token 1152: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08287791907787323
    2. '       ' → logprob: -3.2078778743743896
    3. '   ' → logprob: -3.4578778743743896
    4. 'n' → logprob: -5.832878112792969
    5. 'def' → logprob: -5.957878112792969
    6. '```' → logprob: -7.457878112792969
    7. '
' → logprob: -8.082878112792969
    8. 'return' → logprob: -8.082878112792969
    9. 's' → logprob: -8.832878112792969
    10. '               ' → logprob: -8.957878112792969

Token 1153: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' (adapté à ' area') → logprob: -0.002550931181758642
    2. '   ' → logprob: -6.502551078796387
    3. 's' → logprob: -7.377551078796387
    4. 'res' → logprob: -9.127551078796387
    5. ' area' → logprob: -9.252551078796387
    6. 'ans' → logprob: -9.377551078796387
    7. 'a' → logprob: -9.877551078796387
    8. '       ' → logprob: -10.002551078796387
    9. '           ' → logprob: -11.627551078796387
    10. 'sum' → logprob: -11.877551078796387

Token 1154: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08312071114778519
    2. ' =' → logprob: -3.208120822906494
    3. ' +=' → logprob: -3.958120822906494
    4. '+=' → logprob: -3.958120822906494
    5. '   ' → logprob: -7.708120822906494
    6. '*=' → logprob: -9.083120346069336
    7. '(' → logprob: -9.708120346069336
    8. ')' → logprob: -9.958120346069336
    9. ' ' → logprob: -10.208120346069336
    10. '[' → logprob: -10.333120346069336

Token 1155: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8921695047756657e-05
    2. 'abs' → logprob: -10.500028610229492
    3. ' ' → logprob: -14.000028610229492
    4. '
' → logprob: -15.375028610229492
    5. 'sum' → logprob: -16.000028610229492
    6. '   ' → logprob: -16.500028610229492
    7. '```' → logprob: -18.375028610229492
    8. ' abs' → logprob: -19.125028610229492
    9. '``' → logprob: -20.250028610229492
    10. '  ' → logprob: -20.875028610229492

Token 1156: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.52919222577475e-05
    2. 'abs' → logprob: -9.500075340270996
    3. 'sum' → logprob: -15.125075340270996
    4. '
' → logprob: -15.625075340270996
    5. ' ' → logprob: -16.75007438659668
    6. '```' → logprob: -18.37507438659668
    7. '   ' → logprob: -18.87507438659668
    8. ' abs' → logprob: -19.62507438659668
    9. '``' → logprob: -20.50007438659668
    10. '.' → logprob: -21.25007438659668

Token 1157: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5260567665100098
    2. 'for' → logprob: -2.0260567665100098
    3. ' +=' → logprob: -2.2760567665100098
    4. '=' → logprob: -3.2760567665100098
    5. '           ' → logprob: -3.5260567665100098
    6. '   ' → logprob: -3.6510567665100098
    7. '+=' → logprob: -3.6510567665100098
    8. ' for' → logprob: -4.40105676651001
    9. '       ' → logprob: -4.65105676651001
    10. '.' → logprob: -4.90105676651001

Token 1158: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09756805002689362
    2. '
' → logprob: -3.3475680351257324
    3. ' for' → logprob: -3.5975680351257324
    4. '       ' → logprob: -4.597568035125732
    5. '   ' → logprob: -4.722568035125732
    6. '           ' → logprob: -4.722568035125732
    7. '+' → logprob: -7.847568035125732
    8. '	for' → logprob: -7.972568035125732
    9. '=' → logprob: -8.22256851196289
    10. ' ' → logprob: -8.47256851196289

Token 1159: ' n' (ID: 297)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006027269177138805
    2. ' for' → logprob: -5.5060272216796875
    3. 'n' (adapté à ' n') → logprob: -6.5060272216796875
    4. '           ' → logprob: -7.8810272216796875
    5. '   ' → logprob: -9.881027221679688
    6. '       ' → logprob: -11.256027221679688
    7. 'j' → logprob: -12.756027221679688
    8. 'i' → logprob: -13.006027221679688
    9. 'l' → logprob: -13.006027221679688
    10. ' n' → logprob: -14.381027221679688

Token 1160: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4214574694633484
    2. ' =' → logprob: -1.2964575290679932
    3. '=len' → logprob: -3.171457529067993
    4. '   ' → logprob: -4.671457290649414
    5. 'for' → logprob: -5.296457290649414
    6. 'def' → logprob: -5.921457290649414
    7. '```' → logprob: -6.046457290649414
    8. '-' → logprob: -6.296457290649414
    9. '(len' → logprob: -7.046457290649414
    10. ')' → logprob: -7.421457290649414

Token 1161: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.3319124011322856e-05
    2. ' len' → logprob: -10.750022888183594
    3. '(len' → logprob: -13.250022888183594
    4. '	len' → logprob: -18.000022888183594
    5. '```' → logprob: -18.875022888183594
    6. 'n' → logprob: -19.125022888183594
    7. '[len' → logprob: -19.250022888183594
    8. '   ' → logprob: -19.375022888183594
    9. '=len' → logprob: -19.750022888183594
    10. ',len' → logprob: -20.000022888183594

Token 1162: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00030805266578681767
    2. '(face' → logprob: -8.2503080368042
    3. 'pts' → logprob: -10.1253080368042
    4. 'face' → logprob: -12.3753080368042
    5. '(points' → logprob: -13.2503080368042
    6. '(p' → logprob: -15.2503080368042
    7. ' pts' → logprob: -15.6253080368042
    8. '(pt' → logprob: -15.8753080368042
    9. '_pts' → logprob: -16.375308990478516
    10. 'Pts' → logprob: -17.375308990478516

Token 1163: 'pts' (ID: 24040)
  Prédit: 'pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -3.128163257315464e-07
    2. 'face' → logprob: -15.875
    3. ' pts' → logprob: -16.125
    4. 'pt' → logprob: -17.5
    5. 'points' → logprob: -18.375
    6. '
' → logprob: -19.125
    7. '_pts' → logprob: -19.75
    8. 'faces' → logprob: -20.125
    9. '(' → logprob: -20.125
    10. '[' → logprob: -20.625

Token 1164: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07247801125049591
    2. ')
' → logprob: -2.6974780559539795
    3. '           ' → logprob: -6.6974778175354
    4. '   ' → logprob: -7.4474778175354
    5. '       ' → logprob: -8.197478294372559
    6. '-' → logprob: -9.072478294372559
    7. '[' → logprob: -9.947478294372559
    8. ' -' → logprob: -10.072478294372559
    9. '<|end|>' → logprob: -10.322478294372559
    10. ' )' → logprob: -10.572478294372559

Token 1165: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09795636683702469
    2. ' for' → logprob: -2.472956418991089
    3. '   ' → logprob: -5.22295618057251
    4. '```' → logprob: -6.34795618057251
    5. '       ' → logprob: -7.09795618057251
    6. '           ' → logprob: -7.72295618057251
    7. 'i' → logprob: -7.97295618057251
    8. '	for' → logprob: -9.597956657409668
    9. ' i' → logprob: -9.847956657409668
    10. ' ' → logprob: -10.222956657409668

Token 1166: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0011871340684592724
    2. '           ' → logprob: -7.376187324523926
    3. ' for' → logprob: -7.876187324523926
    4. '       ' → logprob: -9.376187324523926
    5. 'area' → logprob: -9.501187324523926
    6. '   ' → logprob: -10.876187324523926
    7. '	for' → logprob: -13.751187324523926
    8. '```' → logprob: -14.626187324523926
    9. '
' → logprob: -15.501187324523926
    10. 'i' → logprob: -15.626187324523926

Token 1167: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015031944494694471
    2. ' i' → logprob: -6.501502990722656
    3. '   ' → logprob: -14.376502990722656
    4. '	i' → logprob: -15.376502990722656
    5. '```' → logprob: -17.251502990722656
    6. 'k' → logprob: -17.751502990722656
    7. 'j' → logprob: -17.876502990722656
    8. '_i' → logprob: -18.376502990722656
    9. ' ' → logprob: -18.501502990722656
    10. ' ' → logprob: -19.376502990722656

Token 1168: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18007642030715942
    2. 'in' → logprob: -1.8050763607025146
    3. 'i' → logprob: -8.430076599121094
    4. '   ' → logprob: -10.305076599121094
    5. ' i' → logprob: -10.555076599121094
    6. '	in' → logprob: -11.180076599121094
    7. 'n' → logprob: -11.680076599121094
    8. '=' → logprob: -12.055076599121094
    9. ' ' → logprob: -12.305076599121094
    10. '```' → logprob: -12.555076599121094

Token 1169: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007438759785145521
    2. ' range' → logprob: -7.250743865966797
    3. '0' → logprob: -10.375743865966797
    4. '(range' → logprob: -13.375743865966797
    5. 'i' → logprob: -14.625743865966797
    6. 'in' → logprob: -14.875743865966797
    7. '
' → logprob: -16.000743865966797
    8. '(' → logprob: -16.125743865966797
    9. '```' → logprob: -16.375743865966797
    10. '	range' → logprob: -16.500743865966797

Token 1170: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00020425561524461955
    2. '(n' → logprob: -8.500204086303711
    3. '(' → logprob: -15.125204086303711
    4. ' n' → logprob: -15.625204086303711
    5. '```' → logprob: -16.25020408630371
    6. '1' → logprob: -16.37520408630371
    7. '	n' → logprob: -16.75020408630371
    8. '_n' → logprob: -17.25020408630371
    9. '   ' → logprob: -18.00020408630371
    10. 'len' → logprob: -18.62520408630371

Token 1171: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0907072052359581
    2. '-' → logprob: -3.465707302093506
    3. '):' → logprob: -3.465707302093506
    4. '):
' → logprob: -3.965707302093506
    5. ' +' → logprob: -6.340707302093506
    6. ' -' → logprob: -7.340707302093506
    7. '   ' → logprob: -7.340707302093506
    8. 'n' → logprob: -7.465707302093506
    9. '(n' → logprob: -8.090706825256348
    10. '           ' → logprob: -8.465706825256348

Token 1172: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12763711810112
    2. 'area' → logprob: -2.8776371479034424
    3. '   ' → logprob: -3.7526371479034424
    4. '           ' → logprob: -3.8776371479034424
    5. '       ' → logprob: -4.877636909484863
    6. ' area' → logprob: -6.002636909484863
    7. '	       ' → logprob: -6.377636909484863
    8. '```' → logprob: -6.502636909484863
    9. 'j' → logprob: -7.127636909484863
    10. '(area' → logprob: -7.252636909484863

Token 1173: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.6183949708938599
    2. 'area' → logprob: -0.8683949708938599
    3. 'dx' → logprob: -3.8683948516845703
    4. '   ' → logprob: -4.86839485168457
    5. ' x' → logprob: -5.49339485168457
    6. ' area' → logprob: -5.74339485168457
    7. '           ' → logprob: -6.61839485168457
    8. 'j' → logprob: -6.99339485168457
    9. 'a' → logprob: -7.24339485168457
    10. 'px' → logprob: -7.49339485168457

Token 1174: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3695290684700012
    2. '_pts' → logprob: -2.8695290088653564
    3. '=' → logprob: -3.1195290088653564
    4. ',' → logprob: -3.1195290088653564
    5. '0' → logprob: -3.1195290088653564
    6. 's' → logprob: -3.9945290088653564
    7. '[i' → logprob: -3.9945290088653564
    8. 'pts' → logprob: -4.4945292472839355
    9. '_points' → logprob: -4.6195292472839355
    10. '[' → logprob: -4.7445292472839355

Token 1175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02287212200462818
    2. '=' → logprob: -5.147871971130371
    3. '[i' → logprob: -5.522871971130371
    4. '[' → logprob: -5.897871971130371
    5. ',i' → logprob: -6.022871971130371
    6. ' ,' → logprob: -6.522871971130371
    7. ' =' → logprob: -6.522871971130371
    8. 'i' → logprob: -6.647871971130371
    9. '<|end|>' → logprob: -7.522871971130371
    10. '][' → logprob: -7.897871971130371

Token 1176: ' y' (ID: 342)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.5408713817596436
    2. 'y' → logprob: -0.9158713817596436
    3. ' pts' → logprob: -4.290871620178223
    4. ' y' → logprob: -5.915871620178223
    5. '   ' → logprob: -7.415871620178223
    6. '       ' → logprob: -8.040871620178223
    7. '           ' → logprob: -9.165871620178223
    8. 'points' → logprob: -10.540871620178223
    9. 'ys' → logprob: -10.665871620178223
    10. '_pts' → logprob: -10.915871620178223

Token 1177: '1' (ID: 16)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3123283386230469
    2. 'i' → logprob: -1.4373283386230469
    3. '[' → logprob: -4.812328338623047
    4. '```' → logprob: -5.437328338623047
    5. '_i' → logprob: -5.687328338623047
    6. ',' → logprob: -5.937328338623047
    7. '=' → logprob: -6.312328338623047
    8. ',i' → logprob: -6.312328338623047
    9. '=i' → logprob: -6.812328338623047
    10. '           ' → logprob: -6.812328338623047

Token 1178: ' =' (ID: 314)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8628643751144409
    2. ',' → logprob: -0.9878643751144409
    3. '=' → logprob: -2.3628644943237305
    4. ' =' → logprob: -2.4878644943237305
    5. '<|end|>' → logprob: -4.9878644943237305
    6. '           ' → logprob: -5.3628644943237305
    7. '       ' → logprob: -5.6128644943237305
    8. '[i' → logprob: -6.6128644943237305
    9. ' ,' → logprob: -6.7378644943237305
    10. '                   ' → logprob: -6.8628644943237305

Token 1179: ' pts' (ID: 66515)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.0008111746865324676
    2. ' pts' → logprob: -7.1258111000061035
    3. '_pts' → logprob: -13.000811576843262
    4. 'points' → logprob: -13.250811576843262
    5. '   ' → logprob: -14.250811576843262
    6. 'Pts' → logprob: -14.375811576843262
    7. 'pt' → logprob: -15.125811576843262
    8. '```' → logprob: -15.125811576843262
    9. '
' → logprob: -15.375811576843262
    10. '0' → logprob: -15.500811576843262

Token 1180: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1284915804862976
    2. 'i' → logprob: -2.2534916400909424
    3. '[' → logprob: -4.503491401672363
    4. '(i' → logprob: -6.628491401672363
    5. '```' → logprob: -6.753491401672363
    6. ' i' → logprob: -7.378491401672363
    7. '][' → logprob: -7.878491401672363
    8. '               ' → logprob: -8.753491401672363
    9. '[next' → logprob: -8.878491401672363
    10. ',i' → logprob: -8.878491401672363

Token 1181: ']
' (ID: 1592)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005564567167311907
    2. '               ' → logprob: -6.2555646896362305
    3. '[' → logprob: -6.8805646896362305
    4. ']
' → logprob: -7.2555646896362305
    5. ']' → logprob: -7.6305646896362305
    6. '           ' → logprob: -8.00556468963623
    7. '],' → logprob: -8.38056468963623
    8. '       ' → logprob: -8.88056468963623
    9. '                   ' → logprob: -8.88056468963623
    10. '<|end|>' → logprob: -8.88056468963623

Token 1182: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007849719258956611
    2. '```' → logprob: -8.875784873962402
    3. 'x' → logprob: -9.250784873962402
    4. '   ' → logprob: -9.375784873962402
    5. '           ' → logprob: -9.500784873962402
    6. ' ' → logprob: -9.750784873962402
    7. ',' → logprob: -10.000784873962402
    8. '0' → logprob: -10.125784873962402
    9. '<|end|>' → logprob: -10.125784873962402
    10. '       ' → logprob: -10.500784873962402

Token 1183: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.01065066084265709
    2. ' x' → logprob: -4.635650634765625
    3. '               ' → logprob: -7.135650634765625
    4. '                   ' → logprob: -9.760650634765625
    5. '   ' → logprob: -10.760650634765625
    6. '	x' → logprob: -12.385650634765625
    7. '                ' → logprob: -12.510650634765625
    8. ',' → logprob: -13.010650634765625
    9. '           ' → logprob: -13.135650634765625
    10. '```' → logprob: -13.260650634765625

Token 1184: '2' (ID: 17)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.402999758720398
    2. '1' → logprob: -1.527999758720398
    3. '[' → logprob: -1.652999758720398
    4. '][' → logprob: -1.777999758720398
    5. ',' → logprob: -2.4029998779296875
    6. '```' → logprob: -3.1529998779296875
    7. ',i' → logprob: -4.9029998779296875
    8. '+' → logprob: -4.9029998779296875
    9. 'i' → logprob: -5.0279998779296875
    10. '=' → logprob: -5.5279998779296875

Token 1185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011236425780225545
    2. '=' → logprob: -9.875112533569336
    3. '_,' → logprob: -11.500112533569336
    4. ' =' → logprob: -11.625112533569336
    5. ' ,' → logprob: -11.625112533569336
    6. '   ' → logprob: -12.375112533569336
    7. ',
' → logprob: -12.625112533569336
    8. '           ' → logprob: -12.625112533569336
    9. '```' → logprob: -12.750112533569336
    10. ',i' → logprob: -13.125112533569336

Token 1186: ' y' (ID: 342)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.011774055659770966
    2. ' pts' → logprob: -4.511774063110352
    3. 'y' → logprob: -7.261774063110352
    4. '_pts' → logprob: -11.511774063110352
    5. ' y' → logprob: -12.136774063110352
    6. 'x' → logprob: -12.761774063110352
    7. 'Pts' → logprob: -12.761774063110352
    8. 'pt' → logprob: -14.136774063110352
    9. 'ys' → logprob: -14.886774063110352
    10. '0' → logprob: -15.011774063110352

Token 1187: '2' (ID: 17)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08321616053581238
    2. '(i' → logprob: -3.0832161903381348
    3. '[i' → logprob: -4.333216190338135
    4. '1' → logprob: -4.458216190338135
    5. '][' → logprob: -6.083216190338135
    6. '```' → logprob: -6.083216190338135
    7. '[' → logprob: -6.958216190338135
    8. '(' → logprob: -7.458216190338135
    9. ' (' → logprob: -7.458216190338135
    10. ',i' → logprob: -7.958216190338135

Token 1188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2890356481075287
    2. '=' → logprob: -1.539035677909851
    3. '               ' → logprob: -3.6640355587005615
    4. '           ' → logprob: -5.414035797119141
    5. ')' → logprob: -6.289035797119141
    6. ',' → logprob: -7.414035797119141
    7. '       ' → logprob: -7.539035797119141
    8. ' ' → logprob: -7.539035797119141
    9. '[' → logprob: -8.16403579711914
    10. '<|end|>' → logprob: -8.16403579711914

Token 1189: ' pts' (ID: 66515)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.10021239519119263
    2. ' pts' → logprob: -2.350212335586548
    3. '_pts' → logprob: -13.225212097167969
    4. '   ' → logprob: -14.100212097167969
    5. 'pt' → logprob: -14.350212097167969
    6. 'points' → logprob: -14.475212097167969
    7. 'Pts' → logprob: -14.725212097167969
    8. '           ' → logprob: -14.850212097167969
    9. '       ' → logprob: -15.100212097167969
    10. '0' → logprob: -15.475212097167969

Token 1190: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.014323103241622448
    2. '[i' → logprob: -4.2643232345581055
    3. '(i' → logprob: -9.139323234558105
    4. '           ' → logprob: -10.889323234558105
    5. '[' → logprob: -11.139323234558105
    6. '   ' → logprob: -12.014323234558105
    7. '[next' → logprob: -12.514323234558105
    8. '       ' → logprob: -12.639323234558105
    9. '[
' → logprob: -13.389323234558105
    10. '               ' → logprob: -13.889323234558105

Token 1191: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12694354355335236
    2. '(i' → logprob: -2.126943588256836
    3. ' i' → logprob: -11.876943588256836
    4. ' (' → logprob: -12.376943588256836
    5. '{i' → logprob: -13.001943588256836
    6. '   ' → logprob: -13.751943588256836
    7. '_i' → logprob: -15.376943588256836
    8. ',i' → logprob: -15.751943588256836
    9. '(' → logprob: -15.751943588256836
    10. ')i' → logprob: -16.126943588256836

Token 1192: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04215233772993088
    2. '(i' → logprob: -3.5421524047851562
    3. '+i' → logprob: -5.417152404785156
    4. '1' → logprob: -5.667152404785156
    5. 'i' → logprob: -5.917152404785156
    6. ' +' → logprob: -6.542152404785156
    7. '(' → logprob: -8.917152404785156
    8. '0' → logprob: -10.292152404785156
    9. '```' → logprob: -10.292152404785156
    10. ' (' → logprob: -10.542152404785156

Token 1193: '1' (ID: 16)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.05382448062300682
    2. '1' → logprob: -3.1788244247436523
    3. 'i' → logprob: -4.928824424743652
    4. '(' → logprob: -5.678824424743652
    5. ' (' → logprob: -10.053824424743652
    6. '((' → logprob: -10.303824424743652
    7. '{i' → logprob: -10.803824424743652
    8. ' i' → logprob: -12.553824424743652
    9. '+' → logprob: -12.678824424743652
    10. '(x' → logprob: -12.803824424743652

Token 1194: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0064203632064163685
    2. ')%' → logprob: -5.256420135498047
    3. ' %' → logprob: -7.756420135498047
    4. '%' → logprob: -8.256420135498047
    5. ')i' → logprob: -8.881420135498047
    6. ']' → logprob: -9.381420135498047
    7. ')][' → logprob: -9.506420135498047
    8. '           ' → logprob: -10.006420135498047
    9. ')]' → logprob: -10.756420135498047
    10. ')
' → logprob: -10.756420135498047

Token 1195: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5502301454544067
    2. '%' → logprob: -1.1752301454544067
    3. 'i' → logprob: -3.425230026245117
    4. '%i' → logprob: -3.425230026245117
    5. '```' → logprob: -3.675230026245117
    6. '][' → logprob: -5.175230026245117
    7. '%n' → logprob: -5.300230026245117
    8. '0' → logprob: -5.550230026245117
    9. ' i' → logprob: -6.425230026245117
    10. '%d' → logprob: -6.675230026245117

Token 1196: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002823120157700032
    2. 'i' → logprob: -8.750282287597656
    3. ' n' → logprob: -9.500282287597656
    4. '(n' → logprob: -10.375282287597656
    5. 'face' → logprob: -11.250282287597656
    6. '(i' → logprob: -13.875282287597656
    7. ')n' → logprob: -14.125282287597656
    8. '```' → logprob: -14.125282287597656
    9. ')' → logprob: -14.750282287597656
    10. 'pts' → logprob: -14.875282287597656

Token 1197: ']
' (ID: 1592)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0009047918138094246
    2. '               ' → logprob: -8.25090503692627
    3. '           ' → logprob: -8.50090503692627
    4. ']' → logprob: -8.62590503692627
    5. ']
' → logprob: -8.87590503692627
    6. '[' → logprob: -9.62590503692627
    7. '       ' → logprob: -11.50090503692627
    8. ')][' → logprob: -12.00090503692627
    9. ')[' → logprob: -12.25090503692627
    10. '0' → logprob: -12.37590503692627

Token 1198: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002469158498570323
    2. '```' → logprob: -8.62524700164795
    3. '           ' → logprob: -10.37524700164795
    4. '   ' → logprob: -10.87524700164795
    5. '       ' → logprob: -12.25024700164795
    6. 'area' → logprob: -12.62524700164795
    7. '`' → logprob: -12.87524700164795
    8. '``' → logprob: -13.25024700164795
    9. '                   ' → logprob: -13.37524700164795
    10. ' area' → logprob: -14.62524700164795

Token 1199: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' (adapté à ' area') → logprob: -0.49113234877586365
    2. '               ' → logprob: -0.991132378578186
    3. ' area' → logprob: -4.1161322593688965
    4. '           ' → logprob: -7.6161322593688965
    5. '                   ' → logprob: -10.241132736206055
    6. '   ' → logprob: -10.741132736206055
    7. '(area' → logprob: -10.866132736206055
    8. '       ' → logprob: -11.241132736206055
    9. '```' → logprob: -12.366132736206055
    10. 'x' → logprob: -12.741132736206055

Token 1200: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2535630464553833
    2. ' +=' → logprob: -1.5035630464553833
    3. '=' → logprob: -6.628562927246094
    4. '+=(' → logprob: -8.628562927246094
    5. '   ' → logprob: -10.128562927246094
    6. ']+=' → logprob: -10.378562927246094
    7. '+' → logprob: -11.128562927246094
    8. '```' → logprob: -11.253562927246094
    9. ')' → logprob: -11.753562927246094
    10. ' =' → logprob: -11.878562927246094

Token 1201: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25211143493652344
    2. '(x' → logprob: -1.5021114349365234
    3. ' (' → logprob: -9.502111434936523
    4. ' x' → logprob: -9.627111434936523
    5. '(' → logprob: -10.127111434936523
    6. '   ' → logprob: -13.752111434936523
    7. '
' → logprob: -16.002111434936523
    8. '	x' → logprob: -16.127111434936523
    9. '```' → logprob: -16.252111434936523
    10. '((' → logprob: -16.502111434936523

Token 1202: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.047079361975193024
    2. '[' → logprob: -3.92207932472229
    3. '2' → logprob: -4.047079563140869
    4. '```' → logprob: -5.547079563140869
    5. '[i' → logprob: -6.172079563140869
    6. 'i' → logprob: -6.672079563140869
    7. 'pts' → logprob: -7.297079563140869
    8. '_pts' → logprob: -8.797079086303711
    9. 'x' → logprob: -9.297079086303711
    10. '(' → logprob: -9.297079086303711

Token 1203: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2841395139694214
    2. '*' → logprob: -1.7841395139694214
    3. '*y' → logprob: -2.534139633178711
    4. '*(' → logprob: -10.534139633178711
    5. '   ' → logprob: -10.784139633178711
    6. ' ' → logprob: -12.159139633178711
    7. 'y' → logprob: -12.534139633178711
    8. '**' → logprob: -12.534139633178711
    9. '```' → logprob: -13.284139633178711
    10. '*q' → logprob: -14.409139633178711

Token 1204: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -8.061054359131958e-06
    2. ' y' → logprob: -11.750007629394531
    3. ''y' → logprob: -17.25000762939453
    4. '```' → logprob: -17.50000762939453
    5. '
' → logprob: -18.12500762939453
    6. '	y' → logprob: -18.25000762939453
    7. '(y' → logprob: -18.37500762939453
    8. 'y's' → logprob: -18.87500762939453
    9. 'x' → logprob: -19.00000762939453
    10. '   ' → logprob: -19.25000762939453

Token 1205: '2' (ID: 17)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.4151016473770142
    2. '+' → logprob: -1.6651016473770142
    3. '1' → logprob: -1.7901016473770142
    4. '[i' → logprob: -1.9151016473770142
    5. '```' → logprob: -2.5401015281677246
    6. '[' → logprob: -3.0401015281677246
    7. 'i' → logprob: -3.6651015281677246
    8. '2' → logprob: -3.7901015281677246
    9. '(' → logprob: -3.9151015281677246
    10. '(i' → logprob: -4.165101528167725

Token 1206: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5234699249267578
    2. ' -' → logprob: -0.8984699249267578
    3. '               ' → logprob: -8.773469924926758
    4. '           ' → logprob: -9.273469924926758
    5. '```' → logprob: -10.398469924926758
    6. '                   ' → logprob: -10.898469924926758
    7. '   ' → logprob: -11.273469924926758
    8. '       ' → logprob: -12.023469924926758
    9. ' ' → logprob: -12.273469924926758
    10. '                ' → logprob: -12.273469924926758

Token 1207: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00033558503491804004
    2. ' x' → logprob: -8.000335693359375
    3. '(x' → logprob: -16.625335693359375
    4. 'y' → logprob: -17.000335693359375
    5. '	x' → logprob: -17.000335693359375
    6. '```' → logprob: -17.125335693359375
    7. '   ' → logprob: -17.500335693359375
    8. ' ' → logprob: -18.250335693359375
    9. '
' → logprob: -20.125335693359375
    10. '`' → logprob: -20.375335693359375

Token 1208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6436068415641785
    2. '2' → logprob: -0.8936068415641785
    3. 'i' → logprob: -2.8936069011688232
    4. '[i' → logprob: -5.143606662750244
    5. '```' → logprob: -5.643606662750244
    6. 'x' → logprob: -8.393607139587402
    7. '_i' → logprob: -8.893607139587402
    8. '[(' → logprob: -9.018607139587402
    9. '[' → logprob: -9.268607139587402
    10. '(i' → logprob: -10.393607139587402

Token 1209: ' *' (ID: 425)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16028383374214172
    2. ' x' → logprob: -1.9102838039398193
    3. '   ' → logprob: -10.910284042358398
    4. ' *' → logprob: -11.285284042358398
    5. '	x' → logprob: -11.785284042358398
    6. '```' → logprob: -11.785284042358398
    7. '[' → logprob: -12.660284042358398
    8. '*' → logprob: -12.785284042358398
    9. '2' → logprob: -13.410284042358398
    10. '*x' → logprob: -13.535284042358398

Token 1210: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.4121114822482923e-06
    2. ' x' → logprob: -12.625003814697266
    3. '{x' → logprob: -19.375003814697266
    4. '   ' → logprob: -19.875003814697266
    5. '	x' → logprob: -19.875003814697266
    6. '2' → logprob: -20.125003814697266
    7. '[' → logprob: -21.125003814697266
    8. '(x' → logprob: -21.125003814697266
    9. '```' → logprob: -21.500003814697266
    10. ')x' → logprob: -21.875003814697266

Token 1211: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7800316214561462
    2. '[(' → logprob: -1.780031681060791
    3. '[i' → logprob: -2.030031681060791
    4. 'i' → logprob: -2.155031681060791
    5. '(i' → logprob: -3.030031681060791
    6. '+' → logprob: -3.530031681060791
    7. '```' → logprob: -4.155031681060791
    8. '((' → logprob: -4.655031681060791
    9. '{i' → logprob: -4.780031681060791
    10. '(' → logprob: -5.280031681060791

Token 1212: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2434765100479126
    2. '<|end|>' → logprob: -1.2434765100479126
    3. '           ' → logprob: -2.243476390838623
    4. '
' → logprob: -2.493476390838623
    5. '   ' → logprob: -2.868476390838623
    6. ')' → logprob: -3.243476390838623
    7. '<|end|>' → logprob: -3.243476390838623
    8. ' ' → logprob: -3.743476390838623
    9. '*' → logprob: -4.493476390838623
    10. 'area' → logprob: -4.743476390838623

Token 1213: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7820858359336853
    2. '       ' → logprob: -1.15708589553833
    3. '           ' → logprob: -1.53208589553833
    4. '```' → logprob: -5.65708589553833
    5. ' ' → logprob: -6.03208589553833
    6. '*' → logprob: -6.53208589553833
    7. 'area' → logprob: -6.90708589553833
    8. ' area' → logprob: -7.53208589553833
    9. '               ' → logprob: -7.65708589553833
    10. '[' → logprob: -7.78208589553833

Token 1214: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13472609221935272
    2. 'area' → logprob: -3.009726047515869
    3. '       ' → logprob: -3.134726047515869
    4. '   ' → logprob: -4.384726047515869
    5. ' area' → logprob: -4.759726047515869
    6. 'return' (adapté à ' return') → logprob: -4.759726047515869
    7. '=' → logprob: -6.884726047515869
    8. '_area' → logprob: -7.634726047515869
    9. ' return' → logprob: -8.009726524353027
    10. '		' → logprob: -8.009726524353027

Token 1215: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.03909122571349144
    2. 'area' → logprob: -3.289091110229492
    3. ' abs' → logprob: -7.164091110229492
    4. '0' → logprob: -8.414091110229492
    5. ' area' → logprob: -9.914091110229492
    6. '   ' → logprob: -13.039091110229492
    7. '(abs' → logprob: -13.789091110229492
    8. '
' → logprob: -14.914091110229492
    9. ' ' → logprob: -15.039091110229492
    10. '(area' → logprob: -16.289091110229492

Token 1216: '(area' (ID: 115185)
  Prédit: '(area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(area' → logprob: -9.615255839889869e-05
    2. 'area' → logprob: -9.750096321105957
    3. '(' → logprob: -10.250096321105957
    4. '(
' → logprob: -13.125096321105957
    5. '(int' → logprob: -14.750096321105957
    6. ' area' → logprob: -17.87509536743164
    7. '((' → logprob: -18.12509536743164
    8. '.area' → logprob: -19.25009536743164
    9. 'int' → logprob: -19.37509536743164
    10. '(round' → logprob: -19.62509536743164

Token 1217: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062268923968076706
    2. '/' → logprob: -3.3122689723968506
    3. '()' → logprob: -4.4372687339782715
    4. ' /' → logprob: -5.0622687339782715
    5. '0' → logprob: -6.4372687339782715
    6. '   ' → logprob: -7.3122687339782715
    7. '           ' → logprob: -7.4372687339782715
    8. ']' → logprob: -7.9372687339782715
    9. '```' → logprob: -8.06226921081543
    10. '*' → logprob: -8.18726921081543

Token 1218: ' /' (ID: 820)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8527878522872925
    2. '/' → logprob: -1.2277878522872925
    3. '0' → logprob: -2.727787971496582
    4. '```' → logprob: -2.977787971496582
    5. ' /' → logprob: -3.227787971496582
    6. '//' → logprob: -3.227787971496582
    7. '(' → logprob: -3.852787971496582
    8. '       ' → logprob: -4.477787971496582
    9. ')' → logprob: -4.602787971496582
    10. '>>' → logprob: -5.102787971496582

Token 1219: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -18.375
    4. '200' → logprob: -19.25
    5. '
' → logprob: -19.5
    6. '(' → logprob: -19.75
    7. '```' → logprob: -20.875
    8. '.' → logprob: -21.5
    9. '0' → logprob: -22.125
    10. '1' → logprob: -22.25

Token 1220: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -19.25
    4. '200' → logprob: -19.75
    5. '
' → logprob: -20.375
    6. '```' → logprob: -21.0
    7. '２' → logprob: -21.125
    8. '.' → logprob: -21.625
    9. '210' → logprob: -22.125
    10. '۲' → logprob: -22.625

Token 1221: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11765684932470322
    2. '
' → logprob: -2.867656946182251
    3. '        
' → logprob: -2.992656946182251
    4. '<|end|>' → logprob: -5.867656707763672
    5. '    
' → logprob: -7.242656707763672
    6. '  
' → logprob: -8.867656707763672
    7. '            
' → logprob: -9.242656707763672
    8. '```' → logprob: -9.867656707763672
    9. '
' → logprob: -10.492656707763672
    10. ',' → logprob: -10.742656707763672

Token 1222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09438867121934891
    2. '
' → logprob: -2.469388723373413
    3. '```' → logprob: -5.969388484954834
    4. '        
' → logprob: -6.219388484954834
    5. '   ' → logprob: -7.969388484954834
    6. '<|end|>' → logprob: -8.469388961791992
    7. '    
' → logprob: -8.594388961791992
    8. '  
' → logprob: -10.969388961791992
    9. '
' → logprob: -11.094388961791992
    10. '           ' → logprob: -11.219388961791992

Token 1223: ' areas' (ID: 6723)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021736375987529755
    2. '
' → logprob: -4.021736145019531
    3. 'outside' → logprob: -6.646736145019531
    4. 'faces' → logprob: -7.396736145019531
    5. '        
' → logprob: -8.021736145019531
    6. 'max' → logprob: -8.146736145019531
    7. '   ' → logprob: -8.396736145019531
    8. 'face' → logprob: -8.896736145019531
    9. '```' → logprob: -8.896736145019531
    10. '    
' → logprob: -9.146736145019531

Token 1224: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.16542257368564606
    2. ' =' → logprob: -2.0404226779937744
    3. '=' → logprob: -4.290422439575195
    4. '[' → logprob: -5.790422439575195
    5. '.' → logprob: -6.915422439575195
    6. '_faces' → logprob: -7.165422439575195
    7. '.setdefault' → logprob: -7.540422439575195
    8. '.sort' → logprob: -7.540422439575195
    9. '   ' → logprob: -7.790422439575195
    10. '=[]' → logprob: -8.165422439575195

Token 1225: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03879036009311676
    2. '[list' → logprob: -3.288790464401245
    3. '[len' → logprob: -7.788790225982666
    4. '[token' → logprob: -9.038790702819824
    5. '[List' → logprob: -10.288790702819824
    6. 'sorted' → logprob: -10.413790702819824
    7. '[array' → logprob: -10.788790702819824
    8. '[p' → logprob: -10.788790702819824
    9. '[max' → logprob: -11.038790702819824
    10. '[s' → logprob: -11.538790702819824

Token 1226: 'polygon' (ID: 132859)
  Prédit: 'polygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -2.248469718324486e-05
    2. ' polygon' → logprob: -10.750022888183594
    3. '[' → logprob: -14.250022888183594
    4. 'pol' → logprob: -15.750022888183594
    5. 'area' → logprob: -17.000022888183594
    6. 'polar' → logprob: -17.625022888183594
    7. '[p' → logprob: -18.125022888183594
    8. 'poly' → logprob: -18.625022888183594
    9. '_polygon' → logprob: -19.000022888183594
    10. 'abs' → logprob: -19.125022888183594

Token 1227: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.002466740319505334
    2. '_face' → logprob: -6.877466678619385
    3. 'area' → logprob: -7.502466678619385
    4. '[i' → logprob: -8.002467155456543
    5. '[v' → logprob: -8.627467155456543
    6. '(v' → logprob: -9.502467155456543
    7. '(face' → logprob: -9.627467155456543
    8. '_faces' → logprob: -10.252467155456543
    9. '(i' → logprob: -10.502467155456543
    10. '面积' → logprob: -10.752467155456543

Token 1228: '(face' (ID: 127535)
  Prédit: '(face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(face' → logprob: -0.018771836534142494
    2. '(f' → logprob: -4.018771648406982
    3. 'face' → logprob: -7.518771648406982
    4. '(' → logprob: -9.64377212524414
    5. 'f' → logprob: -11.26877212524414
    6. ' face' → logprob: -14.51877212524414
    7. ')' → logprob: -15.76877212524414
    8. '(x' → logprob: -16.01877212524414
    9. '(
' → logprob: -16.14377212524414
    10. '(area' → logprob: -16.64377212524414

Token 1229: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2136250138282776
    2. 'for' → logprob: -1.8386249542236328
    3. ')' → logprob: -3.463624954223633
    4. '(i' → logprob: -7.088624954223633
    5. '[i' → logprob: -8.088624954223633
    6. '(face' → logprob: -8.588624954223633
    7. '(f' → logprob: -8.838624954223633
    8. ']' → logprob: -8.838624954223633
    9. '[' → logprob: -9.338624954223633
    10. ',' → logprob: -9.338624954223633

Token 1230: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25948309898376465
    2. 'for' → logprob: -1.5094830989837646
    3. ')' → logprob: -6.009483337402344
    4. '[' → logprob: -6.384483337402344
    5. ',' → logprob: -7.009483337402344
    6. '.' → logprob: -7.259483337402344
    7. '.append' → logprob: -7.884483337402344
    8. '(' → logprob: -8.259483337402344
    9. '[i' → logprob: -8.384483337402344
    10. '
' → logprob: -8.884483337402344

Token 1231: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.0006283254479058087
    2. ' face' → logprob: -7.375628471374512
    3. 'area' → logprob: -13.875628471374512
    4. '(face' → logprob: -15.000628471374512
    5. 'f' → logprob: -15.250628471374512
    6. '
' → logprob: -16.375627517700195
    7. '_face' → logprob: -16.625627517700195
    8. 'faces' → logprob: -16.875627517700195
    9. 'fac' → logprob: -18.625627517700195
    10. '.face' → logprob: -18.625627517700195

Token 1232: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2877780497074127
    2. ' in' → logprob: -1.4127780199050903
    3. 'face' → logprob: -5.162777900695801
    4. '(face' → logprob: -7.662777900695801
    5. ' face' → logprob: -7.912777900695801
    6. ')' → logprob: -10.6627779006958
    7. '
' → logprob: -12.2877779006958
    8. ' ' → logprob: -12.6627779006958
    9. ']' → logprob: -13.1627779006958
    10. 'faces' → logprob: -13.4127779006958

Token 1233: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -1.676292231422849e-05
    2. ' faces' → logprob: -11.000017166137695
    3. 'areas' → logprob: -16.750017166137695
    4. 'face' → logprob: -17.750017166137695
    5. '
' → logprob: -18.125017166137695
    6. 'range' → logprob: -18.375017166137695
    7. '[' → logprob: -20.000017166137695
    8. '.faces' → logprob: -20.250017166137695
    9. 'fac' → logprob: -20.500017166137695
    10. '   ' → logprob: -20.500017166137695

Token 1234: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5002424716949463
    2. '
' → logprob: -1.3752424716949463
    3. ']' → logprob: -2.2502424716949463
    4. '<|end|>' → logprob: -4.125242233276367
    5. ')' → logprob: -5.000242233276367
    6. '        
' → logprob: -5.750242233276367
    7. ']
' → logprob: -6.000242233276367
    8. '    
' → logprob: -6.750242233276367
    9. '<|end|>' → logprob: -6.875242233276367
    10. '```' → logprob: -7.500242233276367

Token 1235: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5687267184257507
    2. 'max' → logprob: -0.9437267184257507
    3. 'min' → logprob: -3.6937267780303955
    4. 'idx' → logprob: -4.693726539611816
    5. 'outside' → logprob: -5.818726539611816
    6. 'largest' → logprob: -6.443726539611816
    7. 'index' → logprob: -6.818726539611816
    8. '_max' → logprob: -6.943726539611816
    9. '_min' → logprob: -7.693726539611816
    10. '_' → logprob: -7.693726539611816

Token 1236: ' outside' (ID: 7539)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outside' (adapté à ' outside') → logprob: -0.3440263271331787
    2. 'max' → logprob: -1.3440263271331787
    3. '       ' → logprob: -3.8440263271331787
    4. 'idx' → logprob: -5.219026565551758
    5. 'outer' → logprob: -6.719026565551758
    6. ' outside' → logprob: -7.219026565551758
    7. 'out' → logprob: -7.469026565551758
    8. 'min' → logprob: -7.719026565551758
    9. 'largest' → logprob: -8.719026565551758
    10. 'm' → logprob: -8.719026565551758

Token 1237: '_index' (ID: 7748)
  Prédit: '_face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_face' → logprob: -0.4425652027130127
    2. '_index' → logprob: -1.1925652027130127
    3. '_idx' → logprob: -2.9425652027130127
    4. '_area' → logprob: -6.942564964294434
    5. '_id' → logprob: -8.192564964294434
    6. '_' → logprob: -9.942564964294434
    7. ' =' → logprob: -9.942564964294434
    8. '_max' → logprob: -10.067564964294434
    9. '_i' → logprob: -10.567564964294434
    10. '=' → logprob: -11.442564964294434

Token 1238: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759438276290894
    2. '=' → logprob: -0.8259438276290894
    3. '=len' → logprob: -13.825943946838379
    4. '=max' → logprob: -14.575943946838379
    5. '=index' → logprob: -14.950943946838379
    6. '=-' → logprob: -15.325943946838379
    7. ' =
' → logprob: -15.325943946838379
    8. ',' → logprob: -15.325943946838379
    9. '=f' → logprob: -15.325943946838379
    10. '=find' → logprob: -15.575943946838379

Token 1239: ' areas' (ID: 6723)
  Prédit: 'areas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'areas' → logprob: -9.102680633077398e-05
    2. ' areas' → logprob: -9.625090599060059
    3. '0' → logprob: -10.625090599060059
    4. '   ' → logprob: -14.875090599060059
    5. 'max' → logprob: -16.125091552734375
    6. 'area' → logprob: -16.375091552734375
    7. ' ' → logprob: -17.000091552734375
    8. '	' → logprob: -18.125091552734375
    9. '       ' → logprob: -18.500091552734375
    10. 'ages' → logprob: -18.625091552734375

Token 1240: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -1.6166903151315637e-05
    2. '.argmax' → logprob: -11.125016212463379
    3. ' .' → logprob: -14.000016212463379
    4. '.' → logprob: -15.000016212463379
    5. '.arg' → logprob: -15.875016212463379
    6. 'index' → logprob: -16.750015258789062
    7. '.idx' → logprob: -17.750015258789062
    8. '#index' → logprob: -18.500015258789062
    9. '].' → logprob: -18.750015258789062
    10. '.Index' → logprob: -19.000015258789062

Token 1241: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.07889022678136826
    2. 'max' → logprob: -2.578890323638916
    3. ' max' → logprob: -14.578889846801758
    4. '=max' → logprob: -17.328889846801758
    5. '	max' → logprob: -17.953889846801758
    6. '(' → logprob: -17.953889846801758
    7. '(min' → logprob: -18.453889846801758
    8. '[max' → logprob: -19.953889846801758
    9. '_max' → logprob: -20.828889846801758
    10. ',max' → logprob: -21.078889846801758

Token 1242: '(' (ID: 7)
  Prédit: 'areas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'areas' → logprob: -0.2522253692150116
    2. '(' → logprob: -1.502225399017334
    3. ')' → logprob: -8.252224922180176
    4. ' areas' → logprob: -11.502224922180176
    5. '_' → logprob: -11.627224922180176
    6. 'area' → logprob: -12.127224922180176
    7. '(
' → logprob: -12.502224922180176
    8. ')}' → logprob: -13.877224922180176
    9. 'Areas' → logprob: -14.002224922180176
    10. ')
' → logprob: -14.002224922180176

Token 1243: 'areas' (ID: 69250)
  Prédit: 'areas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'areas' → logprob: -6.704273118884885e-07
    2. ' areas' → logprob: -15.000000953674316
    3. 'area' → logprob: -15.500000953674316
    4. ')' → logprob: -18.0
    5. '(' → logprob: -19.125
    6. '   ' → logprob: -19.375
    7. 'ages' → logprob: -19.625
    8. '[' → logprob: -20.375
    9. 'faces' → logprob: -20.375
    10. '
' → logprob: -20.5

Token 1244: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9862216504407115e-05
    2. ')
' → logprob: -11.000020027160645
    3. ')}' → logprob: -13.500020027160645
    4. '))' → logprob: -14.375020027160645
    5. ' )' → logprob: -15.000020027160645
    6. ')]' → logprob: -15.375020027160645
    7. ')`' → logprob: -15.375020027160645
    8. '       ' → logprob: -15.750020027160645
    9. ')

' → logprob: -16.875019073486328
    10. '   ' → logprob: -17.500019073486328

Token 1245: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019915835931897163
    2. '
' → logprob: -5.01991605758667
    3. 'inside' → logprob: -5.26991605758667
    4. 'for' → logprob: -6.39491605758667
    5. 'faces' → logprob: -6.51991605758667
    6. 'inter' → logprob: -6.64491605758667
    7. 'rooms' → logprob: -6.76991605758667
    8. 'room' → logprob: -7.39491605758667
    9. '```' → logprob: -7.39491605758667
    10. '   ' → logprob: -8.019915580749512

Token 1246: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.535972535610199
    2. 'inside' → logprob: -1.0359725952148438
    3. 'room' → logprob: -3.6609725952148438
    4. '#' (adapté à ' #') → logprob: -3.7859725952148438
    5. 'rooms' → logprob: -5.410972595214844
    6. 'inter' → logprob: -6.035972595214844
    7. 'inner' → logprob: -6.160972595214844
    8. 'for' → logprob: -6.660972595214844
    9. '   ' → logprob: -8.160972595214844
    10. 'faces' → logprob: -8.535972595214844

Token 1247: ' Step' (ID: 22291)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.35376814007759094
    2. '       ' → logprob: -1.8537681102752686
    3. 'room' → logprob: -2.9787681102752686
    4. '#' → logprob: -2.9787681102752686
    5. 'rooms' → logprob: -4.103768348693848
    6. 'face' → logprob: -5.103768348693848
    7. 'inner' → logprob: -5.103768348693848
    8. 'faces' → logprob: -5.603768348693848
    9. 'inter' → logprob: -5.853768348693848
    10. 'for' → logprob: -6.478768348693848

Token 1248: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5502848029136658
    2. '       ' → logprob: -1.3002848625183105
    3. '2' → logprob: -2.3002848625183105
    4. '1' → logprob: -3.4252848625183105
    5. '=' → logprob: -5.4252848625183105
    6. '   ' → logprob: -5.5502848625183105
    7. ' ' → logprob: -5.6752848625183105
    8. '#' → logprob: -6.8002848625183105
    9. 'wise' → logprob: -6.8002848625183105
    10. ' =' → logprob: -7.0502848625183105

Token 1249: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1161593571305275
    2. '3' → logprob: -3.366159439086914
    3. '   ' → logprob: -3.366159439086914
    4. 'step' → logprob: -3.991159439086914
    5. '1' → logprob: -4.116159439086914
    6. '       ' → logprob: -6.116159439086914
    7. 'Step' → logprob: -6.366159439086914
    8. '#' → logprob: -7.366159439086914
    9. ' step' → logprob: -8.241159439086914
    10. '0' → logprob: -8.241159439086914

Token 1250: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000526107382029295
    2. '
' → logprob: -8.000526428222656
    3. '#' → logprob: -8.875526428222656
    4. '   ' → logprob: -10.875526428222656
    5. '        
' → logprob: -11.250526428222656
    6. ':' → logprob: -11.750526428222656
    7. '```' → logprob: -12.625526428222656
    8. ' #' → logprob: -13.250526428222656
    9. 'Step' → logprob: -13.375526428222656
    10. 'for' → logprob: -13.875526428222656

Token 1251: ' Build' (ID: 10885)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.5777093172073364
    2. '#' → logprob: -1.8277093172073364
    3. '       ' → logprob: -1.8277093172073364
    4. 'room' → logprob: -3.202709197998047
    5. 'rooms' → logprob: -3.202709197998047
    6. 'for' → logprob: -4.827709197998047
    7. 'faces' → logprob: -5.452709197998047
    8. 'face' → logprob: -5.577709197998047
    9. 'inter' → logprob: -5.577709197998047
    10. 'inner' → logprob: -6.327709197998047

Token 1252: ' dual' (ID: 25399)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.7589103579521179
    2. 'face' → logprob: -1.3839104175567627
    3. 'room' → logprob: -1.8839104175567627
    4. 'inside' → logprob: -3.0089104175567627
    5. '#' → logprob: -3.5089104175567627
    6. 'adj' → logprob: -3.8839104175567627
    7. '       ' → logprob: -4.633910179138184
    8. 'faces' → logprob: -5.008910179138184
    9. 'walls' → logprob: -6.008910179138184
    10. 'dist' → logprob: -6.258910179138184

Token 1253: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.20148926973342896
    2. '_graph' → logprob: -1.7014892101287842
    3. ' graph' → logprob: -10.076489448547363
    4. '   ' → logprob: -10.826489448547363
    5. 'Graph' → logprob: -12.076489448547363
    6. '
' → logprob: -12.701489448547363
    7. '	graph' → logprob: -12.701489448547363
    8. '_edges' → logprob: -13.701489448547363
    9. '_faces' → logprob: -15.076489448547363
    10. '       ' → logprob: -15.576489448547363

Token 1254: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21728941798210144
    2. 'dual' → logprob: -1.7172894477844238
    3. '
' → logprob: -4.967289447784424
    4. ' dual' → logprob: -5.717289447784424
    5. 'graph' → logprob: -5.967289447784424
    6. 'du' → logprob: -6.217289447784424
    7. 'face' → logprob: -8.592288970947266
    8. '   ' → logprob: -8.842288970947266
    9. '#' → logprob: -8.842288970947266
    10. 'edges' → logprob: -9.092288970947266

Token 1255: ' the' (ID: 290)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.012083981186151505
    2. ' faces' → logprob: -4.762084007263184
    3. 'rooms' → logprob: -7.137084007263184
    4. '
' → logprob: -7.512084007263184
    5. 'adj' → logprob: -7.762084007263184
    6. 'face' → logprob: -7.762084007263184
    7. 'inside' → logprob: -7.887084007263184
    8. 'walls' → logprob: -8.887084007263184
    9. ' rooms' → logprob: -9.137084007263184
    10. '#' → logprob: -9.262084007263184

Token 1256: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.02326178550720215
    2. 'graph' → logprob: -3.898261785507202
    3. ' faces' → logprob: -6.898262023925781
    4. 'walls' → logprob: -7.398262023925781
    5. 'face' → logprob: -8.773262023925781
    6. ' graph' → logprob: -8.773262023925781
    7. 'polygon' → logprob: -8.773262023925781
    8. 'plan' → logprob: -8.898262023925781
    9. '#' → logprob: -9.148262023925781
    10. 'code' → logprob: -9.648262023925781

Token 1257: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1701459139585495
    2. 'dual' → logprob: -2.0451459884643555
    3. 'face' → logprob: -4.4201459884643555
    4. ' dual' → logprob: -4.7951459884643555
    5. '
' → logprob: -5.5451459884643555
    6. ',' → logprob: -6.6701459884643555
    7. ' face' → logprob: -8.295145988464355
    8. 'faces' → logprob: -8.420145988464355
    9. 'adj' → logprob: -8.420145988464355
    10. 'du' → logprob: -8.545145988464355

Token 1258: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08378244936466217
    2. 'face' → logprob: -2.958782434463501
    3. 'edges' → logprob: -4.33378267288208
    4. '
' → logprob: -4.95878267288208
    5. 'dual' → logprob: -6.08378267288208
    6. 'edge' → logprob: -6.33378267288208
    7. '#' → logprob: -6.45878267288208
    8. '   ' → logprob: -6.95878267288208
    9. 'faces' → logprob: -7.33378267288208
    10. 'adj' → logprob: -7.58378267288208

Token 1259: ' #' (ID: 1069)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.22710762917995453
    2. 'edge' → logprob: -2.602107524871826
    3. '       ' → logprob: -2.977107524871826
    4. 'dual' → logprob: -2.977107524871826
    5. 'adj' → logprob: -4.227107524871826
    6. 'edges' → logprob: -4.602107524871826
    7. '#' (adapté à ' #') → logprob: -6.852107524871826
    8. '   ' → logprob: -6.852107524871826
    9. 'from' → logprob: -8.852108001708984
    10. 'faces' → logprob: -9.352108001708984

Token 1260: ' Each' (ID: 11555)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.30809399485588074
    2. 'edge' → logprob: -2.308094024658203
    3. 'dual' → logprob: -2.308094024658203
    4. 'adj' → logprob: -2.933094024658203
    5. '   ' → logprob: -4.808094024658203
    6. 'edges' → logprob: -5.558094024658203
    7. '#' → logprob: -7.808094024658203
    8. '       ' → logprob: -8.558094024658203
    9. 'from' → logprob: -8.808094024658203
    10. 'du' → logprob: -9.058094024658203

Token 1261: ' wall' (ID: 9688)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.08318115770816803
    2. 'edge' → logprob: -2.708181142807007
    3. '#' → logprob: -4.458181381225586
    4. 'wall' → logprob: -8.083181381225586
    5. 'adj' → logprob: -8.208181381225586
    6. 'vertex' → logprob: -8.333181381225586
    7. 'edges' → logprob: -8.333181381225586
    8. '   ' → logprob: -8.583181381225586
    9. ' face' → logprob: -9.833181381225586
    10. '
' → logprob: -10.083181381225586

Token 1262: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.36827632784843445
    2. ' is' → logprob: -1.8682763576507568
    3. 's' → logprob: -3.618276357650757
    4. ' connects' → logprob: -3.993276357650757
    5. ')' → logprob: -4.118276119232178
    6. '#' → logprob: -4.243276119232178
    7. 'wall' → logprob: -4.618276119232178
    8. 'that' → logprob: -4.993276119232178
    9. 'connect' → logprob: -5.243276119232178
    10. '   ' → logprob: -5.493276119232178

Token 1263: ' shared' (ID: 9599)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.5143525004386902
    2. 'shared' → logprob: -1.639352560043335
    3. 'used' → logprob: -2.639352560043335
    4. 'adj' → logprob: -3.389352560043335
    5. 'connected' → logprob: -3.514352560043335
    6. 'represented' → logprob: -4.014352321624756
    7. ' shared' → logprob: -4.264352321624756
    8. 'associated' → logprob: -4.889352321624756
    9. ' an' → logprob: -5.139352321624756
    10. '   ' → logprob: -5.139352321624756

Token 1264: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.019446182996034622
    2. ' by' → logprob: -4.01944637298584
    3. 'between' → logprob: -7.14444637298584
    4. '_by' → logprob: -8.14444637298584
    5. '```' → logprob: -9.26944637298584
    6. ' between' → logprob: -10.51944637298584
    7. '   ' → logprob: -10.64444637298584
    8. 'among' → logprob: -11.26944637298584
    9. '#' → logprob: -11.76944637298584
    10. 'face' → logprob: -11.89444637298584

Token 1265: ' exactly' (ID: 9707)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.06359270960092545
    2. 'exact' → logprob: -2.8135926723480225
    3. 'at' → logprob: -7.063592910766602
    4. 'one' → logprob: -7.813592910766602
    5. '2' → logprob: -8.563592910766602
    6. 'either' → logprob: -9.688592910766602
    7. 'faces' → logprob: -9.938592910766602
    8. ' exactly' → logprob: -10.938592910766602
    9. '0' → logprob: -11.063592910766602
    10. '1' → logprob: -11.438592910766602

Token 1266: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.00544316228479147
    2. '2' → logprob: -5.505443096160889
    3. ' two' → logprob: -6.630443096160889
    4. 'exact' → logprob: -10.255443572998047
    5. '0' → logprob: -12.130443572998047
    6. 'Two' → logprob: -13.255443572998047
    7. '1' → logprob: -14.505443572998047
    8. '_two' → logprob: -14.630443572998047
    9. ' exactly' → logprob: -15.130443572998047
    10. '(two' → logprob: -15.505443572998047

Token 1267: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.0008787082624621689
    2. ' faces' → logprob: -7.125878810882568
    3. 'face' → logprob: -10.00087833404541
    4. '#' → logprob: -11.50087833404541
    5. 'adj' → logprob: -12.50087833404541
    6. 'def' → logprob: -12.50087833404541
    7. 'rooms' → logprob: -12.50087833404541
    8. '.faces' → logprob: -13.62587833404541
    9. '...' → logprob: -13.87587833404541
    10. 'import' → logprob: -14.12587833404541

Token 1268: ' (' (ID: 350)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.683192789554596
    2. '       ' → logprob: -1.3081927299499512
    3. '
' → logprob: -2.058192729949951
    4. 'dual' → logprob: -4.058192729949951
    5. 'edges' → logprob: -4.058192729949951
    6. '#' → logprob: -4.183192729949951
    7. ' face' → logprob: -4.308192729949951
    8. '   ' → logprob: -4.558192729949951
    9. 'edge' → logprob: -4.558192729949951
    10. 'faces' → logprob: -5.433192729949951

Token 1269: 'or' (ID: 267)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.9804668426513672
    2. '#' → logprob: -1.2304668426513672
    3. '       ' → logprob: -1.7304668426513672
    4. 'face' → logprob: -2.480466842651367
    5. ')' → logprob: -3.855466842651367
    6. '
' → logprob: -4.480466842651367
    7. 'edges' → logprob: -4.480466842651367
    8. ')
' → logprob: -4.980466842651367
    9. '   ' → logprob: -4.980466842651367
    10. ' faces' → logprob: -5.605466842651367

Token 1270: ' one' (ID: 1001)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.686317503452301
    2. ' possibly' → logprob: -2.5613174438476562
    3. 'possibly' → logprob: -2.6863174438476562
    4. ' is' → logprob: -3.1863174438476562
    5. 'maybe' → logprob: -3.1863174438476562
    6. 'one' → logprob: -3.3113174438476562
    7. ' maybe' → logprob: -3.3113174438476562
    8. ' one' → logprob: -3.5613174438476562
    9. '       ' → logprob: -3.6863174438476562
    10. 'is' → logprob: -3.9363174438476562

Token 1271: ' face' (ID: 4950)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2126108556985855
    2. ' if' → logprob: -2.462610960006714
    3. ' for' → logprob: -3.962610960006714
    4. ',' → logprob: -3.962610960006714
    5. 'if' → logprob: -4.087610721588135
    6. ' wall' → logprob: -4.712610721588135
    7. ' of' → logprob: -4.837610721588135
    8. 'for' → logprob: -4.837610721588135
    9. 'face' → logprob: -5.087610721588135
    10. ' in' → logprob: -5.587610721588135

Token 1272: ' and' (ID: 326)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9293146133422852
    2. ')' → logprob: -1.0543146133422852
    3. ',' → logprob: -2.429314613342285
    4. ' for' → logprob: -2.554314613342285
    5. '),' → logprob: -3.929314613342285
    6. 'for' → logprob: -3.929314613342285
    7. ' only' → logprob: -4.429314613342285
    8. 'if' → logprob: -4.554314613342285
    9. ')
' → logprob: -4.929314613342285
    10. ' in' → logprob: -5.179314613342285

Token 1273: ' outside' (ID: 7539)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outside' → logprob: -0.33141398429870605
    2. 'the' → logprob: -1.331413984298706
    3. '"' → logprob: -5.081414222717285
    4. 'one' → logprob: -5.706414222717285
    5. '#' → logprob: -5.956414222717285
    6. ' outside' → logprob: -6.331414222717285
    7. 'none' → logprob: -7.456414222717285
    8. 'an' → logprob: -7.581414222717285
    9. '...' → logprob: -7.581414222717285
    10. 'None' → logprob: -7.581414222717285

Token 1274: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7028462290763855
    2. '),' → logprob: -1.7028462886810303
    3. ')
' → logprob: -1.9528462886810303
    4. 'face' → logprob: -2.0778462886810303
    5. ' face' → logprob: -3.2028462886810303
    6. '#' → logprob: -5.327846050262451
    7. ').' → logprob: -5.952846050262451
    8. ' if' → logprob: -6.452846050262451
    9. '),
' → logprob: -6.702846050262451
    10. ',' → logprob: -6.827846050262451

Token 1275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1674327850341797
    2. '
' → logprob: -2.2924327850341797
    3. 'face' → logprob: -3.6674327850341797
    4. '#' → logprob: -4.66743278503418
    5. 'edges' → logprob: -4.91743278503418
    6. 'edge' → logprob: -5.54243278503418
    7. '   ' → logprob: -6.16743278503418
    8. '        
' → logprob: -6.66743278503418
    9. 'dual' → logprob: -6.79243278503418
    10. 'faces' → logprob: -7.66743278503418

Token 1276: ' #' (ID: 1069)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.052429091185331345
    2. '       ' → logprob: -3.92742919921875
    3. 'edge' → logprob: -4.30242919921875
    4. 'dual' → logprob: -5.17742919921875
    5. '   ' → logprob: -5.55242919921875
    6. '
' → logprob: -6.17742919921875
    7. '#' (adapté à ' #') → logprob: -6.17742919921875
    8. 'adj' → logprob: -6.55242919921875
    9. 'edges' → logprob: -6.67742919921875
    10. 'faces' → logprob: -7.42742919921875

Token 1277: ' Construct' (ID: 36230)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.04839953035116196
    2. 'edge' → logprob: -4.048399448394775
    3. 'dual' → logprob: -4.548399448394775
    4. 'adj' → logprob: -4.923399448394775
    5. '       ' → logprob: -5.048399448394775
    6. '   ' → logprob: -6.423399448394775
    7. '#' → logprob: -6.548399448394775
    8. 'edges' → logprob: -6.548399448394775
    9. 'faces' → logprob: -7.798399448394775
    10. 'wall' → logprob: -8.298399925231934

Token 1278: ' a' (ID: 261)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.011623484082520008
    2. 'dual' → logprob: -5.386623382568359
    3. 'edge' → logprob: -5.761623382568359
    4. 'adj' → logprob: -6.136623382568359
    5. '   ' → logprob: -7.261623382568359
    6. 'faces' → logprob: -7.636623382568359
    7. ' face' → logprob: -8.76162338256836
    8. '#' → logprob: -9.13662338256836
    9. 'edges' → logprob: -9.63662338256836
    10. '
' → logprob: -9.76162338256836

Token 1279: ' map' (ID: 4014)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.06137748062610626
    2. 'default' → logprob: -3.56137752532959
    3. 'dual' → logprob: -4.18637752532959
    4. 'adj' → logprob: -4.56137752532959
    5. 'graph' → logprob: -5.56137752532959
    6. 'faces' → logprob: -7.31137752532959
    7. 'edge' → logprob: -7.56137752532959
    8. '
' → logprob: -8.68637752532959
    9. '#' → logprob: -9.31137752532959
    10. '   ' → logprob: -10.43637752532959

Token 1280: ' from' (ID: 591)
  Prédit: 'wall'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wall' → logprob: -1.013609766960144
    2. ' wall' → logprob: -1.388609766960144
    3. 'from' → logprob: -1.763609766960144
    4. ' from' → logprob: -2.1386098861694336
    5. 'edge' → logprob: -2.7636098861694336
    6. ' edge' → logprob: -3.6386098861694336
    7. ':' → logprob: -6.263609886169434
    8. '   ' → logprob: -6.388609886169434
    9. ' of' → logprob: -7.013609886169434
    10. ' edges' → logprob: -7.138609886169434

Token 1281: ' edges' (ID: 22569)
  Prédit: 'wall'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wall' → logprob: -0.16299155354499817
    2. 'edge' → logprob: -2.037991523742676
    3. '(w' → logprob: -4.912991523742676
    4. 'fro' → logprob: -5.412991523742676
    5. 'face' → logprob: -5.787991523742676
    6. '(edge' → logprob: -6.287991523742676
    7. '(f' → logprob: -7.412991523742676
    8. 'w' → logprob: -7.412991523742676
    9. 'walls' → logprob: -7.662991523742676
    10. 'edges' → logprob: -7.912991523742676

Token 1282: ' (' (ID: 350)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.5948396921157837
    2. '_edge' → logprob: -1.5948396921157837
    3. ' =' → logprob: -1.7198396921157837
    4. '_edges' → logprob: -2.344839572906494
    5. 'from' → logprob: -2.594839572906494
    6. '_to' → logprob: -2.594839572906494
    7. 'to' → logprob: -2.969839572906494
    8. '=' → logprob: -3.094839572906494
    9. ' from' → logprob: -4.344839572906494
    10. 'edge' → logprob: -4.469839572906494

Token 1283: 'sm' (ID: 5635)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -1.4141911268234253
    2. '(f' → logprob: -1.5391911268234253
    3. 'fro' → logprob: -1.6641911268234253
    4. '(u' → logprob: -1.9141911268234253
    5. ')' → logprob: -3.039191246032715
    6. '(face' → logprob: -3.414191246032715
    7. 'edge' → logprob: -3.664191246032715
    8. '(edge' → logprob: -4.039191246032715
    9. '
' → logprob: -4.289191246032715
    10. '(s' → logprob: -4.539191246032715

Token 1284: 'aller' (ID: 11605)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.49075305461883545
    2. 'aller' → logprob: -1.9907530546188354
    3. '{' → logprob: -2.615753173828125
    4. 'alls' → logprob: -3.365753173828125
    5. '{}' → logprob: -3.615753173828125
    6. 'art' → logprob: -3.990753173828125
    7. 'ap' → logprob: -3.990753173828125
    8. 'al' → logprob: -4.115753173828125
    9. 'a' → logprob: -4.240753173828125
    10. '(' → logprob: -5.490753173828125

Token 1285: '_index' (ID: 7748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9515823721885681
    2. '(u' → logprob: -1.451582431793213
    3. 's' → logprob: -1.951582431793213
    4. 'u' → logprob: -2.076582431793213
    5. '(s' → logprob: -4.076582431793213
    6. '(
' → logprob: -4.326582431793213
    7. '=' → logprob: -4.326582431793213
    8. '(min' → logprob: -4.326582431793213
    9. '(' → logprob: -4.576582431793213
    10. 'min' → logprob: -4.826582431793213

Token 1286: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004614541772753
    2. 's' → logprob: -7.004614353179932
    3. '=' → logprob: -7.254614353179932
    4. ' ,' → logprob: -7.254614353179932
    5. ')' → logprob: -7.879614353179932
    6. ',s' → logprob: -8.25461483001709
    7. '_,' → logprob: -8.75461483001709
    8. '```' → logprob: -8.87961483001709
    9. ',u' → logprob: -8.87961483001709
    10. '(u' → logprob: -9.00461483001709

Token 1287: ' larger' (ID: 12384)
  Prédit: 'larg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'larg' → logprob: -0.2078578621149063
    2. ' larger' → logprob: -1.8328578472137451
    3. 'b' → logprob: -3.707857847213745
    4. 'greater' → logprob: -5.957858085632324
    5. ' bigger' → logprob: -7.957858085632324
    6. 'max' → logprob: -8.582858085632324
    7. ' greater' → logprob: -10.332858085632324
    8. ')' → logprob: -11.582858085632324
    9. '   ' → logprob: -11.957858085632324
    10. ' (' → logprob: -12.457858085632324

Token 1288: '_index' (ID: 7748)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1882034540176392
    2. '_vertex' → logprob: -1.5632034540176392
    3. '_edge' → logprob: -2.3132033348083496
    4. '_s' → logprob: -2.3132033348083496
    5. '_index' → logprob: -2.5632033348083496
    6. '(u' → logprob: -2.6882033348083496
    7. 'u' → logprob: -3.5632033348083496
    8. '_u' → logprob: -3.6882033348083496
    9. ',' → logprob: -4.18820333480835
    10. '   ' → logprob: -4.68820333480835

Token 1289: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04167049750685692
    2. ',' → logprob: -3.541670560836792
    3. '),' → logprob: -4.916670322418213
    4. '=' → logprob: -6.791670322418213
    5. '_to' → logprob: -7.041670322418213
    6. ')=' → logprob: -7.041670322418213
    7. 's' → logprob: -7.541670322418213
    8. '(s' → logprob: -8.791670799255371
    9. 'to' → logprob: -8.916670799255371
    10. ')
' → logprob: -9.041670799255371

Token 1290: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.1955031007528305
    2. '_to' → logprob: -2.445502996444702
    3. 'to' → logprob: -3.070502996444702
    4. ')' → logprob: -3.945502996444702
    5. ':' → logprob: -4.195503234863281
    6. ' =' → logprob: -5.320503234863281
    7. ',' → logprob: -6.195503234863281
    8. '_faces' → logprob: -7.195503234863281
    9. ' :' → logprob: -7.320503234863281
    10. '_edges' → logprob: -7.820503234863281

Token 1291: ' faces' (ID: 22060)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.19809521734714508
    2. 'faces' → logprob: -2.4480953216552734
    3. 'set' → logprob: -2.8230953216552734
    4. 'face' → logprob: -4.323095321655273
    5. '[' → logprob: -4.823095321655273
    6. 'list' → logprob: -5.198095321655273
    7. '[]
' → logprob: -5.823095321655273
    8. ' []' → logprob: -6.698095321655273
    9. 'default' → logprob: -6.948095321655273
    10. '[(' → logprob: -8.073095321655273

Token 1292: '
' (ID: 198)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.07858039438724518
    2. 'face' → logprob: -3.578580379486084
    3. 'edges' → logprob: -3.703580379486084
    4. '       ' → logprob: -5.203580379486084
    5. 'shared' → logprob: -5.328580379486084
    6. '
' → logprob: -6.203580379486084
    7. '(edge' → logprob: -6.328580379486084
    8. ' edge' → logprob: -6.453580379486084
    9. 'faces' → logprob: -6.703580379486084
    10. '_edge' → logprob: -6.953580379486084

Token 1293: '       ' (ID: 309)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.2667691111564636
    2. 'face' → logprob: -2.5167691707611084
    3. 'edges' → logprob: -2.6417691707611084
    4. '       ' → logprob: -3.1417691707611084
    5. '```' → logprob: -3.6417691707611084
    6. '   ' → logprob: -5.641768932342529
    7. 'faces' → logprob: -6.266768932342529
    8. '``' → logprob: -6.516768932342529
    9. ' edge' → logprob: -6.766768932342529
    10. '_edge' → logprob: -6.891768932342529

Token 1294: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' (adapté à ' edge') → logprob: -0.016629070043563843
    2. 'face' → logprob: -4.266629219055176
    3. '   ' → logprob: -6.516629219055176
    4. 'edges' → logprob: -7.766629219055176
    5. ' edge' → logprob: -8.266629219055176
    6. '       ' → logprob: -9.016629219055176
    7. 'dual' → logprob: -9.641629219055176
    8. 'shared' → logprob: -10.266629219055176
    9. 'adj' → logprob: -10.391629219055176
    10. 'faces' → logprob: -10.766629219055176

Token 1295: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.043919481337070465
    2. '_faces' → logprob: -3.543919563293457
    3. '_map' → logprob: -4.668919563293457
    4. '_face' → logprob: -5.543919563293457
    5. '2' → logprob: -7.293919563293457
    6. 'to' → logprob: -10.043919563293457
    7. 'face' → logprob: -10.668919563293457
    8. 'map' → logprob: -11.543919563293457
    9. 'faces' → logprob: -11.918919563293457
    10. '_f' → logprob: -12.418919563293457

Token 1296: '_faces' (ID: 158689)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.0015059324214234948
    2. 'face' → logprob: -6.5015058517456055
    3. '_faces' → logprob: -12.751505851745605
    4. 'fac' → logprob: -15.251505851745605
    5. ' faces' → logprob: -16.126506805419922
    6. 'edges' → logprob: -16.626506805419922
    7. '```' → logprob: -16.751506805419922
    8. 'edge' → logprob: -17.376506805419922
    9. '   ' → logprob: -17.626506805419922
    10. 'Faces' → logprob: -17.626506805419922

Token 1297: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889485359191895
    2. ' =' → logprob: -2.578894853591919
    3. '={}' → logprob: -12.95389461517334
    4. '.setdefault' → logprob: -14.07889461517334
    5. '={}
' → logprob: -14.45389461517334
    6. '{}' → logprob: -14.70389461517334
    7. '[(' → logprob: -16.078895568847656
    8. '={' → logprob: -16.203895568847656
    9. '={(' → logprob: -16.328895568847656
    10. ']' → logprob: -16.453895568847656

Token 1298: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.0003171121352352202
    2. '{}' → logprob: -8.375317573547363
    3. ' defaultdict' → logprob: -9.375317573547363
    4. '(default' → logprob: -14.250317573547363
    5. '   ' → logprob: -14.500317573547363
    6. '{' → logprob: -15.750317573547363
    7. '"default' → logprob: -16.250316619873047
    8. '.default' → logprob: -16.375316619873047
    9. '	default' → logprob: -17.375316619873047
    10. ''default' → logprob: -17.625316619873047

Token 1299: '(list' (ID: 13116)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.019776877015829086
    2. 'set' → logprob: -4.269776821136475
    3. '(list' → logprob: -5.269776821136475
    4. '(set' → logprob: -8.144777297973633
    5. 'lambda' → logprob: -8.894777297973633
    6. '(lambda' → logprob: -10.894777297973633
    7. ':list' → logprob: -12.894777297973633
    8. '[list' → logprob: -13.269777297973633
    9. '=list' → logprob: -13.769777297973633
    10. '<' → logprob: -13.894777297973633

Token 1300: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6008756160736084
    2. ')' → logprob: -1.7258756160736084
    3. '       ' → logprob: -2.1008756160736084
    4. '[(' → logprob: -2.6008756160736084
    5. '   ' → logprob: -3.3508756160736084
    6. '()
' → logprob: -4.1008758544921875
    7. '```' → logprob: -4.4758758544921875
    8. '((' → logprob: -5.2258758544921875
    9. '()' → logprob: -6.6008758544921875
    10. ',' → logprob: -6.7258758544921875

Token 1301: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011482668109238148
    2. '       ' → logprob: -4.5114827156066895
    3. ' for' → logprob: -8.136482238769531
    4. '```' → logprob: -8.886482238769531
    5. '   ' → logprob: -13.761482238769531
    6. 'def' → logprob: -14.386482238769531
    7. '``' → logprob: -14.511482238769531
    8. '	for' → logprob: -14.636482238769531
    9. 'For' → logprob: -15.386482238769531
    10. '
' → logprob: -15.511482238769531

Token 1302: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.7432603272027336e-06
    2. ' for' → logprob: -13.750001907348633
    3. '       ' → logprob: -14.750001907348633
    4. '   ' → logprob: -16.375001907348633
    5. '```' → logprob: -16.875001907348633
    6. 'def' → logprob: -17.000001907348633
    7. 'face' → logprob: -17.500001907348633
    8. '
' → logprob: -17.625001907348633
    9. '#' → logprob: -19.125001907348633
    10. 'faces' → logprob: -19.125001907348633

Token 1303: ' fi' (ID: 6134)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.0010437668533995748
    2. ' face' → logprob: -7.126043796539307
    3. 'f' → logprob: -8.626043319702148
    4. '   ' → logprob: -10.501043319702148
    5. 'i' → logprob: -11.376043319702148
    6. '(face' → logprob: -11.751043319702148
    7. 's' → logprob: -12.251043319702148
    8. 'idx' → logprob: -13.001043319702148
    9. 'u' → logprob: -13.251043319702148
    10. 'fi' → logprob: -14.251043319702148

Token 1304: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6712498068809509
    2. ',' → logprob: -1.4212498664855957
    3. ' in' → logprob: -1.5462498664855957
    4. 'face' → logprob: -3.9212498664855957
    5. 'ace' → logprob: -5.171249866485596
    6. 'f' → logprob: -5.421249866485596
    7. 'in' → logprob: -6.796249866485596
    8. 'e' → logprob: -7.046249866485596
    9. 'range' → logprob: -7.296249866485596
    10. 'dx' → logprob: -7.796249866485596

Token 1305: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -1.700132997939363e-05
    2. ' face' → logprob: -11.000017166137695
    3. 'f' → logprob: -15.375017166137695
    4. 'faces' → logprob: -17.375017166137695
    5. '(face' → logprob: -17.500017166137695
    6. '   ' → logprob: -19.000017166137695
    7. '.face' → logprob: -19.875017166137695
    8. 'Face' → logprob: -19.875017166137695
    9. 'fac' → logprob: -19.875017166137695
    10. '_face' → logprob: -20.000017166137695

Token 1306: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22543451189994812
    2. 'in' → logprob: -1.6004345417022705
    3. 'face' → logprob: -12.225434303283691
    4. ' ' → logprob: -12.475434303283691
    5. '```' → logprob: -12.725434303283691
    6. '   ' → logprob: -13.350434303283691
    7. '...' → logprob: -14.350434303283691
    8. 's' → logprob: -14.350434303283691
    9. 'n' → logprob: -14.475434303283691
    10. ',' → logprob: -14.600434303283691

Token 1307: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00011367550177965313
    2. ' enumerate' → logprob: -9.250113487243652
    3. 'faces' → logprob: -11.000113487243652
    4. 'range' → logprob: -14.625113487243652
    5. '   ' → logprob: -15.750113487243652
    6. ' ' → logprob: -15.750113487243652
    7. 'en' → logprob: -16.62511444091797
    8. 'enum' → logprob: -18.00011444091797
    9. '  ' → logprob: -18.00011444091797
    10. '```' → logprob: -18.37511444091797

Token 1308: '(f' (ID: 1526)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faces' → logprob: -2.816093228830141e-06
    2. ' faces' → logprob: -13.12500286102295
    3. '   ' → logprob: -15.37500286102295
    4. 'range' → logprob: -16.000001907348633
    5. '[' → logprob: -16.250001907348633
    6. 'enumer' → logprob: -16.375001907348633
    7. '.faces' → logprob: -16.750001907348633
    8. '[(' → logprob: -17.000001907348633
    9. '
' → logprob: -17.250001907348633
    10. 'face' → logprob: -18.250001907348633

Token 1309: 'aces' (ID: 3247)
  Prédit: 'aces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aces' → logprob: -0.16031593084335327
    2. 'faces' → logprob: -1.910315990447998
    3. 'ace' → logprob: -10.78531551361084
    4. '.faces' → logprob: -11.28531551361084
    5. 'ac' → logprob: -11.91031551361084
    6. 'f' → logprob: -11.91031551361084
    7. '[' → logprob: -11.91031551361084
    8. ' faces' → logprob: -12.53531551361084
    9. 'edges' → logprob: -12.66031551361084
    10. '_faces' → logprob: -12.78531551361084

Token 1310: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.028162570670247078
    2. '           ' → logprob: -4.403162479400635
    3. '   ' → logprob: -5.153162479400635
    4. '):' → logprob: -5.278162479400635
    5. '       ' → logprob: -5.403162479400635
    6. '):
' → logprob: -10.153162956237793
    7. ':' → logprob: -10.278162956237793
    8. ':
' → logprob: -11.028162956237793
    9. '[' → logprob: -11.153162956237793
    10. 'for' → logprob: -11.528162956237793

Token 1311: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5263479948043823
    2. '       ' → logprob: -1.5263479948043823
    3. '           ' → logprob: -1.6513479948043823
    4. ' for' → logprob: -9.526348114013672
    5. 'for' → logprob: -10.776348114013672
    6. '```' → logprob: -11.276348114013672
    7. ' ' → logprob: -12.151348114013672
    8. '   ' → logprob: -13.026348114013672
    9. '         ' → logprob: -13.401348114013672
    10. '               ' → logprob: -13.901348114013672

Token 1312: ' n' (ID: 297)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20835836231708527
    2. 'for' → logprob: -2.3333582878112793
    3. ' for' → logprob: -2.8333582878112793
    4. '   ' → logprob: -3.5833582878112793
    5. 'n' (adapté à ' n') → logprob: -5.958358287811279
    6. ' ' → logprob: -6.958358287811279
    7. ' n' → logprob: -8.083358764648438
    8. 'v' → logprob: -8.208358764648438
    9. 'length' → logprob: -9.458358764648438
    10. '```' → logprob: -9.708358764648438

Token 1313: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01115039736032486
    2. ' =' → logprob: -4.511150360107422
    3. 'for' → logprob: -10.011150360107422
    4. '=len' → logprob: -10.511150360107422
    5. '   ' → logprob: -10.886150360107422
    6. '```' → logprob: -12.511150360107422
    7. '=
' → logprob: -12.761150360107422
    8. '       ' → logprob: -14.011150360107422
    9. 'f' → logprob: -14.261150360107422
    10. '=f' → logprob: -14.636150360107422

Token 1314: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -5.676981345459353e-06
    2. ' len' → logprob: -12.250005722045898
    3. '(len' → logprob: -14.000005722045898
    4. '=len' → logprob: -18.2500057220459
    5. '[len' → logprob: -19.2500057220459
    6. '   ' → logprob: -19.2500057220459
    7. '```' → logprob: -19.3750057220459
    8. '	len' → logprob: -19.8750057220459
    9. '
' → logprob: -21.3750057220459
    10. '<len' → logprob: -21.3750057220459

Token 1315: '(face' (ID: 127535)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.018162699416279793
    2. '(face' → logprob: -4.018162727355957
    3. ' face' → logprob: -11.268162727355957
    4. 'faces' → logprob: -16.76816177368164
    5. '   ' → logprob: -18.89316177368164
    6. '_face' → logprob: -19.14316177368164
    7. '(' → logprob: -19.26816177368164
    8. '(
' → logprob: -20.39316177368164
    9. '.face' → logprob: -20.39316177368164
    10. '
' → logprob: -20.89316177368164

Token 1316: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6502596735954285
    2. ')
' → logprob: -0.9002596735954285
    3. '           ' → logprob: -2.9002597332000732
    4. '       ' → logprob: -4.400259494781494
    5. '):
' → logprob: -5.900259494781494
    6. '   ' → logprob: -7.025259494781494
    7. '```' → logprob: -8.650259971618652
    8. '-' → logprob: -9.025259971618652
    9. '               ' → logprob: -9.275259971618652
    10. ')-' → logprob: -9.525259971618652

Token 1317: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04252542182803154
    2. '   ' → logprob: -3.41752552986145
    3. '       ' → logprob: -5.792525291442871
    4. 'for' → logprob: -5.917525291442871
    5. ' for' → logprob: -6.042525291442871
    6. '```' → logprob: -7.792525291442871
    7. '               ' → logprob: -8.792525291442871
    8. ' ' → logprob: -9.917525291442871
    9. '	       ' → logprob: -9.917525291442871
    10. '	for' → logprob: -10.792525291442871

Token 1318: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11848868429660797
    2. 'for' (adapté à ' for') → logprob: -2.3684887886047363
    3. '   ' → logprob: -4.493488788604736
    4. ' for' → logprob: -4.993488788604736
    5. '       ' → logprob: -9.118488311767578
    6. ' ' → logprob: -10.868488311767578
    7. '```' → logprob: -11.118488311767578
    8. '	for' → logprob: -12.493488311767578
    9. '               ' → logprob: -13.368488311767578
    10. '	       ' → logprob: -13.743488311767578

Token 1319: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008652626536786556
    2. ' i' → logprob: -4.758652687072754
    3. '   ' → logprob: -11.258652687072754
    4. 'idx' → logprob: -11.508652687072754
    5. 'ei' → logprob: -12.508652687072754
    6. 'j' → logprob: -12.883652687072754
    7. '_i' → logprob: -13.133652687072754
    8. '(i' → logprob: -13.508652687072754
    9. '```' → logprob: -13.758652687072754
    10. '	i' → logprob: -14.133652687072754

Token 1320: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7217393517494202
    2. ' i' → logprob: -1.2217392921447754
    3. '(i' → logprob: -2.3467392921447754
    4. 'i' → logprob: -2.5967392921447754
    5. 'in' → logprob: -3.8467392921447754
    6. ' (' → logprob: -4.971739292144775
    7. ',' → logprob: -5.346739292144775
    8. ',i' → logprob: -5.471739292144775
    9. '(' → logprob: -5.846739292144775
    10. '=i' → logprob: -6.096739292144775

Token 1321: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002165299083571881
    2. ' range' → logprob: -8.500216484069824
    3. '(range' → logprob: -11.250216484069824
    4. '(' → logprob: -18.37521743774414
    5. '0' → logprob: -18.37521743774414
    6. '	range' → logprob: -18.75021743774414
    7. '   ' → logprob: -19.37521743774414
    8. 'n' → logprob: -19.87521743774414
    9. ' ' → logprob: -20.62521743774414
    10. '```' → logprob: -21.25021743774414

Token 1322: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00010819212911883369
    2. '(n' → logprob: -9.750107765197754
    3. ' n' → logprob: -10.000107765197754
    4. 'range' → logprob: -12.500107765197754
    5. '0' → logprob: -14.375107765197754
    6. '   ' → logprob: -16.25010871887207
    7. '
' → logprob: -16.87510871887207
    8. '```' → logprob: -17.50010871887207
    9. '(' → logprob: -18.00010871887207
    10. '	n' → logprob: -18.12510871887207

Token 1323: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02160712517797947
    2. '):' → logprob: -4.271606922149658
    3. '   ' → logprob: -6.021606922149658
    4. '           ' → logprob: -6.771606922149658
    5. '       ' → logprob: -7.271606922149658
    6. '+' → logprob: -7.396606922149658
    7. '():
' → logprob: -7.646606922149658
    8. '-' → logprob: -7.646606922149658
    9. ')' → logprob: -8.271607398986816
    10. '):
' → logprob: -8.271607398986816

Token 1324: '               ' (ID: 506)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.5571857690811157
    2. '               ' → logprob: -1.1821857690811157
    3. 'u' → logprob: -3.557185649871826
    4. ' s' → logprob: -3.682185649871826
    5. ' v' → logprob: -3.682185649871826
    6. ' j' → logprob: -3.807185649871826
    7. 'v' → logprob: -5.557185649871826
    8. '```' → logprob: -5.682185649871826
    9. ' f' → logprob: -5.807185649871826
    10. '   ' → logprob: -6.557185649871826

Token 1325: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.5369439721107483
    2. 'u' → logprob: -1.4119439125061035
    3. ' u' → logprob: -2.2869439125061035
    4. ' a' → logprob: -3.1619439125061035
    5. 'v' → logprob: -3.7869439125061035
    6. ' v' → logprob: -5.7869439125061035
    7. '                   ' → logprob: -7.1619439125061035
    8. 'f' → logprob: -8.161944389343262
    9. '   ' → logprob: -8.286944389343262
    10. '               ' → logprob: -8.911944389343262

Token 1326: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08170939236879349
    2. ' =' → logprob: -2.706709384918213
    3. ',' → logprob: -4.456709384918213
    4. 'a' → logprob: -11.081709861755371
    5. '=edge' → logprob: -11.081709861755371
    6. 'b' → logprob: -11.331709861755371
    7. '=a' → logprob: -11.956709861755371
    8. '=int' → logprob: -12.081709861755371
    9. ',b' → logprob: -12.081709861755371
    10. '0' → logprob: -12.081709861755371

Token 1327: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.018826935440301895
    2. 'min' → logprob: -4.268826961517334
    3. ' face' → logprob: -5.518826961517334
    4. ' min' → logprob: -7.518826961517334
    5. '(face' → logprob: -9.393826484680176
    6. '   ' → logprob: -11.768826484680176
    7. '(min' → logprob: -13.143826484680176
    8. 'fi' → logprob: -13.643826484680176
    9. '_face' → logprob: -13.768826484680176
    10. 'max' → logprob: -13.893826484680176

Token 1328: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.77627644513268e-06
    2. 'i' → logprob: -12.375008583068848
    3. '```' → logprob: -12.375008583068848
    4. '[
' → logprob: -16.500009536743164
    5. '[' → logprob: -16.875009536743164
    6. '``' → logprob: -17.000009536743164
    7. '[a' → logprob: -17.375009536743164
    8. '`' → logprob: -17.625009536743164
    9. '   ' → logprob: -17.625009536743164
    10. '(i' → logprob: -17.750009536743164

Token 1329: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.3137640655040741
    2. '],' → logprob: -1.6887640953063965
    3. ']' → logprob: -3.0637640953063965
    4. '               ' → logprob: -3.3137640953063965
    5. '           ' → logprob: -7.6887640953063965
    6. ']%' → logprob: -8.188763618469238
    7. '];' → logprob: -8.688763618469238
    8. '```' → logprob: -9.188763618469238
    9. '       ' → logprob: -9.688763618469238
    10. '],
' → logprob: -10.063763618469238

Token 1330: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05317101255059242
    2. 'a' → logprob: -3.553170919418335
    3. 't' → logprob: -5.303171157836914
    4. 'b' → logprob: -5.303171157836914
    5. '```' → logprob: -5.553171157836914
    6. 'next' → logprob: -5.928171157836914
    7. ' (' → logprob: -6.053171157836914
    8. '(a' → logprob: -6.428171157836914
    9. ' a' → logprob: -7.803171157836914
    10. '(next' → logprob: -7.928171157836914

Token 1331: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.01272448431700468
    2. '(a' → logprob: -5.38772439956665
    3. '               ' → logprob: -5.51272439956665
    4. '(b' → logprob: -5.76272439956665
    5. 'a' → logprob: -8.387724876403809
    6. ' b' → logprob: -8.762724876403809
    7. '((' → logprob: -9.137724876403809
    8. '           ' → logprob: -9.262724876403809
    9. ' (' → logprob: -9.262724876403809
    10. '   ' → logprob: -9.762724876403809

Token 1332: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2911342680454254
    2. '=' → logprob: -1.416134238243103
    3. '               ' → logprob: -5.416134357452393
    4. ',' → logprob: -5.666134357452393
    5. 'a' → logprob: -7.291134357452393
    6. '           ' → logprob: -8.416133880615234
    7. '```' → logprob: -9.041133880615234
    8. '=(' → logprob: -9.541133880615234
    9. '_next' → logprob: -9.541133880615234
    10. 'next' → logprob: -9.791133880615234

Token 1333: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.029754776507616043
    2. ' face' → logprob: -3.529754877090454
    3. '(face' → logprob: -12.529754638671875
    4. '   ' → logprob: -15.154754638671875
    5. 'faces' → logprob: -15.279754638671875
    6. '_face' → logprob: -16.779754638671875
    7. ' ' → logprob: -16.904754638671875
    8. '.face' → logprob: -18.279754638671875
    9. '```' → logprob: -18.779754638671875
    10. 'a' → logprob: -19.029754638671875

Token 1334: '[(' (ID: 20542)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3185592591762543
    2. '[(' → logprob: -1.6935592889785767
    3. '[i' → logprob: -2.568559169769287
    4. '((' → logprob: -5.443559169769287
    5. '```' → logprob: -5.818559169769287
    6. ' (' → logprob: -6.193559169769287
    7. 'i' → logprob: -7.068559169769287
    8. '[next' → logprob: -7.443559169769287
    9. '[
' → logprob: -8.068559646606445
    10. '(next' → logprob: -8.193559646606445

Token 1335: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10029304027557373
    2. '(i' → logprob: -2.3502931594848633
    3. '   ' → logprob: -10.350293159484863
    4. '{i' → logprob: -10.975293159484863
    5. '```' → logprob: -11.225293159484863
    6. ' (' → logprob: -11.350293159484863
    7. '           ' → logprob: -12.225293159484863
    8. '       ' → logprob: -13.350293159484863
    9. '_i' → logprob: -13.475293159484863
    10. ' i' → logprob: -13.850293159484863

Token 1336: '+' (ID: 10)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.37213000655174255
    2. '(i' → logprob: -1.247130036354065
    3. '+' → logprob: -4.497129917144775
    4. '{i' → logprob: -5.122129917144775
    5. '[i' → logprob: -5.622129917144775
    6. '+i' → logprob: -6.497129917144775
    7. '```' → logprob: -7.997129917144775
    8. '_i' → logprob: -8.622130393981934
    9. ' i' → logprob: -8.622130393981934
    10. '1' → logprob: -8.872130393981934

Token 1337: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017749972641468048
    2. '(i' → logprob: -4.267749786376953
    3. 'i' → logprob: -5.642749786376953
    4. '{i' → logprob: -11.267749786376953
    5. '```' → logprob: -11.892749786376953
    6. '(' → logprob: -12.017749786376953
    7. ' ' → logprob: -12.267749786376953
    8. '+' → logprob: -12.517749786376953
    9. ' (' → logprob: -13.892749786376953
    10. ' i' → logprob: -14.142749786376953

Token 1338: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05296649783849716
    2. ')%' → logprob: -3.052966594696045
    3. '%' → logprob: -6.427966594696045
    4. 'i' → logprob: -7.302966594696045
    5. ')i' → logprob: -7.302966594696045
    6. '%i' → logprob: -7.552966594696045
    7. ' %' → logprob: -8.177966117858887
    8. ']' → logprob: -8.302966117858887
    9. ')]' → logprob: -9.302966117858887
    10. '[i' → logprob: -9.302966117858887

Token 1339: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6972869038581848
    2. ' %' → logprob: -1.19728684425354
    3. '%i' → logprob: -2.57228684425354
    4. 'i' → logprob: -2.94728684425354
    5. ')' → logprob: -3.69728684425354
    6. ')%' → logprob: -4.322287082672119
    7. ']' → logprob: -4.322287082672119
    8. ']%' → logprob: -4.822287082672119
    9. '%n' → logprob: -5.572287082672119
    10. '```' → logprob: -6.197287082672119

Token 1340: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.718606891809031e-05
    2. ' n' → logprob: -9.625066757202148
    3. 'len' → logprob: -14.000066757202148
    4. 'face' → logprob: -16.12506675720215
    5. '```' → logprob: -17.12506675720215
    6. ')n' → logprob: -17.62506675720215
    7. '	n' → logprob: -18.00006675720215
    8. '(n' → logprob: -18.00006675720215
    9. '_n' → logprob: -18.75006675720215
    10. '``' → logprob: -18.87506675720215

Token 1341: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.4749685227870941
    2. ']' → logprob: -0.9749685525894165
    3. ')]' → logprob: -8.474968910217285
    4. '           ' → logprob: -8.724968910217285
    5. ']()
' → logprob: -9.474968910217285
    6. ']:
' → logprob: -9.599968910217285
    7. '];' → logprob: -9.849968910217285
    8. ']
' → logprob: -10.099968910217285
    9. ']

' → logprob: -10.099968910217285
    10. '       ' → logprob: -10.224968910217285

Token 1342: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001992490579141304
    2. '           ' → logprob: -10.000199317932129
    3. '   ' → logprob: -10.500199317932129
    4. 'edge' → logprob: -10.625199317932129
    5. 'token' → logprob: -10.875199317932129
    6. '                
' → logprob: -11.500199317932129
    7. '```' → logprob: -11.500199317932129
    8. 'a' → logprob: -11.750199317932129
    9. '       ' → logprob: -12.125199317932129
    10. '                   ' → logprob: -12.250199317932129

Token 1343: ' edge' (ID: 11165)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4348892867565155
    2. 'edge' (adapté à ' edge') → logprob: -1.434889316558838
    3. 'key' → logprob: -3.184889316558838
    4. ' edge' → logprob: -3.684889316558838
    5. 'e' → logprob: -3.809889316558838
    6. ' key' → logprob: -4.059889316558838
    7. 'if' → logprob: -6.434889316558838
    8. 'k' → logprob: -6.434889316558838
    9. '   ' → logprob: -6.434889316558838
    10. ' if' → logprob: -6.684889316558838

Token 1344: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0798524022102356
    2. '=' → logprob: -2.954852342605591
    3. '_key' → logprob: -4.07985258102417
    4. '   ' → logprob: -6.20485258102417
    5. '=edge' → logprob: -6.95485258102417
    6. '_pair' → logprob: -7.07985258102417
    7. '_edge' → logprob: -7.20485258102417
    8. '_tuple' → logprob: -7.57985258102417
    9. '=min' → logprob: -7.82985258102417
    10. 'a' → logprob: -7.95485258102417

Token 1345: ' (' (ID: 350)
  Prédit: '(tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tuple' → logprob: -0.34180375933647156
    2. '(min' → logprob: -1.591803789138794
    3. ' (' → logprob: -3.591803789138794
    4. '(' → logprob: -3.841803789138794
    5. 'tuple' → logprob: -3.841803789138794
    6. ' tuple' → logprob: -4.216803550720215
    7. '(a' → logprob: -7.341803550720215
    8. '(t' → logprob: -10.091803550720215
    9. '   ' → logprob: -10.716803550720215
    10. ' ' → logprob: -11.591803550720215

Token 1346: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0001126026691053994
    2. ' min' → logprob: -9.250112533569336
    3. '(min' → logprob: -11.500112533569336
    4. 'a' → logprob: -12.000112533569336
    5. '	min' → logprob: -15.625112533569336
    6. '   ' → logprob: -17.875112533569336
    7. ',min' → logprob: -18.625112533569336
    8. '[min' → logprob: -19.000112533569336
    9. '(a' → logprob: -20.000112533569336
    10. '.min' → logprob: -20.125112533569336

Token 1347: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.04858816787600517
    2. 'a' → logprob: -3.048588275909424
    3. ')a' → logprob: -15.048587799072266
    4. ' a' → logprob: -15.923587799072266
    5. '[a' → logprob: -16.423587799072266
    6. ',a' → logprob: -16.548587799072266
    7. '(
' → logprob: -17.673587799072266
    8. '(' → logprob: -17.673587799072266
    9. ')' → logprob: -17.798587799072266
    10. '	a' → logprob: -18.173587799072266

Token 1348: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3246101438999176
    2. ',b' → logprob: -1.3246101140975952
    3. 'a' → logprob: -5.574610233306885
    4. 'b' → logprob: -5.699610233306885
    5. ',a' → logprob: -5.699610233306885
    6. '(a' → logprob: -7.824610233306885
    7. '(b' → logprob: -7.949610233306885
    8. ' ,' → logprob: -11.199609756469727
    9. '),' → logprob: -11.574609756469727
    10. '               ' → logprob: -11.824609756469727

Token 1349: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015424276702105999
    2. ',b' → logprob: -4.3904242515563965
    3. ',a' → logprob: -6.3904242515563965
    4. '),' → logprob: -6.7654242515563965
    5. ' ,' → logprob: -10.140424728393555
    6. 'a' → logprob: -11.265424728393555
    7. '               ' → logprob: -12.015424728393555
    8. '),(' → logprob: -12.015424728393555
    9. ',),' → logprob: -12.515424728393555
    10. ',max' → logprob: -13.265424728393555

Token 1350: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0002613358374219388
    2. ' max' → logprob: -8.250261306762695
    3. '(max' → logprob: -18.875261306762695
    4. '	max' → logprob: -20.625261306762695
    5. '   ' → logprob: -21.000261306762695
    6. ' ' → logprob: -23.000261306762695
    7. '           ' → logprob: -24.000261306762695
    8. '  ' → logprob: -24.250261306762695
    9. '[max' → logprob: -24.375261306762695
    10. '_max' → logprob: -24.750261306762695

Token 1351: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.7120533811976202e-05
    2. 'a' → logprob: -11.000017166137695
    3. '(
' → logprob: -16.375017166137695
    4. '(' → logprob: -16.625017166137695
    5. '   ' → logprob: -17.000017166137695
    6. ' (' → logprob: -17.000017166137695
    7. '((' → logprob: -17.125017166137695
    8. ')' → logprob: -18.375017166137695
    9. '```' → logprob: -19.250017166137695
    10. ')a' → logprob: -20.125017166137695

Token 1352: ',b' (ID: 17568)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5761722922325134
    2. 'a' → logprob: -0.8261722922325134
    3. '(edge' → logprob: -9.951171875
    4. ' (' → logprob: -10.326171875
    5. '   ' → logprob: -10.451171875
    6. '(b' → logprob: -10.826171875
    7. 'b' → logprob: -10.951171875
    8. 'edge' → logprob: -10.951171875
    9. ' a' → logprob: -11.076171875
    10. ',' → logprob: -11.076171875

Token 1353: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005914454348385334
    2. ')
' → logprob: -5.505914688110352
    3. '))' → logprob: -6.505914688110352
    4. '),' → logprob: -8.880914688110352
    5. '               ' → logprob: -9.255914688110352
    6. ',' → logprob: -9.880914688110352
    7. '))
' → logprob: -10.630914688110352
    8. ')}' → logprob: -12.380914688110352
    9. ')`' → logprob: -12.380914688110352
    10. ')
' → logprob: -13.255914688110352

Token 1354: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018067917553707957
    2. '```' → logprob: -7.001806735992432
    3. 'edge' → logprob: -7.751806735992432
    4. '           ' → logprob: -8.00180721282959
    5. '                   ' → logprob: -10.25180721282959
    6. '=edge' → logprob: -10.87680721282959
    7. ')' → logprob: -11.00180721282959
    8. ' edge' → logprob: -11.25180721282959
    9. '       ' → logprob: -11.50180721282959
    10. '              ' → logprob: -11.62680721282959

Token 1355: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' (adapté à ' edge') → logprob: -0.03014245070517063
    2. '               ' → logprob: -3.5301425457000732
    3. ' edge' → logprob: -7.905142307281494
    4. '           ' → logprob: -11.780142784118652
    5. '   ' → logprob: -12.030142784118652
    6. '                   ' → logprob: -13.030142784118652
    7. '       ' → logprob: -13.155142784118652
    8. '```' → logprob: -13.280142784118652
    9. '(edge' → logprob: -14.155142784118652
    10. '                
' → logprob: -14.780142784118652

Token 1356: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.00037132782745175064
    2. '```' → logprob: -8.750370979309082
    3. '[' → logprob: -9.250370979309082
    4. '_tokens' → logprob: -9.750370979309082
    5. ')_' → logprob: -11.375370979309082
    6. '_faces' → logprob: -11.750370979309082
    7. '=edge' → logprob: -11.875370979309082
    8. ')' → logprob: -12.125370979309082
    9. '[token' → logprob: -12.250370979309082
    10. '   ' → logprob: -12.625370979309082

Token 1357: '_faces' (ID: 158689)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.028336746618151665
    2. '_faces' → logprob: -3.778336763381958
    3. '[' → logprob: -6.528336524963379
    4. 'edges' → logprob: -6.903336524963379
    5. '(edge' → logprob: -7.028336524963379
    6. 'faces' → logprob: -7.153336524963379
    7. '_edges' → logprob: -7.903336524963379
    8. ' edge' → logprob: -8.778336524963379
    9. 'face' → logprob: -8.778336524963379
    10. 'Faces' → logprob: -8.778336524963379

Token 1358: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005804349202662706
    2. 'edge' → logprob: -8.000580787658691
    3. '(edge' → logprob: -9.000580787658691
    4. '=edge' → logprob: -9.625580787658691
    5. '[(' → logprob: -9.875580787658691
    6. '```' → logprob: -13.000580787658691
    7. '
' → logprob: -15.250580787658691
    8. '[
' → logprob: -15.500580787658691
    9. '[array' → logprob: -15.625580787658691
    10. '   ' → logprob: -15.750580787658691

Token 1359: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.0017281336477026343
    2. '(edge' → logprob: -6.376728057861328
    3. ' edge' → logprob: -10.626728057861328
    4. '=edge' → logprob: -14.126728057861328
    5. '(' → logprob: -14.626728057861328
    6. '[' → logprob: -15.126728057861328
    7. '   ' → logprob: -16.751728057861328
    8. '
' → logprob: -17.376728057861328
    9. ' (' → logprob: -17.626728057861328
    10. '((' → logprob: -17.876728057861328

Token 1360: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.4087885916233063
    2. '.append' → logprob: -1.5337885618209839
    3. '[' → logprob: -2.2837886810302734
    4. ').' → logprob: -4.033788681030273
    5. 'append' → logprob: -9.408788681030273
    6. '.' → logprob: -9.783788681030273
    7. '.app' → logprob: -10.533788681030273
    8. '           ' → logprob: -11.783788681030273
    9. ' .' → logprob: -11.783788681030273
    10. '.fi' → logprob: -11.783788681030273

Token 1361: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -7.3458322731312364e-06
    2. '.append' → logprob: -12.000007629394531
    3. ' append' → logprob: -13.750007629394531
    4. '_append' → logprob: -16.50000762939453
    5. 'appen' → logprob: -17.00000762939453
    6. 'app' → logprob: -17.37500762939453
    7. 'Append' → logprob: -18.62500762939453
    8. '	append' → logprob: -18.87500762939453
    9. 'add' → logprob: -20.12500762939453
    10. 'ap' → logprob: -20.75000762939453

Token 1362: '(fi' (ID: 180137)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.10020763427019119
    2. '(fi' → logprob: -2.350207567214966
    3. ' fi' → logprob: -14.100207328796387
    4. '(' → logprob: -15.350207328796387
    5. '	fi' → logprob: -16.475208282470703
    6. 'Fi' → logprob: -19.100208282470703
    7. '-fi' → logprob: -19.975208282470703
    8. 'FI' → logprob: -20.600208282470703
    9. '((' → logprob: -21.350208282470703
    10. '   ' → logprob: -21.475208282470703

Token 1363: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.0590548703912646e-05
    2. '           ' → logprob: -10.625030517578125
    3. ')
' → logprob: -12.625030517578125
    4. '               ' → logprob: -13.625030517578125
    5. '       ' → logprob: -15.000030517578125
    6. '[' → logprob: -15.000030517578125
    7. '])' → logprob: -15.000030517578125
    8. ']' → logprob: -15.750030517578125
    9. ' )' → logprob: -15.750030517578125
    10. '   ' → logprob: -15.875030517578125

Token 1364: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23683319985866547
    2. '
' → logprob: -2.111833095550537
    3. '        
' → logprob: -2.861833095550537
    4. '<|end|>' → logprob: -3.486833095550537
    5. '```' → logprob: -7.361833095550537
    6. '    
' → logprob: -7.611833095550537
    7. '  
' → logprob: -8.611833572387695
    8. 'for' → logprob: -8.736833572387695
    9. '<|end|>' → logprob: -9.236833572387695
    10. ')' → logprob: -9.486833572387695

Token 1365: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.31191685795783997
    2. '       ' → logprob: -1.9369168281555176
    3. 'for' → logprob: -3.3119168281555176
    4. 'dual' → logprob: -3.4369168281555176
    5. 'dist' → logprob: -3.9369168281555176
    6. '
' → logprob: -5.436916828155518
    7. 'distance' → logprob: -5.436916828155518
    8. '   ' → logprob: -5.436916828155518
    9. '        
' → logprob: -5.561916828155518
    10. 'from' → logprob: -5.686916828155518

Token 1366: ' Step' (ID: 22291)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8846727013587952
    2. 'face' → logprob: -2.0096726417541504
    3. '       ' → logprob: -2.2596726417541504
    4. 'dual' → logprob: -2.2596726417541504
    5. 'graph' → logprob: -2.6346726417541504
    6. 'adj' → logprob: -2.7596726417541504
    7. 'dist' → logprob: -2.7596726417541504
    8. 'room' → logprob: -4.38467264175415
    9. 'neighbors' → logprob: -5.38467264175415
    10. 'inside' → logprob: -5.50967264175415

Token 1367: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15774913132190704
    2. '   ' → logprob: -2.5327491760253906
    3. '#' → logprob: -3.4077491760253906
    4. 'Step' → logprob: -4.532749176025391
    5. '2' → logprob: -5.032749176025391
    6. 'step' → logprob: -5.532749176025391
    7. '1' → logprob: -6.032749176025391
    8. 'def' → logprob: -6.407749176025391
    9. '_step' → logprob: -7.032749176025391
    10. ' step' → logprob: -7.157749176025391

Token 1368: '4' (ID: 19)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.5679026246070862
    2. '3' → logprob: -1.0679025650024414
    3. 'for' → logprob: -2.5679025650024414
    4. '#' → logprob: -4.692902565002441
    5. '2' → logprob: -6.567902565002441
    6. 'Step' → logprob: -7.317902565002441
    7. ' step' → logprob: -7.817902565002441
    8. '       ' → logprob: -8.317902565002441
    9. '```' → logprob: -8.567902565002441
    10. '_step' → logprob: -8.817902565002441

Token 1369: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025030920282006264
    2. ':' → logprob: -3.7750308513641357
    3. '#' → logprob: -7.025031089782715
    4. '   ' → logprob: -8.025031089782715
    5. '
' → logprob: -8.650031089782715
    6. '=' → logprob: -9.275031089782715
    7. ' =' → logprob: -9.525031089782715
    8. 'import' → logprob: -9.525031089782715
    9. ',' → logprob: -10.150031089782715
    10. '        
' → logprob: -10.775031089782715

Token 1370: ' Build' (ID: 10885)
  Prédit: 'dual'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dual' → logprob: -0.6476924419403076
    2. 'face' → logprob: -1.3976924419403076
    3. '#' → logprob: -2.5226924419403076
    4. 'graph' → logprob: -2.7726924419403076
    5. 'adj' → logprob: -2.7726924419403076
    6. 'dist' → logprob: -4.397692680358887
    7. '       ' → logprob: -5.897692680358887
    8. '   ' → logprob: -5.897692680358887
    9. 'from' → logprob: -6.522692680358887
    10. 'visited' → logprob: -7.522692680358887

Token 1371: ' adjacency' (ID: 177015)
  Prédit: 'dual'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dual' → logprob: -0.6819508075714111
    2. 'graph' → logprob: -1.4319508075714111
    3. 'face' → logprob: -1.6819508075714111
    4. 'adj' → logprob: -2.681950807571411
    5. 'g' → logprob: -8.181950569152832
    6. ' dual' → logprob: -8.306950569152832
    7. '   ' → logprob: -9.056950569152832
    8. 'G' → logprob: -9.181950569152832
    9. '```' → logprob: -9.306950569152832
    10. 'neighbors' → logprob: -9.806950569152832

Token 1372: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.16195593774318695
    2. '_list' → logprob: -2.1619558334350586
    3. ' =' → logprob: -4.536955833435059
    4. 'graph' → logprob: -4.661955833435059
    5. 'faces' → logprob: -5.286955833435059
    6. '   ' → logprob: -5.286955833435059
    7. '_faces' → logprob: -6.036955833435059
    8. ' list' → logprob: -7.411955833435059
    9. '
' → logprob: -7.786955833435059
    10. 'dual' → logprob: -8.661955833435059

Token 1373: ' of' (ID: 328)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.6812421679496765
    2. 'dual' → logprob: -0.8062421679496765
    3. 'adj' → logprob: -3.6812422275543213
    4. '   ' → logprob: -4.681241989135742
    5. ' dual' → logprob: -5.681241989135742
    6. '       ' → logprob: -5.806241989135742
    7. 'graph' → logprob: -6.056241989135742
    8. 'faces' → logprob: -6.306241989135742
    9. 'for' → logprob: -6.931241989135742
    10. ' face' → logprob: -7.681241989135742

Token 1374: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.0017812105361372232
    2. ' faces' → logprob: -7.001780986785889
    3. 'len' → logprob: -7.251780986785889
    4. 'face' → logprob: -8.876781463623047
    5. ' len' → logprob: -12.001781463623047
    6. '```' → logprob: -12.751781463623047
    7. 'neighbors' → logprob: -13.001781463623047
    8. 'fac' → logprob: -13.126781463623047
    9. 'edges' → logprob: -13.251781463623047
    10. '
' → logprob: -14.001781463623047

Token 1375: '
' (ID: 198)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.06041063740849495
    2. 'adj' → logprob: -3.435410737991333
    3. 'dual' → logprob: -4.185410499572754
    4. 'faces' → logprob: -4.810410499572754
    5. '   ' → logprob: -5.935410499572754
    6. 'f' → logprob: -9.185410499572754
    7. 'du' → logprob: -9.560410499572754
    8. '       ' → logprob: -9.810410499572754
    9. 'graph' → logprob: -9.935410499572754
    10. ' face' → logprob: -10.310410499572754

Token 1376: '       ' (ID: 309)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.012506004422903061
    2. '       ' → logprob: -5.137506008148193
    3. 'faces' → logprob: -5.762506008148193
    4. '   ' → logprob: -6.262506008148193
    5. 'dual' → logprob: -6.887506008148193
    6. 'adj' → logprob: -8.512505531311035
    7. '```' → logprob: -9.012505531311035
    8. ' face' → logprob: -9.387505531311035
    9. 'fac' → logprob: -10.262505531311035
    10. 'f' → logprob: -11.512505531311035

Token 1377: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' (adapté à ' face') → logprob: -0.01375723909586668
    2. 'adj' → logprob: -5.263757228851318
    3. '   ' → logprob: -5.388757228851318
    4. 'faces' → logprob: -5.763757228851318
    5. 'dual' → logprob: -7.263757228851318
    6. '       ' → logprob: -10.263757705688477
    7. 'graph' → logprob: -10.888757705688477
    8. 'fac' → logprob: -11.638757705688477
    9. ' face' → logprob: -11.763757705688477
    10. 'f' → logprob: -13.013757705688477

Token 1378: '_graph' (ID: 33441)
  Prédit: '_adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.04412275552749634
    2. '_ad' → logprob: -3.2941226959228516
    3. 'adj' → logprob: -6.169122695922852
    4. ' =' → logprob: -6.169122695922852
    5. 's' → logprob: -7.169122695922852
    6. '_faces' → logprob: -7.419122695922852
    7. '=' → logprob: -9.044122695922852
    8. '_list' → logprob: -9.419122695922852
    9. '_edges' → logprob: -9.544122695922852
    10. '_neighbors' → logprob: -9.669122695922852

Token 1379: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03812388703227043
    2. '=' → logprob: -3.288123846054077
    3. '=[' → logprob: -10.038124084472656
    4. '[' → logprob: -10.663124084472656
    5. '=[]' → logprob: -12.038124084472656
    6. ' =[' → logprob: -12.038124084472656
    7. 's' → logprob: -14.038124084472656
    8. '   ' → logprob: -14.788124084472656
    9. '=[]
' → logprob: -15.038124084472656
    10. '=[
' → logprob: -15.163124084472656

Token 1380: ' [[]' (ID: 182908)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.38822928071022034
    2. '[' → logprob: -1.138229250907898
    3. ' [[]' → logprob: -6.6382293701171875
    4. '   ' → logprob: -10.513229370117188
    5. ' defaultdict' → logprob: -10.888229370117188
    6. '(default' → logprob: -14.513229370117188
    7. '[[' → logprob: -14.513229370117188
    8. '{' → logprob: -15.013229370117188
    9. ' [' → logprob: -15.388229370117188
    10. '"default' → logprob: -15.763229370117188

Token 1381: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25319385528564453
    2. '(len' → logprob: -2.5031938552856445
    3. '(C' → logprob: -2.6281938552856445
    4. ' for' → logprob: -2.7531938552856445
    5. ']' → logprob: -6.7531938552856445
    6. '[len' → logprob: -6.7531938552856445
    7. '(fi' → logprob: -7.1281938552856445
    8. '[C' → logprob: -7.7531938552856445
    9. '(W' → logprob: -7.8781938552856445
    10. 'len' → logprob: -8.378193855285645

Token 1382: ' _' (ID: 1175)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5358834266662598
    2. '_' → logprob: -1.1608834266662598
    3. ' in' → logprob: -2.4108834266662598
    4. 'range' → logprob: -4.53588342666626
    5. ' range' → logprob: -7.91088342666626
    6. '_faces' → logprob: -7.91088342666626
    7. '_range' → logprob: -8.160882949829102
    8. '_f' → logprob: -10.035882949829102
    9. ' _' → logprob: -10.285882949829102
    10. '_in' → logprob: -10.410882949829102

Token 1383: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.28759822249412537
    2. ' in' → logprob: -1.5375982522964478
    3. 'range' → logprob: -3.412598133087158
    4. ' range' → logprob: -6.662598133087158
    5. '_' → logprob: -7.662598133087158
    6. 'i' → logprob: -8.537598609924316
    7. 'len' → logprob: -9.787598609924316
    8. ' _' → logprob: -10.287598609924316
    9. 'size' → logprob: -10.412598609924316
    10. 'length' → logprob: -12.662598609924316

Token 1384: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1540336012840271
    2. 'len' → logprob: -2.154033660888672
    3. ' range' → logprob: -3.654033660888672
    4. '(len' → logprob: -7.779033660888672
    5. ' len' → logprob: -8.154033660888672
    6. 'faces' → logprob: -9.279033660888672
    7. '(range' → logprob: -10.154033660888672
    8. '_' → logprob: -12.904033660888672
    9. '_faces' → logprob: -12.904033660888672
    10. 'in' → logprob: -13.154033660888672

Token 1385: '(len' (ID: 14990)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0010124455438926816
    2. '(len' → logprob: -7.001012325286865
    3. ' len' → logprob: -9.376012802124023
    4. '   ' → logprob: -12.376012802124023
    5. 'range' → logprob: -12.626012802124023
    6. 'faces' → logprob: -12.751012802124023
    7. '
' → logprob: -13.751012802124023
    8. '           ' → logprob: -14.001012802124023
    9. '```' → logprob: -14.001012802124023
    10. '(' → logprob: -14.376012802124023

Token 1386: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.005239683669060469
    2. 'faces' → logprob: -5.255239486694336
    3. 'f' → logprob: -13.380239486694336
    4. '(' → logprob: -13.505239486694336
    5. '(face' → logprob: -13.505239486694336
    6. ' faces' → logprob: -15.005239486694336
    7. 'Faces' → logprob: -15.130239486694336
    8. '_faces' → logprob: -15.130239486694336
    9. '.faces' → logprob: -15.630239486694336
    10. '	f' → logprob: -16.255239486694336

Token 1387: 'aces' (ID: 3247)
  Prédit: 'aces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aces' → logprob: -0.10032226145267487
    2. 'faces' → logprob: -2.3503222465515137
    3. 'ac' → logprob: -10.100322723388672
    4. 'f' → logprob: -11.100322723388672
    5. '.faces' → logprob: -11.100322723388672
    6. '_faces' → logprob: -11.600322723388672
    7. ')' → logprob: -12.350322723388672
    8. 'ace' → logprob: -12.725322723388672
    9. '(f' → logprob: -12.850322723388672
    10. 's' → logprob: -12.850322723388672

Token 1388: '))]
' (ID: 53695)
  Prédit: ')]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]
' → logprob: -0.06223733723163605
    2. ')]' → logprob: -2.81223726272583
    3. ')]
' → logprob: -8.312237739562988
    4. ')]

' → logprob: -10.812237739562988
    5. '       ' → logprob: -13.437237739562988
    6. ' )' → logprob: -13.687237739562988
    7. ')' → logprob: -14.562237739562988
    8. '   ' → logprob: -15.187237739562988
    9. '))]
' → logprob: -15.437237739562988
    10. ')])
' → logprob: -16.562236785888672

Token 1389: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07264164090156555
    2. 'for' → logprob: -2.697641611099243
    3. ' for' → logprob: -5.947641849517822
    4. '   ' → logprob: -9.572641372680664
    5. '           ' → logprob: -12.072641372680664
    6. '```' → logprob: -12.197641372680664
    7. '<|end|>' → logprob: -12.572641372680664
    8. '	for' → logprob: -12.697641372680664
    9. '
' → logprob: -13.947641372680664
    10. ' ' → logprob: -14.822641372680664

Token 1390: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00022046364028938115
    2. '       ' → logprob: -8.50022029876709
    3. ' for' → logprob: -11.00022029876709
    4. '   ' → logprob: -15.62522029876709
    5. '	for' → logprob: -16.500221252441406
    6. '
' → logprob: -17.500221252441406
    7. '           ' → logprob: -18.750221252441406
    8. '```' → logprob: -19.250221252441406
    9. '        
' → logprob: -20.750221252441406
    10. '     ' → logprob: -21.375221252441406

Token 1391: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.023043040186166763
    2. 'fi' → logprob: -4.273043155670166
    3. 'face' → logprob: -5.898043155670166
    4. 'faces' → logprob: -6.273043155670166
    5. 'edges' → logprob: -6.273043155670166
    6. '(edge' → logprob: -6.898043155670166
    7. ' edge' → logprob: -7.148043155670166
    8. 'e' → logprob: -8.398042678833008
    9. '   ' → logprob: -9.523042678833008
    10. 'a' → logprob: -10.523042678833008

Token 1392: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7887669801712036
    2. ' in' → logprob: -1.0387669801712036
    3. ',' → logprob: -1.6637669801712036
    4. 's' → logprob: -6.538766860961914
    5. 'edge' → logprob: -8.288766860961914
    6. '(edge' → logprob: -9.163766860961914
    7. ' ,' → logprob: -9.663766860961914
    8. 'e' → logprob: -9.913766860961914
    9. ',in' → logprob: -10.163766860961914
    10. ',e' → logprob: -10.163766860961914

Token 1393: ' f' (ID: 285)
  Prédit: 'fs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.4106588661670685
    2. 'fl' → logprob: -2.160658836364746
    3. 'face' → logprob: -2.410658836364746
    4. 'faces' → logprob: -2.535658836364746
    5. 'f' → logprob: -3.285658836364746
    6. 'adj' → logprob: -4.285658836364746
    7. 'ffs' → logprob: -7.785658836364746
    8. 'lst' → logprob: -8.035658836364746
    9. 'fac' → logprob: -9.285658836364746
    10. 'afs' → logprob: -9.285658836364746

Token 1394: '_list' (ID: 4162)
  Prédit: 'aces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aces' → logprob: -0.030937964096665382
    2. 's' → logprob: -3.530937910079956
    3. 'faces' → logprob: -7.405938148498535
    4. 'fs' → logprob: -9.030938148498535
    5. 'in' → logprob: -9.405938148498535
    6. 'ces' → logprob: -9.530938148498535
    7. 'ace' → logprob: -9.530938148498535
    8. 'cs' → logprob: -9.905938148498535
    9. 'ac' → logprob: -10.655938148498535
    10. 'for' → logprob: -10.905938148498535

Token 1395: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25202423334121704
    2. 'in' → logprob: -1.5020241737365723
    3. '	in' → logprob: -10.75202465057373
    4. 's' → logprob: -10.87702465057373
    5. ',' → logprob: -11.25202465057373
    6. '```' → logprob: -11.87702465057373
    7. '<|end|>' → logprob: -12.25202465057373
    8. 'In' → logprob: -12.37702465057373
    9. 'if' → logprob: -12.50202465057373
    10. '_in' → logprob: -13.12702465057373

Token 1396: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.06798860430717468
    2. 'face' → logprob: -3.817988634109497
    3. '[(' → logprob: -3.942988634109497
    4. 'f' → logprob: -4.317988395690918
    5. '(edge' → logprob: -5.317988395690918
    6. 'enumer' → logprob: -5.817988395690918
    7. '((' → logprob: -7.317988395690918
    8. 'edges' → logprob: -7.692988395690918
    9. '[' → logprob: -7.692988395690918
    10. ' edge' → logprob: -7.817988395690918

Token 1397: '_to' (ID: 5089)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1603100299835205
    2. ' in' → logprob: -1.9103100299835205
    3. ',' → logprob: -10.660309791564941
    4. '   ' → logprob: -11.035309791564941
    5. 's' → logprob: -11.660309791564941
    6. 'if' → logprob: -11.785309791564941
    7. '_in' → logprob: -12.035309791564941
    8. '	in' → logprob: -12.035309791564941
    9. '```' → logprob: -12.285309791564941
    10. ' ' → logprob: -12.785309791564941

Token 1398: '_faces' (ID: 158689)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.007343826815485954
    2. 'f' → logprob: -5.632343769073486
    3. 'for' → logprob: -7.007343769073486
    4. '_faces' → logprob: -7.257343769073486
    5. 'list' → logprob: -7.382343769073486
    6. 'face' → logprob: -7.382343769073486
    7. 'edge' → logprob: -8.382344245910645
    8. 'range' → logprob: -8.632344245910645
    9. 'edges' → logprob: -9.007344245910645
    10. 'lists' → logprob: -9.257344245910645

Token 1399: '.items' (ID: 19607)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.49246931076049805
    2. ' in' → logprob: -0.992469310760498
    3. ':
' → logprob: -4.742469310760498
    4. ',' → logprob: -5.492469310760498
    5. ':' → logprob: -6.242469310760498
    6. '   ' → logprob: -6.492469310760498
    7. 'if' → logprob: -6.742469310760498
    8. ' if' → logprob: -8.242469787597656
    9. '):
' → logprob: -8.867469787597656
    10. '       ' → logprob: -9.617469787597656

Token 1400: '():
' (ID: 8595)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4322148263454437
    2. ':
' → logprob: -1.4322148561477661
    3. '   ' → logprob: -4.057214736938477
    4. ',' → logprob: -4.057214736938477
    5. '<|end|>' → logprob: -4.057214736938477
    6. ' in' → logprob: -4.182214736938477
    7. '       ' → logprob: -5.057214736938477
    8. '<|end|>' → logprob: -5.182214736938477
    9. ' if' → logprob: -5.557214736938477
    10. '):
' → logprob: -5.682214736938477

Token 1401: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10839790105819702
    2. '       ' → logprob: -2.358397960662842
    3. '           ' → logprob: -5.608397960662842
    4. ' if' → logprob: -5.983397960662842
    5. 'if' → logprob: -6.483397960662842
    6. '```' → logprob: -8.483397483825684
    7. ' ' → logprob: -8.608397483825684
    8. '	if' → logprob: -10.858397483825684
    9. '   ' → logprob: -12.108397483825684
    10. ',' → logprob: -12.108397483825684

Token 1402: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12946532666683197
    2. '           ' → logprob: -2.379465341567993
    3. ' if' → logprob: -3.629465341567993
    4. '   ' → logprob: -6.629465103149414
    5. 'for' → logprob: -7.129465103149414
    6. '```' → logprob: -9.754465103149414
    7. '       ' → logprob: -10.129465103149414
    8. '	if' → logprob: -10.379465103149414
    9. ' for' → logprob: -10.879465103149414
    10. '               ' → logprob: -11.254465103149414

Token 1403: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0024762547109276056
    2. ' len' → logprob: -6.002476215362549
    3. '   ' → logprob: -14.502476692199707
    4. '(len' → logprob: -16.12747573852539
    5. '	len' → logprob: -17.87747573852539
    6. '           ' → logprob: -19.25247573852539
    7. '[len' → logprob: -19.37747573852539
    8. 'length' → logprob: -19.75247573852539
    9. '=len' → logprob: -19.87747573852539
    10. ' ' → logprob: -20.25247573852539

Token 1404: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -7.941850526549388e-06
    2. 'f' → logprob: -11.750007629394531
    3. '[f' → logprob: -18.62500762939453
    4. '(' → logprob: -20.25000762939453
    5. '	f' → logprob: -20.50000762939453
    6. '=f' → logprob: -20.87500762939453
    7. '<f' → logprob: -20.87500762939453
    8. '```' → logprob: -20.87500762939453
    9. '==' → logprob: -21.62500762939453
    10. '(
' → logprob: -21.62500762939453

Token 1405: '_list' (ID: 4162)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.15554215013980865
    2. '(f' → logprob: -2.5305421352386475
    3. '[f' → logprob: -2.7805421352386475
    4. '[' → logprob: -6.280542373657227
    5. '>' → logprob: -9.030542373657227
    6. '==' → logprob: -9.155542373657227
    7. ' f' → logprob: -9.280542373657227
    8. ')' → logprob: -9.405542373657227
    9. '=' → logprob: -10.030542373657227
    10. '1' → logprob: -10.030542373657227

Token 1406: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05827297270298004
    2. ' ==' → logprob: -3.0582730770111084
    3. ')' → logprob: -4.933272838592529
    4. '>' → logprob: -6.183272838592529
    5. ')==' → logprob: -8.308273315429688
    6. '[' → logprob: -9.808273315429688
    7. '===' → logprob: -11.308273315429688
    8. ' >' → logprob: -11.308273315429688
    9. '>=' → logprob: -11.433273315429688
    10. '=' → logprob: -11.558273315429688

Token 1407: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08033446222543716
    2. ' ==' → logprob: -2.580334424972534
    3. '<' → logprob: -6.955334663391113
    4. '>' → logprob: -8.580334663391113
    5. '[' → logprob: -8.705334663391113
    6. '!=' → logprob: -10.455334663391113
    7. '```' → logprob: -10.580334663391113
    8. '===' → logprob: -10.955334663391113
    9. ' <' → logprob: -11.205334663391113
    10. '=' → logprob: -11.455334663391113

Token 1408: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.204720582696609e-05
    2. ' ' → logprob: -9.875052452087402
    3. '   ' → logprob: -14.750052452087402
    4. '```' → logprob: -16.875051498413086
    5. '۲' → logprob: -17.000051498413086
    6. '[' → logprob: -17.625051498413086
    7. '1' → logprob: -18.250051498413086
    8. '(' → logprob: -18.687551498413086
    9. '２' → logprob: -18.875051498413086
    10. '  ' → logprob: -19.000051498413086

Token 1409: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.875001907348633
    4. '[' → logprob: -18.125001907348633
    5. '```' → logprob: -18.125001907348633
    6. '=' → logprob: -19.000001907348633
    7. '1' → logprob: -19.000001907348633
    8. '==' → logprob: -19.500001907348633
    9. '(' → logprob: -19.625001907348633
    10. '۲' → logprob: -19.812501907348633

Token 1410: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03126047924160957
    2. ':' → logprob: -3.5312604904174805
    3. ' and' → logprob: -6.9062604904174805
    4. '               ' → logprob: -9.03126049041748
    5. '           ' → logprob: -9.15626049041748
    6. '):
' → logprob: -9.15626049041748
    7. ',' → logprob: -9.65626049041748
    8. '[' → logprob: -10.03126049041748
    9. 'and' → logprob: -11.28126049041748
    10. '```' → logprob: -11.28126049041748

Token 1411: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004245972086209804
    2. ',' → logprob: -8.5004243850708
    3. ':
' → logprob: -9.2504243850708
    4. '   ' → logprob: -10.3754243850708
    5. '           ' → logprob: -10.6254243850708
    6. '```' → logprob: -10.6254243850708
    7. ':' → logprob: -11.7504243850708
    8. ' face' → logprob: -12.2504243850708
    9. '	           ' → logprob: -12.6254243850708
    10. '
' → logprob: -12.7504243850708

Token 1412: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.2098226398229599
    2. ' f' → logprob: -1.709822654724121
    3. '   ' → logprob: -5.834822654724121
    4. 'face' → logprob: -6.334822654724121
    5. ' face' → logprob: -6.709822654724121
    6. '           ' → logprob: -6.834822654724121
    7. 'a' → logprob: -6.959822654724121
    8. '               ' → logprob: -8.834822654724121
    9. 'u' → logprob: -8.959822654724121
    10. ' a' → logprob: -9.834822654724121

Token 1413: '1' (ID: 16)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.19764335453510284
    2. 'f' → logprob: -2.697643280029297
    3. '_graph' → logprob: -3.197643280029297
    4. 'face' → logprob: -3.447643280029297
    5. '[' → logprob: -4.072643280029297
    6. '1' → logprob: -5.322643280029297
    7. '_face' → logprob: -5.572643280029297
    8. '0' → logprob: -5.697643280029297
    9. '=' → logprob: -5.822643280029297
    10. ' =' → logprob: -6.072643280029297

Token 1414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009950157254934311
    2. ',f' → logprob: -4.634950160980225
    3. ' ,' → logprob: -9.759949684143066
    4. '=f' → logprob: -10.134949684143066
    5. ' =' → logprob: -10.634949684143066
    6. '=' → logprob: -10.634949684143066
    7. '1' → logprob: -10.759949684143066
    8. '0' → logprob: -12.009949684143066
    9. ' f' → logprob: -12.259949684143066
    10. 'f' → logprob: -12.509949684143066

Token 1415: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -5.836499985889532e-05
    2. ' f' → logprob: -9.7500581741333
    3. '   ' → logprob: -18.375059127807617
    4. '```' → logprob: -21.500059127807617
    5. '           ' → logprob: -21.875059127807617
    6. '    ' → logprob: -22.125059127807617
    7. '	f' → logprob: -22.375059127807617
    8. '                   ' → logprob: -22.500059127807617
    9. '               ' → logprob: -22.500059127807617
    10. '       ' → logprob: -22.875059127807617

Token 1416: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010236925445497036
    2. '1' → logprob: -5.135236740112305
    3. '2' → logprob: -5.760236740112305
    4. 'f' → logprob: -7.010236740112305
    5. ',' → logprob: -9.135236740112305
    6. '=' → logprob: -10.385236740112305
    7. '[' → logprob: -10.760236740112305
    8. ' ' → logprob: -11.885236740112305
    9. ' f' → logprob: -11.885236740112305
    10. '   ' → logprob: -12.010236740112305

Token 1417: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006802525836974382
    2. ' =' → logprob: -5.006802558898926
    3. '=f' → logprob: -9.381802558898926
    4. '=
' → logprob: -13.881802558898926
    5. ')' → logprob: -14.506802558898926
    6. 'f' → logprob: -15.381802558898926
    7. ' f' → logprob: -15.381802558898926
    8. '<|end|>' → logprob: -15.506802558898926
    9. '=line' → logprob: -15.756802558898926
    10. ',' → logprob: -16.13180160522461

Token 1418: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0019312551012262702
    2. ' f' → logprob: -6.251931190490723
    3. '   ' → logprob: -13.376931190490723
    4. '           ' → logprob: -15.001931190490723
    5. '(f' → logprob: -15.626931190490723
    6. '[f' → logprob: -15.751931190490723
    7. '               ' → logprob: -16.12693214416504
    8. '0' → logprob: -16.62693214416504
    9. '                   ' → logprob: -17.12693214416504
    10. '    ' → logprob: -17.50193214416504

Token 1419: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.033804409205913544
    2. 'f' → logprob: -3.408804416656494
    3. 'list' → logprob: -9.408803939819336
    4. ' f' → logprob: -10.033803939819336
    5. 'l' → logprob: -11.033803939819336
    6. 'List' → logprob: -11.658803939819336
    7. '1' → logprob: -12.408803939819336
    8. '(f' → logprob: -14.158803939819336
    9. '[f' → logprob: -14.283803939819336
    10. 's' → logprob: -14.533803939819336

Token 1420: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44577541947364807
    2. '=' → logprob: -1.3207753896713257
    3. '[' → logprob: -2.8207755088806152
    4. '               ' → logprob: -4.445775508880615
    5. ',' → logprob: -4.820775508880615
    6. '0' → logprob: -5.195775508880615
    7. '<|end|>' → logprob: -6.570775508880615
    8. '                   ' → logprob: -6.820775508880615
    9. '1' → logprob: -7.445775508880615
    10. '           ' → logprob: -7.695775508880615

Token 1421: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.864272967912257e-05
    2. ' face' → logprob: -10.000088691711426
    3. ',' → logprob: -11.250088691711426
    4. '<|end|>' → logprob: -12.000088691711426
    5. '	           ' → logprob: -12.375088691711426
    6. '		       ' → logprob: -12.625088691711426
    7. '                   ' → logprob: -12.750088691711426
    8. '       ' → logprob: -12.750088691711426
    9. '           ' → logprob: -13.250088691711426
    10. '[' → logprob: -13.625088691711426

Token 1422: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' (adapté à ' face') → logprob: -0.06670129299163818
    2. '               ' → logprob: -3.3167014122009277
    3. ' face' → logprob: -3.5667014122009277
    4. '                   ' → logprob: -13.06670093536377
    5. '   ' → logprob: -14.19170093536377
    6. '```' → logprob: -14.44170093536377
    7. '(face' → logprob: -15.56670093536377
    8. '       ' → logprob: -15.69170093536377
    9. '``' → logprob: -15.94170093536377
    10. '           ' → logprob: -16.191701889038086

Token 1423: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.00038479414070025086
    2. '1' → logprob: -8.000384330749512
    3. 'Graph' → logprob: -10.750384330749512
    4. 'graph' → logprob: -11.000384330749512
    5. '_GRAPH' → logprob: -12.625384330749512
    6. '```' → logprob: -13.375384330749512
    7. '   ' → logprob: -13.750384330749512
    8. '_' → logprob: -13.875384330749512
    9. '[' → logprob: -14.000384330749512
    10. 'for' → logprob: -14.125384330749512

Token 1424: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -4.36574100604048e-06
    2. 'f' → logprob: -12.375004768371582
    3. '[' → logprob: -16.500003814697266
    4. '
' → logprob: -17.000003814697266
    5. '   ' → logprob: -17.875003814697266
    6. '(f' → logprob: -18.500003814697266
    7. ' f' → logprob: -18.875003814697266
    8. '=f' → logprob: -19.375003814697266
    9. '	f' → logprob: -19.375003814697266
    10. '```' → logprob: -19.875003814697266

Token 1425: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.125000953674316
    3. '```' → logprob: -16.25
    4. 'irst' → logprob: -17.9375
    5. '2' → logprob: -18.0625
    6. 's' → logprob: -18.0625
    7. '3' → logprob: -18.25
    8. 'a' → logprob: -18.25
    9. ' ' → logprob: -18.3125
    10. 'loor' → logprob: -18.8125

Token 1426: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.6554682850837708
    2. '].' → logprob: -0.7804682850837708
    3. '.' → logprob: -3.905468225479126
    4. ').' → logprob: -6.155468463897705
    5. '.app' → logprob: -8.905467987060547
    6. ' .' → logprob: -9.030467987060547
    7. '>.' → logprob: -10.280467987060547
    8. 'append' → logprob: -11.655467987060547
    9. ' ].' → logprob: -11.655467987060547
    10. '```' → logprob: -12.155467987060547

Token 1427: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. 'app' → logprob: -15.75
    3. ' append' → logprob: -15.75
    4. '.append' → logprob: -17.25
    5. 'appen' → logprob: -18.375
    6. '_append' → logprob: -21.25
    7. '	append' → logprob: -21.375
    8. 'Append' → logprob: -21.375
    9. 'add' → logprob: -22.25
    10. '```' → logprob: -23.125

Token 1428: '(f' (ID: 1526)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00012487331696320325
    2. '(f' → logprob: -9.00012493133545
    3. ' f' → logprob: -13.50012493133545
    4. '(' → logprob: -17.000123977661133
    5. '	f' → logprob: -18.625123977661133
    6. '(
' → logprob: -18.625123977661133
    7. '   ' → logprob: -19.125123977661133
    8. '
' → logprob: -21.500123977661133
    9. '_f' → logprob: -22.500123977661133
    10. '```' → logprob: -22.625123977661133

Token 1429: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011782010551542044
    2. 'f' → logprob: -6.75117826461792
    3. '_' → logprob: -12.126177787780762
    4. ' f' → logprob: -13.626177787780762
    5. '_f' → logprob: -14.251177787780762
    6. '₂' → logprob: -15.001177787780762
    7. '(f' → logprob: -15.501177787780762
    8. ''f' → logprob: -16.126178741455078
    9. '
' → logprob: -17.126178741455078
    10. ' ' → logprob: -17.376178741455078

Token 1430: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3135503828525543
    2. ')' → logprob: -1.313550353050232
    3. '               ' → logprob: -8.188549995422363
    4. ')
' → logprob: -11.938549995422363
    5. '       ' → logprob: -13.563549995422363
    6. '           ' → logprob: -13.688549995422363
    7. '),' → logprob: -14.813549995422363
    8. ' )
' → logprob: -15.563549995422363
    9. ')

' → logprob: -15.688549995422363
    10. ')#' → logprob: -15.688549995422363

Token 1431: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.3425219549390022e-05
    2. '```' → logprob: -11.87501335144043
    3. '       ' → logprob: -12.87501335144043
    4. '<|end|>' → logprob: -13.87501335144043
    5. 'face' → logprob: -14.00001335144043
    6. '           ' → logprob: -14.12501335144043
    7. ' face' → logprob: -15.00001335144043
    8. '   ' → logprob: -15.25001335144043
    9. '                   ' → logprob: -15.37501335144043
    10. ',' → logprob: -16.12501335144043

Token 1432: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' (adapté à ' face') → logprob: -0.0011728443205356598
    2. '               ' → logprob: -7.00117301940918
    3. ' face' → logprob: -8.25117301940918
    4. '       ' → logprob: -15.75117301940918
    5. '           ' → logprob: -15.75117301940918
    6. 'f' → logprob: -17.25117301940918
    7. '(face' → logprob: -17.87617301940918
    8. '                   ' → logprob: -18.00117301940918
    9. '   ' → logprob: -18.00117301940918
    10. '              ' → logprob: -18.87617301940918

Token 1433: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -1.981667537620524e-06
    2. 'Graph' → logprob: -13.750001907348633
    3. '_GRAPH' → logprob: -14.375001907348633
    4. 'graph' → logprob: -16.375001907348633
    5. '1' → logprob: -16.500001907348633
    6. '
' → logprob: -17.625001907348633
    7. '.Graph' → logprob: -17.875001907348633
    8. '[' → logprob: -18.125001907348633
    9. 's' → logprob: -18.125001907348633
    10. '_' → logprob: -18.125001907348633

Token 1434: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.000111768240458332
    2. '[' → logprob: -9.37511157989502
    3. 'f' → logprob: -11.25011157989502
    4. '[
' → logprob: -12.25011157989502
    5. '(f' → logprob: -13.37511157989502
    6. 'face' → logprob: -13.50011157989502
    7. '.append' → logprob: -13.75011157989502
    8. '
' → logprob: -13.75011157989502
    9. ' f' → logprob: -14.50011157989502
    10. '_face' → logprob: -14.50011157989502

Token 1435: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006357124075293541
    2. '_graph' → logprob: -7.375635623931885
    3. '[' → logprob: -13.250636100769043
    4. '2' → logprob: -13.250636100769043
    5. 'Graph' → logprob: -13.250636100769043
    6. 'graph' → logprob: -13.375636100769043
    7. '_' → logprob: -14.625636100769043
    8. '
' → logprob: -14.875636100769043
    9. '0' → logprob: -15.250636100769043
    10. 's' → logprob: -15.625636100769043

Token 1436: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.03860893100500107
    2. '.append' → logprob: -3.413609027862549
    3. ').' → logprob: -5.913609027862549
    4. '.' → logprob: -6.163609027862549
    5. ' .' → logprob: -9.03860855102539
    6. '>.' → logprob: -11.78860855102539
    7. '.app' → logprob: -12.16360855102539
    8. '}.' → logprob: -12.53860855102539
    9. ' ].' → logprob: -12.91360855102539
    10. ''].' → logprob: -13.03860855102539

Token 1437: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.512236498361744e-07
    2. ' append' → logprob: -15.000000953674316
    3. '.append' → logprob: -16.25
    4. 'appen' → logprob: -17.5
    5. '	append' → logprob: -18.75
    6. 'app' → logprob: -20.375
    7. '_append' → logprob: -21.0
    8. 'add' → logprob: -21.75
    9. '```' → logprob: -21.875
    10. 'Append' → logprob: -22.25

Token 1438: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -4.320199877838604e-07
    2. 'f' → logprob: -14.75
    3. '(' → logprob: -18.75
    4. '(
' → logprob: -19.0
    5. '	f' → logprob: -19.875
    6. '   ' → logprob: -21.5
    7. '(face' → logprob: -21.75
    8. '```' → logprob: -22.125
    9. '
' → logprob: -22.25
    10. '(fi' → logprob: -22.75

Token 1439: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009851943701505661
    2. 'f' → logprob: -4.634851932525635
    3. ' f' → logprob: -10.509852409362793
    4. '(f' → logprob: -10.634852409362793
    5. ')' → logprob: -11.134852409362793
    6. 's' → logprob: -11.384852409362793
    7. '(' → logprob: -12.634852409362793
    8. '```' → logprob: -12.759852409362793
    9. '2' → logprob: -13.009852409362793
    10. '[' → logprob: -13.134852409362793

Token 1440: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009495720732957125
    2. '<|end|>' → logprob: -7.000949382781982
    3. '           ' → logprob: -10.50094985961914
    4. ')
' → logprob: -13.12594985961914
    5. ']' → logprob: -13.25094985961914
    6. '<|end|>' → logprob: -13.37594985961914
    7. '       ' → logprob: -13.50094985961914
    8. '```' → logprob: -14.12594985961914
    9. ')}' → logprob: -14.37594985961914
    10. ')#' → logprob: -14.87594985961914

Token 1441: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25112205743789673
    2. '<|end|>' → logprob: -1.876121997833252
    3. '       ' → logprob: -2.876121997833252
    4. '        
' → logprob: -4.501121997833252
    5. '<|end|>' → logprob: -7.876121997833252
    6. '    
' → logprob: -7.876121997833252
    7. '```' → logprob: -8.62612247467041
    8. '   ' → logprob: -9.00112247467041
    9. '

' → logprob: -9.00112247467041
    10. '            
' → logprob: -10.37612247467041

Token 1442: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1443: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4684203267097473
    2. '#' → logprob: -1.7184202671051025
    3. '```' → logprob: -1.8434202671051025
    4. '        
' → logprob: -3.9684202671051025
    5. '
' → logprob: -4.593420505523682
    6. 'else' → logprob: -6.343420505523682
    7. '           ' → logprob: -6.468420505523682
    8. '            
' → logprob: -7.218420505523682
    9. '<|end|>' → logprob: -7.343420505523682
    10. 'return' → logprob: -7.718420505523682

Token 1444: ' touching' (ID: 52058)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4936380088329315
    2. '           ' → logprob: -1.368638038635254
    3. ' continue' → logprob: -2.493638038635254
    4. ':
' → logprob: -3.243638038635254
    5. '               ' → logprob: -5.243638038635254
    6. 'continue' → logprob: -5.618638038635254
    7. '#' → logprob: -6.743638038635254
    8. ' pass' → logprob: -6.743638038635254
    9. '       ' → logprob: -7.368638038635254
    10. ' :' → logprob: -8.243638038635254

Token 1445: ' outside' (ID: 7539)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.3036969006061554
    2. 'continue' → logprob: -2.053696870803833
    3. ' pass' → logprob: -3.053696870803833
    4. '```' → logprob: -3.553696870803833
    5. ' continue' → logprob: -4.303697109222412
    6. '...' → logprob: -4.553697109222412
    7. ':' → logprob: -4.678697109222412
    8. '#' → logprob: -4.803697109222412
    9. ' continues' → logprob: -5.053697109222412
    10. '.' → logprob: -6.053697109222412

Token 1446: ' only' (ID: 1606)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1447: ' on' (ID: 402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1448: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -1.0762147903442383
    2. 'face' → logprob: -1.0762147903442383
    3. 'e' → logprob: -1.5762147903442383
    4. 'edge' → logprob: -2.5762147903442383
    5. ' one' → logprob: -3.7012147903442383
    6. ' face' → logprob: -5.201214790344238
    7. '#' → logprob: -6.451214790344238
    8. 'side' → logprob: -7.201214790344238
    9. 'wall' → logprob: -7.201214790344238
    10. 'a' → logprob: -8.201214790344238

Token 1449: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.39159250259399414
    2. ' face' → logprob: -1.2665925025939941
    3. ' side' → logprob: -4.016592502593994
    4. 'f' → logprob: -4.141592502593994
    5. ')' → logprob: -5.766592502593994
    6. 'side' → logprob: -6.141592502593994
    7. '#' → logprob: -6.641592502593994
    8. '(face' → logprob: -7.891592502593994
    9. ' f' → logprob: -8.641592025756836
    10. '_face' → logprob: -8.766592025756836

Token 1450: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1005150079727173
    2. '       ' → logprob: -1.2255150079727173
    3. '<|end|>' → logprob: -1.8505150079727173
    4. '
' → logprob: -2.1005148887634277
    5. '        
' → logprob: -2.4755148887634277
    6. '<|end|>' → logprob: -5.475514888763428
    7. 'import' → logprob: -6.475514888763428
    8. '```' → logprob: -6.600514888763428
    9. '#' → logprob: -7.350514888763428
    10. '            
' → logprob: -7.600514888763428

Token 1451: 'outside' (ID: 141623)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.45223522186279297
    2. ' continue' → logprob: -2.077235221862793
    3. 'pass' → logprob: -2.452235221862793
    4. '#' → logprob: -2.702235221862793
    5. '               ' → logprob: -3.077235221862793
    6. '           ' → logprob: -3.952235221862793
    7. '```' → logprob: -4.327235221862793
    8. ' pass' → logprob: -5.702235221862793
    9. '       ' → logprob: -6.327235221862793
    10. ')' → logprob: -7.077235221862793

Token 1452: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026766068767756224
    2. '),' → logprob: -6.627676486968994
    3. ')
' → logprob: -7.127676486968994
    4. ' continues' → logprob: -9.502676963806152
    5. '#' → logprob: -9.752676963806152
    6. '):
' → logprob: -10.002676963806152
    7. ',' → logprob: -10.127676963806152
    8. ' )' → logprob: -10.127676963806152
    9. 'face' → logprob: -10.252676963806152
    10. '           ' → logprob: -10.627676963806152

Token 1453: ' handled' (ID: 29594)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7200718522071838
    2. ' continue' → logprob: -1.845071792602539
    3. '#' → logprob: -2.095071792602539
    4. 'pass' → logprob: -2.095071792602539
    5. ' pass' → logprob: -3.095071792602539
    6. '       ' → logprob: -3.720071792602539
    7. '           ' → logprob: -3.970071792602539
    8. '```' → logprob: -4.095071792602539
    9. '...' → logprob: -6.220071792602539
    10. '<|end|>' → logprob: -6.845071792602539

Token 1454: ' below' (ID: 4895)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.507060170173645
    2. '
' → logprob: -1.632060170173645
    3. '<|end|>' → logprob: -2.0070600509643555
    4. '        
' → logprob: -2.8820600509643555
    5. '<|end|>' → logprob: -5.0070600509643555
    6. '    
' → logprob: -6.7570600509643555
    7. '   ' → logprob: -7.3820600509643555
    8. 'import' → logprob: -7.3820600509643555
    9. 'def' → logprob: -7.5070600509643555
    10. '#' → logprob: -7.7570600509643555

Token 1455: '

' (ID: 279)
  Prédit: '        
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        
' → logprob: -0.8219887018203735
    2. '
' → logprob: -0.9469887018203735
    3. '       ' → logprob: -1.9469887018203735
    4. '<|end|>' → logprob: -3.946988582611084
    5. '    
' → logprob: -5.321988582611084
    6. '            
' → logprob: -6.196988582611084
    7. '```' → logprob: -7.446988582611084
    8. '<|end|>' → logprob: -7.446988582611084
    9. '

' → logprob: -7.821988582611084
    10. '
        
' → logprob: -7.821988582611084

Token 1456: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6569392085075378
    2. '       ' → logprob: -0.9069392085075378
    3. '```' → logprob: -2.9069392681121826
    4. '        
' → logprob: -4.6569390296936035
    5. '<|end|>' → logprob: -4.6569390296936035
    6. 'for' → logprob: -6.0319390296936035
    7. ' for' → logprob: -7.7819390296936035
    8. '   ' → logprob: -8.281939506530762
    9. '#' → logprob: -8.656939506530762
    10. '    
' → logprob: -8.906939506530762

Token 1457: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2412017583847046
    2. '#' (adapté à ' #') → logprob: -1.8662017583847046
    3. 'dist' → logprob: -3.491201877593994
    4. 'visited' → logprob: -4.491201877593994
    5. 'from' → logprob: -4.866201877593994
    6. 'distance' → logprob: -4.866201877593994
    7. '
' → logprob: -6.991201877593994
    8. '        
' → logprob: -7.991201877593994
    9. '```' → logprob: -8.241201400756836
    10. '   ' → logprob: -8.241201400756836

Token 1458: ' Step' (ID: 22291)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8832700848579407
    2. '       ' → logprob: -1.133270025253296
    3. 'dist' → logprob: -1.758270025253296
    4. 'distance' → logprob: -3.758270025253296
    5. 'visited' → logprob: -3.758270025253296
    6. 'from' → logprob: -4.758270263671875
    7. 'depth' → logprob: -5.258270263671875
    8. 'query' → logprob: -5.508270263671875
    9. 'q' → logprob: -5.508270263671875
    10. 'import' → logprob: -6.008270263671875

Token 1459: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.815105140209198
    2. '       ' → logprob: -1.5651051998138428
    3. ' ' → logprob: -1.9401051998138428
    4. '   ' → logprob: -2.0651051998138428
    5. '6' → logprob: -2.9401051998138428
    6. '4' → logprob: -5.065104961395264
    7. '#' → logprob: -5.940104961395264
    8. '3' → logprob: -6.065104961395264
    9. '7' → logprob: -6.190104961395264
    10. ' =' → logprob: -6.565104961395264

Token 1460: '5' (ID: 20)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.544324278831482
    2. '4' → logprob: -1.544324278831482
    3. '       ' → logprob: -1.544324278831482
    4. '2' → logprob: -2.0443243980407715
    5. '   ' → logprob: -2.2943243980407715
    6. '#' → logprob: -2.6693243980407715
    7. '1' → logprob: -3.7943243980407715
    8. '5' → logprob: -4.5443243980407715
    9. 'tep' → logprob: -5.5443243980407715
    10. 'step' → logprob: -5.6693243980407715

Token 1461: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006084630265831947
    2. ':' → logprob: -5.256084442138672
    3. '   ' → logprob: -8.131084442138672
    4. '#' → logprob: -8.131084442138672
    5. '
' → logprob: -8.631084442138672
    6. '        
' → logprob: -11.506084442138672
    7. '```' → logprob: -11.631084442138672
    8. '      ' → logprob: -11.756084442138672
    9. ':
' → logprob: -11.756084442138672
    10. 'import' → logprob: -12.131084442138672

Token 1462: ' From' (ID: 7217)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7357888221740723
    2. 'dist' → logprob: -1.1107888221740723
    3. 'distance' → logprob: -2.8607888221740723
    4. '       ' → logprob: -2.9857888221740723
    5. 'visited' → logprob: -3.2357888221740723
    6. 'from' → logprob: -3.8607888221740723
    7. 'color' → logprob: -4.985788822174072
    8. 'queue' → logprob: -5.485788822174072
    9. 'start' → logprob: -5.860788822174072
    10. 'Start' → logprob: -6.485788822174072

Token 1463: ' outside' (ID: 7539)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outside' → logprob: -0.009680893272161484
    2. ' outside' → logprob: -5.50968074798584
    3. 'face' → logprob: -5.63468074798584
    4. 'faces' → logprob: -7.13468074798584
    5. '[out' → logprob: -7.88468074798584
    6. '   ' → logprob: -8.50968074798584
    7. 'out' → logprob: -8.75968074798584
    8. '       ' → logprob: -9.25968074798584
    9. 'queue' → logprob: -9.63468074798584
    10. 'the' → logprob: -9.63468074798584

Token 1464: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.4815429747104645
    2. '_face' → logprob: -0.9815429449081421
    3. '_index' → logprob: -5.106543064117432
    4. ' =' → logprob: -7.606543064117432
    5. ' face' → logprob: -8.356542587280273
    6. '_idx' → logprob: -9.106542587280273
    7. 'index' → logprob: -9.106542587280273
    8. '_queue' → logprob: -9.231542587280273
    9. '_faces' → logprob: -9.481542587280273
    10. '=' → logprob: -9.481542587280273

Token 1465: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6581411957740784
    2. '       ' → logprob: -1.4081411361694336
    3. 'visited' → logprob: -2.2831411361694336
    4. 'queue' → logprob: -2.9081411361694336
    5. '#' → logprob: -3.9081411361694336
    6. 'face' → logprob: -4.283141136169434
    7. ' queue' → logprob: -4.908141136169434
    8. 'dist' → logprob: -5.158141136169434
    9. '   ' → logprob: -5.283141136169434
    10. ' to' → logprob: -5.283141136169434

Token 1466: ' BFS' (ID: 190016)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6192125082015991
    2. '       ' → logprob: -0.8692125082015991
    3. 'queue' → logprob: -3.4942126274108887
    4. '#' → logprob: -5.244212627410889
    5. 'distance' → logprob: -5.619212627410889
    6. 'visited' → logprob: -6.369212627410889
    7. 'import' → logprob: -7.494212627410889
    8. ' dist' → logprob: -8.61921215057373
    9. '   ' → logprob: -8.74421215057373
    10. '           ' → logprob: -8.99421215057373

Token 1467: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049751318991184235
    2. 'queue' → logprob: -3.5497512817382812
    3. '(queue' → logprob: -5.299751281738281
    4. '
' → logprob: -5.549751281738281
    5. ' queue' → logprob: -5.674751281738281
    6. '   ' → logprob: -5.799751281738281
    7. ' to' → logprob: -5.924751281738281
    8. '(' → logprob: -7.549751281738281
    9. 'to' → logprob: -8.549751281738281
    10. ':' → logprob: -8.674751281738281

Token 1468: ' get' (ID: 717)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.30171072483062744
    2. 'mark' → logprob: -2.551710605621338
    3. 'det' → logprob: -2.676710605621338
    4. 'discover' → logprob: -3.176710605621338
    5. 'visit' → logprob: -3.801710605621338
    6. 'label' → logprob: -4.301710605621338
    7. 'identify' → logprob: -4.926710605621338
    8. 'reach' → logprob: -5.301710605621338
    9. ' find' → logprob: -5.551710605621338
    10. 'fill' → logprob: -5.676710605621338

Token 1469: ' minimum' (ID: 11085)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04351324960589409
    2. 'distance' → logprob: -3.418513298034668
    3. ' distances' → logprob: -4.793513298034668
    4. 'levels' → logprob: -7.668513298034668
    5. 'face' → logprob: -8.168513298034668
    6. 'depth' → logprob: -8.543513298034668
    7. '       ' → logprob: -8.543513298034668
    8. '   ' → logprob: -9.168513298034668
    9. 'room' → logprob: -9.293513298034668
    10. '#' → logprob: -9.543513298034668

Token 1470: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.08689138293266296
    2. 'distance' → logprob: -2.5868914127349854
    3. 'steps' → logprob: -5.836891174316406
    4. ' distances' → logprob: -5.836891174316406
    5. 'depth' → logprob: -6.711891174316406
    6. 'levels' → logprob: -7.461891174316406
    7. ' distance' → logprob: -8.711891174316406
    8. '```' → logprob: -9.961891174316406
    9. '   ' → logprob: -10.211891174316406
    10. 'level' → logprob: -10.461891174316406

Token 1471: ' (#' (ID: 66375)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018176245503127575
    2. 'from' → logprob: -6.75181770324707
    3. ' from' → logprob: -8.50181770324707
    4. ' to' → logprob: -8.75181770324707
    5. 'distance' → logprob: -9.25181770324707
    6. ' distances' → logprob: -9.87681770324707
    7. 'dist' → logprob: -10.25181770324707
    8. '   ' → logprob: -10.37681770324707
    9. 'to' → logprob: -10.50181770324707
    10. ' distance' → logprob: -11.50181770324707

Token 1472: 'holes' (ID: 140143)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.816163957118988
    2. ' steps' → logprob: -1.3161640167236328
    3. 'faces' → logprob: -1.6911640167236328
    4. ' of' → logprob: -3.566164016723633
    5. 'edges' → logprob: -3.566164016723633
    6. ' edges' → logprob: -4.191164016723633
    7. 's' → logprob: -5.316164016723633
    8. ' faces' → logprob: -5.566164016723633
    9. ' spaces' → logprob: -5.566164016723633
    10. 'spaces' → logprob: -5.941164016723633

Token 1473: ')' (ID: 8)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.23787032067775726
    2. ')' → logprob: -1.7378703355789185
    3. ' to' → logprob: -3.987870216369629
    4. 'to' → logprob: -4.737870216369629
    5. ' s' → logprob: -5.862870216369629
    6. '   ' → logprob: -6.987870216369629
    7. '=' → logprob: -7.237870216369629
    8. ')
' → logprob: -7.237870216369629
    9. '
' → logprob: -7.362870216369629
    10. '_to' → logprob: -7.362870216369629

Token 1474: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017720005416776985
    2. 'from' → logprob: -9.250177383422852
    3. '   ' → logprob: -10.250177383422852
    4. 'queue' → logprob: -10.625177383422852
    5. 'dist' → logprob: -12.125177383422852
    6. ' from' → logprob: -12.250177383422852
    7. '
' → logprob: -12.500177383422852
    8. 'distance' → logprob: -12.750177383422852
    9. '        
' → logprob: -13.875177383422852
    10. ' to' → logprob: -14.375177383422852

Token 1475: ' go' (ID: 810)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.707603394985199
    2. 'each' → logprob: -1.0826034545898438
    3. 'inside' → logprob: -2.9576034545898438
    4. 'all' → logprob: -3.3326034545898438
    5. 'fill' → logprob: -3.4576034545898438
    6. 'outside' → logprob: -3.9576034545898438
    7. 'reach' → logprob: -4.332603454589844
    8. 'enter' → logprob: -5.207603454589844
    9. 'access' → logprob: -6.207603454589844
    10. 'go' → logprob: -6.457603454589844

Token 1476: ' outside' (ID: 7539)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.9117729067802429
    2. 'inside' → logprob: -1.5367729663848877
    3. 'through' → logprob: -1.5367729663848877
    4. ' through' → logprob: -3.2867729663848877
    5. ' to' → logprob: -3.4117729663848877
    6. 'from' → logprob: -3.5367729663848877
    7. '       ' → logprob: -4.161772727966309
    8. 'into' → logprob: -4.286772727966309
    9. '=' → logprob: -4.661772727966309
    10. 'outside' → logprob: -4.786772727966309

Token 1477: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020091719925403595
    2. 'dist' → logprob: -6.627009391784668
    3. 'queue' → logprob: -7.877009391784668
    4. 'distance' → logprob: -9.002009391784668
    5. '   ' → logprob: -9.252009391784668
    6. 'visited' → logprob: -10.002009391784668
    7. 'from' → logprob: -10.627009391784668
    8. '```' → logprob: -12.127009391784668
    9. 'que' → logprob: -12.752009391784668
    10. '
' → logprob: -12.877009391784668

Token 1478: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.6648790836334229
    2. 'face' → logprob: -1.1648790836334229
    3. ' each' → logprob: -2.539879083633423
    4. ' face' → logprob: -3.039879083633423
    5. 'i' → logprob: -4.289878845214844
    6. 'faces' → logprob: -4.289878845214844
    7. 'all' → logprob: -5.164878845214844
    8. 'other' → logprob: -6.289878845214844
    9. 'room' → logprob: -6.289878845214844
    10. ' i' → logprob: -7.039878845214844

Token 1479: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.08226269483566284
    2. 'f' → logprob: -3.3322627544403076
    3. ' face' → logprob: -3.3322627544403076
    4. 'fi' → logprob: -5.2072625160217285
    5. 'i' → logprob: -6.9572625160217285
    6. ' f' → logprob: -7.7072625160217285
    7. 'v' → logprob: -8.457262992858887
    8. 'node' → logprob: -9.957262992858887
    9. 'faces' → logprob: -10.082262992858887
    10. ' i' → logprob: -10.082262992858887

Token 1480: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002586719812825322
    2. 'queue' → logprob: -6.252586841583252
    3. 'dist' → logprob: -8.252586364746094
    4. 'visited' → logprob: -9.002586364746094
    5. 'distance' → logprob: -9.252586364746094
    6. '   ' → logprob: -9.252586364746094
    7. '
' → logprob: -9.752586364746094
    8. '```' → logprob: -11.502586364746094
    9. '        
' → logprob: -12.752586364746094
    10. 'que' → logprob: -12.752586364746094

Token 1481: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00044103997061029077
    2. '
' → logprob: -8.00044059753418
    3. '   ' → logprob: -9.25044059753418
    4. '        
' → logprob: -12.75044059753418
    5. 'queue' → logprob: -12.87544059753418
    6. '```' → logprob: -13.75044059753418
    7. 'from' → logprob: -14.25044059753418
    8. 'dist' → logprob: -14.62544059753418
    9. 'distance' → logprob: -14.75044059753418
    10. '
' → logprob: -15.12544059753418

Token 1482: ' dist' (ID: 3601)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05004390329122543
    2. 'dist' (adapté à ' dist') → logprob: -3.050043821334839
    3. 'queue' → logprob: -6.800044059753418
    4. 'distance' → logprob: -8.675044059753418
    5. '   ' → logprob: -8.800044059753418
    6. 'visited' → logprob: -11.675044059753418
    7. 'from' → logprob: -12.300044059753418
    8. 'que' → logprob: -13.175044059753418
    9. 'q' → logprob: -13.300044059753418
    10. '```' → logprob: -13.925044059753418

Token 1483: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029982930049300194
    2. '=' → logprob: -3.5299830436706543
    3. '[' → logprob: -8.904982566833496
    4. '=[' → logprob: -9.904982566833496
    5. ' =[' → logprob: -10.029982566833496
    6. ' [' → logprob: -14.404982566833496
    7. '=[]' → logprob: -14.904982566833496
    8. 's' → logprob: -15.029982566833496
    9. ' ' → logprob: -15.279982566833496
    10. ',' → logprob: -15.279982566833496

Token 1484: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00012606535165105015
    2. '[' → logprob: -9.000125885009766
    3. ' [-' → logprob: -13.625125885009766
    4. '{' → logprob: -14.000125885009766
    5. '{-' → logprob: -14.875125885009766
    6. '[len' → logprob: -16.625125885009766
    7. '   ' → logprob: -16.750125885009766
    8. 'default' → logprob: -16.875125885009766
    9. '[n' → logprob: -17.250125885009766
    10. '[b' → logprob: -17.625125885009766

Token 1485: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.375
    3. '2' → logprob: -18.125
    4. '10' → logprob: -18.625
    5. '-' → logprob: -18.875
    6. '100' → logprob: -20.625
    7. 'math' → logprob: -21.125
    8. ' ' → logprob: -21.625
    9. '```' → logprob: -22.125
    10. 'inf' → logprob: -22.125

Token 1486: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.34866902232170105
    2. ']' → logprob: -1.3486690521240234
    3. 'for' → logprob: -4.098669052124023
    4. ']*' → logprob: -4.098669052124023
    5. ' ]' → logprob: -7.473669052124023
    6. '(len' → logprob: -8.098669052124023
    7. ']*(' → logprob: -8.598669052124023
    8. ' *' → logprob: -9.098669052124023
    9. '   ' → logprob: -9.723669052124023
    10. '[len' → logprob: -9.848669052124023

Token 1487: ' *' (ID: 425)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.2601519823074341
    2. ' for' → logprob: -2.2601518630981445
    3. '[len' → logprob: -2.2601518630981445
    4. 'for' → logprob: -5.1351518630981445
    5. '[' → logprob: -5.7601518630981445
    6. ' len' → logprob: -6.0101518630981445
    7. ',len' → logprob: -6.3851518630981445
    8. '(C' → logprob: -6.5101518630981445
    9. '=len' → logprob: -7.0101518630981445
    10. ' =' → logprob: -7.3851518630981445

Token 1488: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0019291093340143561
    2. '(len' → logprob: -6.25192928314209
    3. ' len' → logprob: -14.50192928314209
    4. '[len' → logprob: -16.876928329467773
    5. '   ' → logprob: -17.501928329467773
    6. '	len' → logprob: -19.501928329467773
    7. '(' → logprob: -20.626928329467773
    8. '           ' → logprob: -20.876928329467773
    9. ',len' → logprob: -21.001928329467773
    10. '       ' → logprob: -21.501928329467773

Token 1489: '(f' (ID: 1526)
  Prédit: '(dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.6592109203338623
    2. 'dist' → logprob: -1.4092109203338623
    3. 'faces' → logprob: -1.9092109203338623
    4. '(f' → logprob: -2.4092109203338623
    5. '(face' → logprob: -8.909211158752441
    6. 'f' → logprob: -9.034211158752441
    7. 'face' → logprob: -9.784211158752441
    8. ' faces' → logprob: -13.159211158752441
    9. '	dist' → logprob: -13.159211158752441
    10. ' dist' → logprob: -13.659211158752441

Token 1490: 'aces' (ID: 3247)
  Prédit: 'aces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aces' → logprob: -0.03171398490667343
    2. 'faces' → logprob: -3.5317139625549316
    3. '(dist' → logprob: -7.281713962554932
    4. 'dist' → logprob: -7.406713962554932
    5. '(f' → logprob: -7.656713962554932
    6. '(' → logprob: -10.03171443939209
    7. '```' → logprob: -10.03171443939209
    8. 'ace' → logprob: -11.40671443939209
    9. 'ACES' → logprob: -11.53171443939209
    10. '_faces' → logprob: -11.65671443939209

Token 1491: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.411155104637146
    2. '       ' → logprob: -1.536155104637146
    3. ')' → logprob: -2.6611552238464355
    4. '
' → logprob: -3.0361552238464355
    5. '   ' → logprob: -6.7861552238464355
    6. '<|end|>' → logprob: -7.1611552238464355
    7. '```' → logprob: -7.5361552238464355
    8. '[' → logprob: -8.161154747009277
    9. '           ' → logprob: -8.411154747009277
    10. ']
' → logprob: -8.536154747009277

Token 1492: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.008983965963125229
    2. '   ' → logprob: -4.758984088897705
    3. ' dist' → logprob: -8.883983612060547
    4. 'queue' → logprob: -9.133983612060547
    5. '	dist' → logprob: -9.508983612060547
    6. 'from' → logprob: -10.758983612060547
    7. 'import' → logprob: -11.008983612060547
    8. '```' → logprob: -11.883983612060547
    9. '       ' → logprob: -14.008983612060547
    10. 'face' → logprob: -14.133983612060547

Token 1493: ' dist' (ID: 3601)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.25741541385650635
    2. 'deque' → logprob: -1.7574154138565063
    3. 'queue' → logprob: -4.132415294647217
    4. '```' → logprob: -4.632415294647217
    5. '
' → logprob: -4.757415294647217
    6. ' from' → logprob: -5.257415294647217
    7. 'dist' (adapté à ' dist') → logprob: -5.382415294647217
    8. ' deque' → logprob: -5.632415294647217
    9. 'import' → logprob: -5.757415294647217
    10. '       ' → logprob: -6.757415294647217

Token 1494: '[out' (ID: 121783)
  Prédit: '[out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[out' → logprob: -2.6776029699249193e-05
    2. '[' → logprob: -10.75002670288086
    3. 'outside' → logprob: -12.37502670288086
    4. ' outside' → logprob: -15.50002670288086
    5. '=' → logprob: -15.87502670288086
    6. ' =' → logprob: -16.12502670288086
    7. '
' → logprob: -16.25002670288086
    8. ' [' → logprob: -16.50002670288086
    9. '```' → logprob: -16.62502670288086
    10. '[
' → logprob: -16.75002670288086

Token 1495: 'side' (ID: 4341)
  Prédit: 'side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.00010437761375214905
    2. 's' → logprob: -9.375103950500488
    3. 'size' → logprob: -12.125103950500488
    4. 'site' → logprob: -12.625103950500488
    5. '
' → logprob: -12.625103950500488
    6. '```' → logprob: -12.625103950500488
    7. 'sid' → logprob: -13.250103950500488
    8. 'outside' → logprob: -14.625103950500488
    9. ']' → logprob: -15.375103950500488
    10. 'source' → logprob: -15.500103950500488

Token 1496: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -9.400689305039123e-05
    2. ']_' → logprob: -10.250094413757324
    3. 'Index' → logprob: -10.875094413757324
    4. ']' → logprob: -10.875094413757324
    5. '
' → logprob: -11.875094413757324
    6. 'index' → logprob: -12.750094413757324
    7. '\' → logprob: -13.250094413757324
    8. '_INDEX' → logprob: -13.250094413757324
    9. '```' → logprob: -13.375094413757324
    10. '`' → logprob: -14.500094413757324

Token 1497: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002910550683736801
    2. ']=' → logprob: -6.002910614013672
    3. '=' → logprob: -7.877910614013672
    4. ' ]' → logprob: -10.377910614013672
    5. ' =' → logprob: -10.627910614013672
    6. ')' → logprob: -15.127910614013672
    7. ']+=' → logprob: -17.127910614013672
    8. '[' → logprob: -17.752910614013672
    9. ')=' → logprob: -17.877910614013672
    10. '0' → logprob: -18.127910614013672

Token 1498: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693166732788086
    2. ' =' → logprob: -2.126931667327881
    3. ']=' → logprob: -13.001932144165039
    4. '[' → logprob: -14.126932144165039
    5. ']' → logprob: -15.876932144165039
    6. '=True' → logprob: -16.25193214416504
    7. '<|end|>' → logprob: -16.75193214416504
    8. ')=' → logprob: -16.87693214416504
    9. ' =[' → logprob: -17.12693214416504
    10. '=[' → logprob: -17.25193214416504

Token 1499: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '۰' → logprob: -20.5
    4. '00' → logprob: -21.0
    5. '   ' → logprob: -21.5
    6. '000' → logprob: -21.75
    7. '０' → logprob: -22.25
    8. '=' → logprob: -22.75
    9. '```' → logprob: -23.125
    10. '٠' → logprob: -23.4375

Token 1500: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '۰' → logprob: -20.875001907348633
    4. '00' → logprob: -22.125001907348633
    5. '   ' → logprob: -22.250001907348633
    6. '000' → logprob: -22.375001907348633
    7. '```' → logprob: -22.375001907348633
    8. '０' → logprob: -23.062501907348633
    9. '
' → logprob: -23.312501907348633
    10. '1' → logprob: -23.437501907348633

Token 1501: '
' (ID: 198)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.4193912446498871
    2. '   ' → logprob: -1.1693912744522095
    3. 'q' → logprob: -4.04439115524292
    4. '       ' → logprob: -5.41939115524292
    5. 'from' → logprob: -5.54439115524292
    6. 'que' → logprob: -5.54439115524292
    7. ' queue' → logprob: -7.16939115524292
    8. '```' → logprob: -7.29439115524292
    9. '	queue' → logprob: -8.044391632080078
    10. 'dq' → logprob: -8.169391632080078

Token 1502: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21018488705158234
    2. 'queue' → logprob: -1.960184931755066
    3. '	queue' → logprob: -3.7101848125457764
    4. 'from' → logprob: -4.8351850509643555
    5. ' queue' → logprob: -4.9601850509643555
    6. '       ' → logprob: -5.0851850509643555
    7. 'que' → logprob: -7.0851850509643555
    8. ' from' → logprob: -7.3351850509643555
    9. '```' → logprob: -7.3351850509643555
    10. 'q' → logprob: -7.5851850509643555

Token 1503: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.030278118327260017
    2. 'q' → logprob: -3.530278205871582
    3. 'que' → logprob: -8.530278205871582
    4. 'dq' → logprob: -8.530278205871582
    5. '   ' → logprob: -9.030278205871582
    6. ' queue' → logprob: -12.280278205871582
    7. 'Q' → logprob: -12.780278205871582
    8. 'from' → logprob: -12.780278205871582
    9. '       ' → logprob: -13.280278205871582
    10. 'deque' → logprob: -14.655278205871582

Token 1504: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00665284926071763
    2. '.' → logprob: -5.50665283203125
    3. ' =' → logprob: -6.88165283203125
    4. '=' → logprob: -7.88165283203125
    5. '.p' → logprob: -8.00665283203125
    6. '.pop' → logprob: -8.38165283203125
    7. '.extend' → logprob: -8.88165283203125
    8. ' .' → logprob: -9.38165283203125
    9. '.enqueue' → logprob: -9.50665283203125
    10. '.app' → logprob: -9.75665283203125

Token 1505: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -5.836499985889532e-05
    2. ' deque' → logprob: -9.7500581741333
    3. 'Deque' → logprob: -19.000059127807617
    4. 'de' → logprob: -21.000059127807617
    5. '```' → logprob: -21.250059127807617
    6. 'dq' → logprob: -22.750059127807617
    7. 'collections' → logprob: -23.250059127807617
    8. '   ' → logprob: -23.875059127807617
    9. '	de' → logprob: -24.000059127807617
    10. 'deb' → logprob: -24.250059127807617

Token 1506: '()
' (ID: 1234)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -1.9862216504407115e-05
    2. '()' → logprob: -12.000020027160645
    3. '([(' → logprob: -12.000020027160645
    4. '[out' → logprob: -12.375020027160645
    5. '[' → logprob: -13.250020027160645
    6. '()
' → logprob: -13.625020027160645
    7. '[(' → logprob: -15.125020027160645
    8. '(' → logprob: -17.375019073486328
    9. '([
' → logprob: -17.625019073486328
    10. '([...' → logprob: -17.750019073486328

Token 1507: '       ' (ID: 309)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.0017764460062608123
    2. '	queue' → logprob: -6.501776218414307
    3. '(queue' → logprob: -8.876776695251465
    4. ' queue' → logprob: -9.376776695251465
    5. '   ' → logprob: -10.751776695251465
    6. '       ' → logprob: -10.876776695251465
    7. '```' → logprob: -12.251776695251465
    8. '.queue' → logprob: -12.626776695251465
    9. '_queue' → logprob: -14.126776695251465
    10. '\t' → logprob: -16.37677574157715

Token 1508: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -6.229872087715194e-05
    2. '	queue' → logprob: -10.000061988830566
    3. ' queue' → logprob: -11.000061988830566
    4. '   ' → logprob: -16.625062942504883
    5. '       ' → logprob: -17.250062942504883
    6. '(queue' → logprob: -17.375062942504883
    7. '.queue' → logprob: -18.625062942504883
    8. '```' → logprob: -18.625062942504883
    9. 'query' → logprob: -20.875062942504883
    10. '_queue' → logprob: -20.875062942504883

Token 1509: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.547789674485102e-05
    2. '.extend' → logprob: -11.125035285949707
    3. '.enqueue' → logprob: -11.125035285949707
    4. '.' → logprob: -12.375035285949707
    5. '.ap' → logprob: -14.375035285949707
    6. '.put' → logprob: -14.750035285949707
    7. '.app' → logprob: -15.500035285949707
    8. 'append' → logprob: -15.875035285949707
    9. '.p' → logprob: -16.125036239624023
    10. ').' → logprob: -16.375036239624023

Token 1510: '(out' (ID: 20090)
  Prédit: '(out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(out' → logprob: -4.656383680412546e-05
    2. 'outside' → logprob: -10.000046730041504
    3. '[out' → logprob: -14.000046730041504
    4. '((' → logprob: -15.875046730041504
    5. 'Outside' → logprob: -16.000045776367188
    6. '(outfile' → logprob: -18.125045776367188
    7. '(' → logprob: -18.500045776367188
    8. ' outside' → logprob: -18.875045776367188
    9. '(
' → logprob: -19.125045776367188
    10. ',out' → logprob: -19.625045776367188

Token 1511: 'side' (ID: 4341)
  Prédit: 'side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.0001170132018160075
    2. 'outside' → logprob: -9.125117301940918
    3. 'size' → logprob: -13.125117301940918
    4. '(side' → logprob: -13.250117301940918
    5. 'inside' → logprob: -13.375117301940918
    6. 's' → logprob: -14.500117301940918
    7. '(s' → logprob: -14.500117301940918
    8. 'ide' → logprob: -15.000117301940918
    9. '```' → logprob: -15.125117301940918
    10. '[' → logprob: -15.625117301940918

Token 1512: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -7.226628895296017e-06
    2. 'index' → logprob: -12.250007629394531
    3. 'Index' → logprob: -13.875007629394531
    4. ')' → logprob: -14.125007629394531
    5. '_INDEX' → logprob: -15.875007629394531
    6. ')_' → logprob: -16.25000762939453
    7. 's' → logprob: -16.37500762939453
    8. '_indexes' → logprob: -17.25000762939453
    9. '_indices' → logprob: -17.37500762939453
    10. '[index' → logprob: -17.37500762939453

Token 1513: ')

' (ID: 1029)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16038264334201813
    2. ')' → logprob: -1.910382628440857
    3. '       ' → logprob: -8.910382270812988
    4. '   ' → logprob: -11.160382270812988
    5. ')
' → logprob: -12.160382270812988
    6. ')

' → logprob: -13.410382270812988
    7. '):
' → logprob: -14.160382270812988
    8. '           ' → logprob: -14.410382270812988
    9. '
' → logprob: -15.035382270812988
    10. '```' → logprob: -15.160382270812988

Token 1514: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39830684661865234
    2. '       ' → logprob: -1.6483068466186523
    3. '	while' → logprob: -2.1483068466186523
    4. 'while' → logprob: -4.523306846618652
    5. '```' → logprob: -5.273306846618652
    6. '
' → logprob: -5.773306846618652
    7. ' while' → logprob: -8.273306846618652
    8. '           ' → logprob: -10.148306846618652
    9. '	' → logprob: -10.148306846618652
    10. '``' → logprob: -11.398306846618652

Token 1515: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.5667586922645569
    2. '	while' → logprob: -1.316758632659912
    3. '       ' → logprob: -2.066758632659912
    4. '   ' → logprob: -3.316758632659912
    5. ' while' → logprob: -6.566758632659912
    6. '```' → logprob: -8.06675910949707
    7. '	' → logprob: -10.44175910949707
    8. '
' → logprob: -11.94175910949707
    9. '	   ' → logprob: -12.69175910949707
    10. '\t' → logprob: -12.81675910949707

Token 1516: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -7.660315895918757e-05
    2. ' queue' → logprob: -9.500076293945312
    3. 'len' → logprob: -14.250076293945312
    4. '   ' → logprob: -14.500076293945312
    5. '	queue' → logprob: -14.750076293945312
    6. '(queue' → logprob: -16.500076293945312
    7. '       ' → logprob: -16.875076293945312
    8. '
' → logprob: -18.375076293945312
    9. ' ' → logprob: -18.875076293945312
    10. 'que' → logprob: -19.500076293945312

Token 1517: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.35689398646354675
    2. ':' → logprob: -1.2318940162658691
    3. '.p' → logprob: -4.981894016265869
    4. '.' → logprob: -7.856894016265869
    5. '):
' → logprob: -8.231893539428711
    6. '   ' → logprob: -8.731893539428711
    7. '```' → logprob: -8.731893539428711
    8. '       ' → logprob: -9.231893539428711
    9. '           ' → logprob: -9.231893539428711
    10. '.pop' → logprob: -9.981893539428711

Token 1518: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.047941822558641434
    2. 'cur' → logprob: -3.2979419231414795
    3. '   ' → logprob: -5.4229416847229
    4. '               ' → logprob: -6.0479416847229
    5. '```' → logprob: -6.7979416847229
    6. ' cur' → logprob: -7.1729416847229
    7. '	       ' → logprob: -7.5479416847229
    8. '	cur' → logprob: -7.7979416847229
    9. '		' → logprob: -9.297942161560059
    10. '_cur' → logprob: -10.422942161560059

Token 1519: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.6024985313415527
    2. 'u' → logprob: -0.8524985313415527
    3. ' u' → logprob: -4.102498531341553
    4. ' cur' → logprob: -5.227498531341553
    5. '           ' → logprob: -5.852498531341553
    6. 'face' → logprob: -7.602498531341553
    7. 'current' → logprob: -7.727498531341553
    8. '   ' → logprob: -8.727499008178711
    9. 'f' → logprob: -9.227499008178711
    10. 'curr' → logprob: -9.227499008178711

Token 1520: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022003948688507
    2. '=' → logprob: -2.350219964981079
    3. ')' → logprob: -12.6002197265625
    4. '(queue' → logprob: -13.3502197265625
    5. ',' → logprob: -13.6002197265625
    6. '<|end|>' → logprob: -13.7252197265625
    7. '```' → logprob: -14.4752197265625
    8. '   ' → logprob: -14.6002197265625
    9. '=q' → logprob: -15.1002197265625
    10. '_' → logprob: -15.2252197265625

Token 1521: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.00043102685594931245
    2. ' queue' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.125431060791016
    4. '       ' → logprob: -17.000431060791016
    5. '	queue' → logprob: -17.875431060791016
    6. 'que' → logprob: -19.375431060791016
    7. 'deque' → logprob: -19.750431060791016
    8. ' ' → logprob: -19.875431060791016
    9. '(queue' → logprob: -19.875431060791016
    10. '```' → logprob: -20.375431060791016

Token 1522: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.4731641411781311
    2. '.' → logprob: -1.2231640815734863
    3. '.pop' → logprob: -2.9731640815734863
    4. '.append' → logprob: -3.9731640815734863
    5. '=' → logprob: -4.598164081573486
    6. '.dequeue' → logprob: -7.348164081573486
    7. ' =' → logprob: -7.598164081573486
    8. ' .' → logprob: -7.973164081573486
    9. '.app' → logprob: -8.473164558410645
    10. '.=' → logprob: -8.598164558410645

Token 1523: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0015071245143190026
    2. 'op' → logprob: -6.50150728225708
    3. 'ople' → logprob: -12.876506805419922
    4. 'p' → logprob: -13.501506805419922
    5. 'opl' → logprob: -14.251506805419922
    6. 'opt' → logprob: -15.751506805419922
    7. 'pop' → logprob: -16.626506805419922
    8. 'left' → logprob: -16.751506805419922
    9. 'ple' → logprob: -16.876506805419922
    10. 'o' → logprob: -17.376506805419922

Token 1524: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00019185843120794743
    2. ' for' → logprob: -9.875191688537598
    3. '
' → logprob: -10.125191688537598
    4. 'for' → logprob: -10.500191688537598
    5. ',' → logprob: -10.875191688537598
    6. ')' → logprob: -11.500191688537598
    7. '            
' → logprob: -11.875191688537598
    8. '               ' → logprob: -12.125191688537598
    9. ':
' → logprob: -12.250191688537598
    10. '<|end|>' → logprob: -12.500191688537598

Token 1525: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.976922744186595e-05
    2. '   ' → logprob: -11.250040054321289
    3. 'for' → logprob: -11.875040054321289
    4. '	       ' → logprob: -12.125040054321289
    5. ' for' → logprob: -12.375040054321289
    6. '```' → logprob: -12.375040054321289
    7. '		' → logprob: -13.000040054321289
    8. '       ' → logprob: -13.625040054321289
    9. '               ' → logprob: -14.125040054321289
    10. '	   ' → logprob: -14.875040054321289

Token 1526: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002673160983249545
    2. '           ' → logprob: -6.502673149108887
    3. ' for' → logprob: -6.752673149108887
    4. '```' → logprob: -13.627673149108887
    5. 'For' → logprob: -14.627673149108887
    6. '	for' → logprob: -15.377673149108887
    7. '   ' → logprob: -15.502673149108887
    8. '               ' → logprob: -15.502673149108887
    9. '_for' → logprob: -16.002674102783203
    10. '`' → logprob: -17.877674102783203

Token 1527: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.020079657435417175
    2. 'nx' → logprob: -4.020079612731934
    3. 'nei' → logprob: -7.270079612731934
    4. 'nbr' → logprob: -7.520079612731934
    5. 'nf' → logprob: -8.020079612731934
    6. ' nxt' → logprob: -8.895079612731934
    7. 'neighbor' → logprob: -9.520079612731934
    8. 'ne' → logprob: -9.770079612731934
    9. 'nv' → logprob: -10.020079612731934
    10. 'next' → logprob: -10.270079612731934

Token 1528: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25193583965301514
    2. 'in' → logprob: -1.5019358396530151
    3. ')' → logprob: -12.876935958862305
    4. '	in' → logprob: -14.001935958862305
    5. 'n' → logprob: -14.251935958862305
    6. '):
' → logprob: -14.626935958862305
    7. '           ' → logprob: -14.626935958862305
    8. 'In' → logprob: -14.751935958862305
    9. ',' → logprob: -15.626935958862305
    10. '   ' → logprob: -15.751935958862305

Token 1529: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -1.306760805164231e-05
    2. ' face' → logprob: -11.25001335144043
    3. '(face' → logprob: -19.37501335144043
    4. '   ' → logprob: -22.87501335144043
    5. '_face' → logprob: -22.87501335144043
    6. 'fac' → logprob: -23.87501335144043
    7. '.face' → logprob: -24.25001335144043
    8. ' ' → logprob: -24.25001335144043
    9. 'faces' → logprob: -24.37501335144043
    10. 'facet' → logprob: -24.75001335144043

Token 1530: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.021095776930451393
    2. '[cur' → logprob: -3.8960957527160645
    3. 'cur' → logprob: -7.8960957527160645
    4. '_cur' → logprob: -9.271096229553223
    5. 'graph' → logprob: -9.771096229553223
    6. '[_' → logprob: -11.271096229553223
    7. '(cur' → logprob: -12.146096229553223
    8. 'Graph' → logprob: -12.896096229553223
    9. '_GRAPH' → logprob: -13.396096229553223
    10. '```' → logprob: -13.521096229553223

Token 1531: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -1.2233183042553719e-05
    2. '(cur' → logprob: -12.000012397766113
    3. 'cur' → logprob: -12.250012397766113
    4. ':' → logprob: -14.875012397766113
    5. ',' → logprob: -15.125012397766113
    6. ')' → logprob: -15.250012397766113
    7. '	cur' → logprob: -16.250011444091797
    8. ' cur' → logprob: -16.875011444091797
    9. '
' → logprob: -17.500011444091797
    10. ':
' → logprob: -17.500011444091797

Token 1532: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.0787605568766594
    2. '):
' → logprob: -3.0787606239318848
    3. ']:' → logprob: -3.7037606239318848
    4. ':
' → logprob: -5.828760623931885
    5. '               ' → logprob: -7.453760623931885
    6. '           ' → logprob: -7.578760623931885
    7. ':' → logprob: -7.953760623931885
    8. '):' → logprob: -8.078760147094727
    9. ']:
' → logprob: -8.828760147094727
    10. '       ' → logprob: -9.703760147094727

Token 1533: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.824579784530215e-05
    2. '```' → logprob: -10.2500581741333
    3. ' if' → logprob: -11.5000581741333
    4. '	           ' → logprob: -12.1250581741333
    5. 'if' → logprob: -12.7500581741333
    6. '           ' → logprob: -13.7500581741333
    7. '                   ' → logprob: -13.8750581741333
    8. '`' → logprob: -14.5000581741333
    9. '		       ' → logprob: -14.5000581741333
    10. '``' → logprob: -15.2500581741333

Token 1534: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1399160772562027
    2. ' if' → logprob: -2.139916181564331
    3. 'if' (adapté à ' if') → logprob: -4.514915943145752
    4. '               ' → logprob: -6.389915943145752
    5. '           ' → logprob: -9.13991641998291
    6. '   ' → logprob: -9.76491641998291
    7. '                ' → logprob: -10.01491641998291
    8. '                       ' → logprob: -10.88991641998291
    9. '                    ' → logprob: -11.01491641998291
    10. '```' → logprob: -11.51491641998291

Token 1535: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.47407716512680054
    2. 'dist' → logprob: -0.9740771651268005
    3. '	dist' → logprob: -16.849077224731445
    4. '_dist' → logprob: -17.224077224731445
    5. '(dist' → logprob: -17.599077224731445
    6. '               ' → logprob: -17.599077224731445
    7. 'Dist' → logprob: -19.474077224731445
    8. '           ' → logprob: -19.474077224731445
    9. '-dist' → logprob: -19.849077224731445
    10. '.dist' → logprob: -19.849077224731445

Token 1536: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.07926175743341446
    2. '[cur' → logprob: -2.5792617797851562
    3. '[next' → logprob: -8.829261779785156
    4. '[' → logprob: -9.204261779785156
    5. 'n' → logprob: -9.454261779785156
    6. '<n' → logprob: -11.204261779785156
    7. '[
' → logprob: -11.454261779785156
    8. '```' → logprob: -11.829261779785156
    9. 'cur' → logprob: -12.204261779785156
    10. '[now' → logprob: -12.954261779785156

Token 1537: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -1.0564331205387134e-05
    2. 'x' → logprob: -11.50001049041748
    3. ' nxt' → logprob: -15.87501049041748
    4. 'ext' → logprob: -16.000011444091797
    5. '```' → logprob: -16.750011444091797
    6. '[next' → logprob: -17.125011444091797
    7. '[n' → logprob: -17.625011444091797
    8. 't' → logprob: -17.875011444091797
    9. ']' → logprob: -18.625011444091797
    10. 'XT' → logprob: -18.875011444091797

Token 1538: ']' (ID: 60)
  Prédit: '==-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==-' → logprob: -1.0479252338409424
    2. ' ==' → logprob: -1.2979252338409424
    3. '==' → logprob: -1.4229252338409424
    4. ']' → logprob: -2.4229252338409424
    5. ']==' → logprob: -3.5479252338409424
    6. ')' → logprob: -4.797924995422363
    7. '[' → logprob: -4.922924995422363
    8. ')==' → logprob: -7.547924995422363
    9. '[cur' → logprob: -8.547924995422363
    10. '<' → logprob: -8.547924995422363

Token 1539: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.41352829337120056
    2. '==' → logprob: -1.288528323173523
    3. '==-' → logprob: -3.0385282039642334
    4. '<' → logprob: -4.2885284423828125
    5. '[' → logprob: -7.4135284423828125
    6. ' <' → logprob: -7.9135284423828125
    7. '```' → logprob: -9.163528442382812
    8. ')' → logprob: -9.538528442382812
    9. ']==' → logprob: -9.663528442382812
    10. '=' → logprob: -10.038528442382812

Token 1540: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004306692280806601
    2. ' -' → logprob: -7.750430583953857
    3. '   ' → logprob: -17.125431060791016
    4. ' ' → logprob: -17.625431060791016
    5. '```' → logprob: -18.875431060791016
    6. '−' → logprob: -19.375431060791016
    7. '‌' → logprob: -21.000431060791016
    8. '  ' → logprob: -21.375431060791016
    9. '==-' → logprob: -21.875431060791016
    10. '	' → logprob: -22.000431060791016

Token 1541: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '2' → logprob: -16.625
    3. ' ' → logprob: -16.875
    4. '```' → logprob: -17.75
    5. '   ' → logprob: -18.75
    6. '0' → logprob: -20.125
    7. '           ' → logprob: -20.125
    8. '`' → logprob: -20.1875
    9. '       ' → logprob: -20.4375
    10. '                   ' → logprob: -20.9375

Token 1542: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6371639966964722
    2. '                   ' → logprob: -0.8871639966964722
    3. ':' → logprob: -3.6371641159057617
    4. '               ' → logprob: -4.512164115905762
    5. '                       ' → logprob: -4.762164115905762
    6. '):
' → logprob: -5.762164115905762
    7. '<|end|>' → logprob: -5.762164115905762
    8. '                           ' → logprob: -6.512164115905762
    9. '=' → logprob: -6.762164115905762
    10. ' =' → logprob: -7.512164115905762

Token 1543: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005114490049891174
    2. '                       ' → logprob: -7.875511646270752
    3. '               ' → logprob: -9.625511169433594
    4. '                           ' → logprob: -10.750511169433594
    5. '           ' → logprob: -10.875511169433594
    6. '                    ' → logprob: -12.125511169433594
    7. '                  ' → logprob: -12.250511169433594
    8. '```' → logprob: -12.500511169433594
    9. '                ' → logprob: -12.875511169433594
    10. '       ' → logprob: -13.000511169433594

Token 1544: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.10046447813510895
    2. ' dist' → logprob: -2.3504645824432373
    3. '                   ' → logprob: -8.475464820861816
    4. 'queue' → logprob: -10.600464820861816
    5. '                       ' → logprob: -11.225464820861816
    6. '```' → logprob: -11.975464820861816
    7. ' queue' → logprob: -12.600464820861816
    8. '                           ' → logprob: -15.100464820861816
    9. '	dist' → logprob: -15.100464820861816
    10. '               ' → logprob: -15.225464820861816

Token 1545: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00020175233657937497
    2. 'n' → logprob: -9.375202178955078
    3. '[cur' → logprob: -9.750202178955078
    4. '[next' → logprob: -11.000202178955078
    5. '=' → logprob: -11.250202178955078
    6. '=n' → logprob: -11.750202178955078
    7. 'cur' → logprob: -12.125202178955078
    8. '[
' → logprob: -12.500202178955078
    9. '[' → logprob: -12.500202178955078
    10. '```' → logprob: -12.625202178955078

Token 1546: 'xt' (ID: 711)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.40976208448410034
    2. '[n' → logprob: -1.1597621440887451
    3. 'ext' → logprob: -4.784761905670166
    4. ' nxt' → logprob: -5.284761905670166
    5. 'xt' → logprob: -5.784761905670166
    6. '   ' → logprob: -6.909761905670166
    7. '[next' → logprob: -6.909761905670166
    8. 'x' → logprob: -7.034761905670166
    9. '```' → logprob: -7.409761905670166
    10. 't' → logprob: -7.534761905670166

Token 1547: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29303598403930664
    2. '=' → logprob: -1.6680359840393066
    3. ']' → logprob: -2.7930359840393066
    4. ']=' → logprob: -5.543035984039307
    5. '                   ' → logprob: -9.418035507202148
    6. ')' → logprob: -9.793035507202148
    7. ' ]' → logprob: -10.043035507202148
    8. '[' → logprob: -11.668035507202148
    9. '```' → logprob: -11.668035507202148
    10. ')=' → logprob: -11.918035507202148

Token 1548: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326186656951904
    2. ' =' → logprob: -1.313261866569519
    3. '=
' → logprob: -16.438261032104492
    4. '＝' → logprob: -17.563261032104492
    5. ' =
' → logprob: -17.938261032104492
    6. '=int' → logprob: -18.313261032104492
    7. ')' → logprob: -18.563261032104492
    8. '```' → logprob: -18.688261032104492
    9. '.=' → logprob: -18.688261032104492
    10. ']=' → logprob: -18.938261032104492

Token 1549: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0009115827269852161
    2. ' dist' → logprob: -7.000911712646484
    3. '	dist' → logprob: -16.875911712646484
    4. '                   ' → logprob: -17.250911712646484
    5. '                       ' → logprob: -19.000911712646484
    6. '   ' → logprob: -19.000911712646484
    7. '               ' → logprob: -19.125911712646484
    8. 'd' → logprob: -19.125911712646484
    9. '(dist' → logprob: -19.875911712646484
    10. '```' → logprob: -20.500911712646484

Token 1550: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -0.002061522798612714
    2. '[' → logprob: -6.627061367034912
    3. '[n' → logprob: -7.752061367034912
    4. '+' → logprob: -8.62706184387207
    5. 'cur' → logprob: -10.37706184387207
    6. '[
' → logprob: -10.75206184387207
    7. '```' → logprob: -10.75206184387207
    8. '[next' → logprob: -11.25206184387207
    9. ' +' → logprob: -11.50206184387207
    10. '1' → logprob: -12.25206184387207

Token 1551: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16051636636257172
    2. ' +' → logprob: -1.910516381263733
    3. ']+' → logprob: -8.285516738891602
    4. ']' → logprob: -10.285516738891602
    5. '[' → logprob: -13.035516738891602
    6. ')+' → logprob: -14.035516738891602
    7. '                   ' → logprob: -14.285516738891602
    8. '   ' → logprob: -14.410516738891602
    9. '+]' → logprob: -15.035516738891602
    10. '+
' → logprob: -15.285516738891602

Token 1552: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014163628220558167
    2. ' +' → logprob: -4.264163494110107
    3. '+
' → logprob: -16.389163970947266
    4. '```' → logprob: -18.264163970947266
    5. '1' → logprob: -18.764163970947266
    6. '＋' → logprob: -18.889163970947266
    7. ']+' → logprob: -19.264163970947266
    8. '()+' → logprob: -19.389163970947266
    9. ')+' → logprob: -19.639163970947266
    10. ' ' → logprob: -19.889163970947266

Token 1553: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -16.250001907348633
    4. '```' → logprob: -16.625001907348633
    5. '2' → logprob: -18.687501907348633
    6. '
' → logprob: -18.812501907348633
    7. '           ' → logprob: -19.375001907348633
    8. '0' → logprob: -19.812501907348633
    9. '       ' → logprob: -20.000001907348633
    10. '`' → logprob: -20.312501907348633

Token 1554: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -17.625
    4. '   ' → logprob: -17.875
    5. '2' → logprob: -19.375
    6. '=' → logprob: -21.3125
    7. '`' → logprob: -21.4375
    8. '
' → logprob: -21.5
    9. '+' → logprob: -21.5
    10. '0' → logprob: -21.875

Token 1555: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00012570773833431304
    2. '```' → logprob: -9.500125885009766
    3. '               ' → logprob: -11.375125885009766
    4. '                       ' → logprob: -11.625125885009766
    5. 'queue' → logprob: -11.875125885009766
    6. '<|end|>' → logprob: -12.000125885009766
    7. '           ' → logprob: -12.250125885009766
    8. '				' → logprob: -13.000125885009766
    9. '
' → logprob: -13.250125885009766
    10. '                           ' → logprob: -13.500125885009766

Token 1556: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -8.625866030342877e-05
    2. '```' → logprob: -9.625085830688477
    3. '                       ' → logprob: -12.125085830688477
    4. '               ' → logprob: -12.125085830688477
    5. '           ' → logprob: -13.250085830688477
    6. '				' → logprob: -13.250085830688477
    7. '<|end|>' → logprob: -13.875085830688477
    8. '                  ' → logprob: -13.875085830688477
    9. '                           ' → logprob: -14.375085830688477
    10. 'queue' → logprob: -14.625085830688477

Token 1557: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -1.5048530030981055e-06
    2. ' queue' → logprob: -13.500001907348633
    3. '                   ' → logprob: -16.750001907348633
    4. '```' → logprob: -17.250001907348633
    5. '	queue' → logprob: -19.000001907348633
    6. '.queue' → logprob: -21.250001907348633
    7. '               ' → logprob: -21.625001907348633
    8. '           ' → logprob: -21.625001907348633
    9. '   ' → logprob: -21.750001907348633
    10. '(queue' → logprob: -21.750001907348633

Token 1558: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003766919835470617
    2. '.enqueue' → logprob: -8.25037670135498
    3. '.extend' → logprob: -9.62537670135498
    4. '.' → logprob: -10.50037670135498
    5. '.put' → logprob: -12.00037670135498
    6. ').' → logprob: -12.12537670135498
    7. '.Append' → logprob: -13.12537670135498
    8. 'append' → logprob: -13.37537670135498
    9. '```' → logprob: -13.75037670135498
    10. '().' → logprob: -13.87537670135498

Token 1559: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.2200749754119897e-06
    2. 'n' → logprob: -13.500001907348633
    3. '(' → logprob: -14.250001907348633
    4. '(next' → logprob: -16.500001907348633
    5. '((' → logprob: -17.000001907348633
    6. '(
' → logprob: -17.875001907348633
    7. ' (' → logprob: -20.250001907348633
    8. '	n' → logprob: -21.000001907348633
    9. '(nx' → logprob: -21.500001907348633
    10. '[n' → logprob: -22.375001907348633

Token 1560: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: 0.0
    2. 'x' → logprob: -18.375
    3. 'n' → logprob: -18.5
    4. '(n' → logprob: -18.75
    5. '[n' → logprob: -19.0
    6. ' nxt' → logprob: -19.0
    7. 't' → logprob: -19.5
    8. '```' → logprob: -19.875
    9. 'txt' → logprob: -20.0
    10. '[' → logprob: -20.5

Token 1561: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002967320033349097
    2. '<|end|>' → logprob: -8.750296592712402
    3. '               ' → logprob: -9.375296592712402
    4. '       ' → logprob: -11.000296592712402
    5. '                   ' → logprob: -11.500296592712402
    6. ')
' → logprob: -11.750296592712402
    7. '           ' → logprob: -12.250296592712402
    8. '<|end|>' → logprob: -12.375296592712402
    9. ' )' → logprob: -12.875296592712402
    10. '```' → logprob: -13.625296592712402

Token 1562: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49671339988708496
    2. '<|end|>' → logprob: -0.996713399887085
    3. '
' → logprob: -4.871713638305664
    4. '        
' → logprob: -4.871713638305664
    5. '```' → logprob: -5.496713638305664
    6. '<|end|>' → logprob: -6.871713638305664
    7. '        ' → logprob: -7.746713638305664
    8. '	' → logprob: -7.996713638305664
    9. '    
' → logprob: -8.496713638305664
    10. '   ' → logprob: -8.871713638305664

Token 1563: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011448483914136887
    2. '
' → logprob: -5.261448383331299
    3. '        
' → logprob: -6.011448383331299
    4. '```' → logprob: -6.386448383331299
    5. '	' → logprob: -6.761448383331299
    6. '   ' → logprob: -8.261448860168457
    7. '<|end|>' → logprob: -8.636448860168457
    8. '	   ' → logprob: -9.761448860168457
    9. '		
' → logprob: -9.886448860168457
    10. '    
' → logprob: -9.886448860168457

Token 1564: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07536890357732773
    2. 'Q' → logprob: -2.700368881225586
    3. 'q' → logprob: -5.700368881225586
    4. 'n' → logprob: -7.075368881225586
    5. 'k' → logprob: -7.825368881225586
    6. '   ' → logprob: -8.575368881225586
    7. 'N' → logprob: -9.200368881225586
    8. 'num' → logprob: -9.200368881225586
    9. 'K' → logprob: -9.325368881225586
    10. ' Q' → logprob: -9.825368881225586

Token 1565: ' rooms' (ID: 11348)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28370973467826843
    2. ' queries' → logprob: -2.908709764480591
    3. '#' → logprob: -3.783709764480591
    4. ' #' → logprob: -3.908709764480591
    5. ' Q' → logprob: -3.908709764480591
    6. 'Q' → logprob: -4.283709526062012
    7. 'queries' → logprob: -4.408709526062012
    8. ' for' → logprob: -4.533709526062012
    9. 'for' → logprob: -4.783709526062012
    10. 'q' → logprob: -5.033709526062012

Token 1566: ' are' (ID: 553)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4281037449836731
    2. '=' → logprob: -2.0531036853790283
    3. ' =' → logprob: -2.1781036853790283
    4. ':' → logprob: -3.4281036853790283
    5. 'points' → logprob: -4.303103923797607
    6. ',' → logprob: -4.553103923797607
    7. '#' → logprob: -5.053103923797607
    8. 'for' → logprob: -5.428103923797607
    9. '_points' → logprob: -5.553103923797607
    10. '   ' → logprob: -5.678103923797607

Token 1567: ' faces' (ID: 22060)
  Prédit: '[C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[C' → logprob: -0.9037750959396362
    2. '[' → logprob: -1.1537750959396362
    3. 'the' → logprob: -2.653775215148926
    4. '[len' → logprob: -2.778775215148926
    5. 'faces' → logprob: -2.903775215148926
    6. 'dist' → logprob: -3.653775215148926
    7. '       ' → logprob: -4.028775215148926
    8. '```' → logprob: -4.903775215148926
    9. 'C' → logprob: -5.403775215148926
    10. '#' → logprob: -5.653775215148926

Token 1568: ' other' (ID: 1273)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012784743681550026
    2. 'not' → logprob: -5.887784957885742
    3. '```' → logprob: -6.637784957885742
    4. '(not' → logprob: -6.762784957885742
    5. ' that' → logprob: -6.887784957885742
    6. 'that' → logprob: -7.012784957885742
    7. ' =' → logprob: -7.012784957885742
    8. '#' → logprob: -7.137784957885742
    9. 'with' → logprob: -7.137784957885742
    10. ' not' → logprob: -7.887784957885742

Token 1569: ' than' (ID: 1572)
  Prédit: 'than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'than' → logprob: -0.3931049108505249
    2. ' than' → logprob: -1.143104910850525
    3. '           ' → logprob: -5.1431050300598145
    4. '       ' → logprob: -8.768104553222656
    5. '               ' → logprob: -9.143104553222656
    6. '
' → logprob: -9.643104553222656
    7. '          ' → logprob: -11.768104553222656
    8. 'that' → logprob: -11.893104553222656
    9. '        ' → logprob: -11.893104553222656
    10. '   ' → logprob: -12.143104553222656

Token 1570: ' outside' (ID: 7539)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outside' → logprob: -0.00016432604752480984
    2. ' outside' → logprob: -9.000164031982422
    3. 'the' → logprob: -10.250164031982422
    4. '```' → logprob: -12.875164031982422
    5. '[out' → logprob: -13.625164031982422
    6. '       ' → logprob: -13.750164031982422
    7. '
' → logprob: -15.000164031982422
    8. '``' → logprob: -16.000164031982422
    9. 'out' → logprob: -16.125164031982422
    10. '`' → logprob: -16.375164031982422

Token 1571: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006926477886736393
    2. '        
' → logprob: -5.256926536560059
    3. '
' → logprob: -7.631926536560059
    4. '<|end|>' → logprob: -8.006926536560059
    5. '	' → logprob: -8.506926536560059
    6. '		
' → logprob: -9.006926536560059
    7. ',' → logprob: -9.131926536560059
    8. '```' → logprob: -9.381926536560059
    9. '<|end|>' → logprob: -9.381926536560059
    10. '   ' → logprob: -9.881926536560059

Token 1572: 'outside' (ID: 141623)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6252117156982422
    2. '       ' → logprob: -1.7502117156982422
    3. '#' → logprob: -2.500211715698242
    4. ')' → logprob: -2.750211715698242
    5. '
' → logprob: -3.875211715698242
    6. ')
' → logprob: -3.875211715698242
    7. 'faces' → logprob: -4.250211715698242
    8. 'for' → logprob: -4.750211715698242
    9. 'outside' → logprob: -4.750211715698242
    10. '           ' → logprob: -5.125211715698242

Token 1573: ' face' (ID: 4950)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.1579936444759369
    2. ')' → logprob: -2.6579935550689697
    3. ')
' → logprob: -4.157993793487549
    4. 'and' → logprob: -4.282993793487549
    5. ' and' → logprob: -4.532993793487549
    6. ',' → logprob: -4.532993793487549
    7. '```' → logprob: -4.657993793487549
    8. 'index' → logprob: -5.157993793487549
    9. '),' → logprob: -6.282993793487549
    10. '):
' → logprob: -6.657993793487549

Token 1574: ' index' (ID: 3472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8483704328536987
    2. ')' → logprob: -1.5983704328536987
    3. ' and' → logprob: -1.5983704328536987
    4. 'and' → logprob: -2.2233705520629883
    5. ',' → logprob: -3.9733705520629883
    6. ')
' → logprob: -4.348370552062988
    7. ').' → logprob: -4.723370552062988
    8. '),' → logprob: -5.098370552062988
    9. ' that' → logprob: -5.598370552062988
    10. '```' → logprob: -6.098370552062988

Token 1575: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8686708211898804
    2. ')' → logprob: -1.2436708211898804
    3. ')
' → logprob: -2.36867094039917
    4. 'and' → logprob: -2.49367094039917
    5. ' and' → logprob: -3.36867094039917
    6. ').' → logprob: -4.36867094039917
    7. ' is' → logprob: -4.36867094039917
    8. '),' → logprob: -4.49367094039917
    9. 'is' → logprob: -4.74367094039917
    10. '!=' → logprob: -4.86867094039917

Token 1576: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011534435179783031
    2. '```' → logprob: -10.125115394592285
    3. '
' → logprob: -10.250115394592285
    4. '<|end|>' → logprob: -11.250115394592285
    5. '   ' → logprob: -11.375115394592285
    6. '        
' → logprob: -12.000115394592285
    7. 'for' → logprob: -12.750115394592285
    8. ' for' → logprob: -12.875115394592285
    9. '#' → logprob: -13.625115394592285
    10. '           ' → logprob: -14.000115394592285

Token 1577: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21158084273338318
    2. 'for' → logprob: -2.336580753326416
    3. 'query' → logprob: -2.711580753326416
    4. '```' → logprob: -4.711580753326416
    5. 'points' → logprob: -5.086580753326416
    6. 'queries' → logprob: -5.211580753326416
    7. 'q' → logprob: -6.961580753326416
    8. '
' → logprob: -7.336580753326416
    9. 'room' → logprob: -7.586580753326416
    10. ' for' → logprob: -7.836580753326416

Token 1578: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016086915275081992
    2. 'for' → logprob: -8.875161170959473
    3. '   ' → logprob: -11.875161170959473
    4. '```' → logprob: -12.125161170959473
    5. ' for' → logprob: -12.250161170959473
    6. '           ' → logprob: -13.500161170959473
    7. 'num' → logprob: -14.625161170959473
    8. '#' → logprob: -15.500161170959473
    9. 'queries' → logprob: -15.625161170959473
    10. 'query' → logprob: -15.750161170959473

Token 1579: ' any' (ID: 1062)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.25024670362472534
    2. '_' → logprob: -2.62524676322937
    3. '_face' → logprob: -3.62524676322937
    4. ' p' → logprob: -4.125246524810791
    5. '_query' → logprob: -4.125246524810791
    6. '_room' → logprob: -4.500246524810791
    7. ' face' → logprob: -4.625246524810791
    8. ' q' → logprob: -4.750246524810791
    9. 'p' → logprob: -4.750246524810791
    10. '   ' → logprob: -5.375246524810791

Token 1580: ' room' (ID: 3435)
  Prédit: ' face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' face' → logprob: -0.4471687972545624
    2. 'face' → logprob: -1.8221688270568848
    3. ' room' → logprob: -2.1971688270568848
    4. ' p' → logprob: -3.5721688270568848
    5. 'f' → logprob: -4.072168827056885
    6. 'room' → logprob: -4.447168827056885
    7. 'p' → logprob: -5.072168827056885
    8. ' f' → logprob: -5.197168827056885
    9. ' i' → logprob: -5.322168827056885
    10. '   ' → logprob: -5.572168827056885

Token 1581: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1678334474563599
    2. ',' → logprob: -1.7928334474563599
    3. ' in' → logprob: -2.4178333282470703
    4. ' face' → logprob: -2.6678333282470703
    5. 'face' → logprob: -2.7928333282470703
    6. ' not' → logprob: -2.9178333282470703
    7. 'f' → logprob: -3.1678333282470703
    8. 'not' → logprob: -3.6678333282470703
    9. 'index' → logprob: -3.7928333282470703
    10. ' (' → logprob: -3.9178333282470703

Token 1582: 'face' (ID: 2300)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.4076422154903412
    2. 'p' → logprob: -1.2826422452926636
    3. ' point' → logprob: -3.907642126083374
    4. 'point' → logprob: -4.407642364501953
    5. ')' → logprob: -4.782642364501953
    6. ' face' → logprob: -5.532642364501953
    7. 'f' → logprob: -6.032642364501953
    8. 'i' → logprob: -6.157642364501953
    9. '       ' → logprob: -6.407642364501953
    10. ' i' → logprob: -6.657642364501953

Token 1583: '),' (ID: 936)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -1.0822844505310059
    2. 'index' → logprob: -1.0822844505310059
    3. ' not' → logprob: -2.582284450531006
    4. '!=' → logprob: -2.582284450531006
    5. 'not' → logprob: -2.957284450531006
    6. 'other' → logprob: -3.832284450531006
    7. ')' → logprob: -3.957284450531006
    8. ' other' → logprob: -4.082284450531006
    9. ' index' → logprob: -4.332284450531006
    10. 'except' → logprob: -4.457284450531006

Token 1584: ' the' (ID: 290)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6813698410987854
    2. '#' → logprob: -1.8063697814941406
    3. '       ' → logprob: -1.8063697814941406
    4. 'if' → logprob: -2.4313697814941406
    5. ' #' → logprob: -4.306369781494141
    6. ' for' → logprob: -4.931369781494141
    7. ' p' → logprob: -5.056369781494141
    8. '```' → logprob: -5.306369781494141
    9. ' point' → logprob: -5.431369781494141
    10. ' its' → logprob: -5.556369781494141

Token 1585: ' minimal' (ID: 19957)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0339421033859253
    2. ' point' → logprob: -1.6589421033859253
    3. 'token' → logprob: -2.533942222595215
    4. 'point' → logprob: -2.908942222595215
    5. ' token' → logprob: -3.033942222595215
    6. '       ' → logprob: -3.283942222595215
    7. 'x' → logprob: -3.408942222595215
    8. ' #' → logprob: -3.408942222595215
    9. ' x' → logprob: -3.658942222595215
    10. ' if' → logprob: -3.908942222595215

Token 1586: ' holes' (ID: 30416)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.43128809332847595
    2. ' distance' → logprob: -1.6812881231307983
    3. 'distance' → logprob: -2.181288003921509
    4. ' wall' → logprob: -4.806288242340088
    5. 'number' → logprob: -4.806288242340088
    6. ' token' → logprob: -4.931288242340088
    7. ' #' → logprob: -5.056288242340088
    8. 'token' → logprob: -5.431288242340088
    9. ' space' → logprob: -6.306288242340088
    10. 'wall' → logprob: -6.431288242340088

Token 1587: ' passed' (ID: 10292)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.165406346321106
    2. 'needed' → logprob: -1.165406346321106
    3. ' to' → logprob: -1.415406346321106
    4. '_to' → logprob: -2.7904062271118164
    5. '=' → logprob: -3.5404062271118164
    6. 'required' → logprob: -4.790406227111816
    7. '+' → logprob: -5.040406227111816
    8. ' =' → logprob: -5.165406227111816
    9. '_needed' → logprob: -5.790406227111816
    10. '_required' → logprob: -5.915406227111816

Token 1588: ' to' (ID: 316)
  Prédit: 'through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'through' → logprob: -0.07760100811719894
    2. 'to' → logprob: -3.0776009559631348
    3. ' through' → logprob: -4.452600955963135
    4. '+' → logprob: -4.452600955963135
    5. 'is' → logprob: -6.827600955963135
    6. '=' → logprob: -6.827600955963135
    7. ' is' → logprob: -7.077600955963135
    8. ' to' → logprob: -7.077600955963135
    9. 'for' → logprob: -7.952600955963135
    10. '#' → logprob: -7.952600955963135

Token 1589: ' go' (ID: 810)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'go' → logprob: -0.8112291693687439
    2. 'escape' → logprob: -1.4362292289733887
    3. 'exit' → logprob: -1.6862292289733887
    4. 'get' → logprob: -2.6862292289733887
    5. 'enter' → logprob: -3.5612292289733887
    6. 'reach' → logprob: -3.8112292289733887
    7. 'pass' → logprob: -4.811229228973389
    8. 'outside' → logprob: -5.936229228973389
    9. 'cross' → logprob: -6.811229228973389
    10. ' go' → logprob: -7.936229228973389

Token 1590: ' outside' (ID: 7539)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outside' → logprob: -0.035273533314466476
    2. ' outside' → logprob: -4.160273551940918
    3. 'through' → logprob: -4.410273551940918
    4. 'out' → logprob: -6.035273551940918
    5. ' through' → logprob: -6.160273551940918
    6. 'to' → logprob: -6.910273551940918
    7. 'inside' → logprob: -7.660273551940918
    8. '           ' → logprob: -8.160273551940918
    9. '               ' → logprob: -8.785273551940918
    10. '       ' → logprob: -9.035273551940918

Token 1591: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25749632716178894
    2. '<|end|>' → logprob: -1.6324963569641113
    3. '<|end|>' → logprob: -4.507496356964111
    4. '        
' → logprob: -4.632496356964111
    5. ' is' → logprob: -5.132496356964111
    6. '```' → logprob: -6.882496356964111
    7. '
' → logprob: -6.882496356964111
    8. ',' → logprob: -7.132496356964111
    9. '...' → logprob: -7.882496356964111
    10. '#' → logprob: -8.382495880126953

Token 1592: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.47460445761680603
    2. ' dist' → logprob: -0.9746044874191284
    3. '       ' → logprob: -8.599604606628418
    4. 'min' → logprob: -9.724604606628418
    5. 'max' → logprob: -9.974604606628418
    6. '           ' → logprob: -10.099604606628418
    7. '```' → logprob: -10.474604606628418
    8. ' max' → logprob: -10.599604606628418
    9. 'len' → logprob: -10.599604606628418
    10. ' min' → logprob: -10.599604606628418

Token 1593: '[' (ID: 58)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09548982232809067
    2. '        
' → logprob: -2.845489740371704
    3. '
' → logprob: -3.845489740371704
    4. '<|end|>' → logprob: -4.970489978790283
    5. '<|end|>' → logprob: -6.720489978790283
    6. '		
' → logprob: -7.095489978790283
    7. '```' → logprob: -7.720489978790283
    8. '	' → logprob: -7.970489978790283
    9. ',' → logprob: -8.095489501953125
    10. '        
        
' → logprob: -8.720489501953125

Token 1594: 'face' (ID: 2300)
  Prédit: 'face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.3181910216808319
    2. 'fi' → logprob: -2.3181910514831543
    3. 'f' → logprob: -3.0681910514831543
    4. ']' → logprob: -3.8181910514831543
    5. '```' → logprob: -4.568191051483154
    6. '[' → logprob: -4.693191051483154
    7. 'room' → logprob: -4.818191051483154
    8. '(face' → logprob: -5.193191051483154
    9. 'that' → logprob: -5.318191051483154
    10. '_face' → logprob: -5.318191051483154

Token 1595: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14055827260017395
    2. '[' → logprob: -2.1405582427978516
    3. ']+' → logprob: -4.640558242797852
    4. '[f' → logprob: -6.640558242797852
    5. ']-' → logprob: -7.515558242797852
    6. ']
' → logprob: -7.515558242797852
    7. '])' → logprob: -8.015558242797852
    8. '[i' → logprob: -8.640558242797852
    9. ')' → logprob: -8.640558242797852
    10. '(face' → logprob: -8.765558242797852

Token 1596: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10572602599859238
    2. '<|end|>' → logprob: -2.4807260036468506
    3. '        
' → logprob: -4.60572624206543
    4. '<|end|>' → logprob: -5.98072624206543
    5. '
' → logprob: -6.10572624206543
    6. '	' → logprob: -7.73072624206543
    7. '   ' → logprob: -7.73072624206543
    8. '```' → logprob: -8.23072624206543
    9. '    
' → logprob: -9.23072624206543
    10. '		
' → logprob: -9.23072624206543

Token 1597: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010778029449284077
    2. '```' → logprob: -5.760777950286865
    3. 'query' → logprob: -6.135777950286865
    4. 'point' → logprob: -6.885777950286865
    5. 'p' → logprob: -7.135777950286865
    6. 'q' → logprob: -7.260777950286865
    7. 'for' → logprob: -7.260777950286865
    8. 'Q' → logprob: -8.010778427124023
    9. 'while' → logprob: -8.260778427124023
    10. '   ' → logprob: -8.385778427124023

Token 1598: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012716127559542656
    2. 'q' → logprob: -5.512716293334961
    3. 'Q' → logprob: -5.887716293334961
    4. 'n' → logprob: -6.262716293334961
    5. 'for' → logprob: -7.012716293334961
    6. '```' → logprob: -7.012716293334961
    7. '   ' → logprob: -7.262716293334961
    8. 'query' → logprob: -8.637716293334961
    9. 'p' → logprob: -8.762716293334961
    10. 't' → logprob: -8.887716293334961

Token 1599: ' want' (ID: 1682)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02112717553973198
    2. ' continue' → logprob: -5.146127223968506
    3. ' for' → logprob: -5.396127223968506
    4. 'for' → logprob: -6.271127223968506
    5. 'continue' → logprob: -6.271127223968506
    6. '   ' → logprob: -6.396127223968506
    7. ' find' → logprob: -7.396127223968506
    8. ' have' → logprob: -7.396127223968506
    9. '#' → logprob: -7.771127223968506
    10. ' want' → logprob: -8.021126747131348

Token 1600: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0624579191207886
    2. 'to' → logprob: -1.1874579191207886
    3. ' to' → logprob: -1.5624579191207886
    4. 'for' → logprob: -2.812458038330078
    5. 'points' → logprob: -3.062458038330078
    6. 'the' → logprob: -4.937458038330078
    7. ' for' → logprob: -5.062458038330078
    8. '```' → logprob: -5.687458038330078
    9. ' points' → logprob: -5.812458038330078
    10. 'count' → logprob: -6.437458038330078

Token 1601: ' maximum' (ID: 10562)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24877279996871948
    2. '#' → logprob: -3.4987728595733643
    3. 'room' → logprob: -3.6237728595733643
    4. ' room' → logprob: -3.8737728595733643
    5. 'holes' → logprob: -3.8737728595733643
    6. ' number' → logprob: -4.748772621154785
    7. 'number' → logprob: -4.748772621154785
    8. 'faces' → logprob: -4.873772621154785
    9. ' #' → logprob: -4.873772621154785
    10. 'max' → logprob: -5.123772621154785

Token 1602: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11564457416534424
    2. 'room' → logprob: -3.1156444549560547
    3. ' room' → logprob: -4.240644454956055
    4. '```' → logprob: -4.740644454956055
    5. 'max' → logprob: -5.240644454956055
    6. 'distance' → logprob: -5.365644454956055
    7. '
' → logprob: -5.365644454956055
    8. ' max' → logprob: -5.490644454956055
    9. '        
' → logprob: -5.490644454956055
    10. 'dist' → logprob: -5.615644454956055

Token 1603: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.007385601755231619
    2. '(dist' → logprob: -5.257385730743408
    3. '[' → logprob: -7.257385730743408
    4. ' dist' → logprob: -7.382385730743408
    5. 'd' → logprob: -7.507385730743408
    6. '[d' → logprob: -9.75738525390625
    7. '   ' → logprob: -9.88238525390625
    8. '[i' → logprob: -10.25738525390625
    9. '[
' → logprob: -10.50738525390625
    10. 'max' → logprob: -10.75738525390625

Token 1604: ' over' (ID: 1072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0667455643415451
    2. ' =' → logprob: -3.3167455196380615
    3. ',' → logprob: -4.816745758056641
    4. '
' → logprob: -5.191745758056641
    5. '        
' → logprob: -5.816745758056641
    6. '<|end|>' → logprob: -6.191745758056641
    7. '=' → logprob: -6.816745758056641
    8. 'max' → logprob: -6.941745758056641
    9. '<|end|>' → logprob: -7.441745758056641
    10. '_faces' → logprob: -7.566745758056641

Token 1605: ' all' (ID: 722)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.6547775864601135
    2. 'face' → logprob: -1.7797775268554688
    3. '[' → logprob: -2.1547775268554688
    4. 'range' → logprob: -2.5297775268554688
    5. '[i' → logprob: -2.9047775268554688
    6. 'f' → logprob: -4.029777526855469
    7. ' faces' → logprob: -4.529777526855469
    8. ' [' → logprob: -4.904777526855469
    9. ' range' → logprob: -5.154777526855469
    10. '[f' → logprob: -5.654777526855469

Token 1606: ' rooms' (ID: 11348)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.49497950077056885
    2. 'face' → logprob: -1.4949795007705688
    3. 'room' → logprob: -2.3699793815612793
    4. 'f' → logprob: -3.6199793815612793
    5. 'range' → logprob: -4.494979381561279
    6. '[' → logprob: -4.744979381561279
    7. 'for' → logprob: -4.869979381561279
    8. '(face' → logprob: -5.869979381561279
    9. ' faces' → logprob: -6.244979381561279
    10. 'rooms' → logprob: -6.244979381561279

Token 1607: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022796733304858208
    2. '        
' → logprob: -5.022796630859375
    3. ',' → logprob: -5.397796630859375
    4. '
' → logprob: -5.647796630859375
    5. '<|end|>' → logprob: -5.897796630859375
    6. '```' → logprob: -6.147796630859375
    7. '	' → logprob: -7.897796630859375
    8. 'max' → logprob: -8.522796630859375
    9. '<|end|>' → logprob: -8.522796630859375
    10. '   ' → logprob: -8.835296630859375

Token 1608: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020523909479379654
    2. '
' → logprob: -4.645524024963379
    3. '        
' → logprob: -4.895524024963379
    4. '```' → logprob: -6.395524024963379
    5. '<|end|>' → logprob: -7.020524024963379
    6. ',' → logprob: -8.395524024963379
    7. '    
' → logprob: -10.020524024963379
    8. ',
' → logprob: -10.145524024963379
    9. '<|end|>' → logprob: -10.145524024963379
    10. '   ' → logprob: -10.520524024963379

Token 1609: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.3646462857723236
    2. '       ' → logprob: -1.239646315574646
    3. 'answer' → logprob: -4.7396464347839355
    4. 'result' → logprob: -6.2396464347839355
    5. 'print' → logprob: -6.6146464347839355
    6. 'maximum' → logprob: -7.2396464347839355
    7. 'res' → logprob: -7.3646464347839355
    8. 'rooms' → logprob: -7.3646464347839355
    9. 'ans' → logprob: -8.114645957946777
    10. 'room' → logprob: -8.114645957946777

Token 1610: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.07519222050905228
    2. '_' → logprob: -2.8251922130584717
    3. '_depth' → logprob: -5.200192451477051
    4. '_room' → logprob: -5.950192451477051
    5. '_distance' → logprob: -6.450192451477051
    6. '_face' → logprob: -6.575192451477051
    7. '_d' → logprob: -7.075192451477051
    8. 'dist' → logprob: -7.325192451477051
    9. '_faces' → logprob: -9.45019245147705
    10. '_h' → logprob: -9.45019245147705

Token 1611: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32373473048210144
    2. '=' → logprob: -1.3237347602844238
    3. '=max' → logprob: -4.573734760284424
    4. ')' → logprob: -10.448734283447266
    5. '[' → logprob: -10.948734283447266
    6. '(max' → logprob: -11.073734283447266
    7. '[max' → logprob: -11.698734283447266
    8. ' max' → logprob: -12.323734283447266
    9. 'max' → logprob: -12.448734283447266
    10. '   ' → logprob: -12.698734283447266

Token 1612: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3350834846496582
    2. ' max' → logprob: -1.8350834846496582
    3. '0' → logprob: -2.085083484649658
    4. ' ' → logprob: -7.335083484649658
    5. '   ' → logprob: -9.8350830078125
    6. '-' → logprob: -9.9600830078125
    7. '(max' → logprob: -10.7100830078125
    8. '-max' → logprob: -10.8350830078125
    9. ' -' → logprob: -11.2100830078125
    10. '	max' → logprob: -11.9600830078125

Token 1613: '([' (ID: 5194)
  Prédit: '(dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.1340486705303192
    2. '([' → logprob: -2.1340487003326416
    3. '(d' → logprob: -5.1340484619140625
    4. 'dist' → logprob: -7.1340484619140625
    5. '(i' → logprob: -9.134048461914062
    6. '(' → logprob: -9.134048461914062
    7. '(x' → logprob: -9.384048461914062
    8. '(filter' → logprob: -9.759048461914062
    9. '(
' → logprob: -10.884048461914062
    10. '([-' → logprob: -11.759048461914062

Token 1614: 'dist' (ID: 24126)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.20306329429149628
    2. 'dist' → logprob: -1.7030632495880127
    3. '(dist' → logprob: -7.078063488006592
    4. '(d' → logprob: -7.453063488006592
    5. '0' → logprob: -9.203063011169434
    6. 'x' → logprob: -9.328063011169434
    7. '(x' → logprob: -10.828063011169434
    8. '(' → logprob: -12.203063011169434
    9. ' dist' → logprob: -12.453063011169434
    10. ' d' → logprob: -12.703063011169434

Token 1615: '[i' (ID: 1768)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5338965654373169
    2. 'i' → logprob: -1.283896565437317
    3. '[i' → logprob: -2.0338964462280273
    4. '(f' → logprob: -6.283896446228027
    5. 'for' → logprob: -7.158896446228027
    6. '(fi' → logprob: -7.283896446228027
    7. 'f' → logprob: -7.408896446228027
    8. '(' → logprob: -8.033896446228027
    9. 'fi' → logprob: -8.033896446228027
    10. '   ' → logprob: -8.158896446228027

Token 1616: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1031569093465805
    2. 'for' → logprob: -2.353156805038452
    3. ']' → logprob: -5.978157043457031
    4. 'i' → logprob: -8.603157043457031
    5. ' i' → logprob: -8.728157043457031
    6. 'if' → logprob: -10.728157043457031
    7. ' if' → logprob: -10.853157043457031
    8. ']+' → logprob: -11.978157043457031
    9. ')' → logprob: -12.228157043457031
    10. '])' → logprob: -12.853157043457031

Token 1617: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.018182020634412766
    2. 'for' → logprob: -4.018181800842285
    3. ' if' → logprob: -11.143181800842285
    4. ' i' → logprob: -11.393181800842285
    5. 'i' → logprob: -12.768181800842285
    6. 'if' → logprob: -12.893181800842285
    7. ' ' → logprob: -14.643181800842285
    8. '	for' → logprob: -15.768181800842285
    9. '```' → logprob: -16.6431827545166
    10. '[i' → logprob: -17.0181827545166

Token 1618: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003357006062287837
    2. ' i' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.125335693359375
    4. 'range' → logprob: -16.125335693359375
    5. '
' → logprob: -17.625335693359375
    6. ' ' → logprob: -17.875335693359375
    7. ' range' → logprob: -18.250335693359375
    8. ' ' → logprob: -18.625335693359375
    9. '	i' → logprob: -18.875335693359375
    10. '  ' → logprob: -20.000335693359375

Token 1619: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1636614054441452
    2. 'in' → logprob: -1.9136613607406616
    3. 'i' → logprob: -5.788661479949951
    4. ' i' → logprob: -7.913661479949951
    5. 'not' → logprob: -13.788661003112793
    6. ' ' → logprob: -14.538661003112793
    7. '
' → logprob: -14.913661003112793
    8. 'range' → logprob: -14.913661003112793
    9. ' not' → logprob: -15.538661003112793
    10. ',i' → logprob: -15.538661003112793

Token 1620: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.493430894101039e-05
    2. ' range' → logprob: -9.500075340270996
    3. '(range' → logprob: -18.37507438659668
    4. '
' → logprob: -18.50007438659668
    5. 'i' → logprob: -20.00007438659668
    6. '   ' → logprob: -20.62507438659668
    7. '	range' → logprob: -21.50007438659668
    8. '[' → logprob: -22.62507438659668
    9. ' ' → logprob: -22.75007438659668
    10. '`' → logprob: -23.37507438659668

Token 1621: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.6805616617202759
    2. 'len' → logprob: -0.8055616617202759
    3. '(' → logprob: -3.1805615425109863
    4. '1' → logprob: -5.555561542510986
    5. '(i' → logprob: -6.930561542510986
    6. ' len' → logprob: -8.305562019348145
    7. 'i' → logprob: -9.305562019348145
    8. ' (' → logprob: -11.055562019348145
    9. '(C' → logprob: -11.305562019348145
    10. '0' → logprob: -11.430562019348145

Token 1622: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.008114391006529331
    2. '(' → logprob: -5.633114337921143
    3. '(len' → logprob: -6.008114337921143
    4. 'faces' → logprob: -6.758114337921143
    5. '(
' → logprob: -7.633114337921143
    6. '(dist' → logprob: -8.5081148147583
    7. ' (' → logprob: -9.5081148147583
    8. 'f' → logprob: -10.7581148147583
    9. '(i' → logprob: -10.7581148147583
    10. ' faces' → logprob: -10.8831148147583

Token 1623: 'aces' (ID: 3247)
  Prédit: 'aces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aces' → logprob: -0.39897218346595764
    2. 'faces' → logprob: -1.3989721536636353
    3. '(f' → logprob: -3.023972272872925
    4. '(' → logprob: -4.398972034454346
    5. '(dist' → logprob: -4.898972034454346
    6. '(i' → logprob: -5.773972034454346
    7. '(len' → logprob: -5.773972034454346
    8. ')' → logprob: -6.273972034454346
    9. ' faces' → logprob: -6.398972034454346
    10. ')]' → logprob: -7.023972034454346

Token 1624: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013834332639817148
    2. 'if' → logprob: -9.250138282775879
    3. ' if' → logprob: -11.000138282775879
    4. '           ' → logprob: -11.625138282775879
    5. ')])' → logprob: -12.125138282775879
    6. ' )' → logprob: -12.625138282775879
    7. '       ' → logprob: -13.375138282775879
    8. ')
' → logprob: -13.375138282775879
    9. '
' → logprob: -13.625138282775879
    10. '])' → logprob: -14.125138282775879

Token 1625: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.012517307884991169
    2. 'if' → logprob: -4.38751745223999
    3. '           ' → logprob: -12.262516975402832
    4. '	if' → logprob: -14.137516975402832
    5. '            ' → logprob: -14.137516975402832
    6. '```' → logprob: -15.137516975402832
    7. ' ' → logprob: -15.387516975402832
    8. '               ' → logprob: -15.887516975402832
    9. '        ' → logprob: -16.01251792907715
    10. '          ' → logprob: -16.01251792907715

Token 1626: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01840732805430889
    2. ' i' → logprob: -4.018407344818115
    3. 'faces' → logprob: -8.518406867980957
    4. ' faces' → logprob: -10.018406867980957
    5. '   ' → logprob: -11.643406867980957
    6. '```' → logprob: -14.143406867980957
    7. '           ' → logprob: -14.393406867980957
    8. '    ' → logprob: -14.518406867980957
    9. 'face' → logprob: -14.643406867980957
    10. 'dist' → logprob: -14.893406867980957

Token 1627: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.285098671913147
    2. '!=' → logprob: -1.410098671913147
    3. '<|end|>' → logprob: -6.160098552703857
    4. ']!=' → logprob: -7.535098552703857
    5. '```' → logprob: -8.535099029541016
    6. '[' → logprob: -9.160099029541016
    7. ']' → logprob: -9.285099029541016
    8. 'not' → logprob: -9.410099029541016
    9. '<>' → logprob: -9.410099029541016
    10. ')' → logprob: -9.660099029541016

Token 1628: ' outside' (ID: 7539)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outside' → logprob: -0.0002613358374219388
    2. ' outside' → logprob: -8.250261306762695
    3. '0' → logprob: -18.125261306762695
    4. '
' → logprob: -18.750261306762695
    5. 'out' → logprob: -18.750261306762695
    6. '```' → logprob: -18.875261306762695
    7. '   ' → logprob: -19.250261306762695
    8. '[out' → logprob: -19.500261306762695
    9. '``' → logprob: -20.750261306762695
    10. 'Outside' → logprob: -21.375261306762695

Token 1629: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0002458430244587362
    2. '])' → logprob: -9.125246047973633
    3. ']_' → logprob: -10.250246047973633
    4. '_' → logprob: -10.750246047973633
    5. 'index' → logprob: -10.750246047973633
    6. '_idx' → logprob: -11.625246047973633
    7. '```' → logprob: -11.875246047973633
    8. '])
' → logprob: -11.875246047973633
    9. 'Index' → logprob: -12.250246047973633
    10. '
' → logprob: -12.375246047973633

Token 1630: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0014057096559554338
    2. '])
' → logprob: -6.876405715942383
    3. '       ' → logprob: -8.501405715942383
    4. ' ])' → logprob: -9.251405715942383
    5. 'if' → logprob: -10.751405715942383
    6. ')' → logprob: -11.251405715942383
    7. '],' → logprob: -11.501405715942383
    8. '])

' → logprob: -12.251405715942383
    9. '])+' → logprob: -12.251405715942383
    10. ' if' → logprob: -12.376405715942383

Token 1631: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05171504244208336
    2. '
' → logprob: -3.426715135574341
    3. '   ' → logprob: -4.676714897155762
    4. 'print' → logprob: -4.926714897155762
    5. '        
' → logprob: -7.426714897155762
    6. '<|end|>' → logprob: -8.426714897155762
    7. ' print' → logprob: -9.051714897155762
    8. '```' → logprob: -9.176714897155762
    9. '    
' → logprob: -9.426714897155762
    10. ')' → logprob: -9.676714897155762

Token 1632: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16488897800445557
    2. 'print' (adapté à ' print') → logprob: -2.289888858795166
    3. '
' → logprob: -3.039888858795166
    4. '   ' → logprob: -6.664888858795166
    5. '        
' → logprob: -7.414888858795166
    6. '```' → logprob: -7.914888858795166
    7. ' print' → logprob: -9.039889335632324
    8. '    
' → logprob: -9.289889335632324
    9. '\' → logprob: -10.039889335632324
    10. '           ' → logprob: -10.164889335632324

Token 1633: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.002036656951531768
    2. 'max' → logprob: -6.2520365715026855
    3. '(' → logprob: -9.502037048339844
    4. '(f' → logprob: -10.377037048339844
    5. ' max' → logprob: -13.127037048339844
    6. ' (' → logprob: -16.627037048339844
    7. '('' → logprob: -17.502037048339844
    8. 'f' → logprob: -17.627037048339844
    9. '=max' → logprob: -17.627037048339844
    10. ',max' → logprob: -18.002037048339844

Token 1634: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.03437172621488571
    2. '(' → logprob: -4.159371852874756
    3. '(dist' → logprob: -5.159371852874756
    4. '(max' → logprob: -5.784371852874756
    5. 'Dist' → logprob: -6.034371852874756
    6. '(_' → logprob: -6.284371852874756
    7. '()' → logprob: -6.409371852874756
    8. '_' → logprob: -7.034371852874756
    9. 'dist' → logprob: -7.409371852874756
    10. ')' → logprob: -7.409371852874756

Token 1635: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1041145626222715e-05
    2. ')
' → logprob: -12.875011444091797
    3. '<|end|>' → logprob: -12.875011444091797
    4. '```' → logprob: -13.250011444091797
    5. '())' → logprob: -13.375011444091797
    6. '()' → logprob: -14.250011444091797
    7. '`)' → logprob: -14.625011444091797
    8. ' )' → logprob: -14.875011444091797
    9. '+' → logprob: -15.250011444091797
    10. '
' → logprob: -15.875011444091797

Token 1636: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1637: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.06197575107216835
    2. '__' → logprob: -2.8119757175445557
    3. '_' → logprob: -12.061975479125977
    4. ' _' → logprob: -14.061975479125977
    5. '___' → logprob: -14.311975479125977
    6. ' ___' → logprob: -15.436975479125977
    7. '_name' → logprob: -16.186975479125977
    8. ' ' → logprob: -16.311975479125977
    9. ' ' → logprob: -16.436975479125977
    10. '```' → logprob: -16.436975479125977

Token 1638: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.011337347328662872
    2. '==' → logprob: -4.6363372802734375
    3. ' ==' → logprob: -7.7613372802734375
    4. '```' → logprob: -7.7613372802734375
    5. 'if' → logprob: -8.636337280273438
    6. '__.__' → logprob: -8.761337280273438
    7. '__":
' → logprob: -9.136337280273438
    8. '=="' → logprob: -9.261337280273438
    9. '.__' → logprob: -9.761337280273438
    10. '__':
' → logprob: -11.011337280273438

Token 1639: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005185493268072605
    2. '==' → logprob: -5.380185604095459
    3. '__.__' → logprob: -8.3801851272583
    4. '=="' → logprob: -9.1301851272583
    5. '=='' → logprob: -9.3801851272583
    6. ' ==' → logprob: -10.0051851272583
    7. '```' → logprob: -10.7551851272583
    8. '__('' → logprob: -11.2551851272583
    9. '__.' → logprob: -11.5051851272583
    10. '__["' → logprob: -11.6301851272583

Token 1640: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3230126202106476
    2. '__' → logprob: -1.9480125904083252
    3. ' ==' → logprob: -2.198012590408325
    4. '=="' → logprob: -3.948012590408325
    5. '=='' → logprob: -6.323012828826904
    6. '```' → logprob: -7.698012828826904
    7. '==
' → logprob: -7.948012828826904
    8. '__.__' → logprob: -8.698012351989746
    9. '__":
' → logprob: -9.573012351989746
    10. '.__' → logprob: -9.698012351989746

Token 1641: ' "__' (ID: 27367)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5760306715965271
    2. '"' → logprob: -0.8260306715965271
    3. '__' → logprob: -9.326030731201172
    4. ' "__' → logprob: -13.451030731201172
    5. ' '__' → logprob: -14.701030731201172
    6. '('__' → logprob: -16.951030731201172
    7. '`' → logprob: -17.076030731201172
    8. '   ' → logprob: -17.201030731201172
    9. ''"' → logprob: -17.451030731201172
    10. 'main' → logprob: -17.701030731201172

Token 1642: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.20254190266132355
    2. 'main' → logprob: -1.7025419473648071
    3. '"' → logprob: -6.952541828155518
    4. ''' → logprob: -8.702542304992676
    5. '__":
' → logprob: -13.452542304992676
    6. 'name' → logprob: -13.702542304992676
    7. '_main' → logprob: -13.827542304992676
    8. '___' → logprob: -14.202542304992676
    9. 'built' → logprob: -14.952542304992676
    10. '__
' → logprob: -15.327542304992676

Token 1643: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.09284131228923798
    2. '__' → logprob: -2.467841386795044
    3. '__':
' → logprob: -5.592841148376465
    4. '__:' → logprob: -9.467841148376465
    5. '__["' → logprob: -10.717841148376465
    6. '__.__' → logprob: -11.217841148376465
    7. '__.' → logprob: -11.467841148376465
    8. '==' → logprob: -11.467841148376465
    9. '():
' → logprob: -12.092841148376465
    10. ':' → logprob: -12.592841148376465

Token 1644: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.08997151255607605
    2. '   ' → logprob: -3.4649715423583984
    3. ' main' → logprob: -3.5899715423583984
    4. '	main' → logprob: -4.589971542358398
    5. '    
' → logprob: -4.714971542358398
    6. '```' → logprob: -5.714971542358398
    7. 'run' → logprob: -6.464971542358398
    8. '
' → logprob: -7.839971542358398
    9. '_main' → logprob: -8.089971542358398
    10. '<|end|>' → logprob: -8.089971542358398

Token 1645: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.320199877838604e-07
    2. ' main' → logprob: -15.5
    3. '	main' → logprob: -16.0
    4. '_main' → logprob: -19.875
    5. '   ' → logprob: -20.0
    6. '(main' → logprob: -20.75
    7. '```' → logprob: -22.5
    8. '.main' → logprob: -23.5
    9. 'Main' → logprob: -24.125
    10. '
' → logprob: -24.125

Token 1646: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1644
Tokens correctement prédits (1ère position, stricte): 548
Tokens correctement prédits (1ère position, avec adaptation): 605
Tokens correctement prédits (top 10): 1318
Précision stricte (1ère position): 33.33%
Précision adaptée (1ère position): 36.80%
Précision (top 10): 80.17%
================================================================================
