================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Encoder:
    def __init__(self):
        self.char_to_code = {
            ' ': '101',
            "'": '000000',
            ',': '000011',
            '-': '10010001',
            '.': '010001',
            '?': '000001',
            'A': '100101',
            'B': '10011010',
            'C': '0101',
            'D': '0001',
            'E': '110',
            'F': '01001',
            'G': '10011011',
            'H': '010000',
            'I': '0111',
            'J': '10011000',
            'K': '0110',
            'L': '00100',
            'M': '10011001',
            'N': '10011110',
            'O': '00101',
            'P': '111',
            'Q': '10011111',
            'R': '1000',
            'S': '00110',
            'T': '00111',
            'U': '10011100',
            'V': '10011101',
            'W': '000010',
            'X': '10010010',
            'Y': '10010011',
            'Z': '10010000',
        }

    def encode(self, text: str) -> str:
        encoded_bits = ''.join(self.char_to_code[ch] for ch in text)
        # パディングで5文字区切り
        remainder = len(encoded_bits) % 5
        if remainder != 0:
            encoded_bits += '0' * (5 - remainder)
        return encoded_bits

class Decoder:
    def __init__(self):
        self.code_to_char = {
            '00000': 'A',
            '00001': 'B',
            '00010': 'C',
            '00011': 'D',
            '00100': 'E',
            '00101': 'F',
            '00110': 'G',
            '00111': 'H',
            '01000': 'I',
            '01001': 'J',
            '01010': 'K',
            '01011': 'L',
            '01100': 'M',
            '01101': 'N',
            '01110': 'O',
            '01111': 'P',
            '10000': 'Q',
            '10001': 'R',
            '10010': 'S',
            '10011': 'T',
            '10100': 'U',
            '10101': 'V',
            '10110': 'W',
            '10111': 'X',
            '11000': 'Y',
            '11001': 'Z',
            '11010': ' ',
            '11011': '.',
            '11100': ',',
            '11101': '-',
            '11110': "'",
            '11111': '?',
        }

    def decode(self, bits: str) -> str:
        output_chars = []
        for i in range(0, len(bits), 5):
            chunk = bits[i:i+5]
            char = self.code_to_char.get(chunk, '')
            output_chars.append(char)
        return ''.join(output_chars)

class PeterPiperCipher:
    def __init__(self):
        self.encoder = Encoder()
        self.decoder = Decoder()

    def transform(self, text: str) -> str:
        # 1. Encode input text chars into variable length code bits.
        encoded_bits = self.encoder.encode(text)
        # 2. Split into 5-bit chunks is already represented by encoded_bits padded.
        # 3. Decode each 5-bit chunk using second table.
        return self.decoder.decode(encoded_bits)

def main():
    import sys
    cipher = PeterPiperCipher()
    for line in sys.stdin:
        line = line.strip()
        if line == '':
            continue
        # Input line uppercase is guaranteed per problem statement, otherwise enforce:
        result = cipher.transform(line.upper())
        print(result)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Encoder' (ID: 119259)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5271193385124207
    2. '(' → logprob: -0.9021193385124207
    3. '   ' → logprob: -6.527119159698486
    4. '```' → logprob: -6.652119159698486
    5. '():' → logprob: -7.527119159698486
    6. '(
' → logprob: -8.527119636535645
    7. ':
' → logprob: -8.527119636535645
    8. '.' → logprob: -9.277119636535645
    9. '\' → logprob: -10.402119636535645
    10. ''' → logprob: -10.652119636535645

Token 4: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22824621200561523
    2. '(' → logprob: -1.9782462120056152
    3. '```' → logprob: -3.7282462120056152
    4. ' ' → logprob: -4.728246212005615
    5. '\' → logprob: -5.478246212005615
    6. ':' → logprob: -5.478246212005615
    7. ' def' → logprob: -5.728246212005615
    8. 'def' (adapté à ' def') → logprob: -5.728246212005615
    9. '_' → logprob: -5.853246212005615
    10. 'n' → logprob: -5.978246212005615

Token 5: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6050099730491638
    2. ' encode' → logprob: -2.6050100326538086
    3. '_encode' → logprob: -2.8550100326538086
    4. ' __' → logprob: -2.9800100326538086
    5. '__' → logprob: -3.2300100326538086
    6. ' ' → logprob: -3.3550100326538086
    7. ' process' → logprob: -3.6050100326538086
    8. 'encode' → logprob: -3.7300100326538086
    9. '<|end|>' → logprob: -3.7300100326538086
    10. ' init' → logprob: -3.8550100326538086

Token 6: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.0683535037969705e-05
    2. ' init' → logprob: -11.50001049041748
    3. '_init' → logprob: -14.75001049041748
    4. 'ini' → logprob: -16.250011444091797
    5. '	init' → logprob: -16.875011444091797
    6. 'i' → logprob: -19.750011444091797
    7. '   ' → logprob: -19.875011444091797
    8. 'inite' → logprob: -20.125011444091797
    9. '-init' → logprob: -20.125011444091797
    10. '  ' → logprob: -20.375011444091797

Token 7: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.20216341316699982
    2. '__' → logprob: -1.7021634578704834
    3. '(' → logprob: -8.327163696289062
    4. '__(
' → logprob: -8.327163696289062
    5. '__((' → logprob: -9.327163696289062
    6. '_' → logprob: -9.327163696289062
    7. '(self' → logprob: -10.702163696289062
    8. '__('' → logprob: -10.952163696289062
    9. '___' → logprob: -11.327163696289062
    10. '_(' → logprob: -11.577163696289062

Token 8: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004664193547796458
    2. ' self' → logprob: -7.750466346740723
    3. ')' → logprob: -11.000466346740723
    4. '(self' → logprob: -11.125466346740723
    5. '       ' → logprob: -14.125466346740723
    6. ',self' → logprob: -14.625466346740723
    7. ' )' → logprob: -14.625466346740723
    8. '_self' → logprob: -14.875466346740723
    9. ' ' → logprob: -15.125466346740723
    10. '   ' → logprob: -15.250466346740723

Token 9: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17761602997779846
    2. ')' → logprob: -2.0526161193847656
    3. 'self' → logprob: -4.052616119384766
    4. ' ,' → logprob: -5.677616119384766
    5. '<|end|>' → logprob: -5.677616119384766
    6. '(' → logprob: -5.927616119384766
    7. '_' → logprob: -6.177616119384766
    8. '(self' → logprob: -6.677616119384766
    9. '.' → logprob: -7.052616119384766
    10. '):' → logprob: -7.302616119384766

Token 10: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22094601392745972
    2. '\' → logprob: -3.4709460735321045
    3. '\n' → logprob: -3.4709460735321045
    4. '    ' → logprob: -3.5959460735321045
    5. '(n' → logprob: -3.5959460735321045
    6. '        
' → logprob: -3.7209460735321045
    7. '(' → logprob: -4.470945835113525
    8. '   ' → logprob: -4.470945835113525
    9. ' ' → logprob: -4.720945835113525
    10. '<|end|>' → logprob: -5.720945835113525

Token 11: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04648645222187042
    2. '       ' → logprob: -3.2964863777160645
    3. 'pass' → logprob: -5.1714863777160645
    4. ' self' → logprob: -6.6714863777160645
    5. '   ' → logprob: -7.2964863777160645
    6. 's' → logprob: -8.546486854553223
    7. ' ' → logprob: -9.171486854553223
    8. '        ' → logprob: -9.171486854553223
    9. ' pass' → logprob: -9.296486854553223
    10. '    ' → logprob: -10.171486854553223

Token 12: '.char' (ID: 18508)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.006945772562175989
    2. '.encoder' → logprob: -5.381945610046387
    3. ' .' → logprob: -6.631945610046387
    4. '.embedding' → logprob: -7.756945610046387
    5. '.input' → logprob: -8.756945610046387
    6. '.encode' → logprob: -8.881945610046387
    7. '.data' → logprob: -9.881945610046387
    8. ' ' → logprob: -10.631945610046387
    9. '._' → logprob: -10.631945610046387
    10. '.encoding' → logprob: -10.756945610046387

Token 13: '_to' (ID: 5089)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.026806088164448738
    2. '_map' → logprob: -4.151805877685547
    3. '_set' → logprob: -5.276805877685547
    4. '_' → logprob: -6.401805877685547
    5. 'acters' → logprob: -6.401805877685547
    6. 'set' → logprob: -7.151805877685547
    7. '_s' → logprob: -7.776805877685547
    8. ' s' → logprob: -8.151805877685547
    9. ' set' → logprob: -8.651805877685547
    10. 'acter' → logprob: -9.026805877685547

Token 14: '_code' (ID: 8330)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.2946760654449463
    2. '_index' → logprob: -1.6696760654449463
    3. '_id' → logprob: -2.9196760654449463
    4. '_int' → logprob: -5.419675827026367
    5. '_token' → logprob: -5.419675827026367
    6. '_ix' → logprob: -5.544675827026367
    7. '_' → logprob: -9.669675827026367
    8. '_ind' → logprob: -10.419675827026367
    9. '_i' → logprob: -10.794675827026367
    10. '_in' → logprob: -11.294675827026367

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2726634740829468
    2. '=' → logprob: -1.7726634740829468
    3. '[' → logprob: -2.7726635932922363
    4. 's' → logprob: -5.772663593292236
    5. '_map' → logprob: -6.397663593292236
    6. '_' → logprob: -6.897663593292236
    7. '_mapping' → logprob: -8.897663116455078
    8. ' ' → logprob: -9.522663116455078
    9. '   ' → logprob: -9.522663116455078
    10. '```' → logprob: -10.397663116455078

Token 16: ' {
' (ID: 405)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.45004987716674805
    2. '{}' → logprob: -1.200049877166748
    3. ' {' → logprob: -3.075049877166748
    4. '{' → logprob: -4.200049877166748
    5. 'dict' → logprob: -10.575050354003906
    6. ' ' → logprob: -12.200050354003906
    7. ' defaultdict' → logprob: -12.950050354003906
    8. '={}' → logprob: -13.075050354003906
    9. ' {}\' → logprob: -13.325050354003906
    10. ' {};' → logprob: -13.575050354003906

Token 17: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06584881991147995
    2. ''A' → logprob: -3.0658488273620605
    3. ''\' → logprob: -4.5658488273620605
    4. ''a' → logprob: -5.3158488273620605
    5. '"' → logprob: -6.8158488273620605
    6. '       ' → logprob: -9.315848350524902
    7. '"A' → logprob: -9.315848350524902
    8. ''H' → logprob: -9.440848350524902
    9. ' '' → logprob: -9.940848350524902
    10. ''"' → logprob: -10.065848350524902

Token 18: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.05997447669506073
    2. ''A' → logprob: -3.434974431991577
    3. ''a' → logprob: -3.809974431991577
    4. ''\' → logprob: -5.934974670410156
    5. ''"' → logprob: -8.184974670410156
    6. '"' → logprob: -8.184974670410156
    7. ''H' → logprob: -8.309974670410156
    8. '   ' → logprob: -10.434974670410156
    9. ''''' → logprob: -10.434974670410156
    10. ''S' → logprob: -10.559974670410156

Token 19: ' ':' (ID: 30751)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014739240519702435
    2. 'H' → logprob: -5.514739036560059
    3. ''' → logprob: -6.014739036560059
    4. 'h' → logprob: -6.139739036560059
    5. 'A' → logprob: -6.264739036560059
    6. ''a' → logprob: -6.264739036560059
    7. ' '' → logprob: -7.639739036560059
    8. ''H' → logprob: -7.889739036560059
    9. ''A' → logprob: -8.264739036560059
    10. 'p' → logprob: -8.764739036560059

Token 20: ' '' (ID: 461)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03290277346968651
    2. ''' → logprob: -3.532902717590332
    3. ' ' → logprob: -6.407902717590332
    4. ''<' → logprob: -7.657902717590332
    5. '1' → logprob: -8.407902717590332
    6. '48' → logprob: -9.157902717590332
    7. '32' → logprob: -9.282902717590332
    8. ''b' → logprob: -9.532902717590332
    9. ''"' → logprob: -9.657902717590332
    10. ' '' → logprob: -9.782902717590332

Token 21: '101' (ID: 7959)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.06649530678987503
    2. '00' → logprob: -2.941495418548584
    3. '001' → logprob: -5.066495418548584
    4. ''' → logprob: -5.691495418548584
    5. '0' → logprob: -7.316495418548584
    6. '111' → logprob: -7.691495418548584
    7. '110' → logprob: -8.816494941711426
    8. '01' → logprob: -8.941494941711426
    9. '"' → logprob: -9.316494941711426
    10. '<' → logprob: -9.441494941711426

Token 22: '',
' (ID: 1214)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3109355866909027
    2. '000' → logprob: -2.1859354972839355
    3. ''' → logprob: -2.5609354972839355
    4. ''}' → logprob: -3.6859354972839355
    5. '010' → logprob: -3.9359354972839355
    6. '00' → logprob: -4.3109354972839355
    7. ''},' → logprob: -5.3109354972839355
    8. '100' → logprob: -5.4359354972839355
    9. '001' → logprob: -5.5609354972839355
    10. '110' → logprob: -6.4359354972839355

Token 23: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.209451362490654
    2. ''a' → logprob: -2.58445143699646
    3. ''A' → logprob: -2.58445143699646
    4. ''\' → logprob: -3.83445143699646
    5. '           ' → logprob: -4.959451198577881
    6. '       ' → logprob: -5.459451198577881
    7. '',' → logprob: -6.584451198577881
    8. ''t' → logprob: -6.834451198577881
    9. ''}' → logprob: -7.709451198577881
    10. ''n' → logprob: -7.834451198577881

Token 24: ' "'' (ID: 12868)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.3613712787628174
    2. ''a' → logprob: -1.7363712787628174
    3. ''\' → logprob: -2.2363712787628174
    4. ''' → logprob: -4.736371040344238
    5. ''H' → logprob: -5.986371040344238
    6. '',' → logprob: -6.236371040344238
    7. '','' → logprob: -6.486371040344238
    8. '       ' → logprob: -6.736371040344238
    9. '}' → logprob: -7.486371040344238
    10. ''}' → logprob: -7.611371040344238

Token 25: '":' (ID: 1243)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.5177466869354248
    2. '0' → logprob: -1.1427466869354248
    3. '001' → logprob: -3.017746686935425
    4. '010' → logprob: -4.892746925354004
    5. '101' → logprob: -5.517746925354004
    6. '100' → logprob: -5.642746925354004
    7. '1' → logprob: -5.767746925354004
    8. '.' → logprob: -5.767746925354004
    9. ' '' → logprob: -5.892746925354004
    10. ''' → logprob: -6.017746925354004

Token 26: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00040540905320085585
    2. ''.' → logprob: -8.750405311584473
    3. '101' → logprob: -9.875405311584473
    4. ' '' → logprob: -10.000405311584473
    5. '010' → logprob: -10.500405311584473
    6. '110' → logprob: -10.750405311584473
    7. '"' → logprob: -10.750405311584473
    8. '100' → logprob: -10.750405311584473
    9. '111' → logprob: -11.250405311584473
    10. '000' → logprob: -11.500405311584473

Token 27: '000' (ID: 1302)
  Prédit: '111'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -1.2605937719345093
    2. '010' → logprob: -1.5105937719345093
    3. '100' → logprob: -1.7605937719345093
    4. '110' → logprob: -1.8855937719345093
    5. '001' → logprob: -2.885593891143799
    6. '000' → logprob: -2.885593891143799
    7. '101' → logprob: -3.385593891143799
    8. '011' → logprob: -4.635593891143799
    9. '0' → logprob: -4.760593891143799
    10. '.' → logprob: -6.010593891143799

Token 28: '000' (ID: 1302)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18484613299369812
    2. '',' → logprob: -2.1848461627960205
    3. '1' → logprob: -2.9348461627960205
    4. '0' → logprob: -6.434845924377441
    5. ''}' → logprob: -7.684845924377441
    6. '',
' → logprob: -8.059845924377441
    7. '111' → logprob: -8.059845924377441
    8. '11' → logprob: -9.434845924377441
    9. '110' → logprob: -9.559845924377441
    10. '01' → logprob: -9.684845924377441

Token 29: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3650982677936554
    2. '',' → logprob: -1.240098237991333
    3. '1' → logprob: -4.865098476409912
    4. '',
' → logprob: -5.740098476409912
    5. '0' → logprob: -5.865098476409912
    6. ''}' → logprob: -6.365098476409912
    7. '000' → logprob: -8.365097999572754
    8. '00' → logprob: -8.615097999572754
    9. ''},' → logprob: -8.740097999572754
    10. '01' → logprob: -8.740097999572754

Token 30: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1367390751838684
    2. '           ' → logprob: -3.3867390155792236
    3. '',' → logprob: -3.7617390155792236
    4. ',' → logprob: -3.8867390155792236
    5. ''a' → logprob: -3.8867390155792236
    6. '       ' → logprob: -4.386739253997803
    7. ''A' → logprob: -5.761739253997803
    8. '               ' → logprob: -6.136739253997803
    9. '"' → logprob: -6.136739253997803
    10. '}' → logprob: -6.261739253997803

Token 31: ' ',' (ID: 14089)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.4289141893386841
    2. ''' → logprob: -2.1789140701293945
    3. ''A' → logprob: -2.8039140701293945
    4. '}' → logprob: -3.0539140701293945
    5. '',' (adapté à ' ',') → logprob: -3.1789140701293945
    6. '','' → logprob: -4.3039140701293945
    7. ''e' → logprob: -4.5539140701293945
    8. ''b' → logprob: -4.6789140701293945
    9. ''H' → logprob: -5.0539140701293945
    10. ',' → logprob: -5.3039140701293945

Token 32: '':' (ID: 2337)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15480270981788635
    2. ' '' → logprob: -2.0298027992248535
    3. ' ':' → logprob: -4.6548027992248535
    4. '':' → logprob: -6.2798027992248535
    5. ' ':'' → logprob: -7.6548027992248535
    6. '':'' → logprob: -9.404802322387695
    7. ':' → logprob: -10.529802322387695
    8. ' :' → logprob: -11.154802322387695
    9. ' ' → logprob: -11.404802322387695
    10. ''a' → logprob: -11.779802322387695

Token 33: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01254131831228733
    2. ' '' → logprob: -4.3875412940979
    3. ' ' → logprob: -11.137541770935059
    4. '"' → logprob: -11.262541770935059
    5. '000' → logprob: -14.012541770935059
    6. ' ' → logprob: -14.887541770935059
    7. '...' → logprob: -15.012541770935059
    8. ''s' → logprob: -15.075041770935059
    9. '`' → logprob: -15.200041770935059
    10. '[' → logprob: -15.387541770935059

Token 34: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.7086194157600403
    2. ''' → logprob: -1.2086193561553955
    3. '101' → logprob: -2.3336193561553955
    4. '001' → logprob: -3.3336193561553955
    5. '010' → logprob: -3.5836193561553955
    6. '100' → logprob: -3.9586193561553955
    7. '111' → logprob: -4.208619594573975
    8. '110' → logprob: -4.333619594573975
    9. '011' → logprob: -6.708619594573975
    10. '0' → logprob: -9.583619117736816

Token 35: '011' (ID: 17342)
  Prédit: '001'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '001' → logprob: -0.7563431262969971
    2. '000' → logprob: -0.8813431262969971
    3. '0' → logprob: -3.381343126296997
    4. '100' → logprob: -3.756343126296997
    5. '00' → logprob: -4.131342887878418
    6. '111' → logprob: -4.256342887878418
    7. '011' → logprob: -4.756342887878418
    8. '010' → logprob: -5.006342887878418
    9. '1' → logprob: -5.381342887878418
    10. '110' → logprob: -6.006342887878418

Token 36: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.28747475147247314
    2. ''' → logprob: -1.9124747514724731
    3. '',
' → logprob: -2.2874746322631836
    4. ''}' → logprob: -8.037474632263184
    5. '}' → logprob: -9.162474632263184
    6. '',

' → logprob: -9.287474632263184
    7. '',
' → logprob: -10.787474632263184
    8. '000' → logprob: -10.912474632263184
    9. '','' → logprob: -11.037474632263184
    10. '',...
' → logprob: -12.037474632263184

Token 37: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.041382770985364914
    2. '}' → logprob: -4.166382789611816
    3. '           ' → logprob: -4.291382789611816
    4. '       ' → logprob: -5.416382789611816
    5. ' ' → logprob: -6.791382789611816
    6. ''}' → logprob: -6.916382789611816
    7. ''a' → logprob: -6.916382789611816
    8. '               ' → logprob: -7.291382789611816
    9. ' }' → logprob: -7.666382789611816
    10. '   ' → logprob: -7.791382789611816

Token 38: ' '-' (ID: 17489)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5676420331001282
    2. ''a' → logprob: -1.5676419734954834
    3. '}' → logprob: -1.8176419734954834
    4. ''A' → logprob: -4.6926422119140625
    5. ''}' → logprob: -4.6926422119140625
    6. ''n' → logprob: -5.0676422119140625
    7. ''t' → logprob: -5.1926422119140625
    8. ''e' → logprob: -5.3176422119140625
    9. ''o' → logprob: -5.9426422119140625
    10. ''l' → logprob: -5.9426422119140625

Token 39: '':' (ID: 2337)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2885860800743103
    2. '':' → logprob: -1.413586139678955
    3. ' ':' → logprob: -5.663586139678955
    4. ' '' → logprob: -5.913586139678955
    5. '000' → logprob: -7.913586139678955
    6. ' ' → logprob: -8.413585662841797
    7. ''>' → logprob: -8.663585662841797
    8. '<|end|>' → logprob: -9.538585662841797
    9. '':'' → logprob: -9.788585662841797
    10. '-' → logprob: -9.788585662841797

Token 40: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.029982350766658783
    2. ' '' → logprob: -3.529982328414917
    3. ' ' → logprob: -8.779982566833496
    4. '"' → logprob: -10.279982566833496
    5. '<|end|>' → logprob: -10.904982566833496
    6. '000' → logprob: -11.279982566833496
    7. ' ' → logprob: -13.404982566833496
    8. '...' → logprob: -13.467482566833496
    9. ''s' → logprob: -13.592482566833496
    10. '`' → logprob: -13.592482566833496

Token 41: '100' (ID: 1353)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.05049385502934456
    2. '111' → logprob: -4.4254937171936035
    3. ''' → logprob: -4.5504937171936035
    4. '001' → logprob: -4.6754937171936035
    5. '100' → logprob: -5.0504937171936035
    6. '101' → logprob: -5.3004937171936035
    7. '110' → logprob: -5.6754937171936035
    8. '010' → logprob: -6.1754937171936035
    9. ''-' → logprob: -8.425494194030762
    10. '011' → logprob: -9.175494194030762

Token 42: '100' (ID: 1353)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.76252281665802
    2. '100' → logprob: -2.0125226974487305
    3. '001' → logprob: -2.5125226974487305
    4. '111' → logprob: -2.7625226974487305
    5. '110' → logprob: -3.1375226974487305
    6. '011' → logprob: -3.2625226974487305
    7. '010' → logprob: -3.3875226974487305
    8. '11' → logprob: -3.5125226974487305
    9. '00' → logprob: -3.7625226974487305
    10. '1' → logprob: -3.7625226974487305

Token 43: '01' (ID: 2290)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5421578288078308
    2. '',' → logprob: -0.9171578288078308
    3. '',
' → logprob: -4.1671576499938965
    4. '0' → logprob: -6.4171576499938965
    5. ''}' → logprob: -7.0421576499938965
    6. '}' → logprob: -8.417158126831055
    7. '',
' → logprob: -8.417158126831055
    8. '',

' → logprob: -8.792158126831055
    9. '1' → logprob: -9.667158126831055
    10. '','' → logprob: -9.917158126831055

Token 44: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1607319861650467
    2. '',' → logprob: -1.9107320308685303
    3. ''}' → logprob: -8.66073226928711
    4. '',
' → logprob: -8.78573226928711
    5. '0' → logprob: -9.03573226928711
    6. '1' → logprob: -11.16073226928711
    7. '','' → logprob: -11.41073226928711
    8. '',

' → logprob: -12.03573226928711
    9. '',
' → logprob: -12.16073226928711
    10. '}' → logprob: -12.41073226928711

Token 45: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.016094081103801727
    2. '           ' → logprob: -5.016094207763672
    3. ' ' → logprob: -5.391094207763672
    4. '       ' → logprob: -6.641094207763672
    5. ' '' → logprob: -6.641094207763672
    6. '   ' → logprob: -8.016094207763672
    7. '               ' → logprob: -8.141094207763672
    8. ''a' → logprob: -8.891094207763672
    9. '"' → logprob: -9.016094207763672
    10. '            ' → logprob: -9.266094207763672

Token 46: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01018371433019638
    2. ''a' → logprob: -5.385183811187744
    3. ' '' → logprob: -6.635183811187744
    4. ''A' → logprob: -7.260183811187744
    5. '           ' → logprob: -7.760183811187744
    6. '}' → logprob: -7.885183811187744
    7. ' ' → logprob: -8.260183334350586
    8. ''e' → logprob: -8.385183334350586
    9. '   ' → logprob: -8.510183334350586
    10. '       ' → logprob: -8.635183334350586

Token 47: '':' (ID: 2337)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.016247380524873734
    2. '':' → logprob: -4.141247272491455
    3. '':'' → logprob: -9.891247749328613
    4. '000' → logprob: -10.016247749328613
    5. ' ':' → logprob: -10.766247749328613
    6. '101' → logprob: -10.766247749328613
    7. '100' → logprob: -10.891247749328613
    8. ' '' → logprob: -10.891247749328613
    9. '010' → logprob: -11.641247749328613
    10. '001' → logprob: -11.766247749328613

Token 48: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.039208151400089264
    2. ' '' → logprob: -3.289208173751831
    3. ' ' → logprob: -7.414207935333252
    4. '100' → logprob: -7.664207935333252
    5. '"' → logprob: -10.16420841217041
    6. '101' → logprob: -10.66420841217041
    7. '000' → logprob: -11.53920841217041
    8. '  ' → logprob: -12.66420841217041
    9. '110' → logprob: -12.66420841217041
    10. '010' → logprob: -13.03920841217041

Token 49: '010' (ID: 13522)
  Prédit: '010'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '010' → logprob: -0.177485391497612
    2. '101' → logprob: -2.052485466003418
    3. '100' → logprob: -3.427485466003418
    4. '000' → logprob: -6.427485466003418
    5. '111' → logprob: -10.052485466003418
    6. '011' → logprob: -10.677485466003418
    7. '110' → logprob: -10.802485466003418
    8. '001' → logprob: -10.802485466003418
    9. '```' → logprob: -12.302485466003418
    10. '0' → logprob: -12.427485466003418

Token 50: '001' (ID: 7659)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.038747016340494156
    2. '101' → logprob: -4.0387468338012695
    3. '011' → logprob: -4.4137468338012695
    4. '110' → logprob: -6.0387468338012695
    5. '010' → logprob: -6.1637468338012695
    6. '100' → logprob: -6.4137468338012695
    7. '001' → logprob: -6.9137468338012695
    8. '111' → logprob: -7.2887468338012695
    9. '1' → logprob: -8.28874683380127
    10. '10' → logprob: -9.03874683380127

Token 51: '',
' (ID: 1214)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.27033957839012146
    2. '00' → logprob: -1.7703396081924438
    3. '01' → logprob: -3.3953394889831543
    4. '0' → logprob: -3.7703394889831543
    5. '11' → logprob: -5.145339488983154
    6. '1' → logprob: -5.520339488983154
    7. '110' → logprob: -9.645339965820312
    8. ''' → logprob: -9.770339965820312
    9. '.'' → logprob: -10.770339965820312
    10. '010' → logprob: -10.895339965820312

Token 52: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.007305956911295652
    2. '           ' → logprob: -5.757306098937988
    3. '       ' → logprob: -6.632306098937988
    4. '}' → logprob: -7.257306098937988
    5. ' ' → logprob: -8.007306098937988
    6. ' '' → logprob: -8.007306098937988
    7. '               ' → logprob: -8.132306098937988
    8. ',' → logprob: -8.632306098937988
    9. '',' → logprob: -8.632306098937988
    10. ' }' → logprob: -9.132306098937988

Token 53: ' '?' (ID: 73818)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.007532220799475908
    2. ''A' → logprob: -6.257532119750977
    3. ''\' → logprob: -6.757532119750977
    4. '}' → logprob: -6.882532119750977
    5. ''a' → logprob: -7.132532119750977
    6. ''e' → logprob: -7.507532119750977
    7. ''"' → logprob: -8.007532119750977
    8. ''}' → logprob: -8.132532119750977
    9. ' '' → logprob: -8.507532119750977
    10. '0' → logprob: -9.007532119750977

Token 54: '':' (ID: 2337)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.019457057118415833
    2. '':' → logprob: -4.01945686340332
    3. ' ':' → logprob: -7.14445686340332
    4. ' '' → logprob: -7.89445686340332
    5. '':'' → logprob: -10.39445686340332
    6. '010' → logprob: -10.89445686340332
    7. '```' → logprob: -11.01945686340332
    8. '111' → logprob: -11.26945686340332
    9. '011' → logprob: -11.64445686340332
    10. '<|end|>' → logprob: -11.64445686340332

Token 55: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.008085179142653942
    2. ' '' → logprob: -5.008085250854492
    3. ' ' → logprob: -7.383085250854492
    4. '100' → logprob: -7.633085250854492
    5. '"' → logprob: -8.883085250854492
    6. '101' → logprob: -10.383085250854492
    7. '000' → logprob: -10.508085250854492
    8. '010' → logprob: -10.883085250854492
    9. '  ' → logprob: -11.508085250854492
    10. '<|end|>' → logprob: -12.383085250854492

Token 56: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0002765902318060398
    2. '100' → logprob: -8.250276565551758
    3. '010' → logprob: -11.375276565551758
    4. '001' → logprob: -13.000276565551758
    5. '111' → logprob: -13.750276565551758
    6. '011' → logprob: -15.125276565551758
    7. '101' → logprob: -15.750276565551758
    8. '0' → logprob: -17.375276565551758
    9. '110' → logprob: -17.625276565551758
    10. ' ' → logprob: -18.125276565551758

Token 57: '001' (ID: 7659)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.8339411616325378
    2. '101' → logprob: -1.5839412212371826
    3. '100' → logprob: -1.9589412212371826
    4. '111' → logprob: -2.4589412212371826
    5. '110' → logprob: -2.4589412212371826
    6. '001' → logprob: -3.2089412212371826
    7. '010' → logprob: -5.4589409828186035
    8. '1' → logprob: -5.9589409828186035
    9. '011' → logprob: -7.2089409828186035
    10. '00' → logprob: -9.583941459655762

Token 58: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.4766935408115387
    2. ''' → logprob: -0.9766935110092163
    3. '',
' → logprob: -6.101693630218506
    4. ''}' → logprob: -8.476693153381348
    5. '',
' → logprob: -9.601693153381348
    6. '','' → logprob: -10.101693153381348
    7. '',

' → logprob: -10.726693153381348
    8. '}' → logprob: -10.976693153381348
    9. '0' → logprob: -12.601693153381348
    10. '}'' → logprob: -12.726693153381348

Token 59: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07715603709220886
    2. ''a' → logprob: -3.9521560668945312
    3. '}' → logprob: -4.202156066894531
    4. ' ' → logprob: -4.452156066894531
    5. '           ' → logprob: -4.952156066894531
    6. ' }' → logprob: -5.327156066894531
    7. '       ' → logprob: -5.452156066894531
    8. ' '' → logprob: -5.577156066894531
    9. ''A' → logprob: -5.952156066894531
    10. 'a' → logprob: -6.827156066894531

Token 60: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.21210651099681854
    2. ''A' → logprob: -2.212106466293335
    3. ''a' → logprob: -3.087106466293335
    4. ''e' → logprob: -4.962106704711914
    5. ''}' → logprob: -5.087106704711914
    6. '}' → logprob: -5.337106704711914
    7. ''"' → logprob: -5.712106704711914
    8. ''\' → logprob: -6.462106704711914
    9. '':' → logprob: -6.587106704711914
    10. '';' → logprob: -6.837106704711914

Token 61: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.19507281482219696
    2. ''A' → logprob: -2.195072889328003
    3. ''' → logprob: -3.195072889328003
    4. 'a' → logprob: -4.195072650909424
    5. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -5.820072650909424
    6. ''a' → logprob: -5.945072650909424
    7. '0' → logprob: -6.820072650909424
    8. '_' → logprob: -7.195072650909424
    9. '!' → logprob: -7.320072650909424
    10. '!'' → logprob: -7.945072650909424

Token 62: '':' (ID: 2337)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.28222528100013733
    2. '':' → logprob: -1.407225251197815
    3. '<|end|>' → logprob: -7.407225131988525
    4. ' ':' → logprob: -9.532225608825684
    5. ':' → logprob: -9.532225608825684
    6. '```' → logprob: -9.657225608825684
    7. '':'' → logprob: -9.907225608825684
    8. '100' → logprob: -10.032225608825684
    9. ''s' → logprob: -10.532225608825684
    10. ''>' → logprob: -10.657225608825684

Token 63: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02391194738447666
    2. '000' → logprob: -3.898911952972412
    3. '101' → logprob: -6.023911952972412
    4. '100' → logprob: -7.773911952972412
    5. '"' → logprob: -8.273911476135254
    6. ' '' → logprob: -9.523911476135254
    7. ' ' → logprob: -10.023911476135254
    8. '`' → logprob: -10.148911476135254
    9. '110' → logprob: -10.273911476135254
    10. '```' → logprob: -10.523911476135254

Token 64: '100' (ID: 1353)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.9372106790542603
    2. '100' → logprob: -0.9372106790542603
    3. '101' → logprob: -1.5622106790542603
    4. '110' → logprob: -5.062210559844971
    5. '10' → logprob: -8.437211036682129
    6. '1' → logprob: -8.812211036682129
    7. '111' → logprob: -9.687211036682129
    8. '00' → logprob: -10.062211036682129
    9. '11' → logprob: -10.437211036682129
    10. '010' → logprob: -10.937211036682129

Token 65: '101' (ID: 7959)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.018139410763978958
    2. '0' → logprob: -4.268139362335205
    3. '00' → logprob: -5.893139362335205
    4. '1' → logprob: -7.018139362335205
    5. '100' → logprob: -8.143139839172363
    6. '010' → logprob: -12.018139839172363
    7. '01' → logprob: -12.143139839172363
    8. '001' → logprob: -12.268139839172363
    9. '10' → logprob: -12.643139839172363
    10. '110' → logprob: -13.393139839172363

Token 66: '',
' (ID: 1214)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0834176316857338
    2. '00' → logprob: -3.2084176540374756
    3. '11' → logprob: -3.7084176540374756
    4. '10' → logprob: -4.9584174156188965
    5. '1' → logprob: -5.2084174156188965
    6. ''' → logprob: -6.2084174156188965
    7. '01' → logprob: -8.833417892456055
    8. '000' → logprob: -9.083417892456055
    9. '110' → logprob: -9.583417892456055
    10. '100' → logprob: -9.833417892456055

Token 67: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01701132208108902
    2. ' ' → logprob: -4.5170111656188965
    3. '           ' → logprob: -5.8920111656188965
    4. '       ' → logprob: -6.6420111656188965
    5. '<|end|>' → logprob: -7.2670111656188965
    6. ' '' → logprob: -8.392011642456055
    7. ''A' → logprob: -8.642011642456055
    8. '        ' → logprob: -8.767011642456055
    9. '...' → logprob: -9.642011642456055
    10. '`' → logprob: -9.767011642456055

Token 68: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.022125201299786568
    2. ' '' → logprob: -4.272125244140625
    3. ''A' → logprob: -5.022125244140625
    4. '           ' → logprob: -8.647125244140625
    5. ''C' → logprob: -8.647125244140625
    6. ' ' → logprob: -8.772125244140625
    7. '       ' → logprob: -8.772125244140625
    8. '   ' → logprob: -9.147125244140625
    9. 'B' → logprob: -9.147125244140625
    10. '100' → logprob: -9.647125244140625

Token 69: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.1345645934343338
    2. '100' → logprob: -2.1345646381378174
    3. '101' → logprob: -5.134564399719238
    4. '000' → logprob: -7.009564399719238
    5. ' B' → logprob: -8.509564399719238
    6. '110' → logprob: -9.009564399719238
    7. ' '' → logprob: -9.009564399719238
    8. ''' → logprob: -9.134564399719238
    9. 'A' → logprob: -9.884564399719238
    10. '010' → logprob: -10.384564399719238

Token 70: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.23492957651615143
    2. ''' → logprob: -1.6099295616149902
    3. ':' → logprob: -5.35992956161499
    4. ' ':' → logprob: -6.23492956161499
    5. '100' → logprob: -7.10992956161499
    6. '<|end|>' → logprob: -7.23492956161499
    7. '':'' → logprob: -7.73492956161499
    8. ' ' → logprob: -7.98492956161499
    9. ' :' → logprob: -9.234930038452148
    10. '001' → logprob: -9.734930038452148

Token 71: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12764541804790497
    2. '100' → logprob: -2.127645492553711
    3. '101' → logprob: -7.752645492553711
    4. '010' → logprob: -9.252645492553711
    5. ''A' → logprob: -9.877645492553711
    6. '000' → logprob: -10.002645492553711
    7. '"' → logprob: -10.377645492553711
    8. ' '' → logprob: -10.627645492553711
    9. ''''' → logprob: -12.127645492553711
    10. '111' → logprob: -12.127645492553711

Token 72: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.002290971577167511
    2. '000' → logprob: -6.252291202545166
    3. '101' → logprob: -8.002290725708008
    4. '110' → logprob: -10.627290725708008
    5. '111' → logprob: -13.502290725708008
    6. '１００' → logprob: -14.002290725708008
    7. '010' → logprob: -14.627290725708008
    8. ''' → logprob: -15.252290725708008
    9. '001' → logprob: -16.627290725708008
    10. '|' → logprob: -16.877290725708008

Token 73: '110' (ID: 7920)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.7060778141021729
    2. '010' → logprob: -1.3310778141021729
    3. '110' → logprob: -1.4560778141021729
    4. '100' → logprob: -5.956077575683594
    5. '011' → logprob: -5.956077575683594
    6. '001' → logprob: -5.956077575683594
    7. '101' → logprob: -6.956077575683594
    8. '111' → logprob: -7.956077575683594
    9. '```' → logprob: -12.081077575683594
    10. '10' → logprob: -13.831077575683594

Token 74: '10' (ID: 702)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '',' → logprob: -0.017102958634495735
    2. ''' → logprob: -4.14210319519043
    3. '',
' → logprob: -6.89210319519043
    4. '',
' → logprob: -11.39210319519043
    5. '0' → logprob: -11.51710319519043
    6. '',

' → logprob: -12.01710319519043
    7. ',' → logprob: -12.14210319519043
    8. '}' → logprob: -12.26710319519043
    9. '1' → logprob: -12.51710319519043
    10. ''}' → logprob: -12.76710319519043

Token 75: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.11414521932601929
    2. ''' → logprob: -2.239145278930664
    3. '',
' → logprob: -6.864145278930664
    4. '<|end|>' → logprob: -8.864145278930664
    5. '','' → logprob: -10.239145278930664
    6. ',' → logprob: -10.364145278930664
    7. '',

' → logprob: -11.114145278930664
    8. '       ' → logprob: -11.364145278930664
    9. '   ' → logprob: -11.864145278930664
    10. '',
' → logprob: -12.364145278930664

Token 76: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.049398284405469894
    2. '           ' → logprob: -3.049398183822632
    3. '       ' → logprob: -8.049398422241211
    4. ''A' → logprob: -8.799398422241211
    5. ' '' → logprob: -9.674398422241211
    6. '               ' → logprob: -9.799398422241211
    7. ' ' → logprob: -9.924398422241211
    8. '         ' → logprob: -10.049398422241211
    9. '          ' → logprob: -10.049398422241211
    10. '',' → logprob: -11.174398422241211

Token 77: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.000845364120323211
    2. '           ' → logprob: -7.500845432281494
    3. ''A' → logprob: -8.625844955444336
    4. ''C' → logprob: -10.250844955444336
    5. ' '' → logprob: -10.625844955444336
    6. ' ' → logprob: -11.625844955444336
    7. '               ' → logprob: -11.625844955444336
    8. '       ' → logprob: -11.875844955444336
    9. ''T' → logprob: -11.875844955444336
    10. '"' → logprob: -12.875844955444336

Token 78: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.009832708165049553
    2. ''C' → logprob: -5.384832859039307
    3. ''' → logprob: -6.009832859039307
    4. '100' → logprob: -7.009832859039307
    5. 'B' → logprob: -7.259832859039307
    6. '1' → logprob: -7.509832859039307
    7. '0' → logprob: -8.009832382202148
    8. 'K' → logprob: -9.509832382202148
    9. 'A' → logprob: -10.009832382202148
    10. 'I' → logprob: -10.509832382202148

Token 79: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.10653147101402283
    2. ''' → logprob: -2.3565313816070557
    3. ':' → logprob: -5.106531620025635
    4. '':'' → logprob: -9.231531143188477
    5. '<|end|>' → logprob: -9.731531143188477
    6. ' ':' → logprob: -11.106531143188477
    7. ''>' → logprob: -11.106531143188477
    8. '='' → logprob: -11.606531143188477
    9. '```' → logprob: -11.981531143188477
    10. ''s' → logprob: -11.981531143188477

Token 80: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04024921730160713
    2. ' ' → logprob: -3.2902491092681885
    3. '100' → logprob: -6.415249347686768
    4. ' '' → logprob: -8.04024887084961
    5. '101' → logprob: -9.29024887084961
    6. '"' → logprob: -9.29024887084961
    7. '1' → logprob: -10.91524887084961
    8. ''d' → logprob: -12.04024887084961
    9. '110' → logprob: -12.16524887084961
    10. ''A' → logprob: -12.54024887084961

Token 81: '010' (ID: 13522)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.00529802730306983
    2. '010' → logprob: -5.755298137664795
    3. '101' → logprob: -6.630298137664795
    4. '011' → logprob: -7.630298137664795
    5. '111' → logprob: -8.505297660827637
    6. '110' → logprob: -9.505297660827637
    7. ''' → logprob: -11.005297660827637
    8. '000' → logprob: -11.255297660827637
    9. '1' → logprob: -12.880297660827637
    10. '１００' → logprob: -14.130297660827637

Token 82: '1' (ID: 16)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.8546117544174194
    2. '011' → logprob: -0.9796117544174194
    3. '010' → logprob: -1.9796117544174194
    4. '101' → logprob: -3.854611873626709
    5. '001' → logprob: -3.979611873626709
    6. '111' → logprob: -4.354611873626709
    7. '110' → logprob: -4.979611873626709
    8. '100' → logprob: -6.604611873626709
    9. '1' → logprob: -11.60461139678955
    10. '0' → logprob: -11.72961139678955

Token 83: '',
' (ID: 1214)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.255500465631485
    2. '1' → logprob: -2.255500555038452
    3. '10' → logprob: -2.255500555038452
    4. '01' → logprob: -5.005500316619873
    5. ''' → logprob: -5.755500316619873
    6. '11' → logprob: -5.880500316619873
    7. '<|end|>' → logprob: -6.380500316619873
    8. '00' → logprob: -6.755500316619873
    9. '')' → logprob: -9.505500793457031
    10. '6' → logprob: -9.630500793457031

Token 84: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03315143659710884
    2. '           ' → logprob: -3.533151388168335
    3. '       ' → logprob: -6.408151626586914
    4. ' ' → logprob: -7.658151626586914
    5. ',' → logprob: -8.408151626586914
    6. '         ' → logprob: -8.533151626586914
    7. '               ' → logprob: -9.158151626586914
    8. '        ' → logprob: -9.158151626586914
    9. ' '' → logprob: -9.283151626586914
    10. '          ' → logprob: -9.283151626586914

Token 85: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.0008965740562416613
    2. ''A' → logprob: -7.875896453857422
    3. '           ' → logprob: -8.000896453857422
    4. ''D' → logprob: -9.500896453857422
    5. ' '' → logprob: -9.625896453857422
    6. '       ' → logprob: -11.375896453857422
    7. ' ' → logprob: -11.750896453857422
    8. '         ' → logprob: -12.750896453857422
    9. ''I' → logprob: -12.875896453857422
    10. '"' → logprob: -13.125896453857422

Token 86: 'D' (ID: 35)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.057079628109931946
    2. '100' → logprob: -3.682079553604126
    3. '1' → logprob: -4.307079792022705
    4. '011' → logprob: -4.557079792022705
    5. '111' → logprob: -6.057079792022705
    6. '0' → logprob: -7.057079792022705
    7. '010' → logprob: -7.057079792022705
    8. 'K' → logprob: -7.182079792022705
    9. '001' → logprob: -7.557079792022705
    10. '110' → logprob: -7.557079792022705

Token 87: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.21962590515613556
    2. ''' → logprob: -1.7196259498596191
    3. ':' → logprob: -4.469625949859619
    4. ' ':' → logprob: -5.344625949859619
    5. '':'' → logprob: -7.219625949859619
    6. '<|end|>' → logprob: -7.844625949859619
    7. ' ' → logprob: -8.344625473022461
    8. ' '' → logprob: -8.969625473022461
    9. ' :' → logprob: -9.219625473022461
    10. ' =' → logprob: -10.094625473022461

Token 88: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.036764875054359436
    2. '100' → logprob: -3.6617648601531982
    3. '000' → logprob: -5.536765098571777
    4. ' ' → logprob: -5.661765098571777
    5. ' '' → logprob: -6.411765098571777
    6. '101' → logprob: -8.286765098571777
    7. '110' → logprob: -8.286765098571777
    8. '010' → logprob: -8.786765098571777
    9. ''S' → logprob: -8.786765098571777
    10. '   ' → logprob: -8.911765098571777

Token 89: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.012934669852256775
    2. '100' → logprob: -4.637934684753418
    3. '011' → logprob: -6.137934684753418
    4. '101' → logprob: -7.262934684753418
    5. '010' → logprob: -8.512934684753418
    6. '111' → logprob: -9.512934684753418
    7. '110' → logprob: -10.762934684753418
    8. '001' → logprob: -11.012934684753418
    9. '0' → logprob: -15.762934684753418
    10. ''' → logprob: -15.887934684753418

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010968804126605392
    2. '0' → logprob: -7.001096725463867
    3. '110' → logprob: -9.876096725463867
    4. '01' → logprob: -10.001096725463867
    5. '011' → logprob: -10.376096725463867
    6. '010' → logprob: -10.626096725463867
    7. '11' → logprob: -11.376096725463867
    8. '100' → logprob: -11.501096725463867
    9. '000' → logprob: -12.251096725463867
    10. '101' → logprob: -12.751096725463867

Token 91: '',
' (ID: 1214)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18837396800518036
    2. ''' → logprob: -2.5633740425109863
    3. '00' → logprob: -3.1883740425109863
    4. '01' → logprob: -3.8133740425109863
    5. '10' → logprob: -4.688374042510986
    6. '',' → logprob: -4.688374042510986
    7. ',' → logprob: -5.313374042510986
    8. '<|end|>' → logprob: -5.688374042510986
    9. '010' → logprob: -6.688374042510986
    10. '1' → logprob: -6.813374042510986

Token 92: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06433318555355072
    2. '           ' → logprob: -2.814333200454712
    3. ' ' → logprob: -6.939332962036133
    4. '       ' → logprob: -8.064332962036133
    5. ''
' → logprob: -8.064332962036133
    6. '  ' → logprob: -8.564332962036133
    7. '   ' → logprob: -9.189332962036133
    8. '         ' → logprob: -9.564332962036133
    9. '          ' → logprob: -9.564332962036133
    10. ' '' → logprob: -9.814332962036133

Token 93: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.005591840948909521
    2. ' '' → logprob: -6.005591869354248
    3. ''A' → logprob: -6.380591869354248
    4. '           ' → logprob: -7.005591869354248
    5. ''E' → logprob: -8.00559139251709
    6. '       ' → logprob: -9.88059139251709
    7. ' ' → logprob: -10.25559139251709
    8. '   ' → logprob: -10.63059139251709
    9. ''D' → logprob: -11.38059139251709
    10. '  ' → logprob: -11.88059139251709

Token 94: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -4.36574100604048e-06
    2. ''' → logprob: -13.625004768371582
    3. 'C' → logprob: -13.750004768371582
    4. ''E' → logprob: -13.750004768371582
    5. ' E' → logprob: -14.250004768371582
    6. 'S' → logprob: -16.000003814697266
    7. 'A' → logprob: -16.125003814697266
    8. 'Q' → logprob: -16.875003814697266
    9. 'e' → logprob: -17.750003814697266
    10. 'D' → logprob: -18.000003814697266

Token 95: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.22686518728733063
    2. ''' → logprob: -1.6018651723861694
    3. ' ':' → logprob: -7.351865291595459
    4. ':' → logprob: -7.601865291595459
    5. ' '' → logprob: -9.1018648147583
    6. '':'' → logprob: -9.3518648147583
    7. ' ' → logprob: -10.7268648147583
    8. ' :' → logprob: -10.9768648147583
    9. ''''' → logprob: -11.3518648147583
    10. '<|end|>' → logprob: -11.3518648147583

Token 96: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.23131825029850006
    2. ' ' → logprob: -1.9813182353973389
    3. ' '' → logprob: -2.856318235397339
    4. '010' → logprob: -5.106318473815918
    5. '100' → logprob: -6.481318473815918
    6. '1' → logprob: -6.731318473815918
    7. '000' → logprob: -6.856318473815918
    8. '0' → logprob: -7.231318473815918
    9. '001' → logprob: -8.606318473815918
    10. '101' → logprob: -8.856318473815918

Token 97: '110' (ID: 7920)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20204129815101624
    2. '0' → logprob: -1.7020412683486938
    3. ''' → logprob: -7.577041149139404
    4. '01' → logprob: -10.077041625976562
    5. '00' → logprob: -10.327041625976562
    6. '000' → logprob: -11.327041625976562
    7. '100' → logprob: -12.077041625976562
    8. '```' → logprob: -12.577041625976562
    9. ' '' → logprob: -12.827041625976562
    10. '010' → logprob: -12.952041625976562

Token 98: '',
' (ID: 1214)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6432133316993713
    2. '           ' → logprob: -0.7682133316993713
    3. ' ' → logprob: -6.268213272094727
    4. '               ' → logprob: -6.268213272094727
    5. '       ' → logprob: -6.393213272094727
    6. '<|end|>' → logprob: -7.143213272094727
    7. '          ' → logprob: -7.768213272094727
    8. ',' → logprob: -7.768213272094727
    9. '         ' → logprob: -8.018213272094727
    10. ''A' → logprob: -8.018213272094727

Token 100: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.016635635867714882
    2. '           ' → logprob: -4.266635417938232
    3. ' '' → logprob: -6.766635417938232
    4. ''A' → logprob: -6.891635417938232
    5. ' ' → logprob: -9.26663589477539
    6. '       ' → logprob: -9.64163589477539
    7. '   ' → logprob: -9.89163589477539
    8. ''D' → logprob: -10.51663589477539
    9. '  ' → logprob: -11.14163589477539
    10. '               ' → logprob: -11.89163589477539

Token 101: 'F' (ID: 37)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.5754817128181458
    2. ''' → logprob: -1.450481653213501
    3. 'F' → logprob: -2.575481653213501
    4. ' ')' → logprob: -3.200481653213501
    5. 'T' → logprob: -3.575481653213501
    6. 'I' → logprob: -4.32548189163208
    7. 'A' → logprob: -4.95048189163208
    8. ' ' → logprob: -4.95048189163208
    9. 'Q' → logprob: -5.45048189163208
    10. '100' → logprob: -5.57548189163208

Token 102: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.07956399768590927
    2. '<|end|>' → logprob: -3.079564094543457
    3. ':' → logprob: -4.204564094543457
    4. ''' → logprob: -4.704564094543457
    5. '<|end|>' → logprob: -6.454564094543457
    6. ''>' → logprob: -7.079564094543457
    7. ' :' → logprob: -7.204564094543457
    8. '':'' → logprob: -7.579564094543457
    9. '101' → logprob: -7.704564094543457
    10. ' ':' → logprob: -7.829564094543457

Token 103: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1260746270418167
    2. ' '' → logprob: -2.2510745525360107
    3. ' ' → logprob: -4.37607479095459
    4. '100' → logprob: -8.37607479095459
    5. '   ' → logprob: -9.00107479095459
    6. '010' → logprob: -9.62607479095459
    7. '  ' → logprob: -9.75107479095459
    8. '101' → logprob: -10.37607479095459
    9. ''''' → logprob: -11.25107479095459
    10. '`' → logprob: -11.25107479095459

Token 104: '010' (ID: 13522)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.4646219313144684
    2. '010' → logprob: -1.464621901512146
    3. '101' → logprob: -1.964621901512146
    4. '000' → logprob: -8.839621543884277
    5. '110' → logprob: -10.589621543884277
    6. '`' → logprob: -10.839621543884277
    7. '001' → logprob: -11.089621543884277
    8. '111' → logprob: -11.339621543884277
    9. ' ' → logprob: -11.839621543884277
    10. '011' → logprob: -11.964621543884277

Token 105: '01' (ID: 2290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030714360997080803
    2. '00' → logprob: -4.280714511871338
    3. '000' → logprob: -4.405714511871338
    4. '1' → logprob: -5.655714511871338
    5. '011' → logprob: -8.28071403503418
    6. '010' → logprob: -8.53071403503418
    7. '01' → logprob: -8.65571403503418
    8. '001' → logprob: -10.03071403503418
    9. '10' → logprob: -10.90571403503418
    10. '11' → logprob: -12.15571403503418

Token 106: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3645913302898407
    2. '',' → logprob: -1.364591360092163
    3. '0' → logprob: -3.614591360092163
    4. '',
' → logprob: -4.364591121673584
    5. '6' → logprob: -5.864591121673584
    6. '<|end|>' → logprob: -6.114591121673584
    7. ' ' → logprob: -6.864591121673584
    8. '   ' → logprob: -7.114591121673584
    9. ',' → logprob: -7.489591121673584
    10. '1' → logprob: -7.864591121673584

Token 107: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5806561708450317
    2. ''' → logprob: -0.8306561708450317
    3. '       ' → logprob: -5.955656051635742
    4. '          ' → logprob: -7.830656051635742
    5. ' ' → logprob: -7.955656051635742
    6. '               ' → logprob: -8.080656051635742
    7. '         ' → logprob: -8.455656051635742
    8. '   ' → logprob: -8.705656051635742
    9. ''A' → logprob: -8.830656051635742
    10. '  ' → logprob: -9.705656051635742

Token 108: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.001298330957069993
    2. ' '' → logprob: -6.876298427581787
    3. ''A' → logprob: -8.751297950744629
    4. ''C' → logprob: -10.751297950744629
    5. ''S' → logprob: -11.001297950744629
    6. ''
' → logprob: -11.251297950744629
    7. '   ' → logprob: -11.501297950744629
    8. ''T' → logprob: -11.876297950744629
    9. ''E' → logprob: -12.001297950744629
    10. ''\' → logprob: -12.001297950744629

Token 109: 'G' (ID: 38)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.11494657397270203
    2. '011' → logprob: -2.7399466037750244
    3. '010' → logprob: -3.4899466037750244
    4. '000' → logprob: -4.989946365356445
    5. '101' → logprob: -5.364946365356445
    6. '001' → logprob: -7.239946365356445
    7. ''' → logprob: -7.489946365356445
    8. '111' → logprob: -8.239946365356445
    9. '110' → logprob: -8.364946365356445
    10. ' ' → logprob: -8.614946365356445

Token 110: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.07971977442502975
    2. ':' → logprob: -2.7047197818756104
    3. ''' → logprob: -5.454719543457031
    4. ' :' → logprob: -5.579719543457031
    5. '<|end|>' → logprob: -7.704719543457031
    6. ' ':' → logprob: -8.204719543457031
    7. '":' → logprob: -8.704719543457031
    8. '   ' → logprob: -8.829719543457031
    9. '':'' → logprob: -9.079719543457031
    10. ' ' → logprob: -9.079719543457031

Token 111: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.021228713914752007
    2. '100' → logprob: -4.396228790283203
    3. ' '' → logprob: -5.146228790283203
    4. ' ' → logprob: -6.021228790283203
    5. '"' → logprob: -8.521228790283203
    6. '000' → logprob: -9.146228790283203
    7. ''s' → logprob: -10.396228790283203
    8. ''''' → logprob: -10.896228790283203
    9. '```' → logprob: -11.271228790283203
    10. '   ' → logprob: -11.396228790283203

Token 112: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.00015050210640765727
    2. '000' → logprob: -8.875150680541992
    3. ' ' → logprob: -12.375150680541992
    4. ''' → logprob: -13.125150680541992
    5. '101' → logprob: -13.625150680541992
    6. '110' → logprob: -14.125150680541992
    7. '010' → logprob: -14.375150680541992
    8. '```' → logprob: -14.625150680541992
    9. '10' → logprob: -14.875150680541992
    10. '１００' → logprob: -15.500150680541992

Token 113: '110' (ID: 7920)
  Prédit: '110'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '110' → logprob: -0.5306403040885925
    2. '100' → logprob: -1.5306403636932373
    3. '101' → logprob: -2.0306403636932373
    4. '10' → logprob: -3.5306403636932373
    5. '111' → logprob: -3.6556403636932373
    6. '11' → logprob: -4.905640125274658
    7. '1' → logprob: -6.780640125274658
    8. '

' → logprob: -8.405640602111816
    9. '010' → logprob: -9.405640602111816
    10. '```' → logprob: -10.030640602111816

Token 114: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.007199086248874664
    2. '1' → logprob: -5.382199287414551
    3. '0' → logprob: -6.132199287414551
    4. '00' → logprob: -8.38219928741455
    5. '
' → logprob: -9.75719928741455
    6. '110' → logprob: -10.25719928741455
    7. '111' → logprob: -10.88219928741455
    8. '011' → logprob: -11.63219928741455
    9. '01' → logprob: -11.75719928741455
    10. '```' → logprob: -12.00719928741455

Token 115: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.18016842007637024
    2. ''' → logprob: -1.9301683902740479
    3. '',
' → logprob: -3.930168390274048
    4. '',

' → logprob: -9.805168151855469
    5. '',
' → logprob: -11.430168151855469
    6. '       ' → logprob: -11.680168151855469
    7. ''}' → logprob: -11.930168151855469
    8. '   ' → logprob: -12.430168151855469
    9. '','' → logprob: -13.055168151855469
    10. '           ' → logprob: -13.180168151855469

Token 116: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5241678357124329
    2. ''' → logprob: -0.8991678357124329
    3. '          ' → logprob: -7.774168014526367
    4. '       ' → logprob: -9.274168014526367
    5. ' ' → logprob: -9.399168014526367
    6. '            ' → logprob: -9.524168014526367
    7. '               ' → logprob: -10.024168014526367
    8. '"' → logprob: -10.024168014526367
    9. '   ' → logprob: -10.274168014526367
    10. '`' → logprob: -10.274168014526367

Token 117: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.032112207263708115
    2. ' '' → logprob: -4.032112121582031
    3. '           ' → logprob: -4.407112121582031
    4. ' ' → logprob: -6.907112121582031
    5. '   ' → logprob: -8.657112121582031
    6. '       ' → logprob: -9.282112121582031
    7. ''
' → logprob: -9.657112121582031
    8. ''\' → logprob: -9.907112121582031
    9. '  ' → logprob: -10.032112121582031
    10. '          ' → logprob: -10.157112121582031

Token 118: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -7.219262624857947e-05
    2. 'D' → logprob: -10.875072479248047
    3. 'A' → logprob: -11.250072479248047
    4. ''' → logprob: -11.500072479248047
    5. ''H' → logprob: -11.500072479248047
    6. 'I' → logprob: -12.000072479248047
    7. ' H' → logprob: -12.250072479248047
    8. 'G' → logprob: -12.625072479248047
    9. 'C' → logprob: -13.750072479248047
    10. 'L' → logprob: -14.125072479248047

Token 119: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.581797182559967
    2. '':' → logprob: -0.956797182559967
    3. '<|end|>' → logprob: -3.3317971229553223
    4. ''' → logprob: -4.706797122955322
    5. ' :' → logprob: -5.206797122955322
    6. ' =' → logprob: -5.831797122955322
    7. '           ' → logprob: -7.081797122955322
    8. '       ' → logprob: -7.206797122955322
    9. '=' → logprob: -7.831797122955322
    10. '<|end|>' → logprob: -7.831797122955322

Token 120: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.043272871524095535
    2. ' '' → logprob: -3.1682729721069336
    3. ' ' → logprob: -8.668272972106934
    4. '100' → logprob: -9.793272972106934
    5. '"' → logprob: -10.668272972106934
    6. '010' → logprob: -11.793272972106934
    7. '110' → logprob: -11.793272972106934
    8. '   ' → logprob: -13.543272972106934
    9. ''s' → logprob: -14.043272972106934
    10. '  ' → logprob: -14.293272972106934

Token 121: '010' (ID: 13522)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.24026301503181458
    2. '010' → logprob: -1.8652629852294922
    3. '100' → logprob: -2.990262985229492
    4. '101' → logprob: -5.490262985229492
    5. '011' → logprob: -6.490262985229492
    6. '001' → logprob: -6.490262985229492
    7. ''' → logprob: -6.990262985229492
    8. '0' → logprob: -8.865262985229492
    9. '110' → logprob: -9.115262985229492
    10. '111' → logprob: -10.365262985229492

Token 122: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.055650677531957626
    2. '00' → logprob: -2.9306507110595703
    3. '0' → logprob: -7.55565071105957
    4. '010' → logprob: -9.18065071105957
    5. '001' → logprob: -9.55565071105957
    6. '100' → logprob: -10.18065071105957
    7. '10' → logprob: -11.80565071105957
    8. '011' → logprob: -11.93065071105957
    9. '1' → logprob: -12.05565071105957
    10. '101' → logprob: -12.80565071105957

Token 123: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4405457079410553
    2. '',' → logprob: -1.065545678138733
    3. '',
' → logprob: -4.565545558929443
    4. '       ' → logprob: -7.815545558929443
    5. ' '' → logprob: -8.190546035766602
    6. ' ',' → logprob: -8.440546035766602
    7. '   ' → logprob: -8.690546035766602
    8. ''}' → logprob: -9.690546035766602
    9. '','' → logprob: -10.065546035766602
    10. ' ',
' → logprob: -10.065546035766602

Token 124: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.017583424225449562
    2. '           ' → logprob: -4.14258337020874
    3. ' '' → logprob: -7.64258337020874
    4. ' ' → logprob: -8.142583847045898
    5. '       ' → logprob: -8.517583847045898
    6. ''I' → logprob: -8.892583847045898
    7. ''A' → logprob: -9.267583847045898
    8. '`' → logprob: -10.017583847045898
    9. ''T' → logprob: -10.017583847045898
    10. '          ' → logprob: -10.517583847045898

Token 125: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.005071875639259815
    2. '           ' → logprob: -5.630071640014648
    3. ' '' → logprob: -6.880071640014648
    4. ''A' → logprob: -8.630071640014648
    5. ''I' → logprob: -9.130071640014648
    6. '       ' → logprob: -10.880071640014648
    7. ''E' → logprob: -11.130071640014648
    8. '   ' → logprob: -11.130071640014648
    9. '          ' → logprob: -11.130071640014648
    10. ''H' → logprob: -11.255071640014648

Token 126: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.48193997144699097
    2. ''I' → logprob: -0.981939971446991
    3. ''' → logprob: -4.856939792633057
    4. ''i' → logprob: -10.356940269470215
    5. '‘I' → logprob: -12.106940269470215
    6. ' I' → logprob: -12.356940269470215
    7. '’I' → logprob: -12.481940269470215
    8. '"I' → logprob: -12.981940269470215
    9. '100' → logprob: -13.106940269470215
    10. ' ' → logprob: -13.856940269470215

Token 127: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.07250605523586273
    2. ''' → logprob: -2.9475059509277344
    3. ':' → logprob: -4.072505950927734
    4. '':'' → logprob: -9.447505950927734
    5. ' :' → logprob: -9.572505950927734
    6. ' ':' → logprob: -9.572505950927734
    7. '   ' → logprob: -10.072505950927734
    8. ' '' → logprob: -10.197505950927734
    9. ''s' → logprob: -10.197505950927734
    10. '       ' → logprob: -10.822505950927734

Token 128: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01518032606691122
    2. ' '' → logprob: -4.5151801109313965
    3. ' ' → logprob: -5.6401801109313965
    4. '"' → logprob: -8.640180587768555
    5. '110' → logprob: -9.015180587768555
    6. '100' → logprob: -9.265180587768555
    7. '   ' → logprob: -9.890180587768555
    8. '111' → logprob: -10.265180587768555
    9. '101' → logprob: -10.765180587768555
    10. '  ' → logprob: -11.015180587768555

Token 129: '011' (ID: 17342)
  Prédit: '011'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '011' → logprob: -0.022301027551293373
    2. '100' → logprob: -4.272301197052002
    3. '001' → logprob: -6.022301197052002
    4. '1' → logprob: -6.147301197052002
    5. '000' → logprob: -6.897301197052002
    6. '110' → logprob: -7.272301197052002
    7. '11' → logprob: -7.772301197052002
    8. '111' → logprob: -8.022300720214844
    9. '101' → logprob: -8.147300720214844
    10. '"' → logprob: -8.522300720214844

Token 130: '1' (ID: 16)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.15514861047267914
    2. '0' → logprob: -2.155148506164551
    3. ''' → logprob: -3.780148506164551
    4. '001' → logprob: -5.780148506164551
    5. '1' → logprob: -7.530148506164551
    6. '010' → logprob: -7.905148506164551
    7. '00' → logprob: -8.28014850616455
    8. '100' → logprob: -8.53014850616455
    9. '01' → logprob: -8.78014850616455
    10. '011' → logprob: -8.90514850616455

Token 131: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.33344557881355286
    2. ',' → logprob: -1.8334455490112305
    3. '',' → logprob: -2.8334455490112305
    4. '           ' → logprob: -3.7084455490112305
    5. '       ' → logprob: -4.2084455490112305
    6. ',
' → logprob: -4.9584455490112305
    7. '',
' → logprob: -5.2084455490112305
    8. ' ' → logprob: -5.5834455490112305
    9. ' ,' → logprob: -6.5834455490112305
    10. '0' → logprob: -6.7084455490112305

Token 132: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12117145210504532
    2. '           ' → logprob: -2.246171474456787
    3. ' ' → logprob: -5.496171474456787
    4. '<|end|>' → logprob: -5.996171474456787
    5. ' '' → logprob: -7.621171474456787
    6. '       ' → logprob: -7.871171474456787
    7. '```' → logprob: -8.621170997619629
    8. '          ' → logprob: -8.996170997619629
    9. '            ' → logprob: -9.246170997619629
    10. '         ' → logprob: -9.871170997619629

Token 133: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.011689226143062115
    2. ' '' → logprob: -4.636689186096191
    3. '           ' → logprob: -6.636689186096191
    4. ''E' → logprob: -8.136689186096191
    5. ''A' → logprob: -9.886689186096191
    6. '   ' → logprob: -9.886689186096191
    7. ''D' → logprob: -10.261689186096191
    8. ''I' → logprob: -10.261689186096191
    9. ''T' → logprob: -10.386689186096191
    10. ' ' → logprob: -10.511689186096191

Token 134: 'J' (ID: 41)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.031848430633545
    2. 'E' → logprob: -1.031848430633545
    3. 'L' → logprob: -2.031848430633545
    4. ' '' → logprob: -3.156848430633545
    5. 'K' → logprob: -3.406848430633545
    6. ''E' → logprob: -4.031848430633545
    7. 'J' → logprob: -4.156848430633545
    8. ''L' → logprob: -4.281848430633545
    9. 'C' → logprob: -5.281848430633545
    10. '000' → logprob: -5.656848430633545

Token 135: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.004338494967669249
    2. ':' → logprob: -5.754338264465332
    3. ''' → logprob: -7.254338264465332
    4. '":' → logprob: -8.629338264465332
    5. ' ':' → logprob: -9.629338264465332
    6. '           ' → logprob: -9.754338264465332
    7. '':'' → logprob: -10.254338264465332
    8. '```' → logprob: -10.504338264465332
    9. '<|end|>' → logprob: -11.004338264465332
    10. ' :' → logprob: -11.504338264465332

Token 136: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03699053078889847
    2. '100' → logprob: -3.5369906425476074
    3. ' ' → logprob: -5.661990642547607
    4. '000' → logprob: -5.911990642547607
    5. ' '' → logprob: -7.911990642547607
    6. '010' → logprob: -8.16199016571045
    7. '"' → logprob: -8.41199016571045
    8. '   ' → logprob: -10.41199016571045
    9. '    ' → logprob: -10.41199016571045
    10. '  ' → logprob: -10.91199016571045

Token 137: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.6333479285240173
    2. '000' → logprob: -0.7583479285240173
    3. '010' → logprob: -7.508347988128662
    4. '011' → logprob: -9.133347511291504
    5. '```' → logprob: -10.508347511291504
    6. ''' → logprob: -10.758347511291504
    7. '101' → logprob: -11.633347511291504
    8. '"' → logprob: -11.633347511291504
    9. ' ' → logprob: -12.133347511291504
    10. '001' → logprob: -12.258347511291504

Token 138: '110' (ID: 7920)
  Prédit: '110'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '110' → logprob: -0.6709033250808716
    2. '100' → logprob: -1.2959033250808716
    3. '101' → logprob: -1.5459033250808716
    4. '111' → logprob: -6.670903205871582
    5. '010' → logprob: -7.920903205871582
    6. '10' → logprob: -8.670903205871582
    7. '000' → logprob: -9.545903205871582
    8. '1' → logprob: -9.545903205871582
    9. '001' → logprob: -10.670903205871582
    10. '11' → logprob: -11.795903205871582

Token 139: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.2832191586494446
    2. '0' → logprob: -1.4082190990447998
    3. ''' → logprob: -6.408219337463379
    4. '11' → logprob: -9.283219337463379
    5. ''
' → logprob: -9.408219337463379
    6. '\
' → logprob: -9.783219337463379
    7. '01' → logprob: -10.158219337463379
    8. '10' → logprob: -10.158219337463379
    9. '```' → logprob: -10.533219337463379
    10. '1' → logprob: -11.408219337463379

Token 140: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.42992889881134033
    2. ''' → logprob: -1.0549288988113403
    3. '',
' → logprob: -6.804928779602051
    4. ''}' → logprob: -9.92992877960205
    5. '','' → logprob: -11.30492877960205
    6. ' '' → logprob: -11.30492877960205
    7. '',

' → logprob: -12.17992877960205
    8. '}' → logprob: -12.17992877960205
    9. ',' → logprob: -12.30492877960205
    10. '       ' → logprob: -12.42992877960205

Token 141: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0012889248318970203
    2. '           ' → logprob: -7.001288890838623
    3. ' ' → logprob: -8.626289367675781
    4. '            ' → logprob: -10.376289367675781
    5. '`' → logprob: -10.501289367675781
    6. '       ' → logprob: -10.626289367675781
    7. ' '' → logprob: -10.751289367675781
    8. '"' → logprob: -10.876289367675781
    9. ' 
' → logprob: -11.501289367675781
    10. '```' → logprob: -11.501289367675781

Token 142: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.0017605057219043374
    2. '           ' → logprob: -6.376760482788086
    3. ' '' → logprob: -10.626760482788086
    4. ''A' → logprob: -11.876760482788086
    5. '            ' → logprob: -12.001760482788086
    6. '               ' → logprob: -12.501760482788086
    7. '          ' → logprob: -12.626760482788086
    8. '             ' → logprob: -13.251760482788086
    9. '       ' → logprob: -13.376760482788086
    10. ' ' → logprob: -13.376760482788086

Token 143: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00036715567694045603
    2. ''' → logprob: -8.000367164611816
    3. '"K' → logprob: -11.250367164611816
    4. 'k' → logprob: -12.250367164611816
    5. '100' → logprob: -12.375367164611816
    6. 'J' → logprob: -12.500367164611816
    7. '<K' → logprob: -13.375367164611816
    8. ' K' → logprob: -13.875367164611816
    9. '101' → logprob: -14.000367164611816
    10. '	K' → logprob: -14.125367164611816

Token 144: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.07945346087217331
    2. ''' → logprob: -2.579453468322754
    3. ':' → logprob: -8.204453468322754
    4. '':'' → logprob: -8.954453468322754
    5. ' ':' → logprob: -9.954453468322754
    6. ' '' → logprob: -10.454453468322754
    7. '":' → logprob: -11.454453468322754
    8. '   ' → logprob: -11.579453468322754
    9. '='' → logprob: -11.704453468322754
    10. '<|end|>' → logprob: -11.829453468322754

Token 145: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0022027131635695696
    2. ' '' → logprob: -6.25220251083374
    3. '100' → logprob: -8.252202987670898
    4. '"' → logprob: -11.502202987670898
    5. ' ' → logprob: -12.752202987670898
    6. ''s' → logprob: -15.877202987670898
    7. '101' → logprob: -17.0022029876709
    8. ''h' → logprob: -17.2522029876709
    9. ''use' → logprob: -17.5022029876709
    10. '   ' → logprob: -17.5022029876709

Token 146: '011' (ID: 17342)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -8.2994620242971e-06
    2. '１００' → logprob: -12.125008583068848
    3. '101' → logprob: -13.000008583068848
    4. '```' → logprob: -16.00000762939453
    5. '   ' → logprob: -16.75000762939453
    6. '000' → logprob: -16.87500762939453
    7. '     ' → logprob: -17.25000762939453
    8. ''' → logprob: -17.50000762939453
    9. '       ' → logprob: -17.50000762939453
    10. '``' → logprob: -17.50000762939453

Token 147: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.34123218059539795
    2. '010' → logprob: -1.591232180595398
    3. '1' → logprob: -2.8412322998046875
    4. '011' → logprob: -3.9662322998046875
    5. '101' → logprob: -5.5912322998046875
    6. '000' → logprob: -6.5912322998046875
    7. '100' → logprob: -6.7162322998046875
    8. '001' → logprob: -6.8412322998046875
    9. '110' → logprob: -8.091232299804688
    10. '111' → logprob: -8.841232299804688

Token 148: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.2559012770652771
    2. '',
' → logprob: -1.8809013366699219
    3. ''' → logprob: -2.630901336669922
    4. '100' → logprob: -7.380901336669922
    5. '',

' → logprob: -8.755901336669922
    6. '110' → logprob: -8.880901336669922
    7. '1' → logprob: -9.005901336669922
    8. '10' → logprob: -10.005901336669922
    9. ' ',' → logprob: -10.005901336669922
    10. '',
' → logprob: -10.130901336669922

Token 149: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0181773342192173
    2. '           ' → logprob: -4.143177509307861
    3. ' '' → logprob: -6.893177509307861
    4. ' ' → logprob: -7.768177509307861
    5. '<|end|>' → logprob: -7.768177509307861
    6. '       ' → logprob: -9.643177032470703
    7. ''A' → logprob: -10.518177032470703
    8. '```' → logprob: -10.643177032470703
    9. '          ' → logprob: -10.768177032470703
    10. ''s' → logprob: -10.768177032470703

Token 150: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.0003244990948587656
    2. ' '' → logprob: -8.250324249267578
    3. '           ' → logprob: -10.000324249267578
    4. ''T' → logprob: -12.375324249267578
    5. ' ' → logprob: -12.875324249267578
    6. ''I' → logprob: -13.250324249267578
    7. ''A' → logprob: -13.250324249267578
    8. '"' → logprob: -13.750324249267578
    9. '       ' → logprob: -14.250324249267578
    10. '         ' → logprob: -14.250324249267578

Token 151: 'L' (ID: 43)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0006314247148111463
    2. ''' → logprob: -7.375631332397461
    3. '101' → logprob: -13.375631332397461
    4. ' ' → logprob: -13.500631332397461
    5. '"' → logprob: -14.125631332397461
    6. '1' → logprob: -14.625631332397461
    7. '10' → logprob: -14.625631332397461
    8. '```' → logprob: -17.00063133239746
    9. '010' → logprob: -17.25063133239746
    10. '１００' → logprob: -17.37563133239746

Token 152: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0010432900162413716
    2. ''' → logprob: -6.876043319702148
    3. '":' → logprob: -12.251043319702148
    4. ':' → logprob: -12.751043319702148
    5. ' ':' → logprob: -13.501043319702148
    6. '```' → logprob: -14.626043319702148
    7. '   ' → logprob: -15.626043319702148
    8. ' =' → logprob: -15.751043319702148
    9. '='' → logprob: -15.751043319702148
    10. '':'' → logprob: -15.751043319702148

Token 153: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0012063038302585483
    2. ' '' → logprob: -6.751206398010254
    3. ' ' → logprob: -11.251206398010254
    4. '100' → logprob: -11.251206398010254
    5. '"' → logprob: -12.251206398010254
    6. '010' → logprob: -12.501206398010254
    7. ' ' → logprob: -14.501206398010254
    8. ''s' → logprob: -15.126206398010254
    9. '000' → logprob: -16.001205444335938
    10. '101' → logprob: -16.001205444335938

Token 154: '001' (ID: 7659)
  Prédit: '010'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '010' → logprob: -0.38277915120124817
    2. '000' → logprob: -1.5077791213989258
    3. '100' → logprob: -2.382779121398926
    4. '101' → logprob: -6.382779121398926
    5. '10' → logprob: -6.507779121398926
    6. '001' → logprob: -7.007779121398926
    7. ''' → logprob: -8.507779121398926
    8. '"' → logprob: -11.507779121398926
    9. '1' → logprob: -11.507779121398926
    10. ' ' → logprob: -11.757779121398926

Token 155: '00' (ID: 504)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.11437490582466125
    2. '100' → logprob: -2.364374876022339
    3. '001' → logprob: -4.989375114440918
    4. '0' → logprob: -6.114375114440918
    5. '101' → logprob: -6.114375114440918
    6. '00' → logprob: -6.239375114440918
    7. '1' → logprob: -7.614375114440918
    8. '011' → logprob: -8.489375114440918
    9. '   ' → logprob: -9.864375114440918
    10. '11' → logprob: -10.239375114440918

Token 156: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2281612902879715
    2. '',' → logprob: -1.603161334991455
    3. '',
' → logprob: -6.228161334991455
    4. '           ' → logprob: -7.853161334991455
    5. '       ' → logprob: -8.228160858154297
    6. ' '' → logprob: -9.978160858154297
    7. '   ' → logprob: -11.103160858154297
    8. ''}' → logprob: -11.228160858154297
    9. ' ',' → logprob: -11.353160858154297
    10. '':' → logprob: -11.978160858154297

Token 157: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4746149778366089
    2. '           ' → logprob: -0.9746149778366089
    3. '       ' → logprob: -8.599615097045898
    4. ''A' → logprob: -8.724615097045898
    5. '          ' → logprob: -10.599615097045898
    6. ' '' → logprob: -10.724615097045898
    7. '               ' → logprob: -10.724615097045898
    8. ''T' → logprob: -10.849615097045898
    9. ' ' → logprob: -11.224615097045898
    10. '   ' → logprob: -11.224615097045898

Token 158: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.007056457456201315
    2. '           ' → logprob: -5.00705623626709
    3. ' '' → logprob: -9.00705623626709
    4. ''T' → logprob: -9.75705623626709
    5. ''A' → logprob: -10.13205623626709
    6. ''M' → logprob: -10.38205623626709
    7. '               ' → logprob: -10.75705623626709
    8. '       ' → logprob: -10.88205623626709
    9. ' ' → logprob: -11.75705623626709
    10. ''U' → logprob: -11.88205623626709

Token 159: 'M' (ID: 44)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6792398691177368
    2. ''S' → logprob: -0.8042398691177368
    3. ''M' → logprob: -3.4292397499084473
    4. ''E' → logprob: -5.304239749908447
    5. ' '' → logprob: -6.054239749908447
    6. ''T' → logprob: -6.429239749908447
    7. 'M' → logprob: -6.929239749908447
    8. 'S' → logprob: -7.179239749908447
    9. ''C' → logprob: -7.804239749908447
    10. ''A' → logprob: -7.929239749908447

Token 160: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.091455839574337
    2. ''' → logprob: -2.4664559364318848
    3. '':'' → logprob: -7.341455936431885
    4. '   ' → logprob: -7.466455936431885
    5. '100' → logprob: -7.466455936431885
    6. ' ':' → logprob: -8.716455459594727
    7. '       ' → logprob: -8.841455459594727
    8. ':' → logprob: -8.841455459594727
    9. ' '' → logprob: -9.466455459594727
    10. '```' → logprob: -10.091455459594727

Token 161: ' '' (ID: 461)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.3779113292694092
    2. ''' → logprob: -1.6279113292694092
    3. ' ' → logprob: -2.252911329269409
    4. '"' → logprob: -5.127911567687988
    5. '   ' → logprob: -6.377911567687988
    6. ' '' → logprob: -6.502911567687988
    7. '010' → logprob: -6.627911567687988
    8. '110' → logprob: -6.752911567687988
    9. '101' → logprob: -7.502911567687988
    10. '  ' → logprob: -7.627911567687988

Token 162: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.00022523177904076874
    2. '000' → logprob: -8.625225067138672
    3. ' ' → logprob: -11.125225067138672
    4. '  ' → logprob: -11.500225067138672
    5. '   ' → logprob: -11.750225067138672
    6. '     ' → logprob: -12.500225067138672
    7. '101' → logprob: -12.875225067138672
    8. '    ' → logprob: -13.375225067138672
    9. '010' → logprob: -14.375225067138672
    10. '１００' → logprob: -14.375225067138672

Token 163: '110' (ID: 7920)
  Prédit: '110'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '110' → logprob: -0.2695128619670868
    2. '101' → logprob: -1.6445128917694092
    3. '000' → logprob: -3.769512891769409
    4. '100' → logprob: -4.14451265335083
    5. '11' → logprob: -6.51951265335083
    6. '111' → logprob: -6.76951265335083
    7. '1' → logprob: -7.14451265335083
    8. '01' → logprob: -7.89451265335083
    9. '010' → logprob: -8.394513130187988
    10. '10' → logprob: -9.144513130187988

Token 164: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.21984954178333282
    2. '00' → logprob: -2.0948495864868164
    3. '1' → logprob: -3.4698495864868164
    4. '0' → logprob: -3.8448495864868164
    5. '10' → logprob: -4.094849586486816
    6. '11' → logprob: -6.594849586486816
    7. '
' → logprob: -7.094849586486816
    8. '12' → logprob: -7.469849586486816
    9. '100' → logprob: -7.469849586486816
    10. '

' → logprob: -7.719849586486816

Token 165: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.1826854795217514
    2. ''' → logprob: -1.8076854944229126
    3. '',
' → logprob: -6.307685375213623
    4. '           ' → logprob: -7.682685375213623
    5. '       ' → logprob: -8.057685852050781
    6. ',' → logprob: -8.182685852050781
    7. ''}' → logprob: -11.432685852050781
    8. '   ' → logprob: -11.557685852050781
    9. '','' → logprob: -11.682685852050781
    10. '',

' → logprob: -12.182685852050781

Token 166: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03065033070743084
    2. '           ' → logprob: -3.5306503772735596
    3. '       ' → logprob: -7.5306501388549805
    4. ' '' → logprob: -8.53065013885498
    5. ' ' → logprob: -9.65565013885498
    6. '   ' → logprob: -9.78065013885498
    7. '          ' → logprob: -11.78065013885498
    8. ''A' → logprob: -11.90565013885498
    9. '  ' → logprob: -12.03065013885498
    10. '         ' → logprob: -12.78065013885498

Token 167: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.004222759045660496
    2. '           ' → logprob: -5.629222869873047
    3. '       ' → logprob: -7.504222869873047
    4. ''N' → logprob: -10.379222869873047
    5. '   ' → logprob: -11.629222869873047
    6. ' '' → logprob: -12.004222869873047
    7. '               ' → logprob: -12.629222869873047
    8. ''A' → logprob: -12.879222869873047
    9. ''U' → logprob: -12.879222869873047
    10. ' ' → logprob: -12.879222869873047

Token 168: 'N' (ID: 45)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.019274897873401642
    2. '001' → logprob: -4.019274711608887
    3. '0' → logprob: -8.019274711608887
    4. ''N' → logprob: -8.269274711608887
    5. '000' → logprob: -8.519274711608887
    6. '010' → logprob: -10.144274711608887
    7. 'N' → logprob: -10.144274711608887
    8. '','' → logprob: -10.144274711608887
    9. '111' → logprob: -10.394274711608887
    10. '   ' → logprob: -10.644274711608887

Token 169: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.21785227954387665
    2. '<|end|>' → logprob: -1.967852234840393
    3. ''' → logprob: -3.3428523540496826
    4. ':' → logprob: -4.2178521156311035
    5. '<|end|>' → logprob: -6.4678521156311035
    6. '':'' → logprob: -6.8428521156311035
    7. ' '' → logprob: -7.5928521156311035
    8. '='' → logprob: -7.5928521156311035
    9. '',' → logprob: -7.9678521156311035
    10. ''>' → logprob: -8.092852592468262

Token 170: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01294656191021204
    2. ' ' → logprob: -4.887946605682373
    3. ' '' → logprob: -5.637946605682373
    4. '100' → logprob: -6.762946605682373
    5. '010' → logprob: -8.012946128845215
    6. '"' → logprob: -9.512946128845215
    7. '110' → logprob: -9.762946128845215
    8. '101' → logprob: -9.887946128845215
    9. ''s' → logprob: -10.012946128845215
    10. '0' → logprob: -11.887946128845215

Token 171: '100' (ID: 1353)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.03265809640288353
    2. '100' → logprob: -3.782658100128174
    3. '001' → logprob: -5.532658100128174
    4. '010' → logprob: -6.032658100128174
    5. '101' → logprob: -6.532658100128174
    6. '011' → logprob: -7.032658100128174
    7. ' ' → logprob: -7.907658100128174
    8. ''' → logprob: -9.282657623291016
    9. '110' → logprob: -9.657657623291016
    10. '  ' → logprob: -10.407657623291016

Token 172: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.6524396538734436
    2. '110' → logprob: -0.7774396538734436
    3. '000' → logprob: -5.027439594268799
    4. '101' → logprob: -5.277439594268799
    5. '001' → logprob: -5.777439594268799
    6. '011' → logprob: -6.277439594268799
    7. '100' → logprob: -7.152439594268799
    8. '010' → logprob: -7.277439594268799
    9. '1' → logprob: -7.402439594268799
    10. '0' → logprob: -8.027440071105957

Token 173: '10' (ID: 702)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.28865718841552734
    2. '0' → logprob: -1.4136571884155273
    3. '10' → logprob: -5.538657188415527
    4. ''' → logprob: -6.413657188415527
    5. '01' → logprob: -6.538657188415527
    6. '1' → logprob: -8.163657188415527
    7. ''}' → logprob: -9.288657188415527
    8. '}' → logprob: -10.788657188415527
    9. '11' → logprob: -10.913657188415527
    10. '')' → logprob: -11.663657188415527

Token 174: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.5459364652633667
    2. ''' → logprob: -0.9209364652633667
    3. '',
' → logprob: -4.170936584472656
    4. '       ' → logprob: -5.170936584472656
    5. '           ' → logprob: -7.045936584472656
    6. ',' → logprob: -8.045936584472656
    7. '   ' → logprob: -9.420936584472656
    8. ''}' → logprob: -10.420936584472656
    9. ',
' → logprob: -10.795936584472656
    10. '','' → logprob: -11.045936584472656

Token 175: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.014613893814384937
    2. '           ' → logprob: -4.264614105224609
    3. '       ' → logprob: -8.13961410522461
    4. ' '' → logprob: -10.38961410522461
    5. ''A' → logprob: -10.51461410522461
    6. '   ' → logprob: -11.13961410522461
    7. ' ' → logprob: -11.63961410522461
    8. '         ' → logprob: -11.76461410522461
    9. '               ' → logprob: -12.01461410522461
    10. ''T' → logprob: -12.01461410522461

Token 176: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.0024575800634920597
    2. '           ' → logprob: -6.377457618713379
    3. ''D' → logprob: -8.002457618713379
    4. ''O' → logprob: -9.002457618713379
    5. '       ' → logprob: -9.127457618713379
    6. ' '' → logprob: -10.002457618713379
    7. ''A' → logprob: -10.502457618713379
    8. ''S' → logprob: -10.627457618713379
    9. ''L' → logprob: -11.002457618713379
    10. ''N' → logprob: -11.377457618713379

Token 177: 'O' (ID: 46)
  Prédit: 'O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.22904109954833984
    2. ''O' → logprob: -1.9790410995483398
    3. ''' → logprob: -2.72904109954834
    4. ' '' → logprob: -7.60404109954834
    5. ' O' → logprob: -8.47904109954834
    6. '0' → logprob: -9.22904109954834
    7. ''S' → logprob: -9.35404109954834
    8. ''o' → logprob: -9.72904109954834
    9. '`' → logprob: -9.85404109954834
    10. ''T' → logprob: -10.22904109954834

Token 178: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.031204907223582268
    2. ':' → logprob: -3.53120493888855
    3. ''' → logprob: -6.781204700469971
    4. '":' → logprob: -9.781205177307129
    5. ' =' → logprob: -9.906205177307129
    6. ' ':' → logprob: -10.031205177307129
    7. '=' → logprob: -10.281205177307129
    8. '':'' → logprob: -10.531205177307129
    9. '='' → logprob: -10.656205177307129
    10. '   ' → logprob: -11.531205177307129

Token 179: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4751029908657074
    2. ' '' → logprob: -0.9751030206680298
    3. ' ' → logprob: -6.97510290145874
    4. '100' → logprob: -9.725103378295898
    5. '"' → logprob: -10.850103378295898
    6. '101' → logprob: -12.850103378295898
    7. '010' → logprob: -12.975103378295898
    8. ' "' → logprob: -13.350103378295898
    9. '110' → logprob: -13.600103378295898
    10. ' ' → logprob: -14.225103378295898

Token 180: '001' (ID: 7659)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.030926058068871498
    2. '111' → logprob: -3.655925989151001
    3. '001' → logprob: -6.28092622756958
    4. '000' → logprob: -6.78092622756958
    5. '101' → logprob: -6.90592622756958
    6. '011' → logprob: -8.405925750732422
    7. '010' → logprob: -8.655925750732422
    8. '1' → logprob: -9.030925750732422
    9. '110' → logprob: -10.655925750732422
    10. '"' → logprob: -10.905925750732422

Token 181: '01' (ID: 2290)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.4367903172969818
    2. '1' → logprob: -1.6867903470993042
    3. '10' → logprob: -2.1867902278900146
    4. '01' → logprob: -3.5617902278900146
    5. '101' → logprob: -3.6867902278900146
    6. '0' → logprob: -6.561790466308594
    7. '111' → logprob: -7.686790466308594
    8. '110' → logprob: -7.936790466308594
    9. '011' → logprob: -8.186790466308594
    10. '001' → logprob: -9.311790466308594

Token 182: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5373373031616211
    2. '',' → logprob: -0.9123373031616211
    3. '',
' → logprob: -4.287337303161621
    4. '       ' → logprob: -8.412337303161621
    5. ''}' → logprob: -10.037337303161621
    6. '           ' → logprob: -10.537337303161621
    7. '',

' → logprob: -11.287337303161621
    8. '','' → logprob: -11.287337303161621
    9. ',' → logprob: -11.912337303161621
    10. '<|end|>' → logprob: -11.912337303161621

Token 183: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5235405564308167
    2. ''' → logprob: -0.8985405564308167
    3. '       ' → logprob: -8.023540496826172
    4. '          ' → logprob: -10.648540496826172
    5. '   ' → logprob: -11.773540496826172
    6. ''N' → logprob: -11.898540496826172
    7. '```' → logprob: -12.148540496826172
    8. ''A' → logprob: -12.398540496826172
    9. ''s' → logprob: -12.523540496826172
    10. '               ' → logprob: -12.523540496826172

Token 184: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.00925376359373331
    2. '           ' → logprob: -4.759253978729248
    3. ''N' → logprob: -7.759253978729248
    4. '       ' → logprob: -9.13425350189209
    5. ' '' → logprob: -10.25925350189209
    6. ''A' → logprob: -10.63425350189209
    7. '          ' → logprob: -11.88425350189209
    8. ''S' → logprob: -12.13425350189209
    9. ''D' → logprob: -12.13425350189209
    10. ''T' → logprob: -12.38425350189209

Token 185: 'P' (ID: 47)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.21041017770767212
    2. 'P' → logprob: -1.8354101181030273
    3. ' '' → logprob: -3.7104101181030273
    4. 'R' → logprob: -5.835410118103027
    5. '100' → logprob: -7.085410118103027
    6. '000' → logprob: -7.210410118103027
    7. ''S' → logprob: -7.710410118103027
    8. 'W' → logprob: -8.585410118103027
    9. '111' → logprob: -9.460410118103027
    10. ''r' → logprob: -9.460410118103027

Token 186: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.00021176543668843806
    2. ''' → logprob: -9.000211715698242
    3. ':' → logprob: -9.625211715698242
    4. '":' → logprob: -11.500211715698242
    5. ' ':' → logprob: -11.875211715698242
    6. '           ' → logprob: -13.125211715698242
    7. '':'' → logprob: -14.375211715698242
    8. '       ' → logprob: -14.500211715698242
    9. '```' → logprob: -14.625211715698242
    10. '='' → logprob: -15.125211715698242

Token 187: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0011240257881581783
    2. ' '' → logprob: -6.876123905181885
    3. '100' → logprob: -10.001124382019043
    4. ' ' → logprob: -10.751124382019043
    5. '"' → logprob: -11.001124382019043
    6. '110' → logprob: -12.626124382019043
    7. '101' → logprob: -13.751124382019043
    8. ''s' → logprob: -14.501124382019043
    9. '   ' → logprob: -14.626124382019043
    10. ''d' → logprob: -14.626124382019043

Token 188: '111' (ID: 8780)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.036964911967515945
    2. ''' → logprob: -3.4119648933410645
    3. '101' → logprob: -6.4119648933410645
    4. '111' → logprob: -6.9119648933410645
    5. '010' → logprob: -7.9119648933410645
    6. '000' → logprob: -9.411965370178223
    7. '"' → logprob: -9.536965370178223
    8. '011' → logprob: -9.661965370178223
    9. '110' → logprob: -10.286965370178223
    10. ''''' → logprob: -11.661965370178223

Token 189: '',
' (ID: 1214)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.7724388837814331
    2. '<|end|>' → logprob: -1.772438883781433
    3. '100' → logprob: -2.2724390029907227
    4. '010' → logprob: -2.3974390029907227
    5. '011' → logprob: -3.1474390029907227
    6. '001' → logprob: -3.3974390029907227
    7. '111' → logprob: -3.6474390029907227
    8. '10' → logprob: -4.022439002990723
    9. '00' → logprob: -4.272439002990723
    10. ''' → logprob: -4.397439002990723

Token 190: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09979916363954544
    2. ''' → logprob: -2.474799156188965
    3. '       ' → logprob: -4.724799156188965
    4. '<|end|>' → logprob: -7.349799156188965
    5. '          ' → logprob: -7.474799156188965
    6. '   ' → logprob: -8.474799156188965
    7. '}' → logprob: -9.474799156188965
    8. ' ' → logprob: -9.474799156188965
    9. '...' → logprob: -9.724799156188965
    10. '```' → logprob: -10.224799156188965

Token 191: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.049128539860248566
    2. '           ' → logprob: -3.049128532409668
    3. '       ' → logprob: -8.049128532409668
    4. '          ' → logprob: -9.674128532409668
    5. '               ' → logprob: -10.174128532409668
    6. ''A' → logprob: -10.549128532409668
    7. '}' → logprob: -11.174128532409668
    8. '         ' → logprob: -11.299128532409668
    9. ' '' → logprob: -11.424128532409668
    10. '            ' → logprob: -11.674128532409668

Token 192: 'Q' (ID: 48)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.007033497095108032
    2. ''S' → logprob: -5.507033348083496
    3. ' '' → logprob: -7.132033348083496
    4. '100' → logprob: -7.132033348083496
    5. ''C' → logprob: -8.132033348083496
    6. 'Q' → logprob: -8.507033348083496
    7. ''A' → logprob: -8.882033348083496
    8. '   ' → logprob: -8.882033348083496
    9. ''E' → logprob: -9.132033348083496
    10. ''T' → logprob: -9.132033348083496

Token 193: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8432624936103821
    2. '<|end|>' → logprob: -0.9682624936103821
    3. '':' → logprob: -1.7182624340057373
    4. '<|end|>' → logprob: -5.468262672424316
    5. ''' → logprob: -5.593262672424316
    6. '='' → logprob: -7.343262672424316
    7. '':'' → logprob: -7.843262672424316
    8. '')' → logprob: -8.468262672424316
    9. '```' → logprob: -8.593262672424316
    10. '           ' → logprob: -8.843262672424316

Token 194: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3944358229637146
    2. '100' → logprob: -1.1444358825683594
    3. ' ' → logprob: -5.644435882568359
    4. ''s' → logprob: -6.269435882568359
    5. '"' → logprob: -7.769435882568359
    6. ' '' → logprob: -8.14443588256836
    7. '101' → logprob: -8.26943588256836
    8. '010' → logprob: -8.64443588256836
    9. '110' → logprob: -8.76943588256836
    10. ''use' → logprob: -9.14443588256836

Token 195: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.00021688752167392522
    2. '110' → logprob: -9.375216484069824
    3. '101' → logprob: -9.875216484069824
    4. '１００' → logprob: -10.750216484069824
    5. '111' → logprob: -11.125216484069824
    6. '000' → logprob: -11.125216484069824
    7. '010' → logprob: -11.375216484069824
    8. '```' → logprob: -12.375216484069824
    9. ''' → logprob: -13.250216484069824
    10. ' ' → logprob: -13.250216484069824

Token 196: '111' (ID: 8780)
  Prédit: '110'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '110' → logprob: -0.6938830018043518
    2. '111' → logprob: -0.6938830018043518
    3. '100' → logprob: -7.818882942199707
    4. '101' → logprob: -8.193882942199707
    5. '010' → logprob: -10.318882942199707
    6. '000' → logprob: -11.443882942199707
    7. '1' → logprob: -12.068882942199707
    8. '011' → logprob: -12.443882942199707
    9. '001' → logprob: -12.818882942199707
    10. '0' → logprob: -15.318882942199707

Token 197: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.0887099876999855
    2. '00' → logprob: -2.588710069656372
    3. '01' → logprob: -4.713709831237793
    4. '10' → logprob: -8.088709831237793
    5. '1' → logprob: -8.213709831237793
    6. '0' → logprob: -8.713709831237793
    7. '```' → logprob: -10.463709831237793
    8. '')' → logprob: -11.963709831237793
    9. '']' → logprob: -12.463709831237793
    10. ''' → logprob: -12.463709831237793

Token 198: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.023086948320269585
    2. ''' → logprob: -3.8980870246887207
    3. '',
' → logprob: -6.398087024688721
    4. ',' → logprob: -7.773087024688721
    5. '           ' → logprob: -8.148086547851562
    6. '}' → logprob: -9.648086547851562
    7. ''}' → logprob: -10.523086547851562
    8. '       ' → logprob: -10.648086547851562
    9. '','' → logprob: -10.898086547851562
    10. ',
' → logprob: -12.148086547851562

Token 199: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47438135743141174
    2. ''' → logprob: -0.9743813276290894
    3. '       ' → logprob: -8.474381446838379
    4. '          ' → logprob: -9.599381446838379
    5. '}' → logprob: -12.224381446838379
    6. '         ' → logprob: -12.349381446838379
    7. '               ' → logprob: -12.599381446838379
    8. '   ' → logprob: -12.849381446838379
    9. '```' → logprob: -13.224381446838379
    10. '            ' → logprob: -13.599381446838379

Token 200: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.22669099271297455
    2. '           ' → logprob: -1.6016910076141357
    3. '       ' → logprob: -8.351691246032715
    4. ''N' → logprob: -8.851691246032715
    5. ''U' → logprob: -8.976691246032715
    6. ' '' → logprob: -8.976691246032715
    7. '          ' → logprob: -9.101691246032715
    8. ''A' → logprob: -9.351691246032715
    9. ''S' → logprob: -9.351691246032715
    10. ''I' → logprob: -9.476691246032715

Token 201: 'R' (ID: 49)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.000521577603649348
    2. 'R' → logprob: -8.875521659851074
    3. '   ' → logprob: -9.000521659851074
    4. ''r' → logprob: -9.125521659851074
    5. ' '' → logprob: -10.375521659851074
    6. ''S' → logprob: -10.750521659851074
    7. '      ' → logprob: -11.125521659851074
    8. '100' → logprob: -11.250521659851074
    9. '       ' → logprob: -11.375521659851074
    10. ''Re' → logprob: -11.875521659851074

Token 202: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.008687613531947136
    2. ':' → logprob: -5.258687496185303
    3. '           ' → logprob: -6.258687496185303
    4. ''' → logprob: -6.633687496185303
    5. '       ' → logprob: -9.633687973022461
    6. '':'' → logprob: -10.383687973022461
    7. ' :' → logprob: -10.633687973022461
    8. '   ' → logprob: -11.008687973022461
    9. '":' → logprob: -11.008687973022461
    10. '```' → logprob: -11.383687973022461

Token 203: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.009785485453903675
    2. ' '' → logprob: -4.6347856521606445
    3. ' ' → logprob: -11.134785652160645
    4. '"' → logprob: -11.759785652160645
    5. '   ' → logprob: -13.509785652160645
    6. '010' → logprob: -14.259785652160645
    7. '           ' → logprob: -14.509785652160645
    8. '  ' → logprob: -14.759785652160645
    9. '    ' → logprob: -14.759785652160645
    10. '100' → logprob: -15.009785652160645

Token 204: '100' (ID: 1353)
  Prédit: '010'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '010' → logprob: -0.021083755418658257
    2. ''' → logprob: -3.8960838317871094
    3. '"' → logprob: -7.896083831787109
    4. '011' → logprob: -10.02108383178711
    5. '101' → logprob: -10.52108383178711
    6. ''*' → logprob: -10.77108383178711
    7. '   ' → logprob: -11.02108383178711
    8. '001' → logprob: -11.14608383178711
    9. '0' → logprob: -11.89608383178711
    10. ''.' → logprob: -12.14608383178711

Token 205: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8721060156822205
    2. '010' → logprob: -1.7471060752868652
    3. '110' → logprob: -2.1221060752868652
    4. '000' → logprob: -2.3721060752868652
    5. '100' → logprob: -2.6221060752868652
    6. '111' → logprob: -3.2471060752868652
    7. '101' → logprob: -3.2471060752868652
    8. ')' → logprob: -3.9971060752868652
    9. '011' → logprob: -4.872106075286865
    10. '0' → logprob: -4.997106075286865

Token 206: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.14065636694431305
    2. '',' → logprob: -2.1406564712524414
    3. '':' → logprob: -5.390656471252441
    4. '01' → logprob: -6.140656471252441
    5. '0' → logprob: -6.265656471252441
    6. '1' → logprob: -6.515656471252441
    7. '',
' → logprob: -6.890656471252441
    8. '00' → logprob: -7.765656471252441
    9. '       ' → logprob: -7.890656471252441
    10. ''}' → logprob: -8.140656471252441

Token 207: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07974904775619507
    2. ''' → logprob: -2.57974910736084
    3. '       ' → logprob: -7.95474910736084
    4. ''S' → logprob: -8.32974910736084
    5. ''s' → logprob: -9.07974910736084
    6. '          ' → logprob: -9.57974910736084
    7. '   ' → logprob: -10.32974910736084
    8. '               ' → logprob: -11.95474910736084
    9. '```' → logprob: -11.95474910736084
    10. '}' → logprob: -12.20474910736084

Token 208: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.49241670966148376
    2. ''S' → logprob: -1.3674167394638062
    3. '           ' → logprob: -2.1174166202545166
    4. ''N' → logprob: -5.367416858673096
    5. '       ' → logprob: -5.617416858673096
    6. ''T' → logprob: -6.117416858673096
    7. ''L' → logprob: -6.992416858673096
    8. ''D' → logprob: -7.367416858673096
    9. ' '' → logprob: -8.117416381835938
    10. ''A' → logprob: -8.242416381835938

Token 209: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.2530398666858673
    2. ''S' → logprob: -1.628039836883545
    3. ''' → logprob: -3.628039836883545
    4. ''s' → logprob: -7.878039836883545
    5. ' '' → logprob: -9.128040313720703
    6. ' S' → logprob: -9.253040313720703
    7. ''U' → logprob: -10.503040313720703
    8. ''O' → logprob: -11.253040313720703
    9. '001' → logprob: -12.003040313720703
    10. ''I' → logprob: -12.378040313720703

Token 210: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.00067966926144436
    2. ':' → logprob: -7.8756794929504395
    3. ''' → logprob: -8.375679969787598
    4. '           ' → logprob: -10.500679969787598
    5. '":' → logprob: -10.625679969787598
    6. '       ' → logprob: -11.750679969787598
    7. '   ' → logprob: -12.750679969787598
    8. ' ':' → logprob: -12.875679969787598
    9. ' :' → logprob: -13.500679969787598
    10. '':'' → logprob: -14.375679969787598

Token 211: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00021629150433000177
    2. ' '' → logprob: -8.750216484069824
    3. '"' → logprob: -10.250216484069824
    4. '   ' → logprob: -11.750216484069824
    5. ''s' → logprob: -12.375216484069824
    6. ' ' → logprob: -12.500216484069824
    7. '010' → logprob: -12.500216484069824
    8. ''S' → logprob: -14.000216484069824
    9. '    ' → logprob: -14.750216484069824
    10. '011' → logprob: -15.125216484069824

Token 212: '001' (ID: 7659)
  Prédit: '001'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '001' → logprob: -0.006837560795247555
    2. '101' → logprob: -5.881837368011475
    3. '011' → logprob: -6.256837368011475
    4. '000' → logprob: -6.381837368011475
    5. '010' → logprob: -8.881837844848633
    6. '100' → logprob: -9.131837844848633
    7. '111' → logprob: -9.131837844848633
    8. ''' → logprob: -10.256837844848633
    9. '0' → logprob: -12.131837844848633
    10. '   ' → logprob: -12.506837844848633

Token 213: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02431226149201393
    2. '11' → logprob: -3.8993122577667236
    3. '01' → logprob: -5.774312496185303
    4. '10' → logprob: -7.399312496185303
    5. '0' → logprob: -11.399312019348145
    6. '101' → logprob: -11.524312019348145
    7. '```' → logprob: -11.774312019348145
    8. '   ' → logprob: -12.774312019348145
    9. '011' → logprob: -12.899312019348145
    10. '``' → logprob: -13.149312019348145

Token 214: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10103605687618256
    2. '',' → logprob: -2.3510360717773438
    3. '',
' → logprob: -7.226036071777344
    4. ''}' → logprob: -9.851036071777344
    5. '       ' → logprob: -11.476036071777344
    6. ' '' → logprob: -11.476036071777344
    7. '   ' → logprob: -12.226036071777344
    8. '','' → logprob: -12.476036071777344
    9. '':' → logprob: -12.476036071777344
    10. ' ',' → logprob: -13.351036071777344

Token 215: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05672264099121094
    2. ''' → logprob: -2.931722640991211
    3. ''S' → logprob: -6.806722640991211
    4. '       ' → logprob: -8.431722640991211
    5. ''T' → logprob: -8.681722640991211
    6. '          ' → logprob: -9.181722640991211
    7. ''s' → logprob: -9.306722640991211
    8. '   ' → logprob: -9.556722640991211
    9. ' '' → logprob: -10.306722640991211
    10. ''A' → logprob: -12.306722640991211

Token 216: ' '' (ID: 461)
  Prédit: ''T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''T' → logprob: -0.09012282639741898
    2. ''' (adapté à ' '') → logprob: -2.840122938156128
    3. '           ' → logprob: -3.590122938156128
    4. '       ' → logprob: -10.090123176574707
    5. ''S' → logprob: -10.590123176574707
    6. ''t' → logprob: -10.715123176574707
    7. 'T' → logprob: -10.965123176574707
    8. ' '' → logprob: -11.090123176574707
    9. ''U' → logprob: -11.215123176574707
    10. '          ' → logprob: -11.840123176574707

Token 217: 'T' (ID: 51)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1039627268910408
    2. ''T' → logprob: -2.3539626598358154
    3. ''S' → logprob: -5.9789628982543945
    4. ''A' → logprob: -7.4789628982543945
    5. ' '' → logprob: -7.9789628982543945
    6. ''U' → logprob: -9.603962898254395
    7. ''C' → logprob: -9.978962898254395
    8. ''E' → logprob: -9.978962898254395
    9. ''I' → logprob: -10.103962898254395
    10. 'T' → logprob: -10.228962898254395

Token 218: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.025544915348291397
    2. ':' → logprob: -3.9005448818206787
    3. ''' → logprob: -5.650545120239258
    4. '<|end|>' → logprob: -7.900545120239258
    5. '           ' → logprob: -8.025545120239258
    6. '       ' → logprob: -8.400545120239258
    7. ' :' → logprob: -9.400545120239258
    8. '=' → logprob: -9.400545120239258
    9. '='' → logprob: -9.525545120239258
    10. ' =' → logprob: -9.650545120239258

Token 219: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0056981579400599
    2. ' '' → logprob: -5.255698204040527
    3. ' ' → logprob: -7.880698204040527
    4. '"' → logprob: -10.505698204040527
    5. '111' → logprob: -10.880698204040527
    6. '110' → logprob: -11.005698204040527
    7. '100' → logprob: -11.880698204040527
    8. '0' → logprob: -12.380698204040527
    9. '010' → logprob: -12.755698204040527
    10. '   ' → logprob: -13.130698204040527

Token 220: '001' (ID: 7659)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7616492509841919
    2. '000' → logprob: -1.261649250984192
    3. '001' → logprob: -2.5116491317749023
    4. '101' → logprob: -2.8866491317749023
    5. '010' → logprob: -3.0116491317749023
    6. '111' → logprob: -3.7616491317749023
    7. ''' → logprob: -3.7616491317749023
    8. '100' → logprob: -5.011649131774902
    9. '011' → logprob: -5.886649131774902
    10. '01' → logprob: -6.011649131774902

Token 221: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.0013748762430623174
    2. '1' → logprob: -7.2513747215271
    3. '01' → logprob: -8.001375198364258
    4. '110' → logprob: -9.251375198364258
    5. '111' → logprob: -9.501375198364258
    6. '00' → logprob: -9.626375198364258
    7. '10' → logprob: -10.501375198364258
    8. '000' → logprob: -10.626375198364258
    9. '011' → logprob: -10.876375198364258
    10. '0' → logprob: -11.751375198364258

Token 222: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11458457261323929
    2. '',' → logprob: -2.2395846843719482
    3. '',
' → logprob: -6.864584445953369
    4. '       ' → logprob: -7.989584445953369
    5. ''}' → logprob: -8.364584922790527
    6. '}' → logprob: -9.864584922790527
    7. ',' → logprob: -10.364584922790527
    8. '           ' → logprob: -10.864584922790527
    9. '   ' → logprob: -11.239584922790527
    10. ' '' → logprob: -12.239584922790527

Token 223: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04782966524362564
    2. ''' → logprob: -3.2978296279907227
    3. '       ' → logprob: -4.672829627990723
    4. ''U' → logprob: -8.672829627990723
    5. '          ' → logprob: -9.922829627990723
    6. '}' → logprob: -10.047829627990723
    7. '   ' → logprob: -10.047829627990723
    8. ''T' → logprob: -10.422829627990723
    9. ''A' → logprob: -11.172829627990723
    10. '         ' → logprob: -11.672829627990723

Token 224: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.507448673248291
    2. '           ' → logprob: -1.132448673248291
    3. '       ' → logprob: -2.882448673248291
    4. ''U' → logprob: -4.632448673248291
    5. '}' → logprob: -5.132448673248291
    6. ''S' → logprob: -6.382448673248291
    7. ''T' → logprob: -6.632448673248291
    8. ''N' → logprob: -8.132448196411133
    9. '   ' → logprob: -8.507448196411133
    10. ''A' → logprob: -9.132448196411133

Token 225: 'U' (ID: 52)
  Prédit: 'U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.11685949563980103
    2. ''U' → logprob: -2.2418594360351562
    3. ''' → logprob: -5.616859436035156
    4. ' U' → logprob: -8.366859436035156
    5. 'V' → logprob: -10.116859436035156
    6. 'W' → logprob: -10.241859436035156
    7. ' '' → logprob: -10.741859436035156
    8. ''u' → logprob: -10.991859436035156
    9. ''\' → logprob: -11.741859436035156
    10. '``' → logprob: -12.616859436035156

Token 226: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0010067274561151862
    2. ':' → logprob: -7.001006603240967
    3. ''' → logprob: -9.876007080078125
    4. '":' → logprob: -10.501007080078125
    5. ' ':' → logprob: -11.501007080078125
    6. ' =' → logprob: -12.876007080078125
    7. ' :' → logprob: -14.126007080078125
    8. '=' → logprob: -14.376007080078125
    9. '':'' → logprob: -14.751007080078125
    10. '’:' → logprob: -15.001007080078125

Token 227: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00013393278641160578
    2. ' '' → logprob: -9.000133514404297
    3. '"' → logprob: -11.750133514404297
    4. '100' → logprob: -13.375133514404297
    5. ' ' → logprob: -14.500133514404297
    6. '   ' → logprob: -16.500133514404297
    7. '010' → logprob: -16.750133514404297
    8. '110' → logprob: -16.875133514404297
    9. '101' → logprob: -17.875133514404297
    10. ''A' → logprob: -18.000133514404297

Token 228: '100' (ID: 1353)
  Prédit: '010'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '010' → logprob: -0.48557019233703613
    2. '100' → logprob: -1.7355701923370361
    3. '111' → logprob: -2.235570192337036
    4. '000' → logprob: -2.860570192337036
    5. '001' → logprob: -3.985570192337036
    6. '110' → logprob: -4.110569953918457
    7. '"' → logprob: -5.860569953918457
    8. '101' → logprob: -6.235569953918457
    9. '011' → logprob: -6.360569953918457
    10. ''' → logprob: -7.235569953918457

Token 229: '111' (ID: 8780)
  Prédit: '101'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -0.41135847568511963
    2. '010' → logprob: -2.28635835647583
    3. '100' → logprob: -2.41135835647583
    4. '111' → logprob: -2.91135835647583
    5. '000' → logprob: -3.16135835647583
    6. '0' → logprob: -4.28635835647583
    7. '1' → logprob: -4.41135835647583
    8. '110' → logprob: -4.41135835647583
    9. '011' → logprob: -5.03635835647583
    10. '001' → logprob: -5.66135835647583

Token 230: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.007268325425684452
    2. '01' → logprob: -5.13226842880249
    3. '0' → logprob: -7.38226842880249
    4. '11' → logprob: -7.75726842880249
    5. '1' → logprob: -9.132267951965332
    6. '000' → logprob: -9.632267951965332
    7. '<|end|>' → logprob: -9.632267951965332
    8. '}' → logprob: -10.757267951965332
    9. '```' → logprob: -12.007267951965332
    10. '</' → logprob: -12.632267951965332

Token 231: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.1201644316315651
    2. '',
' → logprob: -2.495164394378662
    3. ''' → logprob: -3.495164394378662
    4. '       ' → logprob: -8.74516487121582
    5. '',
' → logprob: -9.49516487121582
    6. ',' → logprob: -9.62016487121582
    7. ',
' → logprob: -10.37016487121582
    8. '           ' → logprob: -10.62016487121582
    9. '}' → logprob: -11.24516487121582
    10. ''}' → logprob: -11.37016487121582

Token 232: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3890213072299957
    2. '           ' → logprob: -1.1390212774276733
    3. ''U' → logprob: -6.389021396636963
    4. '       ' → logprob: -8.389020919799805
    5. '          ' → logprob: -9.514020919799805
    6. ''A' → logprob: -9.889020919799805
    7. '               ' → logprob: -10.639020919799805
    8. '         ' → logprob: -10.889020919799805
    9. ''T' → logprob: -11.139020919799805
    10. '   ' → logprob: -11.389020919799805

Token 233: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.0750705748796463
    2. '           ' → logprob: -2.82507061958313
    3. ''U' → logprob: -4.575070381164551
    4. '       ' → logprob: -6.825070381164551
    5. ''T' → logprob: -7.200070381164551
    6. ' '' → logprob: -7.450070381164551
    7. ''S' → logprob: -9.45007038116455
    8. ''A' → logprob: -9.57507038116455
    9. '          ' → logprob: -10.07507038116455
    10. '         ' → logprob: -11.07507038116455

Token 234: 'V' (ID: 53)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.019473303109407425
    2. 'V' → logprob: -4.394473075866699
    3. '100' → logprob: -5.644473075866699
    4. ''I' → logprob: -6.644473075866699
    5. ''A' → logprob: -6.644473075866699
    6. ''S' → logprob: -8.7694730758667
    7. ''T' → logprob: -8.8944730758667
    8. ''D' → logprob: -9.1444730758667
    9. ''E' → logprob: -9.8944730758667
    10. ' '' → logprob: -9.8944730758667

Token 235: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.001597460824996233
    2. ':' → logprob: -7.0015974044799805
    3. ''' → logprob: -7.6265974044799805
    4. ' =' → logprob: -9.12659740447998
    5. '=' → logprob: -10.12659740447998
    6. ''=' → logprob: -10.87659740447998
    7. '":' → logprob: -11.37659740447998
    8. ' ':' → logprob: -11.37659740447998
    9. '='' → logprob: -12.75159740447998
    10. '')' → logprob: -14.37659740447998

Token 236: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.003180094063282013
    2. ' '' → logprob: -5.878180027008057
    3. '100' → logprob: -8.003180503845215
    4. ' ' → logprob: -10.253180503845215
    5. '"' → logprob: -13.128180503845215
    6. '   ' → logprob: -14.378180503845215
    7. '101' → logprob: -14.378180503845215
    8. '010' → logprob: -14.628180503845215
    9. ''s' → logprob: -14.753180503845215
    10. '  ' → logprob: -15.378180503845215

Token 237: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.01438185852020979
    2. ''' → logprob: -4.2643818855285645
    3. '101' → logprob: -8.514381408691406
    4. '010' → logprob: -11.389381408691406
    5. ''''' → logprob: -13.014381408691406
    6. ''s' → logprob: -14.014381408691406
    7. '111' → logprob: -14.639381408691406
    8. ' ' → logprob: -14.764381408691406
    9. '110' → logprob: -14.889381408691406
    10. '"' → logprob: -15.014381408691406

Token 238: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.0767655298113823
    2. '110' → logprob: -2.951765537261963
    3. '101' → logprob: -4.326765537261963
    4. '100' → logprob: -5.576765537261963
    5. '011' → logprob: -6.076765537261963
    6. '010' → logprob: -6.451765537261963
    7. '001' → logprob: -8.076765060424805
    8. '000' → logprob: -8.076765060424805
    9. ''' → logprob: -9.826765060424805
    10. '0' → logprob: -9.951765060424805

Token 239: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.006749835796654224
    2. '10' → logprob: -5.006749629974365
    3. '010' → logprob: -11.006750106811523
    4. '11' → logprob: -12.256750106811523
    5. '101' → logprob: -12.381750106811523
    6. '00' → logprob: -12.631750106811523
    7. '```' → logprob: -13.381750106811523
    8. '0' → logprob: -13.506750106811523
    9. '1' → logprob: -13.506750106811523
    10. ''' → logprob: -14.381750106811523

Token 240: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.13382793962955475
    2. ''' → logprob: -2.1338279247283936
    3. '',
' → logprob: -5.008828163146973
    4. '       ' → logprob: -9.008828163146973
    5. '           ' → logprob: -10.508828163146973
    6. ''}' → logprob: -10.633828163146973
    7. '',
' → logprob: -11.758828163146973
    8. '}' → logprob: -12.633828163146973
    9. '',

' → logprob: -12.883828163146973
    10. '   ' → logprob: -12.883828163146973

Token 241: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2598098814487457
    2. '           ' → logprob: -1.5098098516464233
    3. '       ' → logprob: -4.884809970855713
    4. ''U' → logprob: -9.634809494018555
    5. '}' → logprob: -9.759809494018555
    6. '   ' → logprob: -10.634809494018555
    7. ''T' → logprob: -10.759809494018555
    8. '               ' → logprob: -11.009809494018555
    9. ''w' → logprob: -11.009809494018555
    10. ' '' → logprob: -11.134809494018555

Token 242: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.02913864143192768
    2. '       ' → logprob: -3.9041385650634766
    3. '           ' → logprob: -5.029138565063477
    4. '}' → logprob: -7.279138565063477
    5. ''T' → logprob: -7.529138565063477
    6. ''U' → logprob: -7.779138565063477
    7. ' '' → logprob: -9.154138565063477
    8. '   ' → logprob: -9.529138565063477
    9. ''S' → logprob: -10.279138565063477
    10. '               ' → logprob: -10.404138565063477

Token 243: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.10279568284749985
    2. ''' → logprob: -2.3527956008911133
    3. ' W' → logprob: -7.227795600891113
    4. ''w' → logprob: -7.352795600891113
    5. ' '' → logprob: -7.727795600891113
    6. '"W' → logprob: -8.477795600891113
    7. ''S' → logprob: -8.852795600891113
    8. ' ' → logprob: -9.602795600891113
    9. ''s' → logprob: -10.102795600891113
    10. 'X' → logprob: -10.352795600891113

Token 244: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0011717714369297028
    2. ':' → logprob: -7.376171588897705
    3. ''' → logprob: -7.626171588897705
    4. '":' → logprob: -10.001172065734863
    5. ' =' → logprob: -12.501172065734863
    6. ' ':' → logprob: -12.876172065734863
    7. '           ' → logprob: -14.501172065734863
    8. ' :' → logprob: -14.501172065734863
    9. '')' → logprob: -14.626172065734863
    10. '```' → logprob: -14.626172065734863

Token 245: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0014213069807738066
    2. ' '' → logprob: -6.8764214515686035
    3. ' ' → logprob: -8.001420974731445
    4. '100' → logprob: -10.126420974731445
    5. '"' → logprob: -12.251420974731445
    6. '101' → logprob: -13.001420974731445
    7. '010' → logprob: -13.376420974731445
    8. '110' → logprob: -13.376420974731445
    9. ''''' → logprob: -14.376420974731445
    10. '   ' → logprob: -14.751420974731445

Token 246: '000' (ID: 1302)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.45141851902008057
    2. '000' → logprob: -2.076418399810791
    3. '101' → logprob: -2.076418399810791
    4. '100' → logprob: -2.826418399810791
    5. '011' → logprob: -3.451418399810791
    6. '010' → logprob: -3.951418399810791
    7. '111' → logprob: -6.826418399810791
    8. '"' → logprob: -7.201418399810791
    9. '110' → logprob: -8.07641887664795
    10. '```' → logprob: -9.82641887664795

Token 247: '010' (ID: 13522)
  Prédit: '010'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '010' → logprob: -0.01258770190179348
    2. '101' → logprob: -5.262587547302246
    3. ''' → logprob: -5.762587547302246
    4. '000' → logprob: -6.262587547302246
    5. ''''
' → logprob: -7.012587547302246
    6. ''''' → logprob: -8.012587547302246
    7. '110' → logprob: -8.137587547302246
    8. '''' → logprob: -8.512587547302246
    9. '011' → logprob: -8.887587547302246
    10. '100' → logprob: -9.137587547302246

Token 248: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.3596729040145874
    2. ''' → logprob: -1.3596729040145874
    3. '',
' → logprob: -3.109673023223877
    4. ''}' → logprob: -7.359673023223877
    5. '       ' → logprob: -10.109672546386719
    6. '           ' → logprob: -11.109672546386719
    7. ''
' → logprob: -11.359672546386719
    8. '',

' → logprob: -11.984672546386719
    9. '',
' → logprob: -12.484672546386719
    10. ' '' → logprob: -13.109672546386719

Token 249: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.31495681405067444
    2. '           ' → logprob: -1.314956784248352
    3. '       ' → logprob: -6.6899566650390625
    4. ' '' → logprob: -8.064956665039062
    5. '   ' → logprob: -10.189956665039062
    6. '          ' → logprob: -10.439956665039062
    7. '         ' → logprob: -11.439956665039062
    8. '}' → logprob: -11.939956665039062
    9. '"' → logprob: -12.064956665039062
    10. ' ' → logprob: -12.064956665039062

Token 250: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.08813831210136414
    2. '       ' → logprob: -2.8381383419036865
    3. '}' → logprob: -3.9631383419036865
    4. '           ' → logprob: -5.713138103485107
    5. '   ' → logprob: -5.838138103485107
    6. ''}' → logprob: -8.838138580322266
    7. ' '' → logprob: -9.338138580322266
    8. ' ' → logprob: -9.463138580322266
    9. ''T' → logprob: -9.463138580322266
    10. '         ' → logprob: -10.088138580322266

Token 251: 'X' (ID: 55)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3091713488101959
    2. 'Y' → logprob: -2.059171438217163
    3. 'X' → logprob: -2.059171438217163
    4. ''y' → logprob: -5.684171199798584
    5. ''T' → logprob: -6.184171199798584
    6. ''"' → logprob: -6.809171199798584
    7. '"' → logprob: -7.184171199798584
    8. ''S' → logprob: -7.934171199798584
    9. ''x' → logprob: -8.059171676635742
    10. '')' → logprob: -8.184171676635742

Token 252: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.004488988779485226
    2. ''' → logprob: -5.629488945007324
    3. ':' → logprob: -7.129488945007324
    4. ' ':' → logprob: -9.754488945007324
    5. '":' → logprob: -12.004488945007324
    6. '<|end|>' → logprob: -12.504488945007324
    7. '')' → logprob: -13.129488945007324
    8. ' =' → logprob: -13.254488945007324
    9. ''>' → logprob: -13.254488945007324
    10. '':'' → logprob: -13.379488945007324

Token 253: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0380852073431015
    2. ' '' → logprob: -3.2880852222442627
    3. '100' → logprob: -10.288084983825684
    4. ' ' → logprob: -12.038084983825684
    5. '"' → logprob: -12.913084983825684
    6. '   ' → logprob: -15.288084983825684
    7. ' ' → logprob: -15.413084983825684
    8. '	' → logprob: -16.0380859375
    9. ''class' → logprob: -16.2880859375
    10. ''s' → logprob: -16.5380859375

Token 254: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.01255039032548666
    2. ''' → logprob: -4.387550354003906
    3. '101' → logprob: -10.637550354003906
    4. ' ' → logprob: -11.637550354003906
    5. '111' → logprob: -13.137550354003906
    6. '010' → logprob: -13.512550354003906
    7. '１００' → logprob: -13.887550354003906
    8. '   ' → logprob: -14.012550354003906
    9. '110' → logprob: -14.262550354003906
    10. '"' → logprob: -14.387550354003906

Token 255: '100' (ID: 1353)
  Prédit: '111'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.2043776661157608
    2. '100' → logprob: -2.2043776512145996
    3. '110' → logprob: -2.8293776512145996
    4. '101' → logprob: -4.2043776512146
    5. '000' → logprob: -8.454378128051758
    6. '011' → logprob: -8.829378128051758
    7. '```' → logprob: -9.704378128051758
    8. '010' → logprob: -9.954378128051758
    9. '001' → logprob: -10.329378128051758
    10. '``' → logprob: -10.704378128051758

Token 256: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.339278580620885e-06
    2. '00' → logprob: -13.875001907348633
    3. '1' → logprob: -14.875001907348633
    4. ''' → logprob: -15.125001907348633
    5. '01' → logprob: -15.750001907348633
    6. '010' → logprob: -16.000001907348633
    7. '```' → logprob: -16.125001907348633
    8. '')' → logprob: -16.875001907348633
    9. '11' → logprob: -17.250001907348633
    10. '"' → logprob: -17.500001907348633

Token 257: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.011844745837152004
    2. ''' → logprob: -5.136844635009766
    3. '',
' → logprob: -5.136844635009766
    4. ''}' → logprob: -11.886844635009766
    5. '',
' → logprob: -12.136844635009766
    6. '',

' → logprob: -12.136844635009766
    7. '       ' → logprob: -13.886844635009766
    8. '",' → logprob: -14.261844635009766
    9. '}' → logprob: -14.261844635009766
    10. ',' → logprob: -14.511844635009766

Token 258: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5842694044113159
    2. '           ' → logprob: -0.8342694044113159
    3. '       ' → logprob: -4.8342695236206055
    4. ' '' → logprob: -9.084269523620605
    5. '   ' → logprob: -9.709269523620605
    6. ''y' → logprob: -9.959269523620605
    7. '          ' → logprob: -10.459269523620605
    8. '         ' → logprob: -10.834269523620605
    9. '}' → logprob: -10.959269523620605
    10. ' ' → logprob: -11.334269523620605

Token 259: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.365448921918869
    2. '           ' → logprob: -1.2404489517211914
    3. '       ' → logprob: -4.240448951721191
    4. ' '' → logprob: -6.490448951721191
    5. '   ' → logprob: -8.865448951721191
    6. '         ' → logprob: -8.990448951721191
    7. '}' → logprob: -9.115448951721191
    8. ''y' → logprob: -9.365448951721191
    9. ' ' → logprob: -9.490448951721191
    10. ''A' → logprob: -9.490448951721191

Token 260: 'Y' (ID: 56)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10464762151241302
    2. 'Y' → logprob: -2.354647636413574
    3. ''y' → logprob: -5.479647636413574
    4. ' Y' → logprob: -10.104647636413574
    5. '100' → logprob: -10.104647636413574
    6. ' '' → logprob: -10.229647636413574
    7. ''I' → logprob: -10.479647636413574
    8. '	Y' → logprob: -10.854647636413574
    9. ''T' → logprob: -11.104647636413574
    10. ''S' → logprob: -11.479647636413574

Token 261: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0002273774443892762
    2. ':' → logprob: -9.250226974487305
    3. ''' → logprob: -9.375226974487305
    4. '":' → logprob: -10.500226974487305
    5. ' ':' → logprob: -11.125226974487305
    6. ' =' → logprob: -13.875226974487305
    7. ''=' → logprob: -14.000226974487305
    8. '':'' → logprob: -14.625226974487305
    9. '```' → logprob: -15.125226974487305
    10. '=' → logprob: -15.250226974487305

Token 262: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00173337128944695
    2. '"' → logprob: -6.501733303070068
    3. ' '' → logprob: -8.376733779907227
    4. '`' → logprob: -15.376733779907227
    5. '100' → logprob: -15.501733779907227
    6. ' "' → logprob: -16.251733779907227
    7. ' ' → logprob: -16.626733779907227
    8. ''''' → logprob: -16.626733779907227
    9. ' ' → logprob: -17.376733779907227
    10. '('' → logprob: -17.501733779907227

Token 263: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.25207585096359253
    2. ''' → logprob: -1.5020759105682373
    3. '010' → logprob: -9.752076148986816
    4. '101' → logprob: -9.752076148986816
    5. '111' → logprob: -11.502076148986816
    6. ' ' → logprob: -11.752076148986816
    7. '"' → logprob: -12.502076148986816
    8. '011' → logprob: -13.002076148986816
    9. '110' → logprob: -13.127076148986816
    10. '000' → logprob: -13.877076148986816

Token 264: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -7.32654589228332e-05
    2. '101' → logprob: -9.875073432922363
    3. '111' → logprob: -11.625073432922363
    4. '010' → logprob: -11.750073432922363
    5. '110' → logprob: -12.750073432922363
    6. '011' → logprob: -13.500073432922363
    7. ''' → logprob: -15.000073432922363
    8. '000' → logprob: -16.125072479248047
    9. '001' → logprob: -16.375072479248047
    10. '1' → logprob: -16.750072479248047

Token 265: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -3.650518920039758e-06
    2. '00' → logprob: -13.375003814697266
    3. '011' → logprob: -13.500003814697266
    4. '```' → logprob: -15.375003814697266
    5. ''' → logprob: -15.625003814697266
    6. '1' → logprob: -16.000003814697266
    7. '01' → logprob: -17.000003814697266
    8. '0' → logprob: -17.375003814697266
    9. '111' → logprob: -17.750003814697266
    10. '１１' → logprob: -18.375003814697266

Token 266: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.020728500559926033
    2. '',
' → logprob: -4.520728588104248
    3. ''' → logprob: -4.645728588104248
    4. '',
' → logprob: -11.02072811126709
    5. ''}' → logprob: -11.89572811126709
    6. '',

' → logprob: -12.52072811126709
    7. '}' → logprob: -13.89572811126709
    8. '       ' → logprob: -14.27072811126709
    9. ''
' → logprob: -14.52072811126709
    10. '",' → logprob: -14.64572811126709

Token 267: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43345969915390015
    2. '           ' → logprob: -1.183459758758545
    3. ''' → logprob: -3.183459758758545
    4. '}' → logprob: -5.933459758758545
    5. '   ' → logprob: -6.683459758758545
    6. ''}' → logprob: -9.433459281921387
    7. '         ' → logprob: -11.308459281921387
    8. ' '' → logprob: -11.433459281921387
    9. '      ' → logprob: -11.558459281921387
    10. '          ' → logprob: -11.683459281921387

Token 268: ' '' (ID: 461)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15764589607715607
    2. ''' (adapté à ' '') → logprob: -2.6576459407806396
    3. '           ' → logprob: -2.9076459407806396
    4. '}' → logprob: -3.9076459407806396
    5. '   ' → logprob: -7.4076457023620605
    6. ''}' → logprob: -8.032646179199219
    7. ' }' → logprob: -10.782646179199219
    8. ' '' → logprob: -11.032646179199219
    9. ''T' → logprob: -11.032646179199219
    10. '               ' → logprob: -11.532646179199219

Token 269: 'Z' (ID: 57)
  Prédit: ''z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''z' → logprob: -0.6337068676948547
    2. ''' → logprob: -0.8837068676948547
    3. 'Z' → logprob: -3.13370680809021
    4. ' '' → logprob: -5.383707046508789
    5. 'z' → logprob: -6.508707046508789
    6. ''T' → logprob: -7.008707046508789
    7. '"' → logprob: -7.383707046508789
    8. ''S' → logprob: -7.508707046508789
    9. ''E' → logprob: -7.633707046508789
    10. ''u' → logprob: -7.633707046508789

Token 270: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.00011212585377506912
    2. ''' → logprob: -9.125112533569336
    3. '":' → logprob: -13.500112533569336
    4. ':' → logprob: -13.875112533569336
    5. ' ':' → logprob: -14.125112533569336
    6. ''=' → logprob: -17.375112533569336
    7. '':
' → logprob: -17.625112533569336
    8. ''):' → logprob: -17.750112533569336
    9. '':'' → logprob: -17.875112533569336
    10. ''
' → logprob: -18.125112533569336

Token 271: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0017064863350242376
    2. ' '' → logprob: -6.376706600189209
    3. '"' → logprob: -12.75170612335205
    4. '100' → logprob: -13.87670612335205
    5. ' ' → logprob: -15.00170612335205
    6. ''s' → logprob: -17.376707077026367
    7. ' ' → logprob: -17.376707077026367
    8. ''value' → logprob: -18.251707077026367
    9. '''' → logprob: -18.376707077026367
    10. ''class' → logprob: -18.376707077026367

Token 272: '100' (ID: 1353)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.000431861262768507
    2. '100' → logprob: -7.750432014465332
    3. '"' → logprob: -13.875432014465332
    4. '010' → logprob: -16.000431060791016
    5. ' '' → logprob: -16.500431060791016
    6. '000' → logprob: -17.250431060791016
    7. '110' → logprob: -17.250431060791016
    8. '101' → logprob: -17.625431060791016
    9. '''' → logprob: -18.750431060791016
    10. ' ' → logprob: -19.125431060791016

Token 273: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.03455863893032074
    2. '101' → logprob: -3.5345585346221924
    3. '110' → logprob: -5.5345587730407715
    4. '111' → logprob: -7.5345587730407715
    5. '010' → logprob: -8.784558296203613
    6. '000' → logprob: -8.909558296203613
    7. '011' → logprob: -11.159558296203613
    8. '```' → logprob: -12.284558296203613
    9. '001' → logprob: -12.409558296203613
    10. '1' → logprob: -13.659558296203613

Token 274: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.013491122052073479
    2. '01' → logprob: -4.888491153717041
    3. ''' → logprob: -5.888491153717041
    4. '0' → logprob: -6.638491153717041
    5. '10' → logprob: -7.138491153717041
    6. '1' → logprob: -8.138490676879883
    7. '100' → logprob: -8.263490676879883
    8. '"' → logprob: -8.513490676879883
    9. '```' → logprob: -8.638490676879883
    10. '12' → logprob: -11.513490676879883

Token 275: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.20854146778583527
    2. ''' → logprob: -1.9585415124893188
    3. '',
' → logprob: -3.0835413932800293
    4. ''}' → logprob: -7.083541393280029
    5. '}' → logprob: -8.208541870117188
    6. ''
' → logprob: -8.958541870117188
    7. '       ' → logprob: -9.583541870117188
    8. '',
' → logprob: -10.333541870117188
    9. '   ' → logprob: -11.333541870117188
    10. '           ' → logprob: -12.208541870117188

Token 276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004578699823468924
    2. '}' → logprob: -5.504578590393066
    3. '   ' → logprob: -7.879578590393066
    4. '           ' → logprob: -9.379578590393066
    5. ''' → logprob: -11.004578590393066
    6. '}
' → logprob: -11.754578590393066
    7. ' }' → logprob: -12.004578590393066
    8. ''}' → logprob: -13.004578590393066
    9. '      ' → logprob: -14.004578590393066
    10. '	' → logprob: -14.629578590393066

Token 277: ' }

' (ID: 758)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.24664796888828278
    2. '   ' → logprob: -1.9966479539871216
    3. '       ' → logprob: -2.496648073196411
    4. '}
' → logprob: -7.871647834777832
    5. ' }' → logprob: -10.246647834777832
    6. '	' → logprob: -12.621647834777832
    7. ''' → logprob: -13.121647834777832
    8. '           ' → logprob: -13.371647834777832
    9. ''}' → logprob: -13.496647834777832
    10. ' ' → logprob: -13.621647834777832

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014442837797105312
    2. '    
' → logprob: -5.0144429206848145
    3. '
' → logprob: -5.2644429206848145
    4. 'def' → logprob: -6.7644429206848145
    5. '       ' → logprob: -7.6394429206848145
    6. '```' → logprob: -8.264442443847656
    7. '\n' → logprob: -9.014442443847656
    8. '        
' → logprob: -9.139442443847656
    9. '  
' → logprob: -9.264442443847656
    10. '<|end|>' → logprob: -9.264442443847656

Token 279: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.02513182908296585
    2. '   ' → logprob: -4.275131702423096
    3. ' def' → logprob: -4.525131702423096
    4. '	def' → logprob: -10.150132179260254
    5. '    
' → logprob: -10.900132179260254
    6. ' ' → logprob: -12.275132179260254
    7. '       ' → logprob: -12.775132179260254
    8. '
' → logprob: -12.900132179260254
    9. '```' → logprob: -13.025132179260254
    10. ' 
' → logprob: -13.275132179260254

Token 280: ' encode' (ID: 31288)
  Prédit: ' encode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' encode' → logprob: -0.4742027223110199
    2. 'encode' → logprob: -0.9742027521133423
    3. '_encode' → logprob: -9.099203109741211
    4. 'def' → logprob: -13.099203109741211
    5. 'char' → logprob: -13.099203109741211
    6. ' char' → logprob: -13.099203109741211
    7. '.encode' → logprob: -13.224203109741211
    8. ' get' → logprob: -13.474203109741211
    9. 'decode' → logprob: -13.849203109741211
    10. 'Encode' → logprob: -13.849203109741211

Token 281: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03963389992713928
    2. '(' → logprob: -3.2896339893341064
    3. '_text' → logprob: -7.164633750915527
    4. '_char' → logprob: -8.289633750915527
    5. '_string' → logprob: -8.539633750915527
    6. '_character' → logprob: -8.664633750915527
    7. 'self' → logprob: -9.664633750915527
    8. '_message' → logprob: -10.664633750915527
    9. '_line' → logprob: -10.914633750915527
    10. 'text' → logprob: -10.914633750915527

Token 282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12604467570781708
    2. 'self' → logprob: -2.251044750213623
    3. '_char' → logprob: -6.001044750213623
    4. 'text' → logprob: -6.126044750213623
    5. ' ,' → logprob: -6.251044750213623
    6. ')' → logprob: -6.251044750213623
    7. '_text' → logprob: -6.501044750213623
    8. ',self' → logprob: -7.376044750213623
    9. ',char' → logprob: -7.501044750213623
    10. '_string' → logprob: -7.626044750213623

Token 283: ' text' (ID: 2201)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.44314679503440857
    2. ' self' → logprob: -1.193146824836731
    3. 'text' → logprob: -3.0681467056274414
    4. ' text' → logprob: -4.818146705627441
    5. ' message' → logprob: -9.818146705627441
    6. 'message' → logprob: -9.943146705627441
    7. '   ' → logprob: -11.818146705627441
    8. 'char' → logprob: -12.443146705627441
    9. 's' → logprob: -12.693146705627441
    10. 'string' → logprob: -12.818146705627441

Token 284: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0033305182587355375
    2. '):
' → logprob: -6.003330707550049
    3. ')' → logprob: -7.503330707550049
    4. 'self' → logprob: -9.37833023071289
    5. '       ' → logprob: -9.62833023071289
    6. ':' → logprob: -9.62833023071289
    7. '   ' → logprob: -9.87833023071289
    8. ' ):' → logprob: -10.62833023071289
    9. '(self' → logprob: -13.12833023071289
    10. '):
' → logprob: -13.37833023071289

Token 285: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.12804393470287323
    2. 'str' → logprob: -2.1280438899993896
    3. ')' → logprob: -7.003044128417969
    4. 'self' → logprob: -9.003044128417969
    5. ' self' → logprob: -9.628044128417969
    6. ' )' → logprob: -12.003044128417969
    7. '):
' → logprob: -12.378044128417969
    8. '   ' → logprob: -12.753044128417969
    9. ':str' → logprob: -13.378044128417969
    10. '       ' → logprob: -14.253044128417969

Token 286: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.288163083605468e-05
    2. '):' → logprob: -10.500052452087402
    3. ')->' → logprob: -10.750052452087402
    4. ' )' → logprob: -13.250052452087402
    5. '):
' → logprob: -13.500052452087402
    6. '   ' → logprob: -14.625052452087402
    7. '`)' → logprob: -16.00005340576172
    8. '       ' → logprob: -16.62505340576172
    9. '')' → logprob: -17.25005340576172
    10. '")' → logprob: -18.25005340576172

Token 287: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0069327587261796
    2. ' ->' → logprob: -6.006932735443115
    3. '):' → logprob: -6.256932735443115
    4. '->' → logprob: -6.256932735443115
    5. '       ' → logprob: -8.631933212280273
    6. ')->' → logprob: -9.256933212280273
    7. ':
' → logprob: -9.256933212280273
    8. ')' → logprob: -9.381933212280273
    9. ' :' → logprob: -9.631933212280273
    10. '():' → logprob: -10.256933212280273

Token 288: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.47407862544059753
    2. ' str' → logprob: -0.9740786552429199
    3. ' ' → logprob: -14.599078178405762
    4. '[str' → logprob: -14.849078178405762
    5. '   ' → logprob: -14.974078178405762
    6. '	str' → logprob: -15.599078178405762
    7. '(str' → logprob: -16.849079132080078
    8. '  ' → logprob: -17.099079132080078
    9. 'None' → logprob: -17.349079132080078
    10. ' None' → logprob: -17.474079132080078

Token 289: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004298253450542688
    2. '       ' → logprob: -5.754298210144043
    3. '):' → logprob: -7.504298210144043
    4. ':
' → logprob: -7.629298210144043
    5. '():' → logprob: -10.379298210144043
    6. '(self' → logprob: -11.004298210144043
    7. '   ' → logprob: -11.629298210144043
    8. '):
' → logprob: -11.754298210144043
    9. 'self' → logprob: -12.129298210144043
    10. ' :' → logprob: -12.879298210144043

Token 290: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.584239938296378e-06
    2. '   ' → logprob: -13.125007629394531
    3. 'return' → logprob: -13.750007629394531
    4. '	' → logprob: -14.375007629394531
    5. '    ' → logprob: -14.625007629394531
    6. 'encoded' → logprob: -14.750007629394531
    7. '      ' → logprob: -15.000007629394531
    8. '	   ' → logprob: -15.125007629394531
    9. ' return' → logprob: -15.125007629394531
    10. '```' → logprob: -15.125007629394531

Token 291: ' encoded' (ID: 41096)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4945780038833618
    2. 'encoded' (adapté à ' encoded') → logprob: -1.7445780038833618
    3. 'result' → logprob: -2.1195778846740723
    4. ' return' → logprob: -3.1195778846740723
    5. '       ' → logprob: -3.3695778846740723
    6. ' encoded' → logprob: -4.619577884674072
    7. ' result' → logprob: -4.994577884674072
    8. 'output' → logprob: -9.11957836151123
    9. 'code' → logprob: -11.36957836151123
    10. 'decoded' → logprob: -11.74457836151123

Token 292: '_bits' (ID: 48415)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7043099403381348
    2. '_' → logprob: -1.4543099403381348
    3. '_text' → logprob: -1.7043099403381348
    4. ' ' → logprob: -3.0793099403381348
    5. '"' → logprob: -4.454309940338135
    6. '=' → logprob: -4.704309940338135
    7. '_string' → logprob: -4.829309940338135
    8. ''' → logprob: -5.829309940338135
    9. '   ' → logprob: -5.954309940338135
    10. '_str' → logprob: -5.954309940338135

Token 293: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005287596024572849
    2. '=' → logprob: -5.2552876472473145
    3. '       ' → logprob: -10.255287170410156
    4. ' ' → logprob: -11.630287170410156
    5. '        ' → logprob: -13.130287170410156
    6. '   ' → logprob: -13.130287170410156
    7. '[]' → logprob: -13.255287170410156
    8. ' +=' → logprob: -13.380287170410156
    9. '=[]' → logprob: -14.255287170410156
    10. '=""' → logprob: -14.755287170410156

Token 294: ' ''.' (ID: 105941)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.7072465419769287
    2. '""' → logprob: -0.7072465419769287
    3. ' ''' → logprob: -4.957246780395508
    4. ' ""' → logprob: -5.207246780395508
    5. '"' → logprob: -7.207246780395508
    6. '[]' → logprob: -7.707246780395508
    7. ' []' → logprob: -8.332246780395508
    8. ''' → logprob: -9.832246780395508
    9. '''
' → logprob: -12.582246780395508
    10. ' ' → logprob: -13.207246780395508

Token 295: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -5.512236498361744e-07
    2. ' join' → logprob: -14.875000953674316
    3. '.join' → logprob: -16.5
    4. 'j' → logprob: -18.25
    5. 'Join' → logprob: -19.0
    6. '```' → logprob: -19.25
    7. 'jo' → logprob: -19.75
    8. '(join' → logprob: -20.25
    9. '_join' → logprob: -20.625
    10. 'encode' → logprob: -20.625

Token 296: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009188431431539357
    2. '[self' → logprob: -7.250918865203857
    3. 'self' → logprob: -9.0009183883667
    4. '([' → logprob: -9.7509183883667
    5. '(' → logprob: -10.6259183883667
    6. '(
' → logprob: -13.1259183883667
    7. '[' → logprob: -14.0009183883667
    8. ' self' → logprob: -15.5009183883667
    9. '       ' → logprob: -17.625919342041016
    10. '((' → logprob: -17.875919342041016

Token 297: '.char' (ID: 18508)
  Prédit: '.char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.char' → logprob: -0.00019340807921253145
    2. '.' → logprob: -8.87519359588623
    3. '.encode' → logprob: -10.37519359588623
    4. 'char' → logprob: -11.00019359588623
    5. '       ' → logprob: -13.50019359588623
    6. ' .' → logprob: -13.87519359588623
    7. ').' → logprob: -14.37519359588623
    8. 'self' → logprob: -14.75019359588623
    9. '.code' → logprob: -14.75019359588623
    10. '.encoder' → logprob: -14.75019359588623

Token 298: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -5.512236498361744e-07
    2. 'To' → logprob: -15.375000953674316
    3. 'to' → logprob: -15.500000953674316
    4. '           ' → logprob: -18.625
    5. '_TO' → logprob: -19.0
    6. '_' → logprob: -19.25
    7. '   ' → logprob: -19.25
    8. '       ' → logprob: -19.625
    9. ' to' → logprob: -19.75
    10. 'acters' → logprob: -20.25

Token 299: '_code' (ID: 8330)
  Prédit: '_code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_code' → logprob: -0.00018327576981391758
    2. 'code' → logprob: -8.62518310546875
    3. 'ode' → logprob: -13.62518310546875
    4. '_' → logprob: -14.75018310546875
    5. 'Code' → logprob: -15.37518310546875
    6. 'coded' → logprob: -15.37518310546875
    7. '```' → logprob: -15.62518310546875
    8. '_CODE' → logprob: -15.75018310546875
    9. '[' → logprob: -15.87518310546875
    10. '_char' → logprob: -16.25018310546875

Token 300: '[ch' (ID: 140164)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6951749324798584
    2. '.get' → logprob: -0.6951749324798584
    3. '[ch' → logprob: -6.4451751708984375
    4. '[c' → logprob: -7.9451751708984375
    5. '[get' → logprob: -9.570175170898438
    6. '   ' → logprob: -12.320175170898438
    7. 'get' → logprob: -12.570175170898438
    8. '       ' → logprob: -13.070175170898438
    9. '```' → logprob: -13.820175170898438
    10. 'char' → logprob: -14.445175170898438

Token 301: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.968312951968983e-06
    2. 'r' → logprob: -12.125009536743164
    3. 'or' → logprob: -13.625009536743164
    4. 'ar' → logprob: -13.750009536743164
    5. ']
' → logprob: -14.500009536743164
    6. 'for' → logprob: -14.750009536743164
    7. '])' → logprob: -15.125009536743164
    8. 'er' → logprob: -15.250009536743164
    9. ' ]' → logprob: -15.375009536743164
    10. ' for' → logprob: -16.625009536743164

Token 302: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3139135539531708
    2. 'for' → logprob: -1.3139135837554932
    3. '       ' → logprob: -8.063913345336914
    4. ')' → logprob: -8.438913345336914
    5. '           ' → logprob: -9.563913345336914
    6. '   ' → logprob: -11.188913345336914
    7. '        ' → logprob: -11.688913345336914
    8. ' ' → logprob: -12.438913345336914
    9. '    ' → logprob: -12.438913345336914
    10. '         ' → logprob: -12.563913345336914

Token 303: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.002499794587492943
    2. 'ch' → logprob: -6.002499580383301
    3. '	ch' → logprob: -10.8774995803833
    4. '[ch' → logprob: -12.3774995803833
    5. '_ch' → logprob: -14.7524995803833
    6. '(ch' → logprob: -15.2524995803833
    7. ' ' → logprob: -15.6274995803833
    8. ' in' → logprob: -16.002500534057617
    9. ',ch' → logprob: -16.877500534057617
    10. '.ch' → logprob: -17.252500534057617

Token 304: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007619291078299284
    2. 'in' → logprob: -4.882619380950928
    3. ' ' → logprob: -11.75761890411377
    4. 'text' → logprob: -12.50761890411377
    5. 'n' → logprob: -14.38261890411377
    6. ' i' → logprob: -15.13261890411377
    7. 'import' → logprob: -16.132619857788086
    8. 'ch' → logprob: -16.257619857788086
    9. 'i' → logprob: -16.382619857788086
    10. ' ' → logprob: -16.757619857788086

Token 305: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.07889088988304138
    2. ' text' → logprob: -2.578890800476074
    3. '
' → logprob: -14.453890800476074
    4. '   ' → logprob: -15.578890800476074
    5. '{text' → logprob: -15.953890800476074
    6. '	text' → logprob: -16.20389175415039
    7. ' ' → logprob: -16.57889175415039
    8. '(text' → logprob: -17.20389175415039
    9. '"text' → logprob: -17.82889175415039
    10. '_text' → logprob: -17.82889175415039

Token 306: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3544423381972592e-05
    2. ' )' → logprob: -11.50001335144043
    3. '       ' → logprob: -13.62501335144043
    4. ')
' → logprob: -14.12501335144043
    5. '))' → logprob: -14.37501335144043
    6. ')}' → logprob: -15.37501335144043
    7. ')`' → logprob: -15.37501335144043
    8. ' if' → logprob: -15.75001335144043
    9. 'if' → logprob: -15.87501335144043
    10. ')+' → logprob: -17.00001335144043

Token 307: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023417205375153571
    2. 'return' → logprob: -8.500234603881836
    3. ' return' → logprob: -11.125234603881836
    4. '
' → logprob: -11.250234603881836
    5. '	' → logprob: -14.000234603881836
    6. '   ' → logprob: -14.500234603881836
    7. '        
' → logprob: -14.875234603881836
    8. '	return' → logprob: -15.625234603881836
    9. ')' → logprob: -15.750234603881836
    10. '      ' → logprob: -15.875234603881836

Token 308: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04049515351653099
    2. ' return' → logprob: -3.5404951572418213
    3. '       ' → logprob: -4.540494918823242
    4. '
' → logprob: -10.915494918823242
    5. '	return' → logprob: -15.790494918823242
    6. ':return' → logprob: -15.915494918823242
    7. '   ' → logprob: -16.040494918823242
    8. '        
' → logprob: -16.165494918823242
    9. ' ' → logprob: -16.290494918823242
    10. '{return' → logprob: -16.415494918823242

Token 309: ' パ' (ID: 78169)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.39031365513801575
    2. ' return' → logprob: -1.1403136253356934
    3. '       ' → logprob: -5.890313625335693
    4. 'ret' → logprob: -9.140314102172852
    5. ' if' → logprob: -9.515314102172852
    6. '   ' → logprob: -9.640314102172852
    7. '#' → logprob: -9.765314102172852
    8. ' #' → logprob: -10.015314102172852
    9. '        ' → logprob: -10.265314102172852
    10. 're' → logprob: -10.515314102172852

Token 310: 'ディ' (ID: 47968)
  Prédit: 'ス'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ス' → logprob: -0.2814873158931732
    2. 'ッ' → logprob: -2.656487226486206
    3. 'ン' → logprob: -3.156487226486206
    4. 'def' → logprob: -3.281487226486206
    5. '#' → logprob: -3.781487226486206
    6. 'd' → logprob: -4.031487464904785
    7. '       ' → logprob: -4.156487464904785
    8. 's' → logprob: -5.781487464904785
    9. 'ッド' → logprob: -5.781487464904785
    10. 'decode' → logprob: -5.906487464904785

Token 311: 'ング' (ID: 30651)
  Prédit: 'ング'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ング' → logprob: -0.0003926615754608065
    2. '```' → logprob: -8.87539291381836
    3. 'ンク' → logprob: -10.12539291381836
    4. 'dding' → logprob: -10.25039291381836
    5. '   ' → logprob: -10.75039291381836
    6. 'ン' → logprob: -10.87539291381836
    7. '``' → logprob: -11.00039291381836
    8. '\' → logprob: -11.25039291381836
    9. 'ッ' → logprob: -11.50039291381836
    10. 'ding' → logprob: -11.62539291381836

Token 312: 'で' (ID: 4344)
  Prédit: 'encoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'encoded' → logprob: -0.8102906346321106
    2. '       ' → logprob: -0.9352906346321106
    3. ' encoded' → logprob: -3.060290575027466
    4. 'while' → logprob: -3.185290575027466
    5. ' if' → logprob: -4.185290813446045
    6. ' while' → logprob: -4.310290813446045
    7. '
' → logprob: -4.310290813446045
    8. ' =' → logprob: -4.685290813446045
    9. 'if' → logprob: -5.185290813446045
    10. '        ' → logprob: -5.935290813446045

Token 313: '5' (ID: 20)
  Prédit: 'encoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'encoded' → logprob: -0.5745627284049988
    2. ' encoded' → logprob: -0.9495627284049988
    3. '0' → logprob: -4.1995625495910645
    4. ' ' → logprob: -4.3245625495910645
    5. ''' → logprob: -4.8245625495910645
    6. ' '' → logprob: -5.5745625495910645
    7. ' return' → logprob: -6.3245625495910645
    8. '   ' → logprob: -6.3245625495910645
    9. ' self' → logprob: -7.1995625495910645
    10. 'self' → logprob: -7.1995625495910645

Token 314: '文字' (ID: 79831)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01840381883084774
    2. ''' → logprob: -4.393404006958008
    3. ' ' → logprob: -5.893404006958008
    4. 'つ' → logprob: -7.643404006958008
    5. '000' → logprob: -7.768404006958008
    6. '```' → logprob: -7.768404006958008
    7. 'bit' → logprob: -8.268404006958008
    8. '00' → logprob: -8.393404006958008
    9. ' bits' → logprob: -8.643404006958008
    10. ' '' → logprob: -9.018404006958008

Token 315: '区' (ID: 5243)
  Prédit: '分'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '分' → logprob: -0.22380691766738892
    2. ''' → logprob: -2.848806858062744
    3. 'encoded' → logprob: -3.348806858062744
    4. '0' → logprob: -3.473806858062744
    5. 'を' → logprob: -4.848806858062744
    6. '   ' → logprob: -4.848806858062744
    7. 'encode' → logprob: -5.473806858062744
    8. 'self' → logprob: -5.473806858062744
    9. '000' → logprob: -5.598806858062744
    10. 's' → logprob: -5.598806858062744

Token 316: '切' (ID: 34921)
  Prédit: '切'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '切' → logprob: -1.0280383548888494e-06
    2. '分' → logprob: -14.875000953674316
    3. '間' → logprob: -14.875000953674316
    4. '```' → logprob: -15.500000953674316
    5. 'cut' → logprob: -17.625001907348633
    6. ' \xe5\x88' → logprob: -18.375001907348633
    7. '   ' → logprob: -19.000001907348633
    8. '_' → logprob: -19.250001907348633
    9. '別' → logprob: -20.000001907348633
    10. 'き' → logprob: -20.125001907348633

Token 317: 'り' (ID: 7297)
  Prédit: 'り'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'り' → logprob: -4.7159857786027715e-05
    2. '   ' → logprob: -10.750046730041504
    3. '```' → logprob: -11.125046730041504
    4. 'る' → logprob: -12.875046730041504
    5. '       ' → logprob: -13.000046730041504
    6. 'リ' → logprob: -13.625046730041504
    7. '
' → logprob: -14.000046730041504
    8. ' ' → logprob: -14.250046730041504
    9. '``' → logprob: -14.250046730041504
    10. 'って' → logprob: -14.750046730041504

Token 318: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10810306668281555
    2. 'encoded' → logprob: -2.733103036880493
    3. '
' → logprob: -3.858103036880493
    4. 'return' → logprob: -5.108103275299072
    5. 'result' → logprob: -5.858103275299072
    6. 'padding' → logprob: -6.733103275299072
    7. ' encoded' → logprob: -6.858103275299072
    8. 'rest' → logprob: -7.358103275299072
    9. 'n' → logprob: -7.733103275299072
    10. '        
' → logprob: -7.733103275299072

Token 319: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012009665369987488
    2. 'encoded' → logprob: -4.887009620666504
    3. 'result' → logprob: -6.512009620666504
    4. 'return' → logprob: -6.637009620666504
    5. 'def' → logprob: -7.387009620666504
    6. '
' → logprob: -8.137009620666504
    7. ' encoded' → logprob: -8.512009620666504
    8. '        
' → logprob: -9.262009620666504
    9. 'rest' → logprob: -9.637009620666504
    10. ' return' → logprob: -9.887009620666504

Token 320: ' remainder' (ID: 47056)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9866291880607605
    2. 'encoded' → logprob: -1.1116292476654053
    3. 'padding' → logprob: -1.8616292476654053
    4. '       ' → logprob: -3.3616292476654053
    5. 'return' → logprob: -3.7366292476654053
    6. 'result' → logprob: -3.8616292476654053
    7. ' padded' → logprob: -4.611629009246826
    8. 'n' → logprob: -4.736629009246826
    9. ' encoded' → logprob: -5.236629009246826
    10. 'if' → logprob: -5.361629009246826

Token 321: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.062010254710912704
    2. '=' → logprob: -2.8120102882385254
    3. '_' → logprob: -11.437009811401367
    4. '_len' → logprob: -11.812009811401367
    5. '        ' → logprob: -12.062009811401367
    6. ' ' → logprob: -12.437009811401367
    7. '   ' → logprob: -12.437009811401367
    8. '_length' → logprob: -12.812009811401367
    9. '    ' → logprob: -13.187009811401367
    10. '       ' → logprob: -13.312009811401367

Token 322: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.011084607802331448
    2. ' len' → logprob: -4.51108455657959
    3. '(len' → logprob: -10.26108455657959
    4. '	len' → logprob: -13.76108455657959
    5. '[len' → logprob: -15.38608455657959
    6. 'encoded' → logprob: -15.51108455657959
    7. '5' → logprob: -15.88608455657959
    8. ' ' → logprob: -16.636085510253906
    9. ',len' → logprob: -17.261085510253906
    10. ' encoded' → logprob: -17.261085510253906

Token 323: '(encoded' (ID: 157395)
  Prédit: '(encoded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(encoded' → logprob: -0.0015922266757115722
    2. '(text' → logprob: -7.00159215927124
    3. 'encoded' → logprob: -7.37659215927124
    4. '(' → logprob: -10.251592636108398
    5. ' (' → logprob: -11.376592636108398
    6. ' encoded' → logprob: -12.001592636108398
    7. 'text' → logprob: -14.126592636108398
    8. '_encoded' → logprob: -14.376592636108398
    9. '(self' → logprob: -16.0015926361084
    10. '(enc' → logprob: -16.1265926361084

Token 324: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -5.512236498361744e-07
    2. 'bits' → logprob: -14.500000953674316
    3. '_BITS' → logprob: -17.75
    4. 'encoded' → logprob: -19.0
    5. '_' → logprob: -20.375
    6. ' bits' → logprob: -20.75
    7. '_chars' → logprob: -21.125
    8. '_bit' → logprob: -21.25
    9. '_encoded' → logprob: -21.375
    10. ')' → logprob: -21.75

Token 325: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014703411608934402
    2. ' %' → logprob: -5.139703273773193
    3. ' )' → logprob: -5.264703273773193
    4. '%' → logprob: -5.639703273773193
    5. ')%' → logprob: -12.889703750610352
    6. ' ' → logprob: -13.264703750610352
    7. ')
' → logprob: -13.264703750610352
    8. ' ' → logprob: -13.264703750610352
    9. '%)' → logprob: -13.889703750610352
    10. ' %)' → logprob: -14.514703750610352

Token 326: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.11285329610109329
    2. '%' → logprob: -2.2378532886505127
    3. ' ' → logprob: -10.862853050231934
    4. ')' → logprob: -11.737853050231934
    5. '   ' → logprob: -13.987853050231934
    6. ' ' → logprob: -14.112853050231934
    7. '5' → logprob: -14.362853050231934
    8. '
' → logprob: -14.612853050231934
    9. '       ' → logprob: -15.487853050231934
    10. '    ' → logprob: -15.737853050231934

Token 327: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.2471589798224159e-05
    2. ' ' → logprob: -11.375012397766113
    3. '25' → logprob: -14.750012397766113
    4. '
' → logprob: -16.12501335144043
    5. '35' → logprob: -16.12501335144043
    6. '５' → logprob: -16.50001335144043
    7. '10' → logprob: -17.25001335144043
    8. '15' → logprob: -17.75001335144043
    9. '```' → logprob: -17.75001335144043
    10. '۵' → logprob: -18.00001335144043

Token 328: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.250006675720215
    3. '25' → logprob: -14.500006675720215
    4. '
' → logprob: -15.000006675720215
    5. '10' → logprob: -16.1250057220459
    6. '５' → logprob: -16.3750057220459
    7. '35' → logprob: -16.5000057220459
    8. '15' → logprob: -16.7500057220459
    9. '55' → logprob: -17.1250057220459
    10. '50' → logprob: -17.3750057220459

Token 329: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014115787111222744
    2. '
' → logprob: -4.639115810394287
    3. ' if' → logprob: -5.889115810394287
    4. 'if' → logprob: -6.639115810394287
    5. '        
' → logprob: -10.139115333557129
    6. '<|end|>' → logprob: -10.514115333557129
    7. ',' → logprob: -10.514115333557129
    8. '        ' → logprob: -10.514115333557129
    9. '<|end|>' → logprob: -10.764115333557129
    10. '=' → logprob: -11.764115333557129

Token 330: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034048978704959154
    2. ' if' → logprob: -5.7534050941467285
    3. 'if' → logprob: -8.62840461730957
    4. '   ' → logprob: -10.75340461730957
    5. '<|end|>' → logprob: -11.50340461730957
    6. '        ' → logprob: -12.50340461730957
    7. '        
' → logprob: -12.62840461730957
    8. '<|end|>' → logprob: -13.37840461730957
    9. '      ' → logprob: -13.50340461730957
    10. '           ' → logprob: -13.87840461730957

Token 331: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17231237888336182
    2. 'if' (adapté à ' if') → logprob: -1.9223123788833618
    3. '       ' → logprob: -4.422312259674072
    4. 'padding' → logprob: -13.17231273651123
    5. ' padding' → logprob: -13.29731273651123
    6. ' i' → logprob: -13.42231273651123
    7. '   ' → logprob: -13.79731273651123
    8. '        ' → logprob: -14.67231273651123
    9. '        
' → logprob: -14.79731273651123
    10. '	if' → logprob: -15.04731273651123

Token 332: ' remainder' (ID: 47056)
  Prédit: ' remainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -2.451116051815916e-05
    2. 're' → logprob: -10.625024795532227
    3. ' ' → logprob: -16.125024795532227
    4. ' re' → logprob: -17.125024795532227
    5. '	re' → logprob: -17.125024795532227
    6. ' rest' → logprob: -17.750024795532227
    7. 'rest' → logprob: -18.250024795532227
    8. '余' → logprob: -18.500024795532227
    9. 'r' → logprob: -18.625024795532227
    10. 'rem' → logprob: -19.375024795532227

Token 333: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.10042662918567657
    2. ' !=' → logprob: -2.35042667388916
    3. '>' → logprob: -8.97542667388916
    4. ':' → logprob: -9.60042667388916
    5. '!='' → logprob: -11.85042667388916
    6. ')!=' → logprob: -12.35042667388916
    7. '=' → logprob: -12.47542667388916
    8. ' >' → logprob: -12.72542667388916
    9. '!==' → logprob: -13.35042667388916
    10. '!="' → logprob: -13.72542667388916

Token 334: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12692810595035553
    2. ' ' → logprob: -2.1269280910491943
    3. '=' → logprob: -17.751928329467773
    4. '
' → logprob: -19.126928329467773
    5. '  ' → logprob: -19.876928329467773
    6. '   ' → logprob: -20.001928329467773
    7. '1' → logprob: -20.126928329467773
    8. ' ' → logprob: -20.314428329467773
    9. '```' → logprob: -20.689428329467773
    10. '  ' → logprob: -20.876928329467773

Token 335: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -18.937559127807617
    4. '０' → logprob: -19.000059127807617
    5. '
' → logprob: -19.312559127807617
    6. '۰' → logprob: -19.437559127807617
    7. '5' → logprob: -19.625059127807617
    8. '1' → logprob: -19.812559127807617
    9. '```' → logprob: -20.187559127807617
    10. '=' → logprob: -20.375059127807617

Token 336: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5759987831115723
    2. ':
' → logprob: -0.8259987831115723
    3. ' :
' → logprob: -10.575998306274414
    4. '           ' → logprob: -11.450998306274414
    5. ' :' → logprob: -12.075998306274414
    6. '):
' → logprob: -12.325998306274414
    7. ':
' → logprob: -12.325998306274414
    8. '       ' → logprob: -12.825998306274414
    9. ':

' → logprob: -12.950998306274414
    10. '=' → logprob: -13.325998306274414

Token 337: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005644824355840683
    2. ' encoded' → logprob: -5.505644798278809
    3. 'encoded' → logprob: -6.505644798278809
    4. '(encoded' → logprob: -10.755644798278809
    5. '
' → logprob: -11.505644798278809
    6. '            ' → logprob: -11.630644798278809
    7. 'pad' → logprob: -12.130644798278809
    8. ' padding' → logprob: -12.380644798278809
    9. 'padding' → logprob: -12.505644798278809
    10. '          ' → logprob: -12.755644798278809

Token 338: ' encoded' (ID: 41096)
  Prédit: ' encoded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' encoded' → logprob: -0.11568918079137802
    2. 'encoded' (adapté à ' encoded') → logprob: -2.865689277648926
    3. '           ' → logprob: -2.990689277648926
    4. ' padding' → logprob: -6.365689277648926
    5. 'padding' → logprob: -9.490689277648926
    6. 'pad' → logprob: -9.490689277648926
    7. '(encoded' → logprob: -9.490689277648926
    8. '   ' → logprob: -10.740689277648926
    9. ' pad' → logprob: -10.865689277648926
    10. ' padded' → logprob: -10.990689277648926

Token 339: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -5.512236498361744e-07
    2. 'bits' → logprob: -14.500000953674316
    3. '_bit' → logprob: -17.5
    4. '_BITS' → logprob: -17.875
    5. '_encoded' → logprob: -18.0
    6. '_tokens' → logprob: -18.375
    7. 'Bits' → logprob: -19.375
    8. '_' → logprob: -19.5
    9. '```' → logprob: -20.0
    10. '}_' → logprob: -20.75

Token 340: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.25203046202659607
    2. '+=' → logprob: -1.5020304918289185
    3. '+='' → logprob: -9.252030372619629
    4. '+' → logprob: -12.877030372619629
    5. '+="' → logprob: -13.627030372619629
    6. ' +' → logprob: -14.252030372619629
    7. '=' → logprob: -14.627030372619629
    8. '+=(' → logprob: -14.752030372619629
    9. ' =' → logprob: -16.877031326293945
    10. ' ' → logprob: -17.002031326293945

Token 341: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00010735770774772391
    2. ' '' → logprob: -9.750107765197754
    3. '"' → logprob: -10.000107765197754
    4. '0' → logprob: -13.375107765197754
    5. '('' → logprob: -14.125107765197754
    6. '   ' → logprob: -14.500107765197754
    7. ''.' → logprob: -15.125107765197754
    8. ''A' → logprob: -16.125106811523438
    9. ''*' → logprob: -16.750106811523438
    10. '''' → logprob: -17.000106811523438

Token 342: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05496217682957649
    2. ''' → logprob: -2.929962158203125
    3. '000' → logprob: -10.054962158203125
    4. '1' → logprob: -10.929962158203125
    5. '"' → logprob: -11.554962158203125
    6. ' '' → logprob: -12.804962158203125
    7. '00' → logprob: -13.179962158203125
    8. '('' → logprob: -14.179962158203125
    9. '111' → logprob: -14.429962158203125
    10. ' ' → logprob: -14.679962158203125

Token 343: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -4.286852345103398e-05
    2. '0' → logprob: -10.250042915344238
    3. ''''' → logprob: -12.875042915344238
    4. ''*' → logprob: -13.000042915344238
    5. '"' → logprob: -13.375042915344238
    6. '000' → logprob: -14.250042915344238
    7. ''s' → logprob: -15.875042915344238
    8. '''' → logprob: -16.375041961669922
    9. ' '' → logprob: -16.875041961669922
    10. '```' → logprob: -17.875041961669922

Token 344: ' *' (ID: 425)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3256990313529968
    2. ''' → logprob: -1.5756990909576416
    3. ' *' → logprob: -2.9506990909576416
    4. '"' → logprob: -4.4506988525390625
    5. '*(' → logprob: -5.5756988525390625
    6. '*' → logprob: -6.2006988525390625
    7. '```' → logprob: -8.200698852539062
    8. '000' → logprob: -8.325698852539062
    9. ''''' → logprob: -8.825698852539062
    10. ''s' → logprob: -9.200698852539062

Token 345: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.6240566083070007e-06
    2. ' (' → logprob: -13.500001907348633
    3. '   ' → logprob: -16.125001907348633
    4. '5' → logprob: -16.500001907348633
    5. '{' → logprob: -18.125001907348633
    6. '       ' → logprob: -18.125001907348633
    7. '((' → logprob: -19.500001907348633
    8. '
' → logprob: -20.000001907348633
    9. '[' → logprob: -20.125001907348633
    10. '（' → logprob: -20.375001907348633

Token 346: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.50001335144043
    3. '(' → logprob: -12.87501335144043
    4. '   ' → logprob: -15.37501335144043
    5. '       ' → logprob: -18.12501335144043
    6. '```' → logprob: -19.50001335144043
    7. '           ' → logprob: -19.62501335144043
    8. '`' → logprob: -20.12501335144043
    9. '
' → logprob: -20.12501335144043
    10. '  ' → logprob: -20.50001335144043

Token 347: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0017095671501010656
    2. '-' → logprob: -6.376709461212158
    3. '5' → logprob: -12.001709938049316
    4. '   ' → logprob: -13.876709938049316
    5. ' ' → logprob: -15.251709938049316
    6. ')' → logprob: -17.251708984375
    7. '[' → logprob: -17.876708984375
    8. ' -
' → logprob: -18.251708984375
    9. '```' → logprob: -18.376708984375
    10. '-re' → logprob: -18.501708984375

Token 348: ' remainder' (ID: 47056)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.048589304089546204
    2. ' remainder' → logprob: -3.0485892295837402
    3. '	re' → logprob: -14.548589706420898
    4. ' ' → logprob: -14.673589706420898
    5. '   ' → logprob: -14.798589706420898
    6. ' re' → logprob: -15.673589706420898
    7. 'rest' → logprob: -15.673589706420898
    8. '  ' → logprob: -16.2985897064209
    9. 'r' → logprob: -16.4235897064209
    10. '       ' → logprob: -17.0485897064209

Token 349: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.44312788406387e-05
    2. ')
' → logprob: -9.875054359436035
    3. '       ' → logprob: -12.875054359436035
    4. ' )' → logprob: -15.625054359436035
    5. '   ' → logprob: -16.87505531311035
    6. ')return' → logprob: -17.50005531311035
    7. ')

' → logprob: -17.50005531311035
    8. '')' → logprob: -17.87505531311035
    9. ')}' → logprob: -18.37505531311035
    10. '))' → logprob: -18.50005531311035

Token 350: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01675063744187355
    2. '
' → logprob: -4.141750812530518
    3. '<|end|>' → logprob: -8.39175033569336
    4. '        
' → logprob: -8.51675033569336
    5. 'return' → logprob: -9.64175033569336
    6. '   ' → logprob: -9.64175033569336
    7. ' return' → logprob: -9.89175033569336
    8. '	' → logprob: -10.64175033569336
    9. '    
' → logprob: -10.64175033569336
    10. '  
' → logprob: -11.39175033569336

Token 351: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8306715488433838
    2. ' return' → logprob: -1.2056715488433838
    3. '       ' → logprob: -1.3306715488433838
    4. '
' → logprob: -8.955671310424805
    5. 'encoded' → logprob: -9.205671310424805
    6. 'result' → logprob: -9.330671310424805
    7. '   ' → logprob: -10.205671310424805
    8. '        
' → logprob: -10.580671310424805
    9. ' encoded' → logprob: -11.080671310424805
    10. ' result' → logprob: -11.205671310424805

Token 352: ' encoded' (ID: 41096)
  Prédit: ' encoded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' encoded' → logprob: -0.38687798380851746
    2. 'encoded' → logprob: -1.1368780136108398
    3. '(encoded' → logprob: -11.88687801361084
    4. ' ' → logprob: -17.011877059936523
    5. '_encoded' → logprob: -18.136877059936523
    6. '   ' → logprob: -18.511877059936523
    7. ''' → logprob: -19.136877059936523
    8. 'Encoded' → logprob: -19.136877059936523
    9. 'encode' → logprob: -19.261877059936523
    10. ' encode' → logprob: -19.636877059936523

Token 353: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: 0.0
    2. 'bits' → logprob: -17.625
    3. '_bit' → logprob: -17.875
    4. '_encoded' → logprob: -18.5
    5. '_BITS' → logprob: -18.75
    6. '_tokens' → logprob: -19.5
    7. 'ed' → logprob: -20.375
    8. '_bytes' → logprob: -20.5
    9. ''_' → logprob: -20.625
    10. '_b' → logprob: -20.75

Token 354: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 355: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 356: ' Decoder' (ID: 129249)
  Prédit: ' Decoder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Decoder' → logprob: -0.0010640094988048077
    2. ' Encoder' → logprob: -7.501063823699951
    3. 'Decoder' → logprob: -7.626063823699951
    4. ' Dec' → logprob: -12.12606430053711
    5. ' Parser' → logprob: -12.37606430053711
    6. ' Bit' → logprob: -13.12606430053711
    7. '_decoder' → logprob: -13.62606430053711
    8. ' decoder' → logprob: -13.75106430053711
    9. ' Huff' → logprob: -13.75106430053711
    10. ' Transformer' → logprob: -14.25106430053711

Token 357: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16023053228855133
    2. ':
' → logprob: -1.9102305173873901
    3. ':def' → logprob: -12.41023063659668
    4. ':

' → logprob: -14.03523063659668
    5. ':
' → logprob: -15.41023063659668
    6. ' :' → logprob: -15.41023063659668
    7. ' :
' → logprob: -15.53523063659668
    8. '():
' → logprob: -15.91023063659668
    9. '):
' → logprob: -15.91023063659668
    10. '：
' → logprob: -16.03523063659668

Token 358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08058250695466995
    2. ' def' → logprob: -2.580582618713379
    3. 'def' → logprob: -6.455582618713379
    4. '	def' → logprob: -9.205582618713379
    5. ' ' → logprob: -11.955582618713379
    6. '<|end|>' → logprob: -12.580582618713379
    7. ':' → logprob: -13.080582618713379
    8. '  ' → logprob: -13.455582618713379
    9. '
' → logprob: -13.580582618713379
    10. '    
' → logprob: -13.955582618713379

Token 359: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.05002451688051224
    2. 'def' (adapté à ' def') → logprob: -3.0500245094299316
    3. '   ' → logprob: -6.550024509429932
    4. 'class' → logprob: -12.55002498626709
    5. '	def' → logprob: -13.80002498626709
    6. ' ' → logprob: -14.30002498626709
    7. 'de' → logprob: -15.17502498626709
    8. ' class' → logprob: -15.80002498626709
    9. '  ' → logprob: -16.050024032592773
    10. '```' → logprob: -16.050024032592773

Token 360: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0015392655041068792
    2. '__' → logprob: -6.62653923034668
    3. ' _' → logprob: -8.87653923034668
    4. '_init' → logprob: -10.50153923034668
    5. ' def' → logprob: -10.75153923034668
    6. '_' → logprob: -11.12653923034668
    7. ' ' → logprob: -12.25153923034668
    8. ' ' → logprob: -13.25153923034668
    9. 'def' → logprob: -13.75153923034668
    10. ' init' → logprob: -13.87653923034668

Token 361: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.3856492842023727e-06
    2. 'def' → logprob: -13.625000953674316
    3. ' init' → logprob: -17.000001907348633
    4. 'int' → logprob: -17.750001907348633
    5. '```' → logprob: -18.000001907348633
    6. '_init' → logprob: -18.750001907348633
    7. '(init' → logprob: -19.000001907348633
    8. '	init' → logprob: -19.125001907348633
    9. '
' → logprob: -19.375001907348633
    10. '   ' → logprob: -19.500001907348633

Token 362: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.38701483607292175
    2. '(self' → logprob: -1.1370148658752441
    3. '(' → logprob: -9.512014389038086
    4. '   ' → logprob: -10.762014389038086
    5. '_(' → logprob: -11.387014389038086
    6. 'self' → logprob: -11.637014389038086
    7. ' (' → logprob: -11.887014389038086
    8. '__(
' → logprob: -12.137014389038086
    9. '__' → logprob: -12.387014389038086
    10. ')(' → logprob: -12.762014389038086

Token 363: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.935296834039036e-06
    2. ' self' → logprob: -13.50000286102295
    3. '):
' → logprob: -14.12500286102295
    4. ')' → logprob: -15.12500286102295
    5. '   ' → logprob: -15.37500286102295
    6. '       ' → logprob: -15.87500286102295
    7. '
' → logprob: -16.125003814697266
    8. '(self' → logprob: -17.375003814697266
    9. ')
' → logprob: -18.125003814697266
    10. 'def' → logprob: -19.625003814697266

Token 364: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38716620206832886
    2. '):
' → logprob: -1.1371662616729736
    3. 'self' → logprob: -8.762166023254395
    4. '():' → logprob: -10.387166023254395
    5. ')' → logprob: -10.637166023254395
    6. ',' → logprob: -10.887166023254395
    7. '(self' → logprob: -11.137166023254395
    8. '):
' → logprob: -11.512166023254395
    9. '):

' → logprob: -11.637166023254395
    10. ':' → logprob: -11.887166023254395

Token 365: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20828847587108612
    2. 'self' → logprob: -1.7082884311676025
    3. '   ' → logprob: -5.333288669586182
    4. ' self' → logprob: -6.333288669586182
    5. 'def' → logprob: -8.458288192749023
    6. '	self' → logprob: -10.833288192749023
    7. ' ' → logprob: -12.333288192749023
    8. '     ' → logprob: -12.833288192749023
    9. '(self' → logprob: -13.083288192749023
    10. '      ' → logprob: -13.333288192749023

Token 366: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0005330175044946373
    2. '       ' → logprob: -7.625533103942871
    3. ' self' → logprob: -10.250533103942871
    4. '
' → logprob: -12.750533103942871
    5. '   ' → logprob: -13.000533103942871
    6. '#' → logprob: -13.125533103942871
    7. 'def' → logprob: -14.000533103942871
    8. 'class' → logprob: -14.875533103942871
    9. 'char' → logprob: -15.125533103942871
    10. 'code' → logprob: -15.500533103942871

Token 367: '.code' (ID: 17685)
  Prédit: '.code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.code' → logprob: -0.5301371812820435
    2. '.char' → logprob: -0.9051371812820435
    3. '.bit' → logprob: -6.030137062072754
    4. '.bits' → logprob: -6.155137062072754
    5. '.codes' → logprob: -7.155137062072754
    6. 'char' → logprob: -7.530137062072754
    7. 'code' → logprob: -8.155137062072754
    8. '.decode' → logprob: -9.530137062072754
    9. '.sequence' → logprob: -9.655137062072754
    10. '.current' → logprob: -9.780137062072754

Token 368: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -2.3676733690081164e-05
    2. 'to' → logprob: -11.00002384185791
    3. '_map' → logprob: -12.00002384185791
    4. 'To' → logprob: -15.12502384185791
    5. '_TO' → logprob: -16.000022888183594
    6. '_' → logprob: -16.375022888183594
    7. 's' → logprob: -17.250022888183594
    8. ' to' → logprob: -17.375022888183594
    9. 'char' → logprob: -17.875022888183594
    10. '_lengths' → logprob: -18.000022888183594

Token 369: '_char' (ID: 23398)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.005234475247561932
    2. '_char' → logprob: -5.255234241485596
    3. ' char' → logprob: -14.380234718322754
    4. 'Char' → logprob: -16.755233764648438
    5. 'ch' → logprob: -18.005233764648438
    6. 'chr' → logprob: -18.255233764648438
    7. '
' → logprob: -18.380233764648438
    8. '	char' → logprob: -18.630233764648438
    9. '<char' → logprob: -18.755233764648438
    10. '```' → logprob: -18.880233764648438

Token 370: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07893341779708862
    2. '=' → logprob: -2.5789334774017334
    3. ' ={' → logprob: -10.578933715820312
    4. '{' → logprob: -11.578933715820312
    5. '={' → logprob: -12.078933715820312
    6. '   ' → logprob: -13.703933715820312
    7. '={'' → logprob: -14.828933715820312
    8. '={}' → logprob: -14.828933715820312
    9. 's' → logprob: -15.078933715820312
    10. '={
' → logprob: -15.203933715820312

Token 371: ' {
' (ID: 405)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.17455916106700897
    2. '{
' → logprob: -1.9245591163635254
    3. ' {' → logprob: -4.424559116363525
    4. ' {
' → logprob: -6.424559116363525
    5. '{}' → logprob: -7.424559116363525
    6. '   ' → logprob: -11.299559593200684
    7. ' {}' → logprob: -11.299559593200684
    8. '       ' → logprob: -12.174559593200684
    9. '{}{
' → logprob: -13.549559593200684
    10. 'dict' → logprob: -14.424559593200684

Token 372: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02769549936056137
    2. ''' → logprob: -3.652695417404175
    3. '{' → logprob: -6.902695655822754
    4. '{
' → logprob: -8.152695655822754
    5. '       ' → logprob: -10.277695655822754
    6. '   ' → logprob: -10.777695655822754
    7. '{'' → logprob: -10.902695655822754
    8. ' '' → logprob: -11.527695655822754
    9. '          ' → logprob: -12.652695655822754
    10. '		' → logprob: -12.652695655822754

Token 373: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.00026073982007801533
    2. '           ' → logprob: -8.375260353088379
    3. ' '' → logprob: -11.000260353088379
    4. '       ' → logprob: -12.000260353088379
    5. '"' → logprob: -12.500260353088379
    6. '   ' → logprob: -12.875260353088379
    7. '101' → logprob: -14.625260353088379
    8. ' ' → logprob: -15.250260353088379
    9. '{'' → logprob: -15.750260353088379
    10. '  ' → logprob: -16.250261306762695

Token 374: '000' (ID: 1302)
  Prédit: '101'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -0.001432620221748948
    2. ''' → logprob: -6.626432418823242
    3. ' ' → logprob: -9.501432418823242
    4. '000' → logprob: -11.376432418823242
    5. '010' → logprob: -12.626432418823242
    6. '1' → logprob: -12.626432418823242
    7. '10' → logprob: -12.876432418823242
    8. '100' → logprob: -13.001432418823242
    9. ' '' → logprob: -13.126432418823242
    10. '"' → logprob: -13.251432418823242

Token 375: '00' (ID: 504)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.002370893256738782
    2. ''' → logprob: -7.127370834350586
    3. '00' → logprob: -7.127370834350586
    4. '101' → logprob: -7.877370834350586
    5. '0' → logprob: -9.127370834350586
    6. '001' → logprob: -9.127370834350586
    7. '111' → logprob: -9.752370834350586
    8. ' '' → logprob: -11.127370834350586
    9. ''''' → logprob: -11.502370834350586
    10. '1' → logprob: -11.627370834350586

Token 376: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.604016900062561
    2. ''' → logprob: -0.979016900062561
    3. '0' → logprob: -2.6040167808532715
    4. ' '' → logprob: -6.6040167808532715
    5. ':' → logprob: -6.8540167808532715
    6. '1' → logprob: -7.1040167808532715
    7. '':'' → logprob: -8.35401725769043
    8. ' ':' → logprob: -8.85401725769043
    9. '   ' → logprob: -10.10401725769043
    10. ' :' → logprob: -10.60401725769043

Token 377: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0015963915502652526
    2. '"' → logprob: -6.876596450805664
    3. ' '' → logprob: -7.751596450805664
    4. ''A' → logprob: -9.751596450805664
    5. 'None' → logprob: -10.876596450805664
    6. '[' → logprob: -11.376596450805664
    7. ''S' → logprob: -11.876596450805664
    8. ' ' → logprob: -12.001596450805664
    9. '0' → logprob: -12.126596450805664
    10. '<|end|>' → logprob: -12.501596450805664

Token 378: 'A' (ID: 32)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.012041699141263962
    2. ''''' → logprob: -5.7620415687561035
    3. ' '' → logprob: -5.8870415687561035
    4. 'A' → logprob: -5.8870415687561035
    5. ''A' → logprob: -7.0120415687561035
    6. 'E' → logprob: -7.3870415687561035
    7. ''E' → logprob: -8.137042045593262
    8. ''S' → logprob: -8.262042045593262
    9. '''' → logprob: -8.387042045593262
    10. '\'' → logprob: -8.637042045593262

Token 379: '',
' (ID: 1214)
  Prédit: '',
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',
' → logprob: -0.3353118896484375
    2. '',' → logprob: -1.3353118896484375
    3. ''' → logprob: -3.8353118896484375
    4. '',
' → logprob: -8.585311889648438
    5. ' ',
' → logprob: -11.085311889648438
    6. ''
' → logprob: -12.710311889648438
    7. 'B' → logprob: -13.585311889648438
    8. ' ',' → logprob: -13.585311889648438
    9. 'A' → logprob: -13.585311889648438
    10. ''}' → logprob: -13.710311889648438

Token 380: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029896395280957222
    2. ''' → logprob: -3.5298964977264404
    3. '       ' → logprob: -9.77989673614502
    4. '   ' → logprob: -10.27989673614502
    5. '          ' → logprob: -11.52989673614502
    6. ' '' → logprob: -11.52989673614502
    7. '<|end|>' → logprob: -11.65489673614502
    8. '...' → logprob: -12.15489673614502
    9. ''A' → logprob: -12.15489673614502
    10. '000' → logprob: -13.02989673614502

Token 381: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.0042145708575844765
    2. '           ' → logprob: -5.504214763641357
    3. '       ' → logprob: -10.0042142868042
    4. ''A' → logprob: -10.5042142868042
    5. '   ' → logprob: -10.8792142868042
    6. ' '' → logprob: -11.3792142868042
    7. '"' → logprob: -11.5042142868042
    8. '...' → logprob: -12.0042142868042
    9. '000' → logprob: -13.0042142868042
    10. '  ' → logprob: -13.2542142868042

Token 382: '000' (ID: 1302)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.294717013835907
    2. '000' → logprob: -1.4197170734405518
    3. '001' → logprob: -5.169716835021973
    4. '101' → logprob: -5.169716835021973
    5. '100' → logprob: -6.419716835021973
    6. '010' → logprob: -8.294716835021973
    7. ''s' → logprob: -9.419716835021973
    8. '111' → logprob: -9.794716835021973
    9. '"' → logprob: -10.919716835021973
    10. ' '' → logprob: -11.669716835021973

Token 383: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.46661293506622314
    2. '00' → logprob: -1.0916129350662231
    3. '000' → logprob: -4.091612815856934
    4. '11' → logprob: -4.591612815856934
    5. '001' → logprob: -5.966612815856934
    6. '10' → logprob: -5.966612815856934
    7. '010' → logprob: -6.591612815856934
    8. '0' → logprob: -6.716612815856934
    9. '1' → logprob: -6.716612815856934
    10. ''' → logprob: -7.841612815856934

Token 384: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.002605856629088521
    2. ':' → logprob: -6.50260591506958
    3. ''' → logprob: -7.00260591506958
    4. '<|end|>' → logprob: -9.502605438232422
    5. ' ':' → logprob: -10.502605438232422
    6. '':'' → logprob: -10.627605438232422
    7. 'A' → logprob: -11.002605438232422
    8. ' :' → logprob: -11.127605438232422
    9. '0' → logprob: -11.127605438232422
    10. '":' → logprob: -12.627605438232422

Token 385: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.062278781086206436
    2. ' '' → logprob: -3.8122787475585938
    3. ''S' → logprob: -4.187278747558594
    4. ''E' → logprob: -4.187278747558594
    5. ''A' → logprob: -5.937278747558594
    6. ''U' → logprob: -6.187278747558594
    7. ''T' → logprob: -6.437278747558594
    8. ''D' → logprob: -7.312278747558594
    9. ''C' → logprob: -8.562278747558594
    10. ''I' → logprob: -8.812278747558594

Token 386: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.04971206933259964
    2. 'A' → logprob: -3.4247121810913086
    3. ''' → logprob: -4.799712181091309
    4. 'E' → logprob: -5.299712181091309
    5. '000' → logprob: -7.049712181091309
    6. 'N' → logprob: -7.299712181091309
    7. 'S' → logprob: -8.674712181091309
    8. 'T' → logprob: -8.799712181091309
    9. 'P' → logprob: -9.049712181091309
    10. 'C' → logprob: -9.299712181091309

Token 387: '',
' (ID: 1214)
  Prédit: '',
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',
' → logprob: -0.3152947425842285
    2. '',' → logprob: -1.3152947425842285
    3. ''' → logprob: -6.5652947425842285
    4. '           ' → logprob: -8.06529426574707
    5. ',
' → logprob: -9.19029426574707
    6. '',
' → logprob: -9.44029426574707
    7. ',' → logprob: -9.56529426574707
    8. '','' → logprob: -10.94029426574707
    9. '       ' → logprob: -11.31529426574707
    10. '',...
' → logprob: -11.44029426574707

Token 388: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008696711622178555
    2. ''' → logprob: -4.758696556091309
    3. '       ' → logprob: -10.008696556091309
    4. '   ' → logprob: -11.383696556091309
    5. ' '' → logprob: -11.633696556091309
    6. '...' → logprob: -12.383696556091309
    7. '          ' → logprob: -12.508696556091309
    8. ' ' → logprob: -13.008696556091309
    9. '         ' → logprob: -13.633696556091309
    10. '               ' → logprob: -14.133696556091309

Token 389: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -3.047134305234067e-05
    2. ' '' → logprob: -11.000030517578125
    3. '           ' → logprob: -11.750030517578125
    4. '000' → logprob: -12.625030517578125
    5. '   ' → logprob: -14.000030517578125
    6. '"' → logprob: -14.250030517578125
    7. ' ' → logprob: -14.375030517578125
    8. '       ' → logprob: -15.250030517578125
    9. '...' → logprob: -16.125030517578125
    10. '  ' → logprob: -17.625030517578125

Token 390: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.01111584808677435
    2. ''' → logprob: -4.511116027832031
    3. '001' → logprob: -10.011116027832031
    4. '"' → logprob: -10.761116027832031
    5. '010' → logprob: -14.386116027832031
    6. '100' → logprob: -14.761116027832031
    7. ''s' → logprob: -15.261116027832031
    8. ' '' → logprob: -16.01111602783203
    9. '111' → logprob: -16.13611602783203
    10. ''S' → logprob: -16.26111602783203

Token 391: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0005454073543660343
    2. '11' → logprob: -7.625545501708984
    3. '01' → logprob: -10.375545501708984
    4. '00' → logprob: -10.625545501708984
    5. '1' → logprob: -14.000545501708984
    6. '010' → logprob: -14.375545501708984
    7. '0' → logprob: -15.750545501708984
    8. '110' → logprob: -16.750545501708984
    9. '
' → logprob: -16.938045501708984
    10. '02' → logprob: -17.438045501708984

Token 392: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.06446195393800735
    2. ':' → logprob: -2.9394619464874268
    3. ''' → logprob: -4.939462184906006
    4. '<|end|>' → logprob: -6.689462184906006
    5. ' '' → logprob: -8.189461708068848
    6. '':'' → logprob: -8.314461708068848
    7. ' :' → logprob: -8.564461708068848
    8. ' ':' → logprob: -8.814461708068848
    9. ''s' → logprob: -10.189461708068848
    10. '<|end|>' → logprob: -10.439461708068848

Token 393: ' '' (ID: 461)
  Prédit: ''C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''C' → logprob: -0.19757036864757538
    2. ' '' → logprob: -2.197570323944092
    3. ''' → logprob: -2.697570323944092
    4. ''S' → logprob: -7.572570323944092
    5. 'C' → logprob: -9.57257080078125
    6. ''A' → logprob: -9.69757080078125
    7. ' ' → logprob: -10.19757080078125
    8. ''E' → logprob: -10.19757080078125
    9. ''D' → logprob: -10.19757080078125
    10. ''U' → logprob: -11.19757080078125

Token 394: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0034655947238206863
    2. ''C' → logprob: -5.75346565246582
    3. ' C' → logprob: -8.87846565246582
    4. ''' → logprob: -9.25346565246582
    5. 'B' → logprob: -11.00346565246582
    6. 'D' → logprob: -11.50346565246582
    7. 'E' → logprob: -11.87846565246582
    8. 'A' → logprob: -12.00346565246582
    9. 'S' → logprob: -13.37846565246582
    10. '000' → logprob: -13.37846565246582

Token 395: '',
' (ID: 1214)
  Prédit: '',
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',
' → logprob: -0.3072102665901184
    2. '',' → logprob: -1.4322102069854736
    3. ''' → logprob: -3.6822102069854736
    4. ',
' → logprob: -8.682209968566895
    5. '           ' → logprob: -9.057209968566895
    6. '',
' → logprob: -9.682209968566895
    7. '       ' → logprob: -9.932209968566895
    8. ',' → logprob: -10.182209968566895
    9. ''
' → logprob: -10.432209968566895
    10. '',...
' → logprob: -11.057209968566895

Token 396: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024975579231977463
    2. ''' → logprob: -3.899975538253784
    3. '       ' → logprob: -5.774975776672363
    4. '...' → logprob: -7.274975776672363
    5. '   ' → logprob: -8.899975776672363
    6. '	       ' → logprob: -9.149975776672363
    7. '<|end|>' → logprob: -9.399975776672363
    8. '          ' → logprob: -9.524975776672363
    9. ' ' → logprob: -10.024975776672363
    10. '}' → logprob: -10.524975776672363

Token 397: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.027585912495851517
    2. '           ' → logprob: -3.652585983276367
    3. ' '' → logprob: -6.902585983276367
    4. '         ' → logprob: -9.527585983276367
    5. '       ' → logprob: -9.527585983276367
    6. ' ' → logprob: -10.152585983276367
    7. '   ' → logprob: -10.402585983276367
    8. '          ' → logprob: -10.902585983276367
    9. '000' → logprob: -11.777585983276367
    10. '               ' → logprob: -11.902585983276367

Token 398: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0007523320964537561
    2. ''' → logprob: -7.2507524490356445
    3. '001' → logprob: -10.125752449035645
    4. '"' → logprob: -13.250752449035645
    5. '111' → logprob: -16.000751495361328
    6. '010' → logprob: -16.375751495361328
    7. ''s' → logprob: -16.500751495361328
    8. '100' → logprob: -16.875751495361328
    9. '0' → logprob: -17.000751495361328
    10. ''''' → logprob: -17.000751495361328

Token 399: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -1.6240566083070007e-06
    2. '00' → logprob: -14.125001907348633
    3. '011' → logprob: -15.250001907348633
    4. '0' → logprob: -15.750001907348633
    5. '1' → logprob: -15.750001907348633
    6. '110' → logprob: -15.875001907348633
    7. '```' → logprob: -16.875001907348633
    8. '01' → logprob: -17.125001907348633
    9. '111' → logprob: -18.000001907348633
    10. '100' → logprob: -18.500001907348633

Token 400: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.5841612219810486
    2. ''' → logprob: -0.8341612219810486
    3. ':' → logprob: -5.709161281585693
    4. '<|end|>' → logprob: -5.959161281585693
    5. '',' → logprob: -6.834161281585693
    6. ''A' → logprob: -8.209160804748535
    7. ' '' → logprob: -8.834160804748535
    8. '':'' → logprob: -8.834160804748535
    9. ''}' → logprob: -9.084160804748535
    10. ',' → logprob: -9.209160804748535

Token 401: ' '' (ID: 461)
  Prédit: ''D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''D' → logprob: -0.05792507901787758
    2. ' '' → logprob: -3.30792498588562
    3. ''' → logprob: -3.93292498588562
    4. ''S' → logprob: -9.4329252243042
    5. ''d' → logprob: -11.5579252243042
    6. ' ' → logprob: -12.8079252243042
    7. '"D' → logprob: -13.0579252243042
    8. ' D' → logprob: -13.1829252243042
    9. 'D' → logprob: -13.5579252243042
    10. ' ' → logprob: -14.5579252243042

Token 402: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0026242893654853106
    2. ''D' → logprob: -6.00262451171875
    3. ''' → logprob: -8.87762451171875
    4. ' D' → logprob: -12.00262451171875
    5. ''d' → logprob: -14.25262451171875
    6. 'E' → logprob: -14.75262451171875
    7. ''S' → logprob: -15.12762451171875
    8. ' '' → logprob: -15.25262451171875
    9. 'S' → logprob: -15.50262451171875
    10. 'A' → logprob: -16.00262451171875

Token 403: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.019560987129807472
    2. '',' → logprob: -4.269560813903809
    3. '',
' → logprob: -6.519560813903809
    4. '       ' → logprob: -6.519560813903809
    5. '}' → logprob: -7.144560813903809
    6. '           ' → logprob: -7.269560813903809
    7. ''}' → logprob: -7.519560813903809
    8. '<|end|>' → logprob: -8.519560813903809
    9. '   ' → logprob: -9.519560813903809
    10. ''
' → logprob: -10.894560813903809

Token 404: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.636554479598999
    2. '           ' → logprob: -0.761554479598999
    3. '       ' → logprob: -5.761554718017578
    4. '   ' → logprob: -7.511554718017578
    5. '          ' → logprob: -9.761554718017578
    6. '         ' → logprob: -9.886554718017578
    7. ' ' → logprob: -10.011554718017578
    8. ' '' → logprob: -10.636554718017578
    9. '     ' → logprob: -11.511554718017578
    10. '	       ' → logprob: -11.636554718017578

Token 405: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.0005586316110566258
    2. '           ' → logprob: -7.750558853149414
    3. ' '' → logprob: -9.125558853149414
    4. '   ' → logprob: -12.000558853149414
    5. '       ' → logprob: -12.375558853149414
    6. '"' → logprob: -12.500558853149414
    7. ' ' → logprob: -13.625558853149414
    8. '...' → logprob: -13.750558853149414
    9. '         ' → logprob: -13.875558853149414
    10. '          ' → logprob: -14.375558853149414

Token 406: '001' (ID: 7659)
  Prédit: '001'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '001' → logprob: -0.033657338470220566
    2. ''' → logprob: -3.4086573123931885
    3. ' '' → logprob: -12.40865707397461
    4. '```' → logprob: -12.65865707397461
    5. '"' → logprob: -14.40865707397461
    6. ' ' → logprob: -14.53365707397461
    7. ''''' → logprob: -14.53365707397461
    8. '...' → logprob: -14.65865707397461
    9. '111' → logprob: -15.03365707397461
    10. '000' → logprob: -15.28365707397461

Token 407: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -3.7697225252486533e-06
    2. '01' → logprob: -13.125003814697266
    3. '```' → logprob: -14.125003814697266
    4. '0' → logprob: -15.250003814697266
    5. '000' → logprob: -15.625003814697266
    6. '
' → logprob: -15.625003814697266
    7. '`' → logprob: -16.625003814697266
    8. '``' → logprob: -16.750003814697266
    9. ''' → logprob: -17.125003814697266
    10. '   ' → logprob: -17.187503814697266

Token 408: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.006948025897145271
    2. ':' → logprob: -5.506947994232178
    3. ''' → logprob: -5.881947994232178
    4. '':'' → logprob: -10.506948471069336
    5. '<|end|>' → logprob: -11.256948471069336
    6. ' :' → logprob: -11.756948471069336
    7. ' ':' → logprob: -11.881948471069336
    8. '":' → logprob: -12.506948471069336
    9. ''A' → logprob: -12.506948471069336
    10. ''>' → logprob: -13.131948471069336

Token 409: ' '' (ID: 461)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''E' → logprob: -0.008847969584167004
    2. ' '' → logprob: -4.883848190307617
    3. ''' → logprob: -7.383848190307617
    4. ''S' → logprob: -7.758848190307617
    5. 'E' → logprob: -8.883848190307617
    6. '"E' → logprob: -11.133848190307617
    7. ' ' → logprob: -11.758848190307617
    8. '’E' → logprob: -12.133848190307617
    9. ''É' → logprob: -12.508848190307617
    10. ' E' → logprob: -12.508848190307617

Token 410: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.062016863375902176
    2. ''E' → logprob: -2.8120169639587402
    3. ''' → logprob: -10.312016487121582
    4. ' E' → logprob: -11.812016487121582
    5. '"E' → logprob: -12.437016487121582
    6. '’E' → logprob: -13.312016487121582
    7. ' '' → logprob: -14.062016487121582
    8. ''S' → logprob: -14.812016487121582
    9. ''e' → logprob: -15.062016487121582
    10. '	E' → logprob: -15.687016487121582

Token 411: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.3006170690059662
    2. '',
' → logprob: -1.5506170988082886
    3. ''' → logprob: -3.050616979598999
    4. '',
' → logprob: -9.925617218017578
    5. '           ' → logprob: -10.050617218017578
    6. ''}' → logprob: -10.175617218017578
    7. '       ' → logprob: -10.550617218017578
    8. ',' → logprob: -11.550617218017578
    9. ''
' → logprob: -12.300617218017578
    10. '}' → logprob: -12.300617218017578

Token 412: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004012626595795155
    2. '           ' → logprob: -5.629012584686279
    3. '   ' → logprob: -8.254013061523438
    4. '       ' → logprob: -9.129013061523438
    5. ' '' → logprob: -10.254013061523438
    6. ' ' → logprob: -12.504013061523438
    7. '"' → logprob: -13.129013061523438
    8. '...' → logprob: -14.254013061523438
    9. '`' → logprob: -15.129013061523438
    10. '  ' → logprob: -15.129013061523438

Token 413: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.0032095611095428467
    2. '           ' → logprob: -5.878209590911865
    3. ' '' → logprob: -8.503209114074707
    4. '       ' → logprob: -8.628209114074707
    5. '   ' → logprob: -11.128209114074707
    6. '         ' → logprob: -13.128209114074707
    7. ' ' → logprob: -13.503209114074707
    8. '"' → logprob: -13.628209114074707
    9. '               ' → logprob: -14.003209114074707
    10. '          ' → logprob: -14.253209114074707

Token 414: '001' (ID: 7659)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00976801197975874
    2. '001' → logprob: -4.634768009185791
    3. '"' → logprob: -11.88476848602295
    4. ' '' → logprob: -12.63476848602295
    5. ''user' → logprob: -14.75976848602295
    6. '`' → logprob: -14.88476848602295
    7. ' ' → logprob: -15.63476848602295
    8. ''e' → logprob: -15.88476848602295
    9. '000' → logprob: -16.134767532348633
    10. '   ' → logprob: -16.259767532348633

Token 415: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: 0.0
    2. '```' → logprob: -18.625
    3. '00' → logprob: -19.5
    4. '0' → logprob: -20.375
    5. '10' → logprob: -20.625
    6. '05' → logprob: -21.0
    7. '010' → logprob: -21.1875
    8. '11' → logprob: -21.25
    9. ''' → logprob: -21.3125
    10. '101' → logprob: -21.4375

Token 416: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.23353445529937744
    2. ':' → logprob: -1.7335344552993774
    3. ''' → logprob: -3.483534336090088
    4. '<|end|>' → logprob: -8.233534812927246
    5. '':'' → logprob: -8.608534812927246
    6. ' :' → logprob: -9.358534812927246
    7. '":' → logprob: -10.108534812927246
    8. '')' → logprob: -10.233534812927246
    9. '   ' → logprob: -10.358534812927246
    10. ' '' → logprob: -10.483534812927246

Token 417: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10095199942588806
    2. ' '' → logprob: -2.350951910018921
    3. ''S' → logprob: -7.4759521484375
    4. ''U' → logprob: -9.3509521484375
    5. ''A' → logprob: -10.2259521484375
    6. ''T' → logprob: -11.3509521484375
    7. ''E' → logprob: -11.4759521484375
    8. ''O' → logprob: -11.7259521484375
    9. ' ' → logprob: -12.3509521484375
    10. ''H' → logprob: -12.6009521484375

Token 418: 'F' (ID: 37)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.231212317943573
    2. 'F' → logprob: -1.6062123775482178
    3. ' '' → logprob: -5.606212139129639
    4. ''S' → logprob: -6.481212139129639
    5. ' F' → logprob: -7.981212139129639
    6. ''E' → logprob: -10.106212615966797
    7. ''f' → logprob: -10.106212615966797
    8. ''A' → logprob: -10.731212615966797
    9. ''H' → logprob: -10.731212615966797
    10. ''T' → logprob: -10.856212615966797

Token 419: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09922957420349121
    2. '',
' → logprob: -2.724229574203491
    3. '',' → logprob: -3.599229574203491
    4. '}' → logprob: -7.47422981262207
    5. ',
' → logprob: -7.84922981262207
    6. ''}' → logprob: -8.59922981262207
    7. '       ' → logprob: -9.09922981262207
    8. ''
' → logprob: -9.34922981262207
    9. ',' → logprob: -9.72422981262207
    10. '           ' → logprob: -10.09922981262207

Token 420: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.40111786127090454
    2. '           ' → logprob: -1.1511178016662598
    3. '       ' → logprob: -4.52611780166626
    4. '   ' → logprob: -5.90111780166626
    5. ' '' → logprob: -7.77611780166626
    6. ' ' → logprob: -9.526118278503418
    7. '     ' → logprob: -11.026118278503418
    8. '         ' → logprob: -11.151118278503418
    9. '               ' → logprob: -11.401118278503418
    10. '          ' → logprob: -11.401118278503418

Token 421: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -9.901345038088039e-05
    2. ' '' → logprob: -9.375099182128906
    3. '   ' → logprob: -11.875099182128906
    4. ' ' → logprob: -13.125099182128906
    5. '001' → logprob: -13.375099182128906
    6. '"' → logprob: -13.500099182128906
    7. '       ' → logprob: -14.125099182128906
    8. '           ' → logprob: -14.500099182128906
    9. '}' → logprob: -15.750099182128906
    10. '`' → logprob: -16.000099182128906

Token 422: '001' (ID: 7659)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0015180727932602167
    2. '001' → logprob: -6.501518249511719
    3. ' '' → logprob: -11.126518249511719
    4. '"' → logprob: -14.626518249511719
    5. ' ' → logprob: -16.25151824951172
    6. '```' → logprob: -16.50151824951172
    7. ''user' → logprob: -17.12651824951172
    8. '{'' → logprob: -17.12651824951172
    9. '   ' → logprob: -17.50151824951172
    10. '...' → logprob: -17.62651824951172

Token 423: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.200166469876422e-06
    2. '01' → logprob: -12.875004768371582
    3. '11' → logprob: -13.875004768371582
    4. '00' → logprob: -14.250004768371582
    5. '1' → logprob: -14.750004768371582
    6. '06' → logprob: -15.125004768371582
    7. '۱۰' → logprob: -15.875004768371582
    8. '１０' → logprob: -16.3750057220459
    9. '0' → logprob: -16.5000057220459
    10. '100' → logprob: -17.8125057220459

Token 424: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.014752639457583427
    2. ''' → logprob: -4.5147528648376465
    3. ':' → logprob: -5.6397528648376465
    4. '':'' → logprob: -10.139752388000488
    5. '<|end|>' → logprob: -10.139752388000488
    6. ''):' → logprob: -11.264752388000488
    7. '',' → logprob: -11.764752388000488
    8. '":' → logprob: -11.889752388000488
    9. ''>' → logprob: -12.139752388000488
    10. '')' → logprob: -12.264752388000488

Token 425: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06399310380220413
    2. ''S' → logprob: -3.063993215560913
    3. ' '' → logprob: -4.188992977142334
    4. 'G' → logprob: -9.938993453979492
    5. ' G' → logprob: -11.313993453979492
    6. ' ' → logprob: -11.688993453979492
    7. '"G' → logprob: -11.938993453979492
    8. ''U' → logprob: -12.063993453979492
    9. ''s' → logprob: -12.188993453979492
    10. ' ' → logprob: -12.563993453979492

Token 426: 'G' (ID: 38)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6582729816436768
    2. 'G' → logprob: -0.7832729816436768
    3. ''S' → logprob: -3.9082729816436768
    4. ' '' → logprob: -5.408272743225098
    5. ' G' → logprob: -8.783272743225098
    6. ''A' → logprob: -9.283272743225098
    7. 'S' → logprob: -9.283272743225098
    8. ''s' → logprob: -9.908272743225098
    9. '"G' → logprob: -10.033272743225098
    10. ''E' → logprob: -10.158272743225098

Token 427: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.042309582233428955
    2. '',' → logprob: -3.292309522628784
    3. '',
' → logprob: -5.667309761047363
    4. ''}' → logprob: -8.042309761047363
    5. '           ' → logprob: -8.417309761047363
    6. '}' → logprob: -8.917309761047363
    7. '       ' → logprob: -9.417309761047363
    8. '   ' → logprob: -12.292309761047363
    9. ''s' → logprob: -12.542309761047363
    10. ',' → logprob: -12.542309761047363

Token 428: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21105307340621948
    2. ''' → logprob: -1.7110531330108643
    3. '       ' → logprob: -4.711052894592285
    4. '   ' → logprob: -8.211052894592285
    5. ' '' → logprob: -9.086052894592285
    6. '         ' → logprob: -9.836052894592285
    7. '          ' → logprob: -9.961052894592285
    8. ' ' → logprob: -10.461052894592285
    9. '     ' → logprob: -10.836052894592285
    10. '               ' → logprob: -11.211052894592285

Token 429: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.0013694037916138768
    2. '       ' → logprob: -7.501369476318359
    3. '           ' → logprob: -7.751369476318359
    4. ' '' → logprob: -8.37636947631836
    5. '   ' → logprob: -9.00136947631836
    6. '     ' → logprob: -11.50136947631836
    7. ' ' → logprob: -11.62636947631836
    8. '"' → logprob: -12.50136947631836
    9. '               ' → logprob: -12.75136947631836
    10. '      ' → logprob: -13.00136947631836

Token 430: '001' (ID: 7659)
  Prédit: '001'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '001' → logprob: -0.47408169507980347
    2. ''' → logprob: -0.9740816950798035
    3. '"' → logprob: -12.849081993103027
    4. ' '' → logprob: -13.849081993103027
    5. ' ' → logprob: -15.099081993103027
    6. '000' → logprob: -15.474081993103027
    7. '```' → logprob: -15.599081993103027
    8. ''S' → logprob: -15.974081993103027
    9. '0' → logprob: -16.72408103942871
    10. '`' → logprob: -16.84908103942871

Token 431: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -7.76759916334413e-05
    2. '1' → logprob: -10.625077247619629
    3. '00' → logprob: -10.875077247619629
    4. '01' → logprob: -11.375077247619629
    5. '10' → logprob: -11.500077247619629
    6. '111' → logprob: -12.500077247619629
    7. '011' → logprob: -13.062577247619629
    8. '07' → logprob: -13.562577247619629
    9. '```' → logprob: -13.625077247619629
    10. '110' → logprob: -14.687577247619629

Token 432: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.013496424071490765
    2. ''' → logprob: -4.388496398925781
    3. ':' → logprob: -7.013496398925781
    4. '':'' → logprob: -9.638496398925781
    5. '<|end|>' → logprob: -12.013496398925781
    6. '":' → logprob: -12.263496398925781
    7. ''):' → logprob: -13.138496398925781
    8. '',' → logprob: -13.638496398925781
    9. ' ':' → logprob: -13.888496398925781
    10. '’:' → logprob: -14.013496398925781

Token 433: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.5133315920829773
    2. ''H' → logprob: -1.013331651687622
    3. ''' → logprob: -3.263331651687622
    4. ' H' → logprob: -8.638331413269043
    5. 'H' → logprob: -10.638331413269043
    6. ''S' → logprob: -11.013331413269043
    7. ' ' → logprob: -11.888331413269043
    8. ''h' → logprob: -12.763331413269043
    9. ''I' → logprob: -12.888331413269043
    10. ''A' → logprob: -14.138331413269043

Token 434: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0010694891680032015
    2. ''H' → logprob: -7.00106954574585
    3. ''' → logprob: -9.001069068908691
    4. ' '' → logprob: -11.001069068908691
    5. ' H' → logprob: -11.001069068908691
    6. ''h' → logprob: -15.126069068908691
    7. ' ' → logprob: -15.876069068908691
    8. 'A' → logprob: -16.251070022583008
    9. ''S' → logprob: -16.376070022583008
    10. 'I' → logprob: -16.626070022583008

Token 435: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7890295386314392
    2. '',' → logprob: -0.7890295386314392
    3. '',
' → logprob: -2.539029598236084
    4. '           ' → logprob: -4.914029598236084
    5. '       ' → logprob: -5.914029598236084
    6. ''}' → logprob: -6.789029598236084
    7. '}' → logprob: -6.914029598236084
    8. '   ' → logprob: -9.664029121398926
    9. ',
' → logprob: -10.039029121398926
    10. ''
' → logprob: -10.289029121398926

Token 436: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25321274995803833
    2. ''' → logprob: -1.6282126903533936
    3. '       ' → logprob: -3.6282126903533936
    4. '          ' → logprob: -8.253212928771973
    5. '   ' → logprob: -8.878212928771973
    6. ' '' → logprob: -9.003212928771973
    7. '	       ' → logprob: -9.378212928771973
    8. '        ' → logprob: -10.003212928771973
    9. '         ' → logprob: -10.253212928771973
    10. '	   ' → logprob: -10.628212928771973

Token 437: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.0007028992986306548
    2. ' '' → logprob: -7.875702857971191
    3. '           ' → logprob: -9.000702857971191
    4. '       ' → logprob: -9.125702857971191
    5. '   ' → logprob: -9.625702857971191
    6. '}' → logprob: -11.500702857971191
    7. ' ' → logprob: -12.000702857971191
    8. '"' → logprob: -12.875702857971191
    9. '  ' → logprob: -13.375702857971191
    10. '     ' → logprob: -14.000702857971191

Token 438: '010' (ID: 13522)
  Prédit: '010'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '010' → logprob: -0.006718452088534832
    2. ''' → logprob: -5.006718635559082
    3. ' '' → logprob: -13.006718635559082
    4. '"' → logprob: -16.006717681884766
    5. '
' → logprob: -16.006717681884766
    6. '```' → logprob: -16.006717681884766
    7. '000' → logprob: -16.131717681884766
    8. ''s' → logprob: -16.256717681884766
    9. ' ' → logprob: -16.381717681884766
    10. '002' → logprob: -17.006717681884766

Token 439: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.00044616201194003224
    2. '000' → logprob: -8.250446319580078
    3. '01' → logprob: -8.875446319580078
    4. '10' → logprob: -10.250446319580078
    5. ''' → logprob: -12.750446319580078
    6. '11' → logprob: -13.250446319580078
    7. '```' → logprob: -13.250446319580078
    8. '0' → logprob: -14.062946319580078
    9. '100' → logprob: -14.937946319580078
    10. ' ' → logprob: -15.000446319580078

Token 440: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0009215848403982818
    2. ''' → logprob: -7.125921726226807
    3. ':' → logprob: -9.125921249389648
    4. '':'' → logprob: -12.250921249389648
    5. '":' → logprob: -13.500921249389648
    6. ' ':' → logprob: -14.000921249389648
    7. '',' → logprob: -15.750921249389648
    8. ''):' → logprob: -15.875921249389648
    9. '```' → logprob: -15.875921249389648
    10. '       ' → logprob: -16.12592124938965

Token 441: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.5673360228538513
    2. ''' → logprob: -0.9423360228538513
    3. ''I' → logprob: -3.192336082458496
    4. ''S' → logprob: -7.067336082458496
    5. ''A' → logprob: -7.317336082458496
    6. 'I' → logprob: -8.692336082458496
    7. ''U' → logprob: -8.817336082458496
    8. ''i' → logprob: -9.442336082458496
    9. ''T' → logprob: -9.567336082458496
    10. ' I' → logprob: -9.942336082458496

Token 442: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0339379720389843
    2. ''I' → logprob: -3.408937931060791
    3. ''' → logprob: -8.78393840789795
    4. ' I' → logprob: -9.40893840789795
    5. ' '' → logprob: -11.28393840789795
    6. '
' → logprob: -11.65893840789795
    7. '"I' → logprob: -11.90893840789795
    8. ''i' → logprob: -12.15893840789795
    9. ' ' → logprob: -12.78393840789795
    10. '

' → logprob: -13.03393840789795

Token 443: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2903161644935608
    2. '',' → logprob: -1.415316104888916
    3. '',
' → logprob: -4.915316104888916
    4. '}' → logprob: -7.165316104888916
    5. ''}' → logprob: -7.165316104888916
    6. '           ' → logprob: -9.915316581726074
    7. '       ' → logprob: -10.040316581726074
    8. '','' → logprob: -10.665316581726074
    9. '',
' → logprob: -11.290316581726074
    10. ',' → logprob: -11.415316581726074

Token 444: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5236514210700989
    2. '           ' → logprob: -0.8986514210700989
    3. ' '' → logprob: -8.648651123046875
    4. '          ' → logprob: -9.148651123046875
    5. '       ' → logprob: -9.898651123046875
    6. ' ' → logprob: -10.023651123046875
    7. '            ' → logprob: -10.148651123046875
    8. '   ' → logprob: -10.398651123046875
    9. '         ' → logprob: -10.773651123046875
    10. '"' → logprob: -11.023651123046875

Token 445: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.000273136975010857
    2. ' '' → logprob: -8.375272750854492
    3. '"' → logprob: -10.250272750854492
    4. '           ' → logprob: -13.000272750854492
    5. ' ' → logprob: -13.500272750854492
    6. '   ' → logprob: -14.000272750854492
    7. '}' → logprob: -14.000272750854492
    8. '010' → logprob: -14.875272750854492
    9. '...' → logprob: -15.250272750854492
    10. ''A' → logprob: -15.375272750854492

Token 446: '010' (ID: 13522)
  Prédit: '010'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '010' → logprob: -0.00020389800192788243
    2. ''' → logprob: -8.500204086303711
    3. '"' → logprob: -15.250204086303711
    4. '```' → logprob: -17.50020408630371
    5. ''''' → logprob: -18.12520408630371
    6. ' ' → logprob: -18.12520408630371
    7. ''''
' → logprob: -18.37520408630371
    8. '
' → logprob: -18.62520408630371
    9. '100' → logprob: -18.87520408630371
    10. '510' → logprob: -19.25020408630371

Token 447: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -7.226628895296017e-06
    2. '00' → logprob: -12.875007629394531
    3. '000' → logprob: -13.000007629394531
    4. '001' → logprob: -13.250007629394531
    5. '010' → logprob: -14.875007629394531
    6. '10' → logprob: -16.12500762939453
    7. '11' → logprob: -17.62500762939453
    8. '```' → logprob: -17.75000762939453
    9. '09' → logprob: -18.31250762939453
    10. '011' → logprob: -18.31250762939453

Token 448: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.005641259253025055
    2. ''' → logprob: -5.630641460418701
    3. ':' → logprob: -6.255641460418701
    4. '':'' → logprob: -9.255640983581543
    5. '":' → logprob: -12.130640983581543
    6. ' :' → logprob: -12.630640983581543
    7. '<|end|>' → logprob: -12.755640983581543
    8. ' ':' → logprob: -13.505640983581543
    9. '```' → logprob: -13.630640983581543
    10. '’:' → logprob: -14.005640983581543

Token 449: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.043090201914310455
    2. ' '' → logprob: -3.1680901050567627
    3. ''S' → logprob: -11.043089866638184
    4. ''U' → logprob: -11.043089866638184
    5. ''I' → logprob: -11.043089866638184
    6. ''A' → logprob: -11.168089866638184
    7. ''T' → logprob: -11.918089866638184
    8. ' ' → logprob: -12.043089866638184
    9. ' J' → logprob: -12.293089866638184
    10. ''E' → logprob: -12.418089866638184

Token 450: 'J' (ID: 41)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04028758034110069
    2. 'J' → logprob: -3.290287494659424
    3. ' '' → logprob: -6.415287494659424
    4. ''S' → logprob: -8.165287971496582
    5. ' J' → logprob: -9.040287971496582
    6. ''T' → logprob: -9.790287971496582
    7. ''A' → logprob: -10.040287971496582
    8. ''E' → logprob: -10.915287971496582
    9. ''H' → logprob: -11.415287971496582
    10. ''C' → logprob: -11.665287971496582

Token 451: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.478430837392807
    2. ''' → logprob: -1.6034308671951294
    3. '',
' → logprob: -1.7284308671951294
    4. '       ' → logprob: -7.72843074798584
    5. ',
' → logprob: -8.47843074798584
    6. '}' → logprob: -8.47843074798584
    7. '',
' → logprob: -9.10343074798584
    8. ''}' → logprob: -9.10343074798584
    9. ',' → logprob: -9.22843074798584
    10. '           ' → logprob: -9.47843074798584

Token 452: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3488530218601227
    2. '           ' → logprob: -1.2238529920578003
    3. '       ' → logprob: -8.84885311126709
    4. ' '' → logprob: -9.09885311126709
    5. '          ' → logprob: -9.47385311126709
    6. '         ' → logprob: -11.09885311126709
    7. '   ' → logprob: -11.22385311126709
    8. ' ' → logprob: -11.72385311126709
    9. '               ' → logprob: -11.72385311126709
    10. '            ' → logprob: -11.72385311126709

Token 453: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.00045712877181358635
    2. ' '' → logprob: -7.750457286834717
    3. '           ' → logprob: -10.625456809997559
    4. '"' → logprob: -13.500456809997559
    5. ' ' → logprob: -14.750456809997559
    6. '}' → logprob: -16.375457763671875
    7. '       ' → logprob: -16.625457763671875
    8. '          ' → logprob: -16.750457763671875
    9. '   ' → logprob: -16.875457763671875
    10. ''A' → logprob: -17.000457763671875

Token 454: '010' (ID: 13522)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0011718906462192535
    2. '010' → logprob: -6.751172065734863
    3. '"' → logprob: -13.876172065734863
    4. ' '' → logprob: -14.876172065734863
    5. ' ' → logprob: -15.626172065734863
    6. ''''' → logprob: -15.751172065734863
    7. '```' → logprob: -16.501171112060547
    8. '`' → logprob: -17.251171112060547
    9. ''A' → logprob: -17.751171112060547
    10. ''D' → logprob: -17.876171112060547

Token 455: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -6.630610641877865e-06
    2. '010' → logprob: -12.000006675720215
    3. '01' → logprob: -15.500006675720215
    4. '1' → logprob: -15.875006675720215
    5. '11' → logprob: -16.6250057220459
    6. '101' → logprob: -17.0000057220459
    7. '00' → logprob: -17.6250057220459
    8. '```' → logprob: -17.8750057220459
    9. '۱۰' → logprob: -19.0000057220459
    10. '

' → logprob: -19.3750057220459

Token 456: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.00024203950306400657
    2. ''' → logprob: -8.375242233276367
    3. ':' → logprob: -11.875242233276367
    4. '':'' → logprob: -12.875242233276367
    5. '":' → logprob: -13.750242233276367
    6. ' ':' → logprob: -14.875242233276367
    7. '':
' → logprob: -16.500242233276367
    8. ''>' → logprob: -16.625242233276367
    9. ''s' → logprob: -16.750242233276367
    10. '   ' → logprob: -17.625242233276367

Token 457: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.011130821891129017
    2. ' '' → logprob: -4.5111308097839355
    3. 'K' → logprob: -10.636131286621094
    4. ''S' → logprob: -10.636131286621094
    5. '"K' → logprob: -11.386131286621094
    6. ' K' → logprob: -11.636131286621094
    7. ' ' → logprob: -13.261131286621094
    8. ''U' → logprob: -13.261131286621094
    9. ''O' → logprob: -13.386131286621094
    10. ''E' → logprob: -13.511131286621094

Token 458: 'K' (ID: 42)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.31345680356025696
    2. 'K' → logprob: -1.3134567737579346
    3. ' '' → logprob: -9.313456535339355
    4. ''S' → logprob: -10.438456535339355
    5. ' K' → logprob: -11.063456535339355
    6. ''A' → logprob: -11.063456535339355
    7. '"K' → logprob: -11.938456535339355
    8. ''E' → logprob: -12.188456535339355
    9. 'Q' → logprob: -12.688456535339355
    10. ''C' → logprob: -12.688456535339355

Token 459: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.19294235110282898
    2. '',
' → logprob: -2.3179423809051514
    3. '',' → logprob: -2.5679423809051514
    4. '       ' → logprob: -9.69294261932373
    5. ''}' → logprob: -9.69294261932373
    6. '',
' → logprob: -10.06794261932373
    7. '           ' → logprob: -10.19294261932373
    8. '':' → logprob: -10.94294261932373
    9. ' '' → logprob: -11.06794261932373
    10. ''
' → logprob: -11.56794261932373

Token 460: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.22617676854133606
    2. '           ' → logprob: -1.6011767387390137
    3. ' '' → logprob: -7.976176738739014
    4. '       ' → logprob: -9.101177215576172
    5. '          ' → logprob: -9.476177215576172
    6. '         ' → logprob: -9.976177215576172
    7. ' ' → logprob: -9.976177215576172
    8. '"' → logprob: -10.476177215576172
    9. '            ' → logprob: -11.101177215576172
    10. '<|end|>' → logprob: -11.226177215576172

Token 461: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.000727325037587434
    2. ' '' → logprob: -7.25072717666626
    3. '           ' → logprob: -11.125727653503418
    4. '"' → logprob: -13.875727653503418
    5. ''A' → logprob: -14.125727653503418
    6. ' ' → logprob: -14.500727653503418
    7. '   ' → logprob: -16.0007266998291
    8. '          ' → logprob: -16.3757266998291
    9. '         ' → logprob: -16.5007266998291
    10. '       ' → logprob: -16.7507266998291

Token 462: '010' (ID: 13522)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6932092308998108
    2. '010' → logprob: -0.6932092308998108
    3. '"' → logprob: -9.818209648132324
    4. ' ' → logprob: -13.193209648132324
    5. '011' → logprob: -13.193209648132324
    6. ''''' → logprob: -13.818209648132324
    7. '0' → logprob: -13.943209648132324
    8. ' '' → logprob: -14.818209648132324
    9. '```' → logprob: -15.193209648132324
    10. '510' → logprob: -15.693209648132324

Token 463: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -1.9361264946837764e-07
    2. '011' → logprob: -16.25
    3. '10' → logprob: -18.125
    4. '1' → logprob: -18.25
    5. '110' → logprob: -18.375
    6. '```' → logprob: -19.0
    7. '01' → logprob: -19.625
    8. '101' → logprob: -20.125
    9. '１１' → logprob: -20.375
    10. '১১' → logprob: -20.5

Token 464: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.01186818815767765
    2. ''' → logprob: -4.886868000030518
    3. ':' → logprob: -5.511868000030518
    4. '':'' → logprob: -9.011868476867676
    5. '<|end|>' → logprob: -10.511868476867676
    6. '":' → logprob: -11.261868476867676
    7. '```' → logprob: -12.011868476867676
    8. ''>' → logprob: -12.261868476867676
    9. ''):' → logprob: -12.261868476867676
    10. '):' → logprob: -12.761868476867676

Token 465: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.25746047496795654
    2. ' '' → logprob: -2.007460594177246
    3. ''L' → logprob: -2.382460594177246
    4. ' L' → logprob: -8.757460594177246
    5. 'L' → logprob: -9.132460594177246
    6. ' ' → logprob: -10.632460594177246
    7. ''E' → logprob: -11.507460594177246
    8. ''l' → logprob: -11.632460594177246
    9. ''S' → logprob: -12.257460594177246
    10. ''A' → logprob: -12.257460594177246

Token 466: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.69319748878479
    2. ''L' → logprob: -0.69319748878479
    3. ' L' → logprob: -10.318197250366211
    4. ''' → logprob: -11.318197250366211
    5. ' '' → logprob: -12.818197250366211
    6. '"L' → logprob: -14.068197250366211
    7. ''l' → logprob: -14.318197250366211
    8. ''S' → logprob: -15.693197250366211
    9. ''A' → logprob: -15.943197250366211
    10. '```' → logprob: -15.943197250366211

Token 467: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4712875783443451
    2. '',' → logprob: -1.3462876081466675
    3. '',
' → logprob: -2.471287488937378
    4. '       ' → logprob: -4.346287727355957
    5. '           ' → logprob: -5.096287727355957
    6. '   ' → logprob: -5.221287727355957
    7. '}' → logprob: -5.846287727355957
    8. ''}' → logprob: -6.471287727355957
    9. ',
' → logprob: -6.846287727355957
    10. ',' → logprob: -7.471287727355957

Token 468: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.25509458780288696
    2. '           ' → logprob: -1.5050945281982422
    3. ' '' → logprob: -6.255094528198242
    4. '   ' → logprob: -7.255094528198242
    5. '          ' → logprob: -8.755094528198242
    6. '       ' → logprob: -8.880094528198242
    7. ' ' → logprob: -9.005094528198242
    8. '         ' → logprob: -10.880094528198242
    9. '            ' → logprob: -10.880094528198242
    10. '  ' → logprob: -10.880094528198242

Token 469: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.0006541779730468988
    2. ' '' → logprob: -7.375654220581055
    3. '           ' → logprob: -10.875654220581055
    4. '   ' → logprob: -12.500654220581055
    5. '"' → logprob: -13.125654220581055
    6. ' ' → logprob: -13.750654220581055
    7. '       ' → logprob: -14.500654220581055
    8. '         ' → logprob: -14.875654220581055
    9. '#' → logprob: -15.625654220581055
    10. '          ' → logprob: -15.625654220581055

Token 470: '011' (ID: 17342)
  Prédit: '011'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '011' → logprob: -0.07891324907541275
    2. ''' → logprob: -2.5789132118225098
    3. '```' → logprob: -11.703913688659668
    4. '111' → logprob: -12.078913688659668
    5. '"' → logprob: -12.828913688659668
    6. '511' → logprob: -13.453913688659668
    7. '010' → logprob: -13.453913688659668
    8. ''''' → logprob: -14.453913688659668
    9. ' '' → logprob: -15.203913688659668
    10. '
' → logprob: -15.328913688659668

Token 471: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -3.128163257315464e-07
    2. '01' → logprob: -15.875
    3. '```' → logprob: -17.25
    4. '0' → logprob: -17.375
    5. '000' → logprob: -17.75
    6. '11' → logprob: -19.0
    7. ' ' → logprob: -19.0
    8. '10' → logprob: -19.25
    9. '   ' → logprob: -19.375
    10. ''' → logprob: -19.375

Token 472: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.062199924141168594
    2. ':' → logprob: -2.812199831008911
    3. ''' → logprob: -8.687199592590332
    4. '':'' → logprob: -10.187199592590332
    5. '```' → logprob: -12.562199592590332
    6. '":' → logprob: -12.687199592590332
    7. '<|end|>' → logprob: -12.687199592590332
    8. ' :' → logprob: -12.812199592590332
    9. ''):' → logprob: -13.562199592590332
    10. ':'' → logprob: -13.562199592590332

Token 473: ' '' (ID: 461)
  Prédit: ''M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''M' → logprob: -0.0030652955174446106
    2. ' '' → logprob: -6.25306510925293
    3. ''' → logprob: -7.00306510925293
    4. ''S' → logprob: -9.50306510925293
    5. 'M' → logprob: -9.75306510925293
    6. ''m' → logprob: -10.12806510925293
    7. ' ' → logprob: -11.12806510925293
    8. '"M' → logprob: -11.87806510925293
    9. ''N' → logprob: -12.00306510925293
    10. ' M' → logprob: -12.37806510925293

Token 474: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.01025391835719347
    2. ''M' → logprob: -4.63525390625
    3. ''' → logprob: -8.13525390625
    4. ' M' → logprob: -9.01025390625
    5. ' '' → logprob: -9.88525390625
    6. ' ' → logprob: -12.26025390625
    7. '000' → logprob: -12.63525390625
    8. '')' → logprob: -12.88525390625
    9. ''m' → logprob: -13.01025390625
    10. '
' → logprob: -13.26025390625

Token 475: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5170863270759583
    2. '',' → logprob: -1.2670862674713135
    3. '',
' → logprob: -2.6420862674713135
    4. '           ' → logprob: -3.1420862674713135
    5. '':' → logprob: -5.642086505889893
    6. '       ' → logprob: -5.767086505889893
    7. '   ' → logprob: -8.517086029052734
    8. ''A' → logprob: -9.267086029052734
    9. ',' → logprob: -9.392086029052734
    10. '','' → logprob: -9.517086029052734

Token 476: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22783146798610687
    2. ''' → logprob: -1.602831482887268
    3. '       ' → logprob: -6.2278313636779785
    4. '   ' → logprob: -8.477831840515137
    5. ' '' → logprob: -9.102831840515137
    6. '          ' → logprob: -9.852831840515137
    7. '         ' → logprob: -10.727831840515137
    8. '```' → logprob: -11.852831840515137
    9. '...' → logprob: -12.102831840515137
    10. ' ' → logprob: -12.352831840515137

Token 477: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.0007900939672254026
    2. '           ' → logprob: -7.875790119171143
    3. ' '' → logprob: -7.875790119171143
    4. '       ' → logprob: -11.375789642333984
    5. '   ' → logprob: -11.625789642333984
    6. '"' → logprob: -12.750789642333984
    7. '          ' → logprob: -13.250789642333984
    8. '         ' → logprob: -13.625789642333984
    9. '`' → logprob: -14.000789642333984
    10. ' ' → logprob: -14.250789642333984

Token 478: '011' (ID: 17342)
  Prédit: '011'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '011' → logprob: -0.00030424181022681296
    2. ''' → logprob: -8.125304222106934
    3. '0' → logprob: -12.750304222106934
    4. '111' → logprob: -13.750304222106934
    5. '"' → logprob: -14.125304222106934
    6. '000' → logprob: -14.375304222106934
    7. '013' → logprob: -14.625304222106934
    8. '```' → logprob: -14.625304222106934
    9. '001' → logprob: -15.000304222106934
    10. '100' → logprob: -15.125304222106934

Token 479: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.00021676832693628967
    2. '00' → logprob: -8.500216484069824
    3. '001' → logprob: -11.625216484069824
    4. '101' → logprob: -12.750216484069824
    5. ''' → logprob: -14.750216484069824
    6. '0' → logprob: -14.875216484069824
    7. '```' → logprob: -15.000216484069824
    8. '<|end|>' → logprob: -17.06271743774414
    9. '10' → logprob: -17.18771743774414
    10. '000' → logprob: -17.50021743774414

Token 480: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.027135632932186127
    2. ':' → logprob: -3.6521356105804443
    3. ''' → logprob: -7.277135848999023
    4. '':'' → logprob: -9.652135848999023
    5. '='' → logprob: -11.027135848999023
    6. '":' → logprob: -11.402135848999023
    7. '<|end|>' → logprob: -11.527135848999023
    8. '):' → logprob: -12.152135848999023
    9. '```' → logprob: -12.152135848999023
    10. ''):' → logprob: -12.402135848999023

Token 481: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.49799999594688416
    2. ' '' → logprob: -0.9980000257492065
    3. ''N' → logprob: -3.747999906539917
    4. ''n' → logprob: -11.373000144958496
    5. ''S' → logprob: -11.498000144958496
    6. ''O' → logprob: -11.873000144958496
    7. ' N' → logprob: -12.123000144958496
    8. ''U' → logprob: -12.123000144958496
    9. '"' → logprob: -12.123000144958496
    10. ' ' → logprob: -12.248000144958496

Token 482: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0011210456723347306
    2. ''' → logprob: -7.2511210441589355
    3. ''N' → logprob: -7.8761210441589355
    4. '000' → logprob: -12.001121520996094
    5. ' N' → logprob: -12.501121520996094
    6. '
' → logprob: -12.751121520996094
    7. '011' → logprob: -13.001121520996094
    8. '```' → logprob: -13.126121520996094
    9. '0' → logprob: -13.751121520996094
    10. 'Q' → logprob: -14.126121520996094

Token 483: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5619534850120544
    2. '',' → logprob: -1.0619535446166992
    3. '',
' → logprob: -2.561953544616699
    4. '       ' → logprob: -5.561953544616699
    5. '           ' → logprob: -6.186953544616699
    6. ''}' → logprob: -8.3119535446167
    7. '}' → logprob: -8.4369535446167
    8. '   ' → logprob: -8.5619535446167
    9. '<|end|>' → logprob: -9.5619535446167
    10. '```' → logprob: -9.5619535446167

Token 484: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.14379814267158508
    2. '           ' → logprob: -2.0187981128692627
    3. '       ' → logprob: -7.268798351287842
    4. '   ' → logprob: -8.018797874450684
    5. ' '' → logprob: -10.518797874450684
    6. '          ' → logprob: -10.518797874450684
    7. '         ' → logprob: -11.393797874450684
    8. '```' → logprob: -11.768797874450684
    9. ''''' → logprob: -12.018797874450684
    10. '               ' → logprob: -12.518797874450684

Token 485: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.00012964145571459085
    2. ' '' → logprob: -9.250129699707031
    3. '           ' → logprob: -10.500129699707031
    4. '   ' → logprob: -13.000129699707031
    5. '       ' → logprob: -13.875129699707031
    6. '"' → logprob: -14.000129699707031
    7. ' ' → logprob: -14.875129699707031
    8. ''''' → logprob: -15.000129699707031
    9. '```' → logprob: -15.500129699707031
    10. '         ' → logprob: -15.750129699707031

Token 486: '011' (ID: 17342)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2014382779598236
    2. '011' → logprob: -1.701438307762146
    3. ''''' → logprob: -11.326437950134277
    4. '```' → logprob: -13.326437950134277
    5. ''S' → logprob: -13.451437950134277
    6. '"' → logprob: -13.451437950134277
    7. '013' → logprob: -13.951437950134277
    8. ' '' → logprob: -14.076437950134277
    9. '111' → logprob: -14.076437950134277
    10. '`' → logprob: -14.451437950134277

Token 487: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.7432603272027336e-06
    2. '00' → logprob: -13.750001907348633
    3. '0' → logprob: -14.875001907348633
    4. '01' → logprob: -15.375001907348633
    5. '۱۰' → logprob: -17.250001907348633
    6. '010' → logprob: -17.375001907348633
    7. ''' → logprob: -17.750001907348633
    8. '```' → logprob: -18.875001907348633
    9. '02' → logprob: -19.000001907348633
    10. '['' → logprob: -19.562501907348633

Token 488: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -7.815280696377158e-05
    2. ''' → logprob: -10.500078201293945
    3. ':' → logprob: -10.500078201293945
    4. '':'' → logprob: -11.500078201293945
    5. '<|end|>' → logprob: -12.625078201293945
    6. '":' → logprob: -13.000078201293945
    7. '```' → logprob: -13.250078201293945
    8. '='' → logprob: -14.250078201293945
    9. '']:' → logprob: -14.500078201293945
    10. '(':' → logprob: -14.500078201293945

Token 489: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.25350654125213623
    2. ''' → logprob: -1.5035065412521362
    3. ''O' → logprob: -6.503506660461426
    4. ''o' → logprob: -10.378506660461426
    5. ' ' → logprob: -11.503506660461426
    6. ' O' → logprob: -11.878506660461426
    7. ''S' → logprob: -12.003506660461426
    8. ''U' → logprob: -12.378506660461426
    9. ''D' → logprob: -12.378506660461426
    10. '```' → logprob: -13.003506660461426

Token 490: 'O' (ID: 46)
  Prédit: 'O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.004553423263132572
    2. ''O' → logprob: -5.504553318023682
    3. ''' → logprob: -7.754553318023682
    4. ' O' → logprob: -10.25455379486084
    5. '```' → logprob: -12.75455379486084
    6. ' '' → logprob: -13.12955379486084
    7. '`' → logprob: -13.25455379486084
    8. ''o' → logprob: -13.37955379486084
    9. '	O' → logprob: -14.50455379486084
    10. '"O' → logprob: -15.00455379486084

Token 491: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04227621480822563
    2. '',
' → logprob: -3.41727614402771
    3. '',' → logprob: -4.917276382446289
    4. '           ' → logprob: -7.417276382446289
    5. '       ' → logprob: -8.167276382446289
    6. ''}' → logprob: -8.542276382446289
    7. ''
' → logprob: -9.292276382446289
    8. '}' → logprob: -10.167276382446289
    9. '```' → logprob: -11.292276382446289
    10. ''''' → logprob: -11.542276382446289

Token 492: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1272265762090683
    2. ''' → logprob: -2.1272265911102295
    3. '          ' → logprob: -8.752226829528809
    4. '       ' → logprob: -9.252226829528809
    5. '   ' → logprob: -11.252226829528809
    6. '         ' → logprob: -11.627226829528809
    7. ' '' → logprob: -12.002226829528809
    8. '               ' → logprob: -12.752226829528809
    9. '```' → logprob: -13.002226829528809
    10. '        ' → logprob: -13.252226829528809

Token 493: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.0034170090220868587
    2. '           ' → logprob: -5.753417015075684
    3. ' '' → logprob: -8.503417015075684
    4. '       ' → logprob: -10.753417015075684
    5. '   ' → logprob: -12.378417015075684
    6. '         ' → logprob: -12.378417015075684
    7. '          ' → logprob: -13.253417015075684
    8. '"' → logprob: -13.503417015075684
    9. ' ' → logprob: -14.003417015075684
    10. ''''' → logprob: -14.628417015075684

Token 494: '011' (ID: 17342)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.023291366174817085
    2. '011' → logprob: -3.7732913494110107
    3. ''''' → logprob: -10.39829158782959
    4. '"' → logprob: -11.77329158782959
    5. '```' → logprob: -12.77329158782959
    6. ' '' → logprob: -13.52329158782959
    7. '`' → logprob: -14.27329158782959
    8. '013' → logprob: -14.27329158782959
    9. '111' → logprob: -15.14829158782959
    10. ''"' → logprob: -15.39829158782959

Token 495: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -6.587483221665025e-05
    2. '01' → logprob: -9.750065803527832
    3. '1' → logprob: -12.500065803527832
    4. '10' → logprob: -13.125065803527832
    5. '```' → logprob: -14.000065803527832
    6. '00' → logprob: -15.250065803527832
    7. '
' → logprob: -15.375065803527832
    8. '011' → logprob: -15.625065803527832
    9. '\
' → logprob: -17.12506675720215
    10. '0' → logprob: -17.31256675720215

Token 496: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0008245145436376333
    2. ''' → logprob: -7.125824451446533
    3. ':' → logprob: -12.375824928283691
    4. '":' → logprob: -12.625824928283691
    5. '<|end|>' → logprob: -12.625824928283691
    6. '':'' → logprob: -12.875824928283691
    7. '',' → logprob: -13.000824928283691
    8. '':
' → logprob: -14.000824928283691
    9. ''):' → logprob: -14.250824928283691
    10. '’:' → logprob: -14.500824928283691

Token 497: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6326317191123962
    2. ' '' → logprob: -0.7576317191123962
    3. '"' → logprob: -12.007631301879883
    4. ' ' → logprob: -12.257631301879883
    5. 'P' → logprob: -12.382631301879883
    6. ''S' → logprob: -12.632631301879883
    7. ' P' → logprob: -13.132631301879883
    8. ''p' → logprob: -13.132631301879883
    9. ''O' → logprob: -13.632631301879883
    10. ''T' → logprob: -13.882631301879883

Token 498: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.00012320445966906846
    2. ''' → logprob: -9.375123023986816
    3. '000' → logprob: -11.000123023986816
    4. ' '' → logprob: -11.250123023986816
    5. ' ')' → logprob: -13.000123023986816
    6. '`' → logprob: -13.750123023986816
    7. ' ' → logprob: -13.875123023986816
    8. ' P' → logprob: -14.000123023986816
    9. ' ')
' → logprob: -14.125123023986816
    10. '111' → logprob: -14.875123023986816

Token 499: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.7065591812133789
    2. '',
' → logprob: -1.331559181213379
    3. ''' → logprob: -1.956559181213379
    4. '           ' → logprob: -2.331559181213379
    5. '       ' → logprob: -5.956559181213379
    6. '}' → logprob: -7.456559181213379
    7. ',
' → logprob: -8.331559181213379
    8. ''}' → logprob: -8.581559181213379
    9. '<|end|>' → logprob: -9.206559181213379
    10. ''
' → logprob: -9.581559181213379

Token 500: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25271862745285034
    2. ''' → logprob: -1.5027186870574951
    3. '       ' → logprob: -7.752718448638916
    4. '          ' → logprob: -8.502718925476074
    5. ' '' → logprob: -9.752718925476074
    6. '```' → logprob: -10.627718925476074
    7. '   ' → logprob: -10.877718925476074
    8. '         ' → logprob: -11.377718925476074
    9. '`' → logprob: -11.877718925476074
    10. '"' → logprob: -12.127718925476074

Token 501: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.1135047897696495
    2. '           ' → logprob: -2.2385048866271973
    3. '       ' → logprob: -7.738504886627197
    4. '          ' → logprob: -8.988504409790039
    5. ' '' → logprob: -9.863504409790039
    6. '   ' → logprob: -10.613504409790039
    7. '         ' → logprob: -11.613504409790039
    8. '            ' → logprob: -11.863504409790039
    9. '"' → logprob: -12.113504409790039
    10. '               ' → logprob: -12.363504409790039

Token 502: '100' (ID: 1353)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005282257683575153
    2. '100' → logprob: -5.255282402038574
    3. '000' → logprob: -10.630282402038574
    4. ' '' → logprob: -11.630282402038574
    5. '```' → logprob: -11.755282402038574
    6. '`' → logprob: -13.380282402038574
    7. ''T' → logprob: -13.505282402038574
    8. '110' → logprob: -14.380282402038574
    9. ''S' → logprob: -14.755282402038574
    10. '010' → logprob: -14.755282402038574

Token 503: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -6.988221684878226e-06
    2. '01' → logprob: -13.000006675720215
    3. '000' → logprob: -13.750006675720215
    4. '```' → logprob: -13.875006675720215
    5. ' ' → logprob: -14.250006675720215
    6. '10' → logprob: -14.750006675720215
    7. '0' → logprob: -14.750006675720215
    8. '11' → logprob: -14.750006675720215
    9. '  ' → logprob: -15.562506675720215
    10. ''' → logprob: -15.687506675720215

Token 504: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.015709491446614265
    2. ''' → logprob: -4.265709400177002
    3. ':' → logprob: -6.640709400177002
    4. '<|end|>' → logprob: -8.76570987701416
    5. '':'' → logprob: -10.89070987701416
    6. '":' → logprob: -11.26570987701416
    7. ' ':' → logprob: -11.64070987701416
    8. ' :' → logprob: -12.26570987701416
    9. '```' → logprob: -12.39070987701416
    10. '',' → logprob: -12.39070987701416

Token 505: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.18019181489944458
    2. ''' → logprob: -1.8051917552947998
    3. ' Q' → logprob: -8.430191993713379
    4. ''q' → logprob: -9.305191993713379
    5. 'Q' → logprob: -10.305191993713379
    6. ''A' → logprob: -10.805191993713379
    7. '<Q' → logprob: -10.930191993713379
    8. '"' → logprob: -10.930191993713379
    9. ' ' → logprob: -11.055191993713379
    10. '```' → logprob: -11.305191993713379

Token 506: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -9.889424836728722e-05
    2. ''' → logprob: -9.375099182128906
    3. 'A' → logprob: -11.625099182128906
    4. ' Q' → logprob: -13.375099182128906
    5. 'E' → logprob: -14.000099182128906
    6. 'a' → logprob: -15.250099182128906
    7. '')' → logprob: -15.250099182128906
    8. ' '' → logprob: -15.750099182128906
    9. 'I' → logprob: -16.000099182128906
    10. ' ')' → logprob: -16.000099182128906

Token 507: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.3436509668827057
    2. '',
' → logprob: -1.4686509370803833
    3. ''' → logprob: -2.843651056289673
    4. '       ' → logprob: -6.468650817871094
    5. '           ' → logprob: -8.093650817871094
    6. ''}' → logprob: -8.843650817871094
    7. '':' → logprob: -9.218650817871094
    8. '<|end|>' → logprob: -9.843650817871094
    9. '}' → logprob: -10.093650817871094
    10. '',

' → logprob: -10.343650817871094

Token 508: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11372281610965729
    2. ''' → logprob: -2.238722801208496
    3. ' '' → logprob: -7.613722801208496
    4. '          ' → logprob: -8.488722801208496
    5. '       ' → logprob: -9.238722801208496
    6. '   ' → logprob: -10.113722801208496
    7. '         ' → logprob: -11.113722801208496
    8. '```' → logprob: -11.363722801208496
    9. ' ' → logprob: -11.488722801208496
    10. '		' → logprob: -12.613722801208496

Token 509: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.010111022740602493
    2. '           ' → logprob: -4.885110855102539
    3. ' '' → logprob: -6.010110855102539
    4. '       ' → logprob: -10.635110855102539
    5. '          ' → logprob: -11.635110855102539
    6. '   ' → logprob: -12.510110855102539
    7. '```' → logprob: -12.760110855102539
    8. '         ' → logprob: -12.885110855102539
    9. ' ' → logprob: -13.885110855102539
    10. '        ' → logprob: -13.885110855102539

Token 510: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0031777136027812958
    2. ''' → logprob: -5.753177642822266
    3. ''A' → logprob: -18.628177642822266
    4. '`' → logprob: -18.753177642822266
    5. '"' → logprob: -18.878177642822266
    6. '1' → logprob: -18.878177642822266
    7. '10' → logprob: -18.878177642822266
    8. ''''' → logprob: -19.003177642822266
    9. '110' → logprob: -19.503177642822266
    10. '```' → logprob: -19.503177642822266

Token 511: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.0011740362970158458
    2. '00' → logprob: -6.751173973083496
    3. '10' → logprob: -12.501173973083496
    4. '```' → logprob: -17.251174926757812
    5. '11' → logprob: -17.376174926757812
    6. '1' → logprob: -17.376174926757812
    7. '001' → logprob: -18.126174926757812
    8. '000' → logprob: -18.626174926757812
    9. '101' → logprob: -18.751174926757812
    10. ' ' → logprob: -19.751174926757812

Token 512: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0007222028798423707
    2. ''' → logprob: -7.500722408294678
    3. ':' → logprob: -8.87572193145752
    4. '':'' → logprob: -11.37572193145752
    5. '":' → logprob: -11.87572193145752
    6. '<|end|>' → logprob: -12.12572193145752
    7. ''>' → logprob: -13.75072193145752
    8. ' ':' → logprob: -14.00072193145752
    9. '’:' → logprob: -14.50072193145752
    10. '```' → logprob: -15.12572193145752

Token 513: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.12747888267040253
    2. ''' → logprob: -2.127478837966919
    3. ' ' → logprob: -8.25247859954834
    4. ' R' → logprob: -9.00247859954834
    5. ''r' → logprob: -10.00247859954834
    6. 'R' → logprob: -10.25247859954834
    7. ''A' → logprob: -10.62747859954834
    8. ''q' → logprob: -10.87747859954834
    9. ''T' → logprob: -11.62747859954834
    10. ''S' → logprob: -12.00247859954834

Token 514: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.10089359432458878
    2. ''' → logprob: -2.350893497467041
    3. ' R' → logprob: -8.4758939743042
    4. 'A' → logprob: -8.9758939743042
    5. ''A' → logprob: -9.1008939743042
    6. ' '' → logprob: -9.3508939743042
    7. 'Q' → logprob: -10.6008939743042
    8. ''r' → logprob: -11.1008939743042
    9. '```' → logprob: -11.4758939743042
    10. '`' → logprob: -11.8508939743042

Token 515: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7379744052886963
    2. '',
' → logprob: -0.9879744052886963
    3. '',' → logprob: -1.9879744052886963
    4. '       ' → logprob: -4.487974166870117
    5. '           ' → logprob: -7.362974166870117
    6. '}' → logprob: -8.237974166870117
    7. ''
' → logprob: -8.612974166870117
    8. ''}' → logprob: -9.237974166870117
    9. '',
' → logprob: -9.862974166870117
    10. ',
' → logprob: -10.112974166870117

Token 516: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10309228301048279
    2. '           ' → logprob: -2.3530921936035156
    3. ' '' → logprob: -6.728092193603516
    4. '       ' → logprob: -6.853092193603516
    5. '```' → logprob: -8.228092193603516
    6. '         ' → logprob: -8.853092193603516
    7. ' ' → logprob: -9.728092193603516
    8. '   ' → logprob: -9.853092193603516
    9. '          ' → logprob: -10.353092193603516
    10. '`' → logprob: -10.728092193603516

Token 517: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.010974247008562088
    2. '           ' → logprob: -4.885974407196045
    3. ' '' → logprob: -5.760974407196045
    4. '       ' → logprob: -8.885973930358887
    5. '         ' → logprob: -10.510973930358887
    6. '```' → logprob: -11.010973930358887
    7. '          ' → logprob: -11.260973930358887
    8. ' ' → logprob: -12.510973930358887
    9. '   ' → logprob: -12.635973930358887
    10. '100' → logprob: -12.885973930358887

Token 518: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0004307884373702109
    2. ''' → logprob: -7.750430583953857
    3. ''''' → logprob: -17.875431060791016
    4. '`' → logprob: -18.000431060791016
    5. '```' → logprob: -18.125431060791016
    6. '1' → logprob: -18.125431060791016
    7. '10' → logprob: -18.250431060791016
    8. ' ' → logprob: -18.875431060791016
    9. '''' → logprob: -18.875431060791016
    10. '101' → logprob: -19.000431060791016

Token 519: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: 0.0
    2. '۱۰' → logprob: -17.5
    3. '010' → logprob: -17.625
    4. '01' → logprob: -17.875
    5. '11' → logprob: -18.375
    6. '１０' → logprob: -18.875
    7. '```' → logprob: -19.125
    8. '1' → logprob: -19.25
    9. '00' → logprob: -20.125
    10. '१०' → logprob: -20.25

Token 520: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.14319366216659546
    2. ''' → logprob: -2.0181937217712402
    3. '<|end|>' → logprob: -8.393193244934082
    4. ''}' → logprob: -8.518193244934082
    5. '}' → logprob: -10.643193244934082
    6. ''>' → logprob: -11.518193244934082
    7. '":' → logprob: -11.518193244934082
    8. ' ':' → logprob: -11.893193244934082
    9. '}:' → logprob: -12.143193244934082
    10. ':' → logprob: -12.143193244934082

Token 521: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.24243862926959991
    2. ''S' → logprob: -2.117438554763794
    3. ''' → logprob: -2.367438554763794
    4. ' S' → logprob: -7.617438793182373
    5. ''s' → logprob: -8.242438316345215
    6. ' ' → logprob: -8.867438316345215
    7. ''U' → logprob: -8.992438316345215
    8. 'S' → logprob: -9.492438316345215
    9. ''T' → logprob: -9.492438316345215
    10. ''A' → logprob: -10.992438316345215

Token 522: 'S' (ID: 50)
  Prédit: ''S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''S' → logprob: -0.08115687966346741
    2. 'S' → logprob: -2.7061569690704346
    3. ''' → logprob: -4.9561567306518555
    4. ' '' → logprob: -5.8311567306518555
    5. ' S' → logprob: -7.2061567306518555
    6. ''s' → logprob: -7.9561567306518555
    7. ' ' → logprob: -9.706156730651855
    8. '"S' → logprob: -11.706156730651855
    9. '`' → logprob: -12.956156730651855
    10. '       ' → logprob: -13.206156730651855

Token 523: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.5845068693161011
    2. ''' → logprob: -0.9595068693161011
    3. '',
' → logprob: -2.8345069885253906
    4. ''}' → logprob: -7.834506988525391
    5. '}' → logprob: -8.95950698852539
    6. '       ' → logprob: -9.33450698852539
    7. '',
' → logprob: -10.08450698852539
    8. '','' → logprob: -10.70950698852539
    9. ''
' → logprob: -10.95950698852539
    10. '```' → logprob: -11.45950698852539

Token 524: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03383311256766319
    2. '           ' → logprob: -3.4088330268859863
    3. ' '' → logprob: -9.533833503723145
    4. '       ' → logprob: -10.158833503723145
    5. '```' → logprob: -10.158833503723145
    6. ''A' → logprob: -12.033833503723145
    7. '          ' → logprob: -12.158833503723145
    8. '         ' → logprob: -12.283833503723145
    9. ' ' → logprob: -13.033833503723145
    10. '`' → logprob: -13.283833503723145

Token 525: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.00026503115077503026
    2. '       ' → logprob: -8.750265121459961
    3. ' '' → logprob: -9.750265121459961
    4. '           ' → logprob: -10.500265121459961
    5. '```' → logprob: -11.375265121459961
    6. '         ' → logprob: -12.750265121459961
    7. ''
' → logprob: -14.000265121459961
    8. ' ' → logprob: -14.250265121459961
    9. '100' → logprob: -14.375265121459961
    10. '   ' → logprob: -14.375265121459961

Token 526: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.07889199256896973
    2. ''' → logprob: -2.5788919925689697
    3. '```' → logprob: -14.20389175415039
    4. '101' → logprob: -14.57889175415039
    5. ''''' → logprob: -15.32889175415039
    6. '"' → logprob: -15.32889175415039
    7. ' ' → logprob: -15.57889175415039
    8. '`' → logprob: -15.95389175415039
    9. ''T' → logprob: -16.32889175415039
    10. '10' → logprob: -16.70389175415039

Token 527: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -2.935296834039036e-06
    2. '00' → logprob: -13.87500286102295
    3. '01' → logprob: -14.00000286102295
    4. '10' → logprob: -14.50000286102295
    5. '011' → logprob: -15.25000286102295
    6. '110' → logprob: -16.250003814697266
    7. '101' → logprob: -16.375003814697266
    8. ''' → logprob: -16.875003814697266
    9. '1' → logprob: -16.875003814697266
    10. '<|end|>' → logprob: -17.375003814697266

Token 528: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.01255286019295454
    2. ''' → logprob: -4.387552738189697
    3. ':' → logprob: -10.512553215026855
    4. '':'' → logprob: -12.762553215026855
    5. ''}' → logprob: -12.887553215026855
    6. '":' → logprob: -12.887553215026855
    7. ' ':' → logprob: -13.012553215026855
    8. '',' → logprob: -13.512553215026855
    9. '':
' → logprob: -14.387553215026855
    10. '<|end|>' → logprob: -14.762553215026855

Token 529: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.59919273853302
    2. ''' → logprob: -0.84919273853302
    3. ''T' → logprob: -3.8491926193237305
    4. ''U' → logprob: -6.8491926193237305
    5. ' T' → logprob: -8.09919261932373
    6. ' ' → logprob: -8.97419261932373
    7. ''S' → logprob: -9.72419261932373
    8. ''A' → logprob: -10.22419261932373
    9. ''t' → logprob: -10.34919261932373
    10. 'T' → logprob: -10.84919261932373

Token 530: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.10130776464939117
    2. ''T' → logprob: -2.3513078689575195
    3. ''' → logprob: -7.2263078689575195
    4. ' T' → logprob: -8.10130786895752
    5. ' '' → logprob: -9.85130786895752
    6. ''t' → logprob: -12.60130786895752
    7. ' ' → logprob: -12.85130786895752
    8. '	T' → logprob: -12.85130786895752
    9. ''S' → logprob: -13.72630786895752
    10. '"T' → logprob: -13.72630786895752

Token 531: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.1584431380033493
    2. ''' → logprob: -2.1584432125091553
    3. '',
' → logprob: -3.5334432125091553
    4. ''}' → logprob: -6.408442974090576
    5. '}' → logprob: -9.158443450927734
    6. '',
' → logprob: -10.408443450927734
    7. '       ' → logprob: -11.158443450927734
    8. '','' → logprob: -11.783443450927734
    9. '',

' → logprob: -12.658443450927734
    10. ''
' → logprob: -13.533443450927734

Token 532: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09794449061155319
    2. ''' → logprob: -2.972944498062134
    3. '       ' → logprob: -3.222944498062134
    4. '   ' → logprob: -6.347944259643555
    5. '```' → logprob: -8.472944259643555
    6. '          ' → logprob: -8.847944259643555
    7. '}' → logprob: -9.472944259643555
    8. '         ' → logprob: -10.097944259643555
    9. ' '' → logprob: -10.472944259643555
    10. ' ' → logprob: -10.722944259643555

Token 533: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.08726561814546585
    2. '           ' → logprob: -2.712265729904175
    3. '       ' → logprob: -4.087265491485596
    4. '}' → logprob: -8.587265968322754
    5. '   ' → logprob: -9.587265968322754
    6. '         ' → logprob: -9.712265968322754
    7. ' '' → logprob: -10.837265968322754
    8. '}
' → logprob: -10.962265968322754
    9. '```' → logprob: -11.087265968322754
    10. '          ' → logprob: -11.962265968322754

Token 534: '101' (ID: 7959)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3868807554244995
    2. '101' → logprob: -1.1368807554244995
    3. '```' → logprob: -12.636880874633789
    4. ''''' → logprob: -12.886880874633789
    5. ' ' → logprob: -13.511880874633789
    6. '100' → logprob: -14.761880874633789
    7. ''s' → logprob: -15.261880874633789
    8. '`' → logprob: -15.261880874633789
    9. ''''
' → logprob: -15.386880874633789
    10. '"' → logprob: -15.386880874633789

Token 535: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -2.8921695047756657e-05
    2. '01' → logprob: -10.750028610229492
    3. '0' → logprob: -12.375028610229492
    4. '11' → logprob: -13.750028610229492
    5. '000' → logprob: -14.375028610229492
    6. '10' → logprob: -14.625028610229492
    7. '```' → logprob: -14.625028610229492
    8. ''' → logprob: -14.875028610229492
    9. '1' → logprob: -16.500028610229492
    10. ' ' → logprob: -17.062528610229492

Token 536: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0076703946106135845
    2. ':' → logprob: -5.0076704025268555
    3. ''' → logprob: -7.0076704025268555
    4. '":' → logprob: -11.257670402526855
    5. ' ':' → logprob: -12.132670402526855
    6. '':'' → logprob: -12.382670402526855
    7. ''):' → logprob: -12.382670402526855
    8. '<|end|>' → logprob: -12.757670402526855
    9. '):' → logprob: -13.132670402526855
    10. '',' → logprob: -13.257670402526855

Token 537: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.6811555624008179
    2. ''' → logprob: -0.9311555624008179
    3. ''U' → logprob: -2.3061556816101074
    4. ' U' → logprob: -8.93115520477295
    5. 'U' → logprob: -10.18115520477295
    6. ''u' → logprob: -11.05615520477295
    7. ' ' → logprob: -11.18115520477295
    8. ''S' → logprob: -12.55615520477295
    9. '"' → logprob: -12.80615520477295
    10. ''Union' → logprob: -12.80615520477295

Token 538: 'U' (ID: 52)
  Prédit: ''U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''U' → logprob: -0.07243000715970993
    2. ''' → logprob: -2.947429895401001
    3. 'U' → logprob: -4.32243013381958
    4. ' '' → logprob: -5.57243013381958
    5. ' U' → logprob: -8.072429656982422
    6. ''u' → logprob: -11.822429656982422
    7. '’U' → logprob: -12.697429656982422
    8. ' ' → logprob: -13.697429656982422
    9. '<U' → logprob: -14.697429656982422
    10. 'u' → logprob: -14.947429656982422

Token 539: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.21043218672275543
    2. '',' → logprob: -2.210432291030884
    3. '',
' → logprob: -2.710432291030884
    4. '       ' → logprob: -4.835432052612305
    5. ',' → logprob: -6.460432052612305
    6. ',
' → logprob: -6.710432052612305
    7. '}' → logprob: -6.835432052612305
    8. '   ' → logprob: -7.585432052612305
    9. ''
' → logprob: -7.960432052612305
    10. ' '' → logprob: -8.085432052612305

Token 540: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2816520929336548
    2. ''' → logprob: -1.4066520929336548
    3. '          ' → logprob: -8.281652450561523
    4. '       ' → logprob: -8.781652450561523
    5. ' '' → logprob: -10.281652450561523
    6. '```' → logprob: -10.656652450561523
    7. '         ' → logprob: -11.156652450561523
    8. '   ' → logprob: -12.156652450561523
    9. '            ' → logprob: -12.531652450561523
    10. '        ' → logprob: -12.781652450561523

Token 541: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.005442212801426649
    2. '           ' → logprob: -5.255442142486572
    3. '       ' → logprob: -9.00544261932373
    4. ' '' → logprob: -9.63044261932373
    5. '         ' → logprob: -11.50544261932373
    6. '```' → logprob: -13.13044261932373
    7. '          ' → logprob: -13.25544261932373
    8. '   ' → logprob: -13.75544261932373
    9. ' ' → logprob: -14.25544261932373
    10. '        ' → logprob: -14.25544261932373

Token 542: '101' (ID: 7959)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.003612424246966839
    2. '101' → logprob: -5.628612518310547
    3. ' '' → logprob: -11.628612518310547
    4. ' ' → logprob: -13.378612518310547
    5. '`' → logprob: -14.128612518310547
    6. '```' → logprob: -14.503612518310547
    7. ''''' → logprob: -15.253612518310547
    8. '"' → logprob: -16.128612518310547
    9. '001' → logprob: -17.253612518310547
    10. ''''
' → logprob: -17.253612518310547

Token 543: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.0033684198278933764
    2. '00' → logprob: -5.753368377685547
    3. ''' → logprob: -8.628368377685547
    4. '05' → logprob: -12.253368377685547
    5. '<|end|>' → logprob: -13.128368377685547
    6. '0' → logprob: -13.378368377685547
    7. ' ' → logprob: -14.128368377685547
    8. '101' → logprob: -14.253368377685547
    9. '10' → logprob: -14.503368377685547
    10. '```' → logprob: -15.128368377685547

Token 544: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.424439013004303
    2. ':' → logprob: -1.1744389533996582
    3. ''' → logprob: -3.549438953399658
    4. '<|end|>' → logprob: -4.924438953399658
    5. '':'' → logprob: -8.424439430236816
    6. ' :' → logprob: -8.799439430236816
    7. ' '' → logprob: -9.174439430236816
    8. '       ' → logprob: -10.049439430236816
    9. ''>' → logprob: -10.174439430236816
    10. '":' → logprob: -10.299439430236816

Token 545: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.5763505697250366
    2. ''' → logprob: -0.8263505697250366
    3. ' V' → logprob: -8.076350212097168
    4. 'V' → logprob: -9.576350212097168
    5. ' ' → logprob: -10.701350212097168
    6. ''S' → logprob: -12.826350212097168
    7. ' ' → logprob: -13.451350212097168
    8. ''s' → logprob: -13.826350212097168
    9. '"' → logprob: -14.326350212097168
    10. ''A' → logprob: -14.701350212097168

Token 546: 'V' (ID: 53)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6326619386672974
    2. 'V' → logprob: -0.7576619386672974
    3. ' '' → logprob: -10.757661819458008
    4. ''A' → logprob: -11.007661819458008
    5. ' V' → logprob: -12.132661819458008
    6. '
' → logprob: -12.632661819458008
    7. ''E' → logprob: -12.882661819458008
    8. ''U' → logprob: -13.132661819458008
    9. '`' → logprob: -13.882661819458008
    10. ''S' → logprob: -14.007661819458008

Token 547: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18663746118545532
    2. '',
' → logprob: -1.9366374015808105
    3. '',' → logprob: -3.6866374015808105
    4. '       ' → logprob: -7.1866374015808105
    5. ''
' → logprob: -9.436637878417969
    6. ''}' → logprob: -9.811637878417969
    7. '}' → logprob: -10.061637878417969
    8. ',
' → logprob: -10.436637878417969
    9. '',
' → logprob: -11.436637878417969
    10. '           ' → logprob: -11.686637878417969

Token 548: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.38781261444091797
    2. '           ' → logprob: -1.137812614440918
    3. '       ' → logprob: -7.262812614440918
    4. '          ' → logprob: -9.012812614440918
    5. ' '' → logprob: -9.762812614440918
    6. '         ' → logprob: -11.012812614440918
    7. '   ' → logprob: -11.887812614440918
    8. '```' → logprob: -12.137812614440918
    9. '        ' → logprob: -12.262812614440918
    10. '"' → logprob: -12.387812614440918

Token 549: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.23350973427295685
    2. '           ' → logprob: -1.9835097789764404
    3. '       ' → logprob: -2.7335097789764404
    4. ' '' → logprob: -5.483509540557861
    5. '}' → logprob: -6.733509540557861
    6. '```' → logprob: -9.35851001739502
    7. '   ' → logprob: -10.23351001739502
    8. '}
' → logprob: -10.48351001739502
    9. ''}' → logprob: -10.60851001739502
    10. ' }' → logprob: -10.60851001739502

Token 550: '101' (ID: 7959)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4740884304046631
    2. '101' → logprob: -0.9740884304046631
    3. ' ' → logprob: -12.224088668823242
    4. ' '' → logprob: -12.349088668823242
    5. '"' → logprob: -13.974088668823242
    6. '```' → logprob: -14.724088668823242
    7. '100' → logprob: -15.849088668823242
    8. ''''' → logprob: -16.349088668823242
    9. '`' → logprob: -16.474088668823242
    10. '105' → logprob: -16.599088668823242

Token 551: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.127333340875339e-06
    2. '01' → logprob: -13.250003814697266
    3. '0' → logprob: -13.875003814697266
    4. ''' → logprob: -14.625003814697266
    5. '۱۰' → logprob: -15.000003814697266
    6. '00' → logprob: -15.625003814697266
    7. '1' → logprob: -15.750003814697266
    8. '１０' → logprob: -15.875003814697266
    9. '06' → logprob: -17.500003814697266
    10. '010' → logprob: -17.625003814697266

Token 552: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0072863162495195866
    2. ''' → logprob: -5.007286548614502
    3. ':' → logprob: -7.632286548614502
    4. '<|end|>' → logprob: -10.507286071777344
    5. '']' → logprob: -11.757286071777344
    6. '':'' → logprob: -11.882286071777344
    7. '":' → logprob: -12.007286071777344
    8. '',' → logprob: -12.507286071777344
    9. '')' → logprob: -12.632286071777344
    10. ' ':' → logprob: -12.757286071777344

Token 553: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.07006470113992691
    2. ''' → logprob: -2.6950647830963135
    3. ''w' → logprob: -10.570064544677734
    4. ''S' → logprob: -10.820064544677734
    5. ''U' → logprob: -10.820064544677734
    6. ' W' → logprob: -11.195064544677734
    7. ' ' → logprob: -11.445064544677734
    8. ''T' → logprob: -12.070064544677734
    9. ''D' → logprob: -12.195064544677734
    10. '['' → logprob: -12.570064544677734

Token 554: 'W' (ID: 54)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7296627759933472
    2. 'W' → logprob: -0.7296627759933472
    3. ' '' → logprob: -3.3546628952026367
    4. ' W' → logprob: -7.229662895202637
    5. '"W' → logprob: -9.229662895202637
    6. '```' → logprob: -9.854662895202637
    7. '<W' → logprob: -11.229662895202637
    8. '['' → logprob: -11.479662895202637
    9. ''w' → logprob: -12.104662895202637
    10. '_W' → logprob: -12.479662895202637

Token 555: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.35502853989601135
    2. ''' → logprob: -1.230028510093689
    3. '',
' → logprob: -5.1050286293029785
    4. ''}' → logprob: -9.23002815246582
    5. '}' → logprob: -9.35502815246582
    6. '       ' → logprob: -9.48002815246582
    7. '','' → logprob: -9.85502815246582
    8. '<|end|>' → logprob: -9.85502815246582
    9. ',' → logprob: -10.10502815246582
    10. '',
' → logprob: -11.60502815246582

Token 556: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2288021594285965
    2. '           ' → logprob: -1.60380220413208
    3. '       ' → logprob: -5.85380220413208
    4. ' '' → logprob: -8.353801727294922
    5. '```' → logprob: -9.103801727294922
    6. '          ' → logprob: -9.728801727294922
    7. '   ' → logprob: -10.978801727294922
    8. '         ' → logprob: -10.978801727294922
    9. '}' → logprob: -11.103801727294922
    10. ' ' → logprob: -11.478801727294922

Token 557: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.07925679534673691
    2. '           ' → logprob: -2.579256772994995
    3. ' '' → logprob: -8.704257011413574
    4. '       ' → logprob: -8.954257011413574
    5. '          ' → logprob: -10.579257011413574
    6. ' ' → logprob: -11.204257011413574
    7. '   ' → logprob: -11.454257011413574
    8. '         ' → logprob: -11.704257011413574
    9. '```' → logprob: -13.079257011413574
    10. '            ' → logprob: -13.454257011413574

Token 558: '101' (ID: 7959)
  Prédit: '101'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -0.3133033514022827
    2. ''' → logprob: -1.3133033514022827
    3. ' '' → logprob: -10.688302993774414
    4. ' ' → logprob: -11.063302993774414
    5. '```' → logprob: -13.688302993774414
    6. '"' → logprob: -14.313302993774414
    7. ''''' → logprob: -15.313302993774414
    8. '001' → logprob: -15.563302993774414
    9. '`' → logprob: -15.688302993774414
    10. '100' → logprob: -15.813302993774414

Token 559: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -2.816093228830141e-06
    2. '111' → logprob: -14.37500286102295
    3. '১১' → logprob: -14.75000286102295
    4. '1' → logprob: -14.75000286102295
    5. '```' → logprob: -15.00000286102295
    6. '{'' → logprob: -15.25000286102295
    7. ''' → logprob: -15.62500286102295
    8. '011' → logprob: -15.62500286102295
    9. '01' → logprob: -16.000001907348633
    10. '{"' → logprob: -16.125001907348633

Token 560: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.6960821747779846
    2. ''' → logprob: -0.8210821747779846
    3. '<|end|>' → logprob: -3.19608211517334
    4. ':' → logprob: -3.94608211517334
    5. ''>' → logprob: -7.94608211517334
    6. '':'' → logprob: -8.19608211517334
    7. '',' → logprob: -9.19608211517334
    8. '<|end|>' → logprob: -9.57108211517334
    9. '='' → logprob: -10.07108211517334
    10. '']:' → logprob: -10.07108211517334

Token 561: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.061993010342121124
    2. ''' → logprob: -2.81199312210083
    3. ' X' → logprob: -11.061992645263672
    4. ' ' → logprob: -12.061992645263672
    5. '<|end|>' → logprob: -13.811992645263672
    6. '"' → logprob: -14.811992645263672
    7. ' {'' → logprob: -14.936992645263672
    8. '('' → logprob: -15.061992645263672
    9. ''U' → logprob: -15.561992645263672
    10. 'X' → logprob: -15.561992645263672

Token 562: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.00402639526873827
    2. ''' → logprob: -5.754026412963867
    3. ' X' → logprob: -7.129026412963867
    4. ' '' → logprob: -10.004026412963867
    5. '`' → logprob: -14.379026412963867
    6. ' ' → logprob: -14.879026412963867
    7. '```' → logprob: -15.879026412963867
    8. 'XYZ' → logprob: -16.129026412963867
    9. '')' → logprob: -16.629026412963867
    10. '	X' → logprob: -16.879026412963867

Token 563: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.048263560980558395
    2. '',' → logprob: -3.1732635498046875
    3. '',
' → logprob: -5.4232635498046875
    4. '       ' → logprob: -7.6732635498046875
    5. '}' → logprob: -9.048263549804688
    6. '<|end|>' → logprob: -9.923263549804688
    7. ''}' → logprob: -10.048263549804688
    8. '','' → logprob: -10.798263549804688
    9. ',' → logprob: -10.923263549804688
    10. '   ' → logprob: -11.048263549804688

Token 564: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2283054143190384
    2. '           ' → logprob: -1.603305459022522
    3. ' '' → logprob: -6.228305339813232
    4. '       ' → logprob: -7.978305339813232
    5. '          ' → logprob: -8.10330581665039
    6. '```' → logprob: -9.47830581665039
    7. '   ' → logprob: -9.60330581665039
    8. ' ' → logprob: -10.10330581665039
    9. '         ' → logprob: -10.72830581665039
    10. '"' → logprob: -10.85330581665039

Token 565: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.001345946453511715
    2. ' '' → logprob: -6.751346111297607
    3. '       ' → logprob: -9.25134563446045
    4. '```' → logprob: -9.75134563446045
    5. '           ' → logprob: -11.75134563446045
    6. '   ' → logprob: -12.25134563446045
    7. '``' → logprob: -12.75134563446045
    8. ' ' → logprob: -13.50134563446045
    9. '`' → logprob: -13.75134563446045
    10. '{'' → logprob: -14.75134563446045

Token 566: '110' (ID: 7920)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.043057769536972046
    2. '110' → logprob: -3.168057680130005
    3. '```' → logprob: -10.668057441711426
    4. '106' → logprob: -11.293057441711426
    5. ' '' → logprob: -12.043057441711426
    6. ' ' → logprob: -12.668057441711426
    7. '`' → logprob: -13.418057441711426
    8. '['' → logprob: -13.418057441711426
    9. '102' → logprob: -13.543057441711426
    10. '     ' → logprob: -13.793057441711426

Token 567: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.0002146226615877822
    2. '000' → logprob: -8.625214576721191
    3. ''' → logprob: -10.375214576721191
    4. '```' → logprob: -13.375214576721191
    5. '0' → logprob: -14.000214576721191
    6. ' ' → logprob: -14.750214576721191
    7. ''''' → logprob: -15.375214576721191
    8. '<|end|>' → logprob: -15.500214576721191
    9. '01' → logprob: -15.875214576721191
    10. '')' → logprob: -16.250215530395508

Token 568: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0013505916576832533
    2. ':' → logprob: -7.001350402832031
    3. ''' → logprob: -7.876350402832031
    4. '':'' → logprob: -10.376350402832031
    5. '<|end|>' → logprob: -11.501350402832031
    6. '":' → logprob: -12.251350402832031
    7. ''):' → logprob: -13.126350402832031
    8. '```' → logprob: -13.376350402832031
    9. '}:' → logprob: -13.501350402832031
    10. '):' → logprob: -13.751350402832031

Token 569: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.2256188839673996
    2. ''' → logprob: -1.600618839263916
    3. ' Y' → logprob: -8.850619316101074
    4. ' ' → logprob: -10.600619316101074
    5. ''y' → logprob: -11.225619316101074
    6. ' ' → logprob: -12.100619316101074
    7. ''A' → logprob: -12.100619316101074
    8. 'Y' → logprob: -12.475619316101074
    9. '```' → logprob: -13.725619316101074
    10. ''U' → logprob: -13.975619316101074

Token 570: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.12694533169269562
    2. ''' → logprob: -2.1269452571868896
    3. ' Y' → logprob: -11.251945495605469
    4. '`' → logprob: -13.626945495605469
    5. ' '' → logprob: -13.876945495605469
    6. ''y' → logprob: -14.126945495605469
    7. '	Y' → logprob: -14.626945495605469
    8. '['' → logprob: -15.251945495605469
    9. ''S' → logprob: -15.376945495605469
    10. ''A' → logprob: -16.00194549560547

Token 571: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.16990604996681213
    2. '',
' → logprob: -2.1699061393737793
    3. ''' → logprob: -3.1699061393737793
    4. '',
' → logprob: -10.669905662536621
    5. '':' → logprob: -11.794905662536621
    6. '           ' → logprob: -11.794905662536621
    7. ''}' → logprob: -11.794905662536621
    8. '       ' → logprob: -12.919905662536621
    9. '','' → logprob: -12.919905662536621
    10. '',

' → logprob: -13.169905662536621

Token 572: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.28842079639434814
    2. '           ' → logprob: -1.5384207963943481
    3. '```' → logprob: -4.038420677185059
    4. ' '' → logprob: -4.163420677185059
    5. '   ' → logprob: -7.163420677185059
    6. '       ' → logprob: -7.163420677185059
    7. '          ' → logprob: -7.913420677185059
    8. '`' → logprob: -8.413420677185059
    9. '<|end|>' → logprob: -9.163420677185059
    10. ' ' → logprob: -9.163420677185059

Token 573: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.03209732100367546
    2. '           ' → logprob: -3.532097339630127
    3. ' '' → logprob: -6.282097339630127
    4. '          ' → logprob: -8.032096862792969
    5. '```' → logprob: -9.407096862792969
    6. '       ' → logprob: -10.407096862792969
    7. '   ' → logprob: -11.032096862792969
    8. '         ' → logprob: -12.282096862792969
    9. '`' → logprob: -12.782096862792969
    10. ''class' → logprob: -12.782096862792969

Token 574: '110' (ID: 7920)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.008040240965783596
    2. '110' → logprob: -5.008040428161621
    3. ' '' → logprob: -6.633040428161621
    4. ' ' → logprob: -12.758040428161621
    5. '111' → logprob: -12.758040428161621
    6. '"' → logprob: -13.633040428161621
    7. '```' → logprob: -15.258040428161621
    8. ''H' → logprob: -16.008039474487305
    9. '`' → logprob: -16.258039474487305
    10. ''''' → logprob: -16.883039474487305

Token 575: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.14271411299705505
    2. '00' → logprob: -2.017714023590088
    3. '0' → logprob: -10.892714500427246
    4. ''' → logprob: -11.392714500427246
    5. '11' → logprob: -12.267714500427246
    6. ' ' → logprob: -13.517714500427246
    7. '10' → logprob: -14.017714500427246
    8. '1' → logprob: -14.642714500427246
    9. '```' → logprob: -14.767714500427246
    10. '001' → logprob: -15.517714500427246

Token 576: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.006171471439301968
    2. ''' → logprob: -5.256171703338623
    3. ':' → logprob: -7.756171703338623
    4. '<|end|>' → logprob: -8.631171226501465
    5. '```' → logprob: -8.881171226501465
    6. '':'' → logprob: -9.381171226501465
    7. '":' → logprob: -10.881171226501465
    8. '':
' → logprob: -11.756171226501465
    9. '':[' → logprob: -11.756171226501465
    10. '='' → logprob: -11.881171226501465

Token 577: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.2812095582485199
    2. ''' → logprob: -1.4062095880508423
    3. ''z' → logprob: -10.531209945678711
    4. '"' → logprob: -11.281209945678711
    5. ' ' → logprob: -11.656209945678711
    6. ' Z' → logprob: -12.906209945678711
    7. ' ' → logprob: -13.281209945678711
    8. '['' → logprob: -13.531209945678711
    9. 'Z' → logprob: -14.031209945678711
    10. ''S' → logprob: -14.156209945678711

Token 578: 'Z' (ID: 57)
  Prédit: 'Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.10038705915212631
    2. ''' → logprob: -2.3503870964050293
    3. ' Z' → logprob: -8.850386619567871
    4. ' '' → logprob: -10.600386619567871
    5. ''z' → logprob: -12.475386619567871
    6. '	Z' → logprob: -13.225386619567871
    7. ''S' → logprob: -13.600386619567871
    8. ' ' → logprob: -13.850386619567871
    9. '['' → logprob: -13.975386619567871
    10. '"' → logprob: -14.975386619567871

Token 579: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.06682060658931732
    2. '',
' → logprob: -3.3168206214904785
    3. ''' → logprob: -3.5668206214904785
    4. ''}' → logprob: -9.56682014465332
    5. '       ' → logprob: -10.44182014465332
    6. '',
' → logprob: -11.69182014465332
    7. '}' → logprob: -12.06682014465332
    8. '           ' → logprob: -13.06682014465332
    9. '   ' → logprob: -13.19182014465332
    10. '','' → logprob: -13.31682014465332

Token 580: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22724297642707825
    2. '           ' → logprob: -1.6022429466247559
    3. ''' → logprob: -6.602242946624756
    4. '   ' → logprob: -8.602243423461914
    5. '}' → logprob: -9.102243423461914
    6. '```' → logprob: -9.852243423461914
    7. '          ' → logprob: -10.227243423461914
    8. '<|end|>' → logprob: -10.727243423461914
    9. '      ' → logprob: -10.977243423461914
    10. '        ' → logprob: -11.602243423461914

Token 581: ' '' (ID: 461)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01892215572297573
    2. '           ' → logprob: -4.518922328948975
    3. '}' → logprob: -5.518922328948975
    4. ''' (adapté à ' '') → logprob: -5.643922328948975
    5. '   ' → logprob: -8.393921852111816
    6. ' }' → logprob: -11.018921852111816
    7. '```' → logprob: -11.643921852111816
    8. '      ' → logprob: -11.768921852111816
    9. '`' → logprob: -11.893921852111816
    10. '	' → logprob: -12.518921852111816

Token 582: '110' (ID: 7920)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4979404807090759
    2. '000' → logprob: -1.3729405403137207
    3. '111' → logprob: -2.6229405403137207
    4. '101' → logprob: -3.1229405403137207
    5. '110' → logprob: -4.372940540313721
    6. '001' → logprob: -4.747940540313721
    7. '010' → logprob: -7.622940540313721
    8. '100' → logprob: -8.622940063476562
    9. '```' → logprob: -9.247940063476562
    10. '011' → logprob: -9.497940063476562

Token 583: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0001431114797014743
    2. '00' → logprob: -10.000143051147461
    3. '010' → logprob: -10.000143051147461
    4. '01' → logprob: -10.375143051147461
    5. '11' → logprob: -11.500143051147461
    6. '1' → logprob: -12.125143051147461
    7. ''' → logprob: -13.125143051147461
    8. '100' → logprob: -13.875143051147461
    9. ' ' → logprob: -14.375143051147461
    10. '```' → logprob: -14.875143051147461

Token 584: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0008743013604544103
    2. ''' → logprob: -7.5008745193481445
    3. ':' → logprob: -8.375874519348145
    4. ' ':' → logprob: -9.625874519348145
    5. '":' → logprob: -11.500874519348145
    6. '':'' → logprob: -12.625874519348145
    7. ' :' → logprob: -13.250874519348145
    8. '<|end|>' → logprob: -13.250874519348145
    9. '',' → logprob: -13.375874519348145
    10. ' '' → logprob: -14.000874519348145

Token 585: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.007669560611248016
    2. ' '' → logprob: -4.882669448852539
    3. '"' → logprob: -10.132669448852539
    4. ' ' → logprob: -11.132669448852539
    5. '<|end|>' → logprob: -13.132669448852539
    6. ''S' → logprob: -13.757669448852539
    7. ''A' → logprob: -13.757669448852539
    8. '[' → logprob: -14.382669448852539
    9. '['' → logprob: -14.382669448852539
    10. ')' → logprob: -14.757669448852539

Token 586: ' ',
' (ID: 66969)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.029275374487042427
    2. ' '' → logprob: -3.779275417327881
    3. ' ' → logprob: -5.154275417327881
    4. '0' → logprob: -9.654274940490723
    5. ''''' → logprob: -10.154274940490723
    6. 'space' → logprob: -10.779274940490723
    7. ''a' → logprob: -10.904274940490723
    8. 'a' → logprob: -11.154274940490723
    9. ' space' → logprob: -11.654274940490723
    10. '',' → logprob: -11.779274940490723

Token 587: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47443312406539917
    2. ''' → logprob: -0.9744331240653992
    3. '       ' → logprob: -9.224432945251465
    4. '          ' → logprob: -9.349432945251465
    5. ' '' → logprob: -9.474432945251465
    6. '   ' → logprob: -10.599432945251465
    7. '		' → logprob: -10.849432945251465
    8. '"' → logprob: -12.099432945251465
    9. '         ' → logprob: -12.099432945251465
    10. '```' → logprob: -12.099432945251465

Token 588: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.07032719254493713
    2. '           ' → logprob: -2.6953272819519043
    3. ' '' → logprob: -8.695326805114746
    4. '       ' → logprob: -9.820326805114746
    5. '          ' → logprob: -9.820326805114746
    6. '"' → logprob: -10.445326805114746
    7. '         ' → logprob: -10.570326805114746
    8. '```' → logprob: -11.320326805114746
    9. '   ' → logprob: -11.695326805114746
    10. '`' → logprob: -12.320326805114746

Token 589: '110' (ID: 7920)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3452412486076355
    2. '110' → logprob: -1.7202413082122803
    3. '111' → logprob: -2.3452413082122803
    4. '000' → logprob: -4.845241069793701
    5. '"' → logprob: -5.345241069793701
    6. ''.' → logprob: -5.845241069793701
    7. '001' → logprob: -7.220241069793701
    8. '010' → logprob: -7.595241069793701
    9. '"'' → logprob: -10.22024154663086
    10. ''''' → logprob: -10.47024154663086

Token 590: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.04305467754602432
    2. '10' → logprob: -3.1680545806884766
    3. '01' → logprob: -10.293054580688477
    4. '00' → logprob: -12.043054580688477
    5. '011' → logprob: -12.605554580688477
    6. '111' → logprob: -12.793054580688477
    7. '110' → logprob: -12.855554580688477
    8. '101' → logprob: -12.980554580688477
    9. '1' → logprob: -13.293054580688477
    10. '010' → logprob: -13.918054580688477

Token 591: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.006189129315316677
    2. ''' → logprob: -5.131189346313477
    3. ':' → logprob: -8.381189346313477
    4. '':'' → logprob: -12.006189346313477
    5. ''>' → logprob: -12.256189346313477
    6. ' ':' → logprob: -12.506189346313477
    7. '<|end|>' → logprob: -12.881189346313477
    8. '":' → logprob: -13.131189346313477
    9. ')':' → logprob: -13.256189346313477
    10. ''}' → logprob: -13.381189346313477

Token 592: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5727455019950867
    2. '','' → logprob: -1.4477455615997314
    3. ''.' → logprob: -2.3227455615997314
    4. '',' → logprob: -2.4477455615997314
    5. '"' → logprob: -5.447745323181152
    6. ' '' → logprob: -5.947745323181152
    7. ''''' → logprob: -6.072745323181152
    8. ' ','' → logprob: -6.197745323181152
    9. ''\' → logprob: -6.947745323181152
    10. '''' → logprob: -7.197745323181152

Token 593: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.24762649834156036
    2. '',' → logprob: -1.622626543045044
    3. '',
' → logprob: -3.872626543045044
    4. ' '' → logprob: -7.872626304626465
    5. ' ',
' → logprob: -7.997626304626465
    6. ' ',' → logprob: -8.122626304626465
    7. ''}' → logprob: -9.872626304626465
    8. '''' → logprob: -10.247626304626465
    9. '','' → logprob: -11.247626304626465
    10. ''
' → logprob: -11.372626304626465

Token 594: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6598510146141052
    2. ''' → logprob: -0.7848510146141052
    3. '   ' → logprob: -4.03485107421875
    4. '       ' → logprob: -5.40985107421875
    5. ' '' → logprob: -5.65985107421875
    6. ' ' → logprob: -6.90985107421875
    7. '  ' → logprob: -10.28485107421875
    8. '         ' → logprob: -10.53485107421875
    9. '          ' → logprob: -10.53485107421875
    10. '		' → logprob: -10.65985107421875

Token 595: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.01690947450697422
    2. '           ' → logprob: -4.141909599304199
    3. '       ' → logprob: -7.766909599304199
    4. '}' → logprob: -8.8919095993042
    5. '   ' → logprob: -9.0169095993042
    6. ' '' → logprob: -9.3919095993042
    7. ''}' → logprob: -10.8919095993042
    8. '         ' → logprob: -11.0169095993042
    9. '          ' → logprob: -11.3919095993042
    10. ''''' → logprob: -11.8919095993042

Token 596: '111' (ID: 8780)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0019270902266725898
    2. '','' → logprob: -6.876926898956299
    3. '',' → logprob: -7.376926898956299
    4. '111' → logprob: -8.626927375793457
    5. ''''' → logprob: -10.001927375793457
    6. ''\' → logprob: -11.501927375793457
    7. ' '' → logprob: -11.751927375793457
    8. '"' → logprob: -12.876927375793457
    9. '"'' → logprob: -13.001927375793457
    10. ''-' → logprob: -13.126927375793457

Token 597: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.0005124026210978627
    2. '01' → logprob: -8.00051212310791
    3. '11' → logprob: -9.75051212310791
    4. '0' → logprob: -9.75051212310791
    5. '000' → logprob: -10.50051212310791
    6. ''' → logprob: -11.00051212310791
    7. '10' → logprob: -11.12551212310791
    8. '001' → logprob: -14.25051212310791
    9. ' ' → logprob: -15.00051212310791
    10. '010' → logprob: -16.125513076782227

Token 598: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.031712599098682404
    2. ''' → logprob: -3.531712532043457
    3. ':' → logprob: -6.406712532043457
    4. ''>' → logprob: -9.156712532043457
    5. '<|end|>' → logprob: -9.531712532043457
    6. '':'' → logprob: -10.656712532043457
    7. '":' → logprob: -11.156712532043457
    8. ''s' → logprob: -11.156712532043457
    9. ''}' → logprob: -11.281712532043457
    10. ''=' → logprob: -11.781712532043457

Token 599: ' ',' (ID: 14089)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06707915663719177
    2. '',' → logprob: -3.5670790672302246
    3. ' '' → logprob: -3.9420790672302246
    4. '','' → logprob: -4.817079067230225
    5. '"' → logprob: -5.817079067230225
    6. '"'' → logprob: -5.942079067230225
    7. ' ','' → logprob: -6.942079067230225
    8. ''''' → logprob: -7.692079067230225
    9. ' ',' → logprob: -7.942079067230225
    10. ' "'' → logprob: -8.192079544067383

Token 600: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01095773745328188
    2. '           ' → logprob: -5.510957717895508
    3. '',' → logprob: -5.635957717895508
    4. ' '' → logprob: -6.635957717895508
    5. '',
' → logprob: -6.885957717895508
    6. '''' → logprob: -7.260957717895508
    7. ''s' → logprob: -9.510957717895508
    8. ''''' → logprob: -9.635957717895508
    9. ''
' → logprob: -11.260957717895508
    10. ''t' → logprob: -11.510957717895508

Token 601: '           ' (ID: 352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.34939879179000854
    2. '           ' → logprob: -1.2243988513946533
    3. ' '' → logprob: -7.974398612976074
    4. '```' → logprob: -9.099398612976074
    5. '   ' → logprob: -9.224398612976074
    6. '		' → logprob: -9.349398612976074
    7. '       ' → logprob: -9.724398612976074
    8. ' ' → logprob: -9.724398612976074
    9. '`' → logprob: -9.724398612976074
    10. '          ' → logprob: -9.849398612976074

Token 602: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.05539310723543167
    2. '           ' → logprob: -2.9303932189941406
    3. ' '' → logprob: -7.930393218994141
    4. '       ' → logprob: -9.43039321899414
    5. '   ' → logprob: -11.05539321899414
    6. '```' → logprob: -11.18039321899414
    7. '          ' → logprob: -11.55539321899414
    8. '`' → logprob: -12.30539321899414
    9. ''''' → logprob: -12.55539321899414
    10. '         ' → logprob: -12.80539321899414

Token 603: '111' (ID: 8780)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11300119012594223
    2. '111' → logprob: -3.3630011081695557
    3. ''''' → logprob: -3.4880011081695557
    4. '"'' → logprob: -3.7380011081695557
    5. '"' → logprob: -4.113001346588135
    6. '''' → logprob: -7.113001346588135
    7. '''''' → logprob: -8.488000869750977
    8. ''\' → logprob: -8.863000869750977
    9. ' "'' → logprob: -9.738000869750977
    10. ''-' → logprob: -9.863000869750977

Token 604: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.03636583685874939
    2. '00' → logprob: -3.4113657474517822
    3. '11' → logprob: -6.286365985870361
    4. '10' → logprob: -7.161365985870361
    5. ''' → logprob: -9.661365509033203
    6. ' ' → logprob: -12.286365509033203
    7. '0' → logprob: -12.536365509033203
    8. '000' → logprob: -13.411365509033203
    9. '010' → logprob: -13.536365509033203
    10. '001' → logprob: -13.536365509033203

Token 605: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.26876381039619446
    2. ':' → logprob: -1.768763780593872
    3. ''' → logprob: -2.768763780593872
    4. '<|end|>' → logprob: -6.893764019012451
    5. '':'' → logprob: -8.268763542175293
    6. ' :' → logprob: -8.518763542175293
    7. '=' → logprob: -8.893763542175293
    8. ' '' → logprob: -9.268763542175293
    9. ')' → logprob: -9.518763542175293
    10. ' ':' → logprob: -9.518763542175293

Token 606: ' '-' (ID: 17489)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.037665802985429764
    2. '"' → logprob: -4.162665843963623
    3. ''''' → logprob: -4.537665843963623
    4. '"'' → logprob: -4.912665843963623
    5. ' '' → logprob: -7.037665843963623
    6. '''' → logprob: -7.787665843963623
    7. ''-' → logprob: -7.912665843963623
    8. ''?' → logprob: -7.912665843963623
    9. ' "'"' → logprob: -7.912665843963623
    10. ' '?'' → logprob: -8.287665367126465

Token 607: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.042233362793922424
    2. '',' → logprob: -3.292233467102051
    3. '',
' → logprob: -5.542233467102051
    4. ''}' → logprob: -8.79223346710205
    5. '<|end|>' → logprob: -10.29223346710205
    6. '''' → logprob: -11.16723346710205
    7. ''
' → logprob: -11.41723346710205
    8. ' '' → logprob: -11.54223346710205
    9. '':' → logprob: -11.54223346710205
    10. '}' → logprob: -11.79223346710205

Token 608: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6347074508666992
    2. ''' → logprob: -0.7597074508666992
    3. ' '' → logprob: -6.384707450866699
    4. '       ' → logprob: -8.5097074508667
    5. '   ' → logprob: -9.6347074508667
    6. '          ' → logprob: -9.7597074508667
    7. '```' → logprob: -10.8847074508667
    8. '		' → logprob: -11.2597074508667
    9. ' ' → logprob: -11.2597074508667
    10. '<|end|>' → logprob: -11.5097074508667

Token 609: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.22755825519561768
    2. '           ' → logprob: -1.6025582551956177
    3. '       ' → logprob: -6.352558135986328
    4. ' '' → logprob: -8.477558135986328
    5. '          ' → logprob: -9.977558135986328
    6. '   ' → logprob: -10.352558135986328
    7. '}' → logprob: -10.352558135986328
    8. ' ' → logprob: -11.352558135986328
    9. '         ' → logprob: -11.352558135986328
    10. '	       ' → logprob: -11.977558135986328

Token 610: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.5958473682403564
    2. ''' → logprob: -1.4708473682403564
    3. '"' → logprob: -2.2208473682403564
    4. '"'' → logprob: -2.3458473682403564
    5. ''''' → logprob: -4.720847129821777
    6. '000' → logprob: -5.595847129821777
    7. '001' → logprob: -6.720847129821777
    8. '''' → logprob: -8.345847129821777
    9. '"""' → logprob: -8.720847129821777
    10. '''''' → logprob: -8.845847129821777

Token 611: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -8.399378566537052e-05
    2. '11' → logprob: -9.625083923339844
    3. '010' → logprob: -12.000083923339844
    4. '01' → logprob: -12.125083923339844
    5. '00' → logprob: -12.375083923339844
    6. '110' → logprob: -13.250083923339844
    7. '100' → logprob: -15.875083923339844
    8. ''' → logprob: -16.750083923339844
    9. '0' → logprob: -17.125083923339844
    10. '111' → logprob: -17.125083923339844

Token 612: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.11714580655097961
    2. ''' → logprob: -2.2421457767486572
    3. '''' → logprob: -6.492146015167236
    4. ':' → logprob: -6.492146015167236
    5. '"'' → logprob: -7.742146015167236
    6. '"' → logprob: -8.242145538330078
    7. ' ':' → logprob: -8.367145538330078
    8. ''''' → logprob: -9.492145538330078
    9. '":' → logprob: -9.617145538330078
    10. '':'' → logprob: -9.992145538330078

Token 613: ' "'' (ID: 12868)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7058104276657104
    2. '"' → logprob: -1.2058104276657104
    3. '"'' → logprob: -1.8308104276657104
    4. ''?' → logprob: -3.705810546875
    5. ''''' → logprob: -4.205810546875
    6. ''\' → logprob: -6.705810546875
    7. ' '?'' → logprob: -6.705810546875
    8. '''' → logprob: -7.080810546875
    9. '?' → logprob: -7.205810546875
    10. '?'' → logprob: -7.205810546875

Token 614: '",
' (ID: 1150)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9961012601852417
    2. '',' → logprob: -1.4961012601852417
    3. '"' → logprob: -1.6211012601852417
    4. '",' → logprob: -1.6211012601852417
    5. ' '' → logprob: -5.246101379394531
    6. ' "' → logprob: -6.871101379394531
    7. '",
' → logprob: -7.371101379394531
    8. '}' → logprob: -7.621101379394531
    9. ''s' → logprob: -7.746101379394531
    10. ' ',' → logprob: -7.746101379394531

Token 615: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17863239347934723
    2. ''' → logprob: -2.0536324977874756
    3. '       ' → logprob: -3.4286324977874756
    4. ' '' → logprob: -6.1786322593688965
    5. '   ' → logprob: -7.9286322593688965
    6. '}' → logprob: -8.428632736206055
    7. '		' → logprob: -9.553632736206055
    8. ' ' → logprob: -10.178632736206055
    9. '          ' → logprob: -10.678632736206055
    10. '	       ' → logprob: -10.803632736206055

Token 616: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.1442183405160904
    2. '           ' → logprob: -2.0192184448242188
    3. ' '' → logprob: -7.019218444824219
    4. '       ' → logprob: -7.519218444824219
    5. '}' → logprob: -10.019218444824219
    6. '   ' → logprob: -11.144218444824219
    7. '          ' → logprob: -11.519218444824219
    8. '		' → logprob: -11.769218444824219
    9. ''s' → logprob: -12.519218444824219
    10. '         ' → logprob: -12.644218444824219

Token 617: '111' (ID: 8780)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4304256737232208
    2. '111' → logprob: -1.0554256439208984
    3. '000' → logprob: -6.555425643920898
    4. '           ' → logprob: -9.055425643920898
    5. ' '' → logprob: -9.805425643920898
    6. '"' → logprob: -10.305425643920898
    7. ''''' → logprob: -10.805425643920898
    8. '0' → logprob: -10.930425643920898
    9. ' ' → logprob: -11.430425643920898
    10. '''' → logprob: -11.680425643920898

Token 618: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -5.013994814362377e-05
    2. '00' → logprob: -10.37505054473877
    3. '01' → logprob: -11.87505054473877
    4. '1' → logprob: -12.37505054473877
    5. '```' → logprob: -12.75005054473877
    6. '111' → logprob: -13.75005054473877
    7. '``' → logprob: -13.75005054473877
    8. '10' → logprob: -14.12505054473877
    9. '
' → logprob: -15.43755054473877
    10. '')' → logprob: -15.43755054473877

Token 619: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.05777015909552574
    2. ''' → logprob: -2.932770252227783
    3. ':' → logprob: -5.932770252227783
    4. '<|end|>' → logprob: -9.557769775390625
    5. '}' → logprob: -9.807769775390625
    6. '':'' → logprob: -10.682769775390625
    7. '":' → logprob: -10.932769775390625
    8. ''>' → logprob: -11.307769775390625
    9. ''}' → logprob: -11.932769775390625
    10. '"' → logprob: -12.057769775390625

Token 620: ' '?' (ID: 73818)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002407050458714366
    2. ''?' → logprob: -6.752407073974609
    3. ' '' → logprob: -7.502407073974609
    4. '"' → logprob: -7.627407073974609
    5. ' '?'' → logprob: -8.62740707397461
    6. '?' → logprob: -12.25240707397461
    7. '''' → logprob: -12.50240707397461
    8. ''S' → logprob: -13.62740707397461
    9. ''q' → logprob: -13.75240707397461
    10. ''.' → logprob: -14.12740707397461

Token 621: '',
' (ID: 1214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7390569448471069
    2. '}' → logprob: -0.8640569448471069
    3. '   ' → logprob: -2.3640570640563965
    4. ''}' → logprob: -5.7390570640563965
    5. ''' → logprob: -5.8640570640563965
    6. '',' → logprob: -7.7390570640563965
    7. '',
' → logprob: -8.739056587219238
    8. ' }' → logprob: -8.864056587219238
    9. ',
' → logprob: -10.239056587219238
    10. ''
' → logprob: -11.114056587219238

Token 622: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00895867682993412
    2. '}' → logprob: -4.75895881652832
    3. '   ' → logprob: -8.00895881652832
    4. ' }' → logprob: -11.50895881652832
    5. '	' → logprob: -14.38395881652832
    6. '<|end|>' → logprob: -14.63395881652832
    7. '	   ' → logprob: -15.13395881652832
    8. '      ' → logprob: -15.75895881652832
    9. '}
' → logprob: -16.75895881652832
    10. '           ' → logprob: -17.13395881652832

Token 623: ' }

' (ID: 758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0071105556562542915
    2. '}' → logprob: -5.007110595703125
    3. '```' → logprob: -8.132110595703125
    4. '
' → logprob: -9.507110595703125
    5. '<|end|>' → logprob: -11.382110595703125
    6. '}
' → logprob: -12.007110595703125
    7. '}

' (adapté à ' }

') → logprob: -12.882110595703125
    8. 'def' → logprob: -13.257110595703125
    9. '       ' → logprob: -14.007110595703125
    10. '<|end|>' → logprob: -14.132110595703125

Token 624: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004848869051784277
    2. 'def' → logprob: -5.379848957061768
    3. ' def' → logprob: -9.00484848022461
    4. '
' → logprob: -9.25484848022461
    5. '    
' → logprob: -12.12984848022461
    6. '```' → logprob: -12.75484848022461
    7. '	def' → logprob: -13.87984848022461
    8. '       ' → logprob: -15.50484848022461
    9. '        
' → logprob: -15.62984848022461
    10. ' ' → logprob: -15.75484848022461

Token 625: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0004583135014399886
    2. ' def' → logprob: -7.750458240509033
    3. '   ' → logprob: -10.500458717346191
    4. '
' → logprob: -17.250457763671875
    5. '	def' → logprob: -17.375457763671875
    6. '```' → logprob: -17.500457763671875
    7. 'de' → logprob: -17.875457763671875
    8. ' ' → logprob: -18.500457763671875
    9. '  ' → logprob: -22.000457763671875
    10. '`' → logprob: -22.000457763671875

Token 626: ' decode' (ID: 32043)
  Prédit: 'decode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -0.011052182875573635
    2. ' decode' → logprob: -4.511052131652832
    3. 'def' → logprob: -12.386052131652832
    4. '_decode' → logprob: -16.13605308532715
    5. '.decode' → logprob: -16.88605308532715
    6. 'decrypt' → logprob: -17.13605308532715
    7. ' def' → logprob: -17.51105308532715
    8. 'dec' → logprob: -18.01105308532715
    9. 'de' → logprob: -18.88605308532715
    10. 'd' → logprob: -19.63605308532715

Token 627: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008029569871723652
    2. '(' → logprob: -7.250802993774414
    3. ' (' → logprob: -9.875802993774414
    4. 'self' → logprob: -10.250802993774414
    5. '   ' → logprob: -13.000802993774414
    6. ' self' → logprob: -13.125802993774414
    7. '(
' → logprob: -14.375802993774414
    8. '       ' → logprob: -14.625802993774414
    9. '(s' → logprob: -14.750802993774414
    10. 'def' → logprob: -15.000802993774414

Token 628: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035641889553517103
    2. '(self' → logprob: -6.253564357757568
    3. ' ,' → logprob: -6.628564357757568
    4. 'self' → logprob: -8.12856388092041
    5. ' self' → logprob: -12.37856388092041
    6. ')(' → logprob: -12.62856388092041
    7. ' (' → logprob: -13.00356388092041
    8. ',self' → logprob: -13.12856388092041
    9. '   ' → logprob: -13.37856388092041
    10. '       ' → logprob: -13.50356388092041

Token 629: ' bits' (ID: 18189)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06361092627048492
    2. ' self' → logprob: -3.1886110305786133
    3. 'bits' → logprob: -4.813611030578613
    4. 'encoded' → logprob: -5.188611030578613
    5. ' bits' → logprob: -5.188611030578613
    6. ' encoded' → logprob: -7.438611030578613
    7. 'bit' → logprob: -7.938611030578613
    8. 'code' → logprob: -9.438611030578613
    9. ' bit' → logprob: -10.188611030578613
    10. 'coded' → logprob: -10.813611030578613

Token 630: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.030389428138733
    2. 'self' → logprob: -1.155389428138733
    3. '):' → logprob: -1.655389428138733
    4. '       ' → logprob: -3.0303893089294434
    5. ',' → logprob: -3.7803893089294434
    6. ')' → logprob: -3.7803893089294434
    7. '(self' → logprob: -4.030389308929443
    8. '):
' → logprob: -4.405389308929443
    9. '   ' → logprob: -4.655389308929443
    10. ' self' → logprob: -6.030389308929443

Token 631: ' str' (ID: 989)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3498871326446533
    2. ' self' → logprob: -1.2248871326446533
    3. ' str' → logprob: -7.099886894226074
    4. 'str' → logprob: -7.849886894226074
    5. ' bits' → logprob: -9.349886894226074
    6. ')' → logprob: -9.599886894226074
    7. 'bits' → logprob: -10.849886894226074
    8. 's' → logprob: -11.849886894226074
    9. 'text' → logprob: -11.974886894226074
    10. ' s' → logprob: -11.974886894226074

Token 632: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000885730201844126
    2. '):' → logprob: -7.125885963439941
    3. '   ' → logprob: -10.125885963439941
    4. '       ' → logprob: -10.750885963439941
    5. '):
' → logprob: -11.750885963439941
    6. ' )' → logprob: -12.125885963439941
    7. ')->' → logprob: -12.125885963439941
    8. ':' → logprob: -14.500885963439941
    9. 'self' → logprob: -14.750885963439941
    10. '`)' → logprob: -16.750885009765625

Token 633: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35914745926856995
    2. '       ' → logprob: -1.6091474294662476
    3. '(self' → logprob: -2.359147548675537
    4. '(' → logprob: -6.359147548675537
    5. ' ->' → logprob: -6.609147548675537
    6. '->' → logprob: -6.609147548675537
    7. ',' → logprob: -6.984147548675537
    8. '(s' → logprob: -8.234147071838379
    9. ':
' → logprob: -8.234147071838379
    10. '->____' → logprob: -9.109147071838379

Token 634: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.03807752579450607
    2. ' str' → logprob: -3.2880775928497314
    3. '[str' → logprob: -10.288077354431152
    4. '(str' → logprob: -13.663077354431152
    5. ' ' → logprob: -15.913077354431152
    6. 's' → logprob: -16.03807830810547
    7. 'stri' → logprob: -16.03807830810547
    8. '"' → logprob: -16.53807830810547
    9. '   ' → logprob: -16.66307830810547
    10. 'list' → logprob: -16.91307830810547

Token 635: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7105998992919922
    2. '       ' → logprob: -0.7105998992919922
    3. '(self' → logprob: -4.835599899291992
    4. ':
' → logprob: -5.085599899291992
    5. '(' → logprob: -7.210599899291992
    6. ',' → logprob: -7.335599899291992
    7. '():' → logprob: -8.210599899291992
    8. '<|end|>' → logprob: -8.335599899291992
    9. '[' → logprob: -8.710599899291992
    10. '   ' → logprob: -8.835599899291992

Token 636: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.107425062713446e-06
    2. 'decoded' → logprob: -12.375006675720215
    3. ' decoded' → logprob: -13.875006675720215
    4. '      ' → logprob: -14.625006675720215
    5. '   ' → logprob: -14.750006675720215
    6. 'result' → logprob: -14.875006675720215
    7. '```' → logprob: -15.875006675720215
    8. ' result' → logprob: -16.12500762939453
    9. '     ' → logprob: -16.50000762939453
    10. '    ' → logprob: -16.50000762939453

Token 637: ' output' (ID: 4733)
  Prédit: 'decoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'decoded' → logprob: -0.22281543910503387
    2. 'result' → logprob: -1.7228153944015503
    3. 'text' → logprob: -4.47281551361084
    4. 'chars' → logprob: -5.22281551361084
    5. '       ' → logprob: -5.47281551361084
    6. ' decoded' → logprob: -9.72281551361084
    7. 'res' → logprob: -10.09781551361084
    8. ' result' → logprob: -11.09781551361084
    9. 'return' → logprob: -11.34781551361084
    10. ' chars' → logprob: -11.72281551361084

Token 638: '_chars' (ID: 94246)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06240445002913475
    2. '=' → logprob: -2.8124043941497803
    3. '_chars' → logprob: -8.06240463256836
    4. '_' → logprob: -9.68740463256836
    5. ' ' → logprob: -10.93740463256836
    6. '_tokens' → logprob: -11.18740463256836
    7. '_text' → logprob: -11.68740463256836
    8. '=""' → logprob: -12.68740463256836
    9. '=''' → logprob: -12.81240463256836
    10. '=[]' → logprob: -13.06240463256836

Token 639: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018155796453356743
    2. '=' → logprob: -4.018155574798584
    3. '=[]' → logprob: -12.393156051635742
    4. '       ' → logprob: -13.893156051635742
    5. '=[]
' → logprob: -14.893156051635742
    6. '   ' → logprob: -15.893156051635742
    7. '        ' → logprob: -16.268156051635742
    8. ',' → logprob: -16.643156051635742
    9. ' ' → logprob: -16.893156051635742
    10. '[]' → logprob: -16.893156051635742

Token 640: ' []
' (ID: 8911)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.1544812023639679
    2. '[]' → logprob: -2.1544811725616455
    3. '""' → logprob: -3.6544811725616455
    4. '[]
' → logprob: -7.654481410980225
    5. '"' → logprob: -8.404480934143066
    6. '''
' → logprob: -8.404480934143066
    7. ''' → logprob: -8.654480934143066
    8. ' []' → logprob: -9.029480934143066
    9. ' ''' → logprob: -9.404480934143066
    10. ' ""' → logprob: -13.404480934143066

Token 641: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017743845819495618
    2. 'for' → logprob: -9.125177383422852
    3. ' for' → logprob: -9.750177383422852
    4. '   ' → logprob: -12.625177383422852
    5. '
' → logprob: -13.250177383422852
    6. '	' → logprob: -13.375177383422852
    7. '```' → logprob: -14.000177383422852
    8. '        
' → logprob: -14.375177383422852
    9. 'i' → logprob: -14.625177383422852
    10. '	for' → logprob: -14.750177383422852

Token 642: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01950744353234768
    2. ' for' → logprob: -4.26950740814209
    3. '       ' → logprob: -5.26950740814209
    4. 'i' → logprob: -8.64450740814209
    5. ' i' → logprob: -12.14450740814209
    6. 'n' → logprob: -14.14450740814209
    7. 'while' → logprob: -14.39450740814209
    8. '
' → logprob: -14.89450740814209
    9. '   ' → logprob: -15.01950740814209
    10. 'index' → logprob: -15.39450740814209

Token 643: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005233882926404476
    2. ' i' → logprob: -5.2552337646484375
    3. '   ' → logprob: -16.755233764648438
    4. '	i' → logprob: -17.630233764648438
    5. ' ' → logprob: -18.255233764648438
    6. 'idx' → logprob: -18.630233764648438
    7. '    ' → logprob: -19.255233764648438
    8. 'pos' → logprob: -19.380233764648438
    9. '  ' → logprob: -20.130233764648438
    10. 'index' → logprob: -20.505233764648438

Token 644: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019394654082134366
    2. 'in' → logprob: -6.251939296722412
    3. ' ' → logprob: -12.25193977355957
    4. '	in' → logprob: -13.00193977355957
    5. '    ' → logprob: -13.87693977355957
    6. ' i' → logprob: -14.00193977355957
    7. 'n' → logprob: -14.87693977355957
    8. '   ' → logprob: -15.00193977355957
    9. 'In' → logprob: -15.25193977355957
    10. '_in' → logprob: -15.37693977355957

Token 645: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029750484973192215
    2. ' range' → logprob: -3.5297505855560303
    3. '	range' → logprob: -19.90475082397461
    4. ' ' → logprob: -20.27975082397461
    5. '   ' → logprob: -21.02975082397461
    6. '(range' → logprob: -21.52975082397461
    7. '0' → logprob: -21.77975082397461
    8. '  ' → logprob: -23.15475082397461
    9. 'rang' → logprob: -23.27975082397461
    10. '_range' → logprob: -24.02975082397461

Token 646: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0060036866925656796
    2. ' ' → logprob: -5.5060038566589355
    3. '(' → logprob: -6.2560038566589355
    4. ' len' → logprob: -13.631003379821777
    5. '(len' → logprob: -13.881003379821777
    6. 'len' → logprob: -14.131003379821777
    7. ' (' → logprob: -14.131003379821777
    8. '   ' → logprob: -14.506003379821777
    9. '       ' → logprob: -14.756003379821777
    10. '        ' → logprob: -17.881004333496094

Token 647: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. 'len' → logprob: -17.875001907348633
    4. '   ' → logprob: -19.375001907348633
    5. '       ' → logprob: -22.375001907348633
    6. '０' → logprob: -22.625001907348633
    7. ' len' → logprob: -22.625001907348633
    8. '
' → logprob: -23.000001907348633
    9. '           ' → logprob: -23.375001907348633
    10. '۰' → logprob: -23.500001907348633

Token 648: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034818740095943213
    2. ',len' → logprob: -5.878481864929199
    3. ' ,' → logprob: -7.378481864929199
    4. ' ' → logprob: -10.7534818649292
    5. '0' → logprob: -11.7534818649292
    6. 'len' → logprob: -12.3784818649292
    7. '   ' → logprob: -12.6284818649292
    8. '*' → logprob: -12.7534818649292
    9. ',length' → logprob: -12.7534818649292
    10. ' len' → logprob: -12.8784818649292

Token 649: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.47407805919647217
    2. ' len' → logprob: -0.9740780591964722
    3. '(len' → logprob: -14.099078178405762
    4. ',len' → logprob: -15.224078178405762
    5. '	len' → logprob: -16.349077224731445
    6. '       ' → logprob: -17.474077224731445
    7. '[len' → logprob: -18.349077224731445
    8. '=len' → logprob: -19.349077224731445
    9. '```' → logprob: -19.599077224731445
    10. '5' → logprob: -19.724077224731445

Token 650: '(bits' (ID: 170698)
  Prédit: '(bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bits' → logprob: -6.869017852295656e-06
    2. ' (' → logprob: -12.625006675720215
    3. '(' → logprob: -13.000006675720215
    4. ' bits' → logprob: -13.875006675720215
    5. 'bits' → logprob: -15.125006675720215
    6. '(bit' → logprob: -18.62500762939453
    7. '(bounds' → logprob: -19.00000762939453
    8. '_bits' → logprob: -19.25000762939453
    9. '.bits' → logprob: -19.37500762939453
    10. ')' → logprob: -19.87500762939453

Token 651: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007778290659189224
    2. ' ,' → logprob: -4.882778167724609
    3. '   ' → logprob: -8.75777816772461
    4. '       ' → logprob: -11.50777816772461
    5. '    ' → logprob: -13.63277816772461
    6. ' ' → logprob: -13.75777816772461
    7. '```' → logprob: -14.25777816772461
    8. '  ' → logprob: -15.25777816772461
    9. '     ' → logprob: -15.25777816772461
    10. '(),' → logprob: -15.38277816772461

Token 652: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.37501335144043
    4. '```' → logprob: -17.00001335144043
    5. '    ' → logprob: -17.50001335144043
    6. '  ' → logprob: -18.12501335144043
    7. '５' → logprob: -19.25001335144043
    8. '       ' → logprob: -19.75001335144043
    9. '     ' → logprob: -20.12501335144043
    10. '۵' → logprob: -20.37501335144043

Token 653: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -17.375
    4. '５' → logprob: -18.125
    5. '   ' → logprob: -18.25
    6. '۵' → logprob: -18.625
    7. '  ' → logprob: -19.125
    8. '٥' → logprob: -19.375
    9. '
' → logprob: -20.0
    10. '५' → logprob: -20.25

Token 654: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04860281944274902
    2. '):' → logprob: -3.048602819442749
    3. '):
' → logprob: -11.423603057861328
    4. '   ' → logprob: -12.673603057861328
    5. '       ' → logprob: -14.548603057861328
    6. ')' → logprob: -15.173603057861328
    7. ':
' → logprob: -15.423603057861328
    8. '):

' → logprob: -15.798603057861328
    9. ':' → logprob: -16.673603057861328
    10. '```' → logprob: -16.798603057861328

Token 655: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0669775977730751
    2. 'chunk' → logprob: -3.6919775009155273
    3. 'token' → logprob: -4.066977500915527
    4. '           ' → logprob: -4.066977500915527
    5. ' token' → logprob: -6.191977500915527
    6. ' chunk' → logprob: -6.816977500915527
    7. 'code' → logprob: -7.441977500915527
    8. 'segment' → logprob: -7.816977500915527
    9. 'slice' → logprob: -8.066977500915527
    10. 'block' → logprob: -8.566977500915527

Token 656: ' chunk' (ID: 23958)
  Prédit: 'chunk'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chunk' (adapté à ' chunk') → logprob: -0.03560836240649223
    2. 'code' → logprob: -3.7856082916259766
    3. 'segment' → logprob: -4.785608291625977
    4. 'token' → logprob: -6.160608291625977
    5. 'block' → logprob: -7.410608291625977
    6. ' chunk' → logprob: -7.535608291625977
    7. '       ' → logprob: -8.785608291625977
    8. 'bit' → logprob: -9.035608291625977
    9. 'group' → logprob: -9.285608291625977
    10. 'bits' → logprob: -9.535608291625977

Token 657: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692947685718536
    2. '=' → logprob: -2.126929521560669
    3. ' =
' → logprob: -14.37692928314209
    4. '        ' → logprob: -15.62692928314209
    5. '=
' → logprob: -15.75192928314209
    6. ' ' → logprob: -15.75192928314209
    7. '       ' → logprob: -16.251930236816406
    8. '＝' → logprob: -16.251930236816406
    9. '    ' → logprob: -17.001930236816406
    10. '=b' → logprob: -17.501930236816406

Token 658: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.31326258182525635
    2. ' bits' → logprob: -1.3132625818252563
    3. 'bit' → logprob: -14.188262939453125
    4. '(bits' → logprob: -16.063262939453125
    5. 'b' → logprob: -17.188262939453125
    6. '_bits' → logprob: -18.188262939453125
    7. ' bit' → logprob: -18.438262939453125
    8. '.bits' → logprob: -18.563262939453125
    9. 'Bits' → logprob: -18.688262939453125
    10. '`' → logprob: -19.938262939453125

Token 659: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8624639324116288e-06
    2. 'i' → logprob: -14.125001907348633
    3. '[' → logprob: -14.250001907348633
    4. '           ' → logprob: -15.375001907348633
    5. '(i' → logprob: -16.000001907348633
    6. '       ' → logprob: -16.875001907348633
    7. '[
' → logprob: -17.500001907348633
    8. '{i' → logprob: -17.625001907348633
    9. '   ' → logprob: -18.125001907348633
    10. '[j' → logprob: -18.500001907348633

Token 660: ':i' (ID: 34041)
  Prédit: ':i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -2.7252845029579476e-05
    2. ' :' → logprob: -11.500027656555176
    3. 'i' → logprob: -11.625027656555176
    4. ':' → logprob: -12.000027656555176
    5. '   ' → logprob: -13.375027656555176
    6. ' i' → logprob: -15.375027656555176
    7. ',i' → logprob: -16.75002670288086
    8. '	i' → logprob: -16.87502670288086
    9. ' ' → logprob: -17.00002670288086
    10. '```' → logprob: -17.12502670288086

Token 661: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.453737710718997e-05
    2. ' +' → logprob: -10.250044822692871
    3. '5' → logprob: -11.625044822692871
    4. '   ' → logprob: -16.250043869018555
    5. '+i' → logprob: -16.750043869018555
    6. 'i' → logprob: -18.000043869018555
    7. ' ' → logprob: -18.000043869018555
    8. '＋' → logprob: -18.125043869018555
    9. ']' → logprob: -20.125043869018555
    10. '```' → logprob: -20.125043869018555

Token 662: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.00000286102295
    3. ''' → logprob: -14.87500286102295
    4. '```' → logprob: -17.125001907348633
    5. '   ' → logprob: -18.500001907348633
    6. '"' → logprob: -19.375001907348633
    7. '`' → logprob: -19.625001907348633
    8. '05' → logprob: -19.625001907348633
    9. '５' → logprob: -19.875001907348633
    10. '    ' → logprob: -20.875001907348633

Token 663: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.10024689882993698
    2. ']' → logprob: -2.3502469062805176
    3. ']
' → logprob: -10.22524642944336
    4. '           ' → logprob: -12.72524642944336
    5. ']

' → logprob: -14.60024642944336
    6. '       ' → logprob: -14.72524642944336
    7. '']
' → logprob: -16.10024642944336
    8. '']' → logprob: -17.97524642944336
    9. ' ]
' → logprob: -18.10024642944336
    10. ']'
' → logprob: -18.10024642944336

Token 664: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05717330425977707
    2. ' if' → logprob: -3.057173252105713
    3. '       ' → logprob: -5.182173252105713
    4. 'if' → logprob: -5.932173252105713
    5. ' char' → logprob: -9.432173728942871
    6. 'char' → logprob: -9.682173728942871
    7. 'token' → logprob: -10.182173728942871
    8. ' token' → logprob: -10.557173728942871
    9. 'output' → logprob: -11.057173728942871
    10. ' c' → logprob: -11.557173728942871

Token 665: ' char' (ID: 1826)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3146704435348511
    2. 'char' (adapté à ' char') → logprob: -1.314670443534851
    3. ' if' → logprob: -7.439670562744141
    4. 'output' → logprob: -7.564670562744141
    5. 'ch' → logprob: -8.56467056274414
    6. ' char' → logprob: -9.93967056274414
    7. '           ' → logprob: -9.93967056274414
    8. 'decoded' → logprob: -11.68967056274414
    9. '       ' → logprob: -12.56467056274414
    10. 'Char' → logprob: -13.93967056274414

Token 666: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026301106438040733
    2. '=' → logprob: -3.651301145553589
    3. ' ' → logprob: -15.651301383972168
    4. '        ' → logprob: -16.15130043029785
    5. '_' → logprob: -16.27630043029785
    6. '       ' → logprob: -16.40130043029785
    7. '           ' → logprob: -16.52630043029785
    8. '＝' → logprob: -16.90130043029785
    9. ' =
' → logprob: -16.90130043029785
    10. 's' → logprob: -17.02630043029785

Token 667: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019287518225610256
    2. ' self' → logprob: -6.251928806304932
    3. '       ' → logprob: -16.626928329467773
    4. ''' → logprob: -16.751928329467773
    5. '           ' → logprob: -18.251928329467773
    6. '(self' → logprob: -18.251928329467773
    7. ''s' → logprob: -18.876928329467773
    8. '''' → logprob: -19.376928329467773
    9. '=self' → logprob: -20.001928329467773
    10. '`' → logprob: -20.126928329467773

Token 668: '.code' (ID: 17685)
  Prédit: '.code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.code' → logprob: -8.41866585687967e-06
    2. '.' → logprob: -11.875008583068848
    3. '.cod' → logprob: -14.875008583068848
    4. '
' → logprob: -15.375008583068848
    5. 'code' → logprob: -15.625008583068848
    6. ' .' → logprob: -15.625008583068848
    7. '.decode' → logprob: -15.750008583068848
    8. '.char' → logprob: -16.75000762939453
    9. '.
' → logprob: -17.12500762939453
    10. '.data' → logprob: -17.25000762939453

Token 669: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. 'to' → logprob: -19.0
    3. '_chars' → logprob: -20.0
    4. 'To' → logprob: -20.875
    5. '_char' → logprob: -20.875
    6. '=' → logprob: -21.125
    7. '_TO' → logprob: -21.125
    8. ' =' → logprob: -21.625
    9. '_t' → logprob: -22.0
    10. '_' → logprob: -22.25

Token 670: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.03804194927215576
    2. 'char' → logprob: -3.2880420684814453
    3. 'Char' → logprob: -15.663042068481445
    4. ' char' → logprob: -16.038042068481445
    5. '<char' → logprob: -16.538042068481445
    6. '_CHAR' → logprob: -16.913042068481445
    7. 'ch' → logprob: -18.163042068481445
    8. '-char' → logprob: -18.538042068481445
    9. '.char' → logprob: -18.788042068481445
    10. '_chars' → logprob: -19.288042068481445

Token 671: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -3.023293538717553e-05
    2. '.' → logprob: -10.625030517578125
    3. 'get' → logprob: -12.125030517578125
    4. '[' → logprob: -14.625030517578125
    5. ' .' → logprob: -17.250030517578125
    6. 'chunk' → logprob: -17.250030517578125
    7. '[ch' → logprob: -17.625030517578125
    8. '.chunk' → logprob: -18.625030517578125
    9. '(chunk' → logprob: -18.875030517578125
    10. '[get' → logprob: -20.125030517578125

Token 672: '(chunk' (ID: 92058)
  Prédit: '(chunk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chunk' → logprob: -3.128163257315464e-07
    2. 'chunk' → logprob: -15.625
    3. '(' → logprob: -16.625
    4. '(chr' → logprob: -19.25
    5. ' (' → logprob: -19.75
    6. ' chunk' → logprob: -20.5
    7. '(ch' → logprob: -20.625
    8. '(chat' → logprob: -21.125
    9. '(
' → logprob: -21.75
    10. '(chart' → logprob: -21.875

Token 673: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015659494325518608
    2. ')' → logprob: -4.265659332275391
    3. ''' → logprob: -7.140659332275391
    4. ')
' → logprob: -7.765659332275391
    5. ','' → logprob: -8.64065933227539
    6. '',' → logprob: -10.26565933227539
    7. 'None' → logprob: -10.89065933227539
    8. ',None' → logprob: -11.14065933227539
    9. ''',' → logprob: -11.51565933227539
    10. ' ,' → logprob: -12.26565933227539

Token 674: ' '')
' (ID: 53215)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08420266956090927
    2. '''' → logprob: -2.584202766418457
    3. ''?' → logprob: -5.334202766418457
    4. ' '')' → logprob: -7.709202766418457
    5. ''',' → logprob: -11.959202766418457
    6. ' ''' → logprob: -12.459202766418457
    7. ''*' → logprob: -12.584202766418457
    8. '"' → logprob: -12.959202766418457
    9. ''#' → logprob: -13.209202766418457
    10. ''<' → logprob: -13.584202766418457

Token 675: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -15.375000953674316
    3. '       ' → logprob: -15.625000953674316
    4. '            
' → logprob: -16.375
    5. ' if' → logprob: -16.875
    6. '	       ' → logprob: -17.0
    7. '		' → logprob: -17.125
    8. '               ' → logprob: -17.375
    9. '<|end|>' → logprob: -17.625
    10. 'if' → logprob: -17.625

Token 676: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.3265053927898407
    2. 'if' → logprob: -1.326505422592163
    3. '           ' → logprob: -4.576505184173584
    4. ' if' → logprob: -6.576505184173584
    5. ' output' → logprob: -6.576505184173584
    6. '       ' → logprob: -9.451505661010742
    7. '   ' → logprob: -14.451505661010742
    8. '```' → logprob: -14.951505661010742
    9. '	output' → logprob: -15.451505661010742
    10. '$output' → logprob: -15.701505661010742

Token 677: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -1.0280383548888494e-06
    2. 'chars' → logprob: -14.750000953674316
    3. '_char' → logprob: -15.375000953674316
    4. 'Chars' → logprob: -15.500000953674316
    5. '_' → logprob: -16.875001907348633
    6. 'char' → logprob: -18.000001907348633
    7. ')' → logprob: -18.375001907348633
    8. 's' → logprob: -18.500001907348633
    9. '.append' → logprob: -19.375001907348633
    10. '=' → logprob: -19.625001907348633

Token 678: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0052422950975596905
    2. '.' → logprob: -5.255242347717285
    3. '.app' → logprob: -12.380242347717285
    4. 'append' → logprob: -12.505242347717285
    5. '.extend' → logprob: -15.255242347717285
    6. '.ap' → logprob: -15.755242347717285
    7. '.Append' → logprob: -16.13024139404297
    8. ' .' → logprob: -17.13024139404297
    9. '.push' → logprob: -18.25524139404297
    10. ' append' → logprob: -18.38024139404297

Token 679: '(char' (ID: 14823)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.6931493282318115
    2. '(char' → logprob: -0.6931493282318115
    3. ' char' → logprob: -13.19314956665039
    4. '<char' → logprob: -16.06814956665039
    5. '(' → logprob: -16.81814956665039
    6. '(
' → logprob: -17.19314956665039
    7. '_char' → logprob: -17.81814956665039
    8. ',char' → logprob: -17.81814956665039
    9. '	char' → logprob: -18.44314956665039
    10. 'Char' → logprob: -19.06814956665039

Token 680: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003305784775875509
    2. '<|end|>' → logprob: -8.125330924987793
    3. '       ' → logprob: -11.000330924987793
    4. ')
' → logprob: -11.875330924987793
    5. ')return' → logprob: -12.375330924987793
    6. '[' → logprob: -13.500330924987793
    7. '<|end|>' → logprob: -14.000330924987793
    8. ']' → logprob: -14.125330924987793
    9. '')' → logprob: -14.125330924987793
    10. ' )' → logprob: -14.250330924987793

Token 681: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08917456865310669
    2. '
' → logprob: -2.464174509048462
    3. '        
' → logprob: -9.214174270629883
    4. ' return' → logprob: -10.089174270629883
    5. 'return' → logprob: -10.589174270629883
    6. '
' → logprob: -10.589174270629883
    7. '```' → logprob: -11.214174270629883
    8. '    
' → logprob: -11.714174270629883
    9. ' 
' → logprob: -11.839174270629883
    10. '  
' → logprob: -11.964174270629883

Token 682: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.15407834947109222
    2. ' return' → logprob: -2.154078245162964
    3. '       ' → logprob: -3.654078245162964
    4. '
' → logprob: -7.029078483581543
    5. '	return' → logprob: -11.904078483581543
    6. '        
' → logprob: -12.779078483581543
    7. '   ' → logprob: -13.029078483581543
    8. '```' → logprob: -13.904078483581543
    9. ' 
' → logprob: -15.279078483581543
    10. 'eturn' → logprob: -15.529078483581543

Token 683: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.10027480870485306
    2. ' ''.' → logprob: -2.3502748012542725
    3. '''' → logprob: -9.725275039672852
    4. ''' → logprob: -12.225275039672852
    5. '''
' → logprob: -13.350275039672852
    6. '"' → logprob: -13.350275039672852
    7. ' "".' → logprob: -15.350275039672852
    8. ''',' → logprob: -16.97527503967285
    9. '   ' → logprob: -17.22527503967285
    10. '```' → logprob: -17.47527503967285

Token 684: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.011071753688156605
    2. '''.' → logprob: -4.511071681976318
    3. '.join' → logprob: -11.386072158813477
    4. '('').' → logprob: -12.511072158813477
    5. '''' → logprob: -13.261072158813477
    6. ' ''.' → logprob: -13.261072158813477
    7. '```' → logprob: -13.511072158813477
    8. ' join' → logprob: -13.886072158813477
    9. 'j' → logprob: -14.011072158813477
    10. 'jo' → logprob: -14.136072158813477

Token 685: '(output' (ID: 22485)
  Prédit: '(output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(output' → logprob: -4.5491004129871726e-05
    2. 'output' → logprob: -10.000045776367188
    3. ' output' → logprob: -19.500045776367188
    4. '(' → logprob: -19.625045776367188
    5. '	output' → logprob: -19.625045776367188
    6. '$output' → logprob: -20.125045776367188
    7. '(input' → logprob: -21.625045776367188
    8. '(
' → logprob: -21.750045776367188
    9. ' (' → logprob: -23.250045776367188
    10. '```' → logprob: -23.250045776367188

Token 686: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -1.9361264946837764e-07
    2. 'chars' → logprob: -15.875
    3. '_' → logprob: -18.875
    4. 'Chars' → logprob: -19.625
    5. '_chunks' → logprob: -20.125
    6. 's' → logprob: -20.25
    7. '_attrs' → logprob: -21.125
    8. ')' → logprob: -21.25
    9. '_)' → logprob: -21.625
    10. '_char' → logprob: -21.75

Token 687: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '<|end|>' → logprob: -15.375000953674316
    3. '}' → logprob: -16.625
    4. ' )' → logprob: -17.125
    5. '())' → logprob: -17.375
    6. ')return' → logprob: -17.5
    7. '```' → logprob: -17.75
    8. ')
' → logprob: -17.875
    9. '）' → logprob: -18.125
    10. '[' → logprob: -18.5

Token 688: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 689: ' Peter' (ID: 16104)
  Prédit: ' Encoder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Encoder' → logprob: -0.883250892162323
    2. ' Message' → logprob: -1.6332509517669678
    3. ' Decoder' → logprob: -2.1332509517669678
    4. ' Text' → logprob: -2.2582509517669678
    5. ' Bit' → logprob: -3.3832509517669678
    6. ' Cipher' → logprob: -3.3832509517669678
    7. ' Translator' → logprob: -3.3832509517669678
    8. ' Tester' → logprob: -4.383250713348389
    9. ' Morse' → logprob: -4.633250713348389
    10. 'Message' → logprob: -4.883250713348389

Token 690: 'P' (ID: 47)
  Prédit: 'Encoder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Encoder' → logprob: -0.7857534885406494
    2. ':' → logprob: -2.0357534885406494
    3. 'P' → logprob: -2.0357534885406494
    4. '<|end|>' → logprob: -2.9107534885406494
    5. 'Coder' → logprob: -3.1607534885406494
    6. '():' → logprob: -3.2857534885406494
    7. ':
' → logprob: -4.16075325012207
    8. 'Pan' → logprob: -4.16075325012207
    9. '():
' → logprob: -4.28575325012207
    10. '(' → logprob: -4.41075325012207

Token 691: 'iper' (ID: 19629)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.66975337266922
    2. 'iper' → logprob: -1.7947533130645752
    3. 'arker' → logprob: -2.044753313064575
    4. 'ar' → logprob: -2.544753313064575
    5. 'ark' → logprob: -3.419753313064575
    6. 'eter' → logprob: -4.294753551483154
    7. 'acker' → logprob: -4.419753551483154
    8. 'ack' → logprob: -4.794753551483154
    9. 'aul' → logprob: -4.919753551483154
    10. 'ang' → logprob: -5.169753551483154

Token 692: 'Cipher' (ID: 88994)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016662541311234236
    2. ':
' → logprob: -6.501666069030762
    3. '():' → logprob: -8.876666069030762
    4. '(' → logprob: -11.626666069030762
    5. 'Encoder' → logprob: -12.251666069030762
    6. ':

' → logprob: -13.876666069030762
    7. 'Parser' → logprob: -13.876666069030762
    8. '(P' → logprob: -14.251666069030762
    9. '(object' → logprob: -14.376666069030762
    10. ':`' → logprob: -14.376666069030762

Token 693: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00018101456225849688
    2. ':
' → logprob: -8.750181198120117
    3. '():' → logprob: -11.125181198120117
    4. ' :' → logprob: -12.875181198120117
    5. ':def' → logprob: -12.875181198120117
    6. '(' → logprob: -13.875181198120117
    7. '):' → logprob: -15.000181198120117
    8. '(P' → logprob: -15.125181198120117
    9. '(object' → logprob: -15.250181198120117
    10. 'def' → logprob: -16.000181198120117

Token 694: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0064697484485805035
    2. ' def' → logprob: -5.2564697265625
    3. ':' → logprob: -7.1314697265625
    4. 'def' → logprob: -8.0064697265625
    5. ':
' → logprob: -9.3814697265625
    6. '	def' → logprob: -12.2564697265625
    7. ':def' → logprob: -12.3814697265625
    8. '   ' → logprob: -13.3814697265625
    9. '```' → logprob: -13.6314697265625
    10. 'class' → logprob: -13.6314697265625

Token 695: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5908306241035461
    2. 'def' (adapté à ' def') → logprob: -0.8408306241035461
    3. '   ' → logprob: -4.2158308029174805
    4. ' __' → logprob: -11.96583080291748
    5. '__' → logprob: -11.96583080291748
    6. '	def' → logprob: -13.21583080291748
    7. 'class' → logprob: -13.71583080291748
    8. ' ' → logprob: -13.71583080291748
    9. ':def' → logprob: -13.71583080291748
    10. ':' → logprob: -13.84083080291748

Token 696: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.12792184948921204
    2. '__' → logprob: -2.1279218196868896
    3. ' def' → logprob: -8.002922058105469
    4. 'def' → logprob: -8.127922058105469
    5. 'init' → logprob: -8.752922058105469
    6. '_init' → logprob: -9.502922058105469
    7. ' encode' → logprob: -10.252922058105469
    8. ' init' → logprob: -10.377922058105469
    9. 'encode' → logprob: -10.877922058105469
    10. '_encode' → logprob: -10.877922058105469

Token 697: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.339278580620885e-06
    2. 'def' → logprob: -13.500001907348633
    3. 'it' → logprob: -14.375001907348633
    4. 'int' → logprob: -15.750001907348633
    5. ' init' → logprob: -16.500001907348633
    6. 'ini' → logprob: -17.625001907348633
    7. '_init' → logprob: -18.000001907348633
    8. '(init' → logprob: -18.125001907348633
    9. 'iter' → logprob: -19.250001907348633
    10. 'nit' → logprob: -19.750001907348633

Token 698: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.09002751111984253
    2. '(self' → logprob: -2.4650275707244873
    3. '(' → logprob: -7.465027332305908
    4. '__' → logprob: -7.840027332305908
    5. '__(
' → logprob: -9.340027809143066
    6. ' (' → logprob: -11.715027809143066
    7. ')(' → logprob: -11.715027809143066
    8. '   ' → logprob: -12.215027809143066
    9. 'self' → logprob: -12.340027809143066
    10. '```' → logprob: -13.215027809143066

Token 699: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00023035754566080868
    2. ')' → logprob: -8.62523078918457
    3. ' self' → logprob: -10.00023078918457
    4. '   ' → logprob: -12.87523078918457
    5. '):
' → logprob: -13.37523078918457
    6. '
' → logprob: -14.62523078918457
    7. '       ' → logprob: -15.75023078918457
    8. ' ' → logprob: -16.00023078918457
    9. ')(' → logprob: -16.00023078918457
    10. '(self' → logprob: -16.50023078918457

Token 700: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023762723430991173
    2. 'self' → logprob: -4.5237627029418945
    3. '):
' → logprob: -4.8987627029418945
    4. ')' → logprob: -5.3987627029418945
    5. ',' → logprob: -7.3987627029418945
    6. '   ' → logprob: -11.398762702941895
    7. ' self' → logprob: -11.648762702941895
    8. ' ):' → logprob: -11.898762702941895
    9. '):

' → logprob: -12.148762702941895
    10. '):
' → logprob: -12.523762702941895

Token 701: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4026058316230774
    2. 'self' → logprob: -1.1526057720184326
    3. '   ' → logprob: -4.652606010437012
    4. ' self' → logprob: -5.152606010437012
    5. ')' → logprob: -8.402606010437012
    6. ' ' → logprob: -11.402606010437012
    7. '):
' → logprob: -11.527606010437012
    8. '	self' → logprob: -11.902606010437012
    9. 'def' → logprob: -12.277606010437012
    10. 's' → logprob: -12.402606010437012

Token 702: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00037609596620313823
    2. '       ' → logprob: -8.125375747680664
    3. ' self' → logprob: -9.875375747680664
    4. 'pass' → logprob: -11.375375747680664
    5. 'class' → logprob: -11.750375747680664
    6. '   ' → logprob: -12.250375747680664
    7. 'Encoder' → logprob: -13.500375747680664
    8. 'import' → logprob: -14.500375747680664
    9. 'encoder' → logprob: -14.625375747680664
    10. 'def' → logprob: -14.875375747680664

Token 703: '.encoder' (ID: 151105)
  Prédit: '.encoder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.encoder' → logprob: -0.0928649827837944
    2. '.p' → logprob: -3.592864990234375
    3. '.mapping' → logprob: -4.092864990234375
    4. '.key' → logprob: -4.217864990234375
    5. '.shift' → logprob: -4.592864990234375
    6. '.swap' → logprob: -5.842864990234375
    7. '.encode' → logprob: -6.342864990234375
    8. '.pl' → logprob: -6.467864990234375
    9. '.al' → logprob: -6.467864990234375
    10. '.v' → logprob: -6.592864990234375

Token 704: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029751643538475037
    2. '=' → logprob: -3.5297515392303467
    3. ' =
' → logprob: -14.029751777648926
    4. ' ' → logprob: -15.529751777648926
    5. '<|end|>' → logprob: -16.77975082397461
    6. '_encoder' → logprob: -17.65475082397461
    7. '=
' → logprob: -17.90475082397461
    8. '   ' → logprob: -18.65475082397461
    9. '	' → logprob: -18.90475082397461
    10. '＝' → logprob: -19.40475082397461

Token 705: ' Encoder' (ID: 119259)
  Prédit: 'Encoder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Encoder' → logprob: -0.3132617771625519
    2. ' Encoder' → logprob: -1.3132617473602295
    3. 'Encode' → logprob: -17.813261032104492
    4. 'Encoding' → logprob: -17.813261032104492
    5. 'Encoded' → logprob: -18.563261032104492
    6. '_encoder' → logprob: -18.938261032104492
    7. ' Encode' → logprob: -19.438261032104492
    8. ' encoder' → logprob: -19.688261032104492
    9. 'encoder' → logprob: -20.188261032104492
    10. 'Decoder' → logprob: -20.688261032104492

Token 706: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8183704018592834
    2. '()' → logprob: -1.1933703422546387
    3. '()
' → logprob: -1.4433703422546387
    4. '
' → logprob: -4.818370342254639
    5. '<|end|>' → logprob: -4.943370342254639
    6. '   ' → logprob: -5.818370342254639
    7. 'self' → logprob: -7.443370342254639
    8. ' ' → logprob: -7.943370342254639
    9. 'def' → logprob: -9.443370819091797
    10. '<|end|>' → logprob: -10.193370819091797

Token 707: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005587925668805838
    2. 'self' → logprob: -5.880588054656982
    3. '   ' → logprob: -6.130588054656982
    4. ' self' → logprob: -7.505588054656982
    5. 'def' → logprob: -10.505587577819824
    6. ' ' → logprob: -12.505587577819824
    7. '	self' → logprob: -12.505587577819824
    8. '
' → logprob: -12.630587577819824
    9. '           ' → logprob: -12.755587577819824
    10. '        ' → logprob: -12.755587577819824

Token 708: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00027444821898825467
    2. '       ' → logprob: -8.250274658203125
    3. ' self' → logprob: -11.250274658203125
    4. '
' → logprob: -16.250274658203125
    5. '   ' → logprob: -16.875274658203125
    6. '	self' → logprob: -17.750274658203125
    7. '           ' → logprob: -18.625274658203125
    8. '      ' → logprob: -18.875274658203125
    9. 'def' → logprob: -19.250274658203125
    10. '        ' → logprob: -19.625274658203125

Token 709: '.decoder' (ID: 166487)
  Prédit: '.decoder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.decoder' → logprob: -9.746380237629637e-05
    2. 'decoder' → logprob: -9.250097274780273
    3. '.encoder' → logprob: -13.625097274780273
    4. '.dec' → logprob: -17.000097274780273
    5. '_decoder' → logprob: -18.000097274780273
    6. '.decor' → logprob: -18.125097274780273
    7. 'Decoder' → logprob: -18.250097274780273
    8. '.' → logprob: -18.250097274780273
    9. '.decode' → logprob: -18.875097274780273
    10. ' decoder' → logprob: -19.000097274780273

Token 710: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5232776999473572
    2. ' =' → logprob: -0.8982776999473572
    3. '()' → logprob: -9.398277282714844
    4. '   ' → logprob: -10.523277282714844
    5. '.' → logprob: -11.023277282714844
    6. '.decode' → logprob: -11.898277282714844
    7. '=
' → logprob: -12.773277282714844
    8. '_decoder' → logprob: -12.898277282714844
    9. ' =
' → logprob: -13.148277282714844
    10. '       ' → logprob: -13.398277282714844

Token 711: ' Decoder' (ID: 129249)
  Prédit: 'Decoder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Decoder' → logprob: -0.011048054322600365
    2. ' Decoder' → logprob: -4.511047840118408
    3. 'Encoder' → logprob: -16.38604736328125
    4. 'Decode' → logprob: -16.88604736328125
    5. 'Dec' → logprob: -18.01104736328125
    6. '_decoder' → logprob: -18.51104736328125
    7. ' decoder' → logprob: -19.01104736328125
    8. 'Decoded' → logprob: -19.01104736328125
    9. 'Coder' → logprob: -19.51104736328125
    10. ' Encoder' → logprob: -19.88604736328125

Token 712: '()

' (ID: 5874)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 713: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03623247891664505
    2. 'def' → logprob: -3.6612324714660645
    3. '
' → logprob: -5.0362324714660645
    4. ' def' → logprob: -5.7862324714660645
    5. '    
' → logprob: -8.286232948303223
    6. '	def' → logprob: -10.161232948303223
    7. '```' → logprob: -11.786232948303223
    8. ' 
' → logprob: -12.411232948303223
    9. '<|end|>' → logprob: -12.911232948303223
    10. '        
' → logprob: -13.036232948303223

Token 714: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.627176768844947e-05
    2. ' def' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.625096321105957
    4. 'de' → logprob: -18.25009536743164
    5. ' ' → logprob: -19.00009536743164
    6. 'd' → logprob: -20.12509536743164
    7. '	def' → logprob: -20.75009536743164
    8. '
' → logprob: -22.12509536743164
    9. '    
' → logprob: -22.50009536743164
    10. '```' → logprob: -22.75009536743164

Token 715: ' transform' (ID: 7118)
  Prédit: 'encode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'encode' → logprob: -0.5281816124916077
    2. ' encode' → logprob: -0.9031816124916077
    3. 'encrypt' → logprob: -5.653181552886963
    4. ' encrypt' → logprob: -6.903181552886963
    5. 'p' → logprob: -8.153182029724121
    6. ' peter' → logprob: -9.653182029724121
    7. ' p' → logprob: -10.153182029724121
    8. '_encode' → logprob: -10.528182029724121
    9. 'rotate' → logprob: -10.778182029724121
    10. ' enc' → logprob: -10.778182029724121

Token 716: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005773788783699274
    2. '(' → logprob: -5.255774021148682
    3. '_text' → logprob: -7.755774021148682
    4. ' (' → logprob: -10.255773544311523
    5. 'self' → logprob: -10.880773544311523
    6. '_string' → logprob: -11.880773544311523
    7. '_key' → logprob: -12.005773544311523
    8. '_cipher' → logprob: -12.380773544311523
    9. '(s' → logprob: -12.505773544311523
    10. '_' → logprob: -12.630773544311523

Token 717: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.464347173576243e-05
    2. 'self' → logprob: -11.00003433227539
    3. ' ,' → logprob: -11.25003433227539
    4. ',text' → logprob: -12.62503433227539
    5. '_,' → logprob: -14.50003433227539
    6. '_text' → logprob: -15.37503433227539
    7. '   ' → logprob: -15.50003433227539
    8. 'text' → logprob: -16.00003433227539
    9. ',self' → logprob: -16.00003433227539
    10. ',input' → logprob: -16.25003433227539

Token 718: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.11725184321403503
    2. ' text' → logprob: -2.3672518730163574
    3. 'self' → logprob: -4.242251873016357
    4. ' self' → logprob: -6.742251873016357
    5. 'plaintext' → logprob: -6.867251873016357
    6. ' plaintext' → logprob: -9.1172513961792
    7. 'input' → logprob: -9.8672513961792
    8. 'message' → logprob: -10.1172513961792
    9. ' input' → logprob: -10.6172513961792
    10. 's' → logprob: -10.7422513961792

Token 719: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016482800710946321
    2. '):' → logprob: -6.501648426055908
    3. ',' → logprob: -9.00164794921875
    4. ' :' → logprob: -11.62664794921875
    5. ':str' → logprob: -11.62664794921875
    6. '):
' → logprob: -12.87664794921875
    7. ')' → logprob: -13.50164794921875
    8. ' ):' → logprob: -14.62664794921875
    9. '   ' → logprob: -14.87664794921875
    10. '}:' → logprob: -17.12664794921875

Token 720: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.25193870067596436
    2. 'str' → logprob: -1.5019387006759644
    3. ')' → logprob: -12.001938819885254
    4. 'self' → logprob: -12.751938819885254
    5. ' self' → logprob: -15.626938819885254
    6. '[str' → logprob: -16.001937866210938
    7. ':str' → logprob: -16.251937866210938
    8. 's' → logprob: -16.251937866210938
    9. '(str' → logprob: -17.376937866210938
    10. '=str' → logprob: -17.376937866210938

Token 721: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018613664724398404
    2. ',' → logprob: -9.1251859664917
    3. '):' → logprob: -9.8751859664917
    4. ' )' → logprob: -11.0001859664917
    5. ':' → logprob: -12.8751859664917
    6. ')->' → logprob: -13.0001859664917
    7. '):
' → logprob: -13.1251859664917
    8. '   ' → logprob: -13.3751859664917
    9. '       ' → logprob: -15.2501859664917
    10. '`)' → logprob: -15.2501859664917

Token 722: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02262449637055397
    2. ' ->' → logprob: -4.147624492645264
    3. ':' → logprob: -5.272624492645264
    4. '->' → logprob: -6.772624492645264
    5. ')->' → logprob: -8.897624969482422
    6. '   ' → logprob: -9.522624969482422
    7. ' )' → logprob: -9.772624969482422
    8. ' )->' → logprob: -11.772624969482422
    9. '):' → logprob: -12.147624969482422
    10. ',' → logprob: -12.397624969482422

Token 723: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.25193148851394653
    2. ' str' → logprob: -1.5019314289093018
    3. 'None' → logprob: -14.876931190490723
    4. 'list' → logprob: -15.126931190490723
    5. 'int' → logprob: -15.251931190490723
    6. 'bool' → logprob: -15.376931190490723
    7. 's' → logprob: -15.376931190490723
    8. 'List' → logprob: -15.626931190490723
    9. '[str' → logprob: -15.751931190490723
    10. 'class' → logprob: -16.00193214416504

Token 724: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01409709732979536
    2. ':
' → logprob: -4.514097213745117
    3. '       ' → logprob: -6.139097213745117
    4. '):' → logprob: -7.764097213745117
    5. '):
' → logprob: -8.014097213745117
    6. ',' → logprob: -10.764097213745117
    7. '():' → logprob: -10.764097213745117
    8. ')' → logprob: -10.889097213745117
    9. '():
' → logprob: -11.014097213745117
    10. '   ' → logprob: -11.514097213745117

Token 725: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004742831224575639
    2. 'encoded' → logprob: -8.375473976135254
    3. 'text' → logprob: -9.000473976135254
    4. 'trans' → logprob: -9.875473976135254
    5. 'bits' → logprob: -11.250473976135254
    6. 'shift' → logprob: -11.375473976135254
    7. 'p' → logprob: -11.625473976135254
    8. 'result' → logprob: -12.125473976135254
    9. 'bit' → logprob: -12.750473976135254
    10. 'input' → logprob: -12.750473976135254

Token 726: ' #' (ID: 1069)
  Prédit: 'encoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'encoded' → logprob: -0.004158534109592438
    2. 'bits' → logprob: -5.8791584968566895
    3. '       ' → logprob: -7.3791584968566895
    4. ' encoded' → logprob: -8.004158973693848
    5. 'bit' → logprob: -9.254158973693848
    6. '#' (adapté à ' #') → logprob: -9.754158973693848
    7. 'p' → logprob: -10.004158973693848
    8. 'text' → logprob: -10.504158973693848
    9. 'words' → logprob: -10.754158973693848
    10. 'binary' → logprob: -11.129158973693848

Token 727: ' ' (ID: 220)
  Prédit: 'encoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'encoded' → logprob: -0.0023827841505408287
    2. 'bits' → logprob: -6.127382755279541
    3. 'bit' → logprob: -9.3773832321167
    4. ' encoded' → logprob: -10.5023832321167
    5. '#' → logprob: -11.0023832321167
    6. 'binary' → logprob: -11.0023832321167
    7. 'enc' → logprob: -12.0023832321167
    8. 'encoder' → logprob: -12.3773832321167
    9. 'text' → logprob: -12.5023832321167
    10. 'filtered' → logprob: -12.7523832321167

Token 728: '1' (ID: 16)
  Prédit: 'encoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'encoded' → logprob: -0.0029433518648147583
    2. 'bits' → logprob: -5.877943515777588
    3. 'bit' → logprob: -9.37794303894043
    4. 'binary' → logprob: -11.12794303894043
    5. '#' → logprob: -11.37794303894043
    6. 'decoded' → logprob: -12.00294303894043
    7. 'enc' → logprob: -12.50294303894043
    8. ' encoded' → logprob: -12.50294303894043
    9. 'coded' → logprob: -13.12794303894043
    10. 'step' → logprob: -13.12794303894043

Token 729: '.' (ID: 13)
  Prédit: 'encoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'encoded' → logprob: -0.548844039440155
    2. ' encoded' → logprob: -0.923844039440155
    3. '.' → logprob: -4.173843860626221
    4. '_encoded' → logprob: -5.173843860626221
    5. '       ' → logprob: -5.798843860626221
    6. '
' → logprob: -7.923843860626221
    7. 'Encoded' → logprob: -8.423844337463379
    8. 'st' → logprob: -9.173844337463379
    9. '(encoded' → logprob: -9.173844337463379
    10. '        
' → logprob: -9.548844337463379

Token 730: ' Encode' (ID: 117866)
  Prédit: 'encoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'encoded' → logprob: -0.002112193498760462
    2. 'uppercase' → logprob: -6.87711238861084
    3. 'upper' → logprob: -8.37711238861084
    4. 'bits' → logprob: -8.75211238861084
    5. ' encoded' → logprob: -8.75211238861084
    6. 'text' → logprob: -9.00211238861084
    7. 'binary' → logprob: -9.75211238861084
    8. '#' → logprob: -9.87711238861084
    9. 'bit' → logprob: -9.87711238861084
    10. 'Encode' → logprob: -9.87711238861084

Token 731: ' input' (ID: 3422)
  Prédit: 'encoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'encoded' → logprob: -0.5381600856781006
    2. '_bits' → logprob: -1.5381600856781006
    3. ' encoded' → logprob: -2.5381600856781006
    4. '(encoded' → logprob: -3.1631600856781006
    5. 'text' → logprob: -3.4131600856781006
    6. '_encoded' → logprob: -3.6631600856781006
    7. '       ' → logprob: -4.28816032409668
    8. ' text' → logprob: -6.16316032409668
    9. '_text' → logprob: -6.53816032409668
    10. 'bits' → logprob: -6.66316032409668

Token 732: ' text' (ID: 2201)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.002597895683720708
    2. '_encoded' → logprob: -6.627597808837891
    3. ' =' → logprob: -7.752597808837891
    4. '_text' → logprob: -8.12759780883789
    5. 'encoded' → logprob: -8.37759780883789
    6. '_' → logprob: -9.12759780883789
    7. '       ' → logprob: -9.75259780883789
    8. 'bits' → logprob: -9.87759780883789
    9. '=' → logprob: -10.25259780883789
    10. 'text' → logprob: -11.37759780883789

Token 733: ' chars' (ID: 47991)
  Prédit: 'encoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'encoded' → logprob: -0.4065872132778168
    2. '       ' → logprob: -2.0315871238708496
    3. '_bits' → logprob: -2.1565871238708496
    4. ' encoded' → logprob: -3.1565871238708496
    5. '(encoded' → logprob: -3.7815871238708496
    6. '_encoded' → logprob: -4.53158712387085
    7. ' bits' → logprob: -5.53158712387085
    8. 'bits' → logprob: -5.65658712387085
    9. ',' → logprob: -6.28158712387085
    10. '(bits' → logprob: -7.28158712387085

Token 734: ' into' (ID: 1511)
  Prédit: ' encoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' encoded' → logprob: -0.5273792743682861
    2. 'encoded' → logprob: -1.6523792743682861
    3. '       ' → logprob: -2.652379274368286
    4. ' =' → logprob: -2.902379274368286
    5. '(encoded' → logprob: -3.277379274368286
    6. '_encoded' → logprob: -4.152379035949707
    7. ' into' → logprob: -4.277379035949707
    8. ' as' → logprob: -4.527379035949707
    9. ' to' → logprob: -5.402379035949707
    10. '=' → logprob: -5.902379035949707

Token 735: ' variable' (ID: 11076)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.043026819825172424
    2. ' bits' → logprob: -3.793026924133301
    3. 'bit' → logprob: -4.668026924133301
    4. 'encoded' → logprob: -4.668026924133301
    5. 'binary' → logprob: -7.418026924133301
    6. ' bit' → logprob: -9.5430269241333
    7. ' encoded' → logprob: -9.5430269241333
    8. 'self' → logprob: -10.0430269241333
    9. '_bits' → logprob: -12.2930269241333
    10. 'a' → logprob: -12.6680269241333

Token 736: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.570055365562439
    2. '-length' → logprob: -1.320055365562439
    3. ' length' → logprob: -1.820055365562439
    4. '   ' → logprob: -5.6950554847717285
    5. '_length' → logprob: -6.5700554847717285
    6. ' ' → logprob: -7.8200554847717285
    7. 'bit' → logprob: -9.82005500793457
    8. '  ' → logprob: -10.44505500793457
    9. '```' → logprob: -10.69505500793457
    10. '    ' → logprob: -10.82005500793457

Token 737: ' code' (ID: 3490)
  Prédit: ' bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.13067924976348877
    2. ' bit' → logprob: -2.880679130554199
    3. ' code' → logprob: -3.755679130554199
    4. ' encoded' → logprob: -4.380679130554199
    5. ' codes' → logprob: -4.755679130554199
    6. 'bits' → logprob: -4.880679130554199
    7. '_bits' → logprob: -5.380679130554199
    8. 'encoded' → logprob: -5.505679130554199
    9. 'code' → logprob: -6.380679130554199
    10. 'codes' → logprob: -6.380679130554199

Token 738: ' bits' (ID: 18189)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7584995627403259
    2. 'encoded' → logprob: -1.1334996223449707
    3. ' encoded' → logprob: -2.3834996223449707
    4. '(encoded' → logprob: -2.8834996223449707
    5. ' bits' → logprob: -4.008499622344971
    6. '_bits' → logprob: -4.008499622344971
    7. '(bits' → logprob: -5.008499622344971
    8. ',' → logprob: -5.258499622344971
    9. 'bits' → logprob: -5.508499622344971
    10. ':' → logprob: -6.258499622344971

Token 739: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19026221334934235
    2. 'encoded' → logprob: -1.9402621984481812
    3. ' encoded' → logprob: -3.8152623176574707
    4. ',' → logprob: -5.940262317657471
    5. '(encoded' → logprob: -6.315262317657471
    6. '
' → logprob: -6.690262317657471
    7. ':' → logprob: -7.815262317657471
    8. '        
' → logprob: -8.065261840820312
    9. ' bits' → logprob: -8.315261840820312
    10. '_encoded' → logprob: -8.440261840820312

Token 740: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5292865037918091
    2. 'encoded' → logprob: -1.029286503791809
    3. ' encoded' → logprob: -3.0292863845825195
    4. ' bits' → logprob: -5.7792863845825195
    5. 'bits' → logprob: -6.1542863845825195
    6. '(encoded' → logprob: -10.02928638458252
    7. 'bit' → logprob: -10.27928638458252
    8. '```' → logprob: -11.15428638458252
    9. 'code' → logprob: -11.65428638458252
    10. ' bit' → logprob: -11.65428638458252

Token 741: ' encoded' (ID: 41096)
  Prédit: 'encoded'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'encoded' (adapté à ' encoded') → logprob: -0.0873190313577652
    2. ' encoded' → logprob: -3.0873191356658936
    3. '       ' → logprob: -3.5873191356658936
    4. 'bits' → logprob: -4.8373188972473145
    5. ' bits' → logprob: -6.0873188972473145
    6. 'bit' → logprob: -10.337319374084473
    7. 'code' → logprob: -10.837319374084473
    8. 'coded' → logprob: -11.087319374084473
    9. '(encoded' → logprob: -11.212319374084473
    10. '   ' → logprob: -11.712319374084473

Token 742: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -9.253090865968261e-06
    2. '_' → logprob: -12.250009536743164
    3. ' =' → logprob: -13.500009536743164
    4. '=_' → logprob: -13.625009536743164
    5. '_code' → logprob: -14.250009536743164
    6. '=' → logprob: -14.500009536743164
    7. '_encoded' → logprob: -15.875009536743164
    8. ' _' → logprob: -16.000009536743164
    9. '_codes' → logprob: -16.125009536743164
    10. '_str' → logprob: -16.875009536743164

Token 743: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020678490400314
    2. '=' → logprob: -2.3502068519592285
    3. ' ' → logprob: -16.60020637512207
    4. ' +=' → logprob: -16.85020637512207
    5. ' ='' → logprob: -17.85020637512207
    6. '+=' → logprob: -19.35020637512207
    7. '＝' → logprob: -19.35020637512207
    8. ')' → logprob: -19.47520637512207
    9. ' ="' → logprob: -19.47520637512207
    10. '        ' → logprob: -19.72520637512207

Token 744: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03804171830415726
    2. ' self' → logprob: -3.288041830062866
    3. '       ' → logprob: -15.663042068481445
    4. '	self' → logprob: -17.038042068481445
    5. '(self' → logprob: -17.538042068481445
    6. '=self' → logprob: -19.913042068481445
    7. '[self' → logprob: -19.913042068481445
    8. '
' → logprob: -20.538042068481445
    9. '        
' → logprob: -21.163042068481445
    10. '`' → logprob: -21.288042068481445

Token 745: '.encoder' (ID: 151105)
  Prédit: '.encoder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.encoder' → logprob: -2.4987974029500037e-05
    2. 'encoder' → logprob: -10.625024795532227
    3. '.' → logprob: -14.875024795532227
    4. '.decoder' → logprob: -16.625024795532227
    5. 'self' → logprob: -16.750024795532227
    6. '.encode' → logprob: -17.375024795532227
    7. ' .' → logprob: -18.625024795532227
    8. '.enc' → logprob: -18.875024795532227
    9. '.encoding' → logprob: -20.000024795532227
    10. '.transform' → logprob: -20.375024795532227

Token 746: '.encode' (ID: 31812)
  Prédit: '.encode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.encode' → logprob: -2.7968066206085496e-05
    2. '.' → logprob: -10.500027656555176
    3. 'encode' → logprob: -15.500027656555176
    4. ' .' → logprob: -16.625028610229492
    5. '.decode' → logprob: -17.250028610229492
    6. '.Encode' → logprob: -17.875028610229492
    7. '.encoder' → logprob: -18.125028610229492
    8. '.enc' → logprob: -19.000028610229492
    9. '_encode' → logprob: -19.125028610229492
    10. '.encrypt' → logprob: -19.750028610229492

Token 747: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -2.1888679839321412e-05
    2. '(' → logprob: -10.750021934509277
    3. ' (' → logprob: -15.875021934509277
    4. '(
' → logprob: -16.87502098083496
    5. '(input' → logprob: -17.12502098083496
    6. '(txt' → logprob: -17.37502098083496
    7. 'text' → logprob: -17.75002098083496
    8. '(Text' → logprob: -17.87502098083496
    9. '(tex' → logprob: -17.87502098083496
    10. '(t' → logprob: -18.12502098083496

Token 748: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006513170665130019
    2. ')
' → logprob: -7.3756513595581055
    3. '       ' → logprob: -10.625651359558105
    4. ' )' → logprob: -16.00065040588379
    5. ')
' → logprob: -16.00065040588379
    6. ')

' → logprob: -16.37565040588379
    7. ')return' → logprob: -16.75065040588379
    8. '),' → logprob: -17.00065040588379
    9. '
' → logprob: -17.25065040588379
    10. '   ' → logprob: -17.75065040588379

Token 749: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16361109912395477
    2. '
' → logprob: -1.9136110544204712
    3. '        
' → logprob: -6.538610935211182
    4. 'decoded' → logprob: -7.038610935211182
    5. '#' → logprob: -8.03861141204834
    6. 'encoded' → logprob: -8.16361141204834
    7. 'trans' → logprob: -9.41361141204834
    8. 'return' → logprob: -9.41361141204834
    9. '```' → logprob: -9.41361141204834
    10. '    
' → logprob: -11.28861141204834

Token 750: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34283921122550964
    2. 'trans' → logprob: -2.092839241027832
    3. 'sw' → logprob: -2.717839241027832
    4. '#' (adapté à ' #') → logprob: -2.717839241027832
    5. 'rot' → logprob: -5.217839241027832
    6. 'decoded' → logprob: -5.342839241027832
    7. 'result' → logprob: -5.842839241027832
    8. ' #' → logprob: -5.967839241027832
    9. 're' → logprob: -6.092839241027832
    10. 'shift' → logprob: -6.342839241027832

Token 751: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7529163956642151
    2. 'sw' → logprob: -1.3779163360595703
    3. 'rot' → logprob: -2.2529163360595703
    4. 'trans' → logprob: -2.3779163360595703
    5. 'encoded' → logprob: -3.3779163360595703
    6. 're' → logprob: -4.87791633605957
    7. 'bit' → logprob: -5.50291633605957
    8. 'shift' → logprob: -5.62791633605957
    9. '   ' → logprob: -5.87791633605957
    10. 'n' → logprob: -5.87791633605957

Token 752: '2' (ID: 17)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08518481254577637
    2. 'trans' → logprob: -3.8351848125457764
    3. 'sw' → logprob: -4.0851850509643555
    4. 'encoded' → logprob: -4.4601850509643555
    5. 'rot' → logprob: -4.5851850509643555
    6. 'decoded' → logprob: -5.7101850509643555
    7. 'bit' → logprob: -6.3351850509643555
    8. 'fixed' → logprob: -6.4601850509643555
    9. 'shift' → logprob: -6.4601850509643555
    10. 're' → logprob: -6.4601850509643555

Token 753: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.015559270977973938
    2. '       ' → logprob: -4.265559196472168
    3. '_encoded' → logprob: -8.390559196472168
    4. 'encoded' → logprob: -8.515559196472168
    5. 'decoded' → logprob: -8.640559196472168
    6. ',' → logprob: -8.890559196472168
    7. '#' → logprob: -9.265559196472168
    8. ' encoded' → logprob: -9.265559196472168
    9. '.
' → logprob: -9.390559196472168
    10. '=' → logprob: -9.640559196472168

Token 754: ' Split' (ID: 44687)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.661863386631012
    2. 'encoded' → logprob: -2.786863327026367
    3. 'chunk' → logprob: -2.786863327026367
    4. 'split' → logprob: -3.036863327026367
    5. 'rot' → logprob: -3.161863327026367
    6. 're' → logprob: -3.161863327026367
    7. 'group' → logprob: -3.411863327026367
    8. 'sw' → logprob: -3.411863327026367
    9. 'chunks' → logprob: -4.036863327026367
    10. 'bit' → logprob: -4.161863327026367

Token 755: ' into' (ID: 1511)
  Prédit: 'encoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'encoded' → logprob: -0.17139413952827454
    2. '(encoded' → logprob: -1.9213941097259521
    3. ' encoded' → logprob: -5.921394348144531
    4. 'into' → logprob: -6.296394348144531
    5. '_bits' → logprob: -6.421394348144531
    6. ' into' → logprob: -6.421394348144531
    7. '_encoded' → logprob: -6.796394348144531
    8. 'the' → logprob: -7.296394348144531
    9. '       ' → logprob: -7.296394348144531
    10. 'bits' → logprob: -7.921394348144531

Token 756: ' ' (ID: 220)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -0.6800968050956726
    2. '[' → logprob: -1.0550968647003174
    3. 'five' → logprob: -2.5550968647003174
    4. '5' → logprob: -3.4300968647003174
    5. 'groups' → logprob: -4.555096626281738
    6. ' chunks' → logprob: -5.055096626281738
    7. 'blocks' → logprob: -5.055096626281738
    8. '['' → logprob: -5.305096626281738
    9. 'segments' → logprob: -6.430096626281738
    10. ' five' → logprob: -6.805096626281738

Token 757: '5' (ID: 20)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03308316692709923
    2. 'chunks' → logprob: -4.908082962036133
    3. '[f' → logprob: -5.033082962036133
    4. '[ch' → logprob: -5.158082962036133
    5. '[i' → logprob: -5.283082962036133
    6. '[text' → logprob: -5.908082962036133
    7. '['' → logprob: -6.783082962036133
    8. '5' → logprob: -7.033082962036133
    9. '[len' → logprob: -7.533082962036133
    10. 'five' → logprob: -7.658082962036133

Token 758: '-bit' (ID: 33736)
  Prédit: '-bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-bit' → logprob: -0.10854656994342804
    2. 'bit' → logprob: -2.358546495437622
    3. '-character' → logprob: -6.108546733856201
    4. ' -' → logprob: -6.233546733856201
    5. 'bits' → logprob: -6.733546733856201
    6. '-' → logprob: -7.483546733856201
    7. 'chunks' → logprob: -7.733546733856201
    8. '_bits' → logprob: -7.858546733856201
    9. '_bit' → logprob: -8.108546257019043
    10. '-b' → logprob: -8.233546257019043

Token 759: ' chunks' (ID: 53440)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -0.0872521698474884
    2. ' chunks' → logprob: -2.587252140045166
    3. 'blocks' → logprob: -5.212252140045166
    4. 'groups' → logprob: -6.462252140045166
    5. 'segments' → logprob: -6.962252140045166
    6. '_chunks' → logprob: -9.087252616882324
    7. ' blocks' → logprob: -9.462252616882324
    8. ' segments' → logprob: -10.337252616882324
    9. 'pieces' → logprob: -10.587252616882324
    10. 'tokens' → logprob: -10.712252616882324

Token 760: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019257817417383194
    2. ',' → logprob: -4.14425802230835
    3. 'chunks' → logprob: -6.76925802230835
    4. '```' → logprob: -7.51925802230835
    5. 'tokens' → logprob: -8.894257545471191
    6. ' and' → logprob: -9.019257545471191
    7. '
' → logprob: -9.019257545471191
    8. '#' → logprob: -9.019257545471191
    9. '<|end|>' → logprob: -9.144257545471191
    10. 'split' → logprob: -9.269257545471191

Token 761: ' already' (ID: 4279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3566312789916992
    2. 'encoded' → logprob: -1.8566312789916992
    3. ' encoded' → logprob: -2.981631278991699
    4. ' not' → logprob: -3.731631278991699
    5. '
' → logprob: -4.231631278991699
    6. 'not' → logprob: -4.231631278991699
    7. '(encoded' → logprob: -4.731631278991699
    8. 'len' → logprob: -5.481631278991699
    9. '#' → logprob: -5.481631278991699
    10. '        
' → logprob: -5.856631278991699

Token 762: ' represented' (ID: 27328)
  Prédit: 'done'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'done' → logprob: -0.049776721745729446
    2. 'handled' → logprob: -3.049776792526245
    3. ' done' → logprob: -7.674776554107666
    4. 'ens' → logprob: -7.799776554107666
    5. ' handled' → logprob: -9.424777030944824
    6. 'implemented' → logprob: -9.799777030944824
    7. '       ' → logprob: -9.924777030944824
    8. 'covered' → logprob: -10.174777030944824
    9. '   ' → logprob: -10.799777030944824
    10. ' ensured' → logprob: -11.174777030944824

Token 763: ' by' (ID: 656)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7317823767662048
    2. ' in' → logprob: -0.7317823767662048
    3. ' by' → logprob: -4.23178243637085
    4. 'by' → logprob: -5.10678243637085
    5. ',' → logprob: -5.23178243637085
    6. '.' → logprob: -5.35678243637085
    7. ' as' → logprob: -6.10678243637085
    8. '<|end|>' → logprob: -6.10678243637085
    9. '       ' → logprob: -7.10678243637085
    10. ' here' → logprob: -7.23178243637085

Token 764: ' encoded' (ID: 41096)
  Prédit: 'encoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'encoded' → logprob: -0.09585490077733994
    2. 'len' → logprob: -2.5958549976348877
    3. 'the' → logprob: -5.470854759216309
    4. 'self' → logprob: -5.720854759216309
    5. ' encoded' → logprob: -5.970854759216309
    6. ''' → logprob: -6.345854759216309
    7. '''' → logprob: -6.595854759216309
    8. '#' → logprob: -7.720854759216309
    9. 'range' → logprob: -7.970854759216309
    10. ' len' → logprob: -8.095854759216309

Token 765: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -5.200166469876422e-06
    2. '_chunks' → logprob: -12.250004768371582
    3. 'bits' → logprob: -15.625004768371582
    4. '_' → logprob: -16.0000057220459
    5. '_tokens' → logprob: -16.8750057220459
    6. '```' → logprob: -17.7500057220459
    7. '_bit' → logprob: -18.0000057220459
    8. '_BITS' → logprob: -18.0000057220459
    9. '_parts' → logprob: -18.3750057220459
    10. ' bits' → logprob: -19.0000057220459

Token 766: ' padded' (ID: 71498)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0706542581319809
    2. '
' → logprob: -3.9456541538238525
    3. ',' → logprob: -4.445654392242432
    4. '.split' → logprob: -4.445654392242432
    5. '#' → logprob: -4.570654392242432
    6. '.' → logprob: -6.070654392242432
    7. '<|end|>' → logprob: -6.195654392242432
    8. '<|end|>' → logprob: -6.570654392242432
    9. '```' → logprob: -6.695654392242432
    10. 'chunks' → logprob: -6.945654392242432

Token 767: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49489712715148926
    2. ' with' → logprob: -1.7448971271514893
    3. 'with' → logprob: -2.2448971271514893
    4. ' for' → logprob: -3.6198971271514893
    5. ' to' → logprob: -3.9948971271514893
    6. 'for' → logprob: -4.61989688873291
    7. ' and' → logprob: -4.61989688873291
    8. ',' → logprob: -4.61989688873291
    9. '_bits' → logprob: -4.61989688873291
    10. '.' → logprob: -4.86989688873291

Token 768: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014844004064798355
    2. '#' → logprob: -4.889843940734863
    3. 'trans' → logprob: -5.764843940734863
    4. '   ' → logprob: -6.764843940734863
    5. '
' → logprob: -7.014843940734863
    6. 'result' → logprob: -7.264843940734863
    7. ' #' → logprob: -7.889843940734863
    8. 'decoded' → logprob: -8.139843940734863
    9. '```' → logprob: -8.889843940734863
    10. ' transformed' → logprob: -9.139843940734863

Token 769: ' #' (ID: 1069)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.5989251732826233
    2. 'rot' → logprob: -1.9739251136779785
    3. '       ' → logprob: -2.0989251136779785
    4. 'sw' → logprob: -2.3489251136779785
    5. 'result' → logprob: -3.5989251136779785
    6. '#' (adapté à ' #') → logprob: -3.7239251136779785
    7. 'decoded' → logprob: -4.4739251136779785
    8. 're' → logprob: -4.8489251136779785
    9. 'shift' → logprob: -4.9739251136779785
    10. 'encoded' → logprob: -5.7239251136779785

Token 770: ' ' (ID: 220)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.6975283026695251
    2. 'sw' → logprob: -1.57252836227417
    3. 'rot' → logprob: -1.94752836227417
    4. '#' → logprob: -2.82252836227417
    5. 'result' → logprob: -4.44752836227417
    6. 'shift' → logprob: -4.57252836227417
    7. '   ' → logprob: -4.69752836227417
    8. 're' → logprob: -4.82252836227417
    9. 'step' → logprob: -5.07252836227417
    10. '       ' → logprob: -5.19752836227417

Token 771: '3' (ID: 18)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0042502880096436
    2. 'trans' → logprob: -1.5042502880096436
    3. 'sw' → logprob: -1.8792502880096436
    4. 'decoded' → logprob: -2.3792502880096436
    5. 'rot' → logprob: -2.8792502880096436
    6. 'encoded' → logprob: -3.6292502880096436
    7. 're' → logprob: -4.129250526428223
    8. 'sub' → logprob: -4.254250526428223
    9. 'chunks' → logprob: -5.004250526428223
    10. 'mapped' → logprob: -5.129250526428223

Token 772: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0014179765712469816
    2. '       ' → logprob: -6.626418113708496
    3. '.
' → logprob: -10.626418113708496
    4. 'decoded' → logprob: -11.126418113708496
    5. ' .' → logprob: -11.251418113708496
    6. '   ' → logprob: -11.876418113708496
    7. '#' → logprob: -12.126418113708496
    8. '_bits' → logprob: -12.126418113708496
    9. ' bits' → logprob: -12.376418113708496
    10. '_encoded' → logprob: -12.501418113708496

Token 773: ' Decode' (ID: 98029)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -2.1899337768554688
    2. 'encoded' → logprob: -2.3149337768554688
    3. 'mapped' → logprob: -2.5649337768554688
    4. 'trans' → logprob: -2.6899337768554688
    5. 'sub' → logprob: -2.9399337768554688
    6. 'per' → logprob: -3.0649337768554688
    7. 'sh' → logprob: -3.0649337768554688
    8. 'decoded' → logprob: -3.1899337768554688
    9. 'Shuffle' → logprob: -3.5649337768554688
    10. 'scr' → logprob: -3.5649337768554688

Token 774: ' each' (ID: 2454)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9014834761619568
    2. 'return' → logprob: -1.4014835357666016
    3. 'decoded' → logprob: -1.6514835357666016
    4. '_bits' → logprob: -2.5264835357666016
    5. 'result' → logprob: -3.2764835357666016
    6. 'bits' → logprob: -4.401483535766602
    7. 'output' → logprob: -4.901483535766602
    8. ' return' → logprob: -5.401483535766602
    9. '(decoded' → logprob: -6.026483535766602
    10. '5' → logprob: -6.526483535766602

Token 775: ' ' (ID: 220)
  Prédit: 'chunk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chunk' → logprob: -0.26239413022994995
    2. '5' → logprob: -2.0123941898345947
    3. ' chunk' → logprob: -2.3873941898345947
    4. ' ' → logprob: -5.762393951416016
    5. 'encoded' → logprob: -6.887393951416016
    6. '(chunk' → logprob: -7.387393951416016
    7. '_chunk' → logprob: -8.387393951416016
    8. 'bit' → logprob: -10.137393951416016
    9. ' five' → logprob: -10.262393951416016
    10. ' encoded' → logprob: -10.512393951416016

Token 776: '5' (ID: 20)
  Prédit: 'chunk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chunk' → logprob: -0.12771068513393402
    2. '5' → logprob: -2.1277105808258057
    3. ' chunk' → logprob: -7.377710819244385
    4. ' ' → logprob: -10.127710342407227
    5. '(chunk' → logprob: -10.127710342407227
    6. 'five' → logprob: -10.377710342407227
    7. 'encoded' → logprob: -11.377710342407227
    8. 'chunks' → logprob: -11.752710342407227
    9. '   ' → logprob: -12.127710342407227
    10. 'ch' → logprob: -12.502710342407227

Token 777: '-bit' (ID: 33736)
  Prédit: '-bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-bit' → logprob: -0.004978643264621496
    2. '_bits' → logprob: -5.754978656768799
    3. '-b' → logprob: -7.129978656768799
    4. 'bit' → logprob: -7.254978656768799
    5. 'bits' → logprob: -9.12997817993164
    6. '_bit' → logprob: -9.50497817993164
    7. '-' → logprob: -9.87997817993164
    8. '```' → logprob: -11.25497817993164
    9. ' bits' → logprob: -11.37997817993164
    10. ')-' → logprob: -11.50497817993164

Token 778: ' chunk' (ID: 23958)
  Prédit: 'chunk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chunk' → logprob: -0.0007461408386006951
    2. 'chunks' → logprob: -8.00074577331543
    3. ' chunk' → logprob: -8.75074577331543
    4. 'block' → logprob: -9.00074577331543
    5. 'segment' → logprob: -9.25074577331543
    6. '_chunk' → logprob: -11.75074577331543
    7. 'code' → logprob: -11.87574577331543
    8. 'ch' → logprob: -12.37574577331543
    9. 'bit' → logprob: -12.75074577331543
    10. 'group' → logprob: -13.12574577331543

Token 779: ' using' (ID: 2360)
  Prédit: 'decoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'decoded' → logprob: -0.4461950361728668
    2. '       ' → logprob: -1.1961950063705444
    3. ' decoded' → logprob: -4.071195125579834
    4. '(decoded' → logprob: -4.321195125579834
    5. 'output' → logprob: -4.821195125579834
    6. ' to' → logprob: -5.196195125579834
    7. 'result' → logprob: -5.571195125579834
    8. ',' → logprob: -6.321195125579834
    9. ' output' → logprob: -6.571195125579834
    10. ' into' → logprob: -6.696195125579834

Token 780: ' second' (ID: 3099)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.160941481590271
    2. ' self' → logprob: -1.910941481590271
    3. ' the' → logprob: -7.9109416007995605
    4. '       ' → logprob: -8.410941123962402
    5. 'the' → logprob: -9.535941123962402
    6. '
' → logprob: -10.160941123962402
    7. '           ' → logprob: -12.285941123962402
    8. '```' → logprob: -12.285941123962402
    9. '   ' → logprob: -13.035941123962402
    10. '	self' → logprob: -13.410941123962402

Token 781: ' table' (ID: 3293)
  Prédit: ' decoder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' decoder' → logprob: -1.187679648399353
    2. 'self' → logprob: -1.812679648399353
    3. ' self' → logprob: -2.1876797676086426
    4. ' step' → logprob: -2.5626797676086426
    5. 'decoder' → logprob: -2.5626797676086426
    6. '       ' → logprob: -2.8126797676086426
    7. '_decoder' → logprob: -3.1876797676086426
    8. ' code' → logprob: -3.4376797676086426
    9. 'code' → logprob: -3.9376797676086426
    10. 'step' → logprob: -4.312679767608643

Token 782: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028573455289006233
    2. 'decoded' → logprob: -3.653573513031006
    3. ' decoded' → logprob: -6.653573513031006
    4. ',' → logprob: -8.028573036193848
    5. ' to' → logprob: -8.028573036193848
    6. '(decoded' → logprob: -9.028573036193848
    7. '
' → logprob: -9.653573036193848
    8. 'result' → logprob: -10.403573036193848
    9. 'output' → logprob: -11.028573036193848
    10. ' into' → logprob: -11.028573036193848

Token 783: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14038166403770447
    2. 'decoded' → logprob: -2.5153815746307373
    3. 'trans' → logprob: -3.1403815746307373
    4. 'result' → logprob: -5.515381813049316
    5. ' transformed' → logprob: -7.390381813049316
    6. 'return' → logprob: -7.515381813049316
    7. 'output' → logprob: -7.640381813049316
    8. 'encoded' → logprob: -7.890381813049316
    9. ' decoded' → logprob: -8.265381813049316
    10. '   ' → logprob: -9.140381813049316

Token 784: ' return' (ID: 622)
  Prédit: 'decoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decoded' → logprob: -0.01820051483809948
    2. '       ' → logprob: -4.143200397491455
    3. 'return' (adapté à ' return') → logprob: -7.393200397491455
    4. ' decoded' → logprob: -7.518200397491455
    5. 'result' → logprob: -7.643200397491455
    6. 'trans' → logprob: -7.893200397491455
    7. 'inter' → logprob: -9.518200874328613
    8. 'output' → logprob: -10.768200874328613
    9. 'dec' → logprob: -10.893200874328613
    10. ' result' → logprob: -12.268200874328613

Token 785: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005234475247561932
    2. ' self' → logprob: -5.255234241485596
    3. '       ' → logprob: -15.130234718322754
    4. '''.' → logprob: -15.380234718322754
    5. '   ' → logprob: -15.880234718322754
    6. '	self' → logprob: -16.880233764648438
    7. '(self' → logprob: -17.505233764648438
    8. '[self' → logprob: -17.880233764648438
    9. '           ' → logprob: -18.755233764648438
    10. ' ''.' → logprob: -18.880233764648438

Token 786: '.decoder' (ID: 166487)
  Prédit: '.decoder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.decoder' → logprob: -0.0002075933152809739
    2. '.encoder' → logprob: -9.000207901000977
    3. '.' → logprob: -9.625207901000977
    4. '.decode' → logprob: -11.500207901000977
    5. '.transform' → logprob: -12.000207901000977
    6. 'decoder' → logprob: -14.750207901000977
    7. '   ' → logprob: -14.875207901000977
    8. ' .' → logprob: -15.000207901000977
    9. '
' → logprob: -15.625207901000977
    10. '.dec' → logprob: -15.750207901000977

Token 787: '.decode' (ID: 30619)
  Prédit: '.decode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.decode' → logprob: -9.13388703338569e-06
    2. '.' → logprob: -11.750009536743164
    3. ' .' → logprob: -14.375009536743164
    4. 'decode' → logprob: -15.750009536743164
    5. '.decrypt' → logprob: -15.875009536743164
    6. '.encode' → logprob: -16.750009536743164
    7. ').' → logprob: -17.375009536743164
    8. '   ' → logprob: -17.500009536743164
    9. '```' → logprob: -18.000009536743164
    10. '.
' → logprob: -18.125009536743164

Token 788: '(encoded' (ID: 157395)
  Prédit: '(encoded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(encoded' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -13.12500286102295
    3. '(enc' → logprob: -14.25000286102295
    4. '(
' → logprob: -15.87500286102295
    5. 'encoded' → logprob: -16.000003814697266
    6. '(decoded' → logprob: -16.750003814697266
    7. ' (' → logprob: -16.750003814697266
    8. '('' → logprob: -17.125003814697266
    9. '(en' → logprob: -17.500003814697266
    10. '```' → logprob: -19.000003814697266

Token 789: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -3.128163257315464e-07
    2. 'bits' → logprob: -15.625
    3. '_encoded' → logprob: -16.875
    4. '_b' → logprob: -17.5
    5. '_bit' → logprob: -17.875
    6. 'ed' → logprob: -18.375
    7. '_BITS' → logprob: -18.375
    8. 'd' → logprob: -19.5
    9. '_' → logprob: -20.375
    10. '_bytes' → logprob: -20.875

Token 790: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.375
    3. '       ' → logprob: -17.125
    4. ')
' → logprob: -17.75
    5. '   ' → logprob: -17.75
    6. '))' → logprob: -18.0
    7. ')`' → logprob: -18.875
    8. '）' → logprob: -19.0
    9. '`)' → logprob: -19.875
    10. '}' → logprob: -19.875

Token 791: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 792: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4388377368450165
    2. ' test' → logprob: -1.0638377666473389
    3. ' example' → logprob: -4.68883752822876
    4. ' run' → logprob: -7.31383752822876
    5. ' decode' → logprob: -9.563838005065918
    6. ' p' → logprob: -10.438838005065918
    7. ' sample' → logprob: -11.063838005065918
    8. ' encode' → logprob: -11.063838005065918
    9. ' transform' → logprob: -11.188838005065918
    10. 'main' → logprob: -11.438838005065918

Token 793: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00025156480842269957
    2. '():
' → logprob: -8.500251770019531
    3. ' ():' → logprob: -10.000251770019531
    4. '()' → logprob: -13.000251770019531
    5. '():
' → logprob: -15.000251770019531
    6. '():

' → logprob: -17.12525177001953
    7. '(' → logprob: -17.87525177001953
    8. '()>' → logprob: -18.12525177001953
    9. '().' → logprob: -18.75025177001953
    10. ':' → logprob: -19.25025177001953

Token 794: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011410650797188282
    2. ' text' → logprob: -4.886410713195801
    3. 'text' → logprob: -6.011410713195801
    4. ' input' → logprob: -7.636410713195801
    5. 'input' → logprob: -8.3864107131958
    6. ' import' → logprob: -8.5114107131958
    7. 'import' → logprob: -8.7614107131958
    8. ' test' → logprob: -10.0114107131958
    9. 'p' → logprob: -10.3864107131958
    10. ' p' → logprob: -10.5114107131958

Token 795: ' import' (ID: 1588)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'text' → logprob: -1.2415708303451538
    2. '   ' → logprob: -1.6165708303451538
    3. 'cipher' → logprob: -1.8665708303451538
    4. ' text' → logprob: -2.1165709495544434
    5. 'p' → logprob: -2.2415709495544434
    6. ' p' → logprob: -3.4915709495544434
    7. ' cipher' → logprob: -3.8665709495544434
    8. ' input' → logprob: -3.8665709495544434
    9. 'pp' → logprob: -3.9915709495544434
    10. 'input' → logprob: -4.116570949554443

Token 796: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0031781906727701426
    2. ' sys' → logprob: -5.753178119659424
    3. '=sys' → logprob: -15.253178596496582
    4. '	sys' → logprob: -16.503177642822266
    5. '(sys' → logprob: -17.253177642822266
    6. 'random' → logprob: -17.878177642822266
    7. 'string' → logprob: -18.003177642822266
    8. 'arg' → logprob: -18.503177642822266
    9. 'io' → logprob: -18.753177642822266
    10. 'sy' → logprob: -18.753177642822266

Token 797: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09003698080778122
    2. '
' → logprob: -2.9650368690490723
    3. '    
' → logprob: -3.7150368690490723
    4. 'input' → logprob: -4.715036869049072
    5. '<|end|>' → logprob: -8.59003734588623
    6. ' input' → logprob: -8.96503734588623
    7. '  
' → logprob: -9.09003734588623
    8. '   
' → logprob: -9.59003734588623
    9. ' 
' → logprob: -9.71503734588623
    10. 'text' → logprob: -10.09003734588623

Token 798: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011374473571777344
    2. ' input' → logprob: -5.011374473571777
    3. 'input' → logprob: -5.636374473571777
    4. ' text' → logprob: -7.761374473571777
    5. ' lines' → logprob: -8.386374473571777
    6. 'text' → logprob: -8.636374473571777
    7. ' if' → logprob: -9.386374473571777
    8. ' for' → logprob: -10.511374473571777
    9. 'if' → logprob: -10.636374473571777
    10. '    
' → logprob: -10.636374473571777

Token 799: ' cipher' (ID: 56483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33862534165382385
    2. 'input' → logprob: -1.9636253118515015
    3. 'text' → logprob: -2.588625431060791
    4. ' input' → logprob: -3.088625431060791
    5. ' text' → logprob: -3.838625431060791
    6. 'if' → logprob: -6.088625431060791
    7. ' if' → logprob: -6.963625431060791
    8. 'for' → logprob: -7.463625431060791
    9. ' for' → logprob: -7.963625431060791
    10. 'args' → logprob: -8.588624954223633

Token 800: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06999312341213226
    2. '=' → logprob: -2.694993019104004
    3. '   ' → logprob: -10.444993019104004
    4. '.' → logprob: -11.694993019104004
    5. ' ' → logprob: -12.194993019104004
    6. '  ' → logprob: -12.569993019104004
    7. '=c' → logprob: -12.694993019104004
    8. '=
' → logprob: -13.569993019104004
    9. ' =
' → logprob: -13.694993019104004
    10. '.py' → logprob: -14.444993019104004

Token 801: ' Peter' (ID: 16104)
  Prédit: 'Peter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Peter' → logprob: -0.10020667314529419
    2. ' Peter' → logprob: -2.3502066135406494
    3. ' peter' → logprob: -18.35020637512207
    4. '	P' → logprob: -19.10020637512207
    5. 'P' → logprob: -19.72520637512207
    6. ' Peters' → logprob: -19.85020637512207
    7. 'Python' → logprob: -20.72520637512207
    8. ' ' → logprob: -20.85020637512207
    9. 'Pet' → logprob: -20.85020637512207
    10. ' ' → logprob: -20.97520637512207

Token 802: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -4.320199877838604e-07
    2. 'p' → logprob: -15.625
    3. ' P' → logprob: -15.875
    4. '   ' → logprob: -17.125
    5. 'PCell' → logprob: -17.25
    6. '	P' → logprob: -17.375
    7. '```' → logprob: -18.125
    8. ' ' → logprob: -18.75
    9. '<P' → logprob: -18.75
    10. '_p' → logprob: -18.875

Token 803: 'iper' (ID: 19629)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.12699277698993683
    2. 'iper' → logprob: -2.126992702484131
    3. 'Cipher' → logprob: -10.501993179321289
    4. 'p' → logprob: -11.126993179321289
    5. 'Pier' → logprob: -11.751993179321289
    6. 'Pipe' → logprob: -12.876993179321289
    7. ' Piper' → logprob: -13.001993179321289
    8. 'ip' → logprob: -13.376993179321289
    9. 'Parser' → logprob: -14.001993179321289
    10. 'Peter' → logprob: -14.251993179321289

Token 804: 'Cipher' (ID: 88994)
  Prédit: 'Cipher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cipher' → logprob: -4.320199877838604e-07
    2. 'cipher' → logprob: -15.625
    3. ' Cipher' → logprob: -16.25
    4. '_cipher' → logprob: -17.0
    5. '(cipher' → logprob: -17.875
    6. '(' → logprob: -19.125
    7. '('' → logprob: -20.375
    8. ' cipher' → logprob: -20.875
    9. '```' → logprob: -21.0
    10. '(C' → logprob: -21.125

Token 805: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007724629249423742
    2. '
' → logprob: -7.625772476196289
    3. '    
' → logprob: -8.875772476196289
    4. 'input' → logprob: -9.375772476196289
    5. 'text' → logprob: -10.875772476196289
    6. 'for' → logprob: -11.125772476196289
    7. 'import' → logprob: -12.125772476196289
    8. ' input' → logprob: -12.250772476196289
    9. ' for' → logprob: -12.875772476196289
    10. ' line' → logprob: -13.375772476196289

Token 806: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014379149302840233
    2. ' for' → logprob: -4.639379024505615
    3. 'for' → logprob: -6.014379024505615
    4. ' line' → logprob: -6.889379024505615
    5. ' text' → logprob: -7.889379024505615
    6. ' input' → logprob: -8.264379501342773
    7. 'text' → logprob: -8.764379501342773
    8. 'input' → logprob: -8.764379501342773
    9. 'line' → logprob: -9.514379501342773
    10. ' lines' → logprob: -9.514379501342773

Token 807: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4245215952396393
    2. 'text' → logprob: -1.674521565437317
    3. 'input' → logprob: -1.924521565437317
    4. ' for' → logprob: -5.174521446228027
    5. '   ' → logprob: -5.924521446228027
    6. 'line' → logprob: -6.299521446228027
    7. ' input' → logprob: -6.924521446228027
    8. ' text' → logprob: -7.299521446228027
    9. 'if' → logprob: -7.674521446228027
    10. 'lines' → logprob: -9.424521446228027

Token 808: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.474077433347702
    2. 'line' → logprob: -0.9740774631500244
    3. '	line' → logprob: -15.474077224731445
    4. 'lin' → logprob: -15.724077224731445
    5. ' lin' → logprob: -16.599077224731445
    6. ' ' → logprob: -17.349077224731445
    7. '   ' → logprob: -17.474077224731445
    8. 'l' → logprob: -17.724077224731445
    9. '_line' → logprob: -18.849077224731445
    10. ' l' → logprob: -19.099077224731445

Token 809: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0006285638664849102
    2. 'in' → logprob: -7.375628471374512
    3. ' ' → logprob: -14.500628471374512
    4. '()' → logprob: -14.625628471374512
    5. '   ' → logprob: -15.375628471374512
    6. '_in' → logprob: -15.625628471374512
    7. '	in' → logprob: -15.750628471374512
    8. '[' → logprob: -16.500629425048828
    9. '_' → logprob: -16.625629425048828
    10. 'import' → logprob: -16.625629425048828

Token 810: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.06197104603052139
    2. ' sys' → logprob: -2.8119709491729736
    3. '=sys' → logprob: -13.061970710754395
    4. '(sys' → logprob: -14.061970710754395
    5. '	sys' → logprob: -15.061970710754395
    6. 'stdin' → logprob: -15.811970710754395
    7. 'in' → logprob: -17.43697166442871
    8. 'import' → logprob: -17.56197166442871
    9. 'iter' → logprob: -18.18697166442871
    10. '_sys' → logprob: -19.18697166442871

Token 811: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -6.277553620748222e-05
    2. 'stdin' → logprob: -9.875062942504883
    3. '.' → logprob: -12.000062942504883
    4. '.argv' → logprob: -12.875062942504883
    5. '.stdout' → logprob: -13.875062942504883
    6. '(stdin' → logprob: -14.000062942504883
    7. '.readline' → logprob: -14.750062942504883
    8. ' stdin' → logprob: -15.375062942504883
    9. '.std' → logprob: -16.000062942504883
    10. '.stderr' → logprob: -17.500062942504883

Token 812: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2477213442325592
    2. '.readline' → logprob: -2.1227214336395264
    3. 'in' → logprob: -2.6227214336395264
    4. ':' → logprob: -3.9977214336395264
    5. ':
' → logprob: -6.122721195220947
    6. '.rstrip' → logprob: -6.372721195220947
    7. '.readlines' → logprob: -6.497721195220947
    8. 'rstrip' → logprob: -7.122721195220947
    9. '   ' → logprob: -7.622721195220947
    10. ' ' → logprob: -7.872721195220947

Token 813: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004460428317543119
    2. ' line' → logprob: -8.000446319580078
    3. '<|end|>' → logprob: -10.250446319580078
    4. '        
' → logprob: -10.625446319580078
    5. '   ' → logprob: -11.000446319580078
    6. '.rstrip' → logprob: -12.500446319580078
    7. 'line' → logprob: -12.625446319580078
    8. '(line' → logprob: -12.750446319580078
    9. '<|end|>' → logprob: -12.875446319580078
    10. 'rstrip' → logprob: -13.000446319580078

Token 814: ' line' (ID: 2543)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07700561732053757
    2. ' line' → logprob: -2.827005624771118
    3. ' text' → logprob: -4.327005386352539
    4. '   ' → logprob: -7.327005386352539
    5. '           ' → logprob: -7.327005386352539
    6. 'text' → logprob: -8.702005386352539
    7. '	line' → logprob: -9.327005386352539
    8. 'line' (adapté à ' line') → logprob: -9.952005386352539
    9. '	text' → logprob: -10.952005386352539
    10. ' print' → logprob: -11.577005386352539

Token 815: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3900689482688904
    2. '=' → logprob: -1.1400690078735352
    3. '=line' → logprob: -5.765069007873535
    4. '.strip' → logprob: -10.640069007873535
    5. '.rstrip' → logprob: -11.515069007873535
    6. '=str' → logprob: -11.515069007873535
    7. 'rstrip' → logprob: -12.140069007873535
    8. '_strip' → logprob: -12.765069007873535
    9. 'strip' → logprob: -12.890069007873535
    10. '=
' → logprob: -13.890069007873535

Token 816: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00033546582562848926
    2. ' line' → logprob: -8.000335693359375
    3. '=line' → logprob: -18.500335693359375
    4. '	line' → logprob: -19.250335693359375
    5. '#line' → logprob: -19.750335693359375
    6. '(line' → logprob: -19.875335693359375
    7. 'lin' → logprob: -21.625335693359375
    8. '
' → logprob: -22.250335693359375
    9. '[line' → logprob: -22.375335693359375
    10. 'Line' → logprob: -22.875335693359375

Token 817: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.16069939732551575
    2. '.rstrip' → logprob: -1.9106993675231934
    3. '.' → logprob: -7.785699367523193
    4. 'rstrip' → logprob: -10.035699844360352
    5. 'strip' → logprob: -12.535699844360352
    6. '[:-' → logprob: -12.535699844360352
    7. ' .' → logprob: -12.535699844360352
    8. '.replace' → logprob: -13.660699844360352
    9. '.chomp' → logprob: -14.160699844360352
    10. ' strip' → logprob: -14.160699844360352

Token 818: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10027751326560974
    2. '()
' → logprob: -2.3502774238586426
    3. '()\' → logprob: -10.1002779006958
    4. '()
' → logprob: -11.2252779006958
    5. '()

' → logprob: -11.9752779006958
    6. '())' → logprob: -12.3502779006958
    7. '()`' → logprob: -13.4752779006958
    8. '();' → logprob: -14.4752779006958
    9. '().' → logprob: -14.4752779006958
    10. '())
' → logprob: -14.4752779006958

Token 819: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002019907406065613
    2. ' if' → logprob: -9.000202178955078
    3. '   ' → logprob: -10.000202178955078
    4. 'if' → logprob: -10.500202178955078
    5. '<|end|>' → logprob: -12.750202178955078
    6. '        
' → logprob: -14.125202178955078
    7. '           ' → logprob: -14.375202178955078
    8. 'token' → logprob: -14.500202178955078
    9. '<|end|>' → logprob: -15.500202178955078
    10. ' ' → logprob: -16.000202178955078

Token 820: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5128144025802612
    2. 'print' → logprob: -1.0128144025802612
    3. 'result' → logprob: -4.012814521789551
    4. ' if' → logprob: -4.637814521789551
    5. '       ' → logprob: -4.762814521789551
    6. 'output' → logprob: -6.887814521789551
    7. ' print' → logprob: -7.887814521789551
    8. 'encoded' → logprob: -8.88781452178955
    9. 'decoded' → logprob: -9.38781452178955
    10. ' result' → logprob: -9.88781452178955

Token 821: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.014532373286783695
    2. 'not' → logprob: -4.639532566070557
    3. ' line' → logprob: -5.389532566070557
    4. 'line' → logprob: -8.514532089233398
    5. ' ' → logprob: -16.0145320892334
    6. ' no' → logprob: -16.5145320892334
    7. ' len' → logprob: -16.6395320892334
    8. '(line' → logprob: -18.0145320892334
    9. '	not' → logprob: -18.0145320892334
    10. '#line' → logprob: -18.1395320892334

Token 822: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5846138596534729
    2. ' ==' → logprob: -0.8346138596534729
    3. ':' → logprob: -4.834613800048828
    4. '.startswith' → logprob: -7.709613800048828
    5. ' !=' → logprob: -9.459613800048828
    6. ':
' → logprob: -9.834613800048828
    7. '!=' → logprob: -10.959613800048828
    8. '<|end|>' → logprob: -11.209613800048828
    9. '()==' → logprob: -11.459613800048828
    10. '=='' → logprob: -11.584613800048828

Token 823: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.04929502680897713
    2. ''' → logprob: -3.799294948577881
    3. '""' → logprob: -4.299294948577881
    4. '"' → logprob: -5.049294948577881
    5. '"":' → logprob: -5.174294948577881
    6. ''ex' → logprob: -10.674295425415039
    7. ' '':
' → logprob: -10.674295425415039
    8. ' '' → logprob: -12.674295425415039
    9. ' ''' → logprob: -12.674295425415039
    10. ' "":
' → logprob: -12.674295425415039

Token 824: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001329791557509452
    2. '       ' → logprob: -9.12513256072998
    3. ':' → logprob: -11.87513256072998
    4. '	       ' → logprob: -11.87513256072998
    5. '               ' → logprob: -12.87513256072998
    6. '<|end|>' → logprob: -13.12513256072998
    7. '		' → logprob: -13.62513256072998
    8. '          ' → logprob: -13.75013256072998
    9. ':
' → logprob: -14.62513256072998
    10. '   ' → logprob: -15.00013256072998

Token 825: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0454074963927269
    2. '           ' → logprob: -3.29540753364563
    3. ' break' → logprob: -5.295407295227051
    4. '       ' → logprob: -6.170407295227051
    5. 'return' → logprob: -8.67040729522705
    6. '	break' → logprob: -10.04540729522705
    7. '               ' → logprob: -11.42040729522705
    8. '
' → logprob: -13.04540729522705
    9. 'continue' (adapté à ' continue') → logprob: -13.54540729522705
    10. '   ' → logprob: -13.54540729522705

Token 826: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.578184497309849e-05
    2. '
' → logprob: -9.500085830688477
    3. '        
' → logprob: -12.250085830688477
    4. '<|end|>' → logprob: -12.750085830688477
    5. '   ' → logprob: -13.375085830688477
    6. '           ' → logprob: -14.000085830688477
    7. '	' → logprob: -16.125085830688477
    8. 'print' → logprob: -16.250085830688477
    9. '    
' → logprob: -16.375085830688477
    10. ',' → logprob: -16.625085830688477

Token 827: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.2762428822461516e-05
    2. '   ' → logprob: -10.375052452087402
    3. 'print' → logprob: -11.875052452087402
    4. '
' → logprob: -11.875052452087402
    5. '        
' → logprob: -12.250052452087402
    6. '           ' → logprob: -13.625052452087402
    7. '    
' → logprob: -15.250052452087402
    8. 'token' → logprob: -15.375052452087402
    9. ' print' → logprob: -15.500052452087402
    10. '<|end|>' → logprob: -15.875052452087402

Token 828: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04197587072849274
    2. ' print' → logprob: -3.916975975036621
    3. '       ' → logprob: -4.666975975036621
    4. 'output' → logprob: -4.916975975036621
    5. 'result' → logprob: -5.666975975036621
    6. ' output' → logprob: -7.291975975036621
    7. ' result' → logprob: -8.291975975036621
    8. 'encoded' → logprob: -10.166975975036621
    9. 'decoded' → logprob: -10.291975975036621
    10. 'text' → logprob: -11.666975975036621

Token 829: ' Input' (ID: 10090)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4011349081993103
    2. 'result' → logprob: -1.526134967803955
    3. 'output' → logprob: -2.651134967803955
    4. 'encoded' → logprob: -3.651134967803955
    5. ' print' → logprob: -5.276134967803955
    6. ' result' → logprob: -5.526134967803955
    7. ' output' → logprob: -5.651134967803955
    8. 'decoded' → logprob: -5.776134967803955
    9. ' encoded' → logprob: -8.026134490966797
    10. 'trans' → logprob: -8.276134490966797

Token 830: ' line' (ID: 2543)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037059105932712555
    2. 'encoded' → logprob: -4.787059307098389
    3. 'decoded' → logprob: -5.037059307098389
    4. 'result' → logprob: -5.287059307098389
    5. 'text' → logprob: -5.537059307098389
    6. 'output' → logprob: -6.037059307098389
    7. ' encoded' → logprob: -6.412059307098389
    8. '_encoded' → logprob: -6.662059307098389
    9. '        
' → logprob: -6.912059307098389
    10. '<|end|>' → logprob: -7.287059307098389

Token 831: ' uppercase' (ID: 79050)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036701906472444534
    2. 'output' → logprob: -4.286701679229736
    3. ' =' → logprob: -4.536701679229736
    4. 'result' → logprob: -5.661701679229736
    5. 'print' → logprob: -6.286701679229736
    6. '_output' → logprob: -7.036701679229736
    7. '=' → logprob: -7.411701679229736
    8. 'encoded' → logprob: -7.536701679229736
    9. ',' → logprob: -7.661701679229736
    10. 'tokens' → logprob: -7.661701679229736

Token 832: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5841850638389587
    2. '       ' → logprob: -1.0841851234436035
    3. '=' → logprob: -2.5841851234436035
    4. '=line' → logprob: -3.9591851234436035
    5. 'line' → logprob: -5.7091851234436035
    6. '(line' → logprob: -5.8341851234436035
    7. '_line' → logprob: -6.9591851234436035
    8. '[line' → logprob: -7.3341851234436035
    9. '()' → logprob: -7.5841851234436035
    10. ',' → logprob: -7.5841851234436035

Token 833: ' guaranteed' (ID: 21862)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.7013463377952576
    2. ' line' → logprob: -0.7013463377952576
    3. '       ' → logprob: -5.326346397399902
    4. ' encoded' → logprob: -7.201346397399902
    5. 'text' → logprob: -7.576346397399902
    6. 'encoded' → logprob: -7.701346397399902
    7. ' text' → logprob: -8.076346397399902
    8. '   ' → logprob: -8.576346397399902
    9. ' converted' → logprob: -8.826346397399902
    10. ' processed' → logprob: -9.076346397399902

Token 834: ' per' (ID: 777)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.6656825866666622e-05
    2. '<|end|>' → logprob: -11.50002670288086
    3. '   ' → logprob: -12.12502670288086
    4. ',' → logprob: -12.25002670288086
    5. '        
' → logprob: -12.62502670288086
    6. '<|end|>' → logprob: -14.37502670288086
    7. '
' → logprob: -14.62502670288086
    8. '           ' → logprob: -15.00002670288086
    9. 'print' → logprob: -15.37502670288086
    10. '      ' → logprob: -15.50002670288086

Token 835: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.09244903177022934
    2. 'spec' → logprob: -2.7174489498138428
    3. ' problem' → logprob: -4.592449188232422
    4. 'the' → logprob: -4.717449188232422
    5. 'prompt' → logprob: -7.467449188232422
    6. ' the' → logprob: -7.592449188232422
    7. ' spec' → logprob: -7.592449188232422
    8. 'line' → logprob: -8.217449188232422
    9. 'instruction' → logprob: -8.342449188232422
    10. 'instructions' → logprob: -8.467449188232422

Token 836: ' statement' (ID: 9710)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010485442908247933
    2. '<|end|>' → logprob: -9.875104904174805
    3. '   ' → logprob: -10.375104904174805
    4. '        
' → logprob: -11.375104904174805
    5. '<|end|>' → logprob: -12.750104904174805
    6. '
' → logprob: -12.875104904174805
    7. ',' → logprob: -13.250104904174805
    8. 'print' → logprob: -14.375104904174805
    9. '           ' → logprob: -14.750104904174805
    10. '      ' → logprob: -14.750104904174805

Token 837: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.526570384972729e-05
    2. '<|end|>' → logprob: -10.250055313110352
    3. '        
' → logprob: -11.750055313110352
    4. '   ' → logprob: -12.250055313110352
    5. '
' → logprob: -12.875055313110352
    6. ',' → logprob: -13.125055313110352
    7. '<|end|>' → logprob: -13.250055313110352
    8. '           ' → logprob: -15.125055313110352
    9. '      ' → logprob: -16.62505531311035
    10. '```' → logprob: -16.62505531311035

Token 838: ' otherwise' (ID: 10275)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007426840020343661
    2. ' output' → logprob: -8.25074291229248
    3. ' result' → logprob: -8.75074291229248
    4. 'output' → logprob: -8.87574291229248
    5. 'result' → logprob: -8.87574291229248
    6. '<|end|>' → logprob: -11.87574291229248
    7. ' print' → logprob: -12.00074291229248
    8. '        
' → logprob: -12.00074291229248
    9. 'print' → logprob: -12.37574291229248
    10. 'token' → logprob: -12.87574291229248

Token 839: ' enforce' (ID: 57352)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.7998500466346741
    2. '       ' → logprob: -1.1748499870300293
    3. ' line' → logprob: -1.4248499870300293
    4. 'continue' → logprob: -7.674849987030029
    5. ' continue' → logprob: -8.299850463867188
    6. '           ' → logprob: -8.549850463867188
    7. '   ' → logprob: -8.549850463867188
    8. '	line' → logprob: -9.799850463867188
    9. '[line' → logprob: -11.549850463867188
    10. '#line' → logprob: -11.674850463867188

Token 840: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14792564511299133
    2. 'line' → logprob: -2.147925615310669
    3. ' line' → logprob: -3.897925615310669
    4. '        
' → logprob: -8.02292537689209
    5. '(line' → logprob: -9.89792537689209
    6. '#line' → logprob: -10.27292537689209
    7. '[line' → logprob: -10.77292537689209
    8. '=line' → logprob: -11.02292537689209
    9. '	line' → logprob: -11.27292537689209
    10. '_line' → logprob: -11.77292537689209

Token 841: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043105386197566986
    2. 'line' → logprob: -3.418105363845825
    3. ' line' → logprob: -4.668105602264404
    4. '   ' → logprob: -11.918105125427246
    5. '        
' → logprob: -12.418105125427246
    6. '	line' → logprob: -12.793105125427246
    7. 'text' → logprob: -12.918105125427246
    8. '#line' → logprob: -13.293105125427246
    9. '
' → logprob: -13.543105125427246
    10. ' if' → logprob: -13.793105125427246

Token 842: ' result' (ID: 1534)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.04319934919476509
    2. '       ' → logprob: -3.668199300765991
    3. ' line' → logprob: -4.29319953918457
    4. 'text' → logprob: -5.79319953918457
    5. ' text' → logprob: -10.54319953918457
    6. '	line' → logprob: -11.29319953918457
    7. '#line' → logprob: -13.04319953918457
    8. '        
' → logprob: -13.29319953918457
    9. '   ' → logprob: -13.54319953918457
    10. '[line' → logprob: -13.66819953918457

Token 843: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020667314529419
    2. '=' → logprob: -2.3502066135406494
    3. '=result' → logprob: -16.97520637512207
    4. '   ' → logprob: -17.97520637512207
    5. '＝' → logprob: -18.60020637512207
    6. '=line' → logprob: -18.97520637512207
    7. ' ' → logprob: -19.10020637512207
    8. '=c' → logprob: -19.22520637512207
    9. ' =)' → logprob: -19.22520637512207
    10. '```' → logprob: -19.60020637512207

Token 844: ' cipher' (ID: 56483)
  Prédit: 'cipher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cipher' → logprob: -0.4740777015686035
    2. ' cipher' → logprob: -0.9740777015686035
    3. '(cipher' → logprob: -14.474077224731445
    4. 'c' → logprob: -16.474077224731445
    5. ' ciphertext' → logprob: -16.474077224731445
    6. '_cipher' → logprob: -17.474077224731445
    7. 'Cipher' → logprob: -18.099077224731445
    8. '   ' → logprob: -18.349077224731445
    9. ' cif' → logprob: -18.474077224731445
    10. '```' → logprob: -19.349077224731445

Token 845: '.transform' (ID: 17849)
  Prédit: '.transform'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.transform' → logprob: -6.718606891809031e-05
    2. '.' → logprob: -10.000066757202148
    3. 'transform' → logprob: -10.750066757202148
    4. ' .' → logprob: -16.00006675720215
    5. '.trans' → logprob: -16.37506675720215
    6. '	transform' → logprob: -17.75006675720215
    7. '.translate' → logprob: -19.12506675720215
    8. '.Transform' → logprob: -19.62506675720215
    9. ' transform' → logprob: -20.00006675720215
    10. '_transform' → logprob: -20.12506675720215

Token 846: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.00000286102295
    3. '(
' → logprob: -16.875001907348633
    4. '[line' → logprob: -17.375001907348633
    5. 'line' → logprob: -18.375001907348633
    6. '(Line' → logprob: -18.500001907348633
    7. '=line' → logprob: -19.000001907348633
    8. ' line' → logprob: -19.625001907348633
    9. '#line' → logprob: -19.750001907348633
    10. ' (' → logprob: -19.875001907348633

Token 847: '.upper' (ID: 75082)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.240481914370321e-05
    2. '       ' → logprob: -10.625052452087402
    3. ')
' → logprob: -10.625052452087402
    4. ' )' → logprob: -13.750052452087402
    5. '   ' → logprob: -14.000052452087402
    6. '(line' → logprob: -14.875052452087402
    7. '))' → logprob: -15.125052452087402
    8. '[::-' → logprob: -15.500052452087402
    9. '[line' → logprob: -15.750052452087402
    10. ')`' → logprob: -16.000051498413086

Token 848: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0009870808571577072
    2. ')' → logprob: -7.0009870529174805
    3. '()' → logprob: -9.50098705291748
    4. '())
' → logprob: -14.50098705291748
    5. ' ())' → logprob: -15.75098705291748
    6. '()))' → logprob: -16.625988006591797
    7. '());' → logprob: -17.750988006591797
    8. '();)' → logprob: -17.750988006591797
    9. ' )' → logprob: -18.000988006591797
    10. '()
' → logprob: -18.375988006591797

Token 849: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004944138927385211
    2. 'print' → logprob: -7.625494480133057
    3. '   ' → logprob: -12.125494003295898
    4. '        
' → logprob: -15.500494003295898
    5. ' print' → logprob: -15.500494003295898
    6. '<|end|>' → logprob: -15.625494003295898
    7. '```' → logprob: -15.750494003295898
    8. '
' → logprob: -15.750494003295898
    9. '	' → logprob: -16.5004940032959
    10. '	print' → logprob: -17.2504940032959

Token 850: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.0802738870552275e-05
    2. '       ' → logprob: -11.75001049041748
    3. ' print' → logprob: -12.75001049041748
    4. '	print' → logprob: -18.500011444091797
    5. '   ' → logprob: -19.750011444091797
    6. '
' → logprob: -20.000011444091797
    7. '```' → logprob: -21.125011444091797
    8. '.print' → logprob: -21.875011444091797
    9. 'pr' → logprob: -22.375011444091797
    10. '_print' → logprob: -22.875011444091797

Token 851: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -2.165027217415627e-05
    2. 'result' → logprob: -10.750021934509277
    3. '(' → logprob: -16.25002098083496
    4. ' result' → logprob: -19.50002098083496
    5. '=result' → logprob: -20.12502098083496
    6. '(f' → logprob: -21.37502098083496
    7. '(results' → logprob: -21.37502098083496
    8. '(res' → logprob: -21.50002098083496
    9. '[result' → logprob: -21.50002098083496
    10. '()' → logprob: -22.12502098083496

Token 852: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1041145626222715e-05
    2. '())' → logprob: -11.875011444091797
    3. '()' → logprob: -13.250011444091797
    4. '`)' → logprob: -13.750011444091797
    5. ' )' → logprob: -14.625011444091797
    6. ')`' → logprob: -15.625011444091797
    7. '')' → logprob: -15.750011444091797
    8. '   ' → logprob: -16.125011444091797
    9. '))' → logprob: -16.250011444091797
    10. '")' → logprob: -16.375011444091797

Token 853: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.297462171758525e-05
    2. ' if' → logprob: -11.000033378601074
    3. '```' → logprob: -11.875033378601074
    4. '<|end|>' → logprob: -12.125033378601074
    5. '
' → logprob: -13.375033378601074
    6. 'main' → logprob: -13.750033378601074
    7. '#' → logprob: -15.125033378601074
    8. '__' → logprob: -15.375033378601074
    9. '<|end|>' → logprob: -15.625033378601074
    10. '        
' → logprob: -15.750033378601074

Token 854: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.03822531923651695
    2. '__' → logprob: -3.2882254123687744
    3. 'name' → logprob: -8.788225173950195
    4. '_name' → logprob: -10.913225173950195
    5. ' ' → logprob: -12.038225173950195
    6. ' name' → logprob: -12.913225173950195
    7. 'Name' → logprob: -13.413225173950195
    8. ' ' → logprob: -14.288225173950195
    9. ' ' → logprob: -14.663225173950195
    10. ' "__' → logprob: -14.788225173950195

Token 855: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004056910052895546
    2. ' ==' → logprob: -6.129056930541992
    3. '==' → logprob: -6.629056930541992
    4. '=="' → logprob: -8.754056930541992
    5. ' __' → logprob: -8.879056930541992
    6. '=='' → logprob: -9.379056930541992
    7. '__.__' → logprob: -9.754056930541992
    8. '.__' → logprob: -9.879056930541992
    9. '__["' → logprob: -11.629056930541992
    10. '[' → logprob: -12.004056930541992

Token 856: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.652451464906335e-05
    2. '==' → logprob: -11.625016212463379
    3. '__.__' → logprob: -11.875016212463379
    4. '=="' → logprob: -16.125017166137695
    5. '__
' → logprob: -16.375017166137695
    6. '__.' → logprob: -16.375017166137695
    7. ' ==' → logprob: -16.625017166137695
    8. '=='' → logprob: -16.875017166137695
    9. '__('' → logprob: -17.000017166137695
    10. '```' → logprob: -17.125017166137695

Token 857: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.041087403893470764
    2. '==' → logprob: -3.2910873889923096
    3. ' ==' → logprob: -6.041087627410889
    4. '=='' → logprob: -8.16608715057373
    5. '=="' → logprob: -8.54108715057373
    6. '__.__' → logprob: -9.04108715057373
    7. '.__' → logprob: -10.41608715057373
    8. '_' → logprob: -11.54108715057373
    9. '=' → logprob: -12.29108715057373
    10. '===' → logprob: -12.54108715057373

Token 858: ' "__' (ID: 27367)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10021691024303436
    2. '"' → logprob: -2.350216865539551
    3. '__' → logprob: -11.60021686553955
    4. ' '__' → logprob: -14.72521686553955
    5. ' "__' → logprob: -15.10021686553955
    6. ''name' → logprob: -16.225217819213867
    7. ''"' → logprob: -16.225217819213867
    8. '('__' → logprob: -17.100217819213867
    9. ''post' → logprob: -17.350217819213867
    10. ''s' → logprob: -17.475217819213867

Token 859: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.2378600735682994e-05
    2. '__' → logprob: -10.625032424926758
    3. 'name' → logprob: -12.375032424926758
    4. '"' → logprob: -13.375032424926758
    5. '_main' → logprob: -13.375032424926758
    6. ''' → logprob: -14.625032424926758
    7. ' main' → logprob: -16.000032424926758
    8. 'built' → logprob: -18.000032424926758
    9. 'python' → logprob: -18.375032424926758
    10. '(main' → logprob: -19.125032424926758

Token 860: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.017000654712319374
    2. '__' → logprob: -4.267000675201416
    3. '__':
' → logprob: -5.892000675201416
    4. '__.__' → logprob: -10.767000198364258
    5. '.' → logprob: -11.392000198364258
    6. '__:' → logprob: -11.642000198364258
    7. '__.' → logprob: -11.642000198364258
    8. '__
' → logprob: -12.267000198364258
    9. '__["' → logprob: -12.267000198364258
    10. ':' → logprob: -12.892000198364258

Token 861: '   ' (ID: 271)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5349380373954773
    2. 'main' → logprob: -0.9099380373954773
    3. '   ' → logprob: -5.159937858581543
    4. ''' → logprob: -6.909937858581543
    5. '____' → logprob: -6.909937858581543
    6. '"' → logprob: -7.284937858581543
    7. ' main' → logprob: -7.284937858581543
    8. '___' → logprob: -7.534937858581543
    9. '```' → logprob: -7.659937858581543
    10. '_main' → logprob: -7.784937858581543

Token 862: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.5
    3. '	main' → logprob: -20.875
    4. 'import' → logprob: -22.625
    5. '_main' → logprob: -24.5
    6. '.main' → logprob: -25.625
    7. '(main' → logprob: -25.625
    8. '   ' → logprob: -25.75
    9. '
' → logprob: -28.375
    10. '主' → logprob: -28.75

Token 863: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 861
Tokens correctement prédits (1ère position, stricte): 361
Tokens correctement prédits (1ère position, avec adaptation): 434
Tokens correctement prédits (top 10): 757
Précision stricte (1ère position): 41.93%
Précision adaptée (1ère position): 50.41%
Précision (top 10): 87.92%
================================================================================
