================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    s = input()
    if s == "END OF INPUT":
        break
    words = s.split(' ')
    counts = [str(len(w)) for w in words]
    print("".join(counts))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.612176239490509
    2. '    ' → logprob: -2.2371761798858643
    3. '    
' → logprob: -2.6121761798858643
    4. '\' → logprob: -2.8621761798858643
    5. '\n' → logprob: -2.8621761798858643
    6. '```' → logprob: -3.2371761798858643
    7. ' ' → logprob: -3.3621761798858643
    8. ' 
' → logprob: -3.6121761798858643
    9. '  
' → logprob: -4.112176418304443
    10. '     
' → logprob: -4.237176418304443

Token 4: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30723127722740173
    2. '    ' → logprob: -1.6822313070297241
    3. '```' → logprob: -3.5572311878204346
    4. ' ' → logprob: -3.8072311878204346
    5. '       ' → logprob: -4.807231426239014
    6. '    
' → logprob: -5.932231426239014
    7. '  ' → logprob: -6.182231426239014
    8. '\' → logprob: -6.182231426239014
    9. '\n' → logprob: -6.682231426239014
    10. '\t' → logprob: -6.807231426239014

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07168561220169067
    2. 'u' → logprob: -4.071685791015625
    3. '   ' → logprob: -4.321685791015625
    4. '.' → logprob: -4.696685791015625
    5. 't' → logprob: -4.946685791015625
    6. ':' → logprob: -4.946685791015625
    7. 'i' → logprob: -5.571685791015625
    8. ' ' → logprob: -6.321685791015625
    9. ' =' → logprob: -6.571685791015625
    10. ')' → logprob: -6.946685791015625

Token 6: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6326191425323486
    2. 'input' → logprob: -0.7576191425323486
    3. 's' → logprob: -12.50761890411377
    4. '=input' → logprob: -12.63261890411377
    5. '(input' → logprob: -12.75761890411377
    6. ' ' → logprob: -12.75761890411377
    7. ' s' → logprob: -13.38261890411377
    8. 'raw' → logprob: -14.13261890411377
    9. '   ' → logprob: -14.38261890411377
    10. ' readline' → logprob: -14.50761890411377

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03704417496919632
    2. '('' → logprob: -3.7870442867279053
    3. '("("' → logprob: -4.787044048309326
    4. ''' → logprob: -5.912044048309326
    5. '()' → logprob: -6.662044048309326
    6. '"' → logprob: -7.912044048309326
    7. '```' → logprob: -8.162044525146484
    8. '   ' → logprob: -8.912044525146484
    9. ' ' → logprob: -9.287044525146484
    10. '("")' → logprob: -9.412044525146484

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4991319179534912
    2. ' if' → logprob: -1.6241319179534912
    3. '<|end|>' → logprob: -2.374131917953491
    4. ' ' → logprob: -2.874131917953491
    5. '.' → logprob: -4.99913215637207
    6. '    ' → logprob: -5.12413215637207
    7. ')' → logprob: -5.12413215637207
    8. ':' → logprob: -5.24913215637207
    9. '  
' → logprob: -5.62413215637207
    10. '  ' → logprob: -5.87413215637207

Token 9: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14435496926307678
    2. 'if' (adapté à ' if') → logprob: -2.769355058670044
    3. '.' → logprob: -3.394355058670044
    4. ' ' → logprob: -4.144354820251465
    5. '   ' → logprob: -4.269354820251465
    6. '    ' → logprob: -5.894354820251465
    7. 'i' → logprob: -6.019354820251465
    8. ':' → logprob: -8.019354820251465
    9. '  ' → logprob: -8.019354820251465
    10. ' i' → logprob: -8.019354820251465

Token 10: ' s' (ID: 265)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6349216103553772
    2. ' s' → logprob: -0.7599216103553772
    3. ' ' → logprob: -6.509921550750732
    4. 's' → logprob: -7.384921550750732
    5. 'not' → logprob: -8.50992202758789
    6. '  ' → logprob: -12.88492202758789
    7. ' ' → logprob: -13.63492202758789
    8. ' (' → logprob: -14.00992202758789
    9. '<|end|>' → logprob: -14.13492202758789
    10. ' len' → logprob: -14.38492202758789

Token 11: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.027109408751130104
    2. '==' → logprob: -4.402109622955322
    3. '.' → logprob: -4.527109622955322
    4. ' .' → logprob: -6.527109622955322
    5. '.startswith' → logprob: -6.777109622955322
    6. ' ' → logprob: -8.027109146118164
    7. '.strip' → logprob: -8.152109146118164
    8. ' !=' → logprob: -8.777109146118164
    9. ':' → logprob: -10.027109146118164
    10. ')' → logprob: -10.152109146118164

Token 12: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.14347431063652039
    2. ''' → logprob: -2.0184743404388428
    3. ' "' → logprob: -7.643474102020264
    4. '""' → logprob: -9.143474578857422
    5. ' '' → logprob: -9.393474578857422
    6. ' ' → logprob: -9.393474578857422
    7. '''' → logprob: -10.518474578857422
    8. '"I' → logprob: -12.893474578857422
    9. '"user' → logprob: -13.393474578857422
    10. '"""' → logprob: -13.518474578857422

Token 13: 'END' (ID: 7671)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.6780567169189453
    2. 'quit' → logprob: -1.1780567169189453
    3. '"' → logprob: -2.1780567169189453
    4. '":' → logprob: -3.1780567169189453
    5. 'stop' → logprob: -4.178056716918945
    6. 'q' → logprob: -5.803056716918945
    7. '0' → logprob: -5.928056716918945
    8. 'hello' → logprob: -6.053056716918945
    9. 'break' → logprob: -6.303056716918945
    10. 'end' → logprob: -6.428056716918945

Token 14: ' OF' (ID: 5307)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.00970191415399313
    2. '"' → logprob: -4.759701728820801
    3. ':' → logprob: -7.634701728820801
    4. '":
' → logprob: -7.634701728820801
    5. '"):' → logprob: -10.2597017288208
    6. ' ":' → logprob: -10.6347017288208
    7. '":
' → logprob: -10.8847017288208
    8. ' "' → logprob: -11.8847017288208
    9. '   ' → logprob: -12.1347017288208
    10. '\":' → logprob: -12.3847017288208

Token 15: ' INPUT' (ID: 57481)
  Prédit: ' FILE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' FILE' → logprob: -1.0401214361190796
    2. ' INPUT' → logprob: -1.1651214361190796
    3. ' TRAN' → logprob: -1.4151214361190796
    4. ' TRANS' → logprob: -3.290121555328369
    5. 'INPUT' → logprob: -4.415121555328369
    6. '_INPUT' → logprob: -4.915121555328369
    7. ' TEXT' → logprob: -5.165121555328369
    8. ' input' → logprob: -5.290121555328369
    9. '   ' → logprob: -5.540121555328369
    10. 'TRAN' → logprob: -5.540121555328369

Token 16: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.014450241811573505
    2. '"' → logprob: -4.3894500732421875
    3. '":
' → logprob: -6.8894500732421875
    4. ':' → logprob: -7.1394500732421875
    5. '"):' → logprob: -9.514450073242188
    6. '":
' → logprob: -11.514450073242188
    7. '```' → logprob: -11.764450073242188
    8. '"):
' → logprob: -12.389450073242188
    9. ':
' → logprob: -12.639450073242188
    10. '"]:' → logprob: -12.889450073242188

Token 17: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008073674980551004
    2. '   ' → logprob: -8.000807762145996
    3. ' break' → logprob: -8.000807762145996
    4. '\n' → logprob: -9.625807762145996
    5. '    ' → logprob: -11.250807762145996
    6. '	break' → logprob: -11.500807762145996
    7. ':' → logprob: -11.500807762145996
    8. ' ' → logprob: -12.000807762145996
    9. '<|end|>' → logprob: -12.125807762145996
    10. 'break' → logprob: -12.250807762145996

Token 18: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5254888534545898
    2. ' break' → logprob: -0.9004888534545898
    3. '           ' → logprob: -6.90048885345459
    4. 'break' (adapté à ' break') → logprob: -7.27548885345459
    5. '   ' → logprob: -8.15048885345459
    6. '	break' → logprob: -8.52548885345459
    7. '\n' → logprob: -9.40048885345459
    8. '```' → logprob: -10.27548885345459
    9. '_break' → logprob: -11.15048885345459
    10. ' ' → logprob: -11.77548885345459

Token 19: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08218760043382645
    2. '    
' → logprob: -2.7071876525878906
    3. '\n' → logprob: -5.582187652587891
    4. '
' → logprob: -5.707187652587891
    5. '\' → logprob: -6.582187652587891
    6. '<|end|>' → logprob: -6.707187652587891
    7. '```' → logprob: -6.707187652587891
    8. ':' → logprob: -8.58218765258789
    9. '  
' → logprob: -8.95718765258789
    10. '\r' → logprob: -8.95718765258789

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036628931760787964
    2. '    
' → logprob: -4.536628723144531
    3. '
' → logprob: -5.161628723144531
    4. '<|end|>' → logprob: -5.286628723144531
    5. '\n' → logprob: -6.161628723144531
    6. 'print' → logprob: -6.161628723144531
    7. ' ' → logprob: -6.161628723144531
    8. ':' → logprob: -6.661628723144531
    9. '```' → logprob: -6.786628723144531
    10. ')' → logprob: -6.911628723144531

Token 21: ' words' (ID: 6391)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7083571553230286
    2. '    
' → logprob: -1.7083570957183838
    3. '\n' → logprob: -2.583357095718384
    4. '
' → logprob: -2.583357095718384
    5. 'print' → logprob: -3.208357095718384
    6. '  
' → logprob: -3.458357095718384
    7. '<|end|>' → logprob: -3.458357095718384
    8. ' ' → logprob: -3.583357095718384
    9. '    ' → logprob: -4.458357334136963
    10. ' 
' → logprob: -4.833357334136963

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08597906678915024
    2. '=' → logprob: -2.5859789848327637
    3. '.' → logprob: -5.085978984832764
    4. ' .' → logprob: -8.960979461669922
    5. '()' → logprob: -8.960979461669922
    6. '[' → logprob: -9.085979461669922
    7. '   ' → logprob: -9.460979461669922
    8. '_' → logprob: -9.460979461669922
    9. '.split' → logprob: -9.460979461669922
    10. ')' → logprob: -10.335979461669922

Token 23: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.04859713837504387
    2. 's' → logprob: -3.0485970973968506
    3. ' list' → logprob: -12.79859733581543
    4. '   ' → logprob: -12.92359733581543
    5. '	s' → logprob: -13.67359733581543
    6. 'list' → logprob: -13.92359733581543
    7. ' ' → logprob: -14.79859733581543
    8. '<|end|>' → logprob: -15.04859733581543
    9. '(s' → logprob: -15.29859733581543
    10. '[]' → logprob: -15.67359733581543

Token 24: '.split' (ID: 10347)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5830005407333374
    2. '.split' → logprob: -0.8330005407333374
    3. '.strip' → logprob: -5.583000659942627
    4. ' .' → logprob: -6.333000659942627
    5. '.lower' → logprob: -6.583000659942627
    6. '.rstrip' → logprob: -9.458000183105469
    7. '.upper' → logprob: -11.083000183105469
    8. '.replace' → logprob: -11.958000183105469
    9. '.startswith' → logprob: -12.583000183105469
    10. '.s' → logprob: -12.958000183105469

Token 25: '('' (ID: 706)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6730004549026489
    2. '(' → logprob: -1.048000454902649
    3. '('' → logprob: -2.0480003356933594
    4. '("("' → logprob: -4.673000335693359
    5. '("' → logprob: -7.423000335693359
    6. ''' → logprob: -9.79800033569336
    7. '(`' → logprob: -10.54800033569336
    8. '"' → logprob: -10.67300033569336
    9. '```' → logprob: -10.79800033569336
    10. '(
' → logprob: -11.17300033569336

Token 26: ' ')
' (ID: 49195)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5412275195121765
    2. ')' → logprob: -0.9162275195121765
    3. '())' → logprob: -4.166227340698242
    4. '')' → logprob: -6.291227340698242
    5. ' )' → logprob: -8.166227340698242
    6. '('' → logprob: -8.916227340698242
    7. '(' → logprob: -9.541227340698242
    8. '")' → logprob: -10.416227340698242
    9. '()
' → logprob: -10.541227340698242
    10. ')
' → logprob: -12.416227340698242

Token 27: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.32019439339637756
    2. '   ' → logprob: -1.4451943635940552
    3. 'print' → logprob: -4.320194244384766
    4. 'words' → logprob: -4.945194244384766
    5. ' for' → logprob: -5.070194244384766
    6. 'count' → logprob: -5.445194244384766
    7. 'if' → logprob: -5.945194244384766
    8. '```' → logprob: -6.945194244384766
    9. '[' → logprob: -7.070194244384766
    10. '    
' → logprob: -7.320194244384766

Token 28: ' counts' (ID: 28991)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10624369233846664
    2. 'count' → logprob: -3.85624361038208
    3. 'print' → logprob: -3.98124361038208
    4. 'words' → logprob: -4.48124361038208
    5. 'i' → logprob: -4.98124361038208
    6. 'if' → logprob: -4.98124361038208
    7. '   ' → logprob: -5.35624361038208
    8. 'c' → logprob: -5.35624361038208
    9. 'w' → logprob: -5.48124361038208
    10. 'word' → logprob: -5.60624361038208

Token 29: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007287862244993448
    2. '=' → logprob: -5.882287979125977
    3. '.setdefault' → logprob: -6.257287979125977
    4. '_' → logprob: -7.257287979125977
    5. '.' → logprob: -7.257287979125977
    6. ' =' → logprob: -8.507287979125977
    7. ')' → logprob: -8.757287979125977
    8. '['' → logprob: -8.882287979125977
    9. '[word' → logprob: -9.007287979125977
    10. '[]' → logprob: -9.257287979125977

Token 30: ' [' (ID: 723)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.00018041854491457343
    2. ' {}' → logprob: -9.3751802444458
    3. '{' → logprob: -9.5001802444458
    4. 'dict' → logprob: -11.1251802444458
    5. 'len' → logprob: -13.6251802444458
    6. '[' → logprob: -13.7501802444458
    7. '{})' → logprob: -13.8751802444458
    8. 'default' → logprob: -14.5001802444458
    9. '[]' → logprob: -14.7501802444458
    10. '{}

' → logprob: -15.0001802444458

Token 31: 'str' (ID: 689)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.736969530582428
    2. 'len' → logprob: -0.861969530582428
    3. '0' → logprob: -2.361969470977783
    4. 's' → logprob: -6.236969470977783
    5. 'word' → logprob: -6.361969470977783
    6. 'w' → logprob: -7.486969470977783
    7. '1' → logprob: -7.861969470977783
    8. ' words' → logprob: -9.486969947814941
    9. ' len' → logprob: -10.111969947814941
    10. 'int' → logprob: -10.986969947814941

Token 32: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.20157375931739807
    2. '(words' → logprob: -1.7015737295150757
    3. 'len' → logprob: -9.326573371887207
    4. '(' → logprob: -10.076573371887207
    5. '(word' → logprob: -10.701573371887207
    6. '(sum' → logprob: -13.201573371887207
    7. 'words' → logprob: -13.326573371887207
    8. '(s' → logprob: -13.451573371887207
    9. ' len' → logprob: -14.326573371887207
    10. ')' → logprob: -15.701573371887207

Token 33: '(w' (ID: 7420)
  Prédit: '(word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(word' → logprob: -0.4743368923664093
    2. '(w' → logprob: -0.9743368625640869
    3. '(words' → logprob: -8.849336624145508
    4. '(i' → logprob: -9.849336624145508
    5. '(' → logprob: -10.474336624145508
    6. 'w' → logprob: -11.099336624145508
    7. '(x' → logprob: -12.099336624145508
    8. '(a' → logprob: -12.724336624145508
    9. 'word' → logprob: -12.849336624145508
    10. '(token' → logprob: -12.849336624145508

Token 34: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0027325977571308613
    2. ')' → logprob: -6.627732753753662
    3. '()))' → logprob: -7.127732753753662
    4. ' ))' → logprob: -7.752732753753662
    5. '(' → logprob: -10.627732276916504
    6. ')))' → logprob: -10.752732276916504
    7. ' ' → logprob: -11.002732276916504
    8. ')]' → logprob: -11.377732276916504
    9. 'w' → logprob: -11.377732276916504
    10. 'a' → logprob: -11.502732276916504

Token 35: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021920178551226854
    2. 'for' → logprob: -6.75219202041626
    3. ' for' → logprob: -7.00219202041626
    4. ')]' → logprob: -10.002191543579102
    5. ' )' → logprob: -10.252191543579102
    6. '+' → logprob: -11.877191543579102
    7. ']' → logprob: -12.127191543579102
    8. '   ' → logprob: -12.377191543579102
    9. ' ' → logprob: -12.627191543579102
    10. '),' → logprob: -12.752191543579102

Token 36: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.11316568404436111
    2. 'w' → logprob: -2.2381656169891357
    3. ' ' → logprob: -7.988165855407715
    4. '	w' → logprob: -13.363165855407715
    5. '_' → logprob: -14.363165855407715
    6. '_w' → logprob: -14.488165855407715
    7. '<|end|>' → logprob: -14.613165855407715
    8. '<w' → logprob: -15.613165855407715
    9. ' ' → logprob: -15.988165855407715
    10. ' word' → logprob: -16.1131649017334

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0029077043291181326
    2. 'in' → logprob: -5.877907752990723
    3. ' ' → logprob: -9.502907752990723
    4. '<|end|>' → logprob: -11.377907752990723
    5. ')' → logprob: -12.377907752990723
    6. 's' → logprob: -12.502907752990723
    7. 'w' → logprob: -13.252907752990723
    8. '<|end|>' → logprob: -13.627907752990723
    9. '.' → logprob: -14.127907752990723
    10. 'n' → logprob: -14.190407752990723

Token 38: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.023322928696870804
    2. ' words' → logprob: -3.773322820663452
    3. '(words' → logprob: -10.273323059082031
    4. 'w' → logprob: -10.648323059082031
    5. 'word' → logprob: -11.398323059082031
    6. '   ' → logprob: -13.273323059082031
    7. ' ' → logprob: -13.273323059082031
    8. 's' → logprob: -13.523323059082031
    9. '.words' → logprob: -13.898323059082031
    10. '  ' → logprob: -15.460823059082031

Token 39: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015366430161520839
    2. ')' → logprob: -7.001536846160889
    3. ')]' → logprob: -7.751536846160889
    4. ' ]' → logprob: -9.37653636932373
    5. ']
' → logprob: -9.87653636932373
    6. '])' → logprob: -10.37653636932373
    7. '   ' → logprob: -10.75153636932373
    8. '])]' → logprob: -14.12653636932373
    9. ']
' → logprob: -14.50153636932373
    10. '()]' → logprob: -14.62653636932373

Token 40: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.32360395789146423
    2. '   ' → logprob: -1.9486039876937866
    3. ' print' → logprob: -2.073603868484497
    4. '
' → logprob: -5.823604106903076
    5. ' ' → logprob: -6.698604106903076
    6. '    
' → logprob: -6.823604106903076
    7. '<|end|>' → logprob: -7.823604106903076
    8. '\n' → logprob: -8.198603630065918
    9. '  ' → logprob: -8.198603630065918
    10. '[' → logprob: -8.448603630065918

Token 41: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3621475398540497
    2. ' print' → logprob: -1.237147569656372
    3. '   ' → logprob: -4.362147331237793
    4. '.' → logprob: -8.237147331237793
    5. '.print' → logprob: -9.237147331237793
    6. ' ' → logprob: -9.362147331237793
    7. '    
' → logprob: -9.362147331237793
    8. '<|end|>' → logprob: -9.362147331237793
    9. '	print' → logprob: -9.987147331237793
    10. ')' → logprob: -10.487147331237793

Token 42: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.02732066810131073
    2. '(' → logprob: -3.777320623397827
    3. '("' → logprob: -5.652320861816406
    4. '("("' → logprob: -7.902320861816406
    5. '(len' → logprob: -9.402320861816406
    6. ''' → logprob: -9.652320861816406
    7. '(',' → logprob: -11.277320861816406
    8. ' ('' → logprob: -12.027320861816406
    9. '(*' → logprob: -12.527320861816406
    10. '(('' → logprob: -12.777320861816406

Token 43: '".' (ID: 4050)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09933535009622574
    2. '"' → logprob: -2.5993354320526123
    3. '-' → logprob: -5.099335193634033
    4. ' '' → logprob: -5.349335193634033
    5. ''-' → logprob: -6.099335193634033
    6. '('' → logprob: -6.474335193634033
    7. ' "' → logprob: -6.724335193634033
    8. '','.' → logprob: -7.099335193634033
    9. ' ' → logprob: -7.224335193634033
    10. '.' → logprob: -7.849335193634033

Token 44: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.00023882099776528776
    2. ' join' → logprob: -8.375238418579102
    3. ' ' → logprob: -13.000238418579102
    4. '"' → logprob: -13.250238418579102
    5. 'j' → logprob: -13.875238418579102
    6. '(join' → logprob: -13.875238418579102
    7. '   ' → logprob: -14.875238418579102
    8. '-' → logprob: -15.125238418579102
    9. 'jo' → logprob: -15.375238418579102
    10. '.' → logprob: -15.500238418579102

Token 45: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.0003062646137550473
    2. '(' → logprob: -8.125306129455566
    3. ')' → logprob: -12.500306129455566
    4. '[count' → logprob: -12.625306129455566
    5. 'counts' → logprob: -13.500306129455566
    6. '(
' → logprob: -14.375306129455566
    7. ' counts' → logprob: -14.500306129455566
    8. 'count' → logprob: -15.000306129455566
    9. ' (' → logprob: -16.250307083129883
    10. '(c' → logprob: -16.250307083129883

Token 46: 's' (ID: 82)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.641071617603302
    2. 's' → logprob: -1.0160715579986572
    3. 'unts' → logprob: -3.0160715579986572
    4. 'ts' → logprob: -3.2660715579986572
    5. 'counts' → logprob: -4.516071796417236
    6. 'nts' → logprob: -4.891071796417236
    7. 'ents' → logprob: -5.391071796417236
    8. ')' → logprob: -8.641071319580078
    9. 'ats' → logprob: -8.641071319580078
    10. ' counts' → logprob: -8.766071319580078

Token 47: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3868856430053711
    2. ')' → logprob: -1.136885643005371
    3. ')))' → logprob: -11.386885643005371
    4. '))
' → logprob: -13.511885643005371
    5. ')
' → logprob: -14.636885643005371
    6. '"))' → logprob: -15.011885643005371
    7. ')")' → logprob: -15.136885643005371
    8. '})' → logprob: -15.886885643005371
    9. '])' → logprob: -16.011886596679688
    10. '")' → logprob: -16.261886596679688


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 45
Tokens correctement prédits (1ère position, stricte): 16
Tokens correctement prédits (1ère position, avec adaptation): 17
Tokens correctement prédits (top 10): 35
Précision stricte (1ère position): 35.56%
Précision adaptée (1ère position): 37.78%
Précision (top 10): 77.78%
================================================================================
