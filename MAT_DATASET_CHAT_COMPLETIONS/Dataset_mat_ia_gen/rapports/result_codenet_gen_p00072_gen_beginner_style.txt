================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:10:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    while True:
        n = int(input())
        if n == 0:
            break
        m = int(input())
        edges = []
        for _ in range(m):
            line = input()
            a, b, d = line.split(',')
            a = int(a)
            b = int(b)
            d = int(d)
            edges.append((a, b, d))
        # on va créer un graphe sous forme de liste d'adjacence
        graph = [[] for _ in range(n)]
        for a, b, d in edges:
            graph[a].append((b, d))
            graph[b].append((a, d))

        # On veut un sous-ensemble d'arêtes connectant tous les sommets avec la somme minimale de longueurs
        # On peut utiliser un algorithme de Kruskal ou Prim pour trouver un arbre couvrant minimal (MST)
        # Puis le nombre de lanternes est la somme sur chaque arête de (distance / 100) lanternes
        # On vérifie que chaque distance est multiple de 100

        # Kruskal
        parent = [i for i in range(n)]

        def find(x):
            while parent[x] != x:
                x = parent[x]
            return x

        def union(a, b):
            pa = find(a)
            pb = find(b)
            if pa != pb:
                parent[pb] = pa
                return True
            return False

        edges_sorted = sorted(edges, key=lambda x: x[2])
        total_lanterns = 0
        for a, b, d in edges_sorted:
            if union(a, b):
                total_lanterns += d // 100  # lanternes à 100m d'intervalle sur cette route
        print(total_lanterns)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.33774250745773315
    2. '\n' → logprob: -1.837742567062378
    3. ' 
' → logprob: -2.712742567062378
    4. '    
' → logprob: -3.712742567062378
    5. ' ' → logprob: -4.837742328643799
    6. '   ' → logprob: -5.462742328643799
    7. '  
' → logprob: -5.712742328643799
    8. '(' → logprob: -5.837742328643799
    9. '    ' → logprob: -5.962742328643799
    10. ''' → logprob: -6.087742328643799

Token 4: ' while' (ID: 2049)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8913612365722656
    2. '   ' → logprob: -1.0163612365722656
    3. 'pass' → logprob: -1.7663612365722656
    4. 'return' → logprob: -3.2663612365722656
    5. '```' → logprob: -5.141361236572266
    6. '#' → logprob: -6.016361236572266
    7. ' pass' → logprob: -6.016361236572266
    8. '    ' → logprob: -6.266361236572266
    9. '\' → logprob: -6.516361236572266
    10. '    
' → logprob: -7.016361236572266

Token 5: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.32406696677207947
    2. ' ' → logprob: -1.3240669965744019
    3. '  ' → logprob: -5.574067115783691
    4. 'True' → logprob: -5.699067115783691
    5. ' not' → logprob: -6.824067115783691
    6. '"' → logprob: -7.199067115783691
    7. ''' → logprob: -8.074067115783691
    8. ' (' → logprob: -8.324067115783691
    9. '(' → logprob: -8.574067115783691
    10. ' a' → logprob: -8.699067115783691

Token 6: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005207431968301535
    2. '():' → logprob: -8.250520706176758
    3. ':
' → logprob: -9.625520706176758
    4. ' :' → logprob: -9.875520706176758
    5. '       ' → logprob: -9.875520706176758
    6. '):' → logprob: -10.750520706176758
    7. '(:' → logprob: -11.625520706176758
    8. ':**' → logprob: -11.750520706176758
    9. '```' → logprob: -11.875520706176758
    10. '   ' → logprob: -11.875520706176758

Token 7: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05449391156435013
    2. '        
' → logprob: -3.4294939041137695
    3. '\n' → logprob: -4.8044939041137695
    4. '```' → logprob: -5.3044939041137695
    5. '   ' → logprob: -6.6794939041137695
    6. '\' → logprob: -6.8044939041137695
    7. '    
' → logprob: -7.0544939041137695
    8. '`' → logprob: -7.4294939041137695
    9. ' 
' → logprob: -7.6794939041137695
    10. '(' → logprob: -7.6794939041137695

Token 8: ' n' (ID: 297)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6357077360153198
    2. ' ' → logprob: -1.8857077360153198
    3. '   ' → logprob: -2.3857078552246094
    4. '    ' → logprob: -2.7607078552246094
    5. '       ' → logprob: -3.1357078552246094
    6. 'user' → logprob: -4.010707855224609
    7. 'input' → logprob: -4.135707855224609
    8. '```' → logprob: -4.385707855224609
    9. 'try' → logprob: -4.760707855224609
    10. 'c' → logprob: -4.885707855224609

Token 9: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26495376229286194
    2. ' =' → logprob: -2.139953851699829
    3. ' ' → logprob: -3.139953851699829
    4. 'u' → logprob: -3.389953851699829
    5. '   ' → logprob: -4.26495361328125
    6. 'o' → logprob: -4.63995361328125
    7. '  ' → logprob: -5.76495361328125
    8. '.' → logprob: -6.01495361328125
    9. '_' → logprob: -6.13995361328125
    10. 'e' → logprob: -6.38995361328125

Token 10: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.7098705768585205
    2. ' input' → logprob: -0.9598705768585205
    3. 'int' → logprob: -2.7098705768585205
    4. 'input' → logprob: -2.8348705768585205
    5. '   ' → logprob: -10.334870338439941
    6. ' ' → logprob: -11.084870338439941
    7. ' float' → logprob: -11.459870338439941
    8. '=int' → logprob: -12.084870338439941
    9. 'float' → logprob: -13.209870338439941
    10. '<int' → logprob: -13.334870338439941

Token 11: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.76628842484206e-05
    2. '(input' → logprob: -10.500067710876465
    3. '(n' → logprob: -11.500067710876465
    4. ''' → logprob: -11.625067710876465
    5. '('' → logprob: -11.625067710876465
    6. ' (' → logprob: -12.625067710876465
    7. '()' → logprob: -13.000067710876465
    8. '```' → logprob: -13.750067710876465
    9. '(
' → logprob: -14.250067710876465
    10. '`' → logprob: -14.250067710876465

Token 12: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.212539941072464
    2. '()' → logprob: -1.9625399112701416
    3. '('' → logprob: -3.0875399112701416
    4. '("("' → logprob: -5.462540149688721
    5. ')' → logprob: -8.212539672851562
    6. '())' → logprob: -8.337539672851562
    7. '("")' → logprob: -8.587539672851562
    8. '(()' → logprob: -9.337539672851562
    9. ''' → logprob: -9.712539672851562
    10. '(""))' → logprob: -9.962539672851562

Token 13: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35018473863601685
    2. '<|end|>' → logprob: -1.600184679031372
    3. ')' → logprob: -3.100184679031372
    4. ' ' → logprob: -3.975184679031372
    5. ' if' → logprob: -4.475184917449951
    6. '    ' → logprob: -5.975184917449951
    7. 'if' → logprob: -5.975184917449951
    8. '   ' → logprob: -6.100184917449951
    9. '        ' → logprob: -6.350184917449951
    10. '        
' → logprob: -6.475184917449951

Token 14: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011779941618442535
    2. ' if' → logprob: -5.51177978515625
    3. 'if' (adapté à ' if') → logprob: -5.51177978515625
    4. '<|end|>' → logprob: -7.01177978515625
    5. ' ' → logprob: -7.13677978515625
    6. '   ' → logprob: -7.51177978515625
    7. '        ' → logprob: -7.63677978515625
    8. '    ' → logprob: -8.76177978515625
    9. '```' → logprob: -8.76177978515625
    10. '           ' → logprob: -9.51177978515625

Token 15: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0020566426683217287
    2. ' not' → logprob: -7.00205659866333
    3. ' ' → logprob: -7.12705659866333
    4. 'n' → logprob: -8.002057075500488
    5. 'not' → logprob: -12.877057075500488
    6. '  ' → logprob: -13.877057075500488
    7. ' ' → logprob: -14.002057075500488
    8. '<|end|>' → logprob: -14.252057075500488
    9. '	n' → logprob: -14.502057075500488
    10. '(n' → logprob: -15.502057075500488

Token 16: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10958161950111389
    2. ' <=' → logprob: -2.484581708908081
    3. ' <' → logprob: -4.859581470489502
    4. '==' → logprob: -4.984581470489502
    5. ' >' → logprob: -5.484581470489502
    6. ' ' → logprob: -6.859581470489502
    7. '<=' → logprob: -8.48458194732666
    8. '>' → logprob: -9.10958194732666
    9. '<' → logprob: -9.73458194732666
    10. ')' → logprob: -9.85958194732666

Token 17: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04300010949373245
    2. '0' → logprob: -3.1680002212524414
    3. ' -' → logprob: -14.793000221252441
    4. ' ' → logprob: -15.418000221252441
    5. '1' → logprob: -16.480499267578125
    6. '  ' → logprob: -16.980499267578125
    7. ')' → logprob: -17.417999267578125
    8. ' )' → logprob: -17.605499267578125
    9. ' EOF' → logprob: -17.605499267578125
    10. '=' → logprob: -17.605499267578125

Token 18: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004625579807907343
    2. ' ' → logprob: -5.3796257972717285
    3. '-' → logprob: -12.25462532043457
    4. ' -' → logprob: -15.37962532043457
    5. '1' → logprob: -16.00462532043457
    6. '42' → logprob: -16.50462532043457
    7. '   ' → logprob: -17.25462532043457
    8. '  ' → logprob: -17.25462532043457
    9. '```' → logprob: -17.75462532043457
    10. '4' → logprob: -18.00462532043457

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.754368223482743e-05
    2. ' :' → logprob: -10.250067710876465
    3. ':
' → logprob: -10.500067710876465
    4. ':return' → logprob: -13.375067710876465
    5. '):' → logprob: -13.500067710876465
    6. '       ' → logprob: -14.125067710876465
    7. '():' → logprob: -15.250067710876465
    8. '   ' → logprob: -15.875067710876465
    9. ':**' → logprob: -16.12506675720215
    10. '           ' → logprob: -16.62506675720215

Token 20: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011079183779656887
    2. ':' → logprob: -4.88607931137085
    3. '       ' → logprob: -6.51107931137085
    4. ' break' → logprob: -6.76107931137085
    5. '\n' → logprob: -7.88607931137085
    6. ':
' → logprob: -8.886078834533691
    7. '<|end|>' → logprob: -9.886078834533691
    8. '\' → logprob: -10.011078834533691
    9. '   ' → logprob: -10.136078834533691
    10. '	break' → logprob: -11.011078834533691

Token 21: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5908167362213135
    2. ' break' → logprob: -0.8408167362213135
    3. '       ' → logprob: -4.465816497802734
    4. 'break' (adapté à ' break') → logprob: -6.090816497802734
    5. '\n' → logprob: -7.715816497802734
    6. '```' → logprob: -8.965816497802734
    7. '        ' → logprob: -9.090816497802734
    8. '            ' → logprob: -9.215816497802734
    9. '   ' → logprob: -9.965816497802734
    10. '               ' → logprob: -10.090816497802734

Token 22: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5059210062026978
    2. '\n' → logprob: -1.6309210062026978
    3. '\' → logprob: -2.255920886993408
    4. '<|end|>' → logprob: -2.755920886993408
    5. ':' → logprob: -4.630920886993408
    6. '
' → logprob: -5.130920886993408
    7. '   ' → logprob: -5.630920886993408
    8. '    ' → logprob: -6.005920886993408
    9. ')' → logprob: -6.255920886993408
    10. '        
' → logprob: -6.380920886993408

Token 23: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16380956768989563
    2. '<|end|>' → logprob: -2.5388095378875732
    3. '\' → logprob: -3.5388095378875732
    4. '\n' → logprob: -3.9138095378875732
    5. '        
' → logprob: -4.788809776306152
    6. ')' → logprob: -5.788809776306152
    7. '
' → logprob: -5.788809776306152
    8. '   ' → logprob: -6.538809776306152
    9. '```' → logprob: -6.913809776306152
    10. '#' → logprob: -7.038809776306152

Token 24: ' m' (ID: 284)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37654250860214233
    2. '<|end|>' → logprob: -1.751542568206787
    3. ' ' → logprob: -2.751542568206787
    4. '        ' → logprob: -3.501542568206787
    5. '\' → logprob: -4.376542568206787
    6. '    ' → logprob: -5.001542568206787
    7. '   ' → logprob: -5.126542568206787
    8. '<|end|>' → logprob: -5.251542568206787
    9. ')' → logprob: -5.626542568206787
    10. '\n' → logprob: -6.001542568206787

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0918520912528038
    2. '=' → logprob: -3.4668521881103516
    3. 'ax' → logprob: -3.7168521881103516
    4. 'a' → logprob: -4.841852188110352
    5. 'ultiply' → logprob: -5.466852188110352
    6. ' ' → logprob: -6.091852188110352
    7. 'ultip' → logprob: -6.466852188110352
    8. ' +=' → logprob: -6.716852188110352
    9. ',' → logprob: -6.841852188110352
    10. '    ' → logprob: -6.841852188110352

Token 26: ' int' (ID: 677)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12740269303321838
    2. 'n' → logprob: -2.6274027824401855
    3. ' int' → logprob: -4.2524027824401855
    4. ' ' → logprob: -4.5024027824401855
    5. ' []' → logprob: -4.7524027824401855
    6. 'int' → logprob: -4.8774027824401855
    7. ' sum' → logprob: -6.3774027824401855
    8. '[]' → logprob: -6.6274027824401855
    9. '0' → logprob: -7.1274027824401855
    10. 'sum' → logprob: -7.5024027824401855

Token 27: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0019515875028446317
    2. '(' → logprob: -6.251951694488525
    3. 'input' → logprob: -11.376951217651367
    4. '()' → logprob: -11.626951217651367
    5. ' (' → logprob: -13.626951217651367
    6. '=input' → logprob: -14.376951217651367
    7. ' input' → logprob: -14.876951217651367
    8. '<input' → logprob: -16.251951217651367
    9. ' ' → logprob: -16.376951217651367
    10. '[input' → logprob: -16.501951217651367

Token 28: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01826910674571991
    2. '()' → logprob: -4.018269062042236
    3. ')' → logprob: -9.143269538879395
    4. ' ())' → logprob: -11.643269538879395
    5. '();)' → logprob: -14.018269538879395
    6. '())
' → logprob: -14.268269538879395
    7. '()
' → logprob: -14.268269538879395
    8. '()))' → logprob: -14.643269538879395
    9. '()]' → logprob: -15.518269538879395
    10. '(' → logprob: -15.643269538879395

Token 29: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: ' edges' (ID: 22569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49814385175704956
    2. ' ' → logprob: -1.9981439113616943
    3. '<|end|>' → logprob: -2.6231439113616943
    4. '\n' → logprob: -3.9981439113616943
    5. '        ' → logprob: -4.123143672943115
    6. 'n' → logprob: -4.248143672943115
    7. ' 
' → logprob: -4.248143672943115
    8. ')' → logprob: -4.373143672943115
    9. '#' → logprob: -4.748143672943115
    10. '   ' → logprob: -4.873143672943115

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015436685644090176
    2. '=' → logprob: -6.6265435218811035
    3. '[' → logprob: -9.251543998718262
    4. '.append' → logprob: -10.376543998718262
    5. ' ' → logprob: -10.626543998718262
    6. '.' → logprob: -10.751543998718262
    7. '_' → logprob: -11.751543998718262
    8. '=[]' → logprob: -11.876543998718262
    9. '    ' → logprob: -12.126543998718262
    10. '.setdefault' → logprob: -12.251543998718262

Token 32: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.20154382288455963
    2. '[]' → logprob: -1.7015438079833984
    3. ' {}' → logprob: -10.201543807983398
    4. '{}' → logprob: -10.326543807983398
    5. ' [' → logprob: -10.576543807983398
    6. '[' → logprob: -10.701543807983398
    7. ' ' → logprob: -12.076543807983398
    8. ' set' → logprob: -13.576543807983398
    9. ' [[]' → logprob: -13.701543807983398
    10. 'set' → logprob: -14.076543807983398

Token 33: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1277245283126831
    2. '	for' → logprob: -2.6277246475219727
    3. ' for' → logprob: -3.8777246475219727
    4. '       ' → logprob: -3.8777246475219727
    5. '   ' → logprob: -5.377724647521973
    6. '\t' → logprob: -7.502724647521973
    7. '<|end|>' → logprob: -7.752724647521973
    8. '	' → logprob: -8.627724647521973
    9. '	   ' → logprob: -9.002724647521973
    10. '[' → logprob: -9.002724647521973

Token 35: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.14938992261886597
    2. ' i' → logprob: -2.0243899822235107
    3. ' ' → logprob: -5.274389743804932
    4. '_' → logprob: -6.524389743804932
    5. 'i' → logprob: -9.89939022064209
    6. ' ‌' → logprob: -10.27439022064209
    7. ' ▁' → logprob: -12.02439022064209
    8. ' ​' → logprob: -12.64939022064209
    9. '  ' → logprob: -12.77439022064209
    10. '_i' → logprob: -13.02439022064209

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002349838148802519
    2. 'in' → logprob: -6.377349853515625
    3. ' ' → logprob: -8.377349853515625
    4. 'i' → logprob: -8.502349853515625
    5. ' i' → logprob: -8.627349853515625
    6. '  ' → logprob: -11.002349853515625
    7. 'range' → logprob: -12.502349853515625
    8. '<|end|>' → logprob: -12.627349853515625
    9. 'n' → logprob: -12.877349853515625
    10. ' _' → logprob: -13.252349853515625

Token 37: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033677343162707984
    2. ' range' → logprob: -8.000336647033691
    3. 'rang' → logprob: -14.500336647033691
    4. 'ran' → logprob: -15.000336647033691
    5. 'm' → logprob: -16.125337600708008
    6. '	range' → logprob: -16.375337600708008
    7. '(range' → logprob: -16.500337600708008
    8. 'r' → logprob: -16.875337600708008
    9. 'ange' → logprob: -17.125337600708008
    10. 'ra' → logprob: -17.500337600708008

Token 38: '(m' (ID: 2145)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2893938720226288
    2. '(' → logprob: -1.4143939018249512
    3. '(m' → logprob: -5.414393901824951
    4. ' (' → logprob: -5.789393901824951
    5. '(range' → logprob: -7.539393901824951
    6. ' n' → logprob: -9.164393424987793
    7. '(s' → logprob: -10.664393424987793
    8. ' range' → logprob: -11.164393424987793
    9. ' ' → logprob: -11.414393424987793
    10. ' m' → logprob: -12.289393424987793

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011313649825751781
    2. ')' → logprob: -4.636313438415527
    3. ' ):' → logprob: -6.761313438415527
    4. ':' → logprob: -8.261313438415527
    5. '):
' → logprob: -9.636313438415527
    6. ' )' → logprob: -10.386313438415527
    7. '   ' → logprob: -11.136313438415527
    8. '():' → logprob: -11.386313438415527
    9. '       ' → logprob: -12.386313438415527
    10. ' :' → logprob: -12.761313438415527

Token 40: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9916059970855713
    2. '   ' → logprob: -1.1166059970855713
    3. '<|end|>' → logprob: -1.4916059970855713
    4. '           ' → logprob: -3.4916059970855713
    5. '    ' → logprob: -4.116605758666992
    6. ' ' → logprob: -5.116605758666992
    7. '        ' → logprob: -5.116605758666992
    8. ' edges' → logprob: -5.491605758666992
    9. '<|end|>' → logprob: -5.491605758666992
    10. '(edges' → logprob: -5.616605758666992

Token 41: ' line' (ID: 2543)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.13854214549064636
    2. 'edges' → logprob: -2.7635421752929688
    3. ' edge' → logprob: -3.0135421752929688
    4. ' line' → logprob: -5.138542175292969
    5. 'edge' → logprob: -5.263542175292969
    6. ' u' → logprob: -5.888542175292969
    7. 'e' → logprob: -7.513542175292969
    8. 'line' (adapté à ' line') → logprob: -8.013542175292969
    9. ' s' → logprob: -8.013542175292969
    10. ' graph' → logprob: -8.138542175292969

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015070053050294518
    2. '=' → logprob: -6.501506805419922
    3. 's' → logprob: -12.876506805419922
    4. '_' → logprob: -14.251506805419922
    5. ')' → logprob: -14.376506805419922
    6. ' ' → logprob: -14.876506805419922
    7. '  ' → logprob: -16.376506805419922
    8. '=input' → logprob: -16.376506805419922
    9. ',' → logprob: -16.501506805419922
    10. ' )' → logprob: -16.626506805419922

Token 43: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.00988499540835619
    2. 'input' → logprob: -4.634884834289551
    3. ' list' → logprob: -9.00988483428955
    4. ' ' → logprob: -12.75988483428955
    5. 'list' → logprob: -13.13488483428955
    6. '	input' → logprob: -14.25988483428955
    7. '=input' → logprob: -14.38488483428955
    8. ' int' → logprob: -15.75988483428955
    9. ' ' → logprob: -16.009885787963867
    10. ' tuple' → logprob: -16.259885787963867

Token 44: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004133253358304501
    2. '().' → logprob: -5.504133224487305
    3. '())' → logprob: -10.379133224487305
    4. '(' → logprob: -11.379133224487305
    5. ' ()' → logprob: -12.379133224487305
    6. '()
' → logprob: -13.004133224487305
    7. '()>' → logprob: -13.879133224487305
    8. '();' → logprob: -14.254133224487305
    9. '()

' → logprob: -14.379133224487305
    10. '()(' → logprob: -14.754133224487305

Token 45: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' a' (ID: 261)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.33328554034233093
    2. ' ' → logprob: -1.5832855701446533
    3. 'edges' → logprob: -3.7082855701446533
    4. '        ' → logprob: -3.9582855701446533
    5. ' parts' → logprob: -4.833285331726074
    6. '       ' → logprob: -4.958285331726074
    7. '<|end|>' → logprob: -5.583285331726074
    8. ' u' → logprob: -6.083285331726074
    9. '            ' → logprob: -6.333285331726074
    10. ' tokens' → logprob: -6.583285331726074

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.044672828167676926
    2. ' ,' → logprob: -3.169672727584839
    3. ' ' → logprob: -7.044672966003418
    4. ',b' → logprob: -7.919672966003418
    5. ',a' → logprob: -8.919672966003418
    6. 's' → logprob: -10.169672966003418
    7. 'r' → logprob: -10.169672966003418
    8. '<|end|>' → logprob: -10.169672966003418
    9. ' =' → logprob: -10.294672966003418
    10. '=' → logprob: -10.294672966003418

Token 48: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.13620315492153168
    2. 'b' → logprob: -2.3862030506134033
    3. ' ' → logprob: -3.3862030506134033
    4. ' =' → logprob: -7.136203289031982
    5. '=' → logprob: -8.011202812194824
    6. '<|end|>' → logprob: -8.261202812194824
    7. ' ,' → logprob: -10.136202812194824
    8. 's' → logprob: -10.761202812194824
    9. ' ' → logprob: -11.636202812194824
    10. ',' → logprob: -11.636202812194824

Token 49: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03414536640048027
    2. '=' → logprob: -3.4091453552246094
    3. ',' → logprob: -7.659145355224609
    4. ' ,' → logprob: -11.15914535522461
    5. ' ' → logprob: -11.53414535522461
    6. ')' → logprob: -13.40914535522461
    7. ' =
' → logprob: -14.90914535522461
    8. '  ' → logprob: -15.03414535522461
    9. '<|end|>' → logprob: -15.15914535522461
    10. '.' → logprob: -16.03414535522461

Token 50: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40283524990081787
    2. ' c' → logprob: -1.6528352499008179
    3. '=' → logprob: -3.0278353691101074
    4. ' ' → logprob: -3.0278353691101074
    5. 'c' → logprob: -3.1528353691101074
    6. '  ' → logprob: -9.15283489227295
    7. '    ' → logprob: -9.40283489227295
    8. ',' → logprob: -9.77783489227295
    9. ' ,' → logprob: -10.02783489227295
    10. ' line' → logprob: -10.77783489227295

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3136431574821472
    2. '=' → logprob: -1.313643217086792
    3. ',' → logprob: -7.938642978668213
    4. ' ' → logprob: -11.063643455505371
    5. ')' → logprob: -13.188643455505371
    6. ' ,' → logprob: -13.688643455505371
    7. '  ' → logprob: -13.938643455505371
    8. '=line' → logprob: -13.938643455505371
    9. '.' → logprob: -14.313643455505371
    10. '   ' → logprob: -14.688643455505371

Token 52: ' line' (ID: 2543)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.48959168791770935
    2. ' line' → logprob: -0.9895917177200317
    3. 'line' → logprob: -4.739591598510742
    4. 'map' → logprob: -5.114591598510742
    5. ' ' → logprob: -7.489591598510742
    6. ' ' → logprob: -10.864591598510742
    7. ' list' → logprob: -10.989591598510742
    8. ' [' → logprob: -10.989591598510742
    9. '[line' → logprob: -11.614591598510742
    10. '=line' → logprob: -12.614591598510742

Token 53: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.477607786655426
    2. '.' → logprob: -0.977607786655426
    3. '.strip' → logprob: -6.477607727050781
    4. '=' → logprob: -6.852607727050781
    5. ' .' → logprob: -8.102607727050781
    6. ' =' → logprob: -8.227607727050781
    7. '().' → logprob: -8.477607727050781
    8. 'split' → logprob: -9.102607727050781
    9. '.rstrip' → logprob: -11.102607727050781
    10. '.=' → logprob: -11.852607727050781

Token 54: '(',')
' (ID: 161318)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006348453927785158
    2. '('' → logprob: -5.506348609924316
    3. '(' → logprob: -6.131348609924316
    4. '("("' → logprob: -10.381348609924316
    5. '("' → logprob: -10.506348609924316
    6. '()
' → logprob: -10.756348609924316
    7. '(',' → logprob: -12.256348609924316
    8. '(),' → logprob: -13.506348609924316
    9. '()

' → logprob: -13.881348609924316
    10. '()]' → logprob: -14.131348609924316

Token 55: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3503243029117584
    2. '<|end|>' → logprob: -1.225324273109436
    3. ' )' → logprob: -7.2253241539001465
    4. '<|end|>' → logprob: -7.4753241539001465
    5. ' 
' → logprob: -8.725324630737305
    6. ' ' → logprob: -9.350324630737305
    7. ')' → logprob: -9.475324630737305
    8. ' ")' → logprob: -10.100324630737305
    9. '        ' → logprob: -10.100324630737305
    10. '    ' → logprob: -10.350324630737305

Token 56: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014114021323621273
    2. '<|end|>' → logprob: -4.389113903045654
    3. ' )' → logprob: -7.389113903045654
    4. 's' → logprob: -8.139114379882812
    5. ')' → logprob: -8.764114379882812
    6. ' ' → logprob: -9.014114379882812
    7. ' d' → logprob: -9.639114379882812
    8. 'd' → logprob: -9.889114379882812
    9. ' a' → logprob: -10.014114379882812
    10. '<|end|>' → logprob: -10.514114379882812

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04249297454953194
    2. '=' → logprob: -3.4174928665161133
    3. ',' → logprob: -4.792492866516113
    4. ' ,' → logprob: -8.292492866516113
    5. '.strip' → logprob: -8.667492866516113
    6. '=int' → logprob: -10.292492866516113
    7. '<|end|>' → logprob: -11.042492866516113
    8. ' ' → logprob: -11.167492866516113
    9. ')' → logprob: -11.417492866516113
    10. ' =
' → logprob: -12.167492866516113

Token 58: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.08951787650585175
    2. 'int' → logprob: -2.964517831802368
    3. ' a' → logprob: -3.589517831802368
    4. 'a' → logprob: -5.089518070220947
    5. ' ' → logprob: -8.339517593383789
    6. ' in' → logprob: -12.089517593383789
    7. '[int' → logprob: -12.589517593383789
    8. '(int' → logprob: -12.714517593383789
    9. '=int' → logprob: -12.714517593383789
    10. '<int' → logprob: -13.089517593383789

Token 59: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0011723674833774567
    2. '(' → logprob: -6.7511725425720215
    3. 'a' → logprob: -13.251172065734863
    4. '(A' → logprob: -16.37617301940918
    5. '()' → logprob: -16.62617301940918
    6. ' (' → logprob: -16.75117301940918
    7. '(
' → logprob: -17.00117301940918
    8. '('' → logprob: -18.00117301940918
    9. '(ai' → logprob: -18.00117301940918
    10. '(x' → logprob: -18.12617301940918

Token 60: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006798495072871447
    2. ')
' → logprob: -5.131798267364502
    3. ' )' → logprob: -7.256798267364502
    4. '.strip' → logprob: -10.13179874420166
    5. '<|end|>' → logprob: -10.13179874420166
    6. ' )
' → logprob: -10.50679874420166
    7. '),' → logprob: -11.13179874420166
    8. ')

' → logprob: -11.63179874420166
    9. ' ' → logprob: -12.00679874420166
    10. ',' → logprob: -12.13179874420166

Token 61: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.6109952330589294
    2. ' ' → logprob: -1.3609952926635742
    3. 'b' (adapté à ' b') → logprob: -1.6109952926635742
    4. '<|end|>' → logprob: -7.985995292663574
    5. ')' → logprob: -8.360995292663574
    6. ' )' → logprob: -8.485995292663574
    7. ' ' → logprob: -8.860995292663574
    8. ' 
' → logprob: -10.110995292663574
    9. ')b' → logprob: -10.360995292663574
    10. '(b' → logprob: -10.860995292663574

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016957873478531837
    2. '=' → logprob: -4.266957759857178
    3. ')' → logprob: -6.016957759857178
    4. '<|end|>' → logprob: -8.641958236694336
    5. ' )' → logprob: -9.141958236694336
    6. ' =)' → logprob: -10.266958236694336
    7. ' ' → logprob: -10.891958236694336
    8. '=int' → logprob: -12.266958236694336
    9. '<|end|>' → logprob: -12.391958236694336
    10. ')=' → logprob: -12.891958236694336

Token 64: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.38688623905181885
    2. 'int' → logprob: -1.1368862390518188
    3. '[int' → logprob: -12.386886596679688
    4. '<int' → logprob: -12.511886596679688
    5. '=int' → logprob: -13.011886596679688
    6. ' ' → logprob: -13.261886596679688
    7. '(int' → logprob: -13.511886596679688
    8. '	int' → logprob: -14.261886596679688
    9. ':int' → logprob: -14.761886596679688
    10. ' ' → logprob: -15.261886596679688

Token 65: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0006509594968520105
    2. '(' → logprob: -7.375650882720947
    3. ')' → logprob: -11.500651359558105
    4. ' (' → logprob: -11.625651359558105
    5. '(d' → logprob: -13.125651359558105
    6. 'b' → logprob: -13.500651359558105
    7. ')b' → logprob: -13.750651359558105
    8. ' b' → logprob: -15.500651359558105
    9. '(a' → logprob: -16.00065040588379
    10. ')(' → logprob: -16.25065040588379

Token 66: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007817533914931118
    2. ')
' → logprob: -7.875781536102295
    3. '<|end|>' → logprob: -8.500782012939453
    4. ' )' → logprob: -8.875782012939453
    5. '<|end|>' → logprob: -10.750782012939453
    6. ')d' → logprob: -11.000782012939453
    7. ',' → logprob: -11.750782012939453
    8. '       ' → logprob: -13.125782012939453
    9. '),' → logprob: -13.125782012939453
    10. '           ' → logprob: -13.375782012939453

Token 67: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14895421266555786
    2. '        ' → logprob: -2.648954153060913
    3. ' d' → logprob: -3.898954153060913
    4. ' =' → logprob: -4.273954391479492
    5. 'd' → logprob: -4.523954391479492
    6. '<|end|>' → logprob: -4.898954391479492
    7. '       ' → logprob: -5.773954391479492
    8. ' ' → logprob: -5.898954391479492
    9. ' 	' → logprob: -6.023954391479492
    10. ' ,' → logprob: -7.148954391479492

Token 68: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3389408588409424
    2. 'd' (adapté à ' d') → logprob: -1.3389408588409424
    3. 'int' → logprob: -3.8389408588409424
    4. ' int' → logprob: -5.588940620422363
    5. ' ' → logprob: -10.213940620422363
    6. '    ' → logprob: -11.713940620422363
    7. '            ' → logprob: -11.713940620422363
    8. '	d' → logprob: -11.838940620422363
    9. ' ' → logprob: -12.213940620422363
    10. '	int' → logprob: -12.588940620422363

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026585092768073082
    2. '=' → logprob: -3.651585102081299
    3. '=int' → logprob: -8.90158462524414
    4. '<|end|>' → logprob: -9.52658462524414
    5. ' ' → logprob: -9.90158462524414
    6. ')' → logprob: -11.65158462524414
    7. ' =
' → logprob: -11.65158462524414
    8. '<|end|>' → logprob: -13.40158462524414
    9. 'space' → logprob: -13.90158462524414
    10. '.' → logprob: -13.90158462524414

Token 70: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20207692682743073
    2. ' int' → logprob: -1.7020769119262695
    3. 'float' → logprob: -7.9520769119262695
    4. ' float' → logprob: -8.07707691192627
    5. ' ' → logprob: -14.95207691192627
    6. '[int' → logprob: -15.20207691192627
    7. '<int' → logprob: -16.452077865600586
    8. 'd' → logprob: -16.577077865600586
    9. '=int' → logprob: -16.577077865600586
    10. '(int' → logprob: -17.077077865600586

Token 71: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.011049113236367702
    2. '(' → logprob: -4.511049270629883
    3. ')' → logprob: -14.386049270629883
    4. '(
' → logprob: -15.261049270629883
    5. ' (' → logprob: -15.636049270629883
    6. ')d' → logprob: -16.011049270629883
    7. 'd' → logprob: -16.386049270629883
    8. '(D' → logprob: -16.886049270629883
    9. '(

' → logprob: -17.511049270629883
    10. '(distance' → logprob: -17.761049270629883

Token 72: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006295174825936556
    2. ')
' → logprob: -7.375629425048828
    3. ')
' → logprob: -13.750629425048828
    4. ')

' → logprob: -14.750629425048828
    5. ' )' → logprob: -14.750629425048828
    6. '       ' → logprob: -14.875629425048828
    7. '<|end|>' → logprob: -15.750629425048828
    8. '           ' → logprob: -15.875629425048828
    9. ')`' → logprob: -16.000629425048828
    10. '),' → logprob: -16.875629425048828

Token 73: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023133665323257446
    2. '<|end|>' → logprob: -4.398133754730225
    3. '           ' → logprob: -5.273133754730225
    4. ' edges' → logprob: -5.648133754730225
    5. 'edges' → logprob: -7.148133754730225
    6. ')' → logprob: -8.023133277893066
    7. '<|end|>' → logprob: -8.148133277893066
    8. '   ' → logprob: -8.898133277893066
    9. ',' → logprob: -9.523133277893066
    10. '(edges' → logprob: -9.523133277893066

Token 74: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.592201828956604
    2. ' edges' → logprob: -0.967201828956604
    3. '       ' → logprob: -2.9672017097473145
    4. '           ' → logprob: -4.9672017097473145
    5. '<|end|>' → logprob: -5.7172017097473145
    6. ')' → logprob: -6.4672017097473145
    7. '(edges' → logprob: -6.7172017097473145
    8. '_edges' → logprob: -7.3422017097473145
    9. '.edges' → logprob: -7.5922017097473145
    10. '   ' → logprob: -8.092202186584473

Token 75: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.062022022902965546
    2. '.' → logprob: -2.8120219707489014
    3. ' .' → logprob: -10.43702220916748
    4. '.app' → logprob: -11.93702220916748
    5. '.extend' → logprob: -12.06202220916748
    6. '.setdefault' → logprob: -12.56202220916748
    7. '.push' → logprob: -12.68702220916748
    8. '.add' → logprob: -12.81202220916748
    9. '.ap' → logprob: -14.06202220916748
    10. '.Append' → logprob: -14.18702220916748

Token 76: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.004094666335731745
    2. '(' → logprob: -5.50409460067749
    3. '(a' → logprob: -11.129095077514648
    4. '(((' → logprob: -14.004095077514648
    5. '(('' → logprob: -15.629095077514648
    6. '(
' → logprob: -15.754095077514648
    7. '([' → logprob: -16.62909507751465
    8. ' ((' → logprob: -17.62909507751465
    9. '(([' → logprob: -17.87909507751465
    10. '([(' → logprob: -18.12909507751465

Token 77: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -5.676981345459353e-06
    2. ' a' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.5000057220459
    4. ')a' → logprob: -17.0000057220459
    5. '(a' → logprob: -17.2500057220459
    6. 'b' → logprob: -17.2500057220459
    7. ')' → logprob: -17.5000057220459
    8. '	a' → logprob: -18.2500057220459
    9. '    ' → logprob: -18.7500057220459
    10. ' ' → logprob: -19.1250057220459

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006027150084264576
    2. ' ,' → logprob: -8.000602722167969
    3. ',b' → logprob: -8.250602722167969
    4. ',d' → logprob: -12.875602722167969
    5. ',
' → logprob: -13.250602722167969
    6. '-' → logprob: -14.500602722167969
    7. ' ' → logprob: -15.250602722167969
    8. ',a' → logprob: -15.500602722167969
    9. ')' → logprob: -15.750602722167969
    10. 'b' → logprob: -15.875602722167969

Token 79: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.020572137087583542
    2. ' b' → logprob: -3.8955721855163574
    3. '<|end|>' → logprob: -10.5205717086792
    4. ' ' → logprob: -13.5205717086792
    5. ')b' → logprob: -13.7705717086792
    6. ')' → logprob: -14.8955717086792
    7. '<|end|>' → logprob: -16.020572662353516
    8. ',' → logprob: -16.145572662353516
    9. ',b' → logprob: -17.020572662353516
    10. '	b' → logprob: -17.395572662353516

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.088138227118179e-05
    2. ' ,' → logprob: -10.375070571899414
    3. ',d' → logprob: -11.125070571899414
    4. ',
' → logprob: -11.375070571899414
    5. ')' → logprob: -11.625070571899414
    6. ',)' → logprob: -14.000070571899414
    7. '<|end|>' → logprob: -14.125070571899414
    8. '),' → logprob: -14.250070571899414
    9. '))' → logprob: -14.750070571899414
    10. ',

' → logprob: -15.000070571899414

Token 81: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4740842282772064
    2. 'd' → logprob: -0.9740842580795288
    3. ')d' → logprob: -12.59908390045166
    4. ')' → logprob: -13.09908390045166
    5. ' ' → logprob: -14.59908390045166
    6. ' )' → logprob: -14.72408390045166
    7. ' ' → logprob: -14.97408390045166
    8. '    ' → logprob: -15.59908390045166
    9. ' 
' → logprob: -16.599084854125977
    10. '	d' → logprob: -16.599084854125977

Token 82: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.062178414314985275
    2. ')' → logprob: -2.812178373336792
    3. '))
' → logprob: -8.562178611755371
    4. ')))' → logprob: -11.812178611755371
    5. ')
' → logprob: -12.562178611755371
    6. '),' → logprob: -12.812178611755371
    7. ' ))' → logprob: -12.812178611755371
    8. ',' → logprob: -13.312178611755371
    9. ' )' → logprob: -15.062178611755371
    10. '       ' → logprob: -15.187178611755371

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7400093674659729
    2. '<|end|>' → logprob: -0.8650093674659729
    3. '
' → logprob: -2.615009307861328
    4. '        
' → logprob: -3.865009307861328
    5. '```' → logprob: -6.240009307861328
    6. '<|end|>' → logprob: -6.740009307861328
    7. '   ' → logprob: -6.865009307861328
    8. ')' → logprob: -6.865009307861328
    9. '#' → logprob: -8.240009307861328
    10. '        ' → logprob: -8.240009307861328

Token 84: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.641571044921875
    2. ' #' → logprob: -1.766571044921875
    3. ' ' → logprob: -1.891571044921875
    4. '       ' → logprob: -3.016571044921875
    5. '   ' → logprob: -3.641571044921875
    6. 'import' → logprob: -4.641571044921875
    7. '    ' → logprob: -4.766571044921875
    8. '<|end|>' → logprob: -4.766571044921875
    9. 'from' → logprob: -5.016571044921875
    10. 'def' → logprob: -5.516571044921875

Token 86: ' va' (ID: 3423)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.020269399508833885
    2. ' e' → logprob: -5.020269393920898
    3. '       ' → logprob: -5.145269393920898
    4. 't' → logprob: -5.895269393920898
    5. '#' → logprob: -6.895269393920898
    6. '   ' → logprob: -7.020269393920898
    7. 's' → logprob: -7.395269393920898
    8. 'd' → logprob: -7.645269393920898
    9. '        ' → logprob: -7.770269393920898
    10. 'ce' → logprob: -8.020269393920898

Token 87: ' créer' (ID: 40938)
  Prédit: ' construire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' construire' → logprob: -0.6415150761604309
    2. ' continuer' → logprob: -1.8915150165557861
    3. '   ' → logprob: -3.141515016555786
    4. ' créer' → logprob: -3.266515016555786
    5. ' continue' → logprob: -3.391515016555786
    6. ' ' → logprob: -3.516515016555786
    7. ' utiliser' → logprob: -3.641515016555786
    8. ' construir' → logprob: -3.766515016555786
    9. ' build' → logprob: -4.516515254974365
    10. '    ' → logprob: -4.766515254974365

Token 88: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.07050995528697968
    2. 'un' → logprob: -3.945509910583496
    3. 'adj' → logprob: -4.695509910583496
    4. ' une' → logprob: -4.820509910583496
    5. ' ' → logprob: -5.070509910583496
    6. '<|end|>' → logprob: -5.320509910583496
    7. 'une' → logprob: -5.695509910583496
    8. 'graph' → logprob: -6.070509910583496
    9. ' graph' → logprob: -6.570509910583496
    10. 'l' → logprob: -6.695509910583496

Token 89: ' grap' (ID: 60955)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.45967239141464233
    2. ' graph' → logprob: -1.459672451019287
    3. 'd' → logprob: -3.084672451019287
    4. ' grap' → logprob: -3.709672451019287
    5. ' diction' → logprob: -4.209672451019287
    6. 'dict' → logprob: -4.584672451019287
    7. '<|end|>' → logprob: -4.584672451019287
    8. ' defaultdict' → logprob: -4.834672451019287
    9. ' d' → logprob: -5.459672451019287
    10. 'gr' → logprob: -5.834672451019287

Token 90: 'he' (ID: 273)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.47471070289611816
    2. 'he' → logprob: -0.9747107028961182
    3. '#' → logprob: -9.099710464477539
    4. '}' → logprob: -9.349710464477539
    5. 'phe' → logprob: -9.599710464477539
    6. 'ph' → logprob: -9.974710464477539
    7. 'aphe' → logprob: -10.099710464477539
    8. '   ' → logprob: -10.224710464477539
    9. '       ' → logprob: -10.349710464477539
    10. 'heme' → logprob: -10.599710464477539

Token 91: ' sous' (ID: 14487)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.5118334889411926
    2. 'form' → logprob: -1.6368334293365479
    3. 'forme' → logprob: -1.6368334293365479
    4. ' form' → logprob: -4.636833667755127
    5. 'forma' → logprob: -8.011833190917969
    6. 'd' → logprob: -8.386833190917969
    7. 'formes' → logprob: -8.386833190917969
    8. '_form' → logprob: -9.136833190917969
    9. '```' → logprob: -9.511833190917969
    10. '-' → logprob: -9.511833190917969

Token 93: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0058320760726929
    2. 'd' → logprob: -1.1308320760726929
    3. ' d' → logprob: -1.8808320760726929
    4. 'de' → logprob: -1.8808320760726929
    5. '<|end|>' → logprob: -5.130832195281982
    6. 'adj' → logprob: -9.380831718444824
    7. 'dict' → logprob: -9.380831718444824
    8. '<|end|>' → logprob: -9.505831718444824
    9. ' ' → logprob: -9.630831718444824
    10. ' defaultdict' → logprob: -10.255831718444824

Token 94: ' liste' (ID: 31719)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.46543338894844055
    2. ' diction' → logprob: -1.7154333591461182
    3. ' dict' → logprob: -2.215433359146118
    4. ' d' → logprob: -3.340433359146118
    5. 'dict' → logprob: -3.715433359146118
    6. ' liste' → logprob: -4.840433597564697
    7. ' defaultdict' → logprob: -4.965433597564697
    8. 'liste' → logprob: -5.715433597564697
    9. ' dictionary' → logprob: -6.465433597564697
    10. ' listes' → logprob: -7.215433597564697

Token 95: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: ''ad' (ID: 36162)
  Prédit: ''ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ad' → logprob: -0.034012407064437866
    2. 'adj' → logprob: -3.9090123176574707
    3. '’ad' → logprob: -4.659012317657471
    4. ' adjacency' → logprob: -6.659012317657471
    5. '_ad' → logprob: -7.034012317657471
    6. '_adj' → logprob: -7.659012317657471
    7. '-ad' → logprob: -7.784012317657471
    8. '   ' → logprob: -8.034012794494629
    9. ''' → logprob: -9.034012794494629
    10. '-' → logprob: -9.659012794494629

Token 97: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.42932477593421936
    2. 'j' → logprob: -1.054324746131897
    3. 'acency' → logprob: -8.554325103759766
    4. 'ja' → logprob: -9.304325103759766
    5. 'jec' → logprob: -9.304325103759766
    6. '```' → logprob: -9.304325103759766
    7. 'd' → logprob: -10.054325103759766
    8. 'ac' → logprob: -11.179325103759766
    9. 'jc' → logprob: -11.179325103759766
    10. 'g' → logprob: -11.554325103759766

Token 98: 'ence' (ID: 1082)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.4618881642818451
    2. 'acency' → logprob: -1.0868881940841675
    3. 'ence' → logprob: -3.961888074874878
    4. 'cence' → logprob: -5.711888313293457
    5. '```' → logprob: -5.961888313293457
    6. 'ences' → logprob: -6.461888313293457
    7. 'acement' → logprob: -7.336888313293457
    8. 'acent' → logprob: -7.336888313293457
    9. 'c' → logprob: -7.586888313293457
    10. '##' → logprob: -7.711888313293457

Token 99: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10476388037204742
    2. '        
' → logprob: -3.854763984680176
    3. '   ' → logprob: -4.229763984680176
    4. '<|end|>' → logprob: -4.229763984680176
    5. '
' → logprob: -4.479763984680176
    6. 'n' → logprob: -4.604763984680176
    7. ',' → logprob: -4.604763984680176
    8. '    
' → logprob: -5.854763984680176
    9. '    ' → logprob: -5.979763984680176
    10. 'graph' → logprob: -6.104763984680176

Token 100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03733626753091812
    2. 'n' → logprob: -4.537336349487305
    3. '        
' → logprob: -4.537336349487305
    4. '
' → logprob: -5.412336349487305
    5. '   ' → logprob: -5.787336349487305
    6. 'graph' → logprob: -5.787336349487305
    7. '    
' → logprob: -6.912336349487305
    8. '<|end|>' → logprob: -7.162336349487305
    9. '    ' → logprob: -7.787336349487305
    10. ' ' → logprob: -7.912336349487305

Token 101: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.2306884527206421
    2. ' graph' → logprob: -1.730688452720642
    3. '       ' → logprob: -3.7306885719299316
    4. '	graph' → logprob: -5.980688571929932
    5. 'n' → logprob: -6.730688571929932
    6. '   ' → logprob: -8.230688095092773
    7. 'g' → logprob: -8.355688095092773
    8. '        
' → logprob: -8.855688095092773
    9. ' n' → logprob: -9.230688095092773
    10. '    
' → logprob: -9.605688095092773

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004624153021723032
    2. '=' → logprob: -5.379624366760254
    3. '[' → logprob: -13.004624366760254
    4. 's' → logprob: -14.379624366760254
    5. ' =
' → logprob: -15.629624366760254
    6. ' ' → logprob: -15.754624366760254
    7. '[]' → logprob: -15.754624366760254
    8. '_' → logprob: -15.754624366760254
    9. ' =[' → logprob: -15.879624366760254
    10. '=[]' → logprob: -16.004623413085938

Token 103: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.23781216144561768
    2. ' {' → logprob: -2.487812042236328
    3. ' {}' → logprob: -2.487812042236328
    4. '{}' → logprob: -3.487812042236328
    5. '{' → logprob: -5.237812042236328
    6. '[' → logprob: -5.487812042236328
    7. ' defaultdict' → logprob: -5.987812042236328
    8. ' [' → logprob: -6.487812042236328
    9. ' [{}' → logprob: -6.737812042236328
    10. 'default' → logprob: -8.612812042236328

Token 104: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04412002116441727
    2. 'for' → logprob: -3.1691200733184814
    3. ')' → logprob: -8.044119834899902
    4. '       ' → logprob: -8.169119834899902
    5. ']' → logprob: -8.419119834899902
    6. ',' → logprob: -8.669119834899902
    7. '   ' → logprob: -9.669119834899902
    8. '           ' → logprob: -11.544119834899902
    9. '        ' → logprob: -11.669119834899902
    10. '	for' → logprob: -11.794119834899902

Token 105: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7365871071815491
    2. '_' → logprob: -1.2365870475769043
    3. 'range' → logprob: -1.4865870475769043
    4. ' _' → logprob: -5.486587047576904
    5. '_range' → logprob: -8.361587524414062
    6. ' in' → logprob: -8.611587524414062
    7. '(range' → logprob: -9.736587524414062
    8. ' ' → logprob: -9.861587524414062
    9. ' i' → logprob: -10.486587524414062
    10. 'in' → logprob: -10.611587524414062

Token 106: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.332573801279068
    2. ' in' → logprob: -1.5825737714767456
    3. 'range' → logprob: -2.582573890686035
    4. ' range' → logprob: -7.082573890686035
    5. '_' → logprob: -7.957573890686035
    6. '(range' → logprob: -8.832573890686035
    7. 'i' → logprob: -9.082573890686035
    8. 'n' → logprob: -9.207573890686035
    9. 'ange' → logprob: -9.207573890686035
    10. ' ' → logprob: -9.582573890686035

Token 107: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06197451800107956
    2. ' range' → logprob: -2.81197452545166
    3. '(range' → logprob: -11.93697452545166
    4. '	range' → logprob: -15.81197452545166
    5. 'n' → logprob: -15.93697452545166
    6. '   ' → logprob: -16.936973571777344
    7. 'rang' → logprob: -17.311973571777344
    8. ' ' → logprob: -17.561973571777344
    9. 'r' → logprob: -18.436973571777344
    10. ')' → logprob: -18.811973571777344

Token 108: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009227732080034912
    2. '(' → logprob: -7.000922679901123
    3. ' (' → logprob: -11.500923156738281
    4. '((' → logprob: -14.500923156738281
    5. 'n' → logprob: -14.625923156738281
    6. ' n' → logprob: -16.12592315673828
    7. '(
' → logprob: -16.87592315673828
    8. '(N' → logprob: -17.12592315673828
    9. '(num' → logprob: -17.75092315673828
    10. ')' → logprob: -17.75092315673828

Token 109: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.750436007976532e-05
    2. ' )' → logprob: -10.62503719329834
    3. '+' → logprob: -11.62503719329834
    4. ')' → logprob: -13.12503719329834
    5. ')]
' → logprob: -13.62503719329834
    6. ']' → logprob: -14.50003719329834
    7. ' ]' → logprob: -15.37503719329834
    8. ')]

' → logprob: -16.500038146972656
    9. '))' → logprob: -16.875038146972656
    10. ')]
' → logprob: -17.000038146972656

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10137616097927094
    2. 'for' → logprob: -2.7263760566711426
    3. '   ' → logprob: -4.476376056671143
    4. '
' → logprob: -4.476376056671143
    5. ' for' → logprob: -5.351376056671143
    6. '        
' → logprob: -6.476376056671143
    7. '    
' → logprob: -7.476376056671143
    8. '<|end|>' → logprob: -7.726376056671143
    9. '           ' → logprob: -8.4763765335083
    10. '[' → logprob: -9.1013765335083

Token 111: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.18824559450149536
    2. '       ' → logprob: -2.1882455348968506
    3. ' for' → logprob: -2.9382455348968506
    4. '   ' → logprob: -5.31324577331543
    5. '	for' → logprob: -7.06324577331543
    6. '
' → logprob: -7.68824577331543
    7. '        
' → logprob: -9.56324577331543
    8. 'a' → logprob: -9.81324577331543
    9. '    
' → logprob: -10.18824577331543
    10. ' 
' → logprob: -10.56324577331543

Token 112: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23321126401424408
    2. ' a' → logprob: -1.6082112789154053
    3. ' (' → logprob: -5.608211040496826
    4. ' u' → logprob: -6.233211040496826
    5. 'u' → logprob: -6.733211040496826
    6. '(u' → logprob: -7.733211040496826
    7. '(a' → logprob: -7.858211040496826
    8. '(' → logprob: -9.983211517333984
    9. ' edge' → logprob: -10.233211517333984
    10. 'edge' → logprob: -11.483211517333984

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020343957003206015
    2. ' ,' → logprob: -6.2520341873168945
    3. ' in' → logprob: -9.877034187316895
    4. ',a' → logprob: -10.627034187316895
    5. 'a' → logprob: -11.877034187316895
    6. ',(' → logprob: -11.877034187316895
    7. '[' → logprob: -12.502034187316895
    8. ',b' → logprob: -13.252034187316895
    9. ',[' → logprob: -13.502034187316895
    10. '_,' → logprob: -13.627034187316895

Token 114: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.023860039189457893
    2. 'b' → logprob: -3.773859977722168
    3. ' ' → logprob: -7.398859977722168
    4. ' ,' → logprob: -14.648859977722168
    5. ',' → logprob: -14.773859977722168
    6. ',b' → logprob: -14.898859977722168
    7. '  ' → logprob: -15.648859977722168
    8. 'space' → logprob: -15.773859977722168
    9. '<|end|>' → logprob: -15.773859977722168
    10. ')' → logprob: -15.898859977722168

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16742227971553802
    2. ' in' → logprob: -1.9174222946166992
    3. ' ,' → logprob: -5.167422294616699
    4. 'in' → logprob: -6.542422294616699
    5. ',in' → logprob: -11.6674222946167
    6. '```' → logprob: -12.5424222946167
    7. '[' → logprob: -12.6674222946167
    8. 'graph' → logprob: -12.7924222946167
    9. ')' → logprob: -13.4174222946167
    10. ' ' → logprob: -13.6674222946167

Token 116: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.25197848677635193
    2. 'd' → logprob: -1.5019785165786743
    3. ' ' → logprob: -10.126978874206543
    4. '    ' → logprob: -13.376978874206543
    5. ')d' → logprob: -13.751978874206543
    6. '	d' → logprob: -13.876978874206543
    7. ' 
' → logprob: -13.876978874206543
    8. '```' → logprob: -14.689478874206543
    9. ',d' → logprob: -14.751978874206543
    10. ' ' → logprob: -14.876978874206543

Token 117: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2519381642341614
    2. 'in' → logprob: -1.5019381046295166
    3. ',' → logprob: -12.126937866210938
    4. ' ' → logprob: -14.251937866210938
    5. '	in' → logprob: -14.251937866210938
    6. 's' → logprob: -14.376937866210938
    7. '   ' → logprob: -15.251937866210938
    8. 'a' → logprob: -15.876937866210938
    9. '```' → logprob: -15.876937866210938
    10. '1' → logprob: -16.126937866210938

Token 118: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.3869038224220276
    2. 'edges' → logprob: -1.1369037628173828
    3. '(edges' → logprob: -11.011903762817383
    4. ' ' → logprob: -12.261903762817383
    5. 'edge' → logprob: -12.761903762817383
    6. '_edges' → logprob: -12.761903762817383
    7. '.edges' → logprob: -13.011903762817383
    8. ' edge' → logprob: -14.136903762817383
    9. 'Edges' → logprob: -14.261903762817383
    10. 's' → logprob: -14.386903762817383

Token 119: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007181499968282878
    2. ':
' → logprob: -7.250718116760254
    3. '):' → logprob: -13.125718116760254
    4. '[' → logprob: -13.500718116760254
    5. ' :' → logprob: -13.500718116760254
    6. '   ' → logprob: -13.875718116760254
    7. '       ' → logprob: -14.375718116760254
    8. ',' → logprob: -14.625718116760254
    9. ':
' → logprob: -14.625718116760254
    10. ':

' → logprob: -15.625718116760254

Token 120: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16815166175365448
    2. '           ' → logprob: -2.043151617050171
    3. '        ' → logprob: -4.29315185546875
    4. '[' → logprob: -5.41815185546875
    5. ' graph' → logprob: -5.66815185546875
    6. '   ' → logprob: -6.54315185546875
    7. '        
' → logprob: -7.79315185546875
    8. 'graph' → logprob: -7.91815185546875
    9. '    ' → logprob: -8.29315185546875
    10. '<|end|>' → logprob: -8.66815185546875

Token 121: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.28252553939819336
    2. 'graph' (adapté à ' graph') → logprob: -1.4075255393981934
    3. '           ' → logprob: -7.907525539398193
    4. '	graph' → logprob: -7.907525539398193
    5. '(graph' → logprob: -8.907526016235352
    6. ' 
' → logprob: -9.157526016235352
    7. ' ' → logprob: -9.282526016235352
    8. '        ' → logprob: -9.657526016235352
    9. '[' → logprob: -9.657526016235352
    10. '       ' → logprob: -10.157526016235352

Token 122: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -12.750003814697266
    3. ' [' → logprob: -15.000003814697266
    4. 'a' → logprob: -15.250003814697266
    5. '[b' → logprob: -15.875003814697266
    6. '   ' → logprob: -18.625003814697266
    7. '[A' → logprob: -18.750003814697266
    8. ' a' → logprob: -19.625003814697266
    9. '[u' → logprob: -20.250003814697266
    10. '\[' → logprob: -21.000003814697266

Token 123: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00021712594025302678
    2. ']' → logprob: -9.00021743774414
    3. ' ].' → logprob: -9.37521743774414
    4. '.' → logprob: -12.25021743774414
    5. '.append' → logprob: -13.12521743774414
    6. ').' → logprob: -13.62521743774414
    7. '   ' → logprob: -14.62521743774414
    8. '[' → logprob: -16.00021743774414
    9. '][' → logprob: -17.12521743774414
    10. '       ' → logprob: -17.25021743774414

Token 124: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.339278580620885e-06
    2. ' append' → logprob: -13.125001907348633
    3. '.append' → logprob: -15.500001907348633
    4. 'appen' → logprob: -16.000001907348633
    5. 'add' → logprob: -18.750001907348633
    6. '	append' → logprob: -18.750001907348633
    7. '_append' → logprob: -18.750001907348633
    8. 'Append' → logprob: -19.375001907348633
    9. 'app' → logprob: -20.000001907348633
    10. 'push' → logprob: -20.000001907348633

Token 125: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0445222333073616
    2. '(' → logprob: -3.294522285461426
    3. '(b' → logprob: -5.044522285461426
    4. '(B' → logprob: -11.544522285461426
    5. ' (' → logprob: -12.294522285461426
    6. '(True' → logprob: -15.419522285461426
    7. ' ((' → logprob: -15.919522285461426
    8. '([' → logprob: -15.919522285461426
    9. '(('' → logprob: -16.04452133178711
    10. '(a' → logprob: -16.54452133178711

Token 126: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0024758970830589533
    2. ' b' → logprob: -6.002475738525391
    3. '(b' → logprob: -16.62747573852539
    4. '   ' → logprob: -16.62747573852539
    5. ')b' → logprob: -17.62747573852539
    6. ' ' → logprob: -18.25247573852539
    7. '	b' → logprob: -18.37747573852539
    8. ',b' → logprob: -19.25247573852539
    9. ' (' → logprob: -19.25247573852539
    10. ')' → logprob: -20.75247573852539

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008908560266718268
    2. ',d' → logprob: -7.375890731811523
    3. ' ,' → logprob: -8.250890731811523
    4. 'd' → logprob: -13.000890731811523
    5. ',
' → logprob: -14.750890731811523
    6. ' d' → logprob: -16.000890731811523
    7. '‌,' → logprob: -16.250890731811523
    8. ')' → logprob: -16.875890731811523
    9. '```' → logprob: -16.875890731811523
    10. ',

' → logprob: -16.875890731811523

Token 128: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2519530951976776
    2. 'd' → logprob: -1.501953125
    3. ' ' → logprob: -11.376953125
    4. ' ' → logprob: -11.876953125
    5. ')d' → logprob: -13.001953125
    6. '    ' → logprob: -14.001953125
    7. ')' → logprob: -14.251953125
    8. '	d' → logprob: -14.751953125
    9. ' 
' → logprob: -15.251953125
    10. '  ' → logprob: -15.376953125

Token 129: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0001514557225164026
    2. '))
' → logprob: -9.250151634216309
    3. ' ))' → logprob: -10.250151634216309
    4. ',' → logprob: -11.625151634216309
    5. ')' → logprob: -11.625151634216309
    6. '))

' → logprob: -14.250151634216309
    7. ')))' → logprob: -14.750151634216309
    8. '));' → logprob: -14.750151634216309
    9. '),' → logprob: -16.125150680541992
    10. ')),' → logprob: -16.375150680541992

Token 130: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026221470907330513
    2. '<|end|>' → logprob: -6.252622127532959
    3. '       ' → logprob: -7.877622127532959
    4. '   ' → logprob: -8.877622604370117
    5. ' graph' → logprob: -9.877622604370117
    6. ' ' → logprob: -10.627622604370117
    7. '	graph' → logprob: -10.752622604370117
    8. '          ' → logprob: -11.252622604370117
    9. '<|end|>' → logprob: -12.002622604370117
    10. '(graph' → logprob: -12.002622604370117

Token 131: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.16035278141498566
    2. ' graph' → logprob: -1.9103528261184692
    3. '	graph' → logprob: -9.53535270690918
    4. '(graph' → logprob: -10.66035270690918
    5. '           ' → logprob: -11.03535270690918
    6. ')' → logprob: -12.28535270690918
    7. ' ' → logprob: -13.16035270690918
    8. '   ' → logprob: -13.28535270690918
    9. '.graph' → logprob: -13.41035270690918
    10. 'Graph' → logprob: -13.66035270690918

Token 132: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.00017815368482843041
    2. '[a' → logprob: -8.750178337097168
    3. '[' → logprob: -11.125178337097168
    4. ' [' → logprob: -13.000178337097168
    5. 'b' → logprob: -13.625178337097168
    6. ')[' → logprob: -14.625178337097168
    7. '```' → logprob: -15.250178337097168
    8. '[B' → logprob: -15.250178337097168
    9. '[s' → logprob: -16.50017738342285
    10. '][' → logprob: -17.00017738342285

Token 133: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.004402582533657551
    2. '].' → logprob: -5.7544026374816895
    3. '.' → logprob: -7.0044026374816895
    4. ')' → logprob: -8.254402160644531
    5. '.append' → logprob: -10.379402160644531
    6. ',' → logprob: -12.129402160644531
    7. '[' → logprob: -12.254402160644531
    8. '   ' → logprob: -12.504402160644531
    9. '           ' → logprob: -13.004402160644531
    10. ' ).' → logprob: -13.129402160644531

Token 134: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.935296834039036e-06
    2. '.append' → logprob: -13.50000286102295
    3. 'appen' → logprob: -14.12500286102295
    4. ' append' → logprob: -14.25000286102295
    5. '	append' → logprob: -16.000003814697266
    6. 'app' → logprob: -17.500003814697266
    7. 'Append' → logprob: -19.000003814697266
    8. 'prepend' → logprob: -19.500003814697266
    9. 'appe' → logprob: -19.625003814697266
    10. '_append' → logprob: -19.625003814697266

Token 135: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -7.278864359250292e-05
    2. '(a' → logprob: -10.125072479248047
    3. '(' → logprob: -11.125072479248047
    4. ' (' → logprob: -11.625072479248047
    5. ' ((' → logprob: -11.625072479248047
    6. '(
' → logprob: -16.750072479248047
    7. '(b' → logprob: -17.500072479248047
    8. ' ' → logprob: -17.500072479248047
    9. '(A' → logprob: -18.250072479248047
    10. '[(' → logprob: -18.500072479248047

Token 136: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.14454522728919983
    2. 'a' → logprob: -2.019545316696167
    3. ' (' → logprob: -6.394545078277588
    4. ' a' → logprob: -8.644545555114746
    5. '(' → logprob: -11.019545555114746
    6. ',a' → logprob: -13.394545555114746
    7. '(
' → logprob: -14.269545555114746
    8. '	a' → logprob: -14.269545555114746
    9. ')' → logprob: -14.644545555114746
    10. ',' → logprob: -14.769545555114746

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034809779026545584
    2. ' ,' → logprob: -8.125348091125488
    3. ',d' → logprob: -9.875348091125488
    4. '),' → logprob: -15.750348091125488
    5. 'd' → logprob: -15.875348091125488
    6. ',
' → logprob: -16.000349044799805
    7. '‌,' → logprob: -16.000349044799805
    8. ' ' → logprob: -17.625349044799805
    9. '	' → logprob: -17.875349044799805
    10. '```' → logprob: -18.125349044799805

Token 138: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5231261849403381
    2. ' d' → logprob: -0.8981261849403381
    3. ' ' → logprob: -13.648126602172852
    4. ' ' → logprob: -14.898126602172852
    5. ')d' → logprob: -15.023126602172852
    6. '	d' → logprob: -15.648126602172852
    7. ' 
' → logprob: -15.710626602172852
    8. ',d' → logprob: -16.14812660217285
    9. ',' → logprob: -16.27312660217285
    10. '```' → logprob: -16.27312660217285

Token 139: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00012308525037951767
    2. ')' → logprob: -9.250123023986816
    3. ' ))' → logprob: -10.875123023986816
    4. '))
' → logprob: -12.125123023986816
    5. ')))' → logprob: -13.500123023986816
    6. ',' → logprob: -14.875123023986816
    7. '),' → logprob: -15.000123023986816
    8. '));' → logprob: -16.375123977661133
    9. ')),' → logprob: -16.500123977661133
    10. '       ' → logprob: -16.625123977661133

Token 140: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25057336688041687
    2. '
' → logprob: -2.0005733966827393
    3. 'import' → logprob: -3.1255733966827393
    4. '        
' → logprob: -3.5005733966827393
    5. '   ' → logprob: -5.25057315826416
    6. ' 
' → logprob: -6.62557315826416
    7. '<|end|>' → logprob: -6.75057315826416
    8. '    
' → logprob: -7.00057315826416
    9. 'from' → logprob: -7.25057315826416
    10. '    ' → logprob: -7.62557315826416

Token 141: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.27350863814353943
    2. 'import' → logprob: -1.8985086679458618
    3. 'distance' → logprob: -3.1485085487365723
    4. 'visited' → logprob: -4.523508548736572
    5. '       ' → logprob: -4.648508548736572
    6. 'from' → logprob: -4.648508548736572
    7. '#' (adapté à ' #') → logprob: -5.523508548736572
    8. ' dist' → logprob: -5.523508548736572
    9. ' import' → logprob: -6.398508548736572
    10. 'queue' → logprob: -6.523508548736572

Token 142: ' On' (ID: 2160)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2729986906051636
    2. 'dist' → logprob: -2.522998809814453
    3. ' import' → logprob: -2.647998809814453
    4. 'from' → logprob: -3.647998809814453
    5. '#' → logprob: -4.147998809814453
    6. ' dist' → logprob: -4.397998809814453
    7. 'distance' → logprob: -4.522998809814453
    8. 'visited' → logprob: -4.897998809814453
    9. 'def' → logprob: -5.647998809814453
    10. ' distances' → logprob: -5.772998809814453

Token 143: ' veut' (ID: 41653)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.4053864479064941
    2. ' dist' → logprob: -1.4053864479064941
    3. ' import' → logprob: -2.030386447906494
    4. ' distances' → logprob: -2.030386447906494
    5. 'dist' → logprob: -2.655386447906494
    6. 'from' → logprob: -2.905386447906494
    7. ' distance' → logprob: -4.155386447906494
    8. 'def' → logprob: -4.280386447906494
    9. '_distance' → logprob: -4.405386447906494
    10. 'distance' → logprob: -4.405386447906494

Token 144: ' un' (ID: 537)
  Prédit: ' trouver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trouver' → logprob: -0.3928985595703125
    2. 'tr' → logprob: -1.8928985595703125
    3. 'min' → logprob: -2.5178985595703125
    4. ' déterminer' → logprob: -3.3928985595703125
    5. 'calcul' → logprob: -4.8928985595703125
    6. 't' → logprob: -5.2678985595703125
    7. ' calcul' → logprob: -5.2678985595703125
    8. 'find' → logprob: -5.6428985595703125
    9. ' savoir' → logprob: -5.6428985595703125
    10. 'd' → logprob: -6.0178985595703125

Token 145: ' sous' (ID: 14487)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.16705840826034546
    2. ' arbre' → logprob: -3.5420584678649902
    3. ' chemin' → logprob: -4.54205846786499
    4. ' tableau' → logprob: -4.66705846786499
    5. 'dist' → logprob: -5.16705846786499
    6. 'a' → logprob: -5.47955846786499
    7. 't' → logprob: -5.54205846786499
    8. 'd' → logprob: -5.54205846786499
    9. ' shortest' → logprob: -5.54205846786499
    10. ' sommet' → logprob: -5.54205846786499

Token 146: '-' (ID: 12)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.14869000017642975
    2. 'ensemble' → logprob: -3.0236899852752686
    3. 'ar' → logprob: -3.5236899852752686
    4. '-' → logprob: -3.6486899852752686
    5. 'gr' → logprob: -3.7736899852752686
    6. '-gr' → logprob: -5.523690223693848
    7. '-ar' → logprob: -6.898690223693848
    8. ' grap' → logprob: -6.898690223693848
    9. '_gr' → logprob: -7.023690223693848
    10. 'gra' → logprob: -7.148690223693848

Token 147: 'ensemble' (ID: 37301)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.4846094846725464
    2. 'ar' → logprob: -1.9846094846725464
    3. 'graph' → logprob: -1.9846094846725464
    4. 'ensemble' → logprob: -2.234609603881836
    5. 'gra' → logprob: -7.484609603881836
    6. 'ense' → logprob: -7.734609603881836
    7. 'arb' → logprob: -8.234609603881836
    8. 'g' → logprob: -8.734609603881836
    9. 'tree' → logprob: -8.859609603881836
    10. '```' → logprob: -9.359609603881836

Token 148: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5525071024894714
    2. ' des' → logprob: -1.4275071620941162
    3. ' d' → logprob: -2.177507162094116
    4. '<|end|>' → logprob: -4.052506923675537
    5. ' minimal' → logprob: -4.802506923675537
    6. 'de' → logprob: -4.802506923675537
    7. ' edges' → logprob: -5.177506923675537
    8. ' ' → logprob: -5.552506923675537
    9. 'd' → logprob: -5.552506923675537
    10. ' minimum' → logprob: -5.677506923675537

Token 149: ''ar' (ID: 54307)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.5037595629692078
    2. 'e' → logprob: -1.8787596225738525
    3. ' ar' → logprob: -2.6287596225738525
    4. ' des' → logprob: -3.0037596225738525
    5. ' edges' → logprob: -3.1287596225738525
    6. ''ar' → logprob: -4.128759384155273
    7. 'l' → logprob: -4.128759384155273
    8. 'edges' → logprob: -4.503759384155273
    9. 's' → logprob: -5.003759384155273
    10. ' l' → logprob: -5.128759384155273

Token 150: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.25081512331962585
    2. 'tes' → logprob: -2.0008151531219482
    3. 'etes' → logprob: -3.2508151531219482
    4. 'cs' → logprob: -3.8758151531219482
    5. 'bres' → logprob: -4.375814914703369
    6. 're' → logprob: -5.625814914703369
    7. 'r' → logprob: -5.875814914703369
    8. 'c' → logprob: -5.875814914703369
    9. 'e' → logprob: -6.750814914703369
    10. 'bre' → logprob: -7.250814914703369

Token 151: ' connect' (ID: 4837)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.3859820067882538
    2. 'é' → logprob: -1.8859820365905762
    3. 'ées' → logprob: -2.010982036590576
    4. 'e' → logprob: -4.760982036590576
    5. 'ed' → logprob: -4.760982036590576
    6. 'ing' → logprob: -5.010982036590576
    7. 'ion' → logprob: -5.885982036590576
    8. 'es' → logprob: -6.260982036590576
    9. 'és' → logprob: -6.635982036590576
    10. 'if' → logprob: -6.760982036590576

Token 153: ' tous' (ID: 10688)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.1599607467651367
    2. 't' → logprob: -1.2849607467651367
    3. ' all' → logprob: -1.5349607467651367
    4. ' tous' → logprob: -2.1599607467651367
    5. ' toutes' → logprob: -3.0349607467651367
    6. 'n' → logprob: -4.534960746765137
    7. 'tout' → logprob: -5.284960746765137
    8. ' tout' → logprob: -6.034960746765137
    9. ' n' → logprob: -6.409960746765137
    10. ' ' → logprob: -6.534960746765137

Token 154: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.1184072494506836
    2. ' les' → logprob: -2.2434072494506836
    3. 'n' → logprob: -6.993407249450684
    4. '       ' → logprob: -7.118407249450684
    5. 's' → logprob: -7.243407249450684
    6. '   ' → logprob: -7.368407249450684
    7. '#' → logprob: -7.493407249450684
    8. 'le' → logprob: -7.618407249450684
    9. ' ' → logprob: -8.618407249450684
    10. 'vertices' → logprob: -8.743407249450684

Token 155: ' somm' (ID: 44830)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3471461832523346
    2. ' noe' → logprob: -2.2221462726593018
    3. 'n' → logprob: -2.8471462726593018
    4. ' somm' → logprob: -2.9721462726593018
    5. 'no' → logprob: -3.0971462726593018
    6. 'nodes' → logprob: -4.472146034240723
    7. ' n' → logprob: -5.097146034240723
    8. 'som' → logprob: -5.472146034240723
    9. 'vertices' → logprob: -6.097146034240723
    10. ' nodes' → logprob: -6.472146034240723

Token 156: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -4.954393079970032e-05
    2. 'et' → logprob: -10.250049591064453
    3. 'es' → logprob: -12.000049591064453
    4. 'êts' → logprob: -12.875049591064453
    5. 'ats' → logprob: -13.000049591064453
    6. 'ètres' → logprob: -14.375049591064453
    7. 'è' → logprob: -14.750049591064453
    8. 'ects' → logprob: -15.125049591064453
    9. 'és' → logprob: -15.375049591064453
    10. 's' → logprob: -15.500049591064453

Token 157: ' avec' (ID: 3937)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9092573523521423
    2. ',' → logprob: -1.159257411956787
    3. ' avec' → logprob: -2.159257411956787
    4. ' et' → logprob: -2.909257411956787
    5. ' sans' → logprob: -3.659257411956787
    6. ' tout' → logprob: -4.034257411956787
    7. ' ,' → logprob: -4.534257411956787
    8. ' en' → logprob: -4.784257411956787
    9. ' with' → logprob: -4.909257411956787
    10. ' qui' → logprob: -5.034257411956787

Token 158: ' la' (ID: 557)
  Prédit: ' minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.8846131563186646
    2. ' minimum' → logprob: -1.3846131563186646
    3. ' un' → logprob: -2.009613037109375
    4. ' le' → logprob: -2.259613037109375
    5. 'minimum' → logprob: -3.634613037109375
    6. ' poids' → logprob: -4.509613037109375
    7. 'le' → logprob: -4.759613037109375
    8. ' min' → logprob: -5.009613037109375
    9. 'un' → logprob: -5.134613037109375
    10. ' la' → logprob: -5.134613037109375

Token 159: ' somme' (ID: 64484)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.31714117527008057
    2. ' même' → logprob: -2.567141056060791
    3. ' moindre' → logprob: -2.692141056060791
    4. ' distance' → logprob: -3.442141056060791
    5. 'plus' → logprob: -3.692141056060791
    6. 's' → logprob: -3.942141056060791
    7. ' minimal' → logprob: -4.692141056060791
    8. 'distance' → logprob: -4.942141056060791
    9. '   ' → logprob: -4.942141056060791
    10. ' somme' → logprob: -5.317141056060791

Token 160: ' minimale' (ID: 143217)
  Prédit: ' minimale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimale' → logprob: -1.0976148843765259
    2. ' des' → logprob: -1.2226148843765259
    3. '<|end|>' → logprob: -1.2226148843765259
    4. '<|end|>' → logprob: -4.097614765167236
    5. ' minimal' → logprob: -4.347614765167236
    6. 'min' → logprob: -4.722614765167236
    7. ' maximale' → logprob: -4.972614765167236
    8. 'minimum' → logprob: -5.222614765167236
    9. ' optimale' → logprob: -5.222614765167236
    10. ' minimum' → logprob: -5.347614765167236

Token 161: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2260642051696777
    2. '<|end|>' → logprob: -1.2260642051696777
    3. ',' → logprob: -1.6010642051696777
    4. ' de' → logprob: -2.9760642051696777
    5. ' d' → logprob: -3.1010642051696777
    6. ' ,' → logprob: -3.3510642051696777
    7. ' ' → logprob: -3.8510642051696777
    8. ' of' → logprob: -4.226064205169678
    9. ' possible' → logprob: -4.726064205169678
    10. '<|end|>' → logprob: -5.351064205169678

Token 162: ' longue' (ID: 59564)
  Prédit: ' poids'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' poids' → logprob: -0.6219118237495422
    2. ' distances' → logprob: -1.6219117641448975
    3. 'po' → logprob: -2.2469117641448975
    4. ' leurs' → logprob: -2.3719117641448975
    5. 'dist' → logprob: -3.8719117641448975
    6. ' po' → logprob: -4.371912002563477
    7. 'leurs' → logprob: -4.871912002563477
    8. 'weights' → logprob: -5.746912002563477
    9. ' la' → logprob: -5.996912002563477
    10. ' ' → logprob: -5.996912002563477

Token 163: 'urs' (ID: 1628)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.004368647933006287
    2. 'urs' → logprob: -6.254368782043457
    3. 'u' → logprob: -6.629368782043457
    4. 'r' → logprob: -7.004368782043457
    5. 'urse' → logprob: -10.004368782043457
    6. 'ueur' → logprob: -10.004368782043457
    7. '"' → logprob: -10.879368782043457
    8. '#' → logprob: -11.754368782043457
    9. ' ur' → logprob: -11.816868782043457
    10. '_' → logprob: -11.941868782043457

Token 164: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31184303760528564
    2. ',' → logprob: -1.4368430376052856
    3. '.' → logprob: -4.436842918395996
    4. '
' → logprob: -5.186842918395996
    5. ',
' → logprob: -5.561842918395996
    6. ':' → logprob: -6.436842918395996
    7. '<|end|>' → logprob: -6.436842918395996
    8. ' (' → logprob: -6.561842918395996
    9. '        
' → logprob: -6.936842918395996
    10. 'import' → logprob: -7.436842918395996

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11805456131696701
    2. '
' → logprob: -2.3680546283721924
    3. '<|end|>' → logprob: -5.118054389953613
    4. '        
' → logprob: -5.243054389953613
    5. 'import' → logprob: -6.618054389953613
    6. ',' → logprob: -6.618054389953613
    7. ' ' → logprob: -6.993054389953613
    8. '   ' → logprob: -7.368054389953613
    9. ' 
' → logprob: -7.743054389953613
    10. '        ' → logprob: -8.118054389953613

Token 166: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3847741484642029
    2. 'import' → logprob: -1.6347742080688477
    3. '#' (adapté à ' #') → logprob: -3.3847742080688477
    4. 'visited' → logprob: -3.8847742080688477
    5. ' import' → logprob: -4.134774208068848
    6. 'dist' → logprob: -4.259774208068848
    7. ' #' → logprob: -4.759774208068848
    8. ' dist' → logprob: -5.259774208068848
    9. ' visited' → logprob: -5.384774208068848
    10. 'from' → logprob: -5.759774208068848

Token 167: ' On' (ID: 2160)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2320825606584549
    2. ' import' → logprob: -2.1070826053619385
    3. '#' → logprob: -3.4820826053619385
    4. '       ' → logprob: -3.9820826053619385
    5. 'from' → logprob: -4.607082366943359
    6. ' #' → logprob: -5.107082366943359
    7. 'dist' → logprob: -5.232082366943359
    8. 'visited' → logprob: -5.732082366943359
    9. ' dist' → logprob: -6.232082366943359
    10. ' from' → logprob: -6.357082366943359

Token 168: ' peut' (ID: 9216)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.569659948348999
    2. ' import' → logprob: -1.944659948348999
    3. '       ' → logprob: -2.569659948348999
    4. 'from' → logprob: -3.194659948348999
    5. 'def' → logprob: -3.319659948348999
    6. ' def' → logprob: -3.694659948348999
    7. '#' → logprob: -3.944659948348999
    8. ' #' → logprob: -5.069660186767578
    9. ' continue' → logprob: -5.069660186767578
    10. ' visited' → logprob: -5.194660186767578

Token 169: ' utiliser' (ID: 43227)
  Prédit: ' utiliser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utiliser' → logprob: -0.34485703706741333
    2. 'util' → logprob: -1.3448569774627686
    3. 'impl' → logprob: -4.969857215881348
    4. 'contin' → logprob: -5.094857215881348
    5. ''utiliser' → logprob: -5.344857215881348
    6. ' continuer' → logprob: -5.594857215881348
    7. ' appliquer' → logprob: -5.844857215881348
    8. 'penser' → logprob: -7.094857215881348
    9. 'faire' → logprob: -7.344857215881348
    10. 'import' → logprob: -7.469857215881348

Token 170: ' un' (ID: 537)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.19300711154937744
    2. ' Kr' → logprob: -2.443006992340088
    3. ' K' → logprob: -3.568006992340088
    4. ' Prim' → logprob: -4.568006992340088
    5. 'kr' → logprob: -4.693006992340088
    6. ' kr' → logprob: -4.693006992340088
    7. 'Prim' → logprob: -4.943006992340088
    8. ' l' → logprob: -4.943006992340088
    9. 'prim' → logprob: -5.068006992340088
    10. ' prim' → logprob: -5.818006992340088

Token 171: ' alg' (ID: 4485)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7077869176864624
    2. 'import' → logprob: -1.7077869176864624
    3. 'algorithm' → logprob: -2.832787036895752
    4. 'alg' → logprob: -3.082787036895752
    5. 'prim' → logprob: -3.082787036895752
    6. ''' → logprob: -3.332787036895752
    7. 'a' → logprob: -3.832787036895752
    8. ' algorithm' → logprob: -3.957787036895752
    9. 'K' → logprob: -4.207787036895752
    10. 'kr' → logprob: -4.457787036895752

Token 172: 'orith' (ID: 9996)
  Prédit: 'orith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -0.17348496615886688
    2. 'orithm' → logprob: -1.9234849214553833
    3. 'orit' → logprob: -4.923484802246094
    4. 'o' → logprob: -5.923484802246094
    5. 'or' → logprob: -6.798484802246094
    6. '```' → logprob: -7.298484802246094
    7. 'orithms' → logprob: -7.423484802246094
    8. 'r' → logprob: -8.548484802246094
    9. '       ' → logprob: -10.048484802246094
    10. 'ort' → logprob: -10.173484802246094

Token 173: 'me' (ID: 1047)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.180566668510437
    2. 'me' → logprob: -1.930566668510437
    3. 't' → logprob: -4.680566787719727
    4. 's' → logprob: -5.430566787719727
    5. 'sm' → logprob: -6.555566787719727
    6. 'th' → logprob: -6.680566787719727
    7. 'mes' → logprob: -7.555566787719727
    8. '```' → logprob: -7.805566787719727
    9. '``' → logprob: -8.180566787719727
    10. 'e' → logprob: -8.305566787719727

Token 174: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.02450643479824066
    2. 'de' → logprob: -4.274506568908691
    3. ' Kr' → logprob: -5.524506568908691
    4. ' Prim' → logprob: -6.524506568908691
    5. '_' → logprob: -6.774506568908691
    6. 'K' → logprob: -7.524506568908691
    7. 'Prim' → logprob: -7.524506568908691
    8. ' prim' → logprob: -8.149506568908691
    9. '_pr' → logprob: -8.274506568908691
    10. 'prim' → logprob: -8.274506568908691

Token 175: ' Kr' (ID: 11317)
  Prédit: 'kr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kr' → logprob: -0.9034507870674133
    2. 'prim' → logprob: -1.4034507274627686
    3. 'K' → logprob: -1.7784507274627686
    4. ' Kr' → logprob: -2.6534507274627686
    5. 'Prim' → logprob: -2.9034507274627686
    6. ' kr' → logprob: -3.2784507274627686
    7. ' Prim' → logprob: -4.778450965881348
    8. ' prim' → logprob: -5.028450965881348
    9. 'Kr' → logprob: -6.528450965881348
    10. '```' → logprob: -8.403450965881348

Token 176: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.0013504724483937025
    2. 'u' → logprob: -7.001350402832031
    3. 'usk' → logprob: -8.751350402832031
    4. '```' → logprob: -9.751350402832031
    5. 'usz' → logprob: -10.251350402832031
    6. '#' → logprob: -10.501350402832031
    7. 'uss' → logprob: -10.626350402832031
    8. '

' → logprob: -11.126350402832031
    9. '   ' → logprob: -11.501350402832031
    10. 's' → logprob: -11.626350402832031

Token 177: 'kal' (ID: 23466)
  Prédit: 'kal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kal' → logprob: -0.0118313143029809
    2. 'al' → logprob: -4.511831283569336
    3. 'k' → logprob: -7.886831283569336
    4. 'cal' → logprob: -8.261831283569336
    5. 'skal' → logprob: -9.386831283569336
    6. 'tal' → logprob: -11.761831283569336
    7. 'zal' → logprob: -12.011831283569336
    8. 'val' → logprob: -12.261831283569336
    9. ' kal' → logprob: -12.261831283569336
    10. 'sk' → logprob: -12.511831283569336

Token 178: ' ou' (ID: 2031)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5954189300537109
    2. '       ' → logprob: -1.095418930053711
    3. ' ' → logprob: -3.220418930053711
    4. 'import' → logprob: -3.470418930053711
    5. '   ' → logprob: -3.720418930053711
    6. ' 
' → logprob: -5.220418930053711
    7. 'def' → logprob: -5.970418930053711
    8. '<|end|>' → logprob: -6.220418930053711
    9. '        ' → logprob: -6.720418930053711
    10. '    ' → logprob: -6.970418930053711

Token 179: ' Prim' (ID: 28395)
  Prédit: 'Prim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Prim' → logprob: -0.6454266309738159
    2. ' Prim' → logprob: -0.7704266309738159
    3. 'prim' → logprob: -5.1454267501831055
    4. ' prim' → logprob: -5.6454267501831055
    5. '   ' → logprob: -7.0204267501831055
    6. ' ' → logprob: -7.3954267501831055
    7. 'Pr' → logprob: -8.520426750183105
    8. ' un' → logprob: -8.770426750183105
    9. ' de' → logprob: -8.895426750183105
    10. '"' → logprob: -9.020426750183105

Token 180: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2117793709039688
    2. 'import' → logprob: -1.8367793560028076
    3. '
' → logprob: -3.8367793560028076
    4. '        
' → logprob: -5.836779594421387
    5. 'from' → logprob: -6.336779594421387
    6. '   ' → logprob: -6.711779594421387
    7. ' import' → logprob: -6.711779594421387
    8. ' 
' → logprob: -7.711779594421387
    9. ' ' → logprob: -8.211779594421387
    10. 'def' → logprob: -8.336779594421387

Token 181: ' trouver' (ID: 23195)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -0.9072407484054565
    2. ' construire' → logprob: -1.0322407484054565
    3. ' trouver' → logprob: -2.032240867614746
    4. ' find' → logprob: -3.407240867614746
    5. ' continue' → logprob: -3.782240867614746
    6. ' choisir' → logprob: -5.032240867614746
    7. '   ' → logprob: -5.032240867614746
    8. ' l' → logprob: -5.032240867614746
    9. ' ' → logprob: -5.657240867614746
    10. ' f' → logprob: -5.907240867614746

Token 182: ' un' (ID: 537)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.1993516683578491
    2. ' un' → logprob: -1.1993516683578491
    3. 'l' → logprob: -2.1993517875671387
    4. ' une' → logprob: -2.6993517875671387
    5. ' la' → logprob: -2.8243517875671387
    6. ' le' → logprob: -2.9493517875671387
    7. 'le' → logprob: -3.8243517875671387
    8. ' minimum' → logprob: -4.199351787567139
    9. ' spanning' → logprob: -4.324351787567139
    10. 'un' → logprob: -4.699351787567139

Token 183: ' arbre' (ID: 164180)
  Prédit: ' arbre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbre' → logprob: -0.751177966594696
    2. 'ar' → logprob: -1.0011780261993408
    3. ' MST' → logprob: -2.751178026199341
    4. ' spanning' → logprob: -3.876178026199341
    5. ' Minimum' → logprob: -4.126177787780762
    6. 'M' → logprob: -4.376177787780762
    7. ' minimum' → logprob: -4.501177787780762
    8. 'minimum' → logprob: -4.626177787780762
    9. 'arb' → logprob: -5.126177787780762
    10. 'e' → logprob: -5.501177787780762

Token 184: ' couvr' (ID: 129883)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3035407066345215
    2. 'minimum' → logprob: -1.5535407066345215
    3. 'de' → logprob: -1.8035407066345215
    4. 'minimal' → logprob: -2.0535407066345215
    5. '   ' → logprob: -3.0535407066345215
    6. '_min' → logprob: -3.1785407066345215
    7. ' minimal' → logprob: -3.5535407066345215
    8. ' minimum' → logprob: -4.1785407066345215
    9. '_m' → logprob: -4.1785407066345215
    10. 'min' → logprob: -4.5535407066345215

Token 185: 'ant' (ID: 493)
  Prédit: 'nant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nant' → logprob: -0.03247242793440819
    2. 'ant' → logprob: -3.7824723720550537
    3. 'nent' → logprob: -5.782472610473633
    4. 'n' → logprob: -5.782472610473633
    5. 'nat' → logprob: -7.032472610473633
    6. 'ent' → logprob: -7.282472610473633
    7. 'nante' → logprob: -7.407472610473633
    8. 'enant' → logprob: -8.657472610473633
    9. 'nt' → logprob: -9.282472610473633
    10. 'en' → logprob: -9.532472610473633

Token 186: ' minimal' (ID: 19957)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.19326351583003998
    2. 'minimal' → logprob: -2.193263530731201
    3. ' minimum' → logprob: -3.443263530731201
    4. ' minimal' → logprob: -3.818263530731201
    5. 'Minimum' → logprob: -6.068263530731201
    6. 'min' → logprob: -6.068263530731201
    7. '   ' → logprob: -6.318263530731201
    8. ' couvr' → logprob: -7.193263530731201
    9. ' minimale' → logprob: -7.318263530731201
    10. '       ' → logprob: -7.443263530731201

Token 187: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06649217754602432
    2. '
' → logprob: -3.1914920806884766
    3. 'import' → logprob: -4.316492080688477
    4. '        
' → logprob: -4.816492080688477
    5. '<|end|>' → logprob: -7.816492080688477
    6. 'from' → logprob: -8.066492080688477
    7. '   ' → logprob: -8.566492080688477
    8. ' 
' → logprob: -8.566492080688477
    9. '#' → logprob: -9.691492080688477
    10. '    
' → logprob: -9.816492080688477

Token 188: 'M' (ID: 44)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8611976504325867
    2. 'Prim' → logprob: -1.1111977100372314
    3. ' Prim' → logprob: -2.2361977100372314
    4. ' )' → logprob: -3.3611977100372314
    5. 'prim' → logprob: -3.6111977100372314
    6. 'M' → logprob: -3.7361977100372314
    7. ' prim' → logprob: -4.486197471618652
    8. 'Minimum' → logprob: -5.111197471618652
    9. '   ' → logprob: -5.236197471618652
    10. 'l' → logprob: -5.861197471618652

Token 189: 'ST' (ID: 1117)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.04133370518684387
    2. 'ST' → logprob: -3.6663336753845215
    3. 'in' → logprob: -5.1663336753845215
    4. 'i' → logprob: -5.7913336753845215
    5. 'I' → logprob: -5.7913336753845215
    6. 'SP' → logprob: -8.16633415222168
    7. 's' → logprob: -8.22883415222168
    8. '   ' → logprob: -8.29133415222168
    9. '\' → logprob: -8.60383415222168
    10. '```' → logprob: -8.85383415222168

Token 190: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06305930018424988
    2. ' )' → logprob: -3.4380593299865723
    3. '       ' → logprob: -3.8130593299865723
    4. '   ' → logprob: -6.188059329986572
    5. ')
' → logprob: -6.188059329986572
    6. '
' → logprob: -6.438059329986572
    7. '.' → logprob: -8.188058853149414
    8. ' )
' → logprob: -8.563058853149414
    9. ',' → logprob: -8.688058853149414
    10. 'def' → logprob: -9.438058853149414

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3029705882072449
    2. '
' → logprob: -1.5529706478118896
    3. '        
' → logprob: -3.5529706478118896
    4. 'import' → logprob: -4.8029704093933105
    5. ' 
' → logprob: -5.1779704093933105
    6. '   ' → logprob: -6.3029704093933105
    7. ' ' → logprob: -6.6779704093933105
    8. '    ' → logprob: -7.1779704093933105
    9. '    
' → logprob: -7.4279704093933105
    10. '        ' → logprob: -8.052970886230469

Token 192: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9693379402160645
    2. '       ' → logprob: -1.0943379402160645
    3. 'dist' → logprob: -1.7193379402160645
    4. ' import' → logprob: -3.2193379402160645
    5. 'from' → logprob: -3.8443379402160645
    6. 'visited' → logprob: -4.5943379402160645
    7. 'distance' → logprob: -4.7193379402160645
    8. ' dist' → logprob: -4.9693379402160645
    9. '   ' → logprob: -5.7193379402160645
    10. 'd' → logprob: -5.8443379402160645

Token 193: ' Puis' (ID: 87717)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.22736017405986786
    2. '       ' → logprob: -2.227360248565674
    3. 'dist' → logprob: -2.977360248565674
    4. 'from' → logprob: -4.227360248565674
    5. ' import' → logprob: -4.352360248565674
    6. 'visited' → logprob: -4.977360248565674
    7. 'def' → logprob: -5.477360248565674
    8. 'distance' → logprob: -5.977360248565674
    9. '
' → logprob: -7.102360248565674
    10. ' dist' → logprob: -7.727360248565674

Token 194: ' le' (ID: 505)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.076327085494995
    2. ' distances' → logprob: -2.076327085494995
    3. 'dist' → logprob: -2.326327085494995
    4. '
' → logprob: -2.326327085494995
    5. 'total' → logprob: -2.576327085494995
    6. ' total' → logprob: -2.576327085494995
    7. 'visited' → logprob: -2.576327085494995
    8. '#' → logprob: -2.576327085494995
    9. 'distance' → logprob: -2.951327085494995
    10. 'import' → logprob: -3.076327085494995

Token 195: ' nombre' (ID: 9733)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.1190849542617798
    2. 'mst' → logprob: -1.8690849542617798
    3. 'from' → logprob: -1.9940849542617798
    4. 'total' → logprob: -2.6190848350524902
    5. 'dist' → logprob: -2.6190848350524902
    6. 'import' → logprob: -2.7440848350524902
    7. 'parent' → logprob: -2.9940848350524902
    8. 'remaining' → logprob: -3.7440848350524902
    9. 'def' → logprob: -3.8690848350524902
    10. '#' → logprob: -4.11908483505249

Token 196: ' de' (ID: 334)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.9428613185882568
    2. '_total' → logprob: -1.0678613185882568
    3. '       ' → logprob: -2.692861318588257
    4. ' de' → logprob: -2.942861318588257
    5. ' total' → logprob: -3.192861318588257
    6. 'de' → logprob: -3.817861318588257
    7. '_de' → logprob: -4.192861557006836
    8. '_' → logprob: -4.317861557006836
    9. 'd' → logprob: -4.692861557006836
    10. '_edges' → logprob: -4.692861557006836

Token 197: ' lantern' (ID: 111163)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.527489423751831
    2. ' edges' → logprob: -1.652489423751831
    3. 'ar' → logprob: -2.652489423751831
    4. 'spaces' → logprob: -4.40248966217041
    5. 'points' → logprob: -4.65248966217041
    6. ' ' → logprob: -4.77748966217041
    7. 'tokens' → logprob: -5.15248966217041
    8. ' caractères' → logprob: -5.27748966217041
    9. 'graph' → logprob: -5.58998966217041
    10. '_edges' → logprob: -5.65248966217041

Token 198: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.009527753107249737
    2. 's' → logprob: -4.759527683258057
    3. 'e' → logprob: -7.384527683258057
    4. 'ies' → logprob: -8.384528160095215
    5. '```' → logprob: -11.884528160095215
    6. ' es' → logprob: -12.009528160095215
    7. 'ses' → logprob: -12.009528160095215
    8. 'ес' → logprob: -12.384528160095215
    9. 'ès' → logprob: -12.509528160095215
    10. 'és' → logprob: -12.634528160095215

Token 199: ' est' (ID: 893)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5809783339500427
    2. ' =' → logprob: -2.0809783935546875
    3. 'import' → logprob: -2.7059783935546875
    4. 'total' → logprob: -2.9559783935546875
    5. 'def' → logprob: -3.4559783935546875
    6. '=' → logprob: -4.0809783935546875
    7. 'visited' → logprob: -4.3309783935546875
    8. '   ' → logprob: -4.5809783935546875
    9. '        
' → logprob: -4.7059783935546875
    10. ' total' → logprob: -4.7059783935546875

Token 200: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.31065288186073303
    2. ' sum' → logprob: -1.9356528520584106
    3. ' len' → logprob: -3.1856529712677
    4. 'n' → logprob: -3.4356529712677
    5. 'sum' → logprob: -3.4356529712677
    6. ' ' → logprob: -5.435652732849121
    7. ' min' → logprob: -5.560652732849121
    8. 'len' → logprob: -5.935652732849121
    9. ' max' → logprob: -6.560652732849121
    10. 'min' → logprob: -7.185652732849121

Token 201: ' somme' (ID: 64484)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5840364694595337
    2. 'sum' → logprob: -0.8340364694595337
    3. ' somme' → logprob: -5.709036350250244
    4. 'len' → logprob: -6.584036350250244
    5. ' len' → logprob: -7.209036350250244
    6. ' total' → logprob: -7.209036350250244
    7. 's' → logprob: -7.334036350250244
    8. 'max' → logprob: -8.209036827087402
    9. 'min' → logprob: -8.209036827087402
    10. 'total' → logprob: -8.959036827087402

Token 202: ' sur' (ID: 1512)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1004301309585571
    2. ' of' → logprob: -1.9754301309585571
    3. 'sum' → logprob: -1.9754301309585571
    4. '(sum' → logprob: -1.9754301309585571
    5. '(len' → logprob: -2.7254300117492676
    6. '   ' → logprob: -3.2254300117492676
    7. '       ' → logprob: -3.6004300117492676
    8. 'of' → logprob: -3.7254300117492676
    9. 'len' → logprob: -4.100430011749268
    10. ' (' → logprob: -4.475430011749268

Token 203: ' chaque' (ID: 21194)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.84521484375
    2. 'range' → logprob: -1.72021484375
    3. ' all' → logprob: -2.22021484375
    4. ' range' → logprob: -2.59521484375
    5. 'graph' → logprob: -2.97021484375
    6. ' graph' → logprob: -3.47021484375
    7. '[' → logprob: -4.22021484375
    8. 'l' → logprob: -4.34521484375
    9. ' edges' → logprob: -4.59521484375
    10. 'edges' → logprob: -4.59521484375

Token 204: ' ar' (ID: 646)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.6148380637168884
    2. ' edge' → logprob: -1.6148381233215332
    3. 'graph' → logprob: -3.114838123321533
    4. 'ar' → logprob: -3.364838123321533
    5. '   ' → logprob: -3.489838123321533
    6. 'range' → logprob: -3.489838123321533
    7. 'node' → logprob: -4.114838123321533
    8. 'len' → logprob: -4.239838123321533
    9. ' node' → logprob: -4.739838123321533
    10. ' ar' → logprob: -4.739838123321533

Token 205: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.017522050067782402
    2. 'êt' → logprob: -5.017521858215332
    3. 'ète' → logprob: -5.767521858215332
    4. 'ê' → logprob: -6.142521858215332
    5. 'c' → logprob: -6.517521858215332
    6. 'êtes' → logprob: -6.517521858215332
    7. 'ete' → logprob: -7.642521858215332
    8. 'e' → logprob: -7.767521858215332
    9. 'te' → logprob: -8.267521858215332
    10. 'ch' → logprob: -8.642521858215332

Token 206: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.061473894864320755
    2. '
' → logprob: -4.186473846435547
    3. 'def' → logprob: -4.561473846435547
    4. 'import' → logprob: -4.936473846435547
    5. 'total' → logprob: -5.311473846435547
    6. '        
' → logprob: -5.561473846435547
    7. '   ' → logprob: -5.561473846435547
    8. 'distance' → logprob: -6.061473846435547
    9. 'dist' → logprob: -6.561473846435547
    10. ' total' → logprob: -6.686473846435547

Token 207: ' (' (ID: 350)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7313361763954163
    2. '2' → logprob: -1.2313361167907715
    3. 'd' → logprob: -2.1063361167907715
    4. ' ' → logprob: -2.3563361167907715
    5. ' (' → logprob: -5.7313361167907715
    6. ' l' → logprob: -6.1063361167907715
    7. ' la' → logprob: -6.2313361167907715
    8. '1' → logprob: -6.4813361167907715
    9. '(' → logprob: -7.9813361167907715
    10. 'l' → logprob: -8.23133659362793

Token 208: 'distance' (ID: 40614)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.92088383436203
    2. 'd' → logprob: -1.2958838939666748
    3. '2' → logprob: -2.045883893966675
    4. ' ' → logprob: -2.795883893966675
    5. ' (' → logprob: -2.920883893966675
    6. '(d' → logprob: -3.295883893966675
    7. '1' → logprob: -3.295883893966675
    8. '(' → logprob: -4.795883655548096
    9. '   ' → logprob: -8.920884132385254
    10. '((' → logprob: -9.045884132385254

Token 209: ' /' (ID: 820)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.6297568678855896
    2. ' +' → logprob: -1.3797569274902344
    3. '+' → logprob: -2.3797569274902344
    4. ' ' → logprob: -2.6297569274902344
    5. '   ' → logprob: -4.254756927490234
    6. ' -' → logprob: -4.504756927490234
    7. '//' → logprob: -4.879756927490234
    8. '-' → logprob: -5.129756927490234
    9. '  ' → logprob: -5.879756927490234
    10. ' d' → logprob: -6.129756927490234

Token 210: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4621622860431671
    2. '10' → logprob: -1.9621622562408447
    3. '3' → logprob: -2.7121622562408447
    4. '100' → logprob: -2.8371622562408447
    5. '50' → logprob: -3.5871622562408447
    6. '20' → logprob: -3.8371622562408447
    7. '5' → logprob: -4.337162494659424
    8. ' ' → logprob: -4.712162494659424
    9. '4' → logprob: -4.837162494659424
    10. '127' → logprob: -5.087162494659424

Token 211: '100' (ID: 1353)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.6880227327346802
    2. '100' → logprob: -1.8130227327346802
    3. '10' → logprob: -1.9380227327346802
    4. '50' → logprob: -2.3130226135253906
    5. 'd' → logprob: -3.9380226135253906
    6. '2' → logprob: -4.188022613525391
    7. 'L' → logprob: -4.688022613525391
    8. '200' → logprob: -5.063022613525391
    9. 'D' → logprob: -5.063022613525391
    10. ' ' → logprob: -5.188022613525391

Token 212: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.084585040807724
    2. ' +' → logprob: -2.834584951400757
    3. '+' → logprob: -4.459585189819336
    4. ' )' → logprob: -4.959585189819336
    5. ')+' → logprob: -5.834585189819336
    6. '0' → logprob: -8.209585189819336
    7. '))' → logprob: -8.459585189819336
    8. ')//' → logprob: -9.459585189819336
    9. ' ' → logprob: -9.584585189819336
    10. '+)' → logprob: -9.834585189819336

Token 213: ' lantern' (ID: 111163)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04831342771649361
    2. 'import' → logprob: -3.2983133792877197
    3. 'def' → logprob: -6.048313617706299
    4. '
' → logprob: -6.548313617706299
    5. '        ' → logprob: -6.548313617706299
    6. 'from' → logprob: -6.673313617706299
    7. '        
' → logprob: -6.923313617706299
    8. '   ' → logprob: -7.298313617706299
    9. '<|end|>' → logprob: -7.548313617706299
    10. ' ' → logprob: -7.923313617706299

Token 214: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0003479785518720746
    2. 's' → logprob: -9.000348091125488
    3. 'ès' → logprob: -9.125348091125488
    4. 'e' → logprob: -10.875348091125488
    5. '```' → logprob: -11.750348091125488
    6. 'res' → logprob: -11.875348091125488
    7. ' ' → logprob: -11.875348091125488
    8. ' es' → logprob: -11.875348091125488
    9. 'ières' → logprob: -12.000348091125488
    10. '(' → logprob: -12.250348091125488

Token 215: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.389869749546051
    2. 'import' → logprob: -1.2648696899414062
    3. '
' → logprob: -4.389869689941406
    4. 'from' → logprob: -4.764869689941406
    5. '        
' → logprob: -4.889869689941406
    6. 'def' → logprob: -5.389869689941406
    7. '   ' → logprob: -6.639869689941406
    8. '        ' → logprob: -6.889869689941406
    9. ' import' → logprob: -7.139869689941406
    10. 'distance' → logprob: -7.639869689941406

Token 216: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07469441741704941
    2. '
' → logprob: -2.9496943950653076
    3. '<|end|>' → logprob: -4.699694633483887
    4. '        
' → logprob: -4.824694633483887
    5. 'import' → logprob: -6.574694633483887
    6. '   ' → logprob: -8.574694633483887
    7. ' 
' → logprob: -8.699694633483887
    8. '<|end|>' → logprob: -8.949694633483887
    9. ' ' → logprob: -9.074694633483887
    10. '        ' → logprob: -9.574694633483887

Token 217: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5402646660804749
    2. 'import' → logprob: -0.9152646660804749
    3. ' import' → logprob: -5.41526460647583
    4. '        
' → logprob: -5.54026460647583
    5. 'from' → logprob: -5.79026460647583
    6. 'def' → logprob: -5.79026460647583
    7. '   ' → logprob: -7.54026460647583
    8. 'dist' → logprob: -7.66526460647583
    9. 'distance' → logprob: -8.040265083312988
    10. ' distances' → logprob: -8.540265083312988

Token 218: ' On' (ID: 2160)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1719202846288681
    2. '       ' → logprob: -2.1719202995300293
    3. 'from' → logprob: -3.5469202995300293
    4. 'def' → logprob: -5.171920299530029
    5. 'dist' → logprob: -5.546920299530029
    6. ' import' → logprob: -5.921920299530029
    7. 'distance' → logprob: -7.421920299530029
    8. ' from' → logprob: -7.671920299530029
    9. '   ' → logprob: -7.671920299530029
    10. '#' → logprob: -8.046919822692871

Token 219: ' vér' (ID: 42524)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.727401614189148
    2. 'import' → logprob: -0.852401614189148
    3. 'from' → logprob: -2.7274017333984375
    4. ' from' → logprob: -3.7274017333984375
    5. 'def' → logprob: -8.352401733398438
    6. ' continue' → logprob: -8.727401733398438
    7. ' def' → logprob: -8.852401733398438
    8. ' #' → logprob: -9.102401733398438
    9. ' ' → logprob: -9.852401733398438
    10. '   ' → logprob: -10.102401733398438

Token 220: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.02934286743402481
    2. 'if' → logprob: -3.7793428897857666
    3. 'ifi' → logprob: -5.2793426513671875
    4. 'ifier' → logprob: -7.5293426513671875
    5. 'ify' → logprob: -9.029342651367188
    6. 'rif' → logprob: -9.404342651367188
    7. 'ife' → logprob: -9.529342651367188
    8. 'i' → logprob: -9.904342651367188
    9. 'a' → logprob: -10.404342651367188
    10. 'ite' → logprob: -11.154342651367188

Token 221: ' que' (ID: 661)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20436911284923553
    2. ' si' → logprob: -2.079369068145752
    3. ' que' → logprob: -4.329369068145752
    4. 'if' → logprob: -4.329369068145752
    5. ' l' → logprob: -5.454369068145752
    6. ' ' → logprob: -5.579369068145752
    7. ' la' → logprob: -5.579369068145752
    8. '       ' → logprob: -5.954369068145752
    9. 'import' → logprob: -5.954369068145752
    10. 'si' → logprob: -6.079369068145752

Token 222: ' chaque' (ID: 21194)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9664608836174011
    2. ' d' → logprob: -1.591460943222046
    3. ' all' → logprob: -1.591460943222046
    4. 'd' → logprob: -2.841460943222046
    5. ' m' → logprob: -2.841460943222046
    6. 'n' → logprob: -3.716460943222046
    7. 'm' → logprob: -4.341460704803467
    8. ' the' → logprob: -4.841460704803467
    9. 'all' → logprob: -5.091460704803467
    10. ' len' → logprob: -5.216460704803467

Token 223: ' distance' (ID: 9324)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9667156338691711
    2. 'n' → logprob: -2.5917155742645264
    3. 'def' → logprob: -2.8417155742645264
    4. 'distance' → logprob: -2.8417155742645264
    5. ' edge' → logprob: -3.3417155742645264
    6. 'from' → logprob: -3.3417155742645264
    7. 'visited' → logprob: -3.4667155742645264
    8. ' ' → logprob: -3.5917155742645264
    9. 'graph' → logprob: -3.7167155742645264
    10. '   ' → logprob: -3.8417155742645264

Token 224: ' est' (ID: 893)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.52744060754776
    2. ' >' → logprob: -2.1524405479431152
    3. ' ' → logprob: -2.4024405479431152
    4. '>' → logprob: -2.7774405479431152
    5. ' >=' → logprob: -2.9024405479431152
    6. '<=' → logprob: -3.2774405479431152
    7. '%' → logprob: -4.152440547943115
    8. ' %' → logprob: -4.652440547943115
    9. '>=' → logprob: -5.152440547943115
    10. '<|end|>' → logprob: -5.402440547943115

Token 225: ' multiple' (ID: 7598)
  Prédit: ' divisible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -1.0003020763397217
    2. '100' → logprob: -1.1253020763397217
    3. '%' → logprob: -1.6253020763397217
    4. '>' → logprob: -3.3753020763397217
    5. ' %' → logprob: -3.5003020763397217
    6. '<=' → logprob: -3.7503020763397217
    7. ' <=' → logprob: -4.250302314758301
    8. ' >' → logprob: -6.000302314758301
    9. '>=' → logprob: -6.375302314758301
    10. ' ' → logprob: -7.250302314758301

Token 226: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6066120266914368
    2. '100' → logprob: -0.8566120266914368
    3. '_' → logprob: -4.481612205505371
    4. 'de' → logprob: -4.856612205505371
    5. ' ' → logprob: -5.981612205505371
    6. '=' → logprob: -6.356612205505371
    7. '   ' → logprob: -6.606612205505371
    8. 's' → logprob: -6.981612205505371
    9. ' d' → logprob: -7.106612205505371
    10. ' of' → logprob: -7.106612205505371

Token 227: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.02325211651623249
    2. ' ' → logprob: -3.773252010345459
    3. ' ' → logprob: -12.898252487182617
    4. ''' → logprob: -13.023252487182617
    5. '"' → logprob: -14.523252487182617
    6. '10' → logprob: -14.523252487182617
    7. ' 
' → logprob: -15.398252487182617
    8. 'space' → logprob: -15.398252487182617
    9. '1' → logprob: -16.398252487182617
    10. '```' → logprob: -16.773252487182617

Token 228: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.00023357603640761226
    2. ' ' → logprob: -8.37523365020752
    3. '10' → logprob: -13.00023365020752
    4. '1' → logprob: -14.62523365020752
    5. ' ' → logprob: -16.500232696533203
    6. '１００' → logprob: -17.000232696533203
    7. '(' → logprob: -17.250232696533203
    8. '  ' → logprob: -17.375232696533203
    9. '   ' → logprob: -18.000232696533203
    10. '```' → logprob: -18.000232696533203

Token 229: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32164379954338074
    2. '
' → logprob: -2.321643829345703
    3. 'import' → logprob: -2.446643829345703
    4. '   ' → logprob: -3.321643829345703
    5. 'def' → logprob: -3.696643829345703
    6. '<|end|>' → logprob: -4.571643829345703
    7. ' ' → logprob: -5.321643829345703
    8. 'from' → logprob: -5.321643829345703
    9. '        
' → logprob: -5.821643829345703
    10. ',' → logprob: -6.571643829345703

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2685564160346985
    2. 'import' → logprob: -1.5185563564300537
    3. '        
' → logprob: -4.893556594848633
    4. ' import' → logprob: -5.768556594848633
    5. 'from' → logprob: -5.893556594848633
    6. '   ' → logprob: -6.893556594848633
    7. 'def' → logprob: -7.518556594848633
    8. ' from' → logprob: -7.643556594848633
    9. '
' → logprob: -8.768556594848633
    10. '        ' → logprob: -8.893556594848633

Token 231: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.15248611569404602
    2. '       ' → logprob: -2.5274860858917236
    3. 'from' → logprob: -3.6524860858917236
    4. 'dist' → logprob: -4.027486324310303
    5. ' import' → logprob: -5.277486324310303
    6. 'def' → logprob: -5.527486324310303
    7. 'distance' → logprob: -6.027486324310303
    8. 'visited' → logprob: -6.027486324310303
    9. 'd' → logprob: -6.902486324310303
    10. '#' (adapté à ' #') → logprob: -7.277486324310303

Token 232: ' Kr' (ID: 11317)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.05602676048874855
    2. ' import' → logprob: -3.3060266971588135
    3. 'from' → logprob: -4.681026935577393
    4. 'dist' → logprob: -5.556026935577393
    5. 'def' → logprob: -6.556026935577393
    6. '#' → logprob: -7.056026935577393
    7. '       ' → logprob: -7.306026935577393
    8. 'visited' → logprob: -7.681026935577393
    9. ' from' → logprob: -8.056026458740234
    10. 'distance' → logprob: -8.181026458740234

Token 233: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.0033284954261034727
    2. 'usal' → logprob: -6.378328323364258
    3. ' us' → logprob: -7.128328323364258
    4. 'u' → logprob: -8.253328323364258
    5. 'usk' → logprob: -8.753328323364258
    6. '   ' → logprob: -9.378328323364258
    7. '```' → logprob: -10.003328323364258
    8. 's' → logprob: -10.378328323364258
    9. 'usc' → logprob: -10.628328323364258
    10. 'usz' → logprob: -10.628328323364258

Token 234: 'kal' (ID: 23466)
  Prédit: 'kal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kal' → logprob: -0.0009320637909695506
    2. 'kul' → logprob: -8.125931739807129
    3. 'k' → logprob: -8.250931739807129
    4. 'al' → logprob: -8.500931739807129
    5. 'ku' → logprob: -10.000931739807129
    6. 'ka' → logprob: -10.125931739807129
    7. ' kal' → logprob: -10.250931739807129
    8. '```' → logprob: -11.125931739807129
    9. 'cal' → logprob: -11.625931739807129
    10. 'skal' → logprob: -12.750931739807129

Token 235: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.4708794355392456
    2. '
' → logprob: -1.5958794355392456
    3. '   ' → logprob: -1.9708794355392456
    4. 'def' → logprob: -2.595879554748535
    5. '()' → logprob: -2.720879554748535
    6. '       ' → logprob: -2.720879554748535
    7. 'from' → logprob: -3.470879554748535
    8. '_edges' → logprob: -3.595879554748535
    9. ' edges' → logprob: -3.720879554748535
    10. '(
' → logprob: -3.970879554748535

Token 236: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.8306547403335571
    2. '(
' → logprob: -1.8306547403335571
    3. '_' → logprob: -2.2056546211242676
    4. ':' → logprob: -2.5806546211242676
    5. '   ' → logprob: -2.5806546211242676
    6. 'class' → logprob: -2.5806546211242676
    7. '()' → logprob: -2.8306546211242676
    8. '(' → logprob: -2.9556546211242676
    9. '_union' → logprob: -3.3306546211242676
    10. 'Union' → logprob: -3.4556546211242676

Token 237: ' parent' (ID: 5980)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5982627868652344
    2. ' class' → logprob: -1.3482627868652344
    3. ' parent' → logprob: -2.4732627868652344
    4. 'parent' (adapté à ' parent') → logprob: -3.0982627868652344
    5. '   ' → logprob: -3.3482627868652344
    6. '       ' → logprob: -4.848262786865234
    7. 'import' → logprob: -5.223262786865234
    8. ' 
' → logprob: -5.848262786865234
    9. 'def' → logprob: -5.973262786865234
    10. ' def' → logprob: -6.598262786865234

Token 238: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014086873270571232
    2. '=' → logprob: -4.514086723327637
    3. '[' → logprob: -7.514086723327637
    4. ',' → logprob: -7.514086723327637
    5. '=[]' → logprob: -7.639086723327637
    6. '_' → logprob: -7.889086723327637
    7. '<|end|>' → logprob: -8.139086723327637
    8. '   ' → logprob: -9.139086723327637
    9. '.setdefault' → logprob: -9.264086723327637
    10. ')' → logprob: -9.389086723327637

Token 239: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.25447848439216614
    2. '[list' → logprob: -1.7544784545898438
    3. ' list' → logprob: -3.2544784545898438
    4. '[-' → logprob: -4.754478454589844
    5. '[' → logprob: -5.504478454589844
    6. ' [' → logprob: -8.254478454589844
    7. '[i' → logprob: -9.504478454589844
    8. ' [-' → logprob: -10.629478454589844
    9. '=list' → logprob: -10.879478454589844
    10. '[node' → logprob: -11.504478454589844

Token 240: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007223221473395824
    2. ' i' → logprob: -7.250722408294678
    3. '-' → logprob: -11.37572193145752
    4. ' -' → logprob: -14.75072193145752
    5. '   ' → logprob: -15.50072193145752
    6. '-i' → logprob: -15.62572193145752
    7. '	i' → logprob: -16.000722885131836
    8. ')i' → logprob: -17.375722885131836
    9. '
' → logprob: -17.500722885131836
    10. ' ' → logprob: -17.875722885131836

Token 241: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11295264959335327
    2. 'for' → logprob: -2.237952709197998
    3. ']' → logprob: -9.23795223236084
    4. '   ' → logprob: -11.36295223236084
    5. ' ' → logprob: -11.48795223236084
    6. '	for' → logprob: -12.11295223236084
    7. '
' → logprob: -13.23795223236084
    8. ')' → logprob: -13.61295223236084
    9. '  ' → logprob: -14.11295223236084
    10. ' ]' → logprob: -14.48795223236084

Token 242: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.13450060784816742
    2. ' i' → logprob: -2.259500503540039
    3. 'range' → logprob: -4.384500503540039
    4. ' ' → logprob: -4.759500503540039
    5. ' _' → logprob: -8.884500503540039
    6. ' in' → logprob: -9.134500503540039
    7. ' xrange' → logprob: -9.634500503540039
    8. '_range' → logprob: -10.259500503540039
    9. '	range' → logprob: -11.134500503540039
    10. '  ' → logprob: -11.509500503540039

Token 243: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02257833443582058
    2. 'in' → logprob: -3.897578239440918
    3. ' ' → logprob: -6.647578239440918
    4. 'range' → logprob: -7.897578239440918
    5. ' range' → logprob: -8.022578239440918
    6. ' i' → logprob: -11.147578239440918
    7. '  ' → logprob: -11.522578239440918
    8. ' _' → logprob: -12.272578239440918
    9. '   ' → logprob: -13.272578239440918
    10. '0' → logprob: -14.272578239440918

Token 244: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00861456897109747
    2. ' range' → logprob: -4.758614540100098
    3. '(range' → logprob: -17.633615493774414
    4. ' ' → logprob: -19.008615493774414
    5. '	range' → logprob: -20.258615493774414
    6. '  ' → logprob: -20.633615493774414
    7. '   ' → logprob: -21.133615493774414
    8. 'rang' → logprob: -21.508615493774414
    9. '_range' → logprob: -22.383615493774414
    10. '    ' → logprob: -22.633615493774414

Token 245: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0023077428340911865
    2. 'n' → logprob: -6.377307891845703
    3. ' (' → logprob: -8.002307891845703
    4. ' n' → logprob: -8.502307891845703
    5. '(' → logprob: -9.752307891845703
    6. '   ' → logprob: -12.127307891845703
    7. '	n' → logprob: -13.502307891845703
    8. ')n' → logprob: -14.252307891845703
    9. '(len' → logprob: -14.877307891845703
    10. '(
' → logprob: -15.002307891845703

Token 246: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.014974839054048061
    2. ')]
' → logprob: -4.264975070953369
    3. ')' → logprob: -7.639975070953369
    4. ']' → logprob: -8.264974594116211
    5. ')]

' → logprob: -10.764974594116211
    6. ')]
' → logprob: -10.764974594116211
    7. '       ' → logprob: -11.639974594116211
    8. ' )' → logprob: -12.139974594116211
    9. ']
' → logprob: -12.139974594116211
    10. '   ' → logprob: -12.139974594116211

Token 247: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14998358488082886
    2. '
' → logprob: -2.0249836444854736
    3. ' def' → logprob: -5.7749834060668945
    4. ' 
' → logprob: -6.0249834060668945
    5. '       ' → logprob: -7.6499834060668945
    6. '        
' → logprob: -7.8999834060668945
    7. '    
' → logprob: -8.024983406066895
    8. '  
' → logprob: -8.274983406066895
    9. '   ' → logprob: -8.899983406066895
    10. '	def' → logprob: -10.274983406066895

Token 248: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.015264620073139668
    2. ' def' → logprob: -4.390264511108398
    3. ' 
' → logprob: -6.140264511108398
    4. '
' → logprob: -7.765264511108398
    5. '       ' → logprob: -9.640264511108398
    6. '        
' → logprob: -10.515264511108398
    7. '    
' → logprob: -10.640264511108398
    8. '   ' → logprob: -10.765264511108398
    9. '	def' → logprob: -11.140264511108398
    10. '  
' → logprob: -12.015264511108398

Token 249: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.00861729308962822
    2. 'find' → logprob: -4.758617401123047
    3. ' ' → logprob: -13.883617401123047
    4. '	find' → logprob: -14.258617401123047
    5. '_find' → logprob: -14.383617401123047
    6. ' parent' → logprob: -15.508617401123047
    7. ' union' → logprob: -16.133617401123047
    8. '=find' → logprob: -16.133617401123047
    9. '   ' → logprob: -16.633617401123047
    10. '.find' → logprob: -17.008617401123047

Token 250: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3162418305873871
    2. '(u' → logprob: -1.5662418603897095
    3. '(i' → logprob: -3.06624174118042
    4. '(' → logprob: -4.56624174118042
    5. '_parent' → logprob: -6.06624174118042
    6. '(parent' → logprob: -6.44124174118042
    7. 'parent' → logprob: -7.44124174118042
    8. '(a' → logprob: -8.066242218017578
    9. '(p' → logprob: -8.816242218017578
    10. ' (' → logprob: -9.191242218017578

Token 251: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16080313920974731
    2. '):
' → logprob: -1.9108030796051025
    3. ')' → logprob: -7.785803318023682
    4. ' ):' → logprob: -9.160802841186523
    5. '(x' → logprob: -10.410802841186523
    6. ' ):
' → logprob: -11.160802841186523
    7. '):
' → logprob: -12.410802841186523
    8. '):

' → logprob: -12.660802841186523
    9. '   ' → logprob: -13.035802841186523
    10. '(i' → logprob: -13.910802841186523

Token 252: '           ' (ID: 352)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6084172129631042
    2. '(x' → logprob: -1.483417272567749
    3. '   ' → logprob: -2.733417272567749
    4. ' (' → logprob: -3.608417272567749
    5. ' ' → logprob: -3.858417272567749
    6. ')' → logprob: -3.983417272567749
    7. '       ' → logprob: -4.10841703414917
    8. '):' → logprob: -4.60841703414917
    9. '    ' → logprob: -4.73341703414917
    10. '(parent' → logprob: -4.73341703414917

Token 253: ' while' (ID: 2049)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0846480131149292
    2. '   ' → logprob: -1.7096480131149292
    3. ' 
' → logprob: -1.8346480131149292
    4. ' parent' → logprob: -2.0846481323242188
    5. 'parent' → logprob: -3.3346481323242188
    6. 'if' → logprob: -3.4596481323242188
    7. ' x' → logprob: -3.4596481323242188
    8. '
' → logprob: -3.7096481323242188
    9. ' return' → logprob: -4.084648132324219
    10. '       ' → logprob: -4.584648132324219

Token 254: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.018152514472603798
    2. ' parent' → logprob: -4.018152713775635
    3. 'x' → logprob: -13.268152236938477
    4. '	parent' → logprob: -14.643152236938477
    5. '(parent' → logprob: -14.893152236938477
    6. ' x' → logprob: -16.268152236938477
    7. ' ' → logprob: -17.893152236938477
    8. '_parent' → logprob: -18.643152236938477
    9. '   ' → logprob: -19.268152236938477
    10. 'Parent' → logprob: -19.768152236938477

Token 255: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -2.935296834039036e-06
    2. 'x' → logprob: -13.37500286102295
    3. '[' → logprob: -13.62500286102295
    4. '[parent' → logprob: -17.000003814697266
    5. '[i' → logprob: -17.500003814697266
    6. ' [' → logprob: -18.375003814697266
    7. '[
' → logprob: -18.625003814697266
    8. ' x' → logprob: -18.750003814697266
    9. '(x' → logprob: -20.375003814697266
    10. '[u' → logprob: -20.875003814697266

Token 256: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03317542374134064
    2. ']!=' → logprob: -3.908175468444824
    3. '!=' → logprob: -4.408175468444824
    4. 'x' → logprob: -8.283175468444824
    5. ' !=' → logprob: -9.158175468444824
    6. '[' → logprob: -11.908175468444824
    7. '[x' → logprob: -12.283175468444824
    8. ')!=' → logprob: -12.533175468444824
    9. ' ]' → logprob: -13.783175468444824
    10. '[
' → logprob: -14.908175468444824

Token 257: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0021980751771479845
    2. ' !=' → logprob: -6.127198219299316
    3. ']!=' → logprob: -11.627198219299316
    4. ')!=' → logprob: -13.377198219299316
    5. '()!=' → logprob: -13.627198219299316
    6. 'x' → logprob: -14.502198219299316
    7. '!==' → logprob: -15.127198219299316
    8. '[' → logprob: -15.627198219299316
    9. '=' → logprob: -16.877197265625
    10. '!=-' → logprob: -17.002197265625

Token 258: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002613358374219388
    2. ' x' → logprob: -8.250261306762695
    3. '	x' → logprob: -17.500261306762695
    4. ' ' → logprob: -21.625261306762695
    5. '   ' → logprob: -22.125261306762695
    6. '(x' → logprob: -23.250261306762695
    7. ')x' → logprob: -23.500261306762695
    8. '<x' → logprob: -23.500261306762695
    9. '"x' → logprob: -23.750261306762695
    10. '_x' → logprob: -24.000261306762695

Token 259: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6326993703842163
    2. ':' → logprob: -0.7576993703842163
    3. ' and' → logprob: -10.632699012756348
    4. ':x' → logprob: -11.257699012756348
    5. '           ' → logprob: -11.382699012756348
    6. '):
' → logprob: -11.507699012756348
    7. ' :
' → logprob: -11.757699012756348
    8. 'and' → logprob: -11.882699012756348
    9. '   ' → logprob: -12.382699012756348
    10. 'x' → logprob: -12.507699012756348

Token 260: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09953252971172333
    2. '           ' → logprob: -2.9745326042175293
    3. ' x' → logprob: -3.2245326042175293
    4. 'x' → logprob: -5.724532604217529
    5. '   ' → logprob: -8.474532127380371
    6. ' parent' → logprob: -9.349532127380371
    7. '
' → logprob: -9.724532127380371
    8. ':
' → logprob: -9.849532127380371
    9. '       ' → logprob: -10.099532127380371
    10. 'parent' → logprob: -10.224532127380371

Token 261: ' x' (ID: 1215)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.48384034633636475
    2. 'x' (adapté à ' x') → logprob: -0.9838403463363647
    3. ' parent' → logprob: -4.983840465545654
    4. ' x' → logprob: -6.233840465545654
    5. '               ' → logprob: -7.108840465545654
    6. '           ' → logprob: -10.108839988708496
    7. '   ' → logprob: -10.483839988708496
    8. '	parent' → logprob: -11.483839988708496
    9. '                   ' → logprob: -11.983839988708496
    10. '.parent' → logprob: -13.983839988708496

Token 262: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408294677734375
    2. '=' → logprob: -0.9740829467773438
    3. ' ' → logprob: -12.724082946777344
    4. ',' → logprob: -13.224082946777344
    5. 'parent' → logprob: -14.849082946777344
    6. '	' → logprob: -14.974082946777344
    7. ')' → logprob: -15.974082946777344
    8. ']' → logprob: -16.474082946777344
    9. ',parent' → logprob: -16.474082946777344
    10. '   ' → logprob: -17.099082946777344

Token 263: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.004078401252627373
    2. ' parent' → logprob: -5.504078388214111
    3. '	parent' → logprob: -18.004077911376953
    4. '(parent' → logprob: -18.254077911376953
    5. '[parent' → logprob: -19.879077911376953
    6. '   ' → logprob: -20.754077911376953
    7. '_parent' → logprob: -20.879077911376953
    8. '.parent' → logprob: -21.254077911376953
    9. ',parent' → logprob: -21.254077911376953
    10. ' ' → logprob: -22.004077911376953

Token 264: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.6951087117195129
    2. '[parent' → logprob: -0.6951087117195129
    3. '[' → logprob: -6.445108890533447
    4. 'x' → logprob: -8.445108413696289
    5. 'parent' → logprob: -8.820108413696289
    6. ' x' → logprob: -12.445108413696289
    7. ' parent' → logprob: -13.570108413696289
    8. ' [' → logprob: -13.695108413696289
    9. '[
' → logprob: -13.820108413696289
    10. ' ' → logprob: -14.820108413696289

Token 265: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09505262970924377
    2. ')' → logprob: -2.595052719116211
    3. ' ]' → logprob: -4.345052719116211
    4. ' )' → logprob: -6.345052719116211
    5. '])' → logprob: -7.970052719116211
    6. 'parent' → logprob: -7.970052719116211
    7. ')]' → logprob: -8.595052719116211
    8. ' ' → logprob: -8.970052719116211
    9. '_parent' → logprob: -8.970052719116211
    10. ']
' → logprob: -9.970052719116211

Token 266: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5714547634124756
    2. '           ' → logprob: -1.0714547634124756
    3. 'parent' → logprob: -3.3214547634124756
    4. 'return' → logprob: -4.071455001831055
    5. '
' → logprob: -4.321455001831055
    6. ' return' → logprob: -4.571455001831055
    7. ' parent' → logprob: -4.696455001831055
    8. '            
' → logprob: -6.321455001831055
    9. ' 
' → logprob: -6.321455001831055
    10. '_parent' → logprob: -7.571455001831055

Token 267: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7834673523902893
    2. 'return' (adapté à ' return') → logprob: -0.7834673523902893
    3. ' return' → logprob: -2.7834672927856445
    4. '       ' → logprob: -3.7834672927856445
    5. '   ' → logprob: -6.4084672927856445
    6. '               ' → logprob: -9.908467292785645
    7. 'parent' → logprob: -10.283467292785645
    8. '	return' → logprob: -10.408467292785645
    9. '
' → logprob: -11.283467292785645
    10. ' ' → logprob: -12.283467292785645

Token 268: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0008074867073446512
    2. ' x' → logprob: -7.125807285308838
    3. 'parent' → logprob: -12.750807762145996
    4. ' parent' → logprob: -17.37580680847168
    5. '(x' → logprob: -18.00080680847168
    6. ' ' → logprob: -18.25080680847168
    7. '	x' → logprob: -19.50080680847168
    8. '   ' → logprob: -20.12580680847168
    9. ' ' → logprob: -21.50080680847168
    10. 'Parent' → logprob: -21.75080680847168

Token 269: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1094873771071434
    2. '<|end|>' → logprob: -2.734487295150757
    3. '       ' → logprob: -3.859487295150757
    4. 'def' → logprob: -4.984487533569336
    5. ' 
' → logprob: -5.234487533569336
    6. '        
' → logprob: -6.484487533569336
    7. '    
' → logprob: -6.734487533569336
    8. '

' → logprob: -7.359487533569336
    9. '  
' → logprob: -7.359487533569336
    10. '<|end|>' → logprob: -7.734487533569336

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9875814318656921
    2. ' 
' → logprob: -1.487581491470337
    3. 'def' → logprob: -2.362581491470337
    4. '
' → logprob: -2.487581491470337
    5. '        
' → logprob: -2.612581491470337
    6. '<|end|>' → logprob: -2.612581491470337
    7. '    
' → logprob: -3.237581491470337
    8. '   ' → logprob: -4.737581253051758
    9. '  
' → logprob: -4.987581253051758
    10. ' def' → logprob: -4.987581253051758

Token 271: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00028529210248962045
    2. '       ' → logprob: -8.625285148620605
    3. ' def' → logprob: -10.000285148620605
    4. '   ' → logprob: -10.875285148620605
    5. '
' → logprob: -11.625285148620605
    6. '        
' → logprob: -11.750285148620605
    7. 'for' → logprob: -12.125285148620605
    8. '    
' → logprob: -12.250285148620605
    9. 'union' → logprob: -12.375285148620605
    10. 'next' → logprob: -13.000285148620605

Token 272: ' union' (ID: 22208)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -7.505351095460355e-05
    2. ' union' → logprob: -9.500075340270996
    3. 'un' → logprob: -16.37507438659668
    4. 'def' → logprob: -17.37507438659668
    5. '_union' → logprob: -17.50007438659668
    6. '	union' → logprob: -18.25007438659668
    7. 'merge' → logprob: -19.37507438659668
    8. '.union' → logprob: -19.37507438659668
    9. 'uni' → logprob: -19.62507438659668
    10. 'Union' → logprob: -19.75007438659668

Token 273: '(a' (ID: 6271)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4803553819656372
    2. '(' → logprob: -0.9803553819656372
    3. ' (' → logprob: -5.605355262756348
    4. '(a' → logprob: -6.230355262756348
    5. '(u' → logprob: -7.730355262756348
    6. '(parent' → logprob: -8.855355262756348
    7. '(i' → logprob: -10.730355262756348
    8. '(
' → logprob: -12.605355262756348
    9. '(n' → logprob: -14.105355262756348
    10. '(y' → logprob: -14.855355262756348

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005298146512359381
    2. ' ,' → logprob: -5.255298137664795
    3. ',b' → logprob: -9.755298614501953
    4. ',a' → logprob: -12.630298614501953
    5. '(a' → logprob: -13.880298614501953
    6. '_,' → logprob: -14.505298614501953
    7. 'a' → logprob: -14.505298614501953
    8. 'b' → logprob: -15.130298614501953
    9. '   ' → logprob: -15.630298614501953
    10. ')' → logprob: -15.755298614501953

Token 275: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0031777136027812958
    2. ' b' → logprob: -5.753177642822266
    3. ')b' → logprob: -19.253177642822266
    4. ',b' → logprob: -21.753177642822266
    5. '	b' → logprob: -21.878177642822266
    6. '   ' → logprob: -21.878177642822266
    7. ' ' → logprob: -22.753177642822266
    8. '    ' → logprob: -24.003177642822266
    9. '>b' → logprob: -24.003177642822266
    10. ')' → logprob: -24.003177642822266

Token 276: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3133276700973511
    2. '):
' → logprob: -1.313327670097351
    3. ')' → logprob: -10.06332778930664
    4. '):
' → logprob: -11.56332778930664
    5. ' ):' → logprob: -11.56332778930664
    6. ' ):
' → logprob: -13.18832778930664
    7. '   ' → logprob: -13.93832778930664
    8. '):

' → logprob: -13.93832778930664
    9. '       ' → logprob: -14.81332778930664
    10. ':' → logprob: -16.06332778930664

Token 277: '           ' (ID: 352)
  Prédit: ' parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -1.1239571571350098
    2. '       ' → logprob: -1.3739571571350098
    3. '
' → logprob: -1.7489571571350098
    4. '   ' → logprob: -2.2489571571350098
    5. 'parent' → logprob: -2.9989571571350098
    6. '           ' → logprob: -3.1239571571350098
    7. ' 
' → logprob: -3.8739571571350098
    8. ' if' → logprob: -4.12395715713501
    9. '    
' → logprob: -5.24895715713501
    10. '        
' → logprob: -6.99895715713501

Token 278: ' pa' (ID: 2428)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.5763140916824341
    2. ' parent' → logprob: -0.8263140916824341
    3. '   ' → logprob: -8.326313972473145
    4. 'if' → logprob: -9.826313972473145
    5. ' if' → logprob: -10.076313972473145
    6. '	parent' → logprob: -10.951313972473145
    7. '           ' → logprob: -11.701313972473145
    8. '       ' → logprob: -13.076313972473145
    9. '[parent' → logprob: -13.201313972473145
    10. 'root' → logprob: -13.701313972473145

Token 279: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13425517082214355
    2. '=' → logprob: -2.1342551708221436
    3. 'rent' → logprob: -5.509255409240723
    4. 'r' → logprob: -6.759255409240723
    5. '[a' → logprob: -7.134255409240723
    6. 'a' → logprob: -7.509255409240723
    7. '[parent' → logprob: -7.509255409240723
    8. '=a' → logprob: -9.759255409240723
    9. '[' → logprob: -9.884255409240723
    10. '   ' → logprob: -10.634255409240723

Token 280: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.023252584040164948
    2. ' find' → logprob: -3.773252487182617
    3. 'parent' → logprob: -11.898252487182617
    4. ' parent' → logprob: -15.648252487182617
    5. 'a' → logprob: -16.773252487182617
    6. '	find' → logprob: -16.898252487182617
    7. '(find' → logprob: -17.023252487182617
    8. '=find' → logprob: -18.523252487182617
    9. ' ' → logprob: -18.648252487182617
    10. ' a' → logprob: -18.773252487182617

Token 281: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.000204851632588543
    2. 'a' → logprob: -8.500205039978027
    3. '(b' → logprob: -13.625205039978027
    4. '(' → logprob: -16.00020408630371
    5. 'b' → logprob: -16.37520408630371
    6. '(pa' → logprob: -18.37520408630371
    7. '[a' → logprob: -18.62520408630371
    8. '(parent' → logprob: -18.75020408630371
    9. ')a' → logprob: -18.87520408630371
    10. ' (' → logprob: -19.12520408630371

Token 282: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -6.301394023466855e-05
    2. ')' → logprob: -9.750062942504883
    3. ')
' → logprob: -12.375062942504883
    4. ' )
' → logprob: -14.750062942504883
    5. ')

' → logprob: -17.500062942504883
    6. 'a' → logprob: -20.250062942504883
    7. 'b' → logprob: -21.125062942504883
    8. '）
' → logprob: -21.125062942504883
    9. '')
' → logprob: -21.500062942504883
    10. '),' → logprob: -21.625062942504883

Token 283: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06175892427563667
    2. '
' → logprob: -3.4367589950561523
    3. 'parent' → logprob: -4.811758995056152
    4. ' 
' → logprob: -5.436758995056152
    5. '[parent' → logprob: -5.436758995056152
    6. ' parent' → logprob: -6.311758995056152
    7. '            
' → logprob: -6.311758995056152
    8. ' if' → logprob: -6.811758995056152
    9. ')
' → logprob: -6.936758995056152
    10. 'if' → logprob: -7.061758995056152

Token 284: ' pb' (ID: 31582)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6944764256477356
    2. 'pb' (adapté à ' pb') → logprob: -0.6944764256477356
    3. 'parent' → logprob: -6.69447660446167
    4. ' pb' → logprob: -9.694476127624512
    5. ' b' → logprob: -10.569476127624512
    6. ' parent' → logprob: -12.944476127624512
    7. 'p' → logprob: -15.319476127624512
    8. 'pa' → logprob: -15.444476127624512
    9. 'Pb' → logprob: -15.819476127624512
    10. '   ' → logprob: -16.319477081298828

Token 285: ' =' (ID: 314)
  Prédit: '(pb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pb' → logprob: -0.025409871712327003
    2. '(b' → logprob: -4.400409698486328
    3. '=' → logprob: -5.025409698486328
    4. ' =' → logprob: -6.400409698486328
    5. ')' → logprob: -6.400409698486328
    6. '           ' → logprob: -7.025409698486328
    7. ' pb' → logprob: -7.150409698486328
    8. 'pb' → logprob: -7.275409698486328
    9. ' (' → logprob: -8.400409698486328
    10. '[b' → logprob: -9.150409698486328

Token 286: ' find' (ID: 1646)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7613029479980469
    2. 'find' → logprob: -0.7613029479980469
    3. ' find' → logprob: -2.761302947998047
    4. ' b' → logprob: -6.011302947998047
    5. 'pb' → logprob: -8.636302947998047
    6. '(find' → logprob: -10.761302947998047
    7. ' pb' → logprob: -10.886302947998047
    8. '(b' → logprob: -13.261302947998047
    9. '	find' → logprob: -13.511302947998047
    10. 'parent' → logprob: -14.011302947998047

Token 287: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00016110755677800626
    2. 'b' → logprob: -8.750161170959473
    3. ' (' → logprob: -13.250161170959473
    4. '(' → logprob: -14.625161170959473
    5. '(parent' → logprob: -16.875160217285156
    6. '(
' → logprob: -16.875160217285156
    7. ' b' → logprob: -17.000160217285156
    8. 'parent' → logprob: -17.250160217285156
    9. '[b' → logprob: -17.500160217285156
    10. '	b' → logprob: -17.500160217285156

Token 288: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4741625189781189
    2. ')
' → logprob: -0.9741625189781189
    3. '           ' → logprob: -9.599162101745605
    4. ')
' → logprob: -11.849162101745605
    5. '):
' → logprob: -12.224162101745605
    6. '       ' → logprob: -12.349162101745605
    7. ')

' → logprob: -15.474162101745605
    8. ' )' → logprob: -15.599162101745605
    9. ' )
' → logprob: -15.724162101745605
    10. '   ' → logprob: -15.849162101745605

Token 289: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03584796190261841
    2. 'parent' → logprob: -3.5358479022979736
    3. ' parent' → logprob: -6.285848140716553
    4. '[parent' → logprob: -6.410848140716553
    5. '            
' → logprob: -7.660848140716553
    6. '
' → logprob: -7.660848140716553
    7. '       ' → logprob: -8.035847663879395
    8. '	parent' → logprob: -8.285847663879395
    9. ',parent' → logprob: -8.660847663879395
    10. '=' → logprob: -8.660847663879395

Token 290: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05747239291667938
    2. 'parent' → logprob: -3.5574724674224854
    3. ' if' → logprob: -3.8074724674224854
    4. '           ' → logprob: -5.307472229003906
    5. ' parent' → logprob: -8.932472229003906
    6. '   ' → logprob: -10.182472229003906
    7. '       ' → logprob: -11.557472229003906
    8. '	parent' → logprob: -14.182472229003906
    9. '
' → logprob: -14.307472229003906
    10. '	if' → logprob: -14.432472229003906

Token 291: ' pa' (ID: 2428)
  Prédit: 'pa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pa' → logprob: -0.023367304354906082
    2. ' pa' → logprob: -3.773367404937744
    3. '(pa' → logprob: -9.023366928100586
    4. ' па' → logprob: -14.023366928100586
    5. 'па' → logprob: -15.398366928100586
    6. '_pa' → logprob: -16.023366928100586
    7. '
' → logprob: -17.023366928100586
    8. '.pa' → logprob: -17.898366928100586
    9. 'paused' → logprob: -18.023366928100586
    10. 'p' → logprob: -18.398366928100586

Token 292: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.019059592857956886
    2. ' !=' → logprob: -4.019059658050537
    3. '=' → logprob: -7.644059658050537
    4. '==' → logprob: -7.769059658050537
    5. ' ==' → logprob: -12.519059181213379
    6. ']!=' → logprob: -12.894059181213379
    7. ')!=' → logprob: -14.894059181213379
    8. '!==' → logprob: -14.894059181213379
    9. '()!=' → logprob: -15.644059181213379
    10. ' =' → logprob: -15.769059181213379

Token 293: ' pb' (ID: 31582)
  Prédit: 'pb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pb' → logprob: -0.0001234428636962548
    2. ' pb' → logprob: -9.000123023986816
    3. '(pb' → logprob: -17.750123977661133
    4. '.pb' → logprob: -18.875123977661133
    5. '_pb' → logprob: -19.250123977661133
    6. 'Pb' → logprob: -19.375123977661133
    7. 'pa' → logprob: -19.875123977661133
    8. 'PB' → logprob: -21.000123977661133
    9. 'tb' → logprob: -21.250123977661133
    10. '   ' → logprob: -21.875123977661133

Token 294: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.003212768817320466
    2. ':' → logprob: -5.753212928771973
    3. '           ' → logprob: -11.378212928771973
    4. '               ' → logprob: -11.378212928771973
    5. '):
' → logprob: -11.878212928771973
    6. ' :
' → logprob: -13.003212928771973
    7. ':
' → logprob: -13.878212928771973
    8. 'parent' → logprob: -14.253212928771973
    9. ':

' → logprob: -14.753212928771973
    10. '[parent' → logprob: -15.003212928771973

Token 295: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04987018182873726
    2. ' parent' → logprob: -3.299870252609253
    3. 'parent' → logprob: -4.549870014190674
    4. '           ' → logprob: -7.424870014190674
    5. '	parent' → logprob: -8.549870491027832
    6. '	           ' → logprob: -8.799870491027832
    7. '[parent' → logprob: -9.299870491027832
    8. ',parent' → logprob: -9.674870491027832
    9. '   ' → logprob: -10.549870491027832
    10. '	       ' → logprob: -10.799870491027832

Token 296: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.12702585756778717
    2. ' parent' → logprob: -2.127025842666626
    3. '               ' → logprob: -9.752025604248047
    4. '                   ' → logprob: -10.252025604248047
    5. '           ' → logprob: -13.377025604248047
    6. '   ' → logprob: -13.627025604248047
    7. '	parent' → logprob: -14.127025604248047
    8. '[parent' → logprob: -14.752025604248047
    9. '.parent' → logprob: -15.627025604248047
    10. ',parent' → logprob: -15.627025604248047

Token 297: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.5759546756744385
    2. '[' → logprob: -0.8259546756744385
    3. '[a' → logprob: -11.57595443725586
    4. '[b' → logprob: -12.82595443725586
    5. 'pb' → logprob: -13.20095443725586
    6. '```' → logprob: -14.95095443725586
    7. '\[' → logprob: -15.57595443725586
    8. '=' → logprob: -15.95095443725586
    9. ' [' → logprob: -15.95095443725586
    10. '(pb' → logprob: -16.07595443725586

Token 298: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.030349120497703552
    2. 'a' → logprob: -3.530349016189575
    3. '[b' → logprob: -7.780349254608154
    4. '[' → logprob: -8.905348777770996
    5. '[a' → logprob: -10.155348777770996
    6. '[p' → logprob: -13.155348777770996
    7. 'pb' → logprob: -13.155348777770996
    8. ']' → logprob: -13.405348777770996
    9. '][' → logprob: -15.530348777770996
    10. 'ba' → logprob: -15.905348777770996

Token 299: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005263999104499817
    2. '=' → logprob: -5.505263805389404
    3. ']=' → logprob: -7.005263805389404
    4. ' =' → logprob: -8.380264282226562
    5. ')' → logprob: -10.005264282226562
    6. ' ]' → logprob: -12.755264282226562
    7. ')=' → logprob: -15.880264282226562
    8. '   ' → logprob: -16.505264282226562
    9. '[' → logprob: -17.505264282226562
    10. '               ' → logprob: -17.505264282226562

Token 300: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022473573684692
    2. '=' → logprob: -1.9102246761322021
    3. ')' → logprob: -15.410224914550781
    4. ']' → logprob: -16.03522491455078
    5. ' ' → logprob: -16.53522491455078
    6. '＝' → logprob: -16.91022491455078
    7. ']=' → logprob: -17.03522491455078
    8. ' =
' → logprob: -17.28522491455078
    9. ')=' → logprob: -17.91022491455078
    10. '[' → logprob: -18.16022491455078

Token 301: ' pa' (ID: 2428)
  Prédit: 'pa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pa' → logprob: -4.36574100604048e-06
    2. ' pa' → logprob: -12.375004768371582
    3. 'a' → logprob: -17.500003814697266
    4. '(pa' → logprob: -18.000003814697266
    5. 'pai' → logprob: -18.250003814697266
    6. 'па' → logprob: -20.000003814697266
    7. 'pla' → logprob: -20.000003814697266
    8. '
' → logprob: -20.250003814697266
    9. 'po' → logprob: -20.625003814697266
    10. 'pas' → logprob: -20.625003814697266

Token 302: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 303: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3567640781402588
    2. '<|end|>' → logprob: -1.4817640781402588
    3. '       ' → logprob: -3.856764078140259
    4. '
' → logprob: -3.856764078140259
    5. '	return' → logprob: -5.10676383972168
    6. '           ' → logprob: -5.23176383972168
    7. '                ' → logprob: -5.73176383972168
    8. 'return' → logprob: -5.85676383972168
    9. ' return' → logprob: -6.10676383972168
    10. '<|end|>' → logprob: -6.35676383972168

Token 304: ' return' (ID: 622)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.04483230784535408
    2. 'return' (adapté à ' return') → logprob: -3.294832229614258
    3. ' True' → logprob: -5.044832229614258
    4. ' return' → logprob: -8.169832229614258
    5. '           ' → logprob: -10.669832229614258
    6. '       ' → logprob: -11.794832229614258
    7. '1' → logprob: -12.419832229614258
    8. '               ' → logprob: -12.794832229614258
    9. 'False' → logprob: -13.044832229614258
    10. '   ' → logprob: -13.919832229614258

Token 305: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0009115827269852161
    2. ' True' → logprob: -7.000911712646484
    3. '1' → logprob: -16.250911712646484
    4. '(True' → logprob: -19.875911712646484
    5. '   ' → logprob: -21.875911712646484
    6. 'False' → logprob: -22.250911712646484
    7. 'true' → logprob: -22.375911712646484
    8. '=True' → logprob: -23.750911712646484
    9. '       ' → logprob: -24.875911712646484
    10. 'TRUE' → logprob: -25.125911712646484

Token 306: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5834353566169739
    2. '           ' → logprob: -1.083435297012329
    3. '   ' → logprob: -2.708435297012329
    4. '<|end|>' → logprob: -4.333435535430908
    5. 'return' → logprob: -4.583435535430908
    6. ' return' → logprob: -5.458435535430908
    7. '	return' → logprob: -5.833435535430908
    8. '<|end|>' → logprob: -6.583435535430908
    9. '    ' → logprob: -6.958435535430908
    10. '    
' → logprob: -7.208435535430908

Token 307: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5220283269882202
    2. '           ' → logprob: -1.0220283269882202
    3. '   ' → logprob: -3.3970284461975098
    4. 'return' → logprob: -5.39702844619751
    5. ' return' → logprob: -5.52202844619751
    6. '	return' → logprob: -6.27202844619751
    7. '    
' → logprob: -6.89702844619751
    8. '	' → logprob: -6.89702844619751
    9. '	   ' → logprob: -8.772027969360352
    10. '               ' → logprob: -9.147027969360352

Token 308: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6242711544036865
    2. 'return' (adapté à ' return') → logprob: -1.1242711544036865
    3. ' return' → logprob: -3.1242711544036865
    4. '
' → logprob: -3.4992711544036865
    5. '   ' → logprob: -3.6242711544036865
    6. '           ' → logprob: -3.9992711544036865
    7. 'False' → logprob: -3.9992711544036865
    8. '    
' → logprob: -7.749271392822266
    9. '               ' → logprob: -7.749271392822266
    10. ' False' → logprob: -7.999271392822266

Token 309: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.03804149478673935
    2. ' False' → logprob: -3.288041591644287
    3. '(False' → logprob: -20.163042068481445
    4. '_false' → logprob: -22.288042068481445
    5. 'false' → logprob: -22.788042068481445
    6. '=False' → logprob: -23.913042068481445
    7. ' false' → logprob: -24.163042068481445
    8. 'None' → logprob: -24.788042068481445
    9. 'True' → logprob: -24.788042068481445
    10. '.False' → logprob: -25.413042068481445

Token 310: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3429546058177948
    2. '<|end|>' → logprob: -1.3429546356201172
    3. '       ' → logprob: -3.842954635620117
    4. 'for' → logprob: -6.467954635620117
    5. '<|end|>' → logprob: -6.592954635620117
    6. ' for' → logprob: -6.842954635620117
    7. '        
' → logprob: -6.967954635620117
    8. '    
' → logprob: -7.467954635620117
    9. '  
' → logprob: -7.592954635620117
    10. '   ' → logprob: -7.967954635620117

Token 311: '       ' (ID: 309)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.20537739992141724
    2. '       ' → logprob: -1.7053773403167725
    3. ' edges' → logprob: -6.705377578735352
    4. '        
' → logprob: -7.455377578735352
    5. 'mst' → logprob: -7.705377578735352
    6. 'sorted' → logprob: -7.830377578735352
    7. 'result' → logprob: -7.955377578735352
    8. 'ed' → logprob: -8.080377578735352
    9. '   ' → logprob: -8.330377578735352
    10. 'selected' → logprob: -9.705377578735352

Token 312: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.006232010200619698
    2. 'mst' → logprob: -5.631231784820557
    3. '       ' → logprob: -6.506231784820557
    4. 'result' → logprob: -7.756231784820557
    5. 'selected' → logprob: -8.506232261657715
    6. 'res' → logprob: -8.881232261657715
    7. 'sorted' → logprob: -9.506232261657715
    8. ' edges' → logprob: -9.756232261657715
    9. 'edge' → logprob: -10.131232261657715
    10. '#' → logprob: -10.506232261657715

Token 313: '_sorted' (ID: 104993)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.000354769523255527
    2. '.' → logprob: -8.000354766845703
    3. '=' → logprob: -11.875354766845703
    4. ' =' → logprob: -12.375354766845703
    5. ' .' → logprob: -12.375354766845703
    6. '_sorted' → logprob: -13.250354766845703
    7. 'sort' → logprob: -13.375354766845703
    8. '.sorted' → logprob: -15.625354766845703
    9. 'sorted' → logprob: -15.750354766845703
    10. '<|end|>' → logprob: -16.750354766845703

Token 314: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18527907133102417
    2. '.sort' → logprob: -2.310279130935669
    3. ' =' → logprob: -2.685279130935669
    4. '.' → logprob: -6.56027889251709
    5. 'sorted' → logprob: -8.93527889251709
    6. '(sorted' → logprob: -10.06027889251709
    7. ')' → logprob: -10.56027889251709
    8. '[:]' → logprob: -11.18527889251709
    9. '.sorted' → logprob: -11.31027889251709
    10. '.=' → logprob: -11.56027889251709

Token 315: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -1.5048530030981055e-06
    2. ' sorted' → logprob: -13.500001907348633
    3. '(sorted' → logprob: -20.125001907348633
    4. '   ' → logprob: -20.500001907348633
    5. 'edges' → logprob: -22.750001907348633
    6. '.sorted' → logprob: -22.750001907348633
    7. 'Sorted' → logprob: -23.875001907348633
    8. 'sort' → logprob: -24.125001907348633
    9. '[]' → logprob: -24.250001907348633
    10. '[' → logprob: -24.250001907348633

Token 316: '(edges' (ID: 185298)
  Prédit: '(edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -2.9040898880339228e-05
    2. 'edges' → logprob: -10.500028610229492
    3. '(' → logprob: -14.125028610229492
    4. '((' → logprob: -14.625028610229492
    5. '(edge' → logprob: -16.125028610229492
    6. ' edges' → logprob: -16.250028610229492
    7. '(vertices' → logprob: -18.000028610229492
    8. ' (' → logprob: -18.250028610229492
    9. '(
' → logprob: -18.500028610229492
    10. '(entries' → logprob: -18.750028610229492

Token 317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00600961409509182
    2. ',key' → logprob: -5.256009578704834
    3. ')' → logprob: -7.506009578704834
    4. 'key' → logprob: -8.506010055541992
    5. '(key' → logprob: -11.506010055541992
    6. ' ,' → logprob: -11.756010055541992
    7. '(),' → logprob: -13.006010055541992
    8. ' key' → logprob: -13.256010055541992
    9. ',
' → logprob: -15.006010055541992
    10. '_key' → logprob: -15.631010055541992

Token 318: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.0004306692280806601
    2. ' key' → logprob: -7.750430583953857
    3. '   ' → logprob: -18.125431060791016
    4. '(key' → logprob: -19.000431060791016
    5. 'lambda' → logprob: -19.125431060791016
    6. '	key' → logprob: -20.375431060791016
    7. '
' → logprob: -21.250431060791016
    8. ' ' → logprob: -21.500431060791016
    9. '       ' → logprob: -21.750431060791016
    10. ',key' → logprob: -21.750431060791016

Token 319: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0040818434208631516
    2. '=' → logprob: -5.504081726074219
    3. 'lambda' → logprob: -12.629081726074219
    4. '=
' → logprob: -16.12908172607422
    5. ' =' → logprob: -16.25408172607422
    6. '=item' → logprob: -17.87908172607422
    7. '=_' → logprob: -18.75408172607422
    8. '(lambda' → logprob: -18.87908172607422
    9. '=\' → logprob: -19.87908172607422
    10. '=

' → logprob: -20.12908172607422

Token 320: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.038132719695568085
    2. ' x' → logprob: -3.788132667541504
    3. 'lambda' → logprob: -4.413132667541504
    4. ' lambda' → logprob: -6.913132667541504
    5. 'edge' → logprob: -7.163132667541504
    6. 'e' → logprob: -7.163132667541504
    7. ' edge' → logprob: -9.788132667541504
    8. '=lambda' → logprob: -10.538132667541504
    9. ' e' → logprob: -11.038132667541504
    10. 'item' → logprob: -11.663132667541504

Token 321: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006448837229982018
    2. ':x' → logprob: -7.500644683837891
    3. ' :' → logprob: -9.37564468383789
    4. 'x' → logprob: -12.00064468383789
    5. ':
' → logprob: -14.87564468383789
    6. '[' → logprob: -15.25064468383789
    7. ' x' → logprob: -15.62564468383789
    8. '   ' → logprob: -16.62564468383789
    9. 'lambda' → logprob: -16.75064468383789
    10. ':int' → logprob: -18.25064468383789

Token 322: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02975071594119072
    2. ' x' → logprob: -3.5297508239746094
    3. 'lambda' → logprob: -16.77975082397461
    4. ' ' → logprob: -16.90475082397461
    5. '2' → logprob: -17.02975082397461
    6. '	x' → logprob: -17.02975082397461
    7. '   ' → logprob: -17.27975082397461
    8. '(x' → logprob: -17.90475082397461
    9. '3' → logprob: -18.52975082397461
    10. '    ' → logprob: -18.52975082397461

Token 323: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05968546122312546
    2. '2' → logprob: -3.059685468673706
    3. ':' → logprob: -4.559685230255127
    4. ' ' → logprob: -7.559685230255127
    5. '3' → logprob: -10.809685707092285
    6. ' [' → logprob: -11.684685707092285
    7. '[-' → logprob: -12.434685707092285
    8. '```' → logprob: -13.184685707092285
    9. ',' → logprob: -13.309685707092285
    10. '][' → logprob: -13.434685707092285

Token 324: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.9650025428272784e-05
    2. ' ' → logprob: -10.250040054321289
    3. '[' → logprob: -13.000040054321289
    4. '   ' → logprob: -13.875040054321289
    5. ':' → logprob: -15.125040054321289
    6. '-' → logprob: -15.500040054321289
    7. '
' → logprob: -15.625040054321289
    8. '  ' → logprob: -16.25004005432129
    9. '```' → logprob: -16.75004005432129
    10. '    ' → logprob: -17.12504005432129

Token 325: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014301493763923645
    2. '])' → logprob: -4.264301300048828
    3. ' )' → logprob: -9.514301300048828
    4. '))' → logprob: -10.389301300048828
    5. '})' → logprob: -11.139301300048828
    6. ')
' → logprob: -12.264301300048828
    7. ']' → logprob: -12.389301300048828
    8. ')])' → logprob: -13.389301300048828
    9. '>)' → logprob: -13.514301300048828
    10. '[' → logprob: -13.764301300048828

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3625214397907257
    2. ' for' → logprob: -1.9875214099884033
    3. '<|end|>' → logprob: -2.7375214099884033
    4. 'for' → logprob: -2.8625214099884033
    5. '
' → logprob: -3.2375214099884033
    6. '   ' → logprob: -6.612521648406982
    7. ')' → logprob: -6.612521648406982
    8. '        
' → logprob: -7.237521648406982
    9. '<|end|>' → logprob: -7.362521648406982
    10. '	for' → logprob: -7.862521648406982

Token 327: ' total' (ID: 3609)
  Prédit: 'lan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lan' → logprob: -0.18293656408786774
    2. 'total' (adapté à ' total') → logprob: -3.182936668395996
    3. ' lantern' → logprob: -3.182936668395996
    4. 'result' → logprob: -3.807936668395996
    5. '       ' → logprob: -3.932936668395996
    6. 'mst' → logprob: -4.432936668395996
    7. 'lights' → logprob: -5.057936668395996
    8. 'num' → logprob: -5.182936668395996
    9. 'for' → logprob: -5.307936668395996
    10. ' total' → logprob: -5.682936668395996

Token 328: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.058227431029081345
    2. '_cost' → logprob: -3.5582275390625
    3. '_' → logprob: -4.4332275390625
    4. '_distance' → logprob: -5.1832275390625
    5. '_weight' → logprob: -5.1832275390625
    6. '_length' → logprob: -6.3082275390625
    7. ' =' → logprob: -6.8082275390625
    8. '_edges' → logprob: -7.6832275390625
    9. '_tokens' → logprob: -7.6832275390625
    10. '=' → logprob: -8.1832275390625

Token 329: 'an' (ID: 270)
  Prédit: 'an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.014699890278279781
    2. '=' → logprob: -5.889699935913086
    3. 'a' → logprob: -6.014699935913086
    4. 'anth' → logprob: -6.264699935913086
    5. 'ight' → logprob: -6.389699935913086
    6. 'ant' → logprob: -6.514699935913086
    7. 'ength' → logprob: -6.514699935913086
    8. '   ' → logprob: -7.764699935913086
    9. 'anten' → logprob: -8.014699935913086
    10. 'en' → logprob: -8.139699935913086

Token 330: 'tern' (ID: 1298)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2571799159049988
    2. 'tern' → logprob: -2.5071799755096436
    3. 'teres' → logprob: -3.1321799755096436
    4. 'g' → logprob: -3.3821799755096436
    5. '=' → logprob: -3.5071799755096436
    6. 'ght' → logprob: -5.0071797370910645
    7. 'ger' → logprob: -5.3821797370910645
    8. '```' → logprob: -5.6321797370910645
    9. ' =' → logprob: -5.7571797370910645
    10. 'ter' → logprob: -6.1321797370910645

Token 331: 's' (ID: 82)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.002132656052708626
    2. 's' → logprob: -6.252132892608643
    3. '=' → logprob: -8.627132415771484
    4. 'e' → logprob: -11.627132415771484
    5. ' =' → logprob: -12.377132415771484
    6. 'tes' → logprob: -13.127132415771484
    7. '```' → logprob: -13.127132415771484
    8. 'as' → logprob: -13.252132415771484
    9. 'aires' → logprob: -13.752132415771484
    10. 'ies' → logprob: -14.627132415771484

Token 332: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740775227546692
    2. ' =' → logprob: -0.9740775227546692
    3. ' +=' → logprob: -14.974077224731445
    4. ' ' → logprob: -15.974077224731445
    5. '+=' → logprob: -16.599077224731445
    6. ' ' → logprob: -17.599077224731445
    7. ')' → logprob: -17.599077224731445
    8. ',' → logprob: -17.849077224731445
    9. '_' → logprob: -18.849077224731445
    10. ' =
' → logprob: -19.224077224731445

Token 333: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029753148555755615
    2. ' ' → logprob: -3.5297532081604004
    3. 'sum' → logprob: -13.279752731323242
    4. ' sum' → logprob: -14.029752731323242
    5. '   ' → logprob: -16.154752731323242
    6. ' ' → logprob: -16.779752731323242
    7. '  ' → logprob: -17.154752731323242
    8. 'int' → logprob: -19.342252731323242
    9. '100' → logprob: -19.467252731323242
    10. '    ' → logprob: -19.717252731323242

Token 334: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.625001907348633
    3. 'sum' → logprob: -15.000001907348633
    4. '   ' → logprob: -18.375001907348633
    5. '000' → logprob: -21.437501907348633
    6. 'int' → logprob: -21.812501907348633
    7. '  ' → logprob: -21.875001907348633
    8. '```' → logprob: -22.000001907348633
    9. '1' → logprob: -22.062501907348633
    10. 'zero' → logprob: -22.062501907348633

Token 335: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.466452419757843
    2. 'for' → logprob: -1.2164523601531982
    3. ' for' → logprob: -2.5914523601531982
    4. '
' → logprob: -6.591452598571777
    5. '	for' → logprob: -9.716452598571777
    6. '   ' → logprob: -10.091452598571777
    7. '<|end|>' → logprob: -10.466452598571777
    8. '        
' → logprob: -10.716452598571777
    9. ',' → logprob: -11.216452598571777
    10. ')' → logprob: -11.591452598571777

Token 336: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3182268440723419
    2. '       ' → logprob: -1.4432268142700195
    3. ' for' → logprob: -3.3182268142700195
    4. '
' → logprob: -9.44322681427002
    5. '   ' → logprob: -9.81822681427002
    6. '	for' → logprob: -10.81822681427002
    7. '<|end|>' → logprob: -11.56822681427002
    8. '        
' → logprob: -11.81822681427002
    9. ' ' → logprob: -12.69322681427002
    10. ')' → logprob: -13.56822681427002

Token 337: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006664692889899015
    2. '       ' → logprob: -5.881664752960205
    3. ' for' → logprob: -6.256664752960205
    4. 'count' → logprob: -6.381664752960205
    5. 'edges' → logprob: -9.006664276123047
    6. 'mst' → logprob: -9.631664276123047
    7. 'num' → logprob: -10.506664276123047
    8. 'used' → logprob: -11.631664276123047
    9. 'selected' → logprob: -12.131664276123047
    10. '   ' → logprob: -12.881664276123047

Token 338: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01815837249159813
    2. ' a' → logprob: -4.018158435821533
    3. '(a' → logprob: -13.018157958984375
    4. '	a' → logprob: -13.393157958984375
    5. 'edge' → logprob: -13.518157958984375
    6. ' edge' → logprob: -13.768157958984375
    7. '   ' → logprob: -14.393157958984375
    8. ' (' → logprob: -14.393157958984375
    9. '_,' → logprob: -14.768157958984375
    10. ' ' → logprob: -15.018157958984375

Token 339: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.856408536899835e-05
    2. ',b' → logprob: -11.125028610229492
    3. ' ,' → logprob: -11.250028610229492
    4. 'b' → logprob: -15.000028610229492
    5. ',
' → logprob: -15.750028610229492
    6. '‌,' → logprob: -16.875028610229492
    7. '<|end|>' → logprob: -17.500028610229492
    8. ' in' → logprob: -18.000028610229492
    9. '_,' → logprob: -18.250028610229492
    10. ',a' → logprob: -18.250028610229492

Token 340: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015023599844425917
    2. ' b' → logprob: -6.501502513885498
    3. ',' → logprob: -21.501502990722656
    4. ',b' → logprob: -21.626502990722656
    5. ' ' → logprob: -23.376502990722656
    6. '	b' → logprob: -23.626502990722656
    7. '<|end|>' → logprob: -24.126502990722656
    8. '   ' → logprob: -25.251502990722656
    9. ')b' → logprob: -25.751502990722656
    10. ' б' → logprob: -25.876502990722656

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.008129963040119e-06
    2. ' ,' → logprob: -12.500003814697266
    3. ',c' → logprob: -16.125003814697266
    4. ',d' → logprob: -16.750003814697266
    5. '_,' → logprob: -17.250003814697266
    6. ',
' → logprob: -17.250003814697266
    7. '‌,' → logprob: -17.875003814697266
    8. 'c' → logprob: -18.250003814697266
    9. ',_' → logprob: -19.250003814697266
    10. '<|end|>' → logprob: -19.500003814697266

Token 342: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -7.941850526549388e-06
    2. ' d' → logprob: -11.750007629394531
    3. 'c' → logprob: -19.37500762939453
    4. '	d' → logprob: -20.87500762939453
    5. '   ' → logprob: -21.62500762939453
    6. 'distance' → logprob: -21.75000762939453
    7. 'dist' → logprob: -22.00000762939453
    8. ' ' → logprob: -22.75000762939453
    9. '  ' → logprob: -23.75000762939453
    10. '
' → logprob: -24.62500762939453

Token 343: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005929982289671898
    2. 'in' → logprob: -5.130929946899414
    3. ',' → logprob: -14.130929946899414
    4. '	in' → logprob: -15.255929946899414
    5. ' ' → logprob: -15.630929946899414
    6. 's' → logprob: -16.130929946899414
    7. ' ' → logprob: -16.380929946899414
    8. ' ,' → logprob: -17.380929946899414
    9. 'n' → logprob: -17.755929946899414
    10. '  ' → logprob: -17.755929946899414

Token 344: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0019288709154352546
    2. ' edges' → logprob: -6.251928806304932
    3. '(edges' → logprob: -15.62692928314209
    4. '.edges' → logprob: -17.126928329467773
    5. '_edges' → logprob: -17.626928329467773
    6. 'Edges' → logprob: -19.251928329467773
    7. '   ' → logprob: -19.376928329467773
    8. ' ' → logprob: -19.876928329467773
    9. 'ed' → logprob: -20.376928329467773
    10. 'edge' → logprob: -20.376928329467773

Token 345: '_sorted' (ID: 104993)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.290668249130249
    2. '_sorted' → logprob: -1.540668249130249
    3. ':
' → logprob: -3.290668249130249
    4. 'sorted' → logprob: -8.040668487548828
    5. 'Sorted' → logprob: -8.665668487548828
    6. ',' → logprob: -8.790668487548828
    7. ' sorted' → logprob: -9.540668487548828
    8. '):
' → logprob: -12.040668487548828
    9. '):' → logprob: -12.040668487548828
    10. '[' → logprob: -12.290668487548828

Token 346: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08904296159744263
    2. ':
' → logprob: -2.464042901992798
    3. ',' → logprob: -10.089042663574219
    4. ' :' → logprob: -11.214042663574219
    5. ' :
' → logprob: -11.464042663574219
    6. ' if' → logprob: -11.839042663574219
    7. '):
' → logprob: -11.839042663574219
    8. '           ' → logprob: -11.964042663574219
    9. '   ' → logprob: -12.464042663574219
    10. ':

' → logprob: -12.839042663574219

Token 347: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006366105284541845
    2. ' if' → logprob: -5.25636625289917
    3. '   ' → logprob: -8.131365776062012
    4. '<|end|>' → logprob: -8.131365776062012
    5. '            
' → logprob: -8.381365776062012
    6. 'if' → logprob: -9.756365776062012
    7. '    
' → logprob: -10.131365776062012
    8. '          ' → logprob: -10.131365776062012
    9. ' 
' → logprob: -10.381365776062012
    10. '            ' → logprob: -10.506365776062012

Token 348: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6812792420387268
    2. '           ' → logprob: -0.9312792420387268
    3. 'if' (adapté à ' if') → logprob: -2.306279182434082
    4. '   ' → logprob: -8.306279182434082
    5. '	if' → logprob: -10.306279182434082
    6. '       ' → logprob: -10.431279182434082
    7. '	       ' → logprob: -11.181279182434082
    8. ' ' → logprob: -11.931279182434082
    9. '          ' → logprob: -12.556279182434082
    10. '    ' → logprob: -12.556279182434082

Token 349: ' union' (ID: 22208)
  Prédit: ' union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' union' → logprob: -0.25193139910697937
    2. 'union' → logprob: -1.5019314289093018
    3. '	union' → logprob: -13.501931190490723
    4. '.union' → logprob: -14.501931190490723
    5. '_union' → logprob: -15.626931190490723
    6. 'Union' → logprob: -16.50193214416504
    7. 'un' → logprob: -16.87693214416504
    8. '   ' → logprob: -17.12693214416504
    9. ' ' → logprob: -17.12693214416504
    10. ' Union' → logprob: -17.25193214416504

Token 350: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.000000953674316
    3. '(
' → logprob: -15.250000953674316
    4. ' (' → logprob: -16.750001907348633
    5. 'a' → logprob: -18.125001907348633
    6. '((' → logprob: -21.125001907348633
    7. '(ai' → logprob: -21.375001907348633
    8. '(A' → logprob: -22.125001907348633
    9. '   ' → logprob: -22.500001907348633
    10. ')' → logprob: -23.000001907348633

Token 351: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003238555509597063
    2. 'a' → logprob: -5.878238677978516
    3. ',a' → logprob: -8.628238677978516
    4. ' ,' → logprob: -8.878238677978516
    5. ',b' → logprob: -9.378238677978516
    6. '(a' → logprob: -11.378238677978516
    7. 'b' → logprob: -11.628238677978516
    8. '           ' → logprob: -12.753238677978516
    9. ' a' → logprob: -13.253238677978516
    10. ',
' → logprob: -13.378238677978516

Token 352: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009114635176956654
    2. ' b' → logprob: -7.000911235809326
    3. 'a' → logprob: -17.625911712646484
    4. ')b' → logprob: -18.500911712646484
    5. ' ' → logprob: -19.250911712646484
    6. '	b' → logprob: -19.625911712646484
    7. '<|end|>' → logprob: -20.625911712646484
    8. '   ' → logprob: -21.250911712646484
    9. ')' → logprob: -21.500911712646484
    10. ' a' → logprob: -21.625911712646484

Token 353: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38690826296806335
    2. '):' → logprob: -1.1369082927703857
    3. ')' → logprob: -10.886908531188965
    4. '):

' → logprob: -12.136908531188965
    5. '):
' → logprob: -12.136908531188965
    6. ' ):' → logprob: -13.011908531188965
    7. '           ' → logprob: -13.136908531188965
    8. ' ):
' → logprob: -13.261908531188965
    9. ':' → logprob: -13.886908531188965
    10. '       ' → logprob: -14.761908531188965

Token 354: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003035701811313629
    2. ' total' → logprob: -6.628035545349121
    3. '           ' → logprob: -6.878035545349121
    4. 'total' → logprob: -7.878035545349121
    5. '
' → logprob: -9.128035545349121
    6. '(total' → logprob: -9.753035545349121
    7. '                
' → logprob: -9.878035545349121
    8. '   ' → logprob: -10.878035545349121
    9. ',total' → logprob: -11.253035545349121
    10. ',' → logprob: -11.378035545349121

Token 355: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.28962215781211853
    2. ' total' → logprob: -2.4146220684051514
    3. 'if' → logprob: -2.9146220684051514
    4. ' if' → logprob: -3.0396220684051514
    5. '               ' → logprob: -3.1646220684051514
    6. '           ' → logprob: -4.1646223068237305
    7. '                   ' → logprob: -6.4146223068237305
    8. '   ' → logprob: -8.53962230682373
    9. '
' → logprob: -9.03962230682373
    10. '       ' → logprob: -9.53962230682373

Token 356: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -9.85366350505501e-05
    2. '_' → logprob: -9.25009822845459
    3. ' _' → logprob: -13.25009822845459
    4. ' +=' → logprob: -15.50009822845459
    5. '_s' → logprob: -16.250099182128906
    6. '_L' → logprob: -17.000099182128906
    7. ',_' → logprob: -17.625099182128906
    8. 'lan' → logprob: -17.625099182128906
    9. '_tokens' → logprob: -17.750099182128906
    10. '._' → logprob: -17.750099182128906

Token 357: 'an' (ID: 270)
  Prédit: 'an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.057390231639146805
    2. 'tern' → logprob: -3.3073902130126953
    3. 'ant' → logprob: -5.307390213012695
    4. 'anter' → logprob: -5.557390213012695
    5. 'lan' → logprob: -5.682390213012695
    6. 'anten' → logprob: -5.932390213012695
    7. 'ants' → logprob: -7.057390213012695
    8. '   ' → logprob: -7.682390213012695
    9. 'amps' → logprob: -8.057390213012695
    10. 'anth' → logprob: -8.057390213012695

Token 358: 'tern' (ID: 1298)
  Prédit: 'tern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tern' → logprob: -0.005752088036388159
    2. 't' → logprob: -5.380752086639404
    3. 'ts' → logprob: -7.505752086639404
    4. 'ters' → logprob: -8.255752563476562
    5. 'r' → logprob: -9.255752563476562
    6. 'tr' → logprob: -9.505752563476562
    7. 'trans' → logprob: -9.630752563476562
    8. 'tn' → logprob: -10.505752563476562
    9. 'ght' → logprob: -11.630752563476562
    10. 'terne' → logprob: -11.630752563476562

Token 359: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.630610641877865e-06
    2. 'ers' → logprob: -12.250006675720215
    3. ' s' → logprob: -14.375006675720215
    4. '```' → logprob: -15.375006675720215
    5. 'sers' → logprob: -15.375006675720215
    6. 'es' → logprob: -15.500006675720215
    7. 'rs' → logprob: -15.750006675720215
    8. '       ' → logprob: -16.6250057220459
    9. 'st' → logprob: -16.6250057220459
    10. '   ' → logprob: -17.0000057220459

Token 360: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.011049943044781685
    2. '+=' → logprob: -4.511049747467041
    3. '+' → logprob: -14.3860502243042
    4. '    ' → logprob: -14.6360502243042
    5. '            ' → logprob: -14.8860502243042
    6. '+=(' → logprob: -15.6360502243042
    7. '        ' → logprob: -15.8860502243042
    8. '   ' → logprob: -16.136049270629883
    9. '           ' → logprob: -16.636049270629883
    10. ' ' → logprob: -16.761049270629883

Token 361: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6931613683700562
    2. ' d' → logprob: -0.6931613683700562
    3. '(d' → logprob: -11.568161010742188
    4. ' (' → logprob: -12.443161010742188
    5. ' ' → logprob: -14.693161010742188
    6. '	d' → logprob: -16.068161010742188
    7. ' ' → logprob: -16.193161010742188
    8. '(' → logprob: -16.693161010742188
    9. '
' → logprob: -17.193161010742188
    10. '_d' → logprob: -18.193161010742188

Token 362: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.1602720469236374
    2. '//' → logprob: -1.9102720022201538
    3. ' ' → logprob: -10.535271644592285
    4. ' ' → logprob: -12.035271644592285
    5. ' //
' → logprob: -12.410271644592285
    6. '   ' → logprob: -12.785271644592285
    7. '       ' → logprob: -12.910271644592285
    8. ')//' → logprob: -13.660271644592285
    9. '```' → logprob: -13.910271644592285
    10. ')' → logprob: -13.910271644592285

Token 363: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -18.750001907348633
    4. '１００' → logprob: -19.375001907348633
    5. '   ' → logprob: -20.250001907348633
    6. '10' → logprob: -20.875001907348633
    7. '1' → logprob: -21.000001907348633
    8. '
' → logprob: -21.750001907348633
    9. '  ' → logprob: -21.750001907348633
    10. '`' → logprob: -21.875001907348633

Token 364: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '```' → logprob: -19.0
    4. '1' → logprob: -19.25
    5. '10' → logprob: -19.5
    6. '１００' → logprob: -19.75
    7. '   ' → logprob: -21.25
    8. '`' → logprob: -21.875
    9. '  ' → logprob: -22.3125
    10. '
' → logprob: -22.9375

Token 365: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.313625305891037
    2. '
' → logprob: -1.3136253356933594
    3. '        
' → logprob: -8.31362533569336
    4. 'print' → logprob: -9.56362533569336
    5. '   ' → logprob: -10.93862533569336
    6. '
' → logprob: -11.31362533569336
    7. '    
' → logprob: -11.81362533569336
    8. '```' → logprob: -12.93862533569336
    9. '  
' → logprob: -13.18862533569336
    10. '

' → logprob: -13.18862533569336

Token 366: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04472891613841057
    2. '       ' → logprob: -3.169728994369507
    3. 'print' → logprob: -7.669728755950928
    4. '        
' → logprob: -7.669728755950928
    5. '   ' → logprob: -7.794728755950928
    6. '    
' → logprob: -8.669729232788086
    7. '
' → logprob: -9.794729232788086
    8. '  
' → logprob: -9.919729232788086
    9. ')
' → logprob: -10.169729232788086
    10. '

' → logprob: -11.044729232788086

Token 367: ' lantern' (ID: 111163)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5322810411453247
    2. '100' → logprob: -1.2822810411453247
    3. '#' → logprob: -2.907280921936035
    4. '       ' → logprob: -4.032280921936035
    5. ' ' → logprob: -4.407280921936035
    6. 'pass' → logprob: -4.657280921936035
    7. 'continue' → logprob: -5.407280921936035
    8. ')' → logprob: -5.532280921936035
    9. ' (' → logprob: -5.657280921936035
    10. '               ' → logprob: -5.907280921936035

Token 368: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0013296448159962893
    2. 's' → logprob: -6.62632942199707
    3. 'e' → logprob: -13.12632942199707
    4. ' es' → logprob: -14.37632942199707
    5. '<|end|>' → logprob: -14.37632942199707
    6. '```' → logprob: -16.37632942199707
    7. '
' → logprob: -16.50132942199707
    8. '	es' → logprob: -16.50132942199707
    9. 'esp' → logprob: -17.25132942199707
    10. '(es' → logprob: -17.25132942199707

Token 369: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06284349411725998
    2. '
' → logprob: -2.8128435611724854
    3. 'print' → logprob: -7.437843322753906
    4. '   ' → logprob: -8.812843322753906
    5. '        
' → logprob: -9.437843322753906
    6. '    
' → logprob: -11.062843322753906
    7. '```' → logprob: -11.062843322753906
    8. '<|end|>' → logprob: -11.562843322753906
    9. '
' → logprob: -12.187843322753906
    10. ' print' → logprob: -12.562843322753906

Token 370: ' ' (ID: 220)
  Prédit: 'poser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poser' → logprob: -0.36123988032341003
    2. 'installer' → logprob: -2.2362399101257324
    3. 'aj' → logprob: -2.4862399101257324
    4. 'pose' → logprob: -3.1112399101257324
    5. 'all' → logprob: -3.8612399101257324
    6. 'mettre' → logprob: -3.9862399101257324
    7. 'acc' → logprob: -4.611239910125732
    8. 'placer' → logprob: -4.736239910125732
    9. 'pos' → logprob: -5.236239910125732
    10. 'posé' → logprob: -6.486239910125732

Token 371: '100' (ID: 1353)
  Prédit: 'poser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poser' → logprob: -0.8765605688095093
    2. '100' → logprob: -1.0015605688095093
    3. 'pose' → logprob: -3.126560688018799
    4. '1' → logprob: -3.376560688018799
    5. 'installer' → logprob: -3.376560688018799
    6. 'all' → logprob: -3.501560688018799
    7. 'placer' → logprob: -3.626560688018799
    8. 'acc' → logprob: -4.251560688018799
    9. 'mettre' → logprob: -4.251560688018799
    10. 'pos' → logprob: -5.126560688018799

Token 372: 'm' (ID: 76)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 373: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058131713420152664
    2. '
' → logprob: -3.183131694793701
    3. 'print' → logprob: -4.308131694793701
    4. '   ' → logprob: -6.558131694793701
    5. ' print' → logprob: -9.68313217163086
    6. '        
' → logprob: -9.80813217163086
    7. '    
' → logprob: -11.93313217163086
    8. '
' → logprob: -12.43313217163086
    9. '  
' → logprob: -12.93313217163086
    10. '```' → logprob: -13.18313217163086

Token 374: ''' (ID: 6)
  Prédit: 'istance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'istance' → logprob: -0.12074112892150879
    2. 'e' → logprob: -2.620741128921509
    3. 'ist' → logprob: -4.74574089050293
    4. 'istant' → logprob: -4.87074089050293
    5. ''' → logprob: -5.37074089050293
    6. 'u' → logprob: -5.87074089050293
    7. 'ans' → logprob: -5.87074089050293
    8. 'istan' → logprob: -5.99574089050293
    9. 'es' → logprob: -6.24574089050293
    10. 'i' → logprob: -6.99574089050293

Token 375: 'interval' (ID: 37558)
  Prédit: 'istance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'istance' → logprob: -0.3616791069507599
    2. 'interval' → logprob: -1.2366790771484375
    3. 'éc' → logprob: -4.6116790771484375
    4. 'distance' → logprob: -6.7366790771484375
    5. 'ec' → logprob: -7.7366790771484375
    6. 'istan' → logprob: -7.7366790771484375
    7. 'istant' → logprob: -7.8616790771484375
    8. 'ist' → logprob: -8.861679077148438
    9. ''' → logprob: -9.111679077148438
    10. 'inter' → logprob: -9.111679077148438

Token 376: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4146573543548584
    2. 'le' → logprob: -1.2896573543548584
    3. 'ence' → logprob: -4.1646575927734375
    4. 'ce' → logprob: -4.2896575927734375
    5. 'val' → logprob: -4.2896575927734375
    6. 'ace' → logprob: -4.5396575927734375
    7. 'v' → logprob: -6.1646575927734375
    8. ')' → logprob: -6.1646575927734375
    9. 'al' → logprob: -6.4146575927734375
    10. '```' → logprob: -6.9146575927734375

Token 377: ' sur' (ID: 1512)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1532980352640152
    2. '
' → logprob: -2.0282981395721436
    3. 'print' → logprob: -4.6532979011535645
    4. '   ' → logprob: -7.0282979011535645
    5. '
' → logprob: -9.653298377990723
    6. '        
' → logprob: -9.903298377990723
    7. ' print' → logprob: -11.403298377990723
    8. '<|end|>' → logprob: -12.153298377990723
    9. '    
' → logprob: -12.278298377990723
    10. '```' → logprob: -12.403298377990723

Token 378: ' cette' (ID: 7696)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.42788609862327576
    2. 'la' → logprob: -1.4278861284255981
    3. 'd' → logprob: -3.4278860092163086
    4. ' chaque' → logprob: -3.8028860092163086
    5. 'cha' → logprob: -3.9278860092163086
    6. 'une' → logprob: -4.052886009216309
    7. ' la' → logprob: -5.427886009216309
    8. 'each' → logprob: -5.677886009216309
    9. ' l' → logprob: -6.052886009216309
    10. 'le' → logprob: -6.677886009216309

Token 379: ' route' (ID: 9656)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.027151644229888916
    2. ' ar' → logprob: -3.652151584625244
    3. 'ligne' → logprob: -8.402152061462402
    4. 'aré' → logprob: -8.652152061462402
    5. ''ar' → logprob: -9.152152061462402
    6. 'edge' → logprob: -9.652152061462402
    7. ' ligne' → logprob: -9.902152061462402
    8. 'route' → logprob: -10.277152061462402
    9. 'are' → logprob: -10.277152061462402
    10. 'arre' → logprob: -10.777152061462402

Token 380: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20365220308303833
    2. '
' → logprob: -1.8286521434783936
    3. '   ' → logprob: -4.328652381896973
    4. 'print' → logprob: -4.578652381896973
    5. '<|end|>' → logprob: -9.953652381896973
    6. ' print' → logprob: -10.328652381896973
    7. '
' → logprob: -10.328652381896973
    8. '        
' → logprob: -10.453652381896973
    9. '    
' → logprob: -11.328652381896973
    10. '' → logprob: -13.078652381896973

Token 381: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12805211544036865
    2. '
' → logprob: -2.128052234649658
    3. 'print' → logprob: -7.503052234649658
    4. '   ' → logprob: -7.628052234649658
    5. '<|end|>' → logprob: -10.8780517578125
    6. '        
' → logprob: -11.0030517578125
    7. '
' → logprob: -11.0030517578125
    8. ' print' → logprob: -11.0030517578125
    9. '```' → logprob: -12.1280517578125
    10. '    
' → logprob: -12.7530517578125

Token 382: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3139817416667938
    2. '       ' → logprob: -1.5639817714691162
    3. '   ' → logprob: -2.813981771469116
    4. ' print' → logprob: -9.063982009887695
    5. '
' → logprob: -9.688982009887695
    6. '    
' → logprob: -11.313982009887695
    7. '```' → logprob: -12.063982009887695
    8. '        
' → logprob: -12.563982009887695
    9. '	print' → logprob: -13.813982009887695
    10. '           ' → logprob: -15.938982009887695

Token 383: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.00024429336190223694
    2. '(' → logprob: -9.000244140625
    3. '(f' → logprob: -9.125244140625
    4. 'total' → logprob: -12.125244140625
    5. '("' → logprob: -12.625244140625
    6. '('' → logprob: -13.125244140625
    7. ' (' → logprob: -14.375244140625
    8. '()' → logprob: -15.000244140625
    9. ' total' → logprob: -16.250244140625
    10. '((' → logprob: -17.000244140625

Token 384: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -13.375001907348633
    3. ')' → logprob: -16.375001907348633
    4. ')_' → logprob: -16.625001907348633
    5. '_total' → logprob: -17.125001907348633
    6. '_)' → logprob: -17.250001907348633
    7. ' _' → logprob: -17.375001907348633
    8. 'lan' → logprob: -18.000001907348633
    9. 'l' → logprob: -18.250001907348633
    10. '"_' → logprob: -18.250001907348633

Token 385: 'an' (ID: 270)
  Prédit: 'an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.00010449681576574221
    2. 'ant' → logprob: -9.375104904174805
    3. 'lan' → logprob: -11.625104904174805
    4. 'anter' → logprob: -12.125104904174805
    5. 'ent' → logprob: -13.875104904174805
    6. 'ants' → logprob: -14.125104904174805
    7. 'tern' → logprob: -14.125104904174805
    8. 'anth' → logprob: -14.625104904174805
    9. 'Lan' → logprob: -15.000104904174805
    10. 'ans' → logprob: -15.000104904174805

Token 386: 'tern' (ID: 1298)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9430534243583679
    2. 'ts' → logprob: -0.9430534243583679
    3. 'rs' → logprob: -2.0680534839630127
    4. 'ters' → logprob: -3.1930534839630127
    5. 'st' → logprob: -3.8180534839630127
    6. 's' → logprob: -3.9430534839630127
    7. 'sters' → logprob: -6.068053245544434
    8. 'trans' → logprob: -6.568053245544434
    9. 'trs' → logprob: -6.693053245544434
    10. 'r' → logprob: -6.818053245544434

Token 387: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -8.65707261255011e-06
    2. 'rs' → logprob: -12.125008583068848
    3. 'ers' → logprob: -13.625008583068848
    4. 'ts' → logprob: -14.375008583068848
    5. '_s' → logprob: -14.375008583068848
    6. 'es' → logprob: -15.250008583068848
    7. 'st' → logprob: -15.375008583068848
    8. 't' → logprob: -16.625009536743164
    9. 'ars' → logprob: -16.625009536743164
    10. '_' → logprob: -16.750009536743164

Token 388: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1875571544806007e-05
    2. ' )' → logprob: -12.375011444091797
    3. '())' → logprob: -12.875011444091797
    4. '()' → logprob: -12.875011444091797
    5. ')
' → logprob: -13.125011444091797
    6. ')`' → logprob: -15.750011444091797
    7. ')}' → logprob: -16.000011444091797
    8. '))' → logprob: -17.125011444091797
    9. '   ' → logprob: -17.125011444091797
    10. ')#' → logprob: -17.875011444091797

Token 389: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 390: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011533168144524097
    2. '(' → logprob: -6.876153469085693
    3. '()
' → logprob: -9.376152992248535
    4. '(
' → logprob: -11.751152992248535
    5. '```' → logprob: -11.751152992248535
    6. '<|end|>' → logprob: -12.251152992248535
    7. '()\' → logprob: -12.626152992248535
    8. '#' → logprob: -12.751152992248535
    9. '\' → logprob: -13.126152992248535
    10. '()

' → logprob: -13.626152992248535


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 388
Tokens correctement prédits (1ère position, stricte): 154
Tokens correctement prédits (1ère position, avec adaptation): 167
Tokens correctement prédits (top 10): 310
Précision stricte (1ère position): 39.69%
Précision adaptée (1ère position): 43.04%
Précision (top 10): 79.90%
================================================================================
